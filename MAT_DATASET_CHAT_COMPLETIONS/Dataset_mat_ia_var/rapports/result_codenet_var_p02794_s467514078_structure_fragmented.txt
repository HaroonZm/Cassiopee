================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_n():
    return int(input())

def initialize_ab(n):
    return {i: [] for i in range(n)}

def read_edge_input():
    return [int(i) - 1 for i in input().split()]

def add_edge(ab, a, b, idx):
    ab[a].append((b, idx))
    ab[b].append((a, idx))

def build_graph(n):
    ab = initialize_ab(n)
    for j in range(n - 1):
        a, b = read_edge_input()
        add_edge(ab, a, b, j)
    return ab

def dfs_helper(a, b, d, ab, c):
    if a == b:
        return d
    for i in ab[a]:
        if i[0] == c:
            continue
        e = dfs_helper(i[0], b, d + [i[1]], ab, a)
        if len(e) != 0:
            return set(e)
    return set()

def dfs(a, b, ab):
    return dfs_helper(a, b, [], ab, -1)

def read_m():
    return int(input())

def read_query():
    return [int(i) - 1 for i in input().split()]

def process_queries(m, ab):
    ms = []
    for _ in range(m):
        u, p = read_query()
        ms.append(dfs(u, p, ab))
    return ms

def count_bits(i, m):
    return bin(i).count('1')

def combine_sets(i, m, ms):
    a = set()
    for j in range(m):
        if (i >> j) & 1:
            a |= ms[j]
    return a

def process_mask(i, m, ms, n):
    k = 0
    a = set()
    for j in range(m):
        if (i >> j) & 1 == 1:
            k += 1
            a |= ms[j]
    if k % 2 == 1:
        return 2 ** (n - 1 - len(a))
    elif k != 0:
        return -2 ** (n - 1 - len(a))
    return 0

def process_all_masks(m, n, ms):
    ans = 0
    for i in range(1 << m):
        ans += process_mask(i, m, ms, n)
    return ans

def compute_answer(n, ans):
    return 2 ** (n - 1) - ans

def main():
    n = read_n()
    ab = build_graph(n)
    m = read_m()
    ms = process_queries(m, ab)
    ans = process_all_masks(m, n, ms)
    print(compute_answer(n, ans))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.7622742652893066
    2. '_' → logprob: -1.0122742652893066
    3. 'ext' → logprob: -2.1372742652893066
    4. '(_' → logprob: -4.012274265289307
    5. '_ext' → logprob: -4.512274265289307
    6. 'umber' → logprob: -5.137274265289307
    7. '_char' → logprob: -5.637274265289307
    8. '_bytes' → logprob: -6.137274265289307
    9. '```' → logprob: -6.137274265289307
    10. '_(' → logprob: -6.387274265289307

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0262972116470337
    2. '\' → logprob: -1.7762972116470337
    3. '\n' → logprob: -2.026297092437744
    4. ''' → logprob: -2.151297092437744
    5. '   ' → logprob: -3.276297092437744
    6. '(' → logprob: -3.526297092437744
    7. ' ' → logprob: -3.776297092437744
    8. '(n' → logprob: -4.026297092437744
    9. ' 
' → logprob: -4.151297092437744
    10. ':' → logprob: -4.276297092437744

Token 5: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6481913328170776
    2. 'n' → logprob: -1.1481913328170776
    3. 'x' → logprob: -3.273191452026367
    4. ' ' → logprob: -3.523191452026367
    5. '   ' → logprob: -3.773191452026367
    6. 'return' (adapté à ' return') → logprob: -3.898191452026367
    7. 'a' → logprob: -4.273191452026367
    8. 'i' → logprob: -4.523191452026367
    9. '```' → logprob: -4.648191452026367
    10. '(' → logprob: -5.148191452026367

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6782557368278503
    2. ' []' → logprob: -1.1782557964324951
    3. ' int' → logprob: -2.928255796432495
    4. '  ' → logprob: -2.928255796432495
    5. ' input' → logprob: -3.428255796432495
    6. ' None' → logprob: -3.803255796432495
    7. ' n' → logprob: -5.178255558013916
    8. 'input' → logprob: -5.428255558013916
    9. '"' → logprob: -5.428255558013916
    10. 'int' → logprob: -6.178255558013916

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004985823179595172
    2. '('' → logprob: -8.25049877166748
    3. '(input' → logprob: -9.00049877166748
    4. ''' → logprob: -10.12549877166748
    5. ' (' → logprob: -11.12549877166748
    6. '(
' → logprob: -11.50049877166748
    7. '()' → logprob: -12.12549877166748
    8. '```' → logprob: -12.12549877166748
    9. 'input' → logprob: -12.50049877166748
    10. '(read' → logprob: -12.50049877166748

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49548250436782837
    2. '()' → logprob: -1.4954824447631836
    3. '())' → logprob: -1.8704824447631836
    4. '('' → logprob: -4.995482444763184
    5. ')' → logprob: -5.620482444763184
    6. '()))' → logprob: -7.245482444763184
    7. '(""))' → logprob: -7.620482444763184
    8. '("("' → logprob: -8.370482444763184
    9. '(
' → logprob: -8.870482444763184
    10. '(()' → logprob: -8.870482444763184

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2484438717365265
    2. 'n' → logprob: -2.123443841934204
    3. 'd' → logprob: -3.873443841934204
    4. '#' → logprob: -4.248444080352783
    5. '(' → logprob: -4.373444080352783
    6. 'x' → logprob: -4.623444080352783
    7. '```' → logprob: -4.998444080352783
    8. '<|end|>' → logprob: -5.373444080352783
    9. '
' → logprob: -5.748444080352783
    10. ' ' → logprob: -5.873444080352783

Token 10: ' initialize' (ID: 18400)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.6004698276519775
    2. ' read' → logprob: -0.8504698276519775
    3. ' calculate' → logprob: -4.100469589233398
    4. ' space' → logprob: -6.350469589233398
    5. ' add' → logprob: -6.350469589233398
    6. ' ' → logprob: -7.350469589233398
    7. ' compute' → logprob: -7.475469589233398
    8. ' process' → logprob: -7.475469589233398
    9. '_' → logprob: -8.225469589233398
    10. ' insert' → logprob: -8.225469589233398

Token 11: '_ab' (ID: 53632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09085068106651306
    2. '(' → logprob: -2.465850591659546
    3. ' (' → logprob: -7.590850830078125
    4. ' _' → logprob: -7.965850830078125
    5. ' ' → logprob: -8.465850830078125
    6. ')' → logprob: -9.090850830078125
    7. '(_)' → logprob: -9.340850830078125
    8. '()' → logprob: -9.465850830078125
    9. '_space' → logprob: -9.465850830078125
    10. '(_' → logprob: -9.715850830078125

Token 12: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04785660281777382
    2. '():' → logprob: -3.922856569290161
    3. '(' → logprob: -4.54785680770874
    4. '_' → logprob: -4.79785680770874
    5. ' ()' → logprob: -5.54785680770874
    6. '(a' → logprob: -6.42285680770874
    7. '_values' → logprob: -6.92285680770874
    8. '())' → logprob: -7.54785680770874
    9. 'def' → logprob: -9.422856330871582
    10. '():
' → logprob: -9.422856330871582

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24353456497192383
    2. ',' → logprob: -1.8685345649719238
    3. ')' → logprob: -2.868534564971924
    4. 'a' → logprob: -5.743534564971924
    5. ',a' → logprob: -7.243534564971924
    6. '_a' → logprob: -8.118534088134766
    7. '):
' → logprob: -8.493534088134766
    8. '_' → logprob: -8.993534088134766
    9. '(a' → logprob: -9.118534088134766
    10. ' ' → logprob: -9.618534088134766

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019351590424776077
    2. '    ' → logprob: -5.394351482391357
    3. '    
' → logprob: -5.394351482391357
    4. '```' → logprob: -5.519351482391357
    5. 'a' → logprob: -6.269351482391357
    6. ' return' → logprob: -6.769351482391357
    7. '
' → logprob: -7.394351482391357
    8. '       ' → logprob: -7.519351482391357
    9. '[' → logprob: -8.269351959228516
    10. 'return' → logprob: -8.644351959228516

Token 15: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5229893326759338
    2. ' a' → logprob: -1.647989273071289
    3. ' return' → logprob: -2.147989273071289
    4. 'a' → logprob: -2.647989273071289
    5. ' ' → logprob: -4.397989273071289
    6. ' [' → logprob: -5.522989273071289
    7. '    ' → logprob: -5.897989273071289
    8. 'return' (adapté à ' return') → logprob: -5.897989273071289
    9. ' A' → logprob: -6.647989273071289
    10. '```' → logprob: -7.022989273071289

Token 16: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.556963324546814
    2. ' [' → logprob: -0.931963324546814
    3. '[n' → logprob: -4.6819634437561035
    4. '[]' → logprob: -4.8069634437561035
    5. ' []' → logprob: -5.4319634437561035
    6. '(' → logprob: -5.8069634437561035
    7. ' (' → logprob: -5.9319634437561035
    8. '([' → logprob: -6.5569634437561035
    9. '0' → logprob: -6.8069634437561035
    10. ' ([' → logprob: -7.4319634437561035

Token 17: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25217360258102417
    2. '}' → logprob: -2.502173662185669
    3. 'a' → logprob: -3.127173662185669
    4. 'k' → logprob: -3.252173662185669
    5. ''' → logprob: -4.00217342376709
    6. '   ' → logprob: -4.00217342376709
    7. ''a' → logprob: -4.75217342376709
    8. ' i' → logprob: -5.62717342376709
    9. ' '' → logprob: -6.12717342376709
    10. '       ' → logprob: -6.12717342376709

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002317726379260421
    2. ' :' → logprob: -6.127317905426025
    3. ':i' → logprob: -9.002317428588867
    4. '   ' → logprob: -12.502317428588867
    5. ':n' → logprob: -14.252317428588867
    6. ':j' → logprob: -14.502317428588867
    7. '       ' → logprob: -14.627317428588867
    8. '    ' → logprob: -14.627317428588867
    9. ':return' → logprob: -14.752317428588867
    10. '  ' → logprob: -15.252317428588867

Token 19: ' []' (ID: 6126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17925944924354553
    2. 'i' → logprob: -2.4292595386505127
    3. ' ' → logprob: -3.6792595386505127
    4. '[]' → logprob: -3.6792595386505127
    5. ' i' → logprob: -4.804259300231934
    6. '1' → logprob: -4.929259300231934
    7. '[' → logprob: -6.304259300231934
    8. ' []' → logprob: -6.429259300231934
    9. '[i' → logprob: -6.804259300231934
    10. '(i' → logprob: -7.179259300231934

Token 20: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011060554534196854
    2. 'for' → logprob: -4.63606071472168
    3. '   ' → logprob: -7.13606071472168
    4. ',' → logprob: -8.63606071472168
    5. '       ' → logprob: -9.51106071472168
    6. '    ' → logprob: -9.63606071472168
    7. '}' → logprob: -9.63606071472168
    8. ' ' → logprob: -9.76106071472168
    9. '	for' → logprob: -10.13606071472168
    10. '  ' → logprob: -11.88606071472168

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10473209619522095
    2. 'i' → logprob: -2.354732036590576
    3. ' range' → logprob: -5.729732036590576
    4. 'range' → logprob: -6.729732036590576
    5. ' ' → logprob: -9.729732513427734
    6. '	i' → logprob: -12.479732513427734
    7. ' ' → logprob: -12.729732513427734
    8. '_' → logprob: -13.104732513427734
    9. ' in' → logprob: -13.604732513427734
    10. '  ' → logprob: -14.354732513427734

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014213571324944496
    2. 'in' → logprob: -4.264213562011719
    3. ' ' → logprob: -10.764213562011719
    4. 'range' → logprob: -11.639213562011719
    5. 'n' → logprob: -11.764213562011719
    6. '	in' → logprob: -13.576713562011719
    7. 'space' → logprob: -13.951713562011719
    8. 'i' → logprob: -14.014213562011719
    9. '<' → logprob: -14.264213562011719
    10. '   ' → logprob: -14.264213562011719

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141352713108063
    2. ' range' → logprob: -1.7014135122299194
    3. '	range' → logprob: -15.82641315460205
    4. '(range' → logprob: -17.701414108276367
    5. '_range' → logprob: -18.576414108276367
    6. 'Range' → logprob: -18.826414108276367
    7. 'rang' → logprob: -19.701414108276367
    8. 'r' → logprob: -20.326414108276367
    9. ' ' → logprob: -20.451414108276367
    10. 'ran' → logprob: -20.701414108276367

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023246178403496742
    2. '(' → logprob: -3.7732462882995605
    3. ' (' → logprob: -14.398245811462402
    4. 'n' → logprob: -16.27324676513672
    5. '(
' → logprob: -17.77324676513672
    6. '(nn' → logprob: -17.89824676513672
    7. '(

' → logprob: -18.52324676513672
    8. '((' → logprob: -18.52324676513672
    9. ' n' → logprob: -18.77324676513672
    10. '```' → logprob: -18.77324676513672

Token 25: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0013172623002901673
    2. ')' → logprob: -7.126317024230957
    3. ' )' → logprob: -7.626317024230957
    4. '}' → logprob: -11.751317024230957
    5. ')}}' → logprob: -11.751317024230957
    6. '})' → logprob: -13.001317024230957
    7. '   ' → logprob: -13.751317024230957
    8. ')}

' → logprob: -13.751317024230957
    9. '")}' → logprob: -13.751317024230957
    10. ');}' → logprob: -14.001317024230957

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03334193676710129
    2. '<|end|>' → logprob: -4.658341884613037
    3. '

' → logprob: -4.908341884613037
    4. '
' → logprob: -5.158341884613037
    5. 'a' → logprob: -5.533341884613037
    6. 'd' → logprob: -5.658341884613037
    7. '```' → logprob: -7.283341884613037
    8. 'n' → logprob: -7.408341884613037
    9. '<|end|>' → logprob: -8.033342361450195
    10. ' def' → logprob: -8.283342361450195

Token 27: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.1285550594329834
    2. ' main' → logprob: -1.7535550594329834
    3. 'read' → logprob: -2.0035550594329834
    4. ' process' → logprob: -2.7535550594329834
    5. ' add' → logprob: -3.0035550594329834
    6. ' build' → logprob: -3.2535550594329834
    7. 'main' → logprob: -3.2535550594329834
    8. ' dfs' → logprob: -3.2535550594329834
    9. 'dfs' → logprob: -3.8785550594329834
    10. ' bfs' → logprob: -4.0035552978515625

Token 28: '_edge' (ID: 43226)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.707923173904419
    2. '_' → logprob: -0.832923173904419
    3. '_a' → logprob: -3.707923173904419
    4. '_n' → logprob: -4.70792293548584
    5. '_pair' → logprob: -4.95792293548584
    6. '_line' → logprob: -5.33292293548584
    7. '_pairs' → logprob: -5.58292293548584
    8. '_data' → logprob: -5.95792293548584
    9. '_two' → logprob: -5.95792293548584
    10. '()' → logprob: -6.08292293548584

Token 29: '_input' (ID: 12507)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1393323838710785
    2. '(' → logprob: -2.6393322944641113
    3. '_s' → logprob: -3.1393322944641113
    4. '(s' → logprob: -4.389332294464111
    5. '_' → logprob: -6.139332294464111
    6. '()' → logprob: -7.514332294464111
    7. ' s' → logprob: -10.01433277130127
    8. '```' → logprob: -10.01433277130127
    9. '_(' → logprob: -11.38933277130127
    10. '(n' → logprob: -11.38933277130127

Token 30: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05454471334815025
    2. 's' → logprob: -3.304544687271118
    3. '()' → logprob: -4.554544925689697
    4. '_' → logprob: -5.304544925689697
    5. '(' → logprob: -7.929544925689697
    6. '_s' → logprob: -8.179544448852539
    7. '(n' → logprob: -9.929544448852539
    8. '(s' → logprob: -10.054544448852539
    9. '():
' → logprob: -10.054544448852539
    10. '()(' → logprob: -10.554544448852539

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013394330628216267
    2. '()' → logprob: -4.638394355773926
    3. '(' → logprob: -6.263394355773926
    4. ' ()' → logprob: -7.013394355773926
    5. '    ' → logprob: -8.138394355773926
    6. ' (' → logprob: -9.263394355773926
    7. ' return' → logprob: -9.513394355773926
    8. ')' → logprob: -9.888394355773926
    9. 'def' → logprob: -10.138394355773926
    10. '_' → logprob: -10.138394355773926

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5300776958465576
    2. 'return' (adapté à ' return') → logprob: -1.4050776958465576
    3. ' return' → logprob: -2.0300776958465576
    4. ' line' → logprob: -4.655077934265137
    5. 'a' → logprob: -4.905077934265137
    6. 'line' → logprob: -5.030077934265137
    7. '       ' → logprob: -6.655077934265137
    8. 's' → logprob: -6.905077934265137
    9. '    ' → logprob: -7.030077934265137
    10. ' ' → logprob: -7.155077934265137

Token 33: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.687731921672821
    2. ' list' → logprob: -0.937731921672821
    3. ' tuple' → logprob: -3.312731981277466
    4. ' map' → logprob: -3.562731981277466
    5. 'map' → logprob: -3.562731981277466
    6. 'tuple' → logprob: -4.437731742858887
    7. 'int' → logprob: -8.187731742858887
    8. '   ' → logprob: -8.937731742858887
    9. ' ' → logprob: -9.312731742858887
    10. '  ' → logprob: -9.562731742858887

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10714029520750046
    2. 'tuple' → logprob: -2.982140302658081
    3. 'list' → logprob: -3.482140302658081
    4. '*' → logprob: -4.107140064239502
    5. 'map' → logprob: -5.982140064239502
    6. ' int' → logprob: -7.732140064239502
    7. ' tuple' → logprob: -8.60714054107666
    8. ']' → logprob: -8.73214054107666
    9. '   ' → logprob: -9.10714054107666
    10. ']int' → logprob: -9.35714054107666

Token 35: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06426210701465607
    2. '(input' → logprob: -3.0642621517181396
    3. '()' → logprob: -5.3142619132995605
    4. '(i' → logprob: -5.4392619132995605
    5. '(' → logprob: -5.8142619132995605
    6. '()]' → logprob: -6.3142619132995605
    7. '(s' → logprob: -6.8142619132995605
    8. ' (' → logprob: -9.064262390136719
    9. ' ()' → logprob: -10.064262390136719
    10. '(token' → logprob: -10.564262390136719

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026404572650790215
    2. '())' → logprob: -3.901404619216919
    3. '()' → logprob: -5.65140438079834
    4. 'ut' → logprob: -6.65140438079834
    5. 'put' → logprob: -7.90140438079834
    6. 'n' → logprob: -8.15140438079834
    7. 'input' → logprob: -9.02640438079834
    8. 'for' → logprob: -9.27640438079834
    9. ' )' → logprob: -9.52640438079834
    10. '(input' → logprob: -11.27640438079834

Token 37: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43214151263237
    2. 'for' → logprob: -1.8071415424346924
    3. ')' → logprob: -2.3071415424346924
    4. ' for' → logprob: -2.6821415424346924
    5. 'input' → logprob: -4.432141304016113
    6. '(input' → logprob: -5.682141304016113
    7. ' ()' → logprob: -7.182141304016113
    8. '(' → logprob: -7.307141304016113
    9. '())' → logprob: -7.432141304016113
    10. '()]' → logprob: -7.932141304016113

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020543403923511505
    2. ' ' → logprob: -3.895543336868286
    3. '<|end|>' → logprob: -13.770543098449707
    4. '0' → logprob: -16.270544052124023
    5. '```' → logprob: -16.270544052124023
    6. '2' → logprob: -16.395544052124023
    7. '   ' → logprob: -17.083044052124023
    8. '<|end|>' → logprob: -17.145544052124023
    9. '  ' → logprob: -17.270544052124023
    10. ' ' → logprob: -17.708044052124023

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -17.125059127807617
    4. '0' → logprob: -17.500059127807617
    5. '   ' → logprob: -17.750059127807617
    6. '```' → logprob: -18.500059127807617
    7. '2' → logprob: -18.687559127807617
    8. 'def' → logprob: -18.875059127807617
    9. 'input' → logprob: -19.000059127807617
    10. '１' → logprob: -19.062559127807617

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6378837823867798
    2. 'for' → logprob: -0.7628837823867798
    3. '()' → logprob: -5.63788366317749
    4. ')' → logprob: -6.51288366317749
    5. ',' → logprob: -9.512884140014648
    6. ' ' → logprob: -9.637884140014648
    7. '	for' → logprob: -11.262884140014648
    8. ']' → logprob: -11.512884140014648
    9. '(' → logprob: -11.762884140014648
    10. 'input' → logprob: -11.762884140014648

Token 41: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.011049000546336174
    2. 'input' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.261049270629883
    4. '=input' → logprob: -15.761049270629883
    5. ' raw' → logprob: -15.886049270629883
    6. ' user' → logprob: -16.511049270629883
    7. ' in' → logprob: -16.636049270629883
    8. '	input' → logprob: -17.511049270629883
    9. ' range' → logprob: -17.761049270629883
    10. '  ' → logprob: -18.511049270629883

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19863435626029968
    2. 'input' → logprob: -2.073634386062622
    3. '(input' → logprob: -3.698634386062622
    4. 'in' → logprob: -4.073634147644043
    5. ' input' → logprob: -4.948634147644043
    6. ' ' → logprob: -6.198634147644043
    7. ',input' → logprob: -7.073634147644043
    8. '=input' → logprob: -7.448634147644043
    9. '[input' → logprob: -7.823634147644043
    10. '<|end|>' → logprob: -8.073634147644043

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022737324237823
    2. ' input' → logprob: -1.9102274179458618
    3. 'range' → logprob: -13.66022777557373
    4. ' range' → logprob: -14.28522777557373
    5. ' ' → logprob: -14.91022777557373
    6. '=input' → logprob: -15.28522777557373
    7. '(input' → logprob: -15.53522777557373
    8. 'map' → logprob: -15.66022777557373
    9. 'list' → logprob: -16.160226821899414
    10. ' map' → logprob: -16.660226821899414

Token 44: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.9042702317237854
    2. '()' → logprob: -1.1542701721191406
    3. '().' → logprob: -1.2792701721191406
    4. '())' → logprob: -7.029270172119141
    5. '()][' → logprob: -8.02927017211914
    6. '()].' → logprob: -8.77927017211914
    7. '()[' → logprob: -9.90427017211914
    8. '()>' → logprob: -10.02927017211914
    9. '().__' → logprob: -10.77927017211914
    10. '()+' → logprob: -10.77927017211914

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005283326841890812
    2. 'strip' → logprob: -5.255283355712891
    3. 'rstrip' → logprob: -10.00528335571289
    4. ' split' → logprob: -12.38028335571289
    5. 'spl' → logprob: -16.00528335571289
    6. ' strip' → logprob: -17.13028335571289
    7. '(split' → logprob: -17.38028335571289
    8. 'read' → logprob: -18.38028335571289
    9. '.split' → logprob: -18.50528335571289
    10. 's' → logprob: -19.25528335571289

Token 46: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.002421318320557475
    2. '(' → logprob: -6.5024213790893555
    3. '()' → logprob: -7.1274213790893555
    4. '('' → logprob: -9.127421379089355
    5. '())' → logprob: -13.002421379089355
    6. ']' → logprob: -13.502421379089355
    7. ']()' → logprob: -14.002421379089355
    8. '()}' → logprob: -14.377421379089355
    9. '()][' → logprob: -14.627421379089355
    10. '()],' → logprob: -15.127421379089355

Token 47: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26351556181907654
    2. ')]' → logprob: -1.513515591621399
    3. '()]' → logprob: -5.013515472412109
    4. ')' → logprob: -5.388515472412109
    5. '])' → logprob: -8.51351547241211
    6. ' ]' → logprob: -9.76351547241211
    7. ']()' → logprob: -11.76351547241211
    8. ']
' → logprob: -12.13851547241211
    9. '`]' → logprob: -12.13851547241211
    10. '']' → logprob: -12.26351547241211

Token 48: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12061528861522675
    2. 'n' → logprob: -3.120615243911743
    3. 'd' → logprob: -3.495615243911743
    4. '
' → logprob: -4.620615482330322
    5. 'a' → logprob: -4.995615482330322
    6. '\n' → logprob: -5.120615482330322
    7. '\' → logprob: -5.620615482330322
    8. '<|end|>' → logprob: -5.995615482330322
    9. '```' → logprob: -6.120615482330322
    10. '#' → logprob: -6.120615482330322

Token 49: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.31008797883987427
    2. ' solve' → logprob: -2.1850879192352295
    3. ' dfs' → logprob: -3.4350879192352295
    4. ' bfs' → logprob: -3.5600879192352295
    5. ' top' → logprob: -3.6850879192352295
    6. ' find' → logprob: -4.310088157653809
    7. 'main' → logprob: -4.310088157653809
    8. ' build' → logprob: -4.935088157653809
    9. 'solve' → logprob: -5.060088157653809
    10. ' process' → logprob: -5.060088157653809

Token 50: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0401512049138546
    2. '_' → logprob: -3.2901511192321777
    3. '_edges' → logprob: -6.540151119232178
    4. '_to' → logprob: -8.790151596069336
    5. '_a' → logprob: -8.915151596069336
    6. '_line' → logprob: -9.790151596069336
    7. '_connection' → logprob: -10.040151596069336
    8. '_node' → logprob: -10.040151596069336
    9. '_e' → logprob: -10.665151596069336
    10. '_ed' → logprob: -11.415151596069336

Token 51: '(ab' (ID: 115191)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4229642152786255
    2. '(' → logprob: -1.5479642152786255
    3. '(ab' → logprob: -2.047964096069336
    4. '(A' → logprob: -6.797964096069336
    5. '(_' → logprob: -7.422964096069336
    6. '(parent' → logprob: -7.922964096069336
    7. '(node' → logprob: -8.422964096069336
    8. '_(' → logprob: -8.672964096069336
    9. ' (' → logprob: -8.672964096069336
    10. '_ab' → logprob: -9.422964096069336

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4362626373767853
    2. '(a' → logprob: -1.686262607574463
    3. ')' → logprob: -2.561262607574463
    4. ')(' → logprob: -3.436262607574463
    5. '):' → logprob: -4.186262607574463
    6. '   ' → logprob: -4.436262607574463
    7. ',a' → logprob: -4.936262607574463
    8. '[' → logprob: -5.811262607574463
    9. '(' → logprob: -5.936262607574463
    10. '[a' → logprob: -6.186262607574463

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.041614923626184464
    2. 'u' → logprob: -3.6666150093078613
    3. ' a' → logprob: -4.291615009307861
    4. ' u' → logprob: -6.791615009307861
    5. ')' → logprob: -8.791614532470703
    6. 'i' → logprob: -9.291614532470703
    7. '   ' → logprob: -10.291614532470703
    8. ')a' → logprob: -10.416614532470703
    9. '```' → logprob: -11.291614532470703
    10. 'x' → logprob: -11.541614532470703

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05259932205080986
    2. '[' → logprob: -4.1775994300842285
    3. '][' → logprob: -4.6775994300842285
    4. '[a' → logprob: -4.8025994300842285
    5. ')' → logprob: -4.9275994300842285
    6. ']' → logprob: -5.6775994300842285
    7. ')]' → logprob: -6.6775994300842285
    8. ')][' → logprob: -7.0525994300842285
    9. ',b' → logprob: -7.1775994300842285
    10. ' ,' → logprob: -7.4275994300842285

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. '	b' → logprob: -17.514163970947266
    4. '   ' → logprob: -17.514163970947266
    5. ' ' → logprob: -18.014163970947266
    6. ')b' → logprob: -19.264163970947266
    7. '_b' → logprob: -19.389163970947266
    8. '<|end|>' → logprob: -19.514163970947266
    9. ',b' → logprob: -20.139163970947266
    10. '    ' → logprob: -20.264163970947266

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004086275293957442
    2. ')' → logprob: -8.250408172607422
    3. '):
' → logprob: -9.500408172607422
    4. ' ):' → logprob: -9.750408172607422
    5. ',' → logprob: -12.125408172607422
    6. '   ' → logprob: -12.750408172607422
    7. ':' → logprob: -13.375408172607422
    8. '):
' → logprob: -13.500408172607422
    9. ' ' → logprob: -14.250408172607422
    10. '）：' → logprob: -14.750408172607422

Token 57: ' idx' (ID: 14016)
  Prédit: ' directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directed' → logprob: -1.2195825576782227
    2. '):' → logprob: -1.8445825576782227
    3. 'direct' → logprob: -1.9695825576782227
    4. ' und' → logprob: -2.4695825576782227
    5. ')' → logprob: -2.5945825576782227
    6. ' )' → logprob: -2.8445825576782227
    7. '   ' → logprob: -3.2195825576782227
    8. ' bid' → logprob: -3.7195825576782227
    9. ' ):' → logprob: -4.094582557678223
    10. '):
' → logprob: -4.344582557678223

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002220914699137211
    2. ')' → logprob: -6.25222110748291
    3. ',' → logprob: -8.75222110748291
    4. '):
' → logprob: -9.25222110748291
    5. ' ):' → logprob: -10.75222110748291
    6. ':' → logprob: -12.50222110748291
    7. '   ' → logprob: -12.75222110748291
    8. '):
' → logprob: -12.87722110748291
    9. ''):' → logprob: -13.50222110748291
    10. ')：' → logprob: -13.75222110748291

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010998018842656165
    2. ' ab' → logprob: -10.375109672546387
    3. '<|end|>' → logprob: -10.625109672546387
    4. '       ' → logprob: -11.000109672546387
    5. ':' → logprob: -11.875109672546387
    6. 'ab' → logprob: -12.000109672546387
    7. '[' → logprob: -12.250109672546387
    8. '    
' → logprob: -12.500109672546387
    9. '   ' → logprob: -12.500109672546387
    10. '(ab' → logprob: -13.000109672546387

Token 60: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.07390003651380539
    2. '   ' → logprob: -3.073899984359741
    3. 'ab' (adapté à ' ab') → logprob: -3.698899984359741
    4. '<|end|>' → logprob: -10.19890022277832
    5. '    ' → logprob: -10.57390022277832
    6. ' ' → logprob: -10.69890022277832
    7. '```' → logprob: -10.82390022277832
    8. '(ab' → logprob: -10.94890022277832
    9. '_ab' → logprob: -11.01140022277832
    10. ' ' → logprob: -11.32390022277832

Token 61: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00011832444579340518
    2. '[' → logprob: -9.250118255615234
    3. '.setdefault' → logprob: -11.500118255615234
    4. '[b' → logprob: -11.875118255615234
    5. 'a' → logprob: -12.875118255615234
    6. '[i' → logprob: -13.875118255615234
    7. '   ' → logprob: -14.625118255615234
    8. '[A' → logprob: -15.000118255615234
    9. ' [' → logprob: -15.125118255615234
    10. '```' → logprob: -15.875118255615234

Token 62: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0007890212000347674
    2. ']' → logprob: -7.250789165496826
    3. '][' → logprob: -9.750788688659668
    4. ' ].' → logprob: -12.000788688659668
    5. ''].' → logprob: -12.000788688659668
    6. '   ' → logprob: -12.500788688659668
    7. '"].' → logprob: -13.125788688659668
    8. '],' → logprob: -14.375788688659668
    9. ']].' → logprob: -14.500788688659668
    10. ' ' → logprob: -14.750788688659668

Token 63: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. ' append' → logprob: -13.500001907348633
    3. '.append' → logprob: -14.000001907348633
    4. 'appen' → logprob: -18.000001907348633
    5. ' ' → logprob: -18.250001907348633
    6. 'Append' → logprob: -18.500001907348633
    7. '_append' → logprob: -18.750001907348633
    8. '	append' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.500001907348633
    10. 'app' → logprob: -19.500001907348633

Token 64: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.009271602146327496
    2. '(' → logprob: -5.009271621704102
    3. '(b' → logprob: -6.009271621704102
    4. '(idx' → logprob: -9.509271621704102
    5. '([' → logprob: -11.259271621704102
    6. 'b' → logprob: -13.009271621704102
    7. ' (' → logprob: -13.259271621704102
    8. '(i' → logprob: -13.634271621704102
    9. '({'' → logprob: -14.009271621704102
    10. ' ((' → logprob: -14.259271621704102

Token 65: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004194979090243578
    2. ' b' → logprob: -5.504195213317871
    3. '   ' → logprob: -9.129195213317871
    4. ' ' → logprob: -13.004195213317871
    5. 'idx' → logprob: -13.004195213317871
    6. ')b' → logprob: -14.504195213317871
    7. '    ' → logprob: -14.566695213317871
    8. '  ' → logprob: -14.754195213317871
    9. '	b' → logprob: -14.941695213317871
    10. ')' → logprob: -15.004195213317871

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007187459850683808
    2. ' ,' → logprob: -7.250718593597412
    3. '‌,' → logprob: -12.75071907043457
    4. ',index' → logprob: -13.00071907043457
    5. ' ' → logprob: -14.12571907043457
    6. '   ' → logprob: -14.75071907043457
    7. ',)' → logprob: -15.50071907043457
    8. ',
' → logprob: -15.50071907043457
    9. ')' → logprob: -15.62571907043457
    10. '<|end|>' → logprob: -15.75071907043457

Token 67: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4741363525390625
    2. ' idx' → logprob: -0.9741363525390625
    3. '	idx' → logprob: -10.849136352539062
    4. ')' → logprob: -11.099136352539062
    5. '[idx' → logprob: -11.849136352539062
    6. ' ' → logprob: -12.099136352539062
    7. '(idx' → logprob: -12.599136352539062
    8. '_idx' → logprob: -12.849136352539062
    9. ' )' → logprob: -13.849136352539062
    10. '   ' → logprob: -14.099136352539062

Token 68: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0016750642098486423
    2. ')' → logprob: -6.626675128936768
    3. '))
' → logprob: -8.12667465209961
    4. ',' → logprob: -10.62667465209961
    5. ' ))' → logprob: -10.87667465209961
    6. '),' → logprob: -13.25167465209961
    7. ')))' → logprob: -13.25167465209961
    8. '))

' → logprob: -13.50167465209961
    9. ''))' → logprob: -13.62667465209961
    10. '   ' → logprob: -13.75167465209961

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01452485378831625
    2. 'ab' → logprob: -4.514524936676025
    3. '<|end|>' → logprob: -6.639524936676025
    4. '    
' → logprob: -7.014524936676025
    5. ')' → logprob: -7.889524936676025
    6. ' ab' → logprob: -8.389524459838867
    7. '
' → logprob: -8.764524459838867
    8. 'def' → logprob: -8.889524459838867
    9. ' ' → logprob: -9.889524459838867
    10. '  
' → logprob: -10.014524459838867

Token 70: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.17198854684829712
    2. ' ab' → logprob: -2.4219884872436523
    3. '   ' → logprob: -2.6719884872436523
    4. '(ab' → logprob: -9.671988487243652
    5. ' ' → logprob: -11.046988487243652
    6. '    ' → logprob: -12.046988487243652
    7. '  ' → logprob: -12.171988487243652
    8. ''ab' → logprob: -12.171988487243652
    9. 'b' → logprob: -12.296988487243652
    10. 'abel' → logprob: -12.421988487243652

Token 71: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.6789137084269896e-05
    2. 'b' → logprob: -10.75003719329834
    3. '[' → logprob: -11.50003719329834
    4. '[a' → logprob: -12.25003719329834
    5. '[s' → logprob: -16.750036239624023
    6. '[B' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.250036239624023
    8. '```' → logprob: -17.875036239624023
    9. '<|end|>' → logprob: -18.000036239624023
    10. '_b' → logprob: -18.000036239624023

Token 72: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.024044398218393326
    2. ').' → logprob: -4.399044513702393
    3. '[a' → logprob: -4.774044513702393
    4. '][' → logprob: -6.149044513702393
    5. ']' → logprob: -7.274044513702393
    6. ')[' → logprob: -9.774044036865234
    7. ' ].' → logprob: -10.274044036865234
    8. '.' → logprob: -10.774044036865234
    9. 'a' → logprob: -10.774044036865234
    10. '[' → logprob: -11.149044036865234

Token 73: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.650518920039758e-06
    2. '.append' → logprob: -13.250003814697266
    3. ' append' → logprob: -14.125003814697266
    4. '	append' → logprob: -14.625003814697266
    5. 'appen' → logprob: -15.000003814697266
    6. '   ' → logprob: -15.875003814697266
    7. 'prepend' → logprob: -16.750003814697266
    8. '_append' → logprob: -16.750003814697266
    9. 'Append' → logprob: -17.250003814697266
    10. ' ' → logprob: -17.375003814697266

Token 74: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.822646693966817e-06
    2. ' ((' → logprob: -12.375007629394531
    3. '(' → logprob: -13.125007629394531
    4. ' (' → logprob: -13.750007629394531
    5. '```' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.50000762939453
    7. '(a' → logprob: -16.75000762939453
    8. ')((' → logprob: -16.75000762939453
    9. '(
' → logprob: -16.75000762939453
    10. ' ' → logprob: -17.12500762939453

Token 75: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5766308903694153
    2. 'a' → logprob: -0.8266308903694153
    3. ' (' → logprob: -7.45163106918335
    4. ' a' → logprob: -9.326630592346191
    5. '(' → logprob: -11.826630592346191
    6. '   ' → logprob: -12.576630592346191
    7. ',a' → logprob: -12.951630592346191
    8. ' ' → logprob: -13.576630592346191
    9. ')a' → logprob: -13.576630592346191
    10. ')' → logprob: -13.701630592346191

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.000017166137695
    3. '‌,' → logprob: -17.750017166137695
    4. ' ' → logprob: -19.125017166137695
    5. ',index' → logprob: -19.375017166137695
    6. ',
' → logprob: -19.625017166137695
    7. '<|end|>' → logprob: -20.125017166137695
    8. '`,' → logprob: -20.250017166137695
    9. '   ' → logprob: -20.250017166137695
    10. '```' → logprob: -20.375017166137695

Token 77: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31326597929000854
    2. 'idx' → logprob: -1.3132660388946533
    3. '	idx' → logprob: -13.188265800476074
    4. '(idx' → logprob: -13.813265800476074
    5. ' ' → logprob: -14.313265800476074
    6. '[idx' → logprob: -15.688265800476074
    7. '_idx' → logprob: -16.06326675415039
    8. ')' → logprob: -16.06326675415039
    9. '   ' → logprob: -16.56326675415039
    10. '  ' → logprob: -16.68826675415039

Token 78: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023277394473552704
    2. ')' → logprob: -3.7732772827148438
    3. '))
' → logprob: -10.523277282714844
    4. ')))' → logprob: -13.148277282714844
    5. ' ))' → logprob: -14.023277282714844
    6. ')
' → logprob: -14.273277282714844
    7. '   ' → logprob: -14.523277282714844
    8. '),' → logprob: -15.023277282714844
    9. '))

' → logprob: -15.023277282714844
    10. ' ' → logprob: -15.773277282714844

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013774950057268143
    2. 'n' → logprob: -7.251377582550049
    3. '
' → logprob: -8.25137710571289
    4. '```' → logprob: -9.00137710571289
    5. '

' → logprob: -9.37637710571289
    6. 'for' → logprob: -10.37637710571289
    7. '\n' → logprob: -10.37637710571289
    8. 'd' → logprob: -10.50137710571289
    9. '\' → logprob: -10.62637710571289
    10. '<|end|>' → logprob: -10.87637710571289

Token 80: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43140044808387756
    2. ' dfs' → logprob: -1.6814004182815552
    3. ' solve' → logprob: -2.3064005374908447
    4. ' find' → logprob: -3.8064005374908447
    5. ' build' → logprob: -4.306400299072266
    6. ' bfs' → logprob: -4.806400299072266
    7. ' process' → logprob: -5.181400299072266
    8. ' is' → logprob: -6.306400299072266
    9. ' count' → logprob: -6.556400299072266
    10. 'dfs' → logprob: -6.681400299072266

Token 81: '_graph' (ID: 33441)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.0046927304938435555
    2. '_graph' → logprob: -5.879692554473877
    3. '_' → logprob: -6.504692554473877
    4. '_ad' → logprob: -8.879693031311035
    5. '_tree' → logprob: -9.754693031311035
    6. '_adj' → logprob: -10.004693031311035
    7. '_tab' → logprob: -10.879693031311035
    8. '_n' → logprob: -10.879693031311035
    9. '_edges' → logprob: -10.879693031311035
    10. '(ab' → logprob: -10.879693031311035

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030251752585172653
    2. '(' → logprob: -3.5302517414093018
    3. '(ab' → logprob: -7.655251979827881
    4. ' (' → logprob: -11.780251502990723
    5. '(a' → logprob: -12.530251502990723
    6. '(nn' → logprob: -12.905251502990723
    7. '(def' → logprob: -12.905251502990723
    8. '(N' → logprob: -13.280251502990723
    9. '(num' → logprob: -13.405251502990723
    10. '_(' → logprob: -13.405251502990723

Token 83: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5233982801437378
    2. '):' → logprob: -0.8983982801437378
    3. ')' → logprob: -9.398398399353027
    4. ' ):' → logprob: -9.648398399353027
    5. ',n' → logprob: -9.773398399353027
    6. '):
' → logprob: -9.898398399353027
    7. '   ' → logprob: -12.148398399353027
    8. '(n' → logprob: -12.273398399353027
    9. ' ,' → logprob: -12.398398399353027
    10. ':' → logprob: -13.648398399353027

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015993680572137237
    2. 'ab' → logprob: -6.876599311828613
    3. ' ab' → logprob: -7.626599311828613
    4. '```' → logprob: -10.501599311828613
    5. '   ' → logprob: -10.626599311828613
    6. '    
' → logprob: -11.876599311828613
    7. '
' → logprob: -12.001599311828613
    8. '(ab' → logprob: -12.251599311828613
    9. ' аб' → logprob: -13.626599311828613
    10. '``' → logprob: -13.751599311828613

Token 85: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.4047238826751709
    2. 'ab' (adapté à ' ab') → logprob: -1.779723882675171
    3. '   ' → logprob: -1.904723882675171
    4. '
' → logprob: -4.65472412109375
    5. '    
' → logprob: -5.77972412109375
    6. '```' → logprob: -6.65472412109375
    7. 'graph' → logprob: -8.27972412109375
    8. ' graph' → logprob: -8.40472412109375
    9. '``' → logprob: -8.40472412109375
    10. ' 
' → logprob: -8.90472412109375

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04512130469083786
    2. ' =' → logprob: -3.170121192932129
    3. ',' → logprob: -6.170121192932129
    4. ')' → logprob: -10.920121192932129
    5. '={}' → logprob: -13.295121192932129
    6. '   ' → logprob: -13.670121192932129
    7. '=[]' → logprob: -13.795121192932129
    8. '=

' → logprob: -13.795121192932129
    9. ' ' → logprob: -13.795121192932129
    10. '=create' → logprob: -14.295121192932129

Token 87: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.011184812523424625
    2. ' initialize' → logprob: -4.5111846923828125
    3. '{}' → logprob: -9.011184692382812
    4. '{' → logprob: -11.511184692382812
    5. '	initialize' → logprob: -12.511184692382812
    6. ' {}' → logprob: -14.886184692382812
    7. ' ' → logprob: -15.636184692382812
    8. '.initialize' → logprob: -15.761184692382812
    9. ' {' → logprob: -15.761184692382812
    10. 'initial' → logprob: -16.386184692382812

Token 88: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.250000953674316
    3. 'ab' → logprob: -20.5
    4. ''ab' → logprob: -20.875
    5. '_ob' → logprob: -21.125
    6. '_a' → logprob: -21.25
    7. ' ab' → logprob: -21.5
    8. '(ab' → logprob: -21.625
    9. '_al' → logprob: -21.75
    10. '_AB' → logprob: -22.125

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010538881178945303
    2. '_ab' → logprob: -6.876053810119629
    3. ' (' → logprob: -11.251053810119629
    4. '(' → logprob: -12.376053810119629
    5. '_(' → logprob: -13.001053810119629
    6. '(ab' → logprob: -14.751053810119629
    7. '_' → logprob: -15.376053810119629
    8. '_b' → logprob: -15.501053810119629
    9. '```' → logprob: -15.501053810119629
    10. '_n' → logprob: -15.626053810119629

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -15.500001907348633
    4. ')n' → logprob: -16.375001907348633
    5. ')

' → logprob: -16.625001907348633
    6. ')return' → logprob: -17.625001907348633
    7. '))' → logprob: -18.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.750001907348633
    10. ')`' → logprob: -19.875001907348633

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14330945909023285
    2. 'for' → logprob: -2.2683093547821045
    3. ' for' → logprob: -4.143309593200684
    4. 'n' → logprob: -5.268309593200684
    5. '<|end|>' → logprob: -5.268309593200684
    6. 'return' → logprob: -6.643309593200684
    7. '
' → logprob: -6.893309593200684
    8. '    
' → logprob: -7.893309593200684
    9. 'm' → logprob: -7.893309593200684
    10. 'edges' → logprob: -9.018309593200684

Token 92: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17870786786079407
    2. 'm' → logprob: -1.9287078380584717
    3. 'q' → logprob: -4.928708076477051
    4. ' for' → logprob: -5.053708076477051
    5. '   ' → logprob: -6.178708076477051
    6. 'return' → logprob: -7.303708076477051
    7. 'n' → logprob: -7.553708076477051
    8. 'k' → logprob: -7.803708076477051
    9. 'e' → logprob: -8.17870807647705
    10. 'edges' → logprob: -8.67870807647705

Token 93: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6958128809928894
    2. ' _' → logprob: -0.6958128809928894
    3. ' range' → logprob: -6.070812702178955
    4. ' ' → logprob: -8.820813179016113
    5. '_range' → logprob: -9.445813179016113
    6. ' i' → logprob: -10.070813179016113
    7. ' ' → logprob: -10.195813179016113
    8. 'range' → logprob: -10.445813179016113
    9. ' in' → logprob: -11.445813179016113
    10. ' ‌' → logprob: -12.445813179016113

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01569763571023941
    2. 'in' → logprob: -4.890697479248047
    3. '_' → logprob: -5.390697479248047
    4. ' ' → logprob: -5.765697479248047
    5. '  ' → logprob: -8.515697479248047
    6. ' _' → logprob: -9.765697479248047
    7. 'n' → logprob: -10.140697479248047
    8. ' i' → logprob: -10.390697479248047
    9. '   ' → logprob: -11.015697479248047
    10. '_in' → logprob: -12.015697479248047

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142988860607147
    2. 'range' → logprob: -1.701429843902588
    3. ' ' → logprob: -11.451430320739746
    4. 'ange' → logprob: -13.451430320739746
    5. 'rang' → logprob: -13.826430320739746
    6. '  ' → logprob: -14.076430320739746
    7. ' ran' → logprob: -14.576430320739746
    8. '	range' → logprob: -14.701430320739746
    9. 'r' → logprob: -14.826430320739746
    10. '   ' → logprob: -15.076430320739746

Token 96: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10942625254392624
    2. '(' → logprob: -2.359426259994507
    3. ' n' → logprob: -4.734426021575928
    4. ' (' → logprob: -7.984426021575928
    5. 'n' → logprob: -10.234426498413086
    6. ' ' → logprob: -12.109426498413086
    7. '(
' → logprob: -12.484426498413086
    8. '_' → logprob: -12.984426498413086
    9. '(

' → logprob: -14.484426498413086
    10. '_n' → logprob: -15.359426498413086

Token 97: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759916305541992
    2. '-' → logprob: -0.8259916305541992
    3. ' ' → logprob: -10.2009916305542
    4. ')' → logprob: -11.9509916305542
    5. '   ' → logprob: -12.8259916305542
    6. '1' → logprob: -13.3259916305542
    7. '  ' → logprob: -13.8259916305542
    8. ' )' → logprob: -13.8259916305542
    9. ' -
' → logprob: -14.3259916305542
    10. ' ' → logprob: -14.5759916305542

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010338802821934223
    2. ' ' → logprob: -6.876033782958984
    3. '2' → logprob: -15.126033782958984
    4. '  ' → logprob: -15.251033782958984
    5. '-' → logprob: -15.626033782958984
    6. '   ' → logprob: -15.626033782958984
    7. ')' → logprob: -16.001033782958984
    8. '１' → logprob: -16.313533782958984
    9. ' ' → logprob: -17.876033782958984
    10. '۱' → logprob: -17.938533782958984

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '１' → logprob: -15.625096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '  ' → logprob: -16.625097274780273
    6. '۱' → logprob: -16.812597274780273
    7. '2' → logprob: -17.000097274780273
    8. '১' → logprob: -17.500097274780273
    9. ')' → logprob: -17.562597274780273
    10. '```' → logprob: -18.125097274780273

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01061468105763197
    2. '):
' → logprob: -4.63561487197876
    3. ' ):' → logprob: -7.26061487197876
    4. ':' → logprob: -9.510614395141602
    5. ')' → logprob: -9.635614395141602
    6. ' ):
' → logprob: -11.760614395141602
    7. '   ' → logprob: -12.260614395141602
    8. '):
' → logprob: -13.885614395141602
    9. '():' → logprob: -13.885614395141602
    10. ' )' → logprob: -14.010614395141602

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01097448542714119
    2. '<|end|>' → logprob: -5.510974407196045
    3. '   ' → logprob: -6.260974407196045
    4. ' a' → logprob: -6.260974407196045
    5. 'a' → logprob: -6.510974407196045
    6. ',' → logprob: -7.135974407196045
    7. '        
' → logprob: -8.510974884033203
    8. ' ' → logprob: -9.385974884033203
    9. '<|end|>' → logprob: -9.510974884033203
    10. ',a' → logprob: -9.635974884033203

Token 102: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.011074705049395561
    2. ' a' → logprob: -4.511074542999268
    3. '   ' → logprob: -10.636075019836426
    4. '       ' → logprob: -13.761075019836426
    5. '	a' → logprob: -14.011075019836426
    6. '[a' → logprob: -15.636075019836426
    7. ',a' → logprob: -16.13607406616211
    8. '(a' → logprob: -16.13607406616211
    9. '_a' → logprob: -16.63607406616211
    10. ' ' → logprob: -16.76107406616211

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001483564410591498
    2. ',b' → logprob: -9.25014877319336
    3. ' ,' → logprob: -10.00014877319336
    4. 'b' → logprob: -12.00014877319336
    5. '_,' → logprob: -14.50014877319336
    6. ',
' → logprob: -17.25014877319336
    7. '<|end|>' → logprob: -18.12514877319336
    8. ' b' → logprob: -18.25014877319336
    9. ',j' → logprob: -18.37514877319336
    10. '‌,' → logprob: -18.75014877319336

Token 104: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0380416102707386
    2. ' b' → logprob: -3.288041591644287
    3. ',b' → logprob: -16.663042068481445
    4. ',' → logprob: -17.163042068481445
    5. ' ' → logprob: -17.788042068481445
    6. '    ' → logprob: -19.538042068481445
    7. '   ' → logprob: -19.663042068481445
    8. '<|end|>' → logprob: -19.913042068481445
    9. '	b' → logprob: -20.413042068481445
    10. '  ' → logprob: -21.038042068481445

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5239125490188599
    2. ' =' → logprob: -0.8989125490188599
    3. ',' → logprob: -7.14891242980957
    4. ')' → logprob: -14.27391242980957
    5. '<|end|>' → logprob: -14.27391242980957
    6. ' ' → logprob: -14.64891242980957
    7. '   ' → logprob: -15.77391242980957
    8. '    ' → logprob: -15.77391242980957
    9. ' =)' → logprob: -15.89891242980957
    10. ' =
' → logprob: -15.89891242980957

Token 106: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20144207775592804
    2. 'read' → logprob: -1.7014421224594116
    3. '(read' → logprob: -11.826441764831543
    4. '*' → logprob: -11.951441764831543
    5. '	read' → logprob: -12.076441764831543
    6. '   ' → logprob: -12.451441764831543
    7. '[' → logprob: -13.576441764831543
    8. '_read' → logprob: -13.826441764831543
    9. ' *' → logprob: -14.326441764831543
    10. ' ' → logprob: -14.451441764831543

Token 107: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -12.12501049041748
    3. '_input' → logprob: -12.75001049041748
    4. '_edges' → logprob: -13.87501049041748
    5. '_ed' → logprob: -14.25001049041748
    6. 'edge' → logprob: -15.62501049041748
    7. ')_' → logprob: -15.87501049041748
    8. '_e' → logprob: -16.375011444091797
    9. '"_' → logprob: -16.375011444091797
    10. '_EDGE' → logprob: -16.375011444091797

Token 108: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.034592388459714e-06
    2. 'input' → logprob: -12.375005722045898
    3. '_' → logprob: -14.000005722045898
    4. 's' → logprob: -15.625005722045898
    5. 'Input' → logprob: -15.750005722045898
    6. ' input' → logprob: -16.1250057220459
    7. '_output' → logprob: -16.2500057220459
    8. '_edge' → logprob: -16.6250057220459
    9. '_inputs' → logprob: -16.8750057220459
    10. '(input' → logprob: -17.2500057220459

Token 109: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010353106772527099
    2. '()
' → logprob: -6.876035213470459
    3. '()

' → logprob: -13.626035690307617
    4. '()
' → logprob: -14.376035690307617
    5. ' ()' → logprob: -15.126035690307617
    6. ')' → logprob: -15.251035690307617
    7. '(' → logprob: -15.751035690307617
    8. '();' → logprob: -17.001035690307617
    9. '(),' → logprob: -17.251035690307617
    10. '())' → logprob: -17.376035690307617

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24438071250915527
    2. '
' → logprob: -2.3693807125091553
    3. '       ' → logprob: -2.7443807125091553
    4. 'add' → logprob: -3.1193807125091553
    5. ' add' → logprob: -4.994380950927734
    6. '    
' → logprob: -5.619380950927734
    7. '        
' → logprob: -6.119380950927734
    8. '	add' → logprob: -7.744380950927734
    9. '  
' → logprob: -7.869380950927734
    10. '(add' → logprob: -8.119380950927734

Token 111: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.3651483356952667
    2. ' add' → logprob: -1.6151483058929443
    3. '   ' → logprob: -2.4901483058929443
    4. '       ' → logprob: -3.7401483058929443
    5. '
' → logprob: -9.115148544311523
    6. '	add' → logprob: -9.365148544311523
    7. ' ' → logprob: -10.490148544311523
    8. '    
' → logprob: -10.490148544311523
    9. '        
' → logprob: -10.615148544311523
    10. '  ' → logprob: -10.740148544311523

Token 112: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.000691824359819293
    2. '_' → logprob: -7.625691890716553
    3. '_ab' → logprob: -9.250691413879395
    4. '_edges' → logprob: -9.500691413879395
    5. '_ed' → logprob: -10.500691413879395
    6. '_e' → logprob: -12.875691413879395
    7. ' _' → logprob: -14.250691413879395
    8. '(_' → logprob: -14.500691413879395
    9. '```' → logprob: -14.500691413879395
    10. '_line' → logprob: -15.625691413879395

Token 113: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. '_ab' → logprob: -16.500003814697266
    4. '#ab' → logprob: -16.500003814697266
    5. '(abs' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.375003814697266
    7. 'ab' → logprob: -17.750003814697266
    8. ' ab' → logprob: -18.250003814697266
    9. ' (' → logprob: -18.500003814697266
    10. '(ob' → logprob: -19.125003814697266

Token 114: ',' (ID: 11)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.004166372120380402
    2. ',' → logprob: -5.629166603088379
    3. ')' → logprob: -8.254166603088379
    4. '(' → logprob: -8.379166603088379
    5. ' ab' → logprob: -9.879166603088379
    6. 'ab' → logprob: -11.129166603088379
    7. ' ,' → logprob: -13.129166603088379
    8. '(
' → logprob: -13.629166603088379
    9. '(n' → logprob: -13.754166603088379
    10. ' аб' → logprob: -13.754166603088379

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014166101813316345
    2. ' a' → logprob: -4.264165878295898
    3. '<|end|>' → logprob: -13.639165878295898
    4. '	a' → logprob: -14.889165878295898
    5. ')a' → logprob: -15.014165878295898
    6. '   ' → logprob: -15.014165878295898
    7. ')' → logprob: -15.639165878295898
    8. '    ' → logprob: -16.0141658782959
    9. ' ' → logprob: -16.6391658782959
    10. '  ' → logprob: -17.1391658782959

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036884360015392303
    2. ',b' → logprob: -6.128688335418701
    3. ' ,' → logprob: -6.503688335418701
    4. 'b' → logprob: -13.37868881225586
    5. ' b' → logprob: -13.62868881225586
    6. ')' → logprob: -13.75368881225586
    7. ' ' → logprob: -15.25368881225586
    8. ',
' → logprob: -15.87868881225586
    9. ',j' → logprob: -17.75368881225586
    10. '‌,' → logprob: -17.87868881225586

Token 117: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141372084617615
    2. ' b' → logprob: -1.7014137506484985
    3. ')b' → logprob: -15.576414108276367
    4. ' ' → logprob: -15.701414108276367
    5. '<|end|>' → logprob: -16.951414108276367
    6. '   ' → logprob: -17.701414108276367
    7. '	b' → logprob: -17.701414108276367
    8. ')' → logprob: -17.951414108276367
    9. '    ' → logprob: -18.576414108276367
    10. ' б' → logprob: -18.826414108276367

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021176657173782587
    2. ' ,' → logprob: -6.25211763381958
    3. ',j' → logprob: -8.627118110656738
    4. 'j' → logprob: -12.502118110656738
    5. '   ' → logprob: -12.877118110656738
    6. ')' → logprob: -12.877118110656738
    7. ' ' → logprob: -15.252118110656738
    8. ' j' → logprob: -15.252118110656738
    9. '```' → logprob: -16.002117156982422
    10. '    ' → logprob: -16.002117156982422

Token 119: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3132633566856384
    2. 'j' → logprob: -1.3132634162902832
    3. '    ' → logprob: -14.188262939453125
    4. ' ' → logprob: -14.563262939453125
    5. '	j' → logprob: -15.063262939453125
    6. '$j' → logprob: -16.813262939453125
    7. ')' → logprob: -17.188262939453125
    8. ' ' → logprob: -17.188262939453125
    9. '   ' → logprob: -17.188262939453125
    10. '_j' → logprob: -18.063262939453125

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008622374385595322
    2. ')
' → logprob: -4.758622169494629
    3. '   ' → logprob: -12.508622169494629
    4. ')

' → logprob: -13.133622169494629
    5. ')return' → logprob: -13.633622169494629
    6. ' )' → logprob: -14.508622169494629
    7. ')
' → logprob: -15.133622169494629
    8. ')n' → logprob: -16.008623123168945
    9. ')`' → logprob: -17.258623123168945
    10. '       ' → logprob: -17.633623123168945

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003166353271808475
    2. ' return' → logprob: -9.250316619873047
    3. '
' → logprob: -9.375316619873047
    4. 'return' → logprob: -9.500316619873047
    5. '    
' → logprob: -10.375316619873047
    6. '	return' → logprob: -11.000316619873047
    7. '<|end|>' → logprob: -12.500316619873047
    8. '   ' → logprob: -12.625316619873047
    9. '       ' → logprob: -13.000316619873047
    10. ' ' → logprob: -14.125316619873047

Token 122: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5086743831634521
    2. 'return' (adapté à ' return') → logprob: -1.0086743831634521
    3. ' return' → logprob: -3.383674383163452
    4. '	return' → logprob: -9.883674621582031
    5. ' ' → logprob: -11.508674621582031
    6. '    
' → logprob: -12.133674621582031
    7. '
' → logprob: -12.133674621582031
    8. '       ' → logprob: -12.758674621582031
    9. '<|end|>' → logprob: -13.383674621582031
    10. ':return' → logprob: -13.508674621582031

Token 123: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.6931679248809814
    2. ' ab' → logprob: -0.6931679248809814
    3. '(ab' → logprob: -11.068167686462402
    4. '_ab' → logprob: -13.318167686462402
    5. 'abbr' → logprob: -13.443167686462402
    6. ' ' → logprob: -14.318167686462402
    7. ' аб' → logprob: -15.318167686462402
    8. 'abh' → logprob: -15.568167686462402
    9. ''ab' → logprob: -15.818167686462402
    10. 'abc' → logprob: -16.06816864013672

Token 124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46019789576530457
    2. 'def' → logprob: -1.585197925567627
    3. '<|end|>' → logprob: -1.960197925567627
    4. '[' → logprob: -4.585197925567627
    5. '

' → logprob: -5.460197925567627
    6. '```' → logprob: -6.460197925567627
    7. '<|end|>' → logprob: -6.710197925567627
    8. 'n' → logprob: -6.835197925567627
    9. '\n' → logprob: -7.085197925567627
    10. '[
' → logprob: -7.460197925567627

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01633334904909134
    2. '
' → logprob: -4.14133358001709
    3. '<|end|>' → logprob: -9.14133358001709
    4. '```' → logprob: -9.64133358001709
    5. '

' → logprob: -10.14133358001709
    6. '#' → logprob: -10.76633358001709
    7. 'n' → logprob: -11.14133358001709
    8. '\n' → logprob: -11.51633358001709
    9. '
' → logprob: -11.64133358001709
    10. '  
' → logprob: -12.14133358001709

Token 126: ' dfs' (ID: 51252)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21307460963726044
    2. ' dfs' → logprob: -2.2130746841430664
    3. ' bfs' → logprob: -3.2130746841430664
    4. ' solve' → logprob: -3.7130746841430664
    5. ' find' → logprob: -5.088074684143066
    6. 'main' → logprob: -5.963074684143066
    7. ' color' → logprob: -6.213074684143066
    8. ' process' → logprob: -6.838074684143066
    9. 'dfs' → logprob: -7.088074684143066
    10. ' build' → logprob: -7.088074684143066

Token 127: '_helper' (ID: 26744)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.4060974717140198
    2. '(ab' → logprob: -1.906097412109375
    3. '(' → logprob: -2.281097412109375
    4. '(graph' → logprob: -2.781097412109375
    5. '(u' → logprob: -5.156097412109375
    6. '(v' → logprob: -5.656097412109375
    7. '_ab' → logprob: -5.781097412109375
    8. '(n' → logprob: -5.781097412109375
    9. '(root' → logprob: -6.156097412109375
    10. '(a' → logprob: -7.281097412109375

Token 128: '(a' (ID: 6271)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.2203018069267273
    2. '(node' → logprob: -1.720301866531372
    3. ' (' → logprob: -5.095301628112793
    4. '(' → logprob: -5.095301628112793
    5. '(graph' → logprob: -5.220301628112793
    6. '(n' → logprob: -7.845301628112793
    7. '(root' → logprob: -8.595301628112793
    8. '_ab' → logprob: -8.720301628112793
    9. '(a' → logprob: -9.470301628112793
    10. '(parent' → logprob: -10.470301628112793

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016977953491732478
    2. ' ,' → logprob: -6.626698017120361
    3. '):' → logprob: -8.376697540283203
    4. ')' → logprob: -10.626697540283203
    5. '   ' → logprob: -10.876697540283203
    6. ',n' → logprob: -10.876697540283203
    7. ',node' → logprob: -11.501697540283203
    8. ',b' → logprob: -11.751697540283203
    9. ',
' → logprob: -11.876697540283203
    10. ',a' → logprob: -12.001697540283203

Token 130: ' b' (ID: 287)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.5050943493843079
    2. ' visited' → logprob: -2.505094289779663
    3. 'ab' → logprob: -2.755094289779663
    4. 'b' → logprob: -2.880094289779663
    5. ' b' → logprob: -2.880094289779663
    6. ' parent' → logprob: -3.005094289779663
    7. 'visited' → logprob: -3.130094289779663
    8. 'parent' → logprob: -3.880094289779663
    9. ' p' → logprob: -5.005094528198242
    10. 'p' → logprob: -5.630094528198242

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02121891640126705
    2. '):' → logprob: -3.89621901512146
    3. ')' → logprob: -7.521218776702881
    4. '):
' → logprob: -10.146219253540039
    5. ' ,' → logprob: -10.521219253540039
    6. ',
' → logprob: -11.521219253540039
    7. ',a' → logprob: -12.396219253540039
    8. '_,' → logprob: -12.521219253540039
    9. '):

' → logprob: -12.646219253540039
    10. '),' → logprob: -12.646219253540039

Token 132: ' d' (ID: 272)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5269774198532104
    2. ' visited' → logprob: -1.4019774198532104
    3. ' ab' → logprob: -2.9019775390625
    4. 'ab' → logprob: -3.2769775390625
    5. 'depth' → logprob: -4.5269775390625
    6. 'parent' → logprob: -4.7769775390625
    7. ' used' → logprob: -5.0269775390625
    8. 'graph' → logprob: -5.2769775390625
    9. ' depth' → logprob: -5.2769775390625
    10. ' parent' → logprob: -5.4019775390625

Token 133: ',' (ID: 11)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.31367889046669006
    2. ',' → logprob: -1.8136788606643677
    3. '):' → logprob: -2.6886789798736572
    4. 'eep' → logprob: -3.9386789798736572
    5. ')' → logprob: -4.688678741455078
    6. 'ist' → logprob: -5.688678741455078
    7. 'eeper' → logprob: -6.688678741455078
    8. '   ' → logprob: -6.688678741455078
    9. 'e' → logprob: -7.688678741455078
    10. 'th' → logprob: -7.813678741455078

Token 134: ' ab' (ID: 692)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.9068406820297241
    2. ' ab' → logprob: -1.1568406820297241
    3. 'visited' → logprob: -2.0318408012390137
    4. ' depth' → logprob: -3.6568408012390137
    5. ' parent' → logprob: -3.7818408012390137
    6. 'ab' → logprob: -3.9068408012390137
    7. ' p' → logprob: -4.156840801239014
    8. ' used' → logprob: -4.406840801239014
    9. 'depth' → logprob: -5.031840801239014
    10. ' edges' → logprob: -5.281840801239014

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002105175284668803
    2. '):' → logprob: -6.252105236053467
    3. ' ,' → logprob: -9.002104759216309
    4. ')' → logprob: -10.752104759216309
    5. ' ):' → logprob: -11.252104759216309
    6. ',
' → logprob: -12.127104759216309
    7. ',a' → logprob: -12.877104759216309
    8. '):
' → logprob: -13.377104759216309
    9. '   ' → logprob: -14.064604759216309
    10. '_,' → logprob: -14.314604759216309

Token 136: ' c' (ID: 274)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6126143336296082
    2. ' visited' → logprob: -2.237614393234253
    3. 'used' → logprob: -3.112614393234253
    4. 'c' → logprob: -3.237614393234253
    5. 'colors' → logprob: -3.237614393234253
    6. 'v' → logprob: -3.487614393234253
    7. 'p' → logprob: -3.987614393234253
    8. ' used' → logprob: -4.112614154815674
    9. 'depth' → logprob: -4.112614154815674
    10. 'color' → logprob: -4.362614154815674

Token 137: '):
' (ID: 1883)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.036697421222925186
    2. 'olor' → logprob: -3.5366973876953125
    3. ',' → logprob: -5.5366973876953125
    4. '):' → logprob: -6.6616973876953125
    5. 'ols' → logprob: -8.036697387695312
    6. 'd' → logprob: -8.161697387695312
    7. 'o' → logprob: -8.411697387695312
    8. ' ol' → logprob: -8.536697387695312
    9. 'ount' → logprob: -8.911697387695312
    10. 'visited' → logprob: -9.286697387695312

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02344299480319023
    2. ':' → logprob: -4.023443222045898
    3. ' :' → logprob: -6.648443222045898
    4. ',' → logprob: -6.773443222045898
    5. '<|end|>' → logprob: -7.648443222045898
    6. '    ' → logprob: -7.773443222045898
    7. '    
' → logprob: -7.898443222045898
    8. '):' → logprob: -8.273443222045898
    9. '
' → logprob: -8.398443222045898
    10. ' ' → logprob: -8.648443222045898

Token 139: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05532757192850113
    2. ' stack' → logprob: -3.9303276538848877
    3. ' if' → logprob: -4.180327415466309
    4. ' c' → logprob: -4.930327415466309
    5. 'stack' → logprob: -5.430327415466309
    6. ' for' → logprob: -6.305327415466309
    7. 'c' → logprob: -6.430327415466309
    8. 'if' (adapté à ' if') → logprob: -7.055327415466309
    9. ' visited' → logprob: -7.305327415466309
    10. '    ' → logprob: -7.430327415466309

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14303849637508392
    2. ' a' → logprob: -2.018038511276245
    3. 'd' → logprob: -8.643038749694824
    4. ' d' → logprob: -9.518038749694824
    5. 'c' → logprob: -10.518038749694824
    6. '   ' → logprob: -10.893038749694824
    7. 'b' → logprob: -11.018038749694824
    8. ' c' → logprob: -11.143038749694824
    9. ' not' → logprob: -11.518038749694824
    10. ' b' → logprob: -11.768038749694824

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1798991858959198
    2. '==' → logprob: -1.8048992156982422
    3. ' not' → logprob: -8.929899215698242
    4. ' in' → logprob: -11.054899215698242
    5. 'not' → logprob: -12.804899215698242
    6. ' ' → logprob: -14.179899215698242
    7. '=' → logprob: -14.429899215698242
    8. '[' → logprob: -14.929899215698242
    9. '==
' → logprob: -14.929899215698242
    10. 'in' → logprob: -15.054899215698242

Token 142: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0076099359430372715
    2. ' b' → logprob: -4.882609844207764
    3. '   ' → logprob: -12.882610321044922
    4. ' ' → logprob: -13.882610321044922
    5. 'd' → logprob: -15.757610321044922
    6. '  ' → logprob: -16.007610321044922
    7. '    ' → logprob: -17.257610321044922
    8. 'c' → logprob: -18.132610321044922
    9. '	b' → logprob: -18.132610321044922
    10. ')b' → logprob: -18.382610321044922

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017781148198992014
    2. ':
' → logprob: -6.5017781257629395
    3. ':return' → logprob: -8.251777648925781
    4. ' :' → logprob: -11.626777648925781
    5. ' or' → logprob: -12.501777648925781
    6. '   ' → logprob: -13.751777648925781
    7. '):' → logprob: -15.376777648925781
    8. ',' → logprob: -15.751777648925781
    9. ' and' → logprob: -15.751777648925781
    10. ' :
' → logprob: -16.00177764892578

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46813857555389404
    2. ':' → logprob: -1.093138575553894
    3. '   ' → logprob: -4.093138694763184
    4. ':
' → logprob: -4.593138694763184
    5. ':return' → logprob: -4.593138694763184
    6. ' return' → logprob: -7.218138694763184
    7. '
' → logprob: -7.843138694763184
    8. '\n' → logprob: -8.218138694763184
    9. '	return' → logprob: -10.468138694763184
    10. 'return' → logprob: -10.468138694763184

Token 145: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15988221764564514
    2. 'return' (adapté à ' return') → logprob: -2.1598823070526123
    3. '   ' → logprob: -3.7848823070526123
    4. '       ' → logprob: -5.034882068634033
    5. ' c' → logprob: -6.034882068634033
    6. '
' → logprob: -8.034882545471191
    7. 'c' → logprob: -8.284882545471191
    8. '    ' → logprob: -9.909882545471191
    9. ' ' → logprob: -10.034882545471191
    10. '	return' → logprob: -10.409882545471191

Token 146: ' d' (ID: 272)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9511049389839172
    2. ' True' → logprob: -1.2011048793792725
    3. '0' → logprob: -1.8261048793792725
    4. '[' → logprob: -3.4511048793792725
    5. 'c' → logprob: -3.5761048793792725
    6. '[c' → logprob: -4.076105117797852
    7. ' ' → logprob: -4.076105117797852
    8. '
' → logprob: -4.451105117797852
    9. ' [' → logprob: -4.576105117797852
    10. '1' → logprob: -4.701105117797852

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17076855897903442
    2. '
' → logprob: -2.5457684993743896
    3. '    
' → logprob: -2.9207684993743896
    4. '<|end|>' → logprob: -4.170768737792969
    5. ' 
' → logprob: -5.795768737792969
    6. '\n' → logprob: -6.420768737792969
    7. '<|end|>' → logprob: -6.920768737792969
    8. ' for' → logprob: -7.170768737792969
    9. '    ' → logprob: -7.420768737792969
    10. '	
' → logprob: -7.670768737792969

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.644425094127655
    2. '    
' → logprob: -1.3944251537322998
    3. '
' → logprob: -2.1444251537323
    4. '<|end|>' → logprob: -3.0194251537323
    5. ' 
' → logprob: -3.1444251537323
    6. '  
' → logprob: -5.394424915313721
    7. '\n' → logprob: -5.769424915313721
    8. ' ' → logprob: -6.144424915313721
    9. '    ' → logprob: -6.519424915313721
    10. ' for' → logprob: -6.644424915313721

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1973377913236618
    2. 'c' → logprob: -2.0723378658294678
    3. 'visited' → logprob: -3.1973378658294678
    4. '   ' → logprob: -4.822337627410889
    5. ' for' → logprob: -5.822337627410889
    6. 'seen' → logprob: -7.197337627410889
    7. 'stack' → logprob: -7.947337627410889
    8. ' visited' → logprob: -9.322338104248047
    9. ' c' → logprob: -9.572338104248047
    10. 'if' → logprob: -11.197338104248047

Token 150: ' i' (ID: 575)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -1.1120563745498657
    2. 'to' → logprob: -1.9870563745498657
    3. ' (' → logprob: -2.112056255340576
    4. 'neighbor' → logprob: -2.237056255340576
    5. 'v' → logprob: -3.362056255340576
    6. 'next' → logprob: -3.612056255340576
    7. '(v' → logprob: -3.612056255340576
    8. '(nb' → logprob: -3.737056255340576
    9. '(n' → logprob: -3.862056255340576
    10. '(b' → logprob: -3.862056255340576

Token 151: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01293290313333273
    2. ' ,' → logprob: -5.262932777404785
    3. ' in' → logprob: -5.512932777404785
    4. 'in' → logprob: -6.012932777404785
    5. ',(' → logprob: -7.012932777404785
    6. ' ' → logprob: -9.512932777404785
    7. ',b' → logprob: -10.137932777404785
    8. ',
' → logprob: -10.512932777404785
    9. ',v' → logprob: -10.512932777404785
    10. ',n' → logprob: -11.512932777404785

Token 152: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.12144830822944641
    2. ' ab' → logprob: -2.246448278427124
    3. 'range' → logprob: -4.996448516845703
    4. ' range' → logprob: -6.371448516845703
    5. '   ' → logprob: -9.621448516845703
    6. 'c' → logprob: -10.621448516845703
    7. ' ' → logprob: -11.746448516845703
    8. '  ' → logprob: -12.871448516845703
    9. 'd' → logprob: -12.871448516845703
    10. '(ab' → logprob: -13.121448516845703

Token 153: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.229872087715194e-05
    2. 'a' → logprob: -10.000061988830566
    3. ' [' → logprob: -11.750061988830566
    4. '[' → logprob: -12.000061988830566
    5. ' a' → logprob: -14.250061988830566
    6. '   ' → logprob: -14.250061988830566
    7. '[i' → logprob: -14.375061988830566
    8. '[
' → logprob: -15.500061988830566
    9. '.get' → logprob: -15.875061988830566
    10. '[c' → logprob: -15.875061988830566

Token 154: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0020266619976609945
    2. ']:
' → logprob: -6.252026557922363
    3. ']' → logprob: -9.627026557922363
    4. ' ]' → logprob: -11.377026557922363
    5. ']:
' → logprob: -11.877026557922363
    6. ']:

' → logprob: -12.502026557922363
    7. ']>' → logprob: -13.127026557922363
    8. '   ' → logprob: -13.252026557922363
    9. ':' → logprob: -13.627026557922363
    10. ']):' → logprob: -14.252026557922363

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4845704436302185
    2. ' (' → logprob: -1.2345705032348633
    3. '(b' → logprob: -2.8595705032348633
    4. ' if' → logprob: -4.234570503234863
    5. ',' → logprob: -4.484570503234863
    6. '(n' → logprob: -4.984570503234863
    7. '   ' → logprob: -7.609570503234863
    8. ':' → logprob: -7.609570503234863
    9. '(c' → logprob: -7.984570503234863
    10. '(' → logprob: -8.234570503234863

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8099190592765808
    2. ' if' → logprob: -1.0599191188812256
    3. '(b' → logprob: -2.0599191188812256
    4. ' (' → logprob: -3.4349191188812256
    5. '(n' → logprob: -3.9349191188812256
    6. '(node' → logprob: -4.6849188804626465
    7. '   ' → logprob: -5.4349188804626465
    8. '(v' → logprob: -5.6849188804626465
    9. '(u' → logprob: -6.0599188804626465
    10. '       ' → logprob: -6.0599188804626465

Token 157: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7093955278396606
    2. 'i' → logprob: -1.3343955278396606
    3. ' not' → logprob: -2.334395408630371
    4. 'not' → logprob: -2.709395408630371
    5. ' c' → logprob: -3.209395408630371
    6. ' i' → logprob: -3.209395408630371
    7. '(i' → logprob: -8.959395408630371
    8. 'd' → logprob: -9.209395408630371
    9. ' ' → logprob: -9.896895408630371
    10. 'visited' → logprob: -9.959395408630371

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026654310058802366
    2. ' not' → logprob: -6.1276655197143555
    3. '0' → logprob: -9.002665519714355
    4. ' ' → logprob: -9.252665519714355
    5. ' [' → logprob: -9.627665519714355
    6. '(' → logprob: -10.127665519714355
    7. 'not' → logprob: -10.502665519714355
    8. ' is' → logprob: -11.252665519714355
    9. ' in' → logprob: -11.377665519714355
    10. ' !=' → logprob: -11.440165519714355

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008990773931145668
    2. '1' → logprob: -7.125899314880371
    3. ' ' → logprob: -9.375899314880371
    4. '
' → logprob: -12.125899314880371
    5. '(' → logprob: -13.375899314880371
    6. '   ' → logprob: -14.313399314880371
    7. '

' → logprob: -15.375899314880371
    8. '```' → logprob: -15.438399314880371
    9. '[' → logprob: -15.625899314880371
    10. '  ' → logprob: -15.938399314880371

Token 160: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01855549030005932
    2. 'not' → logprob: -4.643555641174316
    3. ' !=' → logprob: -5.268555641174316
    4. '!=' → logprob: -5.643555641174316
    5. '==' → logprob: -10.768555641174316
    6. ' in' → logprob: -11.268555641174316
    7. ' ' → logprob: -11.518555641174316
    8. ' ==' → logprob: -11.518555641174316
    9. ')' → logprob: -12.143555641174316
    10. ']!=' → logprob: -13.018555641174316

Token 161: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0142958490177989
    2. 'not' → logprob: -4.639296054840088
    3. '!=' → logprob: -5.764296054840088
    4. ' !=' → logprob: -6.639296054840088
    5. ' in' → logprob: -10.13929557800293
    6. '==' → logprob: -10.38929557800293
    7. ' ==' → logprob: -11.88929557800293
    8. ' ' → logprob: -13.01429557800293
    9. 'in' → logprob: -13.13929557800293
    10. ' no' → logprob: -14.63929557800293

Token 162: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11464494466781616
    2. 'c' → logprob: -2.864645004272461
    3. ' b' → logprob: -3.364645004272461
    4. 'a' → logprob: -4.864645004272461
    5. ' c' → logprob: -4.864645004272461
    6. ' a' → logprob: -6.864645004272461
    7. 'd' → logprob: -8.989645004272461
    8. ' ' → logprob: -9.614645004272461
    9. '-' → logprob: -10.989645004272461
    10. 'i' → logprob: -10.989645004272461

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05557287111878395
    2. ' or' → logprob: -3.055572986602783
    3. ':
' → logprob: -5.430572986602783
    4. ':return' → logprob: -6.430572986602783
    5. '           ' → logprob: -7.930572986602783
    6. ' :' → logprob: -8.055572509765625
    7. '   ' → logprob: -8.930572509765625
    8. '       ' → logprob: -9.805572509765625
    9. ' ' → logprob: -10.180572509765625
    10. '    ' → logprob: -11.430572509765625

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.083913654088974
    2. ':' → logprob: -3.208913564682007
    3. ' continue' → logprob: -3.333913564682007
    4. ':
' → logprob: -6.083913803100586
    5. 'continue' → logprob: -6.458913803100586
    6. '       ' → logprob: -8.708913803100586
    7. ',' → logprob: -8.833913803100586
    8. ' or' → logprob: -9.208913803100586
    9. ' :' → logprob: -10.208913803100586
    10. ' continues' → logprob: -10.583913803100586

Token 165: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7223447561264038
    2. 'continue' (adapté à ' continue') → logprob: -0.7223447561264038
    3. '           ' → logprob: -3.5973448753356934
    4. '               ' → logprob: -6.972344875335693
    5. '	continue' → logprob: -8.722344398498535
    6. '       ' → logprob: -8.847344398498535
    7. '_continue' → logprob: -10.097344398498535
    8. ' continu' → logprob: -10.597344398498535
    9. 'contin' → logprob: -11.097344398498535
    10. '   ' → logprob: -11.097344398498535

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18554894626140594
    2. '
' → logprob: -1.8105489015579224
    3. '        
' → logprob: -5.685548782348633
    4. ' 
' → logprob: -7.435548782348633
    5. '  
' → logprob: -8.310548782348633
    6. '<|end|>' → logprob: -8.310548782348633
    7. '    
' → logprob: -8.435548782348633
    8. '\n' → logprob: -8.560548782348633
    9. '   ' → logprob: -8.560548782348633
    10. 'n' → logprob: -9.435548782348633

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008922827546484768
    2. '   ' → logprob: -8.000892639160156
    3. 'd' → logprob: -8.500892639160156
    4. ' d' → logprob: -9.250892639160156
    5. 'n' → logprob: -9.750892639160156
    6. ' return' → logprob: -9.750892639160156
    7. '        
' → logprob: -10.500892639160156
    8. 'return' → logprob: -11.250892639160156
    9. ' new' → logprob: -11.625892639160156
    10. ' for' → logprob: -11.750892639160156

Token 168: ' e' (ID: 319)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17505672574043274
    2. ' d' → logprob: -2.9250566959381104
    3. ' res' → logprob: -3.0500566959381104
    4. 'res' → logprob: -3.3000566959381104
    5. 'ans' → logprob: -5.8000569343566895
    6. 'r' → logprob: -5.9250569343566895
    7. 'e' (adapté à ' e') → logprob: -6.6750569343566895
    8. 'c' → logprob: -6.8000569343566895
    9. 'result' → logprob: -6.8000569343566895
    10. 'return' → logprob: -6.8000569343566895

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2244446277618408
    2. 'lse' → logprob: -1.2244446277618408
    3. 'nd' → logprob: -2.349444627761841
    4. 'dge' → logprob: -2.599444627761841
    5. 'd' → logprob: -2.724444627761841
    6. ',' → logprob: -2.974444627761841
    7. '=' → logprob: -3.349444627761841
    8. '_' → logprob: -3.474444627761841
    9. '0' → logprob: -5.224444389343262
    10. 'q' → logprob: -5.224444389343262

Token 170: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.20199814438819885
    2. ' i' → logprob: -2.201998233795166
    3. 'dfs' → logprob: -3.076998233795166
    4. 'i' → logprob: -3.701998233795166
    5. '   ' → logprob: -7.451998233795166
    6. '(i' → logprob: -8.576997756958008
    7. ' ' → logprob: -8.826997756958008
    8. ' (' → logprob: -8.826997756958008
    9. ' d' → logprob: -9.264497756958008
    10. 'd' → logprob: -9.389497756958008

Token 171: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -7.600714161526412e-05
    2. 'helper' → logprob: -9.750076293945312
    3. '(i' → logprob: -11.625076293945312
    4. '_helpers' → logprob: -12.500076293945312
    5. '_help' → logprob: -13.375076293945312
    6. 'Helper' → logprob: -14.375076293945312
    7. '-helper' → logprob: -14.375076293945312
    8. 'i' → logprob: -15.125076293945312
    9. '_i' → logprob: -15.250076293945312
    10. '```' → logprob: -15.625076293945312

Token 172: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.000007629394531
    3. '(
' → logprob: -13.375007629394531
    4. '((' → logprob: -18.00000762939453
    5. '(I' → logprob: -18.62500762939453
    6. '(*' → logprob: -19.00000762939453
    7. ' (' → logprob: -19.12500762939453
    8. '(int' → logprob: -19.62500762939453
    9. 'i' → logprob: -19.75000762939453
    10. '```' → logprob: -19.87500762939453

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001544321421533823
    2. '0' → logprob: -9.125154495239258
    3. ' [' → logprob: -11.125154495239258
    4. '   ' → logprob: -12.125154495239258
    5. '
' → logprob: -12.500154495239258
    6. '[
' → logprob: -12.500154495239258
    7. '```' → logprob: -12.625154495239258
    8. ' ' → logprob: -12.875154495239258
    9. '(' → logprob: -13.000154495239258
    10. '][' → logprob: -13.750154495239258

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.147740689106286e-05
    2. '[' → logprob: -9.62507152557373
    3. ' ' → logprob: -12.62507152557373
    4. '(' → logprob: -14.00007152557373
    5. '   ' → logprob: -15.56257152557373
    6. '1' → logprob: -15.56257152557373
    7. '
' → logprob: -15.62507152557373
    8. '][' → logprob: -15.68757152557373
    9. '.' → logprob: -15.81257152557373
    10. ' [' → logprob: -16.437570571899414

Token 175: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025883622583933175
    2. ',a' → logprob: -9.000258445739746
    3. ' ,' → logprob: -9.625258445739746
    4. 'a' → logprob: -10.125258445739746
    5. ',b' → logprob: -10.875258445739746
    6. ',
' → logprob: -12.750258445739746
    7. 'b' → logprob: -13.625258445739746
    8. '),' → logprob: -13.750258445739746
    9. ')' → logprob: -13.750258445739746
    10. ',

' → logprob: -14.000258445739746

Token 176: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02975071594119072
    2. ' b' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.90475082397461
    4. '    ' → logprob: -17.15475082397461
    5. '	b' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '>b' → logprob: -18.65475082397461
    8. ')b' → logprob: -18.65475082397461
    9. ',b' → logprob: -18.77975082397461
    10. '       ' → logprob: -19.52975082397461

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008691829279996455
    2. 'a' → logprob: -8.000868797302246
    3. ',a' → logprob: -8.125868797302246
    4. ' ,' → logprob: -8.375868797302246
    5. '   ' → logprob: -12.875868797302246
    6. ' a' → logprob: -13.250868797302246
    7. ',d' → logprob: -14.000868797302246
    8. ',
' → logprob: -14.125868797302246
    9. ' ' → logprob: -14.500868797302246
    10. '  ' → logprob: -15.000868797302246

Token 178: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2812865972518921
    2. ' d' → logprob: -1.406286597251892
    3. '   ' → logprob: -9.906286239624023
    4. ' ' → logprob: -10.531286239624023
    5. '    ' → logprob: -10.656286239624023
    6. '  ' → logprob: -11.406286239624023
    7. '       ' → logprob: -12.031286239624023
    8. '
' → logprob: -12.781286239624023
    9. '      ' → logprob: -12.781286239624023
    10. '     ' → logprob: -13.031286239624023

Token 179: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01261877454817295
    2. ' +' → logprob: -4.387618541717529
    3. '+i' → logprob: -9.637619018554688
    4. ',' → logprob: -10.637619018554688
    5. ')' → logprob: -12.137619018554688
    6. '|' → logprob: -12.887619018554688
    7. '[' → logprob: -13.137619018554688
    8. '+[' → logprob: -13.137619018554688
    9. '   ' → logprob: -13.512619018554688
    10. '+,' → logprob: -14.137619018554688

Token 180: ' [' (ID: 723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05144229158759117
    2. '[' → logprob: -3.1764423847198486
    3. '[i' → logprob: -5.4264421463012695
    4. ' [' → logprob: -6.4264421463012695
    5. ' ' → logprob: -6.8014421463012695
    6. '[(' → logprob: -7.5514421463012695
    7. 'i' → logprob: -7.6764421463012695
    8. ' i' → logprob: -9.80144214630127
    9. '   ' → logprob: -10.42644214630127
    10. '{' → logprob: -10.55144214630127

Token 181: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003233070601709187
    2. ' i' → logprob: -8.125323295593262
    3. '   ' → logprob: -11.125323295593262
    4. 'j' → logprob: -12.625323295593262
    5. 'e' → logprob: -13.000323295593262
    6. '(i' → logprob: -13.750323295593262
    7. '[' → logprob: -14.125323295593262
    8. ' ' → logprob: -14.500323295593262
    9. '  ' → logprob: -14.750323295593262
    10. '1' → logprob: -14.750323295593262

Token 182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001182052365038544
    2. '1' → logprob: -9.625118255615234
    3. '
' → logprob: -11.250118255615234
    4. '][' → logprob: -11.625118255615234
    5. ' [' → logprob: -11.625118255615234
    6. '[
' → logprob: -11.875118255615234
    7. ']' → logprob: -12.625118255615234
    8. '[-' → logprob: -12.750118255615234
    9. ',' → logprob: -13.250118255615234
    10. '

' → logprob: -13.875118255615234

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. '
' → logprob: -11.250016212463379
    3. ' ' → logprob: -14.125016212463379
    4. '0' → logprob: -14.500016212463379
    5. '-' → logprob: -14.750016212463379
    6. '

' → logprob: -15.375016212463379
    7. '[' → logprob: -15.625016212463379
    8. '```' → logprob: -15.625016212463379
    9. '
' → logprob: -15.750016212463379
    10. '   ' → logprob: -16.062515258789062

Token 184: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00013488641707226634
    2. ']' → logprob: -9.000134468078613
    3. ' ],' → logprob: -12.125134468078613
    4. '])' → logprob: -12.625134468078613
    5. ':],' → logprob: -14.125134468078613
    6. ']],' → logprob: -14.750134468078613
    7. '),' → logprob: -15.000134468078613
    8. ''],' → logprob: -15.000134468078613
    9. ')],' → logprob: -15.250134468078613
    10. ',' → logprob: -16.12513542175293

Token 185: ' ab' (ID: 692)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04861972853541374
    2. ' a' → logprob: -3.0486197471618652
    3. '   ' → logprob: -10.923619270324707
    4. ' ' → logprob: -12.173619270324707
    5. '  ' → logprob: -12.298619270324707
    6. '    ' → logprob: -12.548619270324707
    7. '	a' → logprob: -14.548619270324707
    8. ')a' → logprob: -15.423619270324707
    9. ',a' → logprob: -15.548619270324707
    10. '>a' → logprob: -17.048620223999023

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007916436879895627
    2. ' ,' → logprob: -7.375791549682617
    3. ',i' → logprob: -8.875791549682617
    4. ',c' → logprob: -11.000791549682617
    5. '   ' → logprob: -12.875791549682617
    6. ',a' → logprob: -12.875791549682617
    7. ',
' → logprob: -13.375791549682617
    8. ')' → logprob: -15.125791549682617
    9. '       ' → logprob: -15.375791549682617
    10. '),' → logprob: -15.500791549682617

Token 187: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04858941584825516
    2. ' a' → logprob: -3.0485894680023193
    3. '   ' → logprob: -14.173589706420898
    4. '    ' → logprob: -14.173589706420898
    5. '	a' → logprob: -15.298589706420898
    6. ' ' → logprob: -15.548589706420898
    7. ')a' → logprob: -16.1735897064209
    8. '  ' → logprob: -16.4235897064209
    9. '_a' → logprob: -17.5485897064209
    10. '#a' → logprob: -17.7985897064209

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011729635298252106
    2. ')
' → logprob: -6.75117301940918
    3. '       ' → logprob: -13.50117301940918
    4. ')

' → logprob: -14.62617301940918
    5. ' )' → logprob: -15.00117301940918
    6. '   ' → logprob: -15.62617301940918
    7. '):' → logprob: -15.75117301940918
    8. ')
' → logprob: -16.37617301940918
    9. ')return' → logprob: -17.25117301940918
    10. '):
' → logprob: -17.87617301940918

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005562512087635696
    2. 'if' → logprob: -7.625556468963623
    3. '   ' → logprob: -10.500555992126465
    4. '           ' → logprob: -10.750555992126465
    5. ' if' → logprob: -11.125555992126465
    6. '	' → logprob: -13.375555992126465
    7. '      ' → logprob: -14.250555992126465
    8. '     ' → logprob: -14.875555992126465
    9. ';if' → logprob: -15.500555992126465
    10. '        
' → logprob: -15.625555992126465

Token 190: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013808388262987137
    2. ' if' → logprob: -4.763808250427246
    3. '       ' → logprob: -5.263808250427246
    4. '
' → logprob: -12.513808250427246
    5. '   ' → logprob: -14.513808250427246
    6. '	if' → logprob: -14.763808250427246
    7. ';if' → logprob: -16.638809204101562
    8. '           ' → logprob: -16.888809204101562
    9. 'If' → logprob: -17.013809204101562
    10. ' ' → logprob: -17.888809204101562

Token 191: ' len' (ID: 4631)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10021023452281952
    2. ' e' → logprob: -2.350210189819336
    3. 'len' → logprob: -12.975210189819336
    4. ' ' → logprob: -14.100210189819336
    5. ' len' → logprob: -14.850210189819336
    6. '   ' → logprob: -16.725210189819336
    7. '  ' → logprob: -17.850210189819336
    8. '
' → logprob: -17.975210189819336
    9. ' not' → logprob: -18.225210189819336
    10. '    ' → logprob: -18.350210189819336

Token 192: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.570319702499546e-05
    2. '(d' → logprob: -10.750025749206543
    3. '(' → logprob: -12.500025749206543
    4. 'e' → logprob: -15.250025749206543
    5. ' (' → logprob: -16.000024795532227
    6. '(
' → logprob: -16.500024795532227
    7. 'd' → logprob: -18.500024795532227
    8. '
' → logprob: -18.875024795532227
    9. '

' → logprob: -19.250024795532227
    10. '>' → logprob: -19.375024795532227

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006178340408951044
    2. ')>' → logprob: -5.131178379058838
    3. ')!=' → logprob: -9.50617790222168
    4. ' )' → logprob: -9.75617790222168
    5. '):' → logprob: -9.75617790222168
    6. '>' → logprob: -10.50617790222168
    7. '):
' → logprob: -11.25617790222168
    8. ' >' → logprob: -11.50617790222168
    9. ' ' → logprob: -12.88117790222168
    10. '):

' → logprob: -13.50617790222168

Token 194: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12644298374652863
    2. ' >' → logprob: -2.2514429092407227
    3. '!=' → logprob: -4.751442909240723
    4. ' !=' → logprob: -5.751442909240723
    5. ':' → logprob: -7.376442909240723
    6. ')>' → logprob: -7.751442909240723
    7. ')' → logprob: -7.876442909240723
    8. '<|end|>' → logprob: -10.001442909240723
    9. ' ' → logprob: -10.126442909240723
    10. '">' → logprob: -10.126442909240723

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034380643046461046
    2. ' ' → logprob: -8.000344276428223
    3. '   ' → logprob: -12.000344276428223
    4. '  ' → logprob: -14.500344276428223
    5. '       ' → logprob: -14.750344276428223
    6. '           ' → logprob: -15.000344276428223
    7. '    ' → logprob: -15.750344276428223
    8. '
' → logprob: -16.000343322753906
    9. '1' → logprob: -16.375343322753906
    10. '	' → logprob: -16.687843322753906

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017163509037345648
    2. ' ' → logprob: -6.376716136932373
    3. '   ' → logprob: -12.126716613769531
    4. '  ' → logprob: -13.251716613769531
    5. 'n' → logprob: -13.939216613769531
    6. 'len' → logprob: -14.064216613769531
    7. '1' → logprob: -14.126716613769531
    8. 'd' → logprob: -14.376716613769531
    9. '    ' → logprob: -14.501716613769531
    10. '       ' → logprob: -15.439216613769531

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02510264702141285
    2. ':
' → logprob: -4.400102615356445
    3. ':return' → logprob: -4.400102615356445
    4. '       ' → logprob: -9.275102615356445
    5. '):' → logprob: -10.025102615356445
    6. '   ' → logprob: -10.650102615356445
    7. '):
' → logprob: -10.775102615356445
    8. '           ' → logprob: -10.900102615356445
    9. ')' → logprob: -11.900102615356445
    10. 'return' → logprob: -12.400102615356445

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009813699871301651
    2. 'return' → logprob: -4.7598137855529785
    3. ' return' → logprob: -6.7598137855529785
    4. '       ' → logprob: -11.50981330871582
    5. ':return' → logprob: -11.63481330871582
    6. '               ' → logprob: -11.75981330871582
    7. '
' → logprob: -13.13481330871582
    8. '   ' → logprob: -13.25981330871582
    9. '	       ' → logprob: -13.25981330871582
    10. '		' → logprob: -13.50981330871582

Token 199: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011934857815504074
    2. '           ' → logprob: -5.011934757232666
    3. ' return' → logprob: -5.261934757232666
    4. '       ' → logprob: -11.886935234069824
    5. '
' → logprob: -12.136935234069824
    6. '   ' → logprob: -12.636935234069824
    7. '               ' → logprob: -12.886935234069824
    8. '	return' → logprob: -13.011935234069824
    9. ':return' → logprob: -15.636935234069824
    10. '{return' → logprob: -16.386934280395508

Token 200: ' set' (ID: 920)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01814994215965271
    2. ' e' → logprob: -4.0181498527526855
    3. '	e' → logprob: -18.643150329589844
    4. ' ' → logprob: -20.143150329589844
    5. '   ' → logprob: -21.018150329589844
    6. ' ' → logprob: -21.643150329589844
    7. '  ' → logprob: -22.768150329589844
    8. '[e' → logprob: -23.018150329589844
    9. '    ' → logprob: -23.143150329589844
    10. '
' → logprob: -23.268150329589844

Token 201: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00010318557906430215
    2. '()' → logprob: -9.875102996826172
    3. '(' → logprob: -10.000102996826172
    4. '(d' → logprob: -13.875102996826172
    5. ' (' → logprob: -14.000102996826172
    6. ')' → logprob: -14.000102996826172
    7. '(
' → logprob: -14.125102996826172
    8. '()(' → logprob: -14.875102996826172
    9. 'e' → logprob: -15.125102996826172
    10. ')(' → logprob: -15.250102996826172

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000344640837283805
    2. '())' → logprob: -8.750344276428223
    3. ')
' → logprob: -9.000344276428223
    4. ' )' → logprob: -10.250344276428223
    5. '       ' → logprob: -11.250344276428223
    6. '()' → logprob: -11.750344276428223
    7. ')return' → logprob: -13.375344276428223
    8. '   ' → logprob: -13.625344276428223
    9. '<|end|>' → logprob: -14.125344276428223
    10. ')}}' → logprob: -14.250344276428223

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019066202221438289
    2. '<|end|>' → logprob: -6.626906394958496
    3. 'None' → logprob: -7.751906394958496
    4. '       ' → logprob: -10.501906394958496
    5. 'return' → logprob: -10.751906394958496
    6. '[]' → logprob: -10.751906394958496
    7. '
' → logprob: -11.376906394958496
    8. 'def' → logprob: -11.626906394958496
    9. '<|end|>' → logprob: -11.876906394958496
    10. ')' → logprob: -11.876906394958496

Token 204: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11429602652788162
    2. '   ' → logprob: -2.6142959594726562
    3. 'None' → logprob: -3.8642959594726562
    4. '[]' → logprob: -5.489295959472656
    5. ' return' → logprob: -5.614295959472656
    6. '{}' → logprob: -5.989295959472656
    7. 'def' → logprob: -6.614295959472656
    8. ' ' → logprob: -7.364295959472656
    9. '0' → logprob: -7.614295959472656
    10. 'set' → logprob: -8.364295959472656

Token 205: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.6312321753939614e-05
    2. ' set' → logprob: -10.375036239624023
    3. '[]' → logprob: -13.250036239624023
    4. '{}' → logprob: -13.875036239624023
    5. 'None' → logprob: -13.875036239624023
    6. '(set' → logprob: -14.125036239624023
    7. '=set' → logprob: -14.750036239624023
    8. '()' → logprob: -16.125036239624023
    9. '	set' → logprob: -16.250036239624023
    10. ')set' → logprob: -16.875036239624023

Token 206: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '()}' → logprob: -14.87500286102295
    3. '()</' → logprob: -14.87500286102295
    4. '()

' → logprob: -15.12500286102295
    5. '()<' → logprob: -15.25000286102295
    6. '()
' → logprob: -15.25000286102295
    7. '()`' → logprob: -15.62500286102295
    8. '().' → logprob: -15.75000286102295
    9. '()]' → logprob: -16.125001907348633
    10. ' ()' → logprob: -16.375001907348633

Token 207: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40867191553115845
    2. '<|end|>' → logprob: -1.7836718559265137
    3. ')' → logprob: -2.0336718559265137
    4. '_' → logprob: -4.283671855926514
    5. 'd' → logprob: -4.908671855926514
    6. '<|end|>' → logprob: -6.158671855926514
    7. ' def' → logprob: -6.533671855926514
    8. '```' → logprob: -6.533671855926514
    9. '[' → logprob: -6.783671855926514
    10. '{' → logprob: -6.783671855926514

Token 208: ' dfs' (ID: 51252)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2199810892343521
    2. 'find' → logprob: -2.2199811935424805
    3. 'dfs' → logprob: -3.7199811935424805
    4. ' main' → logprob: -4.0949811935424805
    5. 'color' → logprob: -4.5949811935424805
    6. 'read' → logprob: -5.0949811935424805
    7. 'solve' → logprob: -5.3449811935424805
    8. 'def' → logprob: -5.7199811935424805
    9. 'get' → logprob: -5.7199811935424805
    10. 'build' → logprob: -5.8449811935424805

Token 209: '(a' (ID: 6271)
  Prédit: '_helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -0.49211233854293823
    2. '(' → logprob: -1.617112398147583
    3. '(a' → logprob: -1.867112398147583
    4. '(_' → logprob: -4.242112159729004
    5. '_' → logprob: -4.492112159729004
    6. '_(' → logprob: -4.867112159729004
    7. '(b' → logprob: -7.742112159729004
    8. '_wrapper' → logprob: -8.367112159729004
    9. '_helpers' → logprob: -9.117112159729004
    10. '_search' → logprob: -9.242112159729004

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020103710994590074
    2. ' ,' → logprob: -8.875201225280762
    3. ',b' → logprob: -9.875201225280762
    4. '):' → logprob: -12.750201225280762
    5. 'b' → logprob: -13.375201225280762
    6. ',a' → logprob: -13.500201225280762
    7. ',
' → logprob: -13.875201225280762
    8. '_,' → logprob: -14.500201225280762
    9. ')' → logprob: -14.750201225280762
    10. ' b' → logprob: -15.125201225280762

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31329673528671265
    2. ' b' → logprob: -1.3132967948913574
    3. ')' → logprob: -11.6882963180542
    4. '<|end|>' → logprob: -11.9382963180542
    5. ')b' → logprob: -12.3132963180542
    6. '   ' → logprob: -12.6882963180542
    7. 'def' → logprob: -12.9382963180542
    8. 'n' → logprob: -13.0632963180542
    9. '    ' → logprob: -13.1882963180542
    10. ' n' → logprob: -13.4382963180542

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024084746837615967
    2. '):' → logprob: -8.37524127960205
    3. ' ,' → logprob: -12.37524127960205
    4. ',a' → logprob: -13.00024127960205
    5. '   ' → logprob: -13.50024127960205
    6. '):
' → logprob: -14.00024127960205
    7. ',
' → logprob: -14.50024127960205
    8. ')' → logprob: -14.62524127960205
    9. ',c' → logprob: -16.000240325927734
    10. ',n' → logprob: -16.000240325927734

Token 213: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.2820414900779724
    2. ' ab' → logprob: -1.4070415496826172
    3. 'c' → logprob: -8.032041549682617
    4. ' c' → logprob: -8.907041549682617
    5. 'd' → logprob: -9.032041549682617
    6. ' d' → logprob: -9.407041549682617
    7. ' ' → logprob: -9.657041549682617
    8. '   ' → logprob: -9.782041549682617
    9. 'a' → logprob: -11.032041549682617
    10. ' a' → logprob: -11.532041549682617

Token 214: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -11.250027656555176
    3. '):' → logprob: -12.125027656555176
    4. ',
' → logprob: -12.625027656555176
    5. ',c' → logprob: -12.875027656555176
    6. '   ' → logprob: -12.875027656555176
    7. '):
' → logprob: -15.000027656555176
    8. ')' → logprob: -16.000028610229492
    9. ',n' → logprob: -16.000028610229492
    10. ',a' → logprob: -16.000028610229492

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013292702846229076
    2. ' return' → logprob: -4.5132927894592285
    3. 'return' → logprob: -6.1382927894592285
    4. '   ' → logprob: -10.01329231262207
    5. '	return' → logprob: -10.88829231262207
    6. '[' → logprob: -12.26329231262207
    7. '[]' → logprob: -12.38829231262207
    8. '    
' → logprob: -12.38829231262207
    9. '<|end|>' → logprob: -13.51329231262207
    10. '(' → logprob: -13.63829231262207

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010104524902999401
    2. 'set' → logprob: -5.260104656219482
    3. '[]' → logprob: -5.760104656219482
    4. 'dfs' → logprob: -6.635104656219482
    5. ' return' → logprob: -8.260104179382324
    6. '   ' → logprob: -10.510104179382324
    7. '{}' → logprob: -10.510104179382324
    8. '{' → logprob: -10.510104179382324
    9. 'd' → logprob: -10.760104179382324
    10. '{return' → logprob: -11.260104179382324

Token 217: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.9851447343826294
    2. 'set' → logprob: -1.1101447343826294
    3. ' dfs' → logprob: -1.7351447343826294
    4. ' set' → logprob: -2.23514461517334
    5. '[]' → logprob: -4.86014461517334
    6. '{}' → logprob: -5.73514461517334
    7. ' []' → logprob: -6.73514461517334
    8. '{' → logprob: -7.11014461517334
    9. ' ' → logprob: -9.23514461517334
    10. 'list' → logprob: -9.48514461517334

Token 218: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -0.07942582666873932
    2. '(a' → logprob: -2.579425811767578
    3. '_(' → logprob: -8.079425811767578
    4. '(' → logprob: -9.079425811767578
    5. '_help' → logprob: -10.579425811767578
    6. '_' → logprob: -10.954425811767578
    7. ' (' → logprob: -11.079425811767578
    8. '```' → logprob: -11.329425811767578
    9. '_helpers' → logprob: -11.704425811767578
    10. 'helper' → logprob: -11.829425811767578

Token 219: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002072357019642368
    2. '(' → logprob: -8.50020694732666
    3. '(
' → logprob: -12.87520694732666
    4. ' (' → logprob: -14.25020694732666
    5. '((' → logprob: -15.50020694732666
    6. '(ab' → logprob: -15.87520694732666
    7. '(A' → logprob: -16.500207901000977
    8. '(

' → logprob: -17.500207901000977
    9. '(None' → logprob: -18.000207901000977
    10. 'a' → logprob: -18.250207901000977

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',b' → logprob: -13.875018119812012
    4. ',
' → logprob: -14.500018119812012
    5. 'b' → logprob: -17.375019073486328
    6. '',' → logprob: -18.375019073486328
    7. '‌,' → logprob: -18.375019073486328
    8. '
' → logprob: -18.750019073486328
    9. ')' → logprob: -18.875019073486328
    10. '   ' → logprob: -19.375019073486328

Token 221: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. ' b' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. ')b' → logprob: -17.128177642822266
    5. '	b' → logprob: -17.878177642822266
    6. ' ' → logprob: -19.503177642822266
    7. '    ' → logprob: -20.253177642822266
    8. '>b' → logprob: -20.378177642822266
    9. '<|end|>' → logprob: -20.378177642822266
    10. '_b' → logprob: -20.628177642822266

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017863049288280308
    2. '[],' → logprob: -9.250178337097168
    3. ' ,' → logprob: -9.750178337097168
    4. ',[' → logprob: -12.250178337097168
    5. ')' → logprob: -12.625178337097168
    6. ',
' → logprob: -12.750178337097168
    7. '),' → logprob: -13.000178337097168
    8. '[' → logprob: -13.250178337097168
    9. ',,' → logprob: -13.500178337097168
    10. '([],' → logprob: -13.500178337097168

Token 223: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.001211783615872264
    2. '[]' → logprob: -6.751211643218994
    3. '[],
' → logprob: -10.626212120056152
    4. ' [],' → logprob: -11.251212120056152
    5. '[]
' → logprob: -12.626212120056152
    6. '[' → logprob: -14.626212120056152
    7. '[]

' → logprob: -14.751212120056152
    8. '[])' → logprob: -16.626211166381836
    9. '[].' → logprob: -18.251211166381836
    10. '([],' → logprob: -18.251211166381836

Token 224: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.011071168817579746
    2. ' ab' → logprob: -4.51107120513916
    3. '   ' → logprob: -11.01107120513916
    4. '-' → logprob: -13.51107120513916
    5. ' ' → logprob: -13.88607120513916
    6. '  ' → logprob: -14.13607120513916
    7. '-ab' → logprob: -14.13607120513916
    8. '    ' → logprob: -14.51107120513916
    9. ' -' → logprob: -14.51107120513916
    10. 'None' → logprob: -14.88607120513916

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00762366084381938
    2. ',None' → logprob: -5.257623672485352
    3. ',a' → logprob: -6.757623672485352
    4. ',-' → logprob: -7.257623672485352
    5. 'a' → logprob: -8.507623672485352
    6. ')' → logprob: -8.882623672485352
    7. 'None' → logprob: -9.257623672485352
    8. '   ' → logprob: -10.257623672485352
    9. '-' → logprob: -10.757623672485352
    10. ' ,' → logprob: -11.757623672485352

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001427538663847372
    2. ' -' → logprob: -8.875143051147461
    3. 'None' → logprob: -13.750143051147461
    4. '   ' → logprob: -13.875143051147461
    5. ' ' → logprob: -14.750143051147461
    6. 'a' → logprob: -15.125143051147461
    7. 'c' → logprob: -16.00014305114746
    8. '-c' → logprob: -16.62514305114746
    9. '  ' → logprob: -17.37514305114746
    10. ' None' → logprob: -17.75014305114746

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '2' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '１' → logprob: -18.625001907348633
    6. '-' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.812501907348633
    8. '  ' → logprob: -20.812501907348633
    9. '```' → logprob: -21.125001907348633
    10. '10' → logprob: -21.375001907348633

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.375
    3. ' )' → logprob: -16.625
    4. '))' → logprob: -18.5
    5. ')return' → logprob: -18.75
    6. ')

' → logprob: -19.375
    7. ')#' → logprob: -19.75
    8. '),' → logprob: -20.125
    9. ')}' → logprob: -20.125
    10. ')`' → logprob: -20.5

Token 229: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012688051210716367
    2. 'n' → logprob: -6.7512688636779785
    3. 'if' → logprob: -10.25126838684082
    4. '#' → logprob: -10.37626838684082
    5. 'from' → logprob: -11.00126838684082
    6. 'import' → logprob: -12.75126838684082
    7. 'class' → logprob: -13.00126838684082
    8. 'a' → logprob: -13.50126838684082
    9. 'N' → logprob: -13.50126838684082
    10. 'print' → logprob: -14.00126838684082

Token 230: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47487369179725647
    2. 'main' → logprob: -0.9748736619949341
    3. 'def' → logprob: -7.8498735427856445
    4. ' def' → logprob: -8.974873542785645
    5. 'build' → logprob: -9.599873542785645
    6. '_main' → logprob: -9.849873542785645
    7. ' build' → logprob: -10.224873542785645
    8. 'solve' → logprob: -10.349873542785645
    9. ' solve' → logprob: -10.474873542785645
    10. 'read' → logprob: -11.224873542785645

Token 231: '_m' (ID: 1285)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.0715924501419067
    2. '_k' → logprob: -1.1965924501419067
    3. '_m' → logprob: -2.196592330932617
    4. '_queries' → logprob: -2.196592330932617
    5. '_s' → logprob: -3.446592330932617
    6. '_n' → logprob: -4.196592330932617
    7. '_query' → logprob: -4.196592330932617
    8. '_t' → logprob: -4.321592330932617
    9. '_' → logprob: -4.446592330932617
    10. '_input' → logprob: -5.071592330932617

Token 232: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00027254095766693354
    2. '():
' → logprob: -8.750272750854492
    3. '()' → logprob: -9.250272750854492
    4. '_' → logprob: -11.375272750854492
    5. ' ():' → logprob: -12.625272750854492
    6. '():
' → logprob: -13.250272750854492
    7. '():

' → logprob: -14.625272750854492
    8. '(' → logprob: -15.625272750854492
    9. '()>' → logprob: -15.875272750854492
    10. 'ean' → logprob: -16.125272750854492

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037421253509819508
    2. ' return' → logprob: -5.628742218017578
    3. 'return' → logprob: -8.878742218017578
    4. '
' → logprob: -13.753742218017578
    5. '    ' → logprob: -14.003742218017578
    6. '	return' → logprob: -15.378742218017578
    7. ' ' → logprob: -15.503742218017578
    8. '   ' → logprob: -16.003742218017578
    9. 'def' → logprob: -16.128742218017578
    10. '  ' → logprob: -16.628742218017578

Token 234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005646117497235537
    2. '   ' → logprob: -5.755646228790283
    3. ' return' → logprob: -6.005646228790283
    4. 'int' → logprob: -14.755645751953125
    5. '	return' → logprob: -16.005645751953125
    6. 'def' → logprob: -16.630645751953125
    7. 'eturn' → logprob: -17.755645751953125
    8. '{return' → logprob: -18.380645751953125
    9. '  ' → logprob: -18.505645751953125
    10. ' ' → logprob: -19.130645751953125

Token 235: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815006136894226
    2. ' int' → logprob: -4.0181498527526855
    3. '[int' → logprob: -16.518150329589844
    4. '(int' → logprob: -16.768150329589844
    5. ' ' → logprob: -17.018150329589844
    6. '<int' → logprob: -18.268150329589844
    7. '  ' → logprob: -19.268150329589844
    8. '   ' → logprob: -19.393150329589844
    9. ':int' → logprob: -19.768150329589844
    10. '	int' → logprob: -19.893150329589844

Token 236: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011824887478724122
    2. '(' → logprob: -6.751182556152344
    3. ' (' → logprob: -11.376182556152344
    4. '()' → logprob: -14.751182556152344
    5. 'input' → logprob: -15.376182556152344
    6. '(
' → logprob: -17.126182556152344
    7. '=input' → logprob: -17.626182556152344
    8. '(()' → logprob: -17.876182556152344
    9. '(int' → logprob: -18.001182556152344
    10. ',input' → logprob: -18.126182556152344

Token 237: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00251656211912632
    2. '()' → logprob: -6.002516746520996
    3. ')' → logprob: -10.377516746520996
    4. '())
' → logprob: -12.627516746520996
    5. '()
' → logprob: -13.002516746520996
    6. ' ())' → logprob: -13.127516746520996
    7. '();)' → logprob: -14.002516746520996
    8. '()]' → logprob: -14.752516746520996
    9. '())

' → logprob: -15.377516746520996
    10. '()))' → logprob: -15.502516746520996

Token 238: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.074907287256792e-05
    2. 'm' → logprob: -10.25006103515625
    3. 'n' → logprob: -10.75006103515625
    4. 'from' → logprob: -13.25006103515625
    5. 'colors' → logprob: -14.87506103515625
    6. 'ndef' → logprob: -15.50006103515625
    7. 'data' → logprob: -15.62506103515625
    8. 'ab' → logprob: -15.75006103515625
    9. 'edges' → logprob: -15.75006103515625
    10. 'for' → logprob: -15.87506103515625

Token 239: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2709234356880188
    2. 'main' → logprob: -1.520923376083374
    3. 'process' → logprob: -4.395923614501953
    4. 'build' → logprob: -6.145923614501953
    5. 'solve' → logprob: -6.395923614501953
    6. 'def' → logprob: -7.270923614501953
    7. ' main' → logprob: -7.770923614501953
    8. ' read' → logprob: -7.770923614501953
    9. 'query' → logprob: -8.270923614501953
    10. '_main' → logprob: -9.020923614501953

Token 240: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.4977066218852997
    2. '_queries' → logprob: -2.497706651687622
    3. '_edge' → logprob: -2.622706651687622
    4. '_edges' → logprob: -2.997706651687622
    5. '_ab' → logprob: -3.247706651687622
    6. '_' → logprob: -3.872706651687622
    7. '_pair' → logprob: -3.997706651687622
    8. '_q' → logprob: -4.497706413269043
    9. '_list' → logprob: -4.622706413269043
    10. '_m' → logprob: -4.747706413269043

Token 241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04383528232574463
    2. '()' → logprob: -3.793835163116455
    3. '_input' → logprob: -3.918835163116455
    4. '():
' → logprob: -7.793835163116455
    5. '_' → logprob: -10.793835639953613
    6. 's' → logprob: -11.168835639953613
    7. '()>' → logprob: -11.418835639953613
    8. '_list' → logprob: -11.543835639953613
    9. '_line' → logprob: -12.168835639953613
    10. '():

' → logprob: -12.168835639953613

Token 242: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18370746076107025
    2. '()
' → logprob: -1.9337074756622314
    3. '():
' → logprob: -4.308707237243652
    4. '   ' → logprob: -5.058707237243652
    5. 'def' → logprob: -6.808707237243652
    6. '=' → logprob: -7.308707237243652
    7. 'return' → logprob: -7.433707237243652
    8. '()[' → logprob: -8.433707237243652
    9. '():' → logprob: -8.683707237243652
    10. '()\' → logprob: -8.683707237243652

Token 243: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05235431715846062
    2. 'def' → logprob: -3.052354335784912
    3. '   ' → logprob: -5.677354335784912
    4. ' return' → logprob: -8.677353858947754
    5. 'a' → logprob: -9.677353858947754
    6. '[int' → logprob: -10.052353858947754
    7. 'lambda' → logprob: -10.552353858947754
    8. '```' → logprob: -11.427353858947754
    9. 'for' → logprob: -12.177353858947754
    10. '[]' → logprob: -12.677353858947754

Token 244: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.017978310585021973
    2. '[' → logprob: -4.517978191375732
    3. 'tuple' → logprob: -5.392978191375732
    4. '[input' → logprob: -6.642978191375732
    5. ' [' → logprob: -7.517978191375732
    6. '[t' → logprob: -8.64297866821289
    7. '[list' → logprob: -9.14297866821289
    8. ' tuple' → logprob: -9.64297866821289
    9. 'list' → logprob: -9.89297866821289
    10. 'int' → logprob: -10.26797866821289

Token 245: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -15.000000953674316
    3. 'map' → logprob: -16.625
    4. '*' → logprob: -16.875
    5. '(int' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '
' → logprob: -17.875
    8. 'input' → logprob: -18.125
    9. 'str' → logprob: -18.125
    10. '[int' → logprob: -18.625

Token 246: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0015666383551433682
    2. '(x' → logprob: -6.501566410064697
    3. '()' → logprob: -10.251566886901855
    4. '(s' → logprob: -11.626566886901855
    5. '(input' → logprob: -11.626566886901855
    6. ' (' → logprob: -12.126566886901855
    7. '(' → logprob: -13.501566886901855
    8. 'i' → logprob: -13.876566886901855
    9. '()]' → logprob: -14.126566886901855
    10. '(k' → logprob: -14.376566886901855

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004711476620286703
    2. '(i' → logprob: -5.879711627960205
    3. '()' → logprob: -6.379711627960205
    4. '())' → logprob: -9.379711151123047
    5. '(x' → logprob: -9.879711151123047
    6. ')i' → logprob: -10.629711151123047
    7. 'for' → logprob: -11.254711151123047
    8. ' )' → logprob: -11.629711151123047
    9. '(' → logprob: -12.504711151123047
    10. ' ' → logprob: -12.879711151123047

Token 248: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06483899056911469
    2. 'for' → logprob: -4.064838886260986
    3. ')' → logprob: -4.314838886260986
    4. ' for' → logprob: -4.439838886260986
    5. '-' → logprob: -4.689838886260986
    6. '()-' → logprob: -4.689838886260986
    7. 'input' → logprob: -7.689838886260986
    8. '(input' → logprob: -7.939838886260986
    9. ' ' → logprob: -8.564839363098145
    10. ' -' → logprob: -8.564839363098145

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001093427068553865
    2. ' ' → logprob: -6.87609338760376
    3. '0' → logprob: -9.751093864440918
    4. 'for' → logprob: -14.126093864440918
    5. 'user' → logprob: -14.376093864440918
    6. '   ' → logprob: -14.751093864440918
    7. ' for' → logprob: -15.626093864440918
    8. 'input' → logprob: -16.3135929107666
    9. 'int' → logprob: -16.4385929107666
    10. '１' → logprob: -16.8135929107666

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '0' → logprob: -13.625053405761719
    4. '2' → logprob: -15.875053405761719
    5. 'int' → logprob: -16.25005340576172
    6. 'input' → logprob: -16.37505340576172
    7. 'user' → logprob: -16.75005340576172
    8. '   ' → logprob: -17.00005340576172
    9. '１' → logprob: -17.18755340576172
    10. 'for' → logprob: -17.50005340576172

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3870382010936737
    2. ' for' → logprob: -1.137038230895996
    3. ')' → logprob: -8.762038230895996
    4. '	for' → logprob: -12.012038230895996
    5. '()' → logprob: -12.637038230895996
    6. ' ' → logprob: -14.762038230895996
    7. ']' → logprob: -15.012038230895996
    8. '   ' → logprob: -15.262038230895996
    9. '<|end|>' → logprob: -15.387038230895996
    10. '
' → logprob: -17.51203727722168

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03951575979590416
    2. ' i' → logprob: -3.539515733718872
    3. 'input' → logprob: -4.664515972137451
    4. ' input' → logprob: -8.164515495300293
    5. 'in' → logprob: -11.914515495300293
    6. ' in' → logprob: -13.414515495300293
    7. 'int' → logprob: -14.414515495300293
    8. ' ' → logprob: -15.164515495300293
    9. '(i' → logprob: -15.789515495300293
    10. '  ' → logprob: -16.28951644897461

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2173934131860733
    2. 'input' → logprob: -2.217393398284912
    3. 'in' → logprob: -3.092393398284912
    4. ' input' → logprob: -3.217393398284912
    5. '()' → logprob: -7.592393398284912
    6. 'import' → logprob: -8.71739387512207
    7. '(input' → logprob: -9.59239387512207
    8. '=input' → logprob: -9.84239387512207
    9. 'user' → logprob: -10.34239387512207
    10. ' ' → logprob: -10.34239387512207

Token 254: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02054504305124283
    2. ' input' → logprob: -3.89554500579834
    3. '(input' → logprob: -13.14554500579834
    4. ' ' → logprob: -14.14554500579834
    5. '<input' → logprob: -16.395545959472656
    6. '   ' → logprob: -16.770545959472656
    7. 'output' → logprob: -16.895545959472656
    8. '=input' → logprob: -16.895545959472656
    9. '
' → logprob: -17.020545959472656
    10. '  ' → logprob: -17.395545959472656

Token 255: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -17.500003814697266
    4. '(' → logprob: -18.250003814697266
    5. '()].' → logprob: -21.500003814697266
    6. '()
' → logprob: -21.750003814697266
    7. '.' → logprob: -21.875003814697266
    8. '.split' → logprob: -22.000003814697266
    9. '()]' → logprob: -22.500003814697266
    10. '()[' → logprob: -22.750003814697266

Token 256: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3306015716807451e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -15.37501335144043
    4. '.split' → logprob: -17.50001335144043
    5. 'plit' → logprob: -17.75001335144043
    6. 'rstrip' → logprob: -18.75001335144043
    7. '(split' → logprob: -18.87501335144043
    8. '().' → logprob: -19.50001335144043
    9. ' ' → logprob: -20.62501335144043
    10. '()' → logprob: -20.87501335144043

Token 257: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -9.686778503237292e-05
    2. '()' → logprob: -9.250097274780273
    3. '()]
' → logprob: -15.000097274780273
    4. ']()' → logprob: -16.125097274780273
    5. ']' → logprob: -16.625097274780273
    6. '(' → logprob: -17.500097274780273
    7. '())' → logprob: -17.625097274780273
    8. '()][' → logprob: -18.000097274780273
    9. '(),' → logprob: -18.625097274780273
    10. '()}' → logprob: -18.625097274780273

Token 258: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5462948083877563
    2. ']' → logprob: -1.0462948083877563
    3. '()' → logprob: -3.171294689178467
    4. '()]' → logprob: -3.671294689178467
    5. '<|end|>' → logprob: -7.421294689178467
    6. ')]' → logprob: -7.546294689178467
    7. '())' → logprob: -7.671294689178467
    8. ']()' → logprob: -8.171295166015625
    9. '])' → logprob: -8.921295166015625
    10. '}' → logprob: -9.421295166015625

Token 259: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007177923689596355
    2. 'n' → logprob: -7.250717639923096
    3. 'if' → logprob: -12.875718116760254
    4. 'from' → logprob: -12.875718116760254
    5. 'm' → logprob: -14.500718116760254
    6. '#' → logprob: -14.750718116760254
    7. 'N' → logprob: -14.875718116760254
    8. 'ab' → logprob: -14.875718116760254
    9. '(n' → logprob: -15.625718116760254
    10. '```' → logprob: -15.875718116760254

Token 260: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04329968988895416
    2. 'process' → logprob: -3.668299674987793
    3. 'def' → logprob: -4.793299674987793
    4. ' main' → logprob: -5.293299674987793
    5. 'solve' → logprob: -5.793299674987793
    6. ' process' → logprob: -8.793299674987793
    7. '_main' → logprob: -9.293299674987793
    8. 'read' → logprob: -9.543299674987793
    9. 'color' → logprob: -10.043299674987793
    10. ' solve' → logprob: -11.043299674987793

Token 261: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.2162923365831375
    2. '_query' → logprob: -1.716292381286621
    3. '_m' → logprob: -5.091292381286621
    4. '_' → logprob: -5.216292381286621
    5. '_q' → logprob: -7.341292381286621
    6. '_s' → logprob: -7.341292381286621
    7. '(' → logprob: -7.966292381286621
    8. '_results' → logprob: -8.466292381286621
    9. '_input' → logprob: -8.716292381286621
    10. '_p' → logprob: -9.216292381286621

Token 262: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0886811763048172
    2. '(n' → logprob: -2.588681221008301
    3. '(' → logprob: -5.463681221008301
    4. '(q' → logprob: -5.463681221008301
    5. '():' → logprob: -6.838681221008301
    6. '(query' → logprob: -9.2136812210083
    7. ' (' → logprob: -10.7136812210083
    8. '(M' → logprob: -10.7136812210083
    9. '(k' → logprob: -11.2136812210083
    10. '(def' → logprob: -12.0886812210083

Token 263: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030647896230220795
    2. ',' → logprob: -3.5306479930877686
    3. '):
' → logprob: -7.9056477546691895
    4. ' ):' → logprob: -7.9056477546691895
    5. ')' → logprob: -9.155648231506348
    6. ',m' → logprob: -10.780648231506348
    7. ' ,' → logprob: -11.655648231506348
    8. '(m' → logprob: -11.780648231506348
    9. '(n' → logprob: -12.655648231506348
    10. ',n' → logprob: -12.655648231506348

Token 264: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.038397178053855896
    2. ' ab' → logprob: -3.4133970737457275
    3. 'queries' → logprob: -5.663397312164307
    4. ' queries' → logprob: -6.913397312164307
    5. 'n' → logprob: -9.413396835327148
    6. 'query' → logprob: -10.288396835327148
    7. 'q' → logprob: -10.663396835327148
    8. '   ' → logprob: -10.788396835327148
    9. ' ' → logprob: -10.913396835327148
    10. '
' → logprob: -11.038396835327148

Token 265: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02781260572373867
    2. '):' → logprob: -3.7778127193450928
    3. '):
' → logprob: -5.402812480926514
    4. ')' → logprob: -10.277812957763672
    5. ' ,' → logprob: -11.777812957763672
    6. ',
' → logprob: -11.902812957763672
    7. ' ):' → logprob: -13.902812957763672
    8. '):

' → logprob: -14.277812957763672
    9. '   ' → logprob: -14.277812957763672
    10. '):
' → logprob: -14.652812957763672

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009364743018522859
    2. '    
' → logprob: -8.750936508178711
    3. 'for' → logprob: -8.875936508178711
    4. '(' → logprob: -9.000936508178711
    5. '[' → logprob: -9.250936508178711
    6. ':' → logprob: -9.375936508178711
    7. ' for' → logprob: -10.375936508178711
    8. '	for' → logprob: -10.375936508178711
    9. '[
' → logprob: -10.500936508178711
    10. '```' → logprob: -10.500936508178711

Token 267: ' ms' (ID: 15217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26719382405281067
    2. '   ' → logprob: -3.0171937942504883
    3. 'results' → logprob: -3.1421937942504883
    4. 'colors' → logprob: -3.5171937942504883
    5. 'result' → logprob: -3.7671937942504883
    6. 'answers' → logprob: -3.7671937942504883
    7. 'res' → logprob: -3.8921937942504883
    8. 'edges' → logprob: -4.642193794250488
    9. 'color' → logprob: -4.767193794250488
    10. 'ans' → logprob: -4.892193794250488

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8938535451889038
    2. ' =' → logprob: -1.0188535451889038
    3. 'g' → logprob: -1.5188535451889038
    4. 'for' → logprob: -5.018853664398193
    5. '   ' → logprob: -6.143853664398193
    6. ' ' → logprob: -6.893853664398193
    7. 'gs' → logprob: -8.018853187561035
    8. 'def' → logprob: -8.393853187561035
    9. ',' → logprob: -9.268853187561035
    10. 'sg' → logprob: -9.393853187561035

Token 269: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.585461437702179
    2. '[]' → logprob: -0.835461437702179
    3. '[int' → logprob: -5.710461616516113
    4. '[]
' → logprob: -5.960461616516113
    5. '[input' → logprob: -5.960461616516113
    6. 'read' → logprob: -7.335461616516113
    7. ' []' → logprob: -9.460461616516113
    8. ' [' → logprob: -9.835461616516113
    9. '[m' → logprob: -9.960461616516113
    10. '[i' → logprob: -10.460461616516113

Token 270: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7446650862693787
    2. '   ' → logprob: -0.8696650862693787
    3. 'for' → logprob: -2.8696651458740234
    4. '	for' → logprob: -3.2446651458740234
    5. '
' → logprob: -4.619665145874023
    6. '    
' → logprob: -8.619665145874023
    7. '  
' → logprob: -9.869665145874023
    8. ' 
' → logprob: -10.244665145874023
    9. '<|end|>' → logprob: -10.244665145874023
    10. 'def' → logprob: -10.369665145874023

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001096403575502336
    2. '   ' → logprob: -6.876096248626709
    3. ' for' → logprob: -9.876096725463867
    4. 'colors' → logprob: -12.001096725463867
    5. 'results' → logprob: -13.376096725463867
    6. 'queries' → logprob: -13.376096725463867
    7. 'edges' → logprob: -13.876096725463867
    8. 'answers' → logprob: -14.751096725463867
    9. 'm' → logprob: -15.126096725463867
    10. 'result' → logprob: -15.751096725463867

Token 272: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006103330524638295
    2. '_i' → logprob: -7.5006103515625
    3. ' _' → logprob: -10.0006103515625
    4. '_j' → logprob: -12.0006103515625
    5. 'i' → logprob: -12.7506103515625
    6. '__' → logprob: -14.0006103515625
    7. '_=' → logprob: -14.1256103515625
    8. '_k' → logprob: -14.6256103515625
    9. '_in' → logprob: -15.5006103515625
    10. '_]' → logprob: -16.0006103515625

Token 273: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3983921706676483
    2. 'range' → logprob: -1.1483922004699707
    3. ' in' → logprob: -4.898392200469971
    4. ' range' → logprob: -6.523392200469971
    5. '   ' → logprob: -7.023392200469971
    6. 'ange' → logprob: -7.148392200469971
    7. 'm' → logprob: -7.773392200469971
    8. ' ' → logprob: -9.023391723632812
    9. '  ' → logprob: -9.023391723632812
    10. 'process' → logprob: -10.148391723632812

Token 274: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4378848391061183e-05
    2. ' range' → logprob: -11.500014305114746
    3. 'm' → logprob: -12.625014305114746
    4. 'read' → logprob: -15.250014305114746
    5. 'process' → logprob: -15.375014305114746
    6. 'in' → logprob: -16.125015258789062
    7. '(range' → logprob: -16.375015258789062
    8. 'input' → logprob: -16.625015258789062
    9. '   ' → logprob: -17.250015258789062
    10. 'ms' → logprob: -17.375015258789062

Token 275: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0006643029628321528
    2. ' (' → logprob: -7.625664234161377
    3. '(' → logprob: -8.875664710998535
    4. 'm' → logprob: -10.625664710998535
    5. ' m' → logprob: -11.375664710998535
    6. '	m' → logprob: -15.625664710998535
    7. ',m' → logprob: -15.750664710998535
    8. '(ms' → logprob: -15.750664710998535
    9. '(
' → logprob: -16.00066375732422
    10. '   ' → logprob: -16.37566375732422

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2531750798225403
    2. '):
' → logprob: -1.5031750202178955
    3. ')' → logprob: -7.128175258636475
    4. ':' → logprob: -8.378174781799316
    5. ',' → logprob: -9.628174781799316
    6. '   ' → logprob: -10.128174781799316
    7. ' ):' → logprob: -10.128174781799316
    8. '):
' → logprob: -10.753174781799316
    9. ' ):
' → logprob: -11.378174781799316
    10. '():
' → logprob: -11.628174781799316

Token 277: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014415701851248741
    2. 'a' → logprob: -5.264415740966797
    3. '       ' → logprob: -5.264415740966797
    4. 's' → logprob: -6.639415740966797
    5. 'q' → logprob: -6.639415740966797
    6. ' a' → logprob: -7.889415740966797
    7. ' s' → logprob: -8.139415740966797
    8. 'u' → logprob: -8.639415740966797
    9. 'm' → logprob: -9.014415740966797
    10. ' u' → logprob: -9.264415740966797

Token 278: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -1.1082124710083008
    2. 'x' → logprob: -1.2332124710083008
    3. 'a' → logprob: -1.4832124710083008
    4. 'p' → logprob: -2.608212471008301
    5. 'c' → logprob: -3.483212471008301
    6. 's' → logprob: -3.483212471008301
    7. 'q' → logprob: -5.233212471008301
    8. ' u' → logprob: -5.983212471008301
    9. 'l' → logprob: -6.358212471008301
    10. '   ' → logprob: -6.608212471008301

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000455340719781816
    2. ' ,' → logprob: -7.750455379486084
    3. ',v' → logprob: -11.000454902648926
    4. ',b' → logprob: -12.375454902648926
    5. ',u' → logprob: -13.250454902648926
    6. 'b' → logprob: -14.625454902648926
    7. '‌,' → logprob: -15.625454902648926
    8. ',a' → logprob: -15.875454902648926
    9. '_,' → logprob: -15.875454902648926
    10. 's' → logprob: -16.250455856323242

Token 280: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.009763291105628014
    2. ' v' → logprob: -4.634763240814209
    3. '	v' → logprob: -13.134763717651367
    4. ' ' → logprob: -14.134763717651367
    5. 'vv' → logprob: -14.134763717651367
    6. 'w' → logprob: -14.259763717651367
    7. 'u' → logprob: -14.634763717651367
    8. 'x' → logprob: -14.759763717651367
    9. '_v' → logprob: -14.759763717651367
    10. 'k' → logprob: -15.009763717651367

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026170551776886
    2. ' =' → logprob: -1.9102617502212524
    3. ',' → logprob: -11.285262107849121
    4. ')' → logprob: -11.660262107849121
    5. '<|end|>' → logprob: -12.535262107849121
    6. ')=' → logprob: -13.285262107849121
    7. '=query' → logprob: -13.535262107849121
    8. ' ' → logprob: -13.785262107849121
    9. 'a' → logprob: -13.910262107849121
    10. '   ' → logprob: -14.160262107849121

Token 282: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0059287971816957
    2. ' read' → logprob: -5.130928993225098
    3. '_read' → logprob: -16.25592803955078
    4. '	read' → logprob: -16.88092803955078
    5. '   ' → logprob: -17.38092803955078
    6. ' ' → logprob: -17.88092803955078
    7. '
' → logprob: -18.00592803955078
    8. '(read' → logprob: -18.25592803955078
    9. 'input' → logprob: -18.88092803955078
    10. 're' → logprob: -19.38092803955078

Token 283: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.0002439467643853277
    2. 'query' → logprob: -8.375244140625
    3. '_m' → logprob: -12.875244140625
    4. '()' → logprob: -13.125244140625
    5. '_p' → logprob: -13.875244140625
    6. 'p' → logprob: -14.000244140625
    7. 'u' → logprob: -14.125244140625
    8. 'm' → logprob: -14.375244140625
    9. 'Query' → logprob: -14.500244140625
    10. '_input' → logprob: -14.625244140625

Token 284: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19030283391475677
    2. '()' → logprob: -2.190302848815918
    3. ')' → logprob: -3.190302848815918
    4. '()
' → logprob: -4.690302848815918
    5. ',' → logprob: -4.940302848815918
    6. '   ' → logprob: -6.815302848815918
    7. '<|end|>' → logprob: -7.315302848815918
    8. '(' → logprob: -8.190302848815918
    9. ')
' → logprob: -8.190302848815918
    10. '
' → logprob: -8.190302848815918

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003969455719925463
    2. '<|end|>' → logprob: -8.000396728515625
    3. '   ' → logprob: -10.500396728515625
    4. ',' → logprob: -11.750396728515625
    5. '        
' → logprob: -11.875396728515625
    6. 's' → logprob: -12.500396728515625
    7. ')' → logprob: -13.125396728515625
    8. ' ' → logprob: -13.500396728515625
    9. '<|end|>' → logprob: -13.500396728515625
    10. '	' → logprob: -13.625396728515625

Token 286: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' (adapté à ' ms') → logprob: -0.5728586912155151
    2. 'path' → logprob: -2.0728588104248047
    3. 'e' → logprob: -2.3228588104248047
    4. 'edges' → logprob: -3.1978588104248047
    5. 's' → logprob: -3.8228588104248047
    6. 'd' → logprob: -3.8228588104248047
    7. 'u' → logprob: -4.072858810424805
    8. '   ' → logprob: -4.072858810424805
    9. 'm' → logprob: -4.447858810424805
    10. 'q' → logprob: -4.697858810424805

Token 287: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009701794944703579
    2. '.' → logprob: -4.759701728820801
    3. ' =' → logprob: -7.134701728820801
    4. 's' → logprob: -9.1347017288208
    5. '=' → logprob: -9.8847017288208
    6. '.extend' → logprob: -10.2597017288208
    7. '.s' → logprob: -10.3847017288208
    8. '.push' → logprob: -10.6347017288208
    9. '.add' → logprob: -11.3847017288208
    10. '   ' → logprob: -11.3847017288208

Token 288: '(d' (ID: 2572)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.25540435314178467
    2. '(d' → logprob: -1.5054043531417847
    3. '(' → logprob: -6.505404472351074
    4. '(p' → logprob: -7.130404472351074
    5. '(set' → logprob: -7.380404472351074
    6. '([' → logprob: -9.005404472351074
    7. '(u' → logprob: -9.005404472351074
    8. '(((' → logprob: -9.380404472351074
    9. '({' → logprob: -10.505404472351074
    10. '(([' → logprob: -10.505404472351074

Token 289: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0008215418201871216
    2. '(fs' → logprob: -7.125821590423584
    3. '(' → logprob: -12.500821113586426
    4. ' fs' → logprob: -12.500821113586426
    5. 'sf' → logprob: -13.125821113586426
    6. '(f' → logprob: -13.625821113586426
    7. '(s' → logprob: -13.875821113586426
    8. 'FS' → logprob: -13.875821113586426
    9. 'efs' → logprob: -13.875821113586426
    10. 'f' → logprob: -14.000821113586426

Token 290: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.6312321753939614e-05
    2. '(' → logprob: -11.000036239624023
    3. '(ab' → logprob: -11.500036239624023
    4. '(p' → logprob: -11.625036239624023
    5. ')' → logprob: -15.375036239624023
    6. 'u' → logprob: -16.000036239624023
    7. '(
' → logprob: -17.125036239624023
    8. ' (' → logprob: -17.625036239624023
    9. ')(' → logprob: -18.250036239624023
    10. 'ab' → logprob: -18.250036239624023

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006325013004243374
    2. ',p' → logprob: -5.1313252449035645
    3. ' ,' → logprob: -8.006324768066406
    4. 'p' → logprob: -10.131324768066406
    5. ',
' → logprob: -11.131324768066406
    6. '(p' → logprob: -13.131324768066406
    7. ' p' → logprob: -13.256324768066406
    8. '
' → logprob: -13.881324768066406
    9. '0' → logprob: -14.256324768066406
    10. '(' → logprob: -14.256324768066406

Token 292: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011782010551542044
    2. ' p' → logprob: -6.75117826461792
    3. '   ' → logprob: -11.876177787780762
    4. ' ' → logprob: -15.126177787780762
    5. '
' → logprob: -15.751177787780762
    6. '  ' → logprob: -15.876177787780762
    7. '       ' → logprob: -16.501178741455078
    8. '	p' → logprob: -16.501178741455078
    9. '    ' → logprob: -16.751178741455078
    10. '           ' → logprob: -17.188678741455078

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012976066500414163
    2. ' ,' → logprob: -9.250129699707031
    3. 'ab' → logprob: -10.875129699707031
    4. ',
' → logprob: -12.125129699707031
    5. ')' → logprob: -12.625129699707031
    6. '),' → logprob: -13.000129699707031
    7. ' ab' → logprob: -13.750129699707031
    8. '(ab' → logprob: -14.500129699707031
    9. '))' → logprob: -14.875129699707031
    10. '`,' → logprob: -14.875129699707031

Token 294: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.02975199744105339
    2. ' ab' → logprob: -3.529752016067505
    3. '_ab' → logprob: -14.404751777648926
    4. '(ab' → logprob: -14.904751777648926
    5. 'abbr' → logprob: -16.154752731323242
    6. '
' → logprob: -16.279752731323242
    7. 'b' → logprob: -16.654752731323242
    8. ')' → logprob: -16.654752731323242
    9. 'abel' → logprob: -16.904752731323242
    10. '#ab' → logprob: -17.029752731323242

Token 295: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4745120406150818
    2. '))
' → logprob: -0.9745120406150818
    3. ')' → logprob: -8.474512100219727
    4. '))

' → logprob: -9.224512100219727
    5. '   ' → logprob: -9.724512100219727
    6. ')
' → logprob: -9.974512100219727
    7. ' ' → logprob: -11.474512100219727
    8. ' ))
' → logprob: -12.349512100219727
    9. '))
' → logprob: -12.724512100219727
    10. ' ))' → logprob: -13.349512100219727

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4882524907588959
    2. '
' → logprob: -0.9882525205612183
    3. 'return' → logprob: -4.988252639770508
    4. 'def' → logprob: -6.113252639770508
    5. '    
' → logprob: -6.613252639770508
    6. ' return' → logprob: -6.738252639770508
    7. '<|end|>' → logprob: -6.738252639770508
    8. '	return' → logprob: -8.113252639770508
    9. 'for' → logprob: -8.363252639770508
    10. ' ' → logprob: -8.988252639770508

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1831328272819519
    2. '   ' → logprob: -2.4331328868865967
    3. ' return' → logprob: -2.5581328868865967
    4. '
' → logprob: -6.308132648468018
    5. 'for' → logprob: -9.683133125305176
    6. 'def' → logprob: -9.808133125305176
    7. '	return' → logprob: -9.808133125305176
    8. ' ' → logprob: -10.308133125305176
    9. '```' → logprob: -10.558133125305176
    10. 'm' → logprob: -11.183133125305176

Token 298: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.0019291093340143561
    2. ' ms' → logprob: -6.25192928314209
    3. 'set' → logprob: -15.50192928314209
    4. 'm' → logprob: -16.376928329467773
    5. ' ' → logprob: -16.626928329467773
    6. ' set' → logprob: -17.001928329467773
    7. '	ms' → logprob: -17.251928329467773
    8. '(ms' → logprob: -17.376928329467773
    9. '[' → logprob: -18.751928329467773
    10. '   ' → logprob: -19.126928329467773

Token 299: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031615851912647486
    2. '<|end|>' → logprob: -8.625316619873047
    3. 'n' → logprob: -9.125316619873047
    4. 'm' → logprob: -11.625316619873047
    5. '#' → logprob: -12.250316619873047
    6. '```' → logprob: -12.500316619873047
    7. 'print' → logprob: -12.750316619873047
    8. '
' → logprob: -13.250316619873047
    9. 'from' → logprob: -13.750316619873047
    10. 'ndef' → logprob: -14.250316619873047

Token 300: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019048431422561407
    2. 'n' → logprob: -6.5019049644470215
    3. 'if' → logprob: -7.8769049644470215
    4. '#' → logprob: -11.126904487609863
    5. 'print' → logprob: -11.876904487609863
    6. '```' → logprob: -14.251904487609863
    7. 'ndef' → logprob: -15.376904487609863
    8. 'm' → logprob: -16.25190544128418
    9. '(n' → logprob: -16.50190544128418
    10. 'from' → logprob: -16.75190544128418

Token 301: ' count' (ID: 3605)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18285833299160004
    2. ' main' → logprob: -1.9328583478927612
    3. 'def' → logprob: -3.8078582286834717
    4. ' def' → logprob: -8.93285846710205
    5. '_main' → logprob: -10.30785846710205
    6. 'process' → logprob: -11.55785846710205
    7. '
' → logprob: -13.05785846710205
    8. '__' → logprob: -13.43285846710205
    9. ' process' → logprob: -13.68285846710205
    10. 'build' → logprob: -14.30785846710205

Token 302: '_bits' (ID: 48415)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.482758104801178
    2. '_edges' → logprob: -1.2327580451965332
    3. '_unique' → logprob: -3.482758045196533
    4. '_common' → logprob: -4.482758045196533
    5. '_' → logprob: -4.857758045196533
    6. '_sets' → logprob: -5.357758045196533
    7. '_color' → logprob: -5.357758045196533
    8. '_over' → logprob: -5.857758045196533
    9. '_occ' → logprob: -5.982758045196533
    10. '_max' → logprob: -5.982758045196533

Token 303: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4793120324611664
    2. '(num' → logprob: -1.6043120622634888
    3. '(' → logprob: -2.479311943054199
    4. '(x' → logprob: -2.729311943054199
    5. '(s' → logprob: -4.354311943054199
    6. '_set' → logprob: -4.854311943054199
    7. ' (' → logprob: -5.354311943054199
    8. '(number' → logprob: -6.479311943054199
    9. '(mask' → logprob: -6.729311943054199
    10. '(a' → logprob: -7.479311943054199

Token 304: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03526490181684494
    2. '):
' → logprob: -3.4102649688720703
    3. 's' → logprob: -7.41026496887207
    4. 'n' → logprob: -8.41026496887207
    5. ')' → logprob: -8.78526496887207
    6. ' ):' → logprob: -8.91026496887207
    7. '):
' → logprob: -8.91026496887207
    8. ',' → logprob: -9.03526496887207
    9. '   ' → logprob: -10.03526496887207
    10. ':' → logprob: -10.41026496887207

Token 305: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7947874069213867
    2. 'm' → logprob: -1.9197874069213867
    3. 'x' → logprob: -2.1697874069213867
    4. 'k' → logprob: -2.5447874069213867
    5. 'mask' → logprob: -2.7947874069213867
    6. ' n' → logprob: -2.9197874069213867
    7. 'l' → logprob: -3.0447874069213867
    8. 'bit' → logprob: -3.6697874069213867
    9. ' mask' → logprob: -3.9197874069213867
    10. ' x' → logprob: -4.044787406921387

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6169471144676208
    2. 'ask' → logprob: -1.1169471740722656
    3. '):
' → logprob: -2.2419471740722656
    4. ')' → logprob: -4.241947174072266
    5. 'asks' → logprob: -5.366947174072266
    6. 'sk' → logprob: -5.991947174072266
    7. ',' → logprob: -6.491947174072266
    8. 'asked' → logprob: -6.991947174072266
    9. 'ax' → logprob: -7.116947174072266
    10. '):

' → logprob: -7.866947174072266

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05246834456920624
    2. 'count' → logprob: -3.9274682998657227
    3. 'return' → logprob: -4.052468299865723
    4. 'c' → logprob: -4.552468299865723
    5. 'cnt' → logprob: -6.302468299865723
    6. ' return' → logprob: -7.552468299865723
    7. 's' → logprob: -7.802468299865723
    8. 'res' → logprob: -8.427468299865723
    9. ' count' → logprob: -9.052468299865723
    10. 'counts' → logprob: -9.677468299865723

Token 308: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4901563227176666
    2. 'count' → logprob: -1.1151562929153442
    3. '   ' → logprob: -3.615156412124634
    4. 'c' → logprob: -3.740156412124634
    5. 'cnt' → logprob: -5.365156173706055
    6. ' return' → logprob: -6.240156173706055
    7. 's' → logprob: -6.740156173706055
    8. 'res' → logprob: -7.615156173706055
    9. ' count' → logprob: -8.240156173706055
    10. 'r' → logprob: -9.240156173706055

Token 309: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.008955133147537708
    2. 'i' → logprob: -5.383955001831055
    3. '(bin' → logprob: -6.133955001831055
    4. '(i' → logprob: -6.758955001831055
    5. '[i' → logprob: -7.633955001831055
    6. ' bin' → logprob: -8.133955001831055
    7. '[' → logprob: -9.758955001831055
    8. 'm' → logprob: -10.008955001831055
    9. 'sum' → logprob: -10.133955001831055
    10. '(' → logprob: -10.633955001831055

Token 310: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001338454894721508
    2. '(m' → logprob: -6.626338481903076
    3. '(' → logprob: -11.501338005065918
    4. 'm' → logprob: -13.251338005065918
    5. '[i' → logprob: -15.001338005065918
    6. '((' → logprob: -16.001338958740234
    7. '(
' → logprob: -16.251338958740234
    8. 'i' → logprob: -17.126338958740234
    9. '(int' → logprob: -18.126338958740234
    10. ' (' → logprob: -18.376338958740234

Token 311: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6169593334197998
    2. '&' → logprob: -0.8669593334197998
    3. ' &' → logprob: -4.366959571838379
    4. '&m' → logprob: -4.491959571838379
    5. ')[' → logprob: -4.866959571838379
    6. ')' → logprob: -5.866959571838379
    7. ')&' → logprob: -5.866959571838379
    8. '&i' → logprob: -6.866959571838379
    9. '[' → logprob: -7.866959571838379
    10. '&gt' → logprob: -7.991959571838379

Token 312: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.008129963040119e-06
    2. 'bit' → logprob: -12.750003814697266
    3. 'z' → logprob: -14.000003814697266
    4. ' count' → logprob: -16.875003814697266
    5. '&' → logprob: -17.000003814697266
    6. 'c' → logprob: -17.125003814697266
    7. 'and' → logprob: -17.625003814697266
    8. 'xor' → logprob: -17.625003814697266
    9. '.count' → logprob: -17.875003814697266
    10. '```' → logprob: -18.000003814697266

Token 313: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04986416921019554
    2. '("' → logprob: -3.0498640537261963
    3. '(' → logprob: -6.674864292144775
    4. '1' → logprob: -11.424863815307617
    5. ''' → logprob: -13.424863815307617
    6. '"' → logprob: -14.549863815307617
    7. '(
' → logprob: -14.799863815307617
    8. '("("' → logprob: -16.674863815307617
    9. '('"' → logprob: -16.924863815307617
    10. '(\'' → logprob: -17.049863815307617

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. ''' → logprob: -9.000123977661133
    3. '"' → logprob: -14.625123977661133
    4. '`' → logprob: -18.375123977661133
    5. ' ' → logprob: -18.750123977661133
    6. ')' → logprob: -18.875123977661133
    7. '')' → logprob: -19.125123977661133
    8. '
' → logprob: -19.250123977661133
    9. '```' → logprob: -19.625123977661133
    10. '('' → logprob: -20.375123977661133

Token 315: '')

' (ID: 9735)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0223931223154068
    2. '')' → logprob: -4.022393226623535
    3. ')' → logprob: -5.647393226623535
    4. '())' → logprob: -7.272393226623535
    5. '('' → logprob: -11.772393226623535
    6. '(' → logprob: -13.522393226623535
    7. '()
' → logprob: -14.022393226623535
    8. '")' → logprob: -14.022393226623535
    9. '')
' → logprob: -14.647393226623535
    10. ''' → logprob: -14.897393226623535

Token 316: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027419927064329386
    2. '<|end|>' → logprob: -6.002741813659668
    3. '
' → logprob: -8.377741813659668
    4. '```' → logprob: -11.377741813659668
    5. ' def' → logprob: -12.127741813659668
    6. ')' → logprob: -12.127741813659668
    7. '#' → logprob: -12.377741813659668
    8. '<|end|>' → logprob: -12.627741813659668
    9. '

' → logprob: -13.002741813659668
    10. 'from' → logprob: -14.002741813659668

Token 317: ' combine' (ID: 21700)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5832074284553528
    2. 'process' → logprob: -1.833207368850708
    3. 'count' → logprob: -2.833207368850708
    4. 'solve' → logprob: -2.958207368850708
    5. 'find' → logprob: -3.458207368850708
    6. 'bit' → logprob: -3.708207368850708
    7. 'max' → logprob: -4.333207607269287
    8. 'def' → logprob: -4.333207607269287
    9. 'combine' → logprob: -4.333207607269287
    10. 'calculate' → logprob: -4.458207607269287

Token 318: '_sets' (ID: 56707)
  Prédit: '_masks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_masks' → logprob: -1.147524356842041
    2. '_bits' → logprob: -1.522524356842041
    3. '(' → logprob: -1.772524356842041
    4. '_sets' → logprob: -1.897524356842041
    5. '(a' → logprob: -3.022524356842041
    6. '_' → logprob: -4.022524356842041
    7. '_mask' → logprob: -4.522524356842041
    8. '_edges' → logprob: -4.897524356842041
    9. '_colors' → logprob: -5.147524356842041
    10. '(i' → logprob: -5.272524356842041

Token 319: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7091279029846191
    2. '(s' → logprob: -0.9591279029846191
    3. '(' → logprob: -2.209127902984619
    4. '(set' → logprob: -4.459127902984619
    5. '(*' → logprob: -5.959127902984619
    6. '(se' → logprob: -8.584127426147461
    7. '(m' → logprob: -8.959127426147461
    8. '(ms' → logprob: -9.084127426147461
    9. '(ss' → logprob: -9.459127426147461
    10. '(sa' → logprob: -10.459127426147461

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020004991441965103
    2. ' ,' → logprob: -4.020005226135254
    3. 's' → logprob: -7.020005226135254
    4. ',s' → logprob: -7.770005226135254
    5. ',j' → logprob: -8.395005226135254
    6. '1' → logprob: -9.145005226135254
    7. ' s' → logprob: -9.770005226135254
    8. ',set' → logprob: -10.270005226135254
    9. '):' → logprob: -10.895005226135254
    10. ',n' → logprob: -11.020005226135254

Token 321: ' m' (ID: 284)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6641252636909485
    2. 'j' → logprob: -0.7891252636909485
    3. ' s' → logprob: -4.664125442504883
    4. 's' → logprob: -5.164125442504883
    5. ' m' → logprob: -5.664125442504883
    6. 'm' → logprob: -5.789125442504883
    7. 'ms' → logprob: -5.914125442504883
    8. ' sets' → logprob: -5.914125442504883
    9. ' ms' → logprob: -6.664125442504883
    10. ' ' → logprob: -7.789125442504883

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16798387467861176
    2. '):' → logprob: -1.917983889579773
    3. ' ,' → logprob: -5.4179840087890625
    4. ' ):' → logprob: -6.5429840087890625
    5. ')' → logprob: -6.7929840087890625
    6. '):
' → logprob: -8.167984008789062
    7. ',s' → logprob: -8.917984008789062
    8. 's' → logprob: -9.292984008789062
    9. '1' → logprob: -10.292984008789062
    10. '   ' → logprob: -11.042984008789062

Token 323: ' ms' (ID: 15217)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1206130981445312
    2. 'ms' → logprob: -1.2456130981445312
    3. ' s' → logprob: -2.7456130981445312
    4. 'sets' → logprob: -2.8706130981445312
    5. ' sets' → logprob: -3.1206130981445312
    6. 'j' → logprob: -3.1206130981445312
    7. ' ms' → logprob: -3.6206130981445312
    8. 'm' → logprob: -3.7456130981445312
    9. 'a' → logprob: -4.120613098144531
    10. 'n' → logprob: -4.495613098144531

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06912409514188766
    2. '):
' → logprob: -3.0691239833831787
    3. ',' → logprob: -3.9441239833831787
    4. ' ):' → logprob: -7.819124221801758
    5. ')' → logprob: -7.944124221801758
    6. '   ' → logprob: -9.819124221801758
    7. '):
' → logprob: -9.819124221801758
    8. '):

' → logprob: -10.819124221801758
    9. ' ,' → logprob: -10.944124221801758
    10. '[]):' → logprob: -11.444124221801758

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773338735103607
    2. ' s' → logprob: -2.4773337841033936
    3. ' res' → logprob: -2.8523337841033936
    4. 's' → logprob: -2.8523337841033936
    5. 'res' → logprob: -2.9773337841033936
    6. 'r' → logprob: -3.4773337841033936
    7. 'result' → logprob: -3.4773337841033936
    8. ' result' → logprob: -3.6023337841033936
    9. ' r' → logprob: -4.227334022521973
    10. ' ans' → logprob: -4.477334022521973

Token 326: ' a' (ID: 261)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7226099371910095
    2. 's' → logprob: -1.8476099967956543
    3. 'result' → logprob: -2.2226099967956543
    4. 'r' → logprob: -3.0976099967956543
    5. 'ans' → logprob: -3.0976099967956543
    6. 'ret' → logprob: -3.0976099967956543
    7. 'x' → logprob: -4.097609996795654
    8. 'c' → logprob: -4.472609996795654
    9. 'tmp' → logprob: -4.472609996795654
    10. '   ' → logprob: -4.972609996795654

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30361059308052063
    2. '=' → logprob: -1.5536105632781982
    3. 'ns' → logprob: -3.1786105632781982
    4. 'll' → logprob: -5.928610801696777
    5. 's' → logprob: -6.428610801696777
    6. ',' → logprob: -7.303610801696777
    7. 'b' → logprob: -7.428610801696777
    8. 'nd' → logprob: -7.553610801696777
    9. 'ms' → logprob: -7.928610801696777
    10. 'ss' → logprob: -8.428610801696777

Token 328: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.43576428294181824
    2. '0' → logprob: -1.4357643127441406
    3. 'ms' → logprob: -2.9357643127441406
    4. '[' → logprob: -3.6857643127441406
    5. '{' → logprob: -4.435764312744141
    6. ' set' → logprob: -4.935764312744141
    7. 'm' → logprob: -5.060764312744141
    8. '[]
' → logprob: -5.810764312744141
    9. '[]' → logprob: -6.435764312744141
    10. ' ' → logprob: -6.685764312744141

Token 329: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14476007223129272
    2. '()
' → logprob: -2.0197601318359375
    3. '(ms' → logprob: -6.5197601318359375
    4. '()
' → logprob: -7.7697601318359375
    5. '()

' → logprob: -9.394760131835938
    6. '()\' → logprob: -10.519760131835938
    7. '(range' → logprob: -10.769760131835938
    8. '(' → logprob: -11.519760131835938
    9. '()`' → logprob: -11.769760131835938
    10. '().' → logprob: -12.269760131835938

Token 330: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6106654405593872
    2. '   ' → logprob: -0.8606654405593872
    3. ' for' → logprob: -3.4856653213500977
    4. '	for' → logprob: -5.735665321350098
    5. '
' → logprob: -8.860665321350098
    6. ' ' → logprob: -9.610665321350098
    7. '    
' → logprob: -10.610665321350098
    8. '  ' → logprob: -11.360665321350098
    9. 'a' → logprob: -12.610665321350098
    10. '       ' → logprob: -12.860665321350098

Token 331: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022535098833031952
    2. '   ' → logprob: -8.625225067138672
    3. ' for' → logprob: -10.125225067138672
    4. 'a' → logprob: -13.250225067138672
    5. 'f' → logprob: -14.125225067138672
    6. 'b' → logprob: -14.125225067138672
    7. 'if' → logprob: -14.375225067138672
    8. '
' → logprob: -14.625225067138672
    9. ' ' → logprob: -15.125225067138672
    10. '	for' → logprob: -15.250225067138672

Token 332: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10914614796638489
    2. 'x' → logprob: -3.1091461181640625
    3. 'k' → logprob: -3.6091461181640625
    4. 's' → logprob: -4.4841461181640625
    5. 'e' → logprob: -4.7341461181640625
    6. 'idx' → logprob: -6.1091461181640625
    7. ' j' → logprob: -6.1091461181640625
    8. 'm' → logprob: -6.4841461181640625
    9. 'i' → logprob: -6.7341461181640625
    10. 'b' → logprob: -7.1091461181640625

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07894101738929749
    2. 'in' → logprob: -2.5789411067962646
    3. ' ' → logprob: -10.328941345214844
    4. ',' → logprob: -11.453941345214844
    5. 'n' → logprob: -13.203941345214844
    6. 'import' → logprob: -14.203941345214844
    7. 'range' → logprob: -14.391441345214844
    8. '	in' → logprob: -14.453941345214844
    9. 'In' → logprob: -15.016441345214844
    10. ' ,' → logprob: -15.141441345214844

Token 334: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1370164453983307
    2. 'ms' → logprob: -2.762016534805298
    3. ' range' → logprob: -2.887016534805298
    4. 'm' → logprob: -4.762016296386719
    5. ' ms' → logprob: -7.762016296386719
    6. ' m' → logprob: -9.512016296386719
    7. '[' → logprob: -11.012016296386719
    8. 'r' → logprob: -11.449516296386719
    9. ' ' → logprob: -11.512016296386719
    10. '   ' → logprob: -11.824516296386719

Token 335: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.01955888234078884
    2. 'm' → logprob: -4.394558906555176
    3. '(len' → logprob: -5.019558906555176
    4. '(' → logprob: -8.394558906555176
    5. 'len' → logprob: -9.644558906555176
    6. ' (' → logprob: -10.269558906555176
    7. ' m' → logprob: -10.394558906555176
    8. '   ' → logprob: -10.644558906555176
    9. '(i' → logprob: -10.769558906555176
    10. '((' → logprob: -12.894558906555176

Token 336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05508369579911232
    2. '):' → logprob: -2.930083751678467
    3. ' ):
' → logprob: -9.055083274841309
    4. '):
' → logprob: -10.180083274841309
    5. ' ):' → logprob: -10.930083274841309
    6. '   ' → logprob: -10.930083274841309
    7. '+' → logprob: -12.055083274841309
    8. ')' → logprob: -13.055083274841309
    9. ',' → logprob: -14.055083274841309
    10. '):

' → logprob: -14.555083274841309

Token 337: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8066507577896118
    2. '       ' → logprob: -1.1816507577896118
    3. ' if' → logprob: -1.4316507577896118
    4. '   ' → logprob: -5.056650638580322
    5. 'a' → logprob: -6.931650638580322
    6. ' a' → logprob: -7.931650638580322
    7. '
' → logprob: -9.05665111541748
    8. '	if' → logprob: -10.30665111541748
    9. ' ' → logprob: -10.93165111541748
    10. '        
' → logprob: -11.18165111541748

Token 338: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0066240704618394375
    2. ' if' → logprob: -5.506624221801758
    3. 'a' → logprob: -6.506624221801758
    4. '   ' → logprob: -6.881624221801758
    5. ' a' → logprob: -11.256624221801758
    6. ' ' → logprob: -12.631624221801758
    7. '
' → logprob: -12.631624221801758
    8. '  ' → logprob: -13.756624221801758
    9. '    ' → logprob: -14.381624221801758
    10. '       ' → logprob: -15.006624221801758

Token 339: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20566588640213013
    2. ' (' → logprob: -2.2056658267974854
    3. 'i' → logprob: -3.0806658267974854
    4. ' i' → logprob: -3.7056658267974854
    5. '((' → logprob: -5.4556660652160645
    6. '(' → logprob: -7.8306660652160645
    7. ' ((' → logprob: -8.080665588378906
    8. ' ' → logprob: -9.080665588378906
    9. '   ' → logprob: -9.830665588378906
    10. '1' → logprob: -11.393165588378906

Token 340: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04530679062008858
    2. '(i' → logprob: -3.29530668258667
    3. ' i' → logprob: -5.04530668258667
    4. ' (' → logprob: -7.29530668258667
    5. '(' → logprob: -9.670307159423828
    6. '1' → logprob: -10.670307159423828
    7. '((' → logprob: -11.170307159423828
    8. '   ' → logprob: -11.795307159423828
    9. ' ' → logprob: -12.045307159423828
    10. ')i' → logprob: -13.670307159423828

Token 341: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.12459040433168411
    2. ' &' → logprob: -2.7495903968811035
    3. ' >>' → logprob: -3.2495903968811035
    4. '&' → logprob: -4.2495903968811035
    5. ' ' → logprob: -9.499590873718262
    6. ')' → logprob: -10.249590873718262
    7. ' ' → logprob: -12.124590873718262
    8. '&
' → logprob: -13.124590873718262
    9. ')&' → logprob: -13.499590873718262
    10. ' 
' → logprob: -13.749590873718262

Token 342: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007105246186256409
    2. ' j' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.375710487365723
    4. '1' → logprob: -16.75071144104004
    5. ' ' → logprob: -16.87571144104004
    6. '	j' → logprob: -18.62571144104004
    7. ')' → logprob: -19.00071144104004
    8. '(j' → logprob: -19.12571144104004
    9. '  ' → logprob: -20.00071144104004
    10. '
' → logprob: -20.00071144104004

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039504567394033074
    2. ')&' → logprob: -7.875394821166992
    3. ' )' → logprob: -11.125394821166992
    4. '&' → logprob: -15.750394821166992
    5. '）' → logprob: -17.375394821166992
    6. '   ' → logprob: -17.500394821166992
    7. ')
' → logprob: -19.000394821166992
    8. ']' → logprob: -19.375394821166992
    9. ' ' → logprob: -19.625394821166992
    10. '    ' → logprob: -19.625394821166992

Token 344: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.24239307641983032
    2. ')' → logprob: -1.7423930168151855
    3. ')&' → logprob: -3.2423930168151855
    4. ' &' → logprob: -6.8673930168151855
    5. ' )' → logprob: -10.867393493652344
    6. '&amp' → logprob: -11.242393493652344
    7. '&)' → logprob: -12.992393493652344
    8. '&
' → logprob: -13.117393493652344
    9. '1' → logprob: -13.367393493652344
    10. '   ' → logprob: -14.742393493652344

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.750140190124512
    4. '  ' → logprob: -17.687641143798828
    5. '

' → logprob: -17.812641143798828
    6. '
' → logprob: -17.875141143798828
    7. '(' → logprob: -18.125141143798828
    8. '```' → logprob: -18.250141143798828
    9. '１' → logprob: -18.562641143798828
    10. '' → logprob: -18.625141143798828

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '{' → logprob: -18.75001335144043
    5. '
' → logprob: -19.12501335144043
    6. '(' → logprob: -19.50001335144043
    7. '0' → logprob: -20.12501335144043
    8. '１' → logprob: -20.12501335144043
    9. '```' → logprob: -20.25001335144043
    10. '

' → logprob: -20.37501335144043

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019200526177883148
    2. ':
' → logprob: -4.769200325012207
    3. '):' → logprob: -5.269200325012207
    4. '==' → logprob: -5.394200325012207
    5. '):
' → logprob: -8.269200325012207
    6. ' ==' → logprob: -8.519200325012207
    7. ')==' → logprob: -8.519200325012207
    8. ')' → logprob: -8.894200325012207
    9. '1' → logprob: -10.769200325012207
    10. '=' → logprob: -12.019200325012207

Token 348: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4474444091320038
    2. ':' → logprob: -1.4474444389343262
    3. 'ms' → logprob: -2.572444438934326
    4. '==' → logprob: -4.072444438934326
    5. '1' → logprob: -4.447444438934326
    6. ' ms' → logprob: -4.572444438934326
    7. '):
' → logprob: -5.322444438934326
    8. '0' → logprob: -6.697444438934326
    9. ' ==' → logprob: -6.947444438934326
    10. ')' → logprob: -7.447444438934326

Token 349: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0003015001420862973
    2. ' a' → logprob: -8.125301361083984
    3. '  ' → logprob: -12.625301361083984
    4. '   ' → logprob: -13.250301361083984
    5. ' ' → logprob: -15.000301361083984
    6. '
' → logprob: -17.000301361083984
    7. '	a' → logprob: -17.000301361083984
    8. '_a' → logprob: -18.375301361083984
    9. '    ' → logprob: -18.500301361083984
    10. ' ' → logprob: -19.125301361083984

Token 350: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.26533105969429016
    2. '=' → logprob: -1.5153310298919678
    3. '.update' → logprob: -4.890331268310547
    4. ' |=' → logprob: -5.640331268310547
    5. 'update' → logprob: -6.515331268310547
    6. ' =' → logprob: -8.390331268310547
    7. '.' → logprob: -8.390331268310547
    8. ' ' → logprob: -8.765331268310547
    9. '.=' → logprob: -9.890331268310547
    10. '   ' → logprob: -10.765331268310547

Token 351: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.011048882268369198
    2. ' ms' → logprob: -4.511048793792725
    3. '(ms' → logprob: -14.761049270629883
    4. '	ms' → logprob: -14.886049270629883
    5. ' ' → logprob: -15.886049270629883
    6. 'm' → logprob: -16.386049270629883
    7. '   ' → logprob: -17.136049270629883
    8. '/ms' → logprob: -17.886049270629883
    9. '-ms' → logprob: -18.511049270629883
    10. '_ms' → logprob: -18.511049270629883

Token 352: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '[
' → logprob: -16.625
    4. '[m' → logprob: -17.0
    5. ' [' → logprob: -17.625
    6. '[i' → logprob: -19.0
    7. '
' → logprob: -19.375
    8. 'j' → logprob: -19.5
    9. '[js' → logprob: -19.75
    10. '[s' → logprob: -20.0

Token 353: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001288332510739565
    2. ']
' → logprob: -7.751288414001465
    3. '<|end|>' → logprob: -8.251288414001465
    4. ' ]' → logprob: -8.376288414001465
    5. ')' → logprob: -8.751288414001465
    6. '()]' → logprob: -8.876288414001465
    7. ')]' → logprob: -10.376288414001465
    8. ']()' → logprob: -11.001288414001465
    9. '])' → logprob: -12.626288414001465
    10. '']' → logprob: -12.751288414001465

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024437890388071537
    2. 'return' → logprob: -6.252443790435791
    3. ' return' → logprob: -7.877443790435791
    4. '
' → logprob: -9.002443313598633
    5. ' ' → logprob: -11.877443313598633
    6. '       ' → logprob: -12.627443313598633
    7. '  ' → logprob: -14.252443313598633
    8. '    
' → logprob: -14.502443313598633
    9. 'def' → logprob: -14.627443313598633
    10. '	return' → logprob: -15.002443313598633

Token 355: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07088937610387802
    2. '   ' → logprob: -3.070889472961426
    3. ' return' → logprob: -3.820889472961426
    4. ' ' → logprob: -9.320889472961426
    5. '	return' → logprob: -9.945889472961426
    6. '  ' → logprob: -12.945889472961426
    7. '       ' → logprob: -13.195889472961426
    8. 'def' → logprob: -13.695889472961426
    9. '    
' → logprob: -13.820889472961426
    10. ':return' → logprob: -14.320889472961426

Token 356: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04858771339058876
    2. ' a' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.673587799072266
    4. 'set' → logprob: -15.798587799072266
    5. ' ' → logprob: -16.923587799072266
    6. '   ' → logprob: -17.173587799072266
    7. ' set' → logprob: -17.673587799072266
    8. '	a' → logprob: -17.673587799072266
    9. '
' → logprob: -17.798587799072266
    10. '(a' → logprob: -18.048587799072266

Token 357: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5498358607292175
    2. '<|end|>' → logprob: -1.0498359203338623
    3. '
' → logprob: -2.6748359203338623
    4. '

' → logprob: -5.674835681915283
    5. '<|end|>' → logprob: -7.924835681915283
    6. '```' → logprob: -9.174836158752441
    7. ' def' → logprob: -9.549836158752441
    8. '  
' → logprob: -11.299836158752441
    9. '#' → logprob: -11.674836158752441
    10. ')' → logprob: -11.799836158752441

Token 358: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00038956227945163846
    2. 'from' → logprob: -8.000389099121094
    3. '<|end|>' → logprob: -10.625389099121094
    4. 'n' → logprob: -11.000389099121094
    5. '#' → logprob: -12.125389099121094
    6. 'import' → logprob: -13.000389099121094
    7. 'm' → logprob: -13.375389099121094
    8. 'for' → logprob: -14.000389099121094
    9. '<|end|>' → logprob: -14.250389099121094
    10. '```' → logprob: -14.500389099121094

Token 359: ' process' (ID: 2273)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.005696177482605
    2. 'main' → logprob: -1.505696177482605
    3. 'count' → logprob: -2.1306962966918945
    4. 'solve' → logprob: -2.3806962966918945
    5. 'min' → logprob: -3.1306962966918945
    6. 'max' → logprob: -3.3806962966918945
    7. 'process' → logprob: -3.6306962966918945
    8. 'minimum' → logprob: -3.7556962966918945
    9. 'minimal' → logprob: -4.1306962966918945
    10. 'bit' → logprob: -4.6306962966918945

Token 360: '_mask' (ID: 21732)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04950663819909096
    2. '(' → logprob: -3.299506664276123
    3. '(n' → logprob: -5.299506664276123
    4. '_m' → logprob: -6.174506664276123
    5. '(i' → logprob: -6.549506664276123
    6. '_queries' → logprob: -6.674506664276123
    7. '_(' → logprob: -7.799506664276123
    8. 'm' → logprob: -8.549506187438965
    9. '_bits' → logprob: -8.799506187438965
    10. ' (' → logprob: -9.049506187438965

Token 361: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029630491510033607
    2. '(m' → logprob: -4.029630661010742
    3. '(' → logprob: -4.529630661010742
    4. '(mask' → logprob: -7.404630661010742
    5. '(n' → logprob: -11.654630661010742
    6. ' (' → logprob: -12.279630661010742
    7. '((' → logprob: -12.904630661010742
    8. '(s' → logprob: -13.154630661010742
    9. '(k' → logprob: -14.404630661010742
    10. '(I' → logprob: -14.779630661010742

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020425561524461955
    2. ' ,' → logprob: -8.750204086303711
    3. ',m' → logprob: -10.000204086303711
    4. 'm' → logprob: -16.00020408630371
    5. '   ' → logprob: -16.75020408630371
    6. ',i' → logprob: -17.00020408630371
    7. ',
' → logprob: -17.25020408630371
    8. '_,' → logprob: -17.37520408630371
    9. '):' → logprob: -17.50020408630371
    10. ')' → logprob: -18.75020408630371

Token 363: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10049574077129364
    2. ' m' → logprob: -2.3504958152770996
    3. 'ms' → logprob: -8.475495338439941
    4. 'n' → logprob: -10.225495338439941
    5. ' n' → logprob: -11.850495338439941
    6. ' ms' → logprob: -11.975495338439941
    7. 'mask' → logprob: -12.162995338439941
    8. ')' → logprob: -12.162995338439941
    9. ' ' → logprob: -12.412995338439941
    10. '   ' → logprob: -12.787995338439941

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.87501049041748
    3. '):' → logprob: -12.75001049041748
    4. ',m' → logprob: -15.00001049041748
    5. ')' → logprob: -15.75001049041748
    6. '   ' → logprob: -15.87501049041748
    7. ',
' → logprob: -15.87501049041748
    8. '):
' → logprob: -16.375011444091797
    9. '_,' → logprob: -18.375011444091797
    10. '‌,' → logprob: -18.625011444091797

Token 365: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.0028596781194210052
    2. ' ms' → logprob: -5.877859592437744
    3. 'm' → logprob: -10.127860069274902
    4. '   ' → logprob: -11.627860069274902
    5. 'ab' → logprob: -13.002860069274902
    6. ' ' → logprob: -14.252860069274902
    7. '	ms' → logprob: -14.627860069274902
    8. 'a' → logprob: -14.752860069274902
    9. ' m' → logprob: -14.877860069274902
    10. '
' → logprob: -15.377860069274902

Token 366: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10057627409696579
    2. '):
' → logprob: -2.350576162338257
    3. '):
' → logprob: -8.600576400756836
    4. ')' → logprob: -8.725576400756836
    5. '   ' → logprob: -11.225576400756836
    6. ',' → logprob: -12.350576400756836
    7. ' ):' → logprob: -12.725576400756836
    8. '):

' → logprob: -13.100576400756836
    9. ' ):
' → logprob: -15.725576400756836
    10. ':' → logprob: -16.100576400756836

Token 367: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3991652727127075
    2. 'ab' → logprob: -1.6491652727127075
    3. 'ms' → logprob: -2.649165153503418
    4. 'n' → logprob: -2.774165153503418
    5. 'a' → logprob: -3.024165153503418
    6. 'ans' → logprob: -3.024165153503418
    7. 'count' → logprob: -3.899165153503418
    8. 'k' → logprob: -3.899165153503418
    9. ' dp' → logprob: -4.274165153503418
    10. 'c' → logprob: -4.336665153503418

Token 368: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09613237529993057
    2. '):
' → logprob: -2.971132278442383
    3. '):' → logprob: -3.221132278442383
    4. ')' → logprob: -7.971132278442383
    5. '   ' → logprob: -10.096132278442383
    6. ' ,' → logprob: -10.096132278442383
    7. '):
' → logprob: -10.346132278442383
    8. '):

' → logprob: -11.221132278442383
    9. ' ):' → logprob: -12.096132278442383
    10. ',
' → logprob: -12.346132278442383

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013027634471654892
    2. ' res' → logprob: -4.763027667999268
    3. ' ans' → logprob: -7.263027667999268
    4. ' result' → logprob: -7.763027667999268
    5. 'res' → logprob: -7.888027667999268
    6. 'count' → logprob: -8.13802719116211
    7. ' s' → logprob: -8.26302719116211
    8. ' if' → logprob: -8.38802719116211
    9. ' count' → logprob: -8.38802719116211
    10. ' dp' → logprob: -8.38802719116211

Token 370: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26555201411247253
    2. 's' → logprob: -2.140552043914795
    3. '   ' → logprob: -3.640552043914795
    4. 'res' → logprob: -4.140552043914795
    5. 'c' → logprob: -4.640552043914795
    6. 'mask' → logprob: -4.640552043914795
    7. 'used' → logprob: -5.140552043914795
    8. 'comb' → logprob: -5.515552043914795
    9. 'b' → logprob: -5.640552043914795
    10. 'bits' → logprob: -5.765552043914795

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09264388680458069
    2. ' =' → logprob: -2.467643976211548
    3. '=set' → logprob: -6.092643737792969
    4. 'e' → logprob: -7.592643737792969
    5. '   ' → logprob: -8.842643737792969
    6. 'a' → logprob: -9.217643737792969
    7. ',' → logprob: -9.342643737792969
    8. '_=' → logprob: -9.717643737792969
    9. '_' → logprob: -9.967643737792969
    10. '=int' → logprob: -10.092643737792969

Token 372: ' ' (ID: 220)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0922522023320198
    2. '0' → logprob: -3.467252254486084
    3. 'len' → logprob: -3.592252254486084
    4. 'bin' → logprob: -4.092252254486084
    5. 'combine' → logprob: -5.217252254486084
    6. 'n' → logprob: -5.592252254486084
    7. 'sum' → logprob: -7.717252254486084
    8. '[' → logprob: -7.842252254486084
    9. 'int' → logprob: -8.092251777648926
    10. '[]' → logprob: -8.217251777648926

Token 373: '0' (ID: 15)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11781428009271622
    2. 'len' → logprob: -3.117814302444458
    3. '0' → logprob: -3.492814302444458
    4. 'combine' → logprob: -4.117814064025879
    5. 'bin' → logprob: -4.617814064025879
    6. 'n' → logprob: -5.117814064025879
    7. 'sum' → logprob: -7.492814064025879
    8. '[' → logprob: -7.742814064025879
    9. 'set' → logprob: -7.867814064025879
    10. 'i' → logprob: -7.867814064025879

Token 374: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023063160479068756
    2. '   ' → logprob: -8.00230598449707
    3. ' 
' → logprob: -8.00230598449707
    4. '    
' → logprob: -8.00230598449707
    5. 'for' → logprob: -8.12730598449707
    6. ' for' → logprob: -8.12730598449707
    7. '
' → logprob: -8.37730598449707
    8. '  
' → logprob: -9.12730598449707
    9. '	
' → logprob: -9.12730598449707
    10. '	for' → logprob: -9.75230598449707

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5804675221443176
    2. '
' → logprob: -1.2054674625396729
    3. 'for' → logprob: -2.205467462539673
    4. ' for' → logprob: -3.955467462539673
    5. 'while' → logprob: -4.955467700958252
    6. ' while' → logprob: -6.830467700958252
    7. 'x' → logprob: -7.705467700958252
    8. 'b' → logprob: -7.705467700958252
    9. 'mask' → logprob: -8.080467224121094
    10. '    
' → logprob: -8.080467224121094

Token 376: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09896808862686157
    2. '   ' → logprob: -2.973968029022217
    3. 'a' (adapté à ' a') → logprob: -3.598968029022217
    4. 's' → logprob: -5.098968029022217
    5. 'mask' → logprob: -5.973968029022217
    6. 'while' → logprob: -6.348968029022217
    7. ' for' → logprob: -6.598968029022217
    8. 'combined' → logprob: -7.473968029022217
    9. 'current' → logprob: -7.973968029022217
    10. 'm' → logprob: -8.473968505859375

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31346702575683594
    2. ' =' → logprob: -1.313467025756836
    3. '=set' → logprob: -8.563467025756836
    4. ' ' → logprob: -11.813467025756836
    5. '_set' → logprob: -14.063467025756836
    6. ',' → logprob: -14.063467025756836
    7. 'a' → logprob: -14.063467025756836
    8. '+=' → logprob: -14.313467025756836
    9. 'set' → logprob: -14.313467025756836
    10. '=
' → logprob: -14.313467025756836

Token 378: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.32008838653564453
    2. 'combine' → logprob: -1.3200883865356445
    3. '[]' → logprob: -6.3200883865356445
    4. '{}' → logprob: -6.4450883865356445
    5. ' set' → logprob: -6.6950883865356445
    6. ' combine' → logprob: -6.9450883865356445
    7. '{' → logprob: -8.070088386535645
    8. '0' → logprob: -8.320088386535645
    9. '(set' → logprob: -9.070088386535645
    10. 'process' → logprob: -9.445088386535645

Token 379: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.11308519542217255
    2. '()' → logprob: -2.2380852699279785
    3. '()

' → logprob: -8.48808479309082
    4. '()
' → logprob: -10.23808479309082
    5. '(com' → logprob: -11.36308479309082
    6. '(process' → logprob: -13.23808479309082
    7. '(),' → logprob: -13.73808479309082
    8. 'def' → logprob: -13.98808479309082
    9. '(' → logprob: -14.23808479309082
    10. 'combine' → logprob: -14.36308479309082

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3380563259124756
    2. '
' → logprob: -2.0880563259124756
    3. 'for' → logprob: -2.4630563259124756
    4. ' for' → logprob: -2.7130563259124756
    5. ' 
' → logprob: -5.588056564331055
    6. '<|end|>' → logprob: -5.838056564331055
    7. '    
' → logprob: -6.213056564331055
    8. ' ' → logprob: -6.713056564331055
    9. '	for' → logprob: -7.963056564331055
    10. '  
' → logprob: -8.088056564331055

Token 381: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04562913626432419
    2. '   ' → logprob: -3.1706290245056152
    3. 'while' → logprob: -6.295629024505615
    4. ' for' → logprob: -7.170629024505615
    5. '
' → logprob: -12.170629501342773
    6. '	for' → logprob: -12.420629501342773
    7. ' while' → logprob: -13.420629501342773
    8. 'def' → logprob: -13.670629501342773
    9. '       ' → logprob: -14.670629501342773
    10. ' ' → logprob: -15.045629501342773

Token 382: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00028052396373823285
    2. ' j' → logprob: -8.500280380249023
    3. 'x' → logprob: -10.500280380249023
    4. '_j' → logprob: -11.125280380249023
    5. 'p' → logprob: -11.500280380249023
    6. 'l' → logprob: -12.250280380249023
    7. 'k' → logprob: -12.750280380249023
    8. 'v' → logprob: -13.000280380249023
    9. 'i' → logprob: -13.125280380249023
    10. 'b' → logprob: -13.625280380249023

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365446254611015
    2. 'in' → logprob: -3.4086544513702393
    3. ' ' → logprob: -12.03365421295166
    4. '	in' → logprob: -14.28365421295166
    5. 'range' → logprob: -15.03365421295166
    6. '   ' → logprob: -15.03365421295166
    7. '  ' → logprob: -15.40865421295166
    8. '(' → logprob: -15.53365421295166
    9. 'import' → logprob: -15.53365421295166
    10. ',' → logprob: -15.78365421295166

Token 384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005940882954746485
    2. ' range' → logprob: -5.130940914154053
    3. '(range' → logprob: -12.130940437316895
    4. '   ' → logprob: -13.255940437316895
    5. ' ' → logprob: -13.755940437316895
    6. '(' → logprob: -14.255940437316895
    7. '	range' → logprob: -14.505940437316895
    8. 'ran' → logprob: -14.880940437316895
    9. '
' → logprob: -14.880940437316895
    10. '  ' → logprob: -14.880940437316895

Token 385: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0009536213474348187
    2. '(' → logprob: -7.750953674316406
    3. '(i' → logprob: -8.250953674316406
    4. '(n' → logprob: -9.500953674316406
    5. 'm' → logprob: -9.750953674316406
    6. '(range' → logprob: -9.750953674316406
    7. 'range' → logprob: -9.875953674316406
    8. '(k' → logprob: -12.375953674316406
    9. ' (' → logprob: -12.750953674316406
    10. '(a' → logprob: -13.000953674316406

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009421474300324917
    2. '):' → logprob: -4.884421348571777
    3. '+' → logprob: -6.884421348571777
    4. '   ' → logprob: -7.509421348571777
    5. ',' → logprob: -9.384421348571777
    6. '):
' → logprob: -10.009421348571777
    7. ':' → logprob: -10.384421348571777
    8. ':
' → logprob: -10.384421348571777
    9. ' ):
' → logprob: -11.134421348571777
    10. '       ' → logprob: -11.509421348571777

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019558717031031847
    2. ' if' → logprob: -6.751955986022949
    3. ',' → logprob: -7.876955986022949
    4. '   ' → logprob: -8.37695598602295
    5. 'if' → logprob: -9.12695598602295
    6. '     ' → logprob: -11.50195598602295
    7. '<|end|>' → logprob: -11.50195598602295
    8. ' ' → logprob: -11.87695598602295
    9. '```' → logprob: -12.00195598602295
    10. ':' → logprob: -12.00195598602295

Token 388: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46678727865219116
    2. 'if' (adapté à ' if') → logprob: -1.216787338256836
    3. '       ' → logprob: -2.591787338256836
    4. '   ' → logprob: -6.466787338256836
    5. ' ' → logprob: -8.591787338256836
    6. '	if' → logprob: -9.466787338256836
    7. '	' → logprob: -10.091787338256836
    8. '    ' → logprob: -10.591787338256836
    9. ',' → logprob: -11.216787338256836
    10. '     ' → logprob: -11.841787338256836

Token 389: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.048733048141002655
    2. '(i' → logprob: -3.0487329959869385
    3. ' ' → logprob: -8.92373275756836
    4. '   ' → logprob: -11.92373275756836
    5. '  ' → logprob: -12.54873275756836
    6. ' ((' → logprob: -14.17373275756836
    7. '(j' → logprob: -14.92373275756836
    8. '(' → logprob: -15.29873275756836
    9. '((' → logprob: -15.54873275756836
    10. ' not' → logprob: -15.67373275756836

Token 390: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0203261598944664
    2. ' i' → logprob: -4.270326137542725
    3. '(i' → logprob: -5.270326137542725
    4. ' (' → logprob: -7.145326137542725
    5. '   ' → logprob: -9.020326614379883
    6. '(' → logprob: -10.395326614379883
    7. ' ' → logprob: -10.520326614379883
    8. '	i' → logprob: -11.895326614379883
    9. '  ' → logprob: -12.145326614379883
    10. ')i' → logprob: -12.770326614379883

Token 391: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.47457775473594666
    2. '>>' → logprob: -0.974577784538269
    3. ')' → logprob: -8.599577903747559
    4. ' ' → logprob: -9.099577903747559
    5. ' &' → logprob: -9.849577903747559
    6. ' >>=' → logprob: -10.224577903747559
    7. ')>>' → logprob: -10.349577903747559
    8. ' ' → logprob: -10.599577903747559
    9. '>' → logprob: -11.224577903747559
    10. '&' → logprob: -11.224577903747559

Token 392: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.026314932852983475
    2. ' j' → logprob: -3.6513149738311768
    3. '   ' → logprob: -11.401314735412598
    4. ' ' → logprob: -13.151314735412598
    5. '	j' → logprob: -14.901314735412598
    6. '(j' → logprob: -15.151314735412598
    7. '    ' → logprob: -15.776314735412598
    8. '  ' → logprob: -16.026315689086914
    9. ')' → logprob: -16.151315689086914
    10. ' ' → logprob: -16.401315689086914

Token 393: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009337326046079397
    2. ')&' → logprob: -7.000933647155762
    3. '&' → logprob: -11.000933647155762
    4. ' )' → logprob: -12.375933647155762
    5. 'j' → logprob: -14.875933647155762
    6. '')' → logprob: -15.625933647155762
    7. '   ' → logprob: -15.750933647155762
    8. '&)' → logprob: -16.000934600830078
    9. ')
' → logprob: -16.375934600830078
    10. '`)' → logprob: -16.625934600830078

Token 394: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.013144228607416153
    2. ' &' → logprob: -4.513144016265869
    3. ')&' → logprob: -6.263144016265869
    4. ')' → logprob: -9.013144493103027
    5. '&amp' → logprob: -9.888144493103027
    6. '   ' → logprob: -12.263144493103027
    7. '&)' → logprob: -12.888144493103027
    8. '&
' → logprob: -13.388144493103027
    9. '"&' → logprob: -13.513144493103027
    10. '       ' → logprob: -14.013144493103027

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00977273564785719
    2. ' ' → logprob: -4.634772777557373
    3. '   ' → logprob: -12.259772300720215
    4. '`' → logprob: -13.384772300720215
    5. 'j' → logprob: -13.509772300720215
    6. '(' → logprob: -13.572272300720215
    7. ' ' → logprob: -14.009772300720215
    8. '           ' → logprob: -14.197272300720215
    9. '```' → logprob: -14.447272300720215
    10. ')' → logprob: -14.572272300720215

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. 'j' → logprob: -14.625110626220703
    4. '0' → logprob: -15.687610626220703
    5. '   ' → logprob: -15.687610626220703
    6. '{' → logprob: -16.312610626220703
    7. '```' → logprob: -16.562610626220703
    8. '
' → logprob: -16.625110626220703
    9. '(' → logprob: -16.812610626220703
    10. '           ' → logprob: -17.312610626220703

Token 397: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37481167912483215
    2. ':
' → logprob: -1.3748116493225098
    3. '==' → logprob: -3.6248116493225098
    4. '           ' → logprob: -3.7498116493225098
    5. ' ==' → logprob: -4.74981164932251
    6. '):
' → logprob: -8.249812126159668
    7. '       ' → logprob: -9.124812126159668
    8. '=' → logprob: -9.124812126159668
    9. '):' → logprob: -9.249812126159668
    10. '          ' → logprob: -9.624812126159668

Token 398: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012512944638729095
    2. ' ' → logprob: -4.387513160705566
    3. '0' → logprob: -12.637513160705566
    4. '   ' → logprob: -17.76251220703125
    5. '=' → logprob: -18.38751220703125
    6. ' True' → logprob: -19.26251220703125
    7. '１' → logprob: -19.57501220703125
    8. ' ' → logprob: -19.63751220703125
    9. 'True' → logprob: -19.82501220703125
    10. '  ' → logprob: -19.88751220703125

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040862360037863255
    2. ' ' → logprob: -5.504086017608643
    3. '0' → logprob: -11.7540864944458
    4. 'True' → logprob: -19.004085540771484
    5. '=' → logprob: -19.504085540771484
    6. '   ' → logprob: -19.504085540771484
    7. ' True' → logprob: -19.504085540771484
    8. ' ' → logprob: -19.816585540771484
    9. '

' → logprob: -20.441585540771484
    10. '  ' → logprob: -20.441585540771484

Token 400: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1004723608493805
    2. ':' → logprob: -2.3504724502563477
    3. '       ' → logprob: -8.975472450256348
    4. '):
' → logprob: -9.350472450256348
    5. ':
' → logprob: -10.850472450256348
    6. ':

' → logprob: -11.475472450256348
    7. '   ' → logprob: -11.850472450256348
    8. ' and' → logprob: -12.100472450256348
    9. '           ' → logprob: -12.725472450256348
    10. ' :
' → logprob: -12.975472450256348

Token 401: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5030120015144348
    2. '           ' → logprob: -1.50301194190979
    3. '       ' → logprob: -2.25301194190979
    4. ':' → logprob: -2.75301194190979
    5. ' and' → logprob: -6.628012180328369
    6. 'a' → logprob: -7.003012180328369
    7. ',' → logprob: -7.253012180328369
    8. ' a' → logprob: -8.128011703491211
    9. '):
' → logprob: -8.503011703491211
    10. '   ' → logprob: -9.128011703491211

Token 402: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3613834083080292
    2. ' a' → logprob: -1.2363834381103516
    3. '           ' → logprob: -4.986383438110352
    4. '   ' → logprob: -5.736383438110352
    5. '       ' → logprob: -6.861383438110352
    6. 'k' (adapté à ' k') → logprob: -6.861383438110352
    7. ' k' → logprob: -8.111383438110352
    8. ' ' → logprob: -9.236383438110352
    9. '  ' → logprob: -10.423883438110352
    10. 's' → logprob: -10.548883438110352

Token 403: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03381650894880295
    2. ' +=' → logprob: -3.4088165760040283
    3. '|' → logprob: -8.90881633758545
    4. '=' → logprob: -11.03381633758545
    5. ',' → logprob: -12.40881633758545
    6. ' |=' → logprob: -12.53381633758545
    7. ' ^=' → logprob: -13.03381633758545
    8. ' ' → logprob: -13.15881633758545
    9. '^' → logprob: -13.28381633758545
    10. ']+=' → logprob: -13.40881633758545

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02105281874537468
    2. 'count' → logprob: -4.021052837371826
    3. 'len' → logprob: -5.896052837371826
    4. ' ' → logprob: -9.146052360534668
    5. ' count' → logprob: -11.396052360534668
    6. ' len' → logprob: -12.521052360534668
    7. 'sum' → logprob: -12.521052360534668
    8. '2' → logprob: -12.771052360534668
    9. '0' → logprob: -12.771052360534668
    10. 'bin' → logprob: -13.146052360534668

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00881677120923996
    2. 'count' → logprob: -4.883816719055176
    3. 'len' → logprob: -6.758816719055176
    4. 'n' → logprob: -11.508816719055176
    5. 'bin' → logprob: -11.633816719055176
    6. '(' → logprob: -11.883816719055176
    7. '2' → logprob: -12.133816719055176
    8. '0' → logprob: -12.633816719055176
    9. ' ' → logprob: -12.883816719055176
    10. 'sum' → logprob: -12.883816719055176

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2680939733982086
    2. '           ' → logprob: -1.5180939435958862
    3. '       ' → logprob: -5.018094062805176
    4. '
' → logprob: -5.518094062805176
    5. '   ' → logprob: -6.268094062805176
    6. ',' → logprob: -6.643094062805176
    7. '    
' → logprob: -7.768094062805176
    8. 'a' → logprob: -7.893094062805176
    9. '  
' → logprob: -8.393094062805176
    10. ' a' → logprob: -8.518094062805176

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4453963339328766
    2. '       ' → logprob: -1.6953963041305542
    3. '
' → logprob: -2.3203964233398438
    4. '   ' → logprob: -3.1953964233398438
    5. ' a' → logprob: -4.195396423339844
    6. 'a' → logprob: -4.570396423339844
    7. '
' → logprob: -6.070396423339844
    8. ' ' → logprob: -6.070396423339844
    9. ',' → logprob: -6.320396423339844
    10. '        
' → logprob: -6.945396423339844

Token 408: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.023641880601644516
    2. ' a' → logprob: -3.77364182472229
    3. '   ' → logprob: -8.273641586303711
    4. '           ' → logprob: -9.648641586303711
    5. '       ' → logprob: -9.898641586303711
    6. '    ' → logprob: -12.148641586303711
    7. ' ' → logprob: -12.148641586303711
    8. '	a' → logprob: -12.523641586303711
    9. '  ' → logprob: -13.023641586303711
    10. '
' → logprob: -13.148641586303711

Token 409: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.004095497075468302
    2. ' |=' → logprob: -5.504095554351807
    3. '=' → logprob: -11.629095077514648
    4. '|=
' → logprob: -12.254095077514648
    5. '.update' → logprob: -13.004095077514648
    6. ' ' → logprob: -15.129095077514648
    7. ' =' → logprob: -15.254095077514648
    8. ' ' → logprob: -15.379095077514648
    9. '```' → logprob: -16.75409507751465
    10. '.|' → logprob: -17.00409507751465

Token 410: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.061969365924596786
    2. ' ms' → logprob: -2.81196928024292
    3. '(ms' → logprob: -13.686969757080078
    4. '	ms' → logprob: -15.311969757080078
    5. '/ms' → logprob: -15.811969757080078
    6. ' ' → logprob: -16.686969757080078
    7. '-ms' → logprob: -17.061969757080078
    8. '_ms' → logprob: -17.186969757080078
    9. 'set' → logprob: -17.561969757080078
    10. 'ns' → logprob: -17.936969757080078

Token 411: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. '[
' → logprob: -15.625000953674316
    4. ' [' → logprob: -17.000001907348633
    5. '[k' → logprob: -17.000001907348633
    6. '
' → logprob: -17.500001907348633
    7. '[i' → logprob: -17.625001907348633
    8. '[m' → logprob: -17.750001907348633
    9. 'j' → logprob: -18.000001907348633
    10. '(j' → logprob: -18.750001907348633

Token 412: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29925891757011414
    2. ']' → logprob: -1.7992589473724365
    3. ')
' → logprob: -2.6742589473724365
    4. ']
' → logprob: -3.7992589473724365
    5. '])' → logprob: -7.549258708953857
    6. '   ' → logprob: -7.799258708953857
    7. '       ' → logprob: -7.924258708953857
    8. ')]' → logprob: -8.174259185791016
    9. ')return' → logprob: -9.549259185791016
    10. 'return' → logprob: -10.174259185791016

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06318487226963043
    2. '
' → logprob: -2.813184976577759
    3. '    
' → logprob: -7.43818473815918
    4. ' return' → logprob: -8.93818473815918
    5. 'return' → logprob: -9.31318473815918
    6. '<|end|>' → logprob: -9.56318473815918
    7. '
' → logprob: -9.68818473815918
    8. ' 
' → logprob: -9.93818473815918
    9. ' if' → logprob: -10.18818473815918
    10. '  
' → logprob: -10.18818473815918

Token 414: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7228838205337524
    2. ' if' → logprob: -1.3478838205337524
    3. ' return' → logprob: -1.7228838205337524
    4. 'return' → logprob: -3.347883701324463
    5. 'if' (adapté à ' if') → logprob: -3.347883701324463
    6. '
' → logprob: -6.222883701324463
    7. ' for' → logprob: -6.222883701324463
    8. ' ' → logprob: -7.222883701324463
    9. 'for' → logprob: -8.597884178161621
    10. ',' → logprob: -8.847884178161621

Token 415: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7611032128334045
    2. ' len' → logprob: -0.7611032128334045
    3. 'k' → logprob: -3.1361031532287598
    4. 'len' → logprob: -3.8861031532287598
    5. ' ' → logprob: -6.63610315322876
    6. ' a' → logprob: -8.761103630065918
    7. '(len' → logprob: -9.636103630065918
    8. ' (' → logprob: -10.261103630065918
    9. '  ' → logprob: -10.511103630065918
    10. ' not' → logprob: -10.698603630065918

Token 416: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8814815878868103
    2. '>' → logprob: -1.381481647491455
    3. ' <=' → logprob: -2.256481647491455
    4. '<=' → logprob: -2.631481647491455
    5. ' >=' → logprob: -3.131481647491455
    6. '>=' → logprob: -3.506481647491455
    7. '==' → logprob: -3.756481647491455
    8. ' <' → logprob: -3.881481647491455
    9. '<' → logprob: -4.006481647491455
    10. ' ==' → logprob: -4.256481647491455

Token 417: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06202941760420799
    2. ' ' → logprob: -2.8120293617248535
    3. '==' → logprob: -10.562029838562012
    4. '=' → logprob: -12.062029838562012
    5. '3' → logprob: -12.187029838562012
    6. '(' → logprob: -12.312029838562012
    7. ' ==' → logprob: -12.312029838562012
    8. '!=' → logprob: -12.312029838562012
    9. ' !=' → logprob: -12.687029838562012
    10. ' (' → logprob: -13.687029838562012

Token 418: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3596853831550106e-05
    2. ' ' → logprob: -10.125053405761719
    3. '3' → logprob: -12.875053405761719
    4. '4' → logprob: -13.375053405761719
    5. '7' → logprob: -13.875053405761719
    6. '10' → logprob: -14.000053405761719
    7. '1' → logprob: -14.187553405761719
    8. 'k' → logprob: -14.437553405761719
    9. '200' → logprob: -14.500053405761719
    10. '```' → logprob: -14.500053405761719

Token 419: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1279924362897873
    2. ' ==' → logprob: -2.1279923915863037
    3. '!=' → logprob: -7.252992630004883
    4. ' !=' → logprob: -8.752992630004883
    5. '0' → logprob: -9.752992630004883
    6. ':' → logprob: -10.002992630004883
    7. '==
' → logprob: -10.627992630004883
    8. '=' → logprob: -10.877992630004883
    9. 'and' → logprob: -11.252992630004883
    10. '1' → logprob: -11.252992630004883

Token 420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17067037522792816
    2. '1' → logprob: -2.5456702709198
    3. ' ' → logprob: -2.5456702709198
    4. '2' → logprob: -9.920670509338379
    5. '   ' → logprob: -13.420670509338379
    6. 'k' → logprob: -13.483170509338379
    7. 'n' → logprob: -13.545670509338379
    8. '=' → logprob: -13.858170509338379
    9. ' n' → logprob: -14.420670509338379
    10. ' k' → logprob: -14.483170509338379

Token 421: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07978757470846176
    2. '1' → logprob: -2.829787492752075
    3. '2' → logprob: -4.079787731170654
    4. ' ' → logprob: -7.204787731170654
    5. '   ' → logprob: -13.329787254333496
    6. 'False' → logprob: -13.829787254333496
    7. '
' → logprob: -14.517287254333496
    8. '=' → logprob: -14.829787254333496
    9. '  ' → logprob: -14.892287254333496
    10. 'n' → logprob: -14.954787254333496

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7216150760650635
    2. ':
' → logprob: -0.7216150760650635
    3. ' and' → logprob: -3.8466150760650635
    4. ':return' → logprob: -5.971614837646484
    5. '       ' → logprob: -6.471614837646484
    6. '   ' → logprob: -6.596614837646484
    7. 'and' → logprob: -7.096614837646484
    8. ' or' → logprob: -8.346614837646484
    9. ':
' → logprob: -9.471614837646484
    10. ':

' → logprob: -9.846614837646484

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036014825105667114
    2. ':' → logprob: -4.161015033721924
    3. ' and' → logprob: -4.286015033721924
    4. ':
' → logprob: -5.411015033721924
    5. 'and' → logprob: -7.161015033721924
    6. ':return' → logprob: -8.411014556884766
    7. '   ' → logprob: -8.911014556884766
    8. '<|end|>' → logprob: -9.286014556884766
    9. ' or' → logprob: -9.786014556884766
    10. '):
' → logprob: -10.161014556884766

Token 424: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.044983990490436554
    2. '   ' → logprob: -3.5449841022491455
    3. '       ' → logprob: -4.794983863830566
    4. ' return' → logprob: -5.669983863830566
    5. 'n' → logprob: -6.044983863830566
    6. 'a' → logprob: -8.169983863830566
    7. 'if' → logprob: -8.294983863830566
    8. 'k' → logprob: -9.294983863830566
    9. '           ' → logprob: -9.544983863830566
    10. '	return' → logprob: -10.169983863830566

Token 425: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0566245317459106
    2. '0' → logprob: -1.4316245317459106
    3. 'len' → logprob: -1.5566245317459106
    4. 'set' → logprob: -2.431624412536621
    5. 'False' → logprob: -2.681624412536621
    6. 'a' → logprob: -4.181624412536621
    7. '(n' → logprob: -4.681624412536621
    8. 'True' → logprob: -5.056624412536621
    9. 'k' → logprob: -5.931624412536621
    10. '(' → logprob: -5.931624412536621

Token 426: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9589254856109619
    2. 'len' → logprob: -1.208925485610962
    3. 'count' → logprob: -1.833925485610962
    4. '0' → logprob: -3.458925485610962
    5. '2' → logprob: -3.708925485610962
    6. '(' → logprob: -3.708925485610962
    7. '(n' → logprob: -3.958925485610962
    8. 'False' → logprob: -4.333925247192383
    9. '1' → logprob: -4.833925247192383
    10. '-' → logprob: -5.083925247192383

Token 427: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3613373041152954
    2. '*n' → logprob: -2.486337184906006
    3. ' *' → logprob: -2.611337184906006
    4. '0' → logprob: -3.111337184906006
    5. '   ' → logprob: -3.486337184906006
    6. ' **' → logprob: -3.861337184906006
    7. '*' → logprob: -4.236337184906006
    8. '1' → logprob: -5.236337184906006
    9. ' ' → logprob: -5.236337184906006
    10. '
' → logprob: -5.361337184906006

Token 428: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29145559668540955
    2. '(n' → logprob: -1.416455626487732
    3. '(' → logprob: -5.2914557456970215
    4. '(len' → logprob: -6.5414557456970215
    5. 'k' → logprob: -6.6664557456970215
    6. '(k' → logprob: -7.1664557456970215
    7. 'len' → logprob: -7.5414557456970215
    8. '(a' → logprob: -7.9164557456970215
    9. 'a' → logprob: -9.166455268859863
    10. ' (' → logprob: -9.416455268859863

Token 429: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030508004128932953
    2. '(n' → logprob: -3.530508041381836
    3. 'len' → logprob: -7.655508041381836
    4. ' n' → logprob: -9.405508041381836
    5. '(' → logprob: -10.030508041381836
    6. '(len' → logprob: -10.030508041381836
    7. ' (' → logprob: -10.530508041381836
    8. 'max' → logprob: -10.780508041381836
    9. 'k' → logprob: -11.030508041381836
    10. 'm' → logprob: -11.655508041381836

Token 430: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.061705686151981354
    2. ' -' → logprob: -2.9367055892944336
    3. '-k' → logprob: -5.311705589294434
    4. ')' → logprob: -6.436705589294434
    5. '-l' → logprob: -9.061705589294434
    6. ' ' → logprob: -9.811705589294434
    7. '   ' → logprob: -10.561705589294434
    8. ')-' → logprob: -10.936705589294434
    9. ' )' → logprob: -11.311705589294434
    10. 'k' → logprob: -11.686705589294434

Token 431: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0020135752856731415
    2. ' len' → logprob: -6.502013683319092
    3. 'k' → logprob: -7.877013683319092
    4. '1' → logprob: -9.377013206481934
    5. '(len' → logprob: -10.752013206481934
    6. 'a' → logprob: -11.502013206481934
    7. ' ' → logprob: -12.002013206481934
    8. '	len' → logprob: -12.752013206481934
    9. '   ' → logprob: -13.002013206481934
    10. '  ' → logprob: -13.127013206481934

Token 432: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0008700100006535649
    2. 'k' → logprob: -7.250870227813721
    3. '1' → logprob: -9.500869750976562
    4. ' len' → logprob: -10.000869750976562
    5. 'a' → logprob: -10.625869750976562
    6. '(len' → logprob: -11.625869750976562
    7. ' ' → logprob: -12.625869750976562
    8. '	len' → logprob: -14.125869750976562
    9. '   ' → logprob: -14.375869750976562
    10. '2' → logprob: -14.500869750976562

Token 433: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6341526508331299
    2. '-' → logprob: -0.7591526508331299
    3. '-k' → logprob: -7.259152412414551
    4. ')' → logprob: -7.384152412414551
    5. ' ' → logprob: -8.50915241241455
    6. '  ' → logprob: -11.50915241241455
    7. '   ' → logprob: -12.50915241241455
    8. ')-' → logprob: -12.75915241241455
    9. ' )' → logprob: -13.13415241241455
    10. '-)' → logprob: -13.50915241241455

Token 434: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004521222144830972
    2. ' len' → logprob: -7.750452041625977
    3. 'k' → logprob: -11.375452041625977
    4. '(len' → logprob: -11.625452041625977
    5. ' ' → logprob: -15.375452041625977
    6. '   ' → logprob: -15.750452041625977
    7. 'count' → logprob: -16.000452041625977
    8. '	len' → logprob: -16.250452041625977
    9. 'bin' → logprob: -16.500452041625977
    10. '
' → logprob: -16.625452041625977

Token 435: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.000005722045898
    4. '(
' → logprob: -16.5000057220459
    5. 'a' → logprob: -17.1250057220459
    6. '(ab' → logprob: -18.3750057220459
    7. '(s' → logprob: -19.1250057220459
    8. '(A' → logprob: -19.8750057220459
    9. '((' → logprob: -20.0000057220459
    10. '```' → logprob: -20.6250057220459

Token 436: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011695112101733685
    2. ')' → logprob: -4.51169490814209
    3. ')))' → logprob: -7.63669490814209
    4. '))
' → logprob: -9.26169490814209
    5. ')}' → logprob: -10.76169490814209
    6. ' ))' → logprob: -11.88669490814209
    7. '))-' → logprob: -11.88669490814209
    8. '})' → logprob: -12.51169490814209
    9. '))

' → logprob: -12.51169490814209
    10. '()))' → logprob: -12.76169490814209

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008937999606132507
    2. 'else' → logprob: -4.758937835693359
    3. ' else' → logprob: -8.63393783569336
    4. 'return' → logprob: -9.50893783569336
    5. 'elif' → logprob: -9.75893783569336
    6. '<|end|>' → logprob: -12.13393783569336
    7. '	else' → logprob: -12.75893783569336
    8. '       ' → logprob: -13.63393783569336
    9. 'def' → logprob: -13.75893783569336
    10. ' return' → logprob: -14.38393783569336

Token 438: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.028171025216579437
    2. 'return' → logprob: -3.7781710624694824
    3. ' else' → logprob: -5.528171062469482
    4. 'elif' (adapté à ' elif') → logprob: -7.153171062469482
    5. '   ' → logprob: -9.028170585632324
    6. ' return' → logprob: -10.278170585632324
    7. ' ' → logprob: -13.403170585632324
    8. ' elif' → logprob: -14.153170585632324
    9. '	else' → logprob: -15.653170585632324
    10. 'eturn' → logprob: -15.653170585632324

Token 439: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11473370343446732
    2. ' k' → logprob: -2.2397336959838867
    3. 'i' → logprob: -7.364733695983887
    4. ' i' → logprob: -7.489733695983887
    5. '   ' → logprob: -8.739733695983887
    6. 'len' → logprob: -8.989733695983887
    7. ' ' → logprob: -9.614733695983887
    8. 'm' → logprob: -9.989733695983887
    9. ' len' → logprob: -9.989733695983887
    10. '0' → logprob: -10.114733695983887

Token 440: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1815447062253952
    2. ' ==' → logprob: -1.8065446615219116
    3. '>' → logprob: -6.681544780731201
    4. ' >' → logprob: -7.806544780731201
    5. '=' → logprob: -9.931544303894043
    6. ' ' → logprob: -10.181544303894043
    7. '%' → logprob: -10.931544303894043
    8. '[' → logprob: -12.056544303894043
    9. ' ' → logprob: -12.181544303894043
    10. '==
' → logprob: -12.806544303894043

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021861877758055925
    2. ' ' → logprob: -6.127186298370361
    3. '1' → logprob: -14.627185821533203
    4. '2' → logprob: -15.002185821533203
    5. '   ' → logprob: -16.439685821533203
    6. '  ' → logprob: -16.689685821533203
    7. '=' → logprob: -16.689685821533203
    8. ' ' → logprob: -17.252185821533203
    9. '    ' → logprob: -17.314685821533203
    10. '۰' → logprob: -17.877185821533203

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020950057660229504
    2. ' ' → logprob: -8.50020980834961
    3. '1' → logprob: -12.75020980834961
    4. '2' → logprob: -13.25020980834961
    5. 'k' → logprob: -14.50020980834961
    6. '   ' → logprob: -16.50020980834961
    7. '```' → logprob: -16.56270980834961
    8. 'n' → logprob: -16.68770980834961
    9. 'm' → logprob: -17.31270980834961
    10. '...' → logprob: -17.37520980834961

Token 443: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0895189493894577
    2. ':' → logprob: -2.4645190238952637
    3. ':return' → logprob: -8.214518547058105
    4. '       ' → logprob: -8.464518547058105
    5. ':

' → logprob: -10.214518547058105
    6. '   ' → logprob: -10.589518547058105
    7. ':
' → logprob: -10.589518547058105
    8. 'return' → logprob: -13.089518547058105
    9. ' :
' → logprob: -13.339518547058105
    10. '):
' → logprob: -13.464518547058105

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005118065746501088
    2. 'return' → logprob: -7.625511646270752
    3. ':
' → logprob: -11.25051212310791
    4. ' return' → logprob: -12.62551212310791
    5. ':' → logprob: -13.25051212310791
    6. '
' → logprob: -13.50051212310791
    7. '0' → logprob: -13.62551212310791
    8. ':return' → logprob: -14.00051212310791
    9. '           ' → logprob: -14.12551212310791
    10. '   ' → logprob: -14.50051212310791

Token 445: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0030800290405750275
    2. '       ' → logprob: -5.878079891204834
    3. ' return' → logprob: -8.253080368041992
    4. '   ' → logprob: -11.753080368041992
    5. '0' → logprob: -12.253080368041992
    6. '           ' → logprob: -14.503080368041992
    7. '
' → logprob: -14.753080368041992
    8. '	return' → logprob: -15.128080368041992
    9. 'from' → logprob: -15.753080368041992
    10. 'if' → logprob: -15.878080368041992

Token 446: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12408623844385147
    2. '2' → logprob: -2.2490861415863037
    3. '-' → logprob: -4.874086380004883
    4. '-(' → logprob: -6.749086380004883
    5. '1' → logprob: -6.874086380004883
    6. ' ' → logprob: -6.999086380004883
    7. '(' → logprob: -8.374086380004883
    8. ' -' → logprob: -9.124086380004883
    9. 'pow' → logprob: -10.124086380004883
    10. '   ' → logprob: -10.999086380004883

Token 447: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12137112766504288
    2. '2' → logprob: -2.621371030807495
    3. '(' → logprob: -3.621371030807495
    4. '0' → logprob: -4.746371269226074
    5. ' ' → logprob: -5.371371269226074
    6. 'float' → logprob: -8.121371269226074
    7. ' (' → logprob: -8.371371269226074
    8. 'int' → logprob: -8.496371269226074
    9. 'pow' → logprob: -8.996371269226074
    10. 'inf' → logprob: -9.246371269226074

Token 448: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.36385324597358704
    2. ' **' → logprob: -1.3638532161712646
    3. '(' → logprob: -3.3638532161712646
    4. ' (' → logprob: -5.613853454589844
    5. ' ' → logprob: -5.613853454589844
    6. '*(' → logprob: -6.863853454589844
    7. '   ' → logprob: -6.988853454589844
    8. '
' → logprob: -7.363853454589844
    9. '<|end|>' → logprob: -7.363853454589844
    10. '*' → logprob: -7.488853454589844

Token 449: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009725636919029057
    2. '(' → logprob: -7.250972747802734
    3. ' (' → logprob: -8.250972747802734
    4. '(
' → logprob: -13.750972747802734
    5. '((' → logprob: -15.500972747802734
    6. '(m' → logprob: -16.875972747802734
    7. 'n' → logprob: -17.000972747802734
    8. '(k' → logprob: -17.000972747802734
    9. '
' → logprob: -17.250972747802734
    10. '   ' → logprob: -17.375972747802734

Token 450: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5235298871994019
    2. 'n' → logprob: -0.8985298871994019
    3. '(' → logprob: -8.648530006408691
    4. ' (' → logprob: -9.148530006408691
    5. ' n' → logprob: -9.523530006408691
    6. '   ' → logprob: -11.148530006408691
    7. '{' → logprob: -11.398530006408691
    8. '
' → logprob: -11.648530006408691
    9. '(
' → logprob: -12.148530006408691
    10. ' ' → logprob: -12.773530006408691

Token 451: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011286195367574692
    2. ' -' → logprob: -4.51128625869751
    3. '   ' → logprob: -8.386285781860352
    4. ' ' → logprob: -13.136285781860352
    5. '(-' → logprob: -13.386285781860352
    6. '       ' → logprob: -13.386285781860352
    7. '(' → logprob: -13.511285781860352
    8. '    ' → logprob: -13.886285781860352
    9. '  ' → logprob: -14.261285781860352
    10. '-
' → logprob: -14.511285781860352

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006567967939190567
    2. '2' → logprob: -7.375656604766846
    3. ' ' → logprob: -10.500657081604004
    4. '   ' → logprob: -14.000657081604004
    5. 'len' → logprob: -14.000657081604004
    6. '
' → logprob: -15.125657081604004
    7. '3' → logprob: -15.688157081604004
    8. 'k' → logprob: -16.063156127929688
    9. '  ' → logprob: -16.563156127929688
    10. '```' → logprob: -16.875656127929688

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010426939697936177
    2. '2' → logprob: -6.87604284286499
    3. ' ' → logprob: -12.501042366027832
    4. 'len' → logprob: -13.001042366027832
    5. '
' → logprob: -13.251042366027832
    6. '   ' → logprob: -13.876042366027832
    7. 'k' → logprob: -15.563542366027832
    8. '3' → logprob: -15.876042366027832
    9. '```' → logprob: -16.00104331970215
    10. '

' → logprob: -16.12604331970215

Token 454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759987831115723
    2. '-' → logprob: -0.8259987831115723
    3. '-l' → logprob: -10.200998306274414
    4. ' ' → logprob: -10.825998306274414
    5. ')' → logprob: -13.825998306274414
    6. '   ' → logprob: -14.325998306274414
    7. '  ' → logprob: -15.450998306274414
    8. ' ' → logprob: -15.825998306274414
    9. '
' → logprob: -16.200998306274414
    10. ' len' → logprob: -16.950998306274414

Token 455: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015872348740231246
    2. ' len' → logprob: -8.750158309936523
    3. '(len' → logprob: -16.000158309936523
    4. '	len' → logprob: -16.875158309936523
    5. '   ' → logprob: -17.500158309936523
    6. '[len' → logprob: -18.250158309936523
    7. '  ' → logprob: -18.750158309936523
    8. ' ' → logprob: -18.750158309936523
    9. '    ' → logprob: -18.875158309936523
    10. '=len' → logprob: -19.500158309936523

Token 456: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.375
    3. '(' → logprob: -16.625
    4. ' (' → logprob: -19.0
    5. '(
' → logprob: -20.25
    6. '(A' → logprob: -20.75
    7. '((' → logprob: -22.0
    8. '(set' → logprob: -22.5
    9. '(ab' → logprob: -22.625
    10. '(i' → logprob: -23.0

Token 457: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062193091958761215
    2. ')
' → logprob: -2.8121931552886963
    3. '))' → logprob: -8.812192916870117
    4. ')
' → logprob: -9.937192916870117
    5. '))
' → logprob: -11.437192916870117
    6. ' )' → logprob: -12.062192916870117
    7. ')

' → logprob: -12.187192916870117
    8. ' )
' → logprob: -13.062192916870117
    9. '   ' → logprob: -13.687192916870117
    10. ')}' → logprob: -14.187192916870117

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002978048287332058
    2. 'else' → logprob: -8.500297546386719
    3. ' else' → logprob: -9.875297546386719
    4. 'return' → logprob: -10.375297546386719
    5. '	else' → logprob: -12.625297546386719
    6. ' return' → logprob: -13.125297546386719
    7. '       ' → logprob: -13.500297546386719
    8. '<|end|>' → logprob: -13.500297546386719
    9. '	return' → logprob: -13.625297546386719
    10. 'def' → logprob: -14.625297546386719

Token 459: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1972188800573349
    2. 'else' → logprob: -1.822218894958496
    3. ' else' → logprob: -4.072218894958496
    4. 'return' (adapté à ' return') → logprob: -8.697218894958496
    5. '	else' → logprob: -9.322218894958496
    6. '<|end|>' → logprob: -12.197218894958496
    7. ' return' → logprob: -12.572218894958496
    8. '       ' → logprob: -12.822218894958496
    9. 'elif' → logprob: -12.822218894958496
    10. ')' → logprob: -13.072218894958496

Token 460: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01379651390016079
    2. '1' → logprob: -4.388796329498291
    3. ' ' → logprob: -6.763796329498291
    4. '2' → logprob: -9.01379680633545
    5. 'None' → logprob: -11.88879680633545
    6. 'int' → logprob: -14.26379680633545
    7. '   ' → logprob: -14.63879680633545
    8. ' None' → logprob: -14.76379680633545
    9. '(' → logprob: -15.63879680633545
    10. 'pow' → logprob: -15.70129680633545

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037154339253902435
    2. '1' → logprob: -3.53715443611145
    3. '2' → logprob: -4.912154197692871
    4. ' ' → logprob: -11.287154197692871
    5. 'pow' → logprob: -13.037154197692871
    6. 'None' → logprob: -13.662154197692871
    7. '-' → logprob: -14.037154197692871
    8. '   ' → logprob: -14.662154197692871
    9. '3' → logprob: -14.724654197692871
    10. '(' → logprob: -15.099654197692871

Token 462: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2246291337069124e-05
    2. 'for' → logprob: -11.000021934509277
    3. 'from' → logprob: -12.375021934509277
    4. 'n' → logprob: -14.500021934509277
    5. '#' → logprob: -15.375021934509277
    6. 'import' → logprob: -15.875021934509277
    7. 'ndef' → logprob: -16.500022888183594
    8. ' def' → logprob: -16.625022888183594
    9. '```' → logprob: -16.750022888183594
    10. '
' → logprob: -17.125022888183594

Token 464: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05117683857679367
    2. ' main' → logprob: -3.0511767864227295
    3. 'solve' → logprob: -6.176177024841309
    4. 'process' → logprob: -8.801177024841309
    5. ' solve' → logprob: -9.176177024841309
    6. 'calculate' → logprob: -9.176177024841309
    7. 'count' → logprob: -9.176177024841309
    8. 'read' → logprob: -11.426177024841309
    9. 'compute' → logprob: -11.801177024841309
    10. 'solution' → logprob: -12.051177024841309

Token 465: '_all' (ID: 13305)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.6689034104347229
    2. '(' → logprob: -1.5439033508300781
    3. '(m' → logprob: -1.7939033508300781
    4. '_m' → logprob: -3.168903350830078
    5. '(n' → logprob: -3.793903350830078
    6. '_masks' → logprob: -4.043903350830078
    7. '(i' → logprob: -4.793903350830078
    8. 'm' → logprob: -5.543903350830078
    9. '_(' → logprob: -5.793903350830078
    10. '(_' → logprob: -5.918903350830078

Token 466: '_masks' (ID: 155097)
  Prédit: '_masks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_masks' → logprob: -0.3760320246219635
    2. '(m' → logprob: -1.7510319948196411
    3. '(' → logprob: -2.2510321140289307
    4. '(i' → logprob: -3.8760321140289307
    5. '_mask' → logprob: -4.626031875610352
    6. '_sub' → logprob: -6.751031875610352
    7. '(n' → logprob: -7.126031875610352
    8. '_sets' → logprob: -8.126031875610352
    9. '(_' → logprob: -8.126031875610352
    10. '_m' → logprob: -8.126031875610352

Token 467: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00040934275602921844
    2. '(' → logprob: -8.500409126281738
    3. '(n' → logprob: -8.500409126281738
    4. ' (' → logprob: -13.250409126281738
    5. '(i' → logprob: -15.125409126281738
    6. '(M' → logprob: -16.125410079956055
    7. '(
' → logprob: -16.500410079956055
    8. '(s' → logprob: -16.500410079956055
    9. '(k' → logprob: -17.500410079956055
    10. '(ms' → logprob: -18.125410079956055

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003642119001597166
    2. '):' → logprob: -5.8786420822143555
    3. '):
' → logprob: -7.2536420822143555
    4. ',i' → logprob: -9.628642082214355
    5. '   ' → logprob: -10.753642082214355
    6. ',m' → logprob: -11.378642082214355
    7. ' ,' → logprob: -11.753642082214355
    8. ',n' → logprob: -11.878642082214355
    9. ',
' → logprob: -12.253642082214355
    10. '+' → logprob: -12.378642082214355

Token 469: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21097536385059357
    2. 'ms' → logprob: -2.210975408554077
    3. ' n' → logprob: -2.710975408554077
    4. ' ms' → logprob: -4.335975170135498
    5. 'm' → logprob: -7.085975170135498
    6. '   ' → logprob: -9.835975646972656
    7. 'ns' → logprob: -10.335975646972656
    8. ' m' → logprob: -10.710975646972656
    9. '```' → logprob: -10.710975646972656
    10. ' ' → logprob: -11.085975646972656

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004345379304140806
    2. '):
' → logprob: -5.879345417022705
    3. '):' → logprob: -6.504345417022705
    4. '   ' → logprob: -10.504344940185547
    5. ',
' → logprob: -12.379344940185547
    6. ' ,' → logprob: -12.379344940185547
    7. ')' → logprob: -13.004344940185547
    8. ',m' → logprob: -13.004344940185547
    9. '):
' → logprob: -13.754344940185547
    10. ':' → logprob: -15.254344940185547

Token 471: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.00012356207298580557
    2. ' ms' → logprob: -9.000123977661133
    3. '	ms' → logprob: -17.375123977661133
    4. 'm' → logprob: -18.125123977661133
    5. '   ' → logprob: -18.125123977661133
    6. '(ms' → logprob: -18.500123977661133
    7. '
' → logprob: -18.875123977661133
    8. ')' → logprob: -19.125123977661133
    9. '_ms' → logprob: -19.375123977661133
    10. '-ms' → logprob: -19.625123977661133

Token 472: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4742288887500763
    2. '):
' → logprob: -0.9742288589477539
    3. ',' → logprob: -9.724228858947754
    4. '):
' → logprob: -9.724228858947754
    5. ')' → logprob: -11.474228858947754
    6. '   ' → logprob: -11.599228858947754
    7. ':' → logprob: -11.849228858947754
    8. '):

' → logprob: -12.474228858947754
    9. ' ):' → logprob: -14.474228858947754
    10. '}:' → logprob: -15.724228858947754

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012702319072559476
    2. '```' → logprob: -7.751270294189453
    3. 'res' → logprob: -7.876270294189453
    4. 'result' → logprob: -8.251270294189453
    5. 'ret' → logprob: -10.001270294189453
    6. ' res' → logprob: -10.001270294189453
    7. 'total' → logprob: -10.626270294189453
    8. '
' → logprob: -10.751270294189453
    9. ' ' → logprob: -11.251270294189453
    10. 'for' → logprob: -11.376270294189453

Token 474: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7912846803665161
    2. 'ans' (adapté à ' ans') → logprob: -1.4162846803665161
    3. 'result' → logprob: -2.2912845611572266
    4. 'r' → logprob: -2.9162845611572266
    5. 's' → logprob: -2.9162845611572266
    6. 'total' → logprob: -3.0412845611572266
    7. 'ret' → logprob: -3.6662845611572266
    8. 'answer' → logprob: -5.041284561157227
    9. 'a' → logprob: -6.166284561157227
    10. 'for' → logprob: -6.291284561157227

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132667541503906
    2. '=' → logprob: -1.3132667541503906
    3. ' ' → logprob: -13.81326675415039
    4. ',' → logprob: -13.93826675415039
    5. '=[]' → logprob: -14.06326675415039
    6. ' =[' → logprob: -14.18826675415039
    7. '=[]
' → logprob: -14.81326675415039
    8. '=[' → logprob: -14.81326675415039
    9. 's' → logprob: -14.81326675415039
    10. '[' → logprob: -15.81326675415039

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007517654448747635
    2. '[' → logprob: -5.1325178146362305
    3. '{}' → logprob: -7.0075178146362305
    4. '[]' → logprob: -8.00751781463623
    5. ' ' → logprob: -9.13251781463623
    6. '[]
' → logprob: -9.38251781463623
    7. '1' → logprob: -9.88251781463623
    8. '{' → logprob: -10.25751781463623
    9. '{}
' → logprob: -11.13251781463623
    10. 'set' → logprob: -11.25751781463623

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06294076889753342
    2. '[' → logprob: -2.812940835952759
    3. '{}
' → logprob: -8.18794059753418
    4. '{}' → logprob: -8.31294059753418
    5. '{' → logprob: -8.68794059753418
    6. 'default' → logprob: -9.06294059753418
    7. '[]
' → logprob: -9.56294059753418
    8. 'dict' → logprob: -10.81294059753418
    9. '[-' → logprob: -10.93794059753418
    10. '[]' → logprob: -11.43794059753418

Token 478: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20145513117313385
    2. '   ' → logprob: -1.9514551162719727
    3. ' for' → logprob: -3.3264551162719727
    4. 'for' → logprob: -6.951455116271973
    5. '    
' → logprob: -7.076455116271973
    6. '<|end|>' → logprob: -7.201455116271973
    7. '	for' → logprob: -7.701455116271973
    8. '  
' → logprob: -7.826455116271973
    9. ':
' → logprob: -8.701455116271973
    10. ' 
' → logprob: -8.826455116271973

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034226931631565094
    2. ' for' → logprob: -3.534226894378662
    3. '
' → logprob: -5.534226894378662
    4. 'for' → logprob: -8.28422737121582
    5. '	for' → logprob: -9.03422737121582
    6. ' ' → logprob: -10.53422737121582
    7. '```' → logprob: -10.53422737121582
    8. '<|end|>' → logprob: -10.53422737121582
    9. '    
' → logprob: -10.90922737121582
    10. ',' → logprob: -11.78422737121582

Token 480: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45609477162361145
    2. ' for' → logprob: -1.206094741821289
    3. '   ' → logprob: -2.706094741821289
    4. '```' → logprob: -9.956094741821289
    5. '	for' → logprob: -11.331094741821289
    6. '
' → logprob: -11.456094741821289
    7. ' ' → logprob: -11.456094741821289
    8. 'from' → logprob: -13.206094741821289
    9. '``' → logprob: -13.956094741821289
    10. '    
' → logprob: -14.331094741821289

Token 481: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007877098978497088
    2. ' i' → logprob: -7.250787734985352
    3. 'mask' → logprob: -9.500787734985352
    4. ' mask' → logprob: -13.750787734985352
    5. '   ' → logprob: -13.750787734985352
    6. '	i' → logprob: -15.250787734985352
    7. ' ' → logprob: -15.750787734985352
    8. '_i' → logprob: -16.37578773498535
    9. 'm' → logprob: -16.50078773498535
    10. '```' → logprob: -16.75078773498535

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061976201832294464
    2. 'in' → logprob: -2.811976194381714
    3. ' ' → logprob: -12.061976432800293
    4. 'range' → logprob: -13.686976432800293
    5. '	in' → logprob: -14.686976432800293
    6. ',' → logprob: -15.061976432800293
    7. 'n' → logprob: -15.686976432800293
    8. ')' → logprob: -16.061975479125977
    9. 'space' → logprob: -16.186975479125977
    10. ' range' → logprob: -16.561975479125977

Token 483: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -19.128177642822266
    4. ' ' → logprob: -19.503177642822266
    5. '
' → logprob: -19.628177642822266
    6. '	range' → logprob: -19.878177642822266
    7. 'rang' → logprob: -21.628177642822266
    8. '   ' → logprob: -21.753177642822266
    9. 'r' → logprob: -21.878177642822266
    10. 'ran' → logprob: -22.003177642822266

Token 484: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003177952254191041
    2. '1' → logprob: -5.753178119659424
    3. ' (' → logprob: -15.753177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '(
' → logprob: -18.503177642822266
    6. '((' → logprob: -18.503177642822266
    7. ',' → logprob: -18.503177642822266
    8. '   ' → logprob: -18.503177642822266
    9. '2' → logprob: -18.878177642822266
    10. '```' → logprob: -19.378177642822266

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00070230319397524
    2. '2' → logprob: -7.375702381134033
    3. '(' → logprob: -9.500701904296875
    4. '0' → logprob: -14.625701904296875
    5. ' ' → logprob: -15.250701904296875
    6. '   ' → logprob: -15.500701904296875
    7. '```' → logprob: -17.750701904296875
    8. '
' → logprob: -19.375701904296875
    9. ')' → logprob: -19.625701904296875
    10. '3' → logprob: -20.125701904296875

Token 486: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40692874789237976
    2. '<<' → logprob: -1.2819287776947021
    3. ' <<' → logprob: -3.156928777694702
    4. ' ,' → logprob: -4.406928539276123
    5. '<<(' → logprob: -7.156928539276123
    6. '   ' → logprob: -7.656928539276123
    7. '1' → logprob: -7.656928539276123
    8. '(' → logprob: -8.781929016113281
    9. ',
' → logprob: -8.906929016113281
    10. ' ' → logprob: -11.406929016113281

Token 487: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.547789674485102e-05
    2. ' m' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.875036239624023
    4. '	m' → logprob: -19.750036239624023
    5. '(m' → logprob: -19.875036239624023
    6. '```' → logprob: -20.625036239624023
    7. ' ' → logprob: -21.875036239624023
    8. '
' → logprob: -22.125036239624023
    9. ')m' → logprob: -22.125036239624023
    10. '       ' → logprob: -23.375036239624023

Token 488: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0703316330909729
    2. '):
' → logprob: -2.695331573486328
    3. ':' → logprob: -8.070331573486328
    4. '   ' → logprob: -10.320331573486328
    5. '):
' → logprob: -11.195331573486328
    6. ' ):' → logprob: -11.195331573486328
    7. ')' → logprob: -11.445331573486328
    8. ':
' → logprob: -12.945331573486328
    9. '       ' → logprob: -13.195331573486328
    10. '}:' → logprob: -13.820331573486328

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041220002458430827
    2. 'ans' → logprob: -8.875411987304688
    3. '   ' → logprob: -9.125411987304688
    4. '(ans' → logprob: -10.250411987304688
    5. '```' → logprob: -10.625411987304688
    6. ',' → logprob: -10.750411987304688
    7. '
' → logprob: -11.375411987304688
    8. ' ans' → logprob: -11.375411987304688
    9. '<|end|>' → logprob: -11.375411987304688
    10. '	ans' → logprob: -11.875411987304688

Token 490: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03575962409377098
    2. '       ' → logprob: -3.410759687423706
    3. ' ans' → logprob: -6.285759449005127
    4. '	ans' → logprob: -8.910759925842285
    5. '   ' → logprob: -10.160759925842285
    6. '           ' → logprob: -10.660759925842285
    7. '(ans' → logprob: -10.785759925842285
    8. '
' → logprob: -11.160759925842285
    9. '```' → logprob: -12.410759925842285
    10. 'a' → logprob: -12.660759925842285

Token 491: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17979133129119873
    2. '+=' → logprob: -1.8047913312911987
    3. ' ^=' → logprob: -11.554791450500488
    4. '=' → logprob: -11.679791450500488
    5. '+' → logprob: -11.929791450500488
    6. '+=(' → logprob: -12.429791450500488
    7. ']+=' → logprob: -12.554791450500488
    8. ' ' → logprob: -12.554791450500488
    9. '    ' → logprob: -12.929791450500488
    10. '   ' → logprob: -13.304791450500488

Token 492: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.001170225441455841
    2. ' process' → logprob: -6.7511701583862305
    3. '(process' → logprob: -17.626171112060547
    4. '	process' → logprob: -19.626171112060547
    5. '   ' → logprob: -19.876171112060547
    6. 'proces' → logprob: -20.751171112060547
    7. '
' → logprob: -21.126171112060547
    8. ' ' → logprob: -21.376171112060547
    9. '.process' → logprob: -22.001171112060547
    10. '_process' → logprob: -22.876171112060547

Token 493: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0022255489602684975
    2. '(i' → logprob: -6.127225399017334
    3. 'mask' → logprob: -11.127225875854492
    4. '_' → logprob: -11.377225875854492
    5. '_masks' → logprob: -12.002225875854492
    6. '(' → logprob: -13.627225875854492
    7. '_all' → logprob: -13.877225875854492
    8. '_MASK' → logprob: -13.877225875854492
    9. '(_' → logprob: -14.002225875854492
    10. '_m' → logprob: -14.377225875854492

Token 494: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.0100624169572257e-05
    2. '(' → logprob: -10.875020027160645
    3. '(
' → logprob: -14.125020027160645
    4. ' (' → logprob: -15.000020027160645
    5. 'i' → logprob: -17.12502098083496
    6. '```' → logprob: -19.37502098083496
    7. '(I' → logprob: -19.87502098083496
    8. '((' → logprob: -20.12502098083496
    9. '[i' → logprob: -20.50002098083496
    10. '(ii' → logprob: -21.00002098083496

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016234595328569412
    2. ' ,' → logprob: -4.516234397888184
    3. ',m' → logprob: -5.266234397888184
    4. ',i' → logprob: -12.391234397888184
    5. '   ' → logprob: -12.641234397888184
    6. ',
' → logprob: -13.516234397888184
    7. '       ' → logprob: -14.141234397888184
    8. ' ' → logprob: -15.641234397888184
    9. '  ' → logprob: -16.3912353515625
    10. '(m' → logprob: -16.3912353515625

Token 496: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005233763717114925
    2. ' m' → logprob: -5.2552337646484375
    3. '	m' → logprob: -20.380233764648438
    4. '```' → logprob: -20.755233764648438
    5. '   ' → logprob: -21.130233764648438
    6. ')m' → logprob: -21.380233764648438
    7. '
' → logprob: -21.880233764648438
    8. ',m' → logprob: -22.505233764648438
    9. '<|end|>' → logprob: -22.505233764648438
    10. ' ' → logprob: -22.630233764648438

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013003537897020578
    2. ',n' → logprob: -6.87630033493042
    3. ' ,' → logprob: -8.376300811767578
    4. ',m' → logprob: -10.876300811767578
    5. ',
' → logprob: -11.126300811767578
    6. '       ' → logprob: -13.376300811767578
    7. '   ' → logprob: -13.751300811767578
    8. ',i' → logprob: -15.126300811767578
    9. '
' → logprob: -15.876300811767578
    10. ' ' → logprob: -16.751300811767578

Token 498: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -4.370294846012257e-05
    2. ' ms' → logprob: -10.250043869018555
    3. 'm' → logprob: -11.750043869018555
    4. 'ns' → logprob: -15.250043869018555
    5. 'n' → logprob: -15.875043869018555
    6. '
' → logprob: -18.250043869018555
    7. '	ms' → logprob: -19.125043869018555
    8. '
' → logprob: -19.500043869018555
    9. '(ms' → logprob: -20.750043869018555
    10. ' m' → logprob: -20.750043869018555

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00526471110060811
    2. ',n' → logprob: -5.255264759063721
    3. ' ,' → logprob: -10.505264282226562
    4. 'n' → logprob: -12.630264282226562
    5. ',m' → logprob: -16.380264282226562
    6. ',
' → logprob: -16.755264282226562
    7. ',i' → logprob: -17.630264282226562
    8. ')' → logprob: -17.630264282226562
    9. ' n' → logprob: -18.755264282226562
    10. '```' → logprob: -18.755264282226562

Token 500: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. ' n' → logprob: -10.500027656555176
    3. '
' → logprob: -20.00002670288086
    4. ')n' → logprob: -20.87502670288086
    5. '	n' → logprob: -21.50002670288086
    6. '```' → logprob: -21.75002670288086
    7. '   ' → logprob: -22.00002670288086
    8. ')' → logprob: -22.25002670288086
    9. ' ' → logprob: -24.87502670288086
    10. '_n' → logprob: -25.12502670288086

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868822157382965
    2. ')
' → logprob: -1.1368821859359741
    3. ')
' → logprob: -12.011881828308105
    4. '   ' → logprob: -12.761881828308105
    5. ')

' → logprob: -13.261881828308105
    6. ' )
' → logprob: -15.386881828308105
    7. ' )' → logprob: -16.136882781982422
    8. ')return' → logprob: -16.511882781982422
    9. ')n' → logprob: -17.386882781982422
    10. '       ' → logprob: -17.761882781982422

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05553645268082619
    2. '
' → logprob: -2.9305365085601807
    3. 'return' → logprob: -7.555536270141602
    4. '    
' → logprob: -9.680536270141602
    5. ' return' → logprob: -10.430536270141602
    6. '
' → logprob: -11.055536270141602
    7. '	return' → logprob: -11.180536270141602
    8. '```' → logprob: -12.680536270141602
    9. '+
' → logprob: -13.930536270141602
    10. '  
' → logprob: -14.055536270141602

Token 503: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13704876601696014
    2. 'return' (adapté à ' return') → logprob: -2.6370487213134766
    3. '
' → logprob: -2.8870487213134766
    4. ' return' → logprob: -7.512048721313477
    5. '	return' → logprob: -9.137048721313477
    6. '    
' → logprob: -9.512048721313477
    7. '```' → logprob: -11.262048721313477
    8. '
' → logprob: -11.887048721313477
    9. ':return' → logprob: -13.012048721313477
    10. ' 
' → logprob: -13.512048721313477

Token 504: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004079112783074379
    2. ' ans' → logprob: -5.504079341888428
    3. '(ans' → logprob: -14.75407886505127
    4. '	ans' → logprob: -15.37907886505127
    5. 'abs' → logprob: -17.129079818725586
    6. 'answer' → logprob: -19.004079818725586
    7. '
' → logprob: -19.129079818725586
    8. '_ans' → logprob: -19.504079818725586
    9. 'anst' → logprob: -20.379079818725586
    10. ' ' → logprob: -20.504079818725586

Token 505: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08837055414915085
    2. 'n' → logprob: -3.0883705615997314
    3. '<|end|>' → logprob: -3.5883705615997314
    4. '#' → logprob: -4.963370323181152
    5. 'print' → logprob: -6.588370323181152
    6. 'm' → logprob: -6.588370323181152
    7. '```' → logprob: -7.463370323181152
    8. '(n' → logprob: -8.213370323181152
    9. 'if' → logprob: -8.213370323181152
    10. '<|end|>' → logprob: -8.463370323181152

Token 506: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14708343148231506
    2. 'n' → logprob: -3.0220835208892822
    3. 'print' → logprob: -3.0220835208892822
    4. '```' → logprob: -3.7720835208892822
    5. '<|end|>' → logprob: -4.647083282470703
    6. '#' → logprob: -5.647083282470703
    7. 'if' → logprob: -6.397083282470703
    8. '
' → logprob: -7.522083282470703
    9. 'a' → logprob: -7.897083282470703
    10. 'm' → logprob: -8.397083282470703

Token 507: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20141831040382385
    2. ' main' → logprob: -1.7014182806015015
    3. 'solve' → logprob: -13.451417922973633
    4. 'def' → logprob: -13.826417922973633
    5. '__' → logprob: -14.201417922973633
    6. 'run' → logprob: -14.451417922973633
    7. ' solve' → logprob: -15.076417922973633
    8. 'read' → logprob: -15.326417922973633
    9. 'process' → logprob: -15.326417922973633
    10. ' run' → logprob: -15.576417922973633

Token 508: '_answer' (ID: 65702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7110642790794373
    2. '(n' → logprob: -0.8360642790794373
    3. '_result' → logprob: -4.336064338684082
    4. '(m' → logprob: -4.586064338684082
    5. '_color' → logprob: -4.586064338684082
    6. '_answer' → logprob: -5.586064338684082
    7. '_count' → logprob: -5.836064338684082
    8. '_unique' → logprob: -6.086064338684082
    9. '_graph' → logprob: -6.211064338684082
    10. '_value' → logprob: -6.211064338684082

Token 509: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02436496689915657
    2. '(m' → logprob: -3.774364948272705
    3. '(' → logprob: -7.149364948272705
    4. '():' → logprob: -8.649365425109863
    5. ' (' → logprob: -8.774365425109863
    6. '(def' → logprob: -14.274365425109863
    7. '()' → logprob: -14.774365425109863
    8. '(
' → logprob: -14.899365425109863
    9. '():
' → logprob: -15.024365425109863
    10. '(N' → logprob: -15.399365425109863

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ',m' → logprob: -10.250046730041504
    3. ' ,' → logprob: -12.125046730041504
    4. ',
' → logprob: -12.750046730041504
    5. '):
' → logprob: -13.875046730041504
    6. '):' → logprob: -14.125046730041504
    7. 'm' → logprob: -14.875046730041504
    8. ',n' → logprob: -15.125046730041504
    9. '   ' → logprob: -15.375046730041504
    10. ',k' → logprob: -15.625046730041504

Token 511: ' ans' (ID: 3345)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008410728187300265
    2. ' m' → logprob: -7.12584114074707
    3. 'ab' → logprob: -10.87584114074707
    4. 'ms' → logprob: -11.62584114074707
    5. '   ' → logprob: -12.00084114074707
    6. ')' → logprob: -14.50084114074707
    7. ' ' → logprob: -14.62584114074707
    8. ' ab' → logprob: -14.75084114074707
    9. '```' → logprob: -15.62584114074707
    10. 'n' → logprob: -15.75084114074707

Token 512: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002786167024169117
    2. '):' → logprob: -9.12527847290039
    3. ',m' → logprob: -9.50027847290039
    4. ' ,' → logprob: -10.00027847290039
    5. '):
' → logprob: -10.87527847290039
    6. 's' → logprob: -11.37527847290039
    7. 'm' → logprob: -12.00027847290039
    8. ',
' → logprob: -12.12527847290039
    9. '   ' → logprob: -12.50027847290039
    10. '_,' → logprob: -13.62527847290039

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2189781665802002
    2. 'return' → logprob: -1.8439781665802002
    3. 'print' → logprob: -3.3439781665802
    4. ' return' → logprob: -5.968977928161621
    5. ' print' → logprob: -8.343977928161621
    6. 'for' → logprob: -8.468977928161621
    7. 'if' → logprob: -9.593977928161621
    8. '```' → logprob: -9.968977928161621
    9. 'result' → logprob: -11.218977928161621
    10. 'def' → logprob: -11.343977928161621

Token 514: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08502737432718277
    2. 'print' → logprob: -2.7100274562835693
    3. '   ' → logprob: -4.58502721786499
    4. 'if' → logprob: -5.71002721786499
    5. ' return' → logprob: -7.58502721786499
    6. 'for' → logprob: -7.58502721786499
    7. 'ans' → logprob: -8.335027694702148
    8. 'result' → logprob: -10.335027694702148
    9. 'res' → logprob: -10.585027694702148
    10. 'total' → logprob: -10.585027694702148

Token 515: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7675976753234863
    2. 'ans' → logprob: -0.7675976753234863
    3. '(' → logprob: -3.2675976753234863
    4. 'pow' → logprob: -4.142597675323486
    5. '(ans' → logprob: -5.392597675323486
    6. 'n' → logprob: -5.392597675323486
    7. '(n' → logprob: -6.017597675323486
    8. 'max' → logprob: -6.267597675323486
    9. '1' → logprob: -7.142597675323486
    10. 'abs' → logprob: -7.267597675323486

Token 516: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5002785325050354
    2. 'ans' → logprob: -1.2502784729003906
    3. '(' → logprob: -2.7502784729003906
    4. 'pow' → logprob: -3.5002784729003906
    5. '(ans' → logprob: -5.625278472900391
    6. '(n' → logprob: -6.000278472900391
    7. 'abs' → logprob: -6.250278472900391
    8. 'max' → logprob: -6.750278472900391
    9. '1' → logprob: -7.000278472900391
    10. 'n' → logprob: -7.250278472900391

Token 517: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06025095283985138
    2. ' **' → logprob: -3.310250997543335
    3. '(n' → logprob: -3.935250997543335
    4. '*' → logprob: -6.935250759124756
    5. 'n' → logprob: -8.310251235961914
    6. '(' → logprob: -8.435251235961914
    7. '-' → logprob: -8.560251235961914
    8. '
' → logprob: -9.060251235961914
    9. ' -' → logprob: -9.310251235961914
    10. '^' → logprob: -9.310251235961914

Token 518: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14313499629497528
    2. 'n' → logprob: -2.0181350708007812
    3. '(' → logprob: -8.143135070800781
    4. ' (' → logprob: -8.893135070800781
    5. '
' → logprob: -11.143135070800781
    6. ' n' → logprob: -12.393135070800781
    7. '(
' → logprob: -12.893135070800781
    8. '   ' → logprob: -13.018135070800781
    9. '{' → logprob: -13.518135070800781
    10. '((' → logprob: -13.768135070800781

Token 519: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3544423381972592e-05
    2. '(n' → logprob: -11.25001335144043
    3. ' n' → logprob: -14.62501335144043
    4. '(' → logprob: -18.87501335144043
    5. '[n' → logprob: -19.50001335144043
    6. '   ' → logprob: -19.62501335144043
    7. '
' → logprob: -19.75001335144043
    8. '	n' → logprob: -19.75001335144043
    9. ')n' → logprob: -19.87501335144043
    10. ' (' → logprob: -20.12501335144043

Token 520: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03017425537109375
    2. ' -' → logprob: -3.5301742553710938
    3. ')' → logprob: -7.905174255371094
    4. '   ' → logprob: -10.405174255371094
    5. ' ' → logprob: -11.280174255371094
    6. ')-' → logprob: -12.780174255371094
    7. ' )' → logprob: -13.030174255371094
    8. 'n' → logprob: -13.405174255371094
    9. '
' → logprob: -13.405174255371094
    10. '  ' → logprob: -13.905174255371094

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011946328449994326
    2. '2' → logprob: -6.751194477081299
    3. ' ' → logprob: -10.751194953918457
    4. '   ' → logprob: -13.751194953918457
    5. '
' → logprob: -13.876194953918457
    6. '3' → logprob: -15.251194953918457
    7. '  ' → logprob: -16.00119400024414
    8. '

' → logprob: -16.12619400024414
    9. '```' → logprob: -16.43869400024414
    10. 'n' → logprob: -16.68869400024414

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416750717908144
    2. '2' → logprob: -4.264167308807373
    3. '3' → logprob: -12.764167785644531
    4. ' ' → logprob: -14.451667785644531
    5. '   ' → logprob: -16.01416778564453
    6. '```' → logprob: -16.38916778564453
    7. '0' → logprob: -16.82666778564453
    8. '
' → logprob: -16.82666778564453
    9. '4' → logprob: -17.38916778564453
    10. '{' → logprob: -17.51416778564453

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004265044699423015
    2. '-' → logprob: -8.750426292419434
    3. ' )' → logprob: -8.875426292419434
    4. ')-' → logprob: -9.125426292419434
    5. ' -' → logprob: -12.500426292419434
    6. '}' → logprob: -12.625426292419434
    7. ')
' → logprob: -12.875426292419434
    8. '[' → logprob: -13.625426292419434
    9. '))' → logprob: -13.625426292419434
    10. ')+' → logprob: -14.125426292419434

Token 524: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3714486062526703
    2. '<|end|>' → logprob: -1.3714486360549927
    3. '
' → logprob: -3.621448516845703
    4. 'n' → logprob: -4.246448516845703
    5. '#' → logprob: -4.371448516845703
    6. 'if' → logprob: -6.746448516845703
    7. '<|end|>' → logprob: -7.621448516845703
    8. '```' → logprob: -7.871448516845703
    9. ')' → logprob: -8.996448516845703
    10. '(n' → logprob: -9.246448516845703

Token 525: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007101670489646494
    2. ' ans' → logprob: -7.2507100105285645
    3. '(ans' → logprob: -15.750710487365723
    4. 'answer' → logprob: -17.250709533691406
    5. '	ans' → logprob: -17.250709533691406
    6. '1' → logprob: -18.125709533691406
    7. 'abs' → logprob: -18.125709533691406
    8. 'int' → logprob: -19.125709533691406
    9. '_ans' → logprob: -20.875709533691406
    10. 'ANS' → logprob: -21.375709533691406

Token 526: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08411303162574768
    2. 'n' → logprob: -2.584113121032715
    3. '<|end|>' → logprob: -5.959113121032715
    4. '#' → logprob: -6.834113121032715
    5. '(n' → logprob: -7.584113121032715
    6. 'if' → logprob: -8.084113121032715
    7. '
' → logprob: -8.084113121032715
    8. '```' → logprob: -8.834113121032715
    9. 'ndef' → logprob: -9.709113121032715
    10. 'm' → logprob: -9.834113121032715

Token 527: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010173088870942593
    2. 'n' → logprob: -4.635173320770264
    3. 'if' → logprob: -8.635172843933105
    4. '#' → logprob: -8.760172843933105
    5. '```' → logprob: -9.760172843933105
    6. '(n' → logprob: -12.135172843933105
    7. '<|end|>' → logprob: -12.135172843933105
    8. ' n' → logprob: -12.385172843933105
    9. 'print' → logprob: -13.260172843933105
    10. 'ndef' → logprob: -13.260172843933105

Token 528: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01465971302241087
    2. ' main' → logprob: -4.264659881591797
    3. 'def' → logprob: -7.639659881591797
    4. '__' → logprob: -11.764659881591797
    5. 'process' → logprob: -13.389659881591797
    6. 'read' → logprob: -13.639659881591797
    7. ' def' → logprob: -13.764659881591797
    8. '
' → logprob: -14.014659881591797
    9. 'if' → logprob: -14.264659881591797
    10. 'solve' → logprob: -14.514659881591797

Token 529: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.045823566731997e-05
    2. '():
' → logprob: -10.875020027160645
    3. ' ():' → logprob: -14.250020027160645
    4. '()' → logprob: -14.625020027160645
    5. '(' → logprob: -15.500020027160645
    6. '():
' → logprob: -16.25002098083496
    7. ':' → logprob: -17.50002098083496
    8. '(:' → logprob: -17.87502098083496
    9. '():

' → logprob: -18.62502098083496
    10. 'def' → logprob: -18.75002098083496

Token 530: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7246254086494446
    2. '   ' → logprob: -0.7246254086494446
    3. ' n' → logprob: -3.4746253490448
    4. '	n' → logprob: -11.474625587463379
    5. '```' → logprob: -12.849625587463379
    6. ' ' → logprob: -13.849625587463379
    7. '  ' → logprob: -14.599625587463379
    8. 'import' → logprob: -17.474624633789062
    9. ',n' → logprob: -17.724624633789062
    10. '_n' → logprob: -17.849624633789062

Token 531: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.025131134316325188
    2. ' n' → logprob: -3.7751312255859375
    3. '   ' → logprob: -6.2751312255859375
    4. '	n' → logprob: -14.275131225585938
    5. '```' → logprob: -14.650131225585938
    6. ' ' → logprob: -16.025131225585938
    7. 'import' → logprob: -16.650131225585938
    8. '  ' → logprob: -17.400131225585938
    9. '_n' → logprob: -19.150131225585938
    10. '
' → logprob: -19.150131225585938

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893440127372742
    2. '=' → logprob: -2.57893443107605
    3. ',' → logprob: -10.078934669494629
    4. '=int' → logprob: -14.203934669494629
    5. '   ' → logprob: -14.203934669494629
    6. ' ' → logprob: -14.453934669494629
    7. ' =
' → logprob: -15.203934669494629
    8. ' ,' → logprob: -15.703934669494629
    9. ')' → logprob: -16.328933715820312
    10. '    ' → logprob: -16.578933715820312

Token 533: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10035018622875214
    2. ' read' → logprob: -2.3503501415252686
    3. 'int' → logprob: -9.100350379943848
    4. ' int' → logprob: -10.350350379943848
    5. '	read' → logprob: -17.85034942626953
    6. '(read' → logprob: -19.97534942626953
    7. '.read' → logprob: -20.22534942626953
    8. '   ' → logprob: -20.60034942626953
    9. 'Read' → logprob: -20.85034942626953
    10. 'n' → logprob: -20.85034942626953

Token 534: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0029923205729573965
    2. '_' → logprob: -6.377992153167725
    3. '()' → logprob: -6.877992153167725
    4. '(' → logprob: -8.502992630004883
    5. 'n' → logprob: -10.252992630004883
    6. '()
' → logprob: -12.252992630004883
    7. '```' → logprob: -12.252992630004883
    8. '_line' → logprob: -13.377992630004883
    9. '('_' → logprob: -13.752992630004883
    10. ')' → logprob: -13.877992630004883

Token 535: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6971747279167175
    2. '()
' → logprob: -0.6971747279167175
    3. '
' → logprob: -5.697174549102783
    4. '   ' → logprob: -7.572174549102783
    5. '()\' → logprob: -10.197175025939941
    6. ')' → logprob: -10.697175025939941
    7. '(n' → logprob: -10.822175025939941
    8. '()
' → logprob: -10.822175025939941
    9. '```' → logprob: -11.322175025939941
    10. 'n' → logprob: -11.697175025939941

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026653001084923744
    2. 'm' → logprob: -4.526652812957764
    3. ' ab' → logprob: -4.901652812957764
    4. 'ab' → logprob: -5.276652812957764
    5. '
' → logprob: -6.151652812957764
    6. '    
' → logprob: -8.401653289794922
    7. '	m' → logprob: -8.901653289794922
    8. '```' → logprob: -9.151653289794922
    9. '<|end|>' → logprob: -9.276653289794922
    10. 'n' → logprob: -9.526653289794922

Token 537: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.27531692385673523
    2. 'm' → logprob: -1.5253169536590576
    3. ' ab' → logprob: -4.0253167152404785
    4. '   ' → logprob: -5.2753167152404785
    5. ' m' → logprob: -8.900317192077637
    6. 'ms' → logprob: -13.525317192077637
    7. ' ' → logprob: -14.025317192077637
    8. '```' → logprob: -14.150317192077637
    9. '
' → logprob: -14.275317192077637
    10. '_ab' → logprob: -14.775317192077637

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. ',' → logprob: -15.224077224731445
    4. ' ' → logprob: -16.099077224731445
    5. '   ' → logprob: -16.099077224731445
    6. ')' → logprob: -17.724077224731445
    7. '＝' → logprob: -17.724077224731445
    8. '=create' → logprob: -17.724077224731445
    9. '	' → logprob: -17.974077224731445
    10. ' =
' → logprob: -17.974077224731445

Token 539: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.038042064756155014
    2. ' build' → logprob: -3.2880420684814453
    3. '(build' → logprob: -14.788042068481445
    4. '	build' → logprob: -15.538042068481445
    5. '   ' → logprob: -17.038042068481445
    6. '.build' → logprob: -18.038042068481445
    7. '_build' → logprob: -18.663042068481445
    8. ' ' → logprob: -18.913042068481445
    9. 'b' → logprob: -19.538042068481445
    10. ' buil' → logprob: -19.663042068481445

Token 540: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00029160623671486974
    2. 'graph' → logprob: -8.50029182434082
    3. '_ab' → logprob: -9.50029182434082
    4. '(ab' → logprob: -11.75029182434082
    5. '(n' → logprob: -12.75029182434082
    6. '(graph' → logprob: -13.87529182434082
    7. 'ab' → logprob: -14.50029182434082
    8. '_gr' → logprob: -14.87529182434082
    9. 'Graph' → logprob: -15.50029182434082
    10. '_(' → logprob: -15.75029182434082

Token 541: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1472419600977446e-06
    2. 'n' → logprob: -14.625000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' (' → logprob: -15.875000953674316
    5. '
' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.750001907348633
    7. 'def' → logprob: -19.750001907348633
    8. ' ' → logprob: -20.000001907348633
    9. ',' → logprob: -20.000001907348633
    10. '(len' → logprob: -20.250001907348633

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002485169330611825
    2. ')
' → logprob: -6.002485275268555
    3. '   ' → logprob: -11.627485275268555
    4. ')
' → logprob: -15.502485275268555
    5. ' )' → logprob: -16.502485275268555
    6. ')

' → logprob: -16.627485275268555
    7. ')n' → logprob: -17.252485275268555
    8. '),' → logprob: -17.377485275268555
    9. ' ' → logprob: -17.752485275268555
    10. '
' → logprob: -18.252485275268555

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39043474197387695
    2. 'm' → logprob: -1.140434741973877
    3. ' m' → logprob: -5.640434741973877
    4. '```' → logprob: -12.640434265136719
    5. '	m' → logprob: -12.890434265136719
    6. '   ' → logprob: -16.14043426513672
    7. '
' → logprob: -16.51543426513672
    8. ' ' → logprob: -16.64043426513672
    9. '    
' → logprob: -17.76543426513672
    10. '  ' → logprob: -17.89043426513672

Token 544: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.875001907348633
    3. ' m' → logprob: -14.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. '	m' → logprob: -21.125001907348633
    6. '
' → logprob: -22.500001907348633
    7. '    
' → logprob: -22.500001907348633
    8. '#' → logprob: -22.625001907348633
    9. ' ' → logprob: -23.000001907348633
    10. '`' → logprob: -23.125001907348633

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.538042068481445
    4. ' =
' → logprob: -17.788042068481445
    5. ',' → logprob: -17.913042068481445
    6. '＝' → logprob: -17.913042068481445
    7. ' ' → logprob: -18.288042068481445
    8. '   ' → logprob: -19.038042068481445
    9. '=int' → logprob: -19.288042068481445
    10. '  ' → logprob: -19.788042068481445

Token 546: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12692810595035553
    2. 'read' → logprob: -2.1269280910491943
    3. '	read' → logprob: -16.501928329467773
    4. ' int' → logprob: -18.251928329467773
    5. '_read' → logprob: -18.376928329467773
    6. '(read' → logprob: -18.376928329467773
    7. 'int' → logprob: -19.501928329467773
    8. ' ' → logprob: -20.001928329467773
    9. '   ' → logprob: -20.751928329467773
    10. '
' → logprob: -20.751928329467773

Token 547: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.027341080829501152
    2. '()' → logprob: -3.65234112739563
    3. '_' → logprob: -7.027340888977051
    4. '(' → logprob: -9.40234088897705
    5. '()
' → logprob: -10.02734088897705
    6. '_n' → logprob: -11.27734088897705
    7. 'm' → logprob: -11.65234088897705
    8. ' ()' → logprob: -13.52734088897705
    9. '```' → logprob: -15.27734088897705
    10. ')_' → logprob: -15.52734088897705

Token 548: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014347303658723831
    2. '
' → logprob: -4.389347076416016
    3. '<|end|>' → logprob: -6.889347076416016
    4. 'm' → logprob: -7.889347076416016
    5. '    
' → logprob: -9.139347076416016
    6. '	ms' → logprob: -9.389347076416016
    7. 'ms' → logprob: -9.639347076416016
    8. '	m' → logprob: -9.764347076416016
    9. '
' → logprob: -10.389347076416016
    10. '  ' → logprob: -10.639347076416016

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009940951131284237
    2. 'ms' → logprob: -4.634941101074219
    3. ' ms' → logprob: -8.759941101074219
    4. '	ms' → logprob: -10.634941101074219
    5. 'm' → logprob: -12.884941101074219
    6. '<|end|>' → logprob: -15.009941101074219
    7. '(ms' → logprob: -15.384941101074219
    8. '_ms' → logprob: -15.759941101074219
    9. ' ' → logprob: -16.00994110107422
    10. '```' → logprob: -16.13494110107422

Token 550: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' (adapté à ' ms') → logprob: -7.779520092299208e-05
    2. ' ms' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.125078201293945
    4. '	ms' → logprob: -14.500078201293945
    5. 'm' → logprob: -15.125078201293945
    6. '_ms' → logprob: -17.500078201293945
    7. 'queries' → logprob: -18.125078201293945
    8. '(ms' → logprob: -18.375078201293945
    9. ' ' → logprob: -18.625078201293945
    10. 'qs' → logprob: -18.750078201293945

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759485960006714
    2. '=' → logprob: -0.8259485960006714
    3. '.append' → logprob: -11.950948715209961
    4. '.' → logprob: -13.325948715209961
    5. ' +=' → logprob: -14.950948715209961
    6. '.extend' → logprob: -15.075948715209961
    7. '.=' → logprob: -15.450948715209961
    8. '+=' → logprob: -16.57594871520996
    9. '＝' → logprob: -17.32594871520996
    10. '=[]' → logprob: -17.45094871520996

Token 552: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.061967797577381134
    2. ' process' → logprob: -2.8119678497314453
    3. '(process' → logprob: -16.686967849731445
    4. '   ' → logprob: -19.061967849731445
    5. '	process' → logprob: -20.436967849731445
    6. 'proces' → logprob: -21.311967849731445
    7. ' proces' → logprob: -21.436967849731445
    8. '.process' → logprob: -21.936967849731445
    9. '_process' → logprob: -22.311967849731445
    10. 'Process' → logprob: -22.561967849731445

Token 553: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.0004529566504061222
    2. 'queries' → logprob: -8.125452995300293
    3. '(m' → logprob: -9.125452995300293
    4. 's' → logprob: -10.125452995300293
    5. '(' → logprob: -12.125452995300293
    6. 'm' → logprob: -14.000452995300293
    7. 'Queries' → logprob: -14.375452995300293
    8. '(_' → logprob: -14.875452995300293
    9. ' queries' → logprob: -15.125452995300293
    10. '_query' → logprob: -16.250452041625977

Token 554: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.60414821645827e-06
    2. ' (' → logprob: -12.625004768371582
    3. '(' → logprob: -14.000004768371582
    4. 'm' → logprob: -15.000004768371582
    5. ' m' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.250003814697266
    7. ',m' → logprob: -17.750003814697266
    8. '	m' → logprob: -18.500003814697266
    9. '<m' → logprob: -18.750003814697266
    10. '```' → logprob: -18.875003814697266

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15938834846019745
    2. '(' → logprob: -2.534388303756714
    3. '(ab' → logprob: -2.784388303756714
    4. ')' → logprob: -5.909388542175293
    5. '(ms' → logprob: -6.034388542175293
    6. ' ,' → logprob: -7.284388542175293
    7. '(m' → logprob: -8.659388542175293
    8. ' (' → logprob: -8.659388542175293
    9. '   ' → logprob: -10.159388542175293
    10. '(abs' → logprob: -11.034388542175293

Token 556: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.011048642918467522
    2. ' ab' → logprob: -4.511048793792725
    3. '(ab' → logprob: -14.636048316955566
    4. '   ' → logprob: -15.011048316955566
    5. '_ab' → logprob: -16.886049270629883
    6. 'abbr' → logprob: -17.511049270629883
    7. '
' → logprob: -17.761049270629883
    8. ''ab' → logprob: -18.511049270629883
    9. '#ab' → logprob: -18.636049270629883
    10. ' ' → logprob: -18.761049270629883

Token 557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00523837935179472
    2. ')
' → logprob: -5.2552385330200195
    3. '   ' → logprob: -12.63023853302002
    4. ')
' → logprob: -13.88023853302002
    5. ' )' → logprob: -15.13023853302002
    6. ')

' → logprob: -15.88023853302002
    7. ' ' → logprob: -17.880237579345703
    8. '),' → logprob: -18.255237579345703
    9. ' )
' → logprob: -18.505237579345703
    10. '()' → logprob: -18.630237579345703

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03507649526000023
    2. '
' → logprob: -3.410076379776001
    3. '```' → logprob: -7.28507661819458
    4. '    
' → logprob: -7.41007661819458
    5. 'm' → logprob: -9.910076141357422
    6. '<|end|>' → logprob: -10.660076141357422
    7. 'ans' → logprob: -10.785076141357422
    8. '``' → logprob: -11.910076141357422
    9. '  ' → logprob: -12.160076141357422
    10. '
' → logprob: -12.285076141357422

Token 559: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004759292118251324
    2. 'answer' → logprob: -6.379759311676025
    3. '   ' → logprob: -6.754759311676025
    4. 'print' → logprob: -7.004759311676025
    5. ' ans' → logprob: -7.254759311676025
    6. 'result' → logprob: -8.504758834838867
    7. '```' → logprob: -10.254758834838867
    8. '	ans' → logprob: -10.629758834838867
    9. 'res' → logprob: -12.254758834838867
    10. '
' → logprob: -13.129758834838867

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00676700659096241
    2. '=' → logprob: -5.0067667961120605
    3. ' +=' → logprob: -9.881767272949219
    4. '+=' → logprob: -15.381767272949219
    5. ' ' → logprob: -15.506767272949219
    6. ' ' → logprob: -17.88176727294922
    7. ' =)' → logprob: -17.88176727294922
    8. ' |=' → logprob: -18.00676727294922
    9. ' =
' → logprob: -18.50676727294922
    10. '=int' → logprob: -18.75676727294922

Token 561: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.011047814972698689
    2. ' process' → logprob: -4.511047840118408
    3. '(process' → logprob: -19.76104736328125
    4. '	process' → logprob: -21.76104736328125
    5. '0' → logprob: -23.13604736328125
    6. '.process' → logprob: -23.88604736328125
    7. ' proces' → logprob: -24.01104736328125
    8. 'proces' → logprob: -24.13604736328125
    9. '_process' → logprob: -24.51104736328125
    10. '   ' → logprob: -25.51104736328125

Token 562: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.0006942047039046884
    2. '_mask' → logprob: -7.625694274902344
    3. 'all' → logprob: -8.500694274902344
    4. '_masks' → logprob: -13.375694274902344
    5. 'All' → logprob: -14.000694274902344
    6. 'mask' → logprob: -15.000694274902344
    7. '_ans' → logprob: -17.000694274902344
    8. '_answer' → logprob: -17.875694274902344
    9. 'm' → logprob: -17.875694274902344
    10. '```' → logprob: -18.125694274902344

Token 563: '_masks' (ID: 155097)
  Prédit: '_masks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_masks' → logprob: -3.583550642360933e-05
    2. '_mask' → logprob: -10.250036239624023
    3. '(m' → logprob: -15.000036239624023
    4. '_marks' → logprob: -17.000036239624023
    5. '_bits' → logprob: -17.125036239624023
    6. 'm' → logprob: -17.625036239624023
    7. '(' → logprob: -17.625036239624023
    8. '(_' → logprob: -18.000036239624023
    9. '_modes' → logprob: -18.000036239624023
    10. '_m' → logprob: -18.500036239624023

Token 564: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.125006675720215
    4. 'm' → logprob: -16.37500762939453
    5. '(ms' → logprob: -17.00000762939453
    6. '(i' → logprob: -17.75000762939453
    7. ' m' → logprob: -18.50000762939453
    8. '((' → logprob: -18.75000762939453
    9. '```' → logprob: -18.75000762939453
    10. '(len' → logprob: -18.75000762939453

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036787090357393026
    2. '(' → logprob: -8.250368118286133
    3. '(n' → logprob: -9.875368118286133
    4. ')' → logprob: -10.500368118286133
    5. ',n' → logprob: -11.000368118286133
    6. ',
' → logprob: -12.125368118286133
    7. ' ,' → logprob: -12.750368118286133
    8. ',m' → logprob: -13.375368118286133
    9. '(m' → logprob: -15.125368118286133
    10. '   ' → logprob: -16.250368118286133

Token 566: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01814994215965271
    2. ' n' → logprob: -4.0181498527526855
    3. ')n' → logprob: -17.643150329589844
    4. '	n' → logprob: -17.768150329589844
    5. '_n' → logprob: -20.643150329589844
    6. ',n' → logprob: -20.643150329589844
    7. '
' → logprob: -20.643150329589844
    8. ')' → logprob: -20.768150329589844
    9. '   ' → logprob: -21.643150329589844
    10. '```' → logprob: -21.768150329589844

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',
' → logprob: -16.375
    4. '   ' → logprob: -16.625
    5. '‌,' → logprob: -18.625
    6. ')' → logprob: -18.875
    7. ',m' → logprob: -19.125
    8. '```' → logprob: -20.625
    9. '`,' → logprob: -20.875
    10. ',
' → logprob: -21.0

Token 568: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -1.676292231422849e-05
    2. ' ms' → logprob: -11.000017166137695
    3. '(ms' → logprob: -20.375017166137695
    4. '	ms' → logprob: -20.500017166137695
    5. '_ms' → logprob: -21.875017166137695
    6. 'ns' → logprob: -21.875017166137695
    7. '
' → logprob: -22.125017166137695
    8. ')' → logprob: -23.625017166137695
    9. 'Ms' → logprob: -24.000017166137695
    10. '/ms' → logprob: -24.250017166137695

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002482553943991661
    2. ')
' → logprob: -6.0024824142456055
    3. '   ' → logprob: -12.002482414245605
    4. ')
' → logprob: -14.252482414245605
    5. ' )' → logprob: -16.877483367919922
    6. ')`' → logprob: -17.502483367919922
    7. ')

' → logprob: -17.877483367919922
    8. ')`
' → logprob: -18.752483367919922
    9. ')#' → logprob: -18.877483367919922
    10. ')\
' → logprob: -18.877483367919922

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008717750199139118
    2. 'print' → logprob: -4.7587175369262695
    3. '
' → logprob: -9.50871753692627
    4. '```' → logprob: -11.25871753692627
    5. ' print' → logprob: -11.38371753692627
    6. '    
' → logprob: -12.50871753692627
    7. '<|end|>' → logprob: -14.75871753692627
    8. '	print' → logprob: -15.00871753692627
    9. '``' → logprob: -16.633718490600586
    10. 'return' → logprob: -16.633718490600586

Token 571: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014501708559691906
    2. '   ' → logprob: -4.264501571655273
    3. ' print' → logprob: -8.014501571655273
    4. 'result' → logprob: -12.264501571655273
    5. '```' → logprob: -13.764501571655273
    6. '
' → logprob: -14.139501571655273
    7. '	print' → logprob: -14.639501571655273
    8. 'return' → logprob: -15.514501571655273
    9. '    
' → logprob: -15.639501571655273
    10. 'answer' → logprob: -16.639501571655273

Token 572: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0020669952500611544
    2. '(' → logprob: -6.2520670890808105
    3. '()' → logprob: -9.502066612243652
    4. 'compute' → logprob: -9.877066612243652
    5. ' (' → logprob: -12.627066612243652
    6. '((' → logprob: -12.627066612243652
    7. '(ans' → logprob: -12.752066612243652
    8. '(
' → logprob: -14.002066612243652
    9. '(calc' → logprob: -15.127066612243652
    10. '(abs' → logprob: -15.252066612243652

Token 573: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.0018962714821100235
    2. 'put' → logprob: -6.376896381378174
    3. 'ute' → logprob: -9.001895904541016
    4. 'p' → logprob: -10.751895904541016
    5. ')' → logprob: -11.251895904541016
    6. '```' → logprob: -12.126895904541016
    7. 'pte' → logprob: -12.251895904541016
    8. 'puter' → logprob: -12.376895904541016
    9. 'pt' → logprob: -12.501895904541016
    10. ')
' → logprob: -12.876895904541016

Token 574: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -3.8889261304575484e-06
    2. '_ans' → logprob: -13.125003814697266
    3. '_' → logprob: -13.375003814697266
    4. '_answers' → logprob: -16.500003814697266
    5. 'answer' → logprob: -16.750003814697266
    6. '_argument' → logprob: -17.125003814697266
    7. '_question' → logprob: -17.125003814697266
    8. '(' → logprob: -17.500003814697266
    9. ' _' → logprob: -17.625003814697266
    10. 'Answer' → logprob: -17.750003814697266

Token 575: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00036906293826177716
    2. '(' → logprob: -8.00036907196045
    3. ')' → logprob: -10.62536907196045
    4. ' (' → logprob: -11.62536907196045
    5. ')(' → logprob: -15.12536907196045
    6. '(
' → logprob: -16.250368118286133
    7. '(ans' → logprob: -17.000368118286133
    8. ')n' → logprob: -17.625368118286133
    9. '((' → logprob: -18.125368118286133
    10. ' )' → logprob: -18.125368118286133

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -12.125006675720215
    3. ',
' → logprob: -14.500006675720215
    4. ' ,' → logprob: -14.875006675720215
    5. '))' → logprob: -16.0000057220459
    6. '(ans' → logprob: -16.3750057220459
    7. ',

' → logprob: -17.6250057220459
    8. ',n' → logprob: -18.2500057220459
    9. '),' → logprob: -18.5000057220459
    10. '   ' → logprob: -18.5000057220459

Token 577: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005234002135694027
    2. ' ans' → logprob: -5.2552337646484375
    3. '	ans' → logprob: -16.005233764648438
    4. '(ans' → logprob: -16.130233764648438
    5. 'answer' → logprob: -18.630233764648438
    6. ' ' → logprob: -19.380233764648438
    7. '   ' → logprob: -19.380233764648438
    8. 'abs' → logprob: -20.130233764648438
    9. '_ans' → logprob: -20.130233764648438
    10. '  ' → logprob: -21.005233764648438

Token 578: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1726170778274536
    2. '))' → logprob: -1.9226170778274536
    3. '())' → logprob: -4.422616958618164
    4. '()' → logprob: -8.172616958618164
    5. '()))' → logprob: -10.422616958618164
    6. ')))' → logprob: -14.422616958618164
    7. '])' → logprob: -15.172616958618164
    8. '})' → logprob: -15.422616958618164
    9. ' )' → logprob: -15.797616958618164
    10. ')")' → logprob: -16.047616958618164

Token 579: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005244783591479063
    2. 'main' → logprob: -5.255244731903076
    3. ' if' → logprob: -12.255245208740234
    4. '```' → logprob: -12.630245208740234
    5. '#' → logprob: -14.005245208740234
    6. '(main' → logprob: -14.380245208740234
    7. '<|end|>' → logprob: -14.505245208740234
    8. ' main' → logprob: -14.880245208740234
    9. '
' → logprob: -15.130245208740234
    10. '#if' → logprob: -17.130245208740234

Token 580: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 578
Tokens correctement prédits (1ère position, stricte): 247
Tokens correctement prédits (1ère position, avec adaptation): 281
Tokens correctement prédits (top 10): 517
Précision stricte (1ère position): 42.73%
Précision adaptée (1ère position): 48.62%
Précision (top 10): 89.45%
================================================================================
