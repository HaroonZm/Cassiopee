================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

# Parsing inputs
X, Y, Z = map(int, input().split())

# Swapping X and Y using tuple unpacking embedded in a map for obfuscation's sake
X, Y = map(lambda t: t[1], sorted(enumerate((X, Y)), key=itemgetter(0, 1))[::-1])

# Advanced swap between X and Z utilizing anonymous functions and a list comprehension black magic
def swap_positions(arr, pos1, pos2):
    return [arr[pos2] if i == pos1 else arr[pos1] if i == pos2 else v for i, v in enumerate(arr)]

(X, Y, Z) = reduce(lambda acc, _: swap_positions(acc, 0, 2), range(1), (X, Y, Z))

print(*[v for v in (X, Y, Z)])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.5358482003211975
    2. 'partial' → logprob: -1.0358481407165527
    3. 'reduce' → logprob: -3.0358481407165527
    4. ' wraps' → logprob: -5.160848140716553
    5. 'l' → logprob: -5.535848140716553
    6. 'cached' → logprob: -6.910848140716553
    7. 'cache' → logprob: -7.660848140716553
    8. ' partial' → logprob: -8.535848617553711
    9. 'cmp' → logprob: -8.660848617553711
    10. '```' → logprob: -8.785848617553711

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006976079195737839
    2. '(lambda' → logprob: -5.131976127624512
    3. ' (' → logprob: -7.756976127624512
    4. ',' → logprob: -8.506976127624512
    5. '```' → logprob: -9.256976127624512
    6. '.' → logprob: -9.381976127624512
    7. 'def' → logprob: -9.506976127624512
    8. '(
' → logprob: -10.256976127624512
    9. 'lambda' → logprob: -10.756976127624512
    10. '\(' → logprob: -10.881976127624512

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03125377744436264
    2. 'def' → logprob: -4.156253814697266
    3. '\' → logprob: -4.781253814697266
    4. ' ' → logprob: -5.906253814697266
    5. '(
' → logprob: -6.906253814697266
    6. ',' → logprob: -7.156253814697266
    7. '(lambda' → logprob: -7.906253814697266
    8. '```' → logprob: -8.281253814697266
    9. ' (' → logprob: -8.406253814697266
    10. 'd' → logprob: -8.781253814697266

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.32836058735847473
    2. ' math' → logprob: -1.7033605575561523
    3. 'operator' → logprob: -3.2033605575561523
    4. ' itertools' → logprob: -3.2033605575561523
    5. 'math' → logprob: -4.953360557556152
    6. ' collections' → logprob: -4.953360557556152
    7. ' os' → logprob: -6.703360557556152
    8. 'collections' → logprob: -7.578360557556152
    9. ' typing' → logprob: -8.078360557556152
    10. ' ' → logprob: -8.578360557556152

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02017967775464058
    2. 'import' → logprob: -4.020179748535156
    3. '.' → logprob: -6.770179748535156
    4. ' ' → logprob: -7.270179748535156
    5. ' .' → logprob: -9.145179748535156
    6. '.import' → logprob: -9.770179748535156
    7. '	import' → logprob: -11.520179748535156
    8. '_import' → logprob: -13.145179748535156
    9. '-import' → logprob: -13.395179748535156
    10. '<|end|>' → logprob: -13.645179748535156

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11149463802576065
    2. ' import' → logprob: -2.486494541168213
    3. 'add' → logprob: -4.486494541168213
    4. ' mul' → logprob: -4.861494541168213
    5. ' ' → logprob: -6.361494541168213
    6. 'import' → logprob: -7.236494541168213
    7. ' item' → logprob: -7.861494541168213
    8. 'mul' → logprob: -8.111495018005371
    9. ' icon' → logprob: -10.611495018005371
    10. 'item' → logprob: -10.736495018005371

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.006860651075839996
    2. 'get' → logprob: -5.006860733032227
    3. 'getitem' → logprob: -9.131860733032227
    4. 'gett' → logprob: -10.256860733032227
    5. 'item' → logprob: -14.256860733032227
    6. 'g' → logprob: -14.381860733032227
    7. '_get' → logprob: -15.881860733032227
    8. 'ge' → logprob: -16.131860733032227
    9. '.get' → logprob: -16.506860733032227
    10. '```' → logprob: -16.756860733032227

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27273815870285034
    2. ',' → logprob: -2.522738218307495
    3. '(
' → logprob: -2.772738218307495
    4. '\n' → logprob: -3.272738218307495
    5. '.' → logprob: -3.647738218307495
    6. '\' → logprob: -3.897738218307495
    7. ',
' → logprob: -5.647737979888916
    8. '\(' → logprob: -6.647737979888916
    9. '```' → logprob: -6.772737979888916
    10. '(

' → logprob: -7.022737979888916

Token 11: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2934642434120178
    2. ',' → logprob: -2.293464183807373
    3. '.' → logprob: -3.043464183807373
    4. '#' → logprob: -3.793464183807373
    5. '=' → logprob: -4.418464183807373
    6. 'def' → logprob: -4.418464183807373
    7. 'data' → logprob: -4.668464183807373
    8. '[' → logprob: -4.793464183807373
    9. '(
' → logprob: -4.918464183807373
    10. 'reduce' → logprob: -5.043464183807373

Token 12: ' Parsing' (ID: 173321)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007275191601365805
    2. '_' → logprob: -6.382275104522705
    3. 'd' → logprob: -7.257275104522705
    4. ' def' → logprob: -7.757275104522705
    5. ' #' → logprob: -7.757275104522705
    6. 'def' → logprob: -8.007275581359863
    7. ' sorted' → logprob: -8.382275581359863
    8. ' space' → logprob: -8.507275581359863
    9. ' The' → logprob: -8.757275581359863
    10. 'reduce' → logprob: -9.007275581359863

Token 13: ' inputs' (ID: 21963)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7904555797576904
    2. '(' → logprob: -1.0404555797576904
    3. 'json' → logprob: -2.9154555797576904
    4. '_' → logprob: -3.0404555797576904
    5. ',' → logprob: -4.0404558181762695
    6. 'def' → logprob: -4.5404558181762695
    7. ')' → logprob: -5.2904558181762695
    8. '_data' → logprob: -5.5404558181762695
    9. '(data' → logprob: -5.7904558181762695
    10. 's' → logprob: -5.7904558181762695

Token 14: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6484619975090027
    2. 'data' → logprob: -1.1484620571136475
    3. 'inputs' → logprob: -3.1484620571136475
    4. 'input' → logprob: -4.148461818695068
    5. 'numbers' → logprob: -4.273461818695068
    6. '```' → logprob: -4.398461818695068
    7. 'lines' → logprob: -4.773461818695068
    8. 'user' → logprob: -4.898461818695068
    9. 'nums' → logprob: -5.148461818695068
    10. '\n' → logprob: -5.148461818695068

Token 15: 'X' (ID: 55)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4777486324310303
    2. 'data' → logprob: -1.3527486324310303
    3. 'inputs' → logprob: -3.6027486324310303
    4. 'numbers' → logprob: -3.8527486324310303
    5. 'nums' → logprob: -4.227748870849609
    6. 'input' → logprob: -4.852748870849609
    7. 'num' → logprob: -4.977748870849609
    8. 'items' → logprob: -5.102748870849609
    9. 'keys' → logprob: -5.352748870849609
    10. '```' → logprob: -5.352748870849609

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2873675227165222
    2. ',' → logprob: -1.662367582321167
    3. '=' → logprob: -3.287367582321167
    4. '_' → logprob: -4.287367343902588
    5. 's' → logprob: -5.412367343902588
    6. ' ,' → logprob: -6.662367343902588
    7. '_input' → logprob: -7.912367343902588
    8. ' ' → logprob: -7.912367343902588
    9. ' _' → logprob: -7.912367343902588
    10. '_values' → logprob: -8.037367820739746

Token 17: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2735272943973541
    2. ' Y' → logprob: -1.5235272645950317
    3. 'y' → logprob: -4.148527145385742
    4. ' y' → logprob: -6.148527145385742
    5. '=' → logprob: -6.648527145385742
    6. ' =' → logprob: -7.273527145385742
    7. '_' → logprob: -7.648527145385742
    8. ' ' → logprob: -8.148527145385742
    9. 'N' → logprob: -8.523527145385742
    10. ''' → logprob: -9.648527145385742

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2023904174566269
    2. '=' → logprob: -1.702390432357788
    3. ',' → logprob: -6.952390193939209
    4. '<|end|>' → logprob: -12.077390670776367
    5. ')' → logprob: -12.327390670776367
    6. ' ' → logprob: -12.827390670776367
    7. '=input' → logprob: -13.202390670776367
    8. ' ,' → logprob: -13.827390670776367
    9. ' =
' → logprob: -14.577390670776367
    10. '=

' → logprob: -14.702390670776367

Token 19: ' Z' (ID: 1489)
  Prédit: ' Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.6424248218536377
    2. 'Z' → logprob: -1.1424248218536377
    3. ' =' → logprob: -2.6424248218536377
    4. ' N' → logprob: -3.2674248218536377
    5. 'N' → logprob: -3.6424248218536377
    6. '=' → logprob: -4.767424583435059
    7. '_' → logprob: -6.142424583435059
    8. ' ' → logprob: -6.267424583435059
    9. ' K' → logprob: -7.142424583435059
    10. 'K' → logprob: -7.517424583435059

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12711435556411743
    2. '=' → logprob: -2.1271142959594727
    3. ',' → logprob: -8.627114295959473
    4. '=input' → logprob: -13.002114295959473
    5. ' ' → logprob: -13.627114295959473
    6. ')' → logprob: -13.752114295959473
    7. ' ,' → logprob: -14.377114295959473
    8. '=int' → logprob: -15.377114295959473
    9. '```' → logprob: -15.502114295959473
    10. '<|end|>' → logprob: -15.502114295959473

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06847263872623444
    2. 'map' → logprob: -2.8184726238250732
    3. ' input' → logprob: -5.193472862243652
    4. 'input' → logprob: -7.443472862243652
    5. ' list' → logprob: -8.443472862243652
    6. ' ' → logprob: -9.943472862243652
    7. '0' → logprob: -10.693472862243652
    8. 'list' → logprob: -10.943472862243652
    9. ' int' → logprob: -11.943472862243652
    10. 'int' → logprob: -11.943472862243652

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08006788045167923
    2. '(' → logprob: -2.5800678730010986
    3. '(str' → logprob: -7.205068111419678
    4. '(input' → logprob: -8.45506763458252
    5. 'int' → logprob: -9.58006763458252
    6. '(
' → logprob: -9.58006763458252
    7. '(lambda' → logprob: -9.70506763458252
    8. '(eval' → logprob: -11.70506763458252
    9. '(float' → logprob: -12.83006763458252
    10. '(list' → logprob: -12.95506763458252

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3862346410751343
    2. ',input' → logprob: -1.5112346410751343
    3. ',' → logprob: -3.011234760284424
    4. 'input' → logprob: -3.261234760284424
    5. ')' → logprob: -4.636234760284424
    6. '(' → logprob: -6.386234760284424
    7. '),' → logprob: -8.386234283447266
    8. ' input' → logprob: -8.636234283447266
    9. '=input' → logprob: -9.136234283447266
    10. '[input' → logprob: -10.386234283447266

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759719014167786
    2. ' input' → logprob: -0.8259719014167786
    3. ')' → logprob: -10.450971603393555
    4. '(input' → logprob: -14.075971603393555
    5. '=input' → logprob: -14.200971603393555
    6. ' )' → logprob: -14.325971603393555
    7. ',input' → logprob: -14.575971603393555
    8. ' ' → logprob: -15.075971603393555
    9. '```' → logprob: -15.200971603393555
    10. '	input' → logprob: -15.450971603393555

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015156840905547142
    2. '()' → logprob: -4.3901567459106445
    3. '())' → logprob: -6.1401567459106445
    4. ')' → logprob: -7.8901567459106445
    5. '(' → logprob: -10.015156745910645
    6. '());' → logprob: -10.890156745910645
    7. '('').' → logprob: -11.515156745910645
    8. '('' → logprob: -11.765156745910645
    9. '()))' → logprob: -12.265156745910645
    10. '()>' → logprob: -12.265156745910645

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005550591740757227
    2. 'strip' → logprob: -7.500555038452148
    3. 'rstrip' → logprob: -13.750555038452148
    4. ' split' → logprob: -14.125555038452148
    5. '(split' → logprob: -15.625555038452148
    6. 'spl' → logprob: -17.00055503845215
    7. 'read' → logprob: -17.12555503845215
    8. 'sp' → logprob: -19.37555503845215
    9. ')' → logprob: -19.75055503845215
    10. '```' → logprob: -19.87555503845215

Token 27: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19548095762729645
    2. '())' → logprob: -1.8204809427261353
    3. '('' → logprob: -4.945480823516846
    4. '))' → logprob: -4.945480823516846
    5. '()' → logprob: -7.570480823516846
    6. '(' → logprob: -8.070481300354004
    7. '()))' → logprob: -8.445481300354004
    8. '(','' → logprob: -9.320481300354004
    9. '`)' → logprob: -9.570481300354004
    10. '')' → logprob: -9.570481300354004

Token 28: '#' (ID: 2)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1251064538955688
    2. 'points' → logprob: -1.5001064538955688
    3. 'matrix' → logprob: -2.3751063346862793
    4. 'items' → logprob: -2.3751063346862793
    5. 'lst' → logprob: -3.0001063346862793
    6. 'arr' → logprob: -3.3751063346862793
    7. 'coordinates' → logprob: -3.7501063346862793
    8. 'array' → logprob: -4.000106334686279
    9. 'values' → logprob: -4.250106334686279
    10. 'numbers' → logprob: -4.375106334686279

Token 29: ' Sw' (ID: 6529)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.766534686088562
    2. ' data' → logprob: -2.2665348052978516
    3. 'lst' → logprob: -2.3915348052978516
    4. 'points' → logprob: -2.5165348052978516
    5. 'arr' → logprob: -2.8915348052978516
    6. ' points' → logprob: -3.0165348052978516
    7. 'items' → logprob: -3.1415348052978516
    8. 'values' → logprob: -3.3915348052978516
    9. ' lst' → logprob: -3.8915348052978516
    10. 'nums' → logprob: -3.8915348052978516

Token 30: 'apping' (ID: 5041)
  Prédit: 'apping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apping' → logprob: -0.3260232210159302
    2. 'ap' → logprob: -1.3260232210159302
    3. 'apped' → logprob: -4.951023101806641
    4. 'aps' → logprob: -6.201023101806641
    5. 'itch' → logprob: -6.451023101806641
    6. 'aping' → logprob: -7.326023101806641
    7. 'app' → logprob: -7.826023101806641
    8. 'a' → logprob: -8.82602310180664
    9. 'apper' → logprob: -8.82602310180664
    10. 'itched' → logprob: -9.45102310180664

Token 31: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.011541237123310566
    2. ' X' → logprob: -4.761541366577148
    3. 'Y' → logprob: -6.136541366577148
    4. 'if' → logprob: -7.511541366577148
    5. ' if' → logprob: -9.136541366577148
    6. ' Y' → logprob: -10.386541366577148
    7. 'x' → logprob: -10.511541366577148
    8. 'Z' → logprob: -11.386541366577148
    9. ',' → logprob: -11.386541366577148
    10. '(X' → logprob: -11.886541366577148

Token 32: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004497773014008999
    2. ' and' → logprob: -5.75449800491333
    3. 'and' → logprob: -6.87949800491333
    4. ' ,' → logprob: -9.004497528076172
    5. ',Y' → logprob: -9.754497528076172
    6. ',X' → logprob: -9.754497528076172
    7. '=' → logprob: -10.879497528076172
    8. 'X' → logprob: -11.754497528076172
    9. ' ' → logprob: -12.129497528076172
    10. ',Z' → logprob: -12.754497528076172

Token 33: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2072807252407074
    2. ' Y' → logprob: -1.9572807550430298
    3. 'Z' → logprob: -3.2072806358337402
    4. ' Z' → logprob: -5.20728063583374
    5. ' ' → logprob: -11.332281112670898
    6. '	Y' → logprob: -13.019781112670898
    7. 'X' → logprob: -13.207281112670898
    8. '```' → logprob: -13.644781112670898
    9. '   ' → logprob: -14.144781112670898
    10. 'YZ' → logprob: -14.519781112670898

Token 34: ' using' (ID: 2360)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00017874970217235386
    2. ',' → logprob: -9.250178337097168
    3. 'if' → logprob: -10.250178337097168
    4. ' X' → logprob: -10.625178337097168
    5. '```' → logprob: -11.875178337097168
    6. 'Y' → logprob: -12.125178337097168
    7. 'x' → logprob: -12.250178337097168
    8. 'tmp' → logprob: -13.500178337097168
    9. ' if' → logprob: -13.625178337097168
    10. 'temp' → logprob: -13.875178337097168

Token 35: ' tuple' (ID: 31311)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0547042042016983
    2. 'tuple' → logprob: -3.804704189300537
    3. 'a' → logprob: -4.179704189300537
    4. 'temp' → logprob: -5.554704189300537
    5. 'tmp' → logprob: -6.054704189300537
    6. 'Y' → logprob: -6.054704189300537
    7. ' X' → logprob: -6.179704189300537
    8. 'x' → logprob: -6.804704189300537
    9. ' tuple' → logprob: -6.929704189300537
    10. ' a' → logprob: -7.429704189300537

Token 36: ' unpack' (ID: 61704)
  Prédit: '_unpack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unpack' → logprob: -0.4561673104763031
    2. ' unpack' → logprob: -1.2061673402786255
    3. ' assignment' → logprob: -3.581167221069336
    4. ' =' → logprob: -4.456167221069336
    5. '=' → logprob: -4.581167221069336
    6. 'assignment' → logprob: -4.956167221069336
    7. '_' → logprob: -5.456167221069336
    8. '_assignment' → logprob: -5.956167221069336
    9. '_swap' → logprob: -6.706167221069336
    10. 'un' → logprob: -7.081167221069336

Token 37: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.06219107657670975
    2. '=' → logprob: -2.8121910095214844
    3. '=X' → logprob: -9.812191009521484
    4. ' =' → logprob: -10.187191009521484
    5. 'X' → logprob: -10.312191009521484
    6. 'ng' → logprob: -10.437191009521484
    7. '=(' → logprob: -10.687191009521484
    8. '```' → logprob: -11.687191009521484
    9. '   ' → logprob: -12.062191009521484
    10. '(' → logprob: -12.187191009521484

Token 38: ' embedded' (ID: 38658)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0015677111223340034
    2. 'Y' → logprob: -6.501567840576172
    3. ' X' → logprob: -10.126567840576172
    4. '(X' → logprob: -11.001567840576172
    5. '```' → logprob: -12.626567840576172
    6. '`' → logprob: -13.376567840576172
    7. 'x' → logprob: -13.626567840576172
    8. '(' → logprob: -13.626567840576172
    9. ',' → logprob: -15.251567840576172
    10. ' (' → logprob: -15.751567840576172

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20533594489097595
    2. 'in' → logprob: -1.7053359746932983
    3. ' =' → logprob: -6.455336093902588
    4. '=' → logprob: -6.955336093902588
    5. '_in' → logprob: -8.08033561706543
    6. ' within' → logprob: -8.08033561706543
    7. '[' → logprob: -8.95533561706543
    8. ',' → logprob: -9.33033561706543
    9. '_' → logprob: -9.45533561706543
    10. ' inside' → logprob: -9.70533561706543

Token 40: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1510056257247925
    2. 'X' → logprob: -1.4010056257247925
    3. 'list' → logprob: -2.026005744934082
    4. 'input' → logprob: -2.901005744934082
    5. ' a' → logprob: -3.151005744934082
    6. 'Z' → logprob: -3.151005744934082
    7. 'Y' → logprob: -3.401005744934082
    8. 'the' → logprob: -4.026005744934082
    9. '[]' → logprob: -4.026005744934082
    10. 'print' → logprob: -4.651005744934082

Token 41: ' map' (ID: 4014)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.647436797618866
    2. 'list' → logprob: -1.1474368572235107
    3. ' lambda' → logprob: -3.1474368572235107
    4. 'print' → logprob: -3.2724368572235107
    5. ' list' → logprob: -4.147436618804932
    6. 'tuple' → logprob: -4.647436618804932
    7. 'reduce' → logprob: -4.897436618804932
    8. 'X' → logprob: -4.897436618804932
    9. '(lambda' → logprob: -5.022436618804932
    10. ')' → logprob: -5.647436618804932

Token 42: ' for' (ID: 395)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6043726801872253
    2. 'print' → logprob: -1.4793727397918701
    3. '(lambda' → logprob: -2.10437273979187
    4. 'list' → logprob: -3.22937273979187
    5. 'map' → logprob: -3.35437273979187
    6. 'X' → logprob: -4.229372501373291
    7. '_' → logprob: -5.479372501373291
    8. 'swap' → logprob: -5.979372501373291
    9. '```' → logprob: -6.604372501373291
    10. 'tuple' → logprob: -6.604372501373291

Token 43: ' ob' (ID: 1067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13618400692939758
    2. 'lambda' → logprob: -2.761183977127075
    3. 'None' → logprob: -3.386183977127075
    4. 'a' → logprob: -5.011184215545654
    5. 'side' → logprob: -5.011184215545654
    6. ' None' → logprob: -5.761184215545654
    7. ' lambda' → logprob: -5.886184215545654
    8. '(lambda' → logprob: -6.761184215545654
    9. 'assignment' → logprob: -7.011184215545654
    10. 'com' → logprob: -7.261184215545654

Token 44: 'fusc' (ID: 96715)
  Prédit: 'fusc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusc' → logprob: -0.5083403587341309
    2. 'ject' → logprob: -1.7583403587341309
    3. 'fuscated' → logprob: -2.633340358734131
    4. 'map' → logprob: -3.008340358734131
    5. 'sc' → logprob: -3.258340358734131
    6. 'f' → logprob: -4.008340358734131
    7. 'servable' → logprob: -4.133340358734131
    8. 'serve' → logprob: -5.008340358734131
    9. 'jective' → logprob: -5.133340358734131
    10. 'server' → logprob: -6.258340358734131

Token 45: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.01381261833012104
    2. 'ate' → logprob: -4.38881254196167
    3. 'ated' → logprob: -7.63881254196167
    4. 'at' → logprob: -8.638813018798828
    5. 'e' → logprob: -9.263813018798828
    6. 'a' → logprob: -9.263813018798828
    7. 'ating' → logprob: -9.388813018798828
    8. ' at' → logprob: -9.763813018798828
    9. 'ity' → logprob: -10.388813018798828
    10. 'ous' → logprob: -10.763813018798828

Token 46: ''s' (ID: 885)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7273492813110352
    2. 'print' → logprob: -1.1023492813110352
    3. ')' → logprob: -2.852349281311035
    4. 'map' → logprob: -2.977349281311035
    5. 'lambda' → logprob: -3.852349281311035
    6. 'X' → logprob: -3.977349281311035
    7. '_' → logprob: -3.977349281311035
    8. '(lambda' → logprob: -4.727349281311035
    9. '```' → logprob: -5.852349281311035
    10. ')(' → logprob: -6.852349281311035

Token 47: ' sake' (ID: 39035)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -1.3388921022415161
    2. 'effect' → logprob: -1.7138921022415161
    3. 'side' → logprob: -1.8388921022415161
    4. ' effect' → logprob: -2.0888919830322266
    5. 'lambda' → logprob: -2.3388919830322266
    6. ' lambda' → logprob: -3.7138919830322266
    7. '_' → logprob: -3.9638919830322266
    8. ' _' → logprob: -4.463891983032227
    9. 'pur' → logprob: -4.463891983032227
    10. '```' → logprob: -4.838891983032227

Token 48: '
' (ID: 198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2116440236568451
    2. 'X' → logprob: -2.211643934249878
    3. 'print' → logprob: -3.961643934249878
    4. '_' → logprob: -4.086644172668457
    5. ')' → logprob: -4.211644172668457
    6. 'map' → logprob: -4.586644172668457
    7. 'tuple' → logprob: -4.961644172668457
    8. '```' → logprob: -6.086644172668457
    9. '*' → logprob: -6.336644172668457
    10. '(lambda' → logprob: -6.461644172668457

Token 49: 'X' (ID: 55)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4637315571308136
    2. '_' → logprob: -1.3387315273284912
    3. 'X' → logprob: -2.588731527328491
    4. 'print' → logprob: -4.46373176574707
    5. 'map' → logprob: -4.83873176574707
    6. 'tuple' → logprob: -4.96373176574707
    7. '_=' → logprob: -6.33873176574707
    8. '*' → logprob: -6.33873176574707
    9. '_,' → logprob: -7.08873176574707
    10. ' list' → logprob: -7.21373176574707

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013909504050388932
    2. ',Y' → logprob: -6.7513909339904785
    3. ' ,' → logprob: -9.126391410827637
    4. '=' → logprob: -9.376391410827637
    5. 'Y' → logprob: -12.001391410827637
    6. ' Y' → logprob: -12.376391410827637
    7. ',Z' → logprob: -12.501391410827637
    8. ' =' → logprob: -12.751391410827637
    9. ',X' → logprob: -13.126391410827637
    10. ',y' → logprob: -13.563891410827637

Token 51: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.14507101476192474
    2. ' Y' → logprob: -2.020071029663086
    3. 'map' → logprob: -6.520071029663086
    4. ' map' → logprob: -7.145071029663086
    5. 'list' → logprob: -10.645071029663086
    6. '*' → logprob: -10.645071029663086
    7. 'Z' → logprob: -10.770071029663086
    8. ' ' → logprob: -10.895071029663086
    9. 'X' → logprob: -11.895071029663086
    10. '_' → logprob: -11.895071029663086

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889242470264435
    2. ' =' → logprob: -2.578892469406128
    3. ',' → logprob: -13.828892707824707
    4. '=list' → logprob: -13.828892707824707
    5. '=

' → logprob: -15.203892707824707
    6. '=
' → logprob: -16.32889175415039
    7. ' ' → logprob: -16.82889175415039
    8. ')' → logprob: -16.95389175415039
    9. '=X' → logprob: -16.95389175415039
    10. '＝' → logprob: -16.95389175415039

Token 53: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4742662012577057
    2. ' map' → logprob: -0.9742661714553833
    3. '*' → logprob: -9.224266052246094
    4. 'tuple' → logprob: -10.224266052246094
    5. ' tuple' → logprob: -10.849266052246094
    6. 'list' → logprob: -11.099266052246094
    7. '   ' → logprob: -11.849266052246094
    8. ' list' → logprob: -12.349266052246094
    9. '(map' → logprob: -13.099266052246094
    10. '	map' → logprob: -13.724266052246094

Token 54: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2888345420360565
    2. '(int' → logprob: -1.413834571838379
    3. '(tuple' → logprob: -5.288834571838379
    4. '(str' → logprob: -6.663834571838379
    5. 'lambda' → logprob: -7.913834571838379
    6. '(' → logprob: -7.913834571838379
    7. '(list' → logprob: -8.038834571838379
    8. '((' → logprob: -9.663834571838379
    9. '(type' → logprob: -9.913834571838379
    10. '(operator' → logprob: -10.038834571838379

Token 55: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7913315296173096
    2. 'a' → logprob: -1.5413315296173096
    3. ' t' → logprob: -2.5413315296173096
    4. 't' → logprob: -2.6663315296173096
    5. ' x' → logprob: -2.9163315296173096
    6. ' a' → logprob: -3.1663315296173096
    7. 'i' → logprob: -3.2913315296173096
    8. ' i' → logprob: -4.2913312911987305
    9. 'b' → logprob: -4.6663312911987305
    10. 'lambda' → logprob: -4.7913312911987305

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005685360636562109
    2. 't' → logprob: -5.755685329437256
    3. ' :' → logprob: -6.255685329437256
    4. ':t' → logprob: -8.005685806274414
    5. ' t' → logprob: -8.630685806274414
    6. ',' → logprob: -10.755685806274414
    7. ':X' → logprob: -11.130685806274414
    8. 'lambda' → logprob: -12.255685806274414
    9. 's' → logprob: -12.755685806274414
    10. 'X' → logprob: -12.880685806274414

Token 57: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1445225179195404
    2. ' t' → logprob: -2.0195224285125732
    3. 'Y' → logprob: -6.769522666931152
    4. ' Y' → logprob: -7.769522666931152
    5. ')' → logprob: -10.144522666931152
    6. '   ' → logprob: -10.394522666931152
    7. ' ' → logprob: -10.394522666931152
    8. ' -' → logprob: -10.582022666931152
    9. '(t' → logprob: -10.707022666931152
    10. '-' → logprob: -10.769522666931152

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19424386322498322
    2. '[t' → logprob: -2.319243907928467
    3. '[X' → logprob: -2.819243907928467
    4. ',' → logprob: -5.444243907928467
    5. '[Y' → logprob: -5.944243907928467
    6. '),' → logprob: -6.194243907928467
    7. '[int' → logprob: -6.819243907928467
    8. '(t' → logprob: -6.819243907928467
    9. ' t' → logprob: -6.819243907928467
    10. '(X' → logprob: -7.069243907928467

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04993743076920509
    2. '0' → logprob: -3.0499374866485596
    3. 'X' → logprob: -7.5499372482299805
    4. 'Y' → logprob: -7.5499372482299805
    5. 't' → logprob: -8.67493724822998
    6. '-' → logprob: -10.17493724822998
    7. ' ' → logprob: -11.48743724822998
    8. '{' → logprob: -11.92493724822998
    9. '{}' → logprob: -11.92493724822998
    10. '```' → logprob: -12.17493724822998

Token 60: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4560316503047943
    2. ',' → logprob: -1.2060316801071167
    3. '),' → logprob: -3.456031560897827
    4. ':],' → logprob: -4.831031799316406
    5. ':' → logprob: -5.081031799316406
    6. '1' → logprob: -5.081031799316406
    7. '0' → logprob: -5.456031799316406
    8. 'X' → logprob: -5.831031799316406
    9. ' ,' → logprob: -6.956031799316406
    10. '>,' → logprob: -6.956031799316406

Token 61: ' sorted' (ID: 20099)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7184587717056274
    2. 'zip' → logprob: -0.8434587717056274
    3. 'enumer' → logprob: -3.218458652496338
    4. ' zip' → logprob: -3.843458652496338
    5. '[' → logprob: -4.593458652496338
    6. ' enumerate' → logprob: -6.093458652496338
    7. '[((' → logprob: -6.218458652496338
    8. 'map' → logprob: -6.218458652496338
    9. ' [(' → logprob: -6.343458652496338
    10. 'filter' → logprob: -6.468458652496338

Token 62: '(en' (ID: 36375)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.0008598887361586094
    2. '(((' → logprob: -8.250860214233398
    3. '(zip' → logprob: -8.250860214233398
    4. '([' → logprob: -8.375860214233398
    5. '((' → logprob: -9.750860214233398
    6. '[(' → logprob: -10.875860214233398
    7. '([[' → logprob: -11.750860214233398
    8. 'zip' → logprob: -12.375860214233398
    9. '([
' → logprob: -12.500860214233398
    10. '(en' → logprob: -12.500860214233398

Token 63: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.0002015139180002734
    2. 'um' → logprob: -9.000201225280762
    3. 'ume' → logprob: -9.625201225280762
    4. 'numer' → logprob: -12.625201225280762
    5. 'umerator' → logprob: -13.125201225280762
    6. 'u' → logprob: -13.250201225280762
    7. 'ummer' → logprob: -13.375201225280762
    8. 'uem' → logprob: -14.250201225280762
    9. '(en' → logprob: -14.500201225280762
    10. 'uer' → logprob: -14.625201225280762

Token 64: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.05700553581118584
    2. 'ated' → logprob: -3.3070056438446045
    3. 'te' → logprob: -4.807005405426025
    4. 'rate' → logprob: -5.307005405426025
    5. 'X' → logprob: -6.557005405426025
    6. 'rated' → logprob: -6.807005405426025
    7. 'ted' → logprob: -7.307005405426025
    8. '```' → logprob: -7.932005405426025
    9. '(X' → logprob: -8.057005882263184
    10. 'e' → logprob: -8.432005882263184

Token 65: '((' (ID: 2054)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.023384541273117065
    2. '((' → logprob: -3.7733845710754395
    3. '(([' → logprob: -9.148384094238281
    4. '(X' → logprob: -11.398384094238281
    5. '(' → logprob: -11.898384094238281
    6. '([(' → logprob: -12.273384094238281
    7. '[' → logprob: -12.898384094238281
    8. '[(' → logprob: -12.898384094238281
    9. ' ([' → logprob: -13.648384094238281
    10. '[X' → logprob: -14.148384094238281

Token 66: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.044368188828229904
    2. 'Y' → logprob: -3.169368267059326
    3. '(X' → logprob: -6.919368267059326
    4. '[X' → logprob: -8.544367790222168
    5. ' X' → logprob: -9.669367790222168
    6. '(Y' → logprob: -10.044367790222168
    7. '[Y' → logprob: -10.919367790222168
    8. 'XY' → logprob: -11.919367790222168
    9. ')' → logprob: -11.919367790222168
    10. '   ' → logprob: -12.044367790222168

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010615389794111252
    2. ',Y' → logprob: -4.635615348815918
    3. ' ,' → logprob: -7.135615348815918
    4. 'Y' → logprob: -10.010615348815918
    5. ' Y' → logprob: -12.135615348815918
    6. ',X' → logprob: -12.510615348815918
    7. ',
' → logprob: -13.135615348815918
    8. ' ' → logprob: -13.385615348815918
    9. ',y' → logprob: -13.885615348815918
    10. ',Z' → logprob: -14.635615348815918

Token 68: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.016036245971918106
    2. ' Y' → logprob: -4.141036033630371
    3. '	Y' → logprob: -14.516036033630371
    4. ' ' → logprob: -14.891036033630371
    5. ',Y' → logprob: -15.391036033630371
    6. 'y' → logprob: -15.391036033630371
    7. '   ' → logprob: -16.016036987304688
    8. ')' → logprob: -16.391036987304688
    9. '  ' → logprob: -16.516036987304688
    10. ',' → logprob: -16.703536987304688

Token 69: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.03936770185828209
    2. '),' → logprob: -3.41436767578125
    3. '))' → logprob: -5.91436767578125
    4. '))))' → logprob: -6.53936767578125
    5. ')))' → logprob: -7.66436767578125
    6. ' ' → logprob: -8.16436767578125
    7. ')' → logprob: -8.53936767578125
    8. '))),' → logprob: -8.66436767578125
    9. ')))),' → logprob: -8.78936767578125
    10. ')))))
' → logprob: -9.03936767578125

Token 70: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.01117314025759697
    2. ' key' → logprob: -4.636173248291016
    3. 'reverse' → logprob: -6.636173248291016
    4. '1' → logprob: -9.511173248291016
    5. ' reverse' → logprob: -11.011173248291016
    6. ' ' → logprob: -12.636173248291016
    7. ',key' → logprob: -13.136173248291016
    8. '	key' → logprob: -13.261173248291016
    9. '   ' → logprob: -13.511173248291016
    10. '0' → logprob: -13.511173248291016

Token 71: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.014274923130869865
    2. '=lambda' → logprob: -4.264275074005127
    3. '=' → logprob: -9.264274597167969
    4. 'item' → logprob: -11.014274597167969
    5. ' item' → logprob: -16.26427459716797
    6. 'lambda' → logprob: -17.13927459716797
    7. 'getitem' → logprob: -17.88927459716797
    8. ')item' → logprob: -17.88927459716797
    9. '$item' → logprob: -18.13927459716797
    10. '=int' → logprob: -18.13927459716797

Token 72: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -3.173704271830502e-06
    2. 'get' → logprob: -13.12500286102295
    3. '0' → logprob: -15.25000286102295
    4. 'setter' → logprob: -15.87500286102295
    5. 'giver' → logprob: -16.375003814697266
    6. 'getitem' → logprob: -16.500003814697266
    7. 'caller' → logprob: -16.625003814697266
    8. 'operator' → logprob: -16.625003814697266
    9. 'Getter' → logprob: -16.875003814697266
    10. 'finder' → logprob: -17.125003814697266

Token 73: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0638386607170105
    2. '0' → logprob: -2.8138387203216553
    3. '(' → logprob: -6.313838481903076
    4. ' ' → logprob: -10.813838958740234
    5. '```' → logprob: -11.063838958740234
    6. 'lambda' → logprob: -11.313838958740234
    7. '2' → logprob: -12.563838958740234
    8. '=' → logprob: -13.938838958740234
    9. '   ' → logprob: -14.063838958740234
    10. '
' → logprob: -14.063838958740234

Token 74: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07000689953565598
    2. '0' → logprob: -2.695006847381592
    3. ' ' → logprob: -9.69500732421875
    4. '   ' → logprob: -13.13250732421875
    5. '```' → logprob: -13.50750732421875
    6. 'x' → logprob: -14.38250732421875
    7. '	' → logprob: -14.44500732421875
    8. '  ' → logprob: -14.57000732421875
    9. '(' → logprob: -14.69500732421875
    10. '01' → logprob: -14.82000732421875

Token 75: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.06122051551938057
    2. '))' → logprob: -3.936220407485962
    3. '),' → logprob: -3.936220407485962
    4. ',' → logprob: -4.436220645904541
    5. ')' → logprob: -5.311220645904541
    6. ')))
' → logprob: -6.811220645904541
    7. '1' → logprob: -7.061220645904541
    8. ')[' → logprob: -7.686220645904541
    9. ')))

' → logprob: -8.186220169067383
    10. '[' → logprob: -8.561220169067383

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04202112928032875
    2. ' ' → logprob: -3.6670210361480713
    3. '0' → logprob: -4.16702127456665
    4. ')' → logprob: -11.292020797729492
    5. '))' → logprob: -11.292020797729492
    6. '   ' → logprob: -11.417020797729492
    7. '-' → logprob: -11.854520797729492
    8. '  ' → logprob: -12.167020797729492
    9. ' -' → logprob: -12.354520797729492
    10. '

' → logprob: -12.604520797729492

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026345230638980865
    2. '0' → logprob: -3.6513452529907227
    3. ' ' → logprob: -11.713845252990723
    4. 'lambda' → logprob: -12.088845252990723
    5. '))' → logprob: -12.463845252990723
    6. '' → logprob: -12.776345252990723
    7. '```' → logprob: -12.776345252990723
    8. ')),' → logprob: -13.588845252990723
    9. ')' → logprob: -13.588845252990723
    10. '   ' → logprob: -13.651345252990723

Token 78: '))[' (ID: 101036)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.021152613684535027
    2. ')' → logprob: -4.021152496337891
    3. '))' → logprob: -5.896152496337891
    4. '),' → logprob: -8.64615249633789
    5. '))))' → logprob: -10.64615249633789
    6. ' ' → logprob: -10.77115249633789
    7. ')))
' → logprob: -11.64615249633789
    8. ')));' → logprob: -12.02115249633789
    9. '')))' → logprob: -13.27115249633789
    10. ')))

' → logprob: -13.52115249633789

Token 79: '::-' (ID: 96612)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.1693350076675415
    2. ']))' → logprob: -1.6693350076675415
    3. '1' → logprob: -1.9193350076675415
    4. ')' → logprob: -2.044334888458252
    5. ':' → logprob: -2.294334888458252
    6. '])' → logprob: -2.419334888458252
    7. '-' → logprob: -4.794334888458252
    8. '0' → logprob: -5.169334888458252
    9. ')))' → logprob: -5.169334888458252
    10. ')])' → logprob: -5.294334888458252

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006470936816185713
    2. 'index' → logprob: -6.631471157073975
    3. 'call' → logprob: -6.881471157073975
    4. 'sort' → logprob: -7.006471157073975
    5. '(' → logprob: -7.131471157073975
    6. 'slice' → logprob: -7.131471157073975
    7. 'item' → logprob: -8.006470680236816
    8. 'seq' → logprob: -8.756470680236816
    9. 'm' → logprob: -8.881470680236816
    10. 'key' → logprob: -9.006470680236816

Token 81: '])

' (ID: 21045)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.28271982073783875
    2. ')' → logprob: -1.4077198505401611
    3. ')))' → logprob: -6.907719612121582
    4. '])' → logprob: -7.782719612121582
    5. ')])' → logprob: -9.657719612121582
    6. ']))' → logprob: -10.032719612121582
    7. '),' → logprob: -10.407719612121582
    8. ')]' → logprob: -12.532719612121582
    9. ')
' → logprob: -13.657719612121582
    10. '))))' → logprob: -13.907719612121582

Token 82: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' Advanced' (ID: 29017)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2394341379404068
    2. 'Z' → logprob: -1.6144341230392456
    3. '#' → logprob: -4.739434242248535
    4. 'X' → logprob: -6.989434242248535
    5. ' print' → logprob: -7.239434242248535
    6. ')' → logprob: -7.489434242248535
    7. ' ' → logprob: -7.739434242248535
    8. '<|end|>' → logprob: -7.864434242248535
    9. '```' → logprob: -7.989434242248535
    10. 'result' → logprob: -8.239434242248535

Token 84: ' swap' (ID: 25489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8381360173225403
    2. '_' → logprob: -2.2131359577178955
    3. '=' → logprob: -2.7131359577178955
    4. ' ' → logprob: -2.9631359577178955
    5. 'sorting' → logprob: -3.0881359577178955
    6. ' logic' → logprob: -3.2131359577178955
    7. ' math' → logprob: -3.7131359577178955
    8. ' sorting' → logprob: -3.8381359577178955
    9. 'math' → logprob: -3.8381359577178955
    10. ' code' → logprob: -4.463136196136475

Token 85: ' between' (ID: 2870)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.6076808571815491
    2. 'X' → logprob: -1.1076807975769043
    3. ',' → logprob: -2.4826807975769043
    4. 'Y' → logprob: -3.9826807975769043
    5. '(' → logprob: -4.982680797576904
    6. ' Z' → logprob: -5.607680797576904
    7. ' X' → logprob: -5.982680797576904
    8. ' ' → logprob: -6.857680797576904
    9. ' (' → logprob: -6.857680797576904
    10. ' ,' → logprob: -6.982680797576904

Token 86: ' X' (ID: 2127)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.15261824429035187
    2. 'X' → logprob: -2.277618169784546
    3. ' Y' → logprob: -3.652618169784546
    4. 'Z' → logprob: -4.652618408203125
    5. ' X' → logprob: -6.027618408203125
    6. ' Z' → logprob: -8.402618408203125
    7. '(' → logprob: -8.402618408203125
    8. '(Y' → logprob: -9.027618408203125
    9. ' (' → logprob: -9.277618408203125
    10. ''' → logprob: -9.715118408203125

Token 87: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07203153520822525
    2. ' and' → logprob: -2.8220314979553223
    3. 'and' → logprob: -4.822031497955322
    4. ' ,' → logprob: -6.322031497955322
    5. ',
' → logprob: -10.32203197479248
    6. ',Y' → logprob: -10.44703197479248
    7. 'Y' → logprob: -10.94703197479248
    8. ' ' → logprob: -11.32203197479248
    9. '<|end|>' → logprob: -11.44703197479248
    10. '=' → logprob: -11.69703197479248

Token 88: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.09342680871486664
    2. 'Y' → logprob: -2.8434267044067383
    3. ' Z' → logprob: -3.5934267044067383
    4. ' Y' → logprob: -5.718426704406738
    5. 'X' → logprob: -9.218426704406738
    6. ' ' → logprob: -10.718426704406738
    7. '(Z' → logprob: -11.593426704406738
    8. '(' → logprob: -12.030926704406738
    9. '```' → logprob: -12.093426704406738
    10. ' X' → logprob: -12.468426704406738

Token 89: ' utilizing' (ID: 29331)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.32945045828819275
    2. 'Z' → logprob: -1.4544504880905151
    3. 'Y' → logprob: -3.0794503688812256
    4. ' X' → logprob: -7.329450607299805
    5. ' Z' → logprob: -8.829450607299805
    6. '(X' → logprob: -9.579450607299805
    7. ' Y' → logprob: -9.704450607299805
    8. '(Z' → logprob: -10.079450607299805
    9. '(' → logprob: -10.204450607299805
    10. 'YZ' → logprob: -10.204450607299805

Token 90: ' anonymous' (ID: 39963)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1412525326013565
    2. 'zip' → logprob: -2.8912525177001953
    3. 'tuple' → logprob: -3.5162525177001953
    4. 'lambda' → logprob: -4.391252517700195
    5. 'X' → logprob: -5.016252517700195
    6. ' map' → logprob: -5.016252517700195
    7. 'a' → logprob: -5.141252517700195
    8. 'reduce' → logprob: -5.891252517700195
    9. 're' → logprob: -6.141252517700195
    10. 'sorted' → logprob: -6.266252517700195

Token 91: ' functions' (ID: 9964)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6616676449775696
    2. ' lambda' → logprob: -1.1616675853729248
    3. ' functions' → logprob: -1.7866675853729248
    4. 'functions' → logprob: -6.661667823791504
    5. '(lambda' → logprob: -6.911667823791504
    6. ' function' → logprob: -7.286667823791504
    7. '=lambda' → logprob: -8.286667823791504
    8. ' lamb' → logprob: -8.911667823791504
    9. 'function' → logprob: -9.661667823791504
    10. '```' → logprob: -10.411667823791504

Token 92: ' and' (ID: 326)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.15963074564933777
    2. 'Z' → logprob: -2.03463077545166
    3. ',' → logprob: -4.65963077545166
    4. '(X' → logprob: -6.15963077545166
    5. ' X' → logprob: -6.53463077545166
    6. 'lambda' → logprob: -7.28463077545166
    7. ' (' → logprob: -7.53463077545166
    8. '(' → logprob: -7.65963077545166
    9. 'map' → logprob: -7.90963077545166
    10. '(lambda' → logprob: -8.15963077545166

Token 93: ' a' (ID: 261)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.18336616456508636
    2. 'map' → logprob: -2.433366060256958
    3. ' reduce' → logprob: -3.058366060256958
    4. 'lambda' → logprob: -4.933366298675537
    5. ' map' → logprob: -5.183366298675537
    6. 'filter' → logprob: -5.308366298675537
    7. 'list' → logprob: -5.808366298675537
    8. 'zip' → logprob: -6.183366298675537
    9. '(lambda' → logprob: -6.683366298675537
    10. 'sorted' → logprob: -6.683366298675537

Token 94: ' list' (ID: 1562)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.290574312210083
    2. 'lambda' → logprob: -1.665574312210083
    3. 'reduce' → logprob: -2.040574312210083
    4. ' list' → logprob: -2.415574312210083
    5. 'map' → logprob: -2.915574312210083
    6. ' reduce' → logprob: -2.915574312210083
    7. '(lambda' → logprob: -3.165574312210083
    8. ' combination' → logprob: -3.290574312210083
    9. 'list' → logprob: -3.290574312210083
    10. ' map' → logprob: -3.415574312210083

Token 95: ' comprehension' (ID: 91423)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6669524312019348
    2. '[' → logprob: -2.04195237159729
    3. ' =' → logprob: -2.66695237159729
    4. 'comp' → logprob: -3.16695237159729
    5. ' comprehension' → logprob: -3.29195237159729
    6. '=' → logprob: -3.54195237159729
    7. '(
' → logprob: -3.66695237159729
    8. '(zip' → logprob: -3.66695237159729
    9. '[::-' → logprob: -3.66695237159729
    10. ':' → logprob: -4.166952610015869

Token 96: ' black' (ID: 5960)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.21402303874492645
    2. 'Z' → logprob: -2.0890231132507324
    3. '[' → logprob: -3.4640231132507324
    4. '_,' → logprob: -3.7140231132507324
    5. ' X' → logprob: -5.839023113250732
    6. '[X' → logprob: -5.839023113250732
    7. '_' → logprob: -6.214023113250732
    8. ',' → logprob: -6.214023113250732
    9. '[
' → logprob: -7.464023113250732
    10. ' [' → logprob: -7.714023113250732

Token 97: ' magic' (ID: 19745)
  Prédit: 'ox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ox' → logprob: -0.29560279846191406
    2. 'list' → logprob: -2.170602798461914
    3. 'box' → logprob: -2.795602798461914
    4. 'ist' → logprob: -3.545602798461914
    5. '[' → logprob: -4.670602798461914
    6. 'magic' → logprob: -5.170602798461914
    7. 'isting' → logprob: -5.295602798461914
    8. 'hole' → logprob: -5.670602798461914
    9. '<|end|>' → logprob: -5.795602798461914
    10. ' magic' → logprob: -5.920602798461914

Token 98: '
' (ID: 198)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12247420102357864
    2. 'Z' → logprob: -2.372474193572998
    3. '[' → logprob: -5.122474193572998
    4. ',' → logprob: -5.497474193572998
    5. ')' → logprob: -5.747474193572998
    6. ']' → logprob: -5.872474193572998
    7. ' X' → logprob: -6.497474193572998
    8. '[X' → logprob: -6.872474193572998
    9. '[
' → logprob: -7.372474193572998
    10. '```' → logprob: -7.997474193572998

Token 99: 'def' (ID: 1314)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.18966558575630188
    2. 'Z' → logprob: -1.8146655559539795
    3. '_,' → logprob: -5.439665794372559
    4. '[' → logprob: -6.189665794372559
    5. '[X' → logprob: -6.689665794372559
    6. '_' → logprob: -7.314665794372559
    7. '(X' → logprob: -7.439665794372559
    8. ' X' → logprob: -8.439665794372559
    9. '(Z' → logprob: -8.814665794372559
    10. '```' → logprob: -8.814665794372559

Token 100: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.2129966765642166
    2. ' swap' → logprob: -2.3379967212677
    3. 'f' → logprob: -3.2129967212677
    4. 'advanced' → logprob: -4.087996482849121
    5. '_swap' → logprob: -5.087996482849121
    6. ' f' → logprob: -5.462996482849121
    7. 'sw' → logprob: -5.587996482849121
    8. 'anonymous' → logprob: -5.712996482849121
    9. ' advanced' → logprob: -6.337996482849121
    10. 's' → logprob: -6.587996482849121

Token 101: '_positions' (ID: 93193)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009541803039610386
    2. '(lst' → logprob: -5.009541988372803
    3. '(x' → logprob: -6.509541988372803
    4. '(arr' → logprob: -7.634541988372803
    5. '(X' → logprob: -8.634541511535645
    6. '(A' → logprob: -9.384541511535645
    7. '(t' → logprob: -9.509541511535645
    8. '(nums' → logprob: -9.634541511535645
    9. '(i' → logprob: -9.759541511535645
    10. '(' → logprob: -9.884541511535645

Token 102: '(arr' (ID: 19646)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5169101357460022
    2. '(lst' → logprob: -1.0169100761413574
    3. '(arr' → logprob: -3.3919100761413574
    4. '(x' → logprob: -5.266910076141357
    5. '(l' → logprob: -6.766910076141357
    6. '(i' → logprob: -7.766910076141357
    7. '(X' → logprob: -8.016910552978516
    8. '(' → logprob: -8.266910552978516
    9. '(list' → logprob: -8.391910552978516
    10. '(array' → logprob: -8.891910552978516

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5815099477767944
    2. '):' → logprob: -0.8315099477767944
    3. '):
' → logprob: -5.331510066986084
    4. ')' → logprob: -7.831510066986084
    5. '):
' → logprob: -9.206509590148926
    6. ' ,' → logprob: -9.706509590148926
    7. '[' → logprob: -10.456509590148926
    8. '[]):' → logprob: -10.831509590148926
    9. '):

' → logprob: -11.081509590148926
    10. ':' → logprob: -11.206509590148926

Token 104: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6163240075111389
    2. 'pos' → logprob: -1.2413239479064941
    3. ' i' → logprob: -2.616323947906494
    4. 'idx' → logprob: -3.491323947906494
    5. ' pos' → logprob: -3.491323947906494
    6. ' idx' → logprob: -4.116323947906494
    7. ' positions' → logprob: -5.116323947906494
    8. 'positions' → logprob: -5.366323947906494
    9. 'indices' → logprob: -5.491323947906494
    10. ' indices' → logprob: -6.241323947906494

Token 105: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10090889781713486
    2. '):' → logprob: -2.6009089946746826
    3. '):
' → logprob: -3.8509089946746826
    4. ',' → logprob: -7.9759087562561035
    5. '):

' → logprob: -10.100909233093262
    6. '1' → logprob: -10.600909233093262
    7. ')' → logprob: -10.600909233093262
    8. 'ations' → logprob: -11.475909233093262
    9. 'ections' → logprob: -11.475909233093262
    10. ' ):' → logprob: -11.600909233093262

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017076305812224746
    2. ' ,' → logprob: -8.750170707702637
    3. '):' → logprob: -11.500170707702637
    4. '1' → logprob: -14.250170707702637
    5. 's' → logprob: -14.875170707702637
    6. '),' → logprob: -15.250170707702637
    7. ',pos' → logprob: -15.500170707702637
    8. ',
' → logprob: -15.625170707702637
    9. '):
' → logprob: -16.000171661376953
    10. ' ' → logprob: -16.125171661376953

Token 107: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3132764995098114
    2. ' pos' → logprob: -1.3132765293121338
    3. '	pos' → logprob: -11.438276290893555
    4. ' ' → logprob: -14.063276290893555
    5. '    ' → logprob: -14.063276290893555
    6. '   ' → logprob: -14.438276290893555
    7. ')' → logprob: -14.563276290893555
    8. ',pos' → logprob: -15.063276290893555
    9. '(pos' → logprob: -15.688276290893555
    10. '  ' → logprob: -15.813276290893555

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03370679169893265
    2. '1' → logprob: -3.4087069034576416
    3. 's' → logprob: -9.908706665039062
    4. '```' → logprob: -12.908706665039062
    5. '0' → logprob: -13.408706665039062
    6. ')' → logprob: -13.533706665039062
    7. ' ' → logprob: -14.158706665039062
    8. 'ections' → logprob: -14.408706665039062
    9. '=' → logprob: -14.533706665039062
    10. '[' → logprob: -14.783706665039062

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02650533616542816
    2. '):
' → logprob: -3.6515052318573
    3. '):
' → logprob: -9.401505470275879
    4. ')' → logprob: -9.901505470275879
    5. ' ):' → logprob: -10.401505470275879
    6. ',' → logprob: -11.026505470275879
    7. '   ' → logprob: -11.901505470275879
    8. ':' → logprob: -12.026505470275879
    9. '):

' → logprob: -12.901505470275879
    10. ' ' → logprob: -13.401505470275879

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004513788968324661
    2. ' arr' → logprob: -5.504513740539551
    3. ' return' → logprob: -9.00451374053955
    4. 'arr' → logprob: -9.12951374053955
    5. '	arr' → logprob: -9.75451374053955
    6. '[' → logprob: -10.00451374053955
    7. '[arr' → logprob: -10.25451374053955
    8. '    ' → logprob: -11.00451374053955
    9. '<|end|>' → logprob: -11.37951374053955
    10. '```' → logprob: -12.37951374053955

Token 111: ' return' (ID: 622)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.09789746254682541
    2. '   ' → logprob: -2.722897529602051
    3. ' arr' → logprob: -3.597897529602051
    4. '[arr' → logprob: -9.72289752960205
    5. '	arr' → logprob: -9.84789752960205
    6. 'tmp' → logprob: -11.09789752960205
    7. 'temp' → logprob: -11.09789752960205
    8. 'return' (adapté à ' return') → logprob: -11.09789752960205
    9. '```' → logprob: -11.59789752960205
    10. ' ' → logprob: -12.09789752960205

Token 112: ' [' (ID: 723)
  Prédit: '[arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arr' → logprob: -0.10175471752882004
    2. '[' → logprob: -2.476754665374756
    3. '[(' → logprob: -4.976754665374756
    4. 'arr' → logprob: -5.976754665374756
    5. '[
' → logprob: -6.101754665374756
    6. '[list' → logprob: -7.851754665374756
    7. '[item' → logprob: -8.476755142211914
    8. ' [' → logprob: -9.601755142211914
    9. 'list' → logprob: -9.601755142211914
    10. '(arr' → logprob: -10.226755142211914

Token 113: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.009919350035488605
    2. 'x' → logprob: -4.759919166564941
    3. '(arr' → logprob: -7.384919166564941
    4. 'v' → logprob: -8.634919166564941
    5. '(' → logprob: -9.259919166564941
    6. 'elem' → logprob: -9.509919166564941
    7. 'item' → logprob: -10.009919166564941
    8. 'val' → logprob: -10.009919166564941
    9. 'a' → logprob: -10.259919166564941
    10. '(x' → logprob: -10.384919166564941

Token 114: '[pos' (ID: 48272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029621463268995285
    2. '[pos' → logprob: -4.279621601104736
    3. 'i' → logprob: -4.404621601104736
    4. '[j' → logprob: -6.904621601104736
    5. 'if' → logprob: -7.404621601104736
    6. 'pos' → logprob: -7.529621601104736
    7. '[(' → logprob: -7.529621601104736
    8. '[' → logprob: -8.654621124267578
    9. '[idx' → logprob: -9.279621124267578
    10. ' if' → logprob: -10.029621124267578

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003034636378288269
    2. '1' → logprob: -6.253034591674805
    3. ']' → logprob: -7.003034591674805
    4. ' if' → logprob: -8.878034591674805
    5. 'if' → logprob: -10.753034591674805
    6. '   ' → logprob: -12.503034591674805
    7. '[' → logprob: -13.003034591674805
    8. ']==' → logprob: -13.003034591674805
    9. 'ter' → logprob: -13.128034591674805
    10. '0' → logprob: -13.128034591674805

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006957849953323603
    2. 'if' → logprob: -5.2569580078125
    3. ' if' → logprob: -6.3819580078125
    4. ']]' → logprob: -11.0069580078125
    5. '],' → logprob: -11.7569580078125
    6. '   ' → logprob: -12.5069580078125
    7. ' ' → logprob: -14.7569580078125
    8. '  ' → logprob: -15.0069580078125
    9. 'i' → logprob: -15.1319580078125
    10. ')' → logprob: -15.2569580078125

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1272289901971817
    2. ' if' → logprob: -2.1272289752960205
    3. '   ' → logprob: -8.127228736877441
    4. ' ' → logprob: -13.752228736877441
    5. ']' → logprob: -13.877228736877441
    6. '[i' → logprob: -14.627228736877441
    7. ',' → logprob: -14.752228736877441
    8. 'i' → logprob: -14.752228736877441
    9. '```' → logprob: -14.877228736877441
    10. '  ' → logprob: -15.002228736877441

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027320017106831074
    2. ' i' → logprob: -6.002731800079346
    3. 'idx' → logprob: -8.377732276916504
    4. ' ' → logprob: -11.877732276916504
    5. '   ' → logprob: -12.002732276916504
    6. 'index' → logprob: -12.377732276916504
    7. ' idx' → logprob: -12.502732276916504
    8. 'ix' → logprob: -13.502732276916504
    9. '	i' → logprob: -13.627732276916504
    10. '  ' → logprob: -13.752732276916504

Token 119: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10020915418863297
    2. ' ==' → logprob: -2.3502092361450195
    3. '=' → logprob: -14.47520923614502
    4. '==
' → logprob: -14.47520923614502
    5. ']==' → logprob: -14.60020923614502
    6. ' ' → logprob: -14.85020923614502
    7. '==(' → logprob: -15.72520923614502
    8. 'in' → logprob: -16.225208282470703
    9. 'else' → logprob: -16.350208282470703
    10. ' in' → logprob: -16.350208282470703

Token 120: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0006266565760597587
    2. ' pos' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.500627517700195
    4. '	pos' → logprob: -16.750627517700195
    5. ' ' → logprob: -17.000627517700195
    6. '  ' → logprob: -17.750627517700195
    7. 'position' → logprob: -18.875627517700195
    8. '
' → logprob: -19.625627517700195
    9. 'p' → logprob: -19.875627517700195
    10. '0' → logprob: -20.000627517700195

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. '2' → logprob: -10.12504768371582
    3. 'osition' → logprob: -12.87504768371582
    4. 'positions' → logprob: -13.87504768371582
    5. 'pos' → logprob: -14.25004768371582
    6. 'os' → logprob: -14.75004768371582
    7. ']' → logprob: -15.00004768371582
    8. 's' → logprob: -15.00004768371582
    9. 'def' → logprob: -15.00004768371582
    10. '<|end|>' → logprob: -15.12504768371582

Token 122: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12693440914154053
    2. 'else' → logprob: -2.12693452835083
    3. '    ' → logprob: -13.126934051513672
    4. '        ' → logprob: -13.626934051513672
    5. '   ' → logprob: -14.251934051513672
    6. ' els' → logprob: -14.501934051513672
    7. '	else' → logprob: -14.501934051513672
    8. '     ' → logprob: -15.126934051513672
    9. '  ' → logprob: -15.501934051513672
    10. ' ' → logprob: -15.626934051513672

Token 123: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007270221132785082
    2. ' arr' → logprob: -5.007270336151123
    3. '(arr' → logprob: -7.507270336151123
    4. '[arr' → logprob: -13.007269859313965
    5. ' (' → logprob: -13.382269859313965
    6. '   ' → logprob: -14.007269859313965
    7. '	arr' → logprob: -14.382269859313965
    8. '(' → logprob: -15.632269859313965
    9. '  ' → logprob: -16.88227081298828
    10. '[' → logprob: -16.88227081298828

Token 124: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0002776630863081664
    2. '[i' → logprob: -8.250277519226074
    3. 'pos' → logprob: -11.375277519226074
    4. '(pos' → logprob: -13.250277519226074
    5. 'if' → logprob: -14.125277519226074
    6. '==' → logprob: -14.125277519226074
    7. ' ==' → logprob: -15.250277519226074
    8. ',pos' → logprob: -15.625277519226074
    9. 'i' → logprob: -15.750277519226074
    10. '   ' → logprob: -15.875277519226074

Token 125: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.577532172203064
    2. '1' → logprob: -0.827532172203064
    3. '   ' → logprob: -7.4525322914123535
    4. 'i' → logprob: -7.7025322914123535
    5. ' ' → logprob: -9.077531814575195
    6. '[' → logprob: -9.327531814575195
    7. '0' → logprob: -9.452531814575195
    8. 'if' → logprob: -9.702531814575195
    9. '[i' → logprob: -10.202531814575195
    10. '  ' → logprob: -10.702531814575195

Token 126: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14432597160339355
    2. 'if' → logprob: -2.0193259716033936
    3. ']' → logprob: -6.519326210021973
    4. ' for' → logprob: -9.769326210021973
    5. ' ' → logprob: -10.394326210021973
    6. '   ' → logprob: -10.769326210021973
    7. ')' → logprob: -11.019326210021973
    8. 'for' → logprob: -11.144326210021973
    9. '    ' → logprob: -12.144326210021973
    10. '           ' → logprob: -12.394326210021973

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31333228945732117
    2. ' if' → logprob: -1.3133323192596436
    3. 'for' → logprob: -10.063332557678223
    4. '	if' → logprob: -11.688332557678223
    5. ' for' → logprob: -11.688332557678223
    6. ')' → logprob: -12.188332557678223
    7. ' ' → logprob: -13.063332557678223
    8. '   ' → logprob: -13.813332557678223
    9. '       ' → logprob: -14.563332557678223
    10. ']' → logprob: -14.938332557678223

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022655367851257
    2. ' i' → logprob: -1.910226583480835
    3. '   ' → logprob: -13.785226821899414
    4. '	i' → logprob: -14.535226821899414
    5. '    ' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.285226821899414
    7. '  ' → logprob: -15.785226821899414
    8. '(i' → logprob: -16.535226821899414
    9. '[i' → logprob: -17.535226821899414
    10. '...' → logprob: -17.785226821899414

Token 129: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020720958709717
    2. '==' → logprob: -2.3502073287963867
    3. '=' → logprob: -15.225207328796387
    4. ' ' → logprob: -16.10020637512207
    5. '===' → logprob: -16.22520637512207
    6. '==
' → logprob: -16.35020637512207
    7. ' ==
' → logprob: -17.60020637512207
    8. ']==' → logprob: -17.85020637512207
    9. ' =' → logprob: -18.22520637512207
    10. '...' → logprob: -18.47520637512207

Token 130: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004879915213678032
    2. ' pos' → logprob: -7.625487804412842
    3. ' ' → logprob: -16.87548828125
    4. '   ' → logprob: -18.25048828125
    5. '	pos' → logprob: -18.37548828125
    6. 'post' → logprob: -19.12548828125
    7. '  ' → logprob: -19.37548828125
    8. '(pos' → logprob: -19.62548828125
    9. '0' → logprob: -19.75048828125
    10. '[pos' → logprob: -19.87548828125

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005150251090526581
    2. 'pos' → logprob: -7.625514984130859
    3. 'os' → logprob: -10.87551498413086
    4. 's' → logprob: -12.00051498413086
    5. ' ' → logprob: -14.37551498413086
    6. 'swap' → logprob: -14.62551498413086
    7. '   ' → logprob: -15.12551498413086
    8. 'oss' → logprob: -15.37551498413086
    9. '1' → logprob: -17.12551498413086
    10. 'def' → logprob: -17.25051498413086

Token 132: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03804366663098335
    2. 'else' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.788043975830078
    4. '	else' → logprob: -14.663043975830078
    5. '   ' → logprob: -15.663043975830078
    6. '    ' → logprob: -16.663043975830078
    7. '       ' → logprob: -16.788043975830078
    8. '          ' → logprob: -16.788043975830078
    9. '  ' → logprob: -16.913043975830078
    10. '        ' → logprob: -16.913043975830078

Token 133: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037391725927591324
    2. 'arr' → logprob: -3.9123916625976562
    3. 'x' → logprob: -4.287391662597656
    4. ' i' → logprob: -5.912391662597656
    5. ' arr' → logprob: -9.537391662597656
    6. 'e' → logprob: -10.287391662597656
    7. 'a' → logprob: -10.287391662597656
    8. 'elem' → logprob: -10.412391662597656
    9. ' x' → logprob: -10.662391662597656
    10. 'v' → logprob: -10.662391662597656

Token 134: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1130492091178894
    2. 'for' → logprob: -2.238049268722534
    3. ' ' → logprob: -8.738049507141113
    4. '   ' → logprob: -10.863049507141113
    5. '	for' → logprob: -11.238049507141113
    6. '
' → logprob: -11.238049507141113
    7. ' in' → logprob: -11.863049507141113
    8. ')' → logprob: -12.488049507141113
    9. '       ' → logprob: -12.988049507141113
    10. '  ' → logprob: -12.988049507141113

Token 135: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07766057550907135
    2. ' range' → logprob: -2.70266056060791
    3. 'enumer' → logprob: -4.95266056060791
    4. 'arr' → logprob: -8.07766056060791
    5. 'i' → logprob: -9.07766056060791
    6. '(range' → logprob: -9.20266056060791
    7. ' enumerate' → logprob: -9.82766056060791
    8. ',' → logprob: -10.20266056060791
    9. 'v' → logprob: -12.07766056060791
    10. ' i' → logprob: -13.82766056060791

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20143789052963257
    2. ',v' → logprob: -1.7014379501342773
    3. 'v' → logprob: -11.451437950134277
    4. ',i' → logprob: -11.951437950134277
    5. ' ,' → logprob: -12.576437950134277
    6. 'in' → logprob: -13.076437950134277
    7. 'i' → logprob: -14.576437950134277
    8. ' in' → logprob: -15.076437950134277
    9. ',in' → logprob: -15.076437950134277
    10. ' v' → logprob: -15.201437950134277

Token 137: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0016430460382252932
    2. '(v' → logprob: -6.501643180847168
    3. ' v' → logprob: -9.001643180847168
    4. '(' → logprob: -11.126643180847168
    5. ' (' → logprob: -12.876643180847168
    6. 'enumer' → logprob: -16.25164222717285
    7. ',v' → logprob: -16.37664222717285
    8. '	v' → logprob: -18.50164222717285
    9. '(_,' → logprob: -18.75164222717285
    10. '_v' → logprob: -19.50164222717285

Token 138: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18063372373580933
    2. ' in' → logprob: -1.805633783340454
    3. 'enumer' → logprob: -7.180633544921875
    4. '<|end|>' → logprob: -10.180633544921875
    5. ',' → logprob: -10.305633544921875
    6. ' enumerate' → logprob: -10.430633544921875
    7. ')' → logprob: -10.805633544921875
    8. '

' → logprob: -14.055633544921875
    9. '<|end|>' → logprob: -14.180633544921875
    10. '
' → logprob: -14.305633544921875

Token 139: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00317783304490149
    2. ' enumerate' → logprob: -5.753177642822266
    3. 'en' → logprob: -16.503177642822266
    4. 'enum' → logprob: -17.753177642822266
    5. '```' → logprob: -18.003177642822266
    6. '(en' → logprob: -18.503177642822266
    7. 'Enumer' → logprob: -18.753177642822266
    8. ',' → logprob: -18.753177642822266
    9. '
' → logprob: -19.378177642822266
    10. '

' → logprob: -20.003177642822266

Token 140: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0381157360970974
    2. 'arr' → logprob: -3.2881157398223877
    3. ' arr' → logprob: -9.538115501403809
    4. '	arr' → logprob: -13.663115501403809
    5. '(' → logprob: -14.663115501403809
    6. '<arr' → logprob: -15.413115501403809
    7. '[arr' → logprob: -15.413115501403809
    8. ' (' → logprob: -15.538115501403809
    9. '_arr' → logprob: -16.913116455078125
    10. '$arr' → logprob: -17.163116455078125

Token 141: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004844154173042625
    2. ']' → logprob: -8.125484466552734
    3. ')' → logprob: -8.625484466552734
    4. ')]
' → logprob: -13.500484466552734
    5. '])]' → logprob: -13.500484466552734
    6. ' )' → logprob: -13.625484466552734
    7. '])' → logprob: -13.750484466552734
    8. '()]' → logprob: -14.000484466552734
    9. ')]

' → logprob: -14.125484466552734
    10. ')])' → logprob: -14.250484466552734

Token 142: '(X' (ID: 17061)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05450170487165451
    2. 'arr' → logprob: -3.05450177192688
    3. 'values' → logprob: -6.179501533508301
    4. 'result' → logprob: -6.804501533508301
    5. '[X' → logprob: -7.054501533508301
    6. 'vals' → logprob: -7.679501533508301
    7. '[' → logprob: -8.1795015335083
    8. ' X' → logprob: -9.0545015335083
    9. '#' → logprob: -9.3045015335083
    10. 'tmp' → logprob: -9.5545015335083

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004733294772449881
    2. ',Z' → logprob: -8.750473022460938
    3. ',Y' → logprob: -9.125473022460938
    4. ',
' → logprob: -9.375473022460938
    5. ',

' → logprob: -10.875473022460938
    6. ')' → logprob: -11.125473022460938
    7. '<|end|>' → logprob: -11.125473022460938
    8. '),' → logprob: -11.250473022460938
    9. '[' → logprob: -11.375473022460938
    10. ' ,' → logprob: -11.500473022460938

Token 144: ' Y' (ID: 865)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0025493851862847805
    2. 'Y' → logprob: -6.252549171447754
    3. ' Z' → logprob: -8.127549171447754
    4. 'X' → logprob: -8.502549171447754
    5. ')' → logprob: -9.127549171447754
    6. 'swap' → logprob: -11.752549171447754
    7. '[' → logprob: -14.252549171447754
    8. ' Y' → logprob: -14.252549171447754
    9. 'z' → logprob: -14.877549171447754
    10. '	Z' → logprob: -14.877549171447754

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.591415437171236e-05
    2. ',Z' → logprob: -9.750096321105957
    3. ' ,' → logprob: -11.000096321105957
    4. ')' → logprob: -11.250096321105957
    5. ',
' → logprob: -12.875096321105957
    6. 'Z' → logprob: -13.000096321105957
    7. '<|end|>' → logprob: -13.875096321105957
    8. ',

' → logprob: -14.375096321105957
    9. 's' → logprob: -16.06259536743164
    10. '...' → logprob: -16.12509536743164

Token 146: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.03388887271285057
    2. ' Z' → logprob: -3.408888816833496
    3. ')' → logprob: -8.533888816833496
    4. 'X' → logprob: -10.783888816833496
    5. 'swap' → logprob: -11.533888816833496
    6. '[' → logprob: -12.408888816833496
    7. ' swap' → logprob: -12.783888816833496
    8. '(Z' → logprob: -13.158888816833496
    9. ' ' → logprob: -13.283888816833496
    10. ' X' → logprob: -13.783888816833496

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004896456957794726
    2. ')=' → logprob: -7.875489711761475
    3. '=' → logprob: -9.125489234924316
    4. ' =' → logprob: -15.250489234924316
    5. ' )' → logprob: -15.500489234924316
    6. ']' → logprob: -16.375490188598633
    7. ')
' → logprob: -17.000490188598633
    8. '),' → logprob: -17.250490188598633
    9. '[' → logprob: -17.375490188598633
    10. '<|end|>' → logprob: -17.500490188598633

Token 148: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' reduce' (ID: 10389)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.026382848620414734
    2. ' swap' → logprob: -3.6513829231262207
    3. 'tuple' → logprob: -9.651382446289062
    4. ' tuple' → logprob: -12.151382446289062
    5. '	swap' → logprob: -12.276382446289062
    6. 'sw' → logprob: -12.901382446289062
    7. ' ' → logprob: -13.526382446289062
    8. '   ' → logprob: -13.776382446289062
    9. '(s' → logprob: -13.776382446289062
    10. '(' → logprob: -14.151382446289062

Token 150: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.16330669820308685
    2. '(s' → logprob: -1.913306713104248
    3. '(' → logprob: -5.788306713104248
    4. 'swap' → logprob: -12.16330623626709
    5. 'lambda' → logprob: -12.91330623626709
    6. ' (' → logprob: -13.41330623626709
    7. '((' → logprob: -13.66330623626709
    8. '(
' → logprob: -14.16330623626709
    9. '```' → logprob: -14.66330623626709
    10. '.swap' → logprob: -14.91330623626709

Token 151: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.29541075229644775
    2. 'lambda' → logprob: -1.4204107522964478
    3. '(lambda' → logprob: -4.295410633087158
    4. ' swap' → logprob: -7.920410633087158
    5. 'swap' → logprob: -9.420411109924316
    6. '=lambda' → logprob: -9.920411109924316
    7. ',' → logprob: -11.170411109924316
    8. ' (' → logprob: -11.920411109924316
    9. ' ' → logprob: -12.670411109924316
    10. '_lambda' → logprob: -13.045411109924316

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021620409097522497
    2. 'lambda' → logprob: -6.377161979675293
    3. ' lambda' → logprob: -8.502161979675293
    4. '=lambda' → logprob: -9.252161979675293
    5. '(lambda' → logprob: -9.377161979675293
    6. ' ,' → logprob: -10.502161979675293
    7. ':' → logprob: -11.752161979675293
    8. '[' → logprob: -11.752161979675293
    9. ',
' → logprob: -12.502161979675293
    10. ',x' → logprob: -12.752161979675293

Token 153: ' _:' (ID: 133568)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.29483863711357117
    2. 'func' → logprob: -2.9198386669158936
    3. ' f' → logprob: -3.0448386669158936
    4. 'arr' → logprob: -3.4198386669158936
    5. 'lambda' → logprob: -3.4198386669158936
    6. 'pos' → logprob: -3.6698386669158936
    7. 'swap' → logprob: -4.1698384284973145
    8. 'x' → logprob: -4.2948384284973145
    9. 'acc' → logprob: -4.4198384284973145
    10. ' func' → logprob: -5.2948384284973145

Token 154: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.017109176144003868
    2. ' swap' → logprob: -4.142109394073486
    3. '(s' → logprob: -7.017109394073486
    4. '	swap' → logprob: -10.142108917236328
    5. 'sw' → logprob: -10.392108917236328
    6. 'tuple' → logprob: -10.392108917236328
    7. 'acc' → logprob: -10.642108917236328
    8. '   ' → logprob: -11.517108917236328
    9. ' (' → logprob: -12.392108917236328
    10. 'lambda' → logprob: -12.517108917236328

Token 155: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.3544423381972592e-05
    2. 'positions' → logprob: -11.25001335144043
    3. 'Positions' → logprob: -15.12501335144043
    4. '```' → logprob: -16.75001335144043
    5. '_pos' → logprob: -17.00001335144043
    6. '_locations' → logprob: -17.87501335144043
    7. '_' → logprob: -17.87501335144043
    8. ' positions' → logprob: -18.00001335144043
    9. '(' → logprob: -19.12501335144043
    10. ' _' → logprob: -19.25001335144043

Token 156: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0021513307001441717
    2. 'acc' → logprob: -6.6271514892578125
    3. '(list' → logprob: -7.2521514892578125
    4. '(' → logprob: -10.377151489257812
    5. 'list' → logprob: -10.502151489257812
    6. '((' → logprob: -10.627151489257812
    7. '([' → logprob: -10.627151489257812
    8. ' (' → logprob: -12.627151489257812
    9. ' acc' → logprob: -13.752151489257812
    10. ',' → logprob: -13.877151489257812

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016080588102340698
    2. ',[' → logprob: -7.501607894897461
    3. ' ,' → logprob: -7.876607894897461
    4. '(X' → logprob: -8.501607894897461
    5. '(' → logprob: -8.626607894897461
    6. '([' → logprob: -8.751607894897461
    7. ',(' → logprob: -9.751607894897461
    8. '[' → logprob: -11.126607894897461
    9. ',X' → logprob: -11.376607894897461
    10. ' (' → logprob: -11.376607894897461

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011489099124446511
    2. ' ' → logprob: -7.001148700714111
    3. '1' → logprob: -8.37614917755127
    4. ')' → logprob: -13.56364917755127
    5. ',' → logprob: -14.18864917755127
    6. '2' → logprob: -14.31364917755127
    7. '   ' → logprob: -14.62614917755127
    8. 'X' → logprob: -14.68864917755127
    9. '(' → logprob: -14.75114917755127
    10. '  ' → logprob: -14.75114917755127

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017123986617662013
    2. '1' → logprob: -9.250171661376953
    3. ' ' → logprob: -9.625171661376953
    4. 'X' → logprob: -12.250171661376953
    5. '2' → logprob: -14.125171661376953
    6. '<|end|>' → logprob: -14.875171661376953
    7. '-' → logprob: -14.937671661376953
    8. '(' → logprob: -15.000171661376953
    9. '<|end|>' → logprob: -15.437671661376953
    10. '...' → logprob: -15.437671661376953

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000373950315406546
    2. ' ,' → logprob: -8.125373840332031
    3. '<|end|>' → logprob: -9.875373840332031
    4. ',
' → logprob: -11.000373840332031
    5. '0' → logprob: -12.125373840332031
    6. '1' → logprob: -13.500373840332031
    7. ' ' → logprob: -14.500373840332031
    8. '),' → logprob: -14.625373840332031
    9. '2' → logprob: -15.250373840332031
    10. '‌,' → logprob: -15.375373840332031

Token 161: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -15.625024795532227
    4. '```' → logprob: -15.875024795532227
    5. '

' → logprob: -16.375024795532227
    6. '
' → logprob: -16.625024795532227
    7. '   ' → logprob: -17.625024795532227
    8. '-' → logprob: -18.687524795532227
    9. '  ' → logprob: -18.687524795532227
    10. '۲' → logprob: -19.125024795532227

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.250000953674316
    3. '1' → logprob: -15.000000953674316
    4. '-' → logprob: -16.562501907348633
    5. ' ' → logprob: -16.562501907348633
    6. '
' → logprob: -16.875001907348633
    7. '

' → logprob: -17.062501907348633
    8. '``' → logprob: -17.687501907348633
    9. '' → logprob: -17.937501907348633
    10. '২' → logprob: -18.375001907348633

Token 163: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00044223200529813766
    2. ')' → logprob: -8.250442504882812
    3. ' ),' → logprob: -8.875442504882812
    4. ',' → logprob: -10.625442504882812
    5. '   ' → logprob: -12.250442504882812
    6. '),
' → logprob: -12.875442504882812
    7. ' ' → logprob: -12.875442504882812
    8. ')),' → logprob: -13.000442504882812
    9. ')
' → logprob: -14.250442504882812
    10. '_),' → logprob: -14.875442504882812

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0691182017326355
    2. ' range' → logprob: -2.9441182613372803
    3. '[' → logprob: -4.319118022918701
    4. ' [' → logprob: -7.319118022918701
    5. '(range' → logprob: -9.31911849975586
    6. '   ' → logprob: -10.06911849975586
    7. ' ' → logprob: -11.81911849975586
    8. '	range' → logprob: -11.94411849975586
    9. ' xrange' → logprob: -12.44411849975586
    10. '.range' → logprob: -13.81911849975586

Token 165: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313265860080719
    2. '(' → logprob: -1.3132658004760742
    3. '2' → logprob: -13.563265800476074
    4. '3' → logprob: -13.938265800476074
    5. ')' → logprob: -14.063265800476074
    6. ' ' → logprob: -14.063265800476074
    7. '
' → logprob: -16.18826675415039
    8. '(
' → logprob: -16.68826675415039
    9. ' (' → logprob: -16.68826675415039
    10. '(Z' → logprob: -16.81326675415039

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. '2' → logprob: -10.250052452087402
    3. ' ' → logprob: -11.125052452087402
    4. '3' → logprob: -13.125052452087402
    5. ')' → logprob: -16.25005340576172
    6. '
' → logprob: -16.62505340576172
    7. '0' → logprob: -16.87505340576172
    8. '5' → logprob: -17.00005340576172
    9. '10' → logprob: -17.06255340576172
    10. '  ' → logprob: -17.12505340576172

Token 167: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09437847882509232
    2. ')' → logprob: -2.8443784713745117
    3. '),' → logprob: -3.4693784713745117
    4. ')))' → logprob: -7.469378471374512
    5. '1' → logprob: -10.219378471374512
    6. ' ))' → logprob: -10.219378471374512
    7. '0' → logprob: -10.844378471374512
    8. '()))' → logprob: -10.844378471374512
    9. '(' → logprob: -10.969378471374512
    10. '2' → logprob: -11.594378471374512

Token 168: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.11531491577625275
    2. '[X' → logprob: -2.3653149604797363
    3. ' (' → logprob: -4.365314960479736
    4. ' [' → logprob: -6.240314960479736
    5. '[' → logprob: -8.240314483642578
    6. '[(' → logprob: -10.365314483642578
    7. '(' → logprob: -11.240314483642578
    8. '   ' → logprob: -11.990314483642578
    9. ' ' → logprob: -12.115314483642578
    10. ')' → logprob: -12.115314483642578

Token 169: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -7.088138227118179e-05
    2. ' X' → logprob: -10.250070571899414
    3. '(X' → logprob: -10.750070571899414
    4. '[X' → logprob: -11.375070571899414
    5. ')' → logprob: -13.875070571899414
    6. '[' → logprob: -14.000070571899414
    7. ' ' → logprob: -15.750070571899414
    8. '   ' → logprob: -16.000070571899414
    9. ' (' → logprob: -16.000070571899414
    10. '  ' → logprob: -16.250070571899414

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.180879816180095e-05
    2. ',Y' → logprob: -10.250051498413086
    3. ' ,' → logprob: -11.125051498413086
    4. ',
' → logprob: -13.750051498413086
    5. '<|end|>' → logprob: -15.375051498413086
    6. 'Y' → logprob: -15.500051498413086
    7. ',

' → logprob: -16.625051498413086
    8. ',y' → logprob: -17.375051498413086
    9. ' Y' → logprob: -18.500051498413086
    10. '...' → logprob: -19.125051498413086

Token 171: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.011048408225178719
    2. ' Y' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.761048316955566
    4. ',Y' → logprob: -16.261049270629883
    5. '	Y' → logprob: -16.261049270629883
    6. ',' → logprob: -16.886049270629883
    7. '<|end|>' → logprob: -16.886049270629883
    8. ')' → logprob: -17.011049270629883
    9. 'Z' → logprob: -17.386049270629883
    10. '  ' → logprob: -18.011049270629883

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005417120410129428
    2. ',Z' → logprob: -7.625541687011719
    3. 'Z' → logprob: -10.000541687011719
    4. ' ,' → logprob: -12.000541687011719
    5. ')' → logprob: -13.250541687011719
    6. ' Z' → logprob: -15.875541687011719
    7. ',
' → logprob: -16.12554168701172
    8. '<|end|>' → logprob: -16.75054168701172
    9. '[' → logprob: -17.25054168701172
    10. '))' → logprob: -17.25054168701172

Token 173: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.06197473779320717
    2. ' Z' → logprob: -2.8119747638702393
    3. ' ' → logprob: -12.56197452545166
    4. ')' → logprob: -13.18697452545166
    5. '	Z' → logprob: -14.56197452545166
    6. '  ' → logprob: -15.56197452545166
    7. '>Z' → logprob: -15.56197452545166
    8. '```' → logprob: -15.87447452545166
    9. ',Z' → logprob: -15.93697452545166
    10. '   ' → logprob: -16.061975479125977

Token 174: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07893440127372742
    2. ')' → logprob: -2.57893443107605
    3. ')))' → logprob: -10.078934669494629
    4. '))
' → logprob: -13.328934669494629
    5. ')
' → logprob: -14.578934669494629
    6. ' ))' → logprob: -16.203933715820312
    7. ')}' → logprob: -16.703933715820312
    8. '),' → logprob: -16.703933715820312
    9. ' )' → logprob: -16.953933715820312
    10. ')[' → logprob: -17.078933715820312

Token 175: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37956440448760986
    2. '(X' → logprob: -1.3795644044876099
    3. '((' → logprob: -2.7545642852783203
    4. '('' → logprob: -9.12956428527832
    5. '("("' → logprob: -9.12956428527832
    6. '()' → logprob: -9.25456428527832
    7. '(x' → logprob: -9.37956428527832
    8. '(f' → logprob: -11.00456428527832
    9. '(tuple' → logprob: -11.37956428527832
    10. '(*' → logprob: -11.50456428527832

Token 177: '[' (ID: 58)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0024273828603327274
    2. '[X' → logprob: -6.252427577972412
    3. 'X' → logprob: -7.627427577972412
    4. '(Z' → logprob: -12.377427101135254
    5. '(Y' → logprob: -12.877427101135254
    6. '[' → logprob: -13.252427101135254
    7. '(' → logprob: -14.502427101135254
    8. ' (' → logprob: -14.752427101135254
    9. 'XY' → logprob: -15.127427101135254
    10. '[(' → logprob: -15.127427101135254

Token 178: 'v' (ID: 85)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12919506430625916
    2. '(X' → logprob: -2.129194974899292
    3. '[X' → logprob: -6.254195213317871
    4. 'sorted' → logprob: -8.504195213317871
    5. ' X' → logprob: -10.129195213317871
    6. 'Z' → logprob: -10.754195213317871
    7. 'XY' → logprob: -11.254195213317871
    8. '   ' → logprob: -11.504195213317871
    9. ' (' → logprob: -11.629195213317871
    10. 'map' → logprob: -11.629195213317871

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28305211663246155
    2. 'for' → logprob: -1.4080520868301392
    3. '])' → logprob: -7.15805196762085
    4. ')' → logprob: -7.15805196762085
    5. '+' → logprob: -9.158052444458008
    6. ',' → logprob: -9.408052444458008
    7. ')])' → logprob: -9.658052444458008
    8. ' ' → logprob: -10.033052444458008
    9. ')]' → logprob: -12.283052444458008
    10. '))' → logprob: -12.533052444458008

Token 180: ' v' (ID: 323)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0016275715315714478
    2. ' (' → logprob: -6.501627445220947
    3. '(v' → logprob: -9.876627922058105
    4. '(' → logprob: -10.126627922058105
    5. '[X' → logprob: -11.251627922058105
    6. 'X' → logprob: -11.751627922058105
    7. '((' → logprob: -12.501627922058105
    8. '(Z' → logprob: -12.876627922058105
    9. ' ' → logprob: -13.501627922058105
    10. 'v' → logprob: -13.876627922058105

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2622416019439697
    2. 'in' → logprob: -1.5122416019439697
    3. '(X' → logprob: -4.762241363525391
    4. '(' → logprob: -7.387241363525391
    5. ' (' → logprob: -7.512241363525391
    6. ',' → logprob: -8.26224136352539
    7. ' ' → logprob: -9.01224136352539
    8. '
' → logprob: -11.01224136352539
    9. '```' → logprob: -11.01224136352539
    10. '(v' → logprob: -11.26224136352539

Token 182: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.00029959288076497614
    2. ' (' → logprob: -8.625299453735352
    3. '[X' → logprob: -9.500299453735352
    4. 'X' → logprob: -10.375299453735352
    5. '(' → logprob: -12.000299453735352
    6. '((' → logprob: -12.750299453735352
    7. '[' → logprob: -14.125299453735352
    8. '   ' → logprob: -14.250299453735352
    9. '(Z' → logprob: -14.250299453735352
    10. '  ' → logprob: -14.500299453735352

Token 183: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -8.256334695033729e-05
    2. '(X' → logprob: -9.625082969665527
    3. ' X' → logprob: -11.250082969665527
    4. 'Y' → logprob: -13.375082969665527
    5. '[X' → logprob: -14.375082969665527
    6. ')' → logprob: -14.625082969665527
    7. ' ' → logprob: -15.500082969665527
    8. '   ' → logprob: -15.500082969665527
    9. 'Z' → logprob: -15.625082969665527
    10. '  ' → logprob: -16.75008201599121

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008725132793188095
    2. ',Y' → logprob: -7.250872611999512
    3. ' ,' → logprob: -8.750872611999512
    4. ',
' → logprob: -12.875872611999512
    5. ',y' → logprob: -13.875872611999512
    6. 'Y' → logprob: -15.250872611999512
    7. ',Z' → logprob: -15.750872611999512
    8. ' ' → logprob: -16.000871658325195
    9. ')' → logprob: -17.250871658325195
    10. ',X' → logprob: -17.375871658325195

Token 185: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0007115975022315979
    2. ' Y' → logprob: -7.250711441040039
    3. 'Z' → logprob: -13.625711441040039
    4. ' ' → logprob: -15.250711441040039
    5. '	Y' → logprob: -16.75071144104004
    6. 'YZ' → logprob: -17.12571144104004
    7. ')' → logprob: -17.25071144104004
    8. ',Y' → logprob: -17.37571144104004
    9. '   ' → logprob: -17.62571144104004
    10. '  ' → logprob: -17.87571144104004

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16534145176410675
    2. ')])' → logprob: -2.040341377258301
    3. ',Z' → logprob: -4.040341377258301
    4. ')' → logprob: -5.665341377258301
    5. ')]' → logprob: -6.915341377258301
    6. ' ,' → logprob: -8.5403413772583
    7. 'Z' → logprob: -9.5403413772583
    8. ')])
' → logprob: -10.2903413772583
    9. ')],' → logprob: -11.0403413772583
    10. ')])

' → logprob: -11.2903413772583

Token 187: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.00014048899174667895
    2. ' Z' → logprob: -8.875140190124512
    3. '(Z' → logprob: -14.875140190124512
    4. ' ' → logprob: -16.125141143798828
    5. 'X' → logprob: -17.000141143798828
    6. '[' → logprob: -17.125141143798828
    7. '(' → logprob: -17.500141143798828
    8. '	Z' → logprob: -17.625141143798828
    9. ')' → logprob: -17.750141143798828
    10. '   ' → logprob: -18.375141143798828

Token 188: ')])' (ID: 99066)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10031018406152725
    2. ')])' → logprob: -2.3503100872039795
    3. ')' → logprob: -10.225310325622559
    4. ')]' → logprob: -10.350310325622559
    5. '])]' → logprob: -10.725310325622559
    6. ']])' → logprob: -11.975310325622559
    7. ']))' → logprob: -12.475310325622559
    8. ' ])' → logprob: -13.100310325622559
    9. ']' → logprob: -14.225310325622559
    10. '))' → logprob: -15.600310325622559


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 186
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 35.48%
Précision adaptée (1ère position): 35.48%
Précision (top 10): 75.81%
================================================================================
