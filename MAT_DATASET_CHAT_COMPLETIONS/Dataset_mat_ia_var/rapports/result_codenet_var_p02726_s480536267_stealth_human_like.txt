================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon alors, on lit trois entiers, classique
n, x, y = map(int, input().split())

c = [0 for _ in range(n)]

# Boucle pas forcément super optimisée, mais ça passe
for i in range(1, n):
    for j in range(i+1, n+1):
        # Bon on cherche le minimum ici, c'est pas hyper lisible mais ça fait le taf
        d1 = j - i
        d2 = abs(x - i) + 1 + abs(j - y)
        d3 = abs(y - i) + 1 + abs(j - x)
        d = min(d1, d2, d3)
        c[d] += 1

# Affichage, classique, mais commence à 1
for k in range(1, n):
    print(c[k])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ' alors' (ID: 17971)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9736200571060181
    2. ' ' → logprob: -0.9736200571060181
    3. '```' → logprob: -2.5986199378967285
    4. '\n' → logprob: -2.9736199378967285
    5. '#' → logprob: -3.3486199378967285
    6. '
' → logprob: -4.0986199378967285
    7. ' ,' → logprob: -4.4736199378967285
    8. '<|end|>' → logprob: -4.4736199378967285
    9. '!' → logprob: -4.9736199378967285
    10. ' 
' → logprob: -5.2236199378967285

Token 4: ' on' (ID: 402)
  Prédit: ' je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' je' → logprob: -0.29734814167022705
    2. ' on' → logprob: -2.9223480224609375
    3. 'je' → logprob: -2.9223480224609375
    4. 'c' → logprob: -3.7973480224609375
    5. ' voici' → logprob: -3.7973480224609375
    6. ' continu' → logprob: -4.0473480224609375
    7. '#' → logprob: -4.2973480224609375
    8. 'on' → logprob: -4.2973480224609375
    9. ' c' → logprob: -4.4223480224609375
    10. '```' → logprob: -4.7973480224609375

Token 5: ' lit' (ID: 11980)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4518176019191742
    2. ' va' → logprob: -2.201817512512207
    3. 'continue' → logprob: -2.326817512512207
    4. ' continu' → logprob: -3.951817512512207
    5. ' y' → logprob: -4.201817512512207
    6. ' fait' → logprob: -4.326817512512207
    7. ' a' → logprob: -4.576817512512207
    8. 'est' → logprob: -4.576817512512207
    9. 'comm' → logprob: -4.826817512512207
    10. '_' → logprob: -4.951817512512207

Token 6: ' trois' (ID: 25564)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2470382452011108
    2. ' ' → logprob: -1.8720382452011108
    3. '_' → logprob: -2.2470383644104004
    4. '#' → logprob: -2.6220383644104004
    5. '.' → logprob: -2.6220383644104004
    6. ':' → logprob: -2.8720383644104004
    7. '!' → logprob: -3.4970383644104004
    8. '```' → logprob: -3.6220383644104004
    9. 'le' → logprob: -3.8720383644104004
    10. 'l' → logprob: -3.8720383644104004

Token 7: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08219978213310242
    2. ' espaces' → logprob: -2.957199811935425
    3. '_' → logprob: -4.582199573516846
    4. 'es' → logprob: -5.707199573516846
    5. 'esp' → logprob: -5.832199573516846
    6. ' espace' → logprob: -6.207199573516846
    7. 'space' → logprob: -6.582199573516846
    8. ' ' → logprob: -6.832199573516846
    9. '\' → logprob: -7.332199573516846
    10. 'l' → logprob: -7.332199573516846

Token 8: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5152830481529236
    2. 'r' → logprob: -1.0152831077575684
    3. 'ières' → logprob: -3.5152831077575684
    4. 'i' → logprob: -5.515283107757568
    5. 'ri' → logprob: -5.765283107757568
    6. 'ier' → logprob: -6.515283107757568
    7. '```' → logprob: -7.265283107757568
    8. 'êtes' → logprob: -8.26528263092041
    9. 'ires' → logprob: -8.89028263092041
    10. 'ière' → logprob: -9.26528263092041

Token 9: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48777586221694946
    2. 'x' → logprob: -1.9877758026123047
    3. 'i' → logprob: -1.9877758026123047
    4. 'a' → logprob: -2.4877758026123047
    5. 'e' → logprob: -4.862775802612305
    6. '```' → logprob: -5.487775802612305
    7. 'int' → logprob: -5.612775802612305
    8. 'r' → logprob: -5.737775802612305
    9. ',' → logprob: -5.862775802612305
    10. 'ent' → logprob: -6.987775802612305

Token 10: ' classique' (ID: 76895)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2930888831615448
    2. '```' → logprob: -2.293088912963867
    3. ' a' → logprob: -3.168088912963867
    4. 'n' → logprob: -3.793088912963867
    5. 's' → logprob: -3.918088912963867
    6. ' ' → logprob: -4.543088912963867
    7. ',' → logprob: -4.793088912963867
    8. ' ```' → logprob: -4.918088912963867
    9. ' n' → logprob: -5.293088912963867
    10. ' ,' → logprob: -5.418088912963867

Token 11: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45316314697265625
    2. 'x' → logprob: -1.3281631469726562
    3. 'a' → logprob: -2.7031631469726562
    4. 'i' → logprob: -3.7031631469726562
    5. 'ent' → logprob: -5.828163146972656
    6. '```' → logprob: -6.328163146972656
    7. 'e' → logprob: -6.703163146972656
    8. 'int' → logprob: -7.953163146972656
    9. 'v' → logprob: -8.078163146972656
    10. 't' → logprob: -8.203163146972656

Token 12: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2681933641433716
    2. 'a' → logprob: -2.268193244934082
    3. 'x' → logprob: -2.268193244934082
    4. 'i' → logprob: -4.018193244934082
    5. 'e' → logprob: -5.268193244934082
    6. '```' → logprob: -6.018193244934082
    7. 'ent' → logprob: -6.768193244934082
    8. '\n' → logprob: -8.143193244934082
    9. 't' → logprob: -8.393193244934082
    10. '`' → logprob: -9.143193244934082

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6459874510765076
    2. ',' → logprob: -0.7709874510765076
    3. '=' → logprob: -5.020987510681152
    4. ' ,' → logprob: -5.520987510681152
    5. ' ' → logprob: -6.145987510681152
    6. ')' → logprob: -8.770987510681152
    7. '_' → logprob: -9.145987510681152
    8. 's' → logprob: -9.520987510681152
    9. '  ' → logprob: -10.020987510681152
    10. '.' → logprob: -10.145987510681152

Token 14: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07373760640621185
    2. ' m' → logprob: -2.823737621307373
    3. ' ' → logprob: -4.823737621307373
    4. 'a' → logprob: -6.323737621307373
    5. 'r' → logprob: -7.948737621307373
    6. 'space' → logprob: -8.198737144470215
    7. '  ' → logprob: -8.448737144470215
    8. 's' → logprob: -8.573737144470215
    9. 'k' → logprob: -8.823737144470215
    10. 'p' → logprob: -9.198737144470215

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6692575216293335
    2. ',' → logprob: -0.9192575216293335
    3. '=' → logprob: -2.419257640838623
    4. 's' → logprob: -10.169257164001465
    5. ' ,' → logprob: -10.294257164001465
    6. ')' → logprob: -11.544257164001465
    7. '<|end|>' → logprob: -12.419257164001465
    8. '.' → logprob: -13.294257164001465
    9. ' ' → logprob: -13.419257164001465
    10. '```' → logprob: -13.606757164001465

Token 16: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7945293188095093
    2. ' y' → logprob: -0.9195293188095093
    3. 'k' → logprob: -2.919529438018799
    4. 'm' → logprob: -3.419529438018799
    5. 'z' → logprob: -4.044529438018799
    6. ' k' → logprob: -4.544529438018799
    7. ' z' → logprob: -4.669529438018799
    8. 'd' → logprob: -5.294529438018799
    9. ' m' → logprob: -5.294529438018799
    10. 'a' → logprob: -5.669529438018799

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20182183384895325
    2. '=' → logprob: -1.7018218040466309
    3. ',' → logprob: -7.826821804046631
    4. ' ' → logprob: -13.326822280883789
    5. '_' → logprob: -13.576822280883789
    6. '=input' → logprob: -13.576822280883789
    7. ' ,' → logprob: -14.076822280883789
    8. ')' → logprob: -14.326822280883789
    9. '```' → logprob: -14.326822280883789
    10. '.' → logprob: -14.951822280883789

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1603754311800003
    2. 'map' → logprob: -1.9103754758834839
    3. ' input' → logprob: -9.535375595092773
    4. 'input' → logprob: -10.035375595092773
    5. ' list' → logprob: -11.160375595092773
    6. 'list' → logprob: -12.285375595092773
    7. 'int' → logprob: -12.285375595092773
    8. '[' → logprob: -12.410375595092773
    9. ' [' → logprob: -13.035375595092773
    10. ' ' → logprob: -13.285375595092773

Token 19: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26004794239997864
    2. '(int' → logprob: -1.5100479125976562
    3. '(lambda' → logprob: -5.260047912597656
    4. '(str' → logprob: -6.135047912597656
    5. '(
' → logprob: -8.635047912597656
    6. '(input' → logprob: -9.010047912597656
    7. '<|end|>' → logprob: -9.510047912597656
    8. '<int' → logprob: -9.760047912597656
    9. '[int' → logprob: -10.135047912597656
    10. '(list' → logprob: -10.385047912597656

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005558401811867952
    2. 'input' → logprob: -5.880558490753174
    3. ')' → logprob: -6.505558490753174
    4. '(' → logprob: -6.755558490753174
    5. ' input' → logprob: -9.880558013916016
    6. '=input' → logprob: -11.380558013916016
    7. ',input' → logprob: -11.505558013916016
    8. '[input' → logprob: -12.380558013916016
    9. ' (' → logprob: -12.505558013916016
    10. '(int' → logprob: -13.130558013916016

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01815333589911461
    2. ' input' → logprob: -4.018153190612793
    3. ')' → logprob: -13.268153190612793
    4. '(input' → logprob: -14.018153190612793
    5. ' ' → logprob: -15.268153190612793
    6. '=input' → logprob: -15.393153190612793
    7. ',input' → logprob: -15.643153190612793
    8. '<input' → logprob: -16.14315414428711
    9. '	input' → logprob: -16.26815414428711
    10. '```' → logprob: -16.89315414428711

Token 22: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5519391894340515
    2. '().' → logprob: -1.3019392490386963
    3. '())' → logprob: -1.9269392490386963
    4. '(' → logprob: -6.551939010620117
    5. ')' → logprob: -6.551939010620117
    6. '()).' → logprob: -7.176939010620117
    7. '());' → logprob: -7.301939010620117
    8. '()))' → logprob: -8.301939010620117
    9. '()),' → logprob: -8.551939010620117
    10. '();)' → logprob: -8.676939010620117

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020473242329899222
    2. 'strip' → logprob: -8.500205039978027
    3. ' split' → logprob: -14.375205039978027
    4. 'rstrip' → logprob: -14.625205039978027
    5. '(split' → logprob: -15.500205039978027
    6. 'read' → logprob: -17.12520408630371
    7. 'spl' → logprob: -18.50020408630371
    8. ')' → logprob: -19.12520408630371
    9. 's' → logprob: -19.62520408630371
    10. 'plit' → logprob: -19.75020408630371

Token 24: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19310764968395233
    2. '())' → logprob: -1.8181076049804688
    3. '))' → logprob: -4.443107604980469
    4. '()))' → logprob: -7.818107604980469
    5. '()' → logprob: -8.068107604980469
    6. '`)' → logprob: -8.443107604980469
    7. '('' → logprob: -8.568107604980469
    8. '(' → logprob: -8.818107604980469
    9. '')' → logprob: -9.818107604980469
    10. '(','' → logprob: -10.943107604980469

Token 25: 'c' (ID: 66)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6489880084991455
    2. '\n' → logprob: -1.7739880084991455
    3. ':' → logprob: -1.8989880084991455
    4. ',' → logprob: -2.0239880084991455
    5. ' ' → logprob: -2.6489880084991455
    6. '#' → logprob: -2.8989880084991455
    7. '
' → logprob: -2.8989880084991455
    8. ' if' → logprob: -3.5239880084991455
    9. 'i' → logprob: -3.6489880084991455
    10. 'for' → logprob: -3.8989880084991455

Token 26: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7669638395309448
    2. 'ount' → logprob: -1.1419638395309448
    3. ' =' → logprob: -2.3919639587402344
    4. '=' → logprob: -3.5169639587402344
    5. '_' → logprob: -3.8919639587402344
    6. 'ost' → logprob: -4.266963958740234
    7. 'ont' → logprob: -4.891963958740234
    8. 'ounter' → logprob: -5.141963958740234
    9. 'ol' → logprob: -5.266963958740234
    10. '1' → logprob: -5.391963958740234

Token 27: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0435428619384766
    2. '[]' → logprob: -1.6685428619384766
    3. '[' → logprob: -2.0435428619384766
    4. ' []' → logprob: -2.5435428619384766
    5. ' [' → logprob: -2.5435428619384766
    6. '[x' → logprob: -2.9185428619384766
    7. 'x' → logprob: -3.1685428619384766
    8. '[int' → logprob: -3.6685428619384766
    9. '[n' → logprob: -4.043542861938477
    10. 'n' → logprob: -4.168542861938477

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2797631621360779
    2. 'int' → logprob: -1.5297632217407227
    3. 'map' → logprob: -4.279763221740723
    4. ']' → logprob: -4.529763221740723
    5. ']int' → logprob: -6.904763221740723
    6. '(int' → logprob: -7.154763221740723
    7. '1' → logprob: -8.654763221740723
    8. '])' → logprob: -8.779763221740723
    9. '(' → logprob: -8.779763221740723
    10. 'x' → logprob: -9.279763221740723

Token 29: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01361013576388359
    2. ',' → logprob: -4.513610363006592
    3. ']*' → logprob: -6.138610363006592
    4. ' ]' → logprob: -8.263609886169434
    5. ' for' → logprob: -9.513609886169434
    6. ']*(' → logprob: -10.013609886169434
    7. ')' → logprob: -11.638609886169434
    8. 'for' → logprob: -12.513609886169434
    9. '])' → logprob: -12.638609886169434
    10. ')]' → logprob: -12.763609886169434

Token 30: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22099074721336365
    2. ' _' → logprob: -2.0959906578063965
    3. ' range' → logprob: -3.4709906578063965
    4. '_' → logprob: -4.2209906578063965
    5. ' i' → logprob: -4.2209906578063965
    6. '(' → logprob: -4.4709906578063965
    7. 'range' → logprob: -6.9709906578063965
    8. ' (' → logprob: -7.0959906578063965
    9. '(range' → logprob: -7.4709906578063965
    10. '  ' → logprob: -7.7209906578063965

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14021816849708557
    2. 'in' → logprob: -2.2652182579040527
    3. 'range' → logprob: -3.6402182579040527
    4. ' range' → logprob: -7.515218257904053
    5. ' ' → logprob: -9.015217781066895
    6. 'i' → logprob: -9.640217781066895
    7. 'c' → logprob: -11.390217781066895
    8. ' i' → logprob: -11.640217781066895
    9. '  ' → logprob: -12.140217781066895
    10. 'x' → logprob: -12.515217781066895

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. '(range' → logprob: -15.75247573852539
    4. 'rang' → logprob: -16.12747573852539
    5. '	range' → logprob: -16.87747573852539
    6. ' ' → logprob: -17.62747573852539
    7. '[' → logprob: -17.87747573852539
    8. ')' → logprob: -18.37747573852539
    9. 'ran' → logprob: -18.37747573852539
    10. 'r' → logprob: -18.87747573852539

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013300024438649416
    2. '(' → logprob: -6.6263298988342285
    3. ' (' → logprob: -12.626330375671387
    4. 'n' → logprob: -15.876330375671387
    5. '(len' → logprob: -16.12632942199707
    6. '(s' → logprob: -16.25132942199707
    7. '(x' → logprob: -16.25132942199707
    8. '((' → logprob: -16.25132942199707
    9. ')' → logprob: -16.37632942199707
    10. '(
' → logprob: -17.12632942199707

Token 34: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010664248111424968
    2. ')' → logprob: -9.500106811523438
    3. ']' → logprob: -11.000106811523438
    4. ' )' → logprob: -11.625106811523438
    5. ')])' → logprob: -12.750106811523438
    6. '+' → logprob: -14.000106811523438
    7. ')],' → logprob: -14.500106811523438
    8. '])]' → logprob: -14.875106811523438
    9. ')]
' → logprob: -15.250106811523438
    10. '])' → logprob: -15.500106811523438

Token 35: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01281251572072506
    2. ' for' → logprob: -4.387812614440918
    3. '
' → logprob: -8.637812614440918
    4. '```' → logprob: -9.512812614440918
    5. 'i' → logprob: -11.512812614440918
    6. ' ' → logprob: -12.137812614440918
    7. 'x' → logprob: -12.387812614440918
    8. 's' → logprob: -12.512812614440918
    9. ']' → logprob: -12.512812614440918
    10. 'f' → logprob: -12.887812614440918

Token 36: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004154499154537916
    2. '_' → logprob: -6.004154682159424
    3. ' for' → logprob: -6.504154682159424
    4. 'range' → logprob: -9.254154205322266
    5. 'i' → logprob: -9.879154205322266
    6. 'f' → logprob: -11.129154205322266
    7. 'x' → logprob: -12.629154205322266
    8. ' ' → logprob: -12.879154205322266
    9. 'r' → logprob: -13.129154205322266
    10. ' range' → logprob: -13.504154205322266

Token 37: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02088705264031887
    2. 'r' → logprob: -4.0208868980407715
    3. 'cle' → logprob: -6.6458868980407715
    4. 'cl' → logprob: -7.2708868980407715
    5. 'l' → logprob: -8.64588737487793
    6. 't' → logprob: -9.02088737487793
    7. 'n' → logprob: -9.27088737487793
    8. 'e' → logprob: -9.64588737487793
    9. 'i' → logprob: -9.77088737487793
    10. 'f' → logprob: -9.89588737487793

Token 38: ' pas' (ID: 2173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2830561399459839
    2. ' for' → logprob: -1.4080561399459839
    3. 'i' → logprob: -6.908056259155273
    4. ' i' → logprob: -7.908056259155273
    5. 'in' → logprob: -8.658056259155273
    6. '_' → logprob: -8.658056259155273
    7. ' in' → logprob: -9.908056259155273
    8. ':' → logprob: -10.033056259155273
    9. 'range' → logprob: -11.033056259155273
    10. 's' → logprob: -11.408056259155273

Token 39: ' forcément' (ID: 96692)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22692589461803436
    2. 'r' → logprob: -1.8519258499145508
    3. 'sur' → logprob: -3.976925849914551
    4. 't' → logprob: -5.226925849914551
    5. 'for' → logprob: -5.601925849914551
    6. ' complète' → logprob: -6.101925849914551
    7. 'n' → logprob: -6.226925849914551
    8. 'ée' → logprob: -6.726925849914551
    9. ')' → logprob: -6.976925849914551
    10. ' encore' → logprob: -7.101925849914551

Token 40: ' super' (ID: 2539)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.5531483888626099
    2. ' for' → logprob: -1.4281483888626099
    3. 'for' → logprob: -1.9281483888626099
    4. ' complete' → logprob: -4.55314826965332
    5. 'compl' → logprob: -5.80314826965332
    6. 'range' → logprob: -5.80314826965332
    7. ' compl' → logprob: -5.80314826965332
    8. ' range' → logprob: -5.92814826965332
    9. ' optimale' → logprob: -6.05314826965332
    10. ' forcément' → logprob: -6.17814826965332

Token 41: ' optim' (ID: 9367)
  Prédit: ' efficace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.7806496620178223
    2. 'optim' → logprob: -1.9056496620178223
    3. ' for' → logprob: -2.1556496620178223
    4. 'for' → logprob: -2.2806496620178223
    5. ' utile' → logprob: -3.4056496620178223
    6. ' optimale' → logprob: -4.030649662017822
    7. 'fl' → logprob: -4.030649662017822
    8. ' optim' → logprob: -4.030649662017822
    9. ' claire' → logprob: -4.030649662017822
    10. 'utile' → logprob: -4.155649662017822

Token 42: 'isée' (ID: 59331)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0005342059303075075
    2. 'al' → logprob: -8.375534057617188
    3. 'ales' → logprob: -9.125534057617188
    4. 'a' → logprob: -9.375534057617188
    5. '```' → logprob: -10.375534057617188
    6. 'isée' → logprob: -10.500534057617188
    7. 'ized' → logprob: -11.250534057617188
    8. 'e' → logprob: -11.750534057617188
    9. 'але' → logprob: -12.000534057617188
    10. '#' → logprob: -12.125534057617188

Token 43: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3497055470943451
    2. 'for' → logprob: -1.2247055768966675
    3. '
' → logprob: -7.099705696105957
    4. '```' → logprob: -8.849705696105957
    5. ':' → logprob: -9.349705696105957
    6. '<|end|>' → logprob: -9.599705696105957
    7. ' 
' → logprob: -10.099705696105957
    8. ' ' → logprob: -11.224705696105957
    9. ',' → logprob: -11.599705696105957
    10. '' → logprob: -11.849705696105957

Token 44: ' mais' (ID: 2899)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7275819778442383
    2. ' but' → logprob: -1.1025819778442383
    3. 'for' → logprob: -1.9775819778442383
    4. ' ' → logprob: -3.9775819778442383
    5. ' i' → logprob: -4.102581977844238
    6. 'but' → logprob: -4.977581977844238
    7. ' mais' → logprob: -6.102581977844238
    8. 'i' → logprob: -7.352581977844238
    9. '_' → logprob: -7.477581977844238
    10. 'range' → logprob: -8.227581977844238

Token 45: ' ça' (ID: 13590)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.1819812059402466
    2. 'simple' → logprob: -1.6819812059402466
    3. ' correcte' → logprob: -2.806981086730957
    4. 'for' → logprob: -2.931981086730957
    5. ' simple' → logprob: -3.056981086730957
    6. ' claire' → logprob: -3.181981086730957
    7. 'pour' → logprob: -3.181981086730957
    8. 's' → logprob: -3.681981086730957
    9. ' facile' → logprob: -3.931981086730957
    10. 'ok' → logprob: -3.931981086730957

Token 46: ' passe' (ID: 22210)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18819808959960938
    2. 'for' → logprob: -1.8131980895996094
    3. ':' → logprob: -4.813198089599609
    4. 'n' → logprob: -9.93819808959961
    5. ',' → logprob: -10.43819808959961
    6. ' :' → logprob: -10.56319808959961
    7. ' ' → logprob: -10.56319808959961
    8. ' ' → logprob: -10.81319808959961
    9. '_for' → logprob: -11.31319808959961
    10. ' n' → logprob: -11.56319808959961

Token 47: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2919609546661377
    2. 'for' → logprob: -1.5419609546661377
    3. '
' → logprob: -3.2919609546661377
    4. '\n' → logprob: -7.291960716247559
    5. '```' → logprob: -7.291960716247559
    6. '<|end|>' → logprob: -8.541960716247559
    7. ':' → logprob: -9.166960716247559
    8. '' → logprob: -9.666960716247559
    9. 'range' → logprob: -9.916960716247559
    10. ' 
' → logprob: -9.916960716247559

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019740730058401823
    2. ' for' → logprob: -6.251974105834961
    3. '
' → logprob: -10.251974105834961
    4. '```' → logprob: -11.626974105834961
    5. 'i' → logprob: -14.876974105834961
    6. '\n' → logprob: -15.251974105834961
    7. '``' → logprob: -15.876974105834961
    8. '	for' → logprob: -15.876974105834961
    9. '' → logprob: -16.00197410583496
    10. 'range' → logprob: -16.12697410583496

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013801328837871552
    2. 'i' → logprob: -4.388801097869873
    3. ' ' → logprob: -7.763801097869873
    4. '_' → logprob: -7.763801097869873
    5. ' _' → logprob: -7.888801097869873
    6. ' ' → logprob: -10.388801574707031
    7. '	i' → logprob: -11.013801574707031
    8. '_i' → logprob: -11.638801574707031
    9. ' j' → logprob: -12.888801574707031
    10. '  ' → logprob: -13.638801574707031

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002516327193006873
    2. ' ' → logprob: -6.627516269683838
    3. 'in' → logprob: -6.752516269683838
    4. '+' → logprob: -11.877516746520996
    5. '  ' → logprob: -12.502516746520996
    6. ' i' → logprob: -13.002516746520996
    7. ',' → logprob: -13.377516746520996
    8. '_' → logprob: -13.877516746520996
    9. ' ' → logprob: -14.252516746520996
    10. '```' → logprob: -14.377516746520996

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0003993296413682401
    2. 'range' → logprob: -7.875399112701416
    3. ' ' → logprob: -11.250399589538574
    4. ' xrange' → logprob: -13.125399589538574
    5. '	range' → logprob: -13.875399589538574
    6. ' r' → logprob: -14.125399589538574
    7. ' ran' → logprob: -14.500399589538574
    8. ' ra' → logprob: -14.500399589538574
    9. ' rang' → logprob: -14.750399589538574
    10. '(range' → logprob: -15.250399589538574

Token 52: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0067926980555057526
    2. '(' → logprob: -5.0067925453186035
    3. ' (' → logprob: -9.506793022155762
    4. ' n' → logprob: -13.631793022155762
    5. '(x' → logprob: -13.881793022155762
    6. '(y' → logprob: -15.506793022155762
    7. '(i' → logprob: -16.131792068481445
    8. '(nx' → logprob: -16.381792068481445
    9. '(
' → logprob: -16.506792068481445
    10. 'n' → logprob: -16.631792068481445

Token 53: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007887827814556658
    2. '1' → logprob: -7.750788688659668
    3. 'x' → logprob: -8.250788688659668
    4. '(n' → logprob: -10.000788688659668
    5. ' n' → logprob: -11.000788688659668
    6. '(' → logprob: -11.250788688659668
    7. '0' → logprob: -12.125788688659668
    8. ')' → logprob: -12.375788688659668
    9. '3' → logprob: -12.500788688659668
    10. 'y' → logprob: -12.625788688659668

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007690747268497944
    2. ' ,' → logprob: -5.507690906524658
    3. ',n' → logprob: -5.632690906524658
    4. 'n' → logprob: -11.6326904296875
    5. ' n' → logprob: -11.7576904296875
    6. ' ' → logprob: -12.3826904296875
    7. ')' → logprob: -13.1326904296875
    8. '+' → logprob: -13.7576904296875
    9. '<n' → logprob: -14.0076904296875
    10. '(n' → logprob: -14.6326904296875

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007613725494593382
    2. ' n' → logprob: -4.882613658905029
    3. 'x' → logprob: -12.507614135742188
    4. 'y' → logprob: -13.632614135742188
    5. ' ' → logprob: -13.632614135742188
    6. ')' → logprob: -14.757614135742188
    7. '	n' → logprob: -15.382614135742188
    8. 'min' → logprob: -15.507614135742188
    9. 'len' → logprob: -16.007614135742188
    10. ')n' → logprob: -16.132614135742188

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01611589454114437
    2. '+' → logprob: -4.141115665435791
    3. ' +' → logprob: -10.64111614227295
    4. '):
' → logprob: -10.89111614227295
    5. ' ):' → logprob: -10.89111614227295
    6. ')' → logprob: -11.14111614227295
    7. '-' → logprob: -12.64111614227295
    8. ':' → logprob: -13.76611614227295
    9. ',' → logprob: -14.39111614227295
    10. ']:' → logprob: -15.51611614227295

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05534031614661217
    2. ':' → logprob: -3.18034029006958
    3. ' ' → logprob: -5.05534029006958
    4. ' c' → logprob: -6.18034029006958
    5. '  ' → logprob: -7.05534029006958
    6. ' :' → logprob: -7.18034029006958
    7. ')' → logprob: -7.43034029006958
    8. 'c' → logprob: -8.055340766906738
    9. ' if' → logprob: -8.305340766906738
    10. '<|end|>' → logprob: -8.805340766906738

Token 58: ' for' (ID: 395)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5471810698509216
    2. ' c' → logprob: -1.9221811294555664
    3. 'for' (adapté à ' for') → logprob: -2.4221811294555664
    4. ' for' → logprob: -2.9221811294555664
    5. 'if' → logprob: -3.1721811294555664
    6. ' if' → logprob: -3.7971811294555664
    7. '   ' → logprob: -4.047181129455566
    8. 'range' → logprob: -4.172181129455566
    9. 'min' → logprob: -4.672181129455566
    10. ' ' → logprob: -5.297181129455566

Token 59: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08022753149271011
    2. 'j' → logprob: -2.8302276134490967
    3. ' range' → logprob: -4.080227375030518
    4. 'range' → logprob: -6.830227375030518
    5. ' ' → logprob: -10.080227851867676
    6. '_j' → logprob: -11.080227851867676
    7. ')' → logprob: -11.955227851867676
    8. ' xrange' → logprob: -12.080227851867676
    9. '	j' → logprob: -12.205227851867676
    10. '  ' → logprob: -12.205227851867676

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020632749423384666
    2. 'in' → logprob: -3.895632743835449
    3. ' ' → logprob: -10.89563274383545
    4. 'range' → logprob: -10.89563274383545
    5. '   ' → logprob: -11.39563274383545
    6. '(' → logprob: -11.39563274383545
    7. ')' → logprob: -12.02063274383545
    8. '	in' → logprob: -12.27063274383545
    9. ' i' → logprob: -12.77063274383545
    10. ',' → logprob: -13.14563274383545

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1427013874053955
    2. ' range' → logprob: -2.0177013874053955
    3. '(range' → logprob: -10.892701148986816
    4. ' ' → logprob: -13.142701148986816
    5. 'rang' → logprob: -13.517701148986816
    6. '	range' → logprob: -13.642701148986816
    7. '   ' → logprob: -14.267701148986816
    8. '  ' → logprob: -14.767701148986816
    9. ')' → logprob: -14.767701148986816
    10. '[' → logprob: -15.017701148986816

Token 62: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08740946650505066
    2. '(n' → logprob: -2.587409496307373
    3. '(' → logprob: -4.962409496307373
    4. '(x' → logprob: -7.337409496307373
    5. '(j' → logprob: -7.712409496307373
    6. '(range' → logprob: -8.587409019470215
    7. '(y' → logprob: -8.837409019470215
    8. '((' → logprob: -10.212409019470215
    9. '(c' → logprob: -12.087409019470215
    10. '(s' → logprob: -12.087409019470215

Token 63: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09381284564733505
    2. ',' → logprob: -3.093812942504883
    3. ' +' → logprob: -3.343812942504883
    4. '):' → logprob: -5.093812942504883
    5. ',n' → logprob: -7.343812942504883
    6. '+i' → logprob: -7.843812942504883
    7. '+x' → logprob: -7.843812942504883
    8. ' ,' → logprob: -8.093812942504883
    9. '+y' → logprob: -8.093812942504883
    10. '-' → logprob: -8.343812942504883

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07092046737670898
    2. ',' → logprob: -2.945920467376709
    3. 'n' → logprob: -4.320920467376709
    4. '(n' → logprob: -6.945920467376709
    5. ',n' → logprob: -7.695920467376709
    6. ')' → logprob: -8.195920944213867
    7. ' ' → logprob: -8.195920944213867
    8. ' ,' → logprob: -8.320920944213867
    9. '(' → logprob: -8.695920944213867
    10. ' n' → logprob: -8.695920944213867

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026622318546287715
    2. ',n' → logprob: -8.500266075134277
    3. ' ,' → logprob: -10.125266075134277
    4. '(),' → logprob: -11.125266075134277
    5. '(n' → logprob: -12.750266075134277
    6. 'n' → logprob: -12.750266075134277
    7. ')' → logprob: -14.750266075134277
    8. '   ' → logprob: -15.375266075134277
    9. '),' → logprob: -15.500266075134277
    10. '):' → logprob: -15.625266075134277

Token 66: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08898831903934479
    2. 'n' → logprob: -2.4639883041381836
    3. ' min' → logprob: -10.713988304138184
    4. 'min' → logprob: -11.463988304138184
    5. ' ' → logprob: -11.713988304138184
    6. '	n' → logprob: -12.713988304138184
    7. ')' → logprob: -13.463988304138184
    8. '   ' → logprob: -13.963988304138184
    9. ')n' → logprob: -14.713988304138184
    10. ' ' → logprob: -14.838988304138184

Token 67: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030083691235631704
    2. '+' → logprob: -5.8780083656311035
    3. '):
' → logprob: -8.878008842468262
    4. ' ):' → logprob: -10.378008842468262
    5. ' +' → logprob: -11.378008842468262
    6. '   ' → logprob: -12.003008842468262
    7. ')' → logprob: -12.003008842468262
    8. ':' → logprob: -12.378008842468262
    9. ',' → logprob: -13.503008842468262
    10. '):
' → logprob: -14.003008842468262

Token 68: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12774896621704102
    2. '):
' → logprob: -2.127748966217041
    3. '+' → logprob: -7.377748966217041
    4. ')' → logprob: -9.502748489379883
    5. '1' → logprob: -10.502748489379883
    6. '):
' → logprob: -11.002748489379883
    7. '   ' → logprob: -11.127748489379883
    8. ':' → logprob: -11.377748489379883
    9. '):

' → logprob: -11.502748489379883
    10. ''):' → logprob: -12.127748489379883

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036715567694045603
    2. ')' → logprob: -8.375367164611816
    3. '):
' → logprob: -9.625367164611816
    4. ' ):' → logprob: -10.000367164611816
    5. ':' → logprob: -11.125367164611816
    6. '+' → logprob: -12.750367164611816
    7. ',' → logprob: -12.875367164611816
    8. '   ' → logprob: -13.375367164611816
    9. ']:' → logprob: -14.500367164611816
    10. '():' → logprob: -14.625367164611816

Token 70: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15842045843601227
    2. '       ' → logprob: -2.1584205627441406
    3. '   ' → logprob: -4.283420562744141
    4. '<|end|>' → logprob: -5.033420562744141
    5. ' :' → logprob: -5.783420562744141
    6. '):' → logprob: -6.158420562744141
    7. ':
' → logprob: -6.533420562744141
    8. ' if' → logprob: -6.783420562744141
    9. ')' → logprob: -7.283420562744141
    10. ' ' → logprob: -7.533420562744141

Token 71: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.909415602684021
    2. ' if' → logprob: -0.909415602684021
    3. '   ' → logprob: -2.9094157218933105
    4. '       ' → logprob: -3.1594157218933105
    5. ' :' → logprob: -3.4094157218933105
    6. 'if' → logprob: -3.6594157218933105
    7. ' ' → logprob: -3.7844157218933105
    8. '           ' → logprob: -4.9094157218933105
    9. '  ' → logprob: -6.5344157218933105
    10. ' c' → logprob: -6.9094157218933105

Token 72: ' Bon' (ID: 12658)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44797128438949585
    2. ' if' → logprob: -1.1979713439941406
    3. 'c' → logprob: -4.072971343994141
    4. 'print' → logprob: -4.697971343994141
    5. 'distance' → logprob: -4.822971343994141
    6. ' c' → logprob: -5.072971343994141
    7. ' pass' → logprob: -5.197971343994141
    8. 'pass' → logprob: -6.197971343994141
    9. 'cost' → logprob: -6.572971343994141
    10. ' distance' → logprob: -6.697971343994141

Token 73: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21272756159305573
    2. 'if' → logprob: -1.8377275466918945
    3. '       ' → logprob: -4.2127275466918945
    4. ' c' → logprob: -5.0877275466918945
    5. 'print' → logprob: -5.3377275466918945
    6. ' print' → logprob: -5.8377275466918945
    7. 'c' → logprob: -6.3377275466918945
    8. '           ' → logprob: -7.3377275466918945
    9. '   ' → logprob: -7.5877275466918945
    10. ' s' → logprob: -9.087727546691895

Token 74: ' cherche' (ID: 52345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.868348240852356
    2. ' if' → logprob: -1.118348240852356
    3. ' a' → logprob: -2.7433481216430664
    4. '       ' → logprob: -3.7433481216430664
    5. ':' → logprob: -3.9933481216430664
    6. 'a' → logprob: -4.243348121643066
    7. ' regarde' → logprob: -4.243348121643066
    8. '   ' → logprob: -4.368348121643066
    9. ' n' → logprob: -4.868348121643066
    10. '=' → logprob: -4.993348121643066

Token 75: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5843760967254639
    2. 'if' → logprob: -2.084376096725464
    3. 'l' → logprob: -2.209376096725464
    4. 'les' → logprob: -2.709376096725464
    5. 'la' → logprob: -3.334376096725464
    6. ' if' → logprob: -4.334376335144043
    7. 'un' → logprob: -4.459376335144043
    8. ' la' → logprob: -4.709376335144043
    9. 'à' → logprob: -4.959376335144043
    10. ' le' → logprob: -4.959376335144043

Token 76: ' minimum' (ID: 11085)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.3875625133514404
    2. 'minimum' → logprob: -1.5125625133514404
    3. 'c' → logprob: -2.0125625133514404
    4. 'max' → logprob: -2.3875625133514404
    5. 'min' → logprob: -2.5125625133514404
    6. 'nombre' → logprob: -2.8875625133514404
    7. 'i' → logprob: -3.8875625133514404
    8. 'maximum' → logprob: -4.2625627517700195
    9. 'j' → logprob: -4.3875627517700195
    10. 'x' → logprob: -4.5125627517700195

Token 77: ' ici' (ID: 27994)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5259671211242676
    2. ' c' → logprob: -1.7759671211242676
    3. ' ' → logprob: -1.9009671211242676
    4. 'c' → logprob: -2.4009671211242676
    5. ' between' → logprob: -2.7759671211242676
    6. ' of' → logprob: -3.1509671211242676
    7. '       ' → logprob: -3.1509671211242676
    8. ' =' → logprob: -3.6509671211242676
    9. ' entre' → logprob: -3.7759671211242676
    10. ',' → logprob: -3.9009671211242676

Token 78: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7740539312362671
    2. ' c' → logprob: -2.0240540504455566
    3. ',' → logprob: -2.6490540504455566
    4. 'c' → logprob: -3.0240540504455566
    5. '       ' → logprob: -3.0240540504455566
    6. '        ' → logprob: -3.5240540504455566
    7. ' de' → logprob: -3.6490540504455566
    8. ' if' → logprob: -3.8990540504455566
    9. ')' → logprob: -4.024054050445557
    10. ' of' → logprob: -4.024054050445557

Token 79: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9484560489654541
    2. ' c' → logprob: -1.323456048965454
    3. 'c' → logprob: -2.073456048965454
    4. 'if' → logprob: -2.573456048965454
    5. 'distance' → logprob: -3.448456048965454
    6. ' ' → logprob: -3.573456048965454
    7. 'min' → logprob: -4.448455810546875
    8. ' min' → logprob: -4.698455810546875
    9. 's' → logprob: -5.323455810546875
    10. ' d' → logprob: -5.448455810546875

Token 80: ''est' (ID: 6616)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1756134331226349
    2. '[i' → logprob: -2.0506134033203125
    3. '[min' → logprob: -4.1756134033203125
    4. '[' → logprob: -4.3006134033203125
    5. 'min' → logprob: -6.6756134033203125
    6. 'j' → logprob: -8.050613403320312
    7. '[max' → logprob: -8.925613403320312
    8. 'i' → logprob: -9.050613403320312
    9. '[(' → logprob: -9.175613403320312
    10. 's' → logprob: -9.175613403320312

Token 81: ' pas' (ID: 2173)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.425395131111145
    2. 'min' → logprob: -1.425395131111145
    3. 'l' → logprob: -2.4253950119018555
    4. 'abs' → logprob: -2.5503950119018555
    5. 'v' → logprob: -3.4253950119018555
    6. 'le' → logprob: -3.5503950119018555
    7. 'bien' → logprob: -3.5503950119018555
    8. 'x' → logprob: -3.5503950119018555
    9. 't' → logprob: -4.1753950119018555
    10. 'à' → logprob: -4.1753950119018555

Token 82: ' hyper' (ID: 22725)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.1048583984375
    2. 'la' → logprob: -2.3548583984375
    3. 'le' → logprob: -2.4798583984375
    4. ' forcément' → logprob: -2.7298583984375
    5. ' évident' → logprob: -2.9798583984375
    6. 'mal' → logprob: -3.2298583984375
    7. ' la' → logprob: -3.3548583984375
    8. 'grave' → logprob: -3.3548583984375
    9. ' toujours' → logprob: -3.6048583984375
    10. ' très' → logprob: -3.6048583984375

Token 83: ' lis' (ID: 20784)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.6492458581924438
    2. ' clair' → logprob: -1.7742458581924438
    3. 'optim' → logprob: -2.6492457389831543
    4. ' optimal' → logprob: -2.7742457389831543
    5. 'clair' → logprob: -3.5242457389831543
    6. ' optim' → logprob: -3.6492457389831543
    7. 'opt' → logprob: -3.7742457389831543
    8. 'c' → logprob: -4.024245738983154
    9. 'efficient' → logprob: -4.399245738983154
    10. 'int' → logprob: -4.774245738983154

Token 84: 'ible' (ID: 1430)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.5366662740707397
    2. 'b' → logprob: -1.2866662740707397
    3. 'ible' → logprob: -2.9116663932800293
    4. 'bre' → logprob: -3.1616663932800293
    5. 'te' → logprob: -3.5366663932800293
    6. 'be' → logprob: -5.536666393280029
    7. 'bé' → logprob: -5.911666393280029
    8. 'bles' → logprob: -7.411666393280029
    9. 're' → logprob: -7.661666393280029
    10. '```' → logprob: -7.786666393280029

Token 85: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44218891859054565
    2. ',' → logprob: -2.3171889781951904
    3. '       ' → logprob: -2.8171889781951904
    4. ' if' → logprob: -2.9421889781951904
    5. ' ,' → logprob: -3.3171889781951904
    6. '<|end|>' → logprob: -3.9421889781951904
    7. '        ' → logprob: -4.067188739776611
    8. ' c' → logprob: -4.442188739776611
    9. 'if' → logprob: -4.692188739776611
    10. ' but' → logprob: -4.942188739776611

Token 86: ' ça' (ID: 13590)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.100478172302246
    2. ' if' → logprob: -1.975478172302246
    3. '           ' → logprob: -2.350478172302246
    4. '       ' → logprob: -2.600478172302246
    5. 'c' → logprob: -2.600478172302246
    6. ' correct' → logprob: -2.975478172302246
    7. ' on' → logprob: -3.600478172302246
    8. 'if' → logprob: -3.725478172302246
    9. ' la' → logprob: -3.725478172302246
    10. ' possible' → logprob: -4.225478172302246

Token 87: ' fait' (ID: 7473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4214012622833252
    2. 'f' → logprob: -3.171401262283325
    3. 'fonction' → logprob: -3.171401262283325
    4. '+=' → logprob: -3.296401262283325
    5. ' =' → logprob: -3.421401262283325
    6. 'v' → logprob: -3.671401262283325
    7. 'fait' → logprob: -3.921401262283325
    8. 'continue' → logprob: -4.171401023864746
    9. 'mar' → logprob: -4.171401023864746
    10. 's' → logprob: -4.671401023864746

Token 88: ' le' (ID: 505)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.4789029359817505
    2. 'le' → logprob: -1.8539029359817505
    3. 'du' → logprob: -3.353902816772461
    4. 'pl' → logprob: -3.603902816772461
    5. 'c' → logprob: -3.728902816772461
    6. 'simple' → logprob: -3.853902816772461
    7. 'plus' → logprob: -4.103902816772461
    8. 'quel' → logprob: -4.228902816772461
    9. 's' → logprob: -4.603902816772461
    10. 'sense' → logprob: -4.978902816772461

Token 89: ' taf' (ID: 38625)
  Prédit: 'job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.10901050269603729
    2. 'minimum' → logprob: -3.1090104579925537
    3. 'tr' → logprob: -3.8590104579925537
    4. 'trav' → logprob: -4.984010696411133
    5. 'plus' → logprob: -5.484010696411133
    6. 'm' → logprob: -5.484010696411133
    7. 't' → logprob: -5.484010696411133
    8. ' boulot' → logprob: -5.609010696411133
    9. 'c' → logprob: -5.734010696411133
    10. 'jeu' → logprob: -5.859010696411133

Token 90: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20625409483909607
    2. '       ' → logprob: -2.581254005432129
    3. '<|end|>' → logprob: -2.831254005432129
    4. '   ' → logprob: -4.456254005432129
    5. ' c' → logprob: -5.331254005432129
    6. ' 
' → logprob: -5.331254005432129
    7. '  ' → logprob: -5.456254005432129
    8. '        ' → logprob: -5.581254005432129
    9. ',' → logprob: -5.831254005432129
    10. ':' → logprob: -5.956254005432129

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4078894555568695
    2. ' ' → logprob: -1.282889485359192
    3. '<|end|>' → logprob: -3.7828893661499023
    4. '   ' → logprob: -4.532889366149902
    5. '        ' → logprob: -5.532889366149902
    6. ' 
' → logprob: -5.657889366149902
    7. 'c' → logprob: -5.782889366149902
    8. ' c' → logprob: -5.782889366149902
    9. '        
' → logprob: -6.157889366149902
    10. '  ' → logprob: -6.657889366149902

Token 92: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.030562343075871468
    2. ' c' → logprob: -3.530562400817871
    3. 'if' → logprob: -8.155562400817871
    4. 'min' → logprob: -9.155562400817871
    5. ' if' → logprob: -9.530562400817871
    6. '           ' → logprob: -10.218062400817871
    7. '   ' → logprob: -10.593062400817871
    8. 'm' → logprob: -10.655562400817871
    9. '       ' → logprob: -10.718062400817871
    10. ')' → logprob: -10.843062400817871

Token 93: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0716480016708374
    2. '=' → logprob: -2.821648120880127
    3. 'ist' → logprob: -5.196648120880127
    4. 'istance' → logprob: -6.071648120880127
    5. 'i' → logprob: -7.821648120880127
    6. 'e' → logprob: -8.196647644042969
    7. ' ' → logprob: -8.446647644042969
    8. '1' → logprob: -8.821647644042969
    9. 'is' → logprob: -9.571647644042969
    10. ' ' → logprob: -9.696647644042969

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09175725281238556
    2. '=' → logprob: -2.466757297515869
    3. 'ist' → logprob: -6.216757297515869
    4. ',' → logprob: -7.966757297515869
    5. 'istance' → logprob: -8.466756820678711
    6. '1' → logprob: -9.341756820678711
    7. ' ' → logprob: -9.466756820678711
    8. 'x' → logprob: -11.216756820678711
    9. ' =
' → logprob: -11.841756820678711
    10. 'is' → logprob: -11.841756820678711

Token 95: ' j' (ID: 441)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.09638844430446625
    2. 'j' → logprob: -3.096388339996338
    3. ' abs' → logprob: -3.721388339996338
    4. 'x' → logprob: -4.346388339996338
    5. 'i' → logprob: -5.596388339996338
    6. '(abs' → logprob: -6.221388339996338
    7. 'min' → logprob: -6.596388339996338
    8. ' j' → logprob: -7.221388339996338
    9. 'y' → logprob: -7.721388339996338
    10. '(j' → logprob: -7.721388339996338

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31814607977867126
    2. '-' → logprob: -1.3181461095809937
    3. '-x' → logprob: -5.693146228790283
    4. '-i' → logprob: -6.693146228790283
    5. ' ' → logprob: -8.818145751953125
    6. '-y' → logprob: -10.193145751953125
    7. 'x' → logprob: -10.943145751953125
    8. '-j' → logprob: -11.443145751953125
    9. ' x' → logprob: -11.568145751953125
    10. ' ' → logprob: -12.568145751953125

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10543813556432724
    2. 'x' → logprob: -2.605438232421875
    3. '1' → logprob: -3.855438232421875
    4. ' i' → logprob: -5.480438232421875
    5. ' x' → logprob: -7.980438232421875
    6. ' ' → logprob: -8.355438232421875
    7. 'y' → logprob: -8.480438232421875
    8. 'j' → logprob: -10.605438232421875
    9. '   ' → logprob: -10.855438232421875
    10. ' y' → logprob: -11.792938232421875

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5914866924285889
    2. 'd' → logprob: -0.8414866924285889
    3. ' d' → logprob: -4.466486930847168
    4. '
' → logprob: -6.841486930847168
    5. '*d' → logprob: -7.341486930847168
    6. ' 
' → logprob: -7.466486930847168
    7. '+' → logprob: -7.716486930847168
    8. 'c' → logprob: -8.716486930847168
    9. '+d' → logprob: -8.716486930847168
    10. '       ' → logprob: -8.966486930847168

Token 99: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5522696375846863
    2. '
' → logprob: -1.302269697189331
    3. '<|end|>' → logprob: -2.052269697189331
    4. ' d' → logprob: -4.052269458770752
    5. '<|end|>' → logprob: -6.052269458770752
    6. '       ' → logprob: -7.052269458770752
    7. '*d' → logprob: -7.177269458770752
    8. ' 
' → logprob: -7.677269458770752
    9. '        
' → logprob: -8.17726993560791
    10. '  
' → logprob: -8.30226993560791

Token 100: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0035371133126318455
    2. '       ' → logprob: -6.503537178039551
    3. ' d' → logprob: -6.753537178039551
    4. 'c' → logprob: -8.00353717803955
    5. 'if' → logprob: -8.12853717803955
    6. ' if' → logprob: -9.50353717803955
    7. ' ' → logprob: -10.25353717803955
    8. 'for' → logprob: -11.25353717803955
    9. '<|end|>' → logprob: -11.25353717803955
    10. '1' → logprob: -11.37853717803955

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004241043236106634
    2. '1' → logprob: -6.504240989685059
    3. ' =' → logprob: -6.504240989685059
    4. ' ' → logprob: -8.254240989685059
    5. '=' → logprob: -8.379240989685059
    6. 'f' → logprob: -8.504240989685059
    7. 'ist' → logprob: -9.004240989685059
    8. 'x' → logprob: -9.379240989685059
    9. '_' → logprob: -9.754240989685059
    10. 'd' → logprob: -10.129240989685059

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12709704041481018
    2. '=' → logprob: -2.1270971298217773
    3. ' ' → logprob: -9.377097129821777
    4. 'd' → logprob: -10.252097129821777
    5. ',' → logprob: -11.752097129821777
    6. ' *' → logprob: -11.877097129821777
    7. '*' → logprob: -12.127097129821777
    8. '1' → logprob: -12.752097129821777
    9. ' +' → logprob: -13.127097129821777
    10. '-' → logprob: -13.127097129821777

Token 103: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2117607444524765
    2. 'x' → logprob: -1.8367607593536377
    3. ' abs' → logprob: -3.9617607593536377
    4. 'y' → logprob: -5.586760520935059
    5. ' x' → logprob: -5.961760520935059
    6. 'min' → logprob: -5.961760520935059
    7. '(abs' → logprob: -6.086760520935059
    8. ' y' → logprob: -7.711760520935059
    9. ' ' → logprob: -8.086760520935059
    10. ' min' → logprob: -9.336760520935059

Token 104: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014348012395203114
    2. '(c' → logprob: -4.639348030090332
    3. '(y' → logprob: -5.514348030090332
    4. 'x' → logprob: -8.014348030090332
    5. '(i' → logprob: -9.764348030090332
    6. '(n' → logprob: -10.139348030090332
    7. '((' → logprob: -10.264348030090332
    8. '(' → logprob: -10.264348030090332
    9. '(d' → logprob: -10.639348030090332
    10. '(j' → logprob: -11.514348030090332

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3488287925720215
    2. '-' → logprob: -1.2238287925720215
    3. '-j' → logprob: -8.22382926940918
    4. '-i' → logprob: -9.72382926940918
    5. '-y' → logprob: -10.47382926940918
    6. ' ' → logprob: -11.22382926940918
    7. '+' → logprob: -12.84882926940918
    8. '-d' → logprob: -12.97382926940918
    9. '-k' → logprob: -13.22382926940918
    10. '-x' → logprob: -13.22382926940918

Token 106: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05748319625854492
    2. 'j' → logprob: -2.932483196258545
    3. 'y' → logprob: -6.307483196258545
    4. ' i' → logprob: -7.557483196258545
    5. 'd' → logprob: -9.432483673095703
    6. 'x' → logprob: -9.432483673095703
    7. ' j' → logprob: -10.307483673095703
    8. '(i' → logprob: -11.682483673095703
    9. 'n' → logprob: -11.807483673095703
    10. '1' → logprob: -11.932483673095703

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003803995903581381
    2. ' )' → logprob: -5.6288042068481445
    3. ')
' → logprob: -9.003804206848145
    4. ')+' → logprob: -10.253804206848145
    5. ')

' → logprob: -11.378804206848145
    6. '+' → logprob: -11.378804206848145
    7. '))' → logprob: -12.253804206848145
    8. '),' → logprob: -12.753804206848145
    9. ' )
' → logprob: -13.128804206848145
    10. ' -' → logprob: -13.378804206848145

Token 108: ' +' (ID: 659)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3954903781414032
    2. '       ' → logprob: -1.2704904079437256
    3. '+' → logprob: -3.3954904079437256
    4. ' d' → logprob: -5.5204901695251465
    5. ' +' → logprob: -5.7704901695251465
    6. 'abs' → logprob: -6.0204901695251465
    7. '
' → logprob: -6.3954901695251465
    8. 'dist' → logprob: -7.8954901695251465
    9. '+
' → logprob: -8.270490646362305
    10. '+d' → logprob: -8.770490646362305

Token 109: ' ' (ID: 220)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00441812863573432
    2. ' abs' → logprob: -6.004417896270752
    3. '1' → logprob: -6.254417896270752
    4. '+' → logprob: -11.62941837310791
    5. '(abs' → logprob: -12.00441837310791
    6. '.abs' → logprob: -13.00441837310791
    7. ' ' → logprob: -14.75441837310791
    8. '   ' → logprob: -14.75441837310791
    9. '2' → logprob: -16.004417419433594
    10. '    ' → logprob: -16.504417419433594

Token 110: '1' (ID: 16)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.537180211627856e-05
    2. '1' → logprob: -10.375045776367188
    3. ' abs' → logprob: -11.250045776367188
    4. '(abs' → logprob: -14.250045776367188
    5. '+' → logprob: -15.125045776367188
    6. '.abs' → logprob: -16.125045776367188
    7. '   ' → logprob: -17.250045776367188
    8. '  ' → logprob: -19.875045776367188
    9. '_abs' → logprob: -20.250045776367188
    10. ' ' → logprob: -20.500045776367188

Token 111: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.386949747800827
    2. '+' → logprob: -1.1369497776031494
    3. '*' → logprob: -9.88694953918457
    4. ' *' → logprob: -11.76194953918457
    5. ' +
' → logprob: -12.26194953918457
    6. 'abs' → logprob: -12.38694953918457
    7. '<|end|>' → logprob: -12.51194953918457
    8. ' abs' → logprob: -12.88694953918457
    9. '+
' → logprob: -13.63694953918457
    10. ' ' → logprob: -13.88694953918457

Token 112: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -2.1888679839321412e-05
    2. ' abs' → logprob: -10.750021934509277
    3. '(abs' → logprob: -15.000021934509277
    4. '   ' → logprob: -17.50002098083496
    5. '.abs' → logprob: -18.62502098083496
    6. '       ' → logprob: -18.87502098083496
    7. '  ' → logprob: -19.50002098083496
    8. '```' → logprob: -20.12502098083496
    9. '_abs' → logprob: -20.12502098083496
    10. 'y' → logprob: -20.50002098083496

Token 113: '(j' (ID: 4997)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.008922522887587547
    2. '(j' → logprob: -4.758922576904297
    3. 'y' → logprob: -8.383922576904297
    4. '(i' → logprob: -10.008922576904297
    5. '(' → logprob: -10.883922576904297
    6. 'j' → logprob: -11.633922576904297
    7. '(n' → logprob: -12.508922576904297
    8. '(x' → logprob: -12.883922576904297
    9. '(b' → logprob: -16.383922576904297
    10. '(z' → logprob: -16.633922576904297

Token 114: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14279039204120636
    2. ' -' → logprob: -2.0177903175354004
    3. '-y' → logprob: -9.517790794372559
    4. '(y' → logprob: -10.767790794372559
    5. '(' → logprob: -11.767790794372559
    6. 'y' → logprob: -12.142790794372559
    7. ' y' → logprob: -12.142790794372559
    8. ' ' → logprob: -13.642790794372559
    9. ')' → logprob: -14.892790794372559
    10. ',' → logprob: -15.267790794372559

Token 115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011718906462192535
    2. ' y' → logprob: -6.751172065734863
    3. 'x' → logprob: -13.751172065734863
    4. '(y' → logprob: -15.251172065734863
    5. '	y' → logprob: -15.626172065734863
    6. ')y' → logprob: -17.001171112060547
    7. ' ' → logprob: -17.876171112060547
    8. 'y's' → logprob: -18.126171112060547
    9. ''y' → logprob: -18.751171112060547
    10. '_y' → logprob: -18.751171112060547

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. '))' → logprob: -10.125048637390137
    3. '())' → logprob: -13.250048637390137
    4. ' )' → logprob: -13.500048637390137
    5. ')
' → logprob: -13.875048637390137
    6. '#' → logprob: -14.125048637390137
    7. ')#' → logprob: -14.250048637390137
    8. ')`' → logprob: -14.375048637390137
    9. '`)' → logprob: -14.500048637390137
    10. '()' → logprob: -14.875048637390137

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015965275466442108
    2. ' if' → logprob: -5.390965461730957
    3. '        
' → logprob: -5.765965461730957
    4. 'if' → logprob: -5.765965461730957
    5. 'c' → logprob: -6.015965461730957
    6. ' c' → logprob: -6.765965461730957
    7. '
' → logprob: -7.515965461730957
    8. '   ' → logprob: -8.265965461730957
    9. '<|end|>' → logprob: -8.515965461730957
    10. '        ' → logprob: -9.390965461730957

Token 118: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0002539157867432
    2. '       ' → logprob: -1.3752539157867432
    3. '
' → logprob: -2.125253915786743
    4. ' c' → logprob: -2.500253915786743
    5. 'if' → logprob: -2.625253915786743
    6. ' if' → logprob: -3.250253915786743
    7. ' 
' → logprob: -3.750253915786743
    8. '        
' → logprob: -4.125253677368164
    9. ')' → logprob: -5.125253677368164
    10. '   ' → logprob: -5.750253677368164

Token 119: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33793261647224426
    2. '[' → logprob: -2.087932586669922
    3. '[i' → logprob: -2.962932586669922
    4. '.append' → logprob: -3.337932586669922
    5. '2' → logprob: -3.587932586669922
    6. '=' → logprob: -4.087932586669922
    7. ' =' → logprob: -4.462932586669922
    8. '.' → logprob: -5.087932586669922
    9. '[min' → logprob: -6.212932586669922
    10. '3' → logprob: -6.462932586669922

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.78522491455078
    4. '=

' → logprob: -17.66022491455078
    5. '＝' → logprob: -17.78522491455078
    6. 'd' → logprob: -17.91022491455078
    7. 's' → logprob: -18.03522491455078
    8. ' =
' → logprob: -18.41022491455078
    9. ' ' → logprob: -18.91022491455078
    10. '=int' → logprob: -18.91022491455078

Token 121: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4520796835422516
    2. 'j' → logprob: -1.0770796537399292
    3. ' abs' → logprob: -4.952079772949219
    4. 'd' → logprob: -4.952079772949219
    5. ' j' → logprob: -5.827079772949219
    6. '(j' → logprob: -6.327079772949219
    7. '(abs' → logprob: -6.452079772949219
    8. 'n' → logprob: -6.952079772949219
    9. 'min' → logprob: -7.452079772949219
    10. 'i' → logprob: -7.702079772949219

Token 122: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.049944229423999786
    2. '(n' → logprob: -3.9249441623687744
    3. '(y' → logprob: -4.1749444007873535
    4. '(i' → logprob: -4.5499444007873535
    5. '(j' → logprob: -6.1749444007873535
    6. '(' → logprob: -7.4249444007873535
    7. 'x' → logprob: -8.049943923950195
    8. 'y' → logprob: -11.174943923950195
    9. 'j' → logprob: -12.049943923950195
    10. 'n' → logprob: -12.174943923950195

Token 123: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043009236454963684
    2. '-' → logprob: -3.1680092811584473
    3. ' ' → logprob: -11.793008804321289
    4. ' ' → logprob: -13.168008804321289
    5. ',' → logprob: -15.543008804321289
    6. '-i' → logprob: -16.54300880432129
    7. ')' → logprob: -16.79300880432129
    8. '−' → logprob: -17.23050880432129
    9. '_' → logprob: -17.35550880432129
    10. '   ' → logprob: -17.35550880432129

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.036616403609514236
    2. 'x' → logprob: -3.786616325378418
    3. 'j' → logprob: -5.036616325378418
    4. ' i' → logprob: -5.036616325378418
    5. ')' → logprob: -8.786616325378418
    6. ' x' → logprob: -10.286616325378418
    7. ' j' → logprob: -10.536616325378418
    8. ' ' → logprob: -10.911616325378418
    9. '   ' → logprob: -11.911616325378418
    10. ')i' → logprob: -11.911616325378418

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.416665640543215e-05
    2. ')+' → logprob: -11.00003433227539
    3. ' )' → logprob: -11.12503433227539
    4. '`)' → logprob: -14.00003433227539
    5. '')' → logprob: -14.25003433227539
    6. '")' → logprob: -15.25003433227539
    7. '）' → logprob: -15.62503433227539
    8. '+' → logprob: -15.87503433227539
    9. '+)' → logprob: -16.25003433227539
    10. '   ' → logprob: -16.25003433227539

Token 126: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6529753804206848
    2. ')' → logprob: -0.9029753804206848
    3. '+' → logprob: -2.65297532081604
    4. ')+' → logprob: -6.027975559234619
    5. ']' → logprob: -8.027975082397461
    6. '()' → logprob: -8.152975082397461
    7. ' )' → logprob: -8.777975082397461
    8. 'd' → logprob: -9.027975082397461
    9. ' plus' → logprob: -9.527975082397461
    10. ' ' → logprob: -9.652975082397461

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132825195789337
    2. ' ' → logprob: -1.3132824897766113
    3. '+' → logprob: -11.56328296661377
    4. '   ' → logprob: -12.43828296661377
    5. ' +' → logprob: -12.56328296661377
    6. ' ' → logprob: -13.81328296661377
    7. '```' → logprob: -14.18828296661377
    8. '  ' → logprob: -14.81328296661377
    9. ')' → logprob: -15.43828296661377
    10. ' plus' → logprob: -15.50078296661377

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005551783833652735
    2. ' ' → logprob: -7.500555038452148
    3. '+' → logprob: -13.375555038452148
    4. '```' → logprob: -15.500555038452148
    5. '   ' → logprob: -16.00055503845215
    6. ' +' → logprob: -16.75055503845215
    7. 'abs' → logprob: -17.25055503845215
    8. ')' → logprob: -17.37555503845215
    9. '...' → logprob: -17.43805503845215
    10. '.' → logprob: -17.50055503845215

Token 129: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141363143920898
    2. '+' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.826414108276367
    4. ' plus' → logprob: -16.076414108276367
    5. 'plus' → logprob: -18.576414108276367
    6. ' +
' → logprob: -18.701414108276367
    7. '＋' → logprob: -18.701414108276367
    8. ' +
' → logprob: -19.701414108276367
    9. ')' → logprob: -19.826414108276367
    10. ' ' → logprob: -19.826414108276367

Token 130: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0024763736873865128
    2. ' abs' → logprob: -6.002476215362549
    3. '(abs' → logprob: -14.252476692199707
    4. '.abs' → logprob: -17.75247573852539
    5. '_abs' → logprob: -19.25247573852539
    6. '|' → logprob: -20.50247573852539
    7. '```' → logprob: -20.75247573852539
    8. 'Abs' → logprob: -21.25247573852539
    9. '   ' → logprob: -21.87747573852539
    10. ' ' → logprob: -22.50247573852539

Token 131: '(j' (ID: 4997)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.125210297293961e-05
    2. '(' → logprob: -10.375081062316895
    3. '(j' → logprob: -10.375081062316895
    4. '(y' → logprob: -11.250081062316895
    5. '(n' → logprob: -12.750081062316895
    6. 'x' → logprob: -13.250081062316895
    7. '(i' → logprob: -14.250081062316895
    8. '(abs' → logprob: -15.125081062316895
    9. ' (' → logprob: -16.62508201599121
    10. '((' → logprob: -16.87508201599121

Token 132: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08895855396986008
    2. '-' → logprob: -2.463958501815796
    3. ' ' → logprob: -12.213958740234375
    4. '(x' → logprob: -12.338958740234375
    5. 'x' → logprob: -12.463958740234375
    6. '(' → logprob: -12.463958740234375
    7. '-x' → logprob: -13.838958740234375
    8. ' (' → logprob: -14.463958740234375
    9. ',' → logprob: -15.713958740234375
    10. ')' → logprob: -16.338958740234375

Token 133: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.615255839889869e-05
    2. ' x' → logprob: -9.250096321105957
    3. ' ' → logprob: -18.00009536743164
    4. 'y' → logprob: -18.12509536743164
    5. '(x' → logprob: -18.62509536743164
    6. ')' → logprob: -18.75009536743164
    7. '   ' → logprob: -19.00009536743164
    8. '	x' → logprob: -19.00009536743164
    9. '_x' → logprob: -19.25009536743164
    10. ')x' → logprob: -20.25009536743164

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005280603654682636
    2. ')
' → logprob: -5.255280494689941
    3. ')

' → logprob: -10.505280494689941
    4. ')
' → logprob: -11.130280494689941
    5. ' )' → logprob: -13.380280494689941
    6. '))' → logprob: -14.005280494689941
    7. ')`' → logprob: -14.255280494689941
    8. ']' → logprob: -14.630280494689941
    9. ')`
' → logprob: -14.755280494689941
    10. '）' → logprob: -15.380280494689941

Token 135: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4193294048309326
    2. 'if' → logprob: -1.6693294048309326
    3. ' if' → logprob: -2.5443294048309326
    4. 'min' → logprob: -3.5443294048309326
    5. ' c' → logprob: -3.7943294048309326
    6. '       ' → logprob: -5.544329643249512
    7. 'for' → logprob: -5.544329643249512
    8. ')' → logprob: -5.669329643249512
    9. ' min' → logprob: -6.169329643249512
    10. 'd' (adapté à ' d') → logprob: -6.294329643249512

Token 137: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05101485922932625
    2. 'i' → logprob: -4.3010149002075195
    3. '=' → logprob: -4.4260149002075195
    4. ' =' → logprob: -4.6760149002075195
    5. '1' → logprob: -5.1760149002075195
    6. '[' → logprob: -5.6760149002075195
    7. 'min' → logprob: -7.1760149002075195
    8. '[min' → logprob: -7.1760149002075195
    9. 'c' → logprob: -7.4260149002075195
    10. '=[' → logprob: -7.4260149002075195

Token 138: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804194927215576
    2. ' min' → logprob: -3.2880420684814453
    3. 'max' → logprob: -15.538042068481445
    4. '[min' → logprob: -16.413042068481445
    5. '	min' → logprob: -16.913042068481445
    6. '(min' → logprob: -17.038042068481445
    7. 'd' → logprob: -17.913042068481445
    8. 'minimum' → logprob: -18.038042068481445
    9. ' ' → logprob: -18.288042068481445
    10. ' d' → logprob: -19.163042068481445

Token 139: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '([' → logprob: -15.250015258789062
    4. '((' → logprob: -16.625015258789062
    5. '(min' → logprob: -17.250015258789062
    6. '(
' → logprob: -18.375015258789062
    7. '(distance' → logprob: -18.875015258789062
    8. '(c' → logprob: -19.250015258789062
    9. ' (' → logprob: -19.500015258789062
    10. 'd' → logprob: -19.500015258789062

Token 140: '1' (ID: 16)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01763262413442135
    2. '[d' → logprob: -4.892632484436035
    3. 'd' → logprob: -5.142632484436035
    4. '1' → logprob: -6.142632484436035
    5. '([' → logprob: -6.392632484436035
    6. '(' → logprob: -8.517632484436035
    7. ',d' → logprob: -10.142632484436035
    8. ' (' → logprob: -11.267632484436035
    9. ' d' → logprob: -11.392632484436035
    10. ')d' → logprob: -11.517632484436035

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025562841910868883
    2. ',d' → logprob: -6.002556324005127
    3. ' ,' → logprob: -9.502555847167969
    4. ')' → logprob: -12.877555847167969
    5. 'd' → logprob: -13.252555847167969
    6. ',
' → logprob: -13.877555847167969
    7. ',c' → logprob: -14.627555847167969
    8. ' d' → logprob: -16.50255584716797
    9. ')d' → logprob: -16.87755584716797
    10. ',)' → logprob: -17.62755584716797

Token 142: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1269291490316391
    2. ' d' → logprob: -2.1269290447235107
    3. '	d' → logprob: -15.12692928314209
    4. ' ' → logprob: -15.50192928314209
    5. '   ' → logprob: -15.62692928314209
    6. '(d' → logprob: -15.75192928314209
    7. ')d' → logprob: -16.501928329467773
    8. 'min' → logprob: -16.876928329467773
    9. '    ' → logprob: -17.126928329467773
    10. '  ' → logprob: -17.126928329467773

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018935515254270285
    2. ',' → logprob: -8.875189781188965
    3. '3' → logprob: -10.625189781188965
    4. ' ,' → logprob: -11.875189781188965
    5. ' ' → logprob: -12.375189781188965
    6. ',d' → logprob: -12.500189781188965
    7. 'd' → logprob: -12.625189781188965
    8. '_,' → logprob: -13.125189781188965
    9. ' d' → logprob: -13.625189781188965
    10. '1' → logprob: -14.000189781188965

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036974623799324036
    2. ',d' → logprob: -6.128697395324707
    3. ')' → logprob: -6.628697395324707
    4. ' ,' → logprob: -9.128697395324707
    5. 'd' → logprob: -9.628697395324707
    6. ')d' → logprob: -11.503697395324707
    7. ',)' → logprob: -13.003697395324707
    8. ',
' → logprob: -14.003697395324707
    9. ' )' → logprob: -14.128697395324707
    10. ' d' → logprob: -14.628697395324707

Token 145: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078639671206474
    2. ' d' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.129077911376953
    4. ')d' → logprob: -17.004077911376953
    5. ' ' → logprob: -17.504077911376953
    6. '	d' → logprob: -17.629077911376953
    7. ' ' → logprob: -18.379077911376953
    8. '   ' → logprob: -18.504077911376953
    9. ')
' → logprob: -19.754077911376953
    10. '  ' → logprob: -19.879077911376953

Token 146: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -13.750000953674316
    3. '۳' → logprob: -17.625001907348633
    4. ' ' → logprob: -18.500001907348633
    5. '３' → logprob: -18.750001907348633
    6. '٣' → logprob: -19.000001907348633
    7. ')
' → logprob: -20.125001907348633
    8. '-' → logprob: -20.500001907348633
    9. '৩' → logprob: -20.750001907348633
    10. '³' → logprob: -20.875001907348633

Token 147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10081913322210312
    2. ')' → logprob: -2.3508191108703613
    3. ')
' → logprob: -7.600819110870361
    4. '
' → logprob: -9.47581958770752
    5. ')

' → logprob: -10.72581958770752
    6. '       ' → logprob: -12.60081958770752
    7. ' )
' → logprob: -12.97581958770752
    8. '
' → logprob: -13.35081958770752
    9. 'if' → logprob: -14.10081958770752
    10. ')c' → logprob: -14.35081958770752

Token 148: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5042070746421814
    2. ' c' → logprob: -2.129207134246826
    3. '   ' → logprob: -2.129207134246826
    4. 'c' → logprob: -2.754207134246826
    5. ' 
' → logprob: -3.754207134246826
    6. '<|end|>' → logprob: -4.379207134246826
    7. ')c' → logprob: -4.504207134246826
    8. '       ' → logprob: -4.504207134246826
    9. ' ' → logprob: -5.004207134246826
    10. '	c' → logprob: -5.129207134246826

Token 149: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.012512944638729095
    2. ' c' → logprob: -4.637513160705566
    3. 'if' → logprob: -6.387513160705566
    4. ' if' → logprob: -7.637513160705566
    5. '       ' → logprob: -8.637513160705566
    6. '   ' → logprob: -9.012513160705566
    7. '	c' → logprob: -9.387513160705566
    8. ')' → logprob: -9.887513160705566
    9. ')c' → logprob: -10.012513160705566
    10. '        
' → logprob: -10.262513160705566

Token 150: '[d' (ID: 48377)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10667869448661804
    2. '[j' → logprob: -2.3566787242889404
    3. '[d' → logprob: -5.856678485870361
    4. '[' → logprob: -5.981678485870361
    5. '[c' → logprob: -6.856678485870361
    6. '[min' → logprob: -12.85667896270752
    7. 'i' → logprob: -13.35667896270752
    8. 'd' → logprob: -13.73167896270752
    9. '[a' → logprob: -13.73167896270752
    10. '[
' → logprob: -13.85667896270752

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010579760186374187
    2. '-' → logprob: -5.260579586029053
    3. ']+=' → logprob: -5.260579586029053
    4. ']-' → logprob: -9.260580062866211
    5. '[' → logprob: -10.760580062866211
    6. ' -' → logprob: -11.510580062866211
    7. ']+' → logprob: -12.010580062866211
    8. ' ]' → logprob: -13.635580062866211
    9. '[i' → logprob: -13.885580062866211
    10. ']int' → logprob: -14.385580062866211

Token 152: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04108351469039917
    2. ' +=' → logprob: -3.291083574295044
    3. '+' → logprob: -6.166083335876465
    4. ']+=' → logprob: -7.291083335876465
    5. '=' → logprob: -8.416083335876465
    6. '[' → logprob: -10.916083335876465
    7. '++' → logprob: -12.166083335876465
    8. '<|end|>' → logprob: -12.416083335876465
    9. ']' → logprob: -13.416083335876465
    10. '+='' → logprob: -13.666083335876465

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '１' → logprob: -20.000001907348633
    4. '+' → logprob: -20.875001907348633
    5. '2' → logprob: -20.875001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '۱' → logprob: -21.125001907348633
    8. '  ' → logprob: -21.812501907348633
    9. '```' → logprob: -21.812501907348633
    10. '0' → logprob: -21.875001907348633

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '2' → logprob: -19.125
    4. '+' → logprob: -19.375
    5. '１' → logprob: -19.875
    6. '-' → logprob: -20.25
    7. '   ' → logprob: -20.75
    8. '۱' → logprob: -21.1875
    9. '11' → logprob: -21.375
    10. '  ' → logprob: -21.625

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.694115161895752
    2. 'for' → logprob: -0.694115161895752
    3. ')' → logprob: -7.319115161895752
    4. ' for' → logprob: -9.194114685058594
    5. ' print' → logprob: -9.819114685058594
    6. '```' → logprob: -9.819114685058594
    7. ']' → logprob: -10.319114685058594
    8. '
' → logprob: -10.444114685058594
    9. '#' → logprob: -11.319114685058594
    10. ')
' → logprob: -12.569114685058594

Token 157: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030936390976421535
    2. 'print' → logprob: -8.125308990478516
    3. ' for' → logprob: -12.000308990478516
    4. 'c' → logprob: -12.250308990478516
    5. '#' → logprob: -13.625308990478516
    6. '
' → logprob: -14.500308990478516
    7. 'i' → logprob: -16.125308990478516
    8. '```' → logprob: -16.250308990478516
    9. 'result' → logprob: -16.500308990478516
    10. 'fo' → logprob: -16.875308990478516

Token 158: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.36088186502456665
    2. 'icher' → logprob: -1.9858818054199219
    3. 'iche' → logprob: -2.985881805419922
    4. '#' → logprob: -3.110881805419922
    5. 'print' → logprob: -3.235881805419922
    6. 'ich' → logprob: -3.735881805419922
    7. 'for' → logprob: -5.610881805419922
    8. 'r' → logprob: -6.985881805419922
    9. '```' → logprob: -7.485881805419922
    10. 'ic' → logprob: -7.735881805419922

Token 159: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017064384883269668
    2. '
' → logprob: -8.750170707702637
    3. 'print' → logprob: -12.500170707702637
    4. ' for' → logprob: -12.500170707702637
    5. '```' → logprob: -12.500170707702637
    6. '0' → logprob: -15.125170707702637
    7. '1' → logprob: -15.625170707702637
    8. '(' → logprob: -16.25016975402832
    9. 'range' → logprob: -16.25016975402832
    10. '``' → logprob: -17.00016975402832

Token 160: ' classique' (ID: 76895)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018824731232598424
    2. 'print' → logprob: -6.501882553100586
    3. ' for' → logprob: -7.876882553100586
    4. ' print' → logprob: -14.876882553100586
    5. '```' → logprob: -16.251882553100586
    6. ' 
' → logprob: -16.751882553100586
    7. '1' → logprob: -16.876882553100586
    8. 'range' → logprob: -17.126882553100586
    9. '
' → logprob: -17.251882553100586
    10. 'c' → logprob: -17.626882553100586

Token 161: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.047134305234067e-05
    2. '
' → logprob: -11.125030517578125
    3. 'print' → logprob: -11.250030517578125
    4. '```' → logprob: -13.375030517578125
    5. ' for' → logprob: -14.000030517578125
    6. '0' → logprob: -15.750030517578125
    7. '``' → logprob: -17.000030517578125
    8. '(' → logprob: -17.125030517578125
    9. 'range' → logprob: -17.375030517578125
    10. '[' → logprob: -17.500030517578125

Token 162: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033593899570405483
    2. 'print' → logprob: -8.000335693359375
    3. ' for' → logprob: -14.500335693359375
    4. '```' → logprob: -17.500335693359375
    5. '
' → logprob: -18.625335693359375
    6. ' print' → logprob: -21.750335693359375
    7. '#' → logprob: -21.750335693359375
    8. '0' → logprob: -21.875335693359375
    9. '[' → logprob: -22.250335693359375
    10. '	for' → logprob: -22.375335693359375

Token 163: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01815485768020153
    2. ' for' → logprob: -4.018154621124268
    3. 'print' → logprob: -12.393155097961426
    4. '
' → logprob: -15.143155097961426
    5. '```' → logprob: -16.01815414428711
    6. ' print' → logprob: -16.39315414428711
    7. '#' → logprob: -16.51815414428711
    8. ' pour' → logprob: -16.64315414428711
    9. 'pour' → logprob: -16.76815414428711
    10. ' ' → logprob: -16.89315414428711

Token 164: ' à' (ID: 1221)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.11717528849840164
    2. ' at' → logprob: -3.617175340652466
    3. ' à' → logprob: -3.617175340652466
    4. ' from' → logprob: -4.117175102233887
    5. 'par' → logprob: -4.492175102233887
    6. 'r' → logprob: -4.617175102233887
    7. ' ' → logprob: -5.117175102233887
    8. 'from' → logprob: -5.367175102233887
    9. '=' → logprob: -6.117175102233887
    10. ' pas' → logprob: -6.742175102233887

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12873035669326782
    2. ' ' → logprob: -2.878730297088623
    3. 'range' → logprob: -3.503730297088623
    4. ' range' → logprob: -3.628730297088623
    5. 'for' → logprob: -5.878730297088623
    6. 'print' → logprob: -6.253730297088623
    7. ' for' → logprob: -6.753730297088623
    8. ' print' → logprob: -7.503730297088623
    9. ' c' → logprob: -8.003730773925781
    10. '0' → logprob: -8.253730773925781

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.125044822692871
    3. 'i' → logprob: -13.250044822692871
    4. 'for' → logprob: -14.250044822692871
    5. 'c' → logprob: -14.750044822692871
    6. 'un' → logprob: -14.750044822692871
    7. 'print' → logprob: -15.250044822692871
    8. 'l' → logprob: -15.375044822692871
    9. 'd' → logprob: -15.625044822692871
    10. '```' → logprob: -15.875044822692871

Token 167: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. 'print' → logprob: -14.750000953674316
    3. ' for' → logprob: -16.125
    4. '
' → logprob: -17.25
    5. 'range' → logprob: -17.75
    6. '```' → logprob: -17.875
    7. '1' → logprob: -20.375
    8. '``' → logprob: -21.375
    9. '[' → logprob: -22.75
    10. 'from' → logprob: -22.875

Token 168: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.723352049040841e-06
    2. 'print' → logprob: -12.500004768371582
    3. ' for' → logprob: -14.625004768371582
    4. '```' → logprob: -14.750004768371582
    5. 'range' → logprob: -17.125003814697266
    6. '
' → logprob: -17.750003814697266
    7. '``' → logprob: -18.375003814697266
    8. '1' → logprob: -19.250003814697266
    9. 'from' → logprob: -23.000003814697266
    10. '	for' → logprob: -23.125003814697266

Token 169: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03366564214229584
    2. 'k' → logprob: -4.033665657043457
    3. 'd' → logprob: -4.658665657043457
    4. ' i' → logprob: -5.283665657043457
    5. 'dist' → logprob: -7.783665657043457
    6. 'distance' → logprob: -8.283665657043457
    7. ' d' → logprob: -9.783665657043457
    8. ' k' → logprob: -10.033665657043457
    9. 'v' → logprob: -11.283665657043457
    10. 'a' → logprob: -11.908665657043457

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006725788116455078
    2. 'in' → logprob: -5.006725788116455
    3. ' ' → logprob: -11.756725311279297
    4. 'range' → logprob: -13.631725311279297
    5. '1' → logprob: -15.381725311279297
    6. '	in' → logprob: -15.506725311279297
    7. ',' → logprob: -15.631725311279297
    8. 'k' → logprob: -16.006725311279297
    9. '  ' → logprob: -16.131725311279297
    10. 'd' → logprob: -16.256725311279297

Token 171: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '(range' → logprob: -15.250431060791016
    4. 'ange' → logprob: -17.875431060791016
    5. '	range' → logprob: -18.000431060791016
    6. ' ' → logprob: -18.750431060791016
    7. 'c' → logprob: -19.625431060791016
    8. '   ' → logprob: -19.750431060791016
    9. '  ' → logprob: -19.750431060791016
    10. ')' → logprob: -20.000431060791016

Token 172: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(n' → logprob: -16.75
    3. '1' → logprob: -17.5
    4. ' (' → logprob: -20.0
    5. '[' → logprob: -22.5
    6. 'n' → logprob: -22.625
    7. '(
' → logprob: -23.25
    8. '(len' → logprob: -23.75
    9. '()' → logprob: -24.75
    10. '\(' → logprob: -25.0

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'n' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '(' → logprob: -18.375001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '	' → logprob: -20.125001907348633
    8. '１' → logprob: -20.500001907348633
    9. '2' → logprob: -20.750001907348633
    10. '    ' → logprob: -21.375001907348633

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010164948180317879
    2. '(n' → logprob: -7.251016616821289
    3. ',n' → logprob: -8.126016616821289
    4. ' ,' → logprob: -12.251016616821289
    5. 'n' → logprob: -12.626016616821289
    6. '(' → logprob: -12.876016616821289
    7. ' n' → logprob: -16.50101661682129
    8. ',len' → logprob: -18.00101661682129
    9. ',
' → logprob: -18.37601661682129
    10. '(len' → logprob: -18.50101661682129

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003357006062287837
    2. ' n' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. 'len' → logprob: -16.500335693359375
    5. ' ' → logprob: -17.125335693359375
    6. '  ' → logprob: -17.500335693359375
    7. '	n' → logprob: -17.625335693359375
    8. '(n' → logprob: -18.250335693359375
    9. ' ' → logprob: -19.125335693359375
    10. '_n' → logprob: -20.125335693359375

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016075820894911885
    2. '+' → logprob: -6.501607418060303
    3. '):
' → logprob: -9.251607894897461
    4. ':' → logprob: -12.251607894897461
    5. ' ):' → logprob: -13.126607894897461
    6. ')' → logprob: -14.876607894897461
    7. '):
' → logprob: -14.876607894897461
    8. ']:' → logprob: -15.001607894897461
    9. '-' → logprob: -15.001607894897461
    10. '():' → logprob: -15.251607894897461

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14109569787979126
    2. ' print' → logprob: -2.1410956382751465
    3. 'print' → logprob: -4.2660956382751465
    4. '```' → logprob: -11.141096115112305
    5. '	print' → logprob: -11.141096115112305
    6. '       ' → logprob: -13.641096115112305
    7. '   ' → logprob: -14.891096115112305
    8. '.print' → logprob: -15.391096115112305
    9. '<|end|>' → logprob: -15.891096115112305
    10. '    
' → logprob: -16.266096115112305

Token 178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. '```' → logprob: -18.000003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '	print' → logprob: -22.500003814697266
    6. '
' → logprob: -23.250003814697266
    7. '``' → logprob: -23.500003814697266
    8. 'printf' → logprob: -23.750003814697266
    9. '#print' → logprob: -26.000003814697266
    10. '.print' → logprob: -26.000003814697266

Token 179: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -11.750012397766113
    3. 'c' → logprob: -12.500012397766113
    4. '(k' → logprob: -14.000012397766113
    5. ' (' → logprob: -15.500012397766113
    6. ')c' → logprob: -17.37501335144043
    7. '(
' → logprob: -18.62501335144043
    8. 'k' → logprob: -19.00001335144043
    9. '((' → logprob: -19.50001335144043
    10. '()' → logprob: -20.12501335144043

Token 180: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.0868278524139896e-05
    2. 'k' → logprob: -9.87506103515625
    3. '[' → logprob: -11.62506103515625
    4. ')' → logprob: -16.12506103515625
    5. ' [' → logprob: -16.12506103515625
    6. ')[' → logprob: -17.00006103515625
    7. '[c' → logprob: -17.25006103515625
    8. '(k' → logprob: -17.37506103515625
    9. '{k' → logprob: -17.37506103515625
    10. '[
' → logprob: -17.50006103515625

Token 181: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006196272443048656
    2. ')' → logprob: -7.625619411468506
    3. ' ])' → logprob: -9.000619888305664
    4. '],' → logprob: -12.375619888305664
    5. ')])' → logprob: -13.875619888305664
    6. '))' → logprob: -14.000619888305664
    7. ' )' → logprob: -14.250619888305664
    8. ')]' → logprob: -14.500619888305664
    9. ']' → logprob: -15.000619888305664
    10. '])
' → logprob: -15.125619888305664


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 136
Précision stricte (1ère position): 32.96%
Précision adaptée (1ère position): 34.64%
Précision (top 10): 75.98%
================================================================================
