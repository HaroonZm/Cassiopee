================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
z = 'No'
for i in range(n//4+1):
    if (n-4*i)%7 == 0:
        z = 'Yes'
        break
print(z)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'z' (ID: 89)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5884581208229065
    2. '+' → logprob: -1.5884580612182617
    3. '=' → logprob: -2.2134580612182617
    4. ' =' → logprob: -2.8384580612182617
    5. ' ' → logprob: -4.213458061218262
    6. '%' → logprob: -4.463458061218262
    7. '*' → logprob: -4.463458061218262
    8. '**' → logprob: -4.588458061218262
    9. ' +=' → logprob: -5.213458061218262
    10. '(' → logprob: -5.338458061218262

Token 7: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7711811661720276
    2. ' ' → logprob: -1.3961811065673828
    3. '0' → logprob: -1.5211811065673828
    4. 'n' → logprob: -2.771181106567383
    5. ' int' → logprob: -6.146181106567383
    6. '1' → logprob: -6.271181106567383
    7. ' input' → logprob: -6.521181106567383
    8. 'input' → logprob: -6.896181106567383
    9. 'int' → logprob: -7.021181106567383
    10. '"' → logprob: -8.146181106567383

Token 8: 'No' (ID: 3160)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0563702583312988
    2. 'z' → logprob: -2.056370258331299
    3. '*' → logprob: -2.306370258331299
    4. ''' → logprob: -2.306370258331299
    5. 'a' → logprob: -3.181370258331299
    6. 'Z' → logprob: -3.556370258331299
    7. '1' → logprob: -3.806370258331299
    8. '('' → logprob: -3.931370258331299
    9. '7' → logprob: -4.306370258331299
    10. ''*' → logprob: -4.306370258331299

Token 9: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7219043970108032
    2. 't' → logprob: -1.0969043970108032
    3. '')' → logprob: -1.8469043970108032
    4. ''t' → logprob: -4.596904277801514
    5. ')' → logprob: -5.096904277801514
    6. 'w' → logprob: -6.596904277801514
    7. ''w' → logprob: -7.346904277801514
    8. 'n' → logprob: -7.721904277801514
    9. ' t' → logprob: -7.721904277801514
    10. '\n' → logprob: -8.221904754638672

Token 10: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2111823409795761
    2. 'if' → logprob: -2.5861823558807373
    3. '\n' → logprob: -3.4611823558807373
    4. ' ' → logprob: -4.086182117462158
    5. 'n' → logprob: -4.211182117462158
    6. '\' → logprob: -4.836182117462158
    7. 'for' → logprob: -4.961182117462158
    8. ''' → logprob: -4.961182117462158
    9. ' 
' → logprob: -5.086182117462158
    10. '
' → logprob: -5.711182117462158

Token 11: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012761322781443596
    2. ' i' → logprob: -4.387761116027832
    3. '  ' → logprob: -9.137761116027832
    4. ' ‌' → logprob: -9.262761116027832
    5. 'i' → logprob: -11.262761116027832
    6. ' _' → logprob: -11.387761116027832
    7. '_' → logprob: -12.012761116027832
    8. ' n' → logprob: -12.387761116027832
    9. ' ' → logprob: -12.762761116027832
    10. ' ​' → logprob: -12.762761116027832

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022192370146512985
    2. 'in' → logprob: -4.022192478179932
    3. 'n' → logprob: -6.147192478179932
    4. ' ' → logprob: -6.647192478179932
    5. ' n' → logprob: -8.022192001342773
    6. '  ' → logprob: -9.647192001342773
    7. '<|end|>' → logprob: -9.897192001342773
    8. ')' → logprob: -10.272192001342773
    9. 'range' → logprob: -10.522192001342773
    10. '(n' → logprob: -11.272192001342773

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0032882285304367542
    2. 'range' → logprob: -5.753288269042969
    3. ' ' → logprob: -9.128288269042969
    4. '	range' → logprob: -13.878288269042969
    5. ' xrange' → logprob: -15.378288269042969
    6. '(range' → logprob: -15.753288269042969
    7. '  ' → logprob: -16.25328826904297
    8. ' ' → logprob: -16.25328826904297
    9. ' in' → logprob: -16.50328826904297
    10. ')' → logprob: -16.50328826904297

Token 14: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020961066707968712
    2. '(n' → logprob: -3.895961046218872
    3. ' (' → logprob: -7.895961284637451
    4. '(len' → logprob: -10.520960807800293
    5. '(i' → logprob: -11.895960807800293
    6. '(range' → logprob: -11.895960807800293
    7. '(
' → logprob: -12.520960807800293
    8. '(

' → logprob: -14.270960807800293
    9. ' ' → logprob: -15.145960807800293
    10. '(s' → logprob: -15.520960807800293

Token 15: '//' (ID: 393)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009363600052893162
    2. ')' → logprob: -5.009363651275635
    3. '+' → logprob: -6.134363651275635
    4. '**' → logprob: -8.759363174438477
    5. '):
' → logprob: -8.884363174438477
    6. ',' → logprob: -9.384363174438477
    7. ' ):' → logprob: -10.384363174438477
    8. ')**' → logprob: -11.259363174438477
    9. '-' → logprob: -11.509363174438477
    10. ' +' → logprob: -11.759363174438477

Token 16: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005474337958730757
    2. '3' → logprob: -8.125547409057617
    3. ' ' → logprob: -8.875547409057617
    4. '1' → logprob: -9.500547409057617
    5. '5' → logprob: -11.250547409057617
    6. '4' → logprob: -11.875547409057617
    7. '10' → logprob: -12.000547409057617
    8. '6' → logprob: -12.625547409057617
    9. '7' → logprob: -13.625547409057617
    10. '```' → logprob: -14.188047409057617

Token 17: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0656877756118774
    2. '):' → logprob: -1.1906877756118774
    3. ',' → logprob: -1.6906877756118774
    4. ' ):' → logprob: -2.815687656402588
    5. ' +' → logprob: -3.065687656402588
    6. ' ,' → logprob: -3.815687656402588
    7. '*' → logprob: -3.940687656402588
    8. ')' → logprob: -4.565687656402588
    9. ' *' → logprob: -5.815687656402588
    10. '*i' → logprob: -6.690687656402588

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011798698687925935
    2. ' ' → logprob: -6.7511796951293945
    3. '2' → logprob: -11.626179695129395
    4. '3' → logprob: -15.251179695129395
    5. '+' → logprob: -16.00118064880371
    6. '   ' → logprob: -16.37618064880371
    7. '  ' → logprob: -16.62618064880371
    8. '(' → logprob: -17.25118064880371
    9. ')' → logprob: -17.43868064880371
    10. '-' → logprob: -17.43868064880371

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005011732690036297
    2. ')' → logprob: -5.880011558532715
    3. ' ):' → logprob: -6.255011558532715
    4. ':' → logprob: -8.255011558532715
    5. '):
' → logprob: -11.505011558532715
    6. ',' → logprob: -12.130011558532715
    7. '+' → logprob: -13.505011558532715
    8. ' ' → logprob: -13.630011558532715
    9. ' )' → logprob: -13.630011558532715
    10. ''):' → logprob: -14.005011558532715

Token 20: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04654698446393013
    2. '    ' → logprob: -3.9215469360351562
    3. '   ' → logprob: -4.796546936035156
    4. ' if' → logprob: -4.796546936035156
    5. '<|end|>' → logprob: -5.546546936035156
    6. ' for' → logprob: -6.671546936035156
    7. ' i' → logprob: -7.296546936035156
    8. 'if' → logprob: -7.671546936035156
    9. ':' → logprob: -7.921546936035156
    10. '  ' → logprob: -8.046546936035156

Token 21: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10648646205663681
    2. ' if' → logprob: -3.6064865589141846
    3. '    ' → logprob: -3.9814865589141846
    4. ' i' → logprob: -4.2314863204956055
    5. ' for' → logprob: -4.2314863204956055
    6. '<|end|>' → logprob: -4.6064863204956055
    7. '   ' → logprob: -5.3564863204956055
    8. 'if' (adapté à ' if') → logprob: -5.7314863204956055
    9. ' '' → logprob: -6.6064863204956055
    10. 'for' → logprob: -6.7314863204956055

Token 22: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5699585676193237
    2. ' n' → logprob: -0.9449585676193237
    3. ' (' → logprob: -3.9449586868286133
    4. ' ' → logprob: -4.069958686828613
    5. 'n' → logprob: -5.444958686828613
    6. 'i' → logprob: -5.569958686828613
    7. '(i' → logprob: -7.444958686828613
    8. '(' → logprob: -8.444958686828613
    9. '(n' → logprob: -8.819958686828613
    10. '4' → logprob: -9.444958686828613

Token 23: 'n' (ID: 77)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6509218215942383
    2. ' ' → logprob: -1.6509218215942383
    3. ' i' → logprob: -2.1509218215942383
    4. 'i' → logprob: -2.5259218215942383
    5. ' n' → logprob: -2.9009218215942383
    6. 'n' → logprob: -3.4009218215942383
    7. '   ' → logprob: -6.650921821594238
    8. ' (' → logprob: -8.150921821594238
    9. ')' → logprob: -9.400921821594238
    10. '(i' → logprob: -10.025921821594238

Token 24: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9317090511322021
    2. ' %' → logprob: -1.1817090511322021
    3. '-' → logprob: -1.9317090511322021
    4. '%' → logprob: -2.681709051132202
    5. ' ' → logprob: -2.931709051132202
    6. '-i' → logprob: -4.306709289550781
    7. ')' → logprob: -4.931709289550781
    8. '%i' → logprob: -4.931709289550781
    9. ' )' → logprob: -6.181709289550781
    10. ' ==' → logprob: -6.556709289550781

Token 25: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.010769419372081757
    2. ' ' → logprob: -4.760769367218018
    3. 'i' → logprob: -6.260769367218018
    4. ' i' → logprob: -9.135769844055176
    5. '   ' → logprob: -9.135769844055176
    6. '(' → logprob: -11.635769844055176
    7. '(i' → logprob: -12.385769844055176
    8. '1' → logprob: -12.510769844055176
    9. '  ' → logprob: -12.885769844055176
    10. ' (' → logprob: -13.010769844055176

Token 26: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0010718696285039186
    2. '*' → logprob: -6.876071929931641
    3. ' *' → logprob: -10.25107192993164
    4. '*j' → logprob: -13.37607192993164
    5. ')' → logprob: -14.00107192993164
    6. 'i' → logprob: -14.12607192993164
    7. ')*' → logprob: -16.25107192993164
    8. '*)' → logprob: -16.62607192993164
    9. '*k' → logprob: -16.75107192993164
    10. '**' → logprob: -16.87607192993164

Token 27: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04253056272864342
    2. ')%' → logprob: -3.2925305366516113
    3. ' )' → logprob: -5.417530536651611
    4. ')>=' → logprob: -10.41753101348877
    5. ')**' → logprob: -12.91753101348877
    6. ')==' → logprob: -13.04253101348877
    7. '%' → logprob: -13.41753101348877
    8. ')`' → logprob: -13.79253101348877
    9. '）' → logprob: -14.04253101348877
    10. '```' → logprob: -14.91753101348877

Token 28: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0002943479048553854
    2. '3' → logprob: -8.37529468536377
    3. '2' → logprob: -9.75029468536377
    4. '6' → logprob: -13.37529468536377
    5. '11' → logprob: -13.50029468536377
    6. ' ' → logprob: -14.00029468536377
    7. '5' → logprob: -14.50029468536377
    8. '   ' → logprob: -14.87529468536377
    9. '1' → logprob: -15.25029468536377
    10. '4' → logprob: -15.62529468536377

Token 29: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3489971458911896
    2. ' ==' → logprob: -1.2239971160888672
    3. '=' → logprob: -7.973997116088867
    4. ')' → logprob: -9.723997116088867
    5. ' ' → logprob: -9.723997116088867
    6. ')==' → logprob: -10.348997116088867
    7. ' =' → logprob: -10.598997116088867
    8. '<|end|>' → logprob: -11.348997116088867
    9. '```' → logprob: -12.348997116088867
    10. '===' → logprob: -12.473997116088867

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054188773036003
    2. ' ' → logprob: -3.8955419063568115
    3. '```' → logprob: -17.89554214477539
    4. '  ' → logprob: -18.02054214477539
    5. '   ' → logprob: -18.27054214477539
    6. '۰' → logprob: -18.52054214477539
    7. ' ' → logprob: -18.77054214477539
    8. '00' → logprob: -19.45804214477539
    9. '=' → logprob: -19.58304214477539
    10. '    ' → logprob: -19.83304214477539

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '3' → logprob: -17.750179290771484
    4. '  ' → logprob: -17.875179290771484
    5. '۰' → logprob: -18.000179290771484
    6. '０' → logprob: -18.125179290771484
    7. '   ' → logprob: -18.500179290771484
    8. '2' → logprob: -18.625179290771484
    9. '    ' → logprob: -19.187679290771484
    10. '০' → logprob: -19.437679290771484

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.750436007976532e-05
    2. ':
' → logprob: -10.37503719329834
    3. ' :' → logprob: -12.50003719329834
    4. '):' → logprob: -13.75003719329834
    5. ':return' → logprob: -14.62503719329834
    6. ' and' → logprob: -15.37503719329834
    7. ':

' → logprob: -15.62503719329834
    8. ':**' → logprob: -15.75003719329834
    9. '>:' → logprob: -16.000038146972656
    10. '<|end|>' → logprob: -16.125038146972656

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060654291883111
    2. '   ' → logprob: -5.756065368652344
    3. ' z' → logprob: -6.381065368652344
    4. ' ' → logprob: -8.131065368652344
    5. '    ' → logprob: -8.381065368652344
    6. 'z' → logprob: -8.631065368652344
    7. '        
' → logprob: -9.256065368652344
    8. '<|end|>' → logprob: -9.256065368652344
    9. '	z' → logprob: -10.506065368652344
    10. '	' → logprob: -10.881065368652344

Token 34: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.051863763481378555
    2. 'z' (adapté à ' z') → logprob: -3.051863670349121
    3. '   ' → logprob: -5.926863670349121
    4. '       ' → logprob: -7.926863670349121
    5. '    ' → logprob: -9.051863670349121
    6. '	z' → logprob: -9.301863670349121
    7. ' ' → logprob: -10.801863670349121
    8. ''z' → logprob: -13.176863670349121
    9. '           ' → logprob: -13.551863670349121
    10. 'print' → logprob: -13.551863670349121

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10063168406486511
    2. ' =' → logprob: -2.3506317138671875
    3. '='' → logprob: -7.8506317138671875
    4. ' ='' → logprob: -10.350631713867188
    5. ' ' → logprob: -13.225631713867188
    6. '+='' → logprob: -14.600631713867188
    7. '=}' → logprob: -15.725631713867188
    8. '＝' → logprob: -16.100631713867188
    9. '=''' → logprob: -16.225631713867188
    10. '="' → logprob: -16.350631713867188

Token 36: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009189164265990257
    2. ' '' → logprob: -4.759189128875732
    3. '"' → logprob: -7.634189128875732
    4. ' ' → logprob: -10.75918960571289
    5. '   ' → logprob: -10.88418960571289
    6. ''S' → logprob: -11.38418960571289
    7. ''y' → logprob: -11.50918960571289
    8. ' "' → logprob: -11.88418960571289
    9. 'Yes' → logprob: -13.00918960571289
    10. ''D' → logprob: -13.00918960571289

Token 37: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0012136871227994561
    2. ''' → logprob: -6.876213550567627
    3. 'Ye' → logprob: -8.876214027404785
    4. 'YES' → logprob: -10.376214027404785
    5. ' Yes' → logprob: -12.376214027404785
    6. '''' → logprob: -13.376214027404785
    7. 'Ya' → logprob: -14.001214027404785
    8. 'No' → logprob: -14.251214027404785
    9. '"' → logprob: -14.501214027404785
    10. 'Y' → logprob: -15.126214027404785

Token 38: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02808305062353611
    2. '       ' → logprob: -4.278082847595215
    3. ''
' → logprob: -4.653082847595215
    4. '')' → logprob: -6.528082847595215
    5. '<|end|>' → logprob: -6.778082847595215
    6. '```' → logprob: -7.903082847595215
    7. ''
' → logprob: -8.278082847595215
    8. '           ' → logprob: -8.653082847595215
    9. 'print' → logprob: -8.903082847595215
    10. '
' → logprob: -9.028082847595215

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06690636277198792
    2. 'print' → logprob: -3.316906452178955
    3. '<|end|>' → logprob: -3.691906452178955
    4. '```' → logprob: -6.691906452178955
    5. '           ' → logprob: -7.441906452178955
    6. '   ' → logprob: -8.191905975341797
    7. '        ' → logprob: -8.191905975341797
    8. ' print' → logprob: -8.441905975341797
    9. '        
' → logprob: -8.691905975341797
    10. 'break' → logprob: -9.066905975341797

Token 40: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007848530076444149
    2. '	' → logprob: -6.132848739624023
    3. '	break' → logprob: -6.132848739624023
    4. ' break' → logprob: -6.507848739624023
    5. '   ' → logprob: -7.257848739624023
    6. 'break' (adapté à ' break') → logprob: -7.257848739624023
    7. '\t' → logprob: -7.882848739624023
    8. 'b' → logprob: -10.007848739624023
    9. '```' → logprob: -10.507848739624023
    10. 'print' → logprob: -10.757848739624023

Token 41: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002442596945911646
    2. '<|end|>' → logprob: -6.502442359924316
    3. ' print' → logprob: -8.252442359924316
    4. '```' → logprob: -8.502442359924316
    5. '\n' → logprob: -9.002442359924316
    6. ')' → logprob: -9.127442359924316
    7. '
' → logprob: -9.127442359924316
    8. '#' → logprob: -10.127442359924316
    9. '\' → logprob: -10.502442359924316
    10. 'p' → logprob: -11.377442359924316

Token 42: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.431207682704553e-05
    2. ' print' → logprob: -10.625054359436035
    3. '
' → logprob: -11.250054359436035
    4. '```' → logprob: -11.500054359436035
    5. '<|end|>' → logprob: -12.750054359436035
    6. '\n' → logprob: -13.750054359436035
    7. '\' → logprob: -14.000054359436035
    8. '#' → logprob: -14.625054359436035
    9. 'p' → logprob: -14.750054359436035
    10. '#print' → logprob: -15.250054359436035

Token 43: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.08077241480350494
    2. '(' → logprob: -2.5807723999023438
    3. '('' → logprob: -6.330772399902344
    4. '()' → logprob: -9.330772399902344
    5. '("' → logprob: -12.330772399902344
    6. 'z' → logprob: -13.080772399902344
    7. '(n' → logprob: -13.205772399902344
    8. '(x' → logprob: -13.330772399902344
    9. ' (' → logprob: -14.580772399902344
    10. '(Z' → logprob: -15.455772399902344

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.625
    3. '')' → logprob: -16.625
    4. ' )' → logprob: -17.0
    5. ')`' → logprob: -18.125
    6. '`)' → logprob: -18.375
    7. ')
' → logprob: -18.625
    8. '）' → logprob: -19.5
    9. '")' → logprob: -20.25
    10. '()' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 35.71%
Précision (top 10): 83.33%
================================================================================
