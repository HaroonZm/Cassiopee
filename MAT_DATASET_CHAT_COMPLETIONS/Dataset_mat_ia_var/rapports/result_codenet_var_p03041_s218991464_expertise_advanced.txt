================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():
    n, k = map(int, stdin.readline().split())
    s = stdin.readline().rstrip()
    k -= 1
    ans = f"{s[:k]}{s[k].lower()}{s[k+1:]}"
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.10488969087600708
    2. ' argv' → logprob: -2.7298896312713623
    3. 'exit' → logprob: -4.229889869689941
    4. 'path' → logprob: -5.104889869689941
    5. 'stdout' → logprob: -5.104889869689941
    6. ' exit' → logprob: -5.729889869689941
    7. 'stdin' → logprob: -6.104889869689941
    8. ' path' → logprob: -7.479889869689941
    9. 'version' → logprob: -7.479889869689941
    10. 'import' → logprob: -7.729889869689941

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2673061788082123
    2. '.readline' → logprob: -1.7673062086105347
    3. 'for' → logprob: -3.767306089401245
    4. '\n' → logprob: -4.642306327819824
    5. '.read' → logprob: -4.767306327819824
    6. 'import' → logprob: -4.892306327819824
    7. 'print' → logprob: -4.892306327819824
    8. 'read' → logprob: -6.267306327819824
    9. '' → logprob: -7.017306327819824
    10. ',' → logprob: -7.017306327819824

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1062634065747261
    2. ' read' → logprob: -2.4812633991241455
    3. ' process' → logprob: -4.731263637542725
    4. '_read' → logprob: -6.106263637542725
    5. ' readline' → logprob: -6.856263637542725
    6. ' space' → logprob: -6.981263637542725
    7. ' ' → logprob: -7.106263637542725
    8. ' parse' → logprob: -7.231263637542725
    9. 'read' → logprob: -7.981263637542725
    10. ' main' → logprob: -8.106263160705566

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1347145140171051
    2. '():' → logprob: -2.2597146034240723
    3. ':' → logprob: -4.134714603424072
    4. '(:' → logprob: -5.259714603424072
    5. '```' → logprob: -9.509714126586914
    6. '):' → logprob: -9.634714126586914
    7. '(":' → logprob: -9.634714126586914
    8. ' (' → logprob: -9.759714126586914
    9. '(
' → logprob: -10.259714126586914
    10. ' ():' → logprob: -10.384714126586914

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025904621928930283
    2. '    ' → logprob: -4.650904655456543
    3. '    
' → logprob: -4.900904655456543
    4. '\' → logprob: -5.650904655456543
    5. ' ' → logprob: -6.400904655456543
    6. '(stdin' → logprob: -7.400904655456543
    7. '\n' → logprob: -7.525904655456543
    8. 'print' → logprob: -7.525904655456543
    9. '(' → logprob: -8.650904655456543
    10. ' print' → logprob: -8.900904655456543

Token 9: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6136534810066223
    2. '   ' → logprob: -2.1136534214019775
    3. 'n' (adapté à ' n') → logprob: -2.6136534214019775
    4. ' ' → logprob: -2.6136534214019775
    5. 'pass' → logprob: -2.7386534214019775
    6. ' for' → logprob: -3.4886534214019775
    7. 'user' → logprob: -3.8636534214019775
    8. 'data' → logprob: -4.113653659820557
    9. 'x' → logprob: -4.613653659820557
    10. '    ' → logprob: -4.863653659820557

Token 10: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26293662190437317
    2. '=' → logprob: -1.5129365921020508
    3. ' ' → logprob: -4.887936592102051
    4. '  ' → logprob: -7.012936592102051
    5. ')' → logprob: -7.262936592102051
    6. ',' → logprob: -7.512936592102051
    7. '.' → logprob: -7.637936592102051
    8. 'u' → logprob: -8.38793659210205
    9. '_' → logprob: -8.88793659210205
    10. '   ' → logprob: -9.13793659210205

Token 11: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.19042976200580597
    2. 'm' → logprob: -2.4404296875
    3. ' k' → logprob: -2.5654296875
    4. ' ' → logprob: -5.3154296875
    5. 'k' → logprob: -6.4404296875
    6. '=' → logprob: -7.1904296875
    7. ' t' → logprob: -7.5654296875
    8. ' =' → logprob: -7.8154296875
    9. ' x' → logprob: -8.4404296875
    10. ' input' → logprob: -8.9404296875

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043901324272156
    2. '=' → logprob: -3.288043975830078
    3. ',' → logprob: -13.663043975830078
    4. ' ' → logprob: -14.038043975830078
    5. ' =
' → logprob: -15.788043975830078
    6. '=int' → logprob: -16.163043975830078
    7. ')' → logprob: -16.788043975830078
    8. '  ' → logprob: -16.913043975830078
    9. ' =
' → logprob: -17.413043975830078
    10. ' =",' → logprob: -17.413043975830078

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0013361937599256635
    2. 'map' → logprob: -6.626336097717285
    3. ' ' → logprob: -13.001336097717285
    4. ' list' → logprob: -13.126336097717285
    5. ' [' → logprob: -13.251336097717285
    6. ' stdin' → logprob: -13.376336097717285
    7. '   ' → logprob: -13.876336097717285
    8. '[' → logprob: -14.876336097717285
    9. '	map' → logprob: -14.876336097717285
    10. ' tuple' → logprob: -15.376336097717285

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12308382987976074
    2. '(int' → logprob: -2.8730838298797607
    3. '(str' → logprob: -3.1230838298797607
    4. '(stdin' → logprob: -4.49808406829834
    5. '(lambda' → logprob: -5.62308406829834
    6. '(input' → logprob: -8.49808406829834
    7. '(
' → logprob: -9.24808406829834
    8. '(st' → logprob: -9.24808406829834
    9. '(std' → logprob: -10.49808406829834
    10. '()' → logprob: -10.74808406829834

Token 15: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.015511149540543556
    2. ')' → logprob: -5.1405110359191895
    3. '(' → logprob: -5.2655110359191895
    4. ',' → logprob: -5.6405110359191895
    5. '(input' → logprob: -7.2655110359191895
    6. 'stdin' → logprob: -10.015511512756348
    7. '(st' → logprob: -10.765511512756348
    8. ')(' → logprob: -11.640511512756348
    9. '),' → logprob: -11.890511512756348
    10. '(std' → logprob: -12.265511512756348

Token 16: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.5774199366569519
    2. ' stdin' → logprob: -0.8274199366569519
    3. '(stdin' → logprob: -6.577419757843018
    4. ')' → logprob: -9.827420234680176
    5. '.stdin' → logprob: -10.452420234680176
    6. 'input' → logprob: -13.327420234680176
    7. ' readline' → logprob: -13.577420234680176
    8. ' )' → logprob: -13.827420234680176
    9. ' input' → logprob: -15.327420234680176
    10. 'stdout' → logprob: -15.952420234680176

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005270573310554028
    2. '.' → logprob: -8.250527381896973
    3. '.read' → logprob: -8.250527381896973
    4. '.readlines' → logprob: -12.875527381896973
    5. ').' → logprob: -13.875527381896973
    6. ' .' → logprob: -14.375527381896973
    7. '().' → logprob: -15.250527381896973
    8. ')' → logprob: -16.375526428222656
    9. '.write' → logprob: -16.750526428222656
    10. '.next' → logprob: -16.875526428222656

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2607366442680359
    2. '())' → logprob: -1.5107367038726807
    3. '()' → logprob: -4.760736465454102
    4. ')' → logprob: -9.010736465454102
    5. '()))' → logprob: -9.760736465454102
    6. '()[' → logprob: -11.260736465454102
    7. '())
' → logprob: -12.385736465454102
    8. '(' → logprob: -13.010736465454102
    9. ' ())' → logprob: -13.010736465454102
    10. '()
' → logprob: -13.635736465454102

Token 19: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.13053978979587555
    2. 'split' → logprob: -2.130539894104004
    3. 'rstrip' → logprob: -5.630539894104004
    4. 'read' → logprob: -11.130539894104004
    5. ')' → logprob: -13.755539894104004
    6. '```' → logprob: -14.005539894104004
    7. ' strip' → logprob: -14.005539894104004
    8. 'replace' → logprob: -14.380539894104004
    9. ' split' → logprob: -15.255539894104004
    10. '(split' → logprob: -16.380538940429688

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12801624834537506
    2. '))' → logprob: -2.128016233444214
    3. '())' → logprob: -7.003016471862793
    4. '()' → logprob: -9.253016471862793
    5. '()))' → logprob: -9.628016471862793
    6. ')))' → logprob: -11.628016471862793
    7. ')
' → logprob: -13.128016471862793
    8. '(' → logprob: -13.378016471862793
    9. '),' → logprob: -13.753016471862793
    10. ' )' → logprob: -14.503016471862793

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5156562924385071
    2. '
' → logprob: -2.3906562328338623
    3. ' 
' → logprob: -2.5156562328338623
    4. '    
' → logprob: -2.6406562328338623
    5. '```' → logprob: -2.8906562328338623
    6. '\' → logprob: -3.8906562328338623
    7. '\n' → logprob: -4.140656471252441
    8. '   
' → logprob: -4.390656471252441
    9. ')' → logprob: -4.515656471252441
    10. '  
' → logprob: -4.515656471252441

Token 22: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7628200054168701
    2. ' 
' → logprob: -2.51282000541687
    3. ' ' → logprob: -3.13782000541687
    4. 'a' → logprob: -3.13782000541687
    5. '    
' → logprob: -3.13782000541687
    6. 'data' → logprob: -3.26282000541687
    7. '`' → logprob: -3.26282000541687
    8. 'd' → logprob: -3.51282000541687
    9. '    ' → logprob: -3.88782000541687
    10. 'r' → logprob: -3.88782000541687

Token 23: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8452922701835632
    2. ' =' → logprob: -1.470292329788208
    3. '=' → logprob: -1.595292329788208
    4. '[:]' → logprob: -2.345292329788208
    5. '.' → logprob: -3.470292329788208
    6. '[:' → logprob: -5.720292091369629
    7. ')' → logprob: -6.845292091369629
    8. 's' → logprob: -7.095292091369629
    9. '_' → logprob: -7.220292091369629
    10. '[i' → logprob: -7.470292091369629

Token 24: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3872911036014557
    2. ' stdin' → logprob: -1.1372910737991333
    3. '(stdin' → logprob: -8.137290954589844
    4. 'input' → logprob: -9.512290954589844
    5. '.stdin' → logprob: -10.262290954589844
    6. ' input' → logprob: -11.137290954589844
    7. ' ' → logprob: -14.012290954589844
    8. 'st' → logprob: -14.387290954589844
    9. 's' → logprob: -14.512290954589844
    10. ' readline' → logprob: -14.637290954589844

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002407282590866089
    2. '.read' → logprob: -8.500240325927734
    3. '.' → logprob: -10.250240325927734
    4. '.readlines' → logprob: -14.000240325927734
    5. ' readline' → logprob: -14.125240325927734
    6. 'read' → logprob: -14.875240325927734
    7. '().' → logprob: -18.000240325927734
    8. '.Read' → logprob: -18.625240325927734
    9. '_read' → logprob: -18.750240325927734
    10. '```' → logprob: -19.125240325927734

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20184831321239471
    2. '().' → logprob: -1.7018482685089111
    3. '())' → logprob: -8.076848030090332
    4. '(' → logprob: -9.576848030090332
    5. ')' → logprob: -11.326848030090332
    6. ' ()' → logprob: -11.451848030090332
    7. '()[' → logprob: -11.951848030090332
    8. '()(' → logprob: -11.951848030090332
    9. '()`' → logprob: -12.576848030090332
    10. '()]' → logprob: -13.326848030090332

Token 27: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0024756586644798517
    2. 'rstrip' → logprob: -6.002475738525391
    3. ' strip' → logprob: -19.12747573852539
    4. 'split' → logprob: -19.75247573852539
    5. 'read' → logprob: -19.75247573852539
    6. 'decode' → logprob: -19.87747573852539
    7. 'startswith' → logprob: -20.37747573852539
    8. 'str' → logprob: -20.37747573852539
    9. '_strip' → logprob: -20.37747573852539
    10. 'replace' → logprob: -22.25247573852539

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12826447188854218
    2. '(' → logprob: -2.1282644271850586
    3. '('' → logprob: -7.628264427185059
    4. '"' → logprob: -8.628264427185059
    5. ''' → logprob: -8.628264427185059
    6. '(
' → logprob: -8.628264427185059
    7. '("("' → logprob: -9.503264427185059
    8. '())' → logprob: -10.253264427185059
    9. '("' → logprob: -10.253264427185059
    10. '()
' → logprob: -10.503264427185059

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5199998617172241
    2. ' ' → logprob: -1.3949998617172241
    3. '
' → logprob: -2.7699999809265137
    4. '<|end|>' → logprob: -3.6449999809265137
    5. '\n' → logprob: -4.269999980926514
    6. ' 
' → logprob: -4.519999980926514
    7. '    
' → logprob: -5.269999980926514
    8. 'n' → logprob: -5.394999980926514
    9. '\' → logprob: -5.644999980926514
    10. '[' → logprob: -5.769999980926514

Token 30: ' k' (ID: 372)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4963698387145996
    2. '   ' → logprob: -1.6213698387145996
    3. '\n' → logprob: -1.7463698387145996
    4. 'a' → logprob: -3.1213698387145996
    5. 'd' → logprob: -3.2463698387145996
    6. 'c' → logprob: -3.2463698387145996
    7. '    
' → logprob: -3.3713698387145996
    8. '
' → logprob: -3.3713698387145996
    9. 'p' → logprob: -3.3713698387145996
    10. '\' → logprob: -3.4963698387145996

Token 31: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5404742360115051
    2. ' =' → logprob: -1.0404741764068604
    3. '=' → logprob: -2.9154741764068604
    4. '-' → logprob: -5.5404744148254395
    5. '-=' → logprob: -5.9154744148254395
    6. ' ' → logprob: -6.9154744148254395
    7. ' %=' → logprob: -7.0404744148254395
    8. ' +=' → logprob: -7.6654744148254395
    9. ' *=' → logprob: -8.290473937988281
    10. ' >' → logprob: -8.540473937988281

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2254454344511032
    2. ' ' → logprob: -1.6004453897476196
    3. ' n' → logprob: -11.350445747375488
    4. 'n' → logprob: -11.975445747375488
    5. ' s' → logprob: -12.725445747375488
    6. 's' → logprob: -13.100445747375488
    7. 'len' → logprob: -13.100445747375488
    8. '0' → logprob: -13.350445747375488
    9. ' k' → logprob: -13.537945747375488
    10. 'k' → logprob: -13.600445747375488

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -11.250022888183594
    3. 'n' → logprob: -12.500022888183594
    4. 'k' → logprob: -13.000022888183594
    5. 'len' → logprob: -13.375022888183594
    6. 's' → logprob: -14.000022888183594
    7. 'min' → logprob: -14.625022888183594
    8. '2' → logprob: -14.750022888183594
    9. 'int' → logprob: -15.625022888183594
    10. '0' → logprob: -16.125022888183594

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03983599692583084
    2. '\n' → logprob: -4.1648359298706055
    3. '<|end|>' → logprob: -4.7898359298706055
    4. ' if' → logprob: -5.2898359298706055
    5. ' 
' → logprob: -6.0398359298706055
    6. ' for' → logprob: -6.4148359298706055
    7. ' ' → logprob: -6.4148359298706055
    8. ' while' → logprob: -7.4148359298706055
    9. '    
' → logprob: -7.4148359298706055
    10. '  
' → logprob: -7.5398359298706055

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09976442158222198
    2. ' if' → logprob: -3.599764347076416
    3. '\n' → logprob: -4.224764347076416
    4. ' 
' → logprob: -4.849764347076416
    5. ' ' → logprob: -4.974764347076416
    6. 's' → logprob: -5.099764347076416
    7. ' while' → logprob: -5.224764347076416
    8. ' for' → logprob: -5.224764347076416
    9. '<|end|>' → logprob: -5.474764347076416
    10. 'if' → logprob: -5.974764347076416

Token 36: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.469728708267212
    2. 's' → logprob: -2.094728708267212
    3. ' if' → logprob: -2.094728708267212
    4. 'i' → logprob: -2.469728708267212
    5. 'if' → logprob: -2.594728708267212
    6. ' while' → logprob: -2.844728708267212
    7. 'for' → logprob: -3.094728708267212
    8. ' for' → logprob: -3.219728708267212
    9. 'while' → logprob: -3.219728708267212
    10. ' 
' → logprob: -3.594728708267212

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019451762782409787
    2. '=' → logprob: -6.2519450187683105
    3. ' +=' → logprob: -12.001945495605469
    4. ',' → logprob: -12.251945495605469
    5. ' ' → logprob: -12.751945495605469
    6. '_' → logprob: -13.876945495605469
    7. ' =
' → logprob: -14.126945495605469
    8. 's' → logprob: -15.126945495605469
    9. '[' → logprob: -15.501945495605469
    10. ')' → logprob: -16.50194549560547

Token 38: ' f' (ID: 285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.729746401309967
    2. ' ' → logprob: -1.7297463417053223
    3. ''' → logprob: -2.7297463417053223
    4. 's' → logprob: -3.4797463417053223
    5. ' n' → logprob: -3.6047463417053223
    6. ''s' → logprob: -3.7297463417053223
    7. ' s' → logprob: -3.7297463417053223
    8. '"' → logprob: -3.7297463417053223
    9. ' []' → logprob: -3.9797463417053223
    10. '""' → logprob: -3.9797463417053223

Token 39: '"{' (ID: 27510)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.8715817928314209
    2. ''s' → logprob: -1.746581792831421
    3. '"' → logprob: -1.996581792831421
    4. '"{' → logprob: -2.121581792831421
    5. ''' → logprob: -2.871581792831421
    6. '""' → logprob: -4.24658203125
    7. 'loat' → logprob: -4.49658203125
    8. 'or' → logprob: -4.62158203125
    9. 'rom' → logprob: -4.99658203125
    10. ''{' → logprob: -5.12158203125

Token 40: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013800389133393764
    2. 'n' → logprob: -4.763800621032715
    3. 'k' → logprob: -5.888800621032715
    4. ''s' → logprob: -7.263800621032715
    5. 'chr' → logprob: -7.513800621032715
    6. ' s' → logprob: -8.013800621032715
    7. ''' → logprob: -8.263800621032715
    8. 'len' → logprob: -9.263800621032715
    9. '0' → logprob: -9.388800621032715
    10. 'a' → logprob: -10.138800621032715

Token 41: '[:' (ID: 7808)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04385069012641907
    2. '[:' → logprob: -3.2938506603240967
    3. '[' → logprob: -5.293850898742676
    4. '[:-' → logprob: -8.168850898742676
    5. '[:]' → logprob: -8.668850898742676
    6. 'k' → logprob: -9.293850898742676
    7. '[s' → logprob: -9.793850898742676
    8. '[-' → logprob: -10.543850898742676
    9. '[::-' → logprob: -10.918850898742676
    10. '[i' → logprob: -11.418850898742676

Token 42: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00029470553272403777
    2. ' k' → logprob: -8.25029468536377
    3. '1' → logprob: -10.50029468536377
    4. 'n' → logprob: -12.87529468536377
    5. '(k' → logprob: -13.62529468536377
    6. ' ' → logprob: -15.00029468536377
    7. '0' → logprob: -15.00029468536377
    8. '(' → logprob: -15.00029468536377
    9. '-k' → logprob: -15.00029468536377
    10. ']' → logprob: -15.37529468536377

Token 43: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.395147442817688
    2. ']}"' → logprob: -1.395147442817688
    3. '+' → logprob: -2.8951473236083984
    4. ']' → logprob: -4.270147323608398
    5. ']+' → logprob: -5.270147323608398
    6. '-' → logprob: -6.020147323608398
    7. '}' → logprob: -7.395147323608398
    8. ']+"' → logprob: -7.770147323608398
    9. ']}"
' → logprob: -9.020147323608398
    10. ' +' → logprob: -9.270147323608398

Token 44: '{' (ID: 90)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7578688859939575
    2. 's' → logprob: -1.8828688859939575
    3. '+' → logprob: -2.132868766784668
    4. '*' → logprob: -2.382868766784668
    5. 'a' → logprob: -2.507868766784668
    6. ''' → logprob: -2.757868766784668
    7. '_' → logprob: -3.132868766784668
    8. '[' → logprob: -3.382868766784668
    9. '#' → logprob: -3.757868766784668
    10. '-' → logprob: -4.132868766784668

Token 45: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12097416073083878
    2. 'chr' → logprob: -2.245974063873291
    3. ''' → logprob: -5.745974063873291
    4. ''s' → logprob: -6.495974063873291
    5. ''.' → logprob: -7.245974063873291
    6. ''*' → logprob: -7.995974063873291
    7. '"s' → logprob: -8.24597454071045
    8. 'str' → logprob: -8.37097454071045
    9. '"' → logprob: -8.37097454071045
    10. '(chr' → logprob: -8.87097454071045

Token 46: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.005211940035223961
    2. '[:' → logprob: -6.50521183013916
    3. '+' → logprob: -6.88021183013916
    4. '[s' → logprob: -7.13021183013916
    5. '[-' → logprob: -8.13021183013916
    6. '.upper' → logprob: -8.13021183013916
    7. '[::-' → logprob: -8.25521183013916
    8. '[' → logprob: -8.25521183013916
    9. '.lower' → logprob: -8.75521183013916
    10. '+k' → logprob: -8.88021183013916

Token 47: '].' (ID: 1651)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8616134524345398
    2. '].' → logprob: -1.2366135120391846
    3. '.upper' → logprob: -1.7366135120391846
    4. ':].' → logprob: -2.6116135120391846
    5. ' +' → logprob: -4.6116132736206055
    6. ']}' → logprob: -5.1116132736206055
    7. ']' → logprob: -5.8616132736206055
    8. '.lower' → logprob: -5.8616132736206055
    9. '.swap' → logprob: -5.8616132736206055
    10. '-' → logprob: -6.2366132736206055

Token 48: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.4782567322254181
    2. 'upper' → logprob: -1.1032567024230957
    3. 'swap' → logprob: -3.2282567024230957
    4. 'isl' → logprob: -4.853256702423096
    5. 'capitalize' → logprob: -7.728256702423096
    6. 'isdigit' → logprob: -8.728257179260254
    7. 'replace' → logprob: -8.853257179260254
    8. 'is' → logprob: -9.728257179260254
    9. 'title' → logprob: -10.728257179260254
    10. '.lower' → logprob: -10.853257179260254

Token 49: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.12871703505516052
    2. '()' → logprob: -2.1287169456481934
    3. '())' → logprob: -6.628716945648193
    4. '}' → logprob: -8.003717422485352
    5. '()]' → logprob: -9.878717422485352
    6. '(' → logprob: -10.253717422485352
    7. '()}
' → logprob: -12.003717422485352
    8. '()){' → logprob: -12.378717422485352
    9. '()?>' → logprob: -12.503717422485352
    10. '()+' → logprob: -12.628717422485352

Token 50: '}{' (ID: 29124)
  Prédit: '}{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}{' → logprob: -0.001810960122384131
    2. '()' → logprob: -7.1268110275268555
    3. '()}' → logprob: -7.8768110275268555
    4. '}' → logprob: -8.001811027526855
    5. 's' → logprob: -8.751811027526855
    6. '}s' → logprob: -10.001811027526855
    7. '}"' → logprob: -10.126811027526855
    8. '}${' → logprob: -11.501811027526855
    9. ' ' → logprob: -12.001811027526855
    10. ')}' → logprob: -12.126811027526855

Token 51: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.547789674485102e-05
    2. ' s' → logprob: -10.250035285949707
    3. '{s' → logprob: -17.250036239624023
    4. '(s' → logprob: -17.375036239624023
    5. 'f' → logprob: -17.500036239624023
    6. '	s' → logprob: -19.125036239624023
    7. '}s' → logprob: -19.250036239624023
    8. '_s' → logprob: -19.250036239624023
    9. '-s' → logprob: -19.375036239624023
    10. ''s' → logprob: -20.000036239624023

Token 52: '[k' (ID: 14298)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2079523652791977
    2. '[k' → logprob: -1.7079523801803589
    3. '[' → logprob: -5.332952499389648
    4. '+k' → logprob: -6.457952499389648
    5. ' +' → logprob: -9.332952499389648
    6. 'k' → logprob: -11.707952499389648
    7. ':k' → logprob: -11.832952499389648
    8. '[:' → logprob: -12.082952499389648
    9. '(k' → logprob: -12.332952499389648
    10. '1' → logprob: -14.082952499389648

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038264848990365863
    2. ' +' → logprob: -8.375382423400879
    3. '+k' → logprob: -8.875382423400879
    4. ':]' → logprob: -12.250382423400879
    5. ':' → logprob: -13.125382423400879
    6. '+]' → logprob: -13.625382423400879
    7. 'k' → logprob: -14.125382423400879
    8. ']}' → logprob: -14.250382423400879
    9. ':].' → logprob: -14.500382423400879
    10. '+"]' → logprob: -14.625382423400879

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5529154539108276
    2. ':' → logprob: -1.3029154539108276
    3. ':]' → logprob: -2.427915573120117
    4. '+' → logprob: -2.802915573120117
    5. ']}' → logprob: -5.552915573120117
    6. ']' → logprob: -9.927915573120117
    7. '']}' → logprob: -10.177915573120117
    8. '```' → logprob: -10.427915573120117
    9. ':].' → logprob: -10.927915573120117
    10. '}' → logprob: -11.052915573120117

Token 55: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2015763819217682
    2. ':]' → logprob: -1.7015763521194458
    3. ']}' → logprob: -9.326576232910156
    4. ']}"' → logprob: -9.826576232910156
    5. ':].' → logprob: -11.576576232910156
    6. ':],' → logprob: -12.701576232910156
    7. ':]

' → logprob: -13.451576232910156
    8. ']' → logprob: -13.826576232910156
    9. '：' → logprob: -14.326576232910156
    10. '']}' → logprob: -14.326576232910156

Token 56: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.00027015688829123974
    2. '"' → logprob: -9.000269889831543
    3. '}"
' → logprob: -9.250269889831543
    4. '}' → logprob: -10.125269889831543
    5. '"}' → logprob: -12.375269889831543
    6. '}")' → logprob: -13.125269889831543
    7. '}"

' → logprob: -13.750269889831543
    8. ')"' → logprob: -14.250269889831543
    9. '}}"' → logprob: -14.500269889831543
    10. '}\"' → logprob: -14.500269889831543

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.544809877872467
    2. '
' → logprob: -1.2948098182678223
    3. 'print' → logprob: -2.4198098182678223
    4. '\n' → logprob: -3.1698098182678223
    5. '    
' → logprob: -4.794809818267822
    6. '<|end|>' → logprob: -5.294809818267822
    7. '  
' → logprob: -7.794809818267822
    8. ' print' → logprob: -8.04481029510498
    9. ')' → logprob: -8.29481029510498
    10. '
' → logprob: -9.04481029510498

Token 58: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03923383355140686
    2. 'print' (adapté à ' print') → logprob: -3.289233922958374
    3. '
' → logprob: -7.289233684539795
    4. '    
' → logprob: -7.914233684539795
    5. '<|end|>' → logprob: -10.039234161376953
    6. '\n' → logprob: -10.289234161376953
    7. 'return' → logprob: -10.414234161376953
    8. ' print' → logprob: -11.289234161376953
    9. '```' → logprob: -12.289234161376953
    10. '\' → logprob: -12.539234161376953

Token 59: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020783171930816025
    2. '(' → logprob: -8.500207901000977
    3. '(answer' → logprob: -13.875207901000977
    4. '()' → logprob: -13.875207901000977
    5. '(an' → logprob: -14.000207901000977
    6. '(
' → logprob: -14.750207901000977
    7. '(f' → logprob: -15.000207901000977
    8. 'ans' → logprob: -15.375207901000977
    9. '(abs' → logprob: -15.875207901000977
    10. '(s' → logprob: -16.000207901000977

Token 60: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '`)' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '')' → logprob: -16.0
    5. '")' → logprob: -16.125
    6. '))' → logprob: -16.75
    7. ')`' → logprob: -16.75
    8. ')
' → logprob: -17.625
    9. '）' → logprob: -19.0
    10. '()' → logprob: -19.125

Token 61: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011050998233258724
    2. '__' → logprob: -4.511051177978516
    3. ' ' → logprob: -12.761051177978516
    4. '_' → logprob: -15.886051177978516
    5. ' _' → logprob: -16.636051177978516
    6. ' main' → logprob: -16.886051177978516
    7. '```' → logprob: -17.011051177978516
    8. '/__' → logprob: -17.011051177978516
    9. '​' → logprob: -17.511051177978516
    10. ' name' → logprob: -17.511051177978516

Token 63: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0013660696567967534
    2. '==' → logprob: -7.501366138458252
    3. ' ==' → logprob: -7.501366138458252
    4. ' __' → logprob: -8.876365661621094
    5. '__.__' → logprob: -9.501365661621094
    6. '___' → logprob: -12.001365661621094
    7. '__[' → logprob: -12.001365661621094
    8. '__["' → logprob: -12.001365661621094
    9. '_' → logprob: -12.501365661621094
    10. '```' → logprob: -12.501365661621094

Token 64: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -13.125004768371582
    3. '___' → logprob: -13.375004768371582
    4. '__.__' → logprob: -14.250004768371582
    5. '____' → logprob: -14.875004768371582
    6. '==' → logprob: -15.500004768371582
    7. '__["' → logprob: -17.2500057220459
    8. '__('' → logprob: -18.0000057220459
    9. '__
' → logprob: -18.0000057220459
    10. '__

' → logprob: -18.5000057220459

Token 65: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09136597812175751
    2. ' ==' → logprob: -2.4663660526275635
    3. '==' → logprob: -6.091365814208984
    4. '=="' → logprob: -9.466365814208984
    5. '"' → logprob: -10.341365814208984
    6. '_' → logprob: -11.341365814208984
    7. '___' → logprob: -11.466365814208984
    8. '__.__' → logprob: -11.841365814208984
    9. ' =="' → logprob: -12.466365814208984
    10. ' __' → logprob: -12.466365814208984

Token 66: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007714636158198118
    2. ''' → logprob: -4.882714748382568
    3. ' "' → logprob: -9.38271427154541
    4. ' "__' → logprob: -10.75771427154541
    5. '"user' → logprob: -13.25771427154541
    6. '__' → logprob: -14.50771427154541
    7. ' '' → logprob: -15.25771427154541
    8. ' '__' → logprob: -15.88271427154541
    9. '"name' → logprob: -16.257715225219727
    10. ' ' → logprob: -17.007715225219727

Token 67: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.919942486798391e-05
    2. 'name' → logprob: -9.750059127807617
    3. '__' → logprob: -14.375059127807617
    4. ' main' → logprob: -15.625059127807617
    5. '_main' → logprob: -17.625059127807617
    6. '"' → logprob: -17.625059127807617
    7. 'built' → logprob: -17.750059127807617
    8. '```' → logprob: -17.875059127807617
    9. 'code' → logprob: -18.625059127807617
    10. '	main' → logprob: -19.000059127807617

Token 68: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.38756856322288513
    2. '__' → logprob: -1.1375685930252075
    3. '__':
' → logprob: -7.512568473815918
    4. '__:' → logprob: -9.012568473815918
    5. '__["' → logprob: -11.012568473815918
    6. '__.' → logprob: -11.887568473815918
    7. '_' → logprob: -13.512568473815918
    8. '__
' → logprob: -13.637568473815918
    9. '__
' → logprob: -13.762568473815918
    10. '__",' → logprob: -14.137568473815918

Token 69: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007659397087991238
    2. '   ' → logprob: -5.257659435272217
    3. 'main' → logprob: -6.382659435272217
    4. '	main' → logprob: -8.007658958435059
    5. '    
' → logprob: -8.257658958435059
    6. ' 
' → logprob: -9.507658958435059
    7. '_main' → logprob: -10.757658958435059
    8. '
' → logprob: -10.882658958435059
    9. '<|end|>' → logprob: -11.882658958435059
    10. '  
' → logprob: -12.507658958435059

Token 70: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0007111206650733948
    2. ' main' → logprob: -7.250710964202881
    3. '	main' → logprob: -13.875711441040039
    4. '   ' → logprob: -15.500711441040039
    5. '_main' → logprob: -18.87571144104004
    6. '  ' → logprob: -19.62571144104004
    7. ' ' → logprob: -19.75071144104004
    8. '.main' → logprob: -19.75071144104004
    9. '(main' → logprob: -20.00071144104004
    10. '    
' → logprob: -21.25071144104004

Token 71: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.250017166137695
    3. '()
' → logprob: -12.625017166137695
    4. '()`' → logprob: -14.750017166137695
    5. ' ()' → logprob: -15.375017166137695
    6. '```' → logprob: -16.500017166137695
    7. '()\' → logprob: -16.750017166137695
    8. '()

' → logprob: -17.000017166137695
    9. '`()' → logprob: -17.250017166137695
    10. '();' → logprob: -17.250017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 42.03%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 79.71%
================================================================================
