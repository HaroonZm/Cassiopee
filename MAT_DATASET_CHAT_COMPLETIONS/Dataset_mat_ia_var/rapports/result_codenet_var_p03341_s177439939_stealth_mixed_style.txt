================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = input()
S = list(input())

def solver(s):
    l = len(s)
    left, right = 0, s.count("E")
    m = 300000
    for idx in range(l):
        if idx:
            left = left + (1 if s[idx-1] == "W" else 0)
        if idx < l:
            right -= 1 if s[idx] == "E" else 0
        m = min(m, left + right)
    return m

# Version fonctionnelle "à la map"
print((lambda f, arg: f(arg))(solver, S))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029337219893932343
    2. ''' → logprob: -7.502933502197266
    3. '[' → logprob: -7.627933502197266
    4. '()' → logprob: -7.627933502197266
    5. '.' → logprob: -7.877933502197266
    6. '"' → logprob: -8.252933502197266
    7. '('' → logprob: -8.252933502197266
    8. '(
' → logprob: -8.752933502197266
    9. ')' → logprob: -9.752933502197266
    10. '```' → logprob: -10.252933502197266

Token 4: 'S' (ID: 50)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38538965582847595
    2. '.' → logprob: -1.3853896856307983
    3. '=' → logprob: -4.260389804840088
    4. '\n' → logprob: -4.635389804840088
    5. '.strip' → logprob: -4.635389804840088
    6. '```' → logprob: -5.010389804840088
    7. '*' → logprob: -5.385389804840088
    8. '#' → logprob: -5.510389804840088
    9. ')' → logprob: -5.635389804840088
    10. '[' → logprob: -5.885389804840088

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08802402764558792
    2. '[' → logprob: -2.588024139404297
    3. '=' → logprob: -5.213024139404297
    4. ' =' → logprob: -6.463024139404297
    5. '(' → logprob: -7.463024139404297
    6. '+' → logprob: -7.838024139404297
    7. ')' → logprob: -8.338024139404297
    8. '_' → logprob: -9.338024139404297
    9. ' .' → logprob: -9.338024139404297
    10. 'quare' → logprob: -9.588024139404297

Token 6: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5255644917488098
    2. ' input' → logprob: -0.9005644917488098
    3. 'int' → logprob: -6.650564670562744
    4. ' int' → logprob: -7.775564670562744
    5. ' N' → logprob: -8.150564193725586
    6. 'N' → logprob: -8.650564193725586
    7. ' ' → logprob: -9.900564193725586
    8. ' []' → logprob: -10.150564193725586
    9. 'list' → logprob: -10.400564193725586
    10. '"' → logprob: -10.650564193725586

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006996327545493841
    2. '(N' → logprob: -5.756996154785156
    3. '(input' → logprob: -6.256996154785156
    4. '(S' → logprob: -6.881996154785156
    5. '()' → logprob: -7.256996154785156
    6. '(str' → logprob: -10.381996154785156
    7. '(
' → logprob: -10.506996154785156
    8. '(int' → logprob: -10.881996154785156
    9. '(`' → logprob: -10.881996154785156
    10. '('' → logprob: -11.131996154785156

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3873959481716156
    2. '()' → logprob: -1.137395977973938
    3. ')' → logprob: -8.262395858764648
    4. '(' → logprob: -8.762395858764648
    5. '()))' → logprob: -10.137395858764648
    6. '();)' → logprob: -10.637395858764648
    7. '().' → logprob: -10.762395858764648
    8. ' ())' → logprob: -11.887395858764648
    9. '()]' → logprob: -12.262395858764648
    10. '());' → logprob: -13.262395858764648

Token 9: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16990584135055542
    2. 'i' → logprob: -3.0449059009552
    3. 'if' → logprob: -3.4199059009552
    4. 'count' → logprob: -3.6699059009552
    5. 'n' → logprob: -3.9199059009552
    6. 'f' → logprob: -4.794905662536621
    7. 'c' → logprob: -5.419905662536621
    8. 'd' → logprob: -6.294905662536621
    9. 'N' → logprob: -6.419905662536621
    10. ' for' → logprob: -6.544905662536621

Token 10: ' solver' (ID: 63271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010193156078457832
    2. '_' → logprob: -6.010193347930908
    3. ' _' → logprob: -6.385193347930908
    4. ' count' → logprob: -6.385193347930908
    5. ' process' → logprob: -7.385193347930908
    6. ' main' → logprob: -7.760193347930908
    7. ' check' → logprob: -8.13519287109375
    8. ' is' → logprob: -8.26019287109375
    9. ' sort' → logprob: -8.38519287109375
    10. ' find' → logprob: -8.51019287109375

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006322591798380017
    2. '_' → logprob: -7.625632286071777
    3. '(N' → logprob: -9.750632286071777
    4. '('' → logprob: -11.000632286071777
    5. '(S' → logprob: -11.125632286071777
    6. ':' → logprob: -11.125632286071777
    7. ' (' → logprob: -12.000632286071777
    8. '("("' → logprob: -12.375632286071777
    9. ')' → logprob: -12.625632286071777
    10. '((' → logprob: -12.875632286071777

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01854870468378067
    2. ')' → logprob: -4.018548488616943
    3. '[' → logprob: -9.018548965454102
    4. ',' → logprob: -9.018548965454102
    5. '):
' → logprob: -9.893548965454102
    6. ' ):' → logprob: -10.393548965454102
    7. 's' → logprob: -11.018548965454102
    8. ':' → logprob: -11.143548965454102
    9. '[]):' → logprob: -11.143548965454102
    10. ''):' → logprob: -12.018548965454102

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0871693566441536
    2. ' ' → logprob: -2.7121694087982178
    3. '    ' → logprob: -5.462169170379639
    4. ' if' → logprob: -5.837169170379639
    5. 'n' → logprob: -5.962169170379639
    6. '_' → logprob: -6.337169170379639
    7. '  ' → logprob: -7.337169170379639
    8. 's' → logprob: -7.337169170379639
    9. ' return' → logprob: -7.337169170379639
    10. ')' → logprob: -8.087169647216797

Token 14: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1420499086380005
    2. ' ' → logprob: -2.017049789428711
    3. 'count' → logprob: -2.517049789428711
    4. 'c' → logprob: -2.517049789428711
    5. ' count' → logprob: -2.517049789428711
    6. 'n' → logprob: -3.017049789428711
    7. ' if' → logprob: -3.392049789428711
    8. 'r' → logprob: -3.892049789428711
    9. '   ' → logprob: -3.892049789428711
    10. ' counter' → logprob: -3.892049789428711

Token 15: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.040718015283346176
    2. '=' → logprob: -3.6657180786132812
    3. ' =' → logprob: -4.915718078613281
    4. 'e' → logprob: -5.415718078613281
    5. 'ength' → logprob: -6.665718078613281
    6. 'eft' → logprob: -7.915718078613281
    7. '=len' → logprob: -7.915718078613281
    8. '   ' → logprob: -8.290718078613281
    9. 'et' → logprob: -9.665718078613281
    10. 'i' → logprob: -10.040718078613281

Token 16: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07956818491220474
    2. '[]' → logprob: -3.3295681476593018
    3. 'len' → logprob: -3.8295681476593018
    4. 'en' → logprob: -4.204568386077881
    5. ' ' → logprob: -6.454568386077881
    6. ' len' → logprob: -6.954568386077881
    7. ' []' → logprob: -7.829568386077881
    8. '[len' → logprob: -7.829568386077881
    9. '[' → logprob: -8.204567909240723
    10. '[]
' → logprob: -8.454567909240723

Token 17: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002930366899818182
    2. '(' → logprob: -8.250292778015137
    3. 's' → logprob: -10.375292778015137
    4. '(S' → logprob: -15.000292778015137
    5. ')' → logprob: -16.750293731689453
    6. ' (' → logprob: -17.000293731689453
    7. '(x' → logprob: -18.375293731689453
    8. '(
' → logprob: -18.500293731689453
    9. '(n' → logprob: -18.500293731689453
    10. '(ss' → logprob: -18.500293731689453

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')
' → logprob: -11.000028610229492
    3. ' )' → logprob: -11.750028610229492
    4. '   ' → logprob: -13.500028610229492
    5. ' ' → logprob: -14.375028610229492
    6. ')-' → logprob: -14.875028610229492
    7. ')return' → logprob: -15.000028610229492
    8. '[' → logprob: -15.250028610229492
    9. '))' → logprob: -15.500028610229492
    10. '')' → logprob: -15.625028610229492

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22171510756015778
    2. '_' → logprob: -2.346715211868286
    3. ' ' → logprob: -3.096715211868286
    4. ')' → logprob: -3.971715211868286
    5. ':' → logprob: -5.221714973449707
    6. '    ' → logprob: -5.221714973449707
    7. '  ' → logprob: -5.846714973449707
    8. ',' → logprob: -6.221714973449707
    9. '[' → logprob: -6.221714973449707
    10. 'n' → logprob: -6.221714973449707

Token 20: ' left' (ID: 3561)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6972286701202393
    2. 'res' → logprob: -2.1972286701202393
    3. 'for' → logprob: -2.1972286701202393
    4. 'r' → logprob: -2.3222286701202393
    5. 'dp' → logprob: -2.9472286701202393
    6. ' ' → logprob: -3.0722286701202393
    7. ' ans' → logprob: -3.1972286701202393
    8. 'result' → logprob: -3.1972286701202393
    9. ' result' → logprob: -3.4472286701202393
    10. ' dp' → logprob: -3.5722286701202393

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1415272057056427
    2. '=' → logprob: -2.1415271759033203
    3. ',' → logprob: -4.64152717590332
    4. '_' → logprob: -6.01652717590332
    5. ')' → logprob: -7.64152717590332
    6. '_count' → logprob: -8.26652717590332
    7. 'max' → logprob: -8.76652717590332
    8. '_idx' → logprob: -9.01652717590332
    9. '_counts' → logprob: -9.14152717590332
    10. '_max' → logprob: -9.26652717590332

Token 22: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.34854185581207275
    2. 'right' → logprob: -1.2235418558120728
    3. '=' → logprob: -9.473542213439941
    4. ' =' → logprob: -12.098542213439941
    5. '	right' → logprob: -12.223542213439941
    6. ' ' → logprob: -12.973542213439941
    7. '0' → logprob: -13.473542213439941
    8. ',right' → logprob: -13.973542213439941
    9. '`' → logprob: -14.348542213439941
    10. 's' → logprob: -14.473542213439941

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859009385108948
    2. '=' → logprob: -3.0485901832580566
    3. ',' → logprob: -13.048589706420898
    4. '=int' → logprob: -15.048589706420898
    5. ' ' → logprob: -15.548589706420898
    6. ')' → logprob: -16.2985897064209
    7. '   ' → logprob: -17.0485897064209
    8. '＝' → logprob: -17.5485897064209
    9. '  ' → logprob: -18.4235897064209
    10. '=len' → logprob: -18.6735897064209

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20159323513507843
    2. ' ' → logprob: -1.701593279838562
    3. ' l' → logprob: -9.451593399047852
    4. 'l' → logprob: -9.701593399047852
    5. '[' → logprob: -11.951593399047852
    6. '(' → logprob: -12.076593399047852
    7. ' -' → logprob: -12.201593399047852
    8. ' (' → logprob: -12.201593399047852
    9. '1' → logprob: -12.326593399047852
    10. ' [' → logprob: -12.701593399047852

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037234800402075052
    2. ' ' → logprob: -5.628723621368408
    3. 'l' → logprob: -9.50372314453125
    4. '[' → logprob: -10.62872314453125
    5. '(' → logprob: -12.25372314453125
    6. '-' → logprob: -12.62872314453125
    7. ' l' → logprob: -12.75372314453125
    8. '   ' → logprob: -12.75372314453125
    9. '1' → logprob: -12.87872314453125
    10. 's' → logprob: -13.50372314453125

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014688733965158463
    2. '<|end|>' → logprob: -5.014688968658447
    3. ',l' → logprob: -5.639688968658447
    4. ' ,' → logprob: -5.639688968658447
    5. ',len' → logprob: -8.014688491821289
    6. '<|end|>' → logprob: -8.514688491821289
    7. ' ' → logprob: -8.889688491821289
    8. ',length' → logprob: -9.764688491821289
    9. ',
' → logprob: -11.139688491821289
    10. '
' → logprob: -11.264688491821289

Token 27: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22640617191791534
    2. ' l' → logprob: -1.601406216621399
    3. '0' → logprob: -7.226406097412109
    4. '1' → logprob: -9.10140609741211
    5. ' ' → logprob: -9.22640609741211
    6. 'len' → logprob: -10.97640609741211
    7. '   ' → logprob: -11.35140609741211
    8. '	l' → logprob: -11.72640609741211
    9. ' len' → logprob: -12.47640609741211
    10. '9' → logprob: -12.72640609741211

Token 28: '.count' (ID: 14019)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9202013611793518
    2. 'l' → logprob: -1.795201301574707
    3. 'len' → logprob: -2.420201301574707
    4. 'left' → logprob: -2.920201301574707
    5. 'ength' → logprob: -3.045201301574707
    6. '-' → logprob: -3.420201301574707
    7. '.length' → logprob: -3.670201301574707
    8. '   ' → logprob: -3.670201301574707
    9. ',' → logprob: -4.045201301574707
    10. 'length' → logprob: -4.170201301574707

Token 29: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.21514198184013367
    2. '(s' → logprob: -2.090142011642456
    3. '(' → logprob: -2.965142011642456
    4. '("("' → logprob: -4.465141773223877
    5. '(left' → logprob: -5.965141773223877
    6. '("' → logprob: -6.340141773223877
    7. '('.')' → logprob: -6.965141773223877
    8. 'left' → logprob: -8.215142250061035
    9. '("")' → logprob: -8.965142250061035
    10. '((' → logprob: -9.215142250061035

Token 30: 'E' (ID: 36)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3803081512451172
    2. '1' → logprob: -1.3803081512451172
    3. '(' → logprob: -1.5053081512451172
    4. '"' → logprob: -2.380308151245117
    5. '0' → logprob: -3.130308151245117
    6. '("' → logprob: -3.130308151245117
    7. '")' → logprob: -3.630308151245117
    8. ')")' → logprob: -3.880308151245117
    9. 'a' → logprob: -4.755308151245117
    10. 'R' → logprob: -4.755308151245117

Token 31: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.019853075966238976
    2. 'R' → logprob: -4.644853115081787
    3. 'L' → logprob: -5.769853115081787
    4. 'Q' → logprob: -6.144853115081787
    5. '"' → logprob: -6.519853115081787
    6. ')' → logprob: -7.269853115081787
    7. '")+' → logprob: -7.644853115081787
    8. 'E' → logprob: -8.144852638244629
    9. ' ")' → logprob: -8.394852638244629
    10. 'S' → logprob: -8.644852638244629

Token 32: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' m' (ID: 284)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1324586123228073
    2. '<|end|>' → logprob: -3.0074586868286133
    3. ':' → logprob: -3.2574586868286133
    4. ')' → logprob: -4.132458686828613
    5. '\n' → logprob: -4.632458686828613
    6. ' ' → logprob: -6.257458686828613
    7. ' 
' → logprob: -6.507458686828613
    8. '<|end|>' → logprob: -7.007458686828613
    9. '   ' → logprob: -7.257458686828613
    10. ' for' → logprob: -7.382458686828613

Token 34: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.42357495427131653
    2. 'i' → logprob: -1.9235749244689941
    3. 'in' → logprob: -2.298574924468994
    4. 'a' → logprob: -2.423574924468994
    5. 'x' → logprob: -5.423574924468994
    6. ' =' → logprob: -6.423574924468994
    7. 'id' → logprob: -6.548574924468994
    8. 'ove' → logprob: -7.673574924468994
    9. '=' → logprob: -7.798574924468994
    10. 'o' → logprob: -8.548575401306152

Token 35: ' ' (ID: 220)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -1.162982702255249
    2. ' float' → logprob: -1.787982702255249
    3. ' l' → logprob: -2.037982702255249
    4. '0' → logprob: -2.537982702255249
    5. ' ' → logprob: -2.537982702255249
    6. 'right' → logprob: -2.912982702255249
    7. 'float' → logprob: -3.162982702255249
    8. 'l' → logprob: -3.537982702255249
    9. ' len' → logprob: -3.662982702255249
    10. 'left' → logprob: -3.912982702255249

Token 36: '300' (ID: 4095)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12958072125911713
    2. 'l' → logprob: -2.8795807361602783
    3. 'left' → logprob: -3.7545807361602783
    4. 'len' → logprob: -4.004580497741699
    5. 'float' → logprob: -4.629580497741699
    6. 'min' → logprob: -4.629580497741699
    7. 'N' → logprob: -6.379580497741699
    8. ' right' → logprob: -7.379580497741699
    9. 'max' → logprob: -7.379580497741699
    10. 'r' → logprob: -7.879580497741699

Token 37: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.289497047662735
    2. '0' → logprob: -1.6644970178604126
    3. '000' → logprob: -3.164497137069702
    4. '01' → logprob: -4.289496898651123
    5. ' ' → logprob: -6.039496898651123
    6. '001' → logprob: -6.664496898651123
    7. '1' → logprob: -7.289496898651123
    8. '_' → logprob: -8.539497375488281
    9. '"' → logprob: -8.664497375488281
    10. ''' → logprob: -8.789497375488281

Token 38: '
' (ID: 198)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16314104199409485
    2. '00' → logprob: -1.9131410121917725
    3. '0' → logprob: -6.288141250610352
    4. '001' → logprob: -7.163141250610352
    5. '01' → logprob: -8.913141250610352
    6. ' ' → logprob: -9.288141250610352
    7. '002' → logprob: -11.663141250610352
    8. '007' → logprob: -11.663141250610352
    9. '```' → logprob: -11.913141250610352
    10. '1' → logprob: -12.163141250610352

Token 39: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5942429304122925
    2. 'for' → logprob: -1.9692429304122925
    3. '0' → logprob: -2.219243049621582
    4. ' ' → logprob: -2.594243049621582
    5. '<|end|>' → logprob: -2.594243049621582
    6. '
' → logprob: -3.344243049621582
    7. 'def' → logprob: -6.219243049621582
    8. ' 
' → logprob: -6.594243049621582
    9. '   ' → logprob: -6.844243049621582
    10. '000' → logprob: -6.969243049621582

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21240517497062683
    2. 'for' (adapté à ' for') → logprob: -1.7124052047729492
    3. ' ' → logprob: -4.837405204772949
    4. '  ' → logprob: -7.212405204772949
    5. 'f' → logprob: -7.837405204772949
    6. '_' → logprob: -8.46240520477295
    7. 's' → logprob: -8.46240520477295
    8. ' =' → logprob: -8.58740520477295
    9. '0' → logprob: -8.96240520477295
    10. '-' → logprob: -9.21240520477295

Token 41: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006444169674068689
    2. 'i' → logprob: -5.256443977355957
    3. ' ' → logprob: -7.631443977355957
    4. ' _' → logprob: -7.881443977355957
    5. '_' → logprob: -8.506443977355957
    6. '_i' → logprob: -10.381443977355957
    7. '	i' → logprob: -10.506443977355957
    8. '  ' → logprob: -11.006443977355957
    9. ' ' → logprob: -11.131443977355957
    10. ' c' → logprob: -11.631443977355957

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04210924729704857
    2. 'in' → logprob: -3.667109251022339
    3. ',' → logprob: -4.29210901260376
    4. ' ' → logprob: -6.79210901260376
    5. ' ,' → logprob: -7.16710901260376
    6. 's' → logprob: -9.917109489440918
    7. '	in' → logprob: -10.917109489440918
    8. ',in' → logprob: -11.417109489440918
    9. ',s' → logprob: -12.292109489440918
    10. 'i' → logprob: -12.542109489440918

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03370702266693115
    2. 'range' → logprob: -3.4087071418762207
    3. 's' → logprob: -10.408706665039062
    4. ' s' → logprob: -11.033706665039062
    5. '	range' → logprob: -12.283706665039062
    6. '(range' → logprob: -12.533706665039062
    7. ' xrange' → logprob: -12.533706665039062
    8. ' ' → logprob: -13.408706665039062
    9. ')' → logprob: -15.283706665039062
    10. ',' → logprob: -15.471206665039062

Token 44: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.05011613294482231
    2. '(' → logprob: -3.0501160621643066
    3. '(len' → logprob: -6.675116062164307
    4. ' (' → logprob: -8.800116539001465
    5. ' l' → logprob: -10.050116539001465
    6. '(n' → logprob: -10.550116539001465
    7. '(left' → logprob: -10.925116539001465
    8. 'l' → logprob: -11.550116539001465
    9. '(N' → logprob: -12.050116539001465
    10. '1' → logprob: -13.175116539001465

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008331112563610077
    2. '):
' → logprob: -5.133331298828125
    3. '+' → logprob: -6.633331298828125
    4. ' ):' → logprob: -7.008331298828125
    5. ')' → logprob: -9.258331298828125
    6. ':' → logprob: -10.258331298828125
    7. '):
' → logprob: -11.008331298828125
    8. '-' → logprob: -11.508331298828125
    9. ' ' → logprob: -12.008331298828125
    10. '   ' → logprob: -12.258331298828125

Token 46: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0910087302327156
    2. ' ' → logprob: -3.0910086631774902
    3. '<|end|>' → logprob: -3.5910086631774902
    4. '       ' → logprob: -5.46600866317749
    5. ' if' → logprob: -5.59100866317749
    6. '  ' → logprob: -6.34100866317749
    7. ':' → logprob: -7.21600866317749
    8. '    ' → logprob: -7.34100866317749
    9. '<|end|>' → logprob: -7.34100866317749
    10. ',' → logprob: -7.71600866317749

Token 47: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19368299841880798
    2. ' if' → logprob: -2.193682909011841
    3. '   ' → logprob: -3.818682909011841
    4. '<|end|>' → logprob: -3.818682909011841
    5. '    ' → logprob: -4.56868314743042
    6. '       ' → logprob: -5.94368314743042
    7. 'if' (adapté à ' if') → logprob: -6.44368314743042
    8. 's' → logprob: -6.69368314743042
    9. '  ' → logprob: -6.94368314743042
    10. '<|end|>' → logprob: -7.31868314743042

Token 48: ' idx' (ID: 14016)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03390512987971306
    2. 's' → logprob: -3.408905029296875
    3. ' S' → logprob: -8.908905029296875
    4. 'S' → logprob: -9.408905029296875
    5. ' ' → logprob: -10.783905029296875
    6. ' not' → logprob: -12.033905029296875
    7. ' right' → logprob: -12.158905029296875
    8. '	s' → logprob: -13.283905029296875
    9. '  ' → logprob: -13.408905029296875
    10. '   ' → logprob: -13.846405029296875

Token 49: ':
' (ID: 734)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5576555132865906
    2. ' >' → logprob: -1.3076555728912354
    3. '>' → logprob: -3.0576555728912354
    4. ' ' → logprob: -3.0576555728912354
    5. ' ==' → logprob: -3.9326555728912354
    6. ' and' → logprob: -4.432655334472656
    7. '<' → logprob: -4.807655334472656
    8. ' >=' → logprob: -5.182655334472656
    9. 'and' → logprob: -5.682655334472656
    10. '==' → logprob: -5.807655334472656

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.535662055015564
    2. '   ' → logprob: -1.410662055015564
    3. '           ' → logprob: -2.2856621742248535
    4. ' ' → logprob: -4.1606621742248535
    5. ' if' → logprob: -4.4106621742248535
    6. ':' → logprob: -5.1606621742248535
    7. ' and' → logprob: -5.2856621742248535
    8. '>' → logprob: -5.6606621742248535
    9. ' ==' → logprob: -5.6606621742248535
    10. ':
' → logprob: -5.9106621742248535

Token 51: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27060553431510925
    2. ' if' → logprob: -1.7706055641174316
    3. '       ' → logprob: -3.2706055641174316
    4. 'm' → logprob: -4.395605564117432
    5. '   ' → logprob: -4.645605564117432
    6. 'left' (adapté à ' left') → logprob: -6.270605564117432
    7. 'c' → logprob: -6.645605564117432
    8. '           ' → logprob: -7.020605564117432
    9. ' m' → logprob: -7.270605564117432
    10. 'right' → logprob: -7.395605564117432

Token 52: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14277033507823944
    2. ' +=' → logprob: -2.017770290374756
    3. '+=(' → logprob: -10.017770767211914
    4. '+' → logprob: -10.517770767211914
    5. '=' → logprob: -11.267770767211914
    6. ']+=' → logprob: -12.392770767211914
    7. ' +' → logprob: -13.267770767211914
    8. '    ' → logprob: -13.767770767211914
    9. '   ' → logprob: -14.017770767211914
    10. ' =' → logprob: -14.267770767211914

Token 53: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1831948608160019
    2. ' left' → logprob: -1.808194875717163
    3. 'right' → logprob: -6.933194637298584
    4. 's' → logprob: -7.433194637298584
    5. ' right' → logprob: -8.183195114135742
    6. '+' → logprob: -8.183195114135742
    7. ' s' → logprob: -8.433195114135742
    8. '           ' → logprob: -8.433195114135742
    9. 'S' → logprob: -9.183195114135742
    10. '0' → logprob: -9.308195114135742

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12694396078586578
    2. ' +' → logprob: -2.126944065093994
    3. ' plus' → logprob: -12.001943588256836
    4. '+=' → logprob: -12.751943588256836
    5. '+s' → logprob: -13.751943588256836
    6. '+(' → logprob: -13.876943588256836
    7. ' +=' → logprob: -14.501943588256836
    8. 'plus' → logprob: -14.626943588256836
    9. '＋' → logprob: -15.001943588256836
    10. 's' → logprob: -15.001943588256836

Token 55: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.08289799839258194
    2. '1' → logprob: -2.957897901535034
    3. '(int' → logprob: -4.457898139953613
    4. '(' → logprob: -5.332898139953613
    5. ' (' → logprob: -5.457898139953613
    6. '(S' → logprob: -5.707898139953613
    7. 'int' → logprob: -6.207898139953613
    8. ' ' → logprob: -7.582898139953613
    9. 's' → logprob: -8.457898139953613
    10. '   ' → logprob: -8.707898139953613

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2010079026222229
    2. 's' → logprob: -2.576007843017578
    3. ' ' → logprob: -3.076007843017578
    4. 'S' → logprob: -3.326007843017578
    5. '0' → logprob: -4.326007843017578
    6. ' s' → logprob: -5.826007843017578
    7. ' S' → logprob: -6.076007843017578
    8. 'int' → logprob: -6.826007843017578
    9. ' (' → logprob: -7.201007843017578
    10. '"S' → logprob: -7.326007843017578

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.055462244898080826
    2. 'if' → logprob: -2.93046236038208
    3. '-' → logprob: -8.055461883544922
    4. ' -' → logprob: -8.680461883544922
    5. ' ' → logprob: -10.430461883544922
    6. '   ' → logprob: -11.680461883544922
    7. '-if' → logprob: -11.805461883544922
    8. '*' → logprob: -11.930461883544922
    9. ')' → logprob: -11.930461883544922
    10. 's' → logprob: -12.555461883544922

Token 58: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1652798056602478
    2. ' s' → logprob: -1.9152798652648926
    3. 'S' → logprob: -5.415279865264893
    4. ' S' → logprob: -7.790279865264893
    5. ' ' → logprob: -9.415279388427734
    6. '  ' → logprob: -10.540279388427734
    7. '   ' → logprob: -10.665279388427734
    8. '(s' → logprob: -10.915279388427734
    9. '	s' → logprob: -12.852779388427734
    10. ''s' → logprob: -12.852779388427734

Token 59: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.955703818472102e-05
    2. '[' → logprob: -10.125059127807617
    3. 'idx' → logprob: -11.625059127807617
    4. ' [' → logprob: -12.750059127807617
    5. '==' → logprob: -13.625059127807617
    6. '[
' → logprob: -13.875059127807617
    7. '   ' → logprob: -13.875059127807617
    8. '```' → logprob: -14.000059127807617
    9. '[int' → logprob: -14.625059127807617
    10. ' ==' → logprob: -14.875059127807617

Token 60: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011144972406327724
    2. ' -' → logprob: -4.511145114898682
    3. '==' → logprob: -10.386144638061523
    4. ']' → logprob: -10.636144638061523
    5. ' ' → logprob: -11.386144638061523
    6. ']==' → logprob: -11.761144638061523
    7. ' ==' → logprob: -12.261144638061523
    8. '"-' → logprob: -13.011144638061523
    9. '"' → logprob: -13.261144638061523
    10. '   ' → logprob: -13.511144638061523

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09240566194057465
    2. '"' → logprob: -3.0924055576324463
    3. ']' → logprob: -3.7174055576324463
    4. '-' → logprob: -4.967405796051025
    5. '"]' → logprob: -5.717405796051025
    6. '"-' → logprob: -5.842405796051025
    7. ''' → logprob: -6.717405796051025
    8. ''-' → logprob: -7.217405796051025
    9. '']' → logprob: -7.592405796051025
    10. '0' → logprob: -7.592405796051025

Token 62: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13509565591812134
    2. ' ==' → logprob: -2.7600955963134766
    3. ']==' → logprob: -3.3850955963134766
    4. ']' → logprob: -3.6350955963134766
    5. '=="' → logprob: -6.635095596313477
    6. ']=="' → logprob: -7.385095596313477
    7. '!=' → logprob: -8.385095596313477
    8. ']=='' → logprob: -8.760095596313477
    9. '=='' → logprob: -10.010095596313477
    10. ')' → logprob: -10.010095596313477

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.015917407348752022
    2. ' ==' → logprob: -4.3909173011779785
    3. '=="' → logprob: -5.7659173011779785
    4. '=='' → logprob: -9.015917778015137
    5. '!=' → logprob: -9.640917778015137
    6. ']==' → logprob: -10.765917778015137
    7. '==
' → logprob: -10.765917778015137
    8. '=' → logprob: -11.515917778015137
    9. ' =="' → logprob: -12.703417778015137
    10. ' ' → logprob: -12.890917778015137

Token 64: ' "' (ID: 392)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.18898144364356995
    2. '"E' → logprob: -2.563981533050537
    3. ''' → logprob: -2.688981533050537
    4. ''E' → logprob: -4.313981533050537
    5. '"' → logprob: -4.438981533050537
    6. 'W' → logprob: -7.063981533050537
    7. '`' → logprob: -8.813981056213379
    8. '```' → logprob: -8.938981056213379
    9. '   ' → logprob: -9.063981056213379
    10. '"L' → logprob: -9.188981056213379

Token 65: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.057446837425231934
    2. 'E' → logprob: -2.9324469566345215
    3. 'S' → logprob: -6.9324469566345215
    4. 'Q' → logprob: -7.0574469566345215
    5. '"W' → logprob: -8.682446479797363
    6. 'M' → logprob: -9.932446479797363
    7. ' W' → logprob: -9.932446479797363
    8. 'N' → logprob: -9.932446479797363
    9. 'R' → logprob: -10.057446479797363
    10. 'D' → logprob: -10.182446479797363

Token 66: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001958251930773258
    2. ' else' → logprob: -6.37695837020874
    3. 'else' → logprob: -8.376957893371582
    4. ' "' → logprob: -11.126957893371582
    5. '")' → logprob: -12.251957893371582
    6. ')' → logprob: -12.876957893371582
    7. '```' → logprob: -13.376957893371582
    8. '	else' → logprob: -14.751957893371582
    9. '   ' → logprob: -15.626957893371582
    10. '`' → logprob: -15.626957893371582

Token 67: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0265300665050745
    2. 'else' → logprob: -3.6515300273895264
    3. '-' → logprob: -9.151530265808105
    4. '   ' → logprob: -9.901530265808105
    5. ' ' → logprob: -10.026530265808105
    6. ')' → logprob: -12.026530265808105
    7. '       ' → logprob: -12.276530265808105
    8. '	else' → logprob: -12.276530265808105
    9. '  ' → logprob: -12.526530265808105
    10. '    ' → logprob: -12.651530265808105

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007867574691772461
    2. ' ' → logprob: -4.882867813110352
    3. '1' → logprob: -9.007867813110352
    4. '-' → logprob: -9.007867813110352
    5. ')' → logprob: -11.757867813110352
    6. ' -' → logprob: -12.007867813110352
    7. '   ' → logprob: -13.382867813110352
    8. '  ' → logprob: -14.507867813110352
    9. '    ' → logprob: -15.820367813110352
    10. ' ' → logprob: -16.94536781311035

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03430158272385597
    2. '-' → logprob: -3.409301519393921
    3. ' ' → logprob: -7.6593017578125
    4. '1' → logprob: -8.7843017578125
    5. ' -' → logprob: -10.7843017578125
    6. ')' → logprob: -12.4093017578125
    7. '   ' → logprob: -13.4093017578125
    8. '  ' → logprob: -14.6593017578125
    9. '−' → logprob: -14.8468017578125
    10. '```' → logprob: -15.0343017578125

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16628848016262054
    2. ')
' → logprob: -1.9162884950637817
    3. '       ' → logprob: -5.666288375854492
    4. ')
' → logprob: -6.541288375854492
    5. ' )
' → logprob: -7.791288375854492
    6. ' )' → logprob: -8.041288375854492
    7. '   ' → logprob: -8.541288375854492
    8. ')

' → logprob: -9.041288375854492
    9. '           ' → logprob: -10.291288375854492
    10. ' else' → logprob: -11.916288375854492

Token 71: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5054652094841003
    2. '<|end|>' → logprob: -1.8804652690887451
    3. ' right' → logprob: -2.005465269088745
    4. '       ' → logprob: -3.630465269088745
    5. ')' → logprob: -4.005465030670166
    6. 'right' → logprob: -4.130465030670166
    7. '   ' → logprob: -4.255465030670166
    8. '```' → logprob: -4.630465030670166
    9. '[right' → logprob: -5.130465030670166
    10. '
' → logprob: -6.005465030670166

Token 72: ' if' (ID: 538)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.8043832778930664
    2. 'right' → logprob: -1.3043832778930664
    3. '       ' → logprob: -1.4293832778930664
    4. '   ' → logprob: -3.3043832778930664
    5. '	right' → logprob: -5.804383277893066
    6. 'm' → logprob: -7.304383277893066
    7. ' ' → logprob: -7.804383277893066
    8. ' m' → logprob: -7.929383277893066
    9. ' if' → logprob: -8.179383277893066
    10. 'if' (adapté à ' if') → logprob: -9.804383277893066

Token 73: ' idx' (ID: 14016)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6758653521537781
    2. ' right' → logprob: -0.8008653521537781
    3. 'right' → logprob: -3.550865411758423
    4. 's' → logprob: -4.675865173339844
    5. ' left' → logprob: -6.550865173339844
    6. ' idx' → logprob: -6.925865173339844
    7. ' ' → logprob: -7.175865173339844
    8. ' not' → logprob: -7.800865173339844
    9. 'left' → logprob: -8.050865173339844
    10. 'idx' → logprob: -9.550865173339844

Token 74: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6759786605834961
    2. '>' → logprob: -1.175978660583496
    3. ' >' → logprob: -2.050978660583496
    4. '==' → logprob: -4.425978660583496
    5. '!=' → logprob: -4.800978660583496
    6. ' ==' → logprob: -5.300978660583496
    7. ' !=' → logprob: -5.425978660583496
    8. ')' → logprob: -5.550978660583496
    9. '):' → logprob: -5.550978660583496
    10. ' <' → logprob: -5.925978660583496

Token 75: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002354714320972562
    2. ' l' → logprob: -6.127354621887207
    3. 'N' → logprob: -9.002354621887207
    4. 'len' → logprob: -11.002354621887207
    5. 'right' → logprob: -11.002354621887207
    6. ' ' → logprob: -12.002354621887207
    7. ' N' → logprob: -13.002354621887207
    8. ' right' → logprob: -13.752354621887207
    9. '   ' → logprob: -14.252354621887207
    10. 'r' → logprob: -14.252354621887207

Token 76: ':
' (ID: 734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0289647579193115
    2. ' -' → logprob: -1.6539647579193115
    3. ' and' → logprob: -1.7789647579193115
    4. ':' → logprob: -1.7789647579193115
    5. 'and' → logprob: -2.6539647579193115
    6. ':
' → logprob: -3.7789647579193115
    7. '       ' → logprob: -5.028964996337891
    8. ')' → logprob: -5.778964996337891
    9. ' :' → logprob: -6.028964996337891
    10. ' ' → logprob: -6.028964996337891

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7042539119720459
    2. 'right' → logprob: -1.204253911972046
    3. '       ' → logprob: -1.829253911972046
    4. ' right' → logprob: -3.204253911972046
    5. '   ' → logprob: -5.704254150390625
    6. '	right' → logprob: -7.454254150390625
    7. '[right' → logprob: -9.329254150390625
    8. '     ' → logprob: -9.579254150390625
    9. ',right' → logprob: -9.829254150390625
    10. '               ' → logprob: -9.829254150390625

Token 78: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.03562802076339722
    2. '           ' → logprob: -3.910628080368042
    3. ' right' → logprob: -4.410627841949463
    4. '               ' → logprob: -6.285627841949463
    5. '	right' → logprob: -7.785627841949463
    6. '   ' → logprob: -8.410628318786621
    7. '       ' → logprob: -8.535628318786621
    8. ',right' → logprob: -10.285628318786621
    9. 'if' → logprob: -10.535628318786621
    10. 'Right' → logprob: -10.785628318786621

Token 79: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11298096925020218
    2. ' =' → logprob: -2.862981081008911
    3. '-=' → logprob: -3.487981081008911
    4. ' -=' → logprob: -3.987981081008911
    5. '-' → logprob: -7.487980842590332
    6. '+=' → logprob: -10.237980842590332
    7. '   ' → logprob: -10.737980842590332
    8. ' ' → logprob: -12.112980842590332
    9. ' +=' → logprob: -12.362980842590332
    10. ' -' → logprob: -12.487980842590332

Token 80: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035154952201992273
    2. '1' → logprob: -6.003515720367432
    3. ' (' → logprob: -6.878515720367432
    4. ' ' → logprob: -11.753515243530273
    5. '   ' → logprob: -13.878515243530273
    6. '       ' → logprob: -14.878515243530273
    7. '           ' → logprob: -16.003515243530273
    8. '(int' → logprob: -16.378515243530273
    9. '0' → logprob: -16.503515243530273
    10. '  ' → logprob: -17.003515243530273

Token 81: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014522268436849117
    2. '1' → logprob: -4.264522075653076
    3. ' (' → logprob: -8.014522552490234
    4. ' ' → logprob: -10.889522552490234
    5. '(int' → logprob: -12.514522552490234
    6. '   ' → logprob: -12.889522552490234
    7. '(s' → logprob: -13.889522552490234
    8. '       ' → logprob: -14.139522552490234
    9. '  ' → logprob: -15.014522552490234
    10. '0' → logprob: -15.139522552490234

Token 82: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7320361137390137
    2. '<|end|>' → logprob: -0.7320361137390137
    3. ')' → logprob: -3.9820361137390137
    4. '<|end|>' → logprob: -4.982036113739014
    5. ' ' → logprob: -5.482036113739014
    6. '\n' → logprob: -5.982036113739014
    7. ' (' → logprob: -6.607036113739014
    8. '   ' → logprob: -7.232036113739014
    9. '[' → logprob: -7.232036113739014
    10. '
' → logprob: -7.607036113739014

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16049078106880188
    2. 's' → logprob: -1.9104907512664795
    3. '(s' → logprob: -8.535490989685059
    4. ' (' → logprob: -10.410490989685059
    5. ' ' → logprob: -10.785490989685059
    6. '(' → logprob: -12.035490989685059
    7. 'S' → logprob: -12.035490989685059
    8. ' S' → logprob: -13.660490989685059
    9. '	s' → logprob: -13.785490989685059
    10. '  ' → logprob: -13.910490989685059

Token 84: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.50000286102295
    3. 'idx' → logprob: -14.00000286102295
    4. '[id' → logprob: -15.75000286102295
    5. '[index' → logprob: -16.000001907348633
    6. '```' → logprob: -16.625001907348633
    7. '<|end|>' → logprob: -17.500001907348633
    8. '[token' → logprob: -17.750001907348633
    9. ' idx' → logprob: -17.750001907348633
    10. '[end' → logprob: -17.875001907348633

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09052961319684982
    2. ']==' → logprob: -2.590529680252075
    3. '==' → logprob: -4.590529441833496
    4. ' ==' → logprob: -7.465529441833496
    5. ' ]' → logprob: -7.965529441833496
    6. ']=="' → logprob: -8.090529441833496
    7. ']=='' → logprob: -9.090529441833496
    8. '"]' → logprob: -9.965529441833496
    9. '-' → logprob: -11.965529441833496
    10. ' ' → logprob: -12.090529441833496

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3133855164051056
    2. '==' → logprob: -1.3133854866027832
    3. '=="' → logprob: -9.688385963439941
    4. ' ' → logprob: -10.938385963439941
    5. '=' → logprob: -11.438385963439941
    6. ']==' → logprob: -11.938385963439941
    7. ' =="' → logprob: -12.438385963439941
    8. ']' → logprob: -12.563385963439941
    9. '<|end|>' → logprob: -13.063385963439941
    10. '==
' → logprob: -13.063385963439941

Token 87: ' "' (ID: 392)
  Prédit: '"E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"E' → logprob: -0.2909218370914459
    2. '"' → logprob: -1.6659218072891235
    3. ' "' → logprob: -2.915921926498413
    4. ''E' → logprob: -5.290921688079834
    5. ' '' → logprob: -6.665921688079834
    6. ' ' → logprob: -6.665921688079834
    7. ''' → logprob: -7.415921688079834
    8. '"W' → logprob: -8.165922164916992
    9. 'E' → logprob: -8.290922164916992
    10. ' E' → logprob: -8.915922164916992

Token 88: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0006683559040538967
    2. ''E' → logprob: -7.875668525695801
    3. '"E' → logprob: -8.6256685256958
    4. 'W' → logprob: -9.7506685256958
    5. ' E' → logprob: -10.5006685256958
    6. ''' → logprob: -12.1256685256958
    7. 'S' → logprob: -12.3756685256958
    8. '"' → logprob: -12.5006685256958
    9. '`' → logprob: -13.6256685256958
    10. '’E' → logprob: -13.6881685256958

Token 89: '"' (ID: 1)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02388657070696354
    2. '"' → logprob: -4.023886680603027
    3. 'else' → logprob: -5.273886680603027
    4. ')' → logprob: -7.523886680603027
    5. '")' → logprob: -10.273886680603027
    6. ' ' → logprob: -12.023886680603027
    7. '```' → logprob: -12.648886680603027
    8. '	else' → logprob: -12.898886680603027
    9. ' "' → logprob: -13.148886680603027
    10. '`' → logprob: -13.398886680603027

Token 90: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00020461321400944144
    2. 'else' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.500205039978027
    4. ')' → logprob: -15.250205039978027
    5. '	else' → logprob: -15.625205039978027
    6. '       ' → logprob: -16.25020408630371
    7. '           ' → logprob: -16.62520408630371
    8. '        ' → logprob: -18.00020408630371
    9. ' ' → logprob: -18.00020408630371
    10. '   ' → logprob: -18.25020408630371

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141352713108063
    2. ' ' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.326414108276367
    4. '   ' → logprob: -16.826414108276367
    5. '  ' → logprob: -17.326414108276367
    6. '<|end|>' → logprob: -17.763914108276367
    7. '۰' → logprob: -18.138914108276367
    8. '00' → logprob: -19.076414108276367
    9. ' ' → logprob: -19.388914108276367
    10. '1' → logprob: -19.388914108276367

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '۰' → logprob: -18.750139236450195
    4. '   ' → logprob: -19.125139236450195
    5. '00' → logprob: -19.625139236450195
    6. '  ' → logprob: -19.750139236450195
    7. ' ' → logprob: -20.187639236450195
    8. '000' → logprob: -20.312639236450195
    9. '０' → logprob: -21.000139236450195
    10. '.' → logprob: -21.187639236450195

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11102491617202759
    2. '   ' → logprob: -3.236024856567383
    3. '       ' → logprob: -3.361024856567383
    4. '<|end|>' → logprob: -4.111024856567383
    5. ' m' → logprob: -5.111024856567383
    6. '  
' → logprob: -6.111024856567383
    7. '    
' → logprob: -6.611024856567383
    8. 'm' → logprob: -6.736024856567383
    9. ' 
' → logprob: -6.861024856567383
    10. '<|end|>' → logprob: -7.361024856567383

Token 94: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28009283542633057
    2. ' m' → logprob: -1.7800928354263306
    3. 'm' → logprob: -3.155092716217041
    4. ' ' → logprob: -4.280092716217041
    5. '<|end|>' → logprob: -4.905092716217041
    6. '
' → logprob: -5.030092716217041
    7. '       ' → logprob: -6.405092716217041
    8. '	m' → logprob: -7.405092716217041
    9. ')' → logprob: -7.530092716217041
    10. '  
' → logprob: -7.780092716217041

Token 95: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4333914518356323
    2. '   ' → logprob: -1.3083914518356323
    3. 'm' (adapté à ' m') → logprob: -2.683391571044922
    4. '       ' → logprob: -5.183391571044922
    5. '
' → logprob: -5.683391571044922
    6. ' ' → logprob: -6.183391571044922
    7. ' if' → logprob: -6.933391571044922
    8. '  ' → logprob: -8.183391571044922
    9. '	m' → logprob: -8.183391571044922
    10. '<|end|>' → logprob: -9.058391571044922

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0002981624274980277
    2. '=' → logprob: -8.125298500061035
    3. '=min' → logprob: -13.125298500061035
    4. ' ' → logprob: -16.37529754638672
    5. '   ' → logprob: -17.00029754638672
    6. 'min' → logprob: -17.50029754638672
    7. '  ' → logprob: -18.00029754638672
    8. ' >' → logprob: -18.25029754638672
    9. '.' → logprob: -19.00029754638672
    10. ',' → logprob: -19.00029754638672

Token 97: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0009125363430939615
    2. 'min' → logprob: -7.000912666320801
    3. ' ' → logprob: -14.0009126663208
    4. '	min' → logprob: -15.8759126663208
    5. ' m' → logprob: -17.125911712646484
    6. '(min' → logprob: -17.375911712646484
    7. ' ' → logprob: -17.625911712646484
    8. ' max' → logprob: -18.000911712646484
    9. ' mini' → logprob: -18.125911712646484
    10. '  ' → logprob: -18.250911712646484

Token 98: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00033677343162707984
    2. '(' → logprob: -8.000336647033691
    3. '(left' → logprob: -13.625336647033691
    4. '(min' → logprob: -16.250337600708008
    5. ' (' → logprob: -17.250337600708008
    6. '(l' → logprob: -17.625337600708008
    7. '(
' → logprob: -17.750337600708008
    8. '(s' → logprob: -18.875337600708008
    9. '(max' → logprob: -19.125337600708008
    10. '(a' → logprob: -20.000337600708008

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024090370163321495
    2. ',left' → logprob: -4.02409029006958
    3. '(left' → logprob: -5.64909029006958
    4. ' ,' → logprob: -6.27409029006958
    5. ',m' → logprob: -8.024090766906738
    6. '(' → logprob: -9.399090766906738
    7. ',min' → logprob: -10.274090766906738
    8. ',right' → logprob: -11.149090766906738
    9. 'left' → logprob: -11.274090766906738
    10. ',l' → logprob: -11.649090766906738

Token 100: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.07031196355819702
    2. 'left' → logprob: -2.695312023162842
    3. ' max' → logprob: -8.070311546325684
    4. ' ' → logprob: -10.945311546325684
    5. 'max' → logprob: -11.320311546325684
    6. ' right' → logprob: -11.695311546325684
    7. '	left' → logprob: -11.695311546325684
    8. ' min' → logprob: -12.195311546325684
    9. ' lef' → logprob: -12.570311546325684
    10. ' m' → logprob: -13.570311546325684

Token 101: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7974624633789062
    2. ' +' → logprob: -0.9224624633789062
    3. '+' → logprob: -1.9224624633789062
    4. ' )' → logprob: -5.422462463378906
    5. ')
' → logprob: -7.672462463378906
    6. '   ' → logprob: -9.047462463378906
    7. ' ' → logprob: -9.172462463378906
    8. '       ' → logprob: -9.297462463378906
    9. '<|end|>' → logprob: -9.547462463378906
    10. '+)' → logprob: -9.672462463378906

Token 102: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1602320373058319
    2. ' right' → logprob: -1.9102320671081543
    3. ' ' → logprob: -12.035231590270996
    4. '	right' → logprob: -14.035231590270996
    5. '   ' → logprob: -14.660231590270996
    6. '[right' → logprob: -15.660231590270996
    7. '  ' → logprob: -16.035232543945312
    8. '(right' → logprob: -16.035232543945312
    9. ')' → logprob: -16.660232543945312
    10. ',right' → logprob: -16.785232543945312

Token 103: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0037629054859280586
    2. ')' → logprob: -5.628762722015381
    3. '   ' → logprob: -9.378763198852539
    4. ')

' → logprob: -10.253763198852539
    5. ')
' → logprob: -10.253763198852539
    6. ' )
' → logprob: -11.878763198852539
    7. ')`
' → logprob: -15.128763198852539
    8. '')
' → logprob: -16.00376319885254
    9. ' ' → logprob: -16.25376319885254
    10. '")
' → logprob: -16.37876319885254

Token 104: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1918460130691528
    2. '
' → logprob: -1.3168460130691528
    3. ' return' → logprob: -1.5668460130691528
    4. '<|end|>' → logprob: -1.8168460130691528
    5. ')' → logprob: -3.9418458938598633
    6. '	return' → logprob: -4.441845893859863
    7. ' 
' → logprob: -4.941845893859863
    8. ' ' → logprob: -5.191845893859863
    9. 'return' (adapté à ' return') → logprob: -5.316845893859863
    10. '    
' → logprob: -6.441845893859863

Token 106: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16022443771362305
    2. ' m' → logprob: -1.910224437713623
    3. 'str' → logprob: -16.28522491455078
    4. ' ' → logprob: -16.53522491455078
    5. ' str' → logprob: -16.78522491455078
    6. '	m' → logprob: -17.53522491455078
    7. ' ' → logprob: -17.78522491455078
    8. '   ' → logprob: -18.66022491455078
    9. '  ' → logprob: -19.53522491455078
    10. ''m' → logprob: -19.66022491455078

Token 107: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021881243214011192
    2. 'N' → logprob: -4.146881103515625
    3. ')' → logprob: -6.021881103515625
    4. '<|end|>' → logprob: -6.771881103515625
    5. 'result' → logprob: -7.271881103515625
    6. '#' → logprob: -7.896881103515625
    7. 'n' → logprob: -8.771881103515625
    8. ' print' → logprob: -8.771881103515625
    9. '(' → logprob: -9.146881103515625
    10. 'pr' → logprob: -9.396881103515625

Token 109: ' Version' (ID: 10004)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0036197893787175417
    2. ' print' → logprob: -6.00361967086792
    3. 'result' → logprob: -7.00361967086792
    4. 'pr' → logprob: -9.878620147705078
    5. ' result' → logprob: -10.128620147705078
    6. 'p' → logprob: -10.253620147705078
    7. 'answer' → logprob: -10.253620147705078
    8. 'N' → logprob: -11.003620147705078
    9. 'ans' → logprob: -12.128620147705078
    10. '#' → logprob: -12.128620147705078

Token 110: ' fonction' (ID: 17610)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8344898223876953
    2. ' =' → logprob: -1.0844898223876953
    3. '=' → logprob: -2.2094898223876953
    4. ' ' → logprob: -2.3344898223876953
    5. ':' → logprob: -5.084489822387695
    6. '2' → logprob: -5.209489822387695
    7. 'def' → logprob: -6.459489822387695
    8. 's' → logprob: -6.709489822387695
    9. ' _' → logprob: -7.209489822387695
    10. '1' → logprob: -7.209489822387695

Token 111: 'nelle' (ID: 30805)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012535653077065945
    2. ')' → logprob: -8.251253128051758
    3. '()' → logprob: -8.501253128051758
    4. '#' → logprob: -8.751253128051758
    5. ':' → logprob: -8.876253128051758
    6. ' def' → logprob: -9.126253128051758
    7. 's' → logprob: -9.251253128051758
    8. '```' → logprob: -9.751253128051758
    9. '(
' → logprob: -10.501253128051758
    10. '<|end|>' → logprob: -10.626253128051758

Token 112: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04551788046956062
    2. 'N' → logprob: -3.920517921447754
    3. '#' → logprob: -4.045517921447754
    4. 'print' → logprob: -6.420517921447754
    5. ')' → logprob: -6.545517921447754
    6. '```' → logprob: -7.045517921447754
    7. '<|end|>' → logprob: -7.545517921447754
    8. '(' → logprob: -7.670517921447754
    9. ' def' → logprob: -8.420517921447754
    10. '(
' → logprob: -8.545517921447754

Token 113: 'à' (ID: 708)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6728600263595581
    2. ' "' → logprob: -2.5478601455688477
    3. ' optim' → logprob: -2.6728601455688477
    4. 'optim' → logprob: -2.6728601455688477
    5. ' optimale' → logprob: -2.9228601455688477
    6. 'def' → logprob: -3.2978601455688477
    7. ' optimized' → logprob: -3.9228601455688477
    8. ')' → logprob: -4.297860145568848
    9. 'nelle' → logprob: -4.297860145568848
    10. ' complète' → logprob: -4.672860145568848

Token 114: ' la' (ID: 557)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5549420714378357
    2. 'l' → logprob: -1.5549421310424805
    3. 'la' → logprob: -2.5549421310424805
    4. 'contin' → logprob: -4.3049421310424805
    5. 'pe' → logprob: -4.5549421310424805
    6. 'usage' → logprob: -4.6799421310424805
    7. 'jour' → logprob: -4.8049421310424805
    8. 'termin' → logprob: -4.9299421310424805
    9. 'fonction' → logprob: -4.9299421310424805
    10. 'compl' → logprob: -5.0549421310424805

Token 115: ' map' (ID: 4014)
  Prédit: 'mode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mode' → logprob: -0.6833194494247437
    2. 'python' → logprob: -2.308319568634033
    3. 'fonction' → logprob: -2.308319568634033
    4. 'functional' → logprob: -2.558319568634033
    5. 'H' → logprob: -2.808319568634033
    6. 'Python' → logprob: -2.808319568634033
    7. 'main' → logprob: -3.808319568634033
    8. 'h' → logprob: -3.808319568634033
    9. 'func' → logprob: -5.183319568634033
    10. 'mod' → logprob: -5.558319568634033

Token 116: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06410915404558182
    2. ')"' → logprob: -3.3141090869903564
    3. 'def' → logprob: -5.4391093254089355
    4. ')' → logprob: -5.6891093254089355
    5. '"
' → logprob: -5.6891093254089355
    6. '()"' → logprob: -5.8141093254089355
    7. ' "' → logprob: -6.1891093254089355
    8. '("' → logprob: -6.4391093254089355
    9. 's' → logprob: -6.5641093254089355
    10. ',' → logprob: -6.8141093254089355

Token 117: 'print' (ID: 1598)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08648692816495895
    2. 'f' → logprob: -3.58648681640625
    3. 's' → logprob: -3.96148681640625
    4. 'solver' → logprob: -4.58648681640625
    5. 'S' → logprob: -5.58648681640625
    6. 'res' → logprob: -5.83648681640625
    7. 'result' → logprob: -6.21148681640625
    8. 'from' → logprob: -6.21148681640625
    9. 'mapper' → logprob: -6.21148681640625
    10. ')' → logprob: -6.83648681640625

Token 118: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00845453143119812
    2. '(s' → logprob: -5.383454322814941
    3. '(map' → logprob: -6.133454322814941
    4. '(list' → logprob: -7.633454322814941
    5. '(min' → logprob: -7.758454322814941
    6. '(
' → logprob: -8.008454322814941
    7. '(sum' → logprob: -8.508454322814941
    8. '(max' → logprob: -9.758454322814941
    9. '('' → logprob: -10.133454322814941
    10. '("' → logprob: -10.508454322814941

Token 119: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.15384308993816376
    2. 'min' → logprob: -2.0288431644439697
    3. 'N' → logprob: -5.278842926025391
    4. 'solver' → logprob: -6.153842926025391
    5. 'map' → logprob: -6.278842926025391
    6. '(lambda' → logprob: -7.028842926025391
    7. 'len' → logprob: -8.15384292602539
    8. ' lambda' → logprob: -8.27884292602539
    9. 'sum' → logprob: -9.02884292602539
    10. 'm' → logprob: -9.02884292602539

Token 120: ' f' (ID: 285)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5871260166168213
    2. 's' → logprob: -0.8371260166168213
    3. ' S' → logprob: -6.462125778198242
    4. 'S' → logprob: -6.462125778198242
    5. 'x' → logprob: -6.587125778198242
    6. ' x' → logprob: -6.712125778198242
    7. ' l' → logprob: -6.837125778198242
    8. 'lambda' → logprob: -6.962125778198242
    9. 'l' → logprob: -7.087125778198242
    10. 'N' → logprob: -7.337125778198242

Token 121: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0063964310102164745
    2. ' :' → logprob: -6.631396293640137
    3. 'lambda' → logprob: -6.881396293640137
    4. '=lambda' → logprob: -6.881396293640137
    5. '(lambda' → logprob: -7.006396293640137
    6. 'f' → logprob: -7.256396293640137
    7. ',' → logprob: -7.881396293640137
    8. 's' → logprob: -8.506396293640137
    9. ':s' → logprob: -9.006396293640137
    10. 'n' → logprob: -9.131396293640137

Token 122: ' arg' (ID: 2341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09326719492673874
    2. ' s' → logprob: -2.7182672023773193
    3. 'x' → logprob: -4.59326696395874
    4. 'l' → logprob: -5.34326696395874
    5. 'lst' → logprob: -5.84326696395874
    6. 'N' → logprob: -6.34326696395874
    7. 'S' → logprob: -7.09326696395874
    8. 'n' → logprob: -7.09326696395874
    9. ' x' → logprob: -7.71826696395874
    10. 'arr' → logprob: -7.96826696395874

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002408946631476283
    2. ':f' → logprob: -6.752408981323242
    3. ' :' → logprob: -6.877408981323242
    4. ':(' → logprob: -9.002408981323242
    5. 's' → logprob: -10.377408981323242
    6. 'f' → logprob: -11.252408981323242
    7. ':
' → logprob: -11.252408981323242
    8. ',' → logprob: -12.002408981323242
    9. ':s' → logprob: -12.877408981323242
    10. '=' → logprob: -12.877408981323242

Token 124: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.023471178486943245
    2. ' f' → logprob: -4.148471355438232
    3. 'print' → logprob: -5.523471355438232
    4. '(f' → logprob: -7.273471355438232
    5. '[' → logprob: -7.523471355438232
    6. '[f' → logprob: -7.898471355438232
    7. 'list' → logprob: -8.273470878601074
    8. 'None' → logprob: -8.273470878601074
    9. 'lambda' → logprob: -8.898470878601074
    10. '   ' → logprob: -8.898470878601074

Token 125: '(arg' (ID: 19030)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.015416761860251427
    2. '(s' → logprob: -4.890416622161865
    3. '(arg' → logprob: -5.390416622161865
    4. '(' → logprob: -7.015416622161865
    5. '(lambda' → logprob: -7.140416622161865
    6. ')(' → logprob: -7.515416622161865
    7. ',' → logprob: -8.265417098999023
    8. '(
' → logprob: -8.640417098999023
    9. ')' → logprob: -9.140417098999023
    10. '((' → logprob: -9.265417098999023

Token 126: '))(' (ID: 72297)
  Prédit: '))('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))(' → logprob: -0.016712188720703125
    2. '))' → logprob: -4.266712188720703
    3. ')' → logprob: -6.766712188720703
    4. '))[' → logprob: -7.016712188720703
    5. ')))' → logprob: -7.891712188720703
    6. ')
' → logprob: -10.516712188720703
    7. ' ))' → logprob: -11.141712188720703
    8. '[' → logprob: -11.141712188720703
    9. ')(' → logprob: -11.516712188720703
    10. '))
' → logprob: -11.641712188720703

Token 127: 'solver' (ID: 156403)
  Prédit: 'solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.001758956117555499
    2. ' solver' → logprob: -6.376759052276611
    3. 'lambda' → logprob: -10.751758575439453
    4. '
' → logprob: -11.001758575439453
    5. '   ' → logprob: -11.876758575439453
    6. ' ' → logprob: -12.626758575439453
    7. 'sol' → logprob: -12.876758575439453
    8. '  ' → logprob: -14.001758575439453
    9. '(s' → logprob: -14.501758575439453
    10. '
' → logprob: -14.626758575439453

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003414751496165991
    2. ',S' → logprob: -5.753414630889893
    3. ' ,' → logprob: -8.62841510772705
    4. ',
' → logprob: -10.62841510772705
    5. 'S' → logprob: -11.00341510772705
    6. '(S' → logprob: -11.62841510772705
    7. ')' → logprob: -12.50341510772705
    8. ' ' → logprob: -14.00341510772705
    9. ',s' → logprob: -14.25341510772705
    10. '   ' → logprob: -14.37841510772705

Token 129: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014172090217471123
    2. ' S' → logprob: -4.264172077178955
    3. ' ' → logprob: -12.389172554016113
    4. '(S' → logprob: -13.264172554016113
    5. '   ' → logprob: -14.139172554016113
    6. '  ' → logprob: -14.764172554016113
    7. '[S' → logprob: -14.764172554016113
    8. 'list' → logprob: -15.639172554016113
    9. 's' → logprob: -15.764172554016113
    10. '	S' → logprob: -15.889172554016113

Token 130: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009152670972980559
    2. ')' → logprob: -7.000915050506592
    3. ')))' → logprob: -12.87591552734375
    4. '))
' → logprob: -13.87591552734375
    5. '),' → logprob: -16.50091552734375
    6. '()))' → logprob: -16.75091552734375
    7. ')
' → logprob: -16.87591552734375
    8. ' ))' → logprob: -16.87591552734375
    9. '));' → logprob: -17.62591552734375
    10. ''))' → logprob: -17.75091552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 128
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 33.59%
Précision adaptée (1ère position): 34.38%
Précision (top 10): 73.44%
================================================================================
