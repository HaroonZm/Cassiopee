================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_mod():
    return 10**9+7

def init_arrays(n):
    arr = [1] * (n + 1)
    return arr[:], arr[:], arr[:]

def compute_k(n, mod, k):
    for i in range(1, n + 1):
        k[i] = k[i-1] * i % mod

def compute_gk(n, mod, k, gk):
    gk[n] = pow(k[n], mod - 2, mod)
    for i in range(n, 0, -1):
        gk[i-1] = gk[i] * i % mod

def compute_kb1(n, gk, k, kb1, mod):
    for i in range(1, n + 1):
        kb1[i] = gk[i] * k[i-1] % mod

def compute_kerui(n, kb1, kerui, mod):
    for i in range(1, n + 1):
        kerui[i] = (kerui[i-1] + kb1[i]) % mod

def get_kerui(n, gk, k, mod):
    kb1 = [1] * (n + 1)
    compute_kb1(n, gk, k, kb1, mod)
    kerui = [0] * (n + 1)
    compute_kerui(n, kb1, kerui, mod)
    return kerui

def calc_ans(n, a, kerui, k, mod):
    ans = 0
    for i in range(n):
        temp = (kerui[i+1] + kerui[n-i] - 1) % mod
        ans = (ans + a[i] * temp) % mod
    ans = (ans * k[n]) % mod
    return ans

def remov(n, a):
    mod = get_mod()
    k, gk, kb1 = init_arrays(n)
    compute_k(n, mod, k)
    compute_gk(n, mod, k, gk)
    kerui = get_kerui(n, gk, k, mod)
    return calc_ans(n, a, kerui, k, mod)

def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    print(remov(n, a))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_mod' (ID: 15325)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2819235324859619
    2. 'ule' → logprob: -1.656923532485962
    3. '```' → logprob: -4.281923294067383
    4. 'el' → logprob: -4.781923294067383
    5. '(_' → logprob: -4.906923294067383
    6. 'er' → logprob: -5.031923294067383
    7. 'ul' → logprob: -5.406923294067383
    8. '(' → logprob: -6.031923294067383
    9. '_def' → logprob: -6.031923294067383
    10. 'def' → logprob: -6.156923294067383

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4659706652164459
    2. '\n' → logprob: -2.215970754623413
    3. '\' → logprob: -2.465970754623413
    4. '```' → logprob: -2.715970754623413
    5. '():' → logprob: -3.090970754623413
    6. '   ' → logprob: -3.715970754623413
    7. '(' → logprob: -4.215970516204834
    8. ':return' → logprob: -5.215970516204834
    9. '    
' → logprob: -5.340970516204834
    10. '()' → logprob: -5.840970516204834

Token 5: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6781418323516846
    2. '   ' → logprob: -1.8031418323516846
    3. 'return' (adapté à ' return') → logprob: -1.9281418323516846
    4. 'm' → logprob: -2.1781418323516846
    5. '(' → logprob: -3.6781418323516846
    6. '```' → logprob: -4.0531415939331055
    7. ' ' → logprob: -5.1781415939331055
    8. 'a' → logprob: -5.3031415939331055
    9. '_' → logprob: -5.6781415939331055
    10. 'x' → logprob: -6.1781415939331055

Token 6: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1116490289568901
    2. '"' → logprob: -3.1116490364074707
    3. ' None' → logprob: -3.7366490364074707
    4. '0' → logprob: -4.611649036407471
    5. ''' → logprob: -4.736649036407471
    6. ' "' → logprob: -5.611649036407471
    7. ' '' → logprob: -5.736649036407471
    8. '32' → logprob: -6.111649036407471
    9. '1' → logprob: -6.986649036407471
    10. ' _' → logprob: -7.111649036407471

Token 7: '10' (ID: 702)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.719819188117981
    2. 'mod' → logprob: -1.594819188117981
    3. '__' → logprob: -2.4698190689086914
    4. '42' → logprob: -2.9698190689086914
    5. '0' → logprob: -3.4698190689086914
    6. '"' → logprob: -3.8448190689086914
    7. '10' → logprob: -4.219819068908691
    8. 'import' → logprob: -4.219819068908691
    9. '1' → logprob: -4.219819068908691
    10. ' ' → logprob: -4.969819068908691

Token 8: '**' (ID: 410)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1860591173171997
    2. '*' → logprob: -1.3110591173171997
    3. '%' → logprob: -1.6860591173171997
    4. '.' → logprob: -2.93605899810791
    5. '+' → logprob: -2.93605899810791
    6. '(' → logprob: -3.06105899810791
    7. ':' → logprob: -3.81105899810791
    8. '\' → logprob: -3.81105899810791
    9. '\n' → logprob: -4.31105899810791
    10. ')' → logprob: -5.18605899810791

Token 9: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8372513651847839
    2. '9' → logprob: -0.8372513651847839
    3. '2' → logprob: -2.8372514247894287
    4. '5' → logprob: -3.2122514247894287
    5. '3' → logprob: -3.5872514247894287
    6. '-' → logprob: -5.83725118637085
    7. '4' → logprob: -5.96225118637085
    8. '8' → logprob: -7.21225118637085
    9. '7' → logprob: -7.46225118637085
    10. '```' → logprob: -8.087251663208008

Token 10: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.143808109802194e-05
    2. ' +' → logprob: -10.125041007995605
    3. '```' → logprob: -14.625041007995605
    4. '+

' → logprob: -15.375041007995605
    5. '+++' → logprob: -15.875041007995605
    6. '+
' → logprob: -16.000041961669922
    7. '`' → logprob: -16.250041961669922
    8. '++' → logprob: -16.750041961669922
    9. '"+"' → logprob: -16.875041961669922
    10. '＋' → logprob: -17.375041961669922

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.625
    3. '9' → logprob: -18.375
    4. '```' → logprob: -19.25
    5. ' ' → logprob: -19.375
    6. '   ' → logprob: -21.0
    7. '07' → logprob: -21.75
    8. '10' → logprob: -22.0
    9. '1' → logprob: -22.25
    10. '37' → logprob: -22.5

Token 12: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1145377159118652
    2. '```' → logprob: -1.6145377159118652
    3. '<|end|>' → logprob: -1.7395377159118652
    4. '\' → logprob: -2.4895377159118652
    5. '\n' → logprob: -2.4895377159118652
    6. '
' → logprob: -3.2395377159118652
    7. '*' → logprob: -3.9895377159118652
    8. '' → logprob: -4.114537715911865
    9. '(' → logprob: -4.114537715911865
    10. ')' → logprob: -4.739537715911865

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0413086414337158
    2. '<|end|>' → logprob: -1.0413086414337158
    3. '
' → logprob: -2.166308641433716
    4. '```' → logprob: -2.916308641433716
    5. '()' → logprob: -3.416308641433716
    6. '\n' → logprob: -3.791308641433716
    7. '#' → logprob: -4.541308403015137
    8. '(
' → logprob: -4.666308403015137
    9. '*' → logprob: -4.666308403015137
    10. ')' → logprob: -4.916308403015137

Token 14: ' init' (ID: 6327)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.005609015468508005
    2. ' add' → logprob: -6.505609035491943
    3. ' space' → logprob: -6.630609035491943
    4. ' ' → logprob: -7.130609035491943
    5. ' calculate' → logprob: -7.380609035491943
    6. ' gcd' → logprob: -8.630608558654785
    7. ' factorial' → logprob: -9.005608558654785
    8. ' main' → logprob: -9.005608558654785
    9. ' compute' → logprob: -9.255608558654785
    10. ' ' → logprob: -9.630608558654785

Token 15: '_arrays' (ID: 182581)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47774261236190796
    2. '(' → logprob: -0.977742612361908
    3. ' (' → logprob: -7.477742671966553
    4. '_array' → logprob: -7.477742671966553
    5. '_(' → logprob: -8.102742195129395
    6. '(_)' → logprob: -8.102742195129395
    7. '```' → logprob: -8.227742195129395
    8. '(_' → logprob: -8.352742195129395
    9. ' _' → logprob: -8.852742195129395
    10. '_map' → logprob: -8.977742195129395

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013980964198708534
    2. '_' → logprob: -4.513980865478516
    3. '```' → logprob: -6.763980865478516
    4. ' (' → logprob: -8.138980865478516
    5. '("("' → logprob: -8.388980865478516
    6. '   ' → logprob: -8.388980865478516
    7. '[' → logprob: -8.513980865478516
    8. '((' → logprob: -9.513980865478516
    9. '()' → logprob: -9.513980865478516
    10. ''' → logprob: -9.888980865478516

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025000574067234993
    2. ',' → logprob: -3.77500057220459
    3. ')' → logprob: -6.65000057220459
    4. ' ):' → logprob: -8.15000057220459
    5. '):
' → logprob: -9.40000057220459
    6. ' ,' → logprob: -9.90000057220459
    7. ',n' → logprob: -11.27500057220459
    8. ':' → logprob: -11.40000057220459
    9. ' )' → logprob: -12.90000057220459
    10. '   ' → logprob: -13.52500057220459

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0351194329559803
    2. '    
' → logprob: -4.660119533538818
    3. 'a' → logprob: -4.910119533538818
    4. '```' → logprob: -5.410119533538818
    5. '<|end|>' → logprob: -5.785119533538818
    6. '    ' → logprob: -5.910119533538818
    7. 'n' → logprob: -7.160119533538818
    8. '
' → logprob: -7.410119533538818
    9. '\' → logprob: -7.660119533538818
    10. 'A' → logprob: -7.660119533538818

Token 19: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12319934368133545
    2. 'a' → logprob: -3.623199462890625
    3. ' return' → logprob: -3.873199462890625
    4. ' result' → logprob: -3.998199462890625
    5. ' dp' → logprob: -4.873199462890625
    6. ' A' → logprob: -4.998199462890625
    7. ' a' → logprob: -4.998199462890625
    8. 'A' → logprob: -5.498199462890625
    9. 'dp' → logprob: -5.498199462890625
    10. '    ' → logprob: -5.498199462890625

Token 20: ' =' (ID: 314)
  Prédit: 'ays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -0.3598988652229309
    2. ' =' → logprob: -1.2348988056182861
    3. 'ay' → logprob: -4.609899044036865
    4. '   ' → logprob: -7.859899044036865
    5. 's' → logprob: -8.234898567199707
    6. 'a' → logprob: -8.484898567199707
    7. '=' → logprob: -8.609898567199707
    8. '_' → logprob: -9.234898567199707
    9. ' ' → logprob: -9.609898567199707
    10. '1' → logprob: -9.734898567199707

Token 21: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07906174659729004
    2. '[' → logprob: -2.57906174659729
    3. '[n' → logprob: -8.829061508178711
    4. ' ' → logprob: -11.829061508178711
    5. '[int' → logprob: -12.579061508178711
    6. '[s' → logprob: -13.329061508178711
    7. '[a' → logprob: -13.329061508178711
    8. '[]' → logprob: -13.329061508178711
    9. ' []' → logprob: -13.829061508178711
    10. ' [-' → logprob: -14.204061508178711

Token 22: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.625005722045898
    3. '[' → logprob: -14.000005722045898
    4. ']' → logprob: -14.750005722045898
    5. '1' → logprob: -15.000005722045898
    6. '-' → logprob: -15.000005722045898
    7. ' [' → logprob: -16.3750057220459
    8. 'None' → logprob: -16.3750057220459
    9. ')' → logprob: -16.5000057220459
    10. '[]' → logprob: -17.0000057220459

Token 23: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008445902727544308
    2. ' ]' → logprob: -5.508445739746094
    3. ']*' → logprob: -5.758445739746094
    4. ']*(' → logprob: -7.383445739746094
    5. ' for' → logprob: -7.633445739746094
    6. ',' → logprob: -9.883445739746094
    7. ']+' → logprob: -10.883445739746094
    8. ')' → logprob: -11.633445739746094
    9. 'for' → logprob: -12.508445739746094
    10. ' ' → logprob: -12.508445739746094

Token 24: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15190184116363525
    2. ' for' → logprob: -2.5269017219543457
    3. ',' → logprob: -3.5269017219543457
    4. ' ]' → logprob: -3.9019017219543457
    5. ']*' → logprob: -5.901901721954346
    6. ']+' → logprob: -6.151901721954346
    7. '*' → logprob: -6.276901721954346
    8. ']*(' → logprob: -6.651901721954346
    9. 'for' → logprob: -6.776901721954346
    10. '+' → logprob: -7.026901721954346

Token 25: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18096035718917847
    2. ' n' → logprob: -1.9309604167938232
    3. '(n' → logprob: -4.055960178375244
    4. ' (' → logprob: -5.805960178375244
    5. '(' → logprob: -8.555960655212402
    6. '	n' → logprob: -13.680960655212402
    7. ' ' → logprob: -15.305960655212402
    8. ')n' → logprob: -15.555960655212402
    9. '_n' → logprob: -15.930960655212402
    10. ',n' → logprob: -16.055959701538086

Token 26: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03804688900709152
    2. ' n' → logprob: -3.2880468368530273
    3. '(n' → logprob: -12.413046836853027
    4. ' (' → logprob: -14.538046836853027
    5. ')n' → logprob: -14.663046836853027
    6. '	n' → logprob: -16.038047790527344
    7. ' ' → logprob: -16.288047790527344
    8. '   ' → logprob: -16.413047790527344
    9. '(' → logprob: -16.538047790527344
    10. '_n' → logprob: -17.788047790527344

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5919724106788635
    2. ')' → logprob: -0.8419724106788635
    3. ' )' → logprob: -4.591972351074219
    4. ' +' → logprob: -5.216972351074219
    5. ' ' → logprob: -8.716972351074219
    6. '*' → logprob: -9.341972351074219
    7. ' *' → logprob: -10.716972351074219
    8. '-' → logprob: -11.216972351074219
    9. '+)' → logprob: -11.341972351074219
    10. '<|end|>' → logprob: -11.591972351074219

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14293435215950012
    2. ' ' → logprob: -2.0179343223571777
    3. '2' → logprob: -8.267934799194336
    4. '  ' → logprob: -14.392934799194336
    5. ')' → logprob: -14.642934799194336
    6. '10' → logprob: -15.017934799194336
    7. '7' → logprob: -15.017934799194336
    8. '```' → logprob: -15.580434799194336
    9. '   ' → logprob: -15.705434799194336
    10. '3' → logprob: -16.205434799194336

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018387178715784103
    2. ' ' → logprob: -9.250184059143066
    3. '2' → logprob: -9.375184059143066
    4. '7' → logprob: -13.500184059143066
    5. '   ' → logprob: -14.500184059143066
    6. '  ' → logprob: -15.000184059143066
    7. '5' → logprob: -15.562684059143066
    8. '10' → logprob: -15.875184059143066
    9. '```' → logprob: -16.31268310546875
    10. '3' → logprob: -16.75018310546875

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001063655479811132
    2. ')
' → logprob: -6.876063823699951
    3. ' )' → logprob: -11.376063346862793
    4. ')
' → logprob: -12.001063346862793
    5. ')

' → logprob: -12.126063346862793
    6. '<|end|>' → logprob: -12.751063346862793
    7. ')return' → logprob: -13.876063346862793
    8. '   ' → logprob: -14.126063346862793
    9. '```' → logprob: -14.126063346862793
    10. '}' → logprob: -14.876063346862793

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06849456578493118
    2. ' ' → logprob: -3.1934945583343506
    3. '
' → logprob: -5.06849479675293
    4. '    
' → logprob: -5.19349479675293
    5. '<|end|>' → logprob: -5.56849479675293
    6. ' 
' → logprob: -5.81849479675293
    7. 'return' → logprob: -6.81849479675293
    8. ')' → logprob: -6.94349479675293
    9. '  
' → logprob: -7.06849479675293
    10. ' return' → logprob: -7.31849479675293

Token 32: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4484593868255615
    2. ' for' → logprob: -1.5734593868255615
    3. 'dp' → logprob: -1.6984593868255615
    4. 'pow' → logprob: -2.8234593868255615
    5. 'fact' → logprob: -2.8234593868255615
    6. '   ' → logprob: -2.9484593868255615
    7. 'prefix' → logprob: -2.9484593868255615
    8. ' dp' → logprob: -3.6984593868255615
    9. ' prefix' → logprob: -4.073459625244141
    10. 'inv' → logprob: -4.198459625244141

Token 33: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.1605577915906906
    2. 'arr' → logprob: -1.910557746887207
    3. '	arr' → logprob: -8.785557746887207
    4. '[arr' → logprob: -9.160557746887207
    5. '(arr' → logprob: -10.410557746887207
    6. ' ' → logprob: -10.535557746887207
    7. '<arr' → logprob: -11.910557746887207
    8. '_arr' → logprob: -12.660557746887207
    9. '$arr' → logprob: -12.910557746887207
    10. ' ' → logprob: -12.910557746887207

Token 34: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6221953630447388
    2. 'n' → logprob: -0.9971953630447388
    3. ']' → logprob: -2.497195243835449
    4. '])' → logprob: -4.747195243835449
    5. '-' → logprob: -6.372195243835449
    6. ')]' → logprob: -8.12219524383545
    7. ')n' → logprob: -8.12219524383545
    8. '1' → logprob: -8.37219524383545
    9. ')])' → logprob: -8.37219524383545
    10. ' )' → logprob: -8.74719524383545

Token 36: ' arr' (ID: 1724)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4419057071208954
    2. '<|end|>' → logprob: -2.0669057369232178
    3. 'arr' → logprob: -2.1919057369232178
    4. '[' → logprob: -3.0669057369232178
    5. ' arr' → logprob: -3.4419057369232178
    6. '    ' → logprob: -4.816905498504639
    7. ' 
' → logprob: -5.066905498504639
    8. ' []' → logprob: -5.316905498504639
    9. 'def' → logprob: -5.566905498504639
    10. '[]' → logprob: -6.191905498504639

Token 37: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5897226929664612
    2. ']' → logprob: -0.8397226929664612
    3. '])' → logprob: -5.214722633361816
    4. ')]' → logprob: -5.589722633361816
    5. '(n' → logprob: -5.964722633361816
    6. 'n' → logprob: -6.839722633361816
    7. '1' → logprob: -8.964722633361816
    8. ' )' → logprob: -9.089722633361816
    9. ')])' → logprob: -9.339722633361816
    10. '(' → logprob: -9.464722633361816

Token 39: ' arr' (ID: 1724)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8464530110359192
    2. 'arr' → logprob: -1.3464529514312744
    3. '[' → logprob: -1.9714529514312744
    4. ' arr' → logprob: -2.0964529514312744
    5. ' []' → logprob: -3.9714529514312744
    6. ' ' → logprob: -4.4714531898498535
    7. '[arr' → logprob: -4.9714531898498535
    8. '[]' → logprob: -5.3464531898498535
    9. '<|end|>' → logprob: -5.7214531898498535
    10. '[n' → logprob: -6.9714531898498535

Token 40: '[:' (ID: 7808)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3824680745601654
    2. ',' → logprob: -1.3824681043624878
    3. '<|end|>' → logprob: -3.8824679851531982
    4. '_' → logprob: -4.257468223571777
    5. '_,' → logprob: -5.007468223571777
    6. 'arr' → logprob: -5.132468223571777
    7. 'n' → logprob: -5.507468223571777
    8. '[' → logprob: -5.882468223571777
    9. ',
' → logprob: -6.882468223571777
    10. '0' → logprob: -6.882468223571777

Token 41: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ' )' → logprob: -11.87502670288086
    3. 'n' → logprob: -12.12502670288086
    4. '(n' → logprob: -12.50002670288086
    5. '),' → logprob: -13.12502670288086
    6. '1' → logprob: -13.12502670288086
    7. ']' → logprob: -13.25002670288086
    8. ')n' → logprob: -13.37502670288086
    9. '(' → logprob: -14.00002670288086
    10. ',' → logprob: -14.75002670288086

Token 42: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9264162182807922
    2. 'def' → logprob: -1.0514161586761475
    3. '
' → logprob: -2.4264161586761475
    4. 'n' → logprob: -3.0514161586761475
    5. ',' → logprob: -3.5514161586761475
    6. 'd' → logprob: -3.8014161586761475
    7. '<|end|>' → logprob: -4.301416397094727
    8. '\' → logprob: -5.176416397094727
    9. '```' → logprob: -5.176416397094727
    10. ' ' → logprob: -5.426416397094727

Token 43: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.3779573440551758
    2. ' factorial' → logprob: -1.5029573440551758
    3. ' multiply' → logprob: -1.5029573440551758
    4. ' calculate' → logprob: -2.502957344055176
    5. ' calc' → logprob: -2.877957344055176
    6. ' solve' → logprob: -3.377957344055176
    7. ' main' → logprob: -3.877957344055176
    8. ' process' → logprob: -4.377957344055176
    9. ' pow' → logprob: -4.377957344055176
    10. ' init' → logprob: -4.502957344055176

Token 44: '_k' (ID: 11637)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.3504946827888489
    2. '_' → logprob: -1.600494623184204
    3. '_dp' → logprob: -3.350494623184204
    4. '_f' → logprob: -4.350494861602783
    5. '_mod' → logprob: -4.850494861602783
    6. '_power' → logprob: -4.975494861602783
    7. '_prefix' → logprob: -5.100494861602783
    8. '_hash' → logprob: -5.350494861602783
    9. '_pow' → logprob: -5.350494861602783
    10. '(' → logprob: -5.975494861602783

Token 45: '(n' (ID: 2406)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.3392796516418457
    2. '_pow' → logprob: -1.7142796516418457
    3. 'pow' → logprob: -1.8392796516418457
    4. '_power' → logprob: -2.9642796516418457
    5. '_sum' → logprob: -3.0892796516418457
    6. 'mp' → logprob: -3.3392796516418457
    7. '(n' → logprob: -3.3392796516418457
    8. 'th' → logprob: -3.5892796516418457
    9. '(k' → logprob: -4.214279651641846
    10. '_values' → logprob: -4.214279651641846

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8288407325744629
    2. ')' → logprob: -1.078840732574463
    3. '):' → logprob: -1.578840732574463
    4. ',k' → logprob: -4.453840732574463
    5. 'k' → logprob: -6.703840732574463
    6. '_' → logprob: -7.203840732574463
    7. '*' → logprob: -7.328840732574463
    8. '_k' → logprob: -7.453840732574463
    9. '+' → logprob: -7.828840732574463
    10. '-' → logprob: -8.578840255737305

Token 47: ' mod' (ID: 1812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3390730023384094
    2. ' k' → logprob: -2.0890729427337646
    3. 'm' → logprob: -2.3390729427337646
    4. ' m' → logprob: -3.5890729427337646
    5. 'arr' → logprob: -4.714073181152344
    6. 'a' → logprob: -5.089073181152344
    7. ' arr' → logprob: -5.839073181152344
    8. ' a' → logprob: -5.964073181152344
    9. 'r' → logprob: -6.089073181152344
    10. 'mod' → logprob: -6.276573181152344

Token 48: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01045543234795332
    2. ',' → logprob: -4.63545560836792
    3. ')' → logprob: -7.38545560836792
    4. '=' → logprob: -10.510455131530762
    5. ' ):' → logprob: -11.010455131530762
    6. ':' → logprob: -11.385455131530762
    7. '):
' → logprob: -11.635455131530762
    8. ',n' → logprob: -12.635455131530762
    9. '),' → logprob: -13.135455131530762
    10. ',k' → logprob: -13.260455131530762

Token 49: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9323168396949768
    2. 'k' → logprob: -1.057316780090332
    3. ' arr' → logprob: -2.557316780090332
    4. 'arr' → logprob: -2.682316780090332
    5. ' a' → logprob: -3.682316780090332
    6. 'a' → logprob: -4.432316780090332
    7. ' m' → logprob: -4.557316780090332
    8. ' dp' → logprob: -4.682316780090332
    9. 'm' → logprob: -5.057316780090332
    10. 'dp' → logprob: -5.182316780090332

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01270705834031105
    2. ')' → logprob: -4.887707233428955
    3. '_' → logprob: -6.387707233428955
    4. 's' → logprob: -6.387707233428955
    5. ',' → logprob: -7.637707233428955
    6. '[' → logprob: -7.762707233428955
    7. ' ):' → logprob: -8.512706756591797
    8. '[]):' → logprob: -8.762706756591797
    9. '=' → logprob: -10.012706756591797
    10. '):
' → logprob: -10.137706756591797

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06842832267284393
    2. '):' → logprob: -3.9434282779693604
    3. '[' → logprob: -4.4434285163879395
    4. ' :' → logprob: -4.6934285163879395
    5. '   ' → logprob: -4.8184285163879395
    6. ' ' → logprob: -6.3184285163879395
    7. '=' → logprob: -6.4434285163879395
    8. '[:]' → logprob: -6.6934285163879395
    9. '[k' → logprob: -6.6934285163879395
    10. '[n' → logprob: -6.9434285163879395

Token 52: ' for' (ID: 395)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2326819896697998
    2. ' ' → logprob: -1.4826819896697998
    3. ' k' → logprob: -1.6076819896697998
    4. ' for' → logprob: -1.7326819896697998
    5. 'n' → logprob: -3.6076819896698
    6. '   ' → logprob: -3.8576819896698
    7. 'for' (adapté à ' for') → logprob: -4.607682228088379
    8. ' :' → logprob: -4.732682228088379
    9. ':' → logprob: -4.982682228088379
    10. '(n' → logprob: -5.107682228088379

Token 53: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2976089417934418
    2. ' i' → logprob: -1.4226089715957642
    3. ' _' → logprob: -4.297608852386475
    4. '_' → logprob: -6.047608852386475
    5. 'i' → logprob: -8.172609329223633
    6. ' ' → logprob: -10.672609329223633
    7. ')' → logprob: -11.047609329223633
    8. ' ‌' → logprob: -11.297609329223633
    9. '  ' → logprob: -12.172609329223633
    10. ' space' → logprob: -12.797609329223633

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020301509648561478
    2. 'in' → logprob: -4.270301342010498
    3. ' ' → logprob: -5.145301342010498
    4. '  ' → logprob: -8.645301818847656
    5. '	in' → logprob: -10.145301818847656
    6. '   ' → logprob: -10.895301818847656
    7. 'n' → logprob: -11.395301818847656
    8. ' i' → logprob: -11.770301818847656
    9. '=' → logprob: -11.895301818847656
    10. '+' → logprob: -12.020301818847656

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002136697992682457
    2. ' ' → logprob: -6.627136707305908
    3. 'range' → logprob: -7.127136707305908
    4. '	range' → logprob: -12.87713623046875
    5. ' xrange' → logprob: -13.12713623046875
    6. '(range' → logprob: -13.37713623046875
    7. '  ' → logprob: -15.00213623046875
    8. ' ' → logprob: -15.25213623046875
    9. '[' → logprob: -16.00213623046875
    10. ' ran' → logprob: -16.00213623046875

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.519893501419574e-05
    2. ' ' → logprob: -9.87509536743164
    3. ' (' → logprob: -10.12509536743164
    4. '1' → logprob: -13.00009536743164
    5. '(n' → logprob: -14.00009536743164
    6. '(i' → logprob: -16.00009536743164
    7. '(
' → logprob: -16.25009536743164
    8. ')' → logprob: -16.50009536743164
    9. '2' → logprob: -16.62509536743164
    10. '   ' → logprob: -17.12509536743164

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013044105842709541
    2. '2' → logprob: -4.3880438804626465
    3. ' ' → logprob: -7.7630438804626465
    4. '   ' → logprob: -9.513044357299805
    5. 'n' → logprob: -10.513044357299805
    6. ' n' → logprob: -13.263044357299805
    7. 'k' → logprob: -13.263044357299805
    8. '3' → logprob: -13.638044357299805
    9. 'i' → logprob: -13.763044357299805
    10. '(' → logprob: -14.513044357299805

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005399646237492561
    2. ' ,' → logprob: -5.255399703979492
    3. ' ' → logprob: -9.255399703979492
    4. ',n' → logprob: -9.630399703979492
    5. ' n' → logprob: -13.130399703979492
    6. ',
' → logprob: -14.130399703979492
    7. 'n' → logprob: -14.380399703979492
    8. '‌,' → logprob: -14.755399703979492
    9. '<|end|>' → logprob: -15.880399703979492
    10. ')' → logprob: -16.317899703979492

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00975927896797657
    2. 'n' → logprob: -4.634759426116943
    3. ' ' → logprob: -13.134758949279785
    4. ' len' → logprob: -14.509758949279785
    5. 'len' → logprob: -15.134758949279785
    6. '	n' → logprob: -15.384758949279785
    7. ')n' → logprob: -15.634758949279785
    8. '<|end|>' → logprob: -16.7597599029541
    9. '(n' → logprob: -17.2597599029541
    10. ')' → logprob: -17.5097599029541

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27173110842704773
    2. ' +' → logprob: -1.5217311382293701
    3. '):' → logprob: -4.021730899810791
    4. ' ):' → logprob: -6.521730899810791
    5. '):
' → logprob: -8.77173137664795
    6. ' ' → logprob: -11.02173137664795
    7. ')' → logprob: -11.27173137664795
    8. '   ' → logprob: -11.89673137664795
    9. ' ):
' → logprob: -11.89673137664795
    10. ',' → logprob: -12.64673137664795

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03008021041750908
    2. ' ' → logprob: -3.5300803184509277
    3. ')' → logprob: -8.40507984161377
    4. '2' → logprob: -10.53007984161377
    5. '   ' → logprob: -10.90507984161377
    6. '<|end|>' → logprob: -10.90507984161377
    7. '):
' → logprob: -11.03007984161377
    8. '```' → logprob: -11.40507984161377
    9. '  ' → logprob: -12.78007984161377
    10. '+' → logprob: -12.78007984161377

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.875008583068848
    3. '2' → logprob: -13.250008583068848
    4. 'i' → logprob: -15.375008583068848
    5. '```' → logprob: -17.375009536743164
    6. '   ' → logprob: -17.875009536743164
    7. ')' → logprob: -17.875009536743164
    8. ' i' → logprob: -19.125009536743164
    9. '  ' → logprob: -19.187509536743164
    10. '۱' → logprob: -19.750009536743164

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001618526759557426
    2. ':' → logprob: -7.126618385314941
    3. ' ):' → logprob: -7.501618385314941
    4. '):
' → logprob: -8.376618385314941
    5. ',' → logprob: -11.001618385314941
    6. ')' → logprob: -11.626618385314941
    7. '+' → logprob: -13.126618385314941
    8. '   ' → logprob: -14.501618385314941
    9. ' ' → logprob: -14.501618385314941
    10. '}:' → logprob: -14.626618385314941

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11254624277353287
    2. ' k' → logprob: -2.73754620552063
    3. '    ' → logprob: -3.98754620552063
    4. '   ' → logprob: -4.987546443939209
    5. 'k' → logprob: -5.237546443939209
    6. ' ' → logprob: -5.737546443939209
    7. '<|end|>' → logprob: -6.237546443939209
    8. '	   ' → logprob: -6.737546443939209
    9. ',' → logprob: -7.487546443939209
    10. '	' → logprob: -7.612546443939209

Token 65: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4298316538333893
    2. 'k' (adapté à ' k') → logprob: -1.054831624031067
    3. '   ' → logprob: -7.179831504821777
    4. '       ' → logprob: -8.929831504821777
    5. ' for' → logprob: -9.679831504821777
    6. '    ' → logprob: -10.304831504821777
    7. ' (' → logprob: -10.804831504821777
    8. 'for' → logprob: -10.929831504821777
    9. '	k' → logprob: -10.929831504821777
    10. ' i' → logprob: -11.179831504821777

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00046951865078881383
    2. '[' → logprob: -7.75046968460083
    3. ' [' → logprob: -11.000469207763672
    4. '```' → logprob: -11.750469207763672
    5. 'i' → logprob: -12.250469207763672
    6. '[k' → logprob: -12.625469207763672
    7. '[I' → logprob: -13.375469207763672
    8. '\[' → logprob: -14.000469207763672
    9. ' i' → logprob: -14.500469207763672
    10. '   ' → logprob: -14.750469207763672

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013595925702247769
    2. ' ]' → logprob: -9.250136375427246
    3. ']=' → logprob: -10.625136375427246
    4. '-' → logprob: -11.875136375427246
    5. ')' → logprob: -13.000136375427246
    6. '[' → logprob: -13.750136375427246
    7. '=' → logprob: -14.125136375427246
    8. '])' → logprob: -14.125136375427246
    9. ']+=' → logprob: -14.375136375427246
    10. ' ' → logprob: -14.750136375427246

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10102474689483643
    2. '*=' → logprob: -2.976024627685547
    3. ' =' → logprob: -3.476024627685547
    4. ' *=' → logprob: -4.351024627685547
    5. '+=' → logprob: -7.101024627685547
    6. ' ' → logprob: -8.976024627685547
    7. ' +=' → logprob: -9.101024627685547
    8. '*' → logprob: -9.226024627685547
    9. '%=' → logprob: -10.101024627685547
    10. '[' → logprob: -10.976024627685547

Token 69: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.017353828996419907
    2. '(' → logprob: -5.3923540115356445
    3. 'k' → logprob: -5.3923540115356445
    4. '(i' → logprob: -5.5173540115356445
    5. ' (' → logprob: -5.5173540115356445
    6. ' k' → logprob: -10.267354011535645
    7. '   ' → logprob: -11.392354011535645
    8. 'i' → logprob: -11.767354011535645
    9. '(int' → logprob: -12.892354011535645
    10. ' ' → logprob: -13.642354011535645

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.625005722045898
    3. 'i' → logprob: -13.875005722045898
    4. '```' → logprob: -14.375005722045898
    5. '(i' → logprob: -15.625005722045898
    6. '[I' → logprob: -16.5000057220459
    7. '[
' → logprob: -16.6250057220459
    8. '[(' → logprob: -17.0000057220459
    9. '[k' → logprob: -17.0000057220459
    10. '-' → logprob: -17.1250057220459

Token 71: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03512783721089363
    2. ']' → logprob: -3.410127878189087
    3. ' -' → logprob: -6.535127639770508
    4. ' ' → logprob: -10.910127639770508
    5. '1' → logprob: -12.035127639770508
    6. '```' → logprob: -13.785127639770508
    7. ' ]' → logprob: -14.160127639770508
    8. '	' → logprob: -14.160127639770508
    9. '   ' → logprob: -14.785127639770508
    10. ']+' → logprob: -15.160127639770508

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016825977945700288
    2. ' ' → logprob: -8.750167846679688
    3. '<|end|>' → logprob: -12.250167846679688
    4. ']' → logprob: -13.625167846679688
    5. '```' → logprob: -14.500167846679688
    6. 'def' → logprob: -14.687667846679688
    7. '

' → logprob: -14.687667846679688
    8. '<|end|>' → logprob: -14.750167846679688
    9. '-' → logprob: -15.187667846679688
    10. '   ' → logprob: -15.625167846679688

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006996880983933806
    2. ']*' → logprob: -7.375699520111084
    3. '*' → logprob: -10.125699996948242
    4. ' ]' → logprob: -11.375699996948242
    5. '```' → logprob: -12.875699996948242
    6. '1' → logprob: -12.875699996948242
    7. '*i' → logprob: -13.000699996948242
    8. ' *' → logprob: -13.125699996948242
    9. ']
' → logprob: -13.375699996948242
    10. ')' → logprob: -13.875699996948242

Token 74: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5245308876037598
    2. '*' → logprob: -0.8995308876037598
    3. '*i' → logprob: -6.64953088760376
    4. ' ' → logprob: -10.149530410766602
    5. '**' → logprob: -10.774530410766602
    6. '+' → logprob: -11.524530410766602
    7. '*k' → logprob: -12.274530410766602
    8. ' ' → logprob: -12.274530410766602
    9. ' +' → logprob: -12.399530410766602
    10. '```' → logprob: -12.524530410766602

Token 75: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29481589794158936
    2. ' i' → logprob: -1.4198158979415894
    3. '2' → logprob: -4.544816017150879
    4. ' ' → logprob: -6.169816017150879
    5. '10' → logprob: -7.419816017150879
    6. ' (' → logprob: -10.544816017150879
    7. 'n' → logprob: -10.544816017150879
    8. ' n' → logprob: -10.669816017150879
    9. 'k' → logprob: -10.794816017150879
    10. '5' → logprob: -10.919816017150879

Token 76: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0006104522035457194
    2. '%' → logprob: -7.5006103515625
    3. ' ' → logprob: -9.8756103515625
    4. ' %
' → logprob: -13.0006103515625
    5. ' mod' → logprob: -13.7506103515625
    6. ' ' → logprob: -14.2506103515625
    7. ')' → logprob: -14.5006103515625
    8. ' %=' → logprob: -14.7506103515625
    9. ' 
' → logprob: -14.8756103515625
    10. 'mod' → logprob: -16.0006103515625

Token 77: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07890399545431137
    2. 'mod' → logprob: -2.578903913497925
    3. '(mod' → logprob: -11.453904151916504
    4. ' ' → logprob: -13.578904151916504
    5. ' ' → logprob: -14.078904151916504
    6. '	mod' → logprob: -14.078904151916504
    7. ' mo' → logprob: -15.453904151916504
    8. '_mod' → logprob: -16.328903198242188
    9. ' 
' → logprob: -16.453903198242188
    10. '.mod' → logprob: -16.578903198242188

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1773204654455185
    2. '<|end|>' → logprob: -1.9273204803466797
    3. '\n' → logprob: -4.30232048034668
    4. '   ' → logprob: -7.05232048034668
    5. ' 
' → logprob: -7.30232048034668
    6. '<|end|>' → logprob: -7.55232048034668
    7. ' ' → logprob: -8.42732048034668
    8. '```' → logprob: -8.67732048034668
    9. '

' → logprob: -8.67732048034668
    10. '    
' → logprob: -8.80232048034668

Token 79: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.0049291737377643585
    2. 'compute' → logprob: -6.379929065704346
    3. '_' → logprob: -7.004929065704346
    4. ' ' → logprob: -7.254929065704346
    5. '_compute' → logprob: -7.504929065704346
    6. ' def' → logprob: -7.754929065704346
    7. ' calculate' → logprob: -8.754929542541504
    8. ' _' → logprob: -8.754929542541504
    9. ' space' → logprob: -9.754929542541504
    10. ' get' → logprob: -10.004929542541504

Token 81: '_g' (ID: 5439)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.2353442907333374
    2. '_' → logprob: -2.485344409942627
    3. '_inverse' → logprob: -2.860344409942627
    4. '_inv' → logprob: -3.735344409942627
    5. '_l' → logprob: -3.735344409942627
    6. '_i' → logprob: -4.485344409942627
    7. '_r' → logprob: -5.110344409942627
    8. '_n' → logprob: -7.235344409942627
    9. '_a' → logprob: -7.360344409942627
    10. '_j' → logprob: -8.110343933105469

Token 82: 'k' (ID: 74)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011446223361417651
    2. 'g' → logprob: -8.001144409179688
    3. 'n' → logprob: -8.126144409179688
    4. '(' → logprob: -8.501144409179688
    5. '_inverse' → logprob: -10.376144409179688
    6. 'k' → logprob: -10.501144409179688
    7. '_n' → logprob: -10.626144409179688
    8. 'a' → logprob: -10.876144409179688
    9. '_g' → logprob: -10.876144409179688
    10. 't' → logprob: -11.126144409179688

Token 83: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009945198893547058
    2. '(' → logprob: -4.634945392608643
    3. ' (' → logprob: -8.634944915771484
    4. '```' → logprob: -12.509944915771484
    5. '(k' → logprob: -12.759944915771484
    6. '((' → logprob: -13.634944915771484
    7. '(_' → logprob: -15.134944915771484
    8. ' ' → logprob: -15.259944915771484
    9. ''(' → logprob: -15.259944915771484
    10. 'def' → logprob: -15.384944915771484

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ' ,' → logprob: -15.75
    3. ',
' → logprob: -17.125
    4. ',n' → logprob: -17.625
    5. '‌,' → logprob: -18.25
    6. '):' → logprob: -19.875
    7. '+,' → logprob: -19.875
    8. ')' → logprob: -20.0
    9. '),' → logprob: -20.25
    10. '‍,' → logprob: -20.5

Token 85: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.016531052067875862
    2. 'mod' → logprob: -4.266530990600586
    3. ' g' → logprob: -7.016530990600586
    4. ' k' → logprob: -7.016530990600586
    5. ' n' → logprob: -8.391530990600586
    6. ' ' → logprob: -9.391530990600586
    7. 'g' → logprob: -9.516530990600586
    8. 'k' → logprob: -10.016530990600586
    9. ' def' → logprob: -10.829030990600586
    10. ',' → logprob: -10.829030990600586

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -11.000021934509277
    3. ',k' → logprob: -12.625021934509277
    4. ',g' → logprob: -13.875021934509277
    5. ',
' → logprob: -15.125021934509277
    6. ',n' → logprob: -16.000022888183594
    7. '):' → logprob: -16.125022888183594
    8. 'g' → logprob: -16.250022888183594
    9. '`,' → logprob: -16.625022888183594
    10. '),' → logprob: -16.875022888183594

Token 87: ' k' (ID: 372)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7639318704605103
    2. ' g' → logprob: -0.7639318704605103
    3. 'k' → logprob: -3.2639317512512207
    4. ' k' → logprob: -3.5139317512512207
    5. ')' → logprob: -9.388932228088379
    6. ',' → logprob: -9.763932228088379
    7. ' ' → logprob: -10.263932228088379
    8. ' n' → logprob: -11.013932228088379
    9. '```' → logprob: -11.076432228088379
    10. 'n' → logprob: -11.201432228088379

Token 88: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39088189601898193
    2. ',' → logprob: -1.140881896018982
    3. '):
' → logprob: -5.7658820152282715
    4. ')' → logprob: -7.8908820152282715
    5. ' ):' → logprob: -8.265881538391113
    6. ' ,' → logprob: -9.390881538391113
    7. '   ' → logprob: -10.015881538391113
    8. ':' → logprob: -10.765881538391113
    9. '):
' → logprob: -10.890881538391113
    10. ',k' → logprob: -11.140881538391113

Token 89: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4755227565765381
    2. ' g' → logprob: -0.9755227565765381
    3. ')' → logprob: -7.600522994995117
    4. ' ' → logprob: -8.350522994995117
    5. '	g' → logprob: -8.913022994995117
    6. '):
' → logprob: -9.350522994995117
    7. '_g' → logprob: -9.725522994995117
    8. '):

' → logprob: -10.100522994995117
    9. '):' → logprob: -10.225522994995117
    10. '```' → logprob: -10.413022994995117

Token 90: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012622068636119366
    2. '):' → logprob: -4.512621879577637
    3. ')' → logprob: -6.637621879577637
    4. '_k' → logprob: -8.512621879577637
    5. '):
' → logprob: -11.012621879577637
    6. ']' → logprob: -12.012621879577637
    7. '_' → logprob: -12.512621879577637
    8. ']):' → logprob: -12.637621879577637
    9. ',' → logprob: -12.762621879577637
    10. ' k' → logprob: -12.887621879577637

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00986788235604763
    2. '):
' → logprob: -4.6348676681518555
    3. ')' → logprob: -9.759867668151855
    4. '):
' → logprob: -10.884867668151855
    5. '):

' → logprob: -11.259867668151855
    6. ':' → logprob: -11.634867668151855
    7. ' ):' → logprob: -12.009867668151855
    8. ',' → logprob: -12.134867668151855
    9. '[]):' → logprob: -15.009867668151855
    10. 's' → logprob: -15.134867668151855

Token 92: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3189049959182739
    2. '   ' → logprob: -1.443904995918274
    3. 'for' → logprob: -3.6939048767089844
    4. ':' → logprob: -5.193904876708984
    5. '<|end|>' → logprob: -5.693904876708984
    6. ' ' → logprob: -7.068904876708984
    7. '```' → logprob: -7.193904876708984
    8. ',' → logprob: -7.568904876708984
    9. ')' → logprob: -8.693904876708984
    10. '	for' → logprob: -8.693904876708984

Token 93: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14549492299556732
    2. 'g' (adapté à ' g') → logprob: -2.0204949378967285
    3. '   ' → logprob: -6.5204949378967285
    4. ' for' → logprob: -6.6454949378967285
    5. '```' → logprob: -11.14549446105957
    6. ' g' → logprob: -11.52049446105957
    7. ' ' → logprob: -11.77049446105957
    8. '0' → logprob: -12.52049446105957
    9. 'def' → logprob: -12.77049446105957
    10. '1' → logprob: -13.77049446105957

Token 94: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.6776029699249193e-05
    2. 'g' → logprob: -11.75002670288086
    3. 'for' → logprob: -12.12502670288086
    4. '_k' → logprob: -12.12502670288086
    5. '[' → logprob: -12.62502670288086
    6. ' ' → logprob: -13.37502670288086
    7. '<|end|>' → logprob: -14.12502670288086
    8. ' k' → logprob: -14.62502670288086
    9. '[k' → logprob: -14.87502670288086
    10. '_' → logprob: -14.87502670288086

Token 95: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011403311509639025
    2. '=' → logprob: -10.625114440917969
    3. ' [' → logprob: -10.750114440917969
    4. 'def' → logprob: -11.125114440917969
    5. ' =' → logprob: -11.375114440917969
    6. '=[' → logprob: -11.500114440917969
    7. '][' → logprob: -12.125114440917969
    8. ')' → logprob: -12.375114440917969
    9. ']' → logprob: -12.625114440917969
    10. ')[' → logprob: -12.625114440917969

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006114058778621256
    2. ')' → logprob: -8.750611305236816
    3. ' ]' → logprob: -8.750611305236816
    4. ']=' → logprob: -9.000611305236816
    5. ')]' → logprob: -9.750611305236816
    6. '-' → logprob: -10.250611305236816
    7. ']
' → logprob: -11.000611305236816
    8. ' -' → logprob: -11.500611305236816
    9. '   ' → logprob: -11.875611305236816
    10. '])' → logprob: -12.250611305236816

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759432911872864
    2. ' =' → logprob: -0.8259432911872864
    3. ' ' → logprob: -13.575942993164062
    4. '=k' → logprob: -14.700942993164062
    5. '=int' → logprob: -15.075942993164062
    6. '%=' → logprob: -15.075942993164062
    7. ' %=' → logprob: -15.575942993164062
    8. '=
' → logprob: -15.575942993164062
    9. '=n' → logprob: -15.825942993164062
    10. '=

' → logprob: -15.825942993164062

Token 98: ' pow' (ID: 9779)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05374766141176224
    2. 'pow' → logprob: -3.6787476539611816
    3. '1' → logprob: -3.9287476539611816
    4. ' k' → logprob: -5.053747653961182
    5. ' pow' → logprob: -7.553747653961182
    6. ' ' → logprob: -8.30374813079834
    7. '(' → logprob: -9.55374813079834
    8. '(k' → logprob: -9.92874813079834
    9. '0' → logprob: -10.42874813079834
    10. '(pow' → logprob: -10.55374813079834

Token 99: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0009252764866687357
    2. '(' → logprob: -7.000925064086914
    3. '(g' → logprob: -11.500925064086914
    4. '(n' → logprob: -12.875925064086914
    5. 'k' → logprob: -14.750925064086914
    6. '(x' → logprob: -16.000925064086914
    7. '((' → logprob: -16.000925064086914
    8. '2' → logprob: -16.625925064086914
    9. '(s' → logprob: -16.750925064086914
    10. '(
' → logprob: -16.875925064086914

Token 100: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.558399319241289e-05
    2. 'n' → logprob: -11.125025749206543
    3. '[' → logprob: -11.500025749206543
    4. '[k' → logprob: -15.000025749206543
    5. '(n' → logprob: -16.250024795532227
    6. '
' → logprob: -16.750024795532227
    7. '[g' → logprob: -17.000024795532227
    8. '	n' → logprob: -17.125024795532227
    9. '[-' → logprob: -17.250024795532227
    10. ' [' → logprob: -17.500024795532227

Token 101: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3697393834590912
    2. '[n' → logprob: -1.3697394132614136
    3. ',n' → logprob: -3.369739294052124
    4. '],' → logprob: -4.619739532470703
    5. '-' → logprob: -5.994739532470703
    6. ']' → logprob: -6.119739532470703
    7. '[' → logprob: -6.369739532470703
    8. ' ' → logprob: -7.119739532470703
    9. '```' → logprob: -7.244739532470703
    10. ' ,' → logprob: -7.619739532470703

Token 102: ' mod' (ID: 1812)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6391769647598267
    2. 'mod' → logprob: -0.7641769647598267
    3. ' mod' → logprob: -5.514176845550537
    4. ' -' → logprob: -6.139176845550537
    5. ' ' → logprob: -9.389177322387695
    6. '2' → logprob: -9.889177322387695
    7. '-mod' → logprob: -10.014177322387695
    8. '<|end|>' → logprob: -10.264177322387695
    9. '.mod' → logprob: -10.389177322387695
    10. '10' → logprob: -10.639177322387695

Token 103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007102862582542002
    2. ' -' → logprob: -7.250710487365723
    3. ' ' → logprob: -16.250709533691406
    4. '   ' → logprob: -17.375709533691406
    5. '```' → logprob: -17.500709533691406
    6. '–' → logprob: -17.625709533691406
    7. '−' → logprob: -17.750709533691406
    8. '2' → logprob: -18.125709533691406
    9. '  ' → logprob: -18.375709533691406
    10. '()-' → logprob: -18.500709533691406

Token 104: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. '

' → logprob: -11.625040054321289
    3. '
' → logprob: -11.750040054321289
    4. '-' → logprob: -11.750040054321289
    5. ' ' → logprob: -12.000040054321289
    6. '```' → logprob: -12.625040054321289
    7. ' -' → logprob: -13.437540054321289
    8. ')' → logprob: -13.750040054321289
    9. '
' → logprob: -14.812540054321289
    10. '۲' → logprob: -15.000040054321289

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -12.62501049041748
    3. '

' → logprob: -13.12501049041748
    4. '```' → logprob: -13.50001049041748
    5. '
' → logprob: -14.31251049041748
    6. '-' → logprob: -14.93751049041748
    7. '۲' → logprob: -15.62501049041748
    8. '٢' → logprob: -15.87501049041748
    9. '   ' → logprob: -16.000009536743164
    10. '
' → logprob: -16.062509536743164

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002997120900545269
    2. ' ,' → logprob: -8.125299453735352
    3. ')' → logprob: -13.250299453735352
    4. '   ' → logprob: -14.750299453735352
    5. ',
' → logprob: -14.875299453735352
    6. ' ' → logprob: -15.125299453735352
    7. ',n' → logprob: -15.375299453735352
    8. 'mod' → logprob: -16.12529945373535
    9. '```' → logprob: -16.50029945373535
    10. '‌,' → logprob: -16.62529945373535

Token 107: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.251930296421051
    2. ' mod' → logprob: -1.5019302368164062
    3. '	mod' → logprob: -13.876930236816406
    4. ')' → logprob: -16.001930236816406
    5. '(mod' → logprob: -16.126930236816406
    6. '_mod' → logprob: -18.126930236816406
    7. ' ' → logprob: -18.501930236816406
    8. '
' → logprob: -18.751930236816406
    9. '```' → logprob: -19.251930236816406
    10. '<|end|>' → logprob: -19.376930236816406

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017255148850381374
    2. ')
' → logprob: -6.376725673675537
    3. ')

' → logprob: -11.251725196838379
    4. ')
' → logprob: -12.126725196838379
    5. ' )' → logprob: -13.126725196838379
    6. '   ' → logprob: -13.626725196838379
    7. ')\' → logprob: -14.876725196838379
    8. ' ' → logprob: -15.001725196838379
    9. ')`' → logprob: -15.251725196838379
    10. ')**' → logprob: -16.001726150512695

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00385672808624804
    2. ' for' → logprob: -5.878856658935547
    3. 'for' → logprob: -6.878856658935547
    4. '<|end|>' → logprob: -11.253856658935547
    5. ' ' → logprob: -12.753856658935547
    6. 'def' → logprob: -12.878856658935547
    7. '	for' → logprob: -13.128856658935547
    8. '```' → logprob: -14.253856658935547
    9. '    
' → logprob: -14.878856658935547
    10. ',' → logprob: -15.378856658935547

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016605855897068977
    2. ' for' → logprob: -4.266605854034424
    3. '   ' → logprob: -6.016605854034424
    4. '	for' → logprob: -13.891606330871582
    5. 'def' → logprob: -15.516606330871582
    6. ' ' → logprob: -15.766606330871582
    7. 'i' → logprob: -16.641605377197266
    8. '```' → logprob: -16.766605377197266
    9. '  ' → logprob: -17.891605377197266
    10. '
' → logprob: -18.141605377197266

Token 111: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868745267391205
    2. 'i' → logprob: -1.1368745565414429
    3. ' ' → logprob: -12.761874198913574
    4. '	i' → logprob: -14.636874198913574
    5. '   ' → logprob: -15.636874198913574
    6. '  ' → logprob: -18.01187515258789
    7. '```' → logprob: -18.38687515258789
    8. 'j' → logprob: -19.38687515258789
    9. '`' → logprob: -20.13687515258789
    10. '    ' → logprob: -20.13687515258789

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006006890442222357
    2. 'in' → logprob: -5.131006717681885
    3. '   ' → logprob: -10.631007194519043
    4. ' ' → logprob: -10.881007194519043
    5. '  ' → logprob: -11.381007194519043
    6. ' range' → logprob: -11.756007194519043
    7. 'range' → logprob: -12.006007194519043
    8. 'n' → logprob: -12.256007194519043
    9. ' i' → logprob: -12.881007194519043
    10. ' reversed' → logprob: -14.381007194519043

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2821277976036072
    2. 'range' → logprob: -1.407127857208252
    3. ' ' → logprob: -7.532127857208252
    4. ' reversed' → logprob: -8.157127380371094
    5. '   ' → logprob: -9.657127380371094
    6. ' xrange' → logprob: -10.782127380371094
    7. '  ' → logprob: -10.907127380371094
    8. '(range' → logprob: -10.907127380371094
    9. 're' → logprob: -11.157127380371094
    10. 'n' → logprob: -12.532127380371094

Token 114: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016898104920983315
    2. '(range' → logprob: -4.641898155212402
    3. ' range' → logprob: -5.391898155212402
    4. '(' → logprob: -6.391898155212402
    5. 'range' → logprob: -7.141898155212402
    6. ' (' → logprob: -10.391898155212402
    7. ' in' → logprob: -11.516898155212402
    8. ' ' → logprob: -11.641898155212402
    9. '_range' → logprob: -11.766898155212402
    10. '	range' → logprob: -11.766898155212402

Token 115: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005938397720456123
    2. ' -' → logprob: -5.130938529968262
    3. ',' → logprob: -11.630938529968262
    4. '   ' → logprob: -14.880938529968262
    5. ' ' → logprob: -15.255938529968262
    6. ' ,' → logprob: -16.505937576293945
    7. 'n' → logprob: -16.880937576293945
    8. '<|end|>' → logprob: -17.380937576293945
    9. '1' → logprob: -17.630937576293945
    10. ',i' → logprob: -17.880937576293945

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05501340329647064
    2. ' ' → logprob: -2.930013418197632
    3. '-' → logprob: -9.305013656616211
    4. ' -' → logprob: -10.180013656616211
    5. '1' → logprob: -13.930013656616211
    6. '   ' → logprob: -14.805013656616211
    7. '  ' → logprob: -15.430013656616211
    8. 'n' → logprob: -15.430013656616211
    9. ',' → logprob: -16.30501365661621
    10. '```' → logprob: -16.36751365661621

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -10.875020027160645
    3. '-' → logprob: -14.625020027160645
    4. '   ' → logprob: -16.750019073486328
    5. '1' → logprob: -17.000019073486328
    6. ' -' → logprob: -17.250019073486328
    7. '
' → logprob: -18.750019073486328
    8. '  ' → logprob: -19.750019073486328
    9. '```' → logprob: -19.750019073486328
    10. '

' → logprob: -21.750019073486328

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7036665081977844
    2. '-' → logprob: -0.8286665081977844
    3. ' -' → logprob: -3.0786664485931396
    4. ' ,' → logprob: -3.9536664485931396
    5. ',-' → logprob: -5.953666687011719
    6. '   ' → logprob: -7.828666687011719
    7. ' ,-' → logprob: -8.203666687011719
    8. '-,' → logprob: -9.703666687011719
    9. ' ' → logprob: -10.703666687011719
    10. '  ' → logprob: -10.953666687011719

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.252054899930954
    2. '-' → logprob: -1.5020549297332764
    3. ' ' → logprob: -9.502055168151855
    4. '   ' → logprob: -10.752055168151855
    5. '  ' → logprob: -10.877055168151855
    6. '<|end|>' → logprob: -12.502055168151855
    7. ')' → logprob: -12.877055168151855
    8. '    ' → logprob: -14.502055168151855
    9. '0' → logprob: -14.627055168151855
    10. ',-' → logprob: -14.752055168151855

Token 120: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09233546257019043
    2. ' -' → logprob: -2.4673354625701904
    3. '1' → logprob: -5.7173357009887695
    4. ' ' → logprob: -9.71733570098877
    5. ')' → logprob: -11.21733570098877
    6. '  ' → logprob: -11.71733570098877
    7. '   ' → logprob: -12.21733570098877
    8. '):
' → logprob: -12.71733570098877
    9. '<|end|>' → logprob: -12.71733570098877
    10. ')-' → logprob: -12.96733570098877

Token 121: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03169018775224686
    2. ' -' → logprob: -4.0316901206970215
    3. '):
' → logprob: -5.0316901206970215
    4. '):' → logprob: -5.0316901206970215
    5. '   ' → logprob: -8.28169059753418
    6. ' ):' → logprob: -9.90669059753418
    7. ' ):
' → logprob: -10.28169059753418
    8. ')' → logprob: -11.53169059753418
    9. '):
' → logprob: -11.90669059753418
    10. ':' → logprob: -12.03169059753418

Token 122: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42230024933815
    2. '       ' → logprob: -1.6723002195358276
    3. ' -' → logprob: -1.9223002195358276
    4. '   ' → logprob: -5.547300338745117
    5. ' g' → logprob: -6.047300338745117
    6. ' ' → logprob: -6.422300338745117
    7. 'g' → logprob: -7.047300338745117
    8. '<|end|>' → logprob: -7.922300338745117
    9. '0' → logprob: -8.297300338745117
    10. '    ' → logprob: -8.922300338745117

Token 123: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.47878512740135193
    2. 'g' (adapté à ' g') → logprob: -0.9787851572036743
    3. '       ' → logprob: -6.103785037994385
    4. ' ' → logprob: -6.978785037994385
    5. '   ' → logprob: -6.978785037994385
    6. '-' → logprob: -8.728785514831543
    7. '	g' → logprob: -9.103785514831543
    8. '    ' → logprob: -9.478785514831543
    9. '1' → logprob: -10.103785514831543
    10. '_g' → logprob: -10.478785514831543

Token 124: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.537868779967539e-06
    2. '[k' → logprob: -12.250008583068848
    3. 'g' → logprob: -13.125008583068848
    4. '_k' → logprob: -13.875008583068848
    5. '[' → logprob: -14.875008583068848
    6. '[i' → logprob: -15.250008583068848
    7. '<|end|>' → logprob: -17.37500762939453
    8. 'к' → logprob: -17.50000762939453
    9. ' k' → logprob: -17.87500762939453
    10. ']' → logprob: -18.12500762939453

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.375017166137695
    3. '[I' → logprob: -12.250017166137695
    4. '[
' → logprob: -14.625017166137695
    5. '
' → logprob: -15.375017166137695
    6. '[...]' → logprob: -17.375017166137695
    7. '

' → logprob: -17.625017166137695
    8. 'i' → logprob: -17.875017166137695
    9. '[int' → logprob: -17.875017166137695
    10. '-' → logprob: -17.875017166137695

Token 126: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002441646996885538
    2. ' -' → logprob: -6.127441883087158
    3. ']' → logprob: -8.50244140625
    4. ')' → logprob: -10.12744140625
    5. '-=' → logprob: -12.25244140625
    6. '-)' → logprob: -12.50244140625
    7. '1' → logprob: -13.87744140625
    8. ' ' → logprob: -14.00244140625
    9. ' -=' → logprob: -14.25244140625
    10. '-i' → logprob: -15.00244140625

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. ']' → logprob: -14.375008583068848
    4. '   ' → logprob: -15.250008583068848
    5. '<|end|>' → logprob: -16.37500762939453
    6. '0' → logprob: -16.87500762939453
    7. '  ' → logprob: -17.12500762939453
    8. '```' → logprob: -17.50000762939453
    9. ')' → logprob: -17.56250762939453
    10. '
' → logprob: -18.06250762939453

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024780353996902704
    2. ' ]' → logprob: -6.377478122711182
    3. '=' → logprob: -7.877478122711182
    4. ']=' → logprob: -8.252477645874023
    5. ')' → logprob: -9.252477645874023
    6. ' =' → logprob: -10.377477645874023
    7. ' )' → logprob: -13.127477645874023
    8. 's' → logprob: -13.752477645874023
    9. ' ' → logprob: -13.877477645874023
    10. ')]' → logprob: -14.002477645874023

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00408053956925869
    2. ' =' → logprob: -5.504080772399902
    3. '*=' → logprob: -13.879080772399902
    4. ' ' → logprob: -15.379080772399902
    5. '"' → logprob: -16.129079818725586
    6. '*' → logprob: -16.254079818725586
    7. '=

' → logprob: -16.379079818725586
    8. ' *=' → logprob: -16.629079818725586
    9. '```' → logprob: -16.629079818725586
    10. ')' → logprob: -16.754079818725586

Token 130: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03261667490005493
    2. '(g' → logprob: -3.53261661529541
    3. ' g' → logprob: -5.90761661529541
    4. ' (' → logprob: -9.15761661529541
    5. '(' → logprob: -10.65761661529541
    6. '	g' → logprob: -11.90761661529541
    7. '_g' → logprob: -13.53261661529541
    8. '.g' → logprob: -13.59511661529541
    9. '   ' → logprob: -13.78261661529541
    10. ' ' → logprob: -14.22011661529541

Token 131: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009949409868568182
    2. '[i' → logprob: -7.50099515914917
    3. '[k' → logprob: -8.375994682312012
    4. 'g' → logprob: -8.625994682312012
    5. '[g' → logprob: -11.125994682312012
    6. '[' → logprob: -11.250994682312012
    7. '_k' → logprob: -14.000994682312012
    8. '[n' → logprob: -14.125994682312012
    9. '[int' → logprob: -14.375994682312012
    10. ' k' → logprob: -14.500994682312012

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.957014556974173e-05
    2. '[' → logprob: -9.625069618225098
    3. 'i' → logprob: -13.375069618225098
    4. '[I' → logprob: -13.500069618225098
    5. '```' → logprob: -15.500069618225098
    6. '[
' → logprob: -16.37506866455078
    7. '<|end|>' → logprob: -17.25006866455078
    8. ' ' → logprob: -17.62506866455078
    9. ' i' → logprob: -18.50006866455078
    10. '[int' → logprob: -18.50006866455078

Token 133: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01434637326747179
    2. '[i' → logprob: -4.889346599578857
    3. ' *' → logprob: -5.264346599578857
    4. ']' → logprob: -7.764346599578857
    5. '*i' → logprob: -7.764346599578857
    6. '[' → logprob: -8.5143461227417
    7. ' ' → logprob: -9.0143461227417
    8. '[]' → logprob: -9.5143461227417
    9. '   ' → logprob: -9.6393461227417
    10. ']*' → logprob: -10.2643461227417

Token 134: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03398037701845169
    2. ' *' → logprob: -4.033980369567871
    3. '*i' → logprob: -4.158980369567871
    4. '**' → logprob: -10.908980369567871
    5. ''*' → logprob: -11.408980369567871
    6. ' ' → logprob: -11.783980369567871
    7. '*(' → logprob: -12.033980369567871
    8. '"*' → logprob: -12.033980369567871
    9. '
' → logprob: -12.158980369567871
    10. '`' → logprob: -12.408980369567871

Token 135: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038074489566497505
    2. ' i' → logprob: -7.875380516052246
    3. '<|end|>' → logprob: -14.625380516052246
    4. '*i' → logprob: -17.500381469726562
    5. '	i' → logprob: -17.625381469726562
    6. '(i' → logprob: -17.750381469726562
    7. '[i' → logprob: -17.750381469726562
    8. '   ' → logprob: -18.125381469726562
    9. ',i' → logprob: -18.125381469726562
    10. '_i' → logprob: -18.625381469726562

Token 136: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0031844829209148884
    2. '%' → logprob: -5.7531843185424805
    3. ' ' → logprob: -12.25318431854248
    4. ' ' → logprob: -14.00318431854248
    5. '	' → logprob: -14.75318431854248
    6. ' %
' → logprob: -15.25318431854248
    7. ' %=' → logprob: -15.37818431854248
    8. ' 
' → logprob: -16.128185272216797
    9. ' %#' → logprob: -17.003185272216797
    10. ')' → logprob: -17.253185272216797

Token 137: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20142006874084473
    2. ' mod' → logprob: -1.7014200687408447
    3. '	mod' → logprob: -12.576419830322266
    4. '(mod' → logprob: -12.701419830322266
    5. ' ' → logprob: -16.701419830322266
    6. '```' → logprob: -16.701419830322266
    7. '_mod' → logprob: -16.951419830322266
    8. ' мод' → logprob: -17.326419830322266
    9. ' ' → logprob: -17.701419830322266
    10. '.mod' → logprob: -18.826419830322266

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.2580883502960205
    2. 'comb' → logprob: -1.3830883502960205
    3. ' compute' → logprob: -2.2580883502960205
    4. 'main' → logprob: -2.3830883502960205
    5. ' main' → logprob: -2.6330883502960205
    6. ' comb' → logprob: -2.8830883502960205
    7. 'combine' → logprob: -3.3830883502960205
    8. 'n' → logprob: -4.258088111877441
    9. 'factor' → logprob: -4.383088111877441
    10. 'com' → logprob: -4.383088111877441

Token 141: '_k' (ID: 11637)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.8063650131225586
    2. '_comb' → logprob: -1.8063650131225586
    3. '(n' → logprob: -2.4313650131225586
    4. '_k' → logprob: -2.4313650131225586
    5. '_f' → logprob: -3.1813650131225586
    6. '_com' → logprob: -3.3063650131225586
    7. '_inv' → logprob: -3.4313650131225586
    8. '_s' → logprob: -3.6813650131225586
    9. '_h' → logprob: -3.8063650131225586
    10. '_g' → logprob: -3.9313650131225586

Token 142: 'b' (ID: 65)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6813860535621643
    2. '1' → logprob: -2.3063859939575195
    3. 'g' → logprob: -2.4313859939575195
    4. '(' → logprob: -2.5563859939575195
    5. '_inverse' → logprob: -3.0563859939575195
    6. '2' → logprob: -3.3063859939575195
    7. 'inverse' → logprob: -3.4313859939575195
    8. '_inv' → logprob: -3.5563859939575195
    9. 'n' → logprob: -3.6813859939575195
    10. 'k' → logprob: -3.8063859939575195

Token 143: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008478404954075813
    2. '(' → logprob: -4.88347864151001
    3. 'n' → logprob: -8.008478164672852
    4. ' (' → logprob: -8.633478164672852
    5. 'k' → logprob: -9.383478164672852
    6. 'b' → logprob: -10.008478164672852
    7. 'w' → logprob: -10.133478164672852
    8. 'def' → logprob: -10.258478164672852
    9. '_' → logprob: -10.883478164672852
    10. 'a' → logprob: -11.008478164672852

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04882648587226868
    2. '(' → logprob: -3.0488264560699463
    3. ' (' → logprob: -8.548826217651367
    4. '(k' → logprob: -11.048826217651367
    5. 'def' → logprob: -11.548826217651367
    6. 'n' → logprob: -11.798826217651367
    7. '((' → logprob: -13.423826217651367
    8. 'k' → logprob: -13.548826217651367
    9. '```' → logprob: -13.548826217651367
    10. 's' → logprob: -13.923826217651367

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001847062085289508
    2. ' ,' → logprob: -8.625185012817383
    3. ',n' → logprob: -12.375185012817383
    4. ',k' → logprob: -14.625185012817383
    5. ',
' → logprob: -16.500185012817383
    6. '):' → logprob: -16.625185012817383
    7. '(n' → logprob: -16.875185012817383
    8. '   ' → logprob: -17.500185012817383
    9. ',module' → logprob: -17.500185012817383
    10. '‌,' → logprob: -18.000185012817383

Token 146: ' g' (ID: 329)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3712286353111267
    2. 'mod' → logprob: -1.2462286949157715
    3. ' k' → logprob: -5.2462286949157715
    4. 'k' → logprob: -5.6212286949157715
    5. 'arr' → logprob: -5.8712286949157715
    6. ' n' → logprob: -5.8712286949157715
    7. ' kb' → logprob: -6.1212286949157715
    8. ' arr' → logprob: -6.3712286949157715
    9. 'n' → logprob: -6.4962286949157715
    10. 'kb' → logprob: -6.7462286949157715

Token 147: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008203663863241673
    2. 'b' → logprob: -4.883203506469727
    3. 'kb' → logprob: -8.383203506469727
    4. '_k' → logprob: -9.133203506469727
    5. ')' → logprob: -9.258203506469727
    6. 'n' → logprob: -9.758203506469727
    7. 'def' → logprob: -10.383203506469727
    8. ',' → logprob: -10.633203506469727
    9. 'g' → logprob: -10.883203506469727
    10. '(n' → logprob: -11.758203506469727

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005944972508586943
    2. ' ,' → logprob: -7.875594615936279
    3. ',k' → logprob: -8.875594139099121
    4. ',g' → logprob: -10.250594139099121
    5. '):
' → logprob: -11.500594139099121
    6. '):' → logprob: -12.125594139099121
    7. ',
' → logprob: -12.375594139099121
    8. 'g' → logprob: -12.500594139099121
    9. ',b' → logprob: -12.500594139099121
    10. ',n' → logprob: -12.625594139099121

Token 149: ' k' (ID: 372)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.13568712770938873
    2. ' kb' → logprob: -2.1356871128082275
    3. 'k' → logprob: -5.010687351226807
    4. ' k' → logprob: -7.010687351226807
    5. ' mod' → logprob: -7.885687351226807
    6. 'mod' → logprob: -8.010686874389648
    7. ' ' → logprob: -9.323186874389648
    8. 'Kb' → logprob: -9.948186874389648
    9. 'arr' → logprob: -10.073186874389648
    10. '	k' → logprob: -10.448186874389648

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00279323011636734
    2. '):' → logprob: -6.627793312072754
    3. '):
' → logprob: -7.127793312072754
    4. ' ,' → logprob: -7.752793312072754
    5. 'b' → logprob: -9.377793312072754
    6. ',b' → logprob: -10.127793312072754
    7. ',k' → logprob: -10.252793312072754
    8. ',
' → logprob: -11.252793312072754
    9. '):

' → logprob: -11.877793312072754
    10. ')' → logprob: -11.877793312072754

Token 151: ' kb' (ID: 68515)
  Prédit: ' kb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kb' → logprob: -0.6375280618667603
    2. 'kb' → logprob: -0.7625280618667603
    3. 'k' → logprob: -6.137527942657471
    4. ' k' → logprob: -6.762527942657471
    5. ' mod' → logprob: -7.887527942657471
    6. ' ' → logprob: -8.012528419494629
    7. 'b' → logprob: -8.075028419494629
    8. 'mod' → logprob: -9.575028419494629
    9. 'Kb' → logprob: -9.575028419494629
    10. '
' → logprob: -9.637528419494629

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008515050634741783
    2. '):' → logprob: -5.008514881134033
    3. ',' → logprob: -6.758514881134033
    4. ')' → logprob: -7.758514881134033
    5. '):
' → logprob: -8.758515357971191
    6. ' ' → logprob: -11.508515357971191
    7. '[]):' → logprob: -11.758515357971191
    8. '_' → logprob: -12.508515357971191
    9. ''):' → logprob: -12.633515357971191
    10. ' ):' → logprob: -12.758515357971191

Token 153: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11638498306274414
    2. ',' → logprob: -2.241384983062744
    3. '):
' → logprob: -5.866384983062744
    4. ')' → logprob: -7.491384983062744
    5. ' ):' → logprob: -10.241384506225586
    6. '   ' → logprob: -10.366384506225586
    7. ',k' → logprob: -10.366384506225586
    8. ':' → logprob: -10.991384506225586
    9. '):
' → logprob: -11.616384506225586
    10. ',n' → logprob: -11.866384506225586

Token 154: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.059629425406455994
    2. ' mod' → logprob: -2.934629440307617
    3. 'n' → logprob: -5.934629440307617
    4. 'k' → logprob: -7.059629440307617
    5. 'g' → logprob: -7.309629440307617
    6. ' n' → logprob: -8.684629440307617
    7. 'i' → logprob: -9.559629440307617
    8. '   ' → logprob: -9.559629440307617
    9. 'kb' → logprob: -10.184629440307617
    10. ' g' → logprob: -10.309629440307617

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013174348510801792
    2. '):
' → logprob: -4.388174533843994
    3. ',' → logprob: -7.513174533843994
    4. '   ' → logprob: -9.638174057006836
    5. ')' → logprob: -10.513174057006836
    6. '):
' → logprob: -11.388174057006836
    7. ' ):' → logprob: -12.013174057006836
    8. '):

' → logprob: -12.638174057006836
    9. ':' → logprob: -12.763174057006836
    10. 'def' → logprob: -13.763174057006836

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010794657282531261
    2. ' for' → logprob: -4.885794639587402
    3. 'for' → logprob: -5.885794639587402
    4. 'def' → logprob: -7.885794639587402
    5. ' def' → logprob: -11.260794639587402
    6. '```' → logprob: -12.260794639587402
    7. ' ' → logprob: -12.385794639587402
    8. '  ' → logprob: -12.760794639587402
    9. '	for' → logprob: -14.260794639587402
    10. ',' → logprob: -14.260794639587402

Token 157: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0064900037832558155
    2. '   ' → logprob: -5.756490230560303
    3. 'kb' → logprob: -6.131490230560303
    4. 'def' → logprob: -7.381490230560303
    5. ' for' → logprob: -7.631490230560303
    6. '```' → logprob: -12.006489753723145
    7. 'k' → logprob: -12.381489753723145
    8. '	for' → logprob: -13.006489753723145
    9. ' ' → logprob: -13.256489753723145
    10. '  ' → logprob: -13.381489753723145

Token 158: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12698574364185333
    2. 'i' → logprob: -2.126985788345337
    3. '	i' → logprob: -10.501985549926758
    4. ' ' → logprob: -11.001985549926758
    5. '(i' → logprob: -12.876985549926758
    6. 'n' → logprob: -13.501985549926758
    7. '<|end|>' → logprob: -13.751985549926758
    8. '<|end|>' → logprob: -13.876985549926758
    9. ' ' → logprob: -14.001985549926758
    10. '[i' → logprob: -14.126985549926758

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023788675665855408
    2. 'in' → logprob: -3.7737886905670166
    3. ' ' → logprob: -7.6487884521484375
    4. '  ' → logprob: -10.398788452148438
    5. 'n' → logprob: -11.273788452148438
    6. '   ' → logprob: -11.648788452148438
    7. '	in' → logprob: -12.773788452148438
    8. '1' → logprob: -13.523788452148438
    9. 'range' → logprob: -13.648788452148438
    10. '_' → logprob: -13.898788452148438

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.252062052488327
    2. ' range' → logprob: -1.5020620822906494
    3. '(range' → logprob: -9.12706184387207
    4. '(' → logprob: -11.25206184387207
    5. ' ' → logprob: -12.75206184387207
    6. '   ' → logprob: -13.00206184387207
    7. '1' → logprob: -13.37706184387207
    8. '	range' → logprob: -13.50206184387207
    9. 'n' → logprob: -14.25206184387207
    10. 'in' → logprob: -14.37706184387207

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008659370243549347
    2. '(n' → logprob: -4.758659362792969
    3. '(i' → logprob: -10.258659362792969
    4. '1' → logprob: -11.633659362792969
    5. '(k' → logprob: -15.258659362792969
    6. ' (' → logprob: -15.633659362792969
    7. '(l' → logprob: -16.50865936279297
    8. 'n' → logprob: -16.63365936279297
    9. '(len' → logprob: -16.75865936279297
    10. '(
' → logprob: -16.75865936279297

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35049939155578613
    2. 'n' → logprob: -1.2254993915557861
    3. ' n' → logprob: -7.100499153137207
    4. '0' → logprob: -7.100499153137207
    5. ' ' → logprob: -8.475499153137207
    6. '2' → logprob: -9.475499153137207
    7. 'range' → logprob: -10.475499153137207
    8. '(n' → logprob: -10.725499153137207
    9. '   ' → logprob: -10.850499153137207
    10. 'i' → logprob: -10.850499153137207

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001495484757469967
    2. ' ,' → logprob: -9.250149726867676
    3. ',n' → logprob: -9.875149726867676
    4. '   ' → logprob: -13.750149726867676
    5. ',
' → logprob: -14.500149726867676
    6. 'n' → logprob: -15.250149726867676
    7. ' ' → logprob: -18.37514877319336
    8. ' n' → logprob: -18.50014877319336
    9. '
' → logprob: -18.87514877319336
    10. '_,' → logprob: -19.00014877319336

Token 164: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22542841732501984
    2. 'n' → logprob: -1.6004284620285034
    3. '<|end|>' → logprob: -12.100428581237793
    4. '	n' → logprob: -12.725428581237793
    5. '   ' → logprob: -12.975428581237793
    6. '(n' → logprob: -13.600428581237793
    7. ')n' → logprob: -13.725428581237793
    8. ' ' → logprob: -13.975428581237793
    9. '  ' → logprob: -14.975428581237793
    10. ')' → logprob: -15.475428581237793

Token 165: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2255546748638153
    2. '+' → logprob: -1.6005547046661377
    3. '):
' → logprob: -9.850554466247559
    4. '   ' → logprob: -9.850554466247559
    5. ' +
' → logprob: -10.975554466247559
    6. '):' → logprob: -11.975554466247559
    7. ' ' → logprob: -12.975554466247559
    8. '+
' → logprob: -12.975554466247559
    9. ' ):
' → logprob: -13.475554466247559
    10. ')+' → logprob: -13.600554466247559

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002086377702653408
    2. ' ' → logprob: -6.252086162567139
    3. '   ' → logprob: -9.002086639404297
    4. ')' → logprob: -11.252086639404297
    5. '```' → logprob: -11.252086639404297
    6. 'i' → logprob: -13.252086639404297
    7. '):
' → logprob: -13.877086639404297
    8. ' i' → logprob: -14.502086639404297
    9. ' n' → logprob: -14.502086639404297
    10. 'def' → logprob: -14.752086639404297

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.673547563375905e-05
    2. ' ' → logprob: -9.500086784362793
    3. '   ' → logprob: -12.125086784362793
    4. '2' → logprob: -12.875086784362793
    5. 'i' → logprob: -13.250086784362793
    6. '```' → logprob: -14.250086784362793
    7. 'n' → logprob: -14.875086784362793
    8. ')' → logprob: -15.000086784362793
    9. '+' → logprob: -15.750086784362793
    10. '
' → logprob: -16.062585830688477

Token 168: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07903486490249634
    2. '):' → logprob: -2.5790348052978516
    3. '   ' → logprob: -10.079034805297852
    4. ':' → logprob: -10.204034805297852
    5. ' ):
' → logprob: -10.329034805297852
    6. '):
' → logprob: -11.079034805297852
    7. ')' → logprob: -11.329034805297852
    8. ':
' → logprob: -12.954034805297852
    9. ' ):' → logprob: -13.329034805297852
    10. '):

' → logprob: -13.704034805297852

Token 169: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4317810833454132
    2. '       ' → logprob: -1.0567810535430908
    3. ' kb' → logprob: -6.55678129196167
    4. 'kb' → logprob: -7.55678129196167
    5. '<|end|>' → logprob: -8.431780815124512
    6. '```' → logprob: -8.806780815124512
    7. 'k' → logprob: -9.056780815124512
    8. ' ' → logprob: -9.306780815124512
    9. ' k' → logprob: -9.806780815124512
    10. '	k' → logprob: -9.806780815124512

Token 170: ' kb' (ID: 68515)
  Prédit: ' kb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kb' → logprob: -0.9641755223274231
    2. 'kb' (adapté à ' kb') → logprob: -1.0891754627227783
    3. '   ' → logprob: -1.5891754627227783
    4. '       ' → logprob: -2.5891754627227783
    5. 'k' → logprob: -6.339175701141357
    6. ' ' → logprob: -8.0891752243042
    7. ' k' → logprob: -8.2141752243042
    8. '```' → logprob: -8.8391752243042
    9. '  ' → logprob: -9.3391752243042
    10. '    ' → logprob: -9.5891752243042

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028912981506437063
    2. 'b' → logprob: -5.8778910636901855
    3. '[' → logprob: -9.627891540527344
    4. '[i' → logprob: -11.127891540527344
    5. '```' → logprob: -12.752891540527344
    6. '[b' → logprob: -14.127891540527344
    7. '   ' → logprob: -14.627891540527344
    8. 's' → logprob: -15.127891540527344
    9. 'def' → logprob: -15.877891540527344
    10. '[
' → logprob: -16.002891540527344

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.29340603761375e-05
    2. '[' → logprob: -9.375092506408691
    3. ' [' → logprob: -12.875092506408691
    4. '```' → logprob: -13.250092506408691
    5. '=' → logprob: -14.125092506408691
    6. '\[' → logprob: -14.500092506408691
    7. ' =' → logprob: -14.750092506408691
    8. '   ' → logprob: -14.875092506408691
    9. '[I' → logprob: -15.000092506408691
    10. 'i' → logprob: -15.125092506408691

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013296448159962893
    2. ']=' → logprob: -7.25132942199707
    3. ' ]' → logprob: -7.50132942199707
    4. '=' → logprob: -9.87632942199707
    5. ')' → logprob: -12.25132942199707
    6. ' =' → logprob: -12.50132942199707
    7. ']+=' → logprob: -13.37632942199707
    8. ']
' → logprob: -13.50132942199707
    9. '   ' → logprob: -13.75132942199707
    10. '[' → logprob: -13.87632942199707

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132660686969757
    2. ' =' → logprob: -1.3132660388946533
    3. '=k' → logprob: -12.813265800476074
    4. '=i' → logprob: -14.188265800476074
    5. ' +=' → logprob: -15.813265800476074
    6. '=int' → logprob: -16.06326675415039
    7. '+=' → logprob: -16.43826675415039
    8. ']' → logprob: -16.43826675415039
    9. ']=' → logprob: -16.68826675415039
    10. ',' → logprob: -16.81326675415039

Token 175: ' g' (ID: 329)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -1.0741876363754272
    2. 'g' → logprob: -1.4491876363754272
    3. ' kb' → logprob: -1.6991876363754272
    4. '(k' → logprob: -2.574187755584717
    5. ' g' → logprob: -2.949187755584717
    6. 'k' → logprob: -2.949187755584717
    7. ' (' → logprob: -3.324187755584717
    8. '(g' → logprob: -4.324187755584717
    9. ' k' → logprob: -5.824187755584717
    10. '(' → logprob: -5.824187755584717

Token 176: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010338276624679565
    2. '[i' → logprob: -4.635338306427002
    3. 'b' → logprob: -7.885338306427002
    4. 'i' → logprob: -9.510337829589844
    5. '[' → logprob: -9.885337829589844
    6. '[k' → logprob: -10.135337829589844
    7. '1' → logprob: -11.510337829589844
    8. 'kb' → logprob: -11.510337829589844
    9. '(i' → logprob: -11.760337829589844
    10. '_k' → logprob: -12.010337829589844

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.704065213445574e-05
    2. '[' → logprob: -10.750046730041504
    3. 'i' → logprob: -10.750046730041504
    4. '[I' → logprob: -14.125046730041504
    5. '<|end|>' → logprob: -14.375046730041504
    6. ' i' → logprob: -14.375046730041504
    7. '[k' → logprob: -14.625046730041504
    8. '[
' → logprob: -14.750046730041504
    9. '```' → logprob: -15.125046730041504
    10. '[int' → logprob: -15.750046730041504

Token 178: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.202736496925354
    2. ']' → logprob: -1.702736496925354
    3. 'i' → logprob: -7.3277363777160645
    4. '[' → logprob: -7.8277363777160645
    5. '   ' → logprob: -9.577736854553223
    6. '(i' → logprob: -9.702736854553223
    7. '1' → logprob: -10.202736854553223
    8. ' i' → logprob: -10.952736854553223
    9. '-' → logprob: -10.952736854553223
    10. ' ]' → logprob: -11.077736854553223

Token 179: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3529191017150879
    2. '*' → logprob: -1.227919101715088
    3. '   ' → logprob: -6.352919101715088
    4. '*i' → logprob: -6.352919101715088
    5. '*(' → logprob: -8.10291862487793
    6. '[i' → logprob: -8.85291862487793
    7. ' ' → logprob: -9.22791862487793
    8. '
' → logprob: -9.35291862487793
    9. '```' → logprob: -10.10291862487793
    10. ' ' → logprob: -10.60291862487793

Token 180: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18882878124713898
    2. '(k' → logprob: -1.9388288259506226
    3. '(i' → logprob: -3.938828706741333
    4. ' k' → logprob: -5.688828945159912
    5. ' (' → logprob: -5.938828945159912
    6. '((' → logprob: -7.063828945159912
    7. 'i' → logprob: -7.438828945159912
    8. '(' → logprob: -8.063828468322754
    9. '(n' → logprob: -8.313828468322754
    10. 'pow' → logprob: -8.438828468322754

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009954140987247229
    2. 'i' → logprob: -7.625995635986328
    3. '[n' → logprob: -7.875995635986328
    4. '[' → logprob: -9.125995635986328
    5. 'b' → logprob: -12.250995635986328
    6. '(i' → logprob: -12.750995635986328
    7. 'n' → logprob: -12.875995635986328
    8. '[(' → logprob: -12.875995635986328
    9. '```' → logprob: -14.125995635986328
    10. '[
' → logprob: -14.250995635986328

Token 182: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0037658745422959328
    2. '[i' → logprob: -6.128766059875488
    3. ' -' → logprob: -6.628766059875488
    4. ']' → logprob: -8.878766059875488
    5. '1' → logprob: -10.003766059875488
    6. '[' → logprob: -10.378766059875488
    7. 'i' → logprob: -10.628766059875488
    8. '[-' → logprob: -12.253766059875488
    9. '   ' → logprob: -12.503766059875488
    10. '```' → logprob: -12.503766059875488

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '2' → logprob: -11.750020980834961
    3. ' ' → logprob: -12.500020980834961
    4. '```' → logprob: -12.875020980834961
    5. '   ' → logprob: -13.375020980834961
    6. '

' → logprob: -13.750020980834961
    7. '
' → logprob: -13.750020980834961
    8. '-' → logprob: -15.000020980834961
    9. '
' → logprob: -15.000020980834961
    10. 'i' → logprob: -15.062520980834961

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006033785175532103
    2. ']%' → logprob: -5.131033897399902
    3. ' ]' → logprob: -9.631033897399902
    4. '%' → logprob: -10.631033897399902
    5. ' %' → logprob: -12.256033897399902
    6. '-' → logprob: -12.631033897399902
    7. ']
' → logprob: -13.006033897399902
    8. ')' → logprob: -14.006033897399902
    9. '])' → logprob: -14.756033897399902
    10. '[' → logprob: -14.881033897399902

Token 185: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012514829635620117
    2. '%' → logprob: -4.387515068054199
    3. '   ' → logprob: -13.5125150680542
    4. '	' → logprob: -13.8875150680542
    5. ' ' → logprob: -14.3875150680542
    6. ')' → logprob: -14.7625150680542
    7. ' %=' → logprob: -14.8875150680542
    8. ' ' → logprob: -15.2625150680542
    9. ')%' → logprob: -15.2625150680542
    10. '%i' → logprob: -15.5125150680542

Token 186: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.038513846695423126
    2. 'mod' → logprob: -3.2885138988494873
    3. '(mod' → logprob: -7.663513660430908
    4. '	mod' → logprob: -14.163514137268066
    5. ' ' → logprob: -14.413514137268066
    6. ' modul' → logprob: -14.538514137268066
    7. '`' → logprob: -15.663514137268066
    8. '_mod' → logprob: -15.663514137268066
    9. '```' → logprob: -15.788514137268066
    10. ' ' → logprob: -15.913514137268066

Token 187: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.4100644588470459
    2. 'compute' → logprob: -1.285064458847046
    3. 'def' → logprob: -4.660064697265625
    4. ' combine' → logprob: -4.660064697265625
    5. ' get' → logprob: -4.785064697265625
    6. 'combine' → logprob: -5.160064697265625
    7. 'get' → logprob: -5.285064697265625
    8. ' def' → logprob: -5.535064697265625
    9. ' calculate' → logprob: -5.660064697265625
    10. ' calc' → logprob: -5.910064697265625

Token 190: '_' (ID: 62)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.3992917239665985
    2. 'kb' → logprob: -2.274291753768921
    3. '_comb' → logprob: -2.774291753768921
    4. 'k' → logprob: -3.524291753768921
    5. '_c' → logprob: -3.774291753768921
    6. '_factor' → logprob: -3.899291753768921
    7. '_' → logprob: -4.149291515350342
    8. '_com' → logprob: -5.024291515350342
    9. '_b' → logprob: -5.149291515350342
    10. '_bin' → logprob: -5.274291515350342

Token 191: 'ker' (ID: 4776)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.16125167906284332
    2. 'k' → logprob: -2.4112517833709717
    3. 'b' → logprob: -4.661251544952393
    4. 'pow' → logprob: -4.786251544952393
    5. 'n' → logprob: -5.036251544952393
    6. 'arr' → logprob: -5.536251544952393
    7. 'g' → logprob: -5.786251544952393
    8. 'inv' → logprob: -5.911251544952393
    9. 'comb' → logprob: -5.911251544952393
    10. 'dp' → logprob: -6.286251544952393

Token 192: 'ui' (ID: 1866)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4183509349822998
    2. '(n' → logprob: -1.7933509349822998
    3. 'nels' → logprob: -2.5433509349823
    4. 'nel' → logprob: -3.0433509349823
    5. 'b' → logprob: -4.043351173400879
    6. '[n' → logprob: -4.418351173400879
    7. 'nl' → logprob: -5.543351173400879
    8. 'r' → logprob: -5.918351173400879
    9. '   ' → logprob: -6.543351173400879
    10. 'f' → logprob: -6.543351173400879

Token 193: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04159332066774368
    2. 's' → logprob: -4.291593551635742
    3. 'n' → logprob: -4.916593551635742
    4. 'k' → logprob: -5.791593551635742
    5. 'l' → logprob: -5.791593551635742
    6. 'b' → logprob: -5.791593551635742
    7. 'm' → logprob: -6.416593551635742
    8. 'a' → logprob: -6.541593551635742
    9. '1' → logprob: -6.666593551635742
    10. 'p' → logprob: -6.916593551635742

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017481597024016082
    2. ' ,' → logprob: -9.750174522399902
    3. ',k' → logprob: -9.875174522399902
    4. '):' → logprob: -10.750174522399902
    5. '+' → logprob: -11.250174522399902
    6. ',n' → logprob: -11.625174522399902
    7. ',g' → logprob: -12.875174522399902
    8. '+,' → logprob: -12.875174522399902
    9. '_,' → logprob: -13.000174522399902
    10. '   ' → logprob: -13.125174522399902

Token 195: ' kb' (ID: 68515)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0113632678985596
    2. 'mod' → logprob: -1.0113632678985596
    3. ' kb' → logprob: -2.0113632678985596
    4. 'kb' → logprob: -2.5113632678985596
    5. ' k' → logprob: -3.7613632678985596
    6. 'k' → logprob: -4.0113630294799805
    7. ' g' → logprob: -5.2613630294799805
    8. ' arr' → logprob: -5.8863630294799805
    9. 'arr' → logprob: -6.0113630294799805
    10. 'g' → logprob: -6.0113630294799805

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.0020742492051795e-05
    2. ',' → logprob: -10.125049591064453
    3. '[' → logprob: -12.625049591064453
    4. 'b' → logprob: -12.875049591064453
    5. ')' → logprob: -14.375049591064453
    6. ' ' → logprob: -14.500049591064453
    7. '```' → logprob: -14.625049591064453
    8. '_' → logprob: -14.875049591064453
    9. 'i' → logprob: -15.375049591064453
    10. ' ,' → logprob: -15.500049591064453

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',
' → logprob: -13.875009536743164
    4. '   ' → logprob: -14.375009536743164
    5. 'def' → logprob: -14.875009536743164
    6. ',k' → logprob: -15.125009536743164
    7. ',n' → logprob: -15.625009536743164
    8. '):
' → logprob: -16.750009536743164
    9. '‌,' → logprob: -16.875009536743164
    10. 'n' → logprob: -17.000009536743164

Token 198: ' ker' (ID: 11104)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.085208460688591
    2. ' mod' → logprob: -2.5852084159851074
    3. 'k' → logprob: -5.460208415985107
    4. ' k' → logprob: -7.335208415985107
    5. 'g' → logprob: -7.710208415985107
    6. 'kb' → logprob: -7.835208415985107
    7. ' g' → logprob: -8.835208892822266
    8. ' kb' → logprob: -9.335208892822266
    9. 'arr' → logprob: -9.585208892822266
    10. 'ker' → logprob: -10.085208892822266

Token 199: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.18293340504169464
    2. 'u' → logprob: -1.8079334497451782
    3. 'i' → logprob: -5.807933330535889
    4. '```' → logprob: -9.807933807373047
    5. '[]' → logprob: -10.682933807373047
    6. '1' → logprob: -11.182933807373047
    7. '   ' → logprob: -11.432933807373047
    8. 'uire' → logprob: -11.682933807373047
    9. 'uir' → logprob: -11.932933807373047
    10. 'ei' → logprob: -12.057933807373047

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015841849148273468
    2. '):
' → logprob: -4.640841960906982
    3. '):' → logprob: -5.140841960906982
    4. 'def' → logprob: -9.640841484069824
    5. '   ' → logprob: -10.140841484069824
    6. ',n' → logprob: -10.640841484069824
    7. ',i' → logprob: -10.765841484069824
    8. ' ,' → logprob: -11.015841484069824
    9. ',
' → logprob: -11.015841484069824
    10. '):
' → logprob: -12.015841484069824

Token 201: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04085616022348404
    2. ' mod' → logprob: -3.290856122970581
    3. 'k' → logprob: -6.54085636138916
    4. 'kb' → logprob: -7.41585636138916
    5. '   ' → logprob: -8.54085636138916
    6. 'arr' → logprob: -8.91585636138916
    7. 'n' → logprob: -9.16585636138916
    8. ' k' → logprob: -9.29085636138916
    9. ' kb' → logprob: -9.41585636138916
    10. 'def' → logprob: -10.79085636138916

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2814086675643921
    2. '):
' → logprob: -1.406408667564392
    3. ',' → logprob: -9.156408309936523
    4. '):
' → logprob: -9.531408309936523
    5. '   ' → logprob: -9.906408309936523
    6. ':' → logprob: -11.656408309936523
    7. 'def' → logprob: -11.781408309936523
    8. '):

' → logprob: -11.906408309936523
    9. ')' → logprob: -12.156408309936523
    10. ' ):' → logprob: -14.281408309936523

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011626431718468666
    2. 'for' → logprob: -4.636626243591309
    3. ' for' → logprob: -7.011626243591309
    4. 'ker' → logprob: -7.636626243591309
    5. 'def' → logprob: -7.886626243591309
    6. ' ker' → logprob: -10.011626243591309
    7. '```' → logprob: -10.511626243591309
    8. '    
' → logprob: -11.011626243591309
    9. '	for' → logprob: -12.136626243591309
    10. '
' → logprob: -12.261626243591309

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6971390843391418
    2. 'ker' → logprob: -0.6971390843391418
    3. '   ' → logprob: -5.697139263153076
    4. ' for' → logprob: -8.697138786315918
    5. ' ker' → logprob: -9.197138786315918
    6. 'sum' → logprob: -9.322138786315918
    7. 'def' → logprob: -9.572138786315918
    8. 'total' → logprob: -9.822138786315918
    9. 'kernel' → logprob: -10.072138786315918
    10. 'kern' → logprob: -10.947138786315918

Token 205: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14268961548805237
    2. 'i' → logprob: -2.0176897048950195
    3. '   ' → logprob: -12.26768970489502
    4. '	i' → logprob: -12.39268970489502
    5. ' ' → logprob: -13.51768970489502
    6. '1' → logprob: -14.26768970489502
    7. 'def' → logprob: -14.39268970489502
    8. '(i' → logprob: -14.64268970489502
    9. '  ' → logprob: -14.76768970489502
    10. ' ' → logprob: -15.14268970489502

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026398176327347755
    2. 'in' → logprob: -3.651398181915283
    3. ' ' → logprob: -9.651397705078125
    4. '   ' → logprob: -11.026397705078125
    5. '1' → logprob: -13.026397705078125
    6. ' i' → logprob: -13.026397705078125
    7. '	in' → logprob: -13.026397705078125
    8. '  ' → logprob: -13.276397705078125
    9. '0' → logprob: -13.526397705078125
    10. '=' → logprob: -13.651397705078125

Token 207: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04889210686087608
    2. 'range' → logprob: -3.048892021179199
    3. '1' → logprob: -8.9238920211792
    4. ' ' → logprob: -9.0488920211792
    5. '(range' → logprob: -11.0488920211792
    6. ' in' → logprob: -11.5488920211792
    7. '0' → logprob: -11.7988920211792
    8. '(' → logprob: -11.9238920211792
    9. '   ' → logprob: -12.2988920211792
    10. ' i' → logprob: -13.2988920211792

Token 208: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.179569077678025e-05
    2. ' (' → logprob: -10.250041961669922
    3. '1' → logprob: -12.750041961669922
    4. '(n' → logprob: -13.250041961669922
    5. ' ' → logprob: -14.375041961669922
    6. ',' → logprob: -14.625041961669922
    7. '(i' → logprob: -15.125041961669922
    8. ' range' → logprob: -16.000041961669922
    9. '   ' → logprob: -16.125041961669922
    10. '(
' → logprob: -16.250041961669922

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004744023026432842
    2. ' ' → logprob: -8.250473976135254
    3. 'n' → logprob: -8.875473976135254
    4. '0' → logprob: -10.500473976135254
    5. '   ' → logprob: -10.875473976135254
    6. '2' → logprob: -11.000473976135254
    7. ' n' → logprob: -12.750473976135254
    8. '
' → logprob: -12.875473976135254
    9. 'i' → logprob: -13.625473976135254
    10. '

' → logprob: -14.125473976135254

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ' ,' → logprob: -10.625046730041504
    3. ',n' → logprob: -10.750046730041504
    4. 'n' → logprob: -15.125046730041504
    5. '   ' → logprob: -15.250046730041504
    6. ',
' → logprob: -16.875045776367188
    7. '_,' → logprob: -17.500045776367188
    8. ' ' → logprob: -17.875045776367188
    9. '1' → logprob: -18.250045776367188
    10. '(n' → logprob: -18.500045776367188

Token 211: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132677972316742
    2. 'n' → logprob: -1.3132678270339966
    3. '   ' → logprob: -12.688267707824707
    4. '	n' → logprob: -14.188267707824707
    5. 'len' → logprob: -14.438267707824707
    6. ' ' → logprob: -14.813267707824707
    7. '    ' → logprob: -14.938267707824707
    8. '<|end|>' → logprob: -15.188267707824707
    9. ' len' → logprob: -15.313267707824707
    10. ')n' → logprob: -16.063268661499023

Token 212: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31342944502830505
    2. '+' → logprob: -1.3134294748306274
    3. '):
' → logprob: -9.438429832458496
    4. '   ' → logprob: -9.813429832458496
    5. ' +
' → logprob: -11.313429832458496
    6. '+
' → logprob: -12.188429832458496
    7. '):' → logprob: -12.313429832458496
    8. ' ' → logprob: -12.438429832458496
    9. '+i' → logprob: -13.063429832458496
    10. ',' → logprob: -13.813429832458496

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016438805032521486
    2. '+' → logprob: -6.876643657684326
    3. ' ' → logprob: -7.501643657684326
    4. 'i' → logprob: -11.251644134521484
    5. ' +' → logprob: -11.251644134521484
    6. '```' → logprob: -11.251644134521484
    7. '   ' → logprob: -11.376644134521484
    8. '2' → logprob: -12.751644134521484
    9. ')' → logprob: -13.001644134521484
    10. ' i' → logprob: -14.751644134521484

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. '+' → logprob: -10.000078201293945
    3. ' ' → logprob: -10.750078201293945
    4. 'i' → logprob: -11.875078201293945
    5. '```' → logprob: -13.500078201293945
    6. '   ' → logprob: -13.750078201293945
    7. '2' → logprob: -14.000078201293945
    8. ' +' → logprob: -15.125078201293945
    9. ')' → logprob: -15.500078201293945
    10. '
' → logprob: -15.750078201293945

Token 215: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014199234545230865
    2. '):' → logprob: -4.264199256896973
    3. '):
' → logprob: -11.264199256896973
    4. ':' → logprob: -11.389199256896973
    5. '   ' → logprob: -11.889199256896973
    6. ':
' → logprob: -12.514199256896973
    7. '):

' → logprob: -14.889199256896973
    8. ' ):
' → logprob: -15.014199256896973
    9. '():
' → logprob: -15.889199256896973
    10. ')' → logprob: -16.014198303222656

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03122108429670334
    2. '   ' → logprob: -3.7812211513519287
    3. 'ker' → logprob: -5.28122091293335
    4. ' ker' → logprob: -5.90622091293335
    5. '```' → logprob: -10.531221389770508
    6. 'def' → logprob: -10.781221389770508
    7. 'kern' → logprob: -11.656221389770508
    8. '	' → logprob: -11.656221389770508
    9. '           ' → logprob: -11.906221389770508
    10. '     ' → logprob: -12.031221389770508

Token 217: ' ker' (ID: 11104)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' (adapté à ' ker') → logprob: -0.01896941289305687
    2. ' ker' → logprob: -4.018969535827637
    3. '   ' → logprob: -7.143969535827637
    4. '       ' → logprob: -10.768969535827637
    5. ' ' → logprob: -12.893969535827637
    6. 'kernel' → logprob: -13.518969535827637
    7. 'kern' → logprob: -13.768969535827637
    8. '  ' → logprob: -13.893969535827637
    9. '```' → logprob: -14.518969535827637
    10. 'Ker' → logprob: -14.643969535827637

Token 218: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.006570079363882542
    2. 'u' → logprob: -5.256569862365723
    3. 'uri' → logprob: -7.756569862365723
    4. 'rui' → logprob: -7.756569862365723
    5. 'uir' → logprob: -9.006569862365723
    6. 'uire' → logprob: -9.256569862365723
    7. 'uiu' → logprob: -9.881569862365723
    8. 'uei' → logprob: -10.006569862365723
    9. '   ' → logprob: -10.006569862365723
    10. 'uji' → logprob: -10.506569862365723

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001549089647596702
    2. '[' → logprob: -8.875154495239258
    3. '[I' → logprob: -12.250154495239258
    4. ' [' → logprob: -12.500154495239258
    5. '\[' → logprob: -13.375154495239258
    6. 'i' → logprob: -13.500154495239258
    7. '```' → logprob: -13.750154495239258
    8. '   ' → logprob: -14.000154495239258
    9. '.append' → logprob: -14.750154495239258
    10. '=' → logprob: -15.625154495239258

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013572083844337612
    2. ']=' → logprob: -9.25013542175293
    3. '=' → logprob: -11.00013542175293
    4. ' ]' → logprob: -11.25013542175293
    5. '[' → logprob: -12.50013542175293
    6. ']+=' → logprob: -13.25013542175293
    7. ']
' → logprob: -13.37513542175293
    8. '-' → logprob: -14.12513542175293
    9. ')' → logprob: -14.37513542175293
    10. ' =' → logprob: -14.37513542175293

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620025210082531
    2. ' =' → logprob: -2.812002420425415
    3. '+=' → logprob: -10.812002182006836
    4. ' +=' → logprob: -11.187002182006836
    5. '[' → logprob: -15.062002182006836
    6. '=i' → logprob: -15.937002182006836
    7. '*=' → logprob: -16.062002182006836
    8. '＝' → logprob: -16.437002182006836
    9. '.=' → logprob: -16.687002182006836
    10. '%=' → logprob: -16.937002182006836

Token 222: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14593572914600372
    2. 'ker' → logprob: -2.2709357738494873
    3. ' (' → logprob: -3.7709357738494873
    4. ' ker' → logprob: -4.895935535430908
    5. '   ' → logprob: -7.020935535430908
    6. '(k' → logprob: -7.520935535430908
    7. ' ' → logprob: -8.708436012268066
    8. 'kb' → logprob: -9.458436012268066
    9. '(kernel' → logprob: -9.895936012268066
    10. '((' → logprob: -10.020936012268066

Token 223: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.0005190743831917644
    2. ' ker' → logprob: -7.625519275665283
    3. 'kb' → logprob: -10.750518798828125
    4. 'kernel' → logprob: -13.375518798828125
    5. '(' → logprob: -13.625518798828125
    6. '   ' → logprob: -13.625518798828125
    7. 'kern' → logprob: -13.625518798828125
    8. 'k' → logprob: -14.000518798828125
    9. 'i' → logprob: -14.000518798828125
    10. 'Ker' → logprob: -15.313018798828125

Token 224: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.012863005511462688
    2. 'uri' → logprob: -5.0128631591796875
    3. 'rui' → logprob: -5.1378631591796875
    4. 'uir' → logprob: -9.887863159179688
    5. 'uiu' → logprob: -10.262863159179688
    6. '[i' → logprob: -10.387863159179688
    7. 'uei' → logprob: -10.637863159179688
    8. 'uni' → logprob: -10.762863159179688
    9. 'u' → logprob: -11.137863159179688
    10. 'uer' → logprob: -11.262863159179688

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. 'i' → logprob: -11.000019073486328
    3. '[' → logprob: -13.750019073486328
    4. ' i' → logprob: -14.125019073486328
    5. '   ' → logprob: -15.375019073486328
    6. '
' → logprob: -17.000019073486328
    7. ' [' → logprob: -17.000019073486328
    8. '[I' → logprob: -17.375019073486328
    9. '(i' → logprob: -17.500019073486328
    10. '	i' → logprob: -18.000019073486328

Token 226: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05073388293385506
    2. '-' → logprob: -3.050733804702759
    3. 'i' → logprob: -6.175734043121338
    4. '[' → logprob: -10.42573356628418
    5. ']' → logprob: -11.05073356628418
    6. '   ' → logprob: -11.92573356628418
    7. '(i' → logprob: -12.42573356628418
    8. ' -' → logprob: -13.05073356628418
    9. '1' → logprob: -13.30073356628418
    10. '[-' → logprob: -13.55073356628418

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.562506675720215
    4. '```' → logprob: -15.125006675720215
    5. '
' → logprob: -15.375006675720215
    6. ']' → logprob: -16.12500762939453
    7. '0' → logprob: -16.87500762939453
    8. '...' → logprob: -17.12500762939453
    9. '

' → logprob: -17.31250762939453
    10. '
' → logprob: -17.56250762939453

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008335602469742298
    2. '+' → logprob: -5.508335590362549
    3. ']+' → logprob: -5.633335590362549
    4. ' +' → logprob: -7.383335590362549
    5. ' ]' → logprob: -10.758336067199707
    6. '[' → logprob: -12.383336067199707
    7. ']*' → logprob: -12.883336067199707
    8. ' ' → logprob: -12.883336067199707
    9. '*' → logprob: -13.133336067199707
    10. ')' → logprob: -13.133336067199707

Token 229: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47413933277130127
    2. ' +' → logprob: -0.9741393327713013
    3. '+k' → logprob: -10.849139213562012
    4. '+i' → logprob: -10.974139213562012
    5. ' ' → logprob: -12.099139213562012
    6. ' plus' → logprob: -12.224139213562012
    7. '*' → logprob: -12.474139213562012
    8. '+
' → logprob: -12.849139213562012
    9. ' *' → logprob: -13.599139213562012
    10. '
' → logprob: -13.724139213562012

Token 230: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.089118093252182
    2. ' kb' → logprob: -2.464118003845215
    3. '   ' → logprob: -9.589118003845215
    4. ' ' → logprob: -9.964118003845215
    5. 'k' → logprob: -10.964118003845215
    6. 'ker' → logprob: -11.839118003845215
    7. '
' → logprob: -11.964118003845215
    8. 'i' → logprob: -12.089118003845215
    9. ' i' → logprob: -12.589118003845215
    10. 'nb' → logprob: -12.714118003845215

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '[i' → logprob: -11.250018119812012
    3. '[' → logprob: -12.375018119812012
    4. 'b' → logprob: -14.500018119812012
    5. '```' → logprob: -15.500018119812012
    6. ' ' → logprob: -16.375019073486328
    7. '
' → logprob: -17.125019073486328
    8. '(i' → logprob: -17.500019073486328
    9. 'i' → logprob: -17.812519073486328
    10. '   ' → logprob: -17.937519073486328

Token 232: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.250009536743164
    4. ')[' → logprob: -14.625009536743164
    5. '[I' → logprob: -15.250009536743164
    6. ' [' → logprob: -15.625009536743164
    7. '```' → logprob: -16.375009536743164
    8. ')' → logprob: -16.625009536743164
    9. '
' → logprob: -17.250009536743164
    10. ' i' → logprob: -18.250009536743164

Token 233: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18691182136535645
    2. ')' → logprob: -1.8119118213653564
    3. ']' → logprob: -5.061911582946777
    4. '[i' → logprob: -7.811911582946777
    5. ' ])' → logprob: -8.561911582946777
    6. ' )' → logprob: -9.061911582946777
    7. '   ' → logprob: -10.936911582946777
    8. '*i' → logprob: -11.061911582946777
    9. '*' → logprob: -11.311911582946777
    10. ''])' → logprob: -11.561911582946777

Token 234: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06237063184380531
    2. '%' → logprob: -2.812370538711548
    3. ')' → logprob: -8.687370300292969
    4. '
' → logprob: -9.187370300292969
    5. ' *' → logprob: -9.812370300292969
    6. ' ' → logprob: -10.437370300292969
    7. '*' → logprob: -10.687370300292969
    8. '   ' → logprob: -12.187370300292969
    9. ' ' → logprob: -12.312370300292969
    10. ')%' → logprob: -12.437370300292969

Token 235: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3132653534412384
    2. 'mod' → logprob: -1.313265323638916
    3. '(mod' → logprob: -12.563265800476074
    4. '	mod' → logprob: -16.438264846801758
    5. ' ' → logprob: -18.438264846801758
    6. ' modul' → logprob: -18.438264846801758
    7. ' ' → logprob: -18.688264846801758
    8. '_mod' → logprob: -19.313264846801758
    9. ' мод' → logprob: -19.563264846801758
    10. ' modu' → logprob: -20.313264846801758

Token 236: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2920748293399811
    2. '<|end|>' → logprob: -1.4170747995376587
    3. '```' → logprob: -5.167074680328369
    4. '#' → logprob: -5.917074680328369
    5. '[' → logprob: -6.792074680328369
    6. ')' → logprob: -7.667074680328369
    7. '(' → logprob: -8.042075157165527
    8. '<|end|>' → logprob: -8.542075157165527
    9. ' def' → logprob: -9.167075157165527
    10. '
' → logprob: -9.792075157165527

Token 238: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16353397071361542
    2. 'main' → logprob: -2.038533926010132
    3. ' solve' → logprob: -5.288534164428711
    4. ' factorial' → logprob: -5.913534164428711
    5. 'calculate' → logprob: -6.038534164428711
    6. ' calculate' → logprob: -6.163534164428711
    7. 'factor' → logprob: -6.288534164428711
    8. 'solve' → logprob: -6.413534164428711
    9. ' combination' → logprob: -7.538534164428711
    10. 'comb' → logprob: -7.538534164428711

Token 239: '_' (ID: 62)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.9047200679779053
    2. '_k' → logprob: -1.2797200679779053
    3. '_mod' → logprob: -1.7797200679779053
    4. '_' → logprob: -2.6547200679779053
    5. '_factor' → logprob: -3.7797200679779053
    6. '_n' → logprob: -4.654720306396484
    7. '_sum' → logprob: -4.904720306396484
    8. '_bin' → logprob: -5.154720306396484
    9. '_c' → logprob: -5.279720306396484
    10. '_com' → logprob: -6.029720306396484

Token 240: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.6299116611480713
    2. 'mod' → logprob: -1.7549116611480713
    3. 'comb' → logprob: -2.0049116611480713
    4. 'C' → logprob: -3.5049116611480713
    5. 'bin' → logprob: -3.8799116611480713
    6. 'com' → logprob: -4.004911422729492
    7. 'k' → logprob: -4.129911422729492
    8. 'max' → logprob: -4.504911422729492
    9. 'c' → logprob: -4.754911422729492
    10. 'n' → logprob: -4.754911422729492

Token 241: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.0002467966405674815
    2. 'u' → logprob: -9.12524700164795
    3. 'uire' → logprob: -9.87524700164795
    4. 'uir' → logprob: -10.75024700164795
    5. '_ui' → logprob: -11.25024700164795
    6. 'uiu' → logprob: -11.37524700164795
    7. 'uni' → logprob: -11.87524700164795
    8. 'uei' → logprob: -11.87524700164795
    9. 'uri' → logprob: -12.25024700164795
    10. 'uin' → logprob: -12.37524700164795

Token 242: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08154546469449997
    2. '(' → logprob: -2.581545352935791
    3. '():' → logprob: -7.206545352935791
    4. '(i' → logprob: -7.456545352935791
    5. '(index' → logprob: -7.956545352935791
    6. '(size' → logprob: -8.58154582977295
    7. '_' → logprob: -9.08154582977295
    8. ' (' → logprob: -9.45654582977295
    9. 's' → logprob: -9.83154582977295
    10. 'def' → logprob: -9.95654582977295

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023456037044525146
    2. '):' → logprob: -3.77345609664917
    3. '+' → logprob: -9.398455619812012
    4. ')' → logprob: -10.023455619812012
    5. '):
' → logprob: -10.773455619812012
    6. ',n' → logprob: -10.898455619812012
    7. ' ,' → logprob: -11.523455619812012
    8. ',
' → logprob: -11.648455619812012
    9. ',k' → logprob: -11.648455619812012
    10. '   ' → logprob: -12.773455619812012

Token 244: ' g' (ID: 329)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3720516860485077
    2. ' mod' → logprob: -1.24705171585083
    3. 'kb' → logprob: -4.99705171585083
    4. 'ker' → logprob: -5.49705171585083
    5. ' ker' → logprob: -5.49705171585083
    6. 'k' → logprob: -5.87205171585083
    7. ' kb' → logprob: -5.99705171585083
    8. 'arr' → logprob: -6.62205171585083
    9. ' k' → logprob: -7.49705171585083
    10. ' arr' → logprob: -7.62205171585083

Token 245: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015500946901738644
    2. 'ker' → logprob: -7.001550197601318
    3. '_k' → logprob: -8.37654972076416
    4. 'def' → logprob: -8.37654972076416
    5. 'g' → logprob: -9.75154972076416
    6. ')' → logprob: -10.87654972076416
    7. '_' → logprob: -10.87654972076416
    8. '[' → logprob: -11.50154972076416
    9. 'b' → logprob: -11.62654972076416
    10. ' k' → logprob: -11.75154972076416

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005462417611852288
    2. '):' → logprob: -8.1255464553833
    3. ',n' → logprob: -9.6255464553833
    4. ',k' → logprob: -9.7505464553833
    5. '):
' → logprob: -10.2505464553833
    6. ' ,' → logprob: -10.7505464553833
    7. ',
' → logprob: -11.0005464553833
    8. '[' → logprob: -11.1255464553833
    9. '[n' → logprob: -11.8755464553833
    10. 'k' → logprob: -12.8755464553833

Token 247: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17833919823169708
    2. 'kb' → logprob: -2.5533392429351807
    3. ' k' → logprob: -3.3033392429351807
    4. 'mod' → logprob: -4.178339004516602
    5. 'ker' → logprob: -4.303339004516602
    6. ' kb' → logprob: -4.428339004516602
    7. ' ker' → logprob: -5.553339004516602
    8. ' mod' → logprob: -5.803339004516602
    9. 'n' → logprob: -7.803339004516602
    10. ' n' → logprob: -9.178339004516602

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017541198758408427
    2. ' ,' → logprob: -8.875175476074219
    3. '):
' → logprob: -11.750175476074219
    4. ',
' → logprob: -11.875175476074219
    5. 'def' → logprob: -12.000175476074219
    6. ',k' → logprob: -12.375175476074219
    7. '):' → logprob: -12.750175476074219
    8. '   ' → logprob: -13.375175476074219
    9. ',n' → logprob: -13.750175476074219
    10. '_,' → logprob: -14.125175476074219

Token 249: ' mod' (ID: 1812)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.49124398827552795
    2. 'ker' → logprob: -1.1162439584732056
    3. ' kb' → logprob: -3.366244077682495
    4. ' ker' → logprob: -3.991244077682495
    5. 'mod' → logprob: -5.241243839263916
    6. ' mod' → logprob: -6.866243839263916
    7. 'arr' → logprob: -8.241244316101074
    8. 'k' → logprob: -8.616244316101074
    9. 'kern' → logprob: -8.991244316101074
    10. 'kernel' → logprob: -9.116244316101074

Token 250: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011868205183418468
    2. '):' → logprob: -9.625118255615234
    3. '):
' → logprob: -10.250118255615234
    4. ' ,' → logprob: -11.875118255615234
    5. ',k' → logprob: -12.125118255615234
    6. '   ' → logprob: -13.250118255615234
    7. ',
' → logprob: -14.125118255615234
    8. ',n' → logprob: -14.375118255615234
    9. '_,' → logprob: -14.875118255615234
    10. 'ker' → logprob: -15.375118255615234

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031324487179517746
    2. ' ker' → logprob: -3.5313243865966797
    3. '    
' → logprob: -7.78132438659668
    4. '```' → logprob: -8.15632438659668
    5. 'ker' → logprob: -8.28132438659668
    6. '
' → logprob: -8.40632438659668
    7. 'def' → logprob: -8.53132438659668
    8. ' def' → logprob: -9.78132438659668
    9. '(n' → logprob: -10.90632438659668
    10. '(' → logprob: -11.28132438659668

Token 252: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' (adapté à ' kb') → logprob: -0.20487692952156067
    2. '   ' → logprob: -2.5798768997192383
    3. ' kb' → logprob: -2.5798768997192383
    4. 'ker' → logprob: -3.7048768997192383
    5. ' ker' → logprob: -5.079876899719238
    6. '_,' → logprob: -7.079876899719238
    7. 'arr' → logprob: -7.704876899719238
    8. 'k' → logprob: -8.079876899719238
    9. '```' → logprob: -8.079876899719238
    10. '    
' → logprob: -9.079876899719238

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. 'b' → logprob: -11.250019073486328
    3. '[' → logprob: -12.625019073486328
    4. '_' → logprob: -13.375019073486328
    5. '(' → logprob: -14.750019073486328
    6. ' ' → logprob: -14.875019073486328
    7. ' =' → logprob: -15.875019073486328
    8. '   ' → logprob: -16.250019073486328
    9. '```' → logprob: -16.625019073486328
    10. '=' → logprob: -17.500019073486328

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8566977381706238
    2. ' =' → logprob: -0.9816977381706238
    3. ',' → logprob: -1.6066977977752686
    4. '[' → logprob: -9.106698036193848
    5. '   ' → logprob: -10.356698036193848
    6. ' ,' → logprob: -11.231698036193848
    7. ',n' → logprob: -11.981698036193848
    8. '  ' → logprob: -12.356698036193848
    9. '[i' → logprob: -12.606698036193848
    10. '```' → logprob: -12.606698036193848

Token 255: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004791922401636839
    2. ' [' → logprob: -5.379791736602783
    3. '[k' → logprob: -9.254792213439941
    4. '   ' → logprob: -10.504792213439941
    5. '[g' → logprob: -10.504792213439941
    6. '[n' → logprob: -11.629792213439941
    7. 'g' → logprob: -11.879792213439941
    8. 'k' → logprob: -13.629792213439941
    9. '[get' → logprob: -14.004792213439941
    10. ' ' → logprob: -14.129792213439941

Token 256: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. '1' → logprob: -9.7500581741333
    3. '```' → logprob: -17.125059127807617
    4. ' ' → logprob: -17.375059127807617
    5. 'None' → logprob: -19.125059127807617
    6. '
' → logprob: -19.125059127807617
    7. '۰' → logprob: -19.625059127807617
    8. ']' → logprob: -20.125059127807617
    9. '-' → logprob: -20.250059127807617
    10. '   ' → logprob: -20.375059127807617

Token 257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033665422233752906
    2. '*' → logprob: -8.875336647033691
    3. ']*(' → logprob: -9.250336647033691
    4. ' *' → logprob: -9.500336647033691
    5. '*(' → logprob: -11.500336647033691
    6. ']*' → logprob: -11.750336647033691
    7. ']+' → logprob: -12.875336647033691
    8. '   ' → logprob: -13.125336647033691
    9. ')' → logprob: -13.750336647033691
    10. ' ]' → logprob: -13.875336647033691

Token 258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5076318383216858
    2. '*(' → logprob: -1.382631778717041
    3. '*' → logprob: -2.382631778717041
    4. '(n' → logprob: -4.257631778717041
    5. '   ' → logprob: -4.257631778717041
    6. ',' → logprob: -4.882631778717041
    7. ']*(' → logprob: -5.382631778717041
    8. ']' → logprob: -5.632631778717041
    9. '*n' → logprob: -5.882631778717041
    10. '0' → logprob: -6.132631778717041

Token 259: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019515875028446317
    2. ' (' → logprob: -6.251951694488525
    3. '(' → logprob: -10.751951217651367
    4. '((' → logprob: -14.001951217651367
    5. 'n' → logprob: -14.501951217651367
    6. '   ' → logprob: -15.751951217651367
    7. '(
' → logprob: -16.751951217651367
    8. ',' → logprob: -17.751951217651367
    9. '
' → logprob: -17.876951217651367
    10. '(len' → logprob: -18.626951217651367

Token 260: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.65707261255011e-06
    2. '(n' → logprob: -11.750008583068848
    3. ' n' → logprob: -14.125008583068848
    4. '
' → logprob: -18.750009536743164
    5. '[n' → logprob: -18.875009536743164
    6. '   ' → logprob: -19.875009536743164
    7. '	n' → logprob: -20.125009536743164
    8. '(' → logprob: -20.625009536743164
    9. ')n' → logprob: -20.625009536743164
    10. '```' → logprob: -21.375009536743164

Token 261: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006716317031532526
    2. ' +' → logprob: -5.006716251373291
    3. '+
' → logprob: -14.50671672821045
    4. '   ' → logprob: -15.38171672821045
    5. '+n' → logprob: -16.506715774536133
    6. '```' → logprob: -17.256715774536133
    7. ' +
' → logprob: -17.506715774536133
    8. '＋' → logprob: -18.006715774536133
    9. '
' → logprob: -18.131715774536133
    10. ')' → logprob: -18.381715774536133

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.125011444091797
    4. '   ' → logprob: -16.375011444091797
    5. '2' → logprob: -17.750011444091797
    6. '
' → logprob: -18.250011444091797
    7. '10' → logprob: -18.500011444091797
    8. '7' → logprob: -18.812511444091797
    9. '0' → logprob: -19.000011444091797
    10. 'def' → logprob: -19.375011444091797

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.375015258789062
    4. '2' → logprob: -15.875015258789062
    5. '   ' → logprob: -16.000015258789062
    6. '10' → logprob: -16.375015258789062
    7. '
' → logprob: -16.875015258789062
    8. '7' → logprob: -17.625015258789062
    9. '0' → logprob: -17.875015258789062
    10. '100' → logprob: -18.375015258789062

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043221889063715935
    2. ')
' → logprob: -7.750432014465332
    3. ')
' → logprob: -14.000432014465332
    4. ' )' → logprob: -14.625432014465332
    5. ')

' → logprob: -16.62543296813965
    6. '),' → logprob: -17.75043296813965
    7. '   ' → logprob: -18.00043296813965
    8. '))' → logprob: -18.12543296813965
    9. ')`' → logprob: -18.50043296813965
    10. '```' → logprob: -19.75043296813965

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6475244760513306
    2. 'compute' → logprob: -0.7725244760513306
    3. ' compute' → logprob: -4.272524356842041
    4. 'ker' → logprob: -8.1475248336792
    5. 'get' → logprob: -8.7725248336792
    6. 'def' → logprob: -9.2725248336792
    7. '[' → logprob: -9.5225248336792
    8. '
' → logprob: -9.5225248336792
    9. ' ker' → logprob: -9.7725248336792
    10. '    
' → logprob: -10.0225248336792

Token 266: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.018158137798309326
    2. '   ' → logprob: -4.768157958984375
    3. ' compute' → logprob: -5.018157958984375
    4. 'ker' → logprob: -5.893157958984375
    5. ' ker' → logprob: -10.018157958984375
    6. '    
' → logprob: -10.518157958984375
    7. 'def' → logprob: -11.393157958984375
    8. 'kb' → logprob: -11.893157958984375
    9. 'for' → logprob: -12.143157958984375
    10. '  ' → logprob: -12.643157958984375

Token 267: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0009231308358721435
    2. '_' → logprob: -7.000923156738281
    3. 'kb' → logprob: -11.625923156738281
    4. 'k' → logprob: -13.250923156738281
    5. '_kernel' → logprob: -14.375923156738281
    6. '_b' → logprob: -16.00092315673828
    7. '_compute' → logprob: -16.50092315673828
    8. '_ke' → logprob: -16.62592315673828
    9. '_kw' → logprob: -17.75092315673828
    10. '_kn' → logprob: -17.87592315673828

Token 268: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.8444881536415778e-05
    2. '(n' → logprob: -11.000028610229492
    3. '_b' → logprob: -11.375028610229492
    4. '(' → logprob: -16.250028610229492
    5. 'б' → logprob: -17.750028610229492
    6. 'B' → logprob: -18.250028610229492
    7. '​' → logprob: -18.875028610229492
    8. '[n' → logprob: -19.500028610229492
    9. ' ' → logprob: -19.625028610229492
    10. ' (' → logprob: -19.625028610229492

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.125000953674316
    3. '```' → logprob: -17.875
    4. '(' → logprob: -19.0
    5. '_' → logprob: -19.125
    6. '[' → logprob: -19.25
    7. ' ' → logprob: -19.375
    8. '' → logprob: -20.125
    9. '１' → logprob: -21.5
    10. 'a' → logprob: -21.5

Token 270: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012451570364646614
    2. '(' → logprob: -9.75012493133545
    3. ' (' → logprob: -10.25012493133545
    4. '<|end|>' → logprob: -10.50012493133545
    5. '(
' → logprob: -14.25012493133545
    6. '```' → logprob: -14.68762493133545
    7. '<|end|>' → logprob: -15.00012493133545
    8. '<n' → logprob: -15.37512493133545
    9. ',n' → logprob: -16.437623977661133

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ',g' → logprob: -11.875016212463379
    3. ',k' → logprob: -12.500016212463379
    4. ' ,' → logprob: -12.500016212463379
    5. ',
' → logprob: -14.250016212463379
    6. 'g' → logprob: -15.375016212463379
    7. ')' → logprob: -15.375016212463379
    8. ',b' → logprob: -16.125015258789062
    9. ',n' → logprob: -17.125015258789062
    10. '   ' → logprob: -17.500015258789062

Token 272: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003177952254191041
    2. ' g' → logprob: -5.753178119659424
    3. '<|end|>' → logprob: -15.503177642822266
    4. '	g' → logprob: -17.253177642822266
    5. '#g' → logprob: -18.253177642822266
    6. '_g' → logprob: -19.753177642822266
    7. '
' → logprob: -19.878177642822266
    8. ')' → logprob: -20.753177642822266
    9. ' gâ' → logprob: -20.753177642822266
    10. '.g' → logprob: -21.378177642822266

Token 273: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -15.000000953674316
    3. 'g' → logprob: -15.375000953674316
    4. '1' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. '[k' → logprob: -18.875
    7. '_k' → logprob: -19.0
    8. 'n' → logprob: -19.375
    9. 'ker' → logprob: -19.5
    10. '[' → logprob: -19.5

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ',k' → logprob: -10.500039100646973
    3. ' ,' → logprob: -11.375039100646973
    4. 'k' → logprob: -16.62504005432129
    5. ',
' → logprob: -17.00004005432129
    6. '[' → logprob: -18.75004005432129
    7. ',n' → logprob: -18.87504005432129
    8. ' k' → logprob: -19.00004005432129
    9. '‌,' → logprob: -19.00004005432129
    10. ')' → logprob: -19.12504005432129

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -18.251502990722656
    4. 'kb' → logprob: -19.001502990722656
    5. '   ' → logprob: -19.501502990722656
    6. '    ' → logprob: -19.876502990722656
    7. ' ' → logprob: -19.876502990722656
    8. '  ' → logprob: -20.751502990722656
    9. '
' → logprob: -21.126502990722656
    10. '[k' → logprob: -21.501502990722656

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.875000953674316
    3. ',k' → logprob: -15.500000953674316
    4. ',b' → logprob: -18.375
    5. 'k' → logprob: -19.0
    6. '   ' → logprob: -20.125
    7. ',
' → logprob: -20.25
    8. '1' → logprob: -20.625
    9. '‌,' → logprob: -20.875
    10. 'b' → logprob: -21.125

Token 277: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.023245826363563538
    2. ' kb' → logprob: -3.7732458114624023
    3. 'k' → logprob: -15.398245811462402
    4. 'Kb' → logprob: -16.89824676513672
    5. 'KB' → logprob: -17.89824676513672
    6. ' ' → logprob: -19.52324676513672
    7. 'ker' → logprob: -19.52324676513672
    8. 'b' → logprob: -19.52324676513672
    9. 'kbd' → logprob: -19.89824676513672
    10. '   ' → logprob: -20.89824676513672

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'b' → logprob: -17.125
    4. ',' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. '   ' → logprob: -18.25
    7. ' ' → logprob: -18.625
    8. ')' → logprob: -18.75
    9. '_' → logprob: -19.125
    10. ']' → logprob: -19.375

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: 0.0
    2. ' ,' → logprob: -18.25
    3. ')' → logprob: -18.625
    4. '   ' → logprob: -18.875
    5. ',
' → logprob: -20.875
    6. '‌,' → logprob: -21.75
    7. '```' → logprob: -22.75
    8. ',)' → logprob: -23.0
    9. ' ' → logprob: -23.5
    10. '),' → logprob: -23.5

Token 280: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0024756586644798517
    2. 'mod' → logprob: -6.002475738525391
    3. '	mod' → logprob: -18.62747573852539
    4. '(mod' → logprob: -19.87747573852539
    5. ')' → logprob: -20.00247573852539
    6. ' modul' → logprob: -20.12747573852539
    7. ' modu' → logprob: -20.75247573852539
    8. ' ' → logprob: -21.12747573852539
    9. '_mod' → logprob: -21.37747573852539
    10. ' мод' → logprob: -21.75247573852539

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001504982472397387
    2. ')
' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.001504898071289
    4. ')return' → logprob: -16.12650489807129
    5. ' )' → logprob: -16.25150489807129
    6. ')
' → logprob: -16.50150489807129
    7. ')

' → logprob: -16.87650489807129
    8. '),' → logprob: -18.87650489807129
    9. ')`' → logprob: -19.12650489807129
    10. ' ' → logprob: -19.25150489807129

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06228763610124588
    2. 'ker' → logprob: -2.8122875690460205
    3. '
' → logprob: -8.812287330627441
    4. ' ker' → logprob: -9.187287330627441
    5. '    
' → logprob: -10.437287330627441
    6. '```' → logprob: -11.562287330627441
    7. '
' → logprob: -11.937287330627441
    8. '   ' → logprob: -12.187287330627441
    9. 'kern' → logprob: -12.687287330627441
    10. 'return' → logprob: -12.812287330627441

Token 283: ' ker' (ID: 11104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5311668515205383
    2. 'ker' (adapté à ' ker') → logprob: -0.9061668515205383
    3. 'return' → logprob: -5.031167030334473
    4. ' ker' → logprob: -7.156167030334473
    5. '    
' → logprob: -8.406167030334473
    6. ' return' → logprob: -9.281167030334473
    7. 'kernel' → logprob: -9.531167030334473
    8. '
' → logprob: -9.906167030334473
    9. 'compute' → logprob: -10.031167030334473
    10. '```' → logprob: -10.156167030334473

Token 284: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.25775593519210815
    2. 'u' → logprob: -1.882755994796753
    3. 'rui' → logprob: -2.882755994796753
    4. 'uir' → logprob: -5.007755756378174
    5. 'uiu' → logprob: -5.132755756378174
    6. 'uire' → logprob: -5.882755756378174
    7. 'ru' → logprob: -6.757755756378174
    8. 'uri' → logprob: -7.257755756378174
    9. 'uei' → logprob: -8.007756233215332
    10. 'uji' → logprob: -8.382756233215332

Token 285: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023246755823493004
    2. ' [' → logprob: -3.7732467651367188
    3. '   ' → logprob: -13.898246765136719
    4. ' ' → logprob: -15.023246765136719
    5. '  ' → logprob: -17.52324676513672
    6. '    ' → logprob: -17.77324676513672
    7. '([' → logprob: -17.89824676513672
    8. ' ' → logprob: -18.77324676513672
    9. '[k' → logprob: -20.02324676513672
    10. '{' → logprob: -20.27324676513672

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004324573092162609
    2. '1' → logprob: -7.75043249130249
    3. ' ' → logprob: -13.250432014465332
    4. '   ' → logprob: -18.87543296813965
    5. '[' → logprob: -19.12543296813965
    6. '```' → logprob: -19.75043296813965
    7. '(' → logprob: -20.81293296813965
    8. '
' → logprob: -20.93793296813965
    9. ')' → logprob: -21.06293296813965
    10. '=' → logprob: -21.12543296813965

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002229594625532627
    2. ' *' → logprob: -6.627229690551758
    3. '*' → logprob: -7.252229690551758
    4. ']*(' → logprob: -8.877229690551758
    5. '*(' → logprob: -10.502229690551758
    6. ']*' → logprob: -11.377229690551758
    7. ')' → logprob: -12.002229690551758
    8. ' ]' → logprob: -12.627229690551758
    9. ' for' → logprob: -12.877229690551758
    10. '   ' → logprob: -13.377229690551758

Token 289: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10629042983055115
    2. ' *' → logprob: -2.356290340423584
    3. '*(' → logprob: -5.106290340423584
    4. '   ' → logprob: -12.606290817260742
    5. '+' → logprob: -13.981290817260742
    6. '(' → logprob: -14.606290817260742
    7. ')' → logprob: -14.731290817260742
    8. ' ' → logprob: -14.981290817260742
    9. '(n' → logprob: -14.981290817260742
    10. ' *(' → logprob: -15.231290817260742

Token 290: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5759446620941162
    2. ' (' → logprob: -0.8259446620941162
    3. '(' → logprob: -12.200944900512695
    4. '   ' → logprob: -16.700944900512695
    5. 'n' → logprob: -17.325944900512695
    6. ' ' → logprob: -17.700944900512695
    7. ' n' → logprob: -18.575944900512695
    8. '  ' → logprob: -18.700944900512695
    9. '`' → logprob: -19.450944900512695
    10. '(len' → logprob: -19.575944900512695

Token 291: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009302830439992249
    2. '(n' → logprob: -7.125930309295654
    3. ' n' → logprob: -9.000929832458496
    4. '   ' → logprob: -13.375929832458496
    5. ' (' → logprob: -14.000929832458496
    6. '
' → logprob: -16.250930786132812
    7. '(' → logprob: -16.500930786132812
    8. ')n' → logprob: -16.750930786132812
    9. '[n' → logprob: -17.375930786132812
    10. '	n' → logprob: -17.500930786132812

Token 292: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693293392658234
    2. ' +' → logprob: -2.1269328594207764
    3. '   ' → logprob: -12.501933097839355
    4. '+n' → logprob: -14.376933097839355
    5. '+
' → logprob: -16.12693214416504
    6. 'n' → logprob: -16.75193214416504
    7. ')' → logprob: -16.75193214416504
    8. ' ' → logprob: -16.87693214416504
    9. ' +
' → logprob: -17.00193214416504
    10. '()+' → logprob: -17.00193214416504

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012487331696320325
    2. ' ' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.00012493133545
    4. '(' → logprob: -14.75012493133545
    5. '(n' → logprob: -16.250123977661133
    6. '+' → logprob: -16.625123977661133
    7. ' (' → logprob: -17.000123977661133
    8. '```' → logprob: -17.500123977661133
    9. '
' → logprob: -17.625123977661133
    10. '2' → logprob: -17.625123977661133

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.375033378601074
    3. 'n' → logprob: -13.875033378601074
    4. '```' → logprob: -14.625033378601074
    5. '+' → logprob: -15.875033378601074
    6. '   ' → logprob: -16.500032424926758
    7. '0' → logprob: -17.625032424926758
    8. '
' → logprob: -18.625032424926758
    9. ' n' → logprob: -18.875032424926758
    10. 'array' → logprob: -19.000032424926758

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015061709564179182
    2. ')
' → logprob: -6.501506328582764
    3. '   ' → logprob: -12.751505851745605
    4. ')
' → logprob: -15.126505851745605
    5. ')

' → logprob: -15.251505851745605
    6. ' )' → logprob: -15.501505851745605
    7. ']' → logprob: -15.751505851745605
    8. '),' → logprob: -17.501506805419922
    9. ')`' → logprob: -17.626506805419922
    10. '```' → logprob: -18.126506805419922

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005676874425262213
    2. 'compute' → logprob: -7.50056791305542
    3. 'def' → logprob: -12.250567436218262
    4. '
' → logprob: -12.250567436218262
    5. ' compute' → logprob: -12.500567436218262
    6. '<|end|>' → logprob: -14.375567436218262
    7. '    
' → logprob: -15.000567436218262
    8. 'return' → logprob: -16.375568389892578
    9. '```' → logprob: -16.375568389892578
    10. '       ' → logprob: -16.625568389892578

Token 297: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -2.5822400857578032e-05
    2. '   ' → logprob: -10.625025749206543
    3. '
' → logprob: -13.750025749206543
    4. ' compute' → logprob: -15.000025749206543
    5. 'for' → logprob: -16.87502670288086
    6. 'get' → logprob: -17.25002670288086
    7. 'return' → logprob: -17.25002670288086
    8. '```' → logprob: -17.62502670288086
    9. '    
' → logprob: -17.87502670288086
    10. 'def' → logprob: -18.50002670288086

Token 298: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005234713666141033
    2. 'ker' → logprob: -5.255234718322754
    3. 'kernel' → logprob: -15.005234718322754
    4. ' ker' → logprob: -15.130234718322754
    5. 'Ker' → logprob: -15.255234718322754
    6. 'KER' → logprob: -17.130233764648438
    7. '_kernel' → logprob: -17.505233764648438
    8. 'k' → logprob: -17.880233764648438
    9. '\' → logprob: -18.880233764648438
    10. 'kern' → logprob: -19.005233764648438

Token 299: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: 0.0
    2. ' ker' → logprob: -19.25
    3. 'kernel' → logprob: -19.5
    4. 'ter' → logprob: -20.5
    5. 'Ker' → logprob: -21.125
    6. 'k' → logprob: -21.5
    7. 'ger' → logprob: -21.75
    8. 'ber' → logprob: -21.75
    9. 'ken' → logprob: -22.25
    10. 'er' → logprob: -22.5

Token 300: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -2.117345684382599e-05
    2. 'u' → logprob: -11.625020980834961
    3. 'uiu' → logprob: -12.250020980834961
    4. 'uni' → logprob: -13.000020980834961
    5. '_ui' → logprob: -13.750020980834961
    6. '```' → logprob: -14.125020980834961
    7. '   ' → logprob: -14.375020980834961
    8. 'uir' → logprob: -14.625020980834961
    9. 'uid' → logprob: -15.000020980834961
    10. 'uei' → logprob: -15.125020980834961

Token 301: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -14.875008583068848
    4. 'n' → logprob: -15.750008583068848
    5. '```' → logprob: -16.500009536743164
    6. '(
' → logprob: -16.500009536743164
    7. 'def' → logprob: -17.500009536743164
    8. '<|end|>' → logprob: -18.375009536743164
    9. '(len' → logprob: -18.625009536743164
    10. '(N' → logprob: -18.625009536743164

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -14.875000953674316
    3. ',k' → logprob: -16.375
    4. ',
' → logprob: -17.125
    5. 'ker' → logprob: -19.0
    6. ')' → logprob: -19.25
    7. '‌,' → logprob: -19.25
    8. ',n' → logprob: -19.625
    9. '(' → logprob: -20.0
    10. ',

' → logprob: -20.125

Token 303: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.03822268545627594
    2. ' kb' → logprob: -3.2882227897644043
    3. 'ker' → logprob: -8.663222312927246
    4. ' ker' → logprob: -11.913222312927246
    5. 'k' → logprob: -14.538222312927246
    6. 'kernel' → logprob: -14.663222312927246
    7. ' ' → logprob: -15.538222312927246
    8. '
' → logprob: -15.538222312927246
    9. 'Kb' → logprob: -16.038223266601562
    10. 'kern' → logprob: -16.538223266601562

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. 'ker' → logprob: -11.625011444091797
    3. '[' → logprob: -13.750011444091797
    4. '```' → logprob: -14.500011444091797
    5. '   ' → logprob: -15.000011444091797
    6. 'b' → logprob: -16.250011444091797
    7. ',' → logprob: -16.875011444091797
    8. '[i' → logprob: -16.875011444091797
    9. ' ' → logprob: -17.125011444091797
    10. ')' → logprob: -17.125011444091797

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',
' → logprob: -16.250003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '‌,' → logprob: -19.500003814697266
    6. '```' → logprob: -19.750003814697266
    7. ',

' → logprob: -20.250003814697266
    8. ')' → logprob: -20.250003814697266
    9. ',\
' → logprob: -20.500003814697266
    10. '
' → logprob: -20.875003814697266

Token 306: ' ker' (ID: 11104)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.01814994215965271
    2. ' ker' → logprob: -4.0181498527526855
    3. 'kernel' → logprob: -17.018150329589844
    4. 'kern' → logprob: -17.768150329589844
    5. 'Ker' → logprob: -18.018150329589844
    6. 'k' → logprob: -19.268150329589844
    7. ' kernel' → logprob: -19.268150329589844
    8. ' ' → logprob: -19.518150329589844
    9. 'KER' → logprob: -20.268150329589844
    10. 'кер' → logprob: -20.393150329589844

Token 307: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.0002767094410955906
    2. 'u' → logprob: -8.750276565551758
    3. 'uiu' → logprob: -10.375276565551758
    4. 'uir' → logprob: -11.125276565551758
    5. 'uni' → logprob: -11.375276565551758
    6. 'uire' → logprob: -11.375276565551758
    7. '_ui' → logprob: -11.625276565551758
    8. 'rui' → logprob: -11.875276565551758
    9. '   ' → logprob: -12.125276565551758
    10. 'uri' → logprob: -12.125276565551758

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.375001907348633
    4. ')' → logprob: -18.000001907348633
    5. '```' → logprob: -18.750001907348633
    6. 'mod' → logprob: -19.375001907348633
    7. ',
' → logprob: -19.375001907348633
    8. '_,' → logprob: -20.750001907348633
    9. 'def' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.250001907348633

Token 309: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001584850688232109
    2. ' mod' → logprob: -8.750158309936523
    3. '	mod' → logprob: -21.750158309936523
    4. '(mod' → logprob: -22.875158309936523
    5. '_mod' → logprob: -24.875158309936523
    6. 'moder' → logprob: -25.000158309936523
    7. '
' → logprob: -25.125158309936523
    8. 'm' → logprob: -25.250158309936523
    9. ' ' → logprob: -25.375158309936523
    10. 'modal' → logprob: -25.625158309936523

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042054426739923656
    2. ')
' → logprob: -7.875420570373535
    3. '   ' → logprob: -10.125420570373535
    4. ' )' → logprob: -15.500420570373535
    5. ')
' → logprob: -16.50041961669922
    6. ')return' → logprob: -16.62541961669922
    7. ')

' → logprob: -18.37541961669922
    8. ' ' → logprob: -18.87541961669922
    9. ')`' → logprob: -19.12541961669922
    10. ',' → logprob: -19.37541961669922

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.0590548703912646e-05
    2. 'return' → logprob: -10.500030517578125
    3. ' return' → logprob: -13.000030517578125
    4. '	return' → logprob: -14.750030517578125
    5. '<|end|>' → logprob: -15.250030517578125
    6. '```' → logprob: -16.750030517578125
    7. '       ' → logprob: -17.500030517578125
    8. '   ' → logprob: -17.750030517578125
    9. '
' → logprob: -18.125030517578125
    10. '{return' → logprob: -18.375030517578125

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10195990651845932
    2. '   ' → logprob: -2.3519599437713623
    3. ' return' → logprob: -6.351959705352783
    4. '	return' → logprob: -12.101960182189941
    5. '{return' → logprob: -13.976960182189941
    6. 'def' → logprob: -14.226960182189941
    7. '
' → logprob: -14.601960182189941
    8. ':return' → logprob: -14.976960182189941
    9. '```' → logprob: -15.976960182189941
    10. ' ' → logprob: -16.226959228515625

Token 313: ' ker' (ID: 11104)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.000912774819880724
    2. ' ker' → logprob: -7.000912666320801
    3. 'kern' → logprob: -14.1259126663208
    4. 'kernel' → logprob: -14.8759126663208
    5. '   ' → logprob: -16.375913619995117
    6. 'kb' → logprob: -16.625913619995117
    7. 'ken' → logprob: -16.875913619995117
    8. 'k' → logprob: -18.000913619995117
    9. 'Ker' → logprob: -18.125913619995117
    10. 'kar' → logprob: -18.250913619995117

Token 314: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -4.179569077678025e-05
    2. 'u' → logprob: -10.250041961669922
    3. 'uiu' → logprob: -13.000041961669922
    4. 'uei' → logprob: -13.625041961669922
    5. 'uir' → logprob: -13.625041961669922
    6. 'uni' → logprob: -15.125041961669922
    7. 'uid' → logprob: -15.375041961669922
    8. 'uire' → logprob: -15.375041961669922
    9. 'uin' → logprob: -15.625041961669922
    10. 'uit' → logprob: -15.750041961669922

Token 315: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18277613818645477
    2. '<|end|>' → logprob: -1.8077760934829712
    3. '#' → logprob: -6.682775974273682
    4. '<|end|>' → logprob: -7.432775974273682
    5. '```' → logprob: -7.557775974273682
    6. 'n' → logprob: -8.43277645111084
    7. ' def' → logprob: -9.05777645111084
    8. '[' → logprob: -9.68277645111084
    9. ')' → logprob: -9.68277645111084
    10. '
' → logprob: -10.05777645111084

Token 317: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23385219275951385
    2. ' solve' → logprob: -1.7338521480560303
    3. ' process' → logprob: -4.733852386474609
    4. ' factorial' → logprob: -4.733852386474609
    5. ' example' → logprob: -5.108852386474609
    6. ' calculate' → logprob: -5.483852386474609
    7. ' compute' → logprob: -7.483852386474609
    8. ' count' → logprob: -7.483852386474609
    9. ' combination' → logprob: -7.733852386474609
    10. ' get' → logprob: -8.23385238647461

Token 318: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1836843490600586
    2. '_sum' → logprob: -1.1836843490600586
    3. '_factor' → logprob: -1.4336843490600586
    4. '(n' → logprob: -3.4336843490600586
    5. '_k' → logprob: -3.4336843490600586
    6. '_mod' → logprob: -4.433684349060059
    7. '_comb' → logprob: -4.933684349060059
    8. '_s' → logprob: -5.183684349060059
    9. '_max' → logprob: -5.308684349060059
    10. '_l' → logprob: -5.558684349060059

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006338051171042025
    2. '(' → logprob: -7.375633716583252
    3. '():' → logprob: -13.25063419342041
    4. '(:' → logprob: -13.75063419342041
    5. '(x' → logprob: -14.50063419342041
    6. '(N' → logprob: -14.62563419342041
    7. '((' → logprob: -14.75063419342041
    8. '(s' → logprob: -14.87563419342041
    9. '(m' → logprob: -15.00063419342041
    10. '(k' → logprob: -15.00063419342041

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007511401199735701
    2. '):' → logprob: -7.25075101852417
    3. ' ,' → logprob: -10.875751495361328
    4. ',n' → logprob: -11.875751495361328
    5. '):
' → logprob: -12.000751495361328
    6. ',
' → logprob: -13.500751495361328
    7. ',k' → logprob: -13.500751495361328
    8. '   ' → logprob: -13.750751495361328
    9. ')' → logprob: -14.000751495361328
    10. '_,' → logprob: -14.125751495361328

Token 321: ' a' (ID: 261)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11575586348772049
    2. ' mod' → logprob: -2.240755796432495
    3. 'k' → logprob: -6.365756034851074
    4. ' k' → logprob: -7.740756034851074
    5. 'g' → logprob: -8.115756034851074
    6. ' g' → logprob: -8.990756034851074
    7. 'm' → logprob: -9.490756034851074
    8. 'ker' → logprob: -9.990756034851074
    9. ' ker' → logprob: -9.990756034851074
    10. 'n' → logprob: -10.490756034851074

Token 322: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6595275402069092
    2. ',' → logprob: -1.1595275402069092
    3. '):
' → logprob: -1.7845275402069092
    4. '):
' → logprob: -8.034527778625488
    5. 'a' → logprob: -8.534527778625488
    6. 'n' → logprob: -9.284527778625488
    7. '   ' → logprob: -9.409527778625488
    8. '1' → logprob: -9.409527778625488
    9. ')' → logprob: -9.784527778625488
    10. ',n' → logprob: -9.784527778625488

Token 323: ' ker' (ID: 11104)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.15852992236614227
    2. ' mod' → logprob: -2.9085299968719482
    3. 'k' → logprob: -3.2835299968719482
    4. 'b' → logprob: -3.2835299968719482
    5. 'm' → logprob: -4.908529758453369
    6. ' b' → logprob: -5.658529758453369
    7. ' k' → logprob: -6.158529758453369
    8. 'ker' → logprob: -7.033529758453369
    9. 'g' → logprob: -7.533529758453369
    10. 'kb' → logprob: -8.033530235290527

Token 324: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -5.836499985889532e-05
    2. 'u' → logprob: -9.8750581741333
    3. 'uir' → logprob: -12.6250581741333
    4. 'uiu' → logprob: -14.3750581741333
    5. 'uis' → logprob: -14.7500581741333
    6. 'rui' → logprob: -14.7500581741333
    7. 'uri' → logprob: -14.8750581741333
    8. 'uire' → logprob: -15.0000581741333
    9. 'uni' → logprob: -15.3750581741333
    10. '   ' → logprob: -15.5000581741333

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001367977005429566
    2. '):
' → logprob: -6.876368045806885
    3. ' ,' → logprob: -8.501367568969727
    4. '):' → logprob: -9.626367568969727
    5. ',n' → logprob: -10.376367568969727
    6. '   ' → logprob: -11.251367568969727
    7. '):
' → logprob: -12.001367568969727
    8. '_,' → logprob: -12.251367568969727
    9. ',
' → logprob: -13.126367568969727
    10. ',k' → logprob: -13.501367568969727

Token 326: ' k' (ID: 372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05544419586658478
    2. ' mod' → logprob: -3.1804442405700684
    3. 'k' → logprob: -5.055444240570068
    4. 'g' → logprob: -5.555444240570068
    5. 'ker' → logprob: -7.430444240570068
    6. ' k' → logprob: -7.680444240570068
    7. ' g' → logprob: -8.18044376373291
    8. 'kb' → logprob: -8.55544376373291
    9. 'm' → logprob: -8.68044376373291
    10. ' ker' → logprob: -9.43044376373291

Token 327: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6717565655708313
    2. '):' → logprob: -0.9217565655708313
    3. ',' → logprob: -2.4217565059661865
    4. '):
' → logprob: -7.921756744384766
    5. '   ' → logprob: -8.171756744384766
    6. 'n' → logprob: -8.171756744384766
    7. '):

' → logprob: -8.296756744384766
    8. ' ):' → logprob: -8.546756744384766
    9. '[' → logprob: -8.671756744384766
    10. ',n' → logprob: -8.671756744384766

Token 328: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05150672793388367
    2. ' mod' → logprob: -3.176506757736206
    3. 'g' → logprob: -4.926506519317627
    4. ' g' → logprob: -7.676506519317627
    5. 'ker' → logprob: -8.426506996154785
    6. 'k' → logprob: -8.801506996154785
    7. 'kb' → logprob: -8.801506996154785
    8. ' ker' → logprob: -9.801506996154785
    9. 'n' → logprob: -10.176506996154785
    10. ')' → logprob: -10.926506996154785

Token 329: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00530882366001606
    2. '):
' → logprob: -5.255308628082275
    3. ',' → logprob: -10.005309104919434
    4. ')' → logprob: -11.630309104919434
    5. ':' → logprob: -11.630309104919434
    6. '):
' → logprob: -12.255309104919434
    7. '   ' → logprob: -12.380309104919434
    8. ' ):' → logprob: -13.130309104919434
    9. '=' → logprob: -15.505309104919434
    10. '[]):' → logprob: -15.630309104919434

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025058019906282425
    2. ' ans' → logprob: -3.9000580310821533
    3. 'ans' → logprob: -6.150057792663574
    4. ' res' → logprob: -6.650057792663574
    5. 'res' → logprob: -7.775057792663574
    6. ' result' → logprob: -8.150057792663574
    7. 'result' → logprob: -8.650057792663574
    8. ' answer' → logprob: -10.025057792663574
    9. 'answer' → logprob: -10.150057792663574
    10. '
' → logprob: -10.525057792663574

Token 331: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.07253953814506531
    2. 'res' → logprob: -2.9475395679473877
    3. 'result' → logprob: -4.947539329528809
    4. 'answer' → logprob: -5.072539329528809
    5. 'total' → logprob: -6.197539329528809
    6. '   ' → logprob: -7.072539329528809
    7. 's' → logprob: -8.322539329528809
    8. 'ret' → logprob: -8.322539329528809
    9. ' ans' → logprob: -8.447539329528809
    10. 'sum' → logprob: -8.572539329528809

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026332929730415344
    2. '=' → logprob: -3.6513328552246094
    3. ',' → logprob: -10.77633285522461
    4. '   ' → logprob: -11.65133285522461
    5. ' ' → logprob: -13.65133285522461
    6. ' =
' → logprob: -14.27633285522461
    7. '_' → logprob: -14.90133285522461
    8. '  ' → logprob: -15.65133285522461
    9. '    ' → logprob: -15.65133285522461
    10. ')' → logprob: -15.90133285522461

Token 333: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005139357876032591
    2. ' ' → logprob: -5.380139350891113
    3. '1' → logprob: -7.630139350891113
    4. 'a' → logprob: -11.005139350891113
    5. '   ' → logprob: -12.505139350891113
    6. 'n' → logprob: -12.505139350891113
    7. '(' → logprob: -13.005139350891113
    8. '[' → logprob: -13.005139350891113
    9. ' a' → logprob: -14.442639350891113
    10. ' (' → logprob: -14.755139350891113

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014072739577386528
    2. '1' → logprob: -9.375141143798828
    3. 'a' → logprob: -10.875141143798828
    4. '(' → logprob: -11.000141143798828
    5. ' ' → logprob: -11.625141143798828
    6. 'n' → logprob: -12.625141143798828
    7. '[' → logprob: -13.000141143798828
    8. '(n' → logprob: -13.875141143798828
    9. '2' → logprob: -14.500141143798828
    10. '(a' → logprob: -14.500141143798828

Token 335: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03771723806858063
    2. '   ' → logprob: -3.412717342376709
    3. '<|end|>' → logprob: -6.287717342376709
    4. ' for' → logprob: -7.537717342376709
    5. '    
' → logprob: -7.537717342376709
    6. ',' → logprob: -8.28771686553955
    7. '  
' → logprob: -8.53771686553955
    8. '
' → logprob: -9.03771686553955
    9. ':
' → logprob: -9.16271686553955
    10. ' 
' → logprob: -9.16271686553955

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02645205333828926
    2. '
' → logprob: -4.27645206451416
    3. ' for' → logprob: -4.77645206451416
    4. '<|end|>' → logprob: -6.52645206451416
    5. ' ' → logprob: -7.40145206451416
    6. '    
' → logprob: -8.02645206451416
    7. '	for' → logprob: -8.02645206451416
    8. '  ' → logprob: -8.52645206451416
    9. 'for' → logprob: -9.02645206451416
    10. ',' → logprob: -9.02645206451416

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.466968650580384e-05
    2. 'i' → logprob: -10.750054359436035
    3. ' for' → logprob: -11.125054359436035
    4. '   ' → logprob: -12.125054359436035
    5. 'prev' → logprob: -12.875054359436035
    6. '```' → logprob: -13.000054359436035
    7. 'factor' → logprob: -13.625054359436035
    8. 'a' → logprob: -14.250054359436035
    9. 'fact' → logprob: -14.500054359436035
    10. 'last' → logprob: -14.625054359436035

Token 338: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5234468579292297
    2. 'i' → logprob: -0.8984468579292297
    3. 'a' → logprob: -10.148447036743164
    4. '	i' → logprob: -10.148447036743164
    5. ' ' → logprob: -10.398447036743164
    6. 'x' → logprob: -10.398447036743164
    7. ' x' → logprob: -10.648447036743164
    8. ' a' → logprob: -10.898447036743164
    9. '   ' → logprob: -11.023447036743164
    10. ' j' → logprob: -11.023447036743164

Token 339: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008896528743207455
    2. 'in' → logprob: -4.758896350860596
    3. ' ' → logprob: -8.633896827697754
    4. ',' → logprob: -10.383896827697754
    5. '   ' → logprob: -11.133896827697754
    6. '    ' → logprob: -11.508896827697754
    7. '=' → logprob: -12.008896827697754
    8. '	in' → logprob: -12.133896827697754
    9. ' i' → logprob: -12.133896827697754
    10. '  ' → logprob: -12.383896827697754

Token 340: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1603878289461136
    2. ' range' → logprob: -1.9103878736495972
    3. 'a' → logprob: -9.285387992858887
    4. '   ' → logprob: -10.785387992858887
    5. ' a' → logprob: -10.910387992858887
    6. ' ' → logprob: -11.660387992858887
    7. '(range' → logprob: -12.160387992858887
    8. '
' → logprob: -12.285387992858887
    9. 'n' → logprob: -12.410387992858887
    10. '  ' → logprob: -12.660387992858887

Token 341: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024047883227467537
    2. '(n' → logprob: -3.7740478515625
    3. ' (' → logprob: -7.5240478515625
    4. '1' → logprob: -9.1490478515625
    5. ',' → logprob: -9.3990478515625
    6. '(a' → logprob: -10.0240478515625
    7. ' ,' → logprob: -11.8990478515625
    8. '(
' → logprob: -12.3990478515625
    9. '(len' → logprob: -12.7740478515625
    10. '(i' → logprob: -12.8990478515625

Token 342: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9342816472053528
    2. '):' → logprob: -1.309281587600708
    3. '+' → logprob: -1.559281587600708
    4. '   ' → logprob: -2.934281587600708
    5. '-' → logprob: -3.309281587600708
    6. ',' → logprob: -4.059281826019287
    7. ' +' → logprob: -4.934281826019287
    8. '1' → logprob: -5.559281826019287
    9. ' -' → logprob: -5.809281826019287
    10. ')' → logprob: -5.934281826019287

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015511852689087391
    2. '   ' → logprob: -4.265511989593506
    3. ' for' → logprob: -8.140511512756348
    4. '    ' → logprob: -8.515511512756348
    5. ' i' → logprob: -8.515511512756348
    6. ' if' → logprob: -8.890511512756348
    7. ',' → logprob: -9.390511512756348
    8. '```' → logprob: -9.390511512756348
    9. ' a' → logprob: -10.015511512756348
    10. 'a' → logprob: -10.140511512756348

Token 344: ' temp' (ID: 5484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8441206812858582
    2. ' ans' → logprob: -2.219120740890503
    3. '   ' → logprob: -2.344120740890503
    4. 'if' → logprob: -2.344120740890503
    5. 'x' → logprob: -2.969120740890503
    6. ' if' → logprob: -3.094120740890503
    7. 'for' → logprob: -3.344120740890503
    8. ' x' → logprob: -3.844120740890503
    9. '       ' → logprob: -3.969120740890503
    10. ' for' → logprob: -4.469120502471924

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08970782160758972
    2. '=' → logprob: -2.464707851409912
    3. ' +=' → logprob: -7.339707851409912
    4. '+=' → logprob: -9.714707374572754
    5. '   ' → logprob: -10.714707374572754
    6. '    ' → logprob: -11.339707374572754
    7. ' ' → logprob: -11.589707374572754
    8. '+' → logprob: -12.964707374572754
    9. '_' → logprob: -13.214707374572754
    10. '```' → logprob: -13.589707374572754

Token 346: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8204870820045471
    2. ' a' → logprob: -2.1954870223999023
    3. 'ker' → logprob: -2.4454870223999023
    4. ' (' → logprob: -2.5704870223999023
    5. ' ker' → logprob: -2.5704870223999023
    6. '(a' → logprob: -2.6954870223999023
    7. 'k' → logprob: -3.0704870223999023
    8. '(' → logprob: -3.0704870223999023
    9. '(k' → logprob: -3.6954870223999023
    10. ' k' → logprob: -4.445487022399902

Token 347: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.5638956427574158
    2. 'a' → logprob: -1.0638957023620605
    3. 'k' → logprob: -2.5638957023620605
    4. '(' → logprob: -5.6888957023620605
    5. 'ans' → logprob: -6.4388957023620605
    6. 'n' → logprob: -6.8138957023620605
    7. '(a' → logprob: -7.0638957023620605
    8. '(k' → logprob: -7.3138957023620605
    9. ' ker' → logprob: -8.188895225524902
    10. '(n' → logprob: -8.688895225524902

Token 348: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.0003936152206733823
    2. 'uri' → logprob: -8.250393867492676
    3. 'uiu' → logprob: -10.375393867492676
    4. 'rui' → logprob: -10.375393867492676
    5. 'u' → logprob: -10.500393867492676
    6. 'uir' → logprob: -11.750393867492676
    7. 'uni' → logprob: -11.875393867492676
    8. 'i' → logprob: -12.250393867492676
    9. 'aui' → logprob: -12.875393867492676
    10. 'uid' → logprob: -13.000393867492676

Token 349: '[i' (ID: 1768)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.15969954431056976
    2. '[n' → logprob: -2.0346994400024414
    3. '[i' → logprob: -4.159699440002441
    4. '[' → logprob: -7.284699440002441
    5. 'a' → logprob: -7.659699440002441
    6. 'n' → logprob: -10.159699440002441
    7. '[
' → logprob: -10.534699440002441
    8. '[min' → logprob: -11.534699440002441
    9. '[j' → logprob: -12.534699440002441
    10. 'i' → logprob: -12.534699440002441

Token 350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06268541514873505
    2. ']' → logprob: -2.937685489654541
    3. ' +' → logprob: -5.687685489654541
    4. '[n' → logprob: -6.562685489654541
    5. '[a' → logprob: -7.062685489654541
    6. '[i' → logprob: -7.062685489654541
    7. '+a' → logprob: -8.062685012817383
    8. '   ' → logprob: -8.562685012817383
    9. '+n' → logprob: -8.937685012817383
    10. '[' → logprob: -8.937685012817383

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006232033483684063
    2. 'a' → logprob: -7.7506232261657715
    3. '2' → logprob: -8.625622749328613
    4. 'i' → logprob: -12.625622749328613
    5. '+' → logprob: -12.875622749328613
    6. ' ' → logprob: -13.000622749328613
    7. '   ' → logprob: -13.000622749328613
    8. 'n' → logprob: -13.625622749328613
    9. '```' → logprob: -15.375622749328613
    10. '
' → logprob: -15.375622749328613

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004794057458639145
    2. '+' → logprob: -5.754794120788574
    3. ']*' → logprob: -8.004794120788574
    4. ' -' → logprob: -8.254794120788574
    5. '-' → logprob: -8.379794120788574
    6. ' +' → logprob: -8.629794120788574
    7. ']+' → logprob: -9.129794120788574
    8. ' ]' → logprob: -9.254794120788574
    9. '[i' → logprob: -9.504794120788574
    10. ' *' → logprob: -9.754794120788574

Token 353: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3433299958705902
    2. ' -' → logprob: -1.3433300256729126
    3. '*' → logprob: -3.843329906463623
    4. '-' → logprob: -5.093329906463623
    5. '+' → logprob: -7.093329906463623
    6. ' +' → logprob: -7.593329906463623
    7. '   ' → logprob: -8.343330383300781
    8. ')' → logprob: -8.468330383300781
    9. ' ' → logprob: -10.218330383300781
    10. '*k' → logprob: -10.218330383300781

Token 354: ' ker' (ID: 11104)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7818261384963989
    2. 'k' → logprob: -1.406826138496399
    3. 'a' → logprob: -2.1568260192871094
    4. 'ker' → logprob: -2.2818260192871094
    5. ' mod' → logprob: -4.156826019287109
    6. '(k' → logprob: -4.281826019287109
    7. ' k' → logprob: -4.656826019287109
    8. ' a' → logprob: -5.031826019287109
    9. ' ker' → logprob: -5.031826019287109
    10. '(mod' → logprob: -5.156826019287109

Token 355: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.0041217380203306675
    2. 'i' → logprob: -6.004121780395508
    3. 'u' → logprob: -6.879121780395508
    4. '[i' → logprob: -8.754121780395508
    5. 'a' → logprob: -9.129121780395508
    6. '   ' → logprob: -9.129121780395508
    7. 'uri' → logprob: -9.504121780395508
    8. 'n' → logprob: -10.629121780395508
    9. 'uiu' → logprob: -11.004121780395508
    10. 'uir' → logprob: -11.129121780395508

Token 356: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10311056673526764
    2. '[i' → logprob: -2.3531105518341064
    3. '[' → logprob: -6.1031107902526855
    4. 'n' → logprob: -8.478110313415527
    5. '[
' → logprob: -9.228110313415527
    6. '(n' → logprob: -9.603110313415527
    7. '```' → logprob: -9.603110313415527
    8. 'i' → logprob: -10.353110313415527
    9. ' [' → logprob: -10.603110313415527
    10. '[(' → logprob: -10.728110313415527

Token 357: '-i' (ID: 18499)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22983263432979584
    2. '-' → logprob: -2.104832649230957
    3. ' -' → logprob: -3.479832649230957
    4. '-i' → logprob: -3.479832649230957
    5. '+' → logprob: -4.979832649230957
    6. ']-' → logprob: -5.229832649230957
    7. '])' → logprob: -5.354832649230957
    8. '[i' → logprob: -5.979832649230957
    9. '-n' → logprob: -7.354832649230957
    10. ')' → logprob: -7.854832649230957

Token 358: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8006283640861511
    2. '+' → logprob: -1.300628423690796
    3. '])' → logprob: -1.300628423690796
    4. '-' → logprob: -6.175628185272217
    5. ')' → logprob: -6.675628185272217
    6. '1' → logprob: -7.675628185272217
    7. '   ' → logprob: -7.800628185272217
    8. ']-' → logprob: -7.800628185272217
    9. ' -' → logprob: -8.050628662109375
    10. ' ]' → logprob: -8.300628662109375

Token 359: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5357199907302856
    2. ')' → logprob: -0.9107199907302856
    3. '-' → logprob: -5.160719871520996
    4. ' )' → logprob: -5.160719871520996
    5. ')%' → logprob: -7.535719871520996
    6. '   ' → logprob: -8.660719871520996
    7. ' +' → logprob: -9.660719871520996
    8. ' ' → logprob: -10.035719871520996
    9. ' *' → logprob: -10.160719871520996
    10. '+' → logprob: -10.285719871520996

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024126669391989708
    2. '2' → logprob: -4.0241265296936035
    3. ' ' → logprob: -5.5241265296936035
    4. 'ker' → logprob: -6.7741265296936035
    5. 'k' → logprob: -8.024127006530762
    6. ' ker' → logprob: -8.899127006530762
    7. 'mod' → logprob: -9.024127006530762
    8. '   ' → logprob: -10.149127006530762
    9. 'temp' → logprob: -10.274127006530762
    10. ' (' → logprob: -10.399127006530762

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007226904854178429
    2. 'ker' → logprob: -5.257226943969727
    3. '2' → logprob: -6.507226943969727
    4. 'k' → logprob: -8.632226943969727
    5. '(' → logprob: -9.257226943969727
    6. ' ' → logprob: -9.757226943969727
    7. '   ' → logprob: -9.757226943969727
    8. 'kb' → logprob: -10.382226943969727
    9. 'mod' → logprob: -11.257226943969727
    10. 'kern' → logprob: -11.507226943969727

Token 362: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0091115552932024
    2. ' )' → logprob: -4.759111404418945
    3. '+' → logprob: -8.009111404418945
    4. ')%' → logprob: -9.759111404418945
    5. ' +' → logprob: -10.009111404418945
    6. '   ' → logprob: -10.134111404418945
    7. ' ' → logprob: -11.384111404418945
    8. '    ' → logprob: -13.134111404418945
    9. ')
' → logprob: -13.509111404418945
    10. '  ' → logprob: -13.634111404418945

Token 363: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022442437708377838
    2. ')%' → logprob: -4.77244234085083
    3. '
' → logprob: -5.02244234085083
    4. ' )' → logprob: -5.14744234085083
    5. '%' → logprob: -7.52244234085083
    6. ' %' → logprob: -8.147442817687988
    7. ']' → logprob: -8.522442817687988
    8. '+' → logprob: -9.772442817687988
    9. '   ' → logprob: -9.897442817687988
    10. ' ' → logprob: -10.272442817687988

Token 364: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.493430894101039e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '	mod' → logprob: -20.62507438659668
    4. '(mod' → logprob: -20.75007438659668
    5. '```' → logprob: -21.75007438659668
    6. ' ' → logprob: -22.12507438659668
    7. '   ' → logprob: -22.75007438659668
    8. '
' → logprob: -24.62507438659668
    9. ' мод' → logprob: -25.00007438659668
    10. 'moder' → logprob: -25.00007438659668

Token 365: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014595920220017433
    2. '<|end|>' → logprob: -5.014595985412598
    3. '
' → logprob: -5.264595985412598
    4. ')' → logprob: -6.139595985412598
    5. '   ' → logprob: -8.389595985412598
    6. ')
' → logprob: -9.389595985412598
    7. '<|end|>' → logprob: -9.764595985412598
    8. '+' → logprob: -10.764595985412598
    9. '        
' → logprob: -10.764595985412598
    10. '```' → logprob: -11.264595985412598

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09514963626861572
    2. '<|end|>' → logprob: -2.470149517059326
    3. ')' → logprob: -5.720149517059326
    4. '   ' → logprob: -6.470149517059326
    5. '
' → logprob: -7.845149517059326
    6. '```' → logprob: -8.345149993896484
    7. '<|end|>' → logprob: -8.345149993896484
    8. '+' → logprob: -8.970149993896484
    9. '        
' → logprob: -9.845149993896484
    10. ',' → logprob: -10.220149993896484

Token 367: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.008473208174109459
    2. 'temp' → logprob: -5.0084733963012695
    3. '       ' → logprob: -6.6334733963012695
    4. ' ans' → logprob: -8.38347339630127
    5. '   ' → logprob: -9.75847339630127
    6. 'if' → logprob: -10.25847339630127
    7. 'answer' → logprob: -10.63347339630127
    8. 'val' → logprob: -11.00847339630127
    9. '           ' → logprob: -11.38347339630127
    10. '
' → logprob: -11.75847339630127

Token 368: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19445744156837463
    2. ' =' → logprob: -2.569457530975342
    3. '+=' → logprob: -2.944457530975342
    4. '=' → logprob: -3.069457530975342
    5. '   ' → logprob: -7.194457530975342
    6. '       ' → logprob: -9.569457054138184
    7. '```' → logprob: -9.694457054138184
    8. ' ' → logprob: -10.194457054138184
    9. '    ' → logprob: -10.194457054138184
    10. ' ^=' → logprob: -10.569457054138184

Token 369: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3132868707180023
    2. ' (' → logprob: -1.3132869005203247
    3. '(' → logprob: -10.813286781311035
    4. '(answer' → logprob: -13.188286781311035
    5. '   ' → logprob: -13.813286781311035
    6. '(a' → logprob: -14.938286781311035
    7. ' ans' → logprob: -15.063286781311035
    8. ' ' → logprob: -15.313286781311035
    9. '(arr' → logprob: -15.438286781311035
    10. '
' → logprob: -15.563286781311035

Token 370: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00022570860164705664
    2. '(ans' → logprob: -8.750226020812988
    3. ' ans' → logprob: -9.625226020812988
    4. '   ' → logprob: -14.125226020812988
    5. '	ans' → logprob: -15.125226020812988
    6. 'answer' → logprob: -17.000225067138672
    7. '
' → logprob: -17.125225067138672
    8. '_ans' → logprob: -17.625225067138672
    9. 'temp' → logprob: -17.750225067138672
    10. ' (' → logprob: -17.875225067138672

Token 371: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029753733426332474
    2. '+' → logprob: -3.5297536849975586
    3. ' ans' → logprob: -13.654753684997559
    4. ' ' → logprob: -14.029753684997559
    5. 'ans' → logprob: -14.404753684997559
    6. ' *' → logprob: -15.279753684997559
    7. ' ' → logprob: -15.904753684997559
    8. '
' → logprob: -16.404754638671875
    9. '   ' → logprob: -16.904754638671875
    10. '*' → logprob: -17.029754638671875

Token 372: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04508689418435097
    2. 'temp' → logprob: -3.4200868606567383
    3. ' a' → logprob: -4.545086860656738
    4. ' temp' → logprob: -7.420086860656738
    5. '(a' → logprob: -10.045086860656738
    6. '   ' → logprob: -10.295086860656738
    7. 'k' → logprob: -10.295086860656738
    8. ' (' → logprob: -11.545086860656738
    9. '(' → logprob: -12.045086860656738
    10. '(temp' → logprob: -12.295086860656738

Token 373: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.625005722045898
    3. ' [' → logprob: -13.625005722045898
    4. 'i' → logprob: -14.625005722045898
    5. '[n' → logprob: -15.625005722045898
    6. ')' → logprob: -16.0000057220459
    7. '[I' → logprob: -16.2500057220459
    8. '```' → logprob: -16.2500057220459
    9. ')[' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.5000057220459

Token 374: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002422779070911929
    2. '*' → logprob: -8.875242233276367
    3. ']*' → logprob: -9.500242233276367
    4. ' *' → logprob: -11.375242233276367
    5. ' ]' → logprob: -12.000242233276367
    6. '[i' → logprob: -12.500242233276367
    7. '   ' → logprob: -13.125242233276367
    8. '[]' → logprob: -14.125242233276367
    9. '[' → logprob: -14.500242233276367
    10. '])' → logprob: -14.625242233276367

Token 375: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10054296255111694
    2. '*' → logprob: -2.3505430221557617
    3. ')' → logprob: -8.100543022155762
    4. '[i' → logprob: -11.100543022155762
    5. ' ' → logprob: -11.975543022155762
    6. '   ' → logprob: -12.600543022155762
    7. ',' → logprob: -13.350543022155762
    8. '[' → logprob: -13.725543022155762
    9. ' )' → logprob: -13.725543022155762
    10. '
' → logprob: -14.475543022155762

Token 376: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.023870395496487617
    2. ' temp' → logprob: -4.273870468139648
    3. 'k' → logprob: -4.648870468139648
    4. ' k' → logprob: -9.648870468139648
    5. '(temp' → logprob: -12.273870468139648
    6. '	temp' → logprob: -12.773870468139648
    7. ' ' → logprob: -13.148870468139648
    8. '
' → logprob: -13.148870468139648
    9. 'tmp' → logprob: -13.148870468139648
    10. '   ' → logprob: -13.523870468139648

Token 377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02388773299753666
    2. ' )' → logprob: -3.7738876342773438
    3. ')%' → logprob: -8.023887634277344
    4. '%' → logprob: -8.648887634277344
    5. ' %' → logprob: -9.023887634277344
    6. ' *' → logprob: -11.773887634277344
    7. '   ' → logprob: -12.023887634277344
    8. '*' → logprob: -12.648887634277344
    9. ' ' → logprob: -14.648887634277344
    10. '    ' → logprob: -15.773887634277344

Token 378: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011080952361226082
    2. '%' → logprob: -4.511080741882324
    3. '   ' → logprob: -11.136080741882324
    4. ')' → logprob: -11.261080741882324
    5. ' ' → logprob: -13.511080741882324
    6. '
' → logprob: -13.886080741882324
    7. ')%' → logprob: -13.886080741882324
    8. ' %=' → logprob: -14.011080741882324
    9. '```' → logprob: -14.886080741882324
    10. 'def' → logprob: -15.011080741882324

Token 379: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.615255839889869e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '(mod' → logprob: -19.00009536743164
    4. '	mod' → logprob: -20.50009536743164
    5. ' ' → logprob: -22.50009536743164
    6. '```' → logprob: -22.50009536743164
    7. '
' → logprob: -22.75009536743164
    8. '   ' → logprob: -22.87509536743164
    9. 'modal' → logprob: -23.37509536743164
    10. ' мод' → logprob: -23.75009536743164

Token 380: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036645643413066864
    2. '
' → logprob: -5.753664493560791
    3. '    
' → logprob: -8.12866497039795
    4. ' return' → logprob: -9.62866497039795
    5. 'return' → logprob: -10.12866497039795
    6. ' 
' → logprob: -10.75366497039795
    7. '  
' → logprob: -11.12866497039795
    8. '	return' → logprob: -11.50366497039795
    9. '       ' → logprob: -11.62866497039795
    10. '<|end|>' → logprob: -11.62866497039795

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053286245092749596
    2. '<|end|>' → logprob: -6.25532865524292
    3. 'return' → logprob: -7.13032865524292
    4. '    
' → logprob: -7.25532865524292
    5. ' return' → logprob: -7.63032865524292
    6. '
' → logprob: -7.63032865524292
    7. '\n' → logprob: -8.630328178405762
    8. ' ' → logprob: -8.880328178405762
    9. '	return' → logprob: -8.880328178405762
    10. '```' → logprob: -9.255328178405762

Token 382: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3146825432777405
    2. '   ' → logprob: -1.3146824836730957
    3. ' return' → logprob: -6.689682483673096
    4. '	return' → logprob: -9.564682960510254
    5. '<|end|>' → logprob: -9.939682960510254
    6. '    
' → logprob: -10.814682960510254
    7. '
' → logprob: -11.564682960510254
    8. ' ' → logprob: -11.814682960510254
    9. '```' → logprob: -12.064682960510254
    10. ':return' → logprob: -13.064682960510254

Token 383: ' =' (ID: 314)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9545596837997437
    2. '<|end|>' → logprob: -1.0795596837997437
    3. ':return' → logprob: -2.454559803009033
    4. 'def' → logprob: -3.079559803009033
    5. '=' → logprob: -3.454559803009033
    6. ' return' → logprob: -3.454559803009033
    7. '   ' → logprob: -3.704559803009033
    8. ':' → logprob: -3.954559803009033
    9. ' ' → logprob: -4.079559803009033
    10. ')' → logprob: -5.329559803009033

Token 384: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.09706544876098633
    2. 'ans' → logprob: -2.5970654487609863
    3. ' (' → logprob: -4.597065448760986
    4. ' ans' → logprob: -4.847065448760986
    5. '(' → logprob: -9.847064971923828
    6. '	ans' → logprob: -11.472064971923828
    7. '   ' → logprob: -12.722064971923828
    8. ' ' → logprob: -13.597064971923828
    9. '(int' → logprob: -13.597064971923828
    10. '(an' → logprob: -13.659564971923828

Token 385: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009561761282384396
    2. '(ans' → logprob: -4.759561538696289
    3. ' ans' → logprob: -7.009561538696289
    4. '2' → logprob: -11.759561538696289
    5. '   ' → logprob: -11.759561538696289
    6. '	ans' → logprob: -11.884561538696289
    7. ' (' → logprob: -12.384561538696289
    8. '(' → logprob: -13.009561538696289
    9. '
' → logprob: -13.134561538696289
    10. 'abs' → logprob: -13.947061538696289

Token 386: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1451503038406372
    2. '*' → logprob: -2.0201501846313477
    3. '+' → logprob: -7.020150184631348
    4. ' +' → logprob: -7.270150184631348
    5. ' -' → logprob: -7.770150184631348
    6. '-' → logprob: -8.270150184631348
    7. ')' → logprob: -9.645150184631348
    8. '   ' → logprob: -10.020150184631348
    9. ' ' → logprob: -10.145150184631348
    10. '*(' → logprob: -11.020150184631348

Token 387: ' k' (ID: 372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.423153817653656
    2. 'k' → logprob: -1.4231538772583008
    3. '2' → logprob: -2.673153877258301
    4. ' pow' → logprob: -3.798153877258301
    5. ' k' → logprob: -5.298153877258301
    6. '(k' → logprob: -6.298153877258301
    7. ' ' → logprob: -6.548153877258301
    8. 'get' → logprob: -6.548153877258301
    9. '   ' → logprob: -6.923153877258301
    10. '(' → logprob: -7.923153877258301

Token 388: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00016885579680092633
    2. '[' → logprob: -9.500168800354004
    3. 'n' → logprob: -9.625168800354004
    4. '
' → logprob: -10.875168800354004
    5. ' [' → logprob: -13.000168800354004
    6. '

' → logprob: -13.250168800354004
    7. '[len' → logprob: -13.750168800354004
    8. '   ' → logprob: -13.875168800354004
    9. '[
' → logprob: -14.125168800354004
    10. '
' → logprob: -14.625168800354004

Token 389: '])' (ID: 4636)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6276536583900452
    2. '[n' → logprob: -1.2526535987854004
    3. '(n' → logprob: -3.1276535987854004
    4. '[' → logprob: -3.2526535987854004
    5. ']' → logprob: -3.5026535987854004
    6. '])' → logprob: -3.5026535987854004
    7. ')' → logprob: -3.8776535987854004
    8. '[-' → logprob: -4.5026535987854
    9. 'inv' → logprob: -6.8776535987854
    10. '1' → logprob: -7.1276535987854

Token 390: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08647556602954865
    2. ' %' → logprob: -2.5864756107330322
    3. ')' → logprob: -5.336475372314453
    4. ')%' → logprob: -5.961475372314453
    5. '
' → logprob: -9.711475372314453
    6. '   ' → logprob: -10.086475372314453
    7. ']%' → logprob: -11.211475372314453
    8. 'def' → logprob: -11.586475372314453
    9. '<|end|>' → logprob: -11.961475372314453
    10. '(' → logprob: -12.211475372314453

Token 391: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006000013556331396
    2. ' mod' → logprob: -5.50600004196167
    3. '(mod' → logprob: -6.25600004196167
    4. '(' → logprob: -14.630999565124512
    5. ' (' → logprob: -15.505999565124512
    6. '	mod' → logprob: -15.880999565124512
    7. '_mod' → logprob: -17.756000518798828
    8. '
' → logprob: -19.006000518798828
    9. ' ' → logprob: -19.131000518798828
    10. ' мод' → logprob: -19.381000518798828

Token 392: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007873523863963783
    2. 'return' → logprob: -7.625787258148193
    3. ' return' → logprob: -8.375787734985352
    4. '
' → logprob: -10.000787734985352
    5. '	return' → logprob: -10.750787734985352
    6. ':return' → logprob: -14.375787734985352
    7. '```' → logprob: -14.500787734985352
    8. '    
' → logprob: -15.125787734985352
    9. '<|end|>' → logprob: -15.125787734985352
    10. ',' → logprob: -15.750787734985352

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011583197629079223
    2. 'return' → logprob: -6.876158237457275
    3. ' return' → logprob: -9.626158714294434
    4. '	return' → logprob: -10.251158714294434
    5. '    
' → logprob: -11.501158714294434
    6. '
' → logprob: -11.876158714294434
    7. '```' → logprob: -12.751158714294434
    8. ':return' → logprob: -13.251158714294434
    9. '<|end|>' → logprob: -14.001158714294434
    10. '_return' → logprob: -14.751158714294434

Token 394: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31474927067756653
    2. '   ' → logprob: -1.3147492408752441
    3. ' return' → logprob: -6.564749240875244
    4. '	return' → logprob: -9.564749717712402
    5. '
' → logprob: -12.689749717712402
    6. '    
' → logprob: -13.689749717712402
    7. ':return' → logprob: -14.064749717712402
    8. '{return' → logprob: -14.814749717712402
    9. '```' → logprob: -15.064749717712402
    10. '<|end|>' → logprob: -15.064749717712402

Token 395: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02324792370200157
    2. ' ans' → logprob: -3.7732479572296143
    3. '(ans' → logprob: -13.023247718811035
    4. '	ans' → logprob: -15.398247718811035
    5. 'answer' → logprob: -17.39824867248535
    6. '_ans' → logprob: -18.14824867248535
    7. 'anst' → logprob: -19.77324867248535
    8. '
' → logprob: -19.89824867248535
    9. 'answers' → logprob: -20.52324867248535
    10. 'Ans' → logprob: -22.52324867248535

Token 396: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3388706147670746
    2. '<|end|>' → logprob: -2.0888705253601074
    3. '#' → logprob: -2.7138705253601074
    4. '
' → logprob: -3.3388705253601074
    5. '```' → logprob: -3.5888705253601074
    6. 'n' → logprob: -3.8388705253601074
    7. ')' → logprob: -4.838870525360107
    8. '[' → logprob: -7.213870525360107
    9. '<|end|>' → logprob: -7.213870525360107
    10. 'a' → logprob: -7.338870525360107

Token 397: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13288986682891846
    2. '#' → logprob: -2.257889747619629
    3. '<|end|>' → logprob: -4.757889747619629
    4. '```' → logprob: -5.007889747619629
    5. 'n' → logprob: -6.132889747619629
    6. 'a' → logprob: -6.632889747619629
    7. '
' → logprob: -8.257889747619629
    8. 'ndef' → logprob: -8.882889747619629
    9. '...' → logprob: -9.257889747619629
    10. '(' → logprob: -9.257889747619629

Token 398: ' remov' (ID: 12074)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00046153197763487697
    2. ' solve' → logprob: -7.875461578369141
    3. 'main' → logprob: -9.62546157836914
    4. ' process' → logprob: -11.75046157836914
    5. ' factorial' → logprob: -12.62546157836914
    6. ' calculate' → logprob: -13.37546157836914
    7. ' solution' → logprob: -13.62546157836914
    8. ' example' → logprob: -14.50046157836914
    9. 'solve' → logprob: -14.75046157836914
    10. ' ' → logprob: -15.87546157836914

Token 399: '(n' (ID: 2406)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.7432603272027336e-06
    2. '_e' → logprob: -14.750001907348633
    3. 'el' → logprob: -15.250001907348633
    4. 'е' → logprob: -15.500001907348633
    5. 'es' → logprob: -15.750001907348633
    6. '```' → logprob: -15.875001907348633
    7. '	e' → logprob: -16.000001907348633
    8. 'ed' → logprob: -16.125001907348633
    9. '[e' → logprob: -16.750001907348633
    10. '(e' → logprob: -16.875001907348633

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014408295042812824
    2. '):' → logprob: -4.514408111572266
    3. '_,' → logprob: -6.389408111572266
    4. ')' → logprob: -7.014408111572266
    5. ' ,' → logprob: -7.889408111572266
    6. '_' → logprob: -8.389408111572266
    7. ',n' → logprob: -9.764408111572266
    8. '):
' → logprob: -10.014408111572266
    9. '),' → logprob: -11.514408111572266
    10. ',
' → logprob: -11.514408111572266

Token 401: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7352235913276672
    2. ' a' → logprob: -1.6102235317230225
    3. 'k' → logprob: -1.8602235317230225
    4. ' k' → logprob: -3.2352235317230225
    5. ' mod' → logprob: -3.7352235317230225
    6. 'mod' → logprob: -3.7352235317230225
    7. 'arr' → logprob: -4.360223770141602
    8. 'n' → logprob: -4.485223770141602
    9. 'm' → logprob: -5.110223770141602
    10. ' arr' → logprob: -5.235223770141602

Token 402: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2540590465068817
    2. '):' → logprob: -1.504059076309204
    3. ')' → logprob: -6.754058837890625
    4. '):
' → logprob: -7.129058837890625
    5. ' ,' → logprob: -9.754058837890625
    6. '[' → logprob: -10.254058837890625
    7. '),' → logprob: -11.379058837890625
    8. '):

' → logprob: -11.629058837890625
    9. ',
' → logprob: -12.004058837890625
    10. '_,' → logprob: -12.129058837890625

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027935490012168884
    2. ' mod' → logprob: -3.65293550491333
    3. ' res' → logprob: -8.152935028076172
    4. ' b' → logprob: -8.277935028076172
    5. '    
' → logprob: -8.652935028076172
    6. ' ans' → logprob: -9.402935028076172
    7. ' for' → logprob: -9.402935028076172
    8. ' arr' → logprob: -9.402935028076172
    9. 'mod' → logprob: -9.402935028076172
    10. ' a' → logprob: -9.527935028076172

Token 404: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4683557152748108
    2. 'mod' (adapté à ' mod') → logprob: -1.843355655670166
    3. '   ' → logprob: -3.093355655670166
    4. ' a' → logprob: -3.468355655670166
    5. ' arr' → logprob: -3.718355655670166
    6. 'a' → logprob: -4.093355655670166
    7. ' k' → logprob: -4.343355655670166
    8. ' b' → logprob: -4.593355655670166
    9. ' res' → logprob: -4.593355655670166
    10. 'k' → logprob: -4.718355655670166

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01108495518565178
    2. '=' → logprob: -4.511085033416748
    3. '  ' → logprob: -11.01108455657959
    4. ',' → logprob: -11.63608455657959
    5. ' ' → logprob: -11.88608455657959
    6. '   ' → logprob: -13.01108455657959
    7. ' =
' → logprob: -13.26108455657959
    8. '    ' → logprob: -15.51108455657959
    9. ' ,' → logprob: -15.63608455657959
    10. ':' → logprob: -16.011085510253906

Token 406: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10104899108409882
    2. ' get' → logprob: -2.3510489463806152
    3. '10' → logprob: -7.101048946380615
    4. ' ' → logprob: -10.976049423217773
    5. '100' → logprob: -14.476049423217773
    6. '	get' → logprob: -16.351049423217773
    7. '(get' → logprob: -17.601049423217773
    8. 'def' → logprob: -17.976049423217773
    9. '_get' → logprob: -17.976049423217773
    10. '1' → logprob: -18.226049423217773

Token 407: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.843177233240567e-05
    2. '_' → logprob: -11.375018119812012
    3. ' _' → logprob: -12.750018119812012
    4. 'mod' → logprob: -14.000018119812012
    5. '_MOD' → logprob: -14.000018119812012
    6. '_mode' → logprob: -14.875018119812012
    7. ')_' → logprob: -15.125018119812012
    8. '()' → logprob: -15.125018119812012
    9. ' ' → logprob: -15.625018119812012
    10. ''_' → logprob: -16.125019073486328

Token 408: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5270649194717407
    2. '
' → logprob: -0.9020649194717407
    3. 'n' → logprob: -6.402064800262451
    4. '    
' → logprob: -6.527064800262451
    5. 'def' → logprob: -7.777064800262451
    6. '(n' → logprob: -9.02706527709961
    7. 'k' → logprob: -9.27706527709961
    8. '
' → logprob: -10.02706527709961
    9. '	n' → logprob: -10.65206527709961
    10. '```' → logprob: -10.65206527709961

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02451806515455246
    2. ' k' → logprob: -3.8995180130004883
    3. 'k' → logprob: -5.649518013000488
    4. ' n' → logprob: -9.024518013000488
    5. 'n' → logprob: -9.274518013000488
    6. '
' → logprob: -9.774518013000488
    7. '	k' → logprob: -9.774518013000488
    8. ',' → logprob: -10.274518013000488
    9. ',k' → logprob: -10.274518013000488
    10. '    
' → logprob: -10.524518013000488

Token 410: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.002205451251938939
    2. ' k' → logprob: -6.1272053718566895
    3. '   ' → logprob: -10.877205848693848
    4. 'n' → logprob: -14.002205848693848
    5. '```' → logprob: -14.752205848693848
    6. '    
' → logprob: -15.627205848693848
    7. ' ' → logprob: -16.87720489501953
    8. '	k' → logprob: -17.00220489501953
    9. '  ' → logprob: -17.62720489501953
    10. ',' → logprob: -17.75220489501953

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004537754226475954
    2. ',n' → logprob: -6.129537582397461
    3. ' =' → logprob: -6.629537582397461
    4. ',k' → logprob: -7.379537582397461
    5. '=' → logprob: -8.379537582397461
    6. ' ,' → logprob: -8.879537582397461
    7. '[n' → logprob: -12.004537582397461
    8. '[],' → logprob: -12.129537582397461
    9. '=n' → logprob: -12.254537582397461
    10. 'k' → logprob: -12.504537582397461

Token 412: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.12694741785526276
    2. ' g' → logprob: -2.1269474029541016
    3. 'k' → logprob: -11.751947402954102
    4. '   ' → logprob: -12.501947402954102
    5. ' ' → logprob: -13.251947402954102
    6. ' k' → logprob: -13.626947402954102
    7. '_g' → logprob: -13.626947402954102
    8. '  ' → logprob: -14.001947402954102
    9. '    ' → logprob: -14.376947402954102
    10. '	g' → logprob: -14.751947402954102

Token 413: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6047699318733066e-05
    2. '_k' → logprob: -11.625016212463379
    3. ',' → logprob: -12.625016212463379
    4. ',k' → logprob: -12.750016212463379
    5. '<|end|>' → logprob: -14.375016212463379
    6. ' k' → logprob: -15.625016212463379
    7. '[k' → logprob: -17.125015258789062
    8. '	k' → logprob: -17.375015258789062
    9. 'к' → logprob: -17.750015258789062
    10. 'g' → logprob: -17.875015258789062

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8575495481491089
    2. ' =' → logprob: -0.9825495481491089
    3. '=' → logprob: -1.6075495481491089
    4. ',k' → logprob: -7.357549667358398
    5. ' ,' → logprob: -7.982549667358398
    6. '=k' → logprob: -9.857549667358398
    7. ',n' → logprob: -11.607549667358398
    8. 'k' → logprob: -11.732549667358398
    9. ' k' → logprob: -12.357549667358398
    10. ' ' → logprob: -12.982549667358398

Token 415: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.1328989416360855
    2. 'ker' → logprob: -2.757899045944214
    3. ' kb' → logprob: -2.882899045944214
    4. ' ker' → logprob: -5.382898807525635
    5. 'k' → logprob: -9.007899284362793
    6. '[]' → logprob: -9.757899284362793
    7. ' ' → logprob: -10.007899284362793
    8. 'arr' → logprob: -10.257899284362793
    9. 'kernel' → logprob: -10.382899284362793
    10. 'kern' → logprob: -10.632899284362793

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. '[' → logprob: -10.625028610229492
    3. 'b' → logprob: -13.750028610229492
    4. '=' → logprob: -14.375028610229492
    5. '```' → logprob: -14.500028610229492
    6. ',' → logprob: -14.875028610229492
    7. ' =' → logprob: -15.125028610229492
    8. 'k' → logprob: -15.250028610229492
    9. ' ' → logprob: -15.375028610229492
    10. '<|end|>' → logprob: -15.875028610229492

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931579113006592
    2. ' =' → logprob: -0.6931579113006592
    3. '=k' → logprob: -12.693158149719238
    4. ',' → logprob: -12.818158149719238
    5. '=n' → logprob: -12.943158149719238
    6. ' ' → logprob: -13.818158149719238
    7. '```' → logprob: -15.443158149719238
    8. '=get' → logprob: -15.443158149719238
    9. '   ' → logprob: -16.068157196044922
    10. '=create' → logprob: -16.068157196044922

Token 418: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023304060101509094
    2. ' init' → logprob: -3.773303985595703
    3. '[' → logprob: -9.898303985595703
    4. ' [' → logprob: -12.023303985595703
    5. '   ' → logprob: -13.273303985595703
    6. '_init' → logprob: -15.773303985595703
    7. ' ' → logprob: -16.023303985595703
    8. '(init' → logprob: -16.523303985595703
    9. '	init' → logprob: -16.773303985595703
    10. '    ' → logprob: -17.398303985595703

Token 419: '_arrays' (ID: 182581)
  Prédit: '_arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arrays' → logprob: -0.008277199231088161
    2. '(n' → logprob: -4.883277416229248
    3. 'arrays' → logprob: -8.00827693939209
    4. '(k' → logprob: -9.00827693939209
    5. 'Arrays' → logprob: -9.25827693939209
    6. '_array' → logprob: -11.00827693939209
    7. '[n' → logprob: -11.13327693939209
    8. 'a' → logprob: -11.13327693939209
    9. '(a' → logprob: -11.13327693939209
    10. 'arr' → logprob: -11.50827693939209

Token 420: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.250001907348633
    3. ' (' → logprob: -14.250001907348633
    4. 'n' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -16.875001907348633
    7. '[n' → logprob: -18.125001907348633
    8. ')(' → logprob: -18.250001907348633
    9. '<n' → logprob: -18.375001907348633
    10. ',n' → logprob: -18.625001907348633

Token 421: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.861651490908116e-05
    2. ')
' → logprob: -9.625068664550781
    3. ' )' → logprob: -13.750068664550781
    4. ')

' → logprob: -15.125068664550781
    5. '())' → logprob: -15.125068664550781
    6. ')
' → logprob: -15.625068664550781
    7. ')n' → logprob: -15.875068664550781
    8. '   ' → logprob: -16.12506866455078
    9. '))' → logprob: -16.37506866455078
    10. '),' → logprob: -16.37506866455078

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18074586987495422
    2. 'compute' → logprob: -2.180745840072632
    3. '
' → logprob: -3.555745840072632
    4. ' compute' → logprob: -3.805745840072632
    5. '    
' → logprob: -7.180746078491211
    6. '<|end|>' → logprob: -8.055746078491211
    7. ',' → logprob: -8.430746078491211
    8. '  
' → logprob: -9.180746078491211
    9. '.compute' → logprob: -10.180746078491211
    10. '  ' → logprob: -10.930746078491211

Token 423: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.009256248362362385
    2. ' compute' → logprob: -4.759256362915039
    3. '   ' → logprob: -7.384256362915039
    4. '
' → logprob: -10.884256362915039
    5. '.compute' → logprob: -14.509256362915039
    6. 'calculate' → logprob: -14.884256362915039
    7. '    
' → logprob: -15.134256362915039
    8. '_compute' → logprob: -15.384256362915039
    9. ' ' → logprob: -15.509256362915039
    10. ' 
' → logprob: -16.50925636291504

Token 424: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: 0.0
    2. 'k' → logprob: -16.875
    3. '_' → logprob: -19.0
    4. '_kernel' → logprob: -23.0
    5. '_K' → logprob: -23.125
    6. '_key' → logprob: -23.125
    7. '```' → logprob: -23.25
    8. '__' → logprob: -23.5
    9. '_kn' → logprob: -23.5
    10. '_j' → logprob: -23.5

Token 425: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020167052745819092
    2. '_k' → logprob: -4.020166873931885
    3. '(k' → logprob: -6.270166873931885
    4. 'k' → logprob: -9.270167350769043
    5. ' (' → logprob: -10.895167350769043
    6. '(' → logprob: -11.895167350769043
    7. '_(' → logprob: -13.270167350769043
    8. ' k' → logprob: -13.895167350769043
    9. '_b' → logprob: -15.645167350769043
    10. '```' → logprob: -15.770167350769043

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',
' → logprob: -16.125001907348633
    4. ',n' → logprob: -17.250001907348633
    5. ',k' → logprob: -18.750001907348633
    6. '(mod' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.500001907348633
    8. ',module' → logprob: -19.875001907348633
    9. '```' → logprob: -19.875001907348633
    10. 'mod' → logprob: -20.125001907348633

Token 427: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011047935113310814
    2. ' mod' → logprob: -4.511047840118408
    3. '	mod' → logprob: -16.76104736328125
    4. '(mod' → logprob: -17.01104736328125
    5. '_mod' → logprob: -18.13604736328125
    6. 'moder' → logprob: -18.76104736328125
    7. '.mod' → logprob: -19.26104736328125
    8. ' ' → logprob: -19.38604736328125
    9. '<|end|>' → logprob: -19.51104736328125
    10. 'modifiable' → logprob: -20.26104736328125

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.62502670288086
    3. ',k' → logprob: -13.00002670288086
    4. ')' → logprob: -16.50002670288086
    5. ',
' → logprob: -16.75002670288086
    6. ',n' → logprob: -18.25002670288086
    7. '‌,' → logprob: -18.25002670288086
    8. 'k' → logprob: -19.12502670288086
    9. '
' → logprob: -19.62502670288086
    10. '   ' → logprob: -19.87502670288086

Token 429: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.615255839889869e-05
    2. ' k' → logprob: -9.250096321105957
    3. '	k' → logprob: -18.50009536743164
    4. ')' → logprob: -20.50009536743164
    5. '
' → logprob: -21.37509536743164
    6. '   ' → logprob: -21.50009536743164
    7. '"k' → logprob: -21.62509536743164
    8. ',k' → logprob: -21.87509536743164
    9. '[k' → logprob: -22.37509536743164
    10. ' ' → logprob: -22.75009536743164

Token 430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018158020451664925
    2. ')' → logprob: -4.018157958984375
    3. ')
' → logprob: -12.518157958984375
    4. ')

' → logprob: -12.893157958984375
    5. ' )
' → logprob: -13.268157958984375
    6. '   ' → logprob: -16.268157958984375
    7. ' )' → logprob: -18.018157958984375
    8. ',)
' → logprob: -18.393157958984375
    9. '
' → logprob: -18.643157958984375
    10. '),' → logprob: -18.768157958984375

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262596607208252
    2. 'compute' → logprob: -1.5262596607208252
    3. ' compute' → logprob: -1.6512596607208252
    4. '_compute' → logprob: -11.276259422302246
    5. '.compute' → logprob: -11.651259422302246
    6. '
' → logprob: -12.401259422302246
    7. '<|end|>' → logprob: -12.651259422302246
    8. '```' → logprob: -13.651259422302246
    9. '    ' → logprob: -14.151259422302246
    10. ',' → logprob: -14.276259422302246

Token 432: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -4.584861744660884e-05
    2. ' compute' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '
' → logprob: -16.500045776367188
    5. 'calculate' → logprob: -17.500045776367188
    6. '.compute' → logprob: -17.875045776367188
    7. '```' → logprob: -19.750045776367188
    8. 'calc' → logprob: -20.250045776367188
    9. '_compute' → logprob: -20.500045776367188
    10. ' ' → logprob: -20.625045776367188

Token 433: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00010318557906430215
    2. 'g' → logprob: -9.875102996826172
    3. '_k' → logprob: -9.875102996826172
    4. 'k' → logprob: -16.250102996826172
    5. 'def' → logprob: -17.500102996826172
    6. '_compute' → logprob: -17.750102996826172
    7. '_' → logprob: -17.875102996826172
    8. 'compute' → logprob: -17.875102996826172
    9. '_get' → logprob: -18.250102996826172
    10. '```' → logprob: -18.875102996826172

Token 434: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.572941179503687e-05
    2. '_k' → logprob: -10.000045776367188
    3. 'g' → logprob: -15.875045776367188
    4. '(n' → logprob: -17.000045776367188
    5. '_' → logprob: -17.625045776367188
    6. 'ker' → logprob: -17.875045776367188
    7. '```' → logprob: -17.875045776367188
    8. 'к' → logprob: -18.000045776367188
    9. 'n' → logprob: -18.250045776367188
    10. ' k' → logprob: -18.375045776367188

Token 435: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.747814349073451e-05
    2. ' (' → logprob: -11.500017166137695
    3. '(' → logprob: -12.000017166137695
    4. 'n' → logprob: -14.250017166137695
    5. '<|end|>' → logprob: -14.875017166137695
    6. '```' → logprob: -17.000017166137695
    7. '(
' → logprob: -17.625017166137695
    8. ',' → logprob: -17.625017166137695
    9. 'def' → logprob: -18.000017166137695
    10. '<|end|>' → logprob: -18.000017166137695

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.624555291840807e-05
    2. ',n' → logprob: -9.750076293945312
    3. ' ,' → logprob: -11.250076293945312
    4. '(n' → logprob: -12.625076293945312
    5. 'n' → logprob: -14.000076293945312
    6. ',
' → logprob: -14.750076293945312
    7. '(mod' → logprob: -16.250076293945312
    8. '<|end|>' → logprob: -16.625076293945312
    9. ')' → logprob: -16.750076293945312
    10. '```' → logprob: -17.250076293945312

Token 437: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015023599844425917
    2. ' mod' → logprob: -6.501502513885498
    3. 'n' → logprob: -17.626502990722656
    4. '(mod' → logprob: -18.501502990722656
    5. '	mod' → logprob: -18.501502990722656
    6. 'k' → logprob: -18.626502990722656
    7. ' n' → logprob: -19.001502990722656
    8. 'm' → logprob: -20.876502990722656
    9. ' ' → logprob: -21.001502990722656
    10. '   ' → logprob: -21.251502990722656

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020210994989611208
    2. ' ,' → logprob: -9.000202178955078
    3. ',k' → logprob: -9.625202178955078
    4. ',g' → logprob: -11.625202178955078
    5. ',n' → logprob: -13.625202178955078
    6. ',
' → logprob: -14.375202178955078
    7. 'g' → logprob: -14.625202178955078
    8. 'k' → logprob: -14.875202178955078
    9. ')' → logprob: -14.875202178955078
    10. '   ' → logprob: -15.250202178955078

Token 439: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002469158498570323
    2. 'g' → logprob: -9.00024700164795
    3. ' k' → logprob: -9.00024700164795
    4. ' g' → logprob: -16.500246047973633
    5. 'n' → logprob: -18.250246047973633
    6. ')' → logprob: -18.750246047973633
    7. '	k' → logprob: -18.750246047973633
    8. '[k' → logprob: -19.750246047973633
    9. ',k' → logprob: -19.750246047973633
    10. '   ' → logprob: -19.875246047973633

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ',g' → logprob: -11.25002670288086
    3. ' ,' → logprob: -11.25002670288086
    4. ',
' → logprob: -16.00002670288086
    5. 'g' → logprob: -16.25002670288086
    6. ',k' → logprob: -16.50002670288086
    7. ')' → logprob: -16.75002670288086
    8. '   ' → logprob: -16.75002670288086
    9. ' g' → logprob: -18.12502670288086
    10. ',n' → logprob: -19.25002670288086

Token 441: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0206720617134124e-05
    2. ' g' → logprob: -11.50001049041748
    3. '	g' → logprob: -20.000009536743164
    4. '   ' → logprob: -21.250009536743164
    5. '
' → logprob: -22.500009536743164
    6. '_g' → logprob: -22.625009536743164
    7. '[g' → logprob: -24.000009536743164
    8. ')' → logprob: -24.375009536743164
    9. '.g' → logprob: -24.375009536743164
    10. '(g' → logprob: -25.125009536743164

Token 442: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. 'к' → logprob: -18.25
    3. ' k' → logprob: -18.75
    4. '[k' → logprob: -18.75
    5. '_k' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. '	k' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. '[' → logprob: -20.5
    10. ')' → logprob: -21.0

Token 443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021886229515076
    2. ')
' → logprob: -2.3502187728881836
    3. '   ' → logprob: -11.850218772888184
    4. ')
' → logprob: -12.350218772888184
    5. ')

' → logprob: -14.850218772888184
    6. ' )' → logprob: -16.6002197265625
    7. ')`' → logprob: -16.6002197265625
    8. ')
/' → logprob: -17.1002197265625
    9. '),' → logprob: -17.2252197265625
    10. ' )
' → logprob: -17.4752197265625

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012619012966752052
    2. 'compute' → logprob: -5.0126190185546875
    3. ' compute' → logprob: -5.1376190185546875
    4. '```' → logprob: -11.762619018554688
    5. '
' → logprob: -12.262619018554688
    6. ',' → logprob: -14.387619018554688
    7. '_compute' → logprob: -14.637619018554688
    8. '.compute' → logprob: -14.637619018554688
    9. '    
' → logprob: -15.762619018554688
    10. 'def' → logprob: -16.137619018554688

Token 445: ' ker' (ID: 11104)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -6.551721889991313e-05
    2. ' compute' → logprob: -9.750065803527832
    3. '   ' → logprob: -11.875065803527832
    4. 'calculate' → logprob: -15.875065803527832
    5. 'calc' → logprob: -17.000064849853516
    6. ' ' → logprob: -17.250064849853516
    7. '.compute' → logprob: -17.625064849853516
    8. '
' → logprob: -18.000064849853516
    9. '  ' → logprob: -19.000064849853516
    10. '    
' → logprob: -19.750064849853516

Token 446: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.00031985383247956634
    2. 'u' → logprob: -8.250319480895996
    3. 'uir' → logprob: -11.000319480895996
    4. 'uiu' → logprob: -11.000319480895996
    5. 'rui' → logprob: -11.625319480895996
    6. 'uri' → logprob: -12.500319480895996
    7. 'k' → logprob: -12.750319480895996
    8. 'uire' → logprob: -12.750319480895996
    9. 'uei' → logprob: -13.625319480895996
    10. '_ui' → logprob: -14.000319480895996

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976264655590057
    2. '=' → logprob: -1.804762601852417
    3. '=get' → logprob: -12.679762840270996
    4. '_' → logprob: -12.679762840270996
    5. '=n' → logprob: -13.054762840270996
    6. '(n' → logprob: -13.179762840270996
    7. '(' → logprob: -13.429762840270996
    8. '_=' → logprob: -13.554762840270996
    9. '   ' → logprob: -13.929762840270996
    10. '[' → logprob: -14.429762840270996

Token 448: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.386892169713974
    2. ' get' → logprob: -1.1368921995162964
    3. '[get' → logprob: -11.136892318725586
    4. '[' → logprob: -12.886892318725586
    5. '(get' → logprob: -13.886892318725586
    6. ' [' → logprob: -14.011892318725586
    7. '_get' → logprob: -14.261892318725586
    8. '=get' → logprob: -14.511892318725586
    9. '.get' → logprob: -14.886892318725586
    10. ' ' → logprob: -15.511892318725586

Token 449: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0036088628694415092
    2. 'ker' → logprob: -5.628608703613281
    3. '_k' → logprob: -12.628608703613281
    4. 'k' → logprob: -13.253608703613281
    5. 'g' → logprob: -14.128608703613281
    6. '_kernel' → logprob: -14.253608703613281
    7. 'Ker' → logprob: -14.253608703613281
    8. '_g' → logprob: -14.628608703613281
    9. ' ker' → logprob: -14.753608703613281
    10. 'er' → logprob: -15.628608703613281

Token 450: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.004114492796361446
    2. 'g' → logprob: -5.754114627838135
    3. 'k' → logprob: -7.004114627838135
    4. 'kernel' → logprob: -11.879114151000977
    5. 'kern' → logprob: -11.879114151000977
    6. ' ker' → logprob: -13.129114151000977
    7. 'er' → logprob: -13.254114151000977
    8. 'ger' → logprob: -13.629114151000977
    9. 'kr' → logprob: -13.754114151000977
    10. '```' → logprob: -13.879114151000977

Token 451: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -14.375001907348633
    3. 'uiu' → logprob: -15.000001907348633
    4. 'uire' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'uei' → logprob: -16.625001907348633
    7. 'uir' → logprob: -16.625001907348633
    8. 'uri' → logprob: -17.125001907348633
    9. 'uid' → logprob: -17.250001907348633
    10. '_ui' → logprob: -17.375001907348633

Token 452: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.20603168499656e-05
    2. '(' → logprob: -10.250061988830566
    3. ' (' → logprob: -11.000061988830566
    4. '<|end|>' → logprob: -11.750061988830566
    5. '```' → logprob: -14.500061988830566
    6. 'n' → logprob: -14.750061988830566
    7. ')(' → logprob: -15.750061988830566
    8. '<|end|>' → logprob: -15.750061988830566
    9. '>(' → logprob: -16.000062942504883
    10. '](' → logprob: -16.750062942504883

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010033934377133846
    2. ')' → logprob: -7.501003265380859
    3. ' ,' → logprob: -8.50100326538086
    4. ',n' → logprob: -8.62600326538086
    5. ',g' → logprob: -10.37600326538086
    6. ',k' → logprob: -10.87600326538086
    7. '(n' → logprob: -11.62600326538086
    8. 'n' → logprob: -12.62600326538086
    9. '   ' → logprob: -13.37600326538086
    10. ',
' → logprob: -14.12600326538086

Token 454: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.704065213445574e-05
    2. ' g' → logprob: -10.000046730041504
    3. 'k' → logprob: -13.625046730041504
    4. '   ' → logprob: -15.750046730041504
    5. 'mod' → logprob: -16.00004768371582
    6. 'n' → logprob: -16.25004768371582
    7. ' ' → logprob: -17.75004768371582
    8. '  ' → logprob: -18.75004768371582
    9. '	g' → logprob: -18.87504768371582
    10. '
' → logprob: -19.00004768371582

Token 455: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -14.250001907348633
    3. 'g' → logprob: -14.750001907348633
    4. '1' → logprob: -14.875001907348633
    5. 'n' → logprob: -15.500001907348633
    6. 'i' → logprob: -15.875001907348633
    7. ')' → logprob: -16.875001907348633
    8. ',' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.625001907348633
    10. 'ok' → logprob: -17.625001907348633

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000318065780447796
    2. ',k' → logprob: -8.12531852722168
    3. ' ,' → logprob: -10.75031852722168
    4. ',
' → logprob: -15.75031852722168
    5. '   ' → logprob: -16.00031852722168
    6. ',n' → logprob: -16.12531852722168
    7. 'k' → logprob: -16.50031852722168
    8. '```' → logprob: -18.25031852722168
    9. ' k' → logprob: -18.37531852722168
    10. '
' → logprob: -19.00031852722168

Token 457: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.5491004129871726e-05
    2. ' k' → logprob: -10.000045776367188
    3. '
' → logprob: -19.125045776367188
    4. ')' → logprob: -19.500045776367188
    5. '	k' → logprob: -19.750045776367188
    6. ',k' → logprob: -19.875045776367188
    7. ' ' → logprob: -21.750045776367188
    8. 'kx' → logprob: -22.000045776367188
    9. '```' → logprob: -22.125045776367188
    10. ',' → logprob: -22.125045776367188

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -13.750000953674316
    3. 'mod' → logprob: -18.000001907348633
    4. ',
' → logprob: -18.000001907348633
    5. '   ' → logprob: -20.250001907348633
    6. ')' → logprob: -20.625001907348633
    7. '```' → logprob: -20.625001907348633
    8. ' mod' → logprob: -21.500001907348633
    9. 'def' → logprob: -21.625001907348633
    10. ',module' → logprob: -21.875001907348633

Token 459: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.547789674485102e-05
    2. ' mod' → logprob: -10.250035285949707
    3. '	mod' → logprob: -22.125036239624023
    4. 'moder' → logprob: -23.875036239624023
    5. '_mod' → logprob: -24.125036239624023
    6. '(mod' → logprob: -24.125036239624023
    7. 'mods' → logprob: -24.875036239624023
    8. 'm' → logprob: -25.375036239624023
    9. '.mod' → logprob: -25.750036239624023
    10. ' ' → logprob: -25.875036239624023

Token 460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -10.875019073486328
    3. ' )' → logprob: -15.125019073486328
    4. '   ' → logprob: -17.125019073486328
    5. ')
' → logprob: -17.375019073486328
    6. ')n' → logprob: -17.750019073486328
    7. '))' → logprob: -18.125019073486328
    8. ')return' → logprob: -18.250019073486328
    9. ')`' → logprob: -18.250019073486328
    10. '),' → logprob: -19.125019073486328

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001132593723013997
    2. 'return' → logprob: -7.126132488250732
    3. ' return' → logprob: -8.25113296508789
    4. '```' → logprob: -10.62613296508789
    5. 'ans' → logprob: -11.37613296508789
    6. '    
' → logprob: -11.75113296508789
    7. '
' → logprob: -12.25113296508789
    8. '<|end|>' → logprob: -12.50113296508789
    9. 'k' → logprob: -12.75113296508789
    10. ')' → logprob: -13.50113296508789

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3334503769874573
    2. 'ans' → logprob: -1.5834503173828125
    3. '   ' → logprob: -2.5834503173828125
    4. 'result' → logprob: -6.4584503173828125
    5. 'answer' → logprob: -6.8334503173828125
    6. ' return' → logprob: -9.208450317382812
    7. 'print' → logprob: -11.583450317382812
    8. 'res' → logprob: -12.208450317382812
    9. ' ans' → logprob: -12.208450317382812
    10. '```' → logprob: -12.208450317382812

Token 463: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.20154140889644623
    2. ' calc' → logprob: -1.7015414237976074
    3. '(calc' → logprob: -9.07654094696045
    4. '   ' → logprob: -12.20154094696045
    5. ' ' → logprob: -12.57654094696045
    6. 'cal' → logprob: -12.70154094696045
    7. '_calc' → logprob: -14.32654094696045
    8. 'calculate' → logprob: -14.70154094696045
    9. '.calc' → logprob: -14.95154094696045
    10. '0' → logprob: -15.45154094696045

Token 464: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.45848218582978e-06
    2. '_answer' → logprob: -13.25000286102295
    3. '_' → logprob: -14.62500286102295
    4. '_answers' → logprob: -16.375001907348633
    5. '_an' → logprob: -17.000001907348633
    6. '__' → logprob: -17.375001907348633
    7. ' _' → logprob: -17.500001907348633
    8. '_ann' → logprob: -18.375001907348633
    9. '_ant' → logprob: -18.375001907348633
    10. 'ans' → logprob: -18.750001907348633

Token 465: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021224225929472595
    2. '(' → logprob: -8.750212669372559
    3. ' (' → logprob: -9.875212669372559
    4. '<|end|>' → logprob: -14.125212669372559
    5. '```' → logprob: -14.500212669372559
    6. '(
' → logprob: -14.625212669372559
    7. 'n' → logprob: -15.500212669372559
    8. ')(' → logprob: -17.000211715698242
    9. '<n' → logprob: -17.125211715698242
    10. '
' → logprob: -17.250211715698242

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',a' → logprob: -12.25001049041748
    3. ' ,' → logprob: -12.25001049041748
    4. '   ' → logprob: -15.25001049041748
    5. 'a' → logprob: -16.375009536743164
    6. ',
' → logprob: -16.625009536743164
    7. '‌,' → logprob: -18.500009536743164
    8. ',n' → logprob: -18.625009536743164
    9. '```' → logprob: -19.625009536743164
    10. '
' → logprob: -19.875009536743164

Token 467: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931478977203369
    2. ' a' → logprob: -0.6931478977203369
    3. '	a' → logprob: -15.068147659301758
    4. ')a' → logprob: -16.193147659301758
    5. '
' → logprob: -16.943147659301758
    6. ',a' → logprob: -17.193147659301758
    7. '_a' → logprob: -17.193147659301758
    8. '[a' → logprob: -17.318147659301758
    9. '   ' → logprob: -17.693147659301758
    10. ')' → logprob: -17.943147659301758

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -15.750021934509277
    4. '   ' → logprob: -16.00002098083496
    5. ',k' → logprob: -17.62502098083496
    6. '‌,' → logprob: -17.87502098083496
    7. ',n' → logprob: -18.62502098083496
    8. ')' → logprob: -19.12502098083496
    9. '  ' → logprob: -20.00002098083496
    10. '‍,' → logprob: -20.00002098083496

Token 469: ' ker' (ID: 11104)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.2519291639328003
    2. ' ker' → logprob: -1.5019291639328003
    3. 'kern' → logprob: -17.251928329467773
    4. ' kernel' → logprob: -17.626928329467773
    5. 'kernel' → logprob: -17.751928329467773
    6. 'k' → logprob: -17.876928329467773
    7. ' ' → logprob: -18.251928329467773
    8. 'Ker' → logprob: -18.876928329467773
    9. ' kern' → logprob: -19.876928329467773
    10. ' Ker' → logprob: -20.251928329467773

Token 470: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -1.1472419600977446e-06
    2. 'uiu' → logprob: -14.375000953674316
    3. 'u' → logprob: -14.875000953674316
    4. 'uir' → logprob: -17.000001907348633
    5. 'rui' → logprob: -18.000001907348633
    6. 'uid' → logprob: -18.250001907348633
    7. 'uint' → logprob: -18.375001907348633
    8. 'uire' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. ' ui' → logprob: -18.750001907348633

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ' ,' → logprob: -9.750082015991211
    3. ',k' → logprob: -11.000082015991211
    4. ')' → logprob: -12.125082015991211
    5. 'k' → logprob: -14.250082015991211
    6. '   ' → logprob: -14.250082015991211
    7. ',n' → logprob: -15.125082015991211
    8. ',
' → logprob: -16.62508201599121
    9. 'n' → logprob: -16.75008201599121
    10. '`,' → logprob: -17.50008201599121

Token 472: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06196768581867218
    2. ' k' → logprob: -2.811967611312866
    3. '	k' → logprob: -17.186967849731445
    4. ' ' → logprob: -20.311967849731445
    5. ',k' → logprob: -20.561967849731445
    6. '   ' → logprob: -20.936967849731445
    7. ')' → logprob: -21.061967849731445
    8. '
' → logprob: -21.561967849731445
    9. ' к' → logprob: -21.561967849731445
    10. '    ' → logprob: -21.686967849731445

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ')' → logprob: -17.875001907348633
    4. 'mod' → logprob: -18.625001907348633
    5. ',n' → logprob: -19.125001907348633
    6. ',
' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '[' → logprob: -20.250001907348633
    9. ',module' → logprob: -20.875001907348633
    10. '```' → logprob: -21.125001907348633

Token 474: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00861456897109747
    2. ' mod' → logprob: -4.758614540100098
    3. '	mod' → logprob: -18.008615493774414
    4. '_mod' → logprob: -20.758615493774414
    5. ' ' → logprob: -20.883615493774414
    6. '(mod' → logprob: -21.008615493774414
    7. '.mod' → logprob: -21.133615493774414
    8. 'm' → logprob: -21.758615493774414
    9. 'moder' → logprob: -21.883615493774414
    10. '```' → logprob: -22.258615493774414

Token 475: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -15.75
    4. ')`' → logprob: -19.125
    5. '   ' → logprob: -19.625
    6. '))' → logprob: -20.0
    7. ')#' → logprob: -20.125
    8. '')' → logprob: -20.625
    9. '）' → logprob: -20.625
    10. ')

' → logprob: -20.875

Token 476: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4594460427761078
    2. ')' → logprob: -1.3344460725784302
    3. '<|end|>' → logprob: -3.0844459533691406
    4. '#' → logprob: -3.8344459533691406
    5. '```' → logprob: -4.084445953369141
    6. '[' → logprob: -4.334445953369141
    7. '):' → logprob: -6.709445953369141
    8. 'n' → logprob: -6.709445953369141
    9. '<|end|>' → logprob: -6.709445953369141
    10. '(' → logprob: -7.209445953369141

Token 477: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01798100396990776
    2. ' example' → logprob: -5.392981052398682
    3. ' remove' → logprob: -5.642981052398682
    4. ' test' → logprob: -5.892981052398682
    5. ' solve' → logprob: -5.892981052398682
    6. ' calculate' → logprob: -6.767981052398682
    7. ' process' → logprob: -7.517981052398682
    8. ' factorial' → logprob: -7.642981052398682
    9. ' compute' → logprob: -7.642981052398682
    10. ' solution' → logprob: -8.267980575561523

Token 478: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.704065213445574e-05
    2. '():
' → logprob: -10.250046730041504
    3. ' ():' → logprob: -11.875046730041504
    4. '(' → logprob: -13.125046730041504
    5. '()' → logprob: -13.125046730041504
    6. '():
' → logprob: -15.375046730041504
    7. ':' → logprob: -16.62504768371582
    8. '()>' → logprob: -16.62504768371582
    9. '(n' → logprob: -16.87504768371582
    10. '(":' → logprob: -17.12504768371582

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5901007056236267
    2. ' n' → logprob: -0.9651007056236267
    3. ' import' → logprob: -3.0901007652282715
    4. 'n' → logprob: -4.0901007652282715
    5. ' input' → logprob: -7.4651007652282715
    6. '(n' → logprob: -7.4651007652282715
    7. '    ' → logprob: -8.090100288391113
    8. '```' → logprob: -8.340100288391113
    9. '	n' → logprob: -8.340100288391113
    10. 'import' → logprob: -8.715100288391113

Token 480: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.42437976598739624
    2. 'n' (adapté à ' n') → logprob: -1.424379825592041
    3. ' import' → logprob: -2.424379825592041
    4. ' t' → logprob: -4.424379825592041
    5. 'import' → logprob: -5.924379825592041
    6. 't' → logprob: -6.549379825592041
    7. '   ' → logprob: -7.549379825592041
    8. ' T' → logprob: -11.299379348754883
    9. ' ' → logprob: -13.049379348754883
    10. '```' → logprob: -13.049379348754883

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00992725882679224
    2. ',' → logprob: -5.259927272796631
    3. '=' → logprob: -5.384927272796631
    4. ' ,' → logprob: -9.509926795959473
    5. ' ' → logprob: -11.759926795959473
    6. ' =
' → logprob: -12.009926795959473
    7. '=int' → logprob: -12.384926795959473
    8. '=input' → logprob: -13.384926795959473
    9. '   ' → logprob: -14.134926795959473
    10. '  ' → logprob: -14.384926795959473

Token 482: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008679809048771858
    2. ' int' → logprob: -4.7586798667907715
    3. '10' → logprob: -9.758679389953613
    4. '5' → logprob: -11.883679389953613
    5. ' ' → logprob: -15.633679389953613
    6. '100' → logprob: -16.25868034362793
    7. '[int' → logprob: -16.25868034362793
    8. '(int' → logprob: -17.13368034362793
    9. '<int' → logprob: -17.38368034362793
    10. '0' → logprob: -17.38368034362793

Token 483: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006840880028903484
    2. '(' → logprob: -5.006840705871582
    3. 'input' → logprob: -9.006840705871582
    4. '(
' → logprob: -13.131840705871582
    5. '()' → logprob: -15.131840705871582
    6. ' input' → logprob: -15.381840705871582
    7. '=input' → logprob: -15.506840705871582
    8. '(

' → logprob: -16.6318416595459
    9. ',input' → logprob: -16.8818416595459
    10. '<input' → logprob: -17.6318416595459

Token 484: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014249884523451328
    2. '()' → logprob: -4.264249801635742
    3. '(' → logprob: -10.139249801635742
    4. '().' → logprob: -10.639249801635742
    5. ')' → logprob: -12.264249801635742
    6. '())
' → logprob: -12.639249801635742
    7. '()>' → logprob: -12.764249801635742
    8. '()),' → logprob: -13.264249801635742
    9. '()))' → logprob: -13.389249801635742
    10. '();)' → logprob: -13.514249801635742

Token 485: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3544066548347473
    2. '   ' → logprob: -1.2294065952301025
    3. ' a' → logprob: -5.479406833648682
    4. '<|end|>' → logprob: -6.729406833648682
    5. '	a' → logprob: -7.979406833648682
    6. '    
' → logprob: -9.604406356811523
    7. '```' → logprob: -9.854406356811523
    8. '[a' → logprob: -10.604406356811523
    9. '[' → logprob: -11.354406356811523
    10. '  ' → logprob: -11.604406356811523

Token 486: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.6537622034084052e-05
    2. '   ' → logprob: -10.62502670288086
    3. ' a' → logprob: -13.12502670288086
    4. '	a' → logprob: -16.25002670288086
    5. '    
' → logprob: -19.00002670288086
    6. '  ' → logprob: -19.62502670288086
    7. '```' → logprob: -19.87502670288086
    8. '_a' → logprob: -20.12502670288086
    9. '#a' → logprob: -20.25002670288086
    10. '<|end|>' → logprob: -20.87502670288086

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17981544137001038
    2. '=' → logprob: -1.804815411567688
    3. '[' → logprob: -10.679815292358398
    4. '[]' → logprob: -10.929815292358398
    5. '=[]' → logprob: -12.054815292358398
    6. '<|end|>' → logprob: -12.054815292358398
    7. '[:]' → logprob: -12.054815292358398
    8. '.' → logprob: -12.929815292358398
    9. ')' → logprob: -13.179815292358398
    10. '_' → logprob: -13.304815292358398

Token 488: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004095377866178751
    2. ' list' → logprob: -5.504095554351807
    3. '[list' → logprob: -11.004095077514648
    4. '[' → logprob: -15.004095077514648
    5. ' [' → logprob: -19.12909507751465
    6. '=list' → logprob: -19.25409507751465
    7. '(list' → logprob: -19.75409507751465
    8. '	list' → logprob: -20.25409507751465
    9. 'List' → logprob: -20.37909507751465
    10. '[]' → logprob: -20.62909507751465

Token 489: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. '0' → logprob: -12.250006675720215
    3. '*' → logprob: -14.375006675720215
    4. ' int' → logprob: -14.500006675720215
    5. '
' → logprob: -15.875006675720215
    6. ']int' → logprob: -16.5000057220459
    7. '(int' → logprob: -16.6250057220459
    8. '[int' → logprob: -17.3750057220459
    9. '<int' → logprob: -17.6250057220459
    10. '```' → logprob: -17.7500057220459

Token 490: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.766564667224884
    2. '(x' → logprob: -0.891564667224884
    3. '(input' → logprob: -2.1415646076202393
    4. '(i' → logprob: -5.891564846038818
    5. '(
' → logprob: -6.016564846038818
    6. '()]' → logprob: -6.516564846038818
    7. '()' → logprob: -6.891564846038818
    8. '(

' → logprob: -9.64156436920166
    9. '(_)' → logprob: -10.39156436920166
    10. '(...)' → logprob: -10.76656436920166

Token 491: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46928900480270386
    2. 'for' → logprob: -1.0942890644073486
    3. '()' → logprob: -3.5942890644073486
    4. ' for' → logprob: -5.0942888259887695
    5. 'input' → logprob: -5.5942888259887695
    6. '())' → logprob: -7.0942888259887695
    7. '(' → logprob: -7.3442888259887695
    8. '
' → logprob: -8.46928882598877
    9. '(input' → logprob: -8.59428882598877
    10. 'in' → logprob: -9.21928882598877

Token 492: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21095530688762665
    2. ' for' → logprob: -1.710955262184143
    3. '()' → logprob: -4.7109551429748535
    4. ')' → logprob: -7.8359551429748535
    5. 'input' → logprob: -10.085955619812012
    6. 'in' → logprob: -10.335955619812012
    7. ' ' → logprob: -11.960955619812012
    8. ' in' → logprob: -11.960955619812012
    9. ']' → logprob: -12.085955619812012
    10. ' input' → logprob: -13.085955619812012

Token 493: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7730413675308228
    2. 'i' → logprob: -0.8980413675308228
    3. ' in' → logprob: -2.773041248321533
    4. '_' → logprob: -2.898041248321533
    5. ' ' → logprob: -5.398041248321533
    6. ' _' → logprob: -5.523041248321533
    7. 'in' → logprob: -5.898041248321533
    8. ' input' → logprob: -6.523041248321533
    9. 'input' → logprob: -7.773041248321533
    10. '  ' → logprob: -8.523041725158691

Token 494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018151111900806427
    2. 'in' → logprob: -4.01815128326416
    3. 'input' → logprob: -14.26815128326416
    4. ' ' → logprob: -15.39315128326416
    5. '	in' → logprob: -16.268150329589844
    6. 'i' → logprob: -16.893150329589844
    7. ' input' → logprob: -17.018150329589844
    8. 'import' → logprob: -17.018150329589844
    9. ' i' → logprob: -17.393150329589844
    10. '_' → logprob: -17.893150329589844

Token 495: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. ' input' → logprob: -5.753177642822266
    3. 'range' → logprob: -15.878177642822266
    4. '
' → logprob: -18.628177642822266
    5. '(input' → logprob: -19.628177642822266
    6. ' ' → logprob: -19.878177642822266
    7. ' range' → logprob: -20.878177642822266
    8. '=input' → logprob: -21.003177642822266
    9. '_input' → logprob: -21.128177642822266
    10. '<input' → logprob: -21.378177642822266

Token 496: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.143808109802194e-05
    2. '()' → logprob: -10.125041007995605
    3. '()]' → logprob: -13.750041007995605
    4. '()].' → logprob: -15.375041007995605
    5. 'split' → logprob: -17.250041961669922
    6. '.split' → logprob: -17.625041961669922
    7. ' ().' → logprob: -17.750041961669922
    8. '(' → logprob: -18.250041961669922
    9. '()
' → logprob: -18.250041961669922
    10. '())' → logprob: -19.375041961669922

Token 497: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002627662615850568
    2. 'strip' → logprob: -8.250263214111328
    3. 'rstrip' → logprob: -13.750263214111328
    4. ' split' → logprob: -15.500263214111328
    5. '(split' → logprob: -16.625263214111328
    6. 'spl' → logprob: -18.000263214111328
    7. '.split' → logprob: -21.125263214111328
    8. '_split' → logprob: -22.125263214111328
    9. 's' → logprob: -22.125263214111328
    10. ' strip' → logprob: -22.875263214111328

Token 498: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.588793960167095e-05
    2. '()' → logprob: -9.500076293945312
    3. '(' → logprob: -14.375076293945312
    4. '()]
' → logprob: -14.875076293945312
    5. '('' → logprob: -17.875076293945312
    6. '())' → logprob: -18.375076293945312
    7. ' ()' → logprob: -18.875076293945312
    8. ']' → logprob: -18.875076293945312
    9. '():' → logprob: -18.875076293945312
    10. '（）' → logprob: -18.875076293945312

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15126554667949677
    2. 'print' → logprob: -2.0262656211853027
    3. '```' → logprob: -5.026265621185303
    4. ' print' → logprob: -6.651265621185303
    5. '<|end|>' → logprob: -8.026265144348145
    6. '
' → logprob: -8.526265144348145
    7. '    
' → logprob: -9.776265144348145
    8. '``' → logprob: -9.776265144348145
    9. 'result' → logprob: -10.276265144348145
    10. '	print' → logprob: -11.901265144348145

Token 500: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002394170151092112
    2. 'result' → logprob: -8.625239372253418
    3. 'res' → logprob: -10.375239372253418
    4. 'ans' → logprob: -10.875239372253418
    5. ' print' → logprob: -12.625239372253418
    6. 'pr' → logprob: -12.875239372253418
    7. '   ' → logprob: -13.250239372253418
    8. 'answer' → logprob: -13.875239372253418
    9. '    
' → logprob: -14.500239372253418
    10. '```' → logprob: -15.375239372253418

Token 501: '(rem' (ID: 150425)
  Prédit: '(rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.0041634030640125275
    2. '(' → logprob: -5.5041632652282715
    3. '(remove' → logprob: -9.50416374206543
    4. '(Rem' → logprob: -11.75416374206543
    5. '(
' → logprob: -14.25416374206543
    6. 'rem' → logprob: -14.25416374206543
    7. '(

' → logprob: -15.25416374206543
    8. '("' → logprob: -15.50416374206543
    9. '(ret' → logprob: -15.87916374206543
    10. '(rest' → logprob: -16.00416374206543

Token 502: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -9.65101717156358e-05
    2. 'ove' → logprob: -9.250096321105957
    3. 'ovn' → logprob: -15.625096321105957
    4. 'ов' → logprob: -16.500097274780273
    5. 'oven' → logprob: -17.625097274780273
    6. 'ovej' → logprob: -17.750097274780273
    7. 'o' → logprob: -18.375097274780273
    8. 'ovne' → logprob: -18.625097274780273
    9. 'oved' → logprob: -19.000097274780273
    10. 'ouv' → logprob: -19.000097274780273

Token 503: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00027218335890211165
    2. '(' → logprob: -8.250271797180176
    3. ' (' → logprob: -11.625271797180176
    4. ')' → logprob: -14.000271797180176
    5. ')(' → logprob: -14.750271797180176
    6. '```' → logprob: -15.250271797180176
    7. '(
' → logprob: -15.875271797180176
    8. '(len' → logprob: -15.875271797180176
    9. '   ' → logprob: -16.750272750854492
    10. ' ' → logprob: -17.375272750854492

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010935462778434157
    2. ',a' → logprob: -6.87609338760376
    3. ' ,' → logprob: -9.876093864440918
    4. ',
' → logprob: -13.126093864440918
    5. '(' → logprob: -13.126093864440918
    6. '(a' → logprob: -13.501093864440918
    7. '   ' → logprob: -13.626093864440918
    8. 'a' → logprob: -13.626093864440918
    9. ',n' → logprob: -14.126093864440918
    10. '```' → logprob: -15.126093864440918

Token 505: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233882926404476
    2. ' a' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.130233764648438
    4. '	a' → logprob: -17.505233764648438
    5. '
' → logprob: -18.630233764648438
    6. ' ' → logprob: -18.755233764648438
    7. ')a' → logprob: -18.755233764648438
    8. '(a' → logprob: -18.880233764648438
    9. '    ' → logprob: -19.005233764648438
    10. ',a' → logprob: -19.755233764648438

Token 506: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007239909609779716
    2. ')' → logprob: -7.250723838806152
    3. '()))' → logprob: -11.500723838806152
    4. '))
' → logprob: -12.625723838806152
    5. '())' → logprob: -14.750723838806152
    6. '()' → logprob: -16.25072479248047
    7. ')))' → logprob: -16.37572479248047
    8. ' ))' → logprob: -17.50072479248047
    9. ')
' → logprob: -17.75072479248047
    10. '])' → logprob: -18.37572479248047

Token 507: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.869017852295656e-06
    2. ' if' → logprob: -12.375006675720215
    3. '```' → logprob: -13.375006675720215
    4. 'main' → logprob: -13.875006675720215
    5. '#' → logprob: -16.87500762939453
    6. '
' → logprob: -17.00000762939453
    7. '\' → logprob: -18.62500762939453
    8. '\n' → logprob: -18.75000762939453
    9. 'If' → logprob: -19.50000762939453
    10. '#if' → logprob: -19.62500762939453

Token 508: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 506
Tokens correctement prédits (1ère position, stricte): 268
Tokens correctement prédits (1ère position, avec adaptation): 286
Tokens correctement prédits (top 10): 455
Précision stricte (1ère position): 52.96%
Précision adaptée (1ère position): 56.52%
Précision (top 10): 89.92%
================================================================================
