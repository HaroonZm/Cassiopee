================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M = 10**9 + 7
n, k = map(int, input().split())
a = 0
i = k
while i <= n + 1:
    l = i * (i - 1) // 2
    r = n * (n + 1) // 2 - (n - i) * (n - i + 1) // 2
    a = (a + r + 1 - l) % M
    i += 1
print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39893388748168945
    2. '10' → logprob: -2.2739338874816895
    3. '[[' → logprob: -2.2739338874816895
    4. '{}' → logprob: -3.2739338874816895
    5. '[]' → logprob: -3.3989338874816895
    6. 'np' → logprob: -3.7739338874816895
    7. '5' → logprob: -4.3989338874816895
    8. '{' → logprob: -5.6489338874816895
    9. '3' → logprob: -5.7739338874816895
    10. '100' → logprob: -6.3989338874816895

Token 4: '**' (ID: 410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.173787236213684
    2. '*' → logprob: -1.423787236213684
    3. '\n' → logprob: -1.798787236213684
    4. '\' → logprob: -2.0487871170043945
    5. '**' → logprob: -2.2987871170043945
    6. '#' → logprob: -3.6737871170043945
    7. '```' → logprob: -4.2987871170043945
    8. '+
' → logprob: -6.0487871170043945
    9. '
' → logprob: -6.1737871170043945
    10. '<|end|>' → logprob: -6.2987871170043945

Token 5: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.08400101959705353
    2. '9' → logprob: -2.584001064300537
    3. ' ' → logprob: -5.834001064300537
    4. '3' → logprob: -6.209001064300537
    5. '7' → logprob: -9.709000587463379
    6. '-' → logprob: -9.834000587463379
    7. '```' → logprob: -10.459000587463379
    8. '2' → logprob: -12.084000587463379
    9. '5' → logprob: -12.584000587463379
    10. '1' → logprob: -12.709000587463379

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09263041615486145
    2. '**' → logprob: -2.967630386352539
    3. '*' → logprob: -3.717630386352539
    4. '```' → logprob: -5.467630386352539
    5. '-' → logprob: -6.592630386352539
    6. '_' → logprob: -6.717630386352539
    7. ' **' → logprob: -6.967630386352539
    8. ' ' → logprob: -6.967630386352539
    9. '.' → logprob: -7.092630386352539
    10. ' +' → logprob: -7.092630386352539

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -15.875005722045898
    4. '```' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.8750057220459
    6. '9' → logprob: -18.3750057220459
    7. '  ' → logprob: -18.7500057220459
    8. '07' → logprob: -19.1875057220459
    9. ' ' → logprob: -19.1875057220459
    10. '1' → logprob: -19.1875057220459

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -17.0
    5. '9' → logprob: -17.625
    6. '07' → logprob: -19.0
    7. '   ' → logprob: -19.25
    8. ' +' → logprob: -20.125
    9. '``' → logprob: -20.5625
    10. '  ' → logprob: -20.5625

Token 9: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7754996418952942
    2. '\' → logprob: -1.7754995822906494
    3. '\n' → logprob: -2.0254995822906494
    4. '```' → logprob: -2.7754995822906494
    5. '#' → logprob: -2.9004995822906494
    6. '**' → logprob: -3.0254995822906494
    7. '
' → logprob: -4.2754998207092285
    8. ',' → logprob: -4.6504998207092285
    9. '<|end|>' → logprob: -4.6504998207092285
    10. '`' → logprob: -4.6504998207092285

Token 10: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6679622530937195
    2. '\' → logprob: -1.5429623126983643
    3. '*' → logprob: -2.2929623126983643
    4. '
' → logprob: -2.6679623126983643
    5. '#' → logprob: -3.1679623126983643
    6. '```' → logprob: -3.7929623126983643
    7. '`' → logprob: -5.167962074279785
    8. '**' → logprob: -5.417962074279785
    9. '' → logprob: -5.542962074279785
    10. ',' → logprob: -5.542962074279785

Token 11: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7885992527008057
    2. '[' → logprob: -1.2885992527008057
    3. '_' → logprob: -2.4135992527008057
    4. '**' → logprob: -2.7885992527008057
    5. '=' → logprob: -4.163599014282227
    6. '*' → logprob: -4.163599014282227
    7. ')' → logprob: -4.163599014282227
    8. ' **' → logprob: -4.288599014282227
    9. '<|end|>' → logprob: -4.413599014282227
    10. '+' → logprob: -4.538599014282227

Token 12: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22327479720115662
    2. ' m' → logprob: -1.848274827003479
    3. 'k' → logprob: -3.5982747077941895
    4. ' k' → logprob: -4.3482747077941895
    5. ' M' → logprob: -6.9732747077941895
    6. 'M' → logprob: -7.8482747077941895
    7. '=' → logprob: -7.9732747077941895
    8. ' =' → logprob: -8.473275184631348
    9. 'a' → logprob: -8.723275184631348
    10. 'x' → logprob: -9.723275184631348

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07805592566728592
    2. '=' → logprob: -3.0780558586120605
    3. ',' → logprob: -3.5780558586120605
    4. ' ' → logprob: -7.7030558586120605
    5. ' ,' → logprob: -7.9530558586120605
    6. '<|end|>' → logprob: -8.578056335449219
    7. ')' → logprob: -9.828056335449219
    8. ' =
' → logprob: -10.453056335449219
    9. '<|end|>' → logprob: -11.828056335449219
    10. '=

' → logprob: -12.828056335449219

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.19615741074085236
    2. 'map' → logprob: -1.821157455444336
    3. ' input' → logprob: -4.946157455444336
    4. ' ' → logprob: -5.321157455444336
    5. 'input' → logprob: -5.821157455444336
    6. '0' → logprob: -7.196157455444336
    7. ' int' → logprob: -8.321157455444336
    8. 'int' → logprob: -8.821157455444336
    9. ' list' → logprob: -9.571157455444336
    10. '10' → logprob: -10.446157455444336

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02948790229856968
    2. '<|end|>' → logprob: -4.5294880867004395
    3. '(int' → logprob: -4.6544880867004395
    4. '(lambda' → logprob: -5.5294880867004395
    5. '(user' → logprob: -7.4044880867004395
    6. '```' → logprob: -7.5294880867004395
    7. 'user' → logprob: -7.6544880867004395
    8. '(str' → logprob: -8.029487609863281
    9. '<|end|>' → logprob: -8.154487609863281
    10. ''' → logprob: -8.404487609863281

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09290648251771927
    2. ')' → logprob: -3.2179064750671387
    3. '(input' → logprob: -3.8429064750671387
    4. '(' → logprob: -4.092906475067139
    5. ',input' → logprob: -4.967906475067139
    6. '(),' → logprob: -7.467906475067139
    7. '`,' → logprob: -7.842906475067139
    8. '),' → logprob: -8.092906951904297
    9. '(user' → logprob: -8.092906951904297
    10. '(int' → logprob: -8.217906951904297

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740805923938751
    2. ' input' → logprob: -0.9740805625915527
    3. ')' → logprob: -12.974081039428711
    4. ',input' → logprob: -14.599081039428711
    5. ' ' → logprob: -14.849081039428711
    6. '(input' → logprob: -15.474081039428711
    7. ' )' → logprob: -16.34908103942871
    8. '=input' → logprob: -16.59908103942871
    9. '	input' → logprob: -16.59908103942871
    10. '```' → logprob: -18.34908103942871

Token 18: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5092952847480774
    2. '())' → logprob: -1.0092952251434326
    3. '(' → logprob: -3.8842952251434326
    4. '('' → logprob: -4.759295463562012
    5. '().' → logprob: -6.509295463562012
    6. ')' → logprob: -7.134295463562012
    7. '(),' → logprob: -7.384295463562012
    8. '());' → logprob: -7.509295463562012
    9. '()))' → logprob: -8.384295463562012
    10. '("' → logprob: -8.384295463562012

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005576779949478805
    2. 'strip' → logprob: -7.500557899475098
    3. 'rstrip' → logprob: -12.750557899475098
    4. ' split' → logprob: -13.625557899475098
    5. 'read' → logprob: -15.375557899475098
    6. ')' → logprob: -15.750557899475098
    7. '(split' → logprob: -16.12555694580078
    8. 'spl' → logprob: -17.00055694580078
    9. '_split' → logprob: -18.25055694580078
    10. ' strip' → logprob: -19.12555694580078

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003482823958620429
    2. '())' → logprob: -6.378482818603516
    3. '))' → logprob: -6.503482818603516
    4. '`)' → logprob: -9.128482818603516
    5. '()' → logprob: -9.628482818603516
    6. '')' → logprob: -10.378482818603516
    7. '(' → logprob: -10.503482818603516
    8. ')`' → logprob: -11.503482818603516
    9. ' )' → logprob: -12.128482818603516
    10. '),' → logprob: -12.253482818603516

Token 21: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4515509605407715
    2. 'result' → logprob: -1.9515509605407715
    3. 'fact' → logprob: -2.2015509605407715
    4. 'factor' → logprob: -3.3265509605407715
    5. 'a' → logprob: -3.8265509605407715
    6. 'res' → logprob: -3.8265509605407715
    7. 'd' → logprob: -5.0765509605407715
    8. 'def' → logprob: -5.2015509605407715
    9. 'f' → logprob: -5.4515509605407715
    10. 'if' → logprob: -6.2015509605407715

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16145548224449158
    2. ' =' → logprob: -2.4114553928375244
    3. '=' → logprob: -3.4114553928375244
    4. '.' → logprob: -4.0364556312561035
    5. '[:]' → logprob: -6.0364556312561035
    6. '[a' → logprob: -6.4114556312561035
    7. ',' → logprob: -6.6614556312561035
    8. '_' → logprob: -7.0364556312561035
    9. ' ' → logprob: -7.5364556312561035
    10. '[i' → logprob: -7.9114556312561035

Token 23: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6829899549484253
    2. 'list' → logprob: -1.1829899549484253
    3. ' [' → logprob: -2.432990074157715
    4. '[' → logprob: -3.182990074157715
    5. ' []' → logprob: -3.682990074157715
    6. '[]' → logprob: -3.932990074157715
    7. '[list' → logprob: -4.307990074157715
    8. '[int' → logprob: -7.432990074157715
    9. '[input' → logprob: -8.057990074157715
    10. '[a' → logprob: -10.182990074157715

Token 24: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1801460236310959
    2. '[list' → logprob: -2.1801459789276123
    3. '[' → logprob: -3.5551459789276123
    4. '[]' → logprob: -4.180146217346191
    5. '[int' → logprob: -5.055146217346191
    6. '[input' → logprob: -7.305146217346191
    7. '[a' → logprob: -7.555146217346191
    8. '[n' → logprob: -9.305146217346191
    9. '[i' → logprob: -9.555146217346191
    10. ' list' → logprob: -10.430146217346191

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0769268125295639
    2. 'f' → logprob: -3.8269267082214355
    3. ' for' → logprob: -4.3269267082214355
    4. '
' → logprob: -4.8269267082214355
    5. 'x' → logprob: -5.0769267082214355
    6. 'b' → logprob: -5.0769267082214355
    7. '*' → logprob: -5.3269267082214355
    8. 'i' → logprob: -5.8269267082214355
    9. 'a' → logprob: -6.2019267082214355
    10. '**' → logprob: -7.2019267082214355

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9867033958435059
    2. 'n' → logprob: -1.3617033958435059
    3. ' =' → logprob: -1.3617033958435059
    4. ' ' → logprob: -3.486703395843506
    5. ' +=' → logprob: -3.611703395843506
    6. '+' → logprob: -3.736703395843506
    7. 'f' → logprob: -3.736703395843506
    8. ' n' → logprob: -5.236703395843506
    9. '+=' → logprob: -6.236703395843506
    10. 'nt' → logprob: -7.111703395843506

Token 28: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5655418038368225
    2. ' ' → logprob: -1.1905417442321777
    3. '0' → logprob: -2.0655417442321777
    4. ' k' → logprob: -8.065542221069336
    5. 'k' → logprob: -8.315542221069336
    6. '2' → logprob: -8.315542221069336
    7. ' n' → logprob: -8.690542221069336
    8. 'n' → logprob: -9.065542221069336
    9. ' i' → logprob: -11.065542221069336
    10. 'a' → logprob: -11.815542221069336

Token 29: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5242045521736145
    2. '+' → logprob: -1.3992044925689697
    3. '<|end|>' → logprob: -2.5242044925689697
    4. '-' → logprob: -4.274204730987549
    5. ')' → logprob: -4.774204730987549
    6. '%' → logprob: -4.774204730987549
    7. '```' → logprob: -4.899204730987549
    8. '>' → logprob: -5.024204730987549
    9. ' +' → logprob: -5.524204730987549
    10. 'while' → logprob: -5.649204730987549

Token 30: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055751487612724304
    2. ' ' → logprob: -3.5557515621185303
    3. ' +' → logprob: -5.055751323699951
    4. '**' → logprob: -5.555751323699951
    5. '<|end|>' → logprob: -5.805751323699951
    6. 'while' → logprob: -6.055751323699951
    7. '```' → logprob: -6.305751323699951
    8. '-' → logprob: -6.430751323699951
    9. ' while' → logprob: -6.680751323699951
    10. ',' → logprob: -7.055751323699951

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5321894288063049
    2. ' ' → logprob: -0.9071894288063049
    3. 'i' → logprob: -5.28218936920166
    4. ' <' → logprob: -6.65718936920166
    5. '  ' → logprob: -6.65718936920166
    6. ' <=' → logprob: -7.78218936920166
    7. ' k' → logprob: -8.28218936920166
    8. ' a' → logprob: -8.78218936920166
    9. '<' → logprob: -9.15718936920166
    10. ' n' → logprob: -9.28218936920166

Token 32: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.390058308839798
    2. '<=' → logprob: -1.1400582790374756
    3. ' >=' → logprob: -6.515058517456055
    4. '>=' → logprob: -7.015058517456055
    5. '<' → logprob: -7.765058517456055
    6. ' <' → logprob: -8.390058517456055
    7. '>' → logprob: -10.140058517456055
    8. '*' → logprob: -10.515058517456055
    9. ' >' → logprob: -10.765058517456055
    10. ' ' → logprob: -11.265058517456055

Token 33: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2811633050441742
    2. ' n' → logprob: -1.4061633348464966
    3. ' ' → logprob: -12.156163215637207
    4. '10' → logprob: -13.031163215637207
    5. '   ' → logprob: -14.031163215637207
    6. '	n' → logprob: -14.406163215637207
    7. 'k' → logprob: -14.656163215637207
    8. '9' → logprob: -15.093663215637207
    9. '_n' → logprob: -15.156163215637207
    10. '(n' → logprob: -15.281163215637207

Token 34: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024877090007066727
    2. ':
' → logprob: -3.7748770713806152
    3. ' :' → logprob: -6.649877071380615
    4. ' :
' → logprob: -8.274877548217773
    5. ' and' → logprob: -10.274877548217773
    6. '+' → logprob: -11.649877548217773
    7. 'and' → logprob: -11.899877548217773
    8. ':i' → logprob: -12.149877548217773
    9. ':
' → logprob: -12.399877548217773
    10. '+:' → logprob: -12.524877548217773

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10720743238925934
    2. 'k' → logprob: -2.7322075366973877
    3. ' ' → logprob: -3.6072075366973877
    4. ' k' → logprob: -5.232207298278809
    5. '0' → logprob: -6.107207298278809
    6. 'i' → logprob: -7.982207298278809
    7. '10' → logprob: -8.107207298278809
    8. 'a' → logprob: -8.482207298278809
    9. '2' → logprob: -8.482207298278809
    10. '3' → logprob: -8.732207298278809

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6967681050300598
    2. 'k' → logprob: -0.6967681050300598
    3. 'i' → logprob: -6.946768283843994
    4. '0' → logprob: -7.321768283843994
    5. '10' → logprob: -7.571768283843994
    6. ' ' → logprob: -7.946768283843994
    7. ' k' → logprob: -8.071767807006836
    8. '2' → logprob: -8.821767807006836
    9. 'n' → logprob: -9.071767807006836
    10. '5' → logprob: -9.446767807006836

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000727325037587434
    2. ':
' → logprob: -7.50072717666626
    3. ' :' → logprob: -8.875727653503418
    4. ' and' → logprob: -11.250727653503418
    5. '):' → logprob: -12.000727653503418
    6. ':**' → logprob: -12.750727653503418
    7. '<|end|>' → logprob: -13.125727653503418
    8. 'and' → logprob: -13.375727653503418
    9. '**' → logprob: -13.500727653503418
    10. ':

' → logprob: -13.875727653503418

Token 38: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054305821657180786
    2. '   ' → logprob: -3.8043057918548584
    3. ':
' → logprob: -4.6793060302734375
    4. ' ' → logprob: -4.8043060302734375
    5. '<|end|>' → logprob: -5.0543060302734375
    6. 'a' → logprob: -6.8043060302734375
    7. '+' → logprob: -7.3043060302734375
    8. ' :' → logprob: -7.4293060302734375
    9. ',' → logprob: -7.8043060302734375
    10. '
' → logprob: -7.9293060302734375

Token 39: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23550112545490265
    2. 'a' → logprob: -1.9855011701583862
    3. ' ' → logprob: -2.8605010509490967
    4. '    ' → logprob: -5.110501289367676
    5. ' i' → logprob: -5.610501289367676
    6. '   ' → logprob: -5.860501289367676
    7. ' 
' → logprob: -8.110501289367676
    8. '0' → logprob: -8.235501289367676
    9. ' (' → logprob: -8.360501289367676
    10. 'i' → logprob: -8.485501289367676

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2630246877670288
    2. '=' → logprob: -1.3880246877670288
    3. 'e' → logprob: -1.3880246877670288
    4. 'a' → logprob: -3.1380248069763184
    5. 'en' → logprob: -3.2630248069763184
    6. 'og' → logprob: -3.6380248069763184
    7. 'o' → logprob: -4.138024806976318
    8. 'ength' → logprob: -4.263024806976318
    9. 'i' → logprob: -4.513024806976318
    10. 'eft' → logprob: -4.638024806976318

Token 41: ' i' (ID: 575)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0470998287200928
    2. ' (' → logprob: -1.2970998287200928
    3. 'n' → logprob: -2.1720998287200928
    4. ' i' → logprob: -2.1720998287200928
    5. '(n' → logprob: -2.7970998287200928
    6. 'i' → logprob: -3.0470998287200928
    7. '(i' → logprob: -3.9220998287200928
    8. '(' → logprob: -5.047100067138672
    9. ' ' → logprob: -5.422100067138672
    10. ' k' → logprob: -6.172100067138672

Token 42: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4504411816596985
    2. ' -' → logprob: -1.3254411220550537
    3. ' *' → logprob: -3.5754411220550537
    4. ' //' → logprob: -3.5754411220550537
    5. '//' → logprob: -4.075441360473633
    6. '*' → logprob: -4.450441360473633
    7. ' ' → logprob: -5.575441360473633
    8. '*i' → logprob: -6.200441360473633
    9. '**' → logprob: -6.700441360473633
    10. ' +' → logprob: -6.700441360473633

Token 43: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6542410254478455
    2. '(n' → logprob: -1.4042410850524902
    3. '(k' → logprob: -2.0292410850524902
    4. '(' → logprob: -2.5292410850524902
    5. '(a' → logprob: -5.27924108505249
    6. '(M' → logprob: -5.27924108505249
    7. 'i' → logprob: -5.77924108505249
    8. '2' → logprob: -5.77924108505249
    9. ' (' → logprob: -5.90424108505249
    10. 'k' → logprob: -6.52924108505249

Token 44: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13258379697799683
    2. '(i' → logprob: -2.5075838565826416
    3. '(' → logprob: -4.1325836181640625
    4. ' i' → logprob: -4.7575836181640625
    5. '(n' → logprob: -4.8825836181640625
    6. 'n' → logprob: -5.1325836181640625
    7. ' (' → logprob: -6.1325836181640625
    8. 'k' → logprob: -7.1325836181640625
    9. '2' → logprob: -7.7575836181640625
    10. ' ' → logprob: -8.132583618164062

Token 45: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1462946981191635
    2. '+' → logprob: -2.271294593811035
    3. ' -' → logprob: -3.521294593811035
    4. ' +' → logprob: -5.771294593811035
    5. '1' → logprob: -9.271294593811035
    6. ' ' → logprob: -9.771294593811035
    7. '```' → logprob: -10.396294593811035
    8. ')' → logprob: -10.771294593811035
    9. '   ' → logprob: -12.521294593811035
    10. '
' → logprob: -12.521294593811035

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003907543432433158
    2. ' ' → logprob: -7.875390529632568
    3. '   ' → logprob: -12.375391006469727
    4. ')' → logprob: -13.875391006469727
    5. '۱' → logprob: -14.250391006469727
    6. '```' → logprob: -14.500391006469727
    7. '  ' → logprob: -14.562891006469727
    8. '-' → logprob: -14.625391006469727
    9. '

' → logprob: -14.812891006469727
    10. '+' → logprob: -14.875391006469727

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. ' ' → logprob: -10.375049591064453
    3. '   ' → logprob: -11.375049591064453
    4. '...' → logprob: -13.750049591064453
    5. ')' → logprob: -14.000049591064453
    6. '  ' → logprob: -14.187549591064453
    7. '    ' → logprob: -14.500049591064453
    8. '۱' → logprob: -14.562549591064453
    9. '```' → logprob: -14.875049591064453
    10. '+' → logprob: -15.062549591064453

Token 48: ')' (ID: 8)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.648673415184021
    2. ' //' → logprob: -0.898673415184021
    3. ')' → logprob: -2.8986735343933105
    4. ')//' → logprob: -4.7736735343933105
    5. '   ' → logprob: -5.3986735343933105
    6. ' )' → logprob: -7.3986735343933105
    7. ' ' → logprob: -7.7736735343933105
    8. '```' → logprob: -8.023673057556152
    9. '*' → logprob: -8.523673057556152
    10. '  ' → logprob: -9.273673057556152

Token 49: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.46775656938552856
    2. '//' → logprob: -1.0927565097808838
    3. '   ' → logprob: -3.342756509780884
    4. ' *' → logprob: -7.342756748199463
    5. ' ' → logprob: -7.467756748199463
    6. '**' → logprob: -8.092756271362305
    7. ' /' → logprob: -8.092756271362305
    8. ' +' → logprob: -8.842756271362305
    9. '*' → logprob: -9.217756271362305
    10. '#' → logprob: -9.217756271362305

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.750040054321289
    3. '1' → logprob: -11.000040054321289
    4. '4' → logprob: -14.000040054321289
    5. '   ' → logprob: -15.250040054321289
    6. '```' → logprob: -16.00004005432129
    7. 'k' → logprob: -16.25004005432129
    8. '6' → logprob: -16.56254005432129
    9. '3' → logprob: -17.12504005432129
    10. '  ' → logprob: -17.25004005432129

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.9186317482963204e-05
    2. '1' → logprob: -10.375049591064453
    3. ' ' → logprob: -11.000049591064453
    4. '```' → logprob: -15.000049591064453
    5. '   ' → logprob: -15.500049591064453
    6. ')' → logprob: -16.125049591064453
    7. '4' → logprob: -16.250049591064453
    8. '

' → logprob: -16.312549591064453
    9. '  ' → logprob: -16.812549591064453
    10. 'k' → logprob: -16.937549591064453

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20190559327602386
    2. '<|end|>' → logprob: -2.4519054889678955
    3. ' if' → logprob: -3.5769054889678955
    4. ' ' → logprob: -3.5769054889678955
    5. 'if' → logprob: -4.576905727386475
    6. '+' → logprob: -4.576905727386475
    7. '  ' → logprob: -6.201905727386475
    8. '    
' → logprob: -6.326905727386475
    9. 'a' → logprob: -6.451905727386475
    10. ')' → logprob: -6.451905727386475

Token 54: ' r' (ID: 428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6274150013923645
    2. '   ' → logprob: -1.6274149417877197
    3. 'if' → logprob: -2.0024149417877197
    4. ' if' → logprob: -2.7524149417877197
    5. 'b' → logprob: -4.252415180206299
    6. ' a' → logprob: -4.502415180206299
    7. ' ' → logprob: -4.627415180206299
    8. 'i' → logprob: -5.502415180206299
    9. 'l' → logprob: -5.502415180206299
    10. 'n' → logprob: -5.627415180206299

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023996450006961823
    2. '=' → logprob: -3.773996353149414
    3. ' ' → logprob: -7.398996353149414
    4. ',' → logprob: -10.773996353149414
    5. 'ight' → logprob: -10.773996353149414
    6. '  ' → logprob: -11.461496353149414
    7. '   ' → logprob: -11.836496353149414
    8. ')' → logprob: -11.898996353149414
    9. ' -' → logprob: -12.148996353149414
    10. 'f' → logprob: -12.336496353149414

Token 56: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.005875825881958
    2. 'i' → logprob: -1.630875825881958
    3. 'l' → logprob: -1.630875825881958
    4. ' n' → logprob: -3.005875825881958
    5. ' (' → logprob: -3.130875825881958
    6. '   ' → logprob: -3.505875825881958
    7. ' i' → logprob: -3.755875825881958
    8. '(i' → logprob: -4.005875587463379
    9. '(n' → logprob: -4.005875587463379
    10. ' l' → logprob: -4.255875587463379

Token 57: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4319397807121277
    2. ' +' → logprob: -1.0569398403167725
    3. ' -' → logprob: -6.306939601898193
    4. '<|end|>' → logprob: -7.681939601898193
    5. ' *' → logprob: -8.181940078735352
    6. '-' → logprob: -8.431940078735352
    7. '*' → logprob: -8.806940078735352
    8. ' ' → logprob: -9.306940078735352
    9. '   ' → logprob: -10.681940078735352
    10. '+
' → logprob: -10.931940078735352

Token 58: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4690529406070709
    2. '(n' → logprob: -1.4690529108047485
    3. '(' → logprob: -2.719053030014038
    4. ' (' → logprob: -3.094053030014038
    5. '(k' → logprob: -4.094052791595459
    6. 'i' → logprob: -4.344052791595459
    7. 'k' → logprob: -6.969052791595459
    8. 'n' → logprob: -7.219052791595459
    9. ' i' → logprob: -7.594052791595459
    10. '(M' → logprob: -8.219053268432617

Token 59: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4891884922981262
    2. '(n' → logprob: -1.2391884326934814
    3. 'i' → logprob: -2.7391884326934814
    4. '2' → logprob: -4.4891886711120605
    5. '(i' → logprob: -4.8641886711120605
    6. '(' → logprob: -4.8641886711120605
    7. 'k' → logprob: -6.1141886711120605
    8. '   ' → logprob: -7.2391886711120605
    9. '(k' → logprob: -7.4891886711120605
    10. '1' → logprob: -7.6141886711120605

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39243578910827637
    2. ' +' → logprob: -1.1424357891082764
    3. ')' → logprob: -6.0174360275268555
    4. '   ' → logprob: -6.6424360275268555
    5. ' -' → logprob: -7.3924360275268555
    6. '-' → logprob: -7.7674360275268555
    7. '    ' → logprob: -8.767436027526855
    8. '1' → logprob: -8.767436027526855
    9. ' ' → logprob: -8.892436027526855
    10. '  ' → logprob: -9.517436027526855

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003577495808713138
    2. '   ' → logprob: -8.625357627868652
    3. ' ' → logprob: -8.750357627868652
    4. ')' → logprob: -11.500357627868652
    5. '  ' → logprob: -13.000357627868652
    6. '```' → logprob: -13.250357627868652
    7. '...' → logprob: -13.625357627868652
    8. '2' → logprob: -14.625357627868652
    9. '    ' → logprob: -14.687857627868652
    10. '7' → logprob: -14.750357627868652

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.875024795532227
    3. '   ' → logprob: -13.125024795532227
    4. '2' → logprob: -13.375024795532227
    5. '```' → logprob: -14.500024795532227
    6. ')' → logprob: -14.750024795532227
    7. '0' → logprob: -15.000024795532227
    8. '  ' → logprob: -15.000024795532227
    9. '<|end|>' → logprob: -16.437524795532227
    10. 'r' → logprob: -16.500024795532227

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13298399746418
    2. ')//' → logprob: -3.007983922958374
    3. '//' → logprob: -3.007983922958374
    4. ' )' → logprob: -4.132984161376953
    5. ' //' → logprob: -4.757984161376953
    6. '   ' → logprob: -7.507984161376953
    7. ' ' → logprob: -8.882984161376953
    8. '```' → logprob: -9.007984161376953
    9. '`)' → logprob: -9.757984161376953
    10. '    ' → logprob: -10.132984161376953

Token 64: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0490194670855999
    2. ' //' → logprob: -3.0490195751190186
    3. '```' → logprob: -8.549019813537598
    4. '   ' → logprob: -9.424019813537598
    5. '`' → logprob: -10.174019813537598
    6. ')' → logprob: -10.674019813537598
    7. ')//' → logprob: -10.799019813537598
    8. ' ' → logprob: -10.799019813537598
    9. '#' → logprob: -11.299019813537598
    10. '  ' → logprob: -11.799019813537598

Token 65: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011880126112373546
    2. ' ' → logprob: -9.12511920928955
    3. '   ' → logprob: -11.87511920928955
    4. '  ' → logprob: -14.00011920928955
    5. '    ' → logprob: -15.00011920928955
    6. '```' → logprob: -15.06261920928955
    7. '1' → logprob: -15.25011920928955
    8. '       ' → logprob: -16.125118255615234
    9. '<|end|>' → logprob: -16.187618255615234
    10. '           ' → logprob: -16.375118255615234

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '```' → logprob: -16.000022888183594
    5. '  ' → logprob: -16.125022888183594
    6. '<|end|>' → logprob: -16.125022888183594
    7. '1' → logprob: -16.562522888183594
    8. '۲' → logprob: -17.062522888183594
    9. ')' → logprob: -17.437522888183594
    10. '    ' → logprob: -18.375022888183594

Token 67: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5112757682800293
    2. 'l' → logprob: -1.1362757682800293
    3. ' (' → logprob: -2.8862757682800293
    4. '((' → logprob: -5.261275768280029
    5. '(' → logprob: -5.511275768280029
    6. '(i' → logprob: -6.011275768280029
    7. '(l' → logprob: -6.136275768280029
    8. 'n' → logprob: -6.136275768280029
    9. ' l' → logprob: -6.261275768280029
    10. ' ' → logprob: -6.261275768280029

Token 69: 'n' (ID: 77)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.032287199050188065
    2. '   ' → logprob: -4.907287120819092
    3. '(n' → logprob: -5.282287120819092
    4. 'i' → logprob: -5.532287120819092
    5. '(l' → logprob: -5.532287120819092
    6. '(i' → logprob: -5.782287120819092
    7. ' (' → logprob: -6.032287120819092
    8. 'n' → logprob: -6.157287120819092
    9. ' l' → logprob: -6.157287120819092
    10. ' ' → logprob: -7.032287120819092

Token 70: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5920686721801758
    2. ' -' → logprob: -0.8420686721801758
    3. '+' → logprob: -4.717068672180176
    4. '-i' → logprob: -5.217068672180176
    5. ' ' → logprob: -7.592068672180176
    6. ' +' → logprob: -7.967068672180176
    7. '   ' → logprob: -8.467068672180176
    8. '-r' → logprob: -8.967068672180176
    9. '-l' → logprob: -9.467068672180176
    10. '  ' → logprob: -9.967068672180176

Token 71: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055128928273916245
    2. ' i' → logprob: -3.180128812789917
    3. ' (' → logprob: -4.930129051208496
    4. '(i' → logprob: -5.680129051208496
    5. '(' → logprob: -7.430129051208496
    6. '   ' → logprob: -7.805129051208496
    7. ' ' → logprob: -8.430129051208496
    8. '	i' → logprob: -9.930129051208496
    9. 'k' → logprob: -10.305129051208496
    10. '-i' → logprob: -10.430129051208496

Token 72: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4847044050693512
    2. ')' → logprob: -1.4847043752670288
    3. ' +' → logprob: -1.8597043752670288
    4. ' )' → logprob: -7.234704494476318
    5. ')(' → logprob: -8.60970401763916
    6. '+)' → logprob: -8.73470401763916
    7. '   ' → logprob: -8.98470401763916
    8. ' ' → logprob: -9.60970401763916
    9. '```' → logprob: -9.73470401763916
    10. '`)' → logprob: -9.73470401763916

Token 73: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10263917595148087
    2. ' *' → logprob: -2.4776391983032227
    3. '*(' → logprob: -4.352639198303223
    4. '(' → logprob: -8.477639198303223
    5. '+' → logprob: -8.602639198303223
    6. '   ' → logprob: -9.727639198303223
    7. '**' → logprob: -10.102639198303223
    8. ' ' → logprob: -10.102639198303223
    9. ')' → logprob: -10.227639198303223
    10. '```' → logprob: -10.915139198303223

Token 74: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3157733082771301
    2. ' (' → logprob: -1.4407732486724854
    3. '((' → logprob: -3.9407732486724854
    4. '(' → logprob: -4.4407734870910645
    5. ' ((' → logprob: -6.3157734870910645
    6. '(i' → logprob: -7.1907734870910645
    7. ' ' → logprob: -8.940773010253906
    8. '(N' → logprob: -10.065773010253906
    9. '  ' → logprob: -10.440773010253906
    10. '   ' → logprob: -11.065773010253906

Token 75: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.27977466583251953
    2. 'n' → logprob: -2.1547746658325195
    3. '(' → logprob: -3.1547746658325195
    4. ' (' → logprob: -3.2797746658325195
    5. 'i' → logprob: -3.7797746658325195
    6. '((' → logprob: -4.7797746658325195
    7. '(i' → logprob: -5.1547746658325195
    8. ' n' → logprob: -5.5297746658325195
    9. ' ' → logprob: -5.6547746658325195
    10. '   ' → logprob: -7.2797746658325195

Token 76: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2166387438774109
    2. '-' → logprob: -2.0916388034820557
    3. '+' → logprob: -2.8416388034820557
    4. ' +' → logprob: -4.716638565063477
    5. '<|end|>' → logprob: -5.841638565063477
    6. '-i' → logprob: -7.716638565063477
    7. ' ' → logprob: -8.216638565063477
    8. '<|end|>' → logprob: -8.341638565063477
    9. '  ' → logprob: -10.341638565063477
    10. '-n' → logprob: -10.779138565063477

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10530135035514832
    2. ' i' → logprob: -2.3553013801574707
    3. '+' → logprob: -6.980301380157471
    4. '(i' → logprob: -7.105301380157471
    5. ' ' → logprob: -7.980301380157471
    6. ' (' → logprob: -7.980301380157471
    7. '1' → logprob: -8.105300903320312
    8. '<|end|>' → logprob: -8.105300903320312
    9. '<|end|>' → logprob: -8.355300903320312
    10. ')' → logprob: -8.355300903320312

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004747198894619942
    2. ' +' → logprob: -5.62974739074707
    3. '1' → logprob: -7.00474739074707
    4. ')' → logprob: -9.00474739074707
    5. '+)' → logprob: -10.25474739074707
    6. '   ' → logprob: -10.50474739074707
    7. '-' → logprob: -10.75474739074707
    8. ' ' → logprob: -11.25474739074707
    9. '```' → logprob: -12.50474739074707
    10. '++' → logprob: -13.00474739074707

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001207495923154056
    2. ')' → logprob: -7.25120735168457
    3. ' ' → logprob: -7.75120735168457
    4. '   ' → logprob: -10.50120735168457
    5. '```' → logprob: -11.37620735168457
    6. '<|end|>' → logprob: -11.62620735168457
    7. '2' → logprob: -12.12620735168457
    8. ' )' → logprob: -12.37620735168457
    9. '  ' → logprob: -12.62620735168457
    10. '3' → logprob: -13.62620735168457

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.963691804325208e-05
    2. '2' → logprob: -10.750029563903809
    3. '```' → logprob: -12.625029563903809
    4. ')' → logprob: -13.625029563903809
    5. ' ' → logprob: -13.875029563903809
    6. '   ' → logprob: -13.875029563903809
    7. '3' → logprob: -15.125029563903809
    8. '  ' → logprob: -15.875029563903809
    9. '7' → logprob: -15.937529563903809
    10. '<|end|>' → logprob: -16.375030517578125

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08906040340662003
    2. ')//' → logprob: -2.5890603065490723
    3. '//' → logprob: -4.714060306549072
    4. ' )' → logprob: -7.464060306549072
    5. ' //' → logprob: -8.21406078338623
    6. '```' → logprob: -8.96406078338623
    7. '   ' → logprob: -9.33906078338623
    8. '`' → logprob: -11.21406078338623
    9. '`)' → logprob: -11.21406078338623
    10. ' ' → logprob: -11.71406078338623

Token 82: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.9938725829124451
    2. ' ' → logprob: -1.4938726425170898
    3. '<|end|>' → logprob: -2.11887264251709
    4. ' +' → logprob: -2.11887264251709
    5. '//' → logprob: -2.74387264251709
    6. '   ' → logprob: -3.61887264251709
    7. '```' → logprob: -3.74387264251709
    8. '+' → logprob: -4.11887264251709
    9. ')' → logprob: -4.74387264251709
    10. '**' → logprob: -5.36887264251709

Token 83: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001513312105089426
    2. ' ' → logprob: -6.501513481140137
    3. '```' → logprob: -12.501513481140137
    4. '   ' → logprob: -12.626513481140137
    5. '<|end|>' → logprob: -13.814013481140137
    6. '  ' → logprob: -14.189013481140137
    7. '1' → logprob: -14.876513481140137
    8. '۲' → logprob: -15.189013481140137
    9. ')' → logprob: -15.501513481140137
    10. '    ' → logprob: -15.564013481140137

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -11.625014305114746
    3. '```' → logprob: -13.687514305114746
    4. '   ' → logprob: -14.125014305114746
    5. '1' → logprob: -14.125014305114746
    6. ')' → logprob: -15.000014305114746
    7. '۲' → logprob: -15.312514305114746
    8. '{' → logprob: -15.750014305114746
    9. '  ' → logprob: -15.875014305114746
    10. '}' → logprob: -15.937514305114746

Token 85: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2600725889205933
    2. '
' → logprob: -1.6350725889205933
    3. ' 
' → logprob: -2.135072708129883
    4. '<|end|>' → logprob: -2.135072708129883
    5. '\' → logprob: -2.635072708129883
    6. '```' → logprob: -3.635072708129883
    7. ' ' → logprob: -3.760072708129883
    8. ':' → logprob: -3.760072708129883
    9. '+' → logprob: -3.760072708129883
    10. '   ' → logprob: -3.885072708129883

Token 86: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012061596848070621
    2. '   ' → logprob: -5.637061595916748
    3. ':
' → logprob: -5.762061595916748
    4. '<|end|>' → logprob: -6.637061595916748
    5. ',' → logprob: -6.887061595916748
    6. ' :' → logprob: -7.387061595916748
    7. '
' → logprob: -8.012062072753906
    8. ' ' → logprob: -8.137062072753906
    9. '```' → logprob: -8.262062072753906
    10. '+' → logprob: -8.387062072753906

Token 87: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8088070154190063
    2. '   ' → logprob: -0.9338070154190063
    3. 'a' (adapté à ' a') → logprob: -2.308806896209717
    4. '<|end|>' → logprob: -3.808806896209717
    5. '    ' → logprob: -4.558806896209717
    6. '[' → logprob: -5.683806896209717
    7. ')' → logprob: -5.683806896209717
    8. ' a' → logprob: -5.933806896209717
    9. '  ' → logprob: -5.933806896209717
    10. ' 
' → logprob: -6.058806896209717

Token 88: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.032746925950050354
    2. '+=' → logprob: -3.6577470302581787
    3. ' =' → logprob: -5.4077467918396
    4. '+' → logprob: -6.7827467918396
    5. '=' → logprob: -7.9077467918396
    6. ' ' → logprob: -8.282747268676758
    7. ' +' → logprob: -9.032747268676758
    8. ' ^=' → logprob: -10.907747268676758
    9. ' -=' → logprob: -11.282747268676758
    10. ' %=' → logprob: -11.907747268676758

Token 89: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4889186918735504
    2. '(a' → logprob: -0.988918662071228
    3. '(' → logprob: -4.238918781280518
    4. '(f' → logprob: -10.11391830444336
    5. '(A' → logprob: -10.11391830444336
    6. 'a' → logprob: -10.48891830444336
    7. ' \(' → logprob: -10.98891830444336
    8. ' ' → logprob: -11.11391830444336
    9. '(max' → logprob: -11.11391830444336
    10. '(int' → logprob: -11.36391830444336

Token 90: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0027915649116039276
    2. ' a' → logprob: -6.002791404724121
    3. '(a' → logprob: -8.252791404724121
    4. '   ' → logprob: -10.877791404724121
    5. 'r' → logprob: -11.127791404724121
    6. '	a' → logprob: -12.502791404724121
    7. ' (' → logprob: -12.502791404724121
    8. '(r' → logprob: -13.377791404724121
    9. ' ' → logprob: -13.502791404724121
    10. 'i' → logprob: -13.502791404724121

Token 91: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890664041042328
    2. '+' → logprob: -2.578906536102295
    3. ' plus' → logprob: -12.328907012939453
    4. ' ' → logprob: -12.453907012939453
    5. '+r' → logprob: -12.703907012939453
    6. ' ' → logprob: -12.953907012939453
    7. ')' → logprob: -14.828907012939453
    8. '+k' → logprob: -15.328907012939453
    9. '+a' → logprob: -15.453907012939453
    10. '+i' → logprob: -15.453907012939453

Token 92: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.49615442752838135
    2. 'r' → logprob: -2.246154308319092
    3. ' (' → logprob: -2.496154308319092
    4. ' pow' → logprob: -2.496154308319092
    5. 'pow' → logprob: -3.246154308319092
    6. ' n' → logprob: -3.371154308319092
    7. ' ' → logprob: -4.246154308319092
    8. ' i' → logprob: -5.121154308319092
    9. '1' → logprob: -5.121154308319092
    10. 'n' → logprob: -5.371154308319092

Token 93: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3879310190677643
    2. '-' → logprob: -1.137930989265442
    3. ')' → logprob: -7.012930870056152
    4. ' ' → logprob: -9.887930870056152
    5. '   ' → logprob: -10.137930870056152
    6. '<|end|>' → logprob: -11.387930870056152
    7. '+' → logprob: -11.637930870056152
    8. '    ' → logprob: -12.137930870056152
    9. '  ' → logprob: -12.137930870056152
    10. '-l' → logprob: -12.262930870056152

Token 94: ' ' (ID: 220)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.46456608176231384
    2. '-' → logprob: -1.9645661115646362
    3. '-l' → logprob: -2.8395659923553467
    4. ' ' → logprob: -2.9645659923553467
    5. '1' → logprob: -3.3395659923553467
    6. 'l' → logprob: -3.3395659923553467
    7. ')' → logprob: -3.3395659923553467
    8. ' l' → logprob: -4.464566230773926
    9. 'r' → logprob: -7.339566230773926
    10. '  ' → logprob: -7.964566230773926

Token 95: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8225415349006653
    2. ' -' → logprob: -1.4475414752960205
    3. ' ' → logprob: -2.4475414752960205
    4. '1' → logprob: -2.5725414752960205
    5. ' l' → logprob: -2.8225414752960205
    6. '-l' → logprob: -3.1975414752960205
    7. ')' → logprob: -3.6975414752960205
    8. '-' → logprob: -3.8225414752960205
    9. ' M' → logprob: -5.4475417137146
    10. 'r' → logprob: -5.4475417137146

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12793003022670746
    2. '-' → logprob: -2.127929925918579
    3. ')' → logprob: -7.252930164337158
    4. '   ' → logprob: -8.5029296875
    5. '-l' → logprob: -10.6279296875
    6. ' ' → logprob: -10.8779296875
    7. '  ' → logprob: -10.8779296875
    8. '-i' → logprob: -11.6279296875
    9. '-r' → logprob: -12.5029296875
    10. '    ' → logprob: -12.5029296875

Token 97: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17993324995040894
    2. ' l' → logprob: -1.8049333095550537
    3. '	l' → logprob: -8.804933547973633
    4. ' ' → logprob: -11.179933547973633
    5. '   ' → logprob: -11.804933547973633
    6. '<|end|>' → logprob: -12.179933547973633
    7. '_l' → logprob: -12.679933547973633
    8. ')' → logprob: -13.304933547973633
    9. '    ' → logprob: -13.429933547973633
    10. '-l' → logprob: -14.304933547973633

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004627241287380457
    2. ' )' → logprob: -5.629627227783203
    3. ')%' → logprob: -7.254627227783203
    4. '   ' → logprob: -8.254627227783203
    5. '%' → logprob: -10.754627227783203
    6. ' %' → logprob: -11.629627227783203
    7. ' ' → logprob: -12.379627227783203
    8. ')
' → logprob: -12.629627227783203
    9. '+' → logprob: -12.629627227783203
    10. '```' → logprob: -12.879627227783203

Token 99: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08504665642976761
    2. '%' → logprob: -2.5850467681884766
    3. ')' → logprob: -5.710046768188477
    4. ' *' → logprob: -6.460046768188477
    5. '%i' → logprob: -7.835046768188477
    6. '
' → logprob: -8.335046768188477
    7. '   ' → logprob: -8.960046768188477
    8. ' ' → logprob: -9.210046768188477
    9. '*' → logprob: -9.460046768188477
    10. ')%' → logprob: -9.960046768188477

Token 100: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10020732134580612
    2. ' M' → logprob: -2.3502073287963867
    3. '(M' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.975207328796387
    5. '10' → logprob: -16.35020637512207
    6. '(' → logprob: -18.10020637512207
    7. ' (' → logprob: -18.85020637512207
    8. '```' → logprob: -18.85020637512207
    9. '\M' → logprob: -19.60020637512207
    10. '	M' → logprob: -20.10020637512207

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12800554931163788
    2. '
' → logprob: -2.8780055046081543
    3. '    
' → logprob: -3.8780055046081543
    4. '<|end|>' → logprob: -4.378005504608154
    5. ' i' → logprob: -4.753005504608154
    6. '  
' → logprob: -5.378005504608154
    7. ' 
' → logprob: -5.753005504608154
    8. 'i' → logprob: -5.753005504608154
    9. '\n' → logprob: -6.378005504608154
    10. '  ' → logprob: -6.378005504608154

Token 102: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7487097978591919
    2. ' i' → logprob: -1.248709797859192
    3. '   ' → logprob: -2.8737096786499023
    4. ' 
' → logprob: -2.8737096786499023
    5. '```' → logprob: -2.8737096786499023
    6. '
' → logprob: -3.7487096786499023
    7. ' ' → logprob: -4.123709678649902
    8. '    
' → logprob: -4.498709678649902
    9. '\n' → logprob: -4.748709678649902
    10. '  
' → logprob: -5.623709678649902

Token 103: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.010046109557151794
    2. '   ' → logprob: -4.635046005249023
    3. ' i' → logprob: -8.260046005249023
    4. '```' → logprob: -11.135046005249023
    5. '	i' → logprob: -12.010046005249023
    6. '  ' → logprob: -12.135046005249023
    7. '    
' → logprob: -13.385046005249023
    8. '
' → logprob: -13.885046005249023
    9. ' ' → logprob: -14.010046005249023
    10. '``' → logprob: -14.135046005249023

Token 104: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03090132586658001
    2. ' +=' → logprob: -3.6559014320373535
    3. '+' → logprob: -5.4059014320373535
    4. '=' → logprob: -9.530900955200195
    5. ' ' → logprob: -11.030900955200195
    6. '+="' → logprob: -13.030900955200195
    7. '+='' → logprob: -13.030900955200195
    8. ' +' → logprob: -13.155900955200195
    9. '++' → logprob: -13.405900955200195
    10. '```' → logprob: -13.655900955200195

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.875019073486328
    4. '```' → logprob: -17.250019073486328
    5. '2' → logprob: -17.625019073486328
    6. 'k' → logprob: -18.750019073486328
    7. '  ' → logprob: -19.375019073486328
    8. '１' → logprob: -20.000019073486328
    9. '4' → logprob: -20.062519073486328
    10. '7' → logprob: -20.125019073486328

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -14.625003814697266
    4. '```' → logprob: -16.625003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '3' → logprob: -17.812503814697266
    7. 'k' → logprob: -17.937503814697266
    8. '  ' → logprob: -18.062503814697266
    9. '7' → logprob: -18.312503814697266
    10. '4' → logprob: -18.437503814697266

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03811240941286087
    2. '(' → logprob: -3.2881124019622803
    3. 'a' → logprob: -9.91311264038086
    4. '()' → logprob: -10.91311264038086
    5. '(
' → logprob: -13.41311264038086
    6. '('' → logprob: -14.78811264038086
    7. '((' → logprob: -15.03811264038086
    8. '(A' → logprob: -15.28811264038086
    9. ' (' → logprob: -15.91311264038086
    10. '(i' → logprob: -15.91311264038086

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '`)' → logprob: -13.875001907348633
    3. ')`' → logprob: -15.250001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '))' → logprob: -15.500001907348633
    6. '**' → logprob: -16.500001907348633
    7. '```' → logprob: -16.750001907348633
    8. '')' → logprob: -17.125001907348633
    9. ')
' → logprob: -17.125001907348633
    10. ')**' → logprob: -17.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 31.48%
Précision adaptée (1ère position): 32.41%
Précision (top 10): 86.11%
================================================================================
