================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W, A, B = [int(x) for x in input().split()]

def gen_row(flag, n1, n2):
    return ''.join((flag,) * n1 + (str((int(flag)+1)%2),) * n2)

i = 0
while i < B:
    arr = []
    for _ in range(A):
        arr.append("0")
    arr.extend(["1"] * (W - A))
    print("".join(arr))
    i += 1

for x in range(H - B):
    s = ""
    count = 0
    while count < A:
        s += '1'
        count += 1
    for _ in range(W - A):
        s += '0'
    print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49224963784217834
    2. ',' → logprob: -0.992249608039856
    3. ' =' → logprob: -5.117249488830566
    4. '*' → logprob: -5.367249488830566
    5. '```' → logprob: -6.242249488830566
    6. ':' → logprob: -6.492249488830566
    7. ')' → logprob: -6.992249488830566
    8. '#' → logprob: -7.367249488830566
    9. '`' → logprob: -7.742249488830566
    10. '.' → logprob: -8.242249488830566

Token 4: ' A' (ID: 355)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08595894277095795
    2. ',' → logprob: -3.210958957672119
    3. ' =' → logprob: -3.210958957672119
    4. ')' → logprob: -7.085958957672119
    5. '*' → logprob: -7.585958957672119
    6. ':' → logprob: -8.960958480834961
    7. '.' → logprob: -10.335958480834961
    8. '```' → logprob: -10.585958480834961
    9. ' ' → logprob: -10.835958480834961
    10. '=
' → logprob: -10.960958480834961

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17598819732666016
    2. ',' → logprob: -2.17598819732666
    3. ' =' → logprob: -3.30098819732666
    4. ';' → logprob: -5.80098819732666
    5. ')' → logprob: -6.17598819732666
    6. '[' → logprob: -6.92598819732666
    7. ' ' → logprob: -6.92598819732666
    8. '```' → logprob: -7.05098819732666
    9. '.' → logprob: -7.17598819732666
    10. ':' → logprob: -7.30098819732666

Token 6: ' B' (ID: 418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21106785535812378
    2. ',' → logprob: -2.2110679149627686
    3. ' =' → logprob: -2.5860679149627686
    4. ')' → logprob: -5.8360676765441895
    5. ';' → logprob: -7.2110676765441895
    6. ':' → logprob: -7.8360676765441895
    7. ' ' → logprob: -8.086068153381348
    8. '.' → logprob: -8.086068153381348
    9. '_' → logprob: -8.586068153381348
    10. '[' → logprob: -9.836068153381348

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0171731598675251
    2. ',' → logprob: -4.5171732902526855
    3. ' =' → logprob: -5.8921732902526855
    4. ':' → logprob: -7.5171732902526855
    5. '+' → logprob: -7.5171732902526855
    6. ')' → logprob: -7.7671732902526855
    7. '.' → logprob: -7.8921732902526855
    8. '[' → logprob: -8.142172813415527
    9. '```' → logprob: -8.267172813415527
    10. '#' → logprob: -8.642172813415527

Token 8: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2997654676437378
    2. '10' → logprob: -2.0497655868530273
    3. '0' → logprob: -3.4247655868530273
    4. '32' → logprob: -4.299765586853027
    5. ' map' → logprob: -4.299765586853027
    6. 'map' → logprob: -4.424765586853027
    7. 'input' → logprob: -4.674765586853027
    8. '5' → logprob: -4.924765586853027
    9. ' input' → logprob: -5.299765586853027
    10. '20' → logprob: -5.299765586853027

Token 9: 'int' (ID: 491)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.5115749835968018
    2. '0' → logprob: -1.7615749835968018
    3. '128' → logprob: -2.0115749835968018
    4. '64' → logprob: -2.0115749835968018
    5. 'int' → logprob: -2.5115749835968018
    6. '256' → logprob: -3.0115749835968018
    7. '1' → logprob: -3.1365749835968018
    8. '224' → logprob: -3.2615749835968018
    9. '16' → logprob: -3.3865749835968018
    10. '100' → logprob: -3.6365749835968018

Token 10: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08852069824934006
    2. '(i' → logprob: -2.8385207653045654
    3. ']' → logprob: -4.463520526885986
    4. '()]' → logprob: -5.338520526885986
    5. '(' → logprob: -5.463520526885986
    6. '(s' → logprob: -5.838520526885986
    7. '(input' → logprob: -6.588520526885986
    8. '(token' → logprob: -6.963520526885986
    9. '(item' → logprob: -8.588521003723145
    10. '(n' → logprob: -10.588521003723145

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006003346061334014
    2. '(token' → logprob: -9.00059986114502
    3. '(x' → logprob: -9.12559986114502
    4. '(i' → logprob: -9.87559986114502
    5. ')i' → logprob: -10.12559986114502
    6. ')]' → logprob: -10.50059986114502
    7. '(input' → logprob: -10.50059986114502
    8. 'token' → logprob: -10.62559986114502
    9. '(' → logprob: -10.75059986114502
    10. '(s' → logprob: -10.75059986114502

Token 12: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1375974416732788
    2. '(input' → logprob: -1.2625974416732788
    3. 'input' → logprob: -1.3875974416732788
    4. ' for' → logprob: -2.2625975608825684
    5. ']' → logprob: -4.512597560882568
    6. ')' → logprob: -4.762597560882568
    7. '(' → logprob: -5.012597560882568
    8. '(token' → logprob: -5.137597560882568
    9. '(x' → logprob: -5.637597560882568
    10. ' input' → logprob: -5.887597560882568

Token 13: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.48119330406188965
    2. 'input' → logprob: -0.9811933040618896
    3. '(input' → logprob: -4.981193542480469
    4. ' in' → logprob: -9.231193542480469
    5. '=input' → logprob: -9.606193542480469
    6. 'in' → logprob: -10.731193542480469
    7. '(' → logprob: -11.231193542480469
    8. 'range' → logprob: -11.981193542480469
    9. ',input' → logprob: -11.981193542480469
    10. ' range' → logprob: -13.106193542480469

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03454241529107094
    2. 'in' → logprob: -3.4095423221588135
    3. 'input' → logprob: -7.159542560577393
    4. ' input' → logprob: -9.409542083740234
    5. '<|end|>' → logprob: -11.034542083740234
    6. '=input' → logprob: -11.534542083740234
    7. '<|end|>' → logprob: -12.659542083740234
    8. ' ' → logprob: -13.409542083740234
    9. '(input' → logprob: -14.034542083740234
    10. '.' → logprob: -14.159542083740234

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868725895881653
    2. 'input' → logprob: -1.1368725299835205
    3. ' range' → logprob: -15.011872291564941
    4. 'range' → logprob: -15.136872291564941
    5. '(input' → logprob: -15.261872291564941
    6. ' ' → logprob: -15.386872291564941
    7. '```' → logprob: -15.761872291564941
    8. '<input' → logprob: -16.136873245239258
    9. '=input' → logprob: -16.636873245239258
    10. '	input' → logprob: -16.761873245239258

Token 16: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.21128298342227936
    2. '()' → logprob: -1.8362829685211182
    3. '().' → logprob: -3.586282968521118
    4. '()][' → logprob: -6.461283206939697
    5. '()].' → logprob: -7.211283206939697
    6. '())' → logprob: -7.461283206939697
    7. '()],' → logprob: -9.211282730102539
    8. '()>' → logprob: -9.711282730102539
    9. '(' → logprob: -10.211282730102539
    10. ']()' → logprob: -10.336282730102539

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001884015218820423
    2. 'strip' → logprob: -8.750188827514648
    3. 'rstrip' → logprob: -10.500188827514648
    4. ' split' → logprob: -13.125188827514648
    5. 'spl' → logprob: -15.125188827514648
    6. 'read' → logprob: -17.00018882751465
    7. '(split' → logprob: -17.25018882751465
    8. 's' → logprob: -18.37518882751465
    9. 'sp' → logprob: -19.25018882751465
    10. 'replace' → logprob: -19.25018882751465

Token 18: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00679967924952507
    2. '())' → logprob: -5.381799697875977
    3. '()' → logprob: -6.381799697875977
    4. '(' → logprob: -7.756799697875977
    5. '('' → logprob: -11.006799697875977
    6. '()][' → logprob: -11.131799697875977
    7. ')]' → logprob: -11.506799697875977
    8. '()],' → logprob: -12.256799697875977
    9. ']' → logprob: -13.006799697875977
    10. '()].' → logprob: -13.506799697875977

Token 19: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.31936633586883545
    2. ']' → logprob: -1.3193663358688354
    3. '])' → logprob: -5.569366455078125
    4. ')' → logprob: -6.194366455078125
    5. ')])' → logprob: -9.069366455078125
    6. '`]' → logprob: -9.944366455078125
    7. '])]' → logprob: -10.569366455078125
    8. '()]' → logprob: -10.694366455078125
    9. ')],' → logprob: -12.444366455078125
    10. '')]' → logprob: -12.819366455078125

Token 20: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5733331441879272
    2. '#' → logprob: -1.9483331441879272
    3. 'i' → logprob: -2.073333263397217
    4. 'if' → logprob: -2.323333263397217
    5. 'x' → logprob: -3.198333263397217
    6. ':' → logprob: -3.198333263397217
    7. '
' → logprob: -3.323333263397217
    8. 'c' → logprob: -3.573333263397217
    9. '+' → logprob: -3.698333263397217
    10. ' ' → logprob: -3.823333263397217

Token 21: ' gen' (ID: 3645)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.7900545597076416
    2. ' f' → logprob: -1.9150545597076416
    3. ' main' → logprob: -2.0400545597076416
    4. ' solution' → logprob: -2.1650545597076416
    5. ' dfs' → logprob: -2.5400545597076416
    6. ' space' → logprob: -2.6650545597076416
    7. ' ' → logprob: -2.7900545597076416
    8. ' process' → logprob: -2.9150545597076416
    9. ' calculate' → logprob: -3.1650545597076416
    10. ' my' → logprob: -3.1650545597076416

Token 22: '_row' (ID: 19157)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0038414057344198227
    2. '_' → logprob: -6.378841400146484
    3. 'ERATOR' → logprob: -7.628841400146484
    4. 'eral' → logprob: -7.753841400146484
    5. 'expr' → logprob: -8.378841400146484
    6. '():' → logprob: -8.503841400146484
    7. 'erat' → logprob: -8.628841400146484
    8. '()' → logprob: -9.128841400146484
    9. 'exp' → logprob: -9.628841400146484
    10. 'r' → logprob: -9.753841400146484

Token 23: '(flag' (ID: 69186)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07456353306770325
    2. 's' → logprob: -3.199563503265381
    3. '(i' → logprob: -4.824563503265381
    4. '(size' → logprob: -5.449563503265381
    5. '_' → logprob: -5.574563503265381
    6. '(row' → logprob: -5.824563503265381
    7. '(a' → logprob: -5.824563503265381
    8. '(n' → logprob: -6.449563503265381
    9. '(_' → logprob: -6.824563503265381
    10. '():' → logprob: -6.949563503265381

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048300597816705704
    2. ')' → logprob: -3.7983005046844482
    3. ',' → logprob: -4.548300743103027
    4. '=' → logprob: -5.173300743103027
    5. '_' → logprob: -5.798300743103027
    6. '(' → logprob: -5.923300743103027
    7. '(flag' → logprob: -6.798300743103027
    8. ':' → logprob: -7.798300743103027
    9. 's' → logprob: -8.173300743103027
    10. '():' → logprob: -8.298300743103027

Token 25: ' n' (ID: 297)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.4333555698394775
    2. ' A' → logprob: -2.5583555698394775
    3. ' W' → logprob: -2.8083555698394775
    4. ' width' → logprob: -2.9333555698394775
    5. ' n' → logprob: -3.0583555698394775
    6. ' i' → logprob: -3.0583555698394775
    7. ' H' → logprob: -3.0583555698394775
    8. ' row' → logprob: -3.5583555698394775
    9. ' w' → logprob: -3.6833555698394775
    10. ' idx' → logprob: -3.8083555698394775

Token 26: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003161795437335968
    2. ')' → logprob: -6.503161907196045
    3. ',' → logprob: -6.753161907196045
    4. '):
' → logprob: -8.253161430358887
    5. '=' → logprob: -9.003161430358887
    6. ' ):' → logprob: -10.253161430358887
    7. ':' → logprob: -11.003161430358887
    8. 't' → logprob: -11.753161430358887
    9. '):

' → logprob: -11.878161430358887
    10. 'a' → logprob: -11.878161430358887

Token 27: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18429863452911377
    2. ',' → logprob: -1.9342986345291138
    3. ')' → logprob: -3.809298515319824
    4. '):
' → logprob: -7.184298515319824
    5. '1' → logprob: -8.684298515319824
    6. 'a' → logprob: -8.684298515319824
    7. '):

' → logprob: -9.184298515319824
    8. '=' → logprob: -9.559298515319824
    9. 'e' → logprob: -9.809298515319824
    10. ' ):' → logprob: -9.934298515319824

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4307774305343628
    2. 'n' → logprob: -1.0557774305343628
    3. ' ' → logprob: -6.805777549743652
    4. 'w' → logprob: -9.055777549743652
    5. '_' → logprob: -9.430777549743652
    6. ' w' → logprob: -9.555777549743652
    7. ')' → logprob: -9.868277549743652
    8. 'm' → logprob: -9.930777549743652
    9. 'a' → logprob: -9.930777549743652
    10. ' m' → logprob: -10.180777549743652

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2870718836784363
    2. '1' → logprob: -1.412071943283081
    3. ')' → logprob: -5.287071704864502
    4. ',' → logprob: -8.03707218170166
    5. '):' → logprob: -9.41207218170166
    6. 'n' → logprob: -9.66207218170166
    7. '_' → logprob: -9.91207218170166
    8. 'um' → logprob: -10.16207218170166
    9. 'e' → logprob: -10.41207218170166
    10. ')**' → logprob: -10.41207218170166

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020833812654018402
    2. ',' → logprob: -3.895833730697632
    3. ')' → logprob: -8.395833969116211
    4. ':' → logprob: -10.395833969116211
    5. ' ):' → logprob: -10.895833969116211
    6. '=' → logprob: -11.645833969116211
    7. '):
' → logprob: -13.395833969116211
    8. ' ,' → logprob: -13.770833969116211
    9. ',n' → logprob: -13.895833969116211
    10. ']:' → logprob: -14.020833969116211

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005840110243298113
    2. ':
' → logprob: -8.75058364868164
    3. '):' → logprob: -8.87558364868164
    4. '():' → logprob: -8.87558364868164
    5. '   ' → logprob: -10.00058364868164
    6. ',' → logprob: -10.12558364868164
    7. ':return' → logprob: -10.25058364868164
    8. ' :' → logprob: -11.50058364868164
    9. '```' → logprob: -13.00058364868164
    10. '):
' → logprob: -13.12558364868164

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21375112235546112
    2. ' ' → logprob: -2.9637510776519775
    3. ' if' → logprob: -3.0887510776519775
    4. '    ' → logprob: -3.4637510776519775
    5. ':' → logprob: -3.7137510776519775
    6. ' :' → logprob: -5.088751316070557
    7. 'if' → logprob: -5.463751316070557
    8. ' return' → logprob: -5.713751316070557
    9. ' i' → logprob: -5.838751316070557
    10. ' \' → logprob: -6.338751316070557

Token 33: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9178875684738159
    2. ''' → logprob: -1.792887568473816
    3. ' '' → logprob: -2.1678876876831055
    4. ' (' → logprob: -2.7928876876831055
    5. ' "' → logprob: -2.7928876876831055
    6. '(' → logprob: -3.5428876876831055
    7. '('' → logprob: -3.6678876876831055
    8. '(n' → logprob: -4.0428876876831055
    9. ' ('' → logprob: -4.2928876876831055
    10. ' '#'' → logprob: -4.4178876876831055

Token 34: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00014370749704539776
    2. 'j' → logprob: -9.750144004821777
    3. 'repeat' → logprob: -10.500144004821777
    4. 'replace' → logprob: -11.375144004821777
    5. 'format' → logprob: -12.000144004821777
    6. 'l' → logprob: -12.000144004821777
    7. 'count' → logprob: -12.375144004821777
    8. ' join' → logprob: -12.500144004821777
    9. 'expand' → logprob: -12.500144004821777
    10. 'jo' → logprob: -12.500144004821777

Token 35: '((' (ID: 2054)
  Prédit: '([''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(['' → logprob: -0.18319447338581085
    2. '('#' → logprob: -2.183194398880005
    3. '(' → logprob: -3.808194398880005
    4. '([' → logprob: -3.933194398880005
    5. '('' → logprob: -5.183194637298584
    6. '('*' → logprob: -6.433194637298584
    7. '((' → logprob: -6.558194637298584
    8. '(["' → logprob: -7.058194637298584
    9. '(('' → logprob: -7.183194637298584
    10. '("#' → logprob: -7.308194637298584

Token 36: 'flag' (ID: 17665)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.3901025950908661
    2. '('#' → logprob: -2.3901026248931885
    3. ''' → logprob: -2.7651026248931885
    4. '['' → logprob: -3.1401026248931885
    5. 'str' → logprob: -3.2651026248931885
    6. ''A' → logprob: -3.7651026248931885
    7. '('' → logprob: -3.7651026248931885
    8. ''*' → logprob: -4.390102386474609
    9. '"#' → logprob: -5.390102386474609
    10. ''a' → logprob: -6.140102386474609

Token 37: ',)' (ID: 83132)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9257715344429016
    2. '*' → logprob: -1.5507714748382568
    3. ' and' → logprob: -2.175771474838257
    4. '*n' → logprob: -2.800771474838257
    5. '+' → logprob: -3.550771474838257
    6. ')' → logprob: -3.550771474838257
    7. ' +' → logprob: -3.675771474838257
    8. '1' → logprob: -3.800771474838257
    9. ' ==' → logprob: -4.175771713256836
    10. 'and' → logprob: -4.175771713256836

Token 38: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9695687294006348
    2. '*' → logprob: -2.4695687294006348
    3. ')*' → logprob: -2.4695687294006348
    4. ' str' → logprob: -2.5945687294006348
    5. '*n' → logprob: -2.7195687294006348
    6. 'str' → logprob: -2.8445687294006348
    7. ' *' → logprob: -2.9695687294006348
    8. 'n' → logprob: -2.9695687294006348
    9. '[n' → logprob: -3.2195687294006348
    10. '[' → logprob: -3.5945687294006348

Token 39: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0791083350777626
    2. ' n' → logprob: -2.579108238220215
    3. 'H' → logprob: -9.204108238220215
    4. '(n' → logprob: -10.079108238220215
    5. 'A' → logprob: -10.829108238220215
    6. ' H' → logprob: -11.329108238220215
    7. ' ' → logprob: -11.454108238220215
    8. ' (' → logprob: -11.704108238220215
    9. 'W' → logprob: -12.204108238220215
    10. '<|end|>' → logprob: -12.204108238220215

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. '2' → logprob: -9.250096321105957
    3. '```' → logprob: -15.937596321105957
    4. '１' → logprob: -16.437597274780273
    5. '۱' → logprob: -16.875097274780273
    6. ')' → logprob: -17.000097274780273
    7. '१' → logprob: -17.812597274780273
    8. '১' → logprob: -17.937597274780273
    9. '_' → logprob: -18.375097274780273
    10. ' ' → logprob: -18.500097274780273

Token 41: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.15046191215515137
    2. '+' → logprob: -2.4004619121551514
    3. ')' → logprob: -3.1504619121551514
    4. '<|end|>' → logprob: -5.9004621505737305
    5. ',' → logprob: -6.9004621505737305
    6. ' )' → logprob: -7.4004621505737305
    7. ' +
' → logprob: -8.02546215057373
    8. ' n' → logprob: -8.15046215057373
    9. '+n' → logprob: -8.27546215057373
    10. ' ' → logprob: -8.65046215057373

Token 42: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2858611345291138
    2. '('#' → logprob: -1.2858611345291138
    3. '('' → logprob: -1.4108611345291138
    4. '(' → logprob: -2.910861015319824
    5. '('*' → logprob: -3.160861015319824
    6. '('_' → logprob: -3.410861015319824
    7. '('.' → logprob: -3.910861015319824
    8. '('.',' → logprob: -4.285861015319824
    9. '('-' → logprob: -5.035861015319824
    10. '(B' → logprob: -5.035861015319824

Token 43: 'str' (ID: 689)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.4831616282463074
    2. ''' → logprob: -2.233161687850952
    3. ''*' → logprob: -2.233161687850952
    4. ''#' → logprob: -3.108161687850952
    5. ''-' → logprob: -3.358161687850952
    6. 'str' → logprob: -4.108161449432373
    7. 'n' → logprob: -4.608161449432373
    8. '('.')' → logprob: -4.858161449432373
    9. ''A' → logprob: -5.108161449432373
    10. '('' → logprob: -5.358161449432373

Token 44: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9539386034011841
    2. '(flag' → logprob: -1.078938603401184
    3. '(' → logprob: -1.328938603401184
    4. '(A' → logprob: -5.4539384841918945
    5. '1' → logprob: -6.5789384841918945
    6. '('' → logprob: -7.0789384841918945
    7. ')' → logprob: -7.2039384841918945
    8. '(a' → logprob: -7.3289384841918945
    9. '((' → logprob: -7.7039384841918945
    10. '(B' → logprob: -7.7039384841918945

Token 45: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49558839201927185
    2. 'flag' → logprob: -1.4955884218215942
    3. 'int' → logprob: -2.7455883026123047
    4. '(flag' → logprob: -3.4955883026123047
    5. '0' → logprob: -3.8705883026123047
    6. 'not' → logprob: -4.245588302612305
    7. '(' → logprob: -4.870588302612305
    8. '(not' → logprob: -4.870588302612305
    9. 'n' → logprob: -4.995588302612305
    10. '(int' → logprob: -5.745588302612305

Token 46: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.04535668343305588
    2. 'flag' → logprob: -3.1703567504882812
    3. '(not' → logprob: -6.295356750488281
    4. 'not' → logprob: -8.670356750488281
    5. ' flag' → logprob: -9.045356750488281
    6. '
' → logprob: -9.420356750488281
    7. '(' → logprob: -9.920356750488281
    8. '1' → logprob: -10.545356750488281
    9. '   ' → logprob: -10.920356750488281
    10. '	flag' → logprob: -11.045356750488281

Token 47: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.5238462090492249
    2. ')' → logprob: -0.8988462090492249
    3. ')))' → logprob: -8.523846626281738
    4. ')^' → logprob: -8.898846626281738
    5. ')-' → logprob: -9.023846626281738
    6. '))' → logprob: -9.773846626281738
    7. '[' → logprob: -10.023846626281738
    8. ' )' → logprob: -10.273846626281738
    9. ')==' → logprob: -10.773846626281738
    10. '))+' → logprob: -11.023846626281738

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019752100110054016
    2. 'n' → logprob: -4.769752025604248
    3. ' ' → logprob: -5.019752025604248
    4. '0' → logprob: -6.019752025604248
    5. ' n' → logprob: -7.394752025604248
    6. 'flag' → logprob: -7.894752025604248
    7. 'not' → logprob: -8.394752502441406
    8. ')' → logprob: -8.769752502441406
    9. 'B' → logprob: -9.144752502441406
    10. '   ' → logprob: -9.394752502441406

Token 49: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02986919693648815
    2. ')%' → logprob: -3.6548690795898438
    3. '))' → logprob: -6.154869079589844
    4. ')))' → logprob: -7.154869079589844
    5. '%' → logprob: -8.029869079589844
    6. '),' → logprob: -8.279869079589844
    7. ')),' → logprob: -10.779869079589844
    8. ' )' → logprob: -10.779869079589844
    9. '))),' → logprob: -11.779869079589844
    10. ' %' → logprob: -12.404869079589844

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005960560403764248
    2. ' ' → logprob: -5.630960464477539
    3. '10' → logprob: -6.130960464477539
    4. ')' → logprob: -9.380960464477539
    5. '3' → logprob: -10.255960464477539
    6. '4' → logprob: -10.630960464477539
    7. '1' → logprob: -10.630960464477539
    8. '5' → logprob: -13.005960464477539
    9. '9' → logprob: -13.130960464477539
    10. '  ' → logprob: -13.255960464477539

Token 51: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.288075715303421
    2. '),' → logprob: -1.4130756855010986
    3. ',' → logprob: -5.163075923919678
    4. '))' → logprob: -7.538075923919678
    5. ' )' → logprob: -8.66307544708252
    6. ',)' → logprob: -8.78807544708252
    7. ' ),' → logprob: -9.28807544708252
    8. ')*' → logprob: -10.03807544708252
    9. '')' → logprob: -10.53807544708252
    10. ' ,' → logprob: -10.66307544708252

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002532021841034293
    2. ' )' → logprob: -6.377532005310059
    3. ')*' → logprob: -7.502532005310059
    4. ')n' → logprob: -8.502532005310059
    5. ' ' → logprob: -10.752532005310059
    6. '')' → logprob: -11.002532005310059
    7. ' '')' → logprob: -11.252532005310059
    8. ' n' → logprob: -12.127532005310059
    9. '))' → logprob: -12.752532005310059
    10. '*' → logprob: -13.252532005310059

Token 53: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11250384151935577
    2. '*' → logprob: -2.86250376701355
    3. '*n' → logprob: -3.61250376701355
    4. ' n' → logprob: -4.112504005432129
    5. 'n' → logprob: -5.987504005432129
    6. ' ' → logprob: -6.112504005432129
    7. ')' → logprob: -7.112504005432129
    8. '   ' → logprob: -9.112504005432129
    9. '(n' → logprob: -9.487504005432129
    10. '    ' → logprob: -9.737504005432129

Token 54: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008615754544734955
    2. ' n' → logprob: -4.758615970611572
    3. '<|end|>' → logprob: -14.258615493774414
    4. ')n' → logprob: -14.758615493774414
    5. '	n' → logprob: -15.883615493774414
    6. '(n' → logprob: -16.883615493774414
    7. ' ' → logprob: -17.383615493774414
    8. '_n' → logprob: -18.508615493774414
    9. '<|end|>' → logprob: -18.758615493774414
    10. '  ' → logprob: -18.883615493774414

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.50000286102295
    3. '۲' → logprob: -15.68750286102295
    4. 's' → logprob: -16.062503814697266
    5. '22' → logprob: -16.062503814697266
    6. '<|end|>' → logprob: -16.062503814697266
    7. '२' → logprob: -16.500003814697266
    8. '২' → logprob: -16.500003814697266
    9. '212' → logprob: -16.812503814697266
    10. '٢' → logprob: -16.875003814697266

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001422770437784493
    2. '))' → logprob: -8.875142097473145
    3. ')))' → logprob: -13.500142097473145
    4. ' )' → logprob: -14.500142097473145
    5. ')`' → logprob: -16.00014305114746
    6. '`)' → logprob: -16.12514305114746
    7. ')")' → logprob: -16.50014305114746
    8. ')
' → logprob: -16.75014305114746
    9. '')' → logprob: -17.00014305114746
    10. ')return' → logprob: -17.12514305114746

Token 57: 'i' (ID: 72)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7522000670433044
    2. '\n' → logprob: -1.0022001266479492
    3. '\' → logprob: -3.002200126647949
    4. ' 
' → logprob: -3.877200126647949
    5. '<|end|>' → logprob: -3.877200126647949
    6. 'def' → logprob: -4.252200126647949
    7. ' ' → logprob: -4.377200126647949
    8. '  
' → logprob: -4.502200126647949
    9. ')' → logprob: -5.252200126647949
    10. '' → logprob: -5.502200126647949

Token 58: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003039035713300109
    2. '=' → logprob: -6.2530388832092285
    3. 'n' → logprob: -7.6280388832092285
    4. 'm' → logprob: -8.003039360046387
    5. ' =' → logprob: -8.628039360046387
    6. 't' → logprob: -10.628039360046387
    7. 'for' → logprob: -10.753039360046387
    8. '```' → logprob: -11.753039360046387
    9. 'nt' → logprob: -12.128039360046387
    10. '_' → logprob: -12.253039360046387

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016554152593016624
    2. ' ' → logprob: -4.141554355621338
    3. '1' → logprob: -7.641554355621338
    4. 'H' → logprob: -10.76655387878418
    5. '2' → logprob: -11.51655387878418
    6. ' H' → logprob: -12.64155387878418
    7. '   ' → logprob: -13.82905387878418
    8. '4' → logprob: -14.57905387878418
    9. 'A' → logprob: -14.95405387878418
    10. '(' → logprob: -14.95405387878418

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007412535487674177
    2. '1' → logprob: -7.625741481781006
    3. ' ' → logprob: -9.125741004943848
    4. 'H' → logprob: -9.250741004943848
    5. '2' → logprob: -10.750741004943848
    6. 'A' → logprob: -11.000741004943848
    7. '(' → logprob: -13.000741004943848
    8. 'i' → logprob: -13.500741004943848
    9. 'B' → logprob: -13.625741004943848
    10. 'W' → logprob: -14.000741004943848

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6457936763763428
    2. '<|end|>' → logprob: -1.1457936763763428
    3. 'while' → logprob: -2.0207936763763428
    4. ' while' → logprob: -4.020793914794922
    5. '<|end|>' → logprob: -5.770793914794922
    6. '\n' → logprob: -6.145793914794922
    7. 'newline' → logprob: -7.770793914794922
    8. ' 
' → logprob: -8.645793914794922
    9. '

' → logprob: -8.895793914794922
    10. '```' → logprob: -9.020793914794922

Token 62: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.036960773169994354
    2. 'while' → logprob: -3.6619608402252197
    3. ' while' → logprob: -5.286960601806641
    4. '<|end|>' → logprob: -5.286960601806641
    5. '```' → logprob: -9.03696060180664
    6. '\n' → logprob: -9.28696060180664
    7. '
' → logprob: -9.66196060180664
    8. '<|end|>' → logprob: -9.91196060180664
    9. ' 
' → logprob: -10.03696060180664
    10. '

' → logprob: -10.28696060180664

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007655257824808359
    2. 'i' → logprob: -4.882655143737793
    3. ' True' → logprob: -10.382655143737793
    4. '(i' → logprob: -12.132655143737793
    5. 'True' → logprob: -12.257655143737793
    6. ' ' → logprob: -12.882655143737793
    7. ' H' → logprob: -13.132655143737793
    8. ' (' → logprob: -14.132655143737793
    9. '	i' → logprob: -14.257655143737793
    10. 'H' → logprob: -14.382655143737793

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07020072638988495
    2. '<' → logprob: -2.6952006816864014
    3. ' <=' → logprob: -8.57020092010498
    4. ' ' → logprob: -9.82020092010498
    5. '<=' → logprob: -11.32020092010498
    6. '<H' → logprob: -12.44520092010498
    7. '<n' → logprob: -14.07020092010498
    8. ' <
' → logprob: -14.07020092010498
    9. '<W' → logprob: -14.19520092010498
    10. ' !=' → logprob: -14.69520092010498

Token 65: ' B' (ID: 418)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0046349456533789635
    2. ' H' → logprob: -5.379634857177734
    3. ' ' → logprob: -12.129634857177734
    4. 'A' → logprob: -12.379634857177734
    5. '  ' → logprob: -13.504634857177734
    6. '   ' → logprob: -13.879634857177734
    7. 'W' → logprob: -14.254634857177734
    8. '	H' → logprob: -14.254634857177734
    9. '2' → logprob: -14.754634857177734
    10. 'B' → logprob: -15.504634857177734

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002886425703763962
    2. ' :' → logprob: -6.0028862953186035
    3. ':
' → logprob: -8.002886772155762
    4. ' and' → logprob: -10.377886772155762
    5. '+:' → logprob: -11.127886772155762
    6. '+' → logprob: -12.502886772155762
    7. ':**' → logprob: -12.502886772155762
    8. ':
' → logprob: -13.002886772155762
    9. '):' → logprob: -13.002886772155762
    10. 'and' → logprob: -13.252886772155762

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01030854880809784
    2. '    
' → logprob: -5.260308742523193
    3. '<|end|>' → logprob: -6.010308742523193
    4. 'print' → logprob: -6.760308742523193
    5. ' print' → logprob: -8.510308265686035
    6. '
' → logprob: -8.510308265686035
    7. 'i' → logprob: -8.760308265686035
    8. ' 
' → logprob: -9.135308265686035
    9. ' if' → logprob: -9.260308265686035
    10. '       ' → logprob: -9.385308265686035

Token 68: ' arr' (ID: 1724)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47807472944259644
    2. ' print' → logprob: -1.2280747890472412
    3. 'print' → logprob: -2.978074789047241
    4. '   ' → logprob: -3.853074789047241
    5. 'if' → logprob: -4.353074550628662
    6. '    ' → logprob: -7.603074550628662
    7. ' flag' → logprob: -7.728074550628662
    8. ' s' → logprob: -7.853074550628662
    9. ' row' → logprob: -8.10307502746582
    10. ' ' → logprob: -8.60307502746582

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009373052045702934
    2. '=' → logprob: -4.759373188018799
    3. '_row' → logprob: -7.884373188018799
    4. '.append' → logprob: -8.50937271118164
    5. ' ' → logprob: -10.13437271118164
    6. '   ' → logprob: -10.25937271118164
    7. '[i' → logprob: -10.75937271118164
    8. '[' → logprob: -11.13437271118164
    9. ' +=' → logprob: -11.38437271118164
    10. '_' → logprob: -11.88437271118164

Token 70: ' []
' (ID: 8911)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.06630554795265198
    2. ' gen' → logprob: -2.816305637359619
    3. '[' → logprob: -6.066305637359619
    4. '(gen' → logprob: -7.066305637359619
    5. '[]' → logprob: -8.066305160522461
    6. 'arr' → logprob: -8.566305160522461
    7. '[i' → logprob: -9.441305160522461
    8. ' ' → logprob: -9.566305160522461
    9. ' [' → logprob: -9.566305160522461
    10. ''' → logprob: -9.691305160522461

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1093464344739914
    2. '
' → logprob: -2.609346389770508
    3. '<|end|>' → logprob: -3.609346389770508
    4. 'i' → logprob: -7.359346389770508
    5. '    
' → logprob: -7.359346389770508
    6. ' i' → logprob: -7.984346389770508
    7. ' ' → logprob: -8.109346389770508
    8. ' if' → logprob: -8.484346389770508
    9. '<|end|>' → logprob: -8.984346389770508
    10. '[i' → logprob: -9.234346389770508

Token 72: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0675470232963562
    2. 'for' (adapté à ' for') → logprob: -2.942547082901001
    3. 'j' → logprob: -4.567546844482422
    4. 'arr' → logprob: -7.442546844482422
    5. ' for' → logprob: -7.692546844482422
    6. 'while' → logprob: -7.817546844482422
    7. 'row' → logprob: -8.192546844482422
    8. 'if' → logprob: -8.942546844482422
    9. 'i' → logprob: -9.442546844482422
    10. ' ' → logprob: -9.692546844482422

Token 73: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05265213921666145
    2. '_j' → logprob: -4.052652359008789
    3. 'j' → logprob: -4.302652359008789
    4. ' j' → logprob: -4.427652359008789
    5. ' _' → logprob: -4.802652359008789
    6. ' ' → logprob: -9.427652359008789
    7. 'row' → logprob: -10.802652359008789
    8. '_x' → logprob: -10.927652359008789
    9. '_i' → logprob: -11.177652359008789
    10. 'x' → logprob: -11.302652359008789

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25228559970855713
    2. 'in' → logprob: -1.5022855997085571
    3. '<|end|>' → logprob: -9.127285957336426
    4. '  ' → logprob: -10.002285957336426
    5. ' ' → logprob: -10.127285957336426
    6. '	in' → logprob: -10.127285957336426
    7. 'range' → logprob: -10.252285957336426
    8. '   ' → logprob: -11.002285957336426
    9. 'n' → logprob: -11.502285957336426
    10. 'In' → logprob: -11.877285957336426

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003956416912842542
    2. ' range' → logprob: -7.875395774841309
    3. 'arr' → logprob: -12.500395774841309
    4. '	range' → logprob: -12.625395774841309
    5. 'input' → logprob: -13.500395774841309
    6. '(range' → logprob: -13.625395774841309
    7. 'ran' → logprob: -13.875395774841309
    8. '[' → logprob: -14.125395774841309
    9. ')' → logprob: -14.625395774841309
    10. 'rang' → logprob: -14.875395774841309

Token 76: '(A' (ID: 10706)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.6470281481742859
    2. '(A' → logprob: -0.8970281481742859
    3. '(W' → logprob: -3.2720282077789307
    4. '(' → logprob: -4.647027969360352
    5. 'A' → logprob: -4.897027969360352
    6. ' A' → logprob: -5.147027969360352
    7. 'H' → logprob: -5.647027969360352
    8. ' H' → logprob: -6.397027969360352
    9. 'W' → logprob: -7.272027969360352
    10. ' (' → logprob: -7.397027969360352

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08008459955453873
    2. '):
' → logprob: -2.5800845623016357
    3. '   ' → logprob: -7.330084800720215
    4. ':' → logprob: -8.705084800720215
    5. '):
' → logprob: -9.330084800720215
    6. ' ):' → logprob: -9.330084800720215
    7. ')' → logprob: -9.455084800720215
    8. '+' → logprob: -10.705084800720215
    9. '*' → logprob: -10.830084800720215
    10. ' ):
' → logprob: -11.205084800720215

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.232370525598526
    2. ':' → logprob: -1.6073704957962036
    3. '   ' → logprob: -6.232370376586914
    4. ':
' → logprob: -6.232370376586914
    5. '<|end|>' → logprob: -6.357370376586914
    6. ',' → logprob: -8.357370376586914
    7. '<|end|>' → logprob: -8.607370376586914
    8. 'arr' → logprob: -8.732370376586914
    9. '):
' → logprob: -9.357370376586914
    10. ' ' → logprob: -9.732370376586914

Token 79: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.44339385628700256
    2. 'arr' (adapté à ' arr') → logprob: -1.0683938264846802
    3. ' if' → logprob: -5.193393707275391
    4. 'print' → logprob: -5.693393707275391
    5. 'if' → logprob: -5.943393707275391
    6. ' print' → logprob: -6.693393707275391
    7. '   ' → logprob: -7.443393707275391
    8. ' row' → logprob: -8.06839370727539
    9. '	arr' → logprob: -8.69339370727539
    10. 'row' → logprob: -8.81839370727539

Token 80: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025000330060720444
    2. '.' → logprob: -6.002500057220459
    3. '.extend' → logprob: -11.3774995803833
    4. '.app' → logprob: -12.5024995803833
    5. ' .' → logprob: -12.5024995803833
    6. '=' → logprob: -12.8774995803833
    7. '.ap' → logprob: -13.1274995803833
    8. '+=' → logprob: -14.7524995803833
    9. 'append' → logprob: -15.5024995803833
    10. ' =' → logprob: -15.8774995803833

Token 81: '("' (ID: 568)
  Prédit: '(gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(gen' → logprob: -0.0040558404289186
    2. '(' → logprob: -5.754055976867676
    3. '('' → logprob: -7.379055976867676
    4. '((' → logprob: -8.754055976867676
    5. 'gen' → logprob: -10.879055976867676
    6. '(str' → logprob: -11.379055976867676
    7. '(i' → logprob: -11.504055976867676
    8. '(
' → logprob: -11.629055976867676
    9. '(('' → logprob: -12.254055976867676
    10. '('\' → logprob: -12.254055976867676

Token 82: '0' (ID: 15)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.0010518652852624655
    2. ' gen' → logprob: -7.751051902770996
    3. '0' → logprob: -8.251051902770996
    4. ''' → logprob: -8.751051902770996
    5. '(gen' → logprob: -9.501051902770996
    6. 'H' → logprob: -10.376051902770996
    7. '1' → logprob: -10.501051902770996
    8. '"' → logprob: -11.001051902770996
    9. '.gen' → logprob: -11.501051902770996
    10. '.' → logprob: -12.001051902770996

Token 83: '")
' (ID: 1896)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.021872026845812798
    2. '"*' → logprob: -4.521872043609619
    3. '")' → logprob: -4.771872043609619
    4. '0' → logprob: -6.396872043609619
    5. '*' → logprob: -8.646871566772461
    6. ' "' → logprob: -9.271871566772461
    7. '"))' → logprob: -9.521871566772461
    8. ''' → logprob: -10.271871566772461
    9. '00' → logprob: -10.396871566772461
    10. '1' → logprob: -10.521871566772461

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1319679468870163
    2. '<|end|>' → logprob: -3.0069680213928223
    3. '\n' → logprob: -3.6319680213928223
    4. '
' → logprob: -3.6319680213928223
    5. ' ' → logprob: -5.131968021392822
    6. '    
' → logprob: -5.756968021392822
    7. '  ' → logprob: -5.881968021392822
    8. '  
' → logprob: -6.131968021392822
    9. '<|end|>' → logprob: -7.006968021392822
    10. '[i' → logprob: -7.131968021392822

Token 86: '.extend' (ID: 34151)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '(["' (ID: 41418)
  Prédit: '(["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(["' → logprob: -0.8680541515350342
    2. '(arr' → logprob: -1.1180541515350342
    3. '(gen' → logprob: -2.368054151535034
    4. '(' → logprob: -2.868054151535034
    5. '([' → logprob: -2.993054151535034
    6. '(['' → logprob: -3.118054151535034
    7. '((' → logprob: -5.243054389953613
    8. '("' → logprob: -6.618054389953613
    9. '(("' → logprob: -7.618054389953613
    10. '('' → logprob: -8.243054389953613

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013371155597269535
    2. '0' → logprob: -4.763370990753174
    3. '"' → logprob: -5.763370990753174
    4. 'gen' → logprob: -7.263370990753174
    5. ' "' → logprob: -8.888371467590332
    6. '.' → logprob: -9.138371467590332
    7. '".' → logprob: -9.138371467590332
    8. '."' → logprob: -9.513371467590332
    9. '11' → logprob: -10.138371467590332
    10. ''' → logprob: -10.263371467590332

Token 89: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.011536635458469391
    2. '"' → logprob: -4.511536598205566
    3. '0' → logprob: -8.136536598205566
    4. '"])' → logprob: -9.136536598205566
    5. '")' → logprob: -10.636536598205566
    6. '"*' → logprob: -10.886536598205566
    7. ']' → logprob: -11.511536598205566
    8. '"](' → logprob: -11.636536598205566
    9. '1' → logprob: -12.511536598205566
    10. '"]]' → logprob: -12.761536598205566

Token 90: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5968562960624695
    2. ' *' → logprob: -0.8468562960624695
    3. ' for' → logprob: -4.846856117248535
    4. ')' → logprob: -4.971856117248535
    5. '*(' → logprob: -5.846856117248535
    6. 'for' → logprob: -6.721856117248535
    7. ' ' → logprob: -7.596856117248535
    8. '   ' → logprob: -8.346856117248535
    9. '+' → logprob: -8.721856117248535
    10. '*i' → logprob: -9.096856117248535

Token 91: ' (' (ID: 350)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.7794123291969299
    2. 'H' → logprob: -1.1544122695922852
    3. '(H' → logprob: -2.654412269592285
    4. '(W' → logprob: -2.904412269592285
    5. ' W' → logprob: -3.154412269592285
    6. ' H' → logprob: -3.654412269592285
    7. ' (' → logprob: -4.404412269592285
    8. '(' → logprob: -4.904412269592285
    9. '(B' → logprob: -5.404412269592285
    10. 'B' → logprob: -6.279412269592285

Token 92: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4055206775665283
    2. 'H' → logprob: -1.4055206775665283
    3. ' W' → logprob: -3.1555206775665283
    4. ' H' → logprob: -4.280520439147949
    5. '(H' → logprob: -4.655520439147949
    6. '(W' → logprob: -4.655520439147949
    7. 'B' → logprob: -5.280520439147949
    8. 'A' → logprob: -6.155520439147949
    9. ' (' → logprob: -6.280520439147949
    10. '(B' → logprob: -6.655520439147949

Token 93: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08227905631065369
    2. '-' → logprob: -2.5822789669036865
    3. '-B' → logprob: -5.707279205322266
    4. '-A' → logprob: -10.332279205322266
    5. ' ' → logprob: -10.707279205322266
    6. '   ' → logprob: -12.957279205322266
    7. '-H' → logprob: -13.582279205322266
    8. '  ' → logprob: -14.707279205322266
    9. ' B' → logprob: -14.957279205322266
    10. '-i' → logprob: -14.957279205322266

Token 94: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11521878093481064
    2. ' A' → logprob: -2.2402188777923584
    3. 'B' → logprob: -6.740218639373779
    4. 'H' → logprob: -7.740218639373779
    5. ' ' → logprob: -8.490219116210938
    6. ' B' → logprob: -8.865219116210938
    7. '   ' → logprob: -9.115219116210938
    8. 'i' → logprob: -9.615219116210938
    9. 'len' → logprob: -9.740219116210938
    10. ' H' → logprob: -9.865219116210938

Token 95: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5831145644187927
    2. '))
' → logprob: -0.8331145644187927
    3. ' ))
' → logprob: -5.9581146240234375
    4. '))
' → logprob: -6.3331146240234375
    5. '))

' → logprob: -6.4581146240234375
    6. ' ))' → logprob: -7.2081146240234375
    7. ')' → logprob: -8.458114624023438
    8. ')))' → logprob: -9.833114624023438
    9. ' ' → logprob: -9.958114624023438
    10. '*' → logprob: -10.083114624023438

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01795548014342785
    2. '
' → logprob: -4.142955303192139
    3. '<|end|>' → logprob: -6.892955303192139
    4. ' i' → logprob: -8.267955780029297
    5. '```' → logprob: -8.642955780029297
    6. '    
' → logprob: -9.017955780029297
    7. ' for' → logprob: -9.392955780029297
    8. 'print' → logprob: -9.642955780029297
    9. ' 
' → logprob: -10.517955780029297
    10. 'i' → logprob: -10.517955780029297

Token 97: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5465178489685059
    2. ' for' → logprob: -1.1715178489685059
    3. 'print' (adapté à ' print') → logprob: -2.296517848968506
    4. '   ' → logprob: -5.046517848968506
    5. ' print' → logprob: -5.921517848968506
    6. 'i' → logprob: -7.296517848968506
    7. 'while' → logprob: -8.171518325805664
    8. ' while' → logprob: -9.171518325805664
    9. ' i' → logprob: -9.296518325805664
    10. 'arr' → logprob: -9.546518325805664

Token 98: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04453407973051071
    2. '("' → logprob: -3.2945339679718018
    3. '(' → logprob: -5.044534206390381
    4. '(*' → logprob: -11.669533729553223
    5. '(('' → logprob: -11.794533729553223
    6. '()' → logprob: -12.669533729553223
    7. ' (' → logprob: -13.669533729553223
    8. '(("' → logprob: -13.669533729553223
    9. '(arr' → logprob: -13.919533729553223
    10. '("")' → logprob: -14.294533729553223

Token 99: '".' (ID: 4050)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.155258446931839
    2. '"' → logprob: -2.0302584171295166
    3. '0' → logprob: -5.905258655548096
    4. ''' → logprob: -5.905258655548096
    5. 'arr' → logprob: -6.030258655548096
    6. ' ''.' → logprob: -6.155258655548096
    7. '''' → logprob: -6.780258655548096
    8. '".' → logprob: -7.405258655548096
    9. ' "".' → logprob: -8.655258178710938
    10. '""' → logprob: -8.905258178710938

Token 100: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.1782583391759545e-05
    2. ' join' → logprob: -10.500031471252441
    3. 'j' → logprob: -13.000031471252441
    4. 'jo' → logprob: -13.375031471252441
    5. ' ' → logprob: -15.625031471252441
    6. 'strip' → logprob: -17.250032424926758
    7. '(join' → logprob: -17.625032424926758
    8. '/j' → logprob: -17.875032424926758
    9. 'print' → logprob: -18.500032424926758
    10. ' jo' → logprob: -19.125032424926758

Token 101: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.250008583068848
    3. 'arr' → logprob: -12.750008583068848
    4. ')' → logprob: -14.750008583068848
    5. ' (' → logprob: -14.875008583068848
    6. ')(' → logprob: -16.375009536743164
    7. '[arr' → logprob: -16.500009536743164
    8. '(
' → logprob: -16.875009536743164
    9. '	arr' → logprob: -17.000009536743164
    10. '<arr' → logprob: -17.125009536743164

Token 102: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4170018434524536
    2. '))
' → logprob: -1.1670018434524536
    3. ')' → logprob: -3.542001724243164
    4. ')
' → logprob: -7.792001724243164
    5. '))
' → logprob: -8.417001724243164
    6. '   ' → logprob: -10.417001724243164
    7. ' ' → logprob: -10.792001724243164
    8. '))

' → logprob: -10.917001724243164
    9. ' ))
' → logprob: -12.167001724243164
    10. ' ))' → logprob: -12.417001724243164

Token 103: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18801647424697876
    2. '   ' → logprob: -2.438016414642334
    3. ' i' → logprob: -3.313016414642334
    4. '
' → logprob: -3.938016414642334
    5. '<|end|>' → logprob: -4.188016414642334
    6. ' ' → logprob: -5.688016414642334
    7. '  
' → logprob: -5.813016414642334
    8. '    
' → logprob: -6.063016414642334
    9. '```' → logprob: -6.438016414642334
    10. '  ' → logprob: -7.563016414642334

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.003920480143278837
    2. 'if' → logprob: -5.753920555114746
    3. '   ' → logprob: -7.753920555114746
    4. 'A' → logprob: -9.503920555114746
    5. 'B' → logprob: -9.628920555114746
    6. 'for' → logprob: -9.628920555114746
    7. 'arr' → logprob: -10.128920555114746
    8. ' i' → logprob: -10.753920555114746
    9. 'flag' → logprob: -11.753920555114746
    10. '```' → logprob: -12.003920555114746

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01507405936717987
    2. ' +=' → logprob: -4.265074253082275
    3. '+' → logprob: -7.640074253082275
    4. '=' → logprob: -7.765074253082275
    5. '+='' → logprob: -13.265073776245117
    6. '+="' → logprob: -13.890073776245117
    7. '<|end|>' → logprob: -14.015073776245117
    8. ']+=' → logprob: -14.640073776245117
    9. '+=(' → logprob: -14.765073776245117
    10. ' ' → logprob: -15.015073776245117

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003800296690315008
    2. ' ' → logprob: -8.12537956237793
    3. 'B' → logprob: -9.50037956237793
    4. '   ' → logprob: -12.50037956237793
    5. '2' → logprob: -13.00037956237793
    6. 'A' → logprob: -13.75037956237793
    7. ' B' → logprob: -13.75037956237793
    8. '0' → logprob: -16.06287956237793
    9. 'b' → logprob: -16.18787956237793
    10. '4' → logprob: -16.31287956237793

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008402384701184928
    2. '2' → logprob: -7.375840187072754
    3. 'B' → logprob: -8.875840187072754
    4. ' ' → logprob: -9.875840187072754
    5. 'A' → logprob: -11.500840187072754
    6. '4' → logprob: -12.875840187072754
    7. '3' → logprob: -13.563340187072754
    8. '10' → logprob: -13.875840187072754
    9. '   ' → logprob: -14.063340187072754
    10. '20' → logprob: -14.250840187072754

Token 108: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9275771379470825
    2. 'i' → logprob: -1.6775771379470825
    3. 'while' → logprob: -1.6775771379470825
    4. '
' → logprob: -2.302577018737793
    5. '<|end|>' → logprob: -2.552577018737793
    6. '```' → logprob: -3.802577018737793
    7. 'arr' → logprob: -5.177577018737793
    8. '  
' → logprob: -5.302577018737793
    9. 'B' → logprob: -5.427577018737793
    10. ' 
' → logprob: -5.552577018737793

Token 110: ' x' (ID: 1215)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8284981846809387
    2. ' i' → logprob: -1.203498125076294
    3. ' j' → logprob: -1.453498125076294
    4. '_' → logprob: -4.703498363494873
    5. ' H' → logprob: -5.203498363494873
    6. ' ' → logprob: -5.328498363494873
    7. 'j' → logprob: -6.328498363494873
    8. 'i' → logprob: -6.328498363494873
    9. ' x' → logprob: -6.453498363494873
    10. ' h' → logprob: -6.828498363494873

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026702793315052986
    2. 'in' → logprob: -3.651702880859375
    3. ' ' → logprob: -8.026702880859375
    4. '  ' → logprob: -9.901702880859375
    5. '   ' → logprob: -11.401702880859375
    6. '_' → logprob: -12.901702880859375
    7. ',' → logprob: -13.151702880859375
    8. '	in' → logprob: -13.276702880859375
    9. 'range' → logprob: -13.714202880859375
    10. 'n' → logprob: -13.839202880859375

Token 112: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760532021522522
    2. 'range' → logprob: -0.8260532021522522
    3. ' ' → logprob: -10.576053619384766
    4. '(range' → logprob: -10.576053619384766
    5. '[' → logprob: -11.451053619384766
    6. '  ' → logprob: -11.951053619384766
    7. '	range' → logprob: -12.076053619384766
    8. ' xrange' → logprob: -12.201053619384766
    9. 'rang' → logprob: -12.513553619384766
    10. 'arr' → logprob: -12.576053619384766

Token 113: '(H' (ID: 20904)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.06169392168521881
    2. '(A' → logprob: -3.4366939067840576
    3. '(' → logprob: -3.9366939067840576
    4. '(i' → logprob: -5.061694145202637
    5. '(H' → logprob: -6.811694145202637
    6. 'B' → logprob: -7.936694145202637
    7. '(W' → logprob: -9.186694145202637
    8. 'A' → logprob: -9.811694145202637
    9. '(C' → logprob: -10.061694145202637
    10. '((' → logprob: -10.561694145202637

Token 114: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011187874712049961
    2. ' -' → logprob: -5.38618803024292
    3. '-B' → logprob: -5.51118803024292
    4. '-' → logprob: -6.38618803024292
    5. '):
' → logprob: -7.63618803024292
    6. '-A' → logprob: -9.011187553405762
    7. ' ):' → logprob: -9.386187553405762
    8. ':' → logprob: -9.886187553405762
    9. 'B' → logprob: -10.761187553405762
    10. ')' → logprob: -11.136187553405762

Token 115: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00867473054677248
    2. ' B' → logprob: -4.758674621582031
    3. 'i' → logprob: -10.508674621582031
    4. '   ' → logprob: -10.758674621582031
    5. ' ' → logprob: -12.008674621582031
    6. ' i' → logprob: -13.633674621582031
    7. '1' → logprob: -13.883674621582031
    8. '(B' → logprob: -14.383674621582031
    9. ',' → logprob: -14.633674621582031
    10. '  ' → logprob: -14.758674621582031

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22623658180236816
    2. '):
' → logprob: -1.6012365818023682
    3. ':' → logprob: -7.976236343383789
    4. ' -' → logprob: -8.851236343383789
    5. ' ):' → logprob: -9.101236343383789
    6. '):
' → logprob: -9.851236343383789
    7. '   ' → logprob: -10.101236343383789
    8. ')' → logprob: -10.226236343383789
    9. '-' → logprob: -10.226236343383789
    10. ',' → logprob: -10.476236343383789

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005573204252868891
    2. '    
' → logprob: -8.125556945800781
    3. '<|end|>' → logprob: -9.000556945800781
    4. '```' → logprob: -10.375556945800781
    5. 'arr' → logprob: -10.500556945800781
    6. '
' → logprob: -10.875556945800781
    7. '	arr' → logprob: -11.500556945800781
    8. '[' → logprob: -11.750556945800781
    9. '<|end|>' → logprob: -11.875556945800781
    10. ':' → logprob: -12.375556945800781

Token 118: ' s' (ID: 265)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12530076503753662
    2. '   ' → logprob: -2.625300884246826
    3. ' arr' → logprob: -3.125300884246826
    4. 'if' → logprob: -7.375300884246826
    5. 'for' → logprob: -8.250300407409668
    6. ' ' → logprob: -8.500300407409668
    7. 'i' → logprob: -9.375300407409668
    8. ' if' → logprob: -9.875300407409668
    9. ' for' → logprob: -10.125300407409668
    10. ' i' → logprob: -10.250300407409668

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2513100802898407
    2. '=' → logprob: -2.251310110092163
    3. 'arr' → logprob: -2.376310110092163
    4. 'tr' → logprob: -4.376309871673584
    5. '_arr' → logprob: -6.251309871673584
    6. '=""' → logprob: -6.751309871673584
    7. '='' → logprob: -6.876309871673584
    8. '1' → logprob: -7.376309871673584
    9. ' arr' → logprob: -7.501309871673584
    10. 'ize' → logprob: -7.501309871673584

Token 120: ' ""
' (ID: 18061)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8560478687286377
    2. 'gen' → logprob: -0.8560478687286377
    3. '""' → logprob: -2.8560478687286377
    4. '[]' → logprob: -3.7310478687286377
    5. '["' → logprob: -4.106047630310059
    6. ''' → logprob: -4.356047630310059
    7. ' gen' → logprob: -4.606047630310059
    8. '''' → logprob: -4.856047630310059
    9. '[]
' → logprob: -4.981047630310059
    10. '['' → logprob: -5.731047630310059

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06393695622682571
    2. 'for' → logprob: -2.938936948776245
    3. ' for' → logprob: -4.813937187194824
    4. '<|end|>' → logprob: -7.938937187194824
    5. ' ' → logprob: -8.563937187194824
    6. 'i' → logprob: -9.563937187194824
    7. '  ' → logprob: -9.938937187194824
    8. '	for' → logprob: -10.188937187194824
    9. 'x' → logprob: -10.313937187194824
    10. 'while' → logprob: -10.438937187194824

Token 122: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051121797412633896
    2. 'flag' → logprob: -3.426121711730957
    3. 'if' → logprob: -4.676121711730957
    4. 'i' → logprob: -5.801121711730957
    5. 'while' → logprob: -6.926121711730957
    6. '   ' → logprob: -7.176121711730957
    7. ' for' → logprob: -7.301121711730957
    8. 'arr' → logprob: -7.676121711730957
    9. 's' → logprob: -7.801121711730957
    10. 'j' → logprob: -8.051121711730957

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10116825252771378
    2. '=' → logprob: -2.351168155670166
    3. ' ' → logprob: -7.351168155670166
    4. '   ' → logprob: -9.601168632507324
    5. '_' → logprob: -10.101168632507324
    6. 's' → logprob: -10.101168632507324
    7. ' +=' → logprob: -10.226168632507324
    8. ',' → logprob: -10.601168632507324
    9. '  ' → logprob: -10.726168632507324
    10. 'x' → logprob: -11.226168632507324

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007938416674733162
    2. 'A' → logprob: -5.757938385009766
    3. ' ' → logprob: -5.882938385009766
    4. 'x' → logprob: -6.882938385009766
    5. 'W' → logprob: -8.632938385009766
    6. '1' → logprob: -8.632938385009766
    7. 'B' → logprob: -8.757938385009766
    8. '(' → logprob: -9.132938385009766
    9. 'i' → logprob: -9.132938385009766
    10. ' A' → logprob: -9.507938385009766

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02840106561779976
    2. 'A' → logprob: -3.7784011363983154
    3. 'B' → logprob: -5.778400897979736
    4. 'W' → logprob: -7.403400897979736
    5. '1' → logprob: -7.778400897979736
    6. 'i' → logprob: -7.778400897979736
    7. ' ' → logprob: -8.528401374816895
    8. 'x' → logprob: -8.778401374816895
    9. '(' → logprob: -9.778401374816895
    10. 'count' → logprob: -9.903401374816895

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15827952325344086
    2. '<|end|>' → logprob: -2.0332794189453125
    3. ' while' → logprob: -5.0332794189453125
    4. ' ' → logprob: -5.5332794189453125
    5. 'while' → logprob: -6.7832794189453125
    6. '
' → logprob: -6.9082794189453125
    7. '    ' → logprob: -7.2832794189453125
    8. '    
' → logprob: -7.7832794189453125
    9. '<|end|>' → logprob: -7.9082794189453125
    10. '  ' → logprob: -8.408279418945312

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30743178725242615
    2. ' while' → logprob: -1.9324318170547485
    3. 'while' → logprob: -2.307431697845459
    4. '<|end|>' → logprob: -4.182431697845459
    5. ' ' → logprob: -6.432431697845459
    6. '    ' → logprob: -6.932431697845459
    7. ' for' → logprob: -8.057432174682617
    8. 'for' → logprob: -8.057432174682617
    9. '	while' → logprob: -8.057432174682617
    10. '  ' → logprob: -8.807432174682617

Token 128: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.22319290041923523
    2. 'flag' → logprob: -1.9731929302215576
    3. 'for' → logprob: -2.9731929302215576
    4. ' while' → logprob: -4.8481926918029785
    5. ' for' → logprob: -7.9731926918029785
    6. '   ' → logprob: -7.9731926918029785
    7. 'i' → logprob: -8.473193168640137
    8. ' flag' → logprob: -8.473193168640137
    9. 'prev' → logprob: -8.973193168640137
    10. 'row' → logprob: -9.098193168640137

Token 129: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16028444468975067
    2. ' count' → logprob: -1.910284399986267
    3. '(count' → logprob: -9.785284042358398
    4. ' True' → logprob: -13.910284042358398
    5. '   ' → logprob: -14.160284042358398
    6. '	count' → logprob: -14.785284042358398
    7. 'x' → logprob: -14.910284042358398
    8. ' ' → logprob: -15.160284042358398
    9. '<count' → logprob: -15.160284042358398
    10. 'True' → logprob: -15.410284042358398

Token 130: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04318051040172577
    2. '<' → logprob: -3.168180465698242
    3. ' <=' → logprob: -9.668180465698242
    4. ' ' → logprob: -9.918180465698242
    5. '<n' → logprob: -11.168180465698242
    6. '<W' → logprob: -11.418180465698242
    7. '<s' → logprob: -11.668180465698242
    8. '<count' → logprob: -11.918180465698242
    9. '<len' → logprob: -12.293180465698242
    10. '<=' → logprob: -12.668180465698242

Token 131: ' A' (ID: 355)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.06247197836637497
    2. 'A' → logprob: -2.812471866607666
    3. ' W' → logprob: -8.062472343444824
    4. 'B' → logprob: -9.937472343444824
    5. 'H' → logprob: -9.937472343444824
    6. '   ' → logprob: -10.312472343444824
    7. ' A' → logprob: -10.812472343444824
    8. ' ' → logprob: -11.687472343444824
    9. '(W' → logprob: -11.937472343444824
    10. '	W' → logprob: -12.687472343444824

Token 132: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35213562846183777
    2. ':' → logprob: -1.2271356582641602
    3. ' and' → logprob: -5.97713565826416
    4. '   ' → logprob: -7.22713565826416
    5. 'and' → logprob: -8.72713565826416
    6. 's' → logprob: -9.85213565826416
    7. '+' → logprob: -9.97713565826416
    8. '):
' → logprob: -10.22713565826416
    9. '       ' → logprob: -10.47713565826416
    10. ' s' → logprob: -10.72713565826416

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012136618606746197
    2. ' s' → logprob: -4.887136459350586
    3. 's' → logprob: -6.137136459350586
    4. '   ' → logprob: -6.762136459350586
    5. ',' → logprob: -7.262136459350586
    6. ' and' → logprob: -9.512136459350586
    7. ' if' → logprob: -9.512136459350586
    8. ':' → logprob: -9.762136459350586
    9. ' ' → logprob: -10.262136459350586
    10. '        
' → logprob: -10.512136459350586

Token 134: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.12998662889003754
    2. 'if' → logprob: -3.004986524581909
    3. ' s' → logprob: -3.754986524581909
    4. ' if' → logprob: -3.879986524581909
    5. 'flag' → logprob: -3.879986524581909
    6. '       ' → logprob: -5.629986763000488
    7. ' flag' → logprob: -6.379986763000488
    8. '   ' → logprob: -6.879986763000488
    9. 'token' → logprob: -7.629986763000488
    10. 'x' → logprob: -7.879986763000488

Token 135: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20164935290813446
    2. ' +=' → logprob: -1.7016493082046509
    3. '+' → logprob: -8.95164966583252
    4. '+='' → logprob: -10.20164966583252
    5. '=' → logprob: -10.95164966583252
    6. ' +' → logprob: -11.07664966583252
    7. 's' → logprob: -11.45164966583252
    8. '+="' → logprob: -11.70164966583252
    9. '+=(' → logprob: -11.70164966583252
    10. '   ' → logprob: -12.57664966583252

Token 136: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11861807107925415
    2. ''' → logprob: -2.6186180114746094
    3. 'str' → logprob: -3.6186180114746094
    4. 'gen' → logprob: -4.493618011474609
    5. ' "' → logprob: -8.11861801147461
    6. '('' → logprob: -8.61861801147461
    7. '("' → logprob: -8.74361801147461
    8. ' '' → logprob: -9.11861801147461
    9. ' str' → logprob: -10.61861801147461
    10. '(' → logprob: -10.74361801147461

Token 137: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2964302897453308
    2. '1' → logprob: -1.4214303493499756
    3. ''' → logprob: -5.1714301109313965
    4. '01' → logprob: -5.4214301109313965
    5. '10' → logprob: -5.6714301109313965
    6. '"' → logprob: -7.2964301109313965
    7. 'str' → logprob: -8.171430587768555
    8. '11' → logprob: -8.296430587768555
    9. 'gen' → logprob: -8.421430587768555
    10. '00' → logprob: -9.796430587768555

Token 138: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6391949653625488
    2. '')' → logprob: -0.7641949653625488
    3. '')
' → logprob: -5.889194965362549
    4. '<|end|>' → logprob: -6.139194965362549
    5. ''
' → logprob: -7.264194965362549
    6. ')' → logprob: -8.01419448852539
    7. '0' → logprob: -8.01419448852539
    8. ''*' → logprob: -9.26419448852539
    9. '"' → logprob: -10.76419448852539
    10. '<|end|>' → logprob: -10.88919448852539

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09630074352025986
    2. '   ' → logprob: -2.8463008403778076
    3. '<|end|>' → logprob: -4.3463006019592285
    4. '+' → logprob: -5.0963006019592285
    5. ' +' → logprob: -5.3463006019592285
    6. '*' → logprob: -6.3463006019592285
    7. ' *' → logprob: -6.4713006019592285
    8. ' if' → logprob: -6.7213006019592285
    9. '           ' → logprob: -6.8463006019592285
    10. '        
' → logprob: -7.3463006019592285

Token 140: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.002455203328281641
    2. ' count' → logprob: -6.127455234527588
    3. '       ' → logprob: -8.25245475769043
    4. 'if' → logprob: -13.50245475769043
    5. 's' → logprob: -13.62745475769043
    6. 'flag' → logprob: -13.75245475769043
    7. ' s' → logprob: -14.00245475769043
    8. '	count' → logprob: -14.12745475769043
    9. '   ' → logprob: -14.25245475769043
    10. '.count' → logprob: -14.37745475769043

Token 141: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14323736727237701
    2. '+=' → logprob: -2.018237352371216
    3. '+' → logprob: -8.393237113952637
    4. '<|end|>' → logprob: -8.893237113952637
    5. '=' → logprob: -9.018237113952637
    6. '   ' → logprob: -10.893237113952637
    7. ' +' → logprob: -11.268237113952637
    8. ' =' → logprob: -11.268237113952637
    9. ' ' → logprob: -11.643237113952637
    10. '    ' → logprob: -11.768237113952637

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488499253988266
    2. ' ' → logprob: -2.929884910583496
    3. '2' → logprob: -13.679884910583496
    4. '   ' → logprob: -14.054884910583496
    5. ' ' → logprob: -16.054885864257812
    6. '0' → logprob: -16.054885864257812
    7. '```' → logprob: -16.429885864257812
    8. '10' → logprob: -16.554885864257812
    9. '100' → logprob: -16.929885864257812
    10. '4' → logprob: -16.929885864257812

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016218038217630237
    2. ' ' → logprob: -8.750162124633789
    3. '2' → logprob: -12.625162124633789
    4. '   ' → logprob: -16.25016212463379
    5. '0' → logprob: -16.75016212463379
    6. '3' → logprob: -17.06266212463379
    7. '4' → logprob: -17.25016212463379
    8. '```' → logprob: -17.43766212463379
    9. '  ' → logprob: -17.87516212463379
    10. '6' → logprob: -18.12516212463379

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017689188942313194
    2. '       ' → logprob: -4.392689228057861
    3. '<|end|>' → logprob: -6.142689228057861
    4. ' ' → logprob: -7.267689228057861
    5. '
' → logprob: -7.392689228057861
    6. '+' → logprob: -7.892689228057861
    7. ' s' → logprob: -8.267688751220703
    8. 's' → logprob: -8.267688751220703
    9. '<|end|>' → logprob: -8.642688751220703
    10. ' +' → logprob: -8.642688751220703

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04065690189599991
    2. 's' → logprob: -3.540656805038452
    3. '       ' → logprob: -5.040657043457031
    4. ' ' → logprob: -6.290657043457031
    5. 'while' → logprob: -7.040657043457031
    6. ' while' → logprob: -7.790657043457031
    7. ' s' → logprob: -8.290657043457031
    8. '<|end|>' → logprob: -8.790657043457031
    9. '
' → logprob: -9.040657043457031
    10. '  ' → logprob: -9.290657043457031

Token 146: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3391942083835602
    2. '   ' → logprob: -1.4641941785812378
    3. 'while' → logprob: -4.089194297790527
    4. 'arr' → logprob: -4.214194297790527
    5. 'print' → logprob: -4.714194297790527
    6. 'if' → logprob: -5.339194297790527
    7. ' s' → logprob: -5.589194297790527
    8. ' while' → logprob: -5.839194297790527
    9. ' ' → logprob: -6.839194297790527
    10. 'for' (adapté à ' for') → logprob: -7.339194297790527

Token 147: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42941173911094666
    2. ' _' → logprob: -1.304411768913269
    3. ' y' → logprob: -3.6794116497039795
    4. ' j' → logprob: -4.179411888122559
    5. ' i' → logprob: -4.429411888122559
    6. ' x' → logprob: -4.929411888122559
    7. 'i' → logprob: -5.554411888122559
    8. 'x' → logprob: -5.679411888122559
    9. ' c' → logprob: -5.679411888122559
    10. 'y' → logprob: -6.179411888122559

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08975870907306671
    2. 'in' → logprob: -2.4647586345672607
    3. '_' → logprob: -7.33975887298584
    4. 'count' → logprob: -9.21475887298584
    5. ' ' → logprob: -10.08975887298584
    6. 'x' → logprob: -11.33975887298584
    7. ' count' → logprob: -12.96475887298584
    8. 'range' → logprob: -12.96475887298584
    9. ' _' → logprob: -13.08975887298584
    10. ' x' → logprob: -13.46475887298584

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815474033355713
    2. ' range' → logprob: -4.018154621124268
    3. ' ' → logprob: -13.768155097961426
    4. 's' → logprob: -14.268155097961426
    5. '(range' → logprob: -14.768155097961426
    6. '   ' → logprob: -15.143155097961426
    7. '	range' → logprob: -15.268155097961426
    8. 'r' → logprob: -15.518155097961426
    9. '  ' → logprob: -15.518155097961426
    10. 'ran' → logprob: -15.643155097961426

Token 150: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.002828296273946762
    2. '(' → logprob: -6.877828121185303
    3. ' (' → logprob: -7.002828121185303
    4. ' W' → logprob: -7.502828121185303
    5. 'W' → logprob: -8.252828598022461
    6. '(B' → logprob: -10.127828598022461
    7. '((' → logprob: -10.502828598022461
    8. '(range' → logprob: -13.252828598022461
    9. ' ' → logprob: -14.377828598022461
    10. '(H' → logprob: -14.502828598022461

Token 151: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.313390851020813
    2. '-' → logprob: -1.313390851020813
    3. '   ' → logprob: -9.563390731811523
    4. ' ' → logprob: -10.563390731811523
    5. '-A' → logprob: -10.688390731811523
    6. '):' → logprob: -12.313390731811523
    7. '-B' → logprob: -13.313390731811523
    8. '):
' → logprob: -13.813390731811523
    9. '[' → logprob: -13.938390731811523
    10. ' ' → logprob: -14.313390731811523

Token 152: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06221885606646538
    2. ' A' → logprob: -2.8122189044952393
    3. 'B' → logprob: -9.18721866607666
    4. '   ' → logprob: -9.56221866607666
    5. ' ' → logprob: -10.31221866607666
    6. 'x' → logprob: -11.43721866607666
    7. ' B' → logprob: -11.93721866607666
    8. 'count' → logprob: -11.93721866607666
    9. 'a' → logprob: -12.06221866607666
    10. '  ' → logprob: -12.56221866607666

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5768201947212219
    2. '):
' → logprob: -0.8268201947212219
    3. ')' → logprob: -7.826820373535156
    4. ':' → logprob: -8.451820373535156
    5. '   ' → logprob: -8.576820373535156
    6. ':
' → logprob: -10.201820373535156
    7. '):
' → logprob: -11.076820373535156
    8. ' ):
' → logprob: -11.701820373535156
    9. '       ' → logprob: -11.951820373535156
    10. ' ):' → logprob: -11.951820373535156

Token 154: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16984248161315918
    2. '       ' → logprob: -2.044842481613159
    3. '   ' → logprob: -4.044842720031738
    4. ' s' → logprob: -4.794842720031738
    5. ':
' → logprob: -7.544842720031738
    6. ':' → logprob: -8.044842720031738
    7. ' ' → logprob: -10.044842720031738
    8. '0' → logprob: -10.544842720031738
    9. ',' → logprob: -11.044842720031738
    10. '           ' → logprob: -11.169842720031738

Token 155: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.014449776150286198
    2. ' s' → logprob: -4.264449596405029
    3. '0' → logprob: -8.389450073242188
    4. '   ' → logprob: -10.764450073242188
    5. '1' → logprob: -11.014450073242188
    6. ' ' → logprob: -11.264450073242188
    7. '       ' → logprob: -13.514450073242188
    8. ''s' → logprob: -13.639450073242188
    9. '<|end|>' → logprob: -13.639450073242188
    10. '	s' → logprob: -14.389450073242188

Token 156: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009398207068443298
    2. ' +=' → logprob: -4.759397983551025
    3. '+='' → logprob: -7.259397983551025
    4. '+' → logprob: -9.509398460388184
    5. '+="' → logprob: -12.634398460388184
    6. ']+=' → logprob: -13.759398460388184
    7. '=' → logprob: -14.259398460388184
    8. '+=(' → logprob: -14.884398460388184
    9. ' +' → logprob: -15.509398460388184
    10. 's' → logprob: -15.759398460388184

Token 157: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006922461092472076
    2. ' '' → logprob: -5.131922245025635
    3. '"' → logprob: -7.506922245025635
    4. '0' → logprob: -7.881922245025635
    5. ' ' → logprob: -9.881922721862793
    6. '`' → logprob: -12.131922721862793
    7. '('' → logprob: -13.131922721862793
    8. ' "' → logprob: -13.319422721862793
    9. ' ' → logprob: -13.756922721862793
    10. '   ' → logprob: -13.881922721862793

Token 158: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7058814764022827
    2. '0' → logprob: -0.7058814764022827
    3. '"' → logprob: -4.455881595611572
    4. ' ' → logprob: -7.705881595611572
    5. ' '' → logprob: -7.830881595611572
    6. '1' → logprob: -9.205881118774414
    7. '`' → logprob: -10.518381118774414
    8. '00' → logprob: -11.768381118774414
    9. '01' → logprob: -12.143381118774414
    10. ' "' → logprob: -12.205881118774414

Token 159: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4746016561985016
    2. '')' → logprob: -0.9746016263961792
    3. ')' → logprob: -8.849601745605469
    4. ''
' → logprob: -8.849601745605469
    5. '")' → logprob: -9.474601745605469
    6. '"' → logprob: -9.599601745605469
    7. '')
' → logprob: -9.599601745605469
    8. ')'' → logprob: -11.724601745605469
    9. '')"' → logprob: -12.849601745605469
    10. '<|end|>' → logprob: -12.974601745605469

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016267085447907448
    2. 'print' → logprob: -4.1412672996521
    3. ' print' → logprob: -9.141266822814941
    4. '
' → logprob: -9.266266822814941
    5. '<|end|>' → logprob: -11.266266822814941
    6. ' ' → logprob: -11.891266822814941
    7. '       ' → logprob: -12.516266822814941
    8. '  ' → logprob: -13.016266822814941
    9. '	print' → logprob: -13.016266822814941
    10. '    
' → logprob: -14.141266822814941

Token 161: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4759811758995056
    2. '   ' → logprob: -0.9759811758995056
    3. ' print' → logprob: -6.35098123550415
    4. '
' → logprob: -9.475980758666992
    5. '       ' → logprob: -11.100980758666992
    6. '<|end|>' → logprob: -11.100980758666992
    7. '```' → logprob: -11.350980758666992
    8. '	print' → logprob: -11.350980758666992
    9. ' ' → logprob: -11.725980758666992
    10. 'for' → logprob: -12.225980758666992

Token 162: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.518582762917504e-05
    2. '(' → logprob: -9.37508487701416
    3. 's' → logprob: -16.125085830688477
    4. ' (' → logprob: -16.250085830688477
    5. '()' → logprob: -17.000085830688477
    6. '((' → logprob: -18.125085830688477
    7. '("("' → logprob: -18.250085830688477
    8. '(x' → logprob: -19.500085830688477
    9. '(
' → logprob: -19.750085830688477
    10. '(string' → logprob: -19.875085830688477

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.250001907348633
    4. ' )' → logprob: -14.750001907348633
    5. ')`' → logprob: -15.250001907348633
    6. '')' → logprob: -17.500001907348633
    7. ')")' → logprob: -17.625001907348633
    8. '")' → logprob: -17.750001907348633
    9. ')}' → logprob: -17.875001907348633
    10. '`)' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 161
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 36.02%
Précision adaptée (1ère position): 39.75%
Précision (top 10): 81.99%
================================================================================
