================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
chaine_source = input()
chaine_cible = input()

longueur_chaine = len(chaine_source)

for decalage_rotation in range(longueur_chaine):

    partie_fin = chaine_source[-decalage_rotation:]
    partie_debut = chaine_source[:-decalage_rotation]

    chaine_modifiee = partie_fin + partie_debut

    if chaine_modifiee == chaine_cible:
        print("Yes")
        exit()

print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'chaine' (ID: 68916)
  → Token d'amorce (pas de prédiction)

Token 1: '_source' (ID: 23344)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03444370627403259
    2. ''' → logprob: -3.9094436168670654
    3. ' "' → logprob: -4.4094438552856445
    4. ' ' → logprob: -7.4094438552856445
    5. '""' → logprob: -7.6594438552856445
    6. ' '' → logprob: -8.159443855285645
    7. ' ""' → logprob: -8.659443855285645
    8. '''' → logprob: -10.409443855285645
    9. '"""' → logprob: -11.034443855285645
    10. ' ''' → logprob: -11.034443855285645

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0051271384581923485
    2. ''' → logprob: -6.130126953125
    3. '('' → logprob: -7.130126953125
    4. '("("' → logprob: -7.130126953125
    5. '```' → logprob: -7.255126953125
    6. '`' → logprob: -8.255126953125
    7. '"' → logprob: -9.255126953125
    8. '(
' → logprob: -9.880126953125
    9. '()' → logprob: -9.880126953125
    10. ''(' → logprob: -10.755126953125

Token 5: 'chaine' (ID: 68916)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006011033430695534
    2. '.strip' → logprob: -6.131011009216309
    3. '+' → logprob: -6.506011009216309
    4. '=' → logprob: -7.131011009216309
    5. '_' → logprob: -7.881011009216309
    6. '.split' → logprob: -8.006011009216309
    7. '[' → logprob: -9.256011009216309
    8. '.lower' → logprob: -9.256011009216309
    9. '.upper' → logprob: -9.256011009216309
    10. '.replace' → logprob: -9.381011009216309

Token 6: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13425026834011078
    2. '_source' → logprob: -2.1342501640319824
    3. '._' → logprob: -5.884250164031982
    4. '_s' → logprob: -6.009250164031982
    5. '.' → logprob: -7.009250164031982
    6. '_.' → logprob: -7.509250164031982
    7. '[' → logprob: -8.88425064086914
    8. ' _' → logprob: -9.25925064086914
    9. '_sources' → logprob: -9.88425064086914
    10. '__' → logprob: -10.13425064086914

Token 7: 'ible' (ID: 1430)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.7583501935005188
    2. ' =' → logprob: -2.008350133895874
    3. 'omp' → logprob: -2.383350133895874
    4. '=' → logprob: -2.633350133895874
    5. 'o' → logprob: -3.508350133895874
    6. 'omme' → logprob: -3.758350133895874
    7. 'on' → logprob: -4.133350372314453
    8. 'onte' → logprob: -4.133350372314453
    9. 'op' → logprob: -4.133350372314453
    10. 'ha' → logprob: -4.258350372314453

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10835371911525726
    2. '=' → logprob: -2.608353614807129
    3. '.' → logprob: -4.233353614807129
    4. '_' → logprob: -4.733353614807129
    5. ' ' → logprob: -6.108353614807129
    6. ' +=' → logprob: -6.483353614807129
    7. '+' → logprob: -7.733353614807129
    8. '[:]' → logprob: -7.733353614807129
    9. '[' → logprob: -8.233353614807129
    10. '.append' → logprob: -8.858353614807129

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0369807481765747
    2. ' ""' → logprob: -1.4119807481765747
    3. 'input' → logprob: -1.6619807481765747
    4. ' ''' → logprob: -2.661980628967285
    5. '""' → logprob: -2.911980628967285
    6. 'chaine' → logprob: -3.411980628967285
    7. ' chaine' → logprob: -4.161980628967285
    8. ' "' → logprob: -4.161980628967285
    9. '"' → logprob: -4.411980628967285
    10. ' ' → logprob: -5.536980628967285

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00488089257851243
    2. '()' → logprob: -5.379880905151367
    3. '(
' → logprob: -9.129880905151367
    4. ')' → logprob: -10.004880905151367
    5. ' (' → logprob: -10.254880905151367
    6. '```' → logprob: -10.754880905151367
    7. '(

' → logprob: -11.629880905151367
    8. ''' → logprob: -12.004880905151367
    9. '.' → logprob: -12.254880905151367
    10. ' ' → logprob: -12.379880905151367

Token 11: 'long' (ID: 8431)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.244009330868721
    2. 'for' → logprob: -2.119009256362915
    3. 'i' → logprob: -2.744009256362915
    4. 'result' → logprob: -4.869009494781494
    5. '=' → logprob: -5.619009494781494
    6. '.' → logprob: -5.744009494781494
    7. '#' → logprob: -5.994009494781494
    8. ' if' → logprob: -6.119009494781494
    9. '[' → logprob: -6.494009494781494
    10. 'len' → logprob: -6.619009494781494

Token 12: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.05062078684568405
    2. '_' → logprob: -3.0506207942962646
    3. ' =' → logprob: -7.5506205558776855
    4. 'eur' → logprob: -7.9256205558776855
    5. 'u' → logprob: -7.9256205558776855
    6. 'ue' → logprob: -8.300621032714844
    7. '_e' → logprob: -8.800621032714844
    8. '```' → logprob: -9.925621032714844
    9. '_=' → logprob: -9.925621032714844
    10. '=' → logprob: -10.050621032714844

Token 13: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008731092675589025
    2. 's' → logprob: -7.50087308883667
    3. ' =' → logprob: -9.125873565673828
    4. '(' → logprob: -9.375873565673828
    5. '=' → logprob: -10.375873565673828
    6. '_=' → logprob: -10.500873565673828
    7. ' ' → logprob: -11.000873565673828
    8. '_space' → logprob: -11.750873565673828
    9. '_s' → logprob: -11.750873565673828
    10. '_max' → logprob: -12.500873565673828

Token 14: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.48449715971946716
    2. 'source' → logprob: -1.6094971895217896
    3. 'c' → logprob: -2.3594970703125
    4. 'comm' → logprob: -2.8594970703125
    5. 'commun' → logprob: -4.7344970703125
    6. 'com' → logprob: -5.1094970703125
    7. 'chain' → logprob: -5.7344970703125
    8. 'min' → logprob: -5.9844970703125
    9. 'max' → logprob: -6.3594970703125
    10. 'common' → logprob: -6.8594970703125

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021484773606061935
    2. ' =' → logprob: -7.252148628234863
    3. '_source' → logprob: -7.377148628234863
    4. '_=' → logprob: -7.877148628234863
    5. 's' → logprob: -8.377148628234863
    6. '_s' → logprob: -9.502148628234863
    7. '=' → logprob: -9.502148628234863
    8. ' ' → logprob: -11.002148628234863
    9. '_c' → logprob: -12.377148628234863
    10. '_)' → logprob: -12.502148628234863

Token 16: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006733487825840712
    2. 'len' → logprob: -5.006733417510986
    3. ' ' → logprob: -11.131733894348145
    4. ' int' → logprob: -12.881733894348145
    5. '(len' → logprob: -15.006733894348145
    6. '=len' → logprob: -15.256733894348145
    7. '	len' → logprob: -16.006732940673828
    8. ' ' → logprob: -16.506732940673828
    9. '[len' → logprob: -16.631732940673828
    10. ' long' → logprob: -17.256732940673828

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.404745439183898e-05
    2. '('' → logprob: -11.62503433227539
    3. '()' → logprob: -11.62503433227539
    4. '(chain' → logprob: -12.00003433227539
    5. '(
' → logprob: -12.50003433227539
    6. '(

' → logprob: -13.12503433227539
    7. ' (' → logprob: -13.75003433227539
    8. '("' → logprob: -14.12503433227539
    9. '((' → logprob: -14.75003433227539
    10. 's' → logprob: -14.75003433227539

Token 18: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0028628890868276358
    2. ' chaine' → logprob: -5.877862930297852
    3. 'cha' → logprob: -10.127862930297852
    4. ')' → logprob: -12.127862930297852
    5. 'chain' → logprob: -12.377862930297852
    6. ' ' → logprob: -12.502862930297852
    7. ' chaîne' → logprob: -13.377862930297852
    8. ' )' → logprob: -14.002862930297852
    9. 'chai' → logprob: -14.252862930297852
    10. '   ' → logprob: -15.002862930297852

Token 19: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0020058415830135345
    2. '_' → logprob: -6.2520060539245605
    3. '_s' → logprob: -9.752005577087402
    4. '_c' → logprob: -11.377005577087402
    5. '_)' → logprob: -12.002005577087402
    6. '_sources' → logprob: -14.252005577087402
    7. '_Source' → logprob: -15.002005577087402
    8. ')' → logprob: -15.752005577087402
    9. '_so' → logprob: -16.37700653076172
    10. '_SOURCE' → logprob: -16.50200653076172

Token 20: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003032881941180676
    2. ' )' → logprob: -8.125303268432617
    3. '))' → logprob: -13.625303268432617
    4. '[' → logprob: -13.875303268432617
    5. '.replace' → logprob: -14.250303268432617
    6. ')
' → logprob: -14.250303268432617
    7. ')>' → logprob: -14.750303268432617
    8. '.' → logprob: -15.000303268432617
    9. '+' → logprob: -15.125303268432617
    10. ')#' → logprob: -15.250303268432617

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.060122426599264145
    2. 'i' → logprob: -3.310122489929199
    3. 'result' → logprob: -4.435122489929199
    4. 'if' → logprob: -5.560122489929199
    5. 'diff' → logprob: -7.435122489929199
    6. 'f' → logprob: -7.435122489929199
    7. 'found' → logprob: -7.560122489929199
    8. 'count' → logprob: -7.810122489929199
    9. 'new' → logprob: -8.0601224899292
    10. 'index' → logprob: -8.0601224899292

Token 22: ' decal' (ID: 160456)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0169224850833416
    2. ' i' → logprob: -4.516922473907471
    3. '  ' → logprob: -5.766922473907471
    4. ' _' → logprob: -6.391922473907471
    5. '_' → logprob: -6.891922473907471
    6. ' ‌' → logprob: -12.141922950744629
    7. ' t' → logprob: -12.891922950744629
    8. ' e' → logprob: -12.891922950744629
    9. ' ```' → logprob: -12.891922950744629
    10. ' a' → logprob: -12.891922950744629

Token 23: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.01163986325263977
    2. 'agement' → logprob: -5.1366400718688965
    3. 'ement' → logprob: -7.0116400718688965
    4. 'agem' → logprob: -7.1366400718688965
    5. 'r' → logprob: -7.2616400718688965
    6. 'a' → logprob: -7.3866400718688965
    7. 'rement' → logprob: -7.8866400718688965
    8. 'lement' → logprob: -8.011639595031738
    9. 'e' → logprob: -8.136639595031738
    10. ' age' → logprob: -8.386639595031738

Token 24: '_rotation' (ID: 104748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3507342040538788
    2. ' ' → logprob: -1.2257342338562012
    3. 'in' → logprob: -6.725734233856201
    4. '_' → logprob: -7.600734233856201
    5. '  ' → logprob: -8.225733757019043
    6. ' i' → logprob: -9.100733757019043
    7. ' =' → logprob: -10.350733757019043
    8. ' ```' → logprob: -10.350733757019043
    9. '<|end|>' → logprob: -10.850733757019043
    10. ' ,' → logprob: -10.975733757019043

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036701520439237356
    2. ' ' → logprob: -6.2536702156066895
    3. 'in' → logprob: -6.3786702156066895
    4. '_' → logprob: -12.128669738769531
    5. 'en' → logprob: -12.128669738769531
    6. '  ' → logprob: -12.253669738769531
    7. 's' → logprob: -12.378669738769531
    8. '```' → logprob: -12.753669738769531
    9. 'de' → logprob: -13.128669738769531
    10. 'au' → logprob: -13.128669738769531

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002481008181348443
    2. 'range' → logprob: -6.002480983734131
    3. ' ' → logprob: -12.752481460571289
    4. '	range' → logprob: -13.877481460571289
    5. '(range' → logprob: -14.502481460571289
    6. ' ' → logprob: -14.752481460571289
    7. ' rang' → logprob: -16.25248146057129
    8. '```' → logprob: -16.37748146057129
    9. ')' → logprob: -16.50248146057129
    10. '   ' → logprob: -16.62748146057129

Token 27: '(long' (ID: 22019)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024774644523859024
    2. '(long' → logprob: -3.7747745513916016
    3. ' (' → logprob: -7.024774551391602
    4. '(len' → logprob: -7.524774551391602
    5. '(
' → logprob: -9.899774551391602
    6. '(length' → logprob: -10.274774551391602
    7. '(

' → logprob: -11.774774551391602
    8. '(l' → logprob: -13.399774551391602
    9. '('' → logprob: -13.899774551391602
    10. '(Long' → logprob: -14.024774551391602

Token 28: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.20537984371185303
    2. 'eur' → logprob: -1.830379843711853
    3. '(' → logprob: -3.8303799629211426
    4. 'ur' → logprob: -6.580379962921143
    5. 'uer' → logprob: -7.080379962921143
    6. 'ue' → logprob: -7.705379962921143
    7. 'r' → logprob: -8.080379486083984
    8. '_' → logprob: -8.705379486083984
    9. '(_' → logprob: -9.330379486083984
    10. 'heur' → logprob: -9.955379486083984

Token 29: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.061054359131958e-06
    2. '_)' → logprob: -12.125007629394531
    3. ')' → logprob: -13.375007629394531
    4. '(' → logprob: -15.750007629394531
    5. '_ch' → logprob: -15.875007629394531
    6. '_]' → logprob: -16.12500762939453
    7. '_,' → logprob: -16.25000762939453
    8. '_chain' → logprob: -16.37500762939453
    9. '_

' → logprob: -16.50000762939453
    10. '_de' → logprob: -16.75000762939453

Token 30: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.00028386167832650244
    2. '_' → logprob: -8.250284194946289
    3. 'cha' → logprob: -11.875284194946289
    4. 'chain' → logprob: -12.250284194946289
    5. ' chaine' → logprob: -12.500284194946289
    6. 'chine' → logprob: -13.500284194946289
    7. 'chai' → logprob: -13.625284194946289
    8. 'c' → logprob: -13.750284194946289
    9. ')' → logprob: -13.750284194946289
    10. '```' → logprob: -14.250284194946289

Token 31: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03930133953690529
    2. ' ):' → logprob: -3.2893013954162598
    3. '+' → logprob: -6.78930139541626
    4. ')' → logprob: -9.789300918579102
    5. ' +' → logprob: -10.039300918579102
    6. '):
' → logprob: -10.789300918579102
    7. ':' → logprob: -12.539300918579102
    8. ' )' → logprob: -12.914300918579102
    9. ' :' → logprob: -13.664300918579102
    10. '+:' → logprob: -13.664300918579102

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004600773099809885
    2. ' ' → logprob: -6.254601001739502
    3. '    ' → logprob: -7.129601001739502
    4. '    
' → logprob: -7.629601001739502
    5. 'chaine' → logprob: -8.254600524902344
    6. ':' → logprob: -8.504600524902344
    7. '   ' → logprob: -9.129600524902344
    8. 'a' → logprob: -9.379600524902344
    9. '<|end|>' → logprob: -9.379600524902344
    10. '  ' → logprob: -9.504600524902344

Token 33: ' partie' (ID: 22139)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13263745605945587
    2. 'chaine' → logprob: -2.7576375007629395
    3. ' rotated' → logprob: -4.3826375007629395
    4. ' chaine' → logprob: -4.6326375007629395
    5. '    ' → logprob: -4.7576375007629395
    6. ' for' → logprob: -5.2576375007629395
    7. ' decoded' → logprob: -5.7576375007629395
    8. ' shifted' → logprob: -6.0076375007629395
    9. ' ' → logprob: -6.1326375007629395
    10. 'decoded' → logprob: -6.2576375007629395

Token 34: '_fin' (ID: 95242)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.863648533821106
    2. '_' → logprob: -1.238648533821106
    3. '_source' → logprob: -1.988648533821106
    4. '_a' → logprob: -3.2386484146118164
    5. '_rot' → logprob: -3.8636484146118164
    6. ' =' → logprob: -3.8636484146118164
    7. '_rotation' → logprob: -4.113648414611816
    8. 'g' → logprob: -4.238648414611816
    9. '_de' → logprob: -4.363648414611816
    10. '1' → logprob: -4.863648414611816

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2816896140575409
    2. '=' → logprob: -1.4066896438598633
    3. '_' → logprob: -7.906689643859863
    4. '   ' → logprob: -9.781689643859863
    5. '_de' → logprob: -10.156689643859863
    6. 'de' → logprob: -10.906689643859863
    7. ' ' → logprob: -11.156689643859863
    8. 'e' → logprob: -11.781689643859863
    9. '  ' → logprob: -12.406689643859863
    10. '_rot' → logprob: -12.781689643859863

Token 36: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3145637512207031
    2. ' chaine' → logprob: -1.3145637512207031
    3. '   ' → logprob: -7.064563751220703
    4. ' chaîne' → logprob: -8.439563751220703
    5. ' ' → logprob: -8.939563751220703
    6. 'chain' → logprob: -10.189563751220703
    7. 'cha' → logprob: -11.439563751220703
    8. '  ' → logprob: -11.689563751220703
    9. 'chine' → logprob: -12.127063751220703
    10. ' chain' → logprob: -12.252063751220703

Token 37: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -2.045823566731997e-05
    2. '_c' → logprob: -11.625020027160645
    3. '_s' → logprob: -12.000020027160645
    4. 'source' → logprob: -13.125020027160645
    5. '_' → logprob: -13.500020027160645
    6. 'c' → logprob: -14.250020027160645
    7. 's' → logprob: -14.500020027160645
    8. 'Source' → logprob: -15.250020027160645
    9. '_SOURCE' → logprob: -15.875020027160645
    10. '_Source' → logprob: -16.25002098083496

Token 38: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3874896466732025
    2. '[' → logprob: -1.137489676475525
    3. 'de' → logprob: -8.012489318847656
    4. '[len' → logprob: -9.262489318847656
    5. '[d' → logprob: -9.387489318847656
    6. '(de' → logprob: -10.262489318847656
    7. '[:-' → logprob: -11.137489318847656
    8. '[:' → logprob: -11.637489318847656
    9. '-de' → logprob: -12.262489318847656
    10. '```' → logprob: -12.262489318847656

Token 39: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.26183491945266724
    2. '(de' → logprob: -1.7618348598480225
    3. '(' → logprob: -3.0118348598480225
    4. 'dec' → logprob: -5.011835098266602
    5. '(dec' → logprob: -6.636835098266602
    6. 'd' → logprob: -7.761835098266602
    7. ' (' → logprob: -8.386835098266602
    8. ')' → logprob: -8.386835098266602
    9. ']' → logprob: -8.886835098266602
    10. '1' → logprob: -9.511835098266602

Token 40: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -6.869017852295656e-06
    2. 'c' → logprob: -13.000006675720215
    3. 'al' → logprob: -13.375006675720215
    4. 'placement' → logprob: -13.625006675720215
    5. 'calc' → logprob: -14.000006675720215
    6. '1' → logprob: -15.625006675720215
    7. 'caler' → logprob: -16.12500762939453
    8. 'caling' → logprob: -16.12500762939453
    9. 'call' → logprob: -16.25000762939453
    10. '(cal' → logprob: -16.37500762939453

Token 41: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -1.8312570318812504e-05
    2. '_age' → logprob: -12.000018119812012
    3. 'agement' → logprob: -13.000018119812012
    4. ']' → logprob: -13.125018119812012
    5. 'tage' → logprob: -13.250018119812012
    6. 'lage' → logprob: -14.250018119812012
    7. 'arge' → logprob: -14.375018119812012
    8. 'agem' → logprob: -14.500018119812012
    9. ' age' → logprob: -14.625018119812012
    10. 'ag' → logprob: -14.625018119812012

Token 42: '_rotation' (ID: 104748)
  Prédit: '_rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rotation' → logprob: -0.0021123127080500126
    2. '_' → logprob: -6.25211238861084
    3. 'e' → logprob: -9.37711238861084
    4. 'rotation' → logprob: -10.75211238861084
    5. '_rot' → logprob: -11.25211238861084
    6. ' _' → logprob: -11.37711238861084
    7. 's' → logprob: -11.50211238861084
    8. '_de' → logprob: -11.50211238861084
    9. 'er' → logprob: -12.62711238861084
    10. '_r' → logprob: -12.62711238861084

Token 43: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0007543585379607975
    2. ' :]' → logprob: -7.375754356384277
    3. ':' → logprob: -9.250754356384277
    4. ' or' → logprob: -11.625754356384277
    5. ']' → logprob: -11.875754356384277
    6. ':].' → logprob: -12.625754356384277
    7. ':]

' → logprob: -12.625754356384277
    8. 'or' → logprob: -13.000754356384277
    9. ':],' → logprob: -13.000754356384277
    10. '+' → logprob: -14.000754356384277

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28454768657684326
    2. '+' → logprob: -1.9095476865768433
    3. '<|end|>' → logprob: -3.659547805786133
    4. ' ' → logprob: -4.159547805786133
    5. '    ' → logprob: -4.284547805786133
    6. ' if' → logprob: -4.659547805786133
    7. '(part' → logprob: -5.534547805786133
    8. 'if' → logprob: -5.659547805786133
    9. '  ' → logprob: -5.784547805786133
    10. 'part' → logprob: -5.909547805786133

Token 45: ' partie' (ID: 22139)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3455817699432373
    2. 'part' → logprob: -1.4705817699432373
    3. '+' → logprob: -1.5955817699432373
    4. ' ' → logprob: -1.8455817699432373
    5. '<|end|>' → logprob: -2.9705817699432373
    6. '    ' → logprob: -3.9705817699432373
    7. ')' → logprob: -4.220582008361816
    8. '  ' → logprob: -4.595582008361816
    9. '(part' → logprob: -4.845582008361816
    10. ']' → logprob: -5.220582008361816

Token 46: '_de' (ID: 5047)
  Prédit: '_source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.46521708369255066
    2. '_de' → logprob: -1.840217113494873
    3. '_' → logprob: -2.215217113494873
    4. '_g' → logprob: -3.090217113494873
    5. '_fin' → logprob: -3.215217113494873
    6. '_bas' → logprob: -5.840217113494873
    7. '_start' → logprob: -6.090217113494873
    8. '_s' → logprob: -6.215217113494873
    9. '[' → logprob: -6.215217113494873
    10. '_b' → logprob: -6.715217113494873

Token 47: 'but' (ID: 8293)
  Prédit: 'but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.010902440175414085
    2. 'part' → logprob: -4.635902404785156
    3. 'b' → logprob: -6.885902404785156
    4. 'cal' → logprob: -9.635902404785156
    5. 'par' → logprob: -11.885902404785156
    6. 'f' → logprob: -12.010902404785156
    7. 'bu' → logprob: -12.010902404785156
    8. 'bat' → logprob: -12.260902404785156
    9. 'bug' → logprob: -12.760902404785156
    10. 'c' → logprob: -12.885902404785156

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427728235721588
    2. '=' → logprob: -2.017772912979126
    3. '[' → logprob: -9.892772674560547
    4. '   ' → logprob: -11.767772674560547
    5. 'chaine' → logprob: -12.017772674560547
    6. '_' → logprob: -12.267772674560547
    7. '[:]' → logprob: -12.267772674560547
    8. ' ' → logprob: -12.392772674560547
    9. '[:' → logprob: -12.767772674560547
    10. '+' → logprob: -13.017772674560547

Token 49: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.20176587998867035
    2. ' chaine' → logprob: -1.7017658948898315
    3. ' chaîne' → logprob: -8.326766014099121
    4. 'chain' → logprob: -9.576766014099121
    5. '   ' → logprob: -11.576766014099121
    6. ' chain' → logprob: -11.701766014099121
    7. 'cha' → logprob: -11.951766014099121
    8. ' ' → logprob: -12.326766014099121
    9. '  ' → logprob: -12.326766014099121
    10. 'chine' → logprob: -13.576766014099121

Token 50: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -1.5048530030981055e-06
    2. 'source' → logprob: -14.375001907348633
    3. '_s' → logprob: -15.375001907348633
    4. '_c' → logprob: -15.500001907348633
    5. '_SOURCE' → logprob: -15.875001907348633
    6. 's' → logprob: -16.250001907348633
    7. '_' → logprob: -16.500001907348633
    8. 'Source' → logprob: -17.500001907348633
    9. '_sources' → logprob: -17.875001907348633
    10. '-source' → logprob: -18.125001907348633

Token 51: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.1862337291240692
    2. '[:' → logprob: -1.8112337589263916
    3. '[' → logprob: -5.0612335205078125
    4. ':' → logprob: -9.686233520507812
    5. '[:]' → logprob: -10.311233520507812
    6. '[-' → logprob: -10.561233520507812
    7. '[len' → logprob: -12.436233520507812
    8. ' [:' → logprob: -13.311233520507812
    9. ':-' → logprob: -14.561233520507812
    10. '0' → logprob: -14.561233520507812

Token 52: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0445127372804563e-05
    2. 'dec' → logprob: -11.75001049041748
    3. '-de' → logprob: -14.12501049041748
    4. '	de' → logprob: -14.50001049041748
    5. ' de' → logprob: -14.87501049041748
    6. '(de' → logprob: -15.62501049041748
    7. ' ' → logprob: -15.75001049041748
    8. 'd' → logprob: -15.87501049041748
    9. ' decal' → logprob: -16.000009536743164
    10. '   ' → logprob: -16.250009536743164

Token 53: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -3.273621405242011e-05
    2. 'c' → logprob: -11.625032424926758
    3. 'caler' → logprob: -12.250032424926758
    4. 'placement' → logprob: -12.375032424926758
    5. '```' → logprob: -12.500032424926758
    6. 'al' → logprob: -12.750032424926758
    7. '1' → logprob: -13.000032424926758
    8. 'calc' → logprob: -14.000032424926758
    9. '(cal' → logprob: -14.375032424926758
    10. 'cale' → logprob: -14.625032424926758

Token 54: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -2.117345684382599e-05
    2. 'ag' → logprob: -12.375020980834961
    3. 'rotation' → logprob: -12.750020980834961
    4. '_rotation' → logprob: -13.000020980834961
    5. 'arge' → logprob: -13.125020980834961
    6. 'er' → logprob: -13.750020980834961
    7. 'otation' → logprob: -13.750020980834961
    8. 'tage' → logprob: -13.875020980834961
    9. '_' → logprob: -13.875020980834961
    10. 'ation' → logprob: -14.000020980834961

Token 55: '_rotation' (ID: 104748)
  Prédit: '_rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rotation' → logprob: -0.10409626364707947
    2. 'rotation' → logprob: -2.3540961742401123
    3. 'otation' → logprob: -5.729096412658691
    4. 'ration' → logprob: -7.479096412658691
    5. 'ation' → logprob: -10.479096412658691
    6. '_de' → logprob: -11.854096412658691
    7. '_rot' → logprob: -11.854096412658691
    8. 'de' → logprob: -11.979096412658691
    9. 'rot' → logprob: -12.604096412658691
    10. '_' → logprob: -13.104096412658691

Token 56: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039647609810344875
    2. ')' → logprob: -7.875396251678467
    3. ']
' → logprob: -11.625396728515625
    4. '   ' → logprob: -13.000396728515625
    5. ' ]' → logprob: -13.125396728515625
    6. '']' → logprob: -14.125396728515625
    7. '}' → logprob: -14.250396728515625
    8. '])' → logprob: -14.375396728515625
    9. ')]' → logprob: -15.125396728515625
    10. ']

' → logprob: -15.500396728515625

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06605483591556549
    2. ')' → logprob: -3.5660548210144043
    3. '+' → logprob: -4.691054821014404
    4. '[' → logprob: -4.816054821014404
    5. ' if' → logprob: -5.191054821014404
    6. ':' → logprob: -5.441054821014404
    7. ' ' → logprob: -6.191054821014404
    8. ']' → logprob: -6.441054821014404
    9. '  ' → logprob: -7.191054821014404
    10. '...' → logprob: -7.691054821014404

Token 58: ' chaine' (ID: 192094)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021681318059563637
    2. ')' → logprob: -5.146681308746338
    3. ' ' → logprob: -5.646681308746338
    4. '+' → logprob: -5.646681308746338
    5. 'print' → logprob: -5.646681308746338
    6. ' if' → logprob: -6.771681308746338
    7. 'chaine' (adapté à ' chaine') → logprob: -7.146681308746338
    8. '  ' → logprob: -7.146681308746338
    9. '    ' → logprob: -7.271681308746338
    10. '#' → logprob: -7.896681308746338

Token 59: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35866379737854004
    2. '_c' → logprob: -1.35866379737854
    3. '_source' → logprob: -3.35866379737854
    4. '_rot' → logprob: -5.233663558959961
    5. '_de' → logprob: -6.733663558959961
    6. '_s' → logprob: -7.233663558959961
    7. '_target' → logprob: -7.358663558959961
    8. '_rotation' → logprob: -7.483663558959961
    9. '_con' → logprob: -7.858663558959961
    10. '_r' → logprob: -8.608663558959961

Token 60: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.017566440626978874
    2. 'if' → logprob: -4.892566204071045
    3. 'ifiée' → logprob: -5.267566204071045
    4. '_' → logprob: -6.017566204071045
    5. 'ife' → logprob: -6.517566204071045
    6. 'e' → logprob: -7.892566204071045
    7. ' =' → logprob: -9.017566680908203
    8. '=' → logprob: -9.142566680908203
    9. '   ' → logprob: -10.017566680908203
    10. 'ee' → logprob: -10.767566680908203

Token 61: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004579176660627127
    2. '=' → logprob: -5.629579067230225
    3. ' =' → logprob: -7.879579067230225
    4. 'ée' → logprob: -8.129579544067383
    5. 'é' → logprob: -8.504579544067383
    6. '=e' → logprob: -9.629579544067383
    7. '_e' → logprob: -11.004579544067383
    8. '_' → logprob: -11.879579544067383
    9. 'es' → logprob: -12.004579544067383
    10. 'ee' → logprob: -13.254579544067383

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11846454441547394
    2. '=' → logprob: -2.243464469909668
    3. '+' → logprob: -5.368464469909668
    4. ' +=' → logprob: -7.368464469909668
    5. ' +' → logprob: -8.618464469909668
    6. '+=' → logprob: -8.868464469909668
    7. 's' → logprob: -13.118464469909668
    8. ' ==' → logprob: -13.618464469909668
    9. '<|end|>' → logprob: -13.868464469909668
    10. ' ' → logprob: -14.243464469909668

Token 63: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.000622249732259661
    2. ' partie' → logprob: -7.500622272491455
    3. ' part' → logprob: -9.875621795654297
    4. '(part' → logprob: -11.625621795654297
    5. '   ' → logprob: -12.500621795654297
    6. 'par' → logprob: -13.000621795654297
    7. ' parti' → logprob: -14.000621795654297
    8. 'chaine' → logprob: -14.375621795654297
    9. '	part' → logprob: -14.625621795654297
    10. 'party' → logprob: -15.250621795654297

Token 64: '_fin' (ID: 95242)
  Prédit: '_fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fin' → logprob: -0.055928926914930344
    2. '_de' → logprob: -3.055928945541382
    3. 'fin' → logprob: -4.930928707122803
    4. 'de' → logprob: -9.430929183959961
    5. 'Fin' → logprob: -11.930929183959961
    6. '_' → logprob: -13.930929183959961
    7. '_f' → logprob: -14.180929183959961
    8. '_dec' → logprob: -14.305929183959961
    9. '_part' → logprob: -14.430929183959961
    10. '_finish' → logprob: -14.430929183959961

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048054322600365
    2. ' +' → logprob: -4.511047840118408
    3. 'plus' → logprob: -16.51104736328125
    4. '<|end|>' → logprob: -16.63604736328125
    5. '+
' → logprob: -17.01104736328125
    6. ' plus' → logprob: -17.26104736328125
    7. '＋' → logprob: -18.13604736328125
    8. '+++' → logprob: -18.26104736328125
    9. '+xml' → logprob: -18.26104736328125
    10. '+p' → logprob: -18.38604736328125

Token 66: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0002765902318060398
    2. ' partie' → logprob: -8.250276565551758
    3. ' part' → logprob: -11.250276565551758
    4. 'par' → logprob: -14.250276565551758
    5. '   ' → logprob: -15.000276565551758
    6. 'parte' → logprob: -15.000276565551758
    7. '_part' → logprob: -15.375276565551758
    8. ' ' → logprob: -15.500276565551758
    9. '(part' → logprob: -15.500276565551758
    10. '	part' → logprob: -15.875276565551758

Token 67: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.339278580620885e-06
    2. 'de' → logprob: -13.250001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_d' → logprob: -17.875001907348633
    5. ''_' → logprob: -18.125001907348633
    6. '_fin' → logprob: -18.250001907348633
    7. '"_' → logprob: -18.625001907348633
    8. ' _' → logprob: -18.875001907348633
    9. '_part' → logprob: -19.250001907348633
    10. '```' → logprob: -19.250001907348633

Token 68: 'but' (ID: 8293)
  Prédit: 'but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.011150982230901718
    2. 'cal' → logprob: -4.63615083694458
    3. 'cut' → logprob: -6.88615083694458
    4. 'bat' → logprob: -8.261151313781738
    5. 'c' → logprob: -10.761151313781738
    6. 'bac' → logprob: -11.011151313781738
    7. 'b' → logprob: -11.136151313781738
    8. 'cad' → logprob: -11.761151313781738
    9. 'chat' → logprob: -12.136151313781738
    10. 'bout' → logprob: -12.136151313781738

Token 69: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7382360696792603
    2. '   ' → logprob: -1.1132360696792603
    3. '<|end|>' → logprob: -2.2382359504699707
    4. ' if' → logprob: -2.8632359504699707
    5. '    
' → logprob: -5.488235950469971
    6. '  ' → logprob: -5.488235950469971
    7. ':' → logprob: -5.738235950469971
    8. '
' → logprob: -5.863235950469971
    9. 'if' → logprob: -6.113235950469971
    10. '[' → logprob: -6.238235950469971

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31597498059272766
    2. ' if' → logprob: -1.5659749507904053
    3. 'if' → logprob: -3.8159749507904053
    4. ':' → logprob: -3.9409749507904053
    5. ' ' → logprob: -4.815975189208984
    6. '[' → logprob: -5.315975189208984
    7. '    
' → logprob: -6.315975189208984
    8. '    ' → logprob: -6.940975189208984
    9. '<|end|>' → logprob: -7.065975189208984
    10. '  ' → logprob: -7.190975189208984

Token 71: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08073239028453827
    2. ' if' → logprob: -3.0807323455810547
    3. '   ' → logprob: -3.4557323455810547
    4. 'If' → logprob: -11.205732345581055
    5. 'print' → logprob: -11.330732345581055
    6. ' ' → logprob: -11.455732345581055
    7. '<|end|>' → logprob: -11.455732345581055
    8. '    
' → logprob: -12.205732345581055
    9. '```' → logprob: -12.580732345581055
    10. '	if' → logprob: -12.705732345581055

Token 72: ' chaine' (ID: 192094)
  Prédit: ' chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaine' → logprob: -0.0010328111238777637
    2. 'chaine' → logprob: -7.001032829284668
    3. ' chaîne' → logprob: -9.251032829284668
    4. ' chain' → logprob: -11.376032829284668
    5. ' ' → logprob: -11.751032829284668
    6. ' ' → logprob: -13.501032829284668
    7. ' chen' → logprob: -13.751032829284668
    8. '   ' → logprob: -14.376032829284668
    9. ' len' → logprob: -15.001032829284668
    10. '    ' → logprob: -15.501032829284668

Token 73: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.219262624857947e-05
    2. '_c' → logprob: -9.750072479248047
    3. '_' → logprob: -11.500072479248047
    4. '_m' → logprob: -13.375072479248047
    5. '_modified' → logprob: -13.750072479248047
    6. ' _' → logprob: -14.750072479248047
    7. '_modifier' → logprob: -16.000072479248047
    8. '_MOD' → logprob: -16.750072479248047
    9. 'mod' → logprob: -16.875072479248047
    10. 'c' → logprob: -17.250072479248047

Token 74: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.036616746336221695
    2. 'od' → logprob: -3.411616802215576
    3. 'odie' → logprob: -6.536616802215576
    4. 'if' → logprob: -7.661616802215576
    5. 'ife' → logprob: -7.786616802215576
    6. 'ofie' → logprob: -8.161616325378418
    7. 'ifiée' → logprob: -9.536616325378418
    8. 'of' → logprob: -9.786616325378418
    9. 'icie' → logprob: -10.286616325378418
    10. 'ode' → logprob: -10.661616325378418

Token 75: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3113338351249695
    2. 'ee' → logprob: -1.4363338947296143
    3. 'ée' → logprob: -3.5613338947296143
    4. 'ed' → logprob: -6.936333656311035
    5. 'chee' → logprob: -9.311333656311035
    6. '   ' → logprob: -10.061333656311035
    7. 'dee' → logprob: -10.686333656311035
    8. 'mee' → logprob: -10.811333656311035
    9. 'ree' → logprob: -10.811333656311035
    10. '_' → logprob: -11.186333656311035

Token 76: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008637027814984322
    2. '==' → logprob: -4.758636951446533
    3. ' =' → logprob: -11.633637428283691
    4. '=' → logprob: -12.008637428283691
    5. ')' → logprob: -12.883637428283691
    6. '.startswith' → logprob: -13.758637428283691
    7. '<|end|>' → logprob: -13.883637428283691
    8. '[' → logprob: -14.258637428283691
    9. ')==' → logprob: -14.258637428283691
    10. ' ' → logprob: -14.758637428283691

Token 77: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3870106041431427
    2. ' chaine' → logprob: -1.1370105743408203
    3. ' chaîne' → logprob: -9.26201057434082
    4. ' ' → logprob: -10.88701057434082
    5. 'cha' → logprob: -11.63701057434082
    6. 'chain' → logprob: -11.76201057434082
    7. '"' → logprob: -12.88701057434082
    8. '   ' → logprob: -13.26201057434082
    9. ' ' → logprob: -13.63701057434082
    10. ''' → logprob: -14.01201057434082

Token 78: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.250007629394531
    3. '_target' → logprob: -13.000007629394531
    4. 'c' → logprob: -15.750007629394531
    5. '_source' → logprob: -17.00000762939453
    6. ' _' → logprob: -18.00000762939453
    7. ' cible' → logprob: -18.62500762939453
    8. '‌' → logprob: -18.75000762939453
    9. '__' → logprob: -19.50000762939453
    10. '-_' → logprob: -19.87500762939453

Token 79: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0022037860471755266
    2. 'a' → logprob: -6.752203941345215
    3. 'aine' → logprob: -7.502203941345215
    4. '_' → logprob: -8.627203941345215
    5. 'ib' → logprob: -9.502203941345215
    6. '_c' → logprob: -9.502203941345215
    7. 'c' → logprob: -9.752203941345215
    8. 'i' → logprob: -11.377203941345215
    9. 'ha' → logprob: -11.377203941345215
    10. 'able' → logprob: -11.502203941345215

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2007883671903983e-05
    2. ':
' → logprob: -11.375021934509277
    3. ' :' → logprob: -11.750021934509277
    4. ':return' → logprob: -13.250021934509277
    5. ':**' → logprob: -14.500021934509277
    6. '   ' → logprob: -16.625022888183594
    7. '):' → logprob: -17.250022888183594
    8. ':def' → logprob: -17.500022888183594
    9. '():' → logprob: -17.750022888183594
    10. '：' → logprob: -17.750022888183594

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005740015767514706
    2. '        
' → logprob: -8.500574111938477
    3. '
' → logprob: -8.625574111938477
    4. ':' → logprob: -9.250574111938477
    5. '   ' → logprob: -10.125574111938477
    6. '\n' → logprob: -11.375574111938477
    7. ' break' → logprob: -11.625574111938477
    8. '<|end|>' → logprob: -11.875574111938477
    9. '    
' → logprob: -12.375574111938477
    10. ':
' → logprob: -12.500574111938477

Token 82: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6685286164283752
    2. 'print' (adapté à ' print') → logprob: -1.4185285568237305
    3. ' print' → logprob: -1.4185285568237305
    4. '   ' → logprob: -5.7935285568237305
    5. ' break' → logprob: -8.41852855682373
    6. 'break' → logprob: -9.54352855682373
    7. '```' → logprob: -10.79352855682373
    8. '           ' → logprob: -11.41852855682373
    9. '	print' → logprob: -11.91852855682373
    10. '        
' → logprob: -12.29352855682373

Token 83: '("' (ID: 568)
  Prédit: '(de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.012134380638599396
    2. '(' → logprob: -5.137134552001953
    3. '("' → logprob: -5.137134552001953
    4. '('' → logprob: -8.512134552001953
    5. 'de' → logprob: -10.137134552001953
    6. '(True' → logprob: -10.637134552001953
    7. '()' → logprob: -11.512134552001953
    8. '(dec' → logprob: -11.637134552001953
    9. '("("' → logprob: -12.137134552001953
    10. '(d' → logprob: -12.387134552001953

Token 84: 'Yes' (ID: 13022)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08216750621795654
    2. 'True' → logprob: -3.207167625427246
    3. 'oui' → logprob: -4.582167625427246
    4. 'OK' → logprob: -4.707167625427246
    5. 'Oui' → logprob: -4.832167625427246
    6. 'O' → logprob: -5.957167625427246
    7. 'ok' → logprob: -6.457167625427246
    8. 'Yes' → logprob: -6.457167625427246
    9. '0' → logprob: -7.207167625427246
    10. 'YES' → logprob: -7.332167625427246

Token 85: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0019628899171948433
    2. '")
' → logprob: -6.251962661743164
    3. ')' → logprob: -10.751962661743164
    4. '!")' → logprob: -11.626962661743164
    5. '"' → logprob: -13.751962661743164
    6. '")
' → logprob: -14.376962661743164
    7. '!' → logprob: -14.376962661743164
    8. ')")' → logprob: -14.751962661743164
    9. '')' → logprob: -15.001962661743164
    10. ' ")' → logprob: -15.001962661743164

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.47495681833243e-05
    2. '   ' → logprob: -11.250024795532227
    3. '<|end|>' → logprob: -12.250024795532227
    4. '           ' → logprob: -12.750024795532227
    5. ' else' → logprob: -13.750024795532227
    6. '	' → logprob: -14.125024795532227
    7. 'else' → logprob: -14.750024795532227
    8. '```' → logprob: -15.000024795532227
    9. '        
' → logprob: -15.250024795532227
    10. '      ' → logprob: -15.500024795532227

Token 87: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020306356600485742
    2. 'break' → logprob: -9.125203132629395
    3. ' break' → logprob: -9.375203132629395
    4. '	break' → logprob: -12.750203132629395
    5. 'exit' (adapté à ' exit') → logprob: -13.250203132629395
    6. '   ' → logprob: -13.500203132629395
    7. '```' → logprob: -13.875203132629395
    8. '        
' → logprob: -14.250203132629395
    9. '           ' → logprob: -15.000203132629395
    10. '	' → logprob: -15.625203132629395

Token 88: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009774390608072281
    2. '(' → logprob: -4.634774208068848
    3. '()
' → logprob: -11.884774208068848
    4. '()`' → logprob: -13.634774208068848
    5. '_' → logprob: -13.884774208068848
    6. ' ()' → logprob: -14.009774208068848
    7. '();' → logprob: -14.009774208068848
    8. '()\' → logprob: -14.259774208068848
    9. '()]' → logprob: -14.384774208068848
    10. '()

' → logprob: -14.384774208068848

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.664371848164592e-05
    2. '```' → logprob: -11.625016212463379
    3. 'else' → logprob: -12.125016212463379
    4. '    
' → logprob: -14.000016212463379
    5. '  
' → logprob: -15.000016212463379
    6. ' print' → logprob: -15.000016212463379
    7. '   ' → logprob: -15.125016212463379
    8. '
' → logprob: -16.250017166137695
    9. 'Print' → logprob: -16.500017166137695
    10. 'prit' → logprob: -16.625017166137695

Token 90: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0964169055223465
    2. '(' → logprob: -2.59641695022583
    3. '("("' → logprob: -4.09641695022583
    4. '()' → logprob: -8.221416473388672
    5. '("")' → logprob: -8.221416473388672
    6. '("(' → logprob: -8.721416473388672
    7. '(False' → logprob: -10.846416473388672
    8. '('' → logprob: -11.221416473388672
    9. '"' → logprob: -12.721416473388672
    10. '("""' → logprob: -13.721416473388672

Token 91: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0280383548888494e-06
    2. '"No' → logprob: -14.375000953674316
    3. 'NO' → logprob: -15.625000953674316
    4. 'Non' → logprob: -16.125001907348633
    5. 'no' → logprob: -17.875001907348633
    6. ' No' → logprob: -18.500001907348633
    7. 'Yes' → logprob: -18.750001907348633
    8. '"' → logprob: -19.000001907348633
    9. 'Impossible' → logprob: -19.500001907348633
    10. 'Not' → logprob: -19.625001907348633

Token 92: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00017028623551595956
    2. ')' → logprob: -8.750170707702637
    3. ')")' → logprob: -11.375170707702637
    4. '"' → logprob: -16.12516975402832
    5. '")
' → logprob: -16.50016975402832
    6. '}")' → logprob: -16.87516975402832
    7. '```' → logprob: -17.00016975402832
    8. '')' → logprob: -17.00016975402832
    9. '!")' → logprob: -17.37516975402832
    10. '\")' → logprob: -18.12516975402832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 60.00%
Précision adaptée (1ère position): 61.11%
Précision (top 10): 81.11%
================================================================================
