================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = map(int, input().split())
a = A + B
b = A - B
c = A * B
print(max(a, b, c))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5223684310913086
    2. '+' → logprob: -2.0223684310913086
    3. ';' → logprob: -2.5223684310913086
    4. ',' → logprob: -3.0223684310913086
    5. ')' → logprob: -3.3973684310913086
    6. '.' → logprob: -3.3973684310913086
    7. 'C' → logprob: -3.7723684310913086
    8. '<|end|>' → logprob: -4.022368431091309
    9. '[' → logprob: -4.147368431091309
    10. ':' → logprob: -4.772368431091309

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7534252405166626
    2. '0' → logprob: -1.1284252405166626
    3. '1' → logprob: -2.378425121307373
    4. 'input' → logprob: -3.878425121307373
    5. '[]' → logprob: -3.878425121307373
    6. '10' → logprob: -4.253425121307373
    7. ' B' → logprob: -4.503425121307373
    8. 'B' → logprob: -4.878425121307373
    9. '[' → logprob: -5.003425121307373
    10. '5' → logprob: -5.128425121307373

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04745231196284294
    2. '(lambda' → logprob: -3.297452211380005
    3. '<|end|>' → logprob: -5.172452449798584
    4. '```' → logprob: -7.172452449798584
    5. '(user' → logprob: -7.922452449798584
    6. '(int' → logprob: -7.922452449798584
    7. '(token' → logprob: -8.547451972961426
    8. '<|end|>' → logprob: -8.922451972961426
    9. '()' → logprob: -9.047451972961426
    10. '(func' → logprob: -9.047451972961426

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1315252184867859
    2. ')' → logprob: -2.5065252780914307
    3. '(' → logprob: -3.3815252780914307
    4. 'input' → logprob: -5.506525039672852
    5. '```' → logprob: -6.631525039672852
    6. ',' → logprob: -7.631525039672852
    7. '`)' → logprob: -8.256525039672852
    8. '`' → logprob: -8.756525039672852
    9. ',input' → logprob: -8.756525039672852
    10. '(user' → logprob: -8.881525039672852

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16025255620479584
    2. ' input' → logprob: -1.910252571105957
    3. '(input' → logprob: -10.660252571105957
    4. ')' → logprob: -13.160252571105957
    5. ' ' → logprob: -14.035252571105957
    6. '=input' → logprob: -14.285252571105957
    7. ',input' → logprob: -14.285252571105957
    8. '<input' → logprob: -15.035252571105957
    9. '	input' → logprob: -15.160252571105957
    10. '```' → logprob: -15.535252571105957

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7243280410766602
    2. '()' → logprob: -0.9743280410766602
    3. '(' → logprob: -2.59932804107666
    4. ')' → logprob: -3.09932804107666
    5. '());' → logprob: -5.72432804107666
    6. '(()' → logprob: -5.84932804107666
    7. '`()' → logprob: -5.97432804107666
    8. '().' → logprob: -6.47432804107666
    9. '('' → logprob: -6.59932804107666
    10. '(""))' → logprob: -6.97432804107666

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006645413814112544
    2. 'strip' → logprob: -7.375664710998535
    3. ')' → logprob: -10.875664710998535
    4. ' split' → logprob: -11.125664710998535
    5. 'rstrip' → logprob: -12.500664710998535
    6. '(split' → logprob: -15.750664710998535
    7. 'read' → logprob: -15.750664710998535
    8. 'spl' → logprob: -16.37566375732422
    9. 'replace' → logprob: -16.37566375732422
    10. 'startswith' → logprob: -16.50066375732422

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032022736966609955
    2. '))' → logprob: -3.782022714614868
    3. '())' → logprob: -4.782022953033447
    4. '()' → logprob: -8.407022476196289
    5. '()))' → logprob: -10.032022476196289
    6. '`)' → logprob: -10.032022476196289
    7. '(' → logprob: -11.032022476196289
    8. ')`' → logprob: -11.532022476196289
    9. ')))' → logprob: -12.532022476196289
    10. '),' → logprob: -12.782022476196289

Token 11: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.273774653673172
    2. '#' → logprob: -2.0237746238708496
    3. '*' → logprob: -3.0237746238708496
    4. '\n' → logprob: -4.52377462387085
    5. 'if' → logprob: -4.64877462387085
    6. '+
' → logprob: -4.89877462387085
    7. '
' → logprob: -5.64877462387085
    8. ',' → logprob: -5.64877462387085
    9. ')' → logprob: -6.02377462387085
    10. ':' → logprob: -6.02377462387085

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2894256114959717
    2. ',' → logprob: -1.5394256114959717
    3. '=' → logprob: -1.6644256114959717
    4. '%' → logprob: -2.0394256114959717
    5. '+' → logprob: -2.7894256114959717
    6. '_' → logprob: -4.039425849914551
    7. 'rray' → logprob: -4.164425849914551
    8. 'dd' → logprob: -4.539425849914551
    9. ')' → logprob: -4.664425849914551
    10. ' +=' → logprob: -4.664425849914551

Token 13: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5478810667991638
    2. 'B' → logprob: -1.7978811264038086
    3. ' A' → logprob: -2.2978811264038086
    4. 'int' → logprob: -3.1728811264038086
    5. '[]' → logprob: -3.2978811264038086
    6. ' B' → logprob: -3.9228811264038086
    7. '0' → logprob: -4.172881126403809
    8. 'a' → logprob: -5.047881126403809
    9. 'list' → logprob: -5.047881126403809
    10. 'b' → logprob: -5.547881126403809

Token 14: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031144127249717712
    2. ' +' → logprob: -4.906144142150879
    3. ' ' → logprob: -5.156144142150879
    4. ')' → logprob: -5.531144142150879
    5. '%' → logprob: -5.906144142150879
    6. '_' → logprob: -6.156144142150879
    7. '<|end|>' → logprob: -6.281144142150879
    8. '>' → logprob: -6.531144142150879
    9. '-' → logprob: -6.656144142150879
    10. '*' → logprob: -6.656144142150879

Token 15: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6326746344566345
    2. ' B' → logprob: -0.7576746344566345
    3. ' ' → logprob: -9.632674217224121
    4. '1' → logprob: -11.882674217224121
    5. 'b' → logprob: -13.507674217224121
    6. '	B' → logprob: -15.007674217224121
    7. ' ' → logprob: -15.132674217224121
    8. '  ' → logprob: -15.382674217224121
    9. 'a' → logprob: -15.632674217224121
    10. '   ' → logprob: -15.882674217224121

Token 16: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8622006177902222
    2. '+' → logprob: -1.3622006177902222
    3. '<|end|>' → logprob: -2.1122007369995117
    4. '%' → logprob: -2.8622007369995117
    5. '\n' → logprob: -3.6122007369995117
    6. '
' → logprob: -3.8622007369995117
    7. 'a' → logprob: -3.9872007369995117
    8. '\' → logprob: -4.237200736999512
    9. '#' → logprob: -4.237200736999512
    10. '```' → logprob: -4.362200736999512

Token 17: 'b' (ID: 65)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2983862161636353
    2. '<|end|>' → logprob: -1.5483862161636353
    3. '\n' → logprob: -1.9233862161636353
    4. '+' → logprob: -1.9233862161636353
    5. '%' → logprob: -3.4233860969543457
    6. '>' → logprob: -3.4233860969543457
    7. 'print' → logprob: -3.5483860969543457
    8. '**' → logprob: -3.6733860969543457
    9. '\' → logprob: -3.9233860969543457
    10. ' ' → logprob: -4.173386096954346

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008466825820505619
    2. '=' → logprob: -5.133466720581055
    3. '**' → logprob: -7.258466720581055
    4. ' +' → logprob: -7.758466720581055
    5. ' *' → logprob: -8.008466720581055
    6. '*' → logprob: -8.008466720581055
    7. '_' → logprob: -8.883466720581055
    8. ' ' → logprob: -9.133466720581055
    9. ',' → logprob: -9.258466720581055
    10. '+' → logprob: -9.633466720581055

Token 19: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2925907075405121
    2. ' A' → logprob: -1.5425907373428345
    3. 'a' → logprob: -4.417590618133545
    4. 'max' → logprob: -5.042590618133545
    5. 'B' → logprob: -5.667590618133545
    6. ' ' → logprob: -5.792590618133545
    7. 'abs' → logprob: -5.917590618133545
    8. ' max' → logprob: -6.042590618133545
    9. ' abs' → logprob: -6.292590618133545
    10. ' B' → logprob: -6.417590618133545

Token 20: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5088046193122864
    2. '+' → logprob: -1.3838045597076416
    3. ' -' → logprob: -2.3838045597076416
    4. '-' → logprob: -3.2588045597076416
    5. '*' → logprob: -4.758804798126221
    6. '<|end|>' → logprob: -5.633804798126221
    7. ' *' → logprob: -6.258804798126221
    8. ')' → logprob: -7.133804798126221
    9. ' ' → logprob: -7.508804798126221
    10. '_' → logprob: -7.633804798126221

Token 21: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.38688960671424866
    2. 'B' → logprob: -1.1368895769119263
    3. ' ' → logprob: -11.011889457702637
    4. '<|end|>' → logprob: -13.261889457702637
    5. 'b' → logprob: -16.386890411376953
    6. '>B' → logprob: -16.511890411376953
    7. '>' → logprob: -16.761890411376953
    8. ' ' → logprob: -17.261890411376953
    9. '	B' → logprob: -17.386890411376953
    10. '<|end|>' → logprob: -18.136890411376953

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29825177788734436
    2. '<|end|>' → logprob: -2.0482518672943115
    3. 'c' → logprob: -3.0482518672943115
    4. '\n' → logprob: -3.1732518672943115
    5. '```' → logprob: -3.9232518672943115
    6. '\' → logprob: -5.298251628875732
    7. 'a' → logprob: -6.298251628875732
    8. '*' → logprob: -6.423251628875732
    9. '#' → logprob: -6.548251628875732
    10. ' ' → logprob: -6.923251628875732

Token 23: 'c' (ID: 66)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2383846938610077
    2. 'c' → logprob: -1.86338472366333
    3. '
' → logprob: -3.11338472366333
    4. 'if' → logprob: -4.86338472366333
    5. '<|end|>' → logprob: -6.23838472366333
    6. '\n' → logprob: -7.11338472366333
    7. '```' → logprob: -7.36338472366333
    8. 'result' → logprob: -7.48838472366333
    9. 'n' → logprob: -9.113384246826172
    10. ' print' → logprob: -9.238384246826172

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02356397919356823
    2. '=' → logprob: -3.773563861846924
    3. '_' → logprob: -8.273564338684082
    4. '**' → logprob: -11.148564338684082
    5. '+' → logprob: -11.273564338684082
    6. ' +' → logprob: -11.523564338684082
    7. ' +=' → logprob: -12.023564338684082
    8. ',' → logprob: -12.773564338684082
    9. '*' → logprob: -12.773564338684082
    10. 'a' → logprob: -12.898564338684082

Token 25: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3494845926761627
    2. ' A' → logprob: -1.2244845628738403
    3. 'B' → logprob: -7.974484443664551
    4. ' B' → logprob: -8.84948444366455
    5. 'abs' → logprob: -8.84948444366455
    6. ' abs' → logprob: -9.47448444366455
    7. 'a' → logprob: -9.59948444366455
    8. '2' → logprob: -9.72448444366455
    9. ' ' → logprob: -9.72448444366455
    10. ' max' → logprob: -10.72448444366455

Token 26: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08353321999311447
    2. ' *' → logprob: -3.20853328704834
    3. '+' → logprob: -4.20853328704834
    4. '-' → logprob: -4.70853328704834
    5. ' -' → logprob: -5.20853328704834
    6. ' +' → logprob: -5.33353328704834
    7. '**' → logprob: -5.45853328704834
    8. '%' → logprob: -8.33353328704834
    9. '^' → logprob: -8.33353328704834
    10. '2' → logprob: -8.58353328704834

Token 27: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20182815194129944
    2. ' B' → logprob: -1.701828122138977
    3. ' ' → logprob: -7.8268280029296875
    4. '<|end|>' → logprob: -11.326828002929688
    5. '  ' → logprob: -13.576828002929688
    6. 'b' → logprob: -14.201828002929688
    7. ' ' → logprob: -14.951828002929688
    8. '_B' → logprob: -15.076828002929688
    9. '<|end|>' → logprob: -15.326828002929688
    10. '	B' → logprob: -15.451828002929688

Token 28: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0379975326359272
    2. 'if' → logprob: -4.412997722625732
    3. 'print' → logprob: -4.662997722625732
    4. '
' → logprob: -4.912997722625732
    5. '\n' → logprob: -5.537997722625732
    6. '<|end|>' → logprob: -7.037997722625732
    7. '\' → logprob: -7.162997722625732
    8. '#' → logprob: -7.412997722625732
    9. '```' → logprob: -7.912997722625732
    10. 'n' → logprob: -8.287997245788574

Token 29: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26483651995658875
    2. 'd' → logprob: -1.5148365497589111
    3. '
' → logprob: -4.514836311340332
    4. '<|end|>' → logprob: -7.014836311340332
    5. ' d' → logprob: -8.514836311340332
    6. ' print' → logprob: -9.014836311340332
    7. '```' → logprob: -9.014836311340332
    8. '#' → logprob: -9.014836311340332
    9. 'if' → logprob: -9.264836311340332
    10. '\n' → logprob: -9.514836311340332

Token 30: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029795613139867783
    2. '(a' → logprob: -3.5297956466674805
    3. '((' → logprob: -10.65479564666748
    4. '()' → logprob: -11.90479564666748
    5. '(A' → logprob: -11.90479564666748
    6. '('' → logprob: -12.02979564666748
    7. '("("' → logprob: -14.40479564666748
    8. '(max' → logprob: -15.15479564666748
    9. '(c' → logprob: -15.15479564666748
    10. '(`' → logprob: -15.52979564666748

Token 31: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011066090315580368
    2. '(' → logprob: -4.51106595993042
    3. '(A' → logprob: -11.761066436767578
    4. '()' → logprob: -11.886066436767578
    5. '(abs' → logprob: -13.761066436767578
    6. '([' → logprob: -14.261066436767578
    7. '((' → logprob: -14.386066436767578
    8. 'a' → logprob: -15.261066436767578
    9. '(
' → logprob: -15.386066436767578
    10. '(s' → logprob: -15.386066436767578

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022306622937321663
    2. ')' → logprob: -4.147306442260742
    3. ',b' → logprob: -5.647306442260742
    4. ' ,' → logprob: -6.272306442260742
    5. '))' → logprob: -7.522306442260742
    6. ',a' → logprob: -9.147306442260742
    7. ',c' → logprob: -9.772306442260742
    8. ',)' → logprob: -10.647306442260742
    9. '<|end|>' → logprob: -10.647306442260742
    10. '),' → logprob: -11.272306442260742

Token 33: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01610100269317627
    2. ' b' → logprob: -4.141100883483887
    3. 'c' → logprob: -9.891100883483887
    4. 'a' → logprob: -11.766100883483887
    5. ' c' → logprob: -12.391100883483887
    6. 'max' → logprob: -13.891100883483887
    7. ' ' → logprob: -13.891100883483887
    8. '0' → logprob: -14.016100883483887
    9. ',' → logprob: -14.516100883483887
    10. ',b' → logprob: -15.266100883483887

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15464799106121063
    2. '))' → logprob: -2.1546480655670166
    3. ')' → logprob: -3.6546480655670166
    4. ' ,' → logprob: -7.1546478271484375
    5. ',c' → logprob: -8.154647827148438
    6. '),' → logprob: -9.154647827148438
    7. ')))' → logprob: -9.154647827148438
    8. ' ))' → logprob: -9.404647827148438
    9. ')c' → logprob: -10.154647827148438
    10. 'c' → logprob: -10.904647827148438

Token 35: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018150178715586662
    2. ' c' → logprob: -4.018150329589844
    3. ')c' → logprob: -16.393150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '	c' → logprob: -17.143150329589844
    6. ')' → logprob: -17.893150329589844
    7. ',c' → logprob: -18.643150329589844
    8. '(c' → logprob: -18.768150329589844
    9. '0' → logprob: -19.143150329589844
    10. ',' → logprob: -19.143150329589844

Token 36: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759450793266296
    2. '))' → logprob: -0.8259450793266296
    3. ')))' → logprob: -12.200944900512695
    4. '),' → logprob: -15.325944900512695
    5. ')}' → logprob: -16.825944900512695
    6. ' )' → logprob: -16.825944900512695
    7. ' ))' → logprob: -16.950944900512695
    8. ')
' → logprob: -17.200944900512695
    9. ',' → logprob: -17.450944900512695
    10. '))
' → logprob: -17.450944900512695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 29.41%
Précision adaptée (1ère position): 29.41%
Précision (top 10): 85.29%
================================================================================
