================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import ceil

def main():
    H,N = map(int,input().split())
    A = list(map(int,input().split()))
    if sum(A) >= H:
        print("Yes")
    else:
        print("No")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ceil' (ID: 35964)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.649153470993042
    2. 'sqrt' → logprob: -0.774153470993042
    3. ' pi' → logprob: -5.024153709411621
    4. 'pow' → logprob: -5.649153709411621
    5. 'sin' → logprob: -6.149153709411621
    6. 'pi' → logprob: -6.524153709411621
    7. ' sin' → logprob: -6.649153709411621
    8. ' ceil' → logprob: -7.649153709411621
    9. 'ceil' → logprob: -8.399153709411621
    10. ' pow' → logprob: -8.399153709411621

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008787082624621689
    2. '\(' → logprob: -7.125878810882568
    3. '(
' → logprob: -10.25087833404541
    4. '\' → logprob: -11.50087833404541
    5. ',' → logprob: -12.37587833404541
    6. '.' → logprob: -12.50087833404541
    7. '\n' → logprob: -12.62587833404541
    8. 'def' → logprob: -12.87587833404541
    9. ' ' → logprob: -13.00087833404541
    10. ' (' → logprob: -13.00087833404541

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018665947020053864
    2. '(
' → logprob: -4.143665790557861
    3. '\(' → logprob: -7.268665790557861
    4. '\' → logprob: -7.768665790557861
    5. 'd' → logprob: -8.14366626739502
    6. '\n' → logprob: -8.26866626739502
    7. 'def' → logprob: -8.51866626739502
    8. '`' → logprob: -8.76866626739502
    9. 'a' → logprob: -9.14366626739502
    10. '
' → logprob: -9.39366626739502

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35525697469711304
    2. ' ceil' → logprob: -1.3552570343017578
    3. ' space' → logprob: -3.980257034301758
    4. ' calculate' → logprob: -4.230257034301758
    5. '_' → logprob: -5.855257034301758
    6. ' divide' → logprob: -6.730257034301758
    7. ' max' → logprob: -6.980257034301758
    8. ' ' → logprob: -7.355257034301758
    9. ' factorial' → logprob: -7.355257034301758
    10. ' my' → logprob: -8.605257034301758

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002734620589762926
    2. '():' → logprob: -6.627734661102295
    3. ':' → logprob: -7.252734661102295
    4. '(:' → logprob: -8.127734184265137
    5. '```' → logprob: -9.002734184265137
    6. '):' → logprob: -9.502734184265137
    7. '(
' → logprob: -9.627734184265137
    8. ' (' → logprob: -10.377734184265137
    9. ')' → logprob: -11.127734184265137
    10. '(":' → logprob: -11.627734184265137

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014889581128954887
    2. ' ' → logprob: -5.014889717102051
    3. '(' → logprob: -5.889889717102051
    4. '\' → logprob: -6.764889717102051
    5. '    ' → logprob: -6.764889717102051
    6. '    
' → logprob: -6.889889717102051
    7. 'print' → logprob: -7.889889717102051
    8. '[' → logprob: -8.51488971710205
    9. '```' → logprob: -8.51488971710205
    10. '  ' → logprob: -8.76488971710205

Token 9: ' H' (ID: 487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043882861733436584
    2. '   ' → logprob: -4.918882846832275
    3. 'total' → logprob: -4.918882846832275
    4. 'x' → logprob: -5.293882846832275
    5. ' n' → logprob: -5.793882846832275
    6. 'num' → logprob: -6.043882846832275
    7. 'rows' → logprob: -6.168882846832275
    8. 'print' → logprob: -6.293882846832275
    9. 'max' → logprob: -6.543882846832275
    10. ' total' → logprob: -6.543882846832275

Token 10: ',N' (ID: 49539)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0980981588363647
    2. ' =' → logprob: -1.4730981588363647
    3. ',' → logprob: -2.0980982780456543
    4. 'eight' → logprob: -2.2230982780456543
    5. '=' → logprob: -2.7230982780456543
    6. '   ' → logprob: -3.0980982780456543
    7. 'elp' → logprob: -4.098098278045654
    8. ' ' → logprob: -4.473098278045654
    9. 'E' → logprob: -4.598098278045654
    10. '    ' → logprob: -4.848098278045654

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12774361670017242
    2. '=' → logprob: -2.127743721008301
    3. ' ' → logprob: -8.1277437210083
    4. ',' → logprob: -9.0027437210083
    5. '  ' → logprob: -9.5027437210083
    6. ' ,' → logprob: -9.7527437210083
    7. '    ' → logprob: -9.7527437210083
    8. ')' → logprob: -9.8777437210083
    9. '   ' → logprob: -10.3777437210083
    10. ' >' → logprob: -10.7527437210083

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01581544801592827
    2. 'map' → logprob: -4.265815258026123
    3. ' list' → logprob: -6.515815258026123
    4. ' [' → logprob: -9.765815734863281
    5. ' ' → logprob: -10.265815734863281
    6. ' input' → logprob: -10.265815734863281
    7. 'list' → logprob: -10.515815734863281
    8. '[' → logprob: -12.140815734863281
    9. '   ' → logprob: -12.890815734863281
    10. 'input' → logprob: -13.015815734863281

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.695576548576355
    2. '(int' → logprob: -0.695576548576355
    3. '(input' → logprob: -6.4455766677856445
    4. '(str' → logprob: -7.4455766677856445
    5. '(lambda' → logprob: -8.570576667785645
    6. '(
' → logprob: -11.195576667785645
    7. 'int' → logprob: -11.820576667785645
    8. '(in' → logprob: -11.820576667785645
    9. '(eval' → logprob: -11.820576667785645
    10. '(list' → logprob: -11.945576667785645

Token 14: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042500514537096024
    2. ',input' → logprob: -3.4175004959106445
    3. '(input' → logprob: -4.9175004959106445
    4. '(' → logprob: -7.0425004959106445
    5. 'input' → logprob: -7.5425004959106445
    6. ' ,' → logprob: -9.917500495910645
    7. ',int' → logprob: -11.042500495910645
    8. ')' → logprob: -11.917500495910645
    9. ' input' → logprob: -11.917500495910645
    10. ',float' → logprob: -13.042500495910645

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022968940436840057
    2. '())' → logprob: -4.022968769073486
    3. '()' → logprob: -5.397968769073486
    4. ')' → logprob: -8.397969245910645
    5. '(' → logprob: -10.647969245910645
    6. '());' → logprob: -11.147969245910645
    7. '()))' → logprob: -12.522969245910645
    8. '()>' → logprob: -12.772969245910645
    9. '();)' → logprob: -13.397969245910645
    10. '();' → logprob: -13.772969245910645

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.504040356958285e-05
    2. 'strip' → logprob: -9.875064849853516
    3. 'rstrip' → logprob: -11.500064849853516
    4. ')' → logprob: -13.000064849853516
    5. ' split' → logprob: -14.250064849853516
    6. '(split' → logprob: -15.375064849853516
    7. 'spl' → logprob: -16.625064849853516
    8. 'read' → logprob: -16.875064849853516
    9. 'plit' → logprob: -17.000064849853516
    10. '_split' → logprob: -17.500064849853516

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034339699894189835
    2. '))' → logprob: -3.409339666366577
    3. '())' → logprob: -7.659339904785156
    4. '()' → logprob: -8.659339904785156
    5. ')))' → logprob: -10.909339904785156
    6. '()))' → logprob: -11.409339904785156
    7. '),' → logprob: -12.034339904785156
    8. '(' → logprob: -12.534339904785156
    9. ' )' → logprob: -13.159339904785156
    10. '`)' → logprob: -13.784339904785156

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4084722399711609
    2. ')' → logprob: -1.4084722995758057
    3. ' ' → logprob: -2.6584722995758057
    4. ' )' → logprob: -4.658472061157227
    5. '<|end|>' → logprob: -6.533472061157227
    6. '    ' → logprob: -6.658472061157227
    7. '    
' → logprob: -6.783472061157227
    8. ':' → logprob: -6.908472061157227
    9. '  ' → logprob: -7.033472061157227
    10. ' 
' → logprob: -7.283472061157227

Token 19: ' A' (ID: 355)
  Prédit: ' damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' damage' → logprob: -1.1197606325149536
    2. ' ' → logprob: -1.6197606325149536
    3. 'damage' → logprob: -2.244760513305664
    4. '   ' → logprob: -2.994760513305664
    5. ' x' → logprob: -3.119760513305664
    6. ' A' → logprob: -3.619760513305664
    7. ' a' → logprob: -3.744760513305664
    8. ' total' → logprob: -3.869760513305664
    9. 'd' → logprob: -3.994760513305664
    10. ' required' → logprob: -4.119760513305664

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4154074490070343
    2. '=' → logprob: -1.540407419204712
    3. ')' → logprob: -3.040407419204712
    4. '[' → logprob: -3.290407419204712
    5. '[]' → logprob: -4.290407657623291
    6. '=[]' → logprob: -4.790407657623291
    7. ' ' → logprob: -5.290407657623291
    8. '<|end|>' → logprob: -6.290407657623291
    9. '_' → logprob: -6.415407657623291
    10. '   ' → logprob: -6.540407657623291

Token 21: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3919171988964081
    2. 'list' → logprob: -1.1419172286987305
    3. ' [' → logprob: -5.6419172286987305
    4. '[]' → logprob: -7.8919172286987305
    5. '[list' → logprob: -7.8919172286987305
    6. '[' → logprob: -8.14191722869873
    7. ' []' → logprob: -8.76691722869873
    8. ' ' → logprob: -9.51691722869873
    9. ' map' → logprob: -9.51691722869873
    10. 'map' → logprob: -9.51691722869873

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442438643425703
    2. '(int' → logprob: -4.5144243240356445
    3. '(input' → logprob: -6.8894243240356445
    4. '()' → logprob: -7.2644243240356445
    5. '(range' → logprob: -7.6394243240356445
    6. '(map' → logprob: -8.014424324035645
    7. '(eval' → logprob: -9.389424324035645
    8. '(str' → logprob: -9.639424324035645
    9. '<|end|>' → logprob: -9.764424324035645
    10. '("("' → logprob: -9.764424324035645

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019018957391381264
    2. 'int' → logprob: -9.125189781188965
    3. ',int' → logprob: -10.500189781188965
    4. '[int' → logprob: -10.625189781188965
    5. '<int' → logprob: -11.750189781188965
    6. '=int' → logprob: -11.750189781188965
    7. '(' → logprob: -11.750189781188965
    8. '```' → logprob: -13.125189781188965
    9. ')' → logprob: -13.750189781188965
    10. ']int' → logprob: -14.000189781188965

Token 24: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.004165894817560911
    2. ',' → logprob: -5.879166126251221
    3. '(input' → logprob: -6.629166126251221
    4. ',int' → logprob: -11.004165649414062
    5. ' ,' → logprob: -11.129165649414062
    6. '(' → logprob: -12.504165649414062
    7. 'input' → logprob: -13.254165649414062
    8. ',(' → logprob: -14.129165649414062
    9. ',float' → logprob: -15.754165649414062
    10. '(),' → logprob: -16.004165649414062

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9027791495318525e-05
    2. '()' → logprob: -11.250019073486328
    3. '(' → logprob: -12.750019073486328
    4. ' ().' → logprob: -13.250019073486328
    5. ')' → logprob: -14.750019073486328
    6. '.' → logprob: -15.625019073486328
    7. '(.' → logprob: -15.750019073486328
    8. '()))' → logprob: -16.250019073486328
    9. '('').' → logprob: -16.250019073486328
    10. '()-' → logprob: -17.125019073486328

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ' split' → logprob: -13.750001907348633
    3. '(split' → logprob: -15.250001907348633
    4. 'spl' → logprob: -17.125001907348633
    5. 'strip' → logprob: -17.750001907348633
    6. 'rstrip' → logprob: -17.875001907348633
    7. '.split' → logprob: -19.125001907348633
    8. 'plit' → logprob: -19.375001907348633
    9. '().' → logprob: -19.750001907348633
    10. 's' → logprob: -20.000001907348633

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16959187388420105
    2. '())' → logprob: -2.4195919036865234
    3. '))' → logprob: -3.0445919036865234
    4. '()' → logprob: -4.669591903686523
    5. ')' → logprob: -5.044591903686523
    6. '(' → logprob: -5.669591903686523
    7. '()))
' → logprob: -10.419591903686523
    8. '())))' → logprob: -10.544591903686523
    9. '()));' → logprob: -10.794591903686523
    10. ')))' → logprob: -10.919591903686523

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.356068879365921
    2. ' total' → logprob: -2.2310688495635986
    3. 'damage' → logprob: -2.6060688495635986
    4. ' damage' → logprob: -2.7310688495635986
    5. 'total' → logprob: -3.6060688495635986
    6. ' if' → logprob: -5.481069087982178
    7. ' sum' → logprob: -5.606069087982178
    8. 'sum' → logprob: -5.981069087982178
    9. 'result' → logprob: -6.106069087982178
    10. ')' → logprob: -6.231069087982178

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5066180229187012
    2. 'damage' → logprob: -2.131618022918701
    3. ' total' → logprob: -2.381618022918701
    4. ' damage' → logprob: -2.381618022918701
    5. 'total' → logprob: -3.131618022918701
    6. ' sum' → logprob: -4.506618022918701
    7. 'sum' → logprob: -4.756618022918701
    8. ' if' → logprob: -5.631618022918701
    9. ' hp' → logprob: -5.756618022918701
    10. ' ' → logprob: -5.756618022918701

Token 30: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8724976778030396
    2. ' sum' → logprob: -1.1224976778030396
    3. ' ceil' → logprob: -1.6224976778030396
    4. ' H' → logprob: -2.99749755859375
    5. 'sum' → logprob: -5.99749755859375
    6. ' len' → logprob: -6.37249755859375
    7. ' max' → logprob: -6.49749755859375
    8. ' A' → logprob: -6.49749755859375
    9. ' N' → logprob: -7.24749755859375
    10. '  ' → logprob: -7.49749755859375

Token 31: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005238260608166456
    2. '(' → logprob: -5.255238056182861
    3. ' (' → logprob: -13.75523853302002
    4. '(a' → logprob: -13.88023853302002
    5. '(N' → logprob: -14.25523853302002
    6. '(I' → logprob: -15.00523853302002
    7. 'A' → logprob: -15.38023853302002
    8. '(H' → logprob: -15.50523853302002
    9. ')' → logprob: -15.88023853302002
    10. '()' → logprob: -16.005237579345703

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05301545187830925
    2. '>=' → logprob: -3.5530154705047607
    3. ')>=' → logprob: -3.8030154705047607
    4. ' >=' → logprob: -7.803015232086182
    5. ' )' → logprob: -9.55301570892334
    6. '>' → logprob: -9.67801570892334
    7. ']>=' → logprob: -9.80301570892334
    8. ')<' → logprob: -10.42801570892334
    9. '[' → logprob: -10.80301570892334
    10. '<' → logprob: -11.17801570892334

Token 33: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.602304995059967
    2. '>=' → logprob: -0.852304995059967
    3. '<' → logprob: -4.227304935455322
    4. ' <' → logprob: -4.602304935455322
    5. '>' → logprob: -7.102304935455322
    6. ' ' → logprob: -8.60230541229248
    7. ')>=' → logprob: -8.72730541229248
    8. ']>=' → logprob: -9.22730541229248
    9. ')' → logprob: -9.60230541229248
    10. '[' → logprob: -11.22730541229248

Token 34: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012511532753705978
    2. ' H' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.387511253356934
    4. '	H' → logprob: -15.512511253356934
    5. '  ' → logprob: -17.01251220703125
    6. '<H' → logprob: -17.01251220703125
    7. '<|end|>' → logprob: -17.13751220703125
    8. '   ' → logprob: -17.38751220703125
    9. ' ' → logprob: -17.63751220703125
    10. ':H' → logprob: -18.13751220703125

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.840432565193623e-05
    2. ' :' → logprob: -9.500088691711426
    3. ':
' → logprob: -12.125088691711426
    4. ':return' → logprob: -12.125088691711426
    5. '):' → logprob: -13.250088691711426
    6. ':**' → logprob: -15.375088691711426
    7. '>:' → logprob: -15.750088691711426
    8. '   ' → logprob: -16.12508773803711
    9. ':def' → logprob: -16.12508773803711
    10. '+:' → logprob: -16.25008773803711

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014961924403905869
    2. '   ' → logprob: -4.8899617195129395
    3. ':' → logprob: -5.1399617195129395
    4. ' print' → logprob: -7.3899617195129395
    5. '\n' → logprob: -8.514962196350098
    6. 'print' → logprob: -8.514962196350098
    7. '    ' → logprob: -8.639962196350098
    8. ' :' → logprob: -9.764962196350098
    9. ' ' → logprob: -10.264962196350098
    10. '     ' → logprob: -10.389962196350098

Token 37: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14848965406417847
    2. 'print' (adapté à ' print') → logprob: -2.3984897136688232
    3. ' ' → logprob: -4.023489475250244
    4. '    ' → logprob: -4.648489475250244
    5. '       ' → logprob: -4.898489475250244
    6. '   ' → logprob: -5.148489475250244
    7. '\n' → logprob: -6.273489475250244
    8. ' \' → logprob: -6.398489475250244
    9. ' return' → logprob: -7.523489475250244
    10. '\' → logprob: -8.273489952087402

Token 38: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06649485230445862
    2. '("' → logprob: -3.066494941711426
    3. '('' → logprob: -4.066494941711426
    4. '()' → logprob: -8.316494941711426
    5. '("("' → logprob: -8.816494941711426
    6. '(True' → logprob: -10.191494941711426
    7. '"' → logprob: -10.316494941711426
    8. '(`' → logprob: -10.316494941711426
    9. ' (' → logprob: -10.566494941711426
    10. '((' → logprob: -10.816494941711426

Token 39: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0038045919500291348
    2. 'YES' → logprob: -6.253804683685303
    3. '"' → logprob: -6.753804683685303
    4. ' Yes' → logprob: -7.378804683685303
    5. '1' → logprob: -10.003804206848145
    6. '0' → logprob: -10.878804206848145
    7. 'yes' → logprob: -12.503804206848145
    8. 'Possible' → logprob: -12.878804206848145
    9. 'Perfect' → logprob: -13.628804206848145
    10. '_yes' → logprob: -13.878804206848145

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.021114690229296684
    2. '")
' → logprob: -3.8961145877838135
    3. ')' → logprob: -7.521114826202393
    4. ')
' → logprob: -11.771114349365234
    5. ')")' → logprob: -11.771114349365234
    6. '")
' → logprob: -12.146114349365234
    7. '"' → logprob: -12.646114349365234
    8. '   ' → logprob: -12.896114349365234
    9. '!")' → logprob: -13.521114349365234
    10. '```' → logprob: -14.271114349365234

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005454193335026503
    2. ' else' → logprob: -5.630454063415527
    3. 'else' → logprob: -6.380454063415527
    4. '       ' → logprob: -9.505454063415527
    5. ' ' → logprob: -10.005454063415527
    6. '<|end|>' → logprob: -11.130454063415527
    7. '	else' → logprob: -11.255454063415527
    8. ')' → logprob: -13.380454063415527
    9. '  ' → logprob: -13.505454063415527
    10. '.' → logprob: -13.505454063415527

Token 42: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5054622888565063
    2. ' else' → logprob: -1.5054622888565063
    3. 'else' (adapté à ' else') → logprob: -1.7554622888565063
    4. ' ' → logprob: -6.255462169647217
    5. '	else' → logprob: -10.255462646484375
    6. '  ' → logprob: -11.130462646484375
    7. '    ' → logprob: -11.255462646484375
    8. '       ' → logprob: -11.630462646484375
    9. 'e' → logprob: -11.755462646484375
    10. '```' → logprob: -12.130462646484375

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021980607882142067
    2. ':
' → logprob: -3.8969805240631104
    3. '   ' → logprob: -7.1469807624816895
    4. '       ' → logprob: -7.3969807624816895
    5. 'print' → logprob: -11.771980285644531
    6. ' :' → logprob: -11.896980285644531
    7. ' :
' → logprob: -12.021980285644531
    8. ' print' → logprob: -12.646980285644531
    9. '    ' → logprob: -13.271980285644531
    10. '```' → logprob: -13.521980285644531

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003255719493608922
    2. 'print' → logprob: -8.250325202941895
    3. ' print' → logprob: -10.500325202941895
    4. '   ' → logprob: -11.125325202941895
    5. '\n' → logprob: -11.625325202941895
    6. '```' → logprob: -12.500325202941895
    7. '
' → logprob: -13.125325202941895
    8. '     ' → logprob: -13.625325202941895
    9. '    ' → logprob: -13.625325202941895
    10. '\' → logprob: -13.875325202941895

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3303920030593872
    2. ' print' → logprob: -1.7053920030593872
    3. '       ' → logprob: -2.3303918838500977
    4. '   ' → logprob: -6.080391883850098
    5. '	print' → logprob: -9.580391883850098
    6. ' ' → logprob: -10.580391883850098
    7. '.print' → logprob: -12.205391883850098
    8. '    ' → logprob: -12.830391883850098
    9. '  ' → logprob: -12.955391883850098
    10. '     ' → logprob: -13.330391883850098

Token 46: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029766805469989777
    2. '(' → logprob: -3.529766798019409
    3. '("("' → logprob: -11.404767036437988
    4. '("")' → logprob: -12.904767036437988
    5. '('' → logprob: -13.404767036437988
    6. '()' → logprob: -14.654767036437988
    7. '(
' → logprob: -15.904767036437988
    8. '("(' → logprob: -16.154766082763672
    9. '("""' → logprob: -16.154766082763672
    10. '(""' → logprob: -16.904766082763672

Token 47: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.011049231514334679
    2. '"No' → logprob: -4.511049270629883
    3. '"' → logprob: -13.886049270629883
    4. ' No' → logprob: -14.636049270629883
    5. '“No' → logprob: -17.386049270629883
    6. '   ' → logprob: -18.136049270629883
    7. '"N' → logprob: -18.636049270629883
    8. 'NO' → logprob: -19.511049270629883
    9. '_No' → logprob: -19.636049270629883
    10. ' ' → logprob: -19.886049270629883

Token 48: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003266241867095232
    2. ')' → logprob: -5.753266334533691
    3. ')")' → logprob: -9.503266334533691
    4. '")
' → logprob: -11.253266334533691
    5. '```' → logprob: -15.128266334533691
    6. ')
' → logprob: -15.753266334533691
    7. '}")' → logprob: -16.003265380859375
    8. '')' → logprob: -16.628265380859375
    9. '"' → logprob: -16.878265380859375
    10. '")

' → logprob: -17.253265380859375

Token 49: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009776752442121506
    2. ' ' → logprob: -5.384776592254639
    3. ' ' → logprob: -6.009776592254639
    4. '__' → logprob: -6.134776592254639
    5. '_' → logprob: -8.509777069091797
    6. ' _' → logprob: -8.884777069091797
    7. '  ' → logprob: -9.384777069091797
    8. ' ‌' → logprob: -10.884777069091797
    9. ' main' → logprob: -11.009777069091797
    10. ' ▁' → logprob: -11.509777069091797

Token 51: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0034218779765069485
    2. ' __' → logprob: -5.753421783447266
    3. ' ==' → logprob: -9.128421783447266
    4. '.' → logprob: -10.753421783447266
    5. '.__' → logprob: -10.878421783447266
    6. '__.__' → logprob: -10.878421783447266
    7. '_' → logprob: -11.253421783447266
    8. '[' → logprob: -11.378421783447266
    9. '__.' → logprob: -11.503421783447266
    10. '==' → logprob: -11.753421783447266

Token 52: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '__.__' → logprob: -14.875000953674316
    3. '==' → logprob: -16.25
    4. '___' → logprob: -16.375
    5. '_' → logprob: -16.875
    6. '__

' → logprob: -17.125
    7. '__('' → logprob: -17.125
    8. '____' → logprob: -17.25
    9. '__
' → logprob: -17.25
    10. '__.' → logprob: -18.125

Token 53: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003383033908903599
    2. ' ==' → logprob: -6.128383159637451
    3. '==' → logprob: -6.753383159637451
    4. '=="' → logprob: -11.128382682800293
    5. '_' → logprob: -11.753382682800293
    6. ' __' → logprob: -13.253382682800293
    7. '___' → logprob: -13.503382682800293
    8. '=='' → logprob: -13.503382682800293
    9. '__.__' → logprob: -14.253382682800293
    10. '=' → logprob: -14.878382682800293

Token 54: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.043571922928094864
    2. ''' → logprob: -3.168571949005127
    3. '__' → logprob: -7.668571949005127
    4. ' "' → logprob: -9.918571472167969
    5. ' "__' → logprob: -9.918571472167969
    6. '`' → logprob: -13.043571472167969
    7. ' '__' → logprob: -13.793571472167969
    8. ' __' → logprob: -13.918571472167969
    9. '"user' → logprob: -14.168571472167969
    10. ' '' → logprob: -14.793571472167969

Token 55: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. 'name' → logprob: -13.875000953674316
    3. ' main' → logprob: -15.375000953674316
    4. 'ma' → logprob: -16.125001907348633
    5. 'm' → logprob: -17.875001907348633
    6. 'mai' → logprob: -18.625001907348633
    7. '_main' → logprob: -18.875001907348633
    8. '	main' → logprob: -19.000001907348633
    9. 'maine' → logprob: -19.750001907348633
    10. '-main' → logprob: -19.875001907348633

Token 56: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1269347220659256
    2. '__":
' → logprob: -2.126934766769409
    3. '__':
' → logprob: -12.376935005187988
    4. '__["' → logprob: -13.626935005187988
    5. '_' → logprob: -14.376935005187988
    6. '__.' → logprob: -15.376935005187988
    7. '__("' → logprob: -16.251934051513672
    8. '__.__' → logprob: -16.501934051513672
    9. '__",' → logprob: -16.501934051513672
    10. '__
' → logprob: -16.751934051513672

Token 57: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04652070254087448
    2. 'main' → logprob: -3.171520709991455
    3. '   ' → logprob: -6.296520709991455
    4. '	main' → logprob: -6.421520709991455
    5. '_main' → logprob: -10.171520233154297
    6. ' ' → logprob: -12.921520233154297
    7. '    
' → logprob: -14.046520233154297
    8. '(main' → logprob: -14.171520233154297
    9. '```' → logprob: -14.171520233154297
    10. 'Main' → logprob: -14.296520233154297

Token 58: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.008616345934569836
    2. ' main' → logprob: -4.7586164474487305
    3. '	main' → logprob: -13.50861644744873
    4. 'mai' → logprob: -15.88361644744873
    5. '   ' → logprob: -16.258615493774414
    6. 'ma' → logprob: -16.633615493774414
    7. 'm' → logprob: -16.758615493774414
    8. ' ' → logprob: -17.758615493774414
    9. '_main' → logprob: -18.383615493774414
    10. 'maine' → logprob: -18.508615493774414

Token 59: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013890431728214025
    2. '(' → logprob: -6.626389026641846
    3. '()
' → logprob: -11.001389503479004
    4. ' ()' → logprob: -11.501389503479004
    5. '`()' → logprob: -11.501389503479004
    6. '()`' → logprob: -12.251389503479004
    7. '(
' → logprob: -12.876389503479004
    8. '()(' → logprob: -13.001389503479004
    9. ']()' → logprob: -13.001389503479004
    10. '().' → logprob: -13.126389503479004


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 47.37%
Précision adaptée (1ère position): 50.88%
Précision (top 10): 85.96%
================================================================================
