================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_max_cells(h, w):
    """
    Calcule le nombre maximum de cellules pouvant être sélectionnées dans une grille de dimensions h x w
    sans que deux cellules sélectionnées ne soient adjacentes horizontalement ou verticalement.

    Paramètres:
        h (int): hauteur de la grille (nombre de lignes)
        w (int): largeur de la grille (nombre de colonnes)

    Retourne:
        int: Nombre maximum de cellules sélectionnées sous la contrainte spécifiée.
    """
    # Cas particulier : si l'une des dimensions est 1 (ligne ou colonne unique)
    if w == 1 or h == 1:
        # Dans ce cas, on ne peut sélectionner qu'une seule cellule au maximum
        return 1
    # Cas où le nombre de lignes est pair
    elif h % 2 == 0:
        # On peut sélectionner une cellule sur deux dans chaque ligne
        # On remplit la moitié des lignes (h//2), en prenant toutes les colonnes à chaque fois
        return w * (h // 2)
    else:
        # Pour une hauteur impaire, on prend le maximum dans la "moitié entière" des lignes
        # Pour la ligne supplémentaire, on peut remplir environ la moitié de ses cellules (arrondi supérieur)
        # int(w / 2 + 0.5) permet de faire un arrondi supérieur pour w impair
        return w * (h // 2) + int(w / 2 + 0.5)

if __name__ == "__main__":
    # Lecture des dimensions h et w de la grille depuis l'entrée standard
    h, w = map(int, input().split())

    # Calcul et affichage du résultat
    print(calculate_max_cells(h, w))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_max' (ID: 13731)
  → Token d'amorce (pas de prédiction)

Token 3: '_cells' (ID: 93468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004840095527470112
    2. '```' → logprob: -5.754839897155762
    3. '_max' → logprob: -8.754839897155762
    4. '_size' → logprob: -8.754839897155762
    5. '_value' → logprob: -8.879839897155762
    6. '(_' → logprob: -8.879839897155762
    7. '_length' → logprob: -9.129839897155762
    8. '_return' → logprob: -9.879839897155762
    9. '_out' → logprob: -9.879839897155762
    10. '\' → logprob: -9.879839897155762

Token 4: '(h' (ID: 8120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3056996166706085
    2. '(' → logprob: -1.4306995868682861
    3. '```' → logprob: -4.430699825286865
    4. '_:' → logprob: -5.680699825286865
    5. '():' → logprob: -5.805699825286865
    6. ' (' → logprob: -7.180699825286865
    7. '(_' → logprob: -7.180699825286865
    8. ':' → logprob: -7.305699825286865
    9. '(_:' → logprob: -7.555699825286865
    10. '_max' → logprob: -8.055699348449707

Token 5: ',' (ID: 11)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.58941251039505
    2. 'e' → logprob: -0.96441251039505
    3. '):' → logprob: -3.4644124507904053
    4. '_e' → logprob: -4.464412689208984
    5. ',' → logprob: -4.714412689208984
    6. 'ight' → logprob: -5.089412689208984
    7. ',e' → logprob: -5.964412689208984
    8. ')e' → logprob: -7.339412689208984
    9. '_' → logprob: -7.464412689208984
    10. 'igh' → logprob: -7.714412689208984

Token 6: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5239975452423096
    2. 'w' → logprob: -0.8989975452423096
    3. ' ' → logprob: -7.8989973068237305
    4. 'l' → logprob: -8.64899730682373
    5. ' l' → logprob: -9.39899730682373
    6. 'd' → logprob: -10.64899730682373
    7. 's' → logprob: -10.89899730682373
    8. ' ' → logprob: -11.14899730682373
    9. 'width' → logprob: -11.39899730682373
    10. 'n' → logprob: -11.39899730682373

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00922625232487917
    2. ')' → logprob: -5.384226322174072
    3. ',' → logprob: -5.509226322174072
    4. ':' → logprob: -7.759226322174072
    5. ''):' → logprob: -9.509225845336914
    6. '```' → logprob: -11.509225845336914
    7. '):
' → logprob: -11.634225845336914
    8. '=' → logprob: -12.759225845336914
    9. '"):' → logprob: -12.759225845336914
    10. '*' → logprob: -12.884225845336914

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014073948375880718
    2. '   ' → logprob: -4.514073848724365
    3. '```' → logprob: -6.139073848724365
    4. ':
' → logprob: -7.514073848724365
    5. '\' → logprob: -9.639074325561523
    6. '`:' → logprob: -10.139074325561523
    7. '    
' → logprob: -10.514074325561523
    8. ':return' → logprob: -10.514074325561523
    9. '``' → logprob: -10.889074325561523
    10. '    ' → logprob: -10.889074325561523

Token 9: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6986315846443176
    2. '   ' → logprob: -1.4486315250396729
    3. '`' → logprob: -2.823631525039673
    4. '\' → logprob: -2.823631525039673
    5. ':' → logprob: -2.948631525039673
    6. '\n' → logprob: -3.448631525039673
    7. '``' → logprob: -4.198631763458252
    8. '       ' → logprob: -4.823631763458252
    9. ''' → logprob: -4.948631763458252
    10. 'max' → logprob: -5.448631763458252

Token 10: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.50040602684021
    2. '"""' → logprob: -1.62540602684021
    3. '   ' → logprob: -2.25040602684021
    4. ' ' → logprob: -2.25040602684021
    5. 'n' → logprob: -3.00040602684021
    6. 'i' → logprob: -3.12540602684021
    7. '#' → logprob: -3.12540602684021
    8. 'max' → logprob: -3.37540602684021
    9. ' """' → logprob: -3.50040602684021
    10. '"' → logprob: -3.75040602684021

Token 11: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.5466614961624146
    2. '"""' → logprob: -1.4216614961624146
    3. 'Calcul' → logprob: -3.296661376953125
    4. 'Returns' → logprob: -3.546661376953125
    5. '"""
' → logprob: -4.171661376953125
    6. 'Return' → logprob: -4.296661376953125
    7. ' Calculate' → logprob: -4.421661376953125
    8. 'Maximum' → logprob: -4.546661376953125
    9. 'Find' → logprob: -5.046661376953125
    10. '   ' → logprob: -5.046661376953125

Token 12: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.012769795022904873
    2. 'c' → logprob: -4.88776969909668
    3. 'cul' → logprob: -5.51276969909668
    4. '   ' → logprob: -7.51276969909668
    5. 'cu' → logprob: -8.76276969909668
    6. 'cula' → logprob: -8.76276969909668
    7. 'culated' → logprob: -9.76276969909668
    8. '```' → logprob: -10.13776969909668
    9. '#' → logprob: -10.51276969909668
    10. '  ' → logprob: -10.51276969909668

Token 13: ' le' (ID: 505)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.9428910613059998
    2. 't' → logprob: -1.1928911209106445
    3. 's' → logprob: -2.0678911209106445
    4. 'r' → logprob: -2.1928911209106445
    5. 'late' → logprob: -3.9428911209106445
    6. 'm' → logprob: -4.1928911209106445
    7. 'd' → logprob: -5.0678911209106445
    8. '   ' → logprob: -5.1928911209106445
    9. 'brate' → logprob: -5.4428911209106445
    10. 'ate' → logprob: -5.6928911209106445

Token 14: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04488438367843628
    2. ' maximum' → logprob: -4.294884204864502
    3. '   ' → logprob: -4.419884204864502
    4. 'nombre' → logprob: -4.419884204864502
    5. ' ' → logprob: -5.544884204864502
    6. '  ' → logprob: -7.044884204864502
    7. 'maximum' → logprob: -8.04488468170166
    8. 's' → logprob: -8.54488468170166
    9. ' nombres' → logprob: -8.79488468170166
    10. ' max' → logprob: -8.79488468170166

Token 15: ' maximum' (ID: 10562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5970550775527954
    2. ' maximal' → logprob: -1.9720550775527954
    3. ' de' → logprob: -2.472054958343506
    4. ' maximum' → logprob: -2.472054958343506
    5. '_' → logprob: -2.972054958343506
    6. ' maximale' → logprob: -3.722054958343506
    7. ' d' → logprob: -3.972054958343506
    8. 's' → logprob: -4.472054958343506
    9. 'maximum' → logprob: -4.472054958343506
    10. ' max' → logprob: -5.222054958343506

Token 16: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5511126518249512
    2. ' de' → logprob: -1.3011126518249512
    3. ' d' → logprob: -1.9261126518249512
    4. '```' → logprob: -6.426112651824951
    5. 'd' → logprob: -6.926112651824951
    6. '  ' → logprob: -7.426112651824951
    7. ')' → logprob: -7.926112651824951
    8. 'de' → logprob: -8.05111312866211
    9. '<|end|>' → logprob: -8.42611312866211
    10. '_' → logprob: -8.55111312866211

Token 17: ' cellules' (ID: 134342)
  Prédit: ' cellules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.12301362305879593
    2. ' cells' → logprob: -3.123013734817505
    3. ' cases' → logprob: -3.748013734817505
    4. 'cases' → logprob: -4.248013496398926
    5. 'cell' → logprob: -4.873013496398926
    6. 'cells' → logprob: -4.873013496398926
    7. ' cell' → logprob: -4.998013496398926
    8. ' cellule' → logprob: -6.123013496398926
    9. ' ' → logprob: -6.373013496398926
    10. ' c' → logprob: -6.748013496398926

Token 18: ' pouvant' (ID: 104840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002096253214403987
    2. ' pouvant' → logprob: -8.127096176147461
    3. '```' → logprob: -8.627096176147461
    4. ' that' → logprob: -8.752096176147461
    5. '_' → logprob: -8.877096176147461
    6. ' utilis' → logprob: -9.002096176147461
    7. ' ' → logprob: -9.377096176147461
    8. ' ,' → logprob: -9.377096176147461
    9. '  ' → logprob: -9.377096176147461
    10. ' que' → logprob: -9.502096176147461

Token 19: ' être' (ID: 9104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.102962926030159
    2. ' être' → logprob: -2.4779629707336426
    3. 'être' → logprob: -5.852962970733643
    4. ' accueillir' → logprob: -5.977962970733643
    5. ' conten' → logprob: -6.352962970733643
    6. ' remplir' → logprob: -7.102962970733643
    7. ' be' → logprob: -7.352962970733643
    8. ' ' → logprob: -7.477962970733643
    9. ' etre' → logprob: -7.477962970733643
    10. ' recevoir' → logprob: -7.602962970733643

Token 20: ' sélection' (ID: 43472)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.6982218623161316
    2. ' rem' → logprob: -1.9482219219207764
    3. ' plac' → logprob: -2.4482219219207764
    4. ' occup' → logprob: -2.6982219219207764
    5. ' color' → logprob: -2.9482219219207764
    6. 'color' → logprob: -3.6982219219207764
    7. 'occup' → logprob: -3.8232219219207764
    8. 'plac' → logprob: -4.198221683502197
    9. ' colori' → logprob: -4.573221683502197
    10. 'vis' → logprob: -4.823221683502197

Token 21: 'nées' (ID: 136473)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.10182448476552963
    2. 'é' → logprob: -2.3518245220184326
    3. 'és' → logprob: -7.2268242835998535
    4. 'ée' → logprob: -7.2268242835998535
    5. 'es' → logprob: -9.226824760437012
    6. 'nées' → logprob: -10.601824760437012
    7. ' ' → logprob: -12.101824760437012
    8. '```' → logprob: -12.226824760437012
    9. 'e' → logprob: -12.351824760437012
    10. 's' → logprob: -12.601824760437012

Token 22: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.241550087928772
    2. ' ' → logprob: -1.741550087928772
    3. ' sans' → logprob: -1.741550087928772
    4. ' dans' → logprob: -1.991550087928772
    5. '```' → logprob: -2.9915499687194824
    6. ',' → logprob: -3.1165499687194824
    7. ' tout' → logprob: -3.6165499687194824
    8. '.' → logprob: -3.6165499687194824
    9. '   ' → logprob: -4.241549968719482
    10. 'dans' → logprob: -4.241549968719482

Token 23: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.33576616644859314
    2. ' un' → logprob: -1.7107661962509155
    3. ' ' → logprob: -3.335766077041626
    4. '```' → logprob: -3.710766077041626
    5. '   ' → logprob: -3.960766077041626
    6. ' la' → logprob: -4.460766315460205
    7. 'une' → logprob: -5.835766315460205
    8. ' des' → logprob: -5.960766315460205
    9. ' ' → logprob: -6.085766315460205
    10. ' le' → logprob: -6.210766315460205

Token 24: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.747572124004364
    2. '   ' → logprob: -1.8725721836090088
    3. ' case' → logprob: -2.372572183609009
    4. ' ligne' → logprob: -2.747572183609009
    5. ' cellule' → logprob: -2.997572183609009
    6. ' zone' → logprob: -3.747572183609009
    7. ' ' → logprob: -4.12257194519043
    8. 'ligne' → logprob: -4.12257194519043
    9. ' ' → logprob: -4.24757194519043
    10. 'case' → logprob: -4.37257194519043

Token 25: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.8400657773017883
    2. ' de' → logprob: -1.4650657176971436
    3. '   ' → logprob: -2.8400657176971436
    4. ',' → logprob: -2.9650657176971436
    5. ' sans' → logprob: -2.9650657176971436
    6. '```' → logprob: -3.0900657176971436
    7. ' avec' → logprob: -3.2150657176971436
    8. ' tout' → logprob: -4.590065956115723
    9. ' pour' → logprob: -4.840065956115723
    10. ' ' → logprob: -4.840065956115723

Token 26: ' dimensions' (ID: 23995)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.2097092866897583
    2. ' taille' → logprob: -1.2097092866897583
    3. 'h' → logprob: -1.9597092866897583
    4. ' ' → logprob: -2.7097091674804688
    5. 'ha' → logprob: -3.5847091674804688
    6. 'tail' → logprob: -3.7097091674804688
    7. ' dimensions' → logprob: -3.7097091674804688
    8. 'dimensions' → logprob: -4.209709167480469
    9. ' hauteur' → logprob: -4.334709167480469
    10. ' chess' → logprob: -4.584709167480469

Token 27: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3059547543525696
    2. ' ' → logprob: -1.4309546947479248
    3. 'h' → logprob: -4.930954933166504
    4. ' `' → logprob: -5.055954933166504
    5. ' (' → logprob: -5.430954933166504
    6. ' \(' → logprob: -6.055954933166504
    7. ' ' → logprob: -6.555954933166504
    8. ' \' → logprob: -7.055954933166504
    9. '```' → logprob: -7.805954933166504
    10. ' ```' → logprob: -8.055954933166504

Token 28: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4301324784755707
    2. ' x' → logprob: -1.555132508277893
    3. ' ' → logprob: -2.4301323890686035
    4. ' ,' → logprob: -3.4301323890686035
    5. '   ' → logprob: -4.8051323890686035
    6. ' et' → logprob: -5.8051323890686035
    7. ' ×' → logprob: -6.0551323890686035
    8. '*' → logprob: -6.9301323890686035
    9. '×' → logprob: -7.1801323890686035
    10. 'x' → logprob: -7.1801323890686035

Token 29: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.253743976354599
    2. 'w' → logprob: -1.5037440061569214
    3. ' ' → logprob: -6.378744125366211
    4. ' ' → logprob: -10.128744125366211
    5. '   ' → logprob: -10.503744125366211
    6. '  ' → logprob: -11.003744125366211
    7. '```' → logprob: -11.753744125366211
    8. '	w' → logprob: -12.503744125366211
    9. ' ' → logprob: -13.316244125366211
    10. '_w' → logprob: -13.753744125366211

Token 30: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7861223816871643
    2. '   ' → logprob: -1.1611223220825195
    3. ',' → logprob: -3.0361223220825195
    4. '\n' → logprob: -3.2861223220825195
    5. '):' → logprob: -3.5361223220825195
    6. '.' → logprob: -3.6611223220825195
    7. '```' → logprob: -3.6611223220825195
    8. '
' → logprob: -4.6611223220825195
    9. ':' → logprob: -4.6611223220825195
    10. '"""' → logprob: -4.9111223220825195

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07772146165370941
    2. ',' → logprob: -3.702721357345581
    3. '\n' → logprob: -4.57772159576416
    4. '\' → logprob: -4.70272159576416
    5. '```' → logprob: -4.95272159576416
    6. ')' → logprob: -4.95272159576416
    7. '.' → logprob: -5.07772159576416
    8. ' 
' → logprob: -6.45272159576416
    9. ':' → logprob: -6.57772159576416
    10. '    
' → logprob: -6.82772159576416

Token 32: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29519906640052795
    2. '\n' → logprob: -2.045199155807495
    3. '
' → logprob: -3.045199155807495
    4. '```' → logprob: -3.545199155807495
    5. '\' → logprob: -3.920199155807495
    6. '.' → logprob: -4.420198917388916
    7. '.
' → logprob: -5.545198917388916
    8. ',' → logprob: -5.795198917388916
    9. '    
' → logprob: -6.170198917388916
    10. ' en' → logprob: -6.670198917388916

Token 33: ' que' (ID: 661)
  Prédit: ' sélectionner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sélectionner' → logprob: -0.42231348156929016
    2. ' que' → logprob: -2.1723134517669678
    3. 'adj' → logprob: -2.6723134517669678
    4. 'que' → logprob: -2.9223134517669678
    5. 'de' → logprob: -3.9223134517669678
    6. ' ' → logprob: -4.172313690185547
    7. 'sé' → logprob: -4.297313690185547
    8. ' adjacent' → logprob: -4.797313690185547
    9. ' deux' → logprob: -5.172313690185547
    10. ' jamais' → logprob: -5.422313690185547

Token 34: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.04242544621229172
    2. ' deux' → logprob: -3.2924253940582275
    3. '2' → logprob: -7.042425632476807
    4. ' ' → logprob: -7.042425632476807
    5. 'que' → logprob: -7.542425632476807
    6. 'adj' → logprob: -7.792425632476807
    7. 'auc' → logprob: -7.917425632476807
    8. '   ' → logprob: -8.042425155639648
    9. 'two' → logprob: -8.667425155639648
    10. '```' → logprob: -8.917425155639648

Token 35: ' cellules' (ID: 134342)
  Prédit: ' cellules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.00634513795375824
    2. 'cell' → logprob: -5.881345272064209
    3. ' cells' → logprob: -6.506345272064209
    4. ' cell' → logprob: -7.381345272064209
    5. 'cel' → logprob: -7.756345272064209
    6. 'cells' → logprob: -7.881345272064209
    7. ' cellule' → logprob: -8.88134479522705
    8. ' ' → logprob: -9.50634479522705
    9. ' cases' → logprob: -9.63134479522705
    10. '```' → logprob: -9.88134479522705

Token 36: ' sélection' (ID: 43472)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.24188730120658875
    2. ' adj' → logprob: -1.6168873310089111
    3. ' soient' → logprob: -5.616887092590332
    4. ' sélection' → logprob: -5.616887092590332
    5. ' adjacent' → logprob: -5.991887092590332
    6. '   ' → logprob: -6.366887092590332
    7. ' vois' → logprob: -6.866887092590332
    8. '```' → logprob: -7.116887092590332
    9. 's' → logprob: -7.866887092590332
    10. ' selected' → logprob: -8.116887092590332

Token 37: 'nées' (ID: 136473)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.006526368670165539
    2. 'é' → logprob: -5.131526470184326
    3. 'ée' → logprob: -8.256525993347168
    4. 'è' → logprob: -9.256525993347168
    5. 'és' → logprob: -9.631525993347168
    6. 'nées' → logprob: -10.131525993347168
    7. ' ' → logprob: -10.631525993347168
    8. 'e' → logprob: -10.881525993347168
    9. '&eacute' → logprob: -11.131525993347168
    10. 'es' → logprob: -11.256525993347168

Token 38: ' ne' (ID: 453)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.30581164360046387
    2. ' adj' → logprob: -1.8058116436004639
    3. ' soient' → logprob: -2.680811643600464
    4. ' adjacent' → logprob: -4.430811882019043
    5. 's' → logprob: -4.930811882019043
    6. '   ' → logprob: -6.305811882019043
    7. ' ne' → logprob: -6.430811882019043
    8. '```' → logprob: -6.430811882019043
    9. ' n' → logprob: -6.555811882019043
    10. ' soit' → logprob: -7.180811882019043

Token 39: ' soient' (ID: 59497)
  Prédit: ' soient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soient' → logprob: -0.41241809725761414
    2. 'so' → logprob: -1.2874181270599365
    3. 's' → logprob: -3.1624181270599365
    4. 'adj' → logprob: -4.412417888641357
    5. ' part' → logprob: -5.787417888641357
    6. ' soit' → logprob: -6.787417888641357
    7. 'part' → logprob: -7.287417888641357
    8. ' so' → logprob: -7.412417888641357
    9. ' ' → logprob: -7.787417888641357
    10. ' se' → logprob: -8.037418365478516

Token 40: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0040011112578213215
    2. ' adj' → logprob: -5.879001140594482
    3. ' ' → logprob: -8.129000663757324
    4. '```' → logprob: -8.754000663757324
    5. ' adjacent' → logprob: -9.004000663757324
    6. 'ad' → logprob: -9.254000663757324
    7. '   ' → logprob: -9.879000663757324
    8. 'c' → logprob: -10.004000663757324
    9. '

' → logprob: -10.129000663757324
    10. ' côte' → logprob: -10.254000663757324

Token 41: 'ac' (ID: 359)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18554458022117615
    2. 'ac' → logprob: -1.9355446100234985
    3. 'acent' → logprob: -3.935544490814209
    4. ' a' → logprob: -6.435544490814209
    5. 'acency' → logprob: -6.935544490814209
    6. 'acen' → logprob: -7.435544490814209
    7. '(a' → logprob: -8.310544967651367
    8. 'aces' → logprob: -8.623044967651367
    9. '_a' → logprob: -8.935544967651367
    10. ' ' → logprob: -8.998044967651367

Token 42: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.2773573398590088
    2. 'ents' → logprob: -2.402357339859009
    3. 'ent' → logprob: -2.902357339859009
    4. 'n' → logprob: -3.027357339859009
    5. 'e' → logprob: -3.277357339859009
    6. 'ente' → logprob: -5.52735710144043
    7. 'nt' → logprob: -6.02735710144043
    8. 't' → logprob: -6.65235710144043
    9. 's' → logprob: -7.15235710144043
    10. 'tes' → logprob: -7.65235710144043

Token 43: ' horizontal' (ID: 25511)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6497339010238647
    2. ',' → logprob: -1.7747339010238647
    3. ' ' → logprob: -2.0247340202331543
    4. ':' → logprob: -2.2747340202331543
    5. '   ' → logprob: -3.3997340202331543
    6. 'e' → logprob: -4.899734020233154
    7. '\' → logprob: -5.399734020233154
    8. ' :' → logprob: -5.399734020233154
    9. ',
' → logprob: -5.899734020233154
    10. ''' → logprob: -6.149734020233154

Token 44: 'ement' (ID: 962)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.027114050462841988
    2. 'ement' → logprob: -3.652114152908325
    3. 'es' → logprob: -7.527113914489746
    4. '_' → logprob: -10.027113914489746
    5. ' e' → logprob: -10.277113914489746
    6. 'emen' → logprob: -10.402113914489746
    7. 'em' → logprob: -10.527113914489746
    8. ' ' → logprob: -10.652113914489746
    9. '```' → logprob: -10.652113914489746
    10. '   ' → logprob: -11.027113914489746

Token 45: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45780089497566223
    2. ' ' → logprob: -1.3328008651733398
    3. '   ' → logprob: -3.33280086517334
    4. 'e' → logprob: -3.33280086517334
    5. ' ,' → logprob: -5.33280086517334
    6. ':' → logprob: -5.58280086517334
    7. ')' → logprob: -5.58280086517334
    8. ',
' → logprob: -5.70780086517334
    9. ' ou' → logprob: -5.83280086517334
    10. '\' → logprob: -6.33280086517334

Token 46: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.2079981565475464
    2. 'vertical' → logprob: -1.7079981565475464
    3. ' ' → logprob: -5.707998275756836
    4. ' verticale' → logprob: -7.207998275756836
    5. ' vertically' → logprob: -7.332998275756836
    6. '\n' → logprob: -7.332998275756836
    7. '_vertical' → logprob: -8.082998275756836
    8. '(vertical' → logprob: -8.582998275756836
    9. ' ' → logprob: -8.707998275756836
    10. ' вертик' → logprob: -8.957998275756836

Token 47: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.011150513775646687
    2. 'e' → logprob: -4.511150360107422
    3. '```' → logprob: -10.636150360107422
    4. 'es' → logprob: -10.886150360107422
    5. 'emen' → logprob: -11.136150360107422
    6. 'lement' → logprob: -11.886150360107422
    7. 'ment' → logprob: -12.261150360107422
    8. 'em' → logprob: -12.261150360107422
    9. 'EMENT' → logprob: -12.386150360107422
    10. 'emente' → logprob: -12.636150360107422

Token 48: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3709460198879242
    2. ':' → logprob: -1.3709460496902466
    3. '.' → logprob: -4.495945930480957
    4. '):' → logprob: -4.745945930480957
    5. ',' → logprob: -4.870945930480957
    6. ':
' → logprob: -4.870945930480957
    7. ')' → logprob: -4.870945930480957
    8. ' ' → logprob: -5.495945930480957
    9. '\n' → logprob: -5.745945930480957
    10. '
' → logprob: -6.745945930480957

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018527990207076073
    2. '"""' → logprob: -4.893527984619141
    3. '\n' → logprob: -6.143527984619141
    4. ')' → logprob: -6.393527984619141
    5. '"""
' → logprob: -6.518527984619141
    6. '"' → logprob: -6.643527984619141
    7. ' 
' → logprob: -7.018527984619141
    8. '```' → logprob: -7.018527984619141
    9. ' ' → logprob: -7.643527984619141
    10. ' """
' → logprob: -8.14352798461914

Token 50: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08168291300535202
    2. '\n' → logprob: -2.7066829204559326
    3. '"""' → logprob: -5.5816826820373535
    4. '
' → logprob: -5.9566826820373535
    5. '```' → logprob: -6.3316826820373535
    6. ' 
' → logprob: -7.0816826820373535
    7. '\' → logprob: -7.3316826820373535
    8. '    
' → logprob: -7.7066826820373535
    9. 'n' → logprob: -7.8316826820373535
    10. '"""
' → logprob: -8.081683158874512

Token 51: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -1.1470481157302856
    2. 'ètre' → logprob: -1.2720481157302856
    3. 'e' → logprob: -1.6470481157302856
    4. 'è' → logprob: -2.522047996520996
    5. 'eters' → logprob: -2.897047996520996
    6. 'et' → logprob: -3.272047996520996
    7. 's' → logprob: -4.272047996520996
    8. 'èt' → logprob: -4.647047996520996
    9. ' ' → logprob: -6.272047996520996
    10. 'etre' → logprob: -6.397047996520996

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6787101626396179
    2. ' :' → logprob: -1.3037102222442627
    3. '   ' → logprob: -2.5537102222442627
    4. '\n' → logprob: -2.9287102222442627
    5. ':
' → logprob: -3.3037102222442627
    6. ' :
' → logprob: -3.9287102222442627
    7. '```' → logprob: -5.053709983825684
    8. '):' → logprob: -5.303709983825684
    9. '):
' → logprob: -5.553709983825684
    10. '
' → logprob: -5.678709983825684

Token 53: '       ' (ID: 309)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5858349204063416
    2. ' 
' → logprob: -1.4608349800109863
    3. ' ' → logprob: -2.0858349800109863
    4. '   ' → logprob: -3.2108349800109863
    5. '    ' → logprob: -4.585834980010986
    6. '     
' → logprob: -4.960834980010986
    7. '```' → logprob: -5.335834980010986
    8. '    
' → logprob: -5.460834980010986
    9. ' """
' → logprob: -5.585834980010986
    10. ' ```' → logprob: -5.835834980010986

Token 54: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.011885625310242176
    2. ' h' → logprob: -4.886885643005371
    3. '   ' → logprob: -5.511885643005371
    4. '"""' → logprob: -9.636885643005371
    5. '"""
' → logprob: -9.886885643005371
    6. '```' → logprob: -9.886885643005371
    7. '`' → logprob: -11.261885643005371
    8. 'param' → logprob: -11.511885643005371
    9. 'ha' → logprob: -12.386885643005371
    10. ':param' → logprob: -12.511885643005371

Token 55: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021816512569785118
    2. ':' → logprob: -4.896816730499268
    3. '):' → logprob: -5.271816730499268
    4. '<|end|>' → logprob: -6.146816730499268
    5. ' ,' → logprob: -6.271816730499268
    6. ':int' → logprob: -6.521816730499268
    7. ' (' → logprob: -6.771816730499268
    8. ',int' → logprob: -7.521816730499268
    9. ' :' → logprob: -7.646816730499268
    10. ')' → logprob: -8.02181625366211

Token 56: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02976912073791027
    2. ' int' → logprob: -3.5297691822052
    3. ')' → logprob: -11.904768943786621
    4. '   ' → logprob: -12.279768943786621
    5. ':int' → logprob: -12.779768943786621
    6. ',' → logprob: -13.904768943786621
    7. '):' → logprob: -14.029768943786621
    8. ',int' → logprob: -14.654768943786621
    9. ' )' → logprob: -15.029768943786621
    10. ' entier' → logprob: -15.154768943786621

Token 57: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12729038298130035
    2. '):' → logprob: -2.1272904872894287
    3. ',' → logprob: -8.252290725708008
    4. ' )' → logprob: -10.627290725708008
    5. '):
' → logprob: -10.877290725708008
    6. ' ):' → logprob: -11.002290725708008
    7. '),' → logprob: -11.377290725708008
    8. '   ' → logprob: -11.752290725708008
    9. '<|end|>' → logprob: -11.877290725708008
    10. ':' → logprob: -12.752290725708008

Token 58: ' hauteur' (ID: 72987)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1758673191070557
    2. ' Le' → logprob: -1.1758673191070557
    3. ' Ha' → logprob: -1.6758673191070557
    4. ' hauteur' → logprob: -2.4258673191070557
    5. ' nombre' → logprob: -2.9258673191070557
    6. ' la' → logprob: -3.8008673191070557
    7. '   ' → logprob: -4.800867080688477
    8. 'Ha' → logprob: -5.050867080688477
    9. ' ha' → logprob: -5.550867080688477
    10. ' La' → logprob: -5.675867080688477

Token 59: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7506841421127319
    2. ')' → logprob: -1.250684142112732
    3. '   ' → logprob: -1.625684142112732
    4. ' ' → logprob: -4.0006842613220215
    5. ' ,' → logprob: -4.2506842613220215
    6. ' )' → logprob: -5.6256842613220215
    7. '<|end|>' → logprob: -6.0006842613220215
    8. '  ' → logprob: -6.3756842613220215
    9. ',
' → logprob: -6.8756842613220215
    10. '):' → logprob: -7.5006842613220215

Token 60: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20558124780654907
    2. 'la' → logprob: -2.3305811882019043
    3. 'l' → logprob: -2.4555811882019043
    4. ' l' → logprob: -6.205581188201904
    5. ' ' → logprob: -8.705581665039062
    6. ' ' → logprob: -8.705581665039062
    7. ' grille' → logprob: -9.455581665039062
    8. 'a' → logprob: -9.705581665039062
    9. ' grid' → logprob: -9.830581665039062
    10. 'lap' → logprob: -9.955581665039062

Token 61: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3878712058067322
    2. ' grille' → logprob: -1.137871265411377
    3. ' gr' → logprob: -7.512871265411377
    4. ' grid' → logprob: -8.512870788574219
    5. 'grid' → logprob: -9.137870788574219
    6. ' ' → logprob: -9.637870788574219
    7. 'g' → logprob: -10.512870788574219
    8. ' ' → logprob: -11.637870788574219
    9. '_gr' → logprob: -11.887870788574219
    10. 'r' → logprob: -11.887870788574219

Token 62: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25556057691574097
    2. ')' → logprob: -1.8805606365203857
    3. ',' → logprob: -4.005560398101807
    4. '\n' → logprob: -4.005560398101807
    5. '):' → logprob: -4.130560398101807
    6. ':' → logprob: -4.630560398101807
    7. '```' → logprob: -5.255560398101807
    8. '\' → logprob: -6.630560398101807
    9. '<|end|>' → logprob: -6.880560398101807
    10. ' ' → logprob: -8.005560874938965

Token 63: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048187002539634705
    2. ',' → logprob: -4.423186779022217
    3. ' )' → logprob: -4.923186779022217
    4. '   ' → logprob: -5.298186779022217
    5. ' la' → logprob: -5.423186779022217
    6. 'l' → logprob: -5.673186779022217
    7. ' ' → logprob: -5.673186779022217
    8. ' hauteur' → logprob: -5.798186779022217
    9. ' lignes' → logprob: -6.298186779022217
    10. ' ,' → logprob: -7.298186779022217

Token 64: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.012297017499804497
    2. ' d' → logprob: -5.2622971534729
    3. ')' → logprob: -6.0122971534729
    4. '_de' → logprob: -6.3872971534729
    5. 'de' → logprob: -6.5122971534729
    6. ' total' → logprob: -7.0122971534729
    7. '_' → logprob: -8.762296676635742
    8. ' ' → logprob: -9.387296676635742
    9. ' )' → logprob: -10.012296676635742
    10. '_total' → logprob: -10.137296676635742

Token 65: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5863965153694153
    2. ' lignes' → logprob: -0.8363965153694153
    3. ' ' → logprob: -5.58639669418335
    4. ' l' → logprob: -5.96139669418335
    5. ' ' → logprob: -6.33639669418335
    6. ' ligne' → logprob: -7.21139669418335
    7. ' lign' → logprob: -7.83639669418335
    8. '	l' → logprob: -8.336396217346191
    9. 'ligne' → logprob: -8.461396217346191
    10. ' rang' → logprob: -9.086396217346191

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.40998875699006e-05
    2. '   ' → logprob: -10.50007438659668
    3. ' )' → logprob: -10.87507438659668
    4. ')
' → logprob: -11.75007438659668
    5. '):' → logprob: -11.87507438659668
    6. ',' → logprob: -12.50007438659668
    7. '<|end|>' → logprob: -13.00007438659668
    8. ').' → logprob: -13.37507438659668
    9. '),' → logprob: -13.62507438659668
    10. '```' → logprob: -14.00007438659668

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35633236169815063
    2. ')' → logprob: -1.6063323020935059
    3. ',' → logprob: -3.106332302093506
    4. '```' → logprob: -3.856332302093506
    5. ' ' → logprob: -4.981332302093506
    6. ''' → logprob: -5.231332302093506
    7. '    
' → logprob: -5.981332302093506
    8. '\n' → logprob: -6.106332302093506
    9. '`' → logprob: -6.231332302093506
    10. ' 
' → logprob: -6.356332302093506

Token 68: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5911870002746582
    2. 'w' (adapté à ' w') → logprob: -0.8411870002746582
    3. '   ' → logprob: -4.216187000274658
    4. '```' → logprob: -8.9661865234375
    5. ' ' → logprob: -9.2161865234375
    6. '       ' → logprob: -9.7161865234375
    7. '    ' → logprob: -9.7161865234375
    8. ' ' → logprob: -11.8411865234375
    9. '  ' → logprob: -12.2161865234375
    10. '
' → logprob: -13.0911865234375

Token 69: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.002885237103328109
    2. ')' → logprob: -7.002885341644287
    3. '(int' → logprob: -7.002885341644287
    4. '):' → logprob: -7.127885341644287
    5. ':' → logprob: -8.502884864807129
    6. ':int' → logprob: -10.502884864807129
    7. ' :' → logprob: -11.377884864807129
    8. ' )' → logprob: -12.877884864807129
    9. '(' → logprob: -13.002884864807129
    10. ' ):' → logprob: -13.002884864807129

Token 70: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002482553943991661
    2. ' int' → logprob: -6.0024824142456055
    3. ')' → logprob: -12.627482414245605
    4. '(int' → logprob: -13.877482414245605
    5. '[int' → logprob: -14.377482414245605
    6. ':int' → logprob: -15.127482414245605
    7. '```' → logprob: -15.127482414245605
    8. '   ' → logprob: -15.127482414245605
    9. ']int' → logprob: -15.252482414245605
    10. '=int' → logprob: -15.252482414245605

Token 71: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00429955730214715
    2. ':' → logprob: -5.504299640655518
    3. ')' → logprob: -8.87929916381836
    4. ':int' → logprob: -9.62929916381836
    5. 'int' → logprob: -11.87929916381836
    6. ' ):' → logprob: -12.50429916381836
    7. '[int' → logprob: -13.75429916381836
    8. '   ' → logprob: -13.87929916381836
    9. '(int' → logprob: -14.12929916381836
    10. '):
' → logprob: -14.62929916381836

Token 72: ' largeur' (ID: 180807)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7611305713653564
    2. ' largeur' → logprob: -0.7611305713653564
    3. 'int' → logprob: -3.2611305713653564
    4. ' ' → logprob: -4.261130332946777
    5. ' large' → logprob: -5.011130332946777
    6. ' la' → logprob: -5.636130332946777
    7. 'large' → logprob: -6.261130332946777
    8. ' l' → logprob: -8.386130332946777
    9. '   ' → logprob: -8.511130332946777
    10. ' entier' → logprob: -8.761130332946777

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.006746162660419941
    2. '   ' → logprob: -5.756746292114258
    3. ' ' → logprob: -6.381746292114258
    4. 'de' → logprob: -6.756746292114258
    5. ' (' → logprob: -7.506746292114258
    6. ')' → logprob: -10.506746292114258
    7. 'def' → logprob: -10.756746292114258
    8. ' ' → logprob: -10.756746292114258
    9. '  ' → logprob: -11.131746292114258
    10. ' d' → logprob: -11.381746292114258

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.22901493310928345
    2. 'la' → logprob: -1.6040148735046387
    3. 'l' → logprob: -6.104014873504639
    4. ' ' → logprob: -7.104014873504639
    5. ' ' → logprob: -8.479015350341797
    6. 'a' → logprob: -8.729015350341797
    7. ' grille' → logprob: -9.729015350341797
    8. ' l' → logprob: -11.104015350341797
    9. 'lap' → logprob: -11.291515350341797
    10. '_la' → logprob: -11.416515350341797

Token 75: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.03373894467949867
    2. ' grille' → logprob: -3.408738851547241
    3. 'grid' → logprob: -10.15873908996582
    4. ' ' → logprob: -11.28373908996582
    5. ' gr' → logprob: -11.40873908996582
    6. ' ' → logprob: -11.40873908996582
    7. 'ligne' → logprob: -12.28373908996582
    8. '_gr' → logprob: -12.78373908996582
    9. '   ' → logprob: -12.90873908996582
    10. '```' → logprob: -13.15873908996582

Token 76: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6825328469276428
    2. '):' → logprob: -0.9325328469276428
    3. '   ' → logprob: -2.557532787322998
    4. '):
' → logprob: -3.807532787322998
    5. '```' → logprob: -7.182532787322998
    6. ')
' → logprob: -9.307533264160156
    7. ' )' → logprob: -9.307533264160156
    8. ' ):' → logprob: -10.057533264160156
    9. ':' → logprob: -10.307533264160156
    10. '):
' → logprob: -10.432533264160156

Token 77: 'nombre' (ID: 28576)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22826898097991943
    2. ')' → logprob: -2.103269100189209
    3. '):' → logprob: -3.103269100189209
    4. ' int' → logprob: -3.728269100189209
    5. 'gr' → logprob: -5.103269100189209
    6. ' grille' → logprob: -6.478269100189209
    7. 'l' → logprob: -6.978269100189209
    8. ' ' → logprob: -7.603269100189209
    9. ' )' → logprob: -7.728269100189209
    10. '   ' → logprob: -7.728269100189209

Token 78: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8629443049430847
    2. 'de' → logprob: -0.9879443049430847
    3. '):' → logprob: -2.2379443645477295
    4. ')' → logprob: -3.3629443645477295
    5. ' ' → logprob: -3.9879443645477295
    6. '   ' → logprob: -4.11294412612915
    7. '_de' → logprob: -4.11294412612915
    8. ' d' → logprob: -5.48794412612915
    9. 'd' → logprob: -5.86294412612915
    10. '=' → logprob: -6.36294412612915

Token 79: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.5888263583183289
    2. 'l' → logprob: -1.7138264179229736
    3. ' colon' → logprob: -2.0888264179229736
    4. ' la' → logprob: -3.4638264179229736
    5. ')' → logprob: -3.4638264179229736
    6. ' cellules' → logprob: -3.9638264179229736
    7. 'cell' → logprob: -4.8388261795043945
    8. 'cells' → logprob: -5.0888261795043945
    9. '   ' → logprob: -5.3388261795043945
    10. ' ' → logprob: -5.3388261795043945

Token 80: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.49656084179878235
    2. 'es' → logprob: -1.37156081199646
    3. 'n' → logprob: -2.24656081199646
    4. 'e' → logprob: -3.87156081199646
    5. ')' → logprob: -5.246561050415039
    6. 's' → logprob: -5.496561050415039
    7. 'ne' → logprob: -6.996561050415039
    8. 'i' → logprob: -7.996561050415039
    9. 'ies' → logprob: -9.121561050415039
    10. '```' → logprob: -9.746561050415039

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12746891379356384
    2. '):' → logprob: -2.1274688243865967
    3. '):
' → logprob: -7.877469062805176
    4. '   ' → logprob: -8.877469062805176
    5. ' )' → logprob: -11.752469062805176
    6. '```' → logprob: -12.502469062805176
    7. ' ):' → logprob: -12.752469062805176
    8. ')
' → logprob: -12.752469062805176
    9. ' ' → logprob: -13.252469062805176
    10. '"""' → logprob: -14.377469062805176

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01731012389063835
    2. ')' → logprob: -4.76731014251709
    3. '"""' → logprob: -5.89231014251709
    4. '"""
' → logprob: -6.26731014251709
    5. '```' → logprob: -6.89231014251709
    6. '    
' → logprob: -7.26731014251709
    7. ')
' → logprob: -7.39231014251709
    8. '\n' → logprob: -7.64231014251709
    9. '
' → logprob: -8.01731014251709
    10. ' ' → logprob: -8.89231014251709

Token 83: ' Retour' (ID: 146830)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3135066628456116
    2. ' 
' → logprob: -2.063506603240967
    3. '   ' → logprob: -3.063506603240967
    4. '\' → logprob: -3.313506603240967
    5. '
' → logprob: -4.188506603240967
    6. '    
' → logprob: -4.313506603240967
    7. '"""' → logprob: -4.688506603240967
    8. '"""
' → logprob: -4.938506603240967
    9. '```' → logprob: -5.813506603240967
    10. '     
' → logprob: -5.813506603240967

Token 84: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2238454967737198
    2. ' :' → logprob: -2.0988454818725586
    3. ' ' → logprob: -2.7238454818725586
    4. ':' → logprob: -4.723845481872559
    5. '   ' → logprob: -6.598845481872559
    6. 's' → logprob: -7.223845481872559
    7. '  ' → logprob: -7.848845481872559
    8. 'ner' → logprob: -8.473845481872559
    9. ' :
' → logprob: -8.473845481872559
    10. 'ne' → logprob: -8.473845481872559

Token 85: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37661439180374146
    2. ':' → logprob: -1.8766143321990967
    3. ' :' → logprob: -2.3766143321990967
    4. ' le' → logprob: -3.6266143321990967
    5. '  ' → logprob: -3.7516143321990967
    6. '   ' → logprob: -4.876614570617676
    7. ' int' → logprob: -6.001614570617676
    8. ' ' → logprob: -6.001614570617676
    9. ' la' → logprob: -6.751614570617676
    10. ' max' → logprob: -6.876614570617676

Token 86: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6208279728889465
    2. '    ' → logprob: -0.8708279728889465
    3. ' int' → logprob: -3.6208279132843018
    4. ' ' → logprob: -5.745828151702881
    5. ' le' → logprob: -6.245828151702881
    6. ' 
' → logprob: -6.245828151702881
    7. ' ```' → logprob: -6.495828151702881
    8. ' ' → logprob: -6.620828151702881
    9. '   ' → logprob: -7.120828151702881
    10. '  ' → logprob: -7.245828151702881

Token 87: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.039135709404945374
    2. 'int' (adapté à ' int') → logprob: -3.289135694503784
    3. '   ' → logprob: -6.914135932922363
    4. '       ' → logprob: -9.789135932922363
    5. ' max' → logprob: -10.414135932922363
    6. '(int' → logprob: -12.664135932922363
    7. ' n' → logprob: -12.789135932922363
    8. '```' → logprob: -13.039135932922363
    9. ' maximum' → logprob: -13.414135932922363
    10. ' integer' → logprob: -14.039135932922363

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3140151798725128
    2. ' 
' → logprob: -2.3140151500701904
    3. ' :' → logprob: -2.5640151500701904
    4. ' ' → logprob: -4.0640153884887695
    5. ',' → logprob: -4.6890153884887695
    6. '\' → logprob: -5.0640153884887695
    7. '```' → logprob: -5.0640153884887695
    8. ' ' → logprob: -5.3140153884887695
    9. ' maximum' → logprob: -5.3140153884887695
    10. '\n' → logprob: -5.5640153884887695

Token 89: ' Nombre' (ID: 70208)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08033204078674316
    2. ' h' → logprob: -3.580332040786743
    3. '   ' → logprob: -4.205331802368164
    4. ' le' → logprob: -4.580331802368164
    5. '(h' → logprob: -4.580331802368164
    6. ' max' → logprob: -5.705331802368164
    7. '    ' → logprob: -5.705331802368164
    8. ' maximum' → logprob: -5.955331802368164
    9. ' ' → logprob: -6.330331802368164
    10. ' ((' → logprob: -6.955331802368164

Token 90: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.5598832368850708
    2. ' maximal' → logprob: -0.9348832368850708
    3. ' max' → logprob: -4.434883117675781
    4. '_max' → logprob: -4.809883117675781
    5. ' maximale' → logprob: -5.559883117675781
    6. '_' → logprob: -5.934883117675781
    7. 'maximum' → logprob: -6.184883117675781
    8. ' ' → logprob: -6.184883117675781
    9. ' de' → logprob: -6.309883117675781
    10. 'max' → logprob: -6.309883117675781

Token 91: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45644986629486084
    2. ' de' → logprob: -1.0814498662948608
    3. ' d' → logprob: -4.08144998550415
    4. '  ' → logprob: -5.58144998550415
    5. 'de' → logprob: -6.20644998550415
    6. '    ' → logprob: -6.45644998550415
    7. '   ' → logprob: -7.33144998550415
    8. '_' → logprob: -7.95644998550415
    9. '<|end|>' → logprob: -7.95644998550415
    10. ')' → logprob: -8.081449508666992

Token 92: ' cellules' (ID: 134342)
  Prédit: ' cellules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.01876024715602398
    2. ' cells' → logprob: -4.6437602043151855
    3. ' cell' → logprob: -5.3937602043151855
    4. ' ' → logprob: -6.3937602043151855
    5. ' cellule' → logprob: -6.8937602043151855
    6. 'cell' → logprob: -7.0187602043151855
    7. ' cases' → logprob: -7.8937602043151855
    8. 'cells' → logprob: -8.518760681152344
    9. ' cel' → logprob: -9.393760681152344
    10. ' células' → logprob: -10.143760681152344

Token 93: ' sélection' (ID: 43472)
  Prédit: ' sélection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sélection' → logprob: -0.9486961960792542
    2. ' ' → logprob: -2.0736961364746094
    3. '   ' → logprob: -2.1986961364746094
    4. '_' → logprob: -2.4486961364746094
    5. ' )' → logprob: -3.0736961364746094
    6. ' pouvant' → logprob: -3.6986961364746094
    7. ' selected' → logprob: -3.9486961364746094
    8. ' ' → logprob: -3.9486961364746094
    9. ' à' → logprob: -3.9486961364746094
    10. '_selected' → logprob: -4.073696136474609

Token 94: 'nées' (ID: 136473)
  Prédit: 'nées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nées' → logprob: -0.022722383961081505
    2. 'ées' → logprob: -4.022722244262695
    3. 'é' → logprob: -6.522722244262695
    4. 'es' → logprob: -6.772722244262695
    5. 's' → logprob: -6.897722244262695
    6. 'n' → logprob: -7.272722244262695
    7. 'onnées' → logprob: -10.272722244262695
    8. 't' → logprob: -10.272722244262695
    9. ' ' → logprob: -10.772722244262695
    10. 'd' → logprob: -10.772722244262695

Token 95: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.675876259803772
    2. ':' → logprob: -1.550876259803772
    3. '\n' → logprob: -1.800876259803772
    4. ')' → logprob: -3.5508761405944824
    5. ':
' → logprob: -3.5508761405944824
    6. '):' → logprob: -4.425876140594482
    7. '    
' → logprob: -4.675876140594482
    8. '\' → logprob: -4.675876140594482
    9. '```' → logprob: -5.175876140594482
    10. '.' → logprob: -5.675876140594482

Token 96: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5046796798706055
    2. ' la' → logprob: -1.5046796798706055
    3. '   ' → logprob: -2.7546796798706055
    4. ' ' → logprob: -3.5046796798706055
    5. ' contraintes' → logprob: -3.7546796798706055
    6. ' constraint' → logprob: -4.5046796798706055
    7. '```' → logprob: -5.3796796798706055
    8. ' aucune' → logprob: -5.3796796798706055
    9. '-' → logprob: -5.6296796798706055
    10. ' forme' → logprob: -5.6296796798706055

Token 97: ' contr' (ID: 6030)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.14790292084217072
    2. 'contra' → logprob: -2.2729029655456543
    3. ' contraintes' → logprob: -4.147902965545654
    4. 'con' → logprob: -5.272902965545654
    5. 'restriction' → logprob: -5.522902965545654
    6. '```' → logprob: -6.272902965545654
    7. 'condition' → logprob: -6.647902965545654
    8. '   ' → logprob: -6.647902965545654
    9. '
' → logprob: -6.772902965545654
    10. 'constraint' → logprob: -6.772902965545654

Token 98: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.02742401324212551
    2. 'a' → logprob: -3.6524240970611572
    3. 'ain' → logprob: -8.152423858642578
    4. 'i' → logprob: -8.527423858642578
    5. '#' → logprob: -8.902423858642578
    6. '   ' → logprob: -9.277423858642578
    7. '
' → logprob: -9.402423858642578
    8. '\' → logprob: -9.402423858642578
    9. '1' → logprob: -9.902423858642578
    10. 'aint' → logprob: -10.277423858642578

Token 99: ' spéc' (ID: 20135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2140201330184937
    2. ' 
' → logprob: -1.2140201330184937
    3. '\' → logprob: -2.339020252227783
    4. '\n' → logprob: -2.964020252227783
    5. '    
' → logprob: -3.089020252227783
    6. ' 
    
' → logprob: -3.464020252227783
    7. '.' → logprob: -3.589020252227783
    8. ' ' → logprob: -3.589020252227783
    9. ',' → logprob: -3.714020252227783
    10. ' \' → logprob: -3.839020252227783

Token 100: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.6753453612327576
    2. 'ifi' → logprob: -1.5503454208374023
    3. 'ifiées' → logprob: -1.6753454208374023
    4. 'i' → logprob: -2.6753454208374023
    5. 'ifié' → logprob: -4.175345420837402
    6. 'ifiés' → logprob: -5.550345420837402
    7. 'if' → logprob: -6.300345420837402
    8. 'ifiquement' → logprob: -7.175345420837402
    9. 'ifiques' → logprob: -7.675345420837402
    10. '   ' → logprob: -9.925345420837402

Token 101: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1047842800617218
    2. ':' → logprob: -2.7297842502593994
    3. ')' → logprob: -3.8547842502593994
    4. '):' → logprob: -4.6047844886779785
    5. ':
' → logprob: -6.4797844886779785
    6. '):
' → logprob: -7.6047844886779785
    7. '    
' → logprob: -8.35478401184082
    8. ' :' → logprob: -8.72978401184082
    9. '\n' → logprob: -8.85478401184082
    10. '```' → logprob: -8.97978401184082

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02558394894003868
    2. '
' → logprob: -4.400583744049072
    3. ')' → logprob: -5.150583744049072
    4. '\n' → logprob: -6.150583744049072
    5. '"""' → logprob: -6.275583744049072
    6. '    
' → logprob: -6.650583744049072
    7. '```' → logprob: -7.775583744049072
    8. ' 
' → logprob: -8.27558422088623
    9. '"""
' → logprob: -8.40058422088623
    10. '  
' → logprob: -8.52558422088623

Token 103: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2752886116504669
    2. '
' → logprob: -2.1502885818481445
    3. '\n' → logprob: -2.4002885818481445
    4. '"""' → logprob: -4.7752885818481445
    5. '    
' → logprob: -5.1502885818481445
    6. ')' → logprob: -5.4002885818481445
    7. ' 
' → logprob: -5.7752885818481445
    8. '\' → logprob: -6.0252885818481445
    9. '```' → logprob: -6.0252885818481445
    10. '  
' → logprob: -6.2752885818481445

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03877660632133484
    2. '
' → logprob: -3.9137766361236572
    3. '    
' → logprob: -4.663776397705078
    4. ' 
' → logprob: -5.163776397705078
    5. 'n' → logprob: -6.663776397705078
    6. '\n' → logprob: -7.163776397705078
    7. '     
' → logprob: -8.288776397705078
    8. '\' → logprob: -8.538776397705078
    9. '   
' → logprob: -9.038776397705078
    10. '    ' → logprob: -9.163776397705078

Token 105: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7820184230804443
    2. 'return' → logprob: -1.0320184230804443
    3. 'if' → logprob: -2.9070184230804443
    4. 'total' → logprob: -3.4070184230804443
    5. '   ' → logprob: -3.6570184230804443
    6. ' max' → logprob: -3.9070184230804443
    7. ' return' → logprob: -4.282018661499023
    8. 'cells' → logprob: -4.657018661499023
    9. '#' (adapté à ' #') → logprob: -4.907018661499023
    10. ' if' → logprob: -5.157018661499023

Token 106: ' Cas' (ID: 8066)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6716257929801941
    2. ' max' → logprob: -1.1716258525848389
    3. '   ' → logprob: -3.546625852584839
    4. 'return' → logprob: -3.546625852584839
    5. 'selected' → logprob: -3.671625852584839
    6. ' selected' → logprob: -4.17162561416626
    7. 'if' → logprob: -4.29662561416626
    8. ' if' → logprob: -4.42162561416626
    9. ' return' → logprob: -4.54662561416626
    10. 'total' → logprob: -5.04662561416626

Token 107: ' particulier' (ID: 47842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8100972175598145
    2. ' ' → logprob: -0.9350972175598145
    3. ' where' → logprob: -3.1850972175598145
    4. '  ' → logprob: -3.4350972175598145
    5. 's' → logprob: -4.1850972175598145
    6. '1' → logprob: -4.3100972175598145
    7. ' de' → logprob: -4.4350972175598145
    8. ' =' → logprob: -4.6850972175598145
    9. ' s' → logprob: -4.8100972175598145
    10. ' où' → logprob: -5.4350972175598145

Token 108: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2261960655450821
    2. ' :' → logprob: -2.726196050643921
    3. ':' → logprob: -2.851196050643921
    4. '    ' → logprob: -2.976196050643921
    5. ' ' → logprob: -4.4761962890625
    6. '     
' → logprob: -4.9761962890625
    7. '    
' → logprob: -5.7261962890625
    8. ' if' → logprob: -5.8511962890625
    9. ' 
' → logprob: -6.7261962890625
    10. '  ' → logprob: -7.4761962890625

Token 109: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.327461302280426
    2. 'if' → logprob: -1.9524612426757812
    3. '1' → logprob: -2.8274612426757812
    4. ' ' → logprob: -3.7024612426757812
    5. ' h' → logprob: -3.7024612426757812
    6. '   ' → logprob: -3.9524612426757812
    7. 'h' → logprob: -5.577461242675781
    8. ' return' → logprob: -6.827461242675781
    9. '0' → logprob: -7.202461242675781
    10. ' max' → logprob: -7.577461242675781

Token 110: ' l' (ID: 305)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.008803417906165123
    2. 'h' → logprob: -4.758803367614746
    3. ' (' → logprob: -9.508803367614746
    4. ' ' → logprob: -9.758803367614746
    5. ' w' → logprob: -10.883803367614746
    6. '

' → logprob: -11.508803367614746
    7. '	h' → logprob: -12.008803367614746
    8. '   ' → logprob: -12.383803367614746
    9. '(h' → logprob: -13.196303367614746
    10. ' ' → logprob: -13.321303367614746

Token 111: ''une' (ID: 13337)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.39939695596694946
    2. '   ' → logprob: -1.7743968963623047
    3. ''' → logprob: -2.8993968963623047
    4. 'h' → logprob: -3.3993968963623047
    5. ' '' → logprob: -3.6493968963623047
    6. 'e' → logprob: -3.7743968963623047
    7. ''h' → logprob: -5.524396896362305
    8. ' a' → logprob: -5.774396896362305
    9. ' w' → logprob: -6.024396896362305
    10. ' e' → logprob: -6.024396896362305

Token 112: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09257043153047562
    2. ' ==' → logprob: -2.9675705432891846
    3. ' de' → logprob: -4.5925703048706055
    4. '==' → logprob: -4.7175703048706055
    5. 'des' → logprob: -4.7175703048706055
    6. ' ou' → logprob: -5.3425703048706055
    7. 'de' → logprob: -7.3425703048706055
    8. ' >=' → logprob: -7.5925703048706055
    9. ')' → logprob: -8.092570304870605
    10. '   ' → logprob: -8.217570304870605

Token 113: ' dimensions' (ID: 23995)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.13517053425312042
    2. 'h' → logprob: -2.1351704597473145
    3. ' w' → logprob: -5.3851704597473145
    4. ' ' → logprob: -6.5101704597473145
    5. ' dimensions' → logprob: -7.0101704597473145
    6. 'w' → logprob: -8.010170936584473
    7. '0' → logprob: -8.385170936584473
    8. ' (' → logprob: -8.885170936584473
    9. '   ' → logprob: -9.010170936584473
    10. ' valeurs' → logprob: -9.635170936584473

Token 114: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0429278202354908
    2. '==' → logprob: -3.7929277420043945
    3. ' <=' → logprob: -4.2929277420043945
    4. ' est' → logprob: -5.6679277420043945
    5. '1' → logprob: -6.9179277420043945
    6. ' ' → logprob: -7.2929277420043945
    7. 'est' → logprob: -8.417927742004395
    8. '<=' → logprob: -8.792927742004395
    9. '0' → logprob: -9.542927742004395
    10. ' vaut' → logprob: -9.542927742004395

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20891086757183075
    2. ' ' → logprob: -1.7089108228683472
    3. '1' → logprob: -4.958910942077637
    4. '   ' → logprob: -7.958910942077637
    5. ' <=' → logprob: -11.333910942077637
    6. '  ' → logprob: -11.458910942077637
    7. '```' → logprob: -11.458910942077637
    8. ' ==' → logprob: -11.708910942077637
    9. ' ég' → logprob: -11.833910942077637
    10. ' inf' → logprob: -11.833910942077637

Token 116: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01957922801375389
    2. '1' → logprob: -4.0195794105529785
    3. ' ' → logprob: -6.8945794105529785
    4. '   ' → logprob: -8.14457893371582
    5. 'inf' → logprob: -9.51957893371582
    6. 'n' → logprob: -11.89457893371582
    7. '```' → logprob: -11.89457893371582
    8. ' inf' → logprob: -12.14457893371582
    9. '<=' → logprob: -12.64457893371582
    10. '==' → logprob: -12.64457893371582

Token 117: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13346603512763977
    2. '   ' → logprob: -2.3834660053253174
    3. ':
' → logprob: -4.1334662437438965
    4. ',' → logprob: -4.7584662437438965
    5. ' :' → logprob: -6.1334662437438965
    6. '    
' → logprob: -6.3834662437438965
    7. '
' → logprob: -6.6334662437438965
    8. '    ' → logprob: -7.6334662437438965
    9. ' 
' → logprob: -7.6334662437438965
    10. ' :
' → logprob: -7.7584662437438965

Token 118: 'ligne' (ID: 94660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2955681085586548
    2. '),' → logprob: -1.7955681085586548
    3. ' ),' → logprob: -3.5455679893493652
    4. '):
' → logprob: -4.295567989349365
    5. ',' → logprob: -4.545567989349365
    6. ' return' → logprob: -4.670567989349365
    7. ')' → logprob: -5.420567989349365
    8. '
' → logprob: -5.545567989349365
    9. 'return' → logprob: -5.920567989349365
    10. ' ,' → logprob: -6.295567989349365

Token 119: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.27261820435523987
    2. ' ou' → logprob: -1.7726181745529175
    3. '   ' → logprob: -3.647618293762207
    4. ')' → logprob: -3.647618293762207
    5. ' ' → logprob: -4.897618293762207
    6. 'ou' → logprob: -6.272618293762207
    7. ' and' → logprob: -6.522618293762207
    8. ' et' → logprob: -6.647618293762207
    9. ' )' → logprob: -6.772618293762207
    10. '):' → logprob: -7.022618293762207

Token 120: ' colonne' (ID: 148275)
  Prédit: ' colonne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colonne' → logprob: -0.16483277082443237
    2. 'col' → logprob: -2.289832830429077
    3. ' ' → logprob: -3.664832830429077
    4. ' colon' → logprob: -4.664832592010498
    5. ' col' → logprob: -5.414832592010498
    6. 'colon' → logprob: -5.789832592010498
    7. 'column' → logprob: -6.164832592010498
    8. '1' → logprob: -6.414832592010498
    9. '0' → logprob: -7.039832592010498
    10. '   ' → logprob: -7.164832592010498

Token 121: ' unique' (ID: 5746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0885748863220215
    2. '   ' → logprob: -1.2135748863220215
    3. '):
' → logprob: -1.3385748863220215
    4. '):' → logprob: -2.9635748863220215
    5. '),' → logprob: -3.3385748863220215
    6. ')
' → logprob: -5.3385748863220215
    7. ',' → logprob: -5.7135748863220215
    8. ' ):
' → logprob: -5.8385748863220215
    9. ' )' → logprob: -6.0885748863220215
    10. ' ),' → logprob: -7.3385748863220215

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7878862023353577
    2. '):
' → logprob: -1.037886142730713
    3. '):' → logprob: -2.162886142730713
    4. ',' → logprob: -3.537886142730713
    5. '   ' → logprob: -3.537886142730713
    6. '),' → logprob: -4.537886142730713
    7. ' ):
' → logprob: -5.912886142730713
    8. ' )' → logprob: -6.662886142730713
    9. ':' → logprob: -7.162886142730713
    10. ' ):' → logprob: -7.287886142730713

Token 123: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2731849253177643
    2. '   ' → logprob: -1.523184895515442
    3. ':
' → logprob: -4.773184776306152
    4. '    
' → logprob: -5.398184776306152
    5. '
' → logprob: -6.148184776306152
    6. ' :' → logprob: -6.523184776306152
    7. '       ' → logprob: -6.523184776306152
    8. ',' → logprob: -6.898184776306152
    9. ' 
' → logprob: -7.773184776306152
    10. '    ' → logprob: -8.023184776306152

Token 124: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6877207159996033
    2. '
' → logprob: -1.187720775604248
    3. ' 
' → logprob: -2.562720775604248
    4. '    
' → logprob: -2.687720775604248
    5. ':' → logprob: -4.062720775604248
    6. '  
' → logprob: -5.062720775604248
    7. '   
' → logprob: -5.187720775604248
    8. '\n' → logprob: -5.437720775604248
    9. 'if' (adapté à ' if') → logprob: -5.937720775604248
    10. ' if' → logprob: -6.062720775604248

Token 125: ' w' (ID: 286)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.00272594066336751
    2. 'h' → logprob: -6.002726078033447
    3. ' min' → logprob: -8.627725601196289
    4. ' ' → logprob: -10.002725601196289
    5. ' max' → logprob: -11.127725601196289
    6. 'min' → logprob: -12.252725601196289
    7. '	h' → logprob: -13.127725601196289
    8. ' ' → logprob: -13.752725601196289
    9. 'max' → logprob: -14.127725601196289
    10. ' w' → logprob: -14.127725601196289

Token 126: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01633792370557785
    2. '==' → logprob: -4.641337871551514
    3. ' <=' → logprob: -5.141337871551514
    4. ' ' → logprob: -7.391337871551514
    5. '<=' → logprob: -10.391338348388672
    6. ' *' → logprob: -10.641338348388672
    7. ' <' → logprob: -11.516338348388672
    8. '1' → logprob: -11.766338348388672
    9. '   ' → logprob: -12.391338348388672
    10. '=' → logprob: -12.766338348388672

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2521982192993164
    2. ' ' → logprob: -1.5021982192993164
    3. '0' → logprob: -8.252198219299316
    4. '  ' → logprob: -12.939698219299316
    5. ' ' → logprob: -13.689698219299316
    6. '=' → logprob: -13.752198219299316
    7. '   ' → logprob: -14.064698219299316
    8. '
' → logprob: -14.189698219299316
    9. '```' → logprob: -14.752198219299316
    10. ' 
' → logprob: -15.002198219299316

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021831797494087368
    2. ' ' → logprob: -8.750218391418457
    3. '0' → logprob: -9.750218391418457
    4. '   ' → logprob: -14.937718391418457
    5. '=' → logprob: -15.250218391418457
    6. '  ' → logprob: -15.375218391418457
    7. '```' → logprob: -15.625218391418457
    8. '
' → logprob: -15.875218391418457
    9. '۱' → logprob: -17.31271743774414
    10. '１' → logprob: -17.37521743774414

Token 129: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21301594376564026
    2. ' or' → logprob: -1.8380159139633179
    3. ':
' → logprob: -3.4630160331726074
    4. 'or' → logprob: -7.588016033172607
    5. ' :' → logprob: -7.963016033172607
    6. ' and' → logprob: -8.21301555633545
    7. ':return' → logprob: -9.08801555633545
    8. '   ' → logprob: -9.58801555633545
    9. ' :
' → logprob: -10.33801555633545
    10. 'and' → logprob: -11.33801555633545

Token 130: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.12695194780826569
    2. 'h' → logprob: -2.1269519329071045
    3. '	h' → logprob: -11.251952171325684
    4. '   ' → logprob: -12.376952171325684
    5. '1' → logprob: -13.001952171325684
    6. ' ' → logprob: -14.001952171325684
    7. ' ' → logprob: -14.251952171325684
    8. ' w' → logprob: -14.251952171325684
    9. '"h' → logprob: -15.001952171325684
    10. '    ' → logprob: -15.126952171325684

Token 131: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043026819825172424
    2. '==' → logprob: -3.168026924133301
    3. ' ' → logprob: -10.9180269241333
    4. '<|end|>' → logprob: -12.6680269241333
    5. '1' → logprob: -13.7930269241333
    6. ' ==
' → logprob: -13.9180269241333
    7. ' ' → logprob: -14.1680269241333
    8. '=' → logprob: -14.2930269241333
    9. '==
' → logprob: -14.4180269241333
    10. ')' → logprob: -14.6680269241333

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859089106321335
    2. ' ' → logprob: -3.048590898513794
    3. '   ' → logprob: -13.298590660095215
    4. '  ' → logprob: -14.736090660095215
    5. '0' → logprob: -15.361090660095215
    6. '<|end|>' → logprob: -15.548590660095215
    7. '```' → logprob: -15.611090660095215
    8. '
' → logprob: -15.986090660095215
    9. '2' → logprob: -16.42359161376953
    10. ' ' → logprob: -16.42359161376953

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.375627517700195
    4. '  ' → logprob: -16.250627517700195
    5. '```' → logprob: -16.813127517700195
    6. '0' → logprob: -17.000627517700195
    7. '2' → logprob: -17.688127517700195
    8. '
' → logprob: -17.875627517700195
    9. 'w' → logprob: -18.188127517700195
    10. '۱' → logprob: -18.563127517700195

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04307477921247482
    2. ':
' → logprob: -3.1680748462677
    3. ':return' → logprob: -10.168074607849121
    4. ' :' → logprob: -11.543074607849121
    5. '   ' → logprob: -12.043074607849121
    6. '):' → logprob: -12.168074607849121
    7. ' :
' → logprob: -12.293074607849121
    8. '       ' → logprob: -12.543074607849121
    9. '):
' → logprob: -12.793074607849121
    10. ',' → logprob: -13.293074607849121

Token 135: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4838024079799652
    2. ':
' → logprob: -0.9838024377822876
    3. '
' → logprob: -5.733802318572998
    4. '       ' → logprob: -5.983802318572998
    5. ':return' → logprob: -6.108802318572998
    6. '   ' → logprob: -6.483802318572998
    7. ' :
' → logprob: -9.608802795410156
    8. ' :' → logprob: -10.608802795410156
    9. 'return' → logprob: -10.983802795410156
    10. ' return' → logprob: -11.358802795410156

Token 136: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6864967942237854
    2. 'return' → logprob: -0.8114967942237854
    3. ' return' → logprob: -3.1864967346191406
    4. '
' → logprob: -4.561496734619141
    5. '   ' → logprob: -7.436496734619141
    6. ' 
' → logprob: -10.43649673461914
    7. '        
' → logprob: -10.68649673461914
    8. '           ' → logprob: -11.31149673461914
    9. ' ' → logprob: -11.56149673461914
    10. '	return' → logprob: -11.81149673461914

Token 137: ' Dans' (ID: 22082)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1720287948846817
    2. ' return' → logprob: -1.9220287799835205
    3. '   ' → logprob: -4.5470290184021
    4. '       ' → logprob: -7.1720290184021
    5. 'ret' → logprob: -8.797028541564941
    6. 're' → logprob: -10.172028541564941
    7. '
' → logprob: -10.547028541564941
    8. '#' → logprob: -10.672028541564941
    9. '    ' → logprob: -10.922028541564941
    10. 'max' → logprob: -11.047028541564941

Token 138: ' ce' (ID: 2357)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.899091362953186
    2. ' return' → logprob: -1.524091362953186
    3. 'max' → logprob: -1.899091362953186
    4. ' max' → logprob: -2.0240912437438965
    5. '   ' → logprob: -2.3990912437438965
    6. '
' → logprob: -6.6490912437438965
    7. ' ' → logprob: -7.8990912437438965
    8. ' h' → logprob: -8.524091720581055
    9. 'h' → logprob: -8.774091720581055
    10. ' retour' → logprob: -9.524091720581055

Token 139: ' cas' (ID: 2108)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8369562029838562
    2. '   ' → logprob: -1.586956262588501
    3. ' return' → logprob: -1.711956262588501
    4. '
' → logprob: -2.586956262588501
    5. ' cas' → logprob: -3.086956262588501
    6. '       ' → logprob: -4.461956024169922
    7. '    
' → logprob: -4.461956024169922
    8. 'max' → logprob: -4.836956024169922
    9. 'cas' → logprob: -5.211956024169922
    10. ' retour' → logprob: -5.336956024169922

Token 140: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2688674032688141
    2. 'return' → logprob: -2.3938674926757812
    3. '       ' → logprob: -2.6438674926757812
    4. ',' → logprob: -3.3938674926757812
    5. ' return' → logprob: -3.8938674926757812
    6. '   ' → logprob: -4.518867492675781
    7. ':' → logprob: -5.893867492675781
    8. ':return' → logprob: -6.643867492675781
    9. '        
' → logprob: -6.893867492675781
    10. ':
' → logprob: -7.393867492675781

Token 141: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22737708687782288
    2. ' return' → logprob: -1.6023770570755005
    3. '   ' → logprob: -6.602376937866211
    4. '       ' → logprob: -8.227376937866211
    5. 'max' → logprob: -8.852376937866211
    6. '#' → logprob: -9.477376937866211
    7. '
' → logprob: -10.477376937866211
    8. ' max' → logprob: -10.852376937866211
    9. ' #' → logprob: -11.227376937866211
    10. 'ret' → logprob: -11.727376937866211

Token 142: ' ne' (ID: 453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44920018315315247
    2. ' return' → logprob: -1.07420015335083
    3. 'ret' → logprob: -4.57420015335083
    4. ' retourne' → logprob: -6.07420015335083
    5. '   ' → logprob: -6.19920015335083
    6. ' peut' → logprob: -7.19920015335083
    7. ' ret' → logprob: -7.69920015335083
    8. 'r' → logprob: -7.82420015335083
    9. '
' → logprob: -7.82420015335083
    10. ' peux' → logprob: -7.94920015335083

Token 143: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.35817641019821167
    2. ' peut' → logprob: -1.3581764698028564
    3. 'return' → logprob: -4.858176231384277
    4. ' peux' → logprob: -5.358176231384277
    5. 's' → logprob: -5.483176231384277
    6. ' prend' → logprob: -5.608176231384277
    7. 'p' → logprob: -5.733176231384277
    8. ' sélection' → logprob: -5.858176231384277
    9. 'sé' → logprob: -5.858176231384277
    10. ' ' → logprob: -6.108176231384277

Token 144: ' sélectionner' (ID: 188432)
  Prédit: ' sélectionner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sélectionner' → logprob: -0.19391614198684692
    2. ' pas' → logprob: -1.9439160823822021
    3. ' ' → logprob: -4.068916320800781
    4. 'pas' → logprob: -5.318916320800781
    5. 'sé' → logprob: -6.193916320800781
    6. ' sélection' → logprob: -6.318916320800781
    7. ' prendre' → logprob: -6.318916320800781
    8. ' select' → logprob: -6.943916320800781
    9. 's' → logprob: -7.318916320800781
    10. 'select' → logprob: -7.568916320800781

Token 145: ' qu' (ID: 474)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2755773365497589
    2. ' que' → logprob: -2.0255773067474365
    3. ' pas' → logprob: -2.5255773067474365
    4. ' ' → logprob: -4.275577545166016
    5. '(' → logprob: -5.400577545166016
    6. 'pas' → logprob: -6.025577545166016
    7. ' qu' → logprob: -7.150577545166016
    8. ' au' → logprob: -7.275577545166016
    9. 'auc' → logprob: -7.275577545166016
    10. ' ceil' → logprob: -7.650577545166016

Token 146: ''une' (ID: 13337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21490605175495148
    2. ''un' → logprob: -2.2149059772491455
    3. 'e' → logprob: -2.9649059772491455
    4. 'ue' → logprob: -4.339906215667725
    5. ''une' → logprob: -4.839906215667725
    6. ''u' → logprob: -5.589906215667725
    7. ''' → logprob: -5.839906215667725
    8. ''environ' → logprob: -5.964906215667725
    9. ''au' → logprob: -6.589906215667725
    10. ''à' → logprob: -8.214905738830566

Token 147: ' seule' (ID: 41983)
  Prédit: ' cellule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellule' → logprob: -0.29701992869377136
    2. ' ' → logprob: -2.0470199584960938
    3. ' cell' → logprob: -3.0470199584960938
    4. 'e' → logprob: -3.6720199584960938
    5. ' seule' → logprob: -4.297019958496094
    6. ' cellules' → logprob: -4.547019958496094
    7. ' case' → logprob: -5.172019958496094
    8. 'cell' → logprob: -5.547019958496094
    9. ' cells' → logprob: -5.547019958496094
    10. ' moitié' → logprob: -5.922019958496094

Token 148: ' cellule' (ID: 169440)
  Prédit: ' cellule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellule' → logprob: -0.593478262424469
    2. ' cell' → logprob: -1.5934782028198242
    3. 'cell' → logprob: -1.7184782028198242
    4. ' ' → logprob: -3.593478202819824
    5. ' case' → logprob: -4.593478202819824
    6. 'case' → logprob: -4.593478202819824
    7. 'cel' → logprob: -4.968478202819824
    8. ' cells' → logprob: -6.093478202819824
    9. ' cellules' → logprob: -6.343478202819824
    10. 'celle' → logprob: -6.593478202819824

Token 149: ' au' (ID: 2791)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9606311917304993
    2. ' ' → logprob: -1.2106311321258545
    3. '*' → logprob: -2.4606311321258545
    4. ' *' → logprob: -2.5856311321258545
    5. ',' → logprob: -3.5856311321258545
    6. '
' → logprob: -3.7106311321258545
    7. '    
' → logprob: -3.8356311321258545
    8. '1' → logprob: -4.335631370544434
    9. '  
' → logprob: -4.835631370544434
    10. '     
' → logprob: -4.835631370544434

Token 150: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.8733786344528198
    2. 'moins' → logprob: -1.7483786344528198
    3. 'n' → logprob: -1.8733786344528198
    4. 'maximum' → logprob: -3.2483787536621094
    5. ' moins' → logprob: -3.3733787536621094
    6. 'x' → logprob: -3.8733787536621094
    7. 'nd' → logprob: -3.9983787536621094
    8. ' minimum' → logprob: -4.248378753662109
    9. 'tour' → logprob: -4.748378753662109
    10. 't' → logprob: -4.748378753662109

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19239480793476105
    2. '
' → logprob: -2.067394733428955
    3. 'return' → logprob: -4.317394733428955
    4. ' return' → logprob: -4.442394733428955
    5. ',' → logprob: -4.817394733428955
    6. ' 
' → logprob: -5.442394733428955
    7. '   ' → logprob: -5.692394733428955
    8. '        
' → logprob: -5.942394733428955
    9. ':' → logprob: -6.942394733428955
    10. ':return' → logprob: -7.067394733428955

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2042291760444641
    2. ':' → logprob: -2.5792291164398193
    3. '
' → logprob: -2.8292291164398193
    4. ' 
' → logprob: -4.454229354858398
    5. ':
' → logprob: -4.829229354858398
    6. ' return' → logprob: -5.079229354858398
    7. '   ' → logprob: -5.204229354858398
    8. ':return' → logprob: -5.579229354858398
    9. ',' → logprob: -5.954229354858398
    10. 'return' → logprob: -6.079229354858398

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024324951693415642
    2. ' return' → logprob: -3.774324893951416
    3. '   ' → logprob: -7.149324893951416
    4. 'max' → logprob: -8.899325370788574
    5. '       ' → logprob: -9.524325370788574
    6. '
' → logprob: -10.899325370788574
    7. ' 
' → logprob: -11.649325370788574
    8. ':return' → logprob: -11.649325370788574
    9. '    
' → logprob: -11.774325370788574
    10. '        
' → logprob: -12.024325370788574

Token 154: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.960716962814331
    2. 'max' → logprob: -0.960716962814331
    3. ' (' → logprob: -2.085716962814331
    4. '1' → logprob: -3.585716962814331
    5. '(max' → logprob: -3.710716962814331
    6. '(h' → logprob: -3.960716962814331
    7. 'h' → logprob: -4.21071720123291
    8. ' h' → logprob: -4.33571720123291
    9. ' ' → logprob: -5.46071720123291
    10. '(w' → logprob: -6.58571720123291

Token 155: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4915747046470642
    2. '(h' → logprob: -1.741574764251709
    3. '(max' → logprob: -1.866574764251709
    4. '(w' → logprob: -3.491574764251709
    5. '1' → logprob: -4.741574764251709
    6. '(' → logprob: -5.366574764251709
    7. 'h' → logprob: -5.741574764251709
    8. 'min' → logprob: -5.866574764251709
    9. ' (' → logprob: -5.991574764251709
    10. ' max' → logprob: -6.116574764251709

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09510920941829681
    2. '    
' → logprob: -3.470109224319458
    3. ' 
' → logprob: -4.095108985900879
    4. '   ' → logprob: -4.220108985900879
    5. '\n' → logprob: -4.220108985900879
    6. '  
' → logprob: -4.470108985900879
    7. '   
' → logprob: -6.720108985900879
    8. '<|end|>' → logprob: -8.595108985900879
    9. '\' → logprob: -8.845108985900879
    10. '  ' → logprob: -9.845108985900879

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38977763056755066
    2. ' 
' → logprob: -1.639777660369873
    3. '  
' → logprob: -2.889777660369873
    4. '\n' → logprob: -3.014777660369873
    5. '    
' → logprob: -4.639777660369873
    6. '<|end|>' → logprob: -5.139777660369873
    7. '   ' → logprob: -5.764777660369873
    8. '\' → logprob: -6.389777660369873
    9. '   
' → logprob: -6.889777660369873
    10. ' ' → logprob: -7.139777660369873

Token 158: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37062835693359375
    2. ' 
' → logprob: -1.4956283569335938
    3. '  
' → logprob: -3.2456283569335938
    4. '    
' → logprob: -3.9956283569335938
    5. '\n' → logprob: -4.120628356933594
    6. '   ' → logprob: -5.370628356933594
    7. '   
' → logprob: -6.120628356933594
    8. '\' → logprob: -6.745628356933594
    9. '<|end|>' → logprob: -7.245628356933594
    10. ' ' → logprob: -7.370628356933594

Token 159: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8578068017959595
    2. 'max' → logprob: -1.3578068017959595
    3. ' max' → logprob: -1.9828068017959595
    4. '   ' → logprob: -2.60780668258667
    5. ' #' → logprob: -3.98280668258667
    6. 'else' → logprob: -3.98280668258667
    7. 'result' → logprob: -4.48280668258667
    8. 'return' → logprob: -4.98280668258667
    9. 'total' → logprob: -5.23280668258667
    10. 'selected' → logprob: -5.23280668258667

Token 160: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13845807313919067
    2. ' elif' → logprob: -2.513458013534546
    3. ' else' → logprob: -4.138458251953125
    4. '   ' → logprob: -5.513458251953125
    5. ' where' → logprob: -5.763458251953125
    6. 's' → logprob: -5.888458251953125
    7. '_' → logprob: -6.013458251953125
    8. '  ' → logprob: -6.138458251953125
    9. ' d' → logprob: -6.138458251953125
    10. 'u' → logprob: -6.138458251953125

Token 161: ' le' (ID: 505)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25752949714660645
    2. ' (' → logprob: -2.1325294971466064
    3. 'h' → logprob: -2.8825294971466064
    4. ' w' → logprob: -3.3825294971466064
    5. 'w' → logprob: -5.132529258728027
    6. ' ' → logprob: -5.757529258728027
    7. '(' → logprob: -5.757529258728027
    8. '(h' → logprob: -5.757529258728027
    9. ' both' → logprob: -7.507529258728027
    10. '   ' → logprob: -7.632529258728027

Token 162: ' nombre' (ID: 9733)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6140716075897217
    2. ' nombre' → logprob: -1.9890716075897217
    3. ' h' → logprob: -2.2390716075897217
    4. 'w' → logprob: -2.3640716075897217
    5. 'nombre' → logprob: -2.7390716075897217
    6. ' grid' → logprob: -4.739071846008301
    7. '   ' → logprob: -5.114071846008301
    8. ' w' → logprob: -5.114071846008301
    9. 'gr' → logprob: -5.489071846008301
    10. 'grid' → logprob: -5.614071846008301

Token 163: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.330058753490448
    2. ' total' → logprob: -2.4550588130950928
    3. 'de' → logprob: -2.5800588130950928
    4. ' d' → logprob: -2.8300588130950928
    5. 'total' → logprob: -3.5800588130950928
    6. 'd' → logprob: -4.705058574676514
    7. ' ' → logprob: -4.830058574676514
    8. ' des' → logprob: -5.580058574676514
    9. '_total' → logprob: -5.955058574676514
    10. '<|end|>' → logprob: -6.330058574676514

Token 164: ' lignes' (ID: 81687)
  Prédit: ' cellules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.1119854599237442
    2. ' cells' → logprob: -3.486985445022583
    3. 'cells' → logprob: -3.986985445022583
    4. ' lignes' → logprob: -3.986985445022583
    5. 'cell' → logprob: -4.361985683441162
    6. 'l' → logprob: -5.111985683441162
    7. ' h' → logprob: -5.361985683441162
    8. ' cell' → logprob: -5.861985683441162
    9. 'c' → logprob: -6.361985683441162
    10. ' ' → logprob: -6.486985683441162

Token 165: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7369911074638367
    2. '%' → logprob: -1.7369911670684814
    3. ' %' → logprob: -1.8619911670684814
    4. '==' → logprob: -2.8619911670684814
    5. ' ou' → logprob: -2.9869911670684814
    6. ' <=' → logprob: -3.4869911670684814
    7. ' est' → logprob: -3.8619911670684814
    8. 'ou' → logprob: -4.611990928649902
    9. ' >=' → logprob: -5.361990928649902
    10. '<=' → logprob: -5.986990928649902

Token 166: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -1.0122681856155396
    2. ' ' → logprob: -1.2622681856155396
    3. '1' → logprob: -1.7622681856155396
    4. 'pair' → logprob: -2.76226806640625
    5. '2' → logprob: -2.88726806640625
    6. ' paire' → logprob: -3.38726806640625
    7. ' égal' → logprob: -5.01226806640625
    8. ' pairs' → logprob: -5.38726806640625
    9. '=' → logprob: -5.51226806640625
    10. ' impair' → logprob: -5.76226806640625

Token 167: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021272940561175346
    2. '   ' → logprob: -4.521273136138916
    3. '
' → logprob: -5.521273136138916
    4. ',' → logprob: -6.396273136138916
    5. ':
' → logprob: -6.396273136138916
    6. '<|end|>' → logprob: -7.271273136138916
    7. ' :' → logprob: -7.896273136138916
    8. ' or' → logprob: -8.146272659301758
    9. '    
' → logprob: -8.271272659301758
    10. ':return' → logprob: -8.646272659301758

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4856283664703369
    2. ':' → logprob: -0.9856283664703369
    3. ' or' → logprob: -5.985628128051758
    4. ' :' → logprob: -6.110628128051758
    5. '    
' → logprob: -6.485628128051758
    6. ',' → logprob: -6.610628128051758
    7. '    ' → logprob: -7.360628128051758
    8. '
' → logprob: -7.485628128051758
    9. ':
' → logprob: -7.610628128051758
    10. '*' → logprob: -7.860628128051758

Token 169: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07585985213518143
    2. ' if' → logprob: -3.450859785079956
    3. '    
' → logprob: -3.950859785079956
    4. '
' → logprob: -4.450860023498535
    5. 'if' → logprob: -6.325860023498535
    6. ' 
' → logprob: -6.575860023498535
    7. ':' → logprob: -6.575860023498535
    8. ' elif' → logprob: -6.575860023498535
    9. '   
' → logprob: -6.825860023498535
    10. '  
' → logprob: -7.450860023498535

Token 170: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0006344011635519564
    2. 'h' → logprob: -7.75063419342041
    3. ' (' → logprob: -9.00063419342041
    4. ' ' → logprob: -9.75063419342041
    5. '(h' → logprob: -11.62563419342041
    6. ' ' → logprob: -12.25063419342041
    7. '   ' → logprob: -12.62563419342041
    8. '	h' → logprob: -12.87563419342041
    9. '(' → logprob: -14.37563419342041
    10. '    ' → logprob: -14.62563419342041

Token 171: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01236919779330492
    2. ' ' → logprob: -4.512369155883789
    3. '%' → logprob: -6.637369155883789
    4. ' *' → logprob: -13.012369155883789
    5. '  ' → logprob: -13.387369155883789
    6. ' %
' → logprob: -13.512369155883789
    7. '   ' → logprob: -13.887369155883789
    8. ' ' → logprob: -13.887369155883789
    9. ' ==' → logprob: -14.387369155883789
    10. '<|end|>' → logprob: -14.637369155883789

Token 172: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06994421780109406
    2. '2' → logprob: -2.694944143295288
    3. ' 
' → logprob: -13.444944381713867
    4. '
' → logprob: -13.569944381713867
    5. '  ' → logprob: -13.819944381713867
    6. '<|end|>' → logprob: -13.882444381713867
    7. ' ' → logprob: -13.944944381713867
    8. '4' → logprob: -14.132444381713867
    9. '    ' → logprob: -15.507444381713867
    10. '```' → logprob: -15.507444381713867

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031804447062313557
    2. ' ' → logprob: -5.753180503845215
    3. '
' → logprob: -14.315680503845215
    4. '  ' → logprob: -14.753180503845215
    5. '   ' → logprob: -14.940680503845215
    6. '```' → logprob: -15.253180503845215
    7. '1' → logprob: -15.815680503845215
    8. '

' → logprob: -15.940680503845215
    9. '4' → logprob: -16.4406795501709
    10. '{' → logprob: -16.4406795501709

Token 174: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018293458968400955
    2. '==' → logprob: -4.018293380737305
    3. ' ' → logprob: -9.018293380737305
    4. '0' → logprob: -11.643293380737305
    5. '=' → logprob: -12.018293380737305
    6. ' =' → logprob: -13.018293380737305
    7. ')==' → logprob: -13.893293380737305
    8. ' !=' → logprob: -14.268293380737305
    9. ' ==
' → logprob: -14.268293380737305
    10. ' ===' → logprob: -14.393293380737305

Token 175: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231303572654724
    2. '0' → logprob: -0.8981303572654724
    3. '2' → logprob: -12.773130416870117
    4. '1' → logprob: -13.148130416870117
    5. '=' → logprob: -15.210630416870117
    6. ' ' → logprob: -15.335630416870117
    7. '  ' → logprob: -15.398130416870117
    8. ' 
' → logprob: -15.398130416870117
    9. '```' → logprob: -15.398130416870117
    10. '<|end|>' → logprob: -15.710630416870117

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024842156562954187
    2. ' ' → logprob: -6.002484321594238
    3. '2' → logprob: -12.377484321594238
    4. '1' → logprob: -12.877484321594238
    5. '۰' → logprob: -15.064984321594238
    6. '
' → logprob: -15.502484321594238
    7. '```' → logprob: -15.627484321594238
    8. '=' → logprob: -16.064983367919922
    9. '  ' → logprob: -16.314983367919922
    10. '

' → logprob: -16.564983367919922

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008255873690359294
    2. ':
' → logprob: -7.50082540512085
    3. ' :' → logprob: -8.375825881958008
    4. ' or' → logprob: -11.000825881958008
    5. ':return' → logprob: -11.125825881958008
    6. ' and' → logprob: -12.500825881958008
    7. '):' → logprob: -13.125825881958008
    8. '   ' → logprob: -13.375825881958008
    9. ' :
' → logprob: -13.375825881958008
    10. ')' → logprob: -14.625825881958008

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005561490077525377
    2. '   ' → logprob: -5.505561351776123
    3. ' return' → logprob: -6.880561351776123
    4. 'return' → logprob: -7.880561351776123
    5. '    ' → logprob: -10.630561828613281
    6. '      ' → logprob: -11.130561828613281
    7. '     ' → logprob: -12.005561828613281
    8. ' ' → logprob: -12.255561828613281
    9. ')' → logprob: -12.380561828613281
    10. ':' → logprob: -12.755561828613281

Token 179: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5613726377487183
    2. ' return' → logprob: -1.6863726377487183
    3. 'return' → logprob: -1.9363726377487183
    4. '   ' → logprob: -2.311372756958008
    5. '    ' → logprob: -7.936372756958008
    6. ' ' → logprob: -8.061372756958008
    7. '  ' → logprob: -9.811372756958008
    8. '
' → logprob: -9.811372756958008
    9. '      ' → logprob: -10.186372756958008
    10. '	return' → logprob: -10.561372756958008

Token 180: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14043262600898743
    2. ' return' → logprob: -2.140432596206665
    3. '   ' → logprob: -4.390432834625244
    4. '#' → logprob: -7.765432834625244
    5. 'max' → logprob: -8.265432357788086
    6. ' max' → logprob: -9.640432357788086
    7. ' ' → logprob: -9.765432357788086
    8. '       ' → logprob: -9.765432357788086
    9. ' #' → logprob: -10.765432357788086
    10. ' half' → logprob: -11.015432357788086

Token 181: ' peut' (ID: 9216)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4499402642250061
    2. ' return' → logprob: -1.0749402046203613
    3. '   ' → logprob: -4.824940204620361
    4. 'ret' → logprob: -4.949940204620361
    5. 'r' → logprob: -6.574940204620361
    6. ' retourne' → logprob: -6.699940204620361
    7. 'pe' → logprob: -7.699940204620361
    8. 'eturn' → logprob: -7.949940204620361
    9. ' retour' → logprob: -8.07494068145752
    10. ' ' → logprob: -8.07494068145752

Token 182: ' sélectionner' (ID: 188432)
  Prédit: ' sélectionner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sélectionner' → logprob: -0.09389640390872955
    2. 'sé' → logprob: -3.5938963890075684
    3. ' choisir' → logprob: -4.718896389007568
    4. 's' → logprob: -4.843896389007568
    5. 'select' → logprob: -4.843896389007568
    6. ' select' → logprob: -5.218896389007568
    7. ' ' → logprob: -5.218896389007568
    8. ' sélection' → logprob: -5.343896389007568
    9. ' s' → logprob: -5.843896389007568
    10. ' selection' → logprob: -5.843896389007568

Token 183: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06034005060791969
    2. '(h' → logprob: -3.435340166091919
    3. ' h' → logprob: -4.06033992767334
    4. 'h' → logprob: -5.43533992767334
    5. '(w' → logprob: -6.06033992767334
    6. ' w' → logprob: -6.81033992767334
    7. 'w' → logprob: -7.31033992767334
    8. '   ' → logprob: -8.43533992767334
    9. '(' → logprob: -8.93533992767334
    10. '
' → logprob: -9.68533992767334

Token 184: ' cellule' (ID: 169440)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.2939274311065674
    2. 'w' → logprob: -1.6689274311065674
    3. 'h' → logprob: -2.5439274311065674
    4. ' h' → logprob: -2.6689274311065674
    5. 'ceil' → logprob: -2.6689274311065674
    6. ' (' → logprob: -3.0439274311065674
    7. ' moitié' → logprob: -3.0439274311065674
    8. 's' → logprob: -4.043927192687988
    9. '
' → logprob: -4.168927192687988
    10. 'cell' → logprob: -4.293927192687988

Token 185: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.22628922760486603
    2. ' par' → logprob: -3.1012892723083496
    3. 'par' → logprob: -3.1012892723083496
    4. 'every' → logprob: -3.2262892723083496
    5. ' sur' → logprob: -3.4762892723083496
    6. 'dans' → logprob: -3.7262892723083496
    7. ' dans' → logprob: -5.85128927230835
    8. ' every' → logprob: -6.10128927230835
    9. ' ' → logprob: -6.22628927230835
    10. 'de' → logprob: -6.47628927230835

Token 186: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.69645094871521
    2. ' ' → logprob: -0.94645094871521
    3. ' deux' → logprob: -2.32145094871521
    4. 'de' → logprob: -4.196451187133789
    5. '_de' → logprob: -9.571451187133789
    6. ' two' → logprob: -10.196451187133789
    7. ' Deux' → logprob: -10.321451187133789
    8. '  ' → logprob: -10.571451187133789
    9. ' de' → logprob: -10.821451187133789
    10. '	de' → logprob: -10.946451187133789

Token 187: ' dans' (ID: 2671)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12981286644935608
    2. ' ' → logprob: -2.5048129558563232
    3. '*' → logprob: -3.8798129558563232
    4. '<|end|>' → logprob: -5.004812717437744
    5. ',' → logprob: -5.129812717437744
    6. '   ' → logprob: -6.004812717437744
    7. '    ' → logprob: -6.879812717437744
    8. ' ,' → logprob: -7.754812717437744
    9. '       ' → logprob: -7.754812717437744
    10. 'w' → logprob: -8.004813194274902

Token 188: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.42030069231987
    2. ' h' → logprob: -1.7953007221221924
    3. ' each' → logprob: -2.6703007221221924
    4. ' chacune' → logprob: -2.9203007221221924
    5. ' la' → logprob: -4.295300483703613
    6. 'h' → logprob: -4.295300483703613
    7. ' ' → logprob: -5.170300483703613
    8. 'each' → logprob: -5.545300483703613
    9. '<|end|>' → logprob: -5.545300483703613
    10. ' toutes' → logprob: -6.045300483703613

Token 189: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03654538094997406
    2. '<|end|>' → logprob: -4.161545276641846
    3. ' ligne' → logprob: -4.786545276641846
    4. ' 
' → logprob: -5.286545276641846
    5. '  
' → logprob: -6.536545276641846
    6. 'ligne' → logprob: -6.661545276641846
    7. '  ' → logprob: -6.911545276641846
    8. '   ' → logprob: -7.411545276641846
    9. '    ' → logprob: -7.536545276641846
    10. ' lign' → logprob: -8.536545753479004

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4269157350063324
    2. ',' → logprob: -1.1769157648086548
    3. '   ' → logprob: -4.551915645599365
    4. ' *' → logprob: -4.676915645599365
    5. ' ,' → logprob: -5.551915645599365
    6. '
' → logprob: -5.676915645599365
    7. '    ' → logprob: -6.551915645599365
    8. '*' → logprob: -6.551915645599365
    9. '        
' → logprob: -6.551915645599365
    10. '.' → logprob: -6.926915645599365

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011124570854008198
    2. ',' → logprob: -5.261124610900879
    3. '   ' → logprob: -5.886124610900879
    4. '
' → logprob: -7.386124610900879
    5. ':' → logprob: -7.386124610900879
    6. '        
' → logprob: -7.636124610900879
    7. '    
' → logprob: -8.261124610900879
    8. '    ' → logprob: -8.636124610900879
    9. ' 
' → logprob: -9.011124610900879
    10. ' ' → logprob: -9.136124610900879

Token 192: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6458930373191833
    2. 'return' → logprob: -1.2708930969238281
    3. ' return' → logprob: -1.6458930969238281
    4. '   ' → logprob: -6.270893096923828
    5. ' ' → logprob: -8.770893096923828
    6. '    ' → logprob: -9.520893096923828
    7. '     ' → logprob: -9.895893096923828
    8. '      ' → logprob: -10.145893096923828
    9. '    ' → logprob: -10.270893096923828
    10. ' ' → logprob: -10.520893096923828

Token 193: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5762433409690857
    2. ' return' → logprob: -0.9512433409690857
    3. '       ' → logprob: -3.2012434005737305
    4. '   ' → logprob: -4.5762434005737305
    5. 'cells' → logprob: -8.70124340057373
    6. ' cells' → logprob: -8.82624340057373
    7. '
' → logprob: -9.57624340057373
    8. 'max' → logprob: -9.82624340057373
    9. ' ' → logprob: -9.95124340057373
    10. '```' → logprob: -10.32624340057373

Token 194: ' rem' (ID: 1662)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9875738024711609
    2. '   ' → logprob: -1.1125738620758057
    3. ' ' → logprob: -2.4875738620758057
    4. ' ' → logprob: -2.7375738620758057
    5. 'return' → logprob: -3.1125738620758057
    6. 's' → logprob: -3.9875738620758057
    7. 'eturn' → logprob: -4.487573623657227
    8. ' peux' → logprob: -4.737573623657227
    9. 'r' → logprob: -4.862573623657227
    10. ' retourne' → logprob: -4.987573623657227

Token 195: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.16062448918819427
    2. 'pl' → logprob: -2.4106245040893555
    3. 'p' → logprob: -2.9106245040893555
    4. 'place' → logprob: -6.9106245040893555
    5. 'pli' → logprob: -6.9106245040893555
    6. 'plet' → logprob: -7.7856245040893555
    7. 'plt' → logprob: -8.160624504089355
    8. '-' → logprob: -8.285624504089355
    9. '_' → logprob: -9.160624504089355
    10. '   ' → logprob: -9.660624504089355

Token 196: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.7733224034309387
    2. ' la' → logprob: -1.773322343826294
    3. ' ' → logprob: -2.148322343826294
    4. '    ' → logprob: -3.023322343826294
    5. '   ' → logprob: -3.023322343826294
    6. ' (' → logprob: -3.273322343826294
    7. ' chaque' → logprob: -3.398322343826294
    8. ' l' → logprob: -3.773322343826294
    9. ' les' → logprob: -4.523322582244873
    10. 'h' → logprob: -4.898322582244873

Token 197: ' moitié' (ID: 93216)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.8681379556655884
    2. 'w' → logprob: -1.3681379556655884
    3. ' w' → logprob: -1.9931379556655884
    4. 'gr' → logprob: -2.493137836456299
    5. ' grid' → logprob: -3.368137836456299
    6. 'grid' → logprob: -3.868137836456299
    7. '   ' → logprob: -4.993137836456299
    8. ' gr' → logprob: -5.118137836456299
    9. ' (' → logprob: -5.368137836456299
    10. 'h' → logprob: -5.618137836456299

Token 198: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.13910099864006042
    2. ' ' → logprob: -3.014101028442383
    3. ' de' → logprob: -3.639101028442383
    4. '*' → logprob: -4.014101028442383
    5. '   ' → logprob: -4.139101028442383
    6. '    ' → logprob: -5.264101028442383
    7. ' du' → logprob: -5.264101028442383
    8. ' *' → logprob: -5.514101028442383
    9. 'des' → logprob: -6.139101028442383
    10. '       ' → logprob: -7.389101028442383

Token 199: ' lignes' (ID: 81687)
  Prédit: ' cellules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.96213698387146
    2. ' cells' → logprob: -2.08713698387146
    3. ' h' → logprob: -2.33713698387146
    4. ' espaces' → logprob: -2.58713698387146
    5. ' cases' → logprob: -3.08713698387146
    6. 'cells' → logprob: -3.08713698387146
    7. ' ' → logprob: -3.21213698387146
    8. ' w' → logprob: -3.33713698387146
    9. ' lignes' → logprob: -3.71213698387146
    10. 'cases' → logprob: -3.71213698387146

Token 200: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.410089910030365
    2. '   ' → logprob: -1.1600899696350098
    3. ' ' → logprob: -4.66008996963501
    4. '*' → logprob: -4.66008996963501
    5. ' ' → logprob: -6.53508996963501
    6. ',' → logprob: -7.28508996963501
    7. '       ' → logprob: -7.78508996963501
    8. '    ' → logprob: -7.91008996963501
    9. ' times' → logprob: -8.410089492797852
    10. '  ' → logprob: -8.535089492797852

Token 201: 'h' (ID: 71)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.0072234869003296
    2. 'w' → logprob: -1.6322234869003296
    3. ' h' → logprob: -1.8822234869003296
    4. ' (' → logprob: -2.007223606109619
    5. 'h' → logprob: -2.757223606109619
    6. '   ' → logprob: -3.132223606109619
    7. ')' → logprob: -3.882223606109619
    8. ' ' → logprob: -4.882223606109619
    9. '(w' → logprob: -5.007223606109619
    10. '(h' → logprob: -5.132223606109619

Token 202: '//' (ID: 393)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6991336345672607
    2. ' //' → logprob: -1.1991336345672607
    3. ' *' → logprob: -1.9491336345672607
    4. '//' → logprob: -3.3241336345672607
    5. '   ' → logprob: -4.69913387298584
    6. ')' → logprob: -4.82413387298584
    7. '*' → logprob: -5.82413387298584
    8. '    ' → logprob: -6.82413387298584
    9. '  ' → logprob: -7.32413387298584
    10. ' )' → logprob: -7.94913387298584

Token 203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011073173955082893
    2. ' ' → logprob: -4.511073112487793
    3. '   ' → logprob: -11.511073112487793
    4. '
' → logprob: -12.261073112487793
    5. ')' → logprob: -13.136073112487793
    6. '```' → logprob: -13.198573112487793
    7. '4' → logprob: -13.386073112487793
    8. '    ' → logprob: -14.073573112487793
    9. ' ' → logprob: -14.136073112487793
    10. '  ' → logprob: -14.323573112487793

Token 204: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14947596192359924
    2. ' *' → logprob: -2.1494760513305664
    3. ' )' → logprob: -4.024476051330566
    4. '*' → logprob: -5.524476051330566
    5. ' ' → logprob: -9.399476051330566
    6. ')
' → logprob: -9.399476051330566
    7. ')*' → logprob: -9.524476051330566
    8. ' +' → logprob: -10.274476051330566
    9. '),' → logprob: -10.274476051330566
    10. ' ' → logprob: -10.524476051330566

Token 205: ' en' (ID: 469)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.39590027928352356
    2. ' w' → logprob: -1.7709002494812012
    3. ' ' → logprob: -3.145900249481201
    4. ' et' → logprob: -3.645900249481201
    5. '   ' → logprob: -4.020900249481201
    6. ' ce' → logprob: -4.770900249481201
    7. 'et' → logprob: -4.895900249481201
    8. '    ' → logprob: -4.895900249481201
    9. 'ce' → logprob: -4.895900249481201
    10. ' puis' → logprob: -5.020900249481201

Token 206: ' prenant' (ID: 140375)
  Prédit: ' prenant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prenant' → logprob: -1.9979979991912842
    2. ' ' → logprob: -2.122997999191284
    3. ' sélection' → logprob: -2.247997999191284
    4. ' altern' → logprob: -2.372997999191284
    5. 'multip' → logprob: -2.372997999191284
    6. '2' → logprob: -2.747997999191284
    7. ' multip' → logprob: -2.997997999191284
    8. 'altern' → logprob: -3.122997999191284
    9. ' w' → logprob: -3.247997999191284
    10. 'mult' → logprob: -3.747997999191284

Token 207: ' toutes' (ID: 17502)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.3698619604110718
    2. 'w' → logprob: -1.4948619604110718
    3. ' ' → logprob: -1.6198619604110718
    4. ' (' → logprob: -1.8698619604110718
    5. ' la' → logprob: -2.2448620796203613
    6. ' une' → logprob: -3.7448620796203613
    7. 'la' → logprob: -5.244862079620361
    8. '  ' → logprob: -5.244862079620361
    9. '(' → logprob: -5.744862079620361
    10. 'une' → logprob: -5.744862079620361

Token 208: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3670301139354706
    2. 'les' → logprob: -1.867030143737793
    3. ' ' → logprob: -2.117030143737793
    4. '_' → logprob: -4.492030143737793
    5. '  ' → logprob: -5.492030143737793
    6. ' la' → logprob: -5.742030143737793
    7. ' l' → logprob: -5.867030143737793
    8. '    ' → logprob: -6.117030143737793
    9. 'l' → logprob: -6.617030143737793
    10. ' _' → logprob: -6.992030143737793

Token 209: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.21447902917861938
    2. ' colon' → logprob: -2.5894789695739746
    3. 'w' → logprob: -2.7144789695739746
    4. 'col' → logprob: -4.339478969573975
    5. 'cells' → logprob: -4.464478969573975
    6. ' ' → logprob: -4.964478969573975
    7. ' cellules' → logprob: -5.089478969573975
    8. 'cell' → logprob: -5.089478969573975
    9. 'cols' → logprob: -6.964478969573975
    10. 'cases' → logprob: -6.964478969573975

Token 210: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.26951250433921814
    2. 'es' → logprob: -1.6445125341415405
    3. 's' → logprob: -3.269512414932251
    4. 'ne' → logprob: -6.51951265335083
    5. 'n' → logprob: -6.76951265335083
    6. ' es' → logprob: -8.082012176513672
    7. 'onnes' → logprob: -8.082012176513672
    8. '   ' → logprob: -8.582012176513672
    9. ' ' → logprob: -8.957012176513672
    10. 'e' → logprob: -9.082012176513672

Token 211: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8450573086738586
    2. '   ' → logprob: -1.5950572490692139
    3. ' *' → logprob: -2.095057249069214
    4. ' //' → logprob: -2.345057249069214
    5. ',' → logprob: -3.095057249069214
    6. '//' → logprob: -4.345057487487793
    7. '*' → logprob: -4.345057487487793
    8. ' (' → logprob: -4.720057487487793
    9. '  ' → logprob: -4.845057487487793
    10. ' ,' → logprob: -5.095057487487793

Token 212: ' chaque' (ID: 21194)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1777104139328003
    2. ' ' → logprob: -1.6777104139328003
    3. '1' → logprob: -1.9277104139328003
    4. ' l' → logprob: -2.55271053314209
    5. 'l' → logprob: -2.67771053314209
    6. ' moitié' → logprob: -2.67771053314209
    7. 'pas' → logprob: -3.30271053314209
    8. 'c' → logprob: -3.92771053314209
    9. ' pas' → logprob: -4.30271053314209
    10. ' chaque' → logprob: -4.92771053314209

Token 213: ' fois' (ID: 14697)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.18087580800056458
    2. ' ' → logprob: -3.180875778198242
    3. 'de' → logprob: -3.305875778198242
    4. ' ligne' → logprob: -3.555875778198242
    5. '2' → logprob: -3.680875778198242
    6. 'fois' → logprob: -4.430875778198242
    7. 'aut' → logprob: -4.930875778198242
    8. '```' → logprob: -6.055875778198242
    9. 'l' → logprob: -6.180875778198242
    10. '   ' → logprob: -6.805875778198242

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7588186264038086
    2. ' *' → logprob: -0.7588186264038086
    3. '*' → logprob: -3.5088186264038086
    4. '       ' → logprob: -4.633818626403809
    5. ',' → logprob: -4.758818626403809
    6. ')' → logprob: -5.383818626403809
    7. 'return' → logprob: -5.758818626403809
    8. ' ' → logprob: -6.383818626403809
    9. '*(' → logprob: -6.508818626403809
    10. '    ' → logprob: -7.133818626403809

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1050201952457428
    2. '   ' → logprob: -2.35502028465271
    3. 'return' → logprob: -5.855020046234131
    4. ' return' → logprob: -6.855020046234131
    5. '
' → logprob: -8.230020523071289
    6. '    
' → logprob: -8.230020523071289
    7. '        
' → logprob: -9.480020523071289
    8. ',' → logprob: -10.230020523071289
    9. '    ' → logprob: -10.230020523071289
    10. ' 
' → logprob: -10.230020523071289

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4215337336063385
    2. ' return' → logprob: -1.2965337038040161
    3. '       ' → logprob: -2.6715338230133057
    4. '   ' → logprob: -6.671533584594727
    5. ' ' → logprob: -10.421533584594727
    6. '           ' → logprob: -11.546533584594727
    7. '	return' → logprob: -12.046533584594727
    8. '    ' → logprob: -12.421533584594727
    9. '     ' → logprob: -12.421533584594727
    10. 'result' → logprob: -13.046533584594727

Token 217: ' w' (ID: 286)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.033844735473394394
    2. '(h' → logprob: -3.5338447093963623
    3. '(w' → logprob: -5.908844947814941
    4. ' h' → logprob: -7.033844947814941
    5. '   ' → logprob: -8.658844947814941
    6. 'h' → logprob: -9.033844947814941
    7. ' w' → logprob: -9.533844947814941
    8. '(' → logprob: -10.033844947814941
    9. 'w' → logprob: -10.533844947814941
    10. ' ' → logprob: -10.658844947814941

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03135232999920845
    2. '*' → logprob: -3.6563522815704346
    3. ' //' → logprob: -6.156352519989014
    4. ' ' → logprob: -6.406352519989014
    5. '//' → logprob: -7.031352519989014
    6. '   ' → logprob: -9.156352043151855
    7. '*h' → logprob: -9.781352043151855
    8. '
' → logprob: -9.906352043151855
    9. ' ' → logprob: -9.906352043151855
    10. '`' → logprob: -10.781352043151855

Token 219: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3869730532169342
    2. '(h' → logprob: -1.1369730234146118
    3. '(' → logprob: -9.38697338104248
    4. ' h' → logprob: -11.88697338104248
    5. ' ' → logprob: -11.88697338104248
    6. 'h' → logprob: -13.01197338104248
    7. '(
' → logprob: -14.63697338104248
    8. ' (
' → logprob: -14.63697338104248
    9. '(H' → logprob: -15.01197338104248
    10. '   ' → logprob: -15.13697338104248

Token 220: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006061044055968523
    2. ' h' → logprob: -5.13106107711792
    3. '(h' → logprob: -9.131060600280762
    4. ' (' → logprob: -11.131060600280762
    5. '   ' → logprob: -11.756060600280762
    6. ' ' → logprob: -14.506060600280762
    7. '
' → logprob: -14.631060600280762
    8. '	h' → logprob: -15.006060600280762
    9. '(' → logprob: -15.881060600280762
    10. '(
' → logprob: -16.506061553955078

Token 221: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11292048543691635
    2. ' //' → logprob: -2.2379205226898193
    3. '2' → logprob: -9.987920761108398
    4. ' ' → logprob: -10.487920761108398
    5. '#' → logprob: -11.862920761108398
    6. ')//' → logprob: -12.362920761108398
    7. '   ' → logprob: -12.612920761108398
    8. '```' → logprob: -13.362920761108398
    9. '//
' → logprob: -13.487920761108398
    10. '://' → logprob: -13.737920761108398

Token 222: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001503790495917201
    2. ' ' → logprob: -6.501503944396973
    3. '   ' → logprob: -14.626503944396973
    4. '<|end|>' → logprob: -15.126503944396973
    5. '```' → logprob: -15.689003944396973
    6. '
' → logprob: -15.751503944396973
    7. '۲' → logprob: -16.439002990722656
    8. '  ' → logprob: -16.751502990722656
    9. '２' → logprob: -17.314002990722656
    10. '[' → logprob: -17.564002990722656

Token 223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.750059127807617
    4. '```' → logprob: -16.687559127807617
    5. '<|end|>' → logprob: -16.937559127807617
    6. '۲' → logprob: -17.000059127807617
    7. '
' → logprob: -17.562559127807617
    8. '  ' → logprob: -17.625059127807617
    9. 'def' → logprob: -17.875059127807617
    10. '２' → logprob: -17.937559127807617

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002593130338937044
    2. ' )' → logprob: -8.375259399414062
    3. ')
' → logprob: -10.500259399414062
    4. '*' → logprob: -14.500259399414062
    5. ')

' → logprob: -15.500259399414062
    6. ')*' → logprob: -16.250259399414062
    7. ')+' → logprob: -16.625259399414062
    8. '+' → logprob: -16.750259399414062
    9. ' *' → logprob: -16.875259399414062
    10. ' )
' → logprob: -17.250259399414062

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47295016050338745
    2. '
' → logprob: -1.9729502201080322
    3. '<|end|>' → logprob: -2.3479502201080322
    4. ')' → logprob: -2.8479502201080322
    5. ' 
' → logprob: -3.5979502201080322
    6. '    
' → logprob: -3.9729502201080322
    7. ' ' → logprob: -4.097949981689453
    8. '  
' → logprob: -5.097949981689453
    9. 'elif' → logprob: -5.472949981689453
    10. '\n' → logprob: -6.347949981689453

Token 226: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.588914155960083
    2. '   ' → logprob: -1.088914155960083
    3. ' else' → logprob: -2.588914155960083
    4. 'elif' → logprob: -4.213913917541504
    5. ' ' → logprob: -5.213913917541504
    6. '    
' → logprob: -5.463913917541504
    7. ')' → logprob: -5.838913917541504
    8. '  
' → logprob: -6.588913917541504
    9. ' elif' → logprob: -6.838913917541504
    10. ' 
' → logprob: -7.088913917541504

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07135944813489914
    2. ':
' → logprob: -2.696359395980835
    3. '   ' → logprob: -6.946359634399414
    4. ' :' → logprob: -8.571359634399414
    5. ' :
' → logprob: -8.821359634399414
    6. '       ' → logprob: -9.446359634399414
    7. 'w' → logprob: -11.446359634399414
    8. ':
' → logprob: -11.571359634399414
    9. ',' → logprob: -12.321359634399414
    10. ':return' → logprob: -12.446359634399414

Token 228: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7862778902053833
    2. '   ' → logprob: -1.1612778902053833
    3. '(w' → logprob: -2.4112777709960938
    4. ' w' → logprob: -2.9112777709960938
    5. '       ' → logprob: -3.5362777709960938
    6. 'w' → logprob: -3.5362777709960938
    7. ' return' → logprob: -4.161277770996094
    8. 'return' → logprob: -5.536277770996094
    9. '((' → logprob: -5.786277770996094
    10. '(' → logprob: -6.286277770996094

Token 229: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5000079274177551
    2. 'return' → logprob: -1.1250078678131104
    3. '#' (adapté à ' #') → logprob: -3.5000078678131104
    4. '       ' → logprob: -3.8750078678131104
    5. ' #' → logprob: -4.6250081062316895
    6. '   ' → logprob: -5.1250081062316895
    7. ' (' → logprob: -7.6250081062316895
    8. 'w' → logprob: -7.8750081062316895
    9. ' ' → logprob: -8.375007629394531
    10. ' w' → logprob: -8.375007629394531

Token 230: ' Pour' (ID: 13931)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5658208727836609
    2. 'return' → logprob: -1.3158209323883057
    3. ' w' → logprob: -2.4408209323883057
    4. 'w' → logprob: -3.5658209323883057
    5. ' (' → logprob: -4.440820693969727
    6. ' max' → logprob: -4.565820693969727
    7. '(w' → logprob: -5.190820693969727
    8. '#' → logprob: -5.315820693969727
    9. 'max' → logprob: -5.565820693969727
    10. ' #' → logprob: -6.190820693969727

Token 231: ' une' (ID: 2463)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.029543226584792137
    2. 'w' → logprob: -3.779543161392212
    3. ' (' → logprob: -5.404543399810791
    4. ' ' → logprob: -7.779543399810791
    5. ' return' → logprob: -8.279542922973633
    6. ' h' → logprob: -8.779542922973633
    7. ' calculate' → logprob: -8.779542922973633
    8. '(w' → logprob: -8.904542922973633
    9. '(' → logprob: -9.404542922973633
    10. 'return' → logprob: -9.779542922973633

Token 232: ' hauteur' (ID: 72987)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.33298155665397644
    2. 'gr' → logprob: -2.332981586456299
    3. ' colonne' → logprob: -3.207981586456299
    4. 'w' → logprob: -3.332981586456299
    5. ' ligne' → logprob: -3.582981586456299
    6. 'ligne' → logprob: -3.957981586456299
    7. ' cellule' → logprob: -4.082981586456299
    8. ' w' → logprob: -4.832981586456299
    9. ' ' → logprob: -5.332981586456299
    10. 'col' → logprob: -5.832981586456299

Token 233: ' imp' (ID: 3282)
  Prédit: ' imp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' imp' → logprob: -0.39883342385292053
    2. ' impair' → logprob: -2.3988335132598877
    3. ' paire' → logprob: -2.8988335132598877
    4. '   ' → logprob: -3.0238335132598877
    5. ' ' → logprob: -3.5238335132598877
    6. 'imp' → logprob: -4.023833274841309
    7. 'im' → logprob: -4.148833274841309
    8. ' pair' → logprob: -4.148833274841309
    9. 'pair' → logprob: -5.023833274841309
    10. ' impar' → logprob: -5.398833274841309

Token 234: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.3634311854839325
    2. 'air' → logprob: -1.7384312152862549
    3. 'ar' → logprob: -2.363431215286255
    4. '   ' → logprob: -3.738431215286255
    5. 'are' → logprob: -5.738430976867676
    6. '       ' → logprob: -6.113430976867676
    7. ' ar' → logprob: -6.738430976867676
    8. '  ' → logprob: -7.363430976867676
    9. 'a' → logprob: -7.488430976867676
    10. ' ' → logprob: -7.738430976867676

Token 235: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2588284909725189
    2. '
' → logprob: -2.6338284015655518
    3. ',' → logprob: -2.7588284015655518
    4. '       ' → logprob: -2.7588284015655518
    5. ' ,' → logprob: -4.883828639984131
    6. ' return' → logprob: -4.883828639984131
    7. ' w' → logprob: -5.633828639984131
    8. 'return' → logprob: -6.508828639984131
    9. '    
' → logprob: -6.508828639984131
    10. ':' → logprob: -6.758828639984131

Token 236: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10745584964752197
    2. 'return' → logprob: -2.3574557304382324
    3. ' w' → logprob: -5.482455730438232
    4. ' (' → logprob: -6.482455730438232
    5. 'w' → logprob: -7.232455730438232
    6. '(w' → logprob: -8.73245620727539
    7. '   ' → logprob: -8.85745620727539
    8. '(' → logprob: -9.60745620727539
    9. ' #' → logprob: -9.73245620727539
    10. ' ' → logprob: -9.73245620727539

Token 237: ' prend' (ID: 37463)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12009454518556595
    2. 'return' → logprob: -2.6200945377349854
    3. ' retourne' → logprob: -4.1200947761535645
    4. ' peux' → logprob: -4.9950947761535645
    5. ' #' → logprob: -5.6200947761535645
    6. 's' → logprob: -6.3700947761535645
    7. ' ret' → logprob: -6.4950947761535645
    8. ' re' → logprob: -6.7450947761535645
    9. ' ' → logprob: -7.1200947761535645
    10. 'r' → logprob: -7.1200947761535645

Token 238: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.026388777419924736
    2. '(w' → logprob: -4.026388645172119
    3. ' w' → logprob: -5.526388645172119
    4. ' ' → logprob: -6.026388645172119
    5. ' ((' → logprob: -6.901388645172119
    6. 'w' → logprob: -8.026389122009277
    7. '(' → logprob: -8.151389122009277
    8. '((' → logprob: -8.901389122009277
    9. '  ' → logprob: -11.526389122009277
    10. '   ' → logprob: -11.776389122009277

Token 239: ' maximum' (ID: 10562)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.7936420440673828
    2. 'w' → logprob: -1.2936420440673828
    3. ' (' → logprob: -1.5436420440673828
    4. '(' → logprob: -3.168642044067383
    5. ' w' → logprob: -4.793642044067383
    6. '((' → logprob: -5.918642044067383
    7. 'nombre' → logprob: -6.043642044067383
    8. ' nombre' → logprob: -6.293642044067383
    9. '(m' → logprob: -8.043642044067383
    10. '
' → logprob: -8.168642044067383

Token 240: ' dans' (ID: 2671)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -1.1372969150543213
    2. ' entre' → logprob: -2.0122969150543213
    3. 'w' → logprob: -2.3872969150543213
    4. '(' → logprob: -2.3872969150543213
    5. ' (' → logprob: -2.6372969150543213
    6. '((' → logprob: -2.6372969150543213
    7. '   ' → logprob: -2.8872969150543213
    8. 'between' → logprob: -3.7622969150543213
    9. '(w' → logprob: -3.7622969150543213
    10. ' w' → logprob: -3.8872969150543213

Token 241: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.576878547668457
    2. '(w' → logprob: -1.576878547668457
    3. '((' → logprob: -2.576878547668457
    4. '(h' → logprob: -3.076878547668457
    5. ' ((' → logprob: -3.201878547668457
    6. ' ' → logprob: -3.826878547668457
    7. ' w' → logprob: -4.201878547668457
    8. 'w' → logprob: -4.201878547668457
    9. '(' → logprob: -4.326878547668457
    10. ' h' → logprob: -6.451878547668457

Token 242: ' "' (ID: 392)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.727724552154541
    2. '(w' → logprob: -1.477724552154541
    3. '((' → logprob: -2.227724552154541
    4. 'w' → logprob: -2.727724552154541
    5. ' (' → logprob: -3.102724552154541
    6. '(' → logprob: -3.102724552154541
    7. 'return' → logprob: -4.352724552154541
    8. 'h' → logprob: -5.727724552154541
    9. 'nombre' → logprob: -6.727724552154541
    10. 'case' → logprob: -6.977724552154541

Token 243: 'mo' (ID: 3690)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.36193811893463135
    2. '((' → logprob: -2.361937999725342
    3. '(h' → logprob: -2.486937999725342
    4. 'w' → logprob: -2.486937999725342
    5. ' (' → logprob: -3.736937999725342
    6. '(' → logprob: -4.236937999725342
    7. 'h' → logprob: -6.361937999725342
    8. ' w' → logprob: -7.611937999725342
    9. ' ((' → logprob: -7.611937999725342
    10. '(m' → logprob: -8.7369384765625

Token 244: 'itié' (ID: 64310)
  Prédit: 'itié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itié' → logprob: -0.05985523760318756
    2. 'iti' → logprob: -3.3098552227020264
    3. 'i' → logprob: -4.5598554611206055
    4. 'it' → logprob: -5.1848554611206055
    5. 'ité' → logprob: -6.3098554611206055
    6. 'ti' → logprob: -6.9348554611206055
    7. 'itie' → logprob: -7.0598554611206055
    8. 'd' → logprob: -7.5598554611206055
    9. 'di' → logprob: -7.8098554611206055
    10. 'y' → logprob: -7.8098554611206055

Token 245: ' entière' (ID: 61583)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7260804176330566
    2. '+' → logprob: -1.2260804176330566
    3. ' +' → logprob: -2.9760804176330566
    4. ' supérieure' → logprob: -2.9760804176330566
    5. '   ' → logprob: -3.1010804176330566
    6. ' (' → logprob: -3.8510804176330566
    7. ' ' → logprob: -4.101080417633057
    8. 'h' → logprob: -5.351080417633057
    9. ' haute' → logprob: -5.726080417633057
    10. 'sup' → logprob: -5.851080417633057

Token 246: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4936489164829254
    2. ' supérieure' → logprob: -1.493648886680603
    3. 'sup' → logprob: -2.6186490058898926
    4. ' (' → logprob: -3.9936490058898926
    5. ' haute' → logprob: -4.118649005889893
    6. '+' → logprob: -4.243649005889893
    7. '(h' → logprob: -4.743649005889893
    8. 's' → logprob: -5.493649005889893
    9. ' +' → logprob: -5.618649005889893
    10. ' supérieur' → logprob: -5.993649005889893

Token 247: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7588534355163574
    2. ' (' → logprob: -1.7588534355163574
    3. ' +' → logprob: -1.8838534355163574
    4. '+' → logprob: -2.0088534355163574
    5. 'w' → logprob: -2.0088534355163574
    6. ' w' → logprob: -3.2588534355163574
    7. ' plus' → logprob: -3.2588534355163574
    8. ' return' → logprob: -3.5088534355163574
    9. '(w' → logprob: -4.133853435516357
    10. '(' → logprob: -4.133853435516357

Token 248: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2464018315076828
    2. 'colon' → logprob: -1.9964017868041992
    3. ' lignes' → logprob: -3.621401786804199
    4. 'cases' → logprob: -4.496401786804199
    5. 'cell' → logprob: -4.496401786804199
    6. ' cellules' → logprob: -4.746401786804199
    7. '(h' → logprob: -5.121401786804199
    8. ' colon' → logprob: -5.371401786804199
    9. '(' → logprob: -5.871401786804199
    10. 'cells' → logprob: -6.121401786804199

Token 249: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1943608522415161
    2. ' (' → logprob: -1.3193608522415161
    3. '   ' → logprob: -2.1943607330322266
    4. 'w' → logprob: -2.8193607330322266
    5. '(' → logprob: -3.3193607330322266
    6. ' w' → logprob: -3.3193607330322266
    7. '+' → logprob: -3.4443607330322266
    8. ' ' → logprob: -3.5693607330322266
    9. ' return' → logprob: -3.6943607330322266
    10. ' ,' → logprob: -4.319360733032227

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.808503270149231
    2. 'w' → logprob: -1.683503270149231
    3. ' w' → logprob: -2.3085031509399414
    4. '       ' → logprob: -2.5585031509399414
    5. ' +' → logprob: -2.6835031509399414
    6. ' (' → logprob: -3.0585031509399414
    7. ' return' → logprob: -3.9335031509399414
    8. '    ' → logprob: -4.808503150939941
    9. '(w' → logprob: -4.933503150939941
    10. ' *' → logprob: -5.058503150939941

Token 251: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43107572197914124
    2. ' (' → logprob: -2.0560758113861084
    3. ' w' → logprob: -2.3060758113861084
    4. 'return' → logprob: -2.5560758113861084
    5. ' ((' → logprob: -4.556075572967529
    6. '       ' → logprob: -4.806075572967529
    7. '   ' → logprob: -5.056075572967529
    8. '(w' → logprob: -5.181075572967529
    9. '((' → logprob: -5.306075572967529
    10. 'w' → logprob: -5.556075572967529

Token 252: ' Pour' (ID: 13931)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6210579872131348
    2. 'return' → logprob: -1.8710579872131348
    3. ' w' → logprob: -2.2460579872131348
    4. ' (' → logprob: -2.2460579872131348
    5. '(w' → logprob: -2.7460579872131348
    6. ' ((' → logprob: -4.371057987213135
    7. 'w' → logprob: -4.371057987213135
    8. '((' → logprob: -4.996057987213135
    9. '(' → logprob: -8.496057510375977
    10. '   ' → logprob: -9.246057510375977

Token 253: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8356308341026306
    2. ' w' → logprob: -0.8356308341026306
    3. ' (' → logprob: -2.8356308937072754
    4. '(w' → logprob: -3.7106308937072754
    5. ' les' → logprob: -4.460630893707275
    6. '((' → logprob: -4.835630893707275
    7. ' la' → logprob: -5.085630893707275
    8. ' ((' → logprob: -5.085630893707275
    9. '(h' → logprob: -5.960630893707275
    10. ' h' → logprob: -5.960630893707275

Token 254: ' ligne' (ID: 19583)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.8729894161224365
    2. 'w' → logprob: -1.4979894161224365
    3. ' mo' → logprob: -2.3729894161224365
    4. ' première' → logprob: -2.7479894161224365
    5. ' moitié' → logprob: -2.8729894161224365
    6. 'prem' → logprob: -2.9979894161224365
    7. 'dem' → logprob: -4.372989654541016
    8. 'large' → logprob: -4.872989654541016
    9. ' w' → logprob: -4.997989654541016
    10. ' (' → logprob: -5.247989654541016

Token 255: ' supplémentaire' (ID: 111252)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.6771335601806641
    2. '0' → logprob: -1.677133560180664
    3. ' du' → logprob: -1.802133560180664
    4. ' ' → logprob: -2.677133560180664
    5. 's' → logprob: -4.052133560180664
    6. '1' → logprob: -4.552133560180664
    7. 'du' → logprob: -4.802133560180664
    8. 'su' → logprob: -4.927133560180664
    9. ' de' → logprob: -5.052133560180664
    10. ' supérieure' → logprob: -5.427133560180664

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8419625759124756
    2. ' ,' → logprob: -0.8419625759124756
    3. ' (' → logprob: -2.8419625759124756
    4. '   ' → logprob: -3.0919625759124756
    5. ' return' → logprob: -4.091962814331055
    6. '    ' → logprob: -5.716962814331055
    7. ' ' → logprob: -5.841962814331055
    8. '       ' → logprob: -6.091962814331055
    9. 'return' → logprob: -6.091962814331055
    10. ' w' → logprob: -6.466962814331055

Token 257: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5280546545982361
    2. 'return' → logprob: -0.9030546545982361
    3. ' (' → logprob: -5.778054714202881
    4. ' w' → logprob: -7.778054714202881
    5. '(w' → logprob: -8.153054237365723
    6. ' retour' → logprob: -8.153054237365723
    7. '(return' → logprob: -8.403054237365723
    8. ' on' → logprob: -8.653054237365723
    9. '(' → logprob: -9.028054237365723
    10. 'w' → logprob: -9.028054237365723

Token 258: ' peut' (ID: 9216)
  Prédit: ' prend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prend' → logprob: -0.36732420325279236
    2. ' prends' → logprob: -2.242324113845825
    3. ' return' → logprob: -2.492324113845825
    4. 'return' → logprob: -3.492324113845825
    5. ' ajoute' → logprob: -3.617324113845825
    6. 'pr' → logprob: -3.617324113845825
    7. ' (' → logprob: -4.992324352264404
    8. ' ' → logprob: -5.742324352264404
    9. '(' → logprob: -5.867324352264404
    10. ' take' → logprob: -6.492324352264404

Token 259: ' remplir' (ID: 113625)
  Prédit: ' prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prendre' → logprob: -0.3143896460533142
    2. ' sélectionner' → logprob: -1.564389705657959
    3. 'prendre' → logprob: -3.314389705657959
    4. ' ajouter' → logprob: -5.189389705657959
    5. ' ' → logprob: -5.939389705657959
    6. ' choisir' → logprob: -6.064389705657959
    7. 'sé' → logprob: -6.189389705657959
    8. 'aj' → logprob: -6.564389705657959
    9. 'select' → logprob: -6.689389705657959
    10. ' (' → logprob: -6.939389705657959

Token 260: ' environ' (ID: 18585)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.009253998287022114
    2. ' ' → logprob: -5.509253978729248
    3. '(w' → logprob: -5.634253978729248
    4. ' w' → logprob: -7.134253978729248
    5. ' ((' → logprob: -7.884253978729248
    6. '(' → logprob: -8.259254455566406
    7. '((' → logprob: -9.759254455566406
    8. 'w' → logprob: -10.259254455566406
    9. '  ' → logprob: -11.009254455566406
    10. ' ' → logprob: -11.384254455566406

Token 261: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16105015575885773
    2. '(w' → logprob: -1.9110502004623413
    3. ' ' → logprob: -7.786050319671631
    4. '(' → logprob: -8.786049842834473
    5. ' w' → logprob: -9.286049842834473
    6. 'w' → logprob: -9.286049842834473
    7. '(W' → logprob: -10.661049842834473
    8. '
' → logprob: -11.536049842834473
    9. ' ((' → logprob: -12.036049842834473
    10. '((' → logprob: -12.286049842834473

Token 262: ' moitié' (ID: 93216)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.08163413405418396
    2. 'mo' → logprob: -3.331634044647217
    3. ' moitié' → logprob: -3.956634044647217
    4. ' (' → logprob: -4.331634044647217
    5. 'w' → logprob: -5.456634044647217
    6. '(m' → logprob: -5.706634044647217
    7. '(n' → logprob: -6.956634044647217
    8. '(' → logprob: -7.331634044647217
    9. ' mo' → logprob: -7.456634044647217
    10. 'mi' → logprob: -9.331634521484375

Token 263: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.456119179725647
    2. '+' → logprob: -1.331119179725647
    3. 'des' → logprob: -3.2061190605163574
    4. ' +' → logprob: -3.9561190605163574
    5. ' de' → logprob: -4.456119060516357
    6. ' (' → logprob: -4.831119060516357
    7. ' ' → logprob: -5.206119060516357
    8. '(' → logprob: -5.456119060516357
    9. ' plus' → logprob: -5.831119060516357
    10. '   ' → logprob: -5.956119060516357

Token 264: ' ses' (ID: 6707)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12359744310379028
    2. '(w' → logprob: -2.2485973834991455
    3. ' w' → logprob: -5.498597621917725
    4. 'w' → logprob: -5.748597621917725
    5. '(' → logprob: -6.498597621917725
    6. ' ((' → logprob: -7.248597621917725
    7. ' ' → logprob: -7.373597621917725
    8. '((' → logprob: -7.623597621917725
    9. '   ' → logprob: -10.498597145080566
    10. '  ' → logprob: -11.373597145080566

Token 265: ' cellules' (ID: 134342)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.2574411928653717
    2. ' colon' → logprob: -1.6324411630630493
    3. 'col' → logprob: -4.63244104385376
    4. 'w' → logprob: -4.88244104385376
    5. ' cellules' → logprob: -5.13244104385376
    6. '_' → logprob: -6.25744104385376
    7. ' ' → logprob: -6.75744104385376
    8. ' w' → logprob: -6.88244104385376
    9. 'columns' → logprob: -7.13244104385376
    10. 'cols' → logprob: -7.25744104385376

Token 266: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5842248797416687
    2. ' return' → logprob: -1.9592249393463135
    3. ' +' → logprob: -2.0842249393463135
    4. ' (' → logprob: -2.3342249393463135
    5. '   ' → logprob: -3.8342249393463135
    6. 'return' → logprob: -4.084224700927734
    7. ' ' → logprob: -4.959224700927734
    8. ' with' → logprob: -5.209224700927734
    9. ',' → logprob: -5.709224700927734
    10. ' ((' → logprob: -5.709224700927734

Token 267: 'arr' (ID: 1614)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02725999616086483
    2. '(w' → logprob: -3.6522600650787354
    3. ' ' → logprob: -7.777259826660156
    4. ' w' → logprob: -8.402259826660156
    5. 'w' → logprob: -9.277259826660156
    6. '(' → logprob: -10.027259826660156
    7. ' return' → logprob: -10.027259826660156
    8. ')' → logprob: -10.152259826660156
    9. '   ' → logprob: -10.902259826660156
    10. ' )' → logprob: -11.027259826660156

Token 268: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.20194163918495178
    2. 'ond' → logprob: -1.7019416093826294
    3. 'on' → logprob: -7.70194149017334
    4. 'ont' → logprob: -10.70194149017334
    5. 'ondissement' → logprob: -10.70194149017334
    6. ')' → logprob: -12.07694149017334
    7. '```' → logprob: -12.70194149017334
    8. '(' → logprob: -12.82694149017334
    9. '**' → logprob: -13.45194149017334
    10. 'onde' → logprob: -13.57694149017334

Token 269: ' supérieur' (ID: 98491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0302503108978271
    2. 'sup' → logprob: -1.7802503108978271
    3. ' vers' → logprob: -1.9052503108978271
    4. ' supérieur' → logprob: -3.030250310897827
    5. ')' → logprob: -3.155250310897827
    6. 'up' → logprob: -3.280250310897827
    7. ' au' → logprob: -3.405250310897827
    8. ' à' → logprob: -3.530250310897827
    9. '+' → logprob: -3.655250310897827
    10. 'au' → logprob: -3.780250310897827

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04344842582941055
    2. ' )' → logprob: -3.1684484481811523
    3. ')
' → logprob: -8.918448448181152
    4. ' )
' → logprob: -9.543448448181152
    5. '),' → logprob: -9.668448448181152
    6. ',' → logprob: -9.668448448181152
    7. ' ' → logprob: -10.668448448181152
    8. ').' → logprob: -10.918448448181152
    9. ' à' → logprob: -11.043448448181152
    10. '):' → logprob: -11.543448448181152

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02341551147401333
    2. ' return' → logprob: -4.273415565490723
    3. '   ' → logprob: -4.773415565490723
    4. 'return' → logprob: -7.523415565490723
    5. '           ' → logprob: -9.523415565490723
    6. '    ' → logprob: -9.648415565490723
    7. '        ' → logprob: -11.023415565490723
    8. ' ' → logprob: -11.148415565490723
    9. ' 
' → logprob: -11.523415565490723
    10. '
' → logprob: -11.648415565490723

Token 272: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12543809413909912
    2. 'return' → logprob: -2.2504382133483887
    3. ' (' → logprob: -5.125438213348389
    4. '   ' → logprob: -5.750438213348389
    5. '       ' → logprob: -6.000438213348389
    6. ' ((' → logprob: -8.37543773651123
    7. ' w' → logprob: -8.37543773651123
    8. '((' → logprob: -8.62543773651123
    9. '(w' → logprob: -9.37543773651123
    10. '(' → logprob: -10.12543773651123

Token 273: ' int' (ID: 677)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10687047988176346
    2. 'return' → logprob: -2.356870412826538
    3. '       ' → logprob: -5.106870651245117
    4. ' result' → logprob: -8.606870651245117
    5. '   ' → logprob: -8.731870651245117
    6. 'result' → logprob: -9.606870651245117
    7. ' max' → logprob: -9.731870651245117
    8. ' ' → logprob: -10.981870651245117
    9. 'max' → logprob: -10.981870651245117
    10. ' total' → logprob: -11.669370651245117

Token 274: '(w' (ID: 7420)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2087816298007965
    2. '(' → logprob: -1.8337815999984741
    3. '(math' → logprob: -4.333781719207764
    4. '(w' → logprob: -4.458781719207764
    5. ' (' → logprob: -6.833781719207764
    6. '(
' → logprob: -7.833781719207764
    7. 'import' → logprob: -7.958781719207764
    8. '(h' → logprob: -7.958781719207764
    9. '(round' → logprob: -8.083781242370605
    10. '(((' → logprob: -8.333781242370605

Token 275: ' /' (ID: 820)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1828860342502594
    2. ' +' → logprob: -1.807886004447937
    3. ')' → logprob: -6.682886123657227
    4. '(' → logprob: -6.807886123657227
    5. ' ' → logprob: -8.432886123657227
    6. '   ' → logprob: -8.807886123657227
    7. ' (' → logprob: -9.057886123657227
    8. ' plus' → logprob: -10.057886123657227
    9. '
' → logprob: -10.807886123657227
    10. ')+' → logprob: -10.807886123657227

Token 276: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11285829544067383
    2. ' ' → logprob: -2.237858295440674
    3. ')' → logprob: -10.737857818603516
    4. '  ' → logprob: -12.487857818603516
    5. '
' → logprob: -13.237857818603516
    6. ' )' → logprob: -13.737857818603516
    7. ' ' → logprob: -13.737857818603516
    8. '```' → logprob: -13.800357818603516
    9. '1' → logprob: -14.112857818603516
    10. '   ' → logprob: -14.175357818603516

Token 277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00761218648403883
    2. ' ' → logprob: -4.882612228393555
    3. ')' → logprob: -13.132612228393555
    4. '1' → logprob: -13.507612228393555
    5. '  ' → logprob: -13.507612228393555
    6. '
' → logprob: -14.632612228393555
    7. '   ' → logprob: -15.757612228393555
    8. '```' → logprob: -15.882612228393555
    9. '  
' → logprob: -16.507612228393555
    10. '(' → logprob: -16.632612228393555

Token 278: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038879234343767166
    2. ' +' → logprob: -4.03887939453125
    3. '+' → logprob: -4.16387939453125
    4. ' )' → logprob: -5.78887939453125
    5. ')+' → logprob: -6.28887939453125
    6. '+)' → logprob: -10.28887939453125
    7. ' ' → logprob: -12.28887939453125
    8. ' ' → logprob: -13.28887939453125
    9. '   ' → logprob: -13.66387939453125
    10. ')+(' → logprob: -13.66387939453125

Token 279: ' ' (ID: 220)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.9060922861099243
    2. '0' → logprob: -1.1560922861099243
    3. '1' → logprob: -2.1560921669006348
    4. ' (' → logprob: -2.5310921669006348
    5. 'w' → logprob: -2.6560921669006348
    6. ' w' → logprob: -5.031092166900635
    7. ' ' → logprob: -5.156092166900635
    8. '(' → logprob: -6.031092166900635
    9. ')' → logprob: -7.406092166900635
    10. '   ' → logprob: -9.906092643737793

Token 280: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6862914562225342
    2. '(w' → logprob: -1.0612914562225342
    3. '0' → logprob: -2.061291456222534
    4. 'w' → logprob: -4.311291694641113
    5. ' (' → logprob: -5.061291694641113
    6. ' ' → logprob: -6.561291694641113
    7. '(' → logprob: -6.936291694641113
    8. ' w' → logprob: -6.936291694641113
    9. '((' → logprob: -10.311291694641113
    10. ')' → logprob: -11.061291694641113

Token 281: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.876193169271573e-05
    2. ',' → logprob: -10.125088691711426
    3. '5' → logprob: -10.375088691711426
    4. '1' → logprob: -11.625088691711426
    5. ' .' → logprob: -12.250088691711426
    6. '9' → logprob: -14.250088691711426
    7. ' ' → logprob: -14.500088691711426
    8. '7' → logprob: -14.500088691711426
    9. '6' → logprob: -14.625088691711426
    10. ')' → logprob: -15.250088691711426

Token 282: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.226628895296017e-06
    2. '999' → logprob: -12.000007629394531
    3. '499' → logprob: -14.375007629394531
    4. '99' → logprob: -15.500007629394531
    5. '9' → logprob: -15.625007629394531
    6. '49' → logprob: -18.00000762939453
    7. '500' → logprob: -18.50000762939453
    8. ' ' → logprob: -18.68750762939453
    9. '1' → logprob: -18.75000762939453
    10. '```' → logprob: -18.81250762939453

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00231547630392015
    2. ' )' → logprob: -6.127315521240234
    3. ')
' → logprob: -9.502315521240234
    4. '))' → logprob: -10.877315521240234
    5. '   ' → logprob: -11.502315521240234
    6. ')))' → logprob: -12.502315521240234
    7. ')+' → logprob: -12.502315521240234
    8. '+' → logprob: -12.752315521240234
    9. ' +' → logprob: -13.252315521240234
    10. '")' → logprob: -13.502315521240234

Token 284: ' permet' (ID: 11798)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30125096440315247
    2. ' )' → logprob: -3.05125093460083
    3. ' +' → logprob: -3.05125093460083
    4. 'return' → logprob: -3.30125093460083
    5. '       ' → logprob: -3.42625093460083
    6. ' ' → logprob: -3.55125093460083
    7. ' return' → logprob: -3.55125093460083
    8. '   ' → logprob: -3.92625093460083
    9. '+' → logprob: -5.80125093460083
    10. '
' → logprob: -5.80125093460083

Token 285: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7763602137565613
    2. ' d' → logprob: -1.026360273361206
    3. ' de' → logprob: -1.776360273361206
    4. 'de' → logprob: -4.526360034942627
    5. ' ' → logprob: -7.651360034942627
    6. 't' → logprob: -7.776360034942627
    7. '_d' → logprob: -8.401360511779785
    8. '	d' → logprob: -9.026360511779785
    9. '   ' → logprob: -9.526360511779785
    10. '    ' → logprob: -10.026360511779785

Token 286: ' faire' (ID: 8119)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41498979926109314
    2. ' int' → logprob: -1.9149898290634155
    3. '(int' → logprob: -2.539989709854126
    4. 'round' → logprob: -2.914989709854126
    5. ' calcul' → logprob: -3.539989709854126
    6. ' (' → logprob: -4.539989948272705
    7. 'calcul' → logprob: -5.289989948272705
    8. 'arr' → logprob: -5.789989948272705
    9. ' round' → logprob: -6.164989948272705
    10. '(round' → logprob: -6.539989948272705

Token 287: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8957763314247131
    2. ' un' → logprob: -2.0207762718200684
    3. 'return' → logprob: -2.2707762718200684
    4. 'un' → logprob: -2.3957762718200684
    5. ' une' → logprob: -3.2707762718200684
    6. 'une' → logprob: -3.3957762718200684
    7. 'ceil' → logprob: -3.3957762718200684
    8. 'round' → logprob: -3.6457762718200684
    9. ' return' → logprob: -3.6457762718200684
    10. ' int' → logprob: -4.145776271820068

Token 288: ' arr' (ID: 1724)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.325403094291687
    2. 'arr' → logprob: -1.700403094291687
    3. 'int' → logprob: -3.2004032135009766
    4. ' round' → logprob: -3.5754032135009766
    5. 'ceil' → logprob: -4.825403213500977
    6. ' arr' → logprob: -5.075403213500977
    7. ' int' → logprob: -5.700403213500977
    8. ' rounding' → logprob: -5.700403213500977
    9. 'rounded' → logprob: -6.575403213500977
    10. ' demi' → logprob: -7.700403213500977

Token 289: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.04878583922982216
    2. 'ond' → logprob: -3.048785924911499
    3. 'ondissement' → logprob: -8.798786163330078
    4. 'on' → logprob: -10.798786163330078
    5. 'ont' → logprob: -11.923786163330078
    6. 'd' → logprob: -12.298786163330078
    7. 'ound' → logprob: -13.298786163330078
    8. 'o' → logprob: -13.423786163330078
    9. '   ' → logprob: -13.548786163330078
    10. '```' → logprob: -13.548786163330078

Token 290: ' supérieur' (ID: 98491)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.230608582496643
    2. '   ' → logprob: -1.480608582496643
    3. '(w' → logprob: -1.980608582496643
    4. '       ' → logprob: -2.1056084632873535
    5. 'w' → logprob: -2.7306084632873535
    6. '(' → logprob: -3.6056084632873535
    7. 'up' → logprob: -3.7306084632873535
    8. ' return' → logprob: -4.3556084632873535
    9. ' ' → logprob: -4.7306084632873535
    10. 'int' → logprob: -4.7306084632873535

Token 291: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007773078978061676
    2. 'return' → logprob: -5.882772922515869
    3. ' return' → logprob: -6.507772922515869
    4. '   ' → logprob: -6.882772922515869
    5. '        
' → logprob: -7.132772922515869
    6. ')' → logprob: -7.757772922515869
    7. '
' → logprob: -8.257773399353027
    8. ',' → logprob: -8.382773399353027
    9. ' 
' → logprob: -9.007773399353027
    10. '\' → logprob: -9.007773399353027

Token 292: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.21097460389137268
    2. 'w' → logprob: -1.7109745740890503
    3. ' la' → logprob: -5.83597469329834
    4. ' les' → logprob: -5.96097469329834
    5. ' le' → logprob: -6.46097469329834
    6. 'int' → logprob: -7.08597469329834
    7. ' int' → logprob: -8.33597469329834
    8. ' ' → logprob: -8.33597469329834
    9. ')' → logprob: -8.46097469329834
    10. ' l' → logprob: -8.71097469329834

Token 293: ' impair' (ID: 64113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2680705487728119
    2. '   ' → logprob: -2.6430704593658447
    3. 'return' → logprob: -2.6430704593658447
    4. ' return' → logprob: -2.8930704593658447
    5. ')' → logprob: -4.268070697784424
    6. ' //' → logprob: -5.268070697784424
    7. '
' → logprob: -5.643070697784424
    8. ' +' → logprob: -6.268070697784424
    9. '//' → logprob: -6.393070697784424
    10. ' ' → logprob: -6.643070697784424

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03641538321971893
    2. '
' → logprob: -4.4114155769348145
    3. 'return' → logprob: -4.5364155769348145
    4. '   ' → logprob: -4.7864155769348145
    5. ' return' → logprob: -5.6614155769348145
    6. '    
' → logprob: -7.7864155769348145
    7. '        
' → logprob: -7.9114155769348145
    8. ' 
' → logprob: -9.036415100097656
    9. '           ' → logprob: -10.411415100097656
    10. '
' → logprob: -10.661415100097656

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006455893162637949
    2. ' return' → logprob: -5.881455898284912
    3. '   ' → logprob: -6.006455898284912
    4. 'return' → logprob: -6.756455898284912
    5. '
' → logprob: -11.756455421447754
    6. '           ' → logprob: -12.506455421447754
    7. '    ' → logprob: -14.256455421447754
    8. '    ' → logprob: -14.381455421447754
    9. '   ' → logprob: -14.631455421447754
    10. '	return' → logprob: -14.631455421447754

Token 296: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7339491844177246
    2. 'return' (adapté à ' return') → logprob: -1.2339491844177246
    3. '       ' → logprob: -1.4839491844177246
    4. '   ' → logprob: -6.233949184417725
    5. ' ' → logprob: -10.358949661254883
    6. '    ' → logprob: -10.483949661254883
    7. '           ' → logprob: -11.233949661254883
    8. '      ' → logprob: -11.233949661254883
    9. '     ' → logprob: -11.358949661254883
    10. ' ' → logprob: -11.733949661254883

Token 297: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2322487235069275
    2. ' (' → logprob: -2.3572487831115723
    3. 'w' → logprob: -2.4822487831115723
    4. '(w' → logprob: -3.8572487831115723
    5. ' max' → logprob: -5.232248783111572
    6. 'max' → logprob: -7.232248783111572
    7. ' ((' → logprob: -7.732248783111572
    8. '(' → logprob: -7.857248783111572
    9. '((' → logprob: -8.232248306274414
    10. ' h' → logprob: -8.732248306274414

Token 298: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.34304603934288025
    2. ' *' → logprob: -2.093045949935913
    3. '//' → logprob: -2.343045949935913
    4. '*' → logprob: -2.843045949935913
    5. ' ' → logprob: -4.468046188354492
    6. '```' → logprob: -8.593046188354492
    7. ')' → logprob: -8.718046188354492
    8. '+' → logprob: -8.718046188354492
    9. '`' → logprob: -8.968046188354492
    10. ' +' → logprob: -9.093046188354492

Token 299: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.10903851687908173
    2. '((' → logprob: -2.6090385913848877
    3. ' (' → logprob: -3.6090385913848877
    4. ' ((' → logprob: -5.984038352966309
    5. '(' → logprob: -9.234038352966309
    6. ' ' → logprob: -13.984038352966309
    7. '(H' → logprob: -14.484038352966309
    8. '   ' → logprob: -14.859038352966309
    9. '(c' → logprob: -14.859038352966309
    10. '(
' → logprob: -14.984038352966309

Token 300: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4808124601840973
    2. ' h' → logprob: -1.730812430381775
    3. '(h' → logprob: -1.730812430381775
    4. ' (' → logprob: -3.6058125495910645
    5. '(' → logprob: -8.980812072753906
    6. '((' → logprob: -9.980812072753906
    7. '   ' → logprob: -10.355812072753906
    8. ' ' → logprob: -10.730812072753906
    9. '(
' → logprob: -11.355812072753906
    10. '
' → logprob: -11.793312072753906

Token 301: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.14276248216629028
    2. '//' → logprob: -2.0177624225616455
    3. ' ' → logprob: -9.767762184143066
    4. ' //
' → logprob: -11.267762184143066
    5. '#' → logprob: -12.017762184143066
    6. '2' → logprob: -12.767762184143066
    7. '```' → logprob: -12.767762184143066
    8. '   ' → logprob: -14.142762184143066
    9. '//
' → logprob: -14.267762184143066
    10. ' ' → logprob: -14.392762184143066

Token 302: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003397535183466971
    2. ' ' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.87533950805664
    4. '
' → logprob: -14.62533950805664
    5. '```' → logprob: -14.62533950805664
    6. '<|end|>' → logprob: -16.00033950805664
    7. '۲' → logprob: -16.12533950805664
    8. '  ' → logprob: -16.37533950805664
    9. '1' → logprob: -16.62533950805664
    10. '２' → logprob: -16.75033950805664

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -14.62504768371582
    4. '1' → logprob: -15.31254768371582
    5. '```' → logprob: -15.56254768371582
    6. '
' → logprob: -15.81254768371582
    7. '۲' → logprob: -16.06254768371582
    8. '22' → logprob: -16.12504768371582
    9. '２' → logprob: -16.43754768371582
    10. '  ' → logprob: -17.00004768371582

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002111478243023157
    2. ' )' → logprob: -6.752111434936523
    3. '+' → logprob: -7.377111434936523
    4. ' +' → logprob: -8.377111434936523
    5. ')+' → logprob: -9.502111434936523
    6. '+)' → logprob: -11.627111434936523
    7. '   ' → logprob: -14.752111434936523
    8. ')+(' → logprob: -15.002111434936523
    9. '+
' → logprob: -15.502111434936523
    10. ')
' → logprob: -15.627111434936523

Token 305: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11292431503534317
    2. '+' → logprob: -2.237924337387085
    3. ' +
' → logprob: -9.612924575805664
    4. ' plus' → logprob: -10.987924575805664
    5. ' ' → logprob: -11.862924575805664
    6. '+
' → logprob: -11.862924575805664
    7. ' ' → logprob: -13.987924575805664
    8. '   ' → logprob: -14.362924575805664
    9. ')+' → logprob: -14.987924575805664
    10. ')' → logprob: -15.112924575805664

Token 306: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3186139762401581
    2. ' (' → logprob: -2.3186140060424805
    3. ' int' → logprob: -2.3186140060424805
    4. '(w' → logprob: -3.3186140060424805
    5. '(int' → logprob: -3.3186140060424805
    6. '((' → logprob: -6.3186140060424805
    7. '(' → logprob: -6.5686140060424805
    8. ' ((' → logprob: -8.94361400604248
    9. '(i' → logprob: -9.81861400604248
    10. ' ' → logprob: -9.94361400604248

Token 307: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.04883737862110138
    2. '(' → logprob: -3.298837423324585
    3. '((' → logprob: -4.548837184906006
    4. ' (' → logprob: -8.798837661743164
    5. '(
' → logprob: -13.298837661743164
    6. '(round' → logprob: -13.423837661743164
    7. '(math' → logprob: -14.298837661743164
    8. '(v' → logprob: -14.423837661743164
    9. 'w' → logprob: -14.673837661743164
    10. '(s' → logprob: -15.048837661743164

Token 308: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06997133791446686
    2. '/' → logprob: -2.6949713230133057
    3. ' ' → logprob: -10.569971084594727
    4. '    ' → logprob: -13.194971084594727
    5. ')' → logprob: -13.569971084594727
    6. '   ' → logprob: -13.694971084594727
    7. ' /
' → logprob: -13.944971084594727
    8. ' +' → logprob: -14.319971084594727
    9. ' ' → logprob: -14.382471084594727
    10. '
' → logprob: -15.007471084594727

Token 309: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05488860234618187
    2. ' ' → logprob: -2.9298884868621826
    3. '
' → logprob: -12.804888725280762
    4. '1' → logprob: -14.054888725280762
    5. ' ' → logprob: -14.929888725280762
    6. '```' → logprob: -14.929888725280762
    7. '  ' → logprob: -15.054888725280762
    8. '   ' → logprob: -15.242388725280762
    9. '0' → logprob: -15.304888725280762
    10. '(' → logprob: -15.429888725280762

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000713266315869987
    2. ' ' → logprob: -7.250713348388672
    3. '
' → logprob: -13.625713348388672
    4. '1' → logprob: -14.750713348388672
    5. '  ' → logprob: -14.750713348388672
    6. '   ' → logprob: -14.750713348388672
    7. '0' → logprob: -14.875713348388672
    8. '```' → logprob: -15.750713348388672
    9. '    ' → logprob: -16.750713348388672
    10. '２' → logprob: -16.875713348388672

Token 311: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760349631309509
    2. '+' → logprob: -0.8260349631309509
    3. ')' → logprob: -9.576034545898438
    4. ')+' → logprob: -11.701034545898438
    5. ' ' → logprob: -12.201034545898438
    6. ' plus' → logprob: -12.201034545898438
    7. '+
' → logprob: -13.076034545898438
    8. ' +
' → logprob: -13.201034545898438
    9. '1' → logprob: -14.701034545898438
    10. '0' → logprob: -14.826034545898438

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.00247573852539
    4. '.' → logprob: -16.75247573852539
    5. '1' → logprob: -16.87747573852539
    6. '  ' → logprob: -17.12747573852539
    7. '    ' → logprob: -17.37747573852539
    8. ' ' → logprob: -18.50247573852539
    9. ')' → logprob: -19.37747573852539
    10. '     ' → logprob: -19.43997573852539

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023739055905025452
    2. ' ' → logprob: -8.375237464904785
    3. '.' → logprob: -12.125237464904785
    4. '1' → logprob: -14.000237464904785
    5. '   ' → logprob: -15.125237464904785
    6. '  ' → logprob: -16.00023651123047
    7. ' ' → logprob: -16.75023651123047
    8. ' .' → logprob: -17.12523651123047
    9. '    ' → logprob: -17.75023651123047
    10. '```' → logprob: -18.18773651123047

Token 314: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.399378566537052e-05
    2. '5' → logprob: -9.750083923339844
    3. '0' → logprob: -10.875083923339844
    4. ' .' → logprob: -12.375083923339844
    5. '   ' → logprob: -14.250083923339844
    6. '`.' → logprob: -14.750083923339844
    7. ' ' → logprob: -14.875083923339844
    8. '```' → logprob: -16.000083923339844
    9. '1' → logprob: -16.125083923339844
    10. '4' → logprob: -16.125083923339844

Token 315: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -16.25
    3. ' ' → logprob: -16.25
    4. '499' → logprob: -16.75
    5. '1' → logprob: -17.125
    6. '4' → logprob: -17.375
    7. ')' → logprob: -17.375
    8. '۵' → logprob: -17.625
    9. '٥' → logprob: -17.625
    10. '```' → logprob: -18.1875

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.37500286102295
    3. '))' → logprob: -13.50000286102295
    4. ')
' → logprob: -15.87500286102295
    5. ')}' → logprob: -16.875003814697266
    6. ')))' → logprob: -17.750003814697266
    7. ')`' → logprob: -18.000003814697266
    8. ')return' → logprob: -18.250003814697266
    9. ')}}' → logprob: -18.750003814697266
    10. '),' → logprob: -19.125003814697266

Token 317: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1022307276725769
    2. '__' → logprob: -2.3522307872772217
    3. '_' → logprob: -6.352230548858643
    4. ' ' → logprob: -9.1022310256958
    5. ' _' → logprob: -9.8522310256958
    6. '_name' → logprob: -9.8522310256958
    7. ' ' → logprob: -10.1022310256958
    8. '  ' → logprob: -12.1022310256958
    9. ' True' → logprob: -12.6022310256958
    10. '___' → logprob: -12.6022310256958

Token 319: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05318288505077362
    2. ' __' → logprob: -3.05318284034729
    3. '_' → logprob: -5.553183078765869
    4. ' ==' → logprob: -7.803183078765869
    5. '_name' → logprob: -9.053182601928711
    6. 'name' → logprob: -9.178182601928711
    7. ' _' → logprob: -10.678182601928711
    8. '___' → logprob: -11.428182601928711
    9. '==' → logprob: -12.053182601928711
    10. 'if' → logprob: -12.178182601928711

Token 320: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.320199877838604e-07
    2. 'name' → logprob: -16.375
    3. '==' → logprob: -16.5
    4. '__
' → logprob: -16.875
    5. '__.__' → logprob: -17.25
    6. '___' → logprob: -17.5
    7. '_' → logprob: -17.625
    8. '____' → logprob: -18.125
    9. ' ==' → logprob: -18.75
    10. '__

' → logprob: -18.75

Token 321: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06249067932367325
    2. ' ==' → logprob: -2.937490701675415
    3. '==' → logprob: -4.937490463256836
    4. '=="' → logprob: -8.062490463256836
    5. '_' → logprob: -11.062490463256836
    6. '__.__' → logprob: -11.062490463256836
    7. ' __' → logprob: -11.187490463256836
    8. ' =="' → logprob: -11.562490463256836
    9. '___' → logprob: -11.937490463256836
    10. ' ' → logprob: -11.937490463256836

Token 322: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03816451132297516
    2. ''' → logprob: -3.2881646156311035
    3. ' "__' → logprob: -9.288164138793945
    4. '__' → logprob: -10.663164138793945
    5. ' "' → logprob: -12.163164138793945
    6. ' '__' → logprob: -13.663164138793945
    7. '"name' → logprob: -15.788164138793945
    8. '"user' → logprob: -15.788164138793945
    9. ' '' → logprob: -16.163164138793945
    10. '"log' → logprob: -17.163164138793945

Token 323: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.5577775128767826e-06
    2. 'name' → logprob: -12.250005722045898
    3. '__' → logprob: -14.500005722045898
    4. '_main' → logprob: -16.5000057220459
    5. 'ma' → logprob: -16.8750057220459
    6. ' main' → logprob: -16.8750057220459
    7. 'm' → logprob: -18.3750057220459
    8. 'mai' → logprob: -20.0000057220459
    9. '_' → logprob: -20.5000057220459
    10. 'built' → logprob: -20.8750057220459

Token 324: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3871679902076721
    2. '__' → logprob: -1.1371679306030273
    3. '__:' → logprob: -8.762167930603027
    4. '__':
' → logprob: -9.262167930603027
    5. '_' → logprob: -10.262167930603027
    6. '__["' → logprob: -12.012167930603027
    7. '__
' → logprob: -13.387167930603027
    8. '__",' → logprob: -14.137167930603027
    9. '__
' → logprob: -15.137167930603027
    10. '__.' → logprob: -15.387167930603027

Token 325: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07921219617128372
    2. '   ' → logprob: -2.704212188720703
    3. ':
' → logprob: -4.829212188720703
    4. ' :' → logprob: -7.579212188720703
    5. '():' → logprob: -8.704212188720703
    6. '    
' → logprob: -8.829212188720703
    7. 'n' → logprob: -9.829212188720703
    8. '<|end|>' → logprob: -9.954212188720703
    9. '():
' → logprob: -10.329212188720703
    10. ' :
' → logprob: -10.329212188720703

Token 326: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5202300548553467
    2. 'h' → logprob: -1.0202300548553467
    3. ' n' → logprob: -3.7702300548553467
    4. 'n' → logprob: -4.395230293273926
    5. ' import' → logprob: -5.145230293273926
    6. 'import' → logprob: -6.145230293273926
    7. ' for' → logprob: -7.895230293273926
    8. '   ' → logprob: -8.020230293273926
    9. ' ' → logprob: -8.520230293273926
    10. ' #' → logprob: -9.020230293273926

Token 327: ' Lecture' (ID: 106534)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1342483013868332
    2. ' h' → logprob: -2.8842482566833496
    3. 'import' → logprob: -2.8842482566833496
    4. '#' → logprob: -5.13424825668335
    5. ' import' → logprob: -5.50924825668335
    6. 'test' → logprob: -6.63424825668335
    7. ' test' → logprob: -7.00924825668335
    8. 'print' → logprob: -7.88424825668335
    9. 'n' → logprob: -8.009248733520508
    10. ' #' → logprob: -8.384248733520508

Token 328: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6717579960823059
    2. '()' → logprob: -0.9217579960823059
    3. 'import' → logprob: -3.296757936477661
    4. '(' → logprob: -3.796757936477661
    5. 's' → logprob: -4.29675817489624
    6. ' =' → logprob: -5.54675817489624
    7. 'n' → logprob: -5.92175817489624
    8. '_' → logprob: -6.04675817489624
    9. 't' → logprob: -6.54675817489624
    10. '=' → logprob: -6.92175817489624

Token 329: ' dimensions' (ID: 23995)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.48647773265838623
    2. ' h' → logprob: -0.9864777326583862
    3. 'dimensions' → logprob: -5.236477851867676
    4. 'import' → logprob: -6.361477851867676
    5. ' ' → logprob: -6.486477851867676
    6. ' dimensions' → logprob: -6.736477851867676
    7. 'l' → logprob: -7.236477851867676
    8. 'n' → logprob: -7.486477851867676
    9. 'ha' → logprob: -8.111477851867676
    10. ' valeurs' → logprob: -8.736477851867676

Token 330: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5349341034889221
    2. ' =' → logprob: -1.0349340438842773
    3. '=' → logprob: -4.159934043884277
    4. 'h' → logprob: -4.159934043884277
    5. 'import' → logprob: -5.159934043884277
    6. ',' → logprob: -5.409934043884277
    7. ':' → logprob: -5.659934043884277
    8. '    
' → logprob: -5.659934043884277
    9. ' h' → logprob: -6.159934043884277
    10. '()' → logprob: -6.909934043884277

Token 331: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001144145498983562
    2. ' =' → logprob: -7.001143932342529
    3. ' ,' → logprob: -9.251144409179688
    4. ',w' → logprob: -9.376144409179688
    5. '=' → logprob: -10.251144409179688
    6. ',
' → logprob: -12.126144409179688
    7. 'w' → logprob: -12.251144409179688
    8. 'et' → logprob: -13.376144409179688
    9. '   ' → logprob: -14.126144409179688
    10. 's' → logprob: -14.376144409179688

Token 332: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.12731905281543732
    2. 'w' → logprob: -2.127319097518921
    3. '   ' → logprob: -8.7523193359375
    4. ',' → logprob: -8.8773193359375
    5. ' ' → logprob: -10.2523193359375
    6. ',w' → logprob: -11.1273193359375
    7. ' ,' → logprob: -11.2523193359375
    8. '    ' → logprob: -11.3773193359375
    9. ' ' → logprob: -11.7523193359375
    10. '  ' → logprob: -12.5023193359375

Token 333: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31822648644447327
    2. '   ' → logprob: -1.4432264566421509
    3. ',' → logprob: -3.6932265758514404
    4. '=' → logprob: -4.818226337432861
    5. ' h' → logprob: -6.943226337432861
    6. 'h' → logprob: -7.193226337432861
    7. '<|end|>' → logprob: -7.443226337432861
    8. '    
' → logprob: -8.44322681427002
    9. '=h' → logprob: -9.31822681427002
    10. ' ,' → logprob: -9.31822681427002

Token 334: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16584381461143494
    2. 'la' → logprob: -2.0408437252044678
    3. 'l' → logprob: -4.665843963623047
    4. 'input' → logprob: -5.040843963623047
    5. ' input' → logprob: -5.415843963623047
    6. '   ' → logprob: -6.290843963623047
    7. ' l' → logprob: -7.915843963623047
    8. 'une' → logprob: -8.915843963623047
    9. ' ' → logprob: -9.665843963623047
    10. ' grille' → logprob: -11.040843963623047

Token 335: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.20153312385082245
    2. ' grille' → logprob: -1.7015330791473389
    3. ' gr' → logprob: -9.951533317565918
    4. 'grid' → logprob: -9.951533317565918
    5. '   ' → logprob: -12.451533317565918
    6. ' ' → logprob: -12.576533317565918
    7. 'ligne' → logprob: -12.576533317565918
    8. 'input' → logprob: -13.076533317565918
    9. ' grid' → logprob: -13.076533317565918
    10. ' ' → logprob: -13.201533317565918

Token 336: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030105318874120712
    2. ',' → logprob: -4.655105113983154
    3. 'h' → logprob: -4.780105113983154
    4. '    
' → logprob: -5.280105113983154
    5. ' h' → logprob: -5.780105113983154
    6. '
' → logprob: -7.405105113983154
    7. 'n' → logprob: -7.530105113983154
    8. '<|end|>' → logprob: -7.530105113983154
    9. ' =' → logprob: -8.155105590820312
    10. ':' → logprob: -8.155105590820312

Token 337: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8968347907066345
    2. 'l' → logprob: -1.2718348503112793
    3. ' input' → logprob: -1.2718348503112793
    4. ' l' → logprob: -3.7718348503112793
    5. 'la' → logprob: -5.521834850311279
    6. '   ' → logprob: -6.146834850311279
    7. ' la' → logprob: -6.271834850311279
    8. '=input' → logprob: -8.771834373474121
    9. 'les' → logprob: -9.271834373474121
    10. 'une' → logprob: -10.271834373474121

Token 338: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3984268307685852
    2. 'input' → logprob: -1.1484267711639404
    3. 'entrée' → logprob: -4.6484270095825195
    4. ''utilisateur' → logprob: -7.5234270095825195
    5. '=input' → logprob: -8.39842700958252
    6. ''' → logprob: -8.39842700958252
    7. 'a' → logprob: -8.52342700958252
    8. '’entrée' → logprob: -8.52342700958252
    9. 'e' → logprob: -8.64842700958252
    10. '_input' → logprob: -9.27342700958252

Token 339: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054336417466402054
    2. '    
' → logprob: -3.5543363094329834
    3. 'h' → logprob: -3.9293363094329834
    4. '  
' → logprob: -6.8043365478515625
    5. '
' → logprob: -7.3043365478515625
    6. '   
' → logprob: -7.6793365478515625
    7. 's' → logprob: -7.8043365478515625
    8. ',' → logprob: -8.054336547851562
    9. ':' → logprob: -8.304336547851562
    10. 'n' → logprob: -8.429336547851562

Token 340: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020498214289546013
    2. '    
' → logprob: -5.145498275756836
    3. '
' → logprob: -5.645498275756836
    4. ',' → logprob: -5.770498275756836
    5. 'h' → logprob: -6.020498275756836
    6. ' h' → logprob: -6.145498275756836
    7. 'import' → logprob: -7.395498275756836
    8. '  
' → logprob: -7.520498275756836
    9. ':' → logprob: -8.020498275756836
    10. ' 
' → logprob: -8.520498275756836

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002296801656484604
    2. '    
' → logprob: -6.6272969245910645
    3. 'h' → logprob: -7.5022969245910645
    4. ' h' → logprob: -8.002296447753906
    5. '
' → logprob: -11.252296447753906
    6. 'import' → logprob: -11.502296447753906
    7. '    ' → logprob: -11.752296447753906
    8. 'n' → logprob: -11.752296447753906
    9. ' 
' → logprob: -11.752296447753906
    10. '   
' → logprob: -12.002296447753906

Token 342: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.12101186811923981
    2. ' h' → logprob: -2.246011972427368
    3. '   ' → logprob: -5.121011734008789
    4. 'import' → logprob: -6.246011734008789
    5. ' import' → logprob: -8.746011734008789
    6. 'try' → logprob: -9.871011734008789
    7. '    
' → logprob: -11.121011734008789
    8. 'line' → logprob: -12.246011734008789
    9. ' try' → logprob: -12.496011734008789
    10. ' lines' → logprob: -12.996011734008789

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.297462171758525e-05
    2. ',w' → logprob: -10.750033378601074
    3. ' ,' → logprob: -12.000033378601074
    4. ' =' → logprob: -12.750033378601074
    5. '=' → logprob: -13.250033378601074
    6. ',
' → logprob: -15.125033378601074
    7. 'w' → logprob: -16.125032424926758
    8. '   ' → logprob: -16.875032424926758
    9. ',h' → logprob: -17.375032424926758
    10. 's' → logprob: -17.500032424926758

Token 344: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.018237974494695663
    2. 'w' → logprob: -4.018238067626953
    3. ' ' → logprob: -9.643238067626953
    4. ' ' → logprob: -11.518238067626953
    5. '  ' → logprob: -13.143238067626953
    6. ' ' → logprob: -13.268238067626953
    7. '<|end|>' → logprob: -13.268238067626953
    8. ' =' → logprob: -13.393238067626953
    9. '=' → logprob: -13.893238067626953
    10. '    ' → logprob: -14.018238067626953

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759435296058655
    2. ' =' → logprob: -0.8259435296058655
    3. '=input' → logprob: -12.700943946838379
    4. ',' → logprob: -15.325943946838379
    5. '=int' → logprob: -15.825943946838379
    6. ')' → logprob: -15.825943946838379
    7. ' ' → logprob: -16.075942993164062
    8. '=

' → logprob: -16.200942993164062
    9. ' ' → logprob: -17.075942993164062
    10. '[' → logprob: -17.200942993164062

Token 346: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12693849205970764
    2. 'map' → logprob: -2.126938581466675
    3. '[' → logprob: -12.251938819885254
    4. ' ' → logprob: -13.126938819885254
    5. '	map' → logprob: -13.626938819885254
    6. ' ' → logprob: -13.751938819885254
    7. ' [' → logprob: -14.501938819885254
    8. '(map' → logprob: -14.876938819885254
    9. 'm' → logprob: -15.501938819885254
    10. 'input' → logprob: -16.376937866210938

Token 347: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015174767468124628
    2. '(' → logprob: -6.501517295837402
    3. 'int' → logprob: -11.876517295837402
    4. '(input' → logprob: -12.001517295837402
    5. '(
' → logprob: -13.626517295837402
    6. '<int' → logprob: -14.876517295837402
    7. ' int' → logprob: -15.251517295837402
    8. '=int' → logprob: -16.00151824951172
    9. ' (' → logprob: -16.37651824951172
    10. '[int' → logprob: -16.62651824951172

Token 348: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16760316491127014
    2. 'input' → logprob: -1.9176031351089478
    3. ')' → logprob: -5.917603015899658
    4. ',input' → logprob: -5.917603015899658
    5. '(' → logprob: -6.542603015899658
    6. ' input' → logprob: -7.792603015899658
    7. ',' → logprob: -9.917603492736816
    8. '=input' → logprob: -10.667603492736816
    9. '   ' → logprob: -10.917603492736816
    10. '	input' → logprob: -12.167603492736816

Token 349: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01815006136894226
    2. ' input' → logprob: -4.0181498527526855
    3. ')' → logprob: -15.768150329589844
    4. '(input' → logprob: -17.518150329589844
    5. '	input' → logprob: -17.893150329589844
    6. ',input' → logprob: -18.518150329589844
    7. '=input' → logprob: -18.768150329589844
    8. '<input' → logprob: -19.518150329589844
    9. '   ' → logprob: -19.643150329589844
    10. ' ' → logprob: -19.768150329589844

Token 350: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004088609013706446
    2. '()' → logprob: -5.504088401794434
    3. '())' → logprob: -12.254088401794434
    4. '()
' → logprob: -13.504088401794434
    5. ' ().' → logprob: -13.504088401794434
    6. '(' → logprob: -13.504088401794434
    7. ')' → logprob: -14.629088401794434
    8. ' ()' → logprob: -15.879088401794434
    9. '("").' → logprob: -16.12908935546875
    10. '(input' → logprob: -16.37908935546875

Token 351: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015908108616713434
    2. 'strip' → logprob: -8.75015926361084
    3. '().' → logprob: -14.87515926361084
    4. ' split' → logprob: -15.62515926361084
    5. 'rstrip' → logprob: -16.625158309936523
    6. '(split' → logprob: -17.500158309936523
    7. 'spl' → logprob: -17.500158309936523
    8. '.split' → logprob: -19.000158309936523
    9. 'read' → logprob: -19.125158309936523
    10. '()' → logprob: -20.750158309936523

Token 352: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001115808030590415
    2. '()))' → logprob: -7.376115798950195
    3. '()' → logprob: -7.751115798950195
    4. ')' → logprob: -10.001115798950195
    5. '('' → logprob: -12.126115798950195
    6. '(' → logprob: -12.501115798950195
    7. '))' → logprob: -13.376115798950195
    8. '())
' → logprob: -13.751115798950195
    9. ' ())' → logprob: -13.876115798950195
    10. '()))
' → logprob: -16.126115798950195

Token 353: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.941850526549388e-06
    2. '   ' → logprob: -12.500007629394531
    3. 'result' → logprob: -12.875007629394531
    4. ' print' → logprob: -13.500007629394531
    5. '```' → logprob: -15.625007629394531
    6. '
' → logprob: -18.37500762939453
    7. '    
' → logprob: -19.00000762939453
    8. 'max' → logprob: -19.37500762939453
    9. '#print' → logprob: -20.75000762939453
    10. 'pr' → logprob: -21.37500762939453

Token 354: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030977390706539154
    2. 'max' → logprob: -6.2530975341796875
    3. 'result' → logprob: -6.7530975341796875
    4. ' print' → logprob: -14.128097534179688
    5. 'res' → logprob: -15.878097534179688
    6. 'maximum' → logprob: -16.253097534179688
    7. '```' → logprob: -17.253097534179688
    8. 'answer' → logprob: -17.378097534179688
    9. 'results' → logprob: -17.753097534179688
    10. '   ' → logprob: -17.878097534179688

Token 355: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09013405442237854
    2. 'max' → logprob: -2.8401341438293457
    3. 'result' → logprob: -3.5901341438293457
    4. ' print' → logprob: -9.090133666992188
    5. ' max' → logprob: -10.340133666992188
    6. ' result' → logprob: -10.965133666992188
    7. 'res' → logprob: -11.465133666992188
    8. '#' → logprob: -13.715133666992188
    9. 'selected' → logprob: -13.715133666992188
    10. 'rés' → logprob: -14.090133666992188

Token 356: ' et' (ID: 859)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.1427783966064453
    2. '_' → logprob: -2.1427783966064453
    3. 'max' → logprob: -4.517778396606445
    4. '_result' → logprob: -6.017778396606445
    5. ' =' → logprob: -6.767778396606445
    6. '=' → logprob: -7.392778396606445
    7. '   ' → logprob: -8.642778396606445
    8. ' maximale' → logprob: -9.017778396606445
    9. 'result' → logprob: -9.267778396606445
    10. '=max' → logprob: -10.392778396606445

Token 357: ' affich' (ID: 90179)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20141470432281494
    2. 'print' → logprob: -1.701414704322815
    3. '   ' → logprob: -13.826415061950684
    4. '```' → logprob: -15.951415061950684
    5. '_print' → logprob: -16.326414108276367
    6. ' ' → logprob: -16.701414108276367
    7. ' output' → logprob: -17.076414108276367
    8. '.print' → logprob: -17.326414108276367
    9. '	print' → logprob: -17.451414108276367
    10. ' prin' → logprob: -17.451414108276367

Token 358: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.05108486860990524
    2. 'er' → logprob: -3.0510847568511963
    3. '   ' → logprob: -6.051084995269775
    4. 'print' → logprob: -9.426084518432617
    5. 'e' → logprob: -9.926084518432617
    6. 'ation' → logprob: -12.301084518432617
    7. 'ge' → logprob: -12.801084518432617
    8. '#' → logprob: -14.676084518432617
    9. '  ' → logprob: -15.301084518432617
    10. ' ' → logprob: -15.551084518432617

Token 359: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05980483070015907
    2. '(c' → logprob: -2.934804916381836
    3. '   ' → logprob: -5.559804916381836
    4. '(
' → logprob: -7.309804916381836
    5. 'calculate' → logprob: -8.684804916381836
    6. '(max' → logprob: -9.184804916381836
    7. '()' → logprob: -10.809804916381836
    8. '(calc' → logprob: -11.059804916381836
    9. '(print' → logprob: -11.184804916381836
    10. '(

' → logprob: -11.309804916381836

Token 360: ' résultat' (ID: 62556)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.10404179990291595
    2. 'max' → logprob: -3.104041814804077
    3. 'maximum' → logprob: -3.104041814804077
    4. ' calculate' → logprob: -5.479041576385498
    5. ' maximum' → logprob: -5.854041576385498
    6. 'result' → logprob: -6.354041576385498
    7. ' maximale' → logprob: -9.354042053222656
    8. ' max' → logprob: -9.604042053222656
    9. 'maximize' → logprob: -9.729042053222656
    10. 'calcul' → logprob: -10.729042053222656

Token 361: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005764895584434271
    2. '   ' → logprob: -5.880764961242676
    3. ' print' → logprob: -5.880764961242676
    4. 'result' → logprob: -9.005764961242676
    5. '(print' → logprob: -10.880764961242676
    6. '```' → logprob: -11.130764961242676
    7. 'max' → logprob: -13.630764961242676
    8. '
' → logprob: -13.630764961242676
    9. ')' → logprob: -14.005764961242676
    10. '``' → logprob: -14.630764961242676

Token 362: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013892331160604954
    2. '   ' → logprob: -4.51389217376709
    3. ' print' → logprob: -5.88889217376709
    4. 'result' → logprob: -9.63889217376709
    5. '```' → logprob: -12.88889217376709
    6. '    
' → logprob: -13.76389217376709
    7. '
' → logprob: -14.01389217376709
    8. '	print' → logprob: -15.26389217376709
    9. ' result' → logprob: -15.51389217376709
    10. ',' → logprob: -15.88889217376709

Token 363: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0921942703134846e-05
    2. 'result' → logprob: -11.75001049041748
    3. ' print' → logprob: -12.75001049041748
    4. 'max' → logprob: -17.250011444091797
    5. '```' → logprob: -18.000011444091797
    6. '   ' → logprob: -19.750011444091797
    7. 'prin' → logprob: -20.000011444091797
    8. 'pr' → logprob: -20.875011444091797
    9. ' result' → logprob: -22.000011444091797
    10. '`' → logprob: -23.125011444091797

Token 364: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00672566844150424
    2. '(' → logprob: -5.006725788116455
    3. '(calc' → logprob: -12.131725311279297
    4. '(cal' → logprob: -12.381725311279297
    5. '(
' → logprob: -14.756725311279297
    6. '()' → logprob: -16.131725311279297
    7. '(f' → logprob: -17.131725311279297
    8. '(C' → logprob: -17.131725311279297
    9. ' (' → logprob: -17.131725311279297
    10. 'calculate' → logprob: -17.506725311279297

Token 365: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -3.690834273584187e-05
    2. 'calculate' → logprob: -10.50003719329834
    3. 'al' → logprob: -11.75003719329834
    4. 'alc' → logprob: -13.50003719329834
    5. 'aculate' → logprob: -17.125036239624023
    6. 'ulate' → logprob: -18.625036239624023
    7. 'culate' → logprob: -18.625036239624023
    8. '.calculate' → logprob: -19.500036239624023
    9. ' calculate' → logprob: -19.625036239624023
    10. 'alu' → logprob: -20.000036239624023

Token 366: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. 'max' → logprob: -17.0
    4. '_MAX' → logprob: -19.5
    5. '_min' → logprob: -20.75
    6. '_Max' → logprob: -21.75
    7. '_ma' → logprob: -21.75
    8. ' _' → logprob: -21.875
    9. ' max' → logprob: -22.0
    10. ')_' → logprob: -22.25

Token 367: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.002656512660905719
    2. '_max' → logprob: -6.00265645980835
    3. '_' → logprob: -8.627656936645508
    4. ' _' → logprob: -14.127656936645508
    5. ')_' → logprob: -15.752656936645508
    6. '```' → logprob: -15.877656936645508
    7. 'max' → logprob: -16.127656936645508
    8. ')' → logprob: -16.252656936645508
    9. 'cells' → logprob: -16.377656936645508
    10. '_cell' → logprob: -17.002656936645508

Token 368: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.00001049041748
    4. ')' → logprob: -16.750009536743164
    5. '(
' → logprob: -17.375009536743164
    6. '(H' → logprob: -18.375009536743164
    7. ')(' → logprob: -18.750009536743164
    8. '(w' → logprob: -20.000009536743164
    9. '(ht' → logprob: -20.500009536743164
    10. '(s' → logprob: -21.250009536743164

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.804671233519912e-05
    2. ',w' → logprob: -9.37508773803711
    3. ',
' → logprob: -13.12508773803711
    4. ' ,' → logprob: -13.75008773803711
    5. 'w' → logprob: -17.75008773803711
    6. ',

' → logprob: -17.87508773803711
    7. ',h' → logprob: -18.37508773803711
    8. '‌,' → logprob: -18.62508773803711
    9. ',
' → logprob: -18.87508773803711
    10. '   ' → logprob: -19.12508773803711

Token 370: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10020678490400314
    2. ' w' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.22520637512207
    4. ' ' → logprob: -17.10020637512207
    5. ' ' → logprob: -17.35020637512207
    6. '   ' → logprob: -18.10020637512207
    7. '    ' → logprob: -18.85020637512207
    8. 'W' → logprob: -19.10020637512207
    9. '	w' → logprob: -19.10020637512207
    10. ' )' → logprob: -19.85020637512207

Token 371: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008618354797363281
    2. ')' → logprob: -4.758618354797363
    3. ')))' → logprob: -13.508618354797363
    4. '))
' → logprob: -13.633618354797363
    5. '()))' → logprob: -14.133618354797363
    6. ' ))' → logprob: -15.508618354797363
    7. '())' → logprob: -16.258617401123047
    8. '   ' → logprob: -16.258617401123047
    9. '()' → logprob: -16.633617401123047
    10. ')
' → logprob: -17.258617401123047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 369
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 131
Tokens correctement prédits (top 10): 259
Précision stricte (1ère position): 33.88%
Précision adaptée (1ère position): 35.50%
Précision (top 10): 70.19%
================================================================================
