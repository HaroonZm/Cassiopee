================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une valeur, puis convertit cette valeur (habituellement une chaîne de caractères) en un entier (type int).
# La fonction input() attend que l'utilisateur tape quelque chose puis appuie sur "Entrée". int() convertit la chaîne en nombre entier.
i = int(input())

# Initialise une variable 's' à 0. Cette variable servira à stocker la somme totale résultante à calculer plus tard.
s = 0

# Calcule combien de fois 500 rentre dans 'i' sans dépasser. L'opérateur // effectue une division entière,
# c'est-à-dire qu'il donne combien de fois le diviseur tient dans le dividende, sans prendre la partie décimale.
x = i // 500

# Multiplie 'x' (le nombre de fois où 500 rentre dans 'i') par 1000, puis ajoute ce résultat à 's'.
# Cela correspond à donner 1000 pour chaque "billet" de 500 extrait.
s += x * 1000

# Met à jour la valeur de 'i' en lui affectant son reste après division par 500.
# L'opérateur % donne le reste de la division entière (appelé aussi modulo).
i = i % 500

# Calcule combien de fois 5 rentre dans le reste de 'i' (après avoir retiré tous les multiples de 500).
# Encore une fois, // effectue une division entière.
x = i // 5

# Multiplie 'x' (le nombre de fois où 5 rentre dans le reste de 'i') par 5, puis ajoute ce résultat à 's'.
# Ceci équivaut à donner 5 pour chaque "billet" de 5 extrait du reste.
s += x * 5

# Affiche le résultat final stocké dans 's' à l'utilisateur.
# La fonction print() affiche des données à l'écran.
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46207723021507263
    2. '_' → logprob: -1.837077260017395
    3. ' ' → logprob: -2.3370771408081055
    4. ':' → logprob: -3.0870771408081055
    5. ' de' → logprob: -3.4620771408081055
    6. 'u' → logprob: -4.9620771408081055
    7. ' d' → logprob: -5.0870771408081055
    8. 'd' → logprob: -5.4620771408081055
    9. ' :' → logprob: -5.5870771408081055
    10. ''' → logprob: -5.9620771408081055

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009819366969168186
    2. ' l' → logprob: -4.759819507598877
    3. 'user' → logprob: -7.509819507598877
    4. '#' → logprob: -8.509819030761719
    5. 'util' → logprob: -8.509819030761719
    6. 'la' → logprob: -9.884819030761719
    7. '```' → logprob: -10.009819030761719
    8. '`' → logprob: -10.384819030761719
    9. 'un' → logprob: -10.384819030761719
    10. ' ' → logprob: -11.384819030761719

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.177214115858078
    2. ''' → logprob: -2.3022141456604004
    3. 'u' → logprob: -3.4272141456604004
    4. 'a' → logprob: -3.9272141456604004
    5. '’utilisateur' → logprob: -5.6772141456604
    6. 'util' → logprob: -6.0522141456604
    7. ' utilisateur' → logprob: -6.5522141456604
    8. 'e' → logprob: -6.9272141456604
    9. '_' → logprob: -7.3022141456604
    10. 'é' → logprob: -8.427213668823242

Token 6: ' d' (ID: 272)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6975297927856445
    2. 'nom' → logprob: -1.0725297927856445
    3. 's' → logprob: -3.4475297927856445
    4. 'input' → logprob: -3.4475297927856445
    5. 'user' → logprob: -3.5725297927856445
    6. 'n' → logprob: -4.3225297927856445
    7. 'print' → logprob: -4.3225297927856445
    8. '#' → logprob: -4.8225297927856445
    9. ' ' → logprob: -4.9475297927856445
    10. '```' → logprob: -5.3225297927856445

Token 7: ''' (ID: 6)
  Prédit: 'entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.9473150372505188
    2. 'e' → logprob: -1.197314977645874
    3. 'entrée' → logprob: -1.947314977645874
    4. 'ent' → logprob: -3.072314977645874
    5. 'é' → logprob: -3.322314977645874
    6. ''' → logprob: -3.322314977645874
    7. ''entrée' → logprob: -4.822315216064453
    8. 'être' → logprob: -5.072315216064453
    9. 'a' → logprob: -5.197315216064453
    10. '```' → logprob: -5.447315216064453

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.32975345849990845
    2. 'entrée' → logprob: -1.7047533988952637
    3. 'ent' → logprob: -2.4547533988952637
    4. 's' → logprob: -5.204753398895264
    5. 'input' → logprob: -6.579753398895264
    6. 'identifier' → logprob: -6.954753398895264
    7. 'être' → logprob: -6.954753398895264
    8. 'entre' → logprob: -7.204753398895264
    9. 'enter' → logprob: -7.704753398895264
    10. 'ident' → logprob: -7.829753398895264

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.65101717156358e-05
    2. 'éer' → logprob: -10.125096321105957
    3. 'rer' → logprob: -10.500096321105957
    4. 'erer' → logprob: -11.875096321105957
    5. ''er' → logprob: -12.250096321105957
    6. 'érer' → logprob: -12.500096321105957
    7. 'é' → logprob: -13.125096321105957
    8. 'e' → logprob: -13.125096321105957
    9. 'trer' → logprob: -13.250096321105957
    10. 'ér' → logprob: -13.375096321105957

Token 10: ' une' (ID: 2463)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4085005521774292
    2. ' un' → logprob: -1.4085005521774292
    3. ' une' → logprob: -1.7835005521774292
    4. ' ' → logprob: -2.2835006713867188
    5. ''un' → logprob: -2.4085006713867188
    6. ''une' → logprob: -2.7835006713867188
    7. 'u' → logprob: -4.033500671386719
    8. '_' → logprob: -4.658500671386719
    9. 'une' → logprob: -4.908500671386719
    10. ' u' → logprob: -4.908500671386719

Token 11: ' valeur' (ID: 41664)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6664047241210938
    2. ' ' → logprob: -1.1664047241210938
    3. ' phrase' → logprob: -2.5414047241210938
    4. 'chaine' → logprob: -3.0414047241210938
    5. ' chaine' → logprob: -4.166404724121094
    6. 'phrase' → logprob: -5.041404724121094
    7. ' ligne' → logprob: -5.166404724121094
    8. 's' → logprob: -5.666404724121094
    9. '   ' → logprob: -5.791404724121094
    10. ' valeur' → logprob: -5.916404724121094

Token 12: ',' (ID: 11)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6403821706771851
    2. 'value' → logprob: -1.890382170677185
    3. 'user' → logprob: -2.5153822898864746
    4. 'x' → logprob: -3.0153822898864746
    5. 'input' → logprob: -3.2653822898864746
    6. '`' → logprob: -3.6403822898864746
    7. 'n' → logprob: -3.6403822898864746
    8. 'val' → logprob: -3.8903822898864746
    9. '\n' → logprob: -3.8903822898864746
    10. '```' → logprob: -4.015382289886475

Token 13: ' puis' (ID: 18766)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2065131664276123
    2. ' ' → logprob: -2.4565131664276123
    3. '_' → logprob: -2.5815131664276123
    4. 'v' → logprob: -2.5815131664276123
    5. 's' → logprob: -2.5815131664276123
    6. '```' → logprob: -2.9565131664276123
    7. 'x' → logprob: -3.0815131664276123
    8. 'val' → logprob: -3.3315131664276123
    9. '`' → logprob: -3.3315131664276123
    10. '#' → logprob: -3.4565131664276123

Token 14: ' convert' (ID: 8452)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.08459862321615219
    2. 'print' → logprob: -3.3345985412597656
    3. 'stock' → logprob: -4.959598541259766
    4. 'cal' → logprob: -5.209598541259766
    5. 'l' → logprob: -5.459598541259766
    6. 'calcul' → logprob: -5.459598541259766
    7. 's' → logprob: -5.709598541259766
    8. 'val' → logprob: -6.084598541259766
    9. 'effect' → logprob: -6.209598541259766
    10. 'input' → logprob: -6.209598541259766

Token 15: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01880446821451187
    2. 'r' → logprob: -4.643804550170898
    3. 'i' → logprob: -5.268804550170898
    4. 'er' → logprob: -6.393804550170898
    5. 'é' → logprob: -6.893804550170898
    6. ' ' → logprob: -7.768804550170898
    7. 's' → logprob: -8.143804550170898
    8. ' e' → logprob: -8.893804550170898
    9. 'ie' → logprob: -9.518804550170898
    10. '_' → logprob: -9.643804550170898

Token 16: ' cette' (ID: 7696)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01853056810796261
    2. ' ' → logprob: -4.393530368804932
    3. '```' → logprob: -5.893530368804932
    4. ' _' → logprob: -7.143530368804932
    5. '_la' → logprob: -7.518530368804932
    6. '_l' → logprob: -8.01853084564209
    7. '(' → logprob: -8.14353084564209
    8. ' en' → logprob: -8.76853084564209
    9. ' la' → logprob: -8.89353084564209
    10. 'e' → logprob: -8.89353084564209

Token 17: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29651615023612976
    2. ' valeur' → logprob: -1.4215161800384521
    3. ' chaîne' → logprob: -5.171515941619873
    4. '_' → logprob: -5.796515941619873
    5. ' espace' → logprob: -6.046515941619873
    6. ' val' → logprob: -6.796515941619873
    7. '  ' → logprob: -7.796515941619873
    8. ' ligne' → logprob: -7.921515941619873
    9. ' ' → logprob: -8.046516418457031
    10. 'val' → logprob: -8.046516418457031

Token 18: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.204270839691162
    2. '_' → logprob: -1.329270839691162
    3. 'i' → logprob: -1.329270839691162
    4. 'x' → logprob: -2.954270839691162
    5. ' ' → logprob: -3.829270839691162
    6. 'n' → logprob: -3.954270839691162
    7. 'input' → logprob: -4.329270839691162
    8. '```' → logprob: -4.454270839691162
    9. '`' → logprob: -4.579270839691162
    10. '#' → logprob: -4.829270839691162

Token 19: 'habit' (ID: 183262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6642975211143494
    2. ' en' → logprob: -0.9142975211143494
    3. 'en' → logprob: -2.539297580718994
    4. ' )' → logprob: -5.289297580718994
    5. ' ' → logprob: -8.164297103881836
    6. ''en' → logprob: -9.914297103881836
    7. ' ' → logprob: -10.164297103881836
    8. '_en' → logprob: -10.289297103881836
    9. '`)' → logprob: -10.539297103881836
    10. ',' → logprob: -10.539297103881836

Token 20: 'uellement' (ID: 36026)
  Prédit: 'uelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelle' → logprob: -0.5146508812904358
    2. 'uellement' → logprob: -1.389650821685791
    3. 'uel' → logprob: -3.014650821685791
    4. 'ue' → logprob: -3.639650821685791
    5. 'u' → logprob: -4.264650821685791
    6. 'ante' → logprob: -4.389650821685791
    7. ')' → logprob: -4.764650821685791
    8. '#' → logprob: -5.014650821685791
    9. 'uée' → logprob: -5.014650821685791
    10. 'ant' → logprob: -5.264650821685791

Token 21: ' une' (ID: 2463)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.05152992904186249
    2. 'en' → logprob: -3.301529884338379
    3. ')' → logprob: -4.426529884338379
    4. ' )' → logprob: -7.801529884338379
    5. ' ' → logprob: -7.926529884338379
    6. ''en' → logprob: -9.051529884338379
    7. ' ' → logprob: -9.676529884338379
    8. '`' → logprob: -9.801529884338379
    9. '```' → logprob: -9.926529884338379
    10. '_en' → logprob: -10.051529884338379

Token 22: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.03287786617875099
    2. ' chaine' → logprob: -4.2828779220581055
    3. 'chaine' → logprob: -5.0328779220581055
    4. ' ' → logprob: -5.7828779220581055
    5. ' string' → logprob: -6.0328779220581055
    6. 'entrée' → logprob: -6.1578779220581055
    7. 'nombre' → logprob: -7.0328779220581055
    8. 'cha' → logprob: -7.1578779220581055
    9. 'string' → logprob: -7.2828779220581055
    10. ' nombre' → logprob: -8.157877922058105

Token 23: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2211104780435562
    2. ' )' → logprob: -2.0961105823516846
    3. ' ' → logprob: -3.0961105823516846
    4. '_' → logprob: -4.7211103439331055
    5. ' de' → logprob: -4.8461103439331055
    6. ' en' → logprob: -5.0961103439331055
    7. 's' → logprob: -6.0961103439331055
    8. ' d' → logprob: -6.2211103439331055
    9. 'de' → logprob: -7.5961103439331055
    10. ''' → logprob: -7.8461103439331055

Token 24: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.016489189118146896
    2. ' caractères' → logprob: -4.391489028930664
    3. 'texte' → logprob: -5.641489028930664
    4. '#' → logprob: -8.391489028930664
    5. ' caracteres' → logprob: -10.391489028930664
    6. 'entrée' → logprob: -10.516489028930664
    7. '```' → logprob: -10.766489028930664
    8. ' caractère' → logprob: -11.016489028930664
    9. 'chars' → logprob: -11.266489028930664
    10. 'text' → logprob: -11.266489028930664

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789450854063034
    2. ' en' → logprob: -2.7039451599121094
    3. 'en' → logprob: -5.078945159912109
    4. ' )' → logprob: -5.953945159912109
    5. '')' → logprob: -10.20394515991211
    6. ',' → logprob: -10.82894515991211
    7. '`)' → logprob: -10.82894515991211
    8. ''en' → logprob: -11.07894515991211
    9. '#' → logprob: -11.82894515991211
    10. '")' → logprob: -12.32894515991211

Token 26: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6872112154960632
    2. 'e' → logprob: -1.437211275100708
    3. ' en' → logprob: -2.437211275100708
    4. 'i' → logprob: -3.312211275100708
    5. 'input' → logprob: -3.312211275100708
    6. ',' → logprob: -4.187211036682129
    7. '=' → logprob: -4.187211036682129
    8. ')' → logprob: -4.562211036682129
    9. 's' → logprob: -4.687211036682129
    10. '.' → logprob: -4.687211036682129

Token 27: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08167675882577896
    2. ' int' → logprob: -3.581676721572876
    3. ' entier' → logprob: -4.206676959991455
    4. 'un' → logprob: -4.456676959991455
    5. 'int' → logprob: -4.456676959991455
    6. 'ent' → logprob: -5.331676959991455
    7. ' nombre' → logprob: -5.581676959991455
    8. ' ' → logprob: -6.456676959991455
    9. ' une' → logprob: -7.456676959991455
    10. ' integer' → logprob: -7.831676959991455

Token 28: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8752874135971069
    2. ' entier' → logprob: -1.375287413597107
    3. ' nombre' → logprob: -2.0002875328063965
    4. 'nombre' → logprob: -2.1252875328063965
    5. 'int' → logprob: -3.3752875328063965
    6. ' ' → logprob: -3.5002875328063965
    7. ' int' → logprob: -5.5002875328063965
    8. ' ent' → logprob: -5.7502875328063965
    9. ' espace' → logprob: -6.6252875328063965
    10. '```' → logprob: -7.3752875328063965

Token 29: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4123212397098541
    2. 'v' → logprob: -1.6623212099075317
    3. 'n' → logprob: -2.6623213291168213
    4. 'x' → logprob: -3.7873213291168213
    5. 'e' → logprob: -4.037321090698242
    6. '#' → logprob: -4.787321090698242
    7. 'input' → logprob: -5.037321090698242
    8. '_' → logprob: -5.662321090698242
    9. '=' → logprob: -5.787321090698242
    10. '```' → logprob: -6.287321090698242

Token 30: 'type' (ID: 2493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009898189455270767
    2. '.' → logprob: -8.37598991394043
    3. ').' → logprob: -8.37598991394043
    4. ' )' → logprob: -8.62598991394043
    5. 'int' → logprob: -9.25098991394043
    6. '#' → logprob: -10.00098991394043
    7. ')#' → logprob: -10.12598991394043
    8. '`)' → logprob: -10.37598991394043
    9. ',' → logprob: -10.87598991394043
    10. 'ent' → logprob: -11.00098991394043

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3253684043884277
    2. ' int' → logprob: -1.3253684043884277
    3. ' entier' → logprob: -1.5753684043884277
    4. ')' → logprob: -2.0753684043884277
    5. 'ent' → logprob: -3.2003684043884277
    6. '`' → logprob: -3.8253684043884277
    7. ' `' → logprob: -3.8253684043884277
    8. '```' → logprob: -4.200368404388428
    9. '=int' → logprob: -4.450368404388428
    10. ' )' → logprob: -4.825368404388428

Token 32: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007732972735539079
    2. '#' → logprob: -7.7507734298706055
    3. '.' → logprob: -9.375773429870605
    4. '`)' → logprob: -10.125773429870605
    5. ' )' → logprob: -10.125773429870605
    6. ')#' → logprob: -10.375773429870605
    7. ':' → logprob: -10.500773429870605
    8. ').' → logprob: -10.625773429870605
    9. '')' → logprob: -10.875773429870605
    10. '):' → logprob: -11.125773429870605

Token 33: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6503517627716064
    2. 'i' → logprob: -1.1503517627716064
    3. 'n' → logprob: -2.6503517627716064
    4. 'val' → logprob: -4.150351524353027
    5. 'e' → logprob: -4.275351524353027
    6. 'value' → logprob: -4.400351524353027
    7. 'x' → logprob: -4.525351524353027
    8. 'input' → logprob: -4.650351524353027
    9. 'entr' → logprob: -5.025351524353027
    10. '#' → logprob: -5.150351524353027

Token 34: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8635266423225403
    2. 'v' → logprob: -1.3635265827178955
    3. 'value' → logprob: -1.7385265827178955
    4. 'n' → logprob: -2.7385265827178955
    5. 'x' → logprob: -3.8635265827178955
    6. '#' → logprob: -3.9885265827178955
    7. 'user' → logprob: -4.488526821136475
    8. 'i' → logprob: -4.738526821136475
    9. 'input' → logprob: -5.113526821136475
    10. 'entr' → logprob: -6.113526821136475

Token 35: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.36145898699760437
    2. ' valeur' → logprob: -1.6114590167999268
    3. ' val' → logprob: -2.8614590167999268
    4. ' =' → logprob: -3.6114590167999268
    5. ' ' → logprob: -4.986458778381348
    6. 'value' → logprob: -5.361458778381348
    7. ' value' → logprob: -6.111458778381348
    8. '_val' → logprob: -6.736458778381348
    9. 's' → logprob: -7.361458778381348
    10. ' ' → logprob: -7.611458778381348

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5316809415817261
    2. 'input' → logprob: -1.656680941581726
    3. ' int' → logprob: -2.4066810607910156
    4. 'int' → logprob: -2.7816810607910156
    5. 'def' → logprob: -2.7816810607910156
    6. ' def' → logprob: -4.906681060791016
    7. ' `' → logprob: -9.906681060791016
    8. '=input' → logprob: -10.406681060791016
    9. '```' → logprob: -10.531681060791016
    10. '=int' → logprob: -10.906681060791016

Token 37: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008800194482319057
    2. '()' → logprob: -7.500880241394043
    3. '(
' → logprob: -8.750880241394043
    4. '('' → logprob: -9.500880241394043
    5. '("' → logprob: -10.000880241394043
    6. '("""' → logprob: -11.500880241394043
    7. 's' → logprob: -11.625880241394043
    8. ')' → logprob: -11.750880241394043
    9. '("")' → logprob: -12.375880241394043
    10. ' (' → logprob: -12.375880241394043

Token 38: ' attend' (ID: 13384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005023968406021595
    2. ' (' → logprob: -9.000502586364746
    3. '('' → logprob: -9.250502586364746
    4. '(
' → logprob: -9.375502586364746
    5. '()' → logprob: -9.875502586364746
    6. ',' → logprob: -10.125502586364746
    7. ')' → logprob: -10.125502586364746
    8. '("' → logprob: -11.250502586364746
    9. ' ' → logprob: -11.375502586364746
    10. '#' → logprob: -11.875502586364746

Token 39: ' que' (ID: 661)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5038467049598694
    2. ' que' → logprob: -1.5038466453552246
    3. ' l' → logprob: -3.2538466453552246
    4. '()' → logprob: -3.3788466453552246
    5. ' )' → logprob: -3.5038466453552246
    6. ' un' → logprob: -4.253846645355225
    7. ')' → logprob: -4.628846645355225
    8. 'une' → logprob: -4.628846645355225
    9. 's' → logprob: -4.878846645355225
    10. ' la' → logprob: -5.003846645355225

Token 40: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13784922659397125
    2. 'l' → logprob: -2.5128493309020996
    3. ' ' → logprob: -3.5128493309020996
    4. ''utilisateur' → logprob: -5.8878493309021
    5. ' utilisateur' → logprob: -6.0128493309021
    6. '()' → logprob: -6.2628493309021
    7. ' )' → logprob: -6.5128493309021
    8. 'user' → logprob: -6.7628493309021
    9. '<|end|>' → logprob: -6.8878493309021
    10. 's' → logprob: -7.2628493309021

Token 41: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.04254072159528732
    2. ''' → logprob: -3.4175407886505127
    3. 'a' → logprob: -4.917540550231934
    4. '’utilisateur' → logprob: -7.042540550231934
    5. 'u' → logprob: -8.042540550231934
    6. ''util' → logprob: -9.542540550231934
    7. ''a' → logprob: -9.792540550231934
    8. ''us' → logprob: -9.917540550231934
    9. ''user' → logprob: -9.917540550231934
    10. ''entrée' → logprob: -10.542540550231934

Token 42: ' tape' (ID: 27444)
  Prédit: ' sais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -1.0567317008972168
    2. ' app' → logprob: -1.4317317008972168
    3. ' frappe' → logprob: -2.306731700897217
    4. ' entre' → logprob: -2.431731700897217
    5. ' ' → logprob: -3.056731700897217
    6. ' tape' → logprob: -3.431731700897217
    7. 'r' → logprob: -3.556731700897217
    8. 's' → logprob: -4.431731700897217
    9. ' fasse' → logprob: -4.556731700897217
    10. ' appelle' → logprob: -4.931731700897217

Token 43: ' quelque' (ID: 36359)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016202930361032486
    2. 'r' → logprob: -5.141202926635742
    3. ' une' → logprob: -5.516202926635742
    4. ' un' → logprob: -6.391202926635742
    5. ''' → logprob: -7.391202926635742
    6. ' )' → logprob: -7.641202926635742
    7. '  ' → logprob: -7.766202926635742
    8. 's' → logprob: -8.266202926635742
    9. ' l' → logprob: -8.391202926635742
    10. '"' → logprob: -8.391202926635742

Token 44: ' chose' (ID: 15505)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16067270934581757
    2. ' chose' → logprob: -1.910672664642334
    3. '#' → logprob: -8.785673141479492
    4. 's' → logprob: -10.035673141479492
    5. '```' → logprob: -10.035673141479492
    6. 'c' → logprob: -10.285673141479492
    7. '_ch' → logprob: -10.410673141479492
    8. 'cho' → logprob: -10.410673141479492
    9. 'fois' → logprob: -10.660673141479492
    10. ' ' → logprob: -11.160673141479492

Token 45: ' puis' (ID: 18766)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0055558681488037
    2. 'val' → logprob: -1.6305558681488037
    3. 'n' → logprob: -2.1305558681488037
    4. 'x' → logprob: -2.5055558681488037
    5. '#' → logprob: -3.2555558681488037
    6. 'i' → logprob: -3.5055558681488037
    7. 'value' → logprob: -3.5055558681488037
    8. ',' → logprob: -3.6305558681488037
    9. '(' → logprob: -3.7555558681488037
    10. '.' → logprob: -4.130556106567383

Token 46: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.13410308957099915
    2. 'app' → logprob: -2.1341030597686768
    3. ' retourne' → logprob: -5.509103298187256
    4. ' return' → logprob: -6.759103298187256
    5. 'r' → logprob: -7.259103298187256
    6. 'return' → logprob: -8.009102821350098
    7. ' presse' → logprob: -8.634102821350098
    8. 'ren' → logprob: -9.634102821350098
    9. 'l' → logprob: -9.634102821350098
    10. '\' → logprob: -9.884102821350098

Token 47: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.8263289928436279
    2. 'end' → logprob: -1.701328992843628
    3. 'e' → logprob: -2.701328992843628
    4. 'el' → logprob: -2.826328992843628
    5. 'elle' → logprob: -3.076328992843628
    6. 'uye' → logprob: -3.576328992843628
    7. 'uyer' → logprob: -3.576328992843628
    8. 'ends' → logprob: -3.701328992843628
    9. 'eler' → logprob: -4.326329231262207
    10. 'le' → logprob: -4.701329231262207

Token 48: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.26263946294784546
    2. 'sur' → logprob: -1.5126395225524902
    3. ' ' → logprob: -4.63763952255249
    4. '_sur' → logprob: -8.012639045715332
    5. '  ' → logprob: -9.137639045715332
    6. '`' → logprob: -9.387639045715332
    7. 's' → logprob: -9.512639045715332
    8. 'Sur' → logprob: -9.762639045715332
    9. 'entrée' → logprob: -10.387639045715332
    10. ')' → logprob: -10.512639045715332

Token 49: ' "' (ID: 392)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.10440494865179062
    2. ' Entr' → logprob: -2.479404926300049
    3. 'Enter' → logprob: -4.854404926300049
    4. ' Enter' → logprob: -5.604404926300049
    5. 'entrée' → logprob: -5.979404926300049
    6. 'entr' → logprob: -7.479404926300049
    7. ' entrée' → logprob: -7.854404926300049
    8. ' ' → logprob: -9.604405403137207
    9. ' enter' → logprob: -9.604405403137207
    10. ' ' → logprob: -9.854405403137207

Token 50: 'Entr' (ID: 46869)
  Prédit: 'Entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.0395943745970726
    2. ' Entr' → logprob: -3.5395944118499756
    3. 'Enter' → logprob: -5.1645941734313965
    4. 'entrée' → logprob: -6.0395941734313965
    5. ' Enter' → logprob: -7.2895941734313965
    6. 'entr' → logprob: -7.4145941734313965
    7. ' entrée' → logprob: -8.164594650268555
    8. ' entr' → logprob: -9.789594650268555
    9. ' entrer' → logprob: -10.664594650268555
    10. 'Ent' → logprob: -11.289594650268555

Token 51: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.009164704941213131
    2. 'é' → logprob: -4.759164810180664
    3. 'er' → logprob: -7.509164810180664
    4. 'ées' → logprob: -14.509164810180664
    5. 'ee' → logprob: -14.634164810180664
    6. 'éer' → logprob: -14.634164810180664
    7. 'e' → logprob: -15.259164810180664
    8. 'É' → logprob: -16.259164810180664
    9. '```' → logprob: -17.009164810180664
    10. '%C' → logprob: -17.509164810180664

Token 52: '".' (ID: 4050)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00385719770565629
    2. '"' → logprob: -6.503857135772705
    3. ')"' → logprob: -6.878857135772705
    4. '")' → logprob: -7.378857135772705
    5. ')
' → logprob: -8.378857612609863
    6. ' )' → logprob: -9.003857612609863
    7. '()' → logprob: -10.128857612609863
    8. '#' → logprob: -10.128857612609863
    9. ').' → logprob: -10.253857612609863
    10. ')`' → logprob: -10.253857612609863

Token 53: ' int' (ID: 677)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.35827988386154175
    2. 'n' → logprob: -2.3582799434661865
    3. 'x' → logprob: -2.6082799434661865
    4. 'v' → logprob: -2.6082799434661865
    5. 'value' → logprob: -3.3582799434661865
    6. 'ent' → logprob: -5.358279705047607
    7. '#' → logprob: -5.733279705047607
    8. 'user' → logprob: -5.858279705047607
    9. '```' → logprob: -5.858279705047607
    10. 'nombre' → logprob: -5.983279705047607

Token 54: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001322639436693862
    2. '(
' → logprob: -9.75013256072998
    3. '()' → logprob: -10.12513256072998
    4. ' (' → logprob: -11.87513256072998
    5. '('' → logprob: -12.00013256072998
    6. '(input' → logprob: -12.62513256072998
    7. '(`' → logprob: -12.75013256072998
    8. '(

' → logprob: -12.75013256072998
    9. ',' → logprob: -13.50013256072998
    10. ')' → logprob: -13.75013256072998

Token 55: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.277553620748222e-05
    2. '(
' → logprob: -10.125062942504883
    3. ' (' → logprob: -12.000062942504883
    4. '()' → logprob: -12.250062942504883
    5. '(input' → logprob: -13.000062942504883
    6. ')' → logprob: -13.000062942504883
    7. '('' → logprob: -13.750062942504883
    8. '#' → logprob: -13.875062942504883
    9. '(

' → logprob: -13.875062942504883
    10. ',' → logprob: -14.750062942504883

Token 56: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00949386041611433
    2. ' (' → logprob: -5.759493827819824
    3. 'e' → logprob: -6.259493827819824
    4. ')' → logprob: -7.134493827819824
    5. 'i' → logprob: -7.134493827819824
    6. '(
' → logprob: -7.509493827819824
    7. 's' → logprob: -7.884493827819824
    8. 'ère' → logprob: -8.009493827819824
    9. 'er' → logprob: -9.009493827819824
    10. 'it' → logprob: -9.134493827819824

Token 57: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005421462003141642
    2. ' (' → logprob: -5.6304216384887695
    3. 'l' → logprob: -7.6304216384887695
    4. ' ' → logprob: -8.88042163848877
    5. '()' → logprob: -9.00542163848877
    6. ' la' → logprob: -9.00542163848877
    7. 's' → logprob: -9.00542163848877
    8. '(
' → logprob: -9.13042163848877
    9. 'la' → logprob: -9.38042163848877
    10. ' ' → logprob: -10.38042163848877

Token 58: ' chaîne' (ID: 89288)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9255836009979248
    2. ' input' → logprob: -1.4255836009979248
    3. 'texte' → logprob: -2.300583600997925
    4. 'input' → logprob: -2.550583600997925
    5. 's' → logprob: -3.300583600997925
    6. 'entrée' → logprob: -3.300583600997925
    7. ' texte' → logprob: -3.800583600997925
    8. 'chaine' → logprob: -3.925583600997925
    9. 'str' → logprob: -4.425583839416504
    10. ' chaîne' → logprob: -4.800583839416504

Token 59: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158472081646323
    2. ' (' → logprob: -7.5021586418151855
    3. '()' → logprob: -7.7521586418151855
    4. 's' → logprob: -8.377158164978027
    5. '(
' → logprob: -8.377158164978027
    6. ')' → logprob: -9.002158164978027
    7. ' ' → logprob: -9.502158164978027
    8. '('' → logprob: -9.752158164978027
    9. '#' → logprob: -9.877158164978027
    10. '<|end|>' → logprob: -9.877158164978027

Token 60: ' nombre' (ID: 9733)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.017150074243545532
    2. ' int' → logprob: -5.017149925231934
    3. 'un' → logprob: -5.767149925231934
    4. 'int' → logprob: -5.892149925231934
    5. ' ' → logprob: -6.267149925231934
    6. ' entier' → logprob: -6.392149925231934
    7. ' ' → logprob: -7.892149925231934
    8. 'ent' → logprob: -8.392149925231934
    9. ' une' → logprob: -9.017149925231934
    10. ' ent' → logprob: -9.892149925231934

Token 61: ' entier' (ID: 80473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30918920040130615
    2. 'v' → logprob: -2.5591893196105957
    3. 'n' → logprob: -3.3091893196105957
    4. 'x' → logprob: -3.4341893196105957
    5. ',' → logprob: -3.9341893196105957
    6. 'i' → logprob: -4.184189319610596
    7. 'a' → logprob: -4.309189319610596
    8. '.' → logprob: -4.684189319610596
    9. '_' → logprob: -4.684189319610596
    10. ')' → logprob: -4.934189319610596

Token 62: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.927742063999176
    2. 'v' → logprob: -1.3027420043945312
    3. 'x' → logprob: -1.5527420043945312
    4. 'val' → logprob: -2.9277420043945312
    5. 'i' → logprob: -4.177742004394531
    6. '#' → logprob: -4.677742004394531
    7. 'a' → logprob: -4.927742004394531
    8. 'value' → logprob: -5.052742004394531
    9. 'nombre' → logprob: -5.552742004394531
    10. '(' → logprob: -5.802742004394531

Token 63: 'i' (ID: 72)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7601635456085205
    2. 'x' → logprob: -0.8851635456085205
    3. 'n' → logprob: -3.2601635456085205
    4. 'nombre' → logprob: -3.7601635456085205
    5. 'v' → logprob: -4.010163307189941
    6. 'value' → logprob: -4.135163307189941
    7. '#' → logprob: -5.260163307189941
    8. '=' → logprob: -5.760163307189941
    9. 'user' → logprob: -5.760163307189941
    10. 'a' → logprob: -6.135163307189941

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2222018539905548
    2. 'n' → logprob: -1.8472018241882324
    3. '=' → logprob: -3.4722018241882324
    4. 'nt' → logprob: -5.097201824188232
    5. ' ' → logprob: -6.597201824188232
    6. 'np' → logprob: -6.722201824188232
    7. 'p' → logprob: -7.097201824188232
    8. ' n' → logprob: -7.722201824188232
    9. 'f' → logprob: -9.22220230102539
    10. 't' → logprob: -9.47220230102539

Token 65: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5257994532585144
    2. 'int' → logprob: -0.9007994532585144
    3. ' input' → logprob: -6.40079927444458
    4. 'input' → logprob: -6.90079927444458
    5. ' ' → logprob: -12.900799751281738
    6. '=int' → logprob: -14.275799751281738
    7. '<int' → logprob: -14.650799751281738
    8. '[int' → logprob: -14.900799751281738
    9. '(int' → logprob: -15.025799751281738
    10. ' i' → logprob: -15.400799751281738

Token 66: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932920217514038
    2. '(input' → logprob: -0.6932920217514038
    3. ' (' → logprob: -9.193291664123535
    4. '('' → logprob: -11.068291664123535
    5. 'input' → logprob: -11.318291664123535
    6. '()' → logprob: -12.068291664123535
    7. '(
' → logprob: -12.568291664123535
    8. '(i' → logprob: -13.443291664123535
    9. '(user' → logprob: -13.943291664123535
    10. '(

' → logprob: -13.943291664123535

Token 67: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1553785651922226
    2. '('' → logprob: -2.780378580093384
    3. '("("' → logprob: -3.030378580093384
    4. '()' → logprob: -3.905378580093384
    5. '("' → logprob: -4.780378341674805
    6. '())' → logprob: -5.905378341674805
    7. '(""))' → logprob: -6.655378341674805
    8. '("")' → logprob: -7.405378341674805
    9. '(">' → logprob: -8.905378341674805
    10. '(()' → logprob: -9.405378341674805

Token 68: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3674814701080322
    2. ')' → logprob: -1.8674814701080322
    3. ' ' → logprob: -1.8674814701080322
    4. '#' → logprob: -2.2424814701080322
    5. '<|end|>' → logprob: -2.3674814701080322
    6. '*' → logprob: -2.6174814701080322
    7. '\' → logprob: -3.1174814701080322
    8. '\n' → logprob: -3.6174814701080322
    9. '(' → logprob: -3.6174814701080322
    10. '()' → logprob: -3.9924814701080322

Token 69: ' Initialise' (ID: 179601)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37960267066955566
    2. '+' → logprob: -1.5046026706695557
    3. ' ' → logprob: -3.7546026706695557
    4. '*' → logprob: -4.129602432250977
    5. 'i' → logprob: -4.129602432250977
    6. ' +' → logprob: -4.629602432250977
    7. '#' → logprob: -5.129602432250977
    8. ')' → logprob: -5.754602432250977
    9. '()' → logprob: -5.754602432250977
    10. '(i' → logprob: -5.879602432250977

Token 70: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5919527411460876
    2. '(' → logprob: -1.0919528007507324
    3. ' (' → logprob: -2.5919528007507324
    4. ' i' → logprob: -4.216952800750732
    5. 'i' → logprob: -4.716952800750732
    6. '_' → logprob: -5.716952800750732
    7. 'a' → logprob: -6.341952800750732
    8. '(i' → logprob: -6.716952800750732
    9. '()' → logprob: -6.966952800750732
    10. '  ' → logprob: -6.966952800750732

Token 71: ' variable' (ID: 11076)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.1699044704437256
    2. ' ' → logprob: -1.2949044704437256
    3. ' variable' → logprob: -1.2949044704437256
    4. ' liste' → logprob: -3.1699044704437256
    5. ' compteur' → logprob: -4.169904708862305
    6. ' =' → logprob: -4.294904708862305
    7. '_' → logprob: -4.669904708862305
    8. 'val' → logprob: -5.044904708862305
    9. ' value' → logprob: -5.294904708862305
    10. ' somme' → logprob: -5.294904708862305

Token 72: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8494530916213989
    2. 's' → logprob: -1.974453091621399
    3. ' ' → logprob: -2.3494529724121094
    4. 'i' → logprob: -2.4744529724121094
    5. ' n' → logprob: -2.4744529724121094
    6. 'a' → logprob: -2.8494529724121094
    7. 'x' → logprob: -3.9744529724121094
    8. ' =' → logprob: -4.099452972412109
    9. ' i' → logprob: -4.474452972412109
    10. '_' → logprob: -4.724452972412109

Token 73: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5895772576332092
    2. 'n' → logprob: -1.7145771980285645
    3. 'j' → logprob: -3.2145771980285645
    4. 'comp' → logprob: -3.2145771980285645
    5. 'total' → logprob: -3.3395771980285645
    6. 'result' → logprob: -3.7145771980285645
    7. ' somme' → logprob: -3.9645771980285645
    8. ' n' → logprob: -4.3395771980285645
    9. 'i' → logprob: -4.3395771980285645
    10. 'c' → logprob: -4.5895771980285645

Token 74: ''' (ID: 6)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.7518383264541626
    2. 'um' → logprob: -0.8768383264541626
    3. '=' → logprob: -2.626838207244873
    4. ' =' → logprob: -4.001838207244873
    5. 'om' → logprob: -5.126838207244873
    6. 'u' → logprob: -6.001838207244873
    7. ''' → logprob: -6.001838207244873
    8. '='' → logprob: -6.126838207244873
    9. 'umme' → logprob: -6.126838207244873
    10. '=""' → logprob: -7.001838207244873

Token 75: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5681452751159668
    2. ' ' → logprob: -1.3181452751159668
    3. ' s' → logprob: -2.068145275115967
    4. ' =' → logprob: -3.318145275115967
    5. '(s' → logprob: -6.568145275115967
    6. '=' → logprob: -6.943145275115967
    7. '  ' → logprob: -8.568145751953125
    8. ',' → logprob: -9.318145751953125
    9. ' ,' → logprob: -9.318145751953125
    10. '(' → logprob: -9.318145751953125

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4750146269798279
    2. '0' → logprob: -0.9750146269798279
    3. ' ' → logprob: -7.725014686584473
    4. ' i' → logprob: -8.975014686584473
    5. '1' → logprob: -8.975014686584473
    6. 'i' → logprob: -9.725014686584473
    7. ' zéro' → logprob: -10.225014686584473
    8. 'a' → logprob: -11.225014686584473
    9. 'z' → logprob: -11.350014686584473
    10. '100' → logprob: -11.600014686584473

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005971103440970182
    2. ' ' → logprob: -5.1309709548950195
    3. 'i' → logprob: -10.88097095489502
    4. '1' → logprob: -11.88097095489502
    5. ' i' → logprob: -12.88097095489502
    6. 'z' → logprob: -13.00597095489502
    7. '""' → logprob: -13.13097095489502
    8. '"' → logprob: -13.63097095489502
    9. 'int' → logprob: -13.88097095489502
    10. '100' → logprob: -14.00597095489502

Token 78: '.' (ID: 13)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015707729384303093
    2. ' s' → logprob: -4.640707492828369
    3. ' ' → logprob: -5.140707492828369
    4. ' 
' → logprob: -9.890707969665527
    5. '  
' → logprob: -11.640707969665527
    6. ''s' → logprob: -11.890707969665527
    7. '<|end|>' → logprob: -12.515707969665527
    8. '  ' → logprob: -12.640707969665527
    9. ')' → logprob: -13.140707969665527
    10. ' )' → logprob: -13.765707969665527

Token 79: ' Cette' (ID: 27383)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03089936077594757
    2. ' s' → logprob: -3.5308992862701416
    3. ' 
' → logprob: -6.905899524688721
    4. ' ' → logprob: -9.530899047851562
    5. '  
' → logprob: -10.280899047851562
    6. '
' → logprob: -10.780899047851562
    7. ''s' → logprob: -11.655899047851562
    8. ' 

' → logprob: -12.530899047851562
    9. '   
' → logprob: -14.155899047851562
    10. '`s' → logprob: -14.530899047851562

Token 80: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013197881169617176
    2. 's' → logprob: -5.263197898864746
    3. ' s' → logprob: -5.638197898864746
    4. '  ' → logprob: -6.263197898864746
    5. '<|end|>' → logprob: -8.388197898864746
    6. ' 
' → logprob: -8.513197898864746
    7. '  
' → logprob: -8.638197898864746
    8. ' 

' → logprob: -8.763197898864746
    9. ' )' → logprob: -9.138197898864746
    10. '.' → logprob: -9.138197898864746

Token 81: ' serv' (ID: 2096)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024067090824246407
    2. '  ' → logprob: -4.024066925048828
    3. '<|end|>' → logprob: -5.399066925048828
    4. 's' → logprob: -7.524066925048828
    5. ' s' → logprob: -8.649066925048828
    6. ' )' → logprob: -9.024066925048828
    7. ' =' → logprob: -9.524066925048828
    8. 'space' → logprob: -9.899066925048828
    9. ' ,' → logprob: -10.024066925048828
    10. ')' → logprob: -10.024066925048828

Token 82: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.005287242121994495
    2. 'ra' → logprob: -6.005287170410156
    3. 'a' → logprob: -6.380287170410156
    4. 'e' → logprob: -7.130287170410156
    5. 'r' → logprob: -8.880287170410156
    6. 'ir' → logprob: -9.380287170410156
    7. 'i' → logprob: -10.130287170410156
    8. 'era' → logprob: -10.880287170410156
    9. 'irà' → logprob: -11.130287170410156
    10. 't' → logprob: -12.505287170410156

Token 83: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4125846028327942
    2. ' à' → logprob: -1.2875845432281494
    3. ' a' → logprob: -3.5375845432281494
    4. 's' → logprob: -4.4125847816467285
    5. 'a' → logprob: -4.7875847816467285
    6. ' to' → logprob: -5.0375847816467285
    7. 'à' → logprob: -6.4125847816467285
    8. '  ' → logprob: -7.0375847816467285
    9. ' as' → logprob: -7.2875847816467285
    10. '<|end|>' → logprob: -7.4125847816467285

Token 84: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5875669717788696
    2. 'stock' → logprob: -1.5875669717788696
    3. 's' → logprob: -2.08756685256958
    4. 'som' → logprob: -2.71256685256958
    5. ' ' → logprob: -4.33756685256958
    6. ' compter' → logprob: -5.58756685256958
    7. 'l' → logprob: -5.58756685256958
    8. '0' → logprob: -5.96256685256958
    9. 'sum' → logprob: -6.08756685256958
    10. 'calcul' → logprob: -6.08756685256958

Token 85: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.638835608959198
    2. 'er' → logprob: -1.0138356685638428
    3. 'r' → logprob: -2.6388356685638428
    4. 'a' → logprob: -3.5138356685638428
    5. 'i' → logprob: -6.138835430145264
    6. 'ir' → logprob: -6.513835430145264
    7. 's' → logprob: -6.763835430145264
    8. ' ' → logprob: -7.263835430145264
    9. 'ez' → logprob: -7.638835430145264
    10. ''' → logprob: -7.763835430145264

Token 86: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012567342258989811
    2. '  ' → logprob: -4.762567520141602
    3. '<|end|>' → logprob: -5.762567520141602
    4. ' l' → logprob: -8.387567520141602
    5. ' a' → logprob: -9.012567520141602
    6. 's' → logprob: -9.137567520141602
    7. ' )' → logprob: -9.387567520141602
    8. ')' → logprob: -9.762567520141602
    9. 'a' → logprob: -10.137567520141602
    10. 'e' → logprob: -10.762567520141602

Token 87: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.40973779559135437
    2. ' ' → logprob: -1.4097378253936768
    3. 's' → logprob: -3.1597378253936768
    4. ' som' → logprob: -3.2847378253936768
    5. 'som' → logprob: -5.159737586975098
    6. 'u' → logprob: -6.284737586975098
    7. ' somm' → logprob: -7.159737586975098
    8. ' Som' → logprob: -7.284737586975098
    9. ' sum' → logprob: -7.409737586975098
    10. ' soma' → logprob: -7.784737586975098

Token 88: ' totale' (ID: 52898)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5052559971809387
    2. ' ' → logprob: -1.005255937576294
    3. '(s' → logprob: -4.505256175994873
    4. '(' → logprob: -4.880256175994873
    5. ' s' → logprob: -5.130256175994873
    6. ')' → logprob: -6.380256175994873
    7. ' )' → logprob: -7.005256175994873
    8. ' (' → logprob: -7.255256175994873
    9. '_' → logprob: -7.380256175994873
    10. '<|end|>' → logprob: -8.005255699157715

Token 89: ' résult' (ID: 31657)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07761457562446594
    2. ' ' → logprob: -2.7026145458221436
    3. ' s' → logprob: -5.452614784240723
    4. '(s' → logprob: -6.452614784240723
    5. '<|end|>' → logprob: -7.702614784240723
    6. ''s' → logprob: -7.827614784240723
    7. '  ' → logprob: -8.827614784240723
    8. ',' → logprob: -8.952614784240723
    9. ')' → logprob: -9.077614784240723
    10. 'i' → logprob: -9.577614784240723

Token 90: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4869711399078369
    2. 'ant' → logprob: -1.361971139907837
    3. 'ante' → logprob: -2.611971139907837
    4. ' de' → logprob: -3.111971139907837
    5. ' d' → logprob: -5.486970901489258
    6. 'de' → logprob: -6.611970901489258
    7. 'é' → logprob: -7.361970901489258
    8. ' e' → logprob: -7.361970901489258
    9. 'ent' → logprob: -7.611970901489258
    10. '=' → logprob: -7.611970901489258

Token 91: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10107451677322388
    2. ' ' → logprob: -2.601074457168579
    3. ' s' → logprob: -4.351074695587158
    4. '(s' → logprob: -4.976074695587158
    5. ')' → logprob: -7.726074695587158
    6. '(' → logprob: -7.726074695587158
    7. ',' → logprob: -8.35107421875
    8. '<|end|>' → logprob: -8.72607421875
    9. ' )' → logprob: -8.85107421875
    10. ''s' → logprob: -8.97607421875

Token 92: ' calcul' (ID: 7559)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7732142806053162
    2. ' ' → logprob: -2.023214340209961
    3. ' addition' → logprob: -2.148214340209961
    4. ' chaque' → logprob: -2.398214340209961
    5. ' calcul' → logprob: -2.898214340209961
    6. 'calcul' → logprob: -4.023214340209961
    7. 'addition' → logprob: -4.148214340209961
    8. 'u' → logprob: -4.398214340209961
    9. ' partir' → logprob: -4.523214340209961
    10. '```' → logprob: -4.773214340209961

Token 93: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3317168056964874
    2. 'e' → logprob: -1.456716775894165
    3. 'u' → logprob: -3.706716775894165
    4. 'ée' → logprob: -4.331717014312744
    5. 'é' → logprob: -4.956717014312744
    6. 'uler' → logprob: -6.706717014312744
    7. 'a' → logprob: -7.206717014312744
    8. 'uer' → logprob: -7.831717014312744
    9. 'éer' → logprob: -7.831717014312744
    10. 'r' → logprob: -7.956717014312744

Token 94: ' plus' (ID: 2932)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03444831818342209
    2. ' s' → logprob: -3.5344483852386475
    3. ' ' → logprob: -5.659448146820068
    4. ' 
' → logprob: -7.284448146820068
    5. ''s' → logprob: -8.409448623657227
    6. '(s' → logprob: -9.159448623657227
    7. '  
' → logprob: -10.284448623657227
    8. '<|end|>' → logprob: -10.534448623657227
    9. '
' → logprob: -11.034448623657227
    10. '```' → logprob: -11.284448623657227

Token 95: ' tard' (ID: 30225)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.194118618965149
    2. 'ieurs' → logprob: -1.569118618965149
    3. ' adelante' → logprob: -2.6941184997558594
    4. 'e' → logprob: -2.6941184997558594
    5. 'i' → logprob: -3.0691184997558594
    6. ' ' → logprob: -3.0691184997558594
    7. '```' → logprob: -3.1941184997558594
    8. 't' → logprob: -3.5691184997558594
    9. ' =' → logprob: -3.9441184997558594
    10. ' tard' → logprob: -4.069118499755859

Token 96: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008028296753764153
    2. ' s' → logprob: -5.508028507232666
    3. ' ' → logprob: -6.133028507232666
    4. '<|end|>' → logprob: -7.133028507232666
    5. ''s' → logprob: -7.883028507232666
    6. ' 
' → logprob: -8.133028030395508
    7. '
' → logprob: -9.258028030395508
    8. 'i' → logprob: -10.383028030395508
    9. '(s' → logprob: -10.633028030395508
    10. '  
' → logprob: -10.883028030395508

Token 97: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006514362758025527
    2. ' s' → logprob: -7.8756513595581055
    3. ' 
' → logprob: -8.750651359558105
    4. '
' → logprob: -9.250651359558105
    5. ' ' → logprob: -11.375651359558105
    6. '  
' → logprob: -13.250651359558105
    7. ''s' → logprob: -14.125651359558105
    8. '```' → logprob: -14.500651359558105
    9. '`s' → logprob: -14.750651359558105
    10. '
' → logprob: -14.750651359558105

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07906581461429596
    2. '=' → logprob: -2.5790657997131348
    3. ' ' → logprob: -8.704066276550293
    4. ' ' → logprob: -12.204066276550293
    5. ' =
' → logprob: -13.579066276550293
    6. 'space' → logprob: -14.204066276550293
    7. 's' → logprob: -14.204066276550293
    8. '  ' → logprob: -14.329066276550293
    9. ' +=' → logprob: -14.579066276550293
    10. ',' → logprob: -14.829066276550293

Token 99: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868716359138489
    2. '0' → logprob: -1.136871576309204
    3. ' ' → logprob: -14.386871337890625
    4. '  ' → logprob: -19.636871337890625
    5. '​' → logprob: -20.636871337890625
    6. ' s' → logprob: -20.886871337890625
    7. '۰' → logprob: -21.011871337890625
    8. 's' → logprob: -21.386871337890625
    9. ' ' → logprob: -21.636871337890625
    10. '1' → logprob: -21.761871337890625

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. ' ' → logprob: -18.500179290771484
    4. 'int' → logprob: -18.875179290771484
    5. 'i' → logprob: -19.250179290771484
    6. '۰' → logprob: -19.500179290771484
    7. '  ' → logprob: -19.625179290771484
    8. '   ' → logprob: -20.375179290771484
    9. 's' → logprob: -20.500179290771484
    10. '00' → logprob: -20.875179290771484

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9403610229492188
    2. 'for' → logprob: -0.9403610229492188
    3. '\n' → logprob: -2.6903610229492188
    4. '<|end|>' → logprob: -2.9403610229492188
    5. ' for' → logprob: -3.5653610229492188
    6. ' 
' → logprob: -3.8153610229492188
    7. '' → logprob: -3.9403610229492188
    8. ' ' → logprob: -4.565361022949219
    9. '\' → logprob: -5.190361022949219
    10. 'i' → logprob: -5.690361022949219

Token 102: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05966940522193909
    2. '
' → logprob: -3.1846694946289062
    3. ' for' → logprob: -5.184669494628906
    4. 'f' → logprob: -5.684669494628906
    5. '' → logprob: -5.934669494628906
    6. '\n' → logprob: -6.184669494628906
    7. 'i' → logprob: -7.434669494628906
    8. 'n' → logprob: -7.434669494628906
    9. 'r' → logprob: -8.184669494628906
    10. '<|end|>' → logprob: -8.309669494628906

Token 103: ' Cal' (ID: 4453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00894745159894228
    2. 'f' → logprob: -5.008947372436523
    3. ' for' → logprob: -6.258947372436523
    4. 'i' → logprob: -8.508947372436523
    5. ' ' → logprob: -10.383947372436523
    6. 'r' → logprob: -10.508947372436523
    7. 'n' → logprob: -11.133947372436523
    8. '#' → logprob: -12.008947372436523
    9. '.' → logprob: -12.258947372436523
    10. '
' → logprob: -12.258947372436523

Token 104: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.21044909954071045
    2. 'cule' → logprob: -1.7104490995407104
    3. 'c' → logprob: -5.08544921875
    4. 'for' → logprob: -6.33544921875
    5. 'culate' → logprob: -7.71044921875
    6. '#' → logprob: -8.96044921875
    7. 'cules' → logprob: -9.21044921875
    8. 'e' → logprob: -9.33544921875
    9. 'cula' → logprob: -9.46044921875
    10. '```' → logprob: -10.46044921875

Token 105: ' combien' (ID: 106648)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7173954248428345
    2. ' ' → logprob: -0.9673954248428345
    3. ' for' → logprob: -2.342395305633545
    4. '_' → logprob: -4.342395305633545
    5. '(' → logprob: -5.217395305633545
    6. '=' → logprob: -5.717395305633545
    7. 'i' → logprob: -5.842395305633545
    8. ':' → logprob: -6.217395305633545
    9. '<|end|>' → logprob: -6.967395305633545
    10. ' =' → logprob: -7.092395305633545

Token 106: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.650233805179596
    2. 'de' → logprob: -1.7752337455749512
    3. ' d' → logprob: -2.400233745574951
    4. 'd' → logprob: -3.025233745574951
    5. 'i' → logprob: -3.400233745574951
    6. 's' → logprob: -3.525233745574951
    7. 'fois' → logprob: -4.400233745574951
    8. '<|end|>' → logprob: -4.650233745574951
    9. ' fois' → logprob: -4.775233745574951
    10. 'n' → logprob: -5.025233745574951

Token 107: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -1.4237452745437622
    2. ' fois' → logprob: -1.6737452745437622
    3. ' nombres' → logprob: -2.0487451553344727
    4. 'i' → logprob: -3.1737451553344727
    5. '2' → logprob: -3.4237451553344727
    6. 'multip' → logprob: -3.4237451553344727
    7. ' espaces' → logprob: -3.4237451553344727
    8. ' ' → logprob: -3.5487451553344727
    9. 'spaces' → logprob: -3.7987451553344727
    10. '0' → logprob: -4.048745155334473

Token 108: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7916694283485413
    2. ' ' → logprob: -0.9166694283485413
    3. ' i' → logprob: -2.5416693687438965
    4. ''' → logprob: -4.0416693687438965
    5. '"' → logprob: -4.5416693687438965
    6. 'a' → logprob: -4.9166693687438965
    7. '_' → logprob: -5.1666693687438965
    8. ' a' → logprob: -5.2916693687438965
    9. 'n' → logprob: -5.2916693687438965
    10. ' "' → logprob: -5.6666693687438965

Token 109: '500' (ID: 3234)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14925767481327057
    2. ' i' → logprob: -3.7742576599121094
    3. 'l' → logprob: -3.7742576599121094
    4. '2' → logprob: -4.024257659912109
    5. 'n' → logprob: -4.024257659912109
    6. 'le' → logprob: -4.399257659912109
    7. ''' → logprob: -4.774257659912109
    8. '"' → logprob: -5.399257659912109
    9. '1' → logprob: -5.649257659912109
    10. ' ' → logprob: -5.649257659912109

Token 110: ' rent' (ID: 9462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3767132759094238
    2. 's' → logprob: -1.8767132759094238
    3. 'i' → logprob: -2.376713275909424
    4. 'div' → logprob: -2.501713275909424
    5. '0' → logprob: -2.626713275909424
    6. 'le' → logprob: -2.876713275909424
    7. 'ent' → logprob: -2.876713275909424
    8. '100' → logprob: -3.751713275909424
    9. ' ' → logprob: -3.876713275909424
    10. '50' → logprob: -4.251713275909424

Token 111: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.047953300178050995
    2. 'r' → logprob: -3.5479533672332764
    3. 'rent' → logprob: -4.047953128814697
    4. 'ré' → logprob: -9.047953605651855
    5. 'ra' → logprob: -9.047953605651855
    6. 'rant' → logprob: -9.047953605651855
    7. 'rer' → logprob: -10.922953605651855
    8. 'e' → logprob: -11.047953605651855
    9. '1' → logprob: -11.047953605651855
    10. '</' → logprob: -11.172953605651855

Token 112: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.20183691382408142
    2. 'dans' → logprob: -1.8268369436264038
    3. ' ' → logprob: -4.201837062835693
    4. 'r' → logprob: -6.201837062835693
    5. ' dedans' → logprob: -7.326837062835693
    6. 'e' → logprob: -7.326837062835693
    7. 'int' → logprob: -7.451837062835693
    8. 'nt' → logprob: -8.076836585998535
    9. '   ' → logprob: -8.076836585998535
    10. 's' → logprob: -8.201836585998535

Token 113: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34859636425971985
    2. ' i' → logprob: -1.2235963344573975
    3. ' ' → logprob: -10.098596572875977
    4. 'l' → logprob: -10.098596572875977
    5. ' la' → logprob: -10.848596572875977
    6. ' ' → logprob: -11.848596572875977
    7. '100' → logprob: -11.848596572875977
    8. ' l' → logprob: -11.848596572875977
    9. '	i' → logprob: -11.973596572875977
    10. 'la' → logprob: -12.473596572875977

Token 114: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05492459610104561
    2. ' i' → logprob: -2.929924488067627
    3. ' ' → logprob: -10.804924964904785
    4. 'l' → logprob: -12.679924964904785
    5. '100' → logprob: -12.679924964904785
    6. '`' → logprob: -12.804924964904785
    7. ''i' → logprob: -12.804924964904785
    8. '	i' → logprob: -13.742424964904785
    9. 's' → logprob: -13.929924964904785
    10. 'int' → logprob: -14.117424964904785

Token 115: ''' (ID: 6)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19487358629703522
    2. ',' → logprob: -2.069873571395874
    3. 'i' → logprob: -4.194873809814453
    4. 's' → logprob: -4.569873809814453
    5. ')' → logprob: -4.944873809814453
    6. '500' → logprob: -5.694873809814453
    7. ' ' → logprob: -6.069873809814453
    8. '.
' → logprob: -6.319873809814453
    9. ';' → logprob: -6.569873809814453
    10. ' (' → logprob: -6.569873809814453

Token 116: ' sans' (ID: 9828)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0025614500045776
    2. 'n' → logprob: -1.2525614500045776
    3. 's' → logprob: -1.5025614500045776
    4. 'c' → logprob: -3.252561569213867
    5. ' 
' → logprob: -4.127561569213867
    6. '500' → logprob: -4.502561569213867
    7. 'd' → logprob: -4.877561569213867
    8. 't' → logprob: -5.002561569213867
    9. '*' → logprob: -5.252561569213867
    10. 'r' → logprob: -5.377561569213867

Token 117: ' dépasser' (ID: 187375)
  Prédit: ' dépasser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.05955272167921066
    2. 'dé' → logprob: -3.5595526695251465
    3. 'd' → logprob: -4.3095526695251465
    4. ' dépasse' → logprob: -4.5595526695251465
    5. ' dé' → logprob: -6.1845526695251465
    6. ' dépass' → logprob: -7.0595526695251465
    7. ' d' → logprob: -7.4345526695251465
    8. 're' → logprob: -7.8095526695251465
    9. 'r' → logprob: -7.9345526695251465
    10. ' utiliser' → logprob: -9.434553146362305

Token 118: '.' (ID: 13)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47628071904182434
    2. '.' → logprob: -1.601280689239502
    3. ',' → logprob: -2.976280689239502
    4. 'n' → logprob: -3.226280689239502
    5. ' ' → logprob: -3.226280689239502
    6. '500' → logprob: -4.851280689239502
    7. ' ,' → logprob: -4.851280689239502
    8. 'q' → logprob: -4.976280689239502
    9. ':' → logprob: -5.601280689239502
    10. ' s' → logprob: -5.976280689239502

Token 119: ' L' (ID: 451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9266952276229858
    2. 'q' → logprob: -1.1766952276229858
    3. 'n' → logprob: -1.5516952276229858
    4. '500' → logprob: -4.051695346832275
    5. 'count' → logprob: -4.176695346832275
    6. 'c' → logprob: -4.301695346832275
    7. 'quot' → logprob: -4.926695346832275
    8. 'x' → logprob: -5.676695346832275
    9. ' n' → logprob: -5.676695346832275
    10. 'k' → logprob: -5.801695346832275

Token 120: ''op' (ID: 70747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.282354474067688
    2. 'i' → logprob: -1.532354474067688
    3. 'r' → logprob: -2.1573543548583984
    4. ' s' → logprob: -2.4073543548583984
    5. ' reste' → logprob: -2.6573543548583984
    6. 'a' → logprob: -3.4073543548583984
    7. 'o' → logprob: -3.5323543548583984
    8. 'e' → logprob: -4.032354354858398
    9. '#' → logprob: -4.032354354858398
    10. 'if' → logprob: -4.157354354858398

Token 121: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.5045621991157532
    2. 'érateur' → logprob: -2.2545621395111084
    3. 't' → logprob: -2.3795621395111084
    4. 'érations' → logprob: -3.2545621395111084
    5. 's' → logprob: -3.5045621395111084
    6. 'i' → logprob: -3.7545621395111084
    7. 'ti' → logprob: -3.7545621395111084
    8. 'ér' → logprob: -3.8795621395111084
    9. 'er' → logprob: -4.0045623779296875
    10. 'érant' → logprob: -4.6295623779296875

Token 122: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11304495483636856
    2. ' //' → logprob: -2.6130449771881104
    3. '/' → logprob: -4.238044738769531
    4. ' ' → logprob: -4.738044738769531
    5. '%' → logprob: -6.113044738769531
    6. '`' → logprob: -6.238044738769531
    7. '=' → logprob: -6.988044738769531
    8. ' /' → logprob: -7.113044738769531
    9. ' `' → logprob: -7.113044738769531
    10. ''' → logprob: -7.488044738769531

Token 123: ' effect' (ID: 3159)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.54416823387146
    2. ' réalise' → logprob: -1.91916823387146
    3. ' signifie' → logprob: -2.29416823387146
    4. ' fait' → logprob: -2.41916823387146
    5. ' (' → logprob: -2.66916823387146
    6. ' ' → logprob: -2.66916823387146
    7. '=' → logprob: -2.91916823387146
    8. 's' → logprob: -3.29416823387146
    9. 'cal' → logprob: -4.044168472290039
    10. ',' → logprob: -4.169168472290039

Token 124: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0008342855726368725
    2. 'u' → logprob: -7.6258344650268555
    3. 'uant' → logprob: -8.625834465026855
    4. 'uent' → logprob: -9.875834465026855
    5. 'uer' → logprob: -10.250834465026855
    6. 'uera' → logprob: -10.500834465026855
    7. 'uez' → logprob: -11.375834465026855
    8. 'uem' → logprob: -12.375834465026855
    9. 'ué' → logprob: -12.500834465026855
    10. 'uie' → logprob: -12.625834465026855

Token 125: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5850288271903992
    2. ' la' → logprob: -1.085028886795044
    3. 'une' → logprob: -2.835028886795044
    4. 'la' → logprob: -3.210028886795044
    5. 'div' → logprob: -5.710028648376465
    6. 'division' → logprob: -6.710028648376465
    7. ' ' → logprob: -8.085028648376465
    8. '_la' → logprob: -8.210028648376465
    9. 'a' → logprob: -8.585028648376465
    10. 'l' → logprob: -8.835028648376465

Token 126: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.5851185917854309
    2. ' division' → logprob: -0.8351185917854309
    3. 'div' → logprob: -4.710118770599365
    4. ' ' → logprob: -10.210118293762207
    5. ' div' → logprob: -10.335118293762207
    6. 'floor' → logprob: -10.960118293762207
    7. '_div' → logprob: -11.460118293762207
    8. ' división' → logprob: -12.210118293762207
    9. 'Division' → logprob: -12.585118293762207
    10. ' floor' → logprob: -12.710118293762207

Token 127: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0786224901676178
    2. ' entière' → logprob: -2.953622579574585
    3. 'enti' → logprob: -3.953622579574585
    4. 'eu' → logprob: -6.078622341156006
    5. ' ent' → logprob: -6.828622341156006
    6. ' enti' → logprob: -7.953622341156006
    7. '(ent' → logprob: -9.078622817993164
    8. '_ent' → logprob: -9.453622817993164
    9. 'int' → logprob: -9.453622817993164
    10. '#' → logprob: -9.953622817993164

Token 128: ',
' (ID: 412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14347690343856812
    2. ',' → logprob: -3.018476963043213
    3. 'result' → logprob: -3.518476963043213
    4. '500' → logprob: -4.268476963043213
    5. ' (' → logprob: -4.893476963043213
    6. ' s' → logprob: -5.018476963043213
    7. '.' → logprob: -5.143476963043213
    8. ' ' → logprob: -5.643476963043213
    9. 'n' → logprob: -5.768476963043213
    10. 'i' → logprob: -5.893476963043213

Token 129: '#' (ID: 2)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2901007831096649
    2. 'i' → logprob: -2.1651008129119873
    3. 's' → logprob: -2.7901008129119873
    4. ' c' → logprob: -3.4151008129119873
    5. ' ' → logprob: -4.165100574493408
    6. '<|end|>' → logprob: -5.040100574493408
    7. ' s' → logprob: -5.915100574493408
    8. 'c' → logprob: -6.165100574493408
    9. ' which' → logprob: -6.415100574493408
    10. ',' → logprob: -6.415100574493408

Token 130: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.893829882144928
    2. ' ce' → logprob: -1.5188298225402832
    3. ' puis' → logprob: -2.143829822540283
    4. ' i' → logprob: -2.143829822540283
    5. ' donc' → logprob: -3.268829822540283
    6. 'ce' → logprob: -3.518829822540283
    7. 'c' → logprob: -4.393829822540283
    8. 'i' → logprob: -5.018829822540283
    9. ' ' → logprob: -5.143829822540283
    10. ' permettant' → logprob: -5.393829822540283

Token 131: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.112345814704895
    2. 'e' → logprob: -1.362345814704895
    3. 'est' → logprob: -2.1123456954956055
    4. 'ar' → logprob: -2.2373456954956055
    5. 'es' → logprob: -2.9873456954956055
    6. '#' → logprob: -3.2373456954956055
    7. 'qui' → logprob: -4.1123456954956055
    8. 'on' → logprob: -4.3623456954956055
    9. 'omme' → logprob: -4.4873456954956055
    10. 'ette' → logprob: -4.6123456954956055

Token 132: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.01623976044356823
    2. 'à' → logprob: -4.641239643096924
    3. ' à' → logprob: -5.766239643096924
    4. '-' → logprob: -7.141239643096924
    5. 'a' → logprob: -7.641239643096924
    6. '-a' → logprob: -8.016240119934082
    7. '#' → logprob: -8.141240119934082
    8. 'l' → logprob: -8.641240119934082
    9. '=' → logprob: -9.016240119934082
    10. 's' → logprob: -9.141240119934082

Token 133: '-dire' (ID: 76064)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.820375680923462
    2. '#' → logprob: -2.320375680923462
    3. 'g' → logprob: -2.320375680923462
    4. 'dire' → logprob: -2.445375680923462
    5. 'x' → logprob: -2.570375680923462
    6. 'pas' → logprob: -2.570375680923462
    7. 'ce' → logprob: -3.320375680923462
    8. 'd' → logprob: -3.570375680923462
    9. 'part' → logprob: -3.820375680923462
    10. '```' → logprob: -3.820375680923462

Token 134: ' qu' (ID: 474)
  Prédit: 'sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sans' → logprob: -0.8303854465484619
    2. 'qu' → logprob: -1.330385446548462
    3. ' qu' → logprob: -2.330385446548462
    4. 'une' → logprob: -2.705385446548462
    5. 'la' → logprob: -2.955385446548462
    6. 'qui' → logprob: -3.705385446548462
    7. ' une' → logprob: -4.455385208129883
    8. 'que' → logprob: -4.455385208129883
    9. 'le' → logprob: -4.705385208129883
    10. ' la' → logprob: -4.705385208129883

Token 135: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0760999470949173
    2. ''on' → logprob: -2.8260998725891113
    3. ''il' → logprob: -5.201099872589111
    4. ''' → logprob: -6.326099872589111
    5. 'i' → logprob: -6.576099872589111
    6. ''elle' → logprob: -6.701099872589111
    7. 'on' → logprob: -6.826099872589111
    8. ' on' → logprob: -7.326099872589111
    9. ''i' → logprob: -7.326099872589111
    10. 'u' → logprob: -7.826099872589111

Token 136: ' donne' (ID: 30004)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.9715151786804199
    2. 'don' → logprob: -1.84651517868042
    3. 'ne' → logprob: -2.22151517868042
    4. ' ignore' → logprob: -2.72151517868042
    5. 'div' → logprob: -2.84651517868042
    6. 'ret' → logprob: -2.97151517868042
    7. 'arr' → logprob: -3.22151517868042
    8. ' ne' → logprob: -3.59651517868042
    9. 'effect' → logprob: -3.72151517868042
    10. 'ren' → logprob: -3.72151517868042

Token 137: ' combien' (ID: 106648)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09490877389907837
    2. ' le' → logprob: -2.9699087142944336
    3. 'la' → logprob: -3.5949087142944336
    4. 'quot' → logprob: -4.719908714294434
    5. ' la' → logprob: -6.969908714294434
    6. ' uniquement' → logprob: -6.969908714294434
    7. 'un' → logprob: -8.594908714294434
    8. 'qu' → logprob: -8.594908714294434
    9. ' seulement' → logprob: -8.844908714294434
    10. '```' → logprob: -9.344908714294434

Token 138: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11874786019325256
    2. 'de' → logprob: -2.7437479496002197
    3. 'fois' → logprob: -3.9937479496002197
    4. '<|end|>' → logprob: -4.118747711181641
    5. ' ' → logprob: -5.618747711181641
    6. ' fois' → logprob: -5.743747711181641
    7. '500' → logprob: -5.868747711181641
    8. 'ent' → logprob: -7.243747711181641
    9. 'times' → logprob: -7.493747711181641
    10. 's' → logprob: -7.868747711181641

Token 139: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.0840407982468605
    2. ' fois' → logprob: -2.834040880203247
    3. '500' → logprob: -4.084040641784668
    4. 'ent' → logprob: -6.334040641784668
    5. 'part' → logprob: -7.209040641784668
    6. 'b' → logprob: -7.834040641784668
    7. 'f' → logprob: -8.084040641784668
    8. '```' → logprob: -8.584040641784668
    9. 'parts' → logprob: -8.584040641784668
    10. '5' → logprob: -8.709040641784668

Token 140: ' le' (ID: 505)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.08941464126110077
    2. ' ' → logprob: -2.464414596557617
    3. ' le' → logprob: -8.839414596557617
    4. ' complet' → logprob: -9.589414596557617
    5. ' la' → logprob: -10.464414596557617
    6. ' entier' → logprob: -10.464414596557617
    7. ' ' → logprob: -10.714414596557617
    8. '5' → logprob: -10.714414596557617
    9. ' cinq' → logprob: -11.089414596557617
    10. '  ' → logprob: -11.089414596557617

Token 141: ' div' (ID: 4223)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.08907360583543777
    2. ' nombre' → logprob: -3.214073657989502
    3. ' ' → logprob: -3.589073657989502
    4. 'nombre' → logprob: -4.339073657989502
    5. 'div' → logprob: -6.589073657989502
    6. ' entier' → logprob: -7.464073657989502
    7. ' code' → logprob: -7.964073657989502
    8. 'n' → logprob: -8.589073181152344
    9. ' montant' → logprob: -8.839073181152344
    10. 'ent' → logprob: -8.839073181152344

Token 142: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.02241818793118
    2. 'ise' → logprob: -4.147418022155762
    3. 'isé' → logprob: -6.147418022155762
    4. 'iser' → logprob: -6.272418022155762
    5. 'isible' → logprob: -6.272418022155762
    6. 'id' → logprob: -9.147418022155762
    7. 'ide' → logprob: -9.397418022155762
    8. 'isateur' → logprob: -9.522418022155762
    9. 'is' → logprob: -10.272418022155762
    10. 'eur' → logprob: -10.647418022155762

Token 143: ' tient' (ID: 69541)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.03453746810555458
    2. 'ent' → logprob: -3.9095375537872314
    3. ' ' → logprob: -5.034537315368652
    4. 'com' → logprob: -6.284537315368652
    5. 'rent' → logprob: -6.409537315368652
    6. ' peut' → logprob: -7.284537315368652
    7. ' rent' → logprob: -7.284537315368652
    8. ' entier' → logprob: -7.409537315368652
    9. '100' → logprob: -8.284537315368652
    10. ' complet' → logprob: -8.784537315368652

Token 144: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4176390767097473
    2. ' dans' → logprob: -1.6676390171051025
    3. 'ent' → logprob: -1.9176390171051025
    4. 'com' → logprob: -7.542639255523682
    5. 'int' → logprob: -7.667639255523682
    6. '1' → logprob: -7.667639255523682
    7. 'compl' → logprob: -7.667639255523682
    8. '100' → logprob: -7.792639255523682
    9. 'exact' → logprob: -7.917639255523682
    10. ' entier' → logprob: -7.917639255523682

Token 145: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11406917870044708
    2. 'l' → logprob: -2.8640692234039307
    3. ' i' → logprob: -3.4890692234039307
    4. ''i' → logprob: -4.989068984985352
    5. 'la' → logprob: -5.114068984985352
    6. 'le' → logprob: -5.614068984985352
    7. ' la' → logprob: -6.489068984985352
    8. ' l' → logprob: -7.114068984985352
    9. ' le' → logprob: -8.239068984985352
    10. ' '' → logprob: -8.489068984985352

Token 146: ' divid' (ID: 29269)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.011376832611858845
    2. 'i' → logprob: -5.261376857757568
    3. 'num' → logprob: -5.761376857757568
    4. 'nombre' → logprob: -6.136376857757568
    5. '```' → logprob: -8.13637638092041
    6. ' divid' → logprob: -8.63637638092041
    7. 'val' → logprob: -8.88637638092041
    8. 'prem' → logprob: -10.51137638092041
    9. '#' → logprob: -10.76137638092041
    10. 'd' → logprob: -11.26137638092041

Token 147: 'ende' (ID: 2541)
  Prédit: 'ende'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ende' → logprob: -0.5276946425437927
    2. 'end' → logprob: -1.5276947021484375
    3. 'eur' → logprob: -2.0276947021484375
    4. 'e' → logprob: -3.6526947021484375
    5. 'ande' → logprob: -4.2776947021484375
    6. 'iseur' → logprob: -5.4026947021484375
    7. '#' → logprob: -5.6526947021484375
    8. 'i' → logprob: -5.7776947021484375
    9. 'u' → logprob: -5.7776947021484375
    10. 'endeur' → logprob: -7.0276947021484375

Token 148: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8571640253067017
    2. '500' → logprob: -1.2321640253067017
    3. 's' → logprob: -1.7321640253067017
    4. '.' → logprob: -2.857163906097412
    5. ' ' → logprob: -4.107163906097412
    6. ',' → logprob: -4.357163906097412
    7. ' i' → logprob: -4.982163906097412
    8. ' (' → logprob: -5.107163906097412
    9. '(' → logprob: -6.732163906097412
    10. 'n' → logprob: -7.732163906097412

Token 149: ' sans' (ID: 9828)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7858718633651733
    2. ' i' → logprob: -1.0358718633651733
    3. '500' → logprob: -2.035871982574463
    4. 'i' → logprob: -3.660871982574463
    5. ' s' → logprob: -5.035871982574463
    6. 's' → logprob: -5.035871982574463
    7. ',' → logprob: -5.285871982574463
    8. ' sans' → logprob: -5.910871982574463
    9. '.' → logprob: -6.910871982574463
    10. ' ,' → logprob: -6.910871982574463

Token 150: ' prendre' (ID: 24257)
  Prédit: ' dépasser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.39354246854782104
    2. ' tenir' → logprob: -2.518542528152466
    3. 'prendre' → logprob: -3.268542528152466
    4. 'd' → logprob: -3.518542528152466
    5. 'aller' → logprob: -3.643542528152466
    6. 'dé' → logprob: -3.768542528152466
    7. 'tenir' → logprob: -4.143542289733887
    8. 'le' → logprob: -4.268542289733887
    9. ' prendre' → logprob: -4.393542289733887
    10. ' donner' → logprob: -4.643542289733887

Token 151: ' la' (ID: 557)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01821795664727688
    2. 'la' → logprob: -4.518218040466309
    3. 'le' → logprob: -6.143218040466309
    4. ' en' → logprob: -6.268218040466309
    5. '#' → logprob: -6.393218040466309
    6. 'pas' → logprob: -7.393218040466309
    7. 'les' → logprob: -8.268218040466309
    8. 'comp' → logprob: -9.268218040466309
    9. 'de' → logprob: -9.393218040466309
    10. ''en' → logprob: -9.643218040466309

Token 152: ' partie' (ID: 22139)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.44517526030540466
    2. 'part' → logprob: -1.070175290107727
    3. ' reste' → logprob: -4.5701751708984375
    4. 'fraction' → logprob: -5.9451751708984375
    5. 'rest' → logprob: -6.6951751708984375
    6. ' partie' → logprob: -7.5701751708984375
    7. ' part' → logprob: -8.320175170898438
    8. 'd' → logprob: -8.445175170898438
    9. 'comp' → logprob: -8.820175170898438
    10. 're' → logprob: -9.320175170898438

Token 153: ' déc' (ID: 8498)
  Prédit: ' déc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déc' → logprob: -0.60124272108078
    2. 'd' → logprob: -1.6012427806854248
    3. 'fraction' → logprob: -1.6012427806854248
    4. ' fraction' → logprob: -3.976242780685425
    5. ' après' → logprob: -4.476242542266846
    6. 'dec' → logprob: -5.601242542266846
    7. ' restante' → logprob: -5.976242542266846
    8. '```' → logprob: -6.101242542266846
    9. ' ' → logprob: -6.726242542266846
    10. '#' → logprob: -6.726242542266846

Token 154: 'im' (ID: 321)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.48984429240226746
    2. 'im' → logprob: -0.9898443222045898
    3. 'om' → logprob: -5.86484432220459
    4. 'imals' → logprob: -5.86484432220459
    5. '```' → logprob: -6.61484432220459
    6. '#' → logprob: -7.11484432220459
    7. 'um' → logprob: -7.11484432220459
    8. 'ale' → logprob: -7.23984432220459
    9. 'omp' → logprob: -7.23984432220459
    10. 'ales' → logprob: -7.80234432220459

Token 155: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.010058620944619179
    2. 'al' → logprob: -5.010058403015137
    3. 'ales' → logprob: -6.385058403015137
    4. 'm' → logprob: -7.510058403015137
    5. 'nale' → logprob: -8.010058403015137
    6. 'але' → logprob: -9.385058403015137
    7. 'ée' → logprob: -9.510058403015137
    8. 'male' → logprob: -9.510058403015137
    9. 'é' → logprob: -10.072558403015137
    10. 'e' → logprob: -10.135058403015137

Token 156: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1820040941238403
    2. 'i' → logprob: -1.3070040941238403
    3. ' ' → logprob: -1.8070040941238403
    4. ' i' → logprob: -2.432003974914551
    5. '500' → logprob: -2.432003974914551
    6. '.' → logprob: -2.932003974914551
    7. ',' → logprob: -4.932003974914551
    8. ' (' → logprob: -5.182003974914551
    9. ' de' → logprob: -6.182003974914551
    10. ' s' → logprob: -6.557003974914551

Token 157: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8601858019828796
    2. 'c' → logprob: -1.4851858615875244
    3. 'q' → logprob: -1.8601858615875244
    4. 's' → logprob: -2.6101858615875244
    5. 'b' → logprob: -3.3601858615875244
    6. 'a' → logprob: -4.235185623168945
    7. 'k' → logprob: -4.235185623168945
    8. 'm' → logprob: -4.610185623168945
    9. 'd' → logprob: -4.860185623168945
    10. 'count' → logprob: -5.235185623168945

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038138460367918015
    2. '=' → logprob: -3.2881383895874023
    3. '500' → logprob: -10.538138389587402
    4. 's' → logprob: -10.788138389587402
    5. ' ' → logprob: -10.913138389587402
    6. '_' → logprob: -11.038138389587402
    7. '1' → logprob: -12.538138389587402
    8. 'x' → logprob: -12.913138389587402
    9. ')' → logprob: -13.663138389587402
    10. '0' → logprob: -13.788138389587402

Token 159: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011081299744546413
    2. 'i' → logprob: -4.511081218719482
    3. ' ' → logprob: -10.38608169555664
    4. ' ' → logprob: -13.63608169555664
    5. '	i' → logprob: -13.76108169555664
    6. '500' → logprob: -16.26108169555664
    7. '  ' → logprob: -16.38608169555664
    8. '5' → logprob: -16.63608169555664
    9. ' ' → logprob: -17.13608169555664
    10. '0' → logprob: -17.38608169555664

Token 160: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.018680572509765625
    2. '//' → logprob: -4.018680572509766
    3. ' ' → logprob: -7.768680572509766
    4. ' ' → logprob: -9.643680572509766
    5. '<|end|>' → logprob: -10.768680572509766
    6. ' //
' → logprob: -12.143680572509766
    7. ')' → logprob: -12.643680572509766
    8. '```' → logprob: -13.018680572509766
    9. '2' → logprob: -13.518680572509766
    10. ')//' → logprob: -13.643680572509766

Token 161: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '5' → logprob: -15.625024795532227
    4. '50' → logprob: -18.250024795532227
    5. '501' → logprob: -18.375024795532227
    6. '```' → logprob: -18.375024795532227
    7. '  ' → logprob: -18.500024795532227
    8. '499' → logprob: -18.750024795532227
    9. '   ' → logprob: -19.125024795532227
    10. ' ' → logprob: -19.187524795532227

Token 162: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '5' → logprob: -14.62500286102295
    4. '50' → logprob: -17.250001907348633
    5. '```' → logprob: -18.125001907348633
    6. '501' → logprob: -18.500001907348633
    7. '499' → logprob: -19.000001907348633
    8. '`' → logprob: -19.125001907348633
    9. '100' → logprob: -19.312501907348633
    10. '1' → logprob: -20.187501907348633

Token 163: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2878634035587311
    2. ' ' → logprob: -2.0378634929656982
    3. 'x' → logprob: -3.2878634929656982
    4. '#' → logprob: -3.6628634929656982
    5. '<|end|>' → logprob: -3.9128634929656982
    6. 's' → logprob: -4.662863254547119
    7. '*' → logprob: -4.912863254547119
    8. '
' → logprob: -5.287863254547119
    9. '\n' → logprob: -5.912863254547119
    10. 'n' → logprob: -6.162863254547119

Token 165: ' Mult' (ID: 15431)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7185785174369812
    2. 'i' → logprob: -1.093578577041626
    3. 'r' → logprob: -2.093578577041626
    4. 'for' → logprob: -3.718578577041626
    5. 'rest' → logprob: -4.468578338623047
    6. 'reste' → logprob: -5.343578338623047
    7. '#' → logprob: -5.843578338623047
    8. 'y' → logprob: -6.093578338623047
    9. 'print' → logprob: -6.218578338623047
    10. '500' → logprob: -6.468578338623047

Token 166: 'ipl' (ID: 7840)
  Prédit: 'ipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.04824380204081535
    2. 'ip' → logprob: -3.173243761062622
    3. 'iplier' → logprob: -6.173243999481201
    4. 'iple' → logprob: -6.548243999481201
    5. 'iples' → logprob: -7.798243999481201
    6. 'i' → logprob: -8.048243522644043
    7. 'e' → logprob: -8.298243522644043
    8. 'ipe' → logprob: -8.298243522644043
    9. '=' → logprob: -8.423243522644043
    10. '#' → logprob: -9.298243522644043

Token 167: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.030848853290081024
    2. 'e' → logprob: -4.280848979949951
    3. 'ier' → logprob: -4.530848979949951
    4. 'ies' → logprob: -5.655848979949951
    5. 'ique' → logprob: -7.655848979949951
    6. 'ié' → logprob: -7.905848979949951
    7. '#' → logprob: -8.030848503112793
    8. 'iez' → logprob: -8.905848503112793
    9. 'ieur' → logprob: -9.155848503112793
    10. 'y' → logprob: -9.155848503112793

Token 168: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05983985215425491
    2. ' x' → logprob: -2.934839963912964
    3. '500' → logprob: -5.809839725494385
    4. 's' → logprob: -7.184839725494385
    5. ' ' → logprob: -7.184839725494385
    6. 'i' → logprob: -8.559840202331543
    7. 'le' → logprob: -10.309840202331543
    8. ' le' → logprob: -10.309840202331543
    9. ' i' → logprob: -10.434840202331543
    10. ' la' → logprob: -10.684840202331543

Token 169: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012051118537783623
    2. '500' → logprob: -7.251204967498779
    3. ' x' → logprob: -7.626204967498779
    4. ' ' → logprob: -12.126205444335938
    5. '5' → logprob: -14.626205444335938
    6. '	x' → logprob: -14.626205444335938
    7. '(x' → logprob: -15.126205444335938
    8. '50' → logprob: -16.063705444335938
    9. '```' → logprob: -16.188705444335938
    10. 's' → logprob: -16.563705444335938

Token 170: ''' (ID: 6)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.15011818706989288
    2. '*' → logprob: -3.025118112564087
    3. ' ' → logprob: -3.150118112564087
    4. ' *' → logprob: -3.275118112564087
    5. 'par' → logprob: -5.275118350982666
    6. '500' → logprob: -6.150118350982666
    7. ' by' → logprob: -6.650118350982666
    8. ' ' → logprob: -8.275117874145508
    9. '<|end|>' → logprob: -8.525117874145508
    10. ')' → logprob: -8.650117874145508

Token 171: ' (' (ID: 350)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2554171681404114
    2. ' *' → logprob: -2.3804171085357666
    3. '*' → logprob: -2.5054171085357666
    4. ' ' → logprob: -3.6304171085357666
    5. ' by' → logprob: -4.630417346954346
    6. 'par' → logprob: -5.130417346954346
    7. '<|end|>' → logprob: -5.255417346954346
    8. ')' → logprob: -6.505417346954346
    9. '500' → logprob: -6.880417346954346
    10. '  ' → logprob: -8.130416870117188

Token 172: 'le' (ID: 282)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6941489577293396
    2. '500' → logprob: -0.6941489577293396
    3. ' par' → logprob: -7.944149017333984
    4. ' ' → logprob: -8.319149017333984
    5. ')' → logprob: -8.944149017333984
    6. 'x' → logprob: -9.694149017333984
    7. 'par' → logprob: -10.069149017333984
    8. ' le' → logprob: -10.694149017333984
    9. ' x' → logprob: -10.819149017333984
    10. '  ' → logprob: -10.944149017333984

Token 173: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.43455857038497925
    2. '500' → logprob: -1.434558629989624
    3. ' ' → logprob: -2.434558629989624
    4. 'nombre' → logprob: -4.559558391571045
    5. 'x' → logprob: -4.809558391571045
    6. ' montant' → logprob: -5.309558391571045
    7. ' x' → logprob: -7.059558391571045
    8. 's' → logprob: -7.809558391571045
    9. ' number' → logprob: -8.059558868408203
    10. ')' → logprob: -8.059558868408203

Token 174: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1727113574743271
    2. 'de' → logprob: -2.4227113723754883
    3. ' d' → logprob: -2.9227113723754883
    4. ')' → logprob: -5.172711372375488
    5. ' ' → logprob: -5.172711372375488
    6. 'd' → logprob: -6.422711372375488
    7. ' x' → logprob: -7.547711372375488
    8. '500' → logprob: -7.672711372375488
    9. ' *' → logprob: -8.422711372375488
    10. 'x' → logprob: -8.672711372375488

Token 175: ' fois' (ID: 14697)
  Prédit: ' billets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.3305234909057617
    2. 'bil' → logprob: -1.9555234909057617
    3. ' ' → logprob: -2.4555234909057617
    4. ' bil' → logprob: -3.7055234909057617
    5. '500' → logprob: -4.205523490905762
    6. 'b' → logprob: -4.830523490905762
    7. ' billet' → logprob: -5.580523490905762
    8. ' fois' → logprob: -7.580523490905762
    9. '	b' → logprob: -7.830523490905762
    10. ' coup' → logprob: -7.830523490905762

Token 176: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06598029285669327
    2. '500' → logprob: -3.0659801959991455
    3. ' que' → logprob: -4.315980434417725
    4. ' ' → logprob: -5.815980434417725
    5. ' qu' → logprob: -7.815980434417725
    6. ')' → logprob: -9.440979957580566
    7. ' fois' → logprob: -9.815979957580566
    8. ' that' → logprob: -9.940979957580566
    9. '  ' → logprob: -10.065979957580566
    10. 'que' → logprob: -10.190979957580566

Token 177: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14310285449028015
    2. '500' → logprob: -2.0181028842926025
    3. ' on' → logprob: -8.643102645874023
    4. ' ' → logprob: -9.143102645874023
    5. ' le' → logprob: -10.018102645874023
    6. ' la' → logprob: -10.643102645874023
    7. '  ' → logprob: -11.018102645874023
    8. '5' → logprob: -11.268102645874023
    9. ' l' → logprob: -11.518102645874023
    10. 'l' → logprob: -12.455602645874023

Token 178: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.3871537148952484
    2. ' ' → logprob: -1.1371537446975708
    3. '5' → logprob: -9.887153625488281
    4. ' le' → logprob: -10.262153625488281
    5. ' la' → logprob: -10.262153625488281
    6. 'l' → logprob: -10.387153625488281
    7. 'le' → logprob: -10.387153625488281
    8. ' on' → logprob: -10.637153625488281
    9. ' ' → logprob: -11.262153625488281
    10. 'la' → logprob: -11.387153625488281

Token 179: ' rent' (ID: 9462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5458137392997742
    2. ' entre' → logprob: -1.545813798904419
    3. ' est' → logprob: -2.795813798904419
    4. 'entre' → logprob: -3.045813798904419
    5. ' rent' → logprob: -3.170813798904419
    6. ' peut' → logprob: -4.92081356048584
    7. ' ' → logprob: -5.04581356048584
    8. ' )' → logprob: -5.04581356048584
    9. ' ' → logprob: -5.29581356048584
    10. 'entr' → logprob: -5.67081356048584

Token 180: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0008005765848793089
    2. 'r' → logprob: -7.250800609588623
    3. 'e' → logprob: -9.750800132751465
    4. 'rent' → logprob: -10.875800132751465
    5. 'ré' → logprob: -12.125800132751465
    6. 'tre' → logprob: -13.750800132751465
    7. 'res' → logprob: -14.000800132751465
    8. 'race' → logprob: -14.250800132751465
    9. ' re' → logprob: -14.375800132751465
    10. 'ra' → logprob: -14.375800132751465

Token 181: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.12192054837942123
    2. 'dans' → logprob: -2.246920585632324
    3. ' ' → logprob: -5.496920585632324
    4. '500' → logprob: -5.871920585632324
    5. ' dedans' → logprob: -6.496920585632324
    6. ')' → logprob: -7.996920585632324
    7. ' ' → logprob: -9.496920585632324
    8. '100' → logprob: -9.621920585632324
    9. ' in' → logprob: -10.246920585632324
    10. 'Dans' → logprob: -11.246920585632324

Token 182: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06441501528024673
    2. 'i' → logprob: -2.8144149780273438
    3. ' ' → logprob: -6.189414978027344
    4. ' ' → logprob: -9.064414978027344
    5. '500' → logprob: -9.189414978027344
    6. ' l' → logprob: -9.439414978027344
    7. 'l' → logprob: -10.064414978027344
    8. '	i' → logprob: -11.876914978027344
    9. ' '' → logprob: -11.939414978027344
    10. ' la' → logprob: -12.064414978027344

Token 183: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20180203020572662
    2. ' i' → logprob: -1.7018020153045654
    3. ' ' → logprob: -8.076802253723145
    4. ')' → logprob: -10.451802253723145
    5. ' ' → logprob: -11.076802253723145
    6. '	i' → logprob: -12.076802253723145
    7. '500' → logprob: -12.201802253723145
    8. ''i' → logprob: -12.451802253723145
    9. 'l' → logprob: -12.576802253723145
    10. '  ' → logprob: -13.014302253723145

Token 184: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38952672481536865
    2. ' )' → logprob: -1.1395267248153687
    3. ' par' → logprob: -7.139526844024658
    4. '')' → logprob: -7.139526844024658
    5. ' ' → logprob: -7.264526844024658
    6. ' ')' → logprob: -9.0145263671875
    7. '500' → logprob: -9.1395263671875
    8. ' *' → logprob: -10.0145263671875
    9. '*' → logprob: -10.3895263671875
    10. 'par' → logprob: -10.8895263671875

Token 185: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.017218828201294
    2. ' par' → logprob: -1.267218828201294
    3. ' *' → logprob: -1.267218828201294
    4. ' ' → logprob: -3.392218828201294
    5. 'par' → logprob: -4.017218589782715
    6. '500' → logprob: -4.392218589782715
    7. ' by' → logprob: -5.392218589782715
    8. 's' → logprob: -5.767218589782715
    9. ',' → logprob: -7.142218589782715
    10. ')' → logprob: -7.142218589782715

Token 186: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12697629630565643
    2. '500' → logprob: -2.126976251602173
    3. ' ' → logprob: -10.251976013183594
    4. '  ' → logprob: -12.001976013183594
    5. '5' → logprob: -13.251976013183594
    6. '50' → logprob: -14.126976013183594
    7. '```' → logprob: -14.126976013183594
    8. '`' → logprob: -14.376976013183594
    9. ' ' → logprob: -15.376976013183594
    10. '<|end|>' → logprob: -15.626976013183594

Token 187: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.003193993354216218
    2. ' ' → logprob: -5.7531938552856445
    3. '5' → logprob: -11.378193855285645
    4. ' ' → logprob: -13.128193855285645
    5. '50' → logprob: -13.253193855285645
    6. '  ' → logprob: -14.878193855285645
    7. '	' → logprob: -16.37819480895996
    8. '```' → logprob: -16.50319480895996
    9. '505' → logprob: -16.56569480895996
    10. '499' → logprob: -16.75319480895996

Token 188: '0' (ID: 15)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5112887024879456
    2. '0' → logprob: -1.8862886428833008
    3. '*' → logprob: -2.011288642883301
    4. ' ' → logprob: -2.636288642883301
    5. ' ' → logprob: -3.761288642883301
    6. '00' → logprob: -4.761288642883301
    7. '000' → logprob: -5.636288642883301
    8. ' x' → logprob: -6.136288642883301
    9. '  ' → logprob: -6.261288642883301
    10. '50' → logprob: -7.261288642883301

Token 189: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13409140706062317
    2. '*' → logprob: -2.384091377258301
    3. '<|end|>' → logprob: -4.009091377258301
    4. ' *' → logprob: -4.759091377258301
    5. '0' → logprob: -5.759091377258301
    6. 's' → logprob: -7.634091377258301
    7. 'x' → logprob: -7.634091377258301
    8. ')' → logprob: -7.759091377258301
    9. '_' → logprob: -7.884091377258301
    10. ' )' → logprob: -8.1340913772583

Token 190: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19637027382850647
    2. '<|end|>' → logprob: -2.3213703632354736
    3. 's' → logprob: -3.3213703632354736
    4. ' 
' → logprob: -4.6963701248168945
    5. '*' → logprob: -4.9463701248168945
    6. ' s' → logprob: -5.1963701248168945
    7. '0' → logprob: -5.3213701248168945
    8. '+' → logprob: -6.1963701248168945
    9. ' *' → logprob: -6.1963701248168945
    10. 'x' → logprob: -6.4463701248168945

Token 191: ' ajoute' (ID: 91611)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1064177751541138
    2. '<|end|>' → logprob: -1.4814177751541138
    3. 's' → logprob: -1.6064177751541138
    4. ' ' → logprob: -2.481417655944824
    5. '+' → logprob: -2.481417655944824
    6. ' ajoute' → logprob: -4.231417655944824
    7. 'print' → logprob: -4.356417655944824
    8. ' print' → logprob: -5.106417655944824
    9. ':' → logprob: -5.231417655944824
    10. ' +' → logprob: -5.231417655944824

Token 192: ' ce' (ID: 2357)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6943863034248352
    2. 'x' → logprob: -0.8193863034248352
    3. ' ' → logprob: -3.5693862438201904
    4. 's' → logprob: -4.1943864822387695
    5. '0' → logprob: -5.6943864822387695
    6. ' s' → logprob: -5.8193864822387695
    7. '500' → logprob: -5.8193864822387695
    8. '50' → logprob: -6.3193864822387695
    9. '100' → logprob: -6.4443864822387695
    10. '(x' → logprob: -6.6943864822387695

Token 193: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.13044428825378418
    2. 'x' → logprob: -3.255444288253784
    3. 's' → logprob: -3.380444288253784
    4. ' montant' → logprob: -3.880444288253784
    5. ' resultat' → logprob: -5.255444526672363
    6. 'result' → logprob: -5.880444526672363
    7. ' s' → logprob: -5.880444526672363
    8. ' qui' → logprob: -5.880444526672363
    9. ' result' → logprob: -5.880444526672363
    10. ' ' → logprob: -6.005444526672363

Token 194: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7490237951278687
    2. 's' → logprob: -1.4990237951278687
    3. ' ' → logprob: -1.9990237951278687
    4. '<|end|>' → logprob: -3.124023914337158
    5. ' s' → logprob: -3.249023914337158
    6. '.' → logprob: -3.249023914337158
    7. '0' → logprob: -4.749023914337158
    8. ',' → logprob: -4.874023914337158
    9. ' to' → logprob: -5.499023914337158
    10. ' +' → logprob: -5.624023914337158

Token 195: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07889353483915329
    2. 's' → logprob: -2.5788934230804443
    3. ' ' → logprob: -13.328893661499023
    4. ' ' → logprob: -13.953893661499023
    5. '<|end|>' → logprob: -14.453893661499023
    6. '	s' → logprob: -15.453893661499023
    7. ''s' → logprob: -15.578893661499023
    8. '```' → logprob: -16.578893661499023
    9. ' the' → logprob: -16.828893661499023
    10. '_s' → logprob: -17.078893661499023

Token 196: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889562100172043
    2. ' s' → logprob: -2.5788955688476562
    3. ' ' → logprob: -13.453895568847656
    4. 'x' → logprob: -13.578895568847656
    5. ' ' → logprob: -13.828895568847656
    6. ''s' → logprob: -14.828895568847656
    7. '	s' → logprob: -14.828895568847656
    8. 'i' → logprob: -15.328895568847656
    9. '`s' → logprob: -15.328895568847656
    10. '_s' → logprob: -15.953895568847656

Token 197: ''.
' (ID: 49980)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13994117081165314
    2. '+' → logprob: -2.3899412155151367
    3. ' s' → logprob: -4.514941215515137
    4. ' +=' → logprob: -4.514941215515137
    5. ' ' → logprob: -5.014941215515137
    6. '+=' → logprob: -5.889941215515137
    7. '.' → logprob: -6.139941215515137
    8. '
' → logprob: -6.639941215515137
    9. '+s' → logprob: -6.889941215515137
    10. ' +' → logprob: -6.889941215515137

Token 198: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008017649524845183
    2. ' s' → logprob: -7.2508015632629395
    3. '+' → logprob: -9.750802040100098
    4. ' 
' → logprob: -10.750802040100098
    5. '<|end|>' → logprob: -12.750802040100098
    6. ' +' → logprob: -13.125802040100098
    7. ' ' → logprob: -13.250802040100098
    8. '+s' → logprob: -13.625802040100098
    9. '*' → logprob: -13.750802040100098
    10. 'x' → logprob: -13.750802040100098

Token 199: ' Cela' (ID: 44403)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006715967319905758
    2. ' s' → logprob: -5.006715774536133
    3. 'x' → logprob: -14.881715774536133
    4. '
' → logprob: -16.131715774536133
    5. ' 
' → logprob: -16.631715774536133
    6. '#' → logprob: -17.381715774536133
    7. '_s' → logprob: -17.381715774536133
    8. ' ' → logprob: -17.881715774536133
    9. ' ' → logprob: -18.006715774536133
    10. '```' → logprob: -18.131715774536133

Token 200: ' correspond' (ID: 11095)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08288439363241196
    2. 's' → logprob: -2.5828843116760254
    3. ' +=' → logprob: -6.207884311676025
    4. ' n' → logprob: -7.082884311676025
    5. ' signifie' → logprob: -8.332884788513184
    6. ' semble' → logprob: -8.707884788513184
    7. 'n' → logprob: -9.207884788513184
    8. ' =' → logprob: -9.207884788513184
    9. '+' → logprob: -9.207884788513184
    10. ' veut' → logprob: -9.332884788513184

Token 201: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04542446509003639
    2. 's' → logprob: -4.170424461364746
    3. ' to' → logprob: -4.670424461364746
    4. ' s' → logprob: -4.670424461364746
    5. ' a' → logprob: -5.670424461364746
    6. ' au' → logprob: -5.920424461364746
    7. '<|end|>' → logprob: -6.795424461364746
    8. ' ' → logprob: -7.045424461364746
    9. ' ' → logprob: -7.920424461364746
    10. ' aux' → logprob: -8.295424461364746

Token 202: ' donner' (ID: 32394)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.18583515286445618
    2. 's' → logprob: -1.9358351230621338
    3. ' x' → logprob: -3.810835123062134
    4. 'x' → logprob: -5.810835361480713
    5. ' ' → logprob: -9.935834884643555
    6. ' ' → logprob: -10.060834884643555
    7. ' une' → logprob: -10.310834884643555
    8. ' un' → logprob: -11.310834884643555
    9. '500' → logprob: -11.310834884643555
    10. '100' → logprob: -12.185834884643555

Token 203: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.470838725566864
    2. ' s' → logprob: -1.9708387851715088
    3. 's' → logprob: -2.345838785171509
    4. ' une' → logprob: -2.720838785171509
    5. ' un' → logprob: -3.345838785171509
    6. '100' → logprob: -4.09583854675293
    7. ' des' → logprob: -5.09583854675293
    8. ' x' → logprob: -5.59583854675293
    9. '500' → logprob: -6.09583854675293
    10. 'x' → logprob: -6.34583854675293

Token 204: '100' (ID: 1353)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4380405843257904
    2. 'x' → logprob: -1.6880406141281128
    3. ' x' → logprob: -3.0630404949188232
    4. ' ' → logprob: -3.1880404949188232
    5. ' s' → logprob: -3.1880404949188232
    6. '500' → logprob: -4.063040733337402
    7. '100' → logprob: -4.188040733337402
    8. ' une' → logprob: -5.438040733337402
    9. ' la' → logprob: -7.188040733337402
    10. '2' → logprob: -7.438040733337402

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011987409379798919
    2. ' *' → logprob: -9.375120162963867
    3. '000' → logprob: -11.625120162963867
    4. ' ' → logprob: -12.125120162963867
    5. '*x' → logprob: -12.125120162963867
    6. 's' → logprob: -12.500120162963867
    7. '00' → logprob: -12.750120162963867
    8. '_' → logprob: -13.000120162963867
    9. ' x' → logprob: -13.125120162963867
    10. '*' → logprob: -13.625120162963867

Token 206: ' pour' (ID: 1930)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003852097550407052
    2. '*' → logprob: -6.253851890563965
    3. '*s' → logprob: -6.878851890563965
    4. '*x' → logprob: -7.878851890563965
    5. 's' → logprob: -8.128851890563965
    6. ' ' → logprob: -8.753851890563965
    7. ' ' → logprob: -11.128851890563965
    8. '0' → logprob: -11.753851890563965
    9. '000' → logprob: -11.878851890563965
    10. ' x' → logprob: -12.003851890563965

Token 207: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.001258326112292707
    2. ' x' → logprob: -7.376258373260498
    3. ' each' → logprob: -8.25125789642334
    4. 'x' → logprob: -8.25125789642334
    5. 'each' → logprob: -9.75125789642334
    6. '500' → logprob: -11.12625789642334
    7. '每' → logprob: -11.87625789642334
    8. ' every' → logprob: -12.00125789642334
    9. ' cada' → logprob: -12.25125789642334
    10. ' chacune' → logprob: -12.25125789642334

Token 208: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09926508367061615
    2. ' fois' → logprob: -3.3492650985717773
    3. '500' → logprob: -4.099265098571777
    4. ' x' → logprob: -4.224265098571777
    5. ' billet' → logprob: -4.224265098571777
    6. 'fois' → logprob: -5.974265098571777
    7. ' multiplication' → logprob: -6.474265098571777
    8. ' ticket' → logprob: -6.474265098571777
    9. ' multip' → logprob: -6.599265098571777
    10. 'x' → logprob: -7.224265098571777

Token 209: 'bil' (ID: 28766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12653996050357819
    2. ' x' → logprob: -2.876539945602417
    3. ' billet' → logprob: -4.001540184020996
    4. '500' → logprob: -4.251540184020996
    5. ' fois' → logprob: -4.251540184020996
    6. ' ticket' → logprob: -5.751540184020996
    7. 'fois' → logprob: -6.126540184020996
    8. 'x' → logprob: -6.251540184020996
    9. ' unité' → logprob: -6.626540184020996
    10. ' bil' → logprob: -7.001540184020996

Token 210: 'let' (ID: 1347)
  Prédit: 'let'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'let' → logprob: -0.020674312487244606
    2. 'l' → logprob: -4.395674228668213
    3. 'et' → logprob: -5.895674228668213
    4. 'le' → logprob: -6.770674228668213
    5. 'lets' → logprob: -6.895674228668213
    6. 'e' → logprob: -7.270674228668213
    7. 'letter' → logprob: -7.770674228668213
    8. 'liet' → logprob: -8.020674705505371
    9. '#' → logprob: -8.708174705505371
    10. ' let' → logprob: -8.770674705505371

Token 211: '"' (ID: 1)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08817487210035324
    2. ' "' → logprob: -3.338174819946289
    3. ' x' → logprob: -3.713174819946289
    4. ' ' → logprob: -4.463174819946289
    5. '500' → logprob: -5.463174819946289
    6. 's' → logprob: -5.713174819946289
    7. 'x' → logprob: -6.963174819946289
    8. 'de' → logprob: -7.088174819946289
    9. ' ' → logprob: -7.338174819946289
    10. ' d' → logprob: -7.588174819946289

Token 212: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7218735218048096
    2. 'x' → logprob: -1.2218735218048096
    3. ' de' → logprob: -2.2218735218048096
    4. '500' → logprob: -3.3468735218048096
    5. ' x' → logprob: -3.3468735218048096
    6. ' s' → logprob: -3.5968735218048096
    7. 'de' → logprob: -5.0968732833862305
    8. ' ' → logprob: -5.7218732833862305
    9. '.' → logprob: -7.3468732833862305
    10. ' d' → logprob: -7.8468732833862305

Token 213: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5763958096504211
    2. '500' → logprob: -0.8263958096504211
    3. ' x' → logprob: -7.9513959884643555
    4. 'x' → logprob: -9.701395988464355
    5. ' ' → logprob: -11.201395988464355
    6. ' cinq' → logprob: -11.826395988464355
    7. '  ' → logprob: -11.951395988464355
    8. '5' → logprob: -12.326395988464355
    9. 'c' → logprob: -13.701395988464355
    10. '```' → logprob: -13.826395988464355

Token 214: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.08908963948488235
    2. ' ' → logprob: -2.4640896320343018
    3. 'x' → logprob: -9.714089393615723
    4. ' x' → logprob: -10.214089393615723
    5. '5' → logprob: -11.089089393615723
    6. 'c' → logprob: -11.589089393615723
    7. '```' → logprob: -12.464089393615723
    8. ' cinq' → logprob: -12.589089393615723
    9. ' ' → logprob: -12.714089393615723
    10. '  ' → logprob: -12.839089393615723

Token 215: ' extrait' (ID: 194006)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018120447173714638
    2. '.' → logprob: -4.893120288848877
    3. '*' → logprob: -5.393120288848877
    4. ' s' → logprob: -6.018120288848877
    5. 'x' → logprob: -6.643120288848877
    6. '
' → logprob: -7.268120288848877
    7. ',' → logprob: -7.893120288848877
    8. '*s' → logprob: -8.393120765686035
    9. '.
' → logprob: -8.643120765686035
    10. '+' → logprob: -9.143120765686035

Token 216: '.
' (ID: 558)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7886861562728882
    2. 's' → logprob: -0.9136861562728882
    3. '.' → logprob: -2.7886862754821777
    4. ' x' → logprob: -3.4136862754821777
    5. '(x' → logprob: -4.288686275482178
    6. ' s' → logprob: -4.538686275482178
    7. ',' → logprob: -4.788686275482178
    8. '*' → logprob: -5.163686275482178
    9. ' *' → logprob: -6.163686275482178
    10. ' ' → logprob: -6.163686275482178

Token 217: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2233183042553719e-05
    2. '
' → logprob: -11.750012397766113
    3. ' s' → logprob: -12.375012397766113
    4. '+s' → logprob: -17.125011444091797
    5. '+' → logprob: -17.500011444091797
    6. '```' → logprob: -18.000011444091797
    7. ' 
' → logprob: -18.125011444091797
    8. '
' → logprob: -18.375011444091797
    9. '+
' → logprob: -18.500011444091797
    10. 'x' → logprob: -18.750011444091797

Token 218: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018186001107096672
    2. '+=' → logprob: -4.018186092376709
    3. '+' → logprob: -10.76818561553955
    4. ' =' → logprob: -11.64318561553955
    5. '=' → logprob: -12.26818561553955
    6. ' +' → logprob: -14.51818561553955
    7. '+=(' → logprob: -14.89318561553955
    8. ' ' → logprob: -15.39318561553955
    9. '+="' → logprob: -15.76818561553955
    10. '+='' → logprob: -16.018186569213867

Token 219: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47413793206214905
    2. ' x' → logprob: -0.9741379022598267
    3. '100' → logprob: -9.974138259887695
    4. '(x' → logprob: -11.724138259887695
    5. ' ' → logprob: -12.474138259887695
    6. '500' → logprob: -13.099138259887695
    7. '	x' → logprob: -15.849138259887695
    8. ' (' → logprob: -16.224138259887695
    9. '10' → logprob: -17.349138259887695
    10. '   ' → logprob: -17.349138259887695

Token 220: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0028332918882369995
    2. '*' → logprob: -5.877833366394043
    3. ' ' → logprob: -10.627833366394043
    4. ' ' → logprob: -12.502833366394043
    5. '100' → logprob: -15.627833366394043
    6. ' **' → logprob: -16.252832412719727
    7. ' \' → logprob: -17.377832412719727
    8. ' *
' → logprob: -17.502832412719727
    9. '0' → logprob: -17.627832412719727
    10. '000' → logprob: -18.002832412719727

Token 221: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1426774263381958
    2. ' ' → logprob: -2.0176773071289062
    3. '1' → logprob: -13.392677307128906
    4. ' ' → logprob: -15.267677307128906
    5. '   ' → logprob: -15.392677307128906
    6. '```' → logprob: -15.892677307128906
    7. '  ' → logprob: -16.142677307128906
    8. '10' → logprob: -16.892677307128906
    9. '_' → logprob: -17.267677307128906
    10. '`' → logprob: -17.642677307128906

Token 222: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '1' → logprob: -15.750045776367188
    4. '10' → logprob: -19.000045776367188
    5. '   ' → logprob: -19.125045776367188
    6. '```' → logprob: -19.375045776367188
    7. '  ' → logprob: -20.000045776367188
    8. '１００' → logprob: -20.250045776367188
    9. '0' → logprob: -21.125045776367188
    10. '`' → logprob: -21.250045776367188

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '۰' → logprob: -15.375000953674316
    4. '０' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.625
    6. '00' → logprob: -16.75
    7. '०' → logprob: -16.75
    8. '০' → logprob: -17.25
    9. '٠' → logprob: -17.625
    10. '000' → logprob: -18.375

Token 224: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7157620191574097
    2. '\n' → logprob: -1.8407620191574097
    3. 'i' → logprob: -1.9657620191574097
    4. '<|end|>' → logprob: -2.090762138366699
    5. ' 
' → logprob: -3.340762138366699
    6. 'x' → logprob: -3.590762138366699
    7. 'n' → logprob: -5.590762138366699
    8. '\' → logprob: -5.840762138366699
    9. ' ' → logprob: -5.840762138366699
    10. '  
' → logprob: -6.090762138366699

Token 225: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02214735932648182
    2. 'r' → logprob: -4.647147178649902
    3. '#' → logprob: -5.022147178649902
    4. 'rest' → logprob: -6.647147178649902
    5. '
' → logprob: -6.772147178649902
    6. 'y' → logprob: -6.897147178649902
    7. '\' → logprob: -7.397147178649902
    8. 'remaining' → logprob: -7.772147178649902
    9. 'print' → logprob: -8.147147178649902
    10. 'reste' → logprob: -8.397147178649902

Token 226: ' Met' (ID: 7227)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.051050424575805664
    2. 'r' → logprob: -3.1760504245758057
    3. 'y' → logprob: -5.801050186157227
    4. 'reste' → logprob: -6.301050186157227
    5. 'rest' → logprob: -6.301050186157227
    6. 're' → logprob: -7.676050186157227
    7. 'remaining' → logprob: -8.176050186157227
    8. 'x' → logprob: -8.676050186157227
    9. '#' → logprob: -9.176050186157227
    10. 'm' → logprob: -9.426050186157227

Token 227: ' à' (ID: 1221)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23020702600479126
    2. 'i' → logprob: -2.8552069664001465
    3. ' x' → logprob: -3.2302069664001465
    4. 'x' → logprob: -3.2302069664001465
    5. 'a' → logprob: -4.2302069664001465
    6. 'tre' → logprob: -4.8552069664001465
    7. 'o' → logprob: -5.2302069664001465
    8. ' s' → logprob: -5.3552069664001465
    9. ' a' → logprob: -5.4802069664001465
    10. '#' → logprob: -5.7302069664001465

Token 228: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0019929935224354267
    2. ' jour' → logprob: -6.501993179321289
    3. 'j' → logprob: -8.501993179321289
    4. '0' → logprob: -9.126993179321289
    5. 'z' → logprob: -9.876993179321289
    6. 'jours' → logprob: -10.501993179321289
    7. '```' → logprob: -10.876993179321289
    8. 'jou' → logprob: -11.001993179321289
    9. 'i' → logprob: -11.376993179321289
    10. 'jourd' → logprob: -11.376993179321289

Token 229: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011249530129134655
    2. ' i' → logprob: -4.511249542236328
    3. '#' → logprob: -9.011249542236328
    4. 'l' → logprob: -10.386249542236328
    5. 'la' → logprob: -11.761249542236328
    6. ' la' → logprob: -11.761249542236328
    7. 'le' → logprob: -11.761249542236328
    8. ''i' → logprob: -12.136249542236328
    9. 'reste' → logprob: -12.386249542236328
    10. 'r' → logprob: -12.761249542236328

Token 230: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004869186959695071
    2. 'val' → logprob: -8.000487327575684
    3. 'variable' → logprob: -9.250487327575684
    4. 'reste' → logprob: -10.750487327575684
    5. ' i' → logprob: -11.375487327575684
    6. 'value' → logprob: -12.000487327575684
    7. '#' → logprob: -12.125487327575684
    8. 'rest' → logprob: -12.375487327575684
    9. 'remaining' → logprob: -13.125487327575684
    10. 'r' → logprob: -13.875487327575684

Token 231: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8899686932563782
    2. 'i' → logprob: -1.1399686336517334
    3. ' de' → logprob: -1.3899686336517334
    4. ' i' → logprob: -4.8899688720703125
    5. 'd' → logprob: -5.0149688720703125
    6. 'rest' → logprob: -6.2649688720703125
    7. ' restante' → logprob: -6.5149688720703125
    8. '#' → logprob: -6.7649688720703125
    9. 'r' → logprob: -7.2649688720703125
    10. 'remaining' → logprob: -8.389968872070312

Token 232: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.375001907348633
    3. '`' → logprob: -16.625001907348633
    4. '#' → logprob: -16.625001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'x' → logprob: -17.875001907348633
    7. '	i' → logprob: -18.375001907348633
    8. ''i' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '
' → logprob: -19.375001907348633

Token 233: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3856492842023727e-06
    2. ' i' → logprob: -13.875000953674316
    3. ''i' → logprob: -15.375000953674316
    4. '#' → logprob: -16.750001907348633
    5. '`' → logprob: -17.375001907348633
    6. '```' → logprob: -17.375001907348633
    7. '	i' → logprob: -18.125001907348633
    8. '
' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.875001907348633
    10. 'I' → logprob: -19.875001907348633

Token 234: ''' (ID: 6)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.3464926481246948
    2. ' i' → logprob: -2.2214927673339844
    3. '%' → logprob: -2.3464927673339844
    4. ' =' → logprob: -3.3464927673339844
    5. '%=' → logprob: -3.8464927673339844
    6. 'i' → logprob: -4.471492767333984
    7. '=' → logprob: -4.971492767333984
    8. '%i' → logprob: -4.971492767333984
    9. '=i' → logprob: -5.471492767333984
    10. ' ' → logprob: -6.846492767333984

Token 235: ' en' (ID: 469)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.2685324549674988
    2. '%=' → logprob: -1.5185325145721436
    3. '=' → logprob: -4.6435322761535645
    4. ' =' → logprob: -5.2685322761535645
    5. ' -=' → logprob: -6.8935322761535645
    6. '%' → logprob: -7.3935322761535645
    7. '-=' → logprob: -10.143532752990723
    8. '%i' → logprob: -11.768532752990723
    9. ' %' → logprob: -12.268532752990723
    10. ' ' → logprob: -12.393532752990723

Token 236: ' lui' (ID: 10623)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34850940108299255
    2. 'i' → logprob: -1.223509430885315
    3. '(i' → logprob: -10.973509788513184
    4. ' restant' → logprob: -11.098509788513184
    5. ' supprim' → logprob: -12.098509788513184
    6. '%i' → logprob: -12.473509788513184
    7. ' ' → logprob: -12.848509788513184
    8. '	i' → logprob: -13.348509788513184
    9. '%' → logprob: -13.348509788513184
    10. '[i' → logprob: -13.473509788513184

Token 237: ' affect' (ID: 7902)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.2699229717254639
    2. 'en' → logprob: -1.5199229717254639
    3. ' retir' → logprob: -1.8949229717254639
    4. 'd' → logprob: -2.644922971725464
    5. ' donnant' → logprob: -3.394922971725464
    6. 'rest' → logprob: -3.519922971725464
    7. '%' → logprob: -3.644922971725464
    8. 'ret' → logprob: -3.769922971725464
    9. 'levant' → logprob: -3.894922971725464
    10. 'rem' → logprob: -4.019923210144043

Token 238: 'ant' (ID: 493)
  Prédit: 'uant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.000948141620028764
    2. 'u' → logprob: -7.250947952270508
    3. 'ant' → logprob: -8.625947952270508
    4. 'uent' → logprob: -10.250947952270508
    5. 'uer' → logprob: -12.125947952270508
    6. '#' → logprob: -12.125947952270508
    7. '=' → logprob: -13.250947952270508
    8. 'ue' → logprob: -13.375947952270508
    9. 'rant' → logprob: -13.500947952270508
    10. 'uée' → logprob: -13.875947952270508

Token 239: ' son' (ID: 2391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08712936192750931
    2. ' i' → logprob: -2.5871293544769287
    3. ' la' → logprob: -5.212129592895508
    4. ' le' → logprob: -6.337129592895508
    5. 'le' → logprob: -7.462129592895508
    6. 'la' → logprob: -8.212129592895508
    7. ' the' → logprob: -9.212129592895508
    8. 'the' → logprob: -10.962129592895508
    9. 'l' → logprob: -12.712129592895508
    10. ' ' → logprob: -12.837129592895508

Token 240: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.6854222416877747
    2. ' reste' → logprob: -1.1854221820831299
    3. ' remainder' → logprob: -2.31042218208313
    4. ' i' → logprob: -3.43542218208313
    5. 're' → logprob: -4.435422420501709
    6. '%' → logprob: -4.435422420501709
    7. 'mod' → logprob: -4.560422420501709
    8. 'i' → logprob: -4.685422420501709
    9. ' modulo' → logprob: -4.935422420501709
    10. ' restant' → logprob: -6.185422420501709

Token 241: ' après' (ID: 16460)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19726566970348358
    2. ' de' → logprob: -2.572265625
    3. 'i' → logprob: -2.697265625
    4. ' =' → logprob: -3.822265625
    5. '%' → logprob: -5.322265625
    6. ' ' → logprob: -6.197265625
    7. '=' → logprob: -6.697265625
    8. 's' → logprob: -6.697265625
    9. '=i' → logprob: -7.072265625
    10. '%=' → logprob: -7.697265625

Token 242: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.7641329169273376
    2. 'division' → logprob: -1.2641329765319824
    3. ' la' → logprob: -1.5141329765319824
    4. 'la' → logprob: -4.139132976531982
    5. 'div' → logprob: -4.639132976531982
    6. ' une' → logprob: -5.889132976531982
    7. ' avoir' → logprob: -6.764132976531982
    8. ' ' → logprob: -7.264132976531982
    9. 'une' → logprob: -7.889132976531982
    10. '%' → logprob: -8.014132499694824

Token 243: ' par' (ID: 686)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5367628335952759
    2. 'i' → logprob: -1.4117628335952759
    3. '%' → logprob: -2.6617627143859863
    4. '%i' → logprob: -2.9117627143859863
    5. 'mod' → logprob: -4.786762714385986
    6. ' ' → logprob: -4.911762714385986
    7. '=i' → logprob: -4.911762714385986
    8. ' =' → logprob: -5.161762714385986
    9. 's' → logprob: -5.286762714385986
    10. '=' → logprob: -6.036762714385986

Token 244: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. ' ' → logprob: -15.898245811462402
    4. '501' → logprob: -17.773244857788086
    5. '  ' → logprob: -18.523244857788086
    6. '510' → logprob: -19.273244857788086
    7. '5' → logprob: -19.273244857788086
    8. '505' → logprob: -19.585744857788086
    9. '499' → logprob: -19.898244857788086
    10. '```' → logprob: -19.960744857788086

Token 245: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.000553131103516
    4. '```' → logprob: -17.625553131103516
    5. '501' → logprob: -17.750553131103516
    6. '  ' → logprob: -18.375553131103516
    7. '5' → logprob: -19.000553131103516
    8. '`' → logprob: -19.313053131103516
    9. '499' → logprob: -19.438053131103516
    10. '505' → logprob: -19.688053131103516

Token 246: '.
' (ID: 558)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01824324205517769
    2. ' i' → logprob: -4.018243312835693
    3. '%' → logprob: -10.268242835998535
    4. ',' → logprob: -10.768242835998535
    5. '%i' → logprob: -11.018242835998535
    6. '=' → logprob: -12.143242835998535
    7. ' =' → logprob: -12.393242835998535
    8. '=i' → logprob: -12.768242835998535
    9. ',i' → logprob: -13.393242835998535
    10. '(i' → logprob: -13.518242835998535

Token 247: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.126930832862854
    2. ' i' → logprob: -2.1269307136535645
    3. ',' → logprob: -14.001931190490723
    4. ' =' → logprob: -14.376931190490723
    5. ' 
' → logprob: -15.126931190490723
    6. '	i' → logprob: -15.501931190490723
    7. ' (' → logprob: -15.626931190490723
    8. '%i' → logprob: -15.876931190490723
    9. '`' → logprob: -16.001930236816406
    10. '(i' → logprob: -16.501930236816406

Token 248: ' L' (ID: 451)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615988306701183
    2. ' i' → logprob: -4.758615970611572
    3. '#' → logprob: -14.50861644744873
    4. '```' → logprob: -14.63361644744873
    5. '
' → logprob: -15.63361644744873
    6. ' 
' → logprob: -15.88361644744873
    7. '	i' → logprob: -16.258615493774414
    8. ' ' → logprob: -16.883615493774414
    9. '``' → logprob: -17.133615493774414
    10. ' ' → logprob: -17.258615493774414

Token 249: ''op' (ID: 70747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46770045161247253
    2. 'i' → logprob: -1.217700481414795
    3. ' =' → logprob: -2.967700481414795
    4. '=i' → logprob: -4.592700481414795
    5. ' i' → logprob: -4.717700481414795
    6. 'e' → logprob: -5.592700481414795
    7. '#' → logprob: -7.217700481414795
    8. ''i' → logprob: -7.592700481414795
    9. '%=' → logprob: -7.592700481414795
    10. ''' → logprob: -7.842700481414795

Token 250: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.21466177701950073
    2. 'érateur' → logprob: -1.9646618366241455
    3. 'ér' → logprob: -3.4646618366241455
    4. 'érer' → logprob: -4.839661598205566
    5. 'ération' → logprob: -5.214661598205566
    6. 'i' → logprob: -6.589661598205566
    7. 'éré' → logprob: -6.839661598205566
    8. 'érant' → logprob: -6.964661598205566
    9. 'èr' → logprob: -7.089661598205566
    10. 'é' → logprob: -7.339661598205566

Token 251: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.011572816409170628
    2. ' %' → logprob: -5.01157283782959
    3. '=' → logprob: -5.51157283782959
    4. '%=' → logprob: -7.76157283782959
    5. ' %=' → logprob: -8.26157283782959
    6. ' =' → logprob: -9.26157283782959
    7. '%i' → logprob: -11.51157283782959
    8. 'mod' → logprob: -12.38657283782959
    9. ' modulo' → logprob: -12.76157283782959
    10. ' ' → logprob: -13.01157283782959

Token 252: ' donne' (ID: 30004)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18821360170841217
    2. '=' → logprob: -2.688213586807251
    3. ' =' → logprob: -3.313213586807251
    4. 'i' → logprob: -3.563213586807251
    5. '=i' → logprob: -4.43821382522583
    6. ' permet' → logprob: -4.81321382522583
    7. ' ' → logprob: -5.56321382522583
    8. 'mod' → logprob: -6.18821382522583
    9. ' modulo' → logprob: -6.31321382522583
    10. ' s' → logprob: -6.68821382522583

Token 253: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0743976831436157
    2. ' i' → logprob: -1.1993976831436157
    3. ' le' → logprob: -1.3243976831436157
    4. ' la' → logprob: -2.574397563934326
    5. ' ' → logprob: -4.574397563934326
    6. 'le' → logprob: -5.949397563934326
    7. ' l' → logprob: -8.074398040771484
    8. 'l' → logprob: -8.199398040771484
    9. 's' → logprob: -8.449398040771484
    10. ' the' → logprob: -8.449398040771484

Token 254: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33898985385894775
    2. 'reste' → logprob: -2.088989734649658
    3. ' reste' → logprob: -2.213989734649658
    4. ' i' → logprob: -3.463989734649658
    5. 'mod' → logprob: -4.713989734649658
    6. 'rest' → logprob: -5.088989734649658
    7. 're' → logprob: -5.213989734649658
    8. ' remainder' → logprob: -6.713989734649658
    9. 'r' → logprob: -7.838989734649658
    10. ' ' → logprob: -8.588990211486816

Token 255: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17895229160785675
    2. 'i' → logprob: -2.553952217102051
    3. ' de' → logprob: -2.553952217102051
    4. ' =' → logprob: -5.553952217102051
    5. ' ' → logprob: -6.678952217102051
    6. ' modulo' → logprob: -7.178952217102051
    7. 'de' → logprob: -7.553952217102051
    8. '%i' → logprob: -7.678952217102051
    9. '=i' → logprob: -7.803952217102051
    10. '=' → logprob: -8.05395221710205

Token 256: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5316884517669678
    2. 'i' → logprob: -0.9066884517669678
    3. ' ' → logprob: -5.156688690185547
    4. '500' → logprob: -5.906688690185547
    5. ' la' → logprob: -11.031688690185547
    6. '100' → logprob: -12.031688690185547
    7. 'l' → logprob: -12.156688690185547
    8. '	i' → logprob: -12.406688690185547
    9. ' l' → logprob: -13.031688690185547
    10. '  ' → logprob: -13.156688690185547

Token 257: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.09337480366230011
    2. ' division' → logprob: -2.593374729156494
    3. 'i' → logprob: -4.843374729156494
    4. 'div' → logprob: -5.093374729156494
    5. ' i' → logprob: -7.968374729156494
    6. ' ' → logprob: -11.843375205993652
    7. ' div' → logprob: -12.593375205993652
    8. '```' → logprob: -12.968375205993652
    9. ' ' → logprob: -14.843375205993652
    10. '   ' → logprob: -15.093375205993652

Token 258: ' entière' (ID: 61583)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22634893655776978
    2. 'i' → logprob: -1.601348876953125
    3. ' =' → logprob: -7.851348876953125
    4. '=' → logprob: -8.851348876953125
    5. ' de' → logprob: -9.476348876953125
    6. ' ' → logprob: -9.726348876953125
    7. ',' → logprob: -9.726348876953125
    8. '%i' → logprob: -9.726348876953125
    9. '=i' → logprob: -9.851348876953125
    10. '%' → logprob: -10.226348876953125

Token 259: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5233374238014221
    2. 'i' → logprob: -0.8983374238014221
    3. ',' → logprob: -9.648337364196777
    4. '%i' → logprob: -9.773337364196777
    5. ' =' → logprob: -10.773337364196777
    6. '(i' → logprob: -10.898337364196777
    7. '%' → logprob: -11.148337364196777
    8. ' de' → logprob: -11.773337364196777
    9. ' ' → logprob: -12.023337364196777
    10. ' (' → logprob: -12.273337364196777

Token 260: 'appel' (ID: 100200)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5563205480575562
    2. ' i' → logprob: -0.9313205480575562
    3. ')' → logprob: -4.056320667266846
    4. ' )' → logprob: -4.806320667266846
    5. ' ' → logprob: -5.181320667266846
    6. '500' → logprob: -6.556320667266846
    7. ')i' → logprob: -10.431320190429688
    8. '%i' → logprob: -11.181320190429688
    9. ' ' → logprob: -11.806320190429688
    10. '  ' → logprob: -12.181320190429688

Token 261: 'é' (ID: 377)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.030177116394043
    2. 'age' → logprob: -1.655177116394043
    3. 'ation' → logprob: -1.905177116394043
    4. '=' → logprob: -2.280177116394043
    5. ')' → logprob: -2.780177116394043
    6. 'é' → logprob: -3.280177116394043
    7. 'e' → logprob: -3.405177116394043
    8. 'de' → logprob: -3.905177116394043
    9. ' i' → logprob: -4.155177116394043
    10. '=i' → logprob: -4.280177116394043

Token 262: ' aussi' (ID: 9894)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004190113395452499
    2. ' modulo' → logprob: -5.629189968109131
    3. 'i' → logprob: -7.879189968109131
    4. 'Modulo' → logprob: -10.004190444946289
    5. 'module' → logprob: -10.379190444946289
    6. ' i' → logprob: -11.004190444946289
    7. ' ' → logprob: -11.129190444946289
    8. 'la' → logprob: -11.254190444946289
    9. '```' → logprob: -11.254190444946289
    10. ')' → logprob: -11.254190444946289

Token 263: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005319731775671244
    2. ' modulo' → logprob: -5.255319595336914
    3. 'module' → logprob: -10.130319595336914
    4. 'Modulo' → logprob: -10.630319595336914
    5. 'i' → logprob: -12.505319595336914
    6. ' modulus' → logprob: -12.630319595336914
    7. ' ' → logprob: -13.005319595336914
    8. 'm' → logprob: -13.005319595336914
    9. '_mod' → logprob: -13.255319595336914
    10. ' mod' → logprob: -13.255319595336914

Token 264: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10847470164299011
    2. ' )' → logprob: -2.3584747314453125
    3. ')
' → logprob: -5.6084747314453125
    4. ' )
' → logprob: -5.9834747314453125
    5. 'i' → logprob: -6.6084747314453125
    6. ')i' → logprob: -7.9834747314453125
    7. ' i' → logprob: -8.858474731445312
    8. ').' → logprob: -9.358474731445312
    9. ' ' → logprob: -10.483474731445312
    10. ' ' → logprob: -11.483474731445312

Token 265: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054884202778339386
    2. ' i' → logprob: -2.929884195327759
    3. '```' → logprob: -14.80488395690918
    4. '`' → logprob: -15.05488395690918
    5. '(i' → logprob: -15.55488395690918
    6. '	i' → logprob: -15.67988395690918
    7. ' 
' → logprob: -15.80488395690918
    8. '%i' → logprob: -15.92988395690918
    9. ' ' → logprob: -16.17988395690918
    10. ' (' → logprob: -16.17988395690918

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6601320505142212
    2. ' %=' → logprob: -1.1601320505142212
    3. '=' → logprob: -1.9101320505142212
    4. '%=' → logprob: -4.160131931304932
    5. '%' → logprob: -5.160131931304932
    6. ' %' → logprob: -8.03513240814209
    7. ' ' → logprob: -10.41013240814209
    8. ' ' → logprob: -12.16013240814209
    9. '%i' → logprob: -13.78513240814209
    10. ' =
' → logprob: -14.03513240814209

Token 267: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759421586990356
    2. ' i' → logprob: -0.8259421586990356
    3. ' ' → logprob: -13.575942039489746
    4. '	i' → logprob: -14.200942039489746
    5. ' ' → logprob: -14.700942039489746
    6. '%i' → logprob: -15.825942039489746
    7. '0' → logprob: -17.200942993164062
    8. '   ' → logprob: -17.450942993164062
    9. '_i' → logprob: -17.825942993164062
    10. '  ' → logprob: -17.950942993164062

Token 268: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4743548631668091
    2. ' %' → logprob: -0.9743548631668091
    3. '%i' → logprob: -8.22435474395752
    4. '%x' → logprob: -12.47435474395752
    5. '%s' → logprob: -13.09935474395752
    6. ' ' → logprob: -13.34935474395752
    7. ' ' → logprob: -13.84935474395752
    8. '%d' → logprob: -14.47435474395752
    9. ' i' → logprob: -15.34935474395752
    10. 'i' → logprob: -16.099355697631836

Token 269: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.026301342993974686
    2. ' ' → logprob: -3.651301383972168
    3. ' ' → logprob: -14.901301383972168
    4. '5' → logprob: -15.401301383972168
    5. '  ' → logprob: -16.02630043029785
    6. '501' → logprob: -16.15130043029785
    7. '   ' → logprob: -16.40130043029785
    8. '50' → logprob: -16.40130043029785
    9. '```' → logprob: -16.77630043029785
    10. '	' → logprob: -18.02630043029785

Token 270: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '501' → logprob: -18.75
    4. '50' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '5' → logprob: -19.125
    7. '`' → logprob: -20.625
    8. '   ' → logprob: -20.625
    9. '499' → logprob: -21.125
    10. '  ' → logprob: -21.4375

Token 271: '

' (ID: 279)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1627447009086609
    2. 's' → logprob: -3.7877447605133057
    3. ' 
' → logprob: -4.037744522094727
    4. 'n' → logprob: -4.162744522094727
    5. '500' → logprob: -4.287744522094727
    6. '#' → logprob: -4.287744522094727
    7. '+' → logprob: -4.787744522094727
    8. ' ' → logprob: -4.787744522094727
    9. '<|end|>' → logprob: -4.787744522094727
    10. '
' → logprob: -5.037744522094727

Token 272: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02109694294631481
    2. 'y' → logprob: -3.89609694480896
    3. '#' → logprob: -7.646096706390381
    4. '100' → logprob: -11.021097183227539
    5. 'if' → logprob: -11.646097183227539
    6. 'n' → logprob: -11.771097183227539
    7. 'a' → logprob: -11.771097183227539
    8. '```' → logprob: -12.271097183227539
    9. '500' → logprob: -12.396097183227539
    10. 'print' → logprob: -12.771097183227539

Token 273: ' Cal' (ID: 4453)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10114488005638123
    2. 'y' → logprob: -2.351144790649414
    3. 'if' → logprob: -7.476144790649414
    4. '#' → logprob: -9.601144790649414
    5. '500' → logprob: -9.601144790649414
    6. 'for' → logprob: -10.226144790649414
    7. 'while' → logprob: -10.226144790649414
    8. 'j' → logprob: -10.351144790649414
    9. 'n' → logprob: -10.351144790649414
    10. 'a' → logprob: -10.351144790649414

Token 274: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.36062443256378174
    2. 'c' → logprob: -1.6106244325637817
    3. 'cule' → logprob: -2.985624313354492
    4. 'x' → logprob: -3.860624313354492
    5. '#' → logprob: -4.235624313354492
    6. 'cules' → logprob: -4.860624313354492
    7. 'culate' → logprob: -5.485624313354492
    8. 'i' → logprob: -6.985624313354492
    9. 'cu' → logprob: -6.985624313354492
    10. '```' → logprob: -7.235624313354492

Token 275: ' combien' (ID: 106648)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1005294919013977
    2. 'y' → logprob: -2.350529432296753
    3. ' y' → logprob: -8.725529670715332
    4. ' x' → logprob: -8.850529670715332
    5. '500' → logprob: -11.600529670715332
    6. 'i' → logprob: -12.725529670715332
    7. '#' → logprob: -13.350529670715332
    8. '100' → logprob: -14.225529670715332
    9. '(x' → logprob: -14.600529670715332
    10. 'a' → logprob: -15.100529670715332

Token 276: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.777330219745636
    2. 'y' → logprob: -1.7773301601409912
    3. ' de' → logprob: -1.7773301601409912
    4. 'x' → logprob: -1.9023301601409912
    5. ' ' → logprob: -3.527330160140991
    6. '500' → logprob: -4.77733039855957
    7. 'd' → logprob: -5.15233039855957
    8. '#' → logprob: -5.65233039855957
    9. '   ' → logprob: -5.90233039855957
    10. ' y' → logprob: -6.15233039855957

Token 277: ' fois' (ID: 14697)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.2092294692993164
    2. '100' → logprob: -2.4592294692993164
    3. 'i' → logprob: -2.8342294692993164
    4. '250' → logprob: -3.8342294692993164
    5. '300' → logprob: -4.459229469299316
    6. '(' → logprob: -5.834229469299316
    7. ' i' → logprob: -5.959229469299316
    8. '50' → logprob: -6.584229469299316
    9. ' ' → logprob: -6.584229469299316
    10. '400' → logprob: -6.959229469299316

Token 278: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.6664502620697021
    2. '100' → logprob: -1.2914502620697021
    3. ' ' → logprob: -2.291450262069702
    4. '250' → logprob: -2.666450262069702
    5. 'i' → logprob: -3.541450262069702
    6. '50' → logprob: -5.541450500488281
    7. ' i' → logprob: -5.791450500488281
    8. '300' → logprob: -5.791450500488281
    9. '400' → logprob: -6.666450500488281
    10. '20' → logprob: -8.291450500488281

Token 279: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5978373289108276
    2. '200' → logprob: -0.8478373289108276
    3. '250' → logprob: -4.472837448120117
    4. '300' → logprob: -5.347837448120117
    5. 'i' → logprob: -5.972837448120117
    6. '50' → logprob: -6.472837448120117
    7. '400' → logprob: -7.097837448120117
    8. '150' → logprob: -8.972837448120117
    9. ' ' → logprob: -9.222837448120117
    10. '20' → logprob: -9.222837448120117

Token 280: ' rent' (ID: 9462)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005242652725428343
    2. '00' → logprob: -5.255242824554443
    3. ' ' → logprob: -12.130242347717285
    4. '000' → logprob: -14.130242347717285
    5. '   ' → logprob: -14.255242347717285
    6. ' =' → logprob: -14.755242347717285
    7. '  ' → logprob: -15.005242347717285
    8. '5' → logprob: -15.130242347717285
    9. '=' → logprob: -15.255242347717285
    10. '٠' → logprob: -15.380242347717285

Token 281: 're' (ID: 264)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21592748165130615
    2. 'r' → logprob: -2.3409276008605957
    3. 're' → logprob: -3.0909276008605957
    4. 'i' → logprob: -3.0909276008605957
    5. 'er' → logprob: -5.590927600860596
    6. '=' → logprob: -7.340927600860596
    7. 'rent' → logprob: -7.340927600860596
    8. 'int' → logprob: -8.340927124023438
    9. '500' → logprob: -8.465927124023438
    10. 'x' → logprob: -8.715927124023438

Token 282: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.2560257911682129
    2. ' dans' → logprob: -1.506025791168213
    3. ' ' → logprob: -6.006025791168213
    4. 'i' → logprob: -7.256025791168213
    5. 'x' → logprob: -8.006025314331055
    6. ' dedans' → logprob: -8.756025314331055
    7. ' i' → logprob: -9.256025314331055
    8. 'int' → logprob: -9.506025314331055
    9. 'dan' → logprob: -9.506025314331055
    10. '  ' → logprob: -10.006025314331055

Token 283: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07006370276212692
    2. ' i' → logprob: -2.695063591003418
    3. ''i' → logprob: -9.070063591003418
    4. ' ' → logprob: -12.070063591003418
    5. ''' → logprob: -12.820063591003418
    6. '	i' → logprob: -13.820063591003418
    7. ' ' → logprob: -14.070063591003418
    8. ' '' → logprob: -14.195063591003418
    9. '   ' → logprob: -15.195063591003418
    10. '`' → logprob: -15.195063591003418

Token 284: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001589618914294988
    2. ' i' → logprob: -8.75015926361084
    3. ''i' → logprob: -15.25015926361084
    4. ' ' → logprob: -16.625158309936523
    5. '500' → logprob: -16.875158309936523
    6. '5' → logprob: -17.500158309936523
    7. '`' → logprob: -17.750158309936523
    8. '100' → logprob: -17.750158309936523
    9. '	i' → logprob: -17.750158309936523
    10. '   ' → logprob: -18.375158309936523

Token 285: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01714479923248291
    2. ' i' → logprob: -4.267144680023193
    3. ' de' → logprob: -6.642144680023193
    4. ' ' → logprob: -7.642144680023193
    5. 'de' → logprob: -8.017145156860352
    6. 'x' → logprob: -8.142145156860352
    7. ' =' → logprob: -8.517145156860352
    8. '=' → logprob: -8.892145156860352
    9. '5' → logprob: -9.267145156860352
    10. '500' → logprob: -9.392145156860352

Token 286: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028269849717617035
    2. ' i' → logprob: -5.877827167510986
    3. ''i' → logprob: -10.877826690673828
    4. ' ' → logprob: -13.127826690673828
    5. ''' → logprob: -15.002826690673828
    6. '`' → logprob: -15.252826690673828
    7. '   ' → logprob: -15.377826690673828
    8. 'l' → logprob: -15.752826690673828
    9. '	i' → logprob: -16.127826690673828
    10. '  ' → logprob: -17.127826690673828

Token 287: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002826627343893051
    2. ' i' → logprob: -5.877826690673828
    3. ''i' → logprob: -11.752826690673828
    4. ' ' → logprob: -12.377826690673828
    5. '`' → logprob: -13.127826690673828
    6. ''' → logprob: -13.252826690673828
    7. 'l' → logprob: -13.502826690673828
    8. '100' → logprob: -13.877826690673828
    9. '	i' → logprob: -14.252826690673828
    10. '500' → logprob: -14.815326690673828

Token 288: ''' (ID: 6)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03895135223865509
    2. ' x' → logprob: -3.7889513969421387
    3. 'i' → logprob: -4.663951396942139
    4. '5' → logprob: -6.163951396942139
    5. ' ' → logprob: -6.538951396942139
    6. ' =' → logprob: -7.038951396942139
    7. ' i' → logprob: -7.663951396942139
    8. '.' → logprob: -8.16395092010498
    9. '500' → logprob: -8.28895092010498
    10. '#' → logprob: -8.28895092010498

Token 289: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05108724161982536
    2. '5' → logprob: -3.8010871410369873
    3. ' x' → logprob: -3.8010871410369873
    4. ' =' → logprob: -5.801087379455566
    5. '=' → logprob: -6.801087379455566
    6. ' ' → logprob: -7.426087379455566
    7. '#' → logprob: -9.176087379455566
    8. ',' → logprob: -9.551087379455566
    9. '
' → logprob: -10.176087379455566
    10. 'i' → logprob: -11.051087379455566

Token 290: 'ap' (ID: 403)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08661046624183655
    2. ' i' → logprob: -2.9616105556488037
    3. ' ' → logprob: -4.336610317230225
    4. ')' → logprob: -5.211610317230225
    5. '500' → logprob: -5.461610317230225
    6. '5' → logprob: -6.461610317230225
    7. '#' → logprob: -7.211610317230225
    8. '100' → logprob: -7.461610317230225
    9. '...' → logprob: -7.461610317230225
    10. 'sans' → logprob: -7.711610317230225

Token 291: 'rès' (ID: 48817)
  Prédit: 'rès'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rès' → logprob: -0.006708385422825813
    2. '#' → logprob: -5.38170862197876
    3. 'i' → logprob: -6.75670862197876
    4. 'r' → logprob: -8.006708145141602
    5. 'p' → logprob: -8.381708145141602
    6. 'ples' → logprob: -9.756708145141602
    7. 'rés' → logprob: -9.756708145141602
    8. 'res' → logprob: -10.131708145141602
    9. 'près' → logprob: -10.256708145141602
    10. 'u' → logprob: -11.131708145141602

Token 292: ' avoir' (ID: 16595)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.67756587266922
    2. 'division' → logprob: -1.5525658130645752
    3. '500' → logprob: -2.677565813064575
    4. 'l' → logprob: -3.177565813064575
    5. ' division' → logprob: -3.177565813064575
    6. ' la' → logprob: -3.302565813064575
    7. 'div' → logprob: -3.427565813064575
    8. '#' → logprob: -4.427566051483154
    9. 'le' → logprob: -4.802566051483154
    10. ' avoir' → logprob: -4.927566051483154

Token 293: ' retir' (ID: 35638)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.936034619808197
    2. 'trait' → logprob: -1.3110346794128418
    3. '500' → logprob: -2.061034679412842
    4. 'calcul' → logprob: -2.811034679412842
    5. 'ex' → logprob: -3.311034679412842
    6. '#' → logprob: -3.311034679412842
    7. ' traité' → logprob: -4.561034679412842
    8. 'g' → logprob: -4.936034679412842
    9. 'pris' → logprob: -5.061034679412842
    10. 'effect' → logprob: -5.186034679412842

Token 294: 'é' (ID: 377)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4345119297504425
    2. 'iqué' → logprob: -2.18451189994812
    3. 'é' → logprob: -2.55951189994812
    4. 'ié' → logprob: -2.93451189994812
    5. 'ir' → logprob: -3.43451189994812
    6. 'is' → logprob: -3.93451189994812
    7. 'isé' → logprob: -4.309512138366699
    8. 'it' → logprob: -4.809512138366699
    9. 'div' → logprob: -5.184512138366699
    10. 'u' → logprob: -5.434512138366699

Token 295: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.406442642211914
    2. ' les' → logprob: -1.406442642211914
    3. 'i' → logprob: -2.156442642211914
    4. ' la' → logprob: -2.156442642211914
    5. ' ' → logprob: -3.156442642211914
    6. '500' → logprob: -3.281442642211914
    7. 'la' → logprob: -3.281442642211914
    8. 'x' → logprob: -3.406442642211914
    9. ' i' → logprob: -3.656442642211914
    10. 'l' → logprob: -3.906442642211914

Token 296: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0017470121383667
    2. ' les' → logprob: -1.0017470121383667
    3. 'i' → logprob: -2.5017471313476562
    4. ' i' → logprob: -3.1267471313476562
    5. '500' → logprob: -3.1267471313476562
    6. ' ' → logprob: -3.3767471313476562
    7. 'la' → logprob: -4.376747131347656
    8. ' la' → logprob: -4.751747131347656
    9. 'l' → logprob: -4.751747131347656
    10. 'x' → logprob: -4.876747131347656

Token 297: ' multiples' (ID: 70720)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.1880774050951004
    2. 'bil' → logprob: -2.688077449798584
    3. '100' → logprob: -2.813077449798584
    4. ' billets' → logprob: -3.813077449798584
    5. ' ' → logprob: -4.813077449798584
    6. '5' → logprob: -4.938077449798584
    7. 'b' → logprob: -6.063077449798584
    8. 'x' → logprob: -7.188077449798584
    9. 'div' → logprob: -7.438077449798584
    10. '200' → logprob: -7.938077449798584

Token 298: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15482373535633087
    2. 'de' → logprob: -2.0298237800598145
    3. '500' → logprob: -5.1548237800598145
    4. ' ' → logprob: -5.5298237800598145
    5. ' of' → logprob: -6.9048237800598145
    6. 'd' → logprob: -7.7798237800598145
    7. '5' → logprob: -7.9048237800598145
    8. '#' → logprob: -8.654823303222656
    9. 'x' → logprob: -9.779823303222656
    10. ' d' → logprob: -9.904823303222656

Token 299: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.6295642852783203
    2. '100' → logprob: -1.5045642852783203
    3. ' ' → logprob: -1.6295642852783203
    4. '50' → logprob: -3.5045642852783203
    5. '10' → logprob: -4.25456428527832
    6. '5' → logprob: -6.12956428527832
    7. '20' → logprob: -6.37956428527832
    8. '25' → logprob: -8.25456428527832
    9. '250' → logprob: -8.37956428527832
    10. '200' → logprob: -9.00456428527832

Token 300: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.05953260511159897
    2. '100' → logprob: -3.309532642364502
    3. '5' → logprob: -4.559532642364502
    4. '50' → logprob: -4.809532642364502
    5. '10' → logprob: -6.059532642364502
    6. ' ' → logprob: -9.184532165527344
    7. '20' → logprob: -9.684532165527344
    8. '1' → logprob: -10.434532165527344
    9. '250' → logprob: -10.559532165527344
    10. '25' → logprob: -11.059532165527344

Token 301: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036161087919026613
    2. ' )' → logprob: -5.8786163330078125
    3. '<|end|>' → logprob: -8.378616333007812
    4. 'x' → logprob: -8.628616333007812
    5. ')
' → logprob: -9.503616333007812
    6. '#' → logprob: -9.753616333007812
    7. ',' → logprob: -10.378616333007812
    8. '')' → logprob: -10.628616333007812
    9. ' x' → logprob: -10.878616333007812
    10. '),' → logprob: -11.003616333007812

Token 302: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008636081591248512
    2. 'y' → logprob: -4.758635997772217
    3. '5' → logprob: -11.633636474609375
    4. ' x' → logprob: -11.633636474609375
    5. 'a' → logprob: -13.258636474609375
    6. ' y' → logprob: -13.883636474609375
    7. '#' → logprob: -15.633636474609375
    8. 'j' → logprob: -15.758636474609375
    9. 's' → logprob: -15.883636474609375
    10. '```' → logprob: -16.008636474609375

Token 303: ' Encore' (ID: 118329)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1606673300266266
    2. 'y' → logprob: -1.9106673002243042
    3. 'a' → logprob: -9.160667419433594
    4. '5' → logprob: -9.410667419433594
    5. 'n' → logprob: -9.910667419433594
    6. ' y' → logprob: -10.285667419433594
    7. ' x' → logprob: -10.660667419433594
    8. 'c' → logprob: -10.660667419433594
    9. 'i' → logprob: -10.785667419433594
    10. 'j' → logprob: -10.785667419433594

Token 304: ' une' (ID: 2463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016659554094076157
    2. ' x' → logprob: -4.891659736633301
    3. 'i' → logprob: -5.516659736633301
    4. '#' → logprob: -5.516659736633301
    5. ' i' → logprob: -7.766659736633301
    6. 'y' → logprob: -8.5166597366333
    7. ' ' → logprob: -9.7666597366333
    8. '=' → logprob: -9.7666597366333
    9. 'une' → logprob: -10.5166597366333
    10. ' #' → logprob: -10.6416597366333

Token 305: ' fois' (ID: 14697)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0058992840349674225
    2. '=' → logprob: -5.880899429321289
    3. '#' → logprob: -7.005899429321289
    4. 'fois' → logprob: -7.380899429321289
    5. ' x' → logprob: -7.380899429321289
    6. ' =' → logprob: -7.755899429321289
    7. 'i' → logprob: -8.755899429321289
    8. ' fois' → logprob: -9.130899429321289
    9. '5' → logprob: -9.380899429321289
    10. 'f' → logprob: -9.880899429321289

Token 306: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10083399713039398
    2. ' x' → logprob: -2.3508338928222656
    3. '5' → logprob: -8.225833892822266
    4. ' ' → logprob: -8.975833892822266
    5. 'y' → logprob: -9.725833892822266
    6. ' y' → logprob: -10.100833892822266
    7. '#' → logprob: -10.475833892822266
    8. 'i' → logprob: -10.475833892822266
    9. ' i' → logprob: -10.975833892822266
    10. ' =' → logprob: -11.350833892822266

Token 307: ' //' (ID: 602)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0190158449113369
    2. 'y' → logprob: -4.019015789031982
    3. ' x' → logprob: -7.269015789031982
    4. ' y' → logprob: -9.14401626586914
    5. 'i' → logprob: -10.14401626586914
    6. '5' → logprob: -11.64401626586914
    7. 'a' → logprob: -12.39401626586914
    8. 'j' → logprob: -13.26901626586914
    9. 's' → logprob: -13.51901626586914
    10. 'z' → logprob: -13.64401626586914

Token 308: ' effect' (ID: 3159)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8360052108764648
    2. 'x' → logprob: -0.9610052108764648
    3. ' =' → logprob: -2.961005210876465
    4. ' i' → logprob: -3.336005210876465
    5. ' s' → logprob: -3.836005210876465
    6. ' y' → logprob: -3.836005210876465
    7. '=' → logprob: -3.961005210876465
    8. ' ' → logprob: -4.336005210876465
    9. 'i' → logprob: -4.836005210876465
    10. '5' → logprob: -5.461005210876465

Token 309: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -4.990154047845863e-05
    2. '=' → logprob: -10.625049591064453
    3. 'uez' → logprob: -12.250049591064453
    4. 'uate' → logprob: -12.250049591064453
    5. 'u' → logprob: -12.875049591064453
    6. 'le' → logprob: -13.000049591064453
    7. 'e' → logprob: -13.125049591064453
    8. 'ure' → logprob: -13.625049591064453
    9. 'ues' → logprob: -13.750049591064453
    10. 'ecute' → logprob: -13.750049591064453

Token 310: ' une' (ID: 2463)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5309429168701172
    2. 'i' → logprob: -0.9059429168701172
    3. ' une' → logprob: -5.280942916870117
    4. ' la' → logprob: -6.655942916870117
    5. ' ' → logprob: -7.530942916870117
    6. ' l' → logprob: -8.905942916870117
    7. 'division' → logprob: -8.905942916870117
    8. 'div' → logprob: -9.030942916870117
    9. ' division' → logprob: -9.155942916870117
    10. '5' → logprob: -9.280942916870117

Token 311: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.07991579174995422
    2. ' division' → logprob: -2.954915761947632
    3. 'div' → logprob: -3.704915761947632
    4. 'ent' → logprob: -10.079916000366211
    5. ' ' → logprob: -10.079916000366211
    6. '5' → logprob: -10.954916000366211
    7. ' div' → logprob: -12.079916000366211
    8. 'integer' → logprob: -12.704916000366211
    9. 'int' → logprob: -13.079916000366211
    10. 'fois' → logprob: -13.204916000366211

Token 312: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.5482909679412842
    2. 'ent' → logprob: -0.9232909679412842
    3. ' ' → logprob: -4.548291206359863
    4. ' ent' → logprob: -5.423291206359863
    5. 'enti' → logprob: -5.798291206359863
    6. ' enti' → logprob: -5.923291206359863
    7. 'i' → logprob: -6.673291206359863
    8. '5' → logprob: -6.923291206359863
    9. ' i' → logprob: -7.923291206359863
    10. ' entier' → logprob: -8.423291206359863

Token 313: '.
' (ID: 558)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011557143181562424
    2. '5' → logprob: -5.136557102203369
    3. 'i' → logprob: -5.886557102203369
    4. ' x' → logprob: -6.386557102203369
    5. ' ' → logprob: -7.511557102203369
    6. ',' → logprob: -8.636557579040527
    7. ' i' → logprob: -9.136557579040527
    8. ' =' → logprob: -9.261557579040527
    9. 'n' → logprob: -9.511557579040527
    10. '<|end|>' → logprob: -10.511557579040527

Token 314: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17990994453430176
    2. 'y' → logprob: -1.8049099445343018
    3. 'a' → logprob: -9.429909706115723
    4. 'n' → logprob: -11.179909706115723
    5. 'z' → logprob: -11.304909706115723
    6. 'b' → logprob: -11.304909706115723
    7. 'c' → logprob: -11.679909706115723
    8. '5' → logprob: -11.929909706115723
    9. 'j' → logprob: -12.054909706115723
    10. 'k' → logprob: -12.429909706115723

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. '=i' → logprob: -15.173587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '=x' → logprob: -16.923587799072266
    6. 'x' → logprob: -17.048587799072266
    7. ' ' → logprob: -17.173587799072266
    8. 'i' → logprob: -17.673587799072266
    9. 's' → logprob: -17.923587799072266
    10. ',' → logprob: -18.423587799072266

Token 316: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602262556552887
    2. ' i' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.785225868225098
    4. '   ' → logprob: -14.160225868225098
    5. '	i' → logprob: -15.285225868225098
    6. ' ' → logprob: -17.035226821899414
    7. '_i' → logprob: -17.160226821899414
    8. '  ' → logprob: -17.285226821899414
    9. 'I' → logprob: -17.660226821899414
    10. '5' → logprob: -17.660226821899414

Token 317: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3132658004760742
    2. '//' → logprob: -1.3132658004760742
    3. ' ' → logprob: -12.813265800476074
    4. '//=' → logprob: -14.313265800476074
    5. ' ' → logprob: -14.813265800476074
    6. '5' → logprob: -16.06326675415039
    7. '#' → logprob: -16.31326675415039
    8. '```' → logprob: -16.81326675415039
    9. '%' → logprob: -17.31326675415039
    10. '/' → logprob: -17.68826675415039

Token 318: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '500' → logprob: -17.6250057220459
    4. '```' → logprob: -17.7500057220459
    5. '50' → logprob: -18.6250057220459
    6. '   ' → logprob: -18.6250057220459
    7. '۵' → logprob: -18.6250057220459
    8. '٥' → logprob: -19.1875057220459
    9. '2' → logprob: -19.5625057220459
    10. '10' → logprob: -19.6250057220459

Token 319: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '50' → logprob: -16.625001907348633
    4. '500' → logprob: -16.625001907348633
    5. '10' → logprob: -17.500001907348633
    6. '100' → logprob: -17.750001907348633
    7. '```' → logprob: -18.000001907348633
    8. '2' → logprob: -18.062501907348633
    9. '۵' → logprob: -18.312501907348633
    10. '٥' → logprob: -18.375001907348633

Token 320: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04599110409617424
    2. '<|end|>' → logprob: -3.1709911823272705
    3. '*' → logprob: -6.295990943908691
    4. '100' → logprob: -7.920990943908691
    5. 'x' → logprob: -8.170990943908691
    6. '#' → logprob: -8.795990943908691
    7. ' s' → logprob: -9.045990943908691
    8. '+' → logprob: -9.295990943908691
    9. '<|end|>' → logprob: -10.545990943908691
    10. '
' → logprob: -10.920990943908691

Token 321: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018484358442947268
    2. '<|end|>' → logprob: -6.376848220825195
    3. '#' → logprob: -9.751848220825195
    4. '
' → logprob: -10.251848220825195
    5. ' s' → logprob: -11.376848220825195
    6. 'x' → logprob: -11.501848220825195
    7. '+' → logprob: -11.751848220825195
    8. ')' → logprob: -11.876848220825195
    9. '```' → logprob: -12.751848220825195
    10. '<|end|>' → logprob: -13.001848220825195

Token 322: ' Mult' (ID: 15431)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002120038407156244
    2. '#' → logprob: -8.500211715698242
    3. 'x' → logprob: -13.000211715698242
    4. ' s' → logprob: -13.125211715698242
    5. 'i' → logprob: -13.625211715698242
    6. '
' → logprob: -14.000211715698242
    7. 'print' → logprob: -14.500211715698242
    8. '100' → logprob: -15.500211715698242
    9. '

' → logprob: -15.625211715698242
    10. '5' → logprob: -15.625211715698242

Token 323: 'ipl' (ID: 7840)
  Prédit: 'ipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.0035751264076679945
    2. 'ip' → logprob: -6.128575325012207
    3. 'i' → logprob: -7.628575325012207
    4. 'pli' → logprob: -7.878575325012207
    5. 'pl' → logprob: -8.128575325012207
    6. 'plique' → logprob: -9.378575325012207
    7. 'iplier' → logprob: -10.503575325012207
    8. 'pie' → logprob: -10.753575325012207
    9. 'plies' → logprob: -11.003575325012207
    10. 'ipi' → logprob: -11.378575325012207

Token 324: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.4849976897239685
    2. 'ies' → logprob: -1.6099977493286133
    3. 'e' → logprob: -2.6099977493286133
    4. 'us' → logprob: -2.6099977493286133
    5. 's' → logprob: -3.8599977493286133
    6. 'u' → logprob: -5.734997749328613
    7. 'es' → logprob: -5.734997749328613
    8. 'uie' → logprob: -6.234997749328613
    9. 'i' → logprob: -6.484997749328613
    10. 'ue' → logprob: -6.859997749328613

Token 325: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7209791541099548
    2. ' x' → logprob: -0.7209791541099548
    3. 's' → logprob: -4.0959792137146
    4. ' s' → logprob: -4.5959792137146
    5. ''x' → logprob: -7.9709792137146
    6. '(x' → logprob: -9.345978736877441
    7. ' '' → logprob: -9.595978736877441
    8. ' ' → logprob: -9.720978736877441
    9. ''s' → logprob: -9.845978736877441
    10. '(s' → logprob: -10.220978736877441

Token 326: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011166313663125038
    2. ' x' → logprob: -4.636166095733643
    3. 's' → logprob: -6.636166095733643
    4. ' s' → logprob: -10.2611665725708
    5. '5' → logprob: -10.5111665725708
    6. '100' → logprob: -10.8861665725708
    7. ' ' → logprob: -11.3861665725708
    8. '500' → logprob: -13.6361665725708
    9. '(x' → logprob: -14.1361665725708
    10. ''x' → logprob: -14.6361665725708

Token 327: ''' (ID: 6)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02576974220573902
    2. '*' → logprob: -3.7757697105407715
    3. 's' → logprob: -6.1507697105407715
    4. ' s' → logprob: -8.27577018737793
    5. ')' → logprob: -9.65077018737793
    6. ' ' → logprob: -10.02577018737793
    7. ' ' → logprob: -12.40077018737793
    8. '100' → logprob: -12.52577018737793
    9. ' x' → logprob: -12.65077018737793
    10. '*s' → logprob: -12.90077018737793

Token 328: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24205969274044037
    2. '*' → logprob: -1.6170597076416016
    3. 's' → logprob: -4.242059707641602
    4. '100' → logprob: -6.867059707641602
    5. ' s' → logprob: -7.117059707641602
    6. ' ' → logprob: -8.742059707641602
    7. '*s' → logprob: -10.617059707641602
    8. ' x' → logprob: -10.742059707641602
    9. ' *=' → logprob: -11.617059707641602
    10. '=' → logprob: -11.742059707641602

Token 329: 'le' (ID: 282)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11927775293588638
    2. ' x' → logprob: -2.2442777156829834
    3. '100' → logprob: -5.9942779541015625
    4. 's' → logprob: -6.6192779541015625
    5. ' ' → logprob: -7.2442779541015625
    6. '500' → logprob: -7.4942779541015625
    7. '5' → logprob: -7.6192779541015625
    8. ' s' → logprob: -7.8692779541015625
    9. '250' → logprob: -8.994277954101562
    10. '50' → logprob: -9.744277954101562

Token 330: ' nombre' (ID: 9733)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9675301909446716
    2. ' ' → logprob: -1.3425302505493164
    3. 'x' → logprob: -1.8425302505493164
    4. '100' → logprob: -2.7175302505493164
    5. '5' → logprob: -2.9675302505493164
    6. ' s' → logprob: -3.2175302505493164
    7. 's' → logprob: -4.092530250549316
    8. '500' → logprob: -4.467530250549316
    9. '2' → logprob: -5.467530250549316
    10. '3' → logprob: -6.217530250549316

Token 331: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1850525289773941
    2. 's' → logprob: -2.8100526332855225
    3. ' *' → logprob: -2.9350526332855225
    4. ' ' → logprob: -4.185052394866943
    5. '*' → logprob: -4.435052394866943
    6. ')' → logprob: -4.685052394866943
    7. 'de' → logprob: -5.060052394866943
    8. '=' → logprob: -5.310052394866943
    9. ' =' → logprob: -6.060052394866943
    10. ' s' → logprob: -6.810052394866943

Token 332: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9787335991859436
    2. 'x' → logprob: -1.2287335395812988
    3. ' x' → logprob: -1.4787335395812988
    4. '100' → logprob: -3.103733539581299
    5. '5' → logprob: -3.853733539581299
    6. ' s' → logprob: -3.978733539581299
    7. '10' → logprob: -5.228733539581299
    8. 's' → logprob: -5.228733539581299
    9. '500' → logprob: -5.728733539581299
    10. '50' → logprob: -6.478733539581299

Token 333: ' où' (ID: 15113)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.006549596786499
    2. 's' → logprob: -1.881549596786499
    3. 'x' → logprob: -1.881549596786499
    4. ' x' → logprob: -2.381549596786499
    5. ' s' → logprob: -2.631549596786499
    6. ' ' → logprob: -2.631549596786499
    7. 'par' → logprob: -3.006549596786499
    8. ')' → logprob: -4.006549835205078
    9. '*' → logprob: -5.131549835205078
    10. '   ' → logprob: -5.506549835205078

Token 334: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5489435791969299
    2. ' ' → logprob: -1.0489435195922852
    3. 'x' → logprob: -3.298943519592285
    4. ' x' → logprob: -4.548943519592285
    5. 'i' → logprob: -4.798943519592285
    6. '100' → logprob: -5.048943519592285
    7. ' i' → logprob: -5.423943519592285
    8. '10' → logprob: -6.298943519592285
    9. '500' → logprob: -6.673943519592285
    10. 's' → logprob: -7.298943519592285

Token 335: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.057902462780475616
    2. ' ' → logprob: -3.3079025745391846
    3. 'x' → logprob: -4.3079023361206055
    4. 'i' → logprob: -5.9329023361206055
    5. '100' → logprob: -6.5579023361206055
    6. '500' → logprob: -7.4329023361206055
    7. ' x' → logprob: -7.5579023361206055
    8. '10' → logprob: -8.307902336120605
    9. ' i' → logprob: -8.432902336120605
    10. 's' → logprob: -8.807902336120605

Token 336: ' rent' (ID: 9462)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08195138722658157
    2. ' rent' → logprob: -2.956951379776001
    3. ')' → logprob: -4.20695161819458
    4. '*' → logprob: -4.58195161819458
    5. 'rent' → logprob: -7.33195161819458
    6. ' )' → logprob: -8.206951141357422
    7. 's' → logprob: -8.456951141357422
    8. ' s' → logprob: -9.081951141357422
    9. ')*' → logprob: -9.706951141357422
    10. ' ' → logprob: -9.706951141357422

Token 337: 're' (ID: 264)
  Prédit: ' rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rent' → logprob: -0.2913852334022522
    2. 'rent' → logprob: -1.5413851737976074
    3. 'entre' → logprob: -4.291385173797607
    4. 'ent' → logprob: -4.291385173797607
    5. ' entre' → logprob: -5.416385173797607
    6. ' ' → logprob: -5.791385173797607
    7. '   ' → logprob: -6.166385173797607
    8. 'entr' → logprob: -7.666385173797607
    9. 'entra' → logprob: -7.916385173797607
    10. '  ' → logprob: -9.166385650634766

Token 338: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.06271496415138245
    2. 'dans' → logprob: -2.8127150535583496
    3. ' ' → logprob: -8.312714576721191
    4. ' x' → logprob: -8.812714576721191
    5. 'x' → logprob: -9.062714576721191
    6. ' dedans' → logprob: -9.812714576721191
    7. 'Dans' → logprob: -10.062714576721191
    8. '  ' → logprob: -10.312714576721191
    9. ' par' → logprob: -10.437714576721191
    10. ' in' → logprob: -10.562714576721191

Token 339: ' le' (ID: 505)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.026418501511216164
    2. 'i' → logprob: -3.901418447494507
    3. ''' → logprob: -6.026418685913086
    4. ' '' → logprob: -6.526418685913086
    5. ' i' → logprob: -6.526418685913086
    6. ''x' → logprob: -8.276418685913086
    7. ''s' → logprob: -8.526418685913086
    8. 'x' → logprob: -10.651418685913086
    9. ' ' → logprob: -11.901418685913086
    10. ''l' → logprob: -12.026418685913086

Token 340: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005660117603838444
    2. 'x' → logprob: -6.130660057067871
    3. ' i' → logprob: -6.880660057067871
    4. '100' → logprob: -7.255660057067871
    5. ' ' → logprob: -7.380660057067871
    6. '500' → logprob: -7.505660057067871
    7. '5' → logprob: -8.130660057067871
    8. 's' → logprob: -8.380660057067871
    9. ' x' → logprob: -11.755660057067871
    10. '50' → logprob: -11.880660057067871

Token 341: ' de' (ID: 334)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6506142020225525
    2. ' de' → logprob: -0.7756142020225525
    3. 'dans' → logprob: -4.650614261627197
    4. ')' → logprob: -5.650614261627197
    5. ' i' → logprob: -6.650614261627197
    6. ' ' → logprob: -6.900614261627197
    7. 'i' → logprob: -7.400614261627197
    8. 'de' → logprob: -7.400614261627197
    9. ' d' → logprob: -8.150613784790039
    10. '   ' → logprob: -8.775613784790039

Token 342: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5976649522781372
    2. ''i' → logprob: -0.9726649522781372
    3. ' i' → logprob: -2.8476648330688477
    4. ' '' → logprob: -4.847664833068848
    5. ''' → logprob: -5.222664833068848
    6. ' ' → logprob: -7.972664833068848
    7. ''s' → logprob: -8.722664833068848
    8. ''x' → logprob: -10.222664833068848
    9. '   ' → logprob: -11.222664833068848
    10. '  ' → logprob: -11.347664833068848

Token 343: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002099773846566677
    2. ' i' → logprob: -8.75020980834961
    3. ''i' → logprob: -9.87520980834961
    4. ' ' → logprob: -17.37520980834961
    5. ''' → logprob: -17.37520980834961
    6. 'x' → logprob: -18.37520980834961
    7. '_i' → logprob: -18.37520980834961
    8. 's' → logprob: -18.37520980834961
    9. '	i' → logprob: -18.75020980834961
    10. '500' → logprob: -19.00020980834961

Token 344: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003728226525709033
    2. ' )' → logprob: -5.62872838973999
    3. '')' → logprob: -9.128727912902832
    4. '`)' → logprob: -11.378727912902832
    5. ')*' → logprob: -13.503727912902832
    6. '*)' → logprob: -13.628727912902832
    7. 's' → logprob: -13.628727912902832
    8. '*' → logprob: -13.878727912902832
    9. '")' → logprob: -14.003727912902832
    10. ' ' → logprob: -14.378727912902832

Token 345: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2819095849990845
    2. '*' → logprob: -1.4069095849990845
    3. 's' → logprob: -7.531909465789795
    4. ' s' → logprob: -8.781909942626953
    5. '*s' → logprob: -10.781909942626953
    6. '100' → logprob: -11.031909942626953
    7. ' +' → logprob: -12.156909942626953
    8. '#' → logprob: -12.281909942626953
    9. ' ' → logprob: -12.406909942626953
    10. ' =' → logprob: -12.531909942626953

Token 346: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01776156760752201
    2. '50' → logprob: -5.017761707305908
    3. '500' → logprob: -5.267761707305908
    4. '100' → logprob: -6.017761707305908
    5. '10' → logprob: -6.642761707305908
    6. '200' → logprob: -7.017761707305908
    7. '3' → logprob: -8.51776123046875
    8. '20' → logprob: -8.76776123046875
    9. '2' → logprob: -9.01776123046875
    10. '1' → logprob: -9.51776123046875

Token 347: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.13911105692386627
    2. '500' → logprob: -3.139111042022705
    3. '50' → logprob: -3.389111042022705
    4. '100' → logprob: -3.764111042022705
    5. '10' → logprob: -4.639111042022705
    6. '200' → logprob: -4.764111042022705
    7. '3' → logprob: -6.389111042022705
    8. '20' → logprob: -6.639111042022705
    9. '2' → logprob: -6.764111042022705
    10. '300' → logprob: -6.764111042022705

Token 348: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5657191872596741
    2. 's' → logprob: -1.4407191276550293
    3. ' *' → logprob: -1.6907191276550293
    4. '5' → logprob: -5.690719127655029
    5. 'x' → logprob: -5.690719127655029
    6. '*s' → logprob: -6.065719127655029
    7. ' s' → logprob: -6.940719127655029
    8. '100' → logprob: -8.440719604492188
    9. '0' → logprob: -8.815719604492188
    10. '*x' → logprob: -9.690719604492188

Token 349: ' puis' (ID: 18766)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11773060262203217
    2. ' s' → logprob: -2.4927306175231934
    3. 'x' → logprob: -4.742730617523193
    4. '5' → logprob: -4.867730617523193
    5. 'i' → logprob: -4.867730617523193
    6. ' ' → logprob: -6.617730617523193
    7. ' i' → logprob: -6.992730617523193
    8. '100' → logprob: -7.117730617523193
    9. ' x' → logprob: -7.617730617523193
    10. '#' → logprob: -7.742730617523193

Token 350: ' ajoute' (ID: 91611)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0341728925704956
    2. 's' → logprob: -1.6591728925704956
    3. ' ' → logprob: -1.6591728925704956
    4. ' s' → logprob: -2.034173011779785
    5. 'x' → logprob: -2.784173011779785
    6. ' x' → logprob: -3.284173011779785
    7. '5' → logprob: -3.784173011779785
    8. '10' → logprob: -5.784173011779785
    9. 'i' → logprob: -6.659173011779785
    10. ' i' → logprob: -6.784173011779785

Token 351: ' ce' (ID: 2357)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31388750672340393
    2. 'x' → logprob: -1.3138874769210815
    3. 's' → logprob: -7.813887596130371
    4. ' s' → logprob: -8.688887596130371
    5. '(x' → logprob: -10.563887596130371
    6. ' ' → logprob: -10.938887596130371
    7. '	x' → logprob: -13.188887596130371
    8. '0' → logprob: -13.313887596130371
    9. ' (' → logprob: -13.938887596130371
    10. '5' → logprob: -14.063887596130371

Token 352: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.891737699508667
    2. 'x' → logprob: -1.391737699508667
    3. ' x' → logprob: -1.766737699508667
    4. ' *' → logprob: -2.516737699508667
    5. ' s' → logprob: -2.641737699508667
    6. '*' → logprob: -4.266737937927246
    7. ' ' → logprob: -6.141737937927246
    8. '*x' → logprob: -7.141737937927246
    9. '(x' → logprob: -8.016737937927246
    10. '100' → logprob: -8.016737937927246

Token 353: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06543944031000137
    2. '*' → logprob: -3.315439462661743
    3. 's' → logprob: -3.690439462661743
    4. 'x' → logprob: -6.815439224243164
    5. '*x' → logprob: -8.315439224243164
    6. '<|end|>' → logprob: -8.565439224243164
    7. ' x' → logprob: -9.065439224243164
    8. ' +=' → logprob: -9.565439224243164
    9. '*s' → logprob: -9.565439224243164
    10. ' +' → logprob: -9.690439224243164

Token 354: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020640108734369278
    2. ' s' → logprob: -3.8956401348114014
    3. 'x' → logprob: -9.27064037322998
    4. 'i' → logprob: -13.77064037322998
    5. ' x' → logprob: -13.89564037322998
    6. '5' → logprob: -14.52064037322998
    7. ' ' → logprob: -14.77064037322998
    8. '	s' → logprob: -15.39564037322998
    9. '
' → logprob: -15.64564037322998
    10. ''s' → logprob: -16.020639419555664

Token 355: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006411355454474688
    2. ' s' → logprob: -5.256411552429199
    3. 'x' → logprob: -6.756411552429199
    4. '100' → logprob: -12.0064115524292
    5. ' x' → logprob: -12.5064115524292
    6. '5' → logprob: -13.8814115524292
    7. '500' → logprob: -14.5064115524292
    8. ' ' → logprob: -14.6314115524292
    9. 'i' → logprob: -15.0064115524292
    10. '	s' → logprob: -15.2564115524292

Token 356: ''.
' (ID: 49980)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08535120636224747
    2. ' *' → logprob: -3.7103512287139893
    3. ' s' → logprob: -3.8353512287139893
    4. '*' → logprob: -4.21035099029541
    5. '<|end|>' → logprob: -4.33535099029541
    6. '+' → logprob: -6.08535099029541
    7. ' +' → logprob: -6.21035099029541
    8. '*s' → logprob: -7.08535099029541
    9. ' ' → logprob: -7.21035099029541
    10. ' +=' → logprob: -7.33535099029541

Token 357: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024317861534655094
    2. 'x' → logprob: -6.252431869506836
    3. ' s' → logprob: -7.627431869506836
    4. '+' → logprob: -11.377431869506836
    5. '5' → logprob: -12.877431869506836
    6. ' x' → logprob: -13.627431869506836
    7. '+s' → logprob: -15.502431869506836
    8. '<|end|>' → logprob: -15.752431869506836
    9. '```' → logprob: -16.002431869506836
    10. '+x' → logprob: -16.127431869506836

Token 358: ' Ceci' (ID: 144699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.4987974029500037e-05
    2. ' s' → logprob: -10.625024795532227
    3. 'x' → logprob: -15.000024795532227
    4. '```' → logprob: -16.250024795532227
    5. '+' → logprob: -16.625024795532227
    6. '#' → logprob: -18.000024795532227
    7. '
' → logprob: -19.000024795532227
    8. '   ' → logprob: -19.250024795532227
    9. ' ' → logprob: -19.500024795532227
    10. '``' → logprob: -20.000024795532227

Token 359: ' équ' (ID: 18899)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012631841003894806
    2. '+=' → logprob: -4.887631893157959
    3. 's' → logprob: -5.387631893157959
    4. ' ' → logprob: -8.7626314163208
    5. ' s' → logprob: -9.1376314163208
    6. ' *=' → logprob: -9.7626314163208
    7. '=' → logprob: -10.8876314163208
    8. '+' → logprob: -11.0126314163208
    9. ' +' → logprob: -11.1376314163208
    10. ' =' → logprob: -11.1376314163208

Token 360: 'iv' (ID: 349)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6939052939414978
    2. '=' → logprob: -1.8189053535461426
    3. ' +=' → logprob: -1.8189053535461426
    4. 's' → logprob: -1.8189053535461426
    5. 'ale' → logprob: -5.693905353546143
    6. ' s' → logprob: -6.318905353546143
    7. ' =' → logprob: -6.443905353546143
    8. 'ivalent' → logprob: -6.818905353546143
    9. 'i' → logprob: -6.943905353546143
    10. 'al' → logprob: -7.068905353546143

Token 361: 'aut' (ID: 1828)
  Prédit: 'aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.6295807957649231
    2. 'a' → logprob: -1.7545807361602783
    3. 'al' → logprob: -1.7545807361602783
    4. 'ale' → logprob: -2.3795807361602783
    5. 'iv' → logprob: -4.129580974578857
    6. 'aux' → logprob: -4.754580974578857
    7. 'alt' → logprob: -7.129580974578857
    8. 'als' → logprob: -7.504580974578857
    9. '=' → logprob: -7.504580974578857
    10. 's' → logprob: -7.879580974578857

Token 362: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1136598587036133
    2. ' x' → logprob: -1.3636598587036133
    3. 'x' → logprob: -1.6136598587036133
    4. ' +=' → logprob: -1.9886598587036133
    5. ' s' → logprob: -3.1136598587036133
    6. '+' → logprob: -4.238659858703613
    7. ' à' → logprob: -5.238659858703613
    8. ' ' → logprob: -5.363659858703613
    9. ' +' → logprob: -5.738659858703613
    10. ' to' → logprob: -5.988659858703613

Token 363: ' donner' (ID: 32394)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03888886794447899
    2. ' x' → logprob: -3.288888931274414
    3. 's' → logprob: -7.163888931274414
    4. ' s' → logprob: -9.788888931274414
    5. '5' → logprob: -11.788888931274414
    6. ' ' → logprob: -12.663888931274414
    7. '+' → logprob: -13.038888931274414
    8. '(x' → logprob: -14.038888931274414
    9. '	x' → logprob: -14.163888931274414
    10. 'i' → logprob: -14.788888931274414

Token 364: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6932186484336853
    2. ' x' → logprob: -0.6932186484336853
    3. ' ' → logprob: -10.318218231201172
    4. 's' → logprob: -10.943218231201172
    5. '<|end|>' → logprob: -11.818218231201172
    6. ' s' → logprob: -12.943218231201172
    7. '+' → logprob: -12.943218231201172
    8. '(x' → logprob: -13.068218231201172
    9. '	x' → logprob: -13.443218231201172
    10. '5' → logprob: -13.568218231201172

Token 365: '5' (ID: 20)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010425841173855588
    2. ' x' → logprob: -10.125103950500488
    3. '5' → logprob: -10.250103950500488
    4. 's' → logprob: -10.625103950500488
    5. '100' → logprob: -13.500103950500488
    6. '50' → logprob: -14.375103950500488
    7. '+' → logprob: -14.750103950500488
    8. '(x' → logprob: -14.750103950500488
    9. '500' → logprob: -14.875103950500488
    10. 'i' → logprob: -15.125103950500488

Token 366: ' pour' (ID: 1930)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023789839819073677
    2. '*' → logprob: -3.773789882659912
    3. 's' → logprob: -8.398789405822754
    4. '<|end|>' → logprob: -8.398789405822754
    5. '*x' → logprob: -10.023789405822754
    6. ')' → logprob: -11.773789405822754
    7. 'x' → logprob: -12.023789405822754
    8. '*s' → logprob: -12.148789405822754
    9. '<|end|>' → logprob: -12.273789405822754
    10. ' ' → logprob: -12.273789405822754

Token 367: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020550651475787163
    2. ' x' → logprob: -3.8955507278442383
    3. 's' → logprob: -12.395550727844238
    4. ' ' → logprob: -12.770550727844238
    5. '(x' → logprob: -14.770550727844238
    6. '+' → logprob: -15.270550727844238
    7. ' s' → logprob: -15.520550727844238
    8. '5' → logprob: -15.895550727844238
    9. '	x' → logprob: -16.020549774169922
    10. '+x' → logprob: -16.145549774169922

Token 368: ' "' (ID: 392)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28136685490608215
    2. 'x' → logprob: -1.4063668251037598
    3. ' ' → logprob: -9.281367301940918
    4. '5' → logprob: -9.531367301940918
    5. 's' → logprob: -11.031367301940918
    6. ' s' → logprob: -11.656367301940918
    7. '*x' → logprob: -11.781367301940918
    8. ' *' → logprob: -12.656367301940918
    9. ' (' → logprob: -12.906367301940918
    10. '(x' → logprob: -12.906367301940918

Token 369: 'bil' (ID: 28766)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14342112839221954
    2. ' x' → logprob: -2.018421173095703
    3. ' ' → logprob: -7.518421173095703
    4. '5' → logprob: -9.393421173095703
    5. 's' → logprob: -9.518421173095703
    6. 'i' → logprob: -11.268421173095703
    7. ')' → logprob: -12.268421173095703
    8. ' s' → logprob: -12.268421173095703
    9. '*' → logprob: -12.393421173095703
    10. '(x' → logprob: -13.518421173095703

Token 370: 'let' (ID: 1347)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7665084600448608
    2. 'x' → logprob: -1.1415084600448608
    3. ' *' → logprob: -1.7665084600448608
    4. '*' → logprob: -3.6415085792541504
    5. 's' → logprob: -5.14150857925415
    6. ' ' → logprob: -5.39150857925415
    7. '  ' → logprob: -6.26650857925415
    8. '5' → logprob: -6.51650857925415
    9. '   ' → logprob: -6.64150857925415
    10. '*x' → logprob: -6.76650857925415

Token 371: '"' (ID: 1)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.030517831444740295
    2. 's' → logprob: -3.905517816543579
    3. '*' → logprob: -4.905518054962158
    4. ')' → logprob: -6.780518054962158
    5. '<|end|>' → logprob: -7.405518054962158
    6. ' +' → logprob: -8.155517578125
    7. ' ' → logprob: -9.655517578125
    8. ' s' → logprob: -9.780517578125
    9. ' )' → logprob: -9.905517578125
    10. ' +=' → logprob: -10.155517578125

Token 372: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5807955265045166
    2. ' *' → logprob: -0.8307955265045166
    3. 's' → logprob: -5.4557952880859375
    4. '+' → logprob: -8.455795288085938
    5. '*s' → logprob: -9.080795288085938
    6. ' +' → logprob: -9.205795288085938
    7. '<|end|>' → logprob: -10.080795288085938
    8. ' +=' → logprob: -10.330795288085938
    9. '#' → logprob: -11.205795288085938
    10. '*x' → logprob: -11.205795288085938

Token 373: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2830023467540741
    2. ' x' → logprob: -1.4080023765563965
    3. '5' → logprob: -6.7830023765563965
    4. ' ' → logprob: -7.2830023765563965
    5. '100' → logprob: -11.908001899719238
    6. '1' → logprob: -12.408001899719238
    7. 's' → logprob: -12.408001899719238
    8. '500' → logprob: -12.533001899719238
    9. '	x' → logprob: -12.908001899719238
    10. ' s' → logprob: -13.658001899719238

Token 374: '5' (ID: 20)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011099581606686115
    2. '100' → logprob: -5.136099815368652
    3. '5' → logprob: -5.761099815368652
    4. '10' → logprob: -7.636099815368652
    5. ' x' → logprob: -7.636099815368652
    6. '500' → logprob: -7.761099815368652
    7. '1' → logprob: -8.886099815368652
    8. '2' → logprob: -9.136099815368652
    9. '50' → logprob: -9.386099815368652
    10. '25' → logprob: -10.136099815368652

Token 375: ' extrait' (ID: 194006)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40703192353248596
    2. '*' → logprob: -1.1570318937301636
    3. ' *' → logprob: -4.032032012939453
    4. '*s' → logprob: -6.532032012939453
    5. 'x' → logprob: -7.907032012939453
    6. '*x' → logprob: -9.032032012939453
    7. ' s' → logprob: -9.157032012939453
    8. '+' → logprob: -9.782032012939453
    9. '
' → logprob: -10.157032012939453
    10. '<|end|>' → logprob: -11.032032012939453

Token 376: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007423263159580529
    2. 'x' → logprob: -8.375741958618164
    3. ' s' → logprob: -8.375741958618164
    4. '+' → logprob: -8.875741958618164
    5. '*' → logprob: -9.375741958618164
    6. '
' → logprob: -10.375741958618164
    7. '*s' → logprob: -11.875741958618164
    8. ' +' → logprob: -12.000741958618164
    9. '+s' → logprob: -12.875741958618164
    10. '(s' → logprob: -13.000741958618164

Token 377: ' reste' (ID: 26769)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.32346975803375244
    2. 'x' → logprob: -1.5734697580337524
    3. ' i' → logprob: -2.823469638824463
    4. 'i' → logprob: -5.323469638824463
    5. ' s' → logprob: -6.073469638824463
    6. ' ' → logprob: -6.323469638824463
    7. 's' → logprob: -8.073470115661621
    8. ' rest' → logprob: -9.698470115661621
    9. ' ' → logprob: -10.198470115661621
    10. ' montant' → logprob: -10.198470115661621

Token 378: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9494606256484985
    2. ' *' → logprob: -1.0744606256484985
    3. '*' → logprob: -1.3244606256484985
    4. ' s' → logprob: -6.449460506439209
    5. ' +' → logprob: -6.449460506439209
    6. '*s' → logprob: -7.074460506439209
    7. '+' → logprob: -7.199460506439209
    8. '<|end|>' → logprob: -8.574460983276367
    9. 'x' → logprob: -8.824460983276367
    10. ' ' → logprob: -8.949460983276367

Token 379: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003657362540252507
    2. 'x' → logprob: -8.7503662109375
    3. ' s' → logprob: -9.1253662109375
    4. '5' → logprob: -9.2503662109375
    5. '```' → logprob: -13.3753662109375
    6. '+' → logprob: -14.6253662109375
    7. '<|end|>' → logprob: -16.1253662109375
    8. ' ' → logprob: -17.1253662109375
    9. '_s' → logprob: -17.2503662109375
    10. '10' → logprob: -17.2503662109375

Token 380: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.575993001461029
    2. '+=' → logprob: -0.825993001461029
    3. '+' → logprob: -9.950992584228516
    4. '=' → logprob: -13.700992584228516
    5. '+=(' → logprob: -13.700992584228516
    6. ']+=' → logprob: -13.825992584228516
    7. '+='' → logprob: -14.075992584228516
    8. '+="' → logprob: -14.200992584228516
    9. ' +' → logprob: -14.325992584228516
    10. ' -=' → logprob: -15.200992584228516

Token 381: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006721298210322857
    2. ' x' → logprob: -5.006721496582031
    3. '5' → logprob: -12.131721496582031
    4. 's' → logprob: -15.256721496582031
    5. ' ' → logprob: -15.881721496582031
    6. '(x' → logprob: -16.63172149658203
    7. '	x' → logprob: -17.88172149658203
    8. '   ' → logprob: -18.38172149658203
    9. '0' → logprob: -19.88172149658203
    10. ' s' → logprob: -20.13172149658203

Token 382: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04859123006463051
    2. '*' → logprob: -3.048591136932373
    3. ' ' → logprob: -13.173591613769531
    4. '5' → logprob: -14.298591613769531
    5. '<|end|>' → logprob: -14.923591613769531
    6. ' ' → logprob: -15.173591613769531
    7. ' **' → logprob: -15.673591613769531
    8. '**' → logprob: -16.17359161376953
    9. 's' → logprob: -16.67359161376953
    10. '*object' → logprob: -17.29859161376953

Token 383: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002476724097505212
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.314976692199707
    4. '```' → logprob: -15.627476692199707
    5. '  ' → logprob: -15.689976692199707
    6. '50' → logprob: -16.627477645874023
    7. '500' → logprob: -16.939977645874023
    8. '10' → logprob: -17.064977645874023
    9. '25' → logprob: -17.252477645874023
    10. '۵' → logprob: -17.502477645874023

Token 384: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.250008583068848
    3. '25' → logprob: -13.750008583068848
    4. '10' → logprob: -14.125008583068848
    5. '500' → logprob: -14.625008583068848
    6. '50' → logprob: -14.750008583068848
    7. '1' → logprob: -15.250008583068848
    8. '100' → logprob: -16.00000762939453
    9. '3' → logprob: -16.87500762939453
    10. '۵' → logprob: -17.18750762939453

Token 385: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46696963906288147
    2. '<|end|>' → logprob: -1.091969609260559
    3. '\n' → logprob: -3.8419697284698486
    4. '#' → logprob: -4.4669694900512695
    5. '```' → logprob: -5.9669694900512695
    6. '
' → logprob: -7.8419694900512695
    7. '\' → logprob: -7.9669694900512695
    8. 'i' → logprob: -8.34196949005127
    9. '<|end|>' → logprob: -8.96696949005127
    10. '0' → logprob: -9.09196949005127

Token 387: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002585978072602302
    2. '#' → logprob: -8.875258445739746
    3. '<|end|>' → logprob: -10.250258445739746
    4. 'i' → logprob: -10.625258445739746
    5. '```' → logprob: -11.000258445739746
    6. '#print' → logprob: -11.125258445739746
    7. ' print' → logprob: -11.250258445739746
    8. '\n' → logprob: -12.750258445739746
    9. '
' → logprob: -13.000258445739746
    10. 's' → logprob: -13.375258445739746

Token 388: 'iche' (ID: 7509)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1083589568734169
    2. 'fic' → logprob: -2.358358860015869
    3. '#' → logprob: -4.858358860015869
    4. 'print' → logprob: -8.483359336853027
    5. 'iche' → logprob: -9.733359336853027
    6. 'fi' → logprob: -10.358359336853027
    7. 'ichage' → logprob: -11.233359336853027
    8. 'ich' → logprob: -11.358359336853027
    9. 'fix' → logprob: -12.233359336853027
    10. 'ic' → logprob: -12.233359336853027

Token 389: ' le' (ID: 505)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.015418751165270805
    2. '(' → logprob: -4.265418529510498
    3. 's' → logprob: -6.765418529510498
    4. 'print' → logprob: -9.390419006347656
    5. '()' → logprob: -12.140419006347656
    6. '(print' → logprob: -12.140419006347656
    7. '(
' → logprob: -12.640419006347656
    8. ')' → logprob: -13.390419006347656
    9. ' (' → logprob: -14.640419006347656
    10. 'a' → logprob: -14.765419006347656

Token 390: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03080088272690773
    2. '(s' → logprob: -3.5308008193969727
    3. '(' → logprob: -7.280800819396973
    4. ' s' → logprob: -8.655800819396973
    5. 'result' → logprob: -9.155800819396973
    6. 'value' → logprob: -10.655800819396973
    7. 'print' → logprob: -11.030800819396973
    8. ' résultat' → logprob: -11.405800819396973
    9. 'r' → logprob: -11.655800819396973
    10. ' (' → logprob: -12.155800819396973

Token 391: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '(print' → logprob: -14.375001907348633
    3. ' print' → logprob: -14.625001907348633
    4. '
' → logprob: -15.125001907348633
    5. '(' → logprob: -15.250001907348633
    6. ')
' → logprob: -17.375001907348633
    7. '```' → logprob: -17.750001907348633
    8. 's' → logprob: -17.750001907348633
    9. '.print' → logprob: -18.750001907348633
    10. '()
' → logprob: -19.000001907348633

Token 392: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.250000953674316
    3. ' print' → logprob: -14.750000953674316
    4. ')
' → logprob: -17.125001907348633
    5. '(print' → logprob: -17.375001907348633
    6. '```' → logprob: -18.000001907348633
    7. '.print' → logprob: -20.250001907348633
    8. '(' → logprob: -20.750001907348633
    9. ')' → logprob: -20.750001907348633
    10. '``' → logprob: -21.000001907348633

Token 393: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.22082117199897766
    2. 'print' → logprob: -2.4708211421966553
    3. 'e' → logprob: -2.8458211421966553
    4. '#' → logprob: -4.345821380615234
    5. 's' → logprob: -4.345821380615234
    6. 'er' → logprob: -4.845821380615234
    7. 'i' → logprob: -5.970821380615234
    8. 'ur' → logprob: -5.970821380615234
    9. 'isé' → logprob: -6.345821380615234
    10. 'es' → logprob: -6.345821380615234

Token 394: ' dans' (ID: 2671)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6850456595420837
    2. '(' → logprob: -1.4350457191467285
    3. 'print' → logprob: -1.5600457191467285
    4. '(print' → logprob: -3.0600457191467285
    5. 's' → logprob: -7.3100457191467285
    6. '()' → logprob: -10.18504524230957
    7. '(
' → logprob: -10.18504524230957
    8. ' print' → logprob: -11.06004524230957
    9. '#' → logprob: -11.31004524230957
    10. '("' → logprob: -11.93504524230957

Token 395: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005027152132242918
    2. 'print' → logprob: -5.8800272941589355
    3. '(s' → logprob: -6.1300272941589355
    4. ' s' → logprob: -10.380026817321777
    5. '(' → logprob: -11.380026817321777
    6. '`s' → logprob: -14.755026817321777
    7. ' print' → logprob: -15.380026817321777
    8. '```' → logprob: -16.005027770996094
    9. '(print' → logprob: -16.880027770996094
    10. ' (' → logprob: -17.880027770996094

Token 396: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00045247984235174954
    2. 'print' → logprob: -7.875452518463135
    3. ' s' → logprob: -9.625452041625977
    4. '(s' → logprob: -12.250452041625977
    5. 'str' → logprob: -14.000452041625977
    6. ')' → logprob: -15.625452041625977
    7. '`s' → logprob: -15.750452041625977
    8. ' print' → logprob: -16.000452041625977
    9. '```' → logprob: -16.000452041625977
    10. '(' → logprob: -17.000452041625977

Token 397: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7625584006309509
    2. '(' → logprob: -1.2625584602355957
    3. ')' → logprob: -1.6375584602355957
    4. 'print' → logprob: -3.3875584602355957
    5. '(s' → logprob: -3.8875584602355957
    6. '(print' → logprob: -6.762558460235596
    7. ' )' → logprob: -8.512557983398438
    8. 's' → logprob: -8.762557983398438
    9. '()
' → logprob: -9.012557983398438
    10. ',' → logprob: -9.387557983398438

Token 398: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -12.75000286102295
    3. ' print' → logprob: -15.12500286102295
    4. ')
' → logprob: -18.625003814697266
    5. '```' → logprob: -19.375003814697266
    6. '.print' → logprob: -20.000003814697266
    7. '(print' → logprob: -20.000003814697266
    8. ' 
' → logprob: -20.125003814697266
    9. '
' → logprob: -20.500003814697266
    10. 's' → logprob: -20.625003814697266

Token 399: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2729836106300354
    2. 'print' → logprob: -1.8979835510253906
    3. 'l' → logprob: -2.5229835510253906
    4. ' la' → logprob: -5.522983551025391
    5. 'a' → logprob: -7.022983551025391
    6. ' l' → logprob: -7.397983551025391
    7. '#' → logprob: -7.897983551025391
    8. 'é' → logprob: -8.14798355102539
    9. '```' → logprob: -8.39798355102539
    10. 'lace' → logprob: -8.64798355102539

Token 400: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33456408977508545
    2. 'print' → logprob: -1.3345640897750854
    3. 'e' → logprob: -4.959564208984375
    4. ''écran' → logprob: -5.334564208984375
    5. '#' → logprob: -5.459564208984375
    6. 'u' → logprob: -6.709564208984375
    7. 'é' → logprob: -7.459564208984375
    8. 'i' → logprob: -7.709564208984375
    9. ''aide' → logprob: -7.709564208984375
    10. 'r' → logprob: -8.334564208984375

Token 401: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.1557283111615106e-05
    2. '
' → logprob: -10.500041961669922
    3. ' print' → logprob: -11.250041961669922
    4. '```' → logprob: -14.375041961669922
    5. '(print' → logprob: -15.750041961669922
    6. ')
' → logprob: -16.125041961669922
    7. '.print' → logprob: -16.125041961669922
    8. '``' → logprob: -16.750041961669922
    9. '
' → logprob: -17.000041961669922
    10. ' 
' → logprob: -18.000041961669922

Token 402: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.0
    3. '```' → logprob: -21.0
    4. '
' → logprob: -22.25
    5. 'pr' → logprob: -24.375
    6. 'prin' → logprob: -24.875
    7. '(print' → logprob: -25.375
    8. 'prints' → logprob: -26.0
    9. '.print' → logprob: -26.25
    10. 'p' → logprob: -26.5

Token 403: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '```' → logprob: -20.5
    4. 'pr' → logprob: -23.875
    5. 'prin' → logprob: -25.0
    6. 'p' → logprob: -25.0
    7. '#print' → logprob: -25.125
    8. '
' → logprob: -26.25
    9. 'println' → logprob: -27.0
    10. '.print' → logprob: -27.25

Token 404: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021152703266125172
    2. ' print' → logprob: -8.500211715698242
    3. 'p' → logprob: -11.875211715698242
    4. 'pr' → logprob: -13.875211715698242
    5. 'prin' → logprob: -15.750211715698242
    6. '.print' → logprob: -17.875211715698242
    7. 'Print' → logprob: -18.375211715698242
    8. '
' → logprob: -19.250211715698242
    9. '#print' → logprob: -19.250211715698242
    10. '```' → logprob: -19.875211715698242

Token 405: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. '#print' → logprob: -21.500003814697266
    4. '(print' → logprob: -23.000003814697266
    5. '.print' → logprob: -23.500003814697266
    6. '```' → logprob: -23.875003814697266
    7. 'printf' → logprob: -25.250003814697266
    8. 'pr' → logprob: -25.250003814697266
    9. 'println' → logprob: -25.500003814697266
    10. '_print' → logprob: -25.500003814697266

Token 406: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5776457190513611
    2. '(s' → logprob: -0.8276457190513611
    3. '()' → logprob: -6.452645778656006
    4. 's' → logprob: -9.077645301818848
    5. '('' → logprob: -12.202645301818848
    6. '(
' → logprob: -12.952645301818848
    7. ')' → logprob: -13.452645301818848
    8. '(print' → logprob: -13.452645301818848
    9. ' (' → logprob: -13.702645301818848
    10. '(

' → logprob: -14.077645301818848

Token 407: ' affiche' (ID: 127479)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.023456968367099762
    2. '(' → logprob: -3.7734570503234863
    3. '(print' → logprob: -9.148456573486328
    4. '()' → logprob: -9.648456573486328
    5. 's' → logprob: -10.398456573486328
    6. 'print' → logprob: -12.023456573486328
    7. ' (' → logprob: -13.023456573486328
    8. ')' → logprob: -13.898456573486328
    9. '(`' → logprob: -15.148456573486328
    10. '('' → logprob: -15.773456573486328

Token 408: ' des' (ID: 731)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00032044618274085224
    2. 's' → logprob: -8.625320434570312
    3. '(' → logprob: -8.875320434570312
    4. '()' → logprob: -14.000320434570312
    5. ' (' → logprob: -16.375320434570312
    6. '('' → logprob: -19.000320434570312
    7. '(
' → logprob: -19.125320434570312
    8. ')' → logprob: -19.500320434570312
    9. 'a' → logprob: -19.625320434570312
    10. 'print' → logprob: -19.750320434570312

Token 409: ' données' (ID: 30580)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.23087197542190552
    2. 's' → logprob: -1.7308719158172607
    3. '(' → logprob: -3.6058719158172607
    4. 'val' → logprob: -7.23087215423584
    5. '()' → logprob: -7.35587215423584
    6. 'la' → logprob: -8.10587215423584
    7. ')' → logprob: -9.10587215423584
    8. 'l' → logprob: -10.60587215423584
    9. '("' → logprob: -11.60587215423584
    10. '('' → logprob: -11.60587215423584

Token 410: ' à' (ID: 1221)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003687959397211671
    2. '(' → logprob: -5.628687858581543
    3. '()' → logprob: -9.628687858581543
    4. 's' → logprob: -11.128687858581543
    5. ' (' → logprob: -11.878687858581543
    6. '(print' → logprob: -16.25368881225586
    7. ')' → logprob: -16.75368881225586
    8. '(
' → logprob: -17.00368881225586
    9. '('' → logprob: -17.37868881225586
    10. '(`' → logprob: -17.37868881225586

Token 411: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05718366429209709
    2. 'la' → logprob: -3.3071837425231934
    3. ' l' → logprob: -4.307183742523193
    4. 's' → logprob: -6.307183742523193
    5. 'à' → logprob: -6.307183742523193
    6. 'print' → logprob: -7.557183742523193
    7. 'console' → logprob: -8.307183265686035
    8. 'screen' → logprob: -8.307183265686035
    9. 'a' → logprob: -8.432183265686035
    10. ' la' → logprob: -8.807183265686035

Token 412: ''écran' (ID: 147901)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1521587371826172
    2. ''écran' → logprob: -2.902158737182617
    3. 'à' → logprob: -3.152158737182617
    4. 'é' → logprob: -3.402158737182617
    5. ' l' → logprob: -5.402158737182617
    6. 'la' → logprob: -6.527158737182617
    7. 'console' → logprob: -6.777158737182617
    8. '’écran' → logprob: -6.777158737182617
    9. 'a' → logprob: -7.652158737182617
    10. ' écran' → logprob: -7.902158737182617

Token 413: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5558924078941345
    2. '(s' → logprob: -1.0558924674987793
    3. '(' → logprob: -3.4308924674987793
    4. '()' → logprob: -3.8058924674987793
    5. '(print' → logprob: -4.430892467498779
    6. 's' → logprob: -4.930892467498779
    7. '()
' → logprob: -5.680892467498779
    8. '(
' → logprob: -6.680892467498779
    9. ' print' → logprob: -9.180891990661621
    10. ')' → logprob: -10.430891990661621

Token 414: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' print' → logprob: -17.25
    4. '
' → logprob: -18.875
    5. 's' → logprob: -19.375
    6. 'pr' → logprob: -21.375
    7. '(print' → logprob: -21.625
    8. '``' → logprob: -22.0
    9. 'p' → logprob: -22.5
    10. 'prin' → logprob: -22.75

Token 415: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011074705049395561
    2. '(' → logprob: -4.511074542999268
    3. 's' → logprob: -10.886075019836426
    4. '()' → logprob: -12.136075019836426
    5. ' (' → logprob: -12.886075019836426
    6. '(
' → logprob: -16.26107406616211
    7. '('' → logprob: -16.38607406616211
    8. '(S' → logprob: -16.38607406616211
    9. '((' → logprob: -17.76107406616211
    10. '(x' → logprob: -18.13607406616211

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.750000953674316
    3. '))' → logprob: -17.250001907348633
    4. ')`' → logprob: -17.500001907348633
    5. '()' → logprob: -18.125001907348633
    6. ')
' → logprob: -18.125001907348633
    7. ')#' → logprob: -18.250001907348633
    8. '())' → logprob: -18.500001907348633
    9. '')' → logprob: -19.375001907348633
    10. '+' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 414
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 228
Précision stricte (1ère position): 25.85%
Précision adaptée (1ère position): 25.85%
Précision (top 10): 55.07%
================================================================================
