================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def to_rot(t):
    return t[-1] + t[:-1]

class Checker:
    def __init__(self, s, t):
        self.s, self.t = s, t

    def check(self):
        n = len(self.t)
        k = 0
        while k < n:
            self.t = to_rot(self.t)
            if self.s == self.t:
                return True
            k += 1
        return False

main_func = lambda: print('Yes' if Checker(*(input(),input())).check() else 'No')

if __name__=='__main__':
    main_func()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_rot' (ID: 90451)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.0167874526232481
    2. '_lower' → logprob: -5.141787528991699
    3. '_' → logprob: -5.391787528991699
    4. '_upper' → logprob: -6.266787528991699
    5. '_import' → logprob: -7.516787528991699
    6. ' ' → logprob: -7.516787528991699
    7. 'kens' → logprob: -8.0167875289917
    8. '_str' → logprob: -8.0167875289917
    9. 'lower' → logprob: -8.1417875289917
    10. '_print' → logprob: -8.3917875289917

Token 6: '(t' (ID: 2025)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '13' → logprob: -0.5760008096694946
    2. '_' → logprob: -0.8260008096694946
    3. '-' → logprob: -10.951001167297363
    4. 'ate' → logprob: -11.451001167297363
    5. '1' → logprob: -11.701001167297363
    6. '__' → logprob: -12.076001167297363
    7. '2' → logprob: -12.451001167297363
    8. '_string' → logprob: -12.701001167297363
    9. '```' → logprob: -13.201001167297363
    10. '_cipher' → logprob: -13.576001167297363

Token 7: '):
' (ID: 1883)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18198919296264648
    2. 'o' → logprob: -2.8069891929626465
    3. 'ate' → logprob: -3.9319891929626465
    4. 'ext' → logprob: -3.9319891929626465
    5. 'e' → logprob: -4.1819891929626465
    6. ')' → logprob: -4.5569891929626465
    7. 'r' → logprob: -5.0569891929626465
    8. '_' → logprob: -5.0569891929626465
    9. ':' → logprob: -5.6819891929626465
    10. ',' → logprob: -5.9319891929626465

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7715718150138855
    2. '   ' → logprob: -1.6465718746185303
    3. ' return' → logprob: -1.7715718746185303
    4. ' t' → logprob: -3.7715718746185303
    5. ' i' → logprob: -3.8965718746185303
    6. ' r' → logprob: -4.146571636199951
    7. ' s' → logprob: -4.271571636199951
    8. 'r' → logprob: -4.271571636199951
    9. ' if' → logprob: -4.396571636199951
    10. 'eturn' → logprob: -4.521571636199951

Token 9: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6607285737991333
    2. 't' → logprob: -1.9107285737991333
    3. 'r' → logprob: -2.1607284545898438
    4. ' return' → logprob: -2.4107284545898438
    5. ' s' → logprob: -2.6607284545898438
    6. 'return' (adapté à ' return') → logprob: -2.7857284545898438
    7. ' ' → logprob: -3.0357284545898438
    8. ' t' → logprob: -3.2857284545898438
    9. '   ' → logprob: -3.5357284545898438
    10. 'eturn' → logprob: -3.7857284545898438

Token 10: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.47740638256073
    2. ' chr' → logprob: -2.6024065017700195
    3. 'chr' → logprob: -2.8524065017700195
    4. '(t' → logprob: -3.1024065017700195
    5. ' ''.' → logprob: -3.2274065017700195
    6. 't' → logprob: -3.3524065017700195
    7. ' (' → logprob: -3.4774065017700195
    8. ' ord' → logprob: -3.4774065017700195
    9. ' str' → logprob: -4.1024065017700195
    10. ' ' → logprob: -4.6024065017700195

Token 11: '[-' (ID: 17503)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0068347454071045
    2. 'o' → logprob: -1.2568347454071045
    3. '[' → logprob: -1.6318347454071045
    4. '+' → logprob: -3.5068347454071045
    5. ',' → logprob: -3.5068347454071045
    6. 'oken' → logprob: -4.006834983825684
    7. 'okens' → logprob: -4.756834983825684
    8. '(' → logprob: -5.006834983825684
    9. '#' → logprob: -5.381834983825684
    10. '.upper' → logprob: -5.506834983825684

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012997613521292806
    2. '2' → logprob: -6.751299858093262
    3. '3' → logprob: -9.251299858093262
    4. '4' → logprob: -11.376299858093262
    5. '5' → logprob: -11.751299858093262
    6. '10' → logprob: -12.126299858093262
    7. '-' → logprob: -12.376299858093262
    8. '6' → logprob: -14.188799858093262
    9. 'k' → logprob: -14.313799858093262
    10. '7' → logprob: -15.001299858093262

Token 13: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054817166179418564
    2. ']+' → logprob: -3.4298171997070312
    3. ':]' → logprob: -3.9298171997070312
    4. ':' → logprob: -6.804817199707031
    5. '+' → logprob: -9.054817199707031
    6. ' ]' → logprob: -10.179817199707031
    7. ' :]' → logprob: -11.679817199707031
    8. '+]' → logprob: -12.304817199707031
    9. '])' → logprob: -12.429817199707031
    10. '%' → logprob: -12.429817199707031

Token 14: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04982832446694374
    2. 'ot' → logprob: -3.924828290939331
    3. ' +' → logprob: -4.79982852935791
    4. 'otation' → logprob: -4.92482852935791
    5. '+t' → logprob: -5.67482852935791
    6. 'otate' → logprob: -5.92482852935791
    7. 't' → logprob: -6.17482852935791
    8. 'o' → logprob: -6.54982852935791
    9. ':' → logprob: -7.17482852935791
    10. ')' → logprob: -7.67482852935791

Token 15: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018151700496673584
    2. ' t' → logprob: -4.018151760101318
    3. 'to' → logprob: -13.76815128326416
    4. ' ' → logprob: -14.51815128326416
    5. ' to' → logprob: -15.89315128326416
    6. '`t' → logprob: -16.893152236938477
    7. '	t' → logprob: -17.018152236938477
    8. '   ' → logprob: -17.268152236938477
    9. '  ' → logprob: -17.643152236938477
    10. '(t' → logprob: -17.893152236938477

Token 16: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.08898352831602097
    2. '[' → logprob: -2.4639835357666016
    3. '[:' → logprob: -10.338983535766602
    4. '1' → logprob: -11.838983535766602
    5. '[:]' → logprob: -13.213983535766602
    6. '```' → logprob: -14.088983535766602
    7. ':' → logprob: -14.213983535766602
    8. '[]' → logprob: -15.713983535766602
    9. '(' → logprob: -15.838983535766602
    10. ' [' → logprob: -15.963983535766602

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -17.125
    4. '```' → logprob: -17.375
    5. '0' → logprob: -17.625
    6. '11' → logprob: -17.8125
    7. '' → logprob: -18.0
    8. '   ' → logprob: -18.125
    9. '１' → logprob: -18.1875
    10. '-' → logprob: -18.3125

Token 18: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.0
    4. '）' → logprob: -16.625
    5. ']' → logprob: -17.125
    6. '}' → logprob: -17.375
    7. '')' → logprob: -17.875
    8. ')return' → logprob: -18.125
    9. ')`' → logprob: -18.25
    10. ')t' → logprob: -18.25

Token 19: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8464011549949646
    2. '\n' → logprob: -1.3464012145996094
    3. ')' → logprob: -2.4714012145996094
    4. 'def' → logprob: -2.8464012145996094
    5. '
' → logprob: -3.0964012145996094
    6. '```' → logprob: -3.8464012145996094
    7. '(
' → logprob: -4.221401214599609
    8. 't' → logprob: -4.471401214599609
    9. '<|end|>' → logprob: -4.471401214599609
    10. '\' → logprob: -4.721401214599609

Token 20: ' Checker' (ID: 148392)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.14656096696853638
    2. ' Solution' → logprob: -4.021561145782471
    3. ' Rot' → logprob: -4.021561145782471
    4. ' String' → logprob: -4.396561145782471
    5. ' ' → logprob: -4.646561145782471
    6. ' Cipher' → logprob: -4.771561145782471
    7. ' R' → logprob: -4.896561145782471
    8. ' Foo' → logprob: -5.146561145782471
    9. ' Text' → logprob: -5.396561145782471
    10. ' Rope' → logprob: -5.646561145782471

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013820252381265163
    2. '(' → logprob: -4.388820171356201
    3. '(:' → logprob: -7.013820171356201
    4. '():' → logprob: -9.88882064819336
    5. '```' → logprob: -9.88882064819336
    6. ' :' → logprob: -10.13882064819336
    7. '>:' → logprob: -10.13882064819336
    8. ':**' → logprob: -10.38882064819336
    9. '):' → logprob: -10.51382064819336
    10. ':
' → logprob: -10.63882064819336

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2874472141265869
    2. '    ' → logprob: -2.162447214126587
    3. ' 
' → logprob: -3.037447214126587
    4. '   ' → logprob: -3.662447214126587
    5. '    
' → logprob: -4.037446975708008
    6. '<|end|>' → logprob: -4.162446975708008
    7. ' def' → logprob: -4.287446975708008
    8. '     
' → logprob: -5.162446975708008
    9. 'def' → logprob: -6.162446975708008
    10. '  
' → logprob: -6.912446975708008

Token 23: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01455632783472538
    2. 'def' (adapté à ' def') → logprob: -4.764556407928467
    3. '   ' → logprob: -5.389556407928467
    4. '    ' → logprob: -7.389556407928467
    5. ' ' → logprob: -7.764556407928467
    6. ' 
' → logprob: -9.139555931091309
    7. ' ```' → logprob: -10.139555931091309
    8. '```' → logprob: -10.389555931091309
    9. '    
' → logprob: -10.514555931091309
    10. ' __' → logprob: -11.014555931091309

Token 24: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14033347368240356
    2. ' init' → logprob: -2.765333414077759
    3. ' ' → logprob: -3.140333414077759
    4. ' check' → logprob: -4.515333652496338
    5. ' _' → logprob: -4.765333652496338
    6. '_' → logprob: -6.265333652496338
    7. '__' → logprob: -6.890333652496338
    8. 'init' → logprob: -7.015333652496338
    9. '_init' → logprob: -7.140333652496338
    10. ' ```' → logprob: -9.89033317565918

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.133198283147067e-05
    2. 'ini' → logprob: -10.000051498413086
    3. 'in' → logprob: -12.375051498413086
    4. 'i' → logprob: -13.750051498413086
    5. ' init' → logprob: -14.875051498413086
    6. 'int' → logprob: -16.500051498413086
    7. 'innit' → logprob: -16.750051498413086
    8. 'inti' → logprob: -17.250051498413086
    9. 'inite' → logprob: -17.375051498413086
    10. 'initi' → logprob: -18.000051498413086

Token 26: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02327948994934559
    2. '__' → logprob: -3.7732794284820557
    3. '__((' → logprob: -11.148279190063477
    4. '__(
' → logprob: -11.148279190063477
    5. '__('' → logprob: -12.648279190063477
    6. '__(*' → logprob: -14.148279190063477
    7. '___' → logprob: -14.648279190063477
    8. '__.__' → logprob: -14.898279190063477
    9. '__("' → logprob: -15.398279190063477
    10. '(self' → logprob: -16.148279190063477

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004090393427759409
    2. ' self' → logprob: -5.504090309143066
    3. ')' → logprob: -11.629090309143066
    4. ' ' → logprob: -13.754090309143066
    5. '0' → logprob: -14.254090309143066
    6. 's' → logprob: -15.254090309143066
    7. '   ' → logprob: -15.504090309143066
    8. '(self' → logprob: -15.629090309143066
    9. 'elf' → logprob: -15.879090309143066
    10. ' )' → logprob: -16.129091262817383

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04048382118344307
    2. ' ,' → logprob: -3.4154837131500244
    3. 'self' → logprob: -5.2904839515686035
    4. ',self' → logprob: -6.5404839515686035
    5. ' self' → logprob: -8.915483474731445
    6. ')' → logprob: -9.415483474731445
    7. '<|end|>' → logprob: -10.665483474731445
    8. '(self' → logprob: -10.790483474731445
    9. '_,' → logprob: -10.915483474731445
    10. '_self' → logprob: -11.665483474731445

Token 29: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48484429717063904
    2. ' self' → logprob: -1.1098443269729614
    3. 'text' → logprob: -3.734844207763672
    4. ' text' → logprob: -4.234844207763672
    5. 's' → logprob: -5.359844207763672
    6. ' s' → logprob: -5.734844207763672
    7. ' word' → logprob: -6.359844207763672
    8. '   ' → logprob: -7.109844207763672
    9. 'word' → logprob: -7.234844207763672
    10. ' input' → logprob: -7.484844207763672

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002831030637025833
    2. ')' → logprob: -6.127830982208252
    3. ' ):' → logprob: -8.37783145904541
    4. ':' → logprob: -8.50283145904541
    5. '):
' → logprob: -9.37783145904541
    6. '=' → logprob: -9.62783145904541
    7. '):
' → logprob: -11.50283145904541
    8. '   ' → logprob: -11.75283145904541
    9. ',' → logprob: -11.75283145904541
    10. 'e' → logprob: -12.62783145904541

Token 31: ' t' (ID: 260)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3471958637237549
    2. ' t' → logprob: -1.4721958637237549
    3. ' k' → logprob: -1.8471958637237549
    4. ' shift' → logprob: -2.347195863723755
    5. ' offset' → logprob: -3.597195863723755
    6. ' rot' → logprob: -3.847195863723755
    7. ' s' → logprob: -3.972195863723755
    8. ' target' → logprob: -4.222195625305176
    9. ' r' → logprob: -4.347195625305176
    10. ' key' → logprob: -4.347195625305176

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013097751885652542
    2. ')' → logprob: -4.388097763061523
    3. ',' → logprob: -7.513097763061523
    4. ':' → logprob: -11.013097763061523
    5. ' ):' → logprob: -11.263097763061523
    6. '):
' → logprob: -11.763097763061523
    7. ' ' → logprob: -14.013097763061523
    8. '=' → logprob: -14.263097763061523
    9. '),' → logprob: -14.513097763061523
    10. ' )' → logprob: -14.763097763061523

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024165611248463392
    2. ':' → logprob: -6.752416610717773
    3. '   ' → logprob: -8.127416610717773
    4. '<|end|>' → logprob: -8.502416610717773
    5. '
' → logprob: -8.752416610717773
    6. ' ' → logprob: -8.752416610717773
    7. '    ' → logprob: -9.002416610717773
    8. '        
' → logprob: -9.752416610717773
    9. '      ' → logprob: -10.002416610717773
    10. ')' → logprob: -10.252416610717773

Token 34: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2823405861854553
    2. 'self' (adapté à ' self') → logprob: -1.7823405265808105
    3. '       ' → logprob: -2.6573405265808105
    4. ' ' → logprob: -5.5323405265808105
    5. '        ' → logprob: -6.1573405265808105
    6. ' s' → logprob: -7.6573405265808105
    7. 's' → logprob: -8.032341003417969
    8. '   ' → logprob: -8.407341003417969
    9. '    ' → logprob: -8.532341003417969
    10. ' ' → logprob: -9.032341003417969

Token 35: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18044185638427734
    2. '.s' → logprob: -1.8054418563842773
    3. ' .' → logprob: -7.430441856384277
    4. 's' → logprob: -9.555441856384277
    5. ' ' → logprob: -11.430441856384277
    6. ' s' → logprob: -12.555441856384277
    7. '.status' → logprob: -12.930441856384277
    8. '   ' → logprob: -13.305441856384277
    9. '.t' → logprob: -13.805441856384277
    10. '._' → logprob: -13.930441856384277

Token 36: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10296130180358887
    2. '=' → logprob: -2.352961301803589
    3. ',' → logprob: -6.102961540222168
    4. '_' → logprob: -9.102961540222168
    5. '.' → logprob: -9.602961540222168
    6. ' ,' → logprob: -9.727961540222168
    7. ' ==' → logprob: -9.852961540222168
    8. ' +=' → logprob: -9.977961540222168
    9. '[' → logprob: -10.602961540222168
    10. ')' → logprob: -10.727961540222168

Token 37: ' self' (ID: 1051)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.03932288661599159
    2. 't' → logprob: -4.039322853088379
    3. ' ' → logprob: -4.164322853088379
    4. ' ' → logprob: -5.914322853088379
    5. 'self' → logprob: -6.914322853088379
    6. '<|end|>' → logprob: -7.664322853088379
    7. ' s' → logprob: -7.789322853088379
    8. ' self' → logprob: -7.789322853088379
    9. 's' → logprob: -8.164322853088379
    10. ' =' → logprob: -10.914322853088379

Token 38: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.04579893499612808
    2. '.' → logprob: -3.1707990169525146
    3. 't' → logprob: -6.0457987785339355
    4. '.s' → logprob: -7.9207987785339355
    5. 's' → logprob: -11.920799255371094
    6. '.=' → logprob: -11.920799255371094
    7. '=' → logprob: -11.920799255371094
    8. ' .' → logprob: -12.045799255371094
    9. '<|end|>' → logprob: -12.170799255371094
    10. ' =' → logprob: -12.295799255371094

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868730664253235
    2. '=' → logprob: -1.1368730068206787
    3. '=s' → logprob: -13.511873245239258
    4. ' ' → logprob: -15.136873245239258
    5. '<|end|>' → logprob: -16.011873245239258
    6. '  ' → logprob: -16.761873245239258
    7. ')' → logprob: -17.011873245239258
    8. 's' → logprob: -17.261873245239258
    9. ',' → logprob: -17.386873245239258
    10. '＝' → logprob: -17.636873245239258

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.474078893661499
    2. 's' → logprob: -0.974078893661499
    3. ' ' → logprob: -14.599079132080078
    4. '    ' → logprob: -14.849079132080078
    5. '(s' → logprob: -14.974079132080078
    6. '	s' → logprob: -15.724079132080078
    7. ' ' → logprob: -15.974079132080078
    8. '<|end|>' → logprob: -16.224079132080078
    9. '_s' → logprob: -16.474079132080078
    10. '   ' → logprob: -16.724079132080078

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09950598329305649
    2. '<|end|>' → logprob: -2.47450590133667
    3. '<|end|>' → logprob: -5.34950590133667
    4. ' ' → logprob: -6.47450590133667
    5. '
' → logprob: -6.47450590133667
    6. '[:]' → logprob: -7.84950590133667
    7. ' ,' → logprob: -8.349506378173828
    8. '[' → logprob: -8.349506378173828
    9. '[:' → logprob: -8.349506378173828
    10. 't' → logprob: -8.474506378173828

Token 42: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1131928339600563
    2. 't' → logprob: -2.2381927967071533
    3. ' ' → logprob: -7.988193035125732
    4. ' ' → logprob: -10.738192558288574
    5. 'space' → logprob: -13.238192558288574
    6. 'to' → logprob: -13.613192558288574
    7. 's' → logprob: -13.738192558288574
    8. ' to' → logprob: -14.238192558288574
    9. '	t' → logprob: -14.363192558288574
    10. ' ​' → logprob: -14.363192558288574

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11268587410449982
    2. '   ' → logprob: -3.1126859188079834
    3. '    
' → logprob: -3.4876859188079834
    4. '<|end|>' → logprob: -3.7376859188079834
    5. ' 
' → logprob: -6.612685680389404
    6. '       ' → logprob: -6.612685680389404
    7. '  
' → logprob: -6.737685680389404
    8. '

' → logprob: -7.112685680389404
    9. '<|end|>' → logprob: -7.112685680389404
    10. 'def' → logprob: -7.487685680389404

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011208862997591496
    2. '   ' → logprob: -5.511209011077881
    3. '<|end|>' → logprob: -5.511209011077881
    4. '    
' → logprob: -7.011209011077881
    5. 'def' → logprob: -7.136209011077881
    6. '

' → logprob: -8.011208534240723
    7. '<|end|>' → logprob: -8.011208534240723
    8. ' def' → logprob: -8.261208534240723
    9. '  
' → logprob: -8.511208534240723
    10. ' 
' → logprob: -9.011208534240723

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0237492136657238
    2. ' def' → logprob: -3.7737491130828857
    3. '   ' → logprob: -7.648749351501465
    4. ' ' → logprob: -11.023749351501465
    5. 'de' → logprob: -12.523749351501465
    6. '	def' → logprob: -12.898749351501465
    7. 'd' → logprob: -13.148749351501465
    8. '    ' → logprob: -14.398749351501465
    9. '```' → logprob: -15.023749351501465
    10. '       ' → logprob: -15.023749351501465

Token 46: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.03145017847418785
    2. 'check' → logprob: -3.7814502716064453
    3. ' is' → logprob: -5.531450271606445
    4. ' def' → logprob: -5.781450271606445
    5. ' verify' → logprob: -8.906450271606445
    6. ' validate' → logprob: -8.906450271606445
    7. '_check' → logprob: -8.906450271606445
    8. 'def' → logprob: -9.156450271606445
    9. ' match' → logprob: -9.531450271606445
    10. ' to' → logprob: -9.656450271606445

Token 47: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07141050696372986
    2. '(' → logprob: -2.6964104175567627
    3. '_' → logprob: -7.321410655975342
    4. '(s' → logprob: -9.196410179138184
    5. '()' → logprob: -9.571410179138184
    6. '(t' → logprob: -9.696410179138184
    7. 'self' → logprob: -9.946410179138184
    8. '_(' → logprob: -10.071410179138184
    9. '():' → logprob: -10.071410179138184
    10. '```' → logprob: -10.071410179138184

Token 48: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7246159911155701
    2. '):' → logprob: -0.7246159911155701
    3. ' ,' → logprob: -3.974616050720215
    4. ' ):' → logprob: -5.599616050720215
    5. ')' → logprob: -5.724616050720215
    6. 's' → logprob: -5.974616050720215
    7. '(' → logprob: -7.724616050720215
    8. 'self' → logprob: -7.724616050720215
    9. '):
' → logprob: -8.349616050720215
    10. ',t' → logprob: -8.599616050720215

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025664713233709335
    2. ' for' → logprob: -4.025664806365967
    3. 'for' → logprob: -5.900664806365967
    4. ' return' → logprob: -6.150664806365967
    5. 'return' → logprob: -6.400664806365967
    6. ' if' → logprob: -7.400664806365967
    7. 'if' → logprob: -8.150664329528809
    8. '   ' → logprob: -10.525664329528809
    9. '    ' → logprob: -12.150664329528809
    10. '      ' → logprob: -12.275664329528809

Token 50: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47983747720718384
    2. 'for' → logprob: -1.229837417602539
    3. ' return' → logprob: -3.104837417602539
    4. 'return' → logprob: -3.354837417602539
    5. '       ' → logprob: -5.104837417602539
    6. ' if' → logprob: -6.479837417602539
    7. 'if' → logprob: -6.604837417602539
    8. '   ' → logprob: -9.979837417602539
    9. ' s' → logprob: -12.104837417602539
    10. 's' → logprob: -12.104837417602539

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10099736601114273
    2. '=' → logprob: -2.4759974479675293
    3. ' ' → logprob: -4.600997447967529
    4. '   ' → logprob: -6.600997447967529
    5. ' ==' → logprob: -8.975996971130371
    6. '=len' → logprob: -9.225996971130371
    7. '  ' → logprob: -9.350996971130371
    8. 'ot' → logprob: -9.725996971130371
    9. '       ' → logprob: -10.225996971130371
    10. ' :=' → logprob: -10.225996971130371

Token 52: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.251935213804245
    2. 'len' → logprob: -1.5019352436065674
    3. '(len' → logprob: -12.626935005187988
    4. '=len' → logprob: -13.751935005187988
    5. '   ' → logprob: -14.751935005187988
    6. ' self' → logprob: -15.126935005187988
    7. ' ' → logprob: -15.126935005187988
    8. '	len' → logprob: -15.501935005187988
    9. 'self' → logprob: -15.751935005187988
    10. '       ' → logprob: -15.751935005187988

Token 53: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10047893971204758
    2. '(' → logprob: -2.3504788875579834
    3. '(s' → logprob: -8.225479125976562
    4. '(this' → logprob: -12.600479125976562
    5. 'self' → logprob: -14.600479125976562
    6. '(sel' → logprob: -14.850479125976562
    7. ' (' → logprob: -16.100479125976562
    8. '(
' → logprob: -16.600479125976562
    9. 's' → logprob: -16.850479125976562
    10. ' self' → logprob: -17.350479125976562

Token 54: '.t' (ID: 1370)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0022609983570873737
    2. '.t' → logprob: -6.127261161804199
    3. '.' → logprob: -9.8772611618042
    4. 's' → logprob: -11.2522611618042
    5. ').' → logprob: -11.7522611618042
    6. ' .' → logprob: -13.7522611618042
    7. '   ' → logprob: -14.3772611618042
    8. ')' → logprob: -14.5022611618042
    9. 't' → logprob: -14.7522611618042
    10. '".' → logprob: -16.377260208129883

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015545014757663012
    2. ')
' → logprob: -7.001554489135742
    3. ' )' → logprob: -7.376554489135742
    4. '       ' → logprob: -11.876554489135742
    5. ' )
' → logprob: -12.876554489135742
    6. ')
' → logprob: -13.251554489135742
    7. '   ' → logprob: -13.376554489135742
    8. ')

' → logprob: -14.501554489135742
    9. '))' → logprob: -14.501554489135742
    10. ' ' → logprob: -14.751554489135742

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05944713577628136
    2. ' for' → logprob: -3.5594470500946045
    3. '
' → logprob: -4.059447288513184
    4. 'for' → logprob: -4.809447288513184
    5. '<|end|>' → logprob: -5.809447288513184
    6. '        
' → logprob: -8.184447288513184
    7. '   ' → logprob: -9.559447288513184
    8. ' ' → logprob: -9.559447288513184
    9. '	for' → logprob: -9.559447288513184
    10. ',' → logprob: -9.934447288513184

Token 57: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.555356502532959
    2. 'for' → logprob: -1.055356502532959
    3. '       ' → logprob: -2.555356502532959
    4. '   ' → logprob: -8.555356979370117
    5. 's' → logprob: -9.305356979370117
    6. ' ' → logprob: -10.430356979370117
    7. ' s' → logprob: -11.180356979370117
    8. '        
' → logprob: -11.430356979370117
    9. '
' → logprob: -11.555356979370117
    10. '	for' → logprob: -11.555356979370117

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12773899734020233
    2. '=' → logprob: -2.1277389526367188
    3. ' ' → logprob: -7.752738952636719
    4. '   ' → logprob: -9.252738952636719
    5. ' for' → logprob: -9.377738952636719
    6. 'for' → logprob: -9.877738952636719
    7. 'ey' → logprob: -10.002738952636719
    8. '  ' → logprob: -10.877738952636719
    9. ' in' → logprob: -11.127738952636719
    10. '    ' → logprob: -11.252738952636719

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17598578333854675
    2. ' n' → logprob: -2.675985813140869
    3. ' ' → logprob: -2.800985813140869
    4. 'n' → logprob: -4.175985813140869
    5. ' len' → logprob: -4.675985813140869
    6. 'len' → logprob: -5.550985813140869
    7. '1' → logprob: -6.425985813140869
    8. '   ' → logprob: -7.425985813140869
    9. ' self' → logprob: -7.425985813140869
    10. 'self' → logprob: -9.050985336303711

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018003955483436584
    2. 'n' → logprob: -4.643003940582275
    3. 'len' → logprob: -5.393003940582275
    4. '1' → logprob: -6.018003940582275
    5. 'self' → logprob: -7.018003940582275
    6. ' ' → logprob: -9.268004417419434
    7. '-' → logprob: -9.518004417419434
    8. 's' → logprob: -10.268004417419434
    9. 'sum' → logprob: -10.893004417419434
    10. 'k' → logprob: -11.018004417419434

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8696725368499756
    2. '
' → logprob: -1.2446725368499756
    3. '<|end|>' → logprob: -1.2446725368499756
    4. '<|end|>' → logprob: -6.369672775268555
    5. ' ' → logprob: -7.119672775268555
    6. '	' → logprob: -7.869672775268555
    7. '   ' → logprob: -7.994672775268555
    8. ')' → logprob: -8.619672775268555
    9. '        
' → logprob: -8.619672775268555
    10. '	while' → logprob: -8.869672775268555

Token 63: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8165072798728943
    2. 'while' (adapté à ' while') → logprob: -1.066507339477539
    3. ' while' → logprob: -1.816507339477539
    4. 'for' → logprob: -3.691507339477539
    5. ' for' → logprob: -4.316507339477539
    6. '
' → logprob: -4.441507339477539
    7. '   ' → logprob: -7.816507339477539
    8. '	while' → logprob: -7.816507339477539
    9. '        
' → logprob: -8.816507339477539
    10. ' ' → logprob: -10.191507339477539

Token 64: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14270232617855072
    2. 'k' → logprob: -2.017702341079712
    3. ' not' → logprob: -11.517702102661133
    4. ' True' → logprob: -12.267702102661133
    5. '    ' → logprob: -12.892702102661133
    6. ' ' → logprob: -13.142702102661133
    7. ' self' → logprob: -13.142702102661133
    8. 'True' → logprob: -13.517702102661133
    9. '        ' → logprob: -14.017702102661133
    10. ' t' → logprob: -14.517702102661133

Token 65: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006030230782926083
    2. '<' → logprob: -5.756030082702637
    3. '<n' → logprob: -5.881030082702637
    4. ' <=' → logprob: -10.131030082702637
    5. ' ' → logprob: -12.131030082702637
    6. ' n' → logprob: -12.506030082702637
    7. 'n' → logprob: -12.756030082702637
    8. '<len' → logprob: -13.631030082702637
    9. '<|end|>' → logprob: -14.006030082702637
    10. '<=' → logprob: -14.131030082702637

Token 66: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519455850124359
    2. 'n' → logprob: -1.5019456148147583
    3. 'len' → logprob: -12.251945495605469
    4. ' ' → logprob: -12.626945495605469
    5. '<|end|>' → logprob: -13.001945495605469
    6. '	n' → logprob: -13.376945495605469
    7. '   ' → logprob: -14.001945495605469
    8. ' len' → logprob: -14.376945495605469
    9. ')n' → logprob: -14.501945495605469
    10. '(n' → logprob: -14.501945495605469

Token 67: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23812393844127655
    2. ':' → logprob: -1.613123893737793
    3. ':
' → logprob: -4.738123893737793
    4. 'and' → logprob: -5.988123893737793
    5. ' :' → logprob: -6.988123893737793
    6. '       ' → logprob: -8.738123893737793
    7. ' :
' → logprob: -9.363123893737793
    8. '<|end|>' → logprob: -9.988123893737793
    9. '):' → logprob: -10.738123893737793
    10. '   ' → logprob: -10.863123893737793

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11924665421247482
    2. '<|end|>' → logprob: -2.6192467212677
    3. ':' → logprob: -4.494246482849121
    4. '<|end|>' → logprob: -4.744246482849121
    5. '       ' → logprob: -4.994246482849121
    6. '
' → logprob: -5.119246482849121
    7. ':
' → logprob: -6.119246482849121
    8. ' if' → logprob: -6.744246482849121
    9. ' and' → logprob: -7.119246482849121
    10. '            
' → logprob: -7.244246482849121

Token 69: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2589375376701355
    2. ' if' → logprob: -1.7589375972747803
    3. 'if' → logprob: -3.8839375972747803
    4. ' ' → logprob: -4.258937358856201
    5. '               ' → logprob: -5.008937358856201
    6. '<|end|>' → logprob: -5.133937358856201
    7. '
' → logprob: -6.008937358856201
    8. ' 
' → logprob: -6.758937358856201
    9. '            
' → logprob: -7.008937358856201
    10. ' and' → logprob: -7.008937358856201

Token 70: '.t' (ID: 1370)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.47027257084846497
    2. '.t' → logprob: -1.0952725410461426
    3. '.' → logprob: -3.3452725410461426
    4. ' .' → logprob: -6.220272541046143
    5. '.check' → logprob: -6.345272541046143
    6. '           ' → logprob: -6.970272541046143
    7. '       ' → logprob: -8.5952730178833
    8. '   ' → logprob: -9.4702730178833
    9. 's' → logprob: -9.5952730178833
    10. '.to' → logprob: -9.5952730178833

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3893708288669586
    2. '=' → logprob: -1.2643707990646362
    3. ' !=' → logprob: -3.639370918273926
    4. '!=' → logprob: -4.639370918273926
    5. ' ==' → logprob: -5.764370918273926
    6. '==' → logprob: -7.139370918273926
    7. ' in' → logprob: -9.389370918273926
    8. ' ' → logprob: -10.014370918273926
    9. ' not' → logprob: -10.389370918273926
    10. ' +=' → logprob: -10.639370918273926

Token 72: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.01294644270092249
    2. 'to' → logprob: -4.387946605682373
    3. ' self' → logprob: -7.762946605682373
    4. 'self' → logprob: -11.387946128845215
    5. ' ' → logprob: -16.13794708251953
    6. ' ' → logprob: -16.38794708251953
    7. ' t' → logprob: -17.51294708251953
    8. 't' → logprob: -17.88794708251953
    9. '	to' → logprob: -18.13794708251953
    10. ' tostring' → logprob: -18.88794708251953

Token 73: '_rot' (ID: 90451)
  Prédit: '_rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rot' → logprob: -5.1093578804284334e-05
    2. 'rot' → logprob: -10.250051498413086
    3. 't' → logprob: -11.875051498413086
    4. '_ot' → logprob: -12.750051498413086
    5. '_ro' → logprob: -13.000051498413086
    6. 'ot' → logprob: -13.750051498413086
    7. '(rot' → logprob: -14.375051498413086
    8. '_' → logprob: -14.875051498413086
    9. '_rotation' → logprob: -15.250051498413086
    10. '_ROT' → logprob: -15.875051498413086

Token 74: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013433275744318962
    2. '(' → logprob: -6.626343250274658
    3. 'self' → logprob: -11.376343727111816
    4. '(s' → logprob: -12.751343727111816
    5. ' (' → logprob: -13.876343727111816
    6. '(t' → logprob: -15.251343727111816
    7. '(
' → logprob: -15.376343727111816
    8. 'o' → logprob: -15.626343727111816
    9. '(e' → logprob: -15.751343727111816
    10. 's' → logprob: -15.876343727111816

Token 75: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0006370236515067518
    2. '.' → logprob: -7.375637054443359
    3. 't' → logprob: -11.87563705444336
    4. ').' → logprob: -13.37563705444336
    5. ' .' → logprob: -13.87563705444336
    6. '.s' → logprob: -15.12563705444336
    7. '	t' → logprob: -15.50063705444336
    8. ')' → logprob: -15.87563705444336
    9. ')t' → logprob: -16.75063705444336

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16374430060386658
    2. ')
' → logprob: -1.913744330406189
    3. '           ' → logprob: -5.7887444496154785
    4. ')
' → logprob: -7.7887444496154785
    5. ')

' → logprob: -10.66374397277832
    6. '               ' → logprob: -12.41374397277832
    7. ')`
' → logprob: -12.91374397277832
    8. ' )' → logprob: -13.16374397277832
    9. ')`' → logprob: -13.53874397277832
    10. ' )
' → logprob: -13.66374397277832

Token 77: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4816634953022003
    2. '           ' → logprob: -0.9816634654998779
    3. '```' → logprob: -5.731663703918457
    4. '<|end|>' → logprob: -5.981663703918457
    5. '            
' → logprob: -7.481663703918457
    6. '<|end|>' → logprob: -7.981663703918457
    7. '
' → logprob: -8.481663703918457
    8. ' if' → logprob: -8.981663703918457
    9. ' 
' → logprob: -8.981663703918457
    10. '  
' → logprob: -9.231663703918457

Token 78: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7547181844711304
    2. 'if' (adapté à ' if') → logprob: -1.1297181844711304
    3. '           ' → logprob: -1.6297181844711304
    4. 'k' → logprob: -5.25471830368042
    5. ' k' → logprob: -5.25471830368042
    6. ' ' → logprob: -9.004717826843262
    7. '       ' → logprob: -9.254717826843262
    8. '   ' → logprob: -10.629717826843262
    9. '            
' → logprob: -11.129717826843262
    10. '```' → logprob: -11.879717826843262

Token 79: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0040964470244944096
    2. 'self' → logprob: -5.504096508026123
    3. ' ' → logprob: -11.379096031188965
    4. ' ' → logprob: -12.379096031188965
    5. '	self' → logprob: -14.629096031188965
    6. ' s' → logprob: -14.879096031188965
    7. '_self' → logprob: -15.004096031188965
    8. '(self' → logprob: -15.004096031188965
    9. 'Self' → logprob: -15.004096031188965
    10. 's' → logprob: -15.379096031188965

Token 80: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.014638806693255901
    2. '.' → logprob: -4.264638900756836
    3. 's' → logprob: -8.764638900756836
    4. ' .' → logprob: -9.014638900756836
    5. ''.' → logprob: -10.639638900756836
    6. '>.' → logprob: -10.639638900756836
    7. ').' → logprob: -10.764638900756836
    8. '`.' → logprob: -11.014638900756836
    9. '.t' → logprob: -11.014638900756836

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08581146597862244
    2. '==' → logprob: -2.5858113765716553
    3. ' in' → logprob: -5.210811614990234
    4. '.startswith' → logprob: -6.835811614990234
    5. ' not' → logprob: -9.085811614990234
    6. '[' → logprob: -9.335811614990234
    7. '[:]' → logprob: -10.335811614990234
    8. ' !=' → logprob: -10.460811614990234
    9. '.endswith' → logprob: -10.460811614990234
    10. ')' → logprob: -10.960811614990234

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3869260847568512
    2. 'self' → logprob: -1.1369260549545288
    3. ' ' → logprob: -10.88692569732666
    4. '<|end|>' → logprob: -10.88692569732666
    5. '	self' → logprob: -12.01192569732666
    6. ' ' → logprob: -12.88692569732666
    7. '(self' → logprob: -13.01192569732666
    8. '<|end|>' → logprob: -13.51192569732666
    9. '[self' → logprob: -13.88692569732666
    10. '_self' → logprob: -14.63692569732666

Token 83: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -6.825890159234405e-05
    2. '.' → logprob: -9.625068664550781
    3. 't' → logprob: -14.625068664550781
    4. '.s' → logprob: -15.000068664550781
    5. ' .' → logprob: -15.125068664550781
    6. '`.' → logprob: -15.625068664550781
    7. '<|end|>' → logprob: -16.12506866455078
    8. ' ' → logprob: -16.75006866455078
    9. '```' → logprob: -16.87506866455078

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036196161061525345
    2. ':
' → logprob: -3.411196231842041
    3. ':return' → logprob: -6.036196231842041
    4. '<|end|>' → logprob: -9.786195755004883
    5. '               ' → logprob: -10.161195755004883
    6. '):' → logprob: -11.036195755004883
    7. ':

' → logprob: -11.411195755004883
    8. '):
' → logprob: -11.786195755004883
    9. '           ' → logprob: -11.911195755004883
    10. '<|end|>' → logprob: -12.161195755004883

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034928040113300085
    2. ' return' → logprob: -5.753492832183838
    3. 'return' → logprob: -8.75349235534668
    4. '           ' → logprob: -9.37849235534668
    5. ':return' → logprob: -10.00349235534668
    6. ':' → logprob: -11.25349235534668
    7. '              ' → logprob: -13.12849235534668
    8. '	           ' → logprob: -13.12849235534668
    9. ':
' → logprob: -13.37849235534668
    10. '```' → logprob: -13.87849235534668

Token 86: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37467512488365173
    2. ' return' → logprob: -1.7496751546859741
    3. '               ' → logprob: -1.9996751546859741
    4. '                   ' → logprob: -5.874675273895264
    5. '           ' → logprob: -7.874675273895264
    6. '	return' → logprob: -9.874674797058105
    7. '   ' → logprob: -11.499674797058105
    8. '       ' → logprob: -11.999674797058105
    9. '```' → logprob: -12.874674797058105
    10. ':return' → logprob: -12.874674797058105

Token 87: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011324746301397681
    2. ' True' → logprob: -6.876132488250732
    3. 'k' → logprob: -9.376132011413574
    4. 'False' → logprob: -11.626132011413574
    5. '"' → logprob: -12.751132011413574
    6. '(True' → logprob: -14.376132011413574
    7. '   ' → logprob: -14.501132011413574
    8. '1' → logprob: -14.501132011413574
    9. 'Tr' → logprob: -15.001132011413574
    10. '0' → logprob: -15.126132011413574

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35564151406288147
    2. '           ' → logprob: -1.230641484260559
    3. '       ' → logprob: -6.1056413650512695
    4. '            
' → logprob: -6.3556413650512695
    5. '        
' → logprob: -7.3556413650512695
    6. '    
' → logprob: -7.4806413650512695
    7. '  
' → logprob: -7.8556413650512695
    8. '\n' → logprob: -7.9806413650512695
    9. ' 
' → logprob: -8.35564136505127
    10. '   ' → logprob: -8.35564136505127

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009408598765730858
    2. '       ' → logprob: -4.759408473968506
    3. '
' → logprob: -7.884408473968506
    4. 'k' → logprob: -8.509408950805664
    5. '        
' → logprob: -9.759408950805664
    6. '   ' → logprob: -9.884408950805664
    7. '            
' → logprob: -10.259408950805664
    8. '```' → logprob: -11.134408950805664
    9. 'n' → logprob: -11.259408950805664
    10. '    
' → logprob: -11.759408950805664

Token 90: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.3220740556716919
    2. '       ' → logprob: -1.322074055671692
    3. ' k' → logprob: -5.072073936462402
    4. '           ' → logprob: -6.947073936462402
    5. '
' → logprob: -7.072073936462402
    6. '   ' → logprob: -7.697073936462402
    7. '	k' → logprob: -9.072073936462402
    8. ',k' → logprob: -10.197073936462402
    9. '        
' → logprob: -10.572073936462402
    10. 'n' → logprob: -10.822073936462402

Token 91: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03296171873807907
    2. '+=' → logprob: -3.53296160697937
    3. ' +=' → logprob: -5.782961845397949
    4. ' +' → logprob: -9.03296184539795
    5. '=' → logprob: -12.78296184539795
    6. '++' → logprob: -13.65796184539795
    7. '+
' → logprob: -13.78296184539795
    8. ' ' → logprob: -13.78296184539795
    9. '1' → logprob: -15.28296184539795
    10. '+='' → logprob: -15.53296184539795

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.87520408630371
    4. '```' → logprob: -18.75020408630371
    5. ' ' → logprob: -19.50020408630371
    6. '１' → logprob: -20.37520408630371
    7. '<|end|>' → logprob: -20.37520408630371
    8. '۱' → logprob: -20.56270408630371
    9. '  ' → logprob: -20.62520408630371
    10. '`' → logprob: -21.56270408630371

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -18.500001907348633
    5. '  ' → logprob: -20.125001907348633
    6. '１' → logprob: -20.375001907348633
    7. '<|end|>' → logprob: -20.375001907348633
    8. '۱' → logprob: -20.625001907348633
    9. '१' → logprob: -21.375001907348633
    10. '`' → logprob: -21.562501907348633

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006557276356033981
    2. '
' → logprob: -8.000656127929688
    3. 'return' → logprob: -8.500656127929688
    4. '<|end|>' → logprob: -9.750656127929688
    5. '   ' → logprob: -10.750656127929688
    6. ' return' → logprob: -11.000656127929688
    7. '        
' → logprob: -12.375656127929688
    8. '```' → logprob: -12.500656127929688
    9. '      ' → logprob: -13.625656127929688
    10. 'False' → logprob: -13.875656127929688

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00207460206001997
    2. 'return' → logprob: -6.252074718475342
    3. '   ' → logprob: -9.627074241638184
    4. '
' → logprob: -10.127074241638184
    5. ' return' → logprob: -10.752074241638184
    6. '```' → logprob: -11.502074241638184
    7. '<|end|>' → logprob: -12.627074241638184
    8. '	return' → logprob: -13.752074241638184
    9. 'False' → logprob: -14.002074241638184
    10. '           ' → logprob: -14.002074241638184

Token 96: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5327316522598267
    2. '       ' → logprob: -1.0327316522598267
    3. 'False' → logprob: -2.907731533050537
    4. '   ' → logprob: -6.907731533050537
    5. ' return' → logprob: -7.532731533050537
    6. '
' → logprob: -7.532731533050537
    7. '```' → logprob: -8.907732009887695
    8. 'false' → logprob: -9.782732009887695
    9. '	return' → logprob: -10.657732009887695
    10. 'eturn' → logprob: -11.032732009887695

Token 97: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033546582562848926
    2. ' False' → logprob: -8.000335693359375
    3. '(False' → logprob: -21.375335693359375
    4. 'True' → logprob: -21.750335693359375
    5. 'false' → logprob: -23.000335693359375
    6. '=False' → logprob: -23.500335693359375
    7. '_false' → logprob: -24.125335693359375
    8. 'F' → logprob: -24.375335693359375
    9. '.False' → logprob: -24.625335693359375
    10. 'None' → logprob: -25.125335693359375

Token 98: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: 'main' (ID: 7731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43238407373428345
    2. 's' → logprob: -1.1823840141296387
    3. 'c' → logprob: -3.8073840141296387
    4. '<|end|>' → logprob: -4.932384014129639
    5. '```' → logprob: -5.557384014129639
    6. '
' → logprob: -5.682384014129639
    7. 'n' → logprob: -5.932384014129639
    8. 'a' → logprob: -7.432384014129639
    9. 'w' → logprob: -7.557384014129639
    10. 'r' → logprob: -7.807384014129639

Token 100: '_func' (ID: 22252)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07035352289676666
    2. '():' → logprob: -3.1953535079956055
    3. '(' → logprob: -3.9453535079956055
    4. ':' → logprob: -6.3203535079956055
    5. 'if' → logprob: -6.8203535079956055
    6. '().__' → logprob: -6.8203535079956055
    7. '_' → logprob: -7.1953535079956055
    8. '__' → logprob: -7.3203535079956055
    9. '.py' → logprob: -7.8203535079956055
    10. '=' → logprob: -7.9453535079956055

Token 101: ' =' (ID: 314)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04525597393512726
    2. '()' → logprob: -3.2952558994293213
    3. 'def' → logprob: -5.9202561378479
    4. '(' → logprob: -6.0452561378479
    5. ':' → logprob: -7.1702561378479
    6. '():
' → logprob: -7.4202561378479
    7. '):' → logprob: -8.920255661010742
    8. ' =' → logprob: -9.170255661010742
    9. ')' → logprob: -9.670255661010742
    10. '```' → logprob: -9.795255661010742

Token 102: ' lambda' (ID: 27871)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.029487784951925278
    2. 'lambda' → logprob: -4.029487609863281
    3. ' Checker' → logprob: -4.779487609863281
    4. ' lambda' → logprob: -5.904487609863281
    5. '(lambda' → logprob: -9.279487609863281
    6. 'Check' → logprob: -10.904487609863281
    7. '_checker' → logprob: -11.029487609863281
    8. 'checker' → logprob: -12.279487609863281
    9. 'sys' → logprob: -12.654487609863281
    10. 'def' → logprob: -13.029487609863281

Token 103: ':' (ID: 25)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4982956647872925
    2. ' s' → logprob: -1.2482956647872925
    3. 'lambda' → logprob: -2.748295783996582
    4. 's' → logprob: -3.248295783996582
    5. ' x' → logprob: -7.123295783996582
    6. '(lambda' → logprob: -7.498295783996582
    7. ' ' → logprob: -7.873295783996582
    8. 'x' → logprob: -8.623295783996582
    9. ' checker' → logprob: -8.998295783996582
    10. ' sys' → logprob: -9.248295783996582

Token 104: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6169538497924805
    2. '   ' → logprob: -2.4919538497924805
    3. 'input' → logprob: -2.7419538497924805
    4. '[' → logprob: -3.2419538497924805
    5. ' input' → logprob: -3.3669538497924805
    6. ' (' → logprob: -3.4919538497924805
    7. '[
' → logprob: -3.7419538497924805
    8. '(sys' → logprob: -3.7419538497924805
    9. 'None' → logprob: -3.8669538497924805
    10. ' print' → logprob: -4.3669538497924805

Token 105: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09659454226493835
    2. '("' → logprob: -2.5965945720672607
    3. '((' → logprob: -4.846594333648682
    4. '('' → logprob: -5.096594333648682
    5. '(check' → logprob: -6.096594333648682
    6. '(True' → logprob: -8.22159481048584
    7. '(Check' → logprob: -8.34659481048584
    8. '(int' → logprob: -8.47159481048584
    9. '(input' → logprob: -9.59659481048584
    10. '(len' → logprob: -9.72159481048584

Token 106: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.6138429641723633
    2. 'Yes' → logprob: -0.8638429641723633
    3. 'True' → logprob: -3.8638429641723633
    4. ''.' → logprob: -4.863842964172363
    5. 'yes' → logprob: -5.613842964172363
    6. 'true' → logprob: -7.113842964172363
    7. ''' → logprob: -7.363842964172363
    8. 'OK' → logprob: -7.738842964172363
    9. 'Possible' → logprob: -7.988842964172363
    10. '1' → logprob: -7.988842964172363

Token 107: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00036834771162830293
    2. '('' → logprob: -8.125368118286133
    3. 'Yes' → logprob: -10.625368118286133
    4. '()' → logprob: -11.000368118286133
    5. '')' → logprob: -11.000368118286133
    6. '("' → logprob: -12.750368118286133
    7. '(' → logprob: -12.875368118286133
    8. '"' → logprob: -12.875368118286133
    9. ')'' → logprob: -13.125368118286133
    10. ' '' → logprob: -14.125368118286133

Token 108: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48265698552131653
    2. 'if' → logprob: -0.9826569557189941
    3. ')' → logprob: -4.857656955718994
    4. ''' → logprob: -7.982656955718994
    5. '"' → logprob: -8.232657432556152
    6. '')' → logprob: -9.857657432556152
    7. ' ' → logprob: -10.732657432556152
    8. '   ' → logprob: -10.732657432556152
    9. '")' → logprob: -11.107657432556152
    10. '('' → logprob: -11.107657432556152

Token 109: ' Checker' (ID: 148392)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.009768249467015266
    2. ' Checker' → logprob: -4.634768486022949
    3. '   ' → logprob: -11.75976848602295
    4. ' ' → logprob: -13.50976848602295
    5. 'Check' → logprob: -13.88476848602295
    6. 'checker' → logprob: -14.13476848602295
    7. ' checker' → logprob: -14.63476848602295
    8. '_checker' → logprob: -15.00976848602295
    9. '  ' → logprob: -16.009767532348633
    10. 'Checking' → logprob: -16.509767532348633

Token 110: '(*(' (ID: 103513)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.9595811367034912
    2. '(input' → logprob: -0.9595811367034912
    3. '(sys' → logprob: -1.5845811367034912
    4. '("' → logprob: -3.709581136703491
    5. '(' → logprob: -6.08458137512207
    6. '(s' → logprob: -6.45958137512207
    7. '(str' → logprob: -8.33458137512207
    8. ' (' → logprob: -9.70958137512207
    9. '(('' → logprob: -9.95958137512207
    10. '((' → logprob: -10.20958137512207

Token 111: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20547126233577728
    2. 'sys' → logprob: -1.7054712772369385
    3. ''s' → logprob: -6.580471038818359
    4. '[input' → logprob: -7.580471038818359
    5. '['' → logprob: -7.830471038818359
    6. '(sys' → logprob: -7.955471038818359
    7. '(input' → logprob: -8.20547103881836
    8. ' input' → logprob: -8.20547103881836
    9. 'list' → logprob: -8.70547103881836
    10. '   ' → logprob: -9.20547103881836

Token 112: '(),' (ID: 2547)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02982281893491745
    2. '()' → logprob: -3.529822826385498
    3. '())).' → logprob: -10.77982234954834
    4. ')' → logprob: -11.02982234954834
    5. '()).' → logprob: -11.02982234954834
    6. '()
' → logprob: -12.27982234954834
    7. '   ' → logprob: -12.27982234954834
    8. ' ()' → logprob: -12.90482234954834
    9. ' ' → logprob: -13.52982234954834
    10. ' ().' → logprob: -13.52982234954834

Token 113: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0006283254479058087
    2. ' input' → logprob: -7.375628471374512
    3. '(input' → logprob: -14.500628471374512
    4. '<input' → logprob: -15.375628471374512
    5. ')' → logprob: -15.625628471374512
    6. ' ' → logprob: -15.750628471374512
    7. '	input' → logprob: -15.750628471374512
    8. '=input' → logprob: -15.875628471374512
    9. '  ' → logprob: -16.125627517700195
    10. '   ' → logprob: -16.125627517700195

Token 114: '())).' (ID: 60498)
  Prédit: '())).'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())).' → logprob: -0.0005149058997631073
    2. '()' → logprob: -8.00051498413086
    3. '())' → logprob: -8.75051498413086
    4. '()))' → logprob: -11.75051498413086
    5. '().' → logprob: -12.37551498413086
    6. ')).' → logprob: -12.50051498413086
    7. '()).' → logprob: -12.87551498413086
    8. '()))
' → logprob: -13.50051498413086
    9. '()),' → logprob: -14.87551498413086
    10. '()
' → logprob: -14.87551498413086

Token 115: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -5.512236498361744e-07
    2. ' check' → logprob: -14.625000953674316
    3. ' ' → logprob: -18.875
    4. '   ' → logprob: -20.25
    5. '(check' → logprob: -21.25
    6. '	check' → logprob: -21.375
    7. '.check' → logprob: -21.375
    8. '  ' → logprob: -21.625
    9. 'chec' → logprob: -21.875
    10. '```' → logprob: -23.375

Token 116: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03805377334356308
    2. '())' → logprob: -3.2880537509918213
    3. '()
' → logprob: -12.163053512573242
    4. ')' → logprob: -12.663053512573242
    5. ' ()' → logprob: -13.288053512573242
    6. ' ())' → logprob: -14.163053512573242
    7. '()==' → logprob: -14.788053512573242
    8. '()`' → logprob: -15.163053512573242
    9. '()))' → logprob: -15.288053512573242
    10. '`()' → logprob: -15.913053512573242

Token 117: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4202944338321686
    2. '())' → logprob: -1.1702944040298462
    3. '()' → logprob: -3.4202945232391357
    4. '))' → logprob: -9.045294761657715
    5. 'else' → logprob: -10.420294761657715
    6. ' else' → logprob: -11.795294761657715
    7. ' )' → logprob: -11.920294761657715
    8. '')' → logprob: -13.170294761657715
    9. '()))' → logprob: -13.420294761657715
    10. ')`' → logprob: -14.670294761657715

Token 118: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011138362810015678
    2. ' '' → logprob: -4.511138439178467
    3. '   ' → logprob: -9.761137962341309
    4. ' ' → logprob: -11.386137962341309
    5. '('' → logprob: -11.386137962341309
    6. '"' → logprob: -12.511137962341309
    7. '    ' → logprob: -12.886137962341309
    8. '  ' → logprob: -13.386137962341309
    9. ')' → logprob: -13.636137962341309
    10. ''S' → logprob: -15.261137962341309

Token 119: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.011373155459296e-05
    2. ''' → logprob: -10.500030517578125
    3. ' No' → logprob: -13.000030517578125
    4. '"No' → logprob: -15.375030517578125
    5. 'NO' → logprob: -18.125030517578125
    6. '_No' → logprob: -19.000030517578125
    7. '>No' → logprob: -20.500030517578125
    8. '   ' → logprob: -21.000030517578125
    9. '.No' → logprob: -21.375030517578125
    10. ' ' → logprob: -21.500030517578125

Token 120: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.048631083220243454
    2. ')' → logprob: -3.048631191253662
    3. ''))' → logprob: -10.548630714416504
    4. ''' → logprob: -11.923630714416504
    5. '")' → logprob: -12.548630714416504
    6. '')
' → logprob: -13.673630714416504
    7. '))' → logprob: -13.673630714416504
    8. ')'' → logprob: -13.798630714416504
    9. '}')' → logprob: -13.923630714416504
    10. '')"' → logprob: -14.173630714416504

Token 121: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15202327072620392
    2. '\n' → logprob: -2.9020233154296875
    3. '(main' → logprob: -3.9020233154296875
    4. '(' → logprob: -4.2770233154296875
    5. '#' → logprob: -4.4020233154296875
    6. '\' → logprob: -4.5270233154296875
    7. 'm' → logprob: -5.2770233154296875
    8. ')' → logprob: -5.2770233154296875
    9. 'if' → logprob: -5.4020233154296875
    10. '_' → logprob: -5.5270233154296875

Token 122: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008065330912359059
    2. '__' → logprob: -7.1258063316345215
    3. ' ' → logprob: -13.37580680847168
    4. ' ' → logprob: -14.87580680847168
    5. 'name' → logprob: -15.62580680847168
    6. '_name' → logprob: -16.87580680847168
    7. '	' → logprob: -17.62580680847168
    8. ' ' → logprob: -18.37580680847168
    9. ' name' → logprob: -18.50080680847168
    10. '___' → logprob: -19.00080680847168

Token 123: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04784546047449112
    2. '==' → logprob: -3.5478453636169434
    3. '__' → logprob: -4.172845363616943
    4. ' __' → logprob: -6.672845363616943
    5. '=="' → logprob: -7.047845363616943
    6. ' =="' → logprob: -8.672845840454102
    7. ' ' → logprob: -9.547845840454102
    8. '=='' → logprob: -9.672845840454102
    9. ' =' → logprob: -10.922845840454102
    10. '_' → logprob: -11.047845840454102

Token 124: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.465036105713807e-06
    2. '==' → logprob: -11.875007629394531
    3. ' ==' → logprob: -15.875007629394531
    4. '_' → logprob: -16.62500762939453
    5. '__.__' → logprob: -16.62500762939453
    6. '__
' → logprob: -17.12500762939453
    7. '__

' → logprob: -17.50000762939453
    8. ' __' → logprob: -17.87500762939453
    9. '____' → logprob: -18.25000762939453
    10. 'name' → logprob: -18.25000762939453

Token 125: '=='' (ID: 20651)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16887404024600983
    2. '==' → logprob: -2.2938740253448486
    3. ' ==' → logprob: -2.9188740253448486
    4. '=="' → logprob: -7.668874263763428
    5. '_' → logprob: -10.79387378692627
    6. '=='' → logprob: -11.16887378692627
    7. '=' → logprob: -12.66887378692627
    8. '___' → logprob: -12.79387378692627
    9. '==
' → logprob: -13.29387378692627
    10. '"' → logprob: -13.79387378692627

Token 126: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.017704181373119354
    2. '"' → logprob: -4.517704010009766
    3. ''' → logprob: -5.017704010009766
    4. ' "__' → logprob: -11.392704010009766
    5. ' __' → logprob: -13.017704010009766
    6. ' '__' → logprob: -14.892704010009766
    7. '_main' → logprob: -15.267704010009766
    8. 'main' → logprob: -15.392704010009766
    9. '/__' → logprob: -15.767704010009766
    10. '___' → logprob: -16.642704010009766

Token 127: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.191489642835222e-05
    2. 'name' → logprob: -10.125041961669922
    3. '_main' → logprob: -14.000041961669922
    4. '__' → logprob: -14.500041961669922
    5. ' main' → logprob: -15.750041961669922
    6. '-main' → logprob: -16.625041961669922
    7. 'built' → logprob: -16.750041961669922
    8. 'm' → logprob: -17.000041961669922
    9. '_MAIN' → logprob: -17.625041961669922
    10. '__':
' → logprob: -17.625041961669922

Token 128: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1603287160396576
    2. '__':
' → logprob: -1.91032874584198
    3. '__:' → logprob: -9.41032886505127
    4. '_' → logprob: -10.91032886505127
    5. '__":
' → logprob: -12.78532886505127
    6. '':' → logprob: -13.78532886505127
    7. '__.' → logprob: -15.16032886505127
    8. '___' → logprob: -15.66032886505127
    9. '__
' → logprob: -16.410327911376953
    10. '__('' → logprob: -17.035327911376953

Token 129: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028499426320195198
    2. ':
' → logprob: -4.278499603271484
    3. '():' → logprob: -4.653499603271484
    4. '():
' → logprob: -6.028499603271484
    5. ' main' → logprob: -6.903499603271484
    6. 'main' → logprob: -7.903499603271484
    7. '(main' → logprob: -8.278499603271484
    8. '   ' → logprob: -8.403499603271484
    9. '):' → logprob: -9.028499603271484
    10. '_main' → logprob: -9.278499603271484

Token 130: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.011487611569464207
    2. ' main' → logprob: -4.5114874839782715
    3. '   ' → logprob: -7.7614874839782715
    4. '	main' → logprob: -11.26148796081543
    5. '_main' → logprob: -14.51148796081543
    6. '.main' → logprob: -16.01148796081543
    7. ' ' → logprob: -16.01148796081543
    8. '(main' → logprob: -16.26148796081543
    9. 'Main' → logprob: -16.51148796081543
    10. '  ' → logprob: -16.88648796081543

Token 131: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00019829542725346982
    2. '()' → logprob: -8.875198364257812
    3. '_' → logprob: -10.500198364257812
    4. '_fun' → logprob: -11.250198364257812
    5. 'func' → logprob: -11.625198364257812
    6. '__' → logprob: -12.750198364257812
    7. '_function' → logprob: -13.750198364257812
    8. '_main' → logprob: -14.000198364257812
    9. '_FUNC' → logprob: -14.000198364257812
    10. '_funcs' → logprob: -14.125198364257812

Token 132: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.76759916334413e-05
    2. '()
' → logprob: -9.875077247619629
    3. '(' → logprob: -10.875077247619629
    4. ' ()' → logprob: -12.875077247619629
    5. '()

' → logprob: -13.625077247619629
    6. '()`' → logprob: -14.000077247619629
    7. '```' → logprob: -14.625077247619629
    8. '()">' → logprob: -14.875077247619629
    9. '#' → logprob: -15.125077247619629
    10. '()"' → logprob: -15.125077247619629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 109
Précision stricte (1ère position): 47.69%
Précision adaptée (1ère position): 51.54%
Précision (top 10): 83.85%
================================================================================
