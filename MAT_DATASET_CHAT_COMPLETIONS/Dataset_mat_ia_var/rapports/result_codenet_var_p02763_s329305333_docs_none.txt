================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
def input():
    return sys.stdin.readline()[:-1]
INF = float("inf")
class BIT:
    def __init__(self, N):
        self.N = N
        self.bit = [0] * (N+1)
    def add(self, x, a):
        while x <= self.N:
            self.bit[x] += a
            x += x & -x
    def sum(self, x):
        ret = 0
        while x != 0:
            ret += self.bit[x]
            x -= x & -x
        return ret
N = int(input())
S = list(input())
Q = int(input())
bit = [BIT(N+1) for i in range(26)]
for i in range(N):
    bit[ord(S[i])-97].add(i+1, 1)
for i in range(Q):
    q, x, y = input().split()
    q = int(q)
    if q == 1:
        i = int(x)-1
        bit[ord(S[i])-97].add(i+1, -1)
        S[i] = y
        bit[ord(y)-97].add(i+1, 1)
    else:
        l, r, ans = int(x), int(y), 0
        for i in range(26):
            ans += (bit[i].sum(r)-bit[i].sum(l-1)) > 0
        print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3199642300605774
    2. '.' → logprob: -1.6949641704559326
    3. '<|end|>' → logprob: -2.9449641704559326
    4. '\' → logprob: -4.444964408874512
    5. 'newline' → logprob: -5.069964408874512
    6. 'import' → logprob: -5.069964408874512
    7. '' → logprob: -5.819964408874512
    8. '<|end|>' → logprob: -5.944964408874512
    9. '\r' → logprob: -6.069964408874512
    10. '
' → logprob: -6.319964408874512

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01155678741633892
    2. ' space' → logprob: -5.386556625366211
    3. ' process' → logprob: -5.886556625366211
    4. ' read' → logprob: -6.886556625366211
    5. ' main' → logprob: -7.011556625366211
    6. ' ' → logprob: -8.511556625366211
    7. ' my' → logprob: -8.636556625366211
    8. ' def' → logprob: -8.636556625366211
    9. ' write' → logprob: -8.761556625366211
    10. ' func' → logprob: -8.761556625366211

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007753237732686102
    2. '_' → logprob: -7.500775337219238
    3. '('' → logprob: -9.750775337219238
    4. ' (' → logprob: -9.875775337219238
    5. '("("' → logprob: -9.875775337219238
    6. '("' → logprob: -11.625775337219238
    7. '()' → logprob: -12.000775337219238
    8. '():' → logprob: -12.125775337219238
    9. '(
' → logprob: -12.250775337219238
    10. 's' → logprob: -12.375775337219238

Token 6: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07986187189817429
    2. ''' → logprob: -3.454861879348755
    3. '(' → logprob: -3.704861879348755
    4. ' )' → logprob: -4.954861640930176
    5. ' (' → logprob: -5.704861640930176
    6. '()' → logprob: -5.954861640930176
    7. '"' → logprob: -6.204861640930176
    8. '<|end|>' → logprob: -6.579861640930176
    9. '  ' → logprob: -6.704861640930176
    10. ' ()' → logprob: -7.079861640930176

Token 7: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2412865161895752
    2. 'sys' → logprob: -1.8662865161895752
    3. 'return' (adapté à ' return') → logprob: -3.366286516189575
    4. ' return' → logprob: -3.741286516189575
    5. 'input' → logprob: -7.866286277770996
    6. '   ' → logprob: -7.991286277770996
    7. ' ' → logprob: -8.116286277770996
    8. ' input' → logprob: -8.491286277770996
    9. '=sys' → logprob: -10.116286277770996
    10. 'pass' → logprob: -10.366286277770996

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.016221819445490837
    2. 'sys' → logprob: -4.26622200012207
    3. ' input' → logprob: -7.01622200012207
    4. ' ' → logprob: -7.01622200012207
    5. 'input' → logprob: -9.26622200012207
    6. '"' → logprob: -9.89122200012207
    7. '  ' → logprob: -10.51622200012207
    8. ' next' → logprob: -11.39122200012207
    9. '""' → logprob: -11.64122200012207
    10. ''' → logprob: -11.64122200012207

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04344991594552994
    2. '.stdin' → logprob: -3.418449878692627
    3. ' .' → logprob: -4.918449878692627
    4. '.argv' → logprob: -7.418449878692627
    5. '.readline' → logprob: -7.418449878692627
    6. '.stdout' → logprob: -7.543449878692627
    7. '.exit' → logprob: -7.793449878692627
    8. '.input' → logprob: -9.918450355529785
    9. '.
' → logprob: -10.543450355529785
    10. '.stderr' → logprob: -10.543450355529785

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0068849194794893265
    2. '.read' → logprob: -5.506885051727295
    3. '.' → logprob: -5.881885051727295
    4. 'read' → logprob: -11.756884574890137
    5. '.readlines' → logprob: -12.631884574890137
    6. '.Read' → logprob: -13.881884574890137
    7. ' readline' → logprob: -14.506884574890137
    8. '.write' → logprob: -16.881885528564453
    9. '.READ' → logprob: -16.881885528564453
    10. ' .' → logprob: -16.881885528564453

Token 11: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008216670714318752
    2. '(' → logprob: -5.883216857910156
    3. '()
' → logprob: -5.883216857910156
    4. '()\' → logprob: -6.258216857910156
    5. '().' → logprob: -8.508216857910156
    6. '(
' → logprob: -8.758216857910156
    7. '
' → logprob: -9.508216857910156
    8. ' ()' → logprob: -9.633216857910156
    9. '()

' → logprob: -9.633216857910156
    10. '```' → logprob: -10.133216857910156

Token 12: '[:-' (ID: 63556)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37316080927848816
    2. '().' → logprob: -1.7481608390808105
    3. '<|end|>' → logprob: -2.4981608390808105
    4. '(' → logprob: -3.6231608390808105
    5. '
' → logprob: -4.6231608390808105
    6. ')' → logprob: -5.2481608390808105
    7. '.strip' → logprob: -5.8731608390808105
    8. '()
' → logprob: -6.1231608390808105
    9. ' ' → logprob: -6.3731608390808105
    10. '<|end|>' → logprob: -6.7481608390808105

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. '2' → logprob: -15.750000953674316
    5. '\n' → logprob: -16.75
    6. '``' → logprob: -17.625
    7. 'newline' → logprob: -17.75
    8. '\' → logprob: -18.0
    9. '"\' → logprob: -18.125
    10. '   ' → logprob: -18.125

Token 14: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004348705988377333
    2. ']' → logprob: -5.5043487548828125
    3. '<|end|>' → logprob: -8.504348754882812
    4. '']' → logprob: -11.254348754882812
    5. '）' → logprob: -11.254348754882812
    6. '>' → logprob: -11.629348754882812
    7. '}' → logprob: -12.129348754882812
    8. ')]' → logprob: -12.129348754882812
    9. ')
' → logprob: -12.379348754882812
    10. '')' → logprob: -12.504348754882812

Token 15: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33572128415107727
    2. '\n' → logprob: -2.085721254348755
    3. '

' → logprob: -2.460721254348755
    4. '' → logprob: -3.960721254348755
    5. '#' → logprob: -4.085721492767334
    6. '```' → logprob: -4.335721492767334
    7. '<|end|>' → logprob: -4.960721492767334
    8. 'def' → logprob: -5.335721492767334
    9. '\' → logprob: -5.960721492767334
    10. '    
' → logprob: -6.710721492767334

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012649266980588436
    2. '=' → logprob: -4.387649059295654
    3. ')' → logprob: -9.762649536132812
    4. '_' → logprob: -10.512649536132812
    5. ' ' → logprob: -11.012649536132812
    6. ',' → logprob: -11.387649536132812
    7. ' =)' → logprob: -11.512649536132812
    8. ' )' → logprob: -12.137649536132812
    9. ' =
' → logprob: -12.887649536132812
    10. ' ,' → logprob: -13.637649536132812

Token 17: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17724886536598206
    2. '10' → logprob: -2.052248954772949
    3. ' float' → logprob: -3.677248954772949
    4. 'float' → logprob: -4.802248954772949
    5. ' int' → logprob: -8.30224895477295
    6. 'int' → logprob: -9.05224895477295
    7. '1' → logprob: -9.80224895477295
    8. '100' → logprob: -9.80224895477295
    9. '987' → logprob: -14.80224895477295
    10. '	float' → logprob: -15.05224895477295

Token 18: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002529952325858176
    2. '(' → logprob: -8.375252723693848
    3. '("' → logprob: -11.250252723693848
    4. '('-' → logprob: -13.125252723693848
    5. '('.')' → logprob: -13.250252723693848
    6. '('+' → logprob: -13.375252723693848
    7. ''' → logprob: -13.625252723693848
    8. '32' → logprob: -13.750252723693848
    9. ' ('' → logprob: -15.625252723693848
    10. '(\'' → logprob: -15.750252723693848

Token 19: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.002934675430878997
    2. ''in' → logprob: -6.252934455871582
    3. ''' → logprob: -7.377934455871582
    4. '"' → logprob: -8.752934455871582
    5. 'INF' → logprob: -9.127934455871582
    6. ''i' → logprob: -11.252934455871582
    7. '-inf' → logprob: -11.252934455871582
    8. 'in' → logprob: -11.502934455871582
    9. ' inf' → logprob: -11.627934455871582
    10. '32' → logprob: -11.752934455871582

Token 20: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003360581584274769
    2. ')' → logprob: -5.753360748291016
    3. ')")' → logprob: -8.753360748291016
    4. '"' → logprob: -10.753360748291016
    5. ' ")' → logprob: -13.878360748291016
    6. '}")' → logprob: -13.878360748291016
    7. ')"' → logprob: -14.253360748291016
    8. '")
' → logprob: -15.003360748291016
    9. ' )' → logprob: -15.378360748291016
    10. '')' → logprob: -16.253360748291016

Token 21: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7628239393234253
    2. 'n' → logprob: -1.8878239393234253
    3. '\n' → logprob: -2.137824058532715
    4. '\' → logprob: -2.262824058532715
    5. 'a' → logprob: -3.137824058532715
    6. 'class' → logprob: -3.512824058532715
    7. 'max' → logprob: -4.387824058532715
    8. '```' → logprob: -4.512824058532715
    9. '' → logprob: -4.637824058532715
    10. 'd' → logprob: -4.762824058532715

Token 22: ' BIT' (ID: 52185)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.1994793862104416
    2. ' ' → logprob: -2.074479341506958
    3. ' D' → logprob: -3.449479341506958
    4. ' Node' → logprob: -4.824479579925537
    5. ' Solution' → logprob: -4.949479579925537
    6. 'Graph' → logprob: -5.574479579925537
    7. ' My' → logprob: -7.074479579925537
    8. 'D' → logprob: -7.074479579925537
    9. ' Segment' → logprob: -7.074479579925537
    10. ' Tree' → logprob: -8.074479103088379

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002547123935073614
    2. '():' → logprob: -6.502547264099121
    3. '(' → logprob: -7.127547264099121
    4. ' :' → logprob: -8.752547264099121
    5. '(object' → logprob: -10.252547264099121
    6. '):' → logprob: -10.877547264099121
    7. ':
' → logprob: -11.877547264099121
    8. ':**' → logprob: -12.252547264099121
    9. '<|end|>' → logprob: -12.377547264099121
    10. '[' → logprob: -13.002547264099121

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02280733548104763
    2. '   ' → logprob: -4.0228071212768555
    3. '(object' → logprob: -6.5228071212768555
    4. ':
' → logprob: -6.6478071212768555
    5. '(' → logprob: -7.7728071212768555
    6. ' :' → logprob: -7.8978071212768555
    7. '():' → logprob: -7.8978071212768555
    8. ' ' → logprob: -8.397807121276855
    9. '  ' → logprob: -8.772807121276855
    10. '    ' → logprob: -9.022807121276855

Token 25: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.047556448727846146
    2. 'def' (adapté à ' def') → logprob: -4.297556400299072
    3. ' ' → logprob: -4.422556400299072
    4. '   ' → logprob: -4.672556400299072
    5. ' 
' → logprob: -5.047556400299072
    6. '    ' → logprob: -5.797556400299072
    7. ' None' → logprob: -7.047556400299072
    8. '    
' → logprob: -8.29755687713623
    9. ' __' → logprob: -8.54755687713623
    10. '     
' → logprob: -9.17255687713623

Token 26: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0023423503153026104
    2. '__' → logprob: -6.252342224121094
    3. '_init' → logprob: -9.127342224121094
    4. ' init' → logprob: -9.127342224121094
    5. ' _' → logprob: -9.502342224121094
    6. ' ' → logprob: -9.752342224121094
    7. 'init' → logprob: -10.252342224121094
    8. '_' → logprob: -10.627342224121094
    9. ' ' → logprob: -13.002342224121094
    10. '  ' → logprob: -14.002342224121094

Token 27: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.292907877039397e-06
    2. ' init' → logprob: -13.37500286102295
    3. 'ini' → logprob: -14.00000286102295
    4. 'innit' → logprob: -15.50000286102295
    5. 'inite' → logprob: -15.62500286102295
    6. 'i' → logprob: -15.87500286102295
    7. 'in' → logprob: -15.87500286102295
    8. '	init' → logprob: -16.875003814697266
    9. 'int' → logprob: -17.000003814697266
    10. '_init' → logprob: -17.625003814697266

Token 28: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007899983786046505
    2. '__' → logprob: -5.257899761199951
    3. '(self' → logprob: -6.132899761199951
    4. '(' → logprob: -8.13290023803711
    5. ' (' → logprob: -9.00790023803711
    6. '_(' → logprob: -10.88290023803711
    7. '__((' → logprob: -11.00790023803711
    8. '__(
' → logprob: -11.13290023803711
    9. '__('' → logprob: -11.88290023803711
    10. '__(*' → logprob: -12.13290023803711

Token 29: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004093835595995188
    2. ' self' → logprob: -5.504093647003174
    3. ',' → logprob: -12.504094123840332
    4. '(self' → logprob: -12.629094123840332
    5. ',self' → logprob: -13.004094123840332
    6. ' ' → logprob: -13.379094123840332
    7. '	self' → logprob: -13.504094123840332
    8. '   ' → logprob: -13.629094123840332
    9. ')' → logprob: -13.879094123840332
    10. 's' → logprob: -14.879094123840332

Token 30: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5238152742385864
    2. ',' → logprob: -0.8988152742385864
    3. 'self' → logprob: -8.648815155029297
    4. ',self' → logprob: -8.648815155029297
    5. ',n' → logprob: -9.273815155029297
    6. ')' → logprob: -9.523815155029297
    7. ' )' → logprob: -9.898815155029297
    8. ',size' → logprob: -10.273815155029297
    9. ' ' → logprob: -10.648815155029297
    10. '_,' → logprob: -11.148815155029297

Token 31: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3142291009426117
    2. ' n' → logprob: -1.314229130744934
    3. 'self' → logprob: -7.5642290115356445
    4. ' size' → logprob: -8.689229011535645
    5. ' self' → logprob: -8.689229011535645
    6. 'size' → logprob: -9.314229011535645
    7. '   ' → logprob: -11.314229011535645
    8. 'N' → logprob: -12.189229011535645
    9. ' N' → logprob: -13.439229011535645
    10. '	n' → logprob: -13.439229011535645

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017816872568801045
    2. ' ):' → logprob: -6.626781463623047
    3. ')' → logprob: -7.876781463623047
    4. '):
' → logprob: -9.876781463623047
    5. ',' → logprob: -11.376781463623047
    6. ':' → logprob: -12.251781463623047
    7. '   ' → logprob: -12.626781463623047
    8. ' )' → logprob: -12.751781463623047
    9. '):
' → logprob: -13.876781463623047
    10. ' :' → logprob: -15.001781463623047

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.758300438988954e-05
    2. 'self' → logprob: -9.875097274780273
    3. '   ' → logprob: -11.250097274780273
    4. ' self' → logprob: -12.375097274780273
    5. '        ' → logprob: -12.500097274780273
    6. '<|end|>' → logprob: -12.500097274780273
    7. '      ' → logprob: -12.625097274780273
    8. '    ' → logprob: -12.875097274780273
    9. '        
' → logprob: -12.875097274780273
    10. ':' → logprob: -13.000097274780273

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06362927705049515
    2. ' self' → logprob: -3.313629388809204
    3. 'self' (adapté à ' self') → logprob: -3.688629388809204
    4. '   ' → logprob: -9.188629150390625
    5. ' ' → logprob: -9.438629150390625
    6. '	self' → logprob: -11.188629150390625
    7. '(self' → logprob: -11.188629150390625
    8. '[self' → logprob: -11.563629150390625
    9. '0' → logprob: -12.438629150390625
    10. '        ' → logprob: -12.688629150390625

Token 35: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08110664039850235
    2. '.size' → logprob: -3.331106662750244
    3. '.N' → logprob: -3.956106662750244
    4. '.n' → logprob: -4.956106662750244
    5. ' ' → logprob: -5.206106662750244
    6. ' .' → logprob: -5.331106662750244
    7. ' =' → logprob: -6.706106662750244
    8. '._' → logprob: -6.706106662750244
    9. '.tree' → logprob: -7.206106662750244
    10. '.bit' → logprob: -7.206106662750244

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06232941523194313
    2. '=' → logprob: -2.8123295307159424
    3. ' ' → logprob: -8.187329292297363
    4. '+' → logprob: -10.312329292297363
    5. ' +=' → logprob: -11.062329292297363
    6. '    ' → logprob: -11.437329292297363
    7. ')' → logprob: -12.062329292297363
    8. '   ' → logprob: -12.187329292297363
    9. '  ' → logprob: -12.812329292297363
    10. ' =)' → logprob: -13.187329292297363

Token 37: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.20141859352588654
    2. 'N' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.82641887664795
    4. '    ' → logprob: -13.70141887664795
    5. '[' → logprob: -14.57641887664795
    6. ' [' → logprob: -14.82641887664795
    7. ' ' → logprob: -15.20141887664795
    8. '   ' → logprob: -15.32641887664795
    9. '[N' → logprob: -16.201417922973633
    10. '	N' → logprob: -16.701417922973633

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11086806654930115
    2. '
' → logprob: -2.360867977142334
    3. '<|end|>' → logprob: -4.610867977142334
    4. 'self' → logprob: -8.235868453979492
    5. '<|end|>' → logprob: -9.235868453979492
    6. '   ' → logprob: -9.735868453979492
    7. '        ' → logprob: -10.235868453979492
    8. ',' → logprob: -10.235868453979492
    9. '
' → logprob: -10.235868453979492
    10. '```' → logprob: -10.610868453979492

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012190054985694587
    2. 'self' → logprob: -9.1251220703125
    3. ' self' → logprob: -12.5001220703125
    4. '   ' → logprob: -12.6251220703125
    5. '	' → logprob: -13.2501220703125
    6. '	self' → logprob: -13.3751220703125
    7. '<|end|>' → logprob: -13.7501220703125
    8. '        ' → logprob: -14.6251220703125
    9. '           ' → logprob: -15.5001220703125
    10. '      ' → logprob: -15.6251220703125

Token 40: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3926704525947571
    2. 'self' (adapté à ' self') → logprob: -1.3926703929901123
    3. '0' → logprob: -3.2676703929901123
    4. ' self' → logprob: -4.017670631408691
    5. '[self' → logprob: -4.642670631408691
    6. ' [' → logprob: -4.892670631408691
    7. ' ' → logprob: -6.267670631408691
    8. 'bit' → logprob: -7.892670631408691
    9. 'data' → logprob: -8.017670631408691
    10. 'tree' → logprob: -8.642670631408691

Token 41: '.bit' (ID: 61866)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.31129610538482666
    2. '.data' → logprob: -1.8112961053848267
    3. 'data' → logprob: -3.311295986175537
    4. '.bit' → logprob: -3.936295986175537
    5. '   ' → logprob: -4.061295986175537
    6. '._' → logprob: -4.686295986175537
    7. '.' → logprob: -5.186295986175537
    8. 'tree' → logprob: -5.186295986175537
    9. '.B' → logprob: -6.186295986175537
    10. '.size' → logprob: -6.311295986175537

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860712215304375
    2. '=' → logprob: -3.048607110977173
    3. '[' → logprob: -12.173606872558594
    4. 's' → logprob: -12.423606872558594
    5. ' ' → logprob: -12.798606872558594
    6. ' =[' → logprob: -13.048606872558594
    7. '=[]' → logprob: -13.173606872558594
    8. '=[' → logprob: -13.423606872558594
    9. '   ' → logprob: -14.048606872558594
    10. '[:]' → logprob: -14.548606872558594

Token 43: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759412050247192
    2. ' [' → logprob: -0.8259412050247192
    3. '[self' → logprob: -14.45094108581543
    4. '[int' → logprob: -14.57594108581543
    5. '[N' → logprob: -15.45094108581543
    6. '[n' → logprob: -15.82594108581543
    7. ' ' → logprob: -16.32594108581543
    8. '   ' → logprob: -16.82594108581543
    9. '[a' → logprob: -16.95094108581543
    10. '[size' → logprob: -17.32594108581543

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002924110507592559
    2. 'INF' → logprob: -5.877923965454102
    3. ' ' → logprob: -9.127923965454102
    4. ' INF' → logprob: -12.002923965454102
    5. 'inf' → logprob: -12.502923965454102
    6. '-inf' → logprob: -15.127923965454102
    7. '   ' → logprob: -15.377923965454102
    8. '-INF' → logprob: -15.627923965454102
    9. '_INF' → logprob: -16.6279239654541
    10. 'Inf' → logprob: -16.8779239654541

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20192693173885345
    2. ']*(' → logprob: -1.7019269466400146
    3. ']*' → logprob: -7.5769267082214355
    4. ' ]' → logprob: -14.451927185058594
    5. ']+' → logprob: -14.951927185058594
    6. ')' → logprob: -15.076927185058594
    7. ' for' → logprob: -16.201927185058594
    8. ' ' → logprob: -16.451927185058594
    9. '*(' → logprob: -17.326927185058594
    10. '](' → logprob: -17.451927185058594

Token 46: ' *' (ID: 425)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.7405147552490234
    2. '*' → logprob: -0.9905147552490234
    3. ']' → logprob: -2.6155147552490234
    4. '*(' → logprob: -3.3655147552490234
    5. ' *' → logprob: -3.6155147552490234
    6. ']*' → logprob: -4.365514755249023
    7. ' for' → logprob: -6.490514755249023
    8. '*[' → logprob: -6.990514755249023
    9. '[' → logprob: -7.615514755249023
    10. ')' → logprob: -8.115514755249023

Token 47: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007110013975761831
    2. ' (' → logprob: -7.375710964202881
    3. '(' → logprob: -9.875711441040039
    4. '(n' → logprob: -11.375711441040039
    5. '((' → logprob: -11.625711441040039
    6. '(self' → logprob: -11.750711441040039
    7. '   ' → logprob: -13.125711441040039
    8. '(NS' → logprob: -13.250711441040039
    9. '(NUM' → logprob: -15.375711441040039
    10. ' ' → logprob: -15.375711441040039

Token 48: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05198249965906143
    2. 'N' → logprob: -3.0519824028015137
    3. ' (' → logprob: -5.801982402801514
    4. ' N' → logprob: -8.676982879638672
    5. '(' → logprob: -9.176982879638672
    6. '(self' → logprob: -9.801982879638672
    7. '   ' → logprob: -10.801982879638672
    8. 'self' → logprob: -11.426982879638672
    9. ' ' → logprob: -13.051982879638672
    10. '[N' → logprob: -13.551982879638672

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003177952254191041
    2. ' +' → logprob: -5.753178119659424
    3. '＋' → logprob: -15.753177642822266
    4. '+
' → logprob: -17.128177642822266
    5. '1' → logprob: -18.628177642822266
    6. ' plus' → logprob: -19.128177642822266
    7. ' ' → logprob: -19.503177642822266
    8. ' +
' → logprob: -19.628177642822266
    9. '()+' → logprob: -19.628177642822266
    10. '+

' → logprob: -20.003177642822266

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. '2' → logprob: -10.375032424926758
    3. ' ' → logprob: -14.000032424926758
    4. '   ' → logprob: -17.250032424926758
    5. '１' → logprob: -17.375032424926758
    6. '```' → logprob: -18.125032424926758
    7. '10' → logprob: -18.250032424926758
    8. '  ' → logprob: -18.625032424926758
    9. '5' → logprob: -18.750032424926758
    10. '
' → logprob: -19.250032424926758

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.500007629394531
    3. ' )' → logprob: -12.625007629394531
    4. '<|end|>' → logprob: -15.000007629394531
    5. '   ' → logprob: -16.37500762939453
    6. '}' → logprob: -16.75000762939453
    7. '```' → logprob: -16.75000762939453
    8. ')

' → logprob: -17.25000762939453
    9. '),' → logprob: -17.37500762939453
    10. '))' → logprob: -17.75000762939453

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07120004296302795
    2. ' 
' → logprob: -2.946200132369995
    3. '    
' → logprob: -5.196199893951416
    4. '   ' → logprob: -5.321199893951416
    5. '' → logprob: -6.821199893951416
    6. '  
' → logprob: -6.946199893951416
    7. '<|end|>' → logprob: -6.946199893951416
    8. ' def' → logprob: -7.071199893951416
    9. 'def' → logprob: -7.446199893951416
    10. '   
' → logprob: -7.946199893951416

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6502252221107483
    2. ' def' → logprob: -0.7752252221107483
    3. '   ' → logprob: -4.5252251625061035
    4. '
' → logprob: -5.6502251625061035
    5. '	def' → logprob: -6.1502251625061035
    6. ' ' → logprob: -7.0252251625061035
    7. '    
' → logprob: -10.650225639343262
    8. ' 
' → logprob: -11.025225639343262
    9. '<|end|>' → logprob: -11.025225639343262
    10. '  ' → logprob: -11.650225639343262

Token 54: ' add' (ID: 1147)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.013053636997938156
    2. ' add' → logprob: -4.6380534172058105
    3. '_update' → logprob: -6.3880534172058105
    4. ' sum' → logprob: -7.3880534172058105
    5. 'update' → logprob: -7.7630534172058105
    6. ' def' → logprob: -8.513053894042969
    7. ' query' → logprob: -8.888053894042969
    8. ' _' → logprob: -9.013053894042969
    9. ' upd' → logprob: -10.638053894042969
    10. '_add' → logprob: -10.888053894042969

Token 55: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5298277735710144
    2. '(self' → logprob: -0.9048277735710144
    3. ' (' → logprob: -5.02982759475708
    4. '(i' → logprob: -10.029828071594238
    5. '(x' → logprob: -10.529828071594238
    6. '(idx' → logprob: -11.529828071594238
    7. '(index' → logprob: -11.904828071594238
    8. '   ' → logprob: -12.029828071594238
    9. ' ' → logprob: -12.029828071594238
    10. '(s' → logprob: -12.279828071594238

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11515524983406067
    2. ' ,' → logprob: -2.2401552200317383
    3. '(' → logprob: -6.865155220031738
    4. ')' → logprob: -7.490155220031738
    5. '(self' → logprob: -8.865155220031738
    6. ' )' → logprob: -9.115155220031738
    7. ',index' → logprob: -9.365155220031738
    8. 'self' → logprob: -9.740155220031738
    9. ' (' → logprob: -9.740155220031738
    10. '(i' → logprob: -10.240155220031738

Token 57: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47879067063331604
    2. ' i' → logprob: -0.9787906408309937
    3. ' idx' → logprob: -6.603790760040283
    4. 'idx' → logprob: -6.853790760040283
    5. 'x' → logprob: -7.103790760040283
    6. 'k' → logprob: -7.478790760040283
    7. ' k' → logprob: -8.228790283203125
    8. ' x' → logprob: -8.353790283203125
    9. ' p' → logprob: -9.103790283203125
    10. 'self' → logprob: -9.478790283203125

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016802136087790132
    2. ' ,' → logprob: -8.750167846679688
    3. ',x' → logprob: -12.125167846679688
    4. ',value' → logprob: -13.000167846679688
    5. ',int' → logprob: -14.875167846679688
    6. '   ' → logprob: -15.500167846679688
    7. ',n' → logprob: -15.625167846679688
    8. ',y' → logprob: -15.750167846679688
    9. ',val' → logprob: -15.750167846679688
    10. ',b' → logprob: -16.125167846679688

Token 59: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1576738804578781
    2. ' v' → logprob: -2.0326738357543945
    3. ' val' → logprob: -5.1576738357543945
    4. '1' → logprob: -5.5326738357543945
    5. 'val' → logprob: -5.5326738357543945
    6. ' ' → logprob: -7.6576738357543945
    7. 'y' → logprob: -7.7826738357543945
    8. ' y' → logprob: -9.282673835754395
    9. 'delta' → logprob: -9.407673835754395
    10. 'w' → logprob: -9.657673835754395

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03392321988940239
    2. '):
' → logprob: -3.4089231491088867
    3. ' ):' → logprob: -8.908923149108887
    4. ')' → logprob: -9.408923149108887
    5. '):
' → logprob: -10.783923149108887
    6. 'm' → logprob: -11.533923149108887
    7. 'l' → logprob: -12.408923149108887
    8. ' ' → logprob: -12.658923149108887
    9. ' ):
' → logprob: -12.658923149108887
    10. 'd' → logprob: -12.783923149108887

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006141475751064718
    2. '   ' → logprob: -8.375614166259766
    3. '<|end|>' → logprob: -8.375614166259766
    4. ')' → logprob: -10.000614166259766
    5. ':' → logprob: -10.125614166259766
    6. ' ' → logprob: -11.125614166259766
    7. '      ' → logprob: -11.500614166259766
    8. '    ' → logprob: -11.875614166259766
    9. '           ' → logprob: -12.625614166259766
    10. '	' → logprob: -12.750614166259766

Token 62: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4977635443210602
    2. ' while' → logprob: -0.9977635145187378
    3. '        ' → logprob: -4.497763633728027
    4. 'while' (adapté à ' while') → logprob: -4.997763633728027
    5. ' x' → logprob: -5.372763633728027
    6. '   ' → logprob: -8.497763633728027
    7. '           ' → logprob: -8.747763633728027
    8. '    ' → logprob: -8.747763633728027
    9. '```' → logprob: -9.622763633728027
    10. 'x' → logprob: -9.872763633728027

Token 63: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16022545099258423
    2. 'x' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.160225868225098
    4. '   ' → logprob: -15.035225868225098
    5. '	x' → logprob: -15.660225868225098
    6. '(x' → logprob: -16.66022491455078
    7. '1' → logprob: -16.66022491455078
    8. '    ' → logprob: -18.28522491455078
    9. '_x' → logprob: -18.53522491455078
    10. '0' → logprob: -18.53522491455078

Token 64: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3132626414299011
    2. '<=' → logprob: -1.313262701034546
    3. ' <' → logprob: -14.563262939453125
    4. '<' → logprob: -16.188262939453125
    5. ' ≤' → logprob: -16.688262939453125
    6. ')<=' → logprob: -16.688262939453125
    7. '   ' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.563262939453125
    9. ' <=",' → logprob: -17.688262939453125
    10. '≤' → logprob: -17.688262939453125

Token 65: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067154900170862675
    2. ' self' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.506715774536133
    4. '(self' → logprob: -17.131715774536133
    5. '	self' → logprob: -17.381715774536133
    6. ' ' → logprob: -18.256715774536133
    7. '[self' → logprob: -18.756715774536133
    8. '=self' → logprob: -18.881715774536133
    9. '_self' → logprob: -19.381715774536133
    10. 'Self' → logprob: -19.381715774536133

Token 66: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.001550929038785398
    2. 'N' → logprob: -6.501551151275635
    3. '.' → logprob: -10.126550674438477
    4. 'self' → logprob: -12.626550674438477
    5. '   ' → logprob: -12.876550674438477
    6. '	N' → logprob: -14.001550674438477
    7. '<N' → logprob: -14.751550674438477
    8. '>N' → logprob: -15.001550674438477
    9. ' .' → logprob: -15.501550674438477
    10. '       ' → logprob: -15.751550674438477

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012588527984917164
    2. ':
' → logprob: -4.3875885009765625
    3. ':
' → logprob: -10.887588500976562
    4. '):' → logprob: -10.887588500976562
    5. '       ' → logprob: -11.137588500976562
    6. ' :' → logprob: -11.637588500976562
    7. '):
' → logprob: -11.887588500976562
    8. '<|end|>' → logprob: -13.512588500976562
    9. ' :
' → logprob: -13.637588500976562
    10. '           ' → logprob: -13.762588500976562

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008844541385769844
    2. '
' → logprob: -5.383844375610352
    3. '       ' → logprob: -6.258844375610352
    4. '<|end|>' → logprob: -7.633844375610352
    5. '\n' → logprob: -7.883844375610352
    6. '```' → logprob: -8.008844375610352
    7. '    
' → logprob: -8.633844375610352
    8. '\' → logprob: -8.758844375610352
    9. '            
' → logprob: -8.758844375610352
    10. '               ' → logprob: -9.383844375610352

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2653644382953644
    2. ' self' → logprob: -1.515364408493042
    3. '           ' → logprob: -4.515364646911621
    4. '               ' → logprob: -6.140364646911621
    5. '   ' → logprob: -9.390364646911621
    6. ' ' → logprob: -9.515364646911621
    7. '	self' → logprob: -10.890364646911621
    8. '```' → logprob: -10.890364646911621
    9. '       ' → logprob: -11.015364646911621
    10. '[self' → logprob: -11.640364646911621

Token 70: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -9.591415437171236e-05
    2. '.' → logprob: -9.625096321105957
    3. 'bit' → logprob: -11.250096321105957
    4. ' .' → logprob: -11.250096321105957
    5. ' bit' → logprob: -13.625096321105957
    6. '].' → logprob: -14.125096321105957
    7. '   ' → logprob: -15.125096321105957
    8. '_bit' → logprob: -15.375096321105957
    9. '.bet' → logprob: -15.625096321105957
    10. '.b' → logprob: -15.750096321105957

Token 71: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.125001907348633
    3. ' [' → logprob: -15.125001907348633
    4. '```' → logprob: -17.750001907348633
    5. 'x' → logprob: -18.625001907348633
    6. '[self' → logprob: -19.125001907348633
    7. '[int' → logprob: -19.375001907348633
    8. '[a' → logprob: -20.125001907348633
    9. '\[' → logprob: -20.500001907348633
    10. '[t' → logprob: -20.500001907348633

Token 72: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5765368938446045
    2. ' +=' → logprob: -0.8265368938446045
    3. ']+=' → logprob: -7.451537132263184
    4. '=' → logprob: -12.451537132263184
    5. ']' → logprob: -12.826537132263184
    6. '+' → logprob: -12.826537132263184
    7. '    ' → logprob: -12.951537132263184
    8. ')' → logprob: -13.451537132263184
    9. '        ' → logprob: -13.826537132263184
    10. '            ' → logprob: -14.076537132263184

Token 73: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889419049024582
    2. ' +=' → logprob: -2.5788941383361816
    3. '=' → logprob: -12.70389461517334
    4. ']+=' → logprob: -14.57889461517334
    5. '+' → logprob: -15.07889461517334
    6. ' =' → logprob: -15.32889461517334
    7. ' ^=' → logprob: -15.57889461517334
    8. ' |=' → logprob: -16.953893661499023
    9. '+=(' → logprob: -17.078893661499023
    10. '^' → logprob: -17.703893661499023

Token 74: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868711292743683
    2. ' a' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.761871337890625
    4. '	a' → logprob: -17.386871337890625
    5. ' ' → logprob: -19.011871337890625
    6. '_a' → logprob: -21.261871337890625
    7. '   ' → logprob: -21.261871337890625
    8. '    ' → logprob: -21.636871337890625
    9. '>a' → logprob: -21.636871337890625
    10. '(a' → logprob: -21.761871337890625

Token 75: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038598617538809776
    2. '
' → logprob: -8.000386238098145
    3. 'x' → logprob: -11.250386238098145
    4. '       ' → logprob: -11.375386238098145
    5. '            
' → logprob: -11.625386238098145
    6. ' x' → logprob: -12.125386238098145
    7. '               ' → logprob: -12.750386238098145
    8. '   ' → logprob: -13.125386238098145
    9. '
' → logprob: -13.625386238098145
    10. '\n' → logprob: -13.625386238098145

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013512482109945267
    2. '       ' → logprob: -9.62513542175293
    3. 'x' → logprob: -10.50013542175293
    4. '\n' → logprob: -11.37513542175293
    5. '   ' → logprob: -11.75013542175293
    6. '
' → logprob: -11.75013542175293
    7. ' x' → logprob: -12.25013542175293
    8. '            
' → logprob: -12.62513542175293
    9. '    
' → logprob: -13.37513542175293
    10. '```' → logprob: -13.50013542175293

Token 77: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023246755823493004
    2. ' x' → logprob: -3.7732467651367188
    3. '           ' → logprob: -13.773246765136719
    4. '	x' → logprob: -15.648246765136719
    5. '   ' → logprob: -18.02324676513672
    6. '       ' → logprob: -18.39824676513672
    7. '               ' → logprob: -18.77324676513672
    8. ' ' → logprob: -20.14824676513672
    9. ',x' → logprob: -20.52324676513672
    10. ')x' → logprob: -20.89824676513672

Token 78: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.36574670672416687
    2. ' +=' → logprob: -1.2407467365264893
    3. ' <<=' → logprob: -4.11574649810791
    4. '<<' → logprob: -7.61574649810791
    5. '|' → logprob: -9.36574649810791
    6. '=' → logprob: -9.74074649810791
    7. ' |=' → logprob: -10.11574649810791
    8. '```' → logprob: -10.24074649810791
    9. '<|end|>' → logprob: -11.11574649810791
    10. ']+=' → logprob: -11.24074649810791

Token 79: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009158630855381489
    2. ' x' → logprob: -7.000916004180908
    3. '(x' → logprob: -13.25091552734375
    4. ' ' → logprob: -13.37591552734375
    5. '(' → logprob: -14.62591552734375
    6. '   ' → logprob: -15.12591552734375
    7. '	x' → logprob: -15.37591552734375
    8. ' (' → logprob: -16.00091552734375
    9. '  ' → logprob: -17.37591552734375
    10. '1' → logprob: -17.62591552734375

Token 80: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12782073020935059
    2. ' &' → logprob: -2.1278207302093506
    3. '&i' → logprob: -7.87782096862793
    4. '&id' → logprob: -8.25282096862793
    5. '&t' → logprob: -9.12782096862793
    6. '&r' → logprob: -10.62782096862793
    7. '&amp' → logprob: -11.25282096862793
    8. '&w' → logprob: -11.50282096862793
    9. '&q' → logprob: -11.62782096862793
    10. '"&' → logprob: -11.75282096862793

Token 81: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.0342886745929718
    2. '-' → logprob: -3.7842886447906494
    3. ' -' → logprob: -4.9092888832092285
    4. '(-' → logprob: -5.6592888832092285
    5. 'x' → logprob: -9.15928840637207
    6. ' (-' → logprob: -11.53428840637207
    7. ' x' → logprob: -13.40928840637207
    8. '-s' → logprob: -14.15928840637207
    9. '-i' → logprob: -14.65928840637207
    10. '-X' → logprob: -15.28428840637207

Token 82: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.625000953674316
    3. '	x' → logprob: -18.625
    4. ')x' → logprob: -21.75
    5. ''x' → logprob: -21.875
    6. '"x' → logprob: -22.625
    7. '{x' → logprob: -23.0
    8. '(x' → logprob: -23.125
    9. '<|end|>' → logprob: -23.375
    10. '$x' → logprob: -23.625

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046081675100140274
    2. '    
' → logprob: -8.750460624694824
    3. '
' → logprob: -9.500460624694824
    4. '       ' → logprob: -10.000460624694824
    5. '```' → logprob: -10.000460624694824
    6. 'def' → logprob: -10.375460624694824
    7. '<|end|>' → logprob: -10.375460624694824
    8. '        
' → logprob: -10.875460624694824
    9. '	def' → logprob: -11.000460624694824
    10. '<|end|>' → logprob: -11.875460624694824

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08687978982925415
    2. 'def' (adapté à ' def') → logprob: -2.9618797302246094
    3. ' def' → logprob: -3.4618797302246094
    4. '```' → logprob: -9.96187973022461
    5. ' ' → logprob: -10.21187973022461
    6. '	def' → logprob: -10.46187973022461
    7. '  ' → logprob: -12.83687973022461
    8. '       ' → logprob: -12.83687973022461
    9. '    ' → logprob: -13.83687973022461
    10. '    
' → logprob: -14.58687973022461

Token 86: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6338775753974915
    2. ' sum' → logprob: -0.7588775753974915
    3. ' query' → logprob: -7.633877754211426
    4. 'query' → logprob: -7.633877754211426
    5. 'get' → logprob: -9.133877754211426
    6. ' get' → logprob: -9.133877754211426
    7. ' ' → logprob: -10.383877754211426
    8. '.sum' → logprob: -11.258877754211426
    9. '   ' → logprob: -11.633877754211426
    10. '_sum' → logprob: -12.008877754211426

Token 87: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00865002628415823
    2. '(' → logprob: -4.758649826049805
    3. '(s' → logprob: -10.758649826049805
    4. ' (' → logprob: -11.508649826049805
    5. '   ' → logprob: -13.508649826049805
    6. 'self' → logprob: -14.133649826049805
    7. '(x' → logprob: -14.633649826049805
    8. '(Self' → logprob: -14.633649826049805
    9. '(sel' → logprob: -14.633649826049805
    10. '(
' → logprob: -14.758649826049805

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0970381498336792
    2. '(' → logprob: -1.2220381498336792
    3. '(self' → logprob: -1.5970381498336792
    4. ')' → logprob: -2.0970382690429688
    5. '(x' → logprob: -3.4720382690429688
    6. ' (' → logprob: -4.597038269042969
    7. ' ,' → logprob: -6.472038269042969
    8. 'self' → logprob: -7.222038269042969
    9. ' )' → logprob: -7.472038269042969
    10. '   ' → logprob: -7.597038269042969

Token 89: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03012949414551258
    2. ' x' → logprob: -3.6551294326782227
    3. 'self' → logprob: -5.655129432678223
    4. ' self' → logprob: -8.155129432678223
    5. '   ' → logprob: -10.905129432678223
    6. ')' → logprob: -11.905129432678223
    7. ' ' → logprob: -12.155129432678223
    8. 's' → logprob: -12.780129432678223
    9. ')x' → logprob: -14.655129432678223
    10. ',' → logprob: -15.030129432678223

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19422030448913574
    2. ':' → logprob: -1.8192203044891357
    3. ')' → logprob: -4.944220542907715
    4. '):
' → logprob: -5.569220542907715
    5. ' :' → logprob: -6.194220542907715
    6. '(self' → logprob: -7.569220542907715
    7. ' ):' → logprob: -8.194220542907715
    8. '   ' → logprob: -8.694220542907715
    9. ':
' → logprob: -9.069220542907715
    10. '       ' → logprob: -9.569220542907715

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04404553398489952
    2. '   ' → logprob: -3.7940454483032227
    3. ' ' → logprob: -4.794045448303223
    4. '    ' → logprob: -5.669045448303223
    5. '<|end|>' → logprob: -5.669045448303223
    6. ':' → logprob: -6.544045448303223
    7. ' 
' → logprob: -6.794045448303223
    8. '0' → logprob: -7.294045448303223
    9. '        ' → logprob: -8.419045448303223
    10. '      ' → logprob: -8.544045448303223

Token 92: ' ret' (ID: 2881)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3177492618560791
    2. 's' → logprob: -1.317749261856079
    3. ' res' → logprob: -5.9427490234375
    4. '   ' → logprob: -6.9427490234375
    5. 'res' → logprob: -7.3177490234375
    6. '    ' → logprob: -8.8177490234375
    7. '       ' → logprob: -10.9427490234375
    8. ' result' → logprob: -11.4427490234375
    9. ' ' → logprob: -11.4427490234375
    10. 'result' → logprob: -11.5677490234375

Token 93: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09039480239152908
    2. ' =' → logprob: -2.5903947353363037
    3. '=' → logprob: -5.840394973754883
    4. ' +=' → logprob: -5.840394973754883
    5. '  ' → logprob: -6.090394973754883
    6. '<|end|>' → logprob: -6.340394973754883
    7. '    ' → logprob: -7.715394973754883
    8. '   ' → logprob: -7.840394973754883
    9. ' space' → logprob: -9.215394973754883
    10. ' ,' → logprob: -9.590394973754883

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021097958087921
    2. ' ' → logprob: -2.3502109050750732
    3. ' self' → logprob: -12.725211143493652
    4. 'self' → logprob: -14.100211143493652
    5. ' ' → logprob: -14.350211143493652
    6. '   ' → logprob: -17.600210189819336
    7. '  ' → logprob: -19.350210189819336
    8. '۰' → logprob: -19.475210189819336
    9. '    ' → logprob: -19.725210189819336
    10. ' 
' → logprob: -20.475210189819336

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'self' → logprob: -21.125009536743164
    4. '۰' → logprob: -22.500009536743164
    5. '０' → logprob: -23.125009536743164
    6. ' ' → logprob: -24.000009536743164
    7. '   ' → logprob: -24.875009536743164
    8. ' self' → logprob: -25.750009536743164
    9. '  ' → logprob: -25.750009536743164
    10. '000' → logprob: -25.875009536743164

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2747405469417572
    2. '
' → logprob: -1.6497405767440796
    3. '<|end|>' → logprob: -3.14974045753479
    4. '<|end|>' → logprob: -6.649740695953369
    5. '   ' → logprob: -7.149740695953369
    6. '        
' → logprob: -7.524740695953369
    7. ' 
' → logprob: -7.524740695953369
    8. '  
' → logprob: -7.774740695953369
    9. '' → logprob: -8.024740219116211
    10. '\n' → logprob: -8.024740219116211

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2135709971189499
    2. '
' → logprob: -1.7135709524154663
    3. '<|end|>' → logprob: -4.713571071624756
    4. '	' → logprob: -7.213571071624756
    5. ' 
' → logprob: -7.338571071624756
    6. '<|end|>' → logprob: -7.588571071624756
    7. '   ' → logprob: -8.338570594787598
    8. '        
' → logprob: -8.463570594787598
    9. '  
' → logprob: -8.588570594787598
    10. '    
' → logprob: -9.463570594787598

Token 98: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.694616436958313
    2. ' while' → logprob: -0.944616436958313
    3. '       ' → logprob: -2.1946163177490234
    4. '   ' → logprob: -7.944616317749023
    5. '	while' → logprob: -9.194616317749023
    6. 'While' → logprob: -11.069616317749023
    7. '        ' → logprob: -11.819616317749023
    8. ' 
' → logprob: -12.569616317749023
    9. ' ' → logprob: -12.569616317749023
    10. '        
' → logprob: -12.819616317749023

Token 99: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07888989895582199
    2. 'x' → logprob: -2.578889846801758
    3. '	x' → logprob: -16.703889846801758
    4. ' ' → logprob: -17.203889846801758
    5. '0' → logprob: -18.578889846801758
    6. '   ' → logprob: -18.703889846801758
    7. '(x' → logprob: -19.328889846801758
    8. ' ' → logprob: -19.328889846801758
    9. ')x' → logprob: -19.953889846801758
    10. '"x' → logprob: -20.828889846801758

Token 100: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008621551096439362
    2. ' >' → logprob: -4.758621692657471
    3. '>=' → logprob: -13.133621215820312
    4. '&gt' → logprob: -13.258621215820312
    5. ' ' → logprob: -13.758621215820312
    6. ':' → logprob: -14.633621215820312
    7. '>x' → logprob: -15.133621215820312
    8. '">' → logprob: -15.633621215820312
    9. '>:' → logprob: -15.633621215820312
    10. '>
' → logprob: -15.758621215820312

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.625709533691406
    4. '```' → logprob: -20.250709533691406
    5. '  ' → logprob: -20.750709533691406
    6. '۰' → logprob: -20.875709533691406
    7. '０' → logprob: -21.375709533691406
    8. ' ' → logprob: -21.375709533691406
    9. '>' → logprob: -21.375709533691406
    10. '	' → logprob: -21.500709533691406

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.875158309936523
    4. '00' → logprob: -21.250158309936523
    5. '```' → logprob: -21.250158309936523
    6. '۰' → logprob: -21.375158309936523
    7. '  ' → logprob: -21.500158309936523
    8. ' ' → logprob: -21.625158309936523
    9. '000' → logprob: -21.875158309936523
    10. '  ' → logprob: -22.000158309936523

Token 103: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42981892824172974
    2. ':' → logprob: -1.054818868637085
    3. '       ' → logprob: -7.429819107055664
    4. '           ' → logprob: -7.804819107055664
    5. ',' → logprob: -10.304819107055664
    6. '):
' → logprob: -10.429819107055664
    7. ':
' → logprob: -11.304819107055664
    8. '<|end|>' → logprob: -11.304819107055664
    9. ' :
' → logprob: -11.929819107055664
    10. '   ' → logprob: -12.179819107055664

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03972841799259186
    2. '
' → logprob: -3.2897284030914307
    3. '       ' → logprob: -6.91472864151001
    4. '\n' → logprob: -8.289728164672852
    5. '<|end|>' → logprob: -8.789728164672852
    6. '
' → logprob: -9.914728164672852
    7. '' → logprob: -10.039728164672852
    8. '   ' → logprob: -10.289728164672852
    9. '    
' → logprob: -10.414728164672852
    10. '            
' → logprob: -10.539728164672852

Token 105: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.021342262625694275
    2. ' ret' → logprob: -4.0213422775268555
    3. '           ' → logprob: -6.1463422775268555
    4. '       ' → logprob: -7.0213422775268555
    5. '	ret' → logprob: -9.271342277526855
    6. '   ' → logprob: -10.396342277526855
    7. '$ret' → logprob: -11.396342277526855
    8. '               ' → logprob: -12.521342277526855
    9. '(ret' → logprob: -12.896342277526855
    10. 'rett' → logprob: -13.021342277526855

Token 106: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28166791796684265
    2. '+=' → logprob: -1.406667947769165
    3. '        ' → logprob: -8.906667709350586
    4. '            ' → logprob: -9.156667709350586
    5. '           ' → logprob: -9.156667709350586
    6. '=' → logprob: -10.031667709350586
    7. ']+=' → logprob: -10.656667709350586
    8. '    ' → logprob: -10.781667709350586
    9. ' ' → logprob: -10.906667709350586
    10. '       ' → logprob: -11.281667709350586

Token 107: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.126929372549057
    2. ' self' → logprob: -2.12692928314209
    3. '[self' → logprob: -14.37692928314209
    4. '	self' → logprob: -15.25192928314209
    5. '(self' → logprob: -15.87692928314209
    6. ' ' → logprob: -16.001930236816406
    7. '   ' → logprob: -16.001930236816406
    8. '       ' → logprob: -17.876930236816406
    9. '=self' → logprob: -18.376930236816406
    10. 'bit' → logprob: -18.376930236816406

Token 108: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.00000286102295
    3. ' .' → logprob: -14.62500286102295
    4. 'bit' → logprob: -15.00000286102295
    5. ' bit' → logprob: -16.250003814697266
    6. '.bi' → logprob: -17.375003814697266
    7. '.b' → logprob: -17.875003814697266
    8. '.bits' → logprob: -18.375003814697266
    9. '.bet' → logprob: -18.500003814697266
    10. '-bit' → logprob: -19.250003814697266

Token 109: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. 'x' → logprob: -19.5
    4. ' [' → logprob: -20.625
    5. '[int' → logprob: -20.875
    6. ' x' → logprob: -21.25
    7. '	x' → logprob: -21.25
    8. ' ' → logprob: -21.75
    9. '```' → logprob: -21.875
    10. '[
' → logprob: -22.75

Token 110: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3281351327896118
    2. ')' → logprob: -1.8281351327896118
    3. ']' → logprob: -2.3281350135803223
    4. '       ' → logprob: -4.828135013580322
    5. '<|end|>' → logprob: -5.703135013580322
    6. '
' → logprob: -6.078135013580322
    7. '   ' → logprob: -6.578135013580322
    8. '```' → logprob: -7.078135013580322
    9. '<|end|>' → logprob: -7.203135013580322
    10. ')
' → logprob: -7.453135013580322

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05553814768791199
    2. '
' → logprob: -2.9305381774902344
    3. ' x' → logprob: -7.930538177490234
    4. '   ' → logprob: -9.180538177490234
    5. 'x' → logprob: -9.930538177490234
    6. '       ' → logprob: -10.180538177490234
    7. '
' → logprob: -10.430538177490234
    8. ' 
' → logprob: -10.805538177490234
    9. '```' → logprob: -11.180538177490234
    10. '    
' → logprob: -11.305538177490234

Token 112: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0011767742689698935
    2. ' x' → logprob: -6.751176834106445
    3. '           ' → logprob: -12.001176834106445
    4. '	x' → logprob: -15.001176834106445
    5. '   ' → logprob: -16.626176834106445
    6. '```' → logprob: -17.626176834106445
    7. '
' → logprob: -18.751176834106445
    8. ' ' → logprob: -19.126176834106445
    9. '       ' → logprob: -19.251176834106445
    10. '               ' → logprob: -20.126176834106445

Token 113: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7072046399116516
    2. '-=' → logprob: -0.7072046399116516
    3. '-' → logprob: -4.332204818725586
    4. '=' → logprob: -7.457204818725586
    5. '&' → logprob: -9.082204818725586
    6. ' ' → logprob: -10.332204818725586
    7. ' -' → logprob: -10.957204818725586
    8. ' ' → logprob: -11.082204818725586
    9. '+=' → logprob: -11.332204818725586
    10. '	' → logprob: -11.332204818725586

Token 114: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750604182481766
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -16.02975082397461
    4. ' ' → logprob: -17.40475082397461
    5. '   ' → logprob: -17.65475082397461
    6. '(x' → logprob: -19.52975082397461
    7. '```' → logprob: -20.27975082397461
    8. ' ' → logprob: -20.65475082397461
    9. '"x' → logprob: -21.02975082397461
    10. '  ' → logprob: -21.02975082397461

Token 115: ' &' (ID: 827)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019643204286694527
    2. ' x' → logprob: -6.251964092254639
    3. '&' → logprob: -10.251964569091797
    4. '	x' → logprob: -15.501964569091797
    5. ' &' → logprob: -15.751964569091797
    6. '(x' → logprob: -17.501964569091797
    7. '"x' → logprob: -17.751964569091797
    8. ' ' → logprob: -18.501964569091797
    9. '```' → logprob: -18.501964569091797
    10. ' ' → logprob: -19.001964569091797

Token 116: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3141862750053406
    2. ' x' → logprob: -1.3141863346099854
    3. ' -' → logprob: -7.564186096191406
    4. '-x' → logprob: -7.939186096191406
    5. '-' → logprob: -10.314186096191406
    6. '	x' → logprob: -11.439186096191406
    7. ' ' → logprob: -12.564186096191406
    8. ' ' → logprob: -14.814186096191406
    9. '_x' → logprob: -15.314186096191406
    10. '"x' → logprob: -15.814186096191406

Token 117: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010902655776590109
    2. ' x' → logprob: -9.12510871887207
    3. '	x' → logprob: -18.37510871887207
    4. ' ' → logprob: -19.50010871887207
    5. '(x' → logprob: -21.12510871887207
    6. '-x' → logprob: -21.50010871887207
    7. '1' → logprob: -21.75010871887207
    8. ')x' → logprob: -21.87510871887207
    9. '{x' → logprob: -22.00010871887207
    10. 'X' → logprob: -22.25010871887207

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0975576713681221
    2. 'return' → logprob: -2.847557783126831
    3. '   ' → logprob: -4.472557544708252
    4. ' return' → logprob: -4.472557544708252
    5. '
' → logprob: -5.097557544708252
    6. '1' → logprob: -6.722557544708252
    7. '	' → logprob: -6.972557544708252
    8. ' ' → logprob: -7.097557544708252
    9. '	return' → logprob: -7.222557544708252
    10. '```' → logprob: -7.222557544708252

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2769106328487396
    2. 'return' → logprob: -1.526910662651062
    3. ' return' → logprob: -4.026910781860352
    4. '   ' → logprob: -5.026910781860352
    5. '	return' → logprob: -9.026910781860352
    6. '	' → logprob: -9.151910781860352
    7. ' ' → logprob: -10.776910781860352
    8. '```' → logprob: -11.651910781860352
    9. '           ' → logprob: -12.276910781860352
    10. '
' → logprob: -12.526910781860352

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03381005674600601
    2. ' return' → logprob: -3.7838101387023926
    3. '       ' → logprob: -5.033810138702393
    4. '   ' → logprob: -5.533810138702393
    5. '	return' → logprob: -10.158809661865234
    6. ' ' → logprob: -12.658809661865234
    7. 'ret' → logprob: -14.283809661865234
    8. '	' → logprob: -14.783809661865234
    9. 'eturn' → logprob: -15.158809661865234
    10. ':return' → logprob: -15.533809661865234

Token 121: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0380416102707386
    2. ' ret' → logprob: -3.288041591644287
    3. '	ret' → logprob: -16.413042068481445
    4. 're' → logprob: -16.913042068481445
    5. '(ret' → logprob: -17.413042068481445
    6. 'rets' → logprob: -18.288042068481445
    7. '$ret' → logprob: -18.288042068481445
    8. ' ' → logprob: -19.163042068481445
    9. ' ' → logprob: -19.788042068481445
    10. ' retval' → logprob: -19.913042068481445

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020170092582702637
    2. '
' → logprob: -4.520170211791992
    3. 'def' → logprob: -5.145170211791992
    4. '    
' → logprob: -6.770170211791992
    5. '<|end|>' → logprob: -6.770170211791992
    6. ' def' → logprob: -7.895170211791992
    7. '```' → logprob: -8.020170211791992
    8. '	def' → logprob: -9.270170211791992
    9. '<|end|>' → logprob: -10.270170211791992
    10. ' 
' → logprob: -10.270170211791992

Token 123: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34928813576698303
    2. '   ' → logprob: -1.3492881059646606
    3. '<|end|>' → logprob: -3.97428822517395
    4. '    
' → logprob: -5.224287986755371
    5. 'def' → logprob: -5.974287986755371
    6. ' 
' → logprob: -6.224287986755371
    7. ' ' → logprob: -6.224287986755371
    8. '  
' → logprob: -6.724287986755371
    9. ' def' → logprob: -7.099287986755371
    10. '```' → logprob: -7.349287986755371

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10676141828298569
    2. ',' → logprob: -2.4817614555358887
    3. '=' → logprob: -4.356761455535889
    4. ' ' → logprob: -5.731761455535889
    5. ' ,' → logprob: -6.481761455535889
    6. '=int' → logprob: -10.73176097869873
    7. ',N' → logprob: -12.10676097869873
    8. '   ' → logprob: -12.35676097869873
    9. '    ' → logprob: -12.35676097869873
    10. ' =
' → logprob: -12.48176097869873

Token 125: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07893352210521698
    2. 'int' → logprob: -2.5789334774017334
    3. ' ' → logprob: -10.328933715820312
    4. ' input' → logprob: -11.703933715820312
    5. 'input' → logprob: -13.578933715820312
    6. '(int' → logprob: -15.453933715820312
    7. '10' → logprob: -15.578933715820312
    8. '[int' → logprob: -15.578933715820312
    9. '=int' → logprob: -15.703933715820312
    10. '<int' → logprob: -15.828933715820312

Token 126: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16033409535884857
    2. '(input' → logprob: -1.9103341102600098
    3. 'input' → logprob: -9.660333633422852
    4. ' (' → logprob: -11.160333633422852
    5. '(
' → logprob: -11.285333633422852
    6. '('' → logprob: -11.410333633422852
    7. '()' → logprob: -12.910333633422852
    8. '("' → logprob: -13.285333633422852
    9. ' input' → logprob: -13.785333633422852
    10. '(`' → logprob: -14.035333633422852

Token 127: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10029195249080658
    2. '()' → logprob: -2.3502919673919678
    3. ')' → logprob: -9.475292205810547
    4. ' ())' → logprob: -12.725292205810547
    5. '(' → logprob: -13.600292205810547
    6. '())
' → logprob: -13.725292205810547
    7. '();)' → logprob: -13.975292205810547
    8. '()
' → logprob: -13.975292205810547
    9. '()]' → logprob: -14.725292205810547
    10. '()`' → logprob: -15.100292205810547

Token 128: 'S' (ID: 50)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08164599537849426
    2. 'a' → logprob: -3.081645965576172
    3. ' A' → logprob: -3.581645965576172
    4. 'arr' → logprob: -6.081645965576172
    5. ' a' → logprob: -7.331645965576172
    6. 'data' → logprob: -7.331645965576172
    7. 'S' → logprob: -8.206645965576172
    8. 'lst' → logprob: -8.456645965576172
    9. 'h' → logprob: -9.081645965576172
    10. 'P' → logprob: -9.956645965576172

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02657208777964115
    2. '=' → logprob: -3.6515719890594482
    3. ' ' → logprob: -9.026572227478027
    4. ',' → logprob: -9.776572227478027
    5. '=input' → logprob: -10.401572227478027
    6. ' =[' → logprob: -10.901572227478027
    7. 'paces' → logprob: -11.651572227478027
    8. '_' → logprob: -11.776572227478027
    9. '=[]' → logprob: -12.401572227478027
    10. '[' → logprob: -12.526572227478027

Token 130: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1430644392967224
    2. 'input' → logprob: -2.018064498901367
    3. ' list' → logprob: -8.518064498901367
    4. 'list' → logprob: -9.768064498901367
    5. '[input' → logprob: -9.893064498901367
    6. ' ' → logprob: -10.143064498901367
    7. '(input' → logprob: -11.268064498901367
    8. ' [' → logprob: -12.268064498901367
    9. '=input' → logprob: -12.268064498901367
    10. ' []' → logprob: -12.643064498901367

Token 131: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3979906439781189
    2. '(' → logprob: -1.1479907035827637
    3. '()' → logprob: -4.772990703582764
    4. '(map' → logprob: -6.522990703582764
    5. '(str' → logprob: -7.397990703582764
    6. '(range' → logprob: -8.522990226745605
    7. '(int' → logprob: -8.522990226745605
    8. '("' → logprob: -11.022990226745605
    9. '("("' → logprob: -11.022990226745605
    10. '('' → logprob: -11.147990226745605

Token 132: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023282520473003387
    2. '()' → logprob: -3.773282527923584
    3. '().' → logprob: -10.898282051086426
    4. ' ())' → logprob: -11.398282051086426
    5. '()))' → logprob: -13.273282051086426
    6. ')' → logprob: -13.398282051086426
    7. '();)' → logprob: -13.898282051086426
    8. '())
' → logprob: -14.398282051086426
    9. '()]' → logprob: -14.523282051086426
    10. '(' → logprob: -14.773282051086426

Token 133: 'Q' (ID: 48)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0858134031295776
    2. 'A' → logprob: -2.585813522338867
    3. 'bit' → logprob: -2.585813522338867
    4. 'a' → logprob: -2.585813522338867
    5. 'c' → logprob: -3.085813522338867
    6. 'counts' → logprob: -3.085813522338867
    7. '#' → logprob: -3.710813522338867
    8. 'd' → logprob: -3.710813522338867
    9. 'positions' → logprob: -3.710813522338867
    10. 'dp' → logprob: -3.835813522338867

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014748454093933
    2. '=' → logprob: -1.701474905014038
    3. '=int' → logprob: -9.826475143432617
    4. ' ' → logprob: -12.701475143432617
    5. '_' → logprob: -12.951475143432617
    6. ' =
' → logprob: -14.076475143432617
    7. 's' → logprob: -14.576475143432617
    8. ',' → logprob: -15.576475143432617
    9. '.' → logprob: -16.076475143432617
    10. '＝' → logprob: -16.451475143432617

Token 135: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2519305646419525
    2. 'int' → logprob: -1.501930594444275
    3. '[int' → logprob: -14.376930236816406
    4. '(int' → logprob: -14.626930236816406
    5. '=int' → logprob: -15.001930236816406
    6. '	int' → logprob: -16.501930236816406
    7. '<int' → logprob: -16.626930236816406
    8. ']int' → logprob: -18.376930236816406
    9. ' in' → logprob: -19.001930236816406
    10. ':int' → logprob: -19.126930236816406

Token 136: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06277777999639511
    2. '(input' → logprob: -2.8127777576446533
    3. '()' → logprob: -7.562777996063232
    4. 'input' → logprob: -8.687777519226074
    5. '(
' → logprob: -9.562777519226074
    6. '('' → logprob: -10.562777519226074
    7. ''' → logprob: -11.937777519226074
    8. '"' → logprob: -12.312777519226074
    9. ' (' → logprob: -12.812777519226074
    10. '("' → logprob: -13.187777519226074

Token 137: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06606967747211456
    2. '())' → logprob: -3.0660696029663086
    3. ')' → logprob: -4.066069602966309
    4. '()
' → logprob: -8.691069602966309
    5. '())
' → logprob: -11.191069602966309
    6. '(' → logprob: -13.191069602966309
    7. ')
' → logprob: -14.191069602966309
    8. '()
' → logprob: -15.316069602966309
    9. ' ())' → logprob: -15.441069602966309
    10. '();)' → logprob: -15.441069602966309

Token 138: 'bit' (ID: 6516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019023398635908961
    2. 'results' → logprob: -6.876902103424072
    3. ' for' → logprob: -7.626902103424072
    4. 'result' → logprob: -9.00190258026123
    5. 'res' → logprob: -9.25190258026123
    6. '
' → logprob: -9.50190258026123
    7. 'answers' → logprob: -10.25190258026123
    8. 'bit' → logprob: -11.00190258026123
    9. 'output' → logprob: -11.62690258026123
    10. 'ans' → logprob: -11.75190258026123

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006499243434518576
    2. 's' → logprob: -5.881499290466309
    3. '=' → logprob: -6.006499290466309
    4. '.' → logprob: -7.381499290466309
    5. '_' → logprob: -7.881499290466309
    6. '1' → logprob: -8.756499290466309
    7. ' ' → logprob: -10.006499290466309
    8. 'es' → logprob: -12.131499290466309
    9. ',' → logprob: -12.631499290466309
    10. 'A' → logprob: -13.756499290466309

Token 140: ' [' (ID: 723)
  Prédit: ' BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' BIT' → logprob: -0.34859806299209595
    2. 'BIT' → logprob: -1.2235980033874512
    3. '	BIT' → logprob: -9.97359848022461
    4. ' Bit' → logprob: -10.34859848022461
    5. 'Bit' → logprob: -10.34859848022461
    6. 'B' → logprob: -11.47359848022461
    7. ' ' → logprob: -11.47359848022461
    8. '_BIT' → logprob: -11.59859848022461
    9. ' bit' → logprob: -12.59859848022461
    10. 'BI' → logprob: -13.47359848022461

Token 141: 'BIT' (ID: 41038)
  Prédit: 'BIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.014004943892359734
    2. ' BIT' → logprob: -4.389004707336426
    3. '0' → logprob: -7.514004707336426
    4. '(B' → logprob: -8.264004707336426
    5. '	BIT' → logprob: -9.014004707336426
    6. '[' → logprob: -9.264004707336426
    7. ']' → logprob: -9.389004707336426
    8. 'B' → logprob: -9.514004707336426
    9. 'Bit' → logprob: -9.639004707336426
    10. 'None' → logprob: -9.639004707336426

Token 142: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049733966588974
    2. '(len' → logprob: -3.424733877182007
    3. '(N' → logprob: -4.174734115600586
    4. '(ord' → logprob: -8.174734115600586
    5. '((' → logprob: -8.674734115600586
    6. ' (' → logprob: -9.799734115600586
    7. '(i' → logprob: -11.424734115600586
    8. '(max' → logprob: -11.799734115600586
    9. '](' → logprob: -11.924734115600586
    10. ')(' → logprob: -12.174734115600586

Token 143: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004732102679554373
    2. '+' → logprob: -7.8754730224609375
    3. ' +' → logprob: -10.125473022460938
    4. ')]' → logprob: -10.375473022460938
    5. '),' → logprob: -11.250473022460938
    6. ' )' → logprob: -12.000473022460938
    7. ' ' → logprob: -14.250473022460938
    8. ')
' → logprob: -14.500473022460938
    9. '),
' → logprob: -14.500473022460938
    10. ']' → logprob: -15.625473022460938

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07343016564846039
    2. '2' → logprob: -2.698430061340332
    3. '5' → logprob: -6.573430061340332
    4. '3' → logprob: -6.698430061340332
    5. ' ' → logprob: -7.573430061340332
    6. '10' → logprob: -9.073430061340332
    7. '4' → logprob: -9.323430061340332
    8. '7' → logprob: -9.698430061340332
    9. '6' → logprob: -10.198430061340332
    10. '0' → logprob: -11.073430061340332

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.898723561083898e-05
    2. ')]' → logprob: -9.750079154968262
    3. ' )' → logprob: -11.125079154968262
    4. '),' → logprob: -12.500079154968262
    5. ')
' → logprob: -14.375079154968262
    6. ' ' → logprob: -14.750079154968262
    7. ']' → logprob: -15.000079154968262
    8. ')])' → logprob: -15.875079154968262
    9. '))' → logprob: -16.125078201293945
    10. '+' → logprob: -16.125078201293945

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05504826083779335
    2. 'for' → logprob: -2.9300482273101807
    3. ']' → logprob: -9.680047988891602
    4. ')' → logprob: -9.805047988891602
    5. ' ' → logprob: -10.930047988891602
    6. '	for' → logprob: -11.305047988891602
    7. '()' → logprob: -11.430047988891602
    8. '   ' → logprob: -12.180047988891602
    9. ',' → logprob: -14.305047988891602
    10. '  ' → logprob: -15.430047988891602

Token 147: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6226138472557068
    2. '(' → logprob: -1.3726139068603516
    3. ' range' → logprob: -2.3726139068603516
    4. '_' → logprob: -2.6226139068603516
    5. ' (' → logprob: -4.247613906860352
    6. 'range' → logprob: -4.622613906860352
    7. '(range' → logprob: -4.747613906860352
    8. ' ' → logprob: -5.247613906860352
    9. '(_)' → logprob: -5.497613906860352
    10. ' i' → logprob: -7.372613906860352

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32203224301338196
    2. 'in' → logprob: -1.3220322132110596
    3. '(' → logprob: -5.447032451629639
    4. ' ' → logprob: -6.697032451629639
    5. ' range' → logprob: -6.947032451629639
    6. '(range' → logprob: -7.197032451629639
    7. 'range' → logprob: -7.447032451629639
    8. '()' → logprob: -8.19703197479248
    9. ' (' → logprob: -8.32203197479248
    10. ')' → logprob: -9.07203197479248

Token 149: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015040287980809808
    2. 'range' → logprob: -6.501503944396973
    3. '(range' → logprob: -13.751503944396973
    4. '	range' → logprob: -15.251503944396973
    5. ' ' → logprob: -15.376503944396973
    6. ' xrange' → logprob: -15.876503944396973
    7. '   ' → logprob: -20.00150489807129
    8. '.range' → logprob: -20.25150489807129
    9. ' rang' → logprob: -20.37650489807129
    10. '[' → logprob: -20.50150489807129

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023798657639417797
    2. '(range' → logprob: -8.500238418579102
    3. ' (' → logprob: -10.500238418579102
    4. ' range' → logprob: -12.125238418579102
    5. 'range' → logprob: -15.125238418579102
    6. '('' → logprob: -15.250238418579102
    7. '((' → logprob: -15.375238418579102
    8. '("' → logprob: -15.875238418579102
    9. '(ord' → logprob: -15.875238418579102
    10. '(
' → logprob: -16.0002384185791

Token 151: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0036363035906106234
    2. ' ' → logprob: -6.253636360168457
    3. '27' → logprob: -6.378636360168457
    4. '28' → logprob: -12.878636360168457
    5. '(' → logprob: -13.128636360168457
    6. '   ' → logprob: -13.253636360168457
    7. '30' → logprob: -14.753636360168457
    8. '2' → logprob: -15.253636360168457
    9. '36' → logprob: -15.253636360168457
    10. '25' → logprob: -15.378636360168457

Token 152: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003358800895512104
    2. ')' → logprob: -5.753358840942383
    3. ']' → logprob: -8.628358840942383
    4. ' )' → logprob: -13.253358840942383
    5. '))' → logprob: -16.128358840942383
    6. '])' → logprob: -16.253358840942383
    7. ')}' → logprob: -16.628358840942383
    8. ' ]' → logprob: -16.628358840942383
    9. ')])' → logprob: -17.128358840942383
    10. ')],' → logprob: -17.628358840942383

Token 153: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003318165196105838
    2. ' for' → logprob: -5.7533183097839355
    3. '
' → logprob: -8.878317832946777
    4. '	for' → logprob: -14.753317832946777
    5. ' 
' → logprob: -14.878317832946777
    6. '<|end|>' → logprob: -16.003318786621094
    7. 'def' → logprob: -16.378318786621094
    8. '' → logprob: -16.878318786621094
    9. '  
' → logprob: -17.628318786621094
    10. '
' → logprob: -18.253318786621094

Token 154: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12535838782787323
    2. ' i' → logprob: -2.2503583431243896
    3. '_' → logprob: -4.750358581542969
    4. ' ' → logprob: -5.875358581542969
    5. ' c' → logprob: -7.000358581542969
    6. 'i' → logprob: -9.875358581542969
    7. ' q' → logprob: -11.625358581542969
    8. ' ' → logprob: -11.750358581542969
    9. '  ' → logprob: -11.875358581542969
    10. ' x' → logprob: -13.250358581542969

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021541550755500793
    2. 'in' → logprob: -4.021541595458984
    3. ' ' → logprob: -6.146541595458984
    4. ',' → logprob: -6.771541595458984
    5. ' i' → logprob: -10.521541595458984
    6. '(' → logprob: -10.896541595458984
    7. ' range' → logprob: -11.521541595458984
    8. 'range' → logprob: -11.521541595458984
    9. '	in' → logprob: -11.771541595458984
    10. '  ' → logprob: -11.896541595458984

Token 156: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759487152099609
    2. 'range' → logprob: -0.8259487152099609
    3. '(range' → logprob: -11.700948715209961
    4. '	range' → logprob: -14.825948715209961
    5. ' xrange' → logprob: -15.075948715209961
    6. ' ' → logprob: -15.200948715209961
    7. '   ' → logprob: -17.82594871520996
    8. ')' → logprob: -18.45094871520996
    9. 'rang' → logprob: -19.07594871520996
    10. '_range' → logprob: -19.32594871520996

Token 157: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0018677101470530033
    2. '(' → logprob: -6.376867771148682
    3. '(len' → logprob: -9.126867294311523
    4. ' (' → logprob: -9.876867294311523
    5. '(n' → logprob: -13.126867294311523
    6. '(Q' → logprob: -13.751867294311523
    7. 'N' → logprob: -14.251867294311523
    8. '(
' → logprob: -14.376867294311523
    9. ' ' → logprob: -15.001867294311523
    10. ' N' → logprob: -15.001867294311523

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004246031399816275
    2. '):
' → logprob: -5.504246234893799
    3. ' ):' → logprob: -8.87924575805664
    4. ')' → logprob: -10.75424575805664
    5. ']:' → logprob: -12.50424575805664
    6. '):
' → logprob: -13.75424575805664
    7. ':' → logprob: -14.87924575805664
    8. ' ):
' → logprob: -14.87924575805664
    9. '+' → logprob: -15.25424575805664
    10. '）：' → logprob: -15.62924575805664

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5253797173500061
    2. ' bit' → logprob: -0.9003797173500061
    3. 'bit' → logprob: -6.275379657745361
    4. '    ' → logprob: -9.27538013458252
    5. '(bit' → logprob: -9.40038013458252
    6. ' ' → logprob: -9.77538013458252
    7. '_bit' → logprob: -10.52538013458252
    8. '   ' → logprob: -10.77538013458252
    9. '	b' → logprob: -11.02538013458252
    10. 'bitr' → logprob: -11.77538013458252

Token 160: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.6985276341438293
    2. 'bit' (adapté à ' bit') → logprob: -0.6985276341438293
    3. 'idx' → logprob: -6.448527812957764
    4. ' idx' → logprob: -6.448527812957764
    5. 'c' → logprob: -6.823527812957764
    6. '   ' → logprob: -7.823527812957764
    7. ' c' → logprob: -7.823527812957764
    8. 'x' → logprob: -9.073527336120605
    9. 'index' → logprob: -9.823527336120605
    10. ' index' → logprob: -9.948527336120605

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001035787514410913
    2. '[S' → logprob: -6.876035690307617
    3. '[[' → logprob: -14.376035690307617
    4. '[val' → logprob: -15.001035690307617
    5. '[(' → logprob: -15.376035690307617
    6. 'S' → logprob: -15.376035690307617
    7. 'ord' → logprob: -15.501035690307617
    8. '[int' → logprob: -15.626035690307617
    9. '[s' → logprob: -16.001035690307617
    10. '[ch' → logprob: -16.376035690307617

Token 162: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0009544557542540133
    2. ' ord' → logprob: -7.000954627990723
    3. '(ord' → logprob: -10.250954627990723
    4. '[' → logprob: -11.875954627990723
    5. 'or' → logprob: -15.375954627990723
    6. '   ' → logprob: -15.750954627990723
    7. '
' → logprob: -16.000953674316406
    8. 'ordi' → logprob: -16.875953674316406
    9. 'ords' → logprob: -17.000953674316406
    10. '_ord' → logprob: -18.000953674316406

Token 163: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.750021934509277
    3. 'S' → logprob: -15.375021934509277
    4. '(
' → logprob: -16.375022888183594
    5. '(s' → logprob: -16.500022888183594
    6. '[S' → logprob: -16.500022888183594
    7. '((' → logprob: -16.875022888183594
    8. ' (' → logprob: -17.125022888183594
    9. '('' → logprob: -19.000022888183594
    10. '```' → logprob: -19.250022888183594

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. ' [' → logprob: -15.875000953674316
    4. '[S' → logprob: -16.625001907348633
    5. '[
' → logprob: -17.375001907348633
    6. 'i' → logprob: -17.500001907348633
    7. '[I' → logprob: -18.250001907348633
    8. ')' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. 'S' → logprob: -20.125001907348633

Token 165: '])-' (ID: 160447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036365347914397717
    2. ' )' → logprob: -5.878636360168457
    3. ')-' → logprob: -7.253636360168457
    4. ' ' → logprob: -9.628636360168457
    5. '[' → logprob: -10.878636360168457
    6. ')]' → logprob: -11.628636360168457
    7. '-' → logprob: -11.753636360168457
    8. '-)' → logprob: -11.878636360168457
    9. '   ' → logprob: -12.253636360168457
    10. ']' → logprob: -12.753636360168457

Token 166: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.09678348153829575
    2. 'ord' → logprob: -2.971783399581909
    3. 'a' → logprob: -3.221783399581909
    4. ''a' → logprob: -7.471783638000488
    5. ' ord' → logprob: -8.096783638000488
    6. '(ord' → logprob: -9.096783638000488
    7. '`' → logprob: -9.846783638000488
    8. '96' → logprob: -10.221783638000488
    9. ''' → logprob: -10.721783638000488
    10. '```' → logprob: -10.721783638000488

Token 167: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0072989752516150475
    2. ').' → logprob: -5.007298946380615
    3. '.add' → logprob: -8.257299423217773
    4. '.' → logprob: -8.882299423217773
    5. ' ].' → logprob: -8.882299423217773
    6. ']' → logprob: -10.382299423217773
    7. ')].' → logprob: -12.132299423217773
    8. ')' → logprob: -12.757299423217773
    9. '   ' → logprob: -13.132299423217773
    10. ':].' → logprob: -13.757299423217773

Token 168: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. ' add' → logprob: -15.875
    3. '.add' → logprob: -19.75
    4. '```' → logprob: -19.875
    5. '`' → logprob: -20.75
    6. ')add' → logprob: -21.75
    7. '	add' → logprob: -21.875
    8. '1' → logprob: -22.25
    9. 'a' → logprob: -22.25
    10. '_add' → logprob: -22.375

Token 169: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -14.750096321105957
    4. '((' → logprob: -16.250097274780273
    5. ' (' → logprob: -16.500097274780273
    6. '(I' → logprob: -19.125097274780273
    7. ')(' → logprob: -19.500097274780273
    8. '(int' → logprob: -19.750097274780273
    9. '(ii' → logprob: -20.250097274780273
    10. 'i' → logprob: -20.375097274780273

Token 170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05434059724211693
    2. ' +' → logprob: -3.0543406009674072
    3. '1' → logprob: -5.179340362548828
    4. ' ' → logprob: -9.554340362548828
    5. '+
' → logprob: -10.554340362548828
    6. ' +
' → logprob: -12.429340362548828
    7. ',' → logprob: -14.179340362548828
    8. '2' → logprob: -14.179340362548828
    9. '()+' → logprob: -14.304340362548828
    10. '+,' → logprob: -14.804340362548828

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '<|end|>' → logprob: -17.000001907348633
    6. '```' → logprob: -17.875001907348633
    7. '+' → logprob: -18.250001907348633
    8. '۱' → logprob: -19.750001907348633
    9. '１' → logprob: -20.062501907348633
    10. '  ' → logprob: -20.250001907348633

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001017551330733113
    2. '1' → logprob: -9.375102043151855
    3. ' ,' → logprob: -11.000102043151855
    4. ')' → logprob: -16.87510108947754
    5. ',
' → logprob: -17.00010108947754
    6. '   ' → logprob: -17.50010108947754
    7. ' ' → logprob: -18.62510108947754
    8. '),' → logprob: -19.25010108947754
    9. '‌,' → logprob: -19.37510108947754
    10. '`,' → logprob: -19.50010108947754

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014132341311778873
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -13.500141143798828
    4. '  ' → logprob: -17.625141143798828
    5. ')' → logprob: -18.250141143798828
    6. '+' → logprob: -18.750141143798828
    7. '```' → logprob: -18.750141143798828
    8. '    ' → logprob: -19.125141143798828
    9. '۱' → logprob: -20.000141143798828
    10. '１' → logprob: -20.375141143798828

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.625009536743164
    4. '  ' → logprob: -18.500009536743164
    5. '
' → logprob: -19.500009536743164
    6. ')' → logprob: -19.625009536743164
    7. '```' → logprob: -19.750009536743164
    8. '１' → logprob: -20.375009536743164
    9. '۱' → logprob: -20.375009536743164
    10. '+' → logprob: -20.750009536743164

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.500005722045898
    4. ')

' → logprob: -17.5000057220459
    5. '#' → logprob: -17.7500057220459
    6. '<|end|>' → logprob: -17.7500057220459
    7. ')i' → logprob: -17.8750057220459
    8. ')#' → logprob: -17.8750057220459
    9. '),' → logprob: -18.0000057220459
    10. ')return' → logprob: -18.1250057220459

Token 176: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.000006675720215
    3. '
' → logprob: -15.375006675720215
    4. 'def' → logprob: -17.5000057220459
    5. '	for' → logprob: -18.0000057220459
    6. '```' → logprob: -19.5000057220459
    7. '\n' → logprob: -19.6250057220459
    8. '\' → logprob: -19.8750057220459
    9. 'while' → logprob: -19.8750057220459
    10. ' 
' → logprob: -19.8750057220459

Token 177: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.002023804932832718
    2. '_' → logprob: -6.502023696899414
    3. ' ' → logprob: -7.627023696899414
    4. ' range' → logprob: -11.127023696899414
    5. ' i' → logprob: -12.252023696899414
    6. ' in' → logprob: -12.252023696899414
    7. ' ' → logprob: -12.627023696899414
    8. ' ​' → logprob: -13.252023696899414
    9. ' ‌' → logprob: -13.377023696899414
    10. ' __' → logprob: -13.752023696899414

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25286370515823364
    2. 'in' → logprob: -1.5028636455535889
    3. ' ' → logprob: -7.127863883972168
    4. 'range' → logprob: -10.127863883972168
    5. ' _' → logprob: -10.752863883972168
    6. '  ' → logprob: -10.877863883972168
    7. '_' → logprob: -10.877863883972168
    8. '	in' → logprob: -11.502863883972168
    9. '   ' → logprob: -11.877863883972168
    10. 'n' → logprob: -12.502863883972168

Token 179: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326544284820557
    2. 'range' → logprob: -1.3132654428482056
    3. ' ' → logprob: -12.938265800476074
    4. ' ran' → logprob: -14.813265800476074
    5. ' rang' → logprob: -15.688265800476074
    6. 'rang' → logprob: -15.813265800476074
    7. ' in' → logprob: -15.938265800476074
    8. 'in' → logprob: -16.063264846801758
    9. '  ' → logprob: -16.313264846801758
    10. '(range' → logprob: -16.438264846801758

Token 180: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.002083166502416134
    2. ' range' → logprob: -6.6270833015441895
    3. '(' → logprob: -7.7520833015441895
    4. 'range' → logprob: -9.127082824707031
    5. ' Q' → logprob: -9.252082824707031
    6. '(range' → logprob: -9.627082824707031
    7. ' (' → logprob: -10.377082824707031
    8. 'Q' → logprob: -11.252082824707031
    9. ' ' → logprob: -11.877082824707031
    10. ' in' → logprob: -13.002082824707031

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0167873352766037
    2. ' ):' → logprob: -4.141787528991699
    3. ',' → logprob: -7.641787528991699
    4. '):
' → logprob: -9.0167875289917
    5. ')' → logprob: -9.2667875289917
    6. ' ,' → logprob: -11.0167875289917
    7. ':' → logprob: -11.1417875289917
    8. '():' → logprob: -12.1417875289917
    9. ' in' → logprob: -12.1417875289917
    10. ' ' → logprob: -12.7667875289917

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048341721296310425
    2. ' s' → logprob: -4.298341751098633
    3. ' line' → logprob: -4.423341751098633
    4. ' ' → logprob: -5.548341751098633
    5. '	line' → logprob: -6.048341751098633
    6. '    
' → logprob: -6.048341751098633
    7. '    ' → logprob: -6.423341751098633
    8. ' c' → logprob: -6.548341751098633
    9. ' \' → logprob: -6.673341751098633
    10. ' ‌' → logprob: -7.173341751098633

Token 183: ' q' (ID: 2335)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.060075044631958
    2. 't' → logprob: -1.310075044631958
    3. 'q' (adapté à ' q') → logprob: -1.810075044631958
    4. 'l' → logprob: -2.560075044631958
    5. 'query' → logprob: -2.685075044631958
    6. 'cmd' → logprob: -3.810075044631958
    7. 's' → logprob: -4.185074806213379
    8. '   ' → logprob: -4.310074806213379
    9. 'tmp' → logprob: -5.310074806213379
    10. 'line' → logprob: -5.560074806213379

Token 184: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04699212685227394
    2. '=' → logprob: -3.296992063522339
    3. 'p' → logprob: -5.546992301940918
    4. ' ' → logprob: -5.546992301940918
    5. '_' → logprob: -7.046992301940918
    6. 's' → logprob: -9.796992301940918
    7. 'type' → logprob: -10.171992301940918
    8. 'ype' → logprob: -10.296992301940918
    9. ',' → logprob: -11.046992301940918
    10. '[' → logprob: -11.296992301940918

Token 185: ' x' (ID: 1215)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2859087586402893
    2. '*a' → logprob: -1.5359086990356445
    3. '*l' → logprob: -4.6609086990356445
    4. ' *' → logprob: -4.9109086990356445
    5. '*x' → logprob: -5.5359086990356445
    6. '*t' → logprob: -5.6609086990356445
    7. '*s' → logprob: -5.9109086990356445
    8. 'a' → logprob: -6.1609086990356445
    9. '=' → logprob: -6.5359086990356445
    10. '*p' → logprob: -7.5359086990356445

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024806970730423927
    2. '=' → logprob: -4.399806976318359
    3. ' =' → logprob: -4.649806976318359
    4. ' ,' → logprob: -6.899806976318359
    5. ',y' → logprob: -7.149806976318359
    6. ',x' → logprob: -8.14980697631836
    7. ' ' → logprob: -8.52480697631836
    8. ',*' → logprob: -9.52480697631836
    9. ',input' → logprob: -10.02480697631836
    10. ',s' → logprob: -10.39980697631836

Token 187: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14298300445079803
    2. ' y' → logprob: -2.5179829597473145
    3. 'c' → logprob: -3.0179829597473145
    4. ' c' → logprob: -6.2679829597473145
    5. '*y' → logprob: -6.8929829597473145
    6. '*' → logprob: -7.8929829597473145
    7. '*c' → logprob: -8.642983436584473
    8. 'z' → logprob: -9.767983436584473
    9. ' *' → logprob: -10.142983436584473
    10. 's' → logprob: -10.517983436584473

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759609341621399
    2. ' =' → logprob: -0.8259609341621399
    3. ',' → logprob: -11.325961112976074
    4. '=input' → logprob: -11.825961112976074
    5. ' ' → logprob: -13.950961112976074
    6. '=line' → logprob: -14.950961112976074
    7. '＝' → logprob: -15.450961112976074
    8. '[' → logprob: -16.325960159301758
    9. ' =[' → logprob: -16.450960159301758
    10. ')' → logprob: -16.450960159301758

Token 189: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14375145733356476
    2. ' input' → logprob: -2.018751382827759
    3. 'map' → logprob: -7.018751621246338
    4. ' map' → logprob: -9.14375114440918
    5. '(input' → logprob: -10.64375114440918
    6. 'list' → logprob: -10.89375114440918
    7. '=input' → logprob: -11.39375114440918
    8. '[input' → logprob: -11.76875114440918
    9. ' ' → logprob: -12.26875114440918
    10. '[' → logprob: -13.51875114440918

Token 190: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.976922744186595e-05
    2. '()' → logprob: -10.500040054321289
    3. ' ().' → logprob: -12.500040054321289
    4. '.' → logprob: -12.625040054321289
    5. '(' → logprob: -12.875040054321289
    6. '.split' → logprob: -13.250040054321289
    7. ' .' → logprob: -14.500040054321289
    8. 'split' → logprob: -16.25004005432129
    9. '(.' → logprob: -17.25004005432129
    10. '().'' → logprob: -17.87504005432129

Token 191: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003558423195499927
    2. 'strip' → logprob: -8.00035572052002
    3. 'rstrip' → logprob: -10.87535572052002
    4. ' split' → logprob: -14.25035572052002
    5. '(split' → logprob: -14.75035572052002
    6. 'spl' → logprob: -15.00035572052002
    7. 's' → logprob: -17.500356674194336
    8. 'sp' → logprob: -17.750356674194336
    9. '.split' → logprob: -17.875356674194336
    10. '```' → logprob: -18.375356674194336

Token 192: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' q' (ID: 2335)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3120533227920532
    2. ' if' → logprob: -1.4370533227920532
    3. '[' → logprob: -4.437053203582764
    4. '<|end|>' → logprob: -5.687053203582764
    5. ' ' → logprob: -5.812053203582764
    6. 'x' → logprob: -5.812053203582764
    7. '\n' → logprob: -6.437053203582764
    8. '[i' → logprob: -6.687053203582764
    9. '```' → logprob: -6.937053203582764
    10. '    
' → logprob: -7.437053203582764

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287458658218384
    2. ' =' → logprob: -1.1787458658218384
    3. ' ==' → logprob: -3.553745746612549
    4. '==' → logprob: -4.928745746612549
    5. ' ' → logprob: -5.803745746612549
    6. '[' → logprob: -7.553745746612549
    7. '<|end|>' → logprob: -7.678745746612549
    8. ',' → logprob: -7.803745746612549
    9. 'space' → logprob: -8.178746223449707
    10. 's' → logprob: -9.178746223449707

Token 196: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7092037796974182
    2. 'q' → logprob: -0.8342037796974182
    3. ' q' → logprob: -3.2092037200927734
    4. ' int' → logprob: -3.4592037200927734
    5. 'str' → logprob: -6.334203720092773
    6. ' ' → logprob: -9.959203720092773
    7. ' str' → logprob: -10.084203720092773
    8. ''q' → logprob: -11.584203720092773
    9. 'ord' → logprob: -12.209203720092773
    10. ' ord' → logprob: -12.709203720092773

Token 197: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.007725991308689117
    2. '(' → logprob: -4.882726192474365
    3. '()' → logprob: -9.382725715637207
    4. 'q' → logprob: -10.382725715637207
    5. '(
' → logprob: -13.757725715637207
    6. '(x' → logprob: -13.882725715637207
    7. ' (' → logprob: -14.257725715637207
    8. '(`' → logprob: -14.757725715637207
    9. '	q' → logprob: -15.132725715637207
    10. '('' → logprob: -15.257725715637207

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006116442382335663
    2. ' )' → logprob: -7.625611782073975
    3. '<|end|>' → logprob: -9.125611305236816
    4. ')
' → logprob: -11.875611305236816
    5. '())' → logprob: -13.375611305236816
    6. '<|end|>' → logprob: -13.500611305236816
    7. ',' → logprob: -14.000611305236816
    8. '[' → logprob: -14.500611305236816
    9. ' ' → logprob: -14.500611305236816
    10. '   ' → logprob: -14.750611305236816

Token 199: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014506053179502487
    2. ' if' → logprob: -4.264505863189697
    3. 'x' → logprob: -8.514506340026855
    4. ' ' → logprob: -9.139506340026855
    5. '<|end|>' → logprob: -11.139506340026855
    6. '   ' → logprob: -11.514506340026855
    7. '	if' → logprob: -12.389506340026855
    8. ' 
' → logprob: -13.014506340026855
    9. '    ' → logprob: -13.514506340026855
    10. ' x' → logprob: -14.264506340026855

Token 201: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.00043913270928896964
    2. 'q' → logprob: -7.750439167022705
    3. ' ' → logprob: -11.750438690185547
    4. '	q' → logprob: -14.750438690185547
    5. ' ' → logprob: -16.250438690185547
    6. '1' → logprob: -17.250438690185547
    7. '    ' → logprob: -17.875438690185547
    8. '(q' → logprob: -18.250438690185547
    9. '  ' → logprob: -18.500438690185547
    10. ' (' → logprob: -19.000438690185547

Token 202: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04301813989877701
    2. '==' → logprob: -3.168018102645874
    3. '=' → logprob: -11.668018341064453
    4. ' ' → logprob: -12.043018341064453
    5. ' =' → logprob: -12.918018341064453
    6. ' ' → logprob: -14.043018341064453
    7. '[' → logprob: -15.043018341064453
    8. '1' → logprob: -15.418018341064453
    9. ')==' → logprob: -15.543018341064453
    10. ']==' → logprob: -15.793018341064453

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02325817570090294
    2. ' ' → logprob: -3.7732582092285156
    3. '2' → logprob: -11.398258209228516
    4. '  ' → logprob: -13.898258209228516
    5. '   ' → logprob: -15.648258209228516
    6. '１' → logprob: -16.148258209228516
    7. '0' → logprob: -16.273258209228516
    8. '    ' → logprob: -16.398258209228516
    9. '```' → logprob: -17.148258209228516
    10. ')' → logprob: -17.710758209228516

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022690063633490354
    2. '2' → logprob: -8.750226974487305
    3. ' ' → logprob: -9.625226974487305
    4. '  ' → logprob: -14.000226974487305
    5. '```' → logprob: -14.750226974487305
    6. '   ' → logprob: -15.125226974487305
    7. '0' → logprob: -15.375226974487305
    8. 'update' → logprob: -15.625226974487305
    9. '１' → logprob: -16.437726974487305
    10. '    ' → logprob: -16.562726974487305

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019404153572395444
    2. ':
' → logprob: -6.2519402503967285
    3. ' :' → logprob: -11.501940727233887
    4. ',' → logprob: -14.251940727233887
    5. ' :
' → logprob: -14.501940727233887
    6. ' and' → logprob: -15.626940727233887
    7. ':
' → logprob: -15.626940727233887
    8. '):' → logprob: -15.751940727233887
    9. ':

' → logprob: -16.25193977355957
    10. '：' → logprob: -17.00193977355957

Token 206: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3974241316318512
    2. '   ' → logprob: -1.6474241018295288
    3. ':
' → logprob: -2.2724242210388184
    4. ' :
' → logprob: -4.272424221038818
    5. ' x' → logprob: -5.147424221038818
    6. ',' → logprob: -5.272424221038818
    7. ' :' → logprob: -5.647424221038818
    8. '       ' → logprob: -6.147424221038818
    9. ' ' → logprob: -7.897424221038818
    10. 'x' → logprob: -7.897424221038818

Token 207: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020796209573746
    2. ' x' → logprob: -2.350208044052124
    3. '	x' → logprob: -14.600208282470703
    4. '   ' → logprob: -14.850208282470703
    5. '_x' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.225208282470703
    7. 'pos' → logprob: -16.225208282470703
    8. 'idx' → logprob: -16.350208282470703
    9. 'c' → logprob: -17.850208282470703
    10. 'index' → logprob: -18.100208282470703

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09258086234331131
    2. '=' → logprob: -3.217580795288086
    3. 'nt' → logprob: -3.592580795288086
    4. ',' → logprob: -4.842580795288086
    5. 'n' → logprob: -4.967580795288086
    6. 'nd' → logprob: -6.092580795288086
    7. ' ' → logprob: -6.967580795288086
    8. 'd' → logprob: -7.217580795288086
    9. 'x' → logprob: -7.467580795288086
    10. 'f' → logprob: -7.467580795288086

Token 209: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019288709154352546
    2. ' int' → logprob: -6.251928806304932
    3. 'x' → logprob: -16.001928329467773
    4. '	int' → logprob: -16.751928329467773
    5. '[int' → logprob: -17.751928329467773
    6. '<int' → logprob: -17.876928329467773
    7. ' x' → logprob: -18.376928329467773
    8. ']int' → logprob: -18.626928329467773
    9. '(int' → logprob: -18.876928329467773
    10. '=int' → logprob: -19.626928329467773

Token 210: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011060673743486404
    2. '(' → logprob: -4.51106071472168
    3. '(y' → logprob: -11.63606071472168
    4. ' (' → logprob: -13.51106071472168
    5. '(
' → logprob: -13.63606071472168
    6. 'x' → logprob: -14.38606071472168
    7. '<|end|>' → logprob: -15.51106071472168
    8. ')' → logprob: -15.63606071472168
    9. ' ' → logprob: -15.76106071472168
    10. '()' → logprob: -16.01106071472168

Token 211: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005216682329773903
    2. ')
' → logprob: -5.755216598510742
    3. ' )' → logprob: -6.255216598510742
    4. ',' → logprob: -9.755216598510742
    5. ' )
' → logprob: -10.255216598510742
    6. ' ,' → logprob: -11.255216598510742
    7. '),' → logprob: -13.630216598510742
    8. '<|end|>' → logprob: -13.755216598510742
    9. ' ' → logprob: -13.880216598510742
    10. '")' → logprob: -14.005216598510742

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.500001907348633
    4. '0' → logprob: -18.875001907348633
    5. '+' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.875001907348633
    8. ':' → logprob: -20.250001907348633
    9. ',' → logprob: -20.875001907348633
    10. '
' → logprob: -21.187501907348633

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6228028535842896
    2. ' c' → logprob: -1.6228028535842896
    3. 'c' → logprob: -2.497802734375
    4. '   ' → logprob: -2.747802734375
    5. '       ' → logprob: -3.122802734375
    6. ' 
' → logprob: -4.122802734375
    7. ' ' → logprob: -4.747802734375
    8. 'bit' → logprob: -4.747802734375
    9. ' bit' → logprob: -4.747802734375
    10. '    
' → logprob: -4.872802734375

Token 214: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12030987441539764
    2. ' c' → logprob: -2.245309829711914
    3. '   ' → logprob: -6.120309829711914
    4. '
' → logprob: -6.245309829711914
    5. 'idx' → logprob: -6.995309829711914
    6. 'ch' → logprob: -7.620309829711914
    7. '       ' → logprob: -7.745309829711914
    8. 'char' → logprob: -8.245309829711914
    9. 'old' → logprob: -8.495309829711914
    10. ',' → logprob: -8.495309829711914

Token 215: ' bit' (ID: 3546)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011717032641172409
    2. 'old' → logprob: -5.511716842651367
    3. 'idx' → logprob: -6.011716842651367
    4. 'y' → logprob: -6.761716842651367
    5. 'ch' → logprob: -6.886716842651367
    6. 'j' → logprob: -6.886716842651367
    7. 'bit' (adapté à ' bit') → logprob: -6.886716842651367
    8. 'd' → logprob: -8.386716842651367
    9. '   ' → logprob: -8.511716842651367
    10. 'new' → logprob: -8.761716842651367

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.875
    3. '[
' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. 'ord' → logprob: -18.375
    6. '
' → logprob: -19.375
    7. 'bit' → logprob: -19.75
    8. '[word' → logprob: -20.375
    9. ' ' → logprob: -20.625
    10. '[(' → logprob: -20.75

Token 217: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -4.620622712536715e-05
    2. '(ord' → logprob: -10.750045776367188
    3. ' ord' → logprob: -11.000045776367188
    4. '[' → logprob: -11.750045776367188
    5. '(' → logprob: -17.250045776367188
    6. '
' → logprob: -18.000045776367188
    7. 'ords' → logprob: -18.375045776367188
    8. '   ' → logprob: -19.250045776367188
    9. 'bit' → logprob: -19.250045776367188
    10. '_ord' → logprob: -19.625045776367188

Token 218: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. 'S' → logprob: -15.000006675720215
    4. '('' → logprob: -16.3750057220459
    5. '(
' → logprob: -17.6250057220459
    6. '(s' → logprob: -17.8750057220459
    7. ' (' → logprob: -18.2500057220459
    8. '[S' → logprob: -18.3750057220459
    9. '((' → logprob: -18.7500057220459
    10. '```' → logprob: -19.5000057220459

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.250000953674316
    3. '[' → logprob: -14.625000953674316
    4. '[S' → logprob: -15.625000953674316
    5. '[I' → logprob: -17.250001907348633
    6. '```' → logprob: -17.500001907348633
    7. '[x' → logprob: -17.750001907348633
    8. '[
' → logprob: -17.750001907348633
    9. ')' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.250001907348633

Token 220: '])-' (ID: 160447)
  Prédit: '])-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])-' → logprob: -0.5865514874458313
    2. ']-' → logprob: -1.7115514278411865
    3. ')-' → logprob: -1.8365514278411865
    4. '[i' → logprob: -2.8365514278411865
    5. '[' → logprob: -3.5865514278411865
    6. ')' → logprob: -4.961551666259766
    7. '])' → logprob: -5.086551666259766
    8. ']' → logprob: -6.211551666259766
    9. ')]' → logprob: -7.336551666259766
    10. ' ' → logprob: -7.586551666259766

Token 221: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.20486702024936676
    2. 'x' → logprob: -2.079867124557495
    3. 'y' → logprob: -3.454867124557495
    4. 'S' → logprob: -4.704866886138916
    5. 'i' → logprob: -5.204866886138916
    6. 's' → logprob: -5.204866886138916
    7. '```' → logprob: -6.079866886138916
    8. 'bit' → logprob: -6.454866886138916
    9. ' ' → logprob: -6.954866886138916
    10. 'a' → logprob: -7.204866886138916

Token 222: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005647073267027736
    2. ').' → logprob: -7.6255645751953125
    3. ']' → logprob: -10.250564575195312
    4. ')].' → logprob: -10.250564575195312
    5. ' ].' → logprob: -12.750564575195312
    6. '   ' → logprob: -14.125564575195312
    7. ')' → logprob: -14.625564575195312
    8. ')]' → logprob: -14.875564575195312
    9. '.' → logprob: -15.375564575195312
    10. '"].' → logprob: -15.375564575195312

Token 223: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.128163257315464e-07
    2. ' add' → logprob: -15.5
    3. '.add' → logprob: -18.5
    4. '-add' → logprob: -19.25
    5. '-' → logprob: -20.375
    6. '_add' → logprob: -20.75
    7. '	add' → logprob: -22.0
    8. ')add' → logprob: -22.25
    9. '```' → logprob: -23.125
    10. ')' → logprob: -23.25

Token 224: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.625004768371582
    3. '(
' → logprob: -14.000004768371582
    4. 'i' → logprob: -14.250004768371582
    5. '((' → logprob: -19.1250057220459
    6. ' (' → logprob: -19.2500057220459
    7. ' i' → logprob: -19.3750057220459
    8. '[i' → logprob: -19.6250057220459
    9. ',i' → logprob: -19.7500057220459
    10. '	i' → logprob: -19.8750057220459

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07805626094341278
    2. '1' → logprob: -2.7030563354492188
    3. ' +' → logprob: -4.828056335449219
    4. ' ' → logprob: -9.578056335449219
    5. '+
' → logprob: -12.078056335449219
    6. '   ' → logprob: -12.453056335449219
    7. '2' → logprob: -13.703056335449219
    8. '
' → logprob: -14.078056335449219
    9. '```' → logprob: -14.328056335449219
    10. ',' → logprob: -14.703056335449219

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.62502670288086
    3. '-' → logprob: -13.75002670288086
    4. ' -' → logprob: -14.75002670288086
    5. '2' → logprob: -15.50002670288086
    6. '   ' → logprob: -16.81252670288086
    7. '```' → logprob: -17.56252670288086
    8. '' → logprob: -17.62502670288086
    9. ')' → logprob: -17.75002670288086
    10. '۱' → logprob: -17.87502670288086

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.292095299111679e-05
    2. ',-' → logprob: -9.875082969665527
    3. '-' → logprob: -10.500082969665527
    4. ' ,' → logprob: -13.500082969665527
    5. ',
' → logprob: -13.750082969665527
    6. '           ' → logprob: -14.000082969665527
    7. '   ' → logprob: -14.750082969665527
    8. '```' → logprob: -16.25008201599121
    9. '-,' → logprob: -17.75008201599121
    10. '  ' → logprob: -17.75008201599121

Token 228: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -12.87500286102295
    3. '-m' → logprob: -21.000001907348633
    4. '```' → logprob: -21.500001907348633
    5. '  ' → logprob: -21.625001907348633
    6. '   ' → logprob: -21.625001907348633
    7. '-t' → logprob: -22.000001907348633
    8. '-present' → logprob: -22.125001907348633
    9. '−' → logprob: -22.250001907348633
    10. '-A' → logprob: -22.250001907348633

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '<|end|>' → logprob: -17.875
    6. '   ' → logprob: -18.0
    7. '
' → logprob: -19.125
    8. '           ' → logprob: -19.25
    9. '       ' → logprob: -20.0
    10. '`' → logprob: -21.4375

Token 230: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011087081395089626
    2. ')' → logprob: -4.511086940765381
    3. '       ' → logprob: -10.511087417602539
    4. ')
' → logprob: -11.761087417602539
    5. '   ' → logprob: -13.511087417602539
    6. ' )
' → logprob: -13.511087417602539
    7. '           ' → logprob: -13.761087417602539
    8. ')

' → logprob: -15.636087417602539
    9. '               ' → logprob: -15.886087417602539
    10. '                   ' → logprob: -17.63608741760254

Token 231: '       ' (ID: 309)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03890285640954971
    2. '       ' → logprob: -3.288902759552002
    3. ' S' → logprob: -7.163902759552002
    4. '           ' → logprob: -10.16390323638916
    5. '   ' → logprob: -10.53890323638916
    6. 'bit' → logprob: -11.91390323638916
    7. '        ' → logprob: -13.03890323638916
    8. ' bit' → logprob: -13.16390323638916
    9. '<|end|>' → logprob: -13.16390323638916
    10. '      ' → logprob: -13.16390323638916

Token 232: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -1.282920129597187e-05
    2. ' S' → logprob: -11.625012397766113
    3. '       ' → logprob: -12.875012397766113
    4. '           ' → logprob: -13.750012397766113
    5. '   ' → logprob: -15.500012397766113
    6. ' ' → logprob: -18.62501335144043
    7. 'bit' → logprob: -18.62501335144043
    8. '_S' → logprob: -19.25001335144043
    9. '        ' → logprob: -19.62501335144043
    10. 'new' → logprob: -19.75001335144043

Token 233: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008515591034665704
    2. '[' → logprob: -7.125851631164551
    3. '```' → logprob: -10.50085163116455
    4. '=' → logprob: -12.50085163116455
    5. '[int' → logprob: -12.62585163116455
    6. '[
' → logprob: -12.87585163116455
    7. 'i' → logprob: -13.00085163116455
    8. '<|end|>' → logprob: -13.25085163116455
    9. '[index' → logprob: -13.62585163116455
    10. '[I' → logprob: -14.00085163116455

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04449554905295372
    2. '=' → logprob: -3.7944955825805664
    3. ']=' → logprob: -4.294495582580566
    4. ' ]' → logprob: -5.544495582580566
    5. ' =' → logprob: -5.669495582580566
    6. ')' → logprob: -11.419495582580566
    7. ' ' → logprob: -12.794495582580566
    8. '`]' → logprob: -13.294495582580566
    9. '']' → logprob: -13.669495582580566
    10. ')=' → logprob: -13.919495582580566

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=y' → logprob: -16.51104736328125
    4. ' ' → logprob: -17.01104736328125
    5. '=

' → logprob: -17.63604736328125
    6. '=
' → logprob: -17.88604736328125
    7. '=}' → logprob: -17.88604736328125
    8. ',' → logprob: -18.01104736328125
    9. ')' → logprob: -18.13604736328125
    10. '.=' → logprob: -18.51104736328125

Token 236: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001560450647957623
    2. ' y' → logprob: -6.626560688018799
    3. 'chr' → logprob: -8.37656021118164
    4. 'str' → logprob: -13.25156021118164
    5. ' chr' → logprob: -13.50156021118164
    6. ''y' → logprob: -14.25156021118164
    7. ' ' → logprob: -16.00156021118164
    8. '	y' → logprob: -16.37656021118164
    9. 'y's' → logprob: -16.50156021118164
    10. '   ' → logprob: -16.75156021118164

Token 237: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3352578580379486
    2. 'bit' → logprob: -2.2102577686309814
    3. ' bit' → logprob: -2.2102577686309814
    4. '       ' → logprob: -3.3352577686309814
    5. ' 
' → logprob: -4.5852580070495605
    6. '        
' → logprob: -4.9602580070495605
    7. '           ' → logprob: -5.8352580070495605
    8. '<|end|>' → logprob: -5.9602580070495605
    9. '            
' → logprob: -6.0852580070495605
    10. '    
' → logprob: -6.2102580070495605

Token 238: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.019176429137587547
    2. ' bit' → logprob: -4.019176483154297
    3. '       ' → logprob: -6.894176483154297
    4. '        
' → logprob: -12.894176483154297
    5. '           ' → logprob: -13.019176483154297
    6. '_bit' → logprob: -13.019176483154297
    7. 'bitr' → logprob: -13.269176483154297
    8. '   ' → logprob: -14.019176483154297
    9. '-bit' → logprob: -14.269176483154297
    10. '.bit' → logprob: -14.269176483154297

Token 239: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -1.9361264946837764e-07
    2. ' bit' → logprob: -16.0
    3. '       ' → logprob: -18.125
    4. '   ' → logprob: -21.375
    5. '           ' → logprob: -22.125
    6. '        
' → logprob: -22.5
    7. '```' → logprob: -23.0
    8. 'bet' → logprob: -23.125
    9. 'b' → logprob: -23.625
    10. 'bitr' → logprob: -23.75

Token 240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.5
    3. '```' → logprob: -20.25
    4. '
' → logprob: -20.625
    5. ' [' → logprob: -21.375
    6. 'ord' → logprob: -21.375
    7. '   ' → logprob: -22.125
    8. '[...]' → logprob: -22.625
    9. '[[' → logprob: -23.0
    10. '	' → logprob: -23.0

Token 241: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -7.73183855926618e-05
    2. '[' → logprob: -9.500077247619629
    3. ' ord' → logprob: -13.125077247619629
    4. '(ord' → logprob: -14.875077247619629
    5. '   ' → logprob: -18.125078201293945
    6. '26' → logprob: -18.750078201293945
    7. '97' → logprob: -20.375078201293945
    8. 'bit' → logprob: -20.500078201293945
    9. 'ords' → logprob: -20.625078201293945
    10. 'ort' → logprob: -20.625078201293945

Token 242: '(y' (ID: 14684)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.018323658034205437
    2. '(y' → logprob: -4.0183234214782715
    3. 'y' → logprob: -9.26832389831543
    4. 'S' → logprob: -9.64332389831543
    5. '(s' → logprob: -11.51832389831543
    6. '(' → logprob: -12.76832389831543
    7. '[S' → logprob: -13.89332389831543
    8. '(Y' → logprob: -15.26832389831543
    9. '(ord' → logprob: -15.89332389831543
    10. '[y' → logprob: -16.01832389831543

Token 243: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.018654242157936096
    2. ')' → logprob: -4.0186543464660645
    3. '[' → logprob: -7.7686543464660645
    4. '-' → logprob: -10.143653869628906
    5. ' ' → logprob: -11.018653869628906
    6. ' )' → logprob: -12.018653869628906
    7. '   ' → logprob: -12.268653869628906
    8. ']-' → logprob: -12.393653869628906
    9. ' -' → logprob: -12.643653869628906
    10. ')-(' → logprob: -13.268653869628906

Token 244: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -14.87501049041748
    4. '097' → logprob: -15.00001049041748
    5. ''' → logprob: -15.75001049041748
    6. '   ' → logprob: -16.250009536743164
    7. 'a' → logprob: -16.375009536743164
    8. '`' → logprob: -17.000009536743164
    9. '971' → logprob: -17.375009536743164
    10. '  ' → logprob: -17.750009536743164

Token 245: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0006314247148111463
    2. ').' → logprob: -7.375631332397461
    3. ' ].' → logprob: -13.125631332397461
    4. ']' → logprob: -13.250631332397461
    5. ')].' → logprob: -14.875631332397461
    6. '   ' → logprob: -15.125631332397461
    7. '.' → logprob: -15.375631332397461
    8. '.add' → logprob: -16.50063133239746
    9. '       ' → logprob: -17.00063133239746
    10. ':].' → logprob: -17.00063133239746

Token 246: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.512236498361744e-07
    2. ' add' → logprob: -15.000000953674316
    3. '.add' → logprob: -16.375
    4. ')add' → logprob: -19.125
    5. '1' → logprob: -19.625
    6. '	add' → logprob: -19.875
    7. '_add' → logprob: -20.375
    8. '(add' → logprob: -21.125
    9. '```' → logprob: -22.0
    10. 'Add' → logprob: -22.125

Token 247: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. 'i' → logprob: -17.5
    4. '(
' → logprob: -18.625
    5. '(x' → logprob: -18.625
    6. '[i' → logprob: -19.25
    7. '(I' → logprob: -19.5
    8. '((' → logprob: -19.625
    9. '(ii' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 248: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07093179225921631
    2. '1' → logprob: -2.695931911468506
    3. ' +' → logprob: -6.945931911468506
    4. '()+' → logprob: -11.820931434631348
    5. '+
' → logprob: -12.070931434631348
    6. ' ' → logprob: -12.445931434631348
    7. '   ' → logprob: -12.695931434631348
    8. ')+' → logprob: -12.945931434631348
    9. '```' → logprob: -12.945931434631348
    10. '(' → logprob: -13.320931434631348

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.250007629394531
    3. '+' → logprob: -12.875007629394531
    4. '<|end|>' → logprob: -16.25000762939453
    5. '```' → logprob: -16.50000762939453
    6. '   ' → logprob: -16.75000762939453
    7. ',' → logprob: -18.12500762939453
    8. ')' → logprob: -18.75000762939453
    9. ' +' → logprob: -19.12500762939453
    10. '           ' → logprob: -19.37500762939453

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. '1' → logprob: -10.375045776367188
    3. ' ,' → logprob: -11.125045776367188
    4. ',
' → logprob: -16.500045776367188
    5. ')' → logprob: -17.250045776367188
    6. '),' → logprob: -18.000045776367188
    7. '```' → logprob: -18.750045776367188
    8. '           ' → logprob: -18.875045776367188
    9. ' ' → logprob: -19.000045776367188
    10. '   ' → logprob: -19.125045776367188

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '+' → logprob: -17.62500762939453
    4. '   ' → logprob: -18.75000762939453
    5. ')' → logprob: -19.62500762939453
    6. '<|end|>' → logprob: -20.37500762939453
    7. '```' → logprob: -21.12500762939453
    8. '  ' → logprob: -21.37500762939453
    9. ' +' → logprob: -22.12500762939453
    10. '    ' → logprob: -22.25000762939453

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.75
    5. '<|end|>' → logprob: -19.875
    6. '+' → logprob: -20.125
    7. ')' → logprob: -20.875
    8. '  ' → logprob: -22.875
    9. '`' → logprob: -23.0
    10. '۱' → logprob: -23.125

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012892624363303185
    2. ')
' → logprob: -9.000128746032715
    3. '<|end|>' → logprob: -12.500128746032715
    4. ' )' → logprob: -14.125128746032715
    5. '   ' → logprob: -15.125128746032715
    6. ')return' → logprob: -15.250128746032715
    7. ')#' → logprob: -16.37512969970703
    8. '),' → logprob: -16.75012969970703
    9. ')

' → logprob: -16.87512969970703
    10. '
' → logprob: -17.00012969970703

Token 254: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20250637829303741
    2. '   ' → logprob: -1.702506422996521
    3. ' else' → logprob: -6.9525065422058105
    4. 'elif' → logprob: -9.077506065368652
    5. '	else' → logprob: -10.952506065368652
    6. '```' → logprob: -12.702506065368652
    7. '}else' → logprob: -14.702506065368652
    8. '_else' → logprob: -15.077506065368652
    9. '<|end|>' → logprob: -16.20250701904297
    10. '#else' → logprob: -16.32750701904297

Token 255: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0009303949191235006
    2. 'elif' → logprob: -7.000930309295654
    3. ' else' → logprob: -10.875930786132812
    4. 'if' → logprob: -17.875930786132812
    5. '```' → logprob: -18.375930786132812
    6. '   ' → logprob: -18.625930786132812
    7. ' elif' → logprob: -18.750930786132812
    8. 'e' → logprob: -19.625930786132812
    9. '	else' → logprob: -20.125930786132812
    10. '    
' → logprob: -20.250930786132812

Token 256: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001561009994475171
    2. ':
' → logprob: -9.12515640258789
    3. ' :' → logprob: -10.00015640258789
    4. ',' → logprob: -14.75015640258789
    5. '=' → logprob: -15.00015640258789
    6. ':int' → logprob: -15.12515640258789
    7. '):' → logprob: -15.50015640258789
    8. '   ' → logprob: -15.87515640258789
    9. '{' → logprob: -16.25015640258789
    10. ':

' → logprob: -16.62515640258789

Token 257: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.41298389434814453
    2. ' l' → logprob: -1.2879838943481445
    3. 'L' → logprob: -3.6629838943481445
    4. ' L' → logprob: -4.1629838943481445
    5. 'x' → logprob: -4.5379838943481445
    6. '   ' → logprob: -4.9129838943481445
    7. ' x' → logprob: -6.4129838943481445
    8. '       ' → logprob: -7.6629838943481445
    9. 'a' → logprob: -8.037983894348145
    10. '    ' → logprob: -8.037983894348145

Token 258: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.009852652437984943
    2. ' l' → logprob: -5.009852886199951
    3. 'L' → logprob: -6.009852886199951
    4. 'x' → logprob: -7.384852886199951
    5. ' L' → logprob: -10.634852409362793
    6. 'left' → logprob: -11.384852409362793
    7. ' x' → logprob: -12.134852409362793
    8. '   ' → logprob: -12.259852409362793
    9. 'lx' → logprob: -12.634852409362793
    10. 'a' → logprob: -12.884852409362793

Token 259: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4782389998435974
    2. ',' → logprob: -1.6032390594482422
    3. ' =' → logprob: -1.7282390594482422
    4. ' ,' → logprob: -6.853239059448242
    5. '=int' → logprob: -8.978239059448242
    6. ' ' → logprob: -9.603239059448242
    7. ',int' → logprob: -12.103239059448242
    8. '<|end|>' → logprob: -12.478239059448242
    9. ')' → logprob: -12.603239059448242
    10. ',l' → logprob: -12.728239059448242

Token 260: ' r' (ID: 428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02624421939253807
    2. 'r' → logprob: -3.7762441635131836
    3. ' int' → logprob: -6.026244163513184
    4. ' r' → logprob: -7.901244163513184
    5. '=int' → logprob: -8.776244163513184
    6. ' =' → logprob: -10.776244163513184
    7. 'm' → logprob: -11.401244163513184
    8. 'x' → logprob: -12.151244163513184
    9. 'y' → logprob: -12.151244163513184
    10. '=' → logprob: -12.526244163513184

Token 261: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048882268369198
    2. ' =' → logprob: -4.511048793792725
    3. ',' → logprob: -14.011049270629883
    4. '=int' → logprob: -15.261049270629883
    5. ' ' → logprob: -17.011049270629883
    6. '=

' → logprob: -18.011049270629883
    7. '＝' → logprob: -18.886049270629883
    8. '=
' → logprob: -19.761049270629883
    9. ')' → logprob: -19.886049270629883
    10. '=}' → logprob: -20.011049270629883

Token 262: ' ans' (ID: 3345)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7751153707504272
    2. ' =' → logprob: -1.5251153707504272
    3. '=' → logprob: -1.9001153707504272
    4. 'x' → logprob: -2.775115489959717
    5. 'k' → logprob: -3.025115489959717
    6. 'z' → logprob: -3.900115489959717
    7. ' y' → logprob: -4.900115489959717
    8. 'm' → logprob: -5.025115489959717
    9. 'int' → logprob: -5.150115489959717
    10. 'ord' → logprob: -5.275115489959717

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008617527782917023
    2. ' =' → logprob: -4.758617401123047
    3. ',' → logprob: -13.008617401123047
    4. '=int' → logprob: -15.008617401123047
    5. ' ' → logprob: -15.383617401123047
    6. '   ' → logprob: -17.633617401123047
    7. '＝' → logprob: -17.758617401123047
    8. ')' → logprob: -18.133617401123047
    9. '=
' → logprob: -18.258617401123047
    10. '=}' → logprob: -18.258617401123047

Token 264: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018233880400657654
    2. ' int' → logprob: -4.018233776092529
    3. '   ' → logprob: -9.643234252929688
    4. '[int' → logprob: -11.643234252929688
    5. '    ' → logprob: -12.393234252929688
    6. '(int' → logprob: -12.893234252929688
    7. '	int' → logprob: -13.393234252929688
    8. '=int' → logprob: -13.768234252929688
    9. 'map' → logprob: -15.393234252929688
    10. '  ' → logprob: -15.393234252929688

Token 265: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007106438861228526
    2. 'x' → logprob: -7.250710487365723
    3. '(' → logprob: -15.250710487365723
    4. ',x' → logprob: -15.750710487365723
    5. ' x' → logprob: -16.12571144104004
    6. ')x' → logprob: -16.75071144104004
    7. '(
' → logprob: -16.87571144104004
    8. '{x' → logprob: -17.37571144104004
    9. ' ' → logprob: -18.75071144104004
    10. '=x' → logprob: -18.75071144104004

Token 266: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0019507750403136015
    2. ')-' → logprob: -6.376950740814209
    3. ')' → logprob: -8.626951217651367
    4. '   ' → logprob: -10.626951217651367
    5. ' ),' → logprob: -10.751951217651367
    6. '-' → logprob: -12.001951217651367
    7. '1' → logprob: -12.501951217651367
    8. ' ' → logprob: -12.876951217651367
    9. ',' → logprob: -13.001951217651367
    10. '       ' → logprob: -13.501951217651367

Token 267: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019341122824698687
    2. ' int' → logprob: -6.251934051513672
    3. '   ' → logprob: -12.251934051513672
    4. '    ' → logprob: -14.501934051513672
    5. '  ' → logprob: -16.376934051513672
    6. ' ' → logprob: -16.876934051513672
    7. '(int' → logprob: -17.626934051513672
    8. '	int' → logprob: -17.751934051513672
    9. '           ' → logprob: -18.251934051513672
    10. 'in' → logprob: -18.251934051513672

Token 268: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007104054093360901
    2. ' y' → logprob: -7.250710487365723
    3. '(y' → logprob: -14.625710487365723
    4. ',' → logprob: -18.375709533691406
    5. '   ' → logprob: -18.375709533691406
    6. ' ' → logprob: -18.750709533691406
    7. 'int' → logprob: -19.125709533691406
    8. '
' → logprob: -19.375709533691406
    9. ',y' → logprob: -19.375709533691406
    10. '    ' → logprob: -19.625709533691406

Token 269: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006374279037117958
    2. ' ,' → logprob: -5.756374359130859
    3. '),' → logprob: -6.506374359130859
    4. ')' → logprob: -6.756374359130859
    5. '=' → logprob: -9.00637435913086
    6. '1' → logprob: -9.63137435913086
    7. '[' → logprob: -9.75637435913086
    8. ',
' → logprob: -10.13137435913086
    9. '+' → logprob: -10.25637435913086
    10. '0' → logprob: -10.25637435913086

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01251177117228508
    2. ' ' → logprob: -4.387511730194092
    3. '   ' → logprob: -14.13751220703125
    4. ' ' → logprob: -14.51251220703125
    5. 'set' → logprob: -15.45001220703125
    6. '26' → logprob: -16.38751220703125
    7. '1' → logprob: -16.51251220703125
    8. '  ' → logprob: -16.51251220703125
    9. '"' → logprob: -16.70001220703125
    10. '    ' → logprob: -17.32501220703125

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.50023078918457
    4. 'set' → logprob: -18.12523078918457
    5. ' ' → logprob: -18.62523078918457
    6. '۰' → logprob: -19.00023078918457
    7. '  ' → logprob: -19.06273078918457
    8. '０' → logprob: -19.06273078918457
    9. '1' → logprob: -19.50023078918457
    10. '    ' → logprob: -19.75023078918457

Token 272: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.335801899433136
    2. '   ' → logprob: -1.4608018398284912
    3. '<|end|>' → logprob: -4.08580207824707
    4. '\n' → logprob: -4.96080207824707
    5. '    
' → logprob: -5.21080207824707
    6. ' for' → logprob: -5.21080207824707
    7. '       ' → logprob: -5.46080207824707
    8. ' 
' → logprob: -5.46080207824707
    9. 'for' → logprob: -6.08580207824707
    10. '  
' → logprob: -6.21080207824707

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3032682240009308
    2. '<|end|>' → logprob: -1.8032681941986084
    3. '
' → logprob: -2.8032681941986084
    4. '       ' → logprob: -4.1782684326171875
    5. ' ' → logprob: -5.1782684326171875
    6. '    
' → logprob: -5.5532684326171875
    7. '  
' → logprob: -5.8032684326171875
    8. ' for' → logprob: -5.8032684326171875
    9. ' 
' → logprob: -6.3032684326171875
    10. '\n' → logprob: -7.1782684326171875

Token 274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.843177233240567e-05
    2. '       ' → logprob: -11.375018119812012
    3. '   ' → logprob: -12.375018119812012
    4. ' for' → logprob: -13.000018119812012
    5. '	for' → logprob: -15.875018119812012
    6. 'from' → logprob: -16.250019073486328
    7. 'while' → logprob: -16.375019073486328
    8. 'import' → logprob: -16.625019073486328
    9. '
' → logprob: -17.125019073486328
    10. '           ' → logprob: -17.500019073486328

Token 275: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5944173336029053
    2. 'j' → logprob: -0.8444173336029053
    3. 'i' → logprob: -4.094417572021484
    4. 'ch' → logprob: -7.469417572021484
    5. 'k' → logprob: -7.969417572021484
    6. 'b' → logprob: -8.344417572021484
    7. ' j' → logprob: -8.469417572021484
    8. ' c' → logprob: -8.469417572021484
    9. 'idx' → logprob: -10.219417572021484
    10. 'ci' → logprob: -11.844417572021484

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04323543235659599
    2. 'in' → logprob: -3.1682355403900146
    3. ' ' → logprob: -8.668235778808594
    4. 'range' → logprob: -10.418235778808594
    5. '	in' → logprob: -11.293235778808594
    6. ',' → logprob: -11.543235778808594
    7. '<|end|>' → logprob: -13.543235778808594
    8. '26' → logprob: -13.668235778808594
    9. '0' → logprob: -13.793235778808594
    10. ' range' → logprob: -13.793235778808594

Token 277: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -17.625431060791016
    4. '	range' → logprob: -18.875431060791016
    5. '   ' → logprob: -19.375431060791016
    6. 'ran' → logprob: -20.000431060791016
    7. ' ' → logprob: -20.375431060791016
    8. 'rang' → logprob: -21.125431060791016
    9. '
' → logprob: -21.375431060791016
    10. '  ' → logprob: -21.875431060791016

Token 278: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.31326693296432495
    2. '(' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.68826675415039
    4. '25' → logprob: -14.43826675415039
    5. ' (' → logprob: -14.56326675415039
    6. '(
' → logprob: -14.81326675415039
    7. '   ' → logprob: -14.93826675415039
    8. '
' → logprob: -15.56326675415039
    9. ',' → logprob: -16.43826675415039
    10. '24' → logprob: -17.56326675415039

Token 279: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '2' → logprob: -17.750001907348633
    5. '0' → logprob: -18.375001907348633
    6. '25' → logprob: -18.750001907348633
    7. '    ' → logprob: -20.250001907348633
    8. 'len' → logprob: -20.375001907348633
    9. '  ' → logprob: -20.500001907348633
    10. 'a' → logprob: -20.750001907348633

Token 280: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20156458020210266
    2. '):' → logprob: -1.7015645503997803
    3. ':' → logprob: -9.70156478881836
    4. '):
' → logprob: -9.95156478881836
    5. ':
' → logprob: -10.95156478881836
    6. '       ' → logprob: -11.45156478881836
    7. '   ' → logprob: -11.82656478881836
    8. ' ):
' → logprob: -13.07656478881836
    9. '           ' → logprob: -13.32656478881836
    10. ')' → logprob: -13.57656478881836

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30190563201904297
    2. ' if' → logprob: -1.676905632019043
    3. 'if' → logprob: -2.801905632019043
    4. '
' → logprob: -5.801905632019043
    5. '<|end|>' → logprob: -6.051905632019043
    6. '   ' → logprob: -6.551905632019043
    7. ',' → logprob: -7.176905632019043
    8. 'sum' → logprob: -7.301905632019043
    9. 'ans' → logprob: -7.551905632019043
    10. '```' → logprob: -7.676905632019043

Token 282: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002917214762419462
    2. ' if' → logprob: -6.377917289733887
    3. 'c' → logprob: -7.752917289733887
    4. 'cnt' → logprob: -8.127917289733887
    5. '           ' → logprob: -8.502917289733887
    6. 'ans' (adapté à ' ans') → logprob: -9.127917289733887
    7. 'count' → logprob: -9.752917289733887
    8. '
' → logprob: -10.002917289733887
    9. '   ' → logprob: -11.127917289733887
    10. 'res' → logprob: -11.252917289733887

Token 283: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07904510945081711
    2. ' +=' → logprob: -2.579045057296753
    3. '+=(' → logprob: -8.954045295715332
    4. '=' → logprob: -10.829045295715332
    5. '+' → logprob: -12.579045295715332
    6. ']+=' → logprob: -13.204045295715332
    7. '   ' → logprob: -15.204045295715332
    8. ' =' → logprob: -15.329045295715332
    9. 'if' → logprob: -15.454045295715332
    10. '+='' → logprob: -16.329044342041016

Token 284: ' (' (ID: 350)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.06626728177070618
    2. '1' → logprob: -3.191267251968384
    3. '(bit' → logprob: -4.191267490386963
    4. 'min' → logprob: -5.066267490386963
    5. ' bit' → logprob: -7.191267490386963
    6. '(min' → logprob: -8.566267013549805
    7. 'max' → logprob: -8.691267013549805
    8. '(' → logprob: -8.941267013549805
    9. ' min' → logprob: -9.191267013549805
    10. ' ' → logprob: -9.941267013549805

Token 285: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.009089935570955276
    2. '1' → logprob: -5.009089946746826
    3. '(bit' → logprob: -6.134089946746826
    4. ' bit' → logprob: -8.759089469909668
    5. 'int' → logprob: -11.509089469909668
    6. '0' → logprob: -11.634089469909668
    7. '(' → logprob: -12.009089469909668
    8. ' ' → logprob: -12.134089469909668
    9. '   ' → logprob: -12.259089469909668
    10. 'bool' → logprob: -12.509089469909668

Token 286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. ' [' → logprob: -17.0
    4. '[I' → logprob: -17.75
    5. 'i' → logprob: -18.25
    6. 'bit' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. ' ' → logprob: -19.25
    9. '[
' → logprob: -19.5
    10. '[int' → logprob: -20.125

Token 287: '].' (ID: 1651)
  Prédit: '.sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.009364311583340168
    2. '].' → logprob: -4.884364128112793
    3. ').' → logprob: -7.259364128112793
    4. ' .' → logprob: -7.509364128112793
    5. '.bit' → logprob: -8.009364128112793
    6. '.' → logprob: -8.759364128112793
    7. '}.' → logprob: -11.759364128112793
    8. '.s' → logprob: -13.509364128112793
    9. '.count' → logprob: -13.634364128112793
    10. '>.' → logprob: -14.134364128112793

Token 288: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.029770279303193092
    2. '.sum' → logprob: -3.5297703742980957
    3. ' sum' → logprob: -11.779769897460938
    4. 'bit' → logprob: -11.779769897460938
    5. '
' → logprob: -13.904769897460938
    6. '1' → logprob: -14.154769897460938
    7. '.bit' → logprob: -14.404769897460938
    8. '	sum' → logprob: -14.404769897460938
    9. '.' → logprob: -14.529769897460938
    10. '(sum' → logprob: -15.404769897460938

Token 289: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -14.500001907348633
    3. ')' → logprob: -15.000001907348633
    4. '(' → logprob: -15.250001907348633
    5. '[r' → logprob: -15.625001907348633
    6. ')(' → logprob: -16.125001907348633
    7. '(
' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.375001907348633
    9. 'r' → logprob: -20.125001907348633
    10. '((' → logprob: -20.250001907348633

Token 290: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001023758901283145
    2. ' )' → logprob: -7.001023769378662
    3. ')-' → logprob: -9.126023292541504
    4. ')
' → logprob: -13.626023292541504
    5. '-' → logprob: -14.251023292541504
    6. ' -' → logprob: -14.376023292541504
    7. '-)' → logprob: -14.376023292541504
    8. '   ' → logprob: -16.62602424621582
    9. ')>' → logprob: -16.87602424621582
    10. '        ' → logprob: -17.00102424621582

Token 291: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0024763736873865128
    2. ' bit' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.877476692199707
    4. '(bit' → logprob: -14.877476692199707
    5. '           ' → logprob: -17.75247573852539
    6. '  ' → logprob: -18.00247573852539
    7. ' ' → logprob: -18.12747573852539
    8. '    ' → logprob: -18.50247573852539
    9. 'bite' → logprob: -19.25247573852539
    10. 'bitr' → logprob: -19.25247573852539

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003181159496307373
    2. '(i' → logprob: -5.753180980682373
    3. '[l' → logprob: -13.628181457519531
    4. '(l' → logprob: -14.003181457519531
    5. '[' → logprob: -15.503181457519531
    6. ' (' → logprob: -15.878181457519531
    7. '.' → logprob: -16.12818145751953
    8. '(' → logprob: -16.12818145751953
    9. ')' → logprob: -16.12818145751953
    10. 'i' → logprob: -16.37818145751953

Token 293: '].' (ID: 1651)
  Prédit: '.sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.005904265213757753
    2. ' .' → logprob: -6.005904197692871
    3. '.' → logprob: -6.380904197692871
    4. '(l' → logprob: -6.880904197692871
    5. '.l' → logprob: -7.380904197692871
    6. '(sum' → logprob: -10.755904197692871
    7. '.s' → logprob: -10.755904197692871
    8. ').' → logprob: -11.005904197692871
    9. '.bit' → logprob: -11.630904197692871
    10. '.(' → logprob: -12.630904197692871

Token 294: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0009213464800268412
    2. 'bit' → logprob: -7.000921249389648
    3. ' sum' → logprob: -11.625921249389648
    4. ' bit' → logprob: -14.625921249389648
    5. '(bit' → logprob: -15.125921249389648
    6. '(sum' → logprob: -15.625921249389648
    7. 's' → logprob: -17.37592124938965
    8. '.sum' → logprob: -18.62592124938965
    9. '	sum' → logprob: -19.62592124938965
    10. 'sym' → logprob: -20.00092124938965

Token 295: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.1008713702030946e-06
    2. 'l' → logprob: -13.750001907348633
    3. '(' → logprob: -14.000001907348633
    4. '	l' → logprob: -16.500001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '(
' → logprob: -19.000001907348633
    8. ')(' → logprob: -19.125001907348633
    9. '((' → logprob: -19.500001907348633
    10. '(ll' → logprob: -19.500001907348633

Token 296: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009720553644001484
    2. ' -' → logprob: -4.759720325469971
    3. '0' → logprob: -6.884720325469971
    4. '1' → logprob: -10.009720802307129
    5. '   ' → logprob: -11.384720802307129
    6. ' ' → logprob: -11.884720802307129
    7. '()-' → logprob: -11.884720802307129
    8. '(' → logprob: -12.884720802307129
    9. '```' → logprob: -13.009720802307129
    10. 'l' → logprob: -13.009720802307129

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '```' → logprob: -15.187507629394531
    4. ')' → logprob: -15.562507629394531
    5. '   ' → logprob: -15.562507629394531
    6. '           ' → logprob: -16.81250762939453
    7. '2' → logprob: -17.00000762939453
    8. '`)' → logprob: -17.06250762939453
    9. '0' → logprob: -17.25000762939453
    10. '``' → logprob: -17.31250762939453

Token 298: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7965259552001953
    2. '>' → logprob: -0.7965259552001953
    3. ')>' → logprob: -2.6715259552001953
    4. ' >' → logprob: -3.5465259552001953
    5. ' )' → logprob: -9.296525955200195
    6. ')!=' → logprob: -9.671525955200195
    7. '!=' → logprob: -10.296525955200195
    8. ' ' → logprob: -11.171525955200195
    9. '()>' → logprob: -11.171525955200195
    10. ' !=' → logprob: -11.296525955200195

Token 299: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12724515795707703
    2. ' >' → logprob: -2.1272451877593994
    3. '0' → logprob: -9.12724494934082
    4. '()>' → logprob: -9.50224494934082
    5. ' ' → logprob: -9.62724494934082
    6. '1' → logprob: -10.87724494934082
    7. '!=' → logprob: -11.75224494934082
    8. '   ' → logprob: -11.87724494934082
    9. '           ' → logprob: -12.00224494934082
    10. ' !=' → logprob: -12.12724494934082

Token 300: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.500553131103516
    4. '1' → logprob: -17.625553131103516
    5. ' ' → logprob: -18.000553131103516
    6. '۰' → logprob: -18.563053131103516
    7. '  ' → logprob: -18.625553131103516
    8. '
' → logprob: -18.688053131103516
    9. ' ' → logprob: -18.813053131103516
    10. '=' → logprob: -19.438053131103516

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '00' → logprob: -20.875030517578125
    4. '۰' → logprob: -20.875030517578125
    5. ' ' → logprob: -21.000030517578125
    6. '   ' → logprob: -21.125030517578125
    7. '  ' → logprob: -21.375030517578125
    8. ' ' → logprob: -22.000030517578125
    9. '000' → logprob: -22.125030517578125
    10. '```' → logprob: -22.250030517578125

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39402392506599426
    2. '       ' → logprob: -1.3940238952636719
    3. 'print' → logprob: -3.394023895263672
    4. '   ' → logprob: -4.144023895263672
    5. '\n' → logprob: -5.269023895263672
    6. ')' → logprob: -5.394023895263672
    7. '           ' → logprob: -6.144023895263672
    8. '    
' → logprob: -6.144023895263672
    9. '        
' → logprob: -6.144023895263672
    10. ' ' → logprob: -6.394023895263672

Token 303: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007916536182165146
    2. 'print' → logprob: -5.507916450500488
    3. '       ' → logprob: -6.132916450500488
    4. '\n' → logprob: -7.257916450500488
    5. '
' → logprob: -7.757916450500488
    6. '   ' → logprob: -7.757916450500488
    7. ' print' → logprob: -10.257916450500488
    8. '<|end|>' → logprob: -11.257916450500488
    9. '    
' → logprob: -11.507916450500488
    10. '        
' → logprob: -11.507916450500488

Token 304: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020818933262489736
    2. ' print' → logprob: -8.750207901000977
    3. '   ' → logprob: -10.000207901000977
    4. '
' → logprob: -12.625207901000977
    5. '	print' → logprob: -14.125207901000977
    6. '```' → logprob: -15.500207901000977
    7. '       ' → logprob: -17.375207901000977
    8. '\' → logprob: -18.250207901000977
    9. ' ' → logprob: -18.375207901000977
    10. '
' → logprob: -19.250207901000977

Token 305: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06198270246386528
    2. '(' → logprob: -2.8119826316833496
    3. '('' → logprob: -12.186983108520508
    4. 'ans' → logprob: -12.936983108520508
    5. '(
' → logprob: -13.436983108520508
    6. ' (' → logprob: -13.436983108520508
    7. '()' → logprob: -13.561983108520508
    8. '("' → logprob: -13.686983108520508
    9. '(answer' → logprob: -13.811983108520508
    10. '(abs' → logprob: -15.186983108520508

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.375000953674316
    3. ' )' → logprob: -16.125
    4. ')`' → logprob: -16.5
    5. '()' → logprob: -17.5
    6. '))' → logprob: -18.625
    7. '())' → logprob: -18.875
    8. '),' → logprob: -19.0
    9. '`)' → logprob: -19.5
    10. '')' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 304
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 161
Tokens correctement prédits (top 10): 274
Précision stricte (1ère position): 48.36%
Précision adaptée (1ère position): 52.96%
Précision (top 10): 90.13%
================================================================================
