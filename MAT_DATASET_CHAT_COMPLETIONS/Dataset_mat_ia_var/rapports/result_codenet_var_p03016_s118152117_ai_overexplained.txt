================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture des entrées depuis l'utilisateur, supposant que l'utilisateur saisira quatre entiers séparés par des espaces.
# Ces valeurs sont interprétées dans l'ordre : L (limite supérieure d'itération), A (constante de départ),
# B (incrément à chaque itération), M (modulo utilisé dans les calculs, pour éviter des grands nombres).
L, A, B, M = map(int, input().split())

# Définition d'une fonction pour calculer la puissance d'une matrice.
# Cette technique est appelée exponentiation rapide (ou exponentiation binaire).
# Elle permet de calculer efficacement la matrice x élevée à la puissance n.
# Arguments :
#   x : matrice carrée de taille 3x3 (représentant la transformation à appliquer)
#   n : entier (la puissance à laquelle élever la matrice)
def mat_pow(x, n):
    # Création de la matrice identité 3x3 pour l'initialisation de y.
    # La matrice identité est une matrice carrée où tous les éléments de la diagonale principale valent 1,
    # et tous les autres éléments sont 0.
    y = [[0] * 3 for _ in range(3)]
    for i in range(3):
        y[i][i] = 1  # Placer les 1 uniquement sur la diagonale principale

    # Boucle principale d'exponentiation rapide :
    # tant que n > 0 (c'est-à-dire que l'on n'a pas consommé tous les bits de l'exposant)
    while n > 0:
        # Vérification si le bit de poids faible de n est à 1 (n est impair à cette étape)
        # Si oui, on multiplie y par la matrice courante x.
        if n & 1:
            y = mat_mul(x, y)
        # On élève la matrice x au carré à chaque étape (cette opération double l'exposant qu'on multiplie)
        x = mat_mul(x, x)
        # On divise n par 2 en manipulant les bits (opération de décalage à droite)
        n >>= 1

    # Après avoir traité tous les bits de l'exposant, y contient le résultat final
    return y

# Définition d'une fonction pour effectuer la multiplication de matrices modulo M.
# Arguments :
#   a : matrice de taille (I x K)
#   b : matrice de taille (K x J)
#   Résultat : matrice c de taille (I x J) correspondant à (a * b) % M
def mat_mul(a, b):
    # Dimensions des matrices d'entrée :
    # I : nombre de lignes de a
    # J : nombre de colonnes de b
    # K : nombre de colonnes de a (doit être égal au nombre de lignes de b)
    I, J, K = len(a), len(b[0]), len(b)
    # Initialisation de la matrice résultat c avec des zéros (dimensions I x J)
    c = [[0] * J for _ in range(I)]
    # Multiplication classique de matrices (triple boucle imbriquée)
    for i in range(I):
        for j in range(J):
            for k in range(K):
                # On additionne le produit des éléments correspondants selon la règle de multiplication matricielle
                c[i][j] += a[i][k] * b[k][j]
            # On prend le modulo M pour éviter que les nombres deviennent trop grands
            c[i][j] %= M
    return c

# Calcul de n0 et n1, qui sont des indices de début et de fin pour la boucle de chiffres de d chiffres
# -(-(10 ** d - A) // B) fait un arrondi "plafond" pour obtenir le nombre minimal d'itérations nécessaires
n0 = -(-(10 ** 0 - A) // B)  # Pour d=0 (première classe de chiffres)
n1 = -(-(10 ** 1 - A) // B)  # Pour d=1 (suivant)

# Initialisation du vecteur "ret" représentant l'état courant.
# C'est une matrice colonne 3x1.
# Les éléments peuvent représenter des sommes, termes constants, etc., selon la transformation de la matrice.
ret = [[0], [A], [1]]  # Premier terme, terme initial A, et le terme constant 1 (pour l'affine)

# On va itérer sur les longueurs de chiffres d de 1 à 18 inclus (car les entiers de 64 bits ont au plus 18 chiffres)
for d in range(1, 19):
    # Construction de la matrice de transition "mat" pour la longueur d.
    # La matrice encode l'opération d'ajout de B à chaque étape et la montée d'un chiffre en base 10 (puissance).
    mat = [
        [10 ** d, 1, 0],  # Cette ligne gère la propagation de la puissance selon la position de chiffre
        [0, 1, B],        # Cette ligne ajoute B à chaque itération sur l'accumulateur
        [0, 0, 1]         # Cette ligne maintient le terme constant (pour l'affine)
    ]
    # On ajuste n0 dans le cas où la première valeur tombe en dehors du domaine valide
    if n0 < 0 and 0 < n1:
        n0 = 0

    # On travaille uniquement si n0 valide : au moins n0 < n1 (donc il y a quelque chose à faire)
    if 0 <= n0 < n1:
        # On applique (n1 - n0) fois la matrice mat à l'état courant "ret" pour accumuler les effets
        ret = mat_mul(mat_pow(mat, n1 - n0), ret)
    # On déplace n0 et n1 pour la boucle suivante (on "avance" à la plage de chiffres d+1).
    # On borne n1 par L, la limite globale.
    n0, n1 = n1, min(-(-(10 ** (d + 1) - A) // B), L)

# Enfin, après avoir accumulé toutes les contributions, on affiche la valeur finale à l'indice [0][0] du vecteur résultat.
print(ret[0][0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' des' (ID: 731)
  → Token d'amorce (pas de prédiction)

Token 3: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0038067339919507504
    2. ' d' → logprob: -6.6288065910339355
    3. ' :' → logprob: -6.8788065910339355
    4. '_' → logprob: -7.7538065910339355
    5. ' des' → logprob: -8.378807067871094
    6. ''' → logprob: -8.753807067871094
    7. '  ' → logprob: -8.753807067871094
    8. 's' → logprob: -9.128807067871094
    9. ' ,' → logprob: -9.503807067871094
    10. ' du' → logprob: -9.753807067871094

Token 4: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.05328866466879845
    2. 'é' → logprob: -3.678288698196411
    3. 'ée' → logprob: -3.678288698196411
    4. 'és' → logprob: -6.803288459777832
    5. 'è' → logprob: -9.928288459777832
    6. '#' → logprob: -10.178288459777832
    7. 'êtes' → logprob: -10.553288459777832
    8. '�' → logprob: -10.678288459777832
    9. 'e' → logprob: -10.928288459777832
    10. 'ê' → logprob: -11.053288459777832

Token 5: ' depuis' (ID: 16277)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.6161575317382812
    2. 'input' → logprob: -1.9911575317382812
    3. 'inputs' → logprob: -2.6161575317382812
    4. '_' → logprob: -2.8661575317382812
    5. '#' → logprob: -3.1161575317382812
    6. '```' → logprob: -3.3661575317382812
    7. 's' → logprob: -3.3661575317382812
    8. '=' → logprob: -4.241157531738281
    9. ':' → logprob: -4.866157531738281
    10. 'data' → logprob: -5.116157531738281

Token 6: ' l' (ID: 305)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.7819250822067261
    2. 'l' → logprob: -1.531925082206726
    3. ' l' → logprob: -1.781925082206726
    4. 'stdin' → logprob: -2.7819252014160156
    5. ' input' → logprob: -3.6569252014160156
    6. 'f' → logprob: -4.281925201416016
    7. ' ' → logprob: -4.656925201416016
    8. ''' → logprob: -4.656925201416016
    9. 'le' → logprob: -5.156925201416016
    10. 'input' → logprob: -5.281925201416016

Token 7: ''utilisateur' (ID: 140803)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36234211921691895
    2. ''' → logprob: -1.362342119216919
    3. ''entrée' → logprob: -3.612342119216919
    4. 'e' → logprob: -5.23734188079834
    5. ''espace' → logprob: -5.23734188079834
    6. 'a' → logprob: -5.48734188079834
    7. ''utilisateur' → logprob: -6.23734188079834
    8. ''_' → logprob: -6.98734188079834
    9. 'es' → logprob: -7.11234188079834
    10. '_'' → logprob: -8.36234188079834

Token 8: ',' (ID: 11)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5529974102973938
    2. '_' → logprob: -2.052997350692749
    3. '\n' → logprob: -2.927997350692749
    4. 'u' → logprob: -3.177997350692749
    5. 'n' → logprob: -3.177997350692749
    6. 'input' → logprob: -3.427997350692749
    7. '#' → logprob: -3.552997350692749
    8. '```' → logprob: -3.802997350692749
    9. 's' → logprob: -4.052997589111328
    10. 'i' → logprob: -4.302997589111328

Token 9: ' suppos' (ID: 167611)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0479259490966797
    2. 'user' → logprob: -1.9229259490966797
    3. ' input' → logprob: -2.1729259490966797
    4. ' ' → logprob: -2.2979259490966797
    5. 's' → logprob: -2.9229259490966797
    6. 'x' → logprob: -3.0479259490966797
    7. 'n' → logprob: -3.6729259490966797
    8. ' user' → logprob: -3.7979259490966797
    9. 'name' → logprob: -4.42292594909668
    10. '```' → logprob: -4.42292594909668

Token 10: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05470024794340134
    2. 'ée' → logprob: -3.3047001361846924
    3. 'ant' → logprob: -4.6797003746032715
    4. 'ées' → logprob: -5.4297003746032715
    5. 'és' → logprob: -6.1797003746032715
    6. '#' → logprob: -7.8047003746032715
    7. 'ed' → logprob: -8.304699897766113
    8. 'éd' → logprob: -10.679699897766113
    9. 'e' → logprob: -10.929699897766113
    10. 'er' → logprob: -11.304699897766113

Token 11: ' que' (ID: 661)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5494261384010315
    2. ' que' → logprob: -1.9244260787963867
    3. ' ' → logprob: -2.6744260787963867
    4. ' input' → logprob: -3.4244260787963867
    5. ' un' → logprob: -3.6744260787963867
    6. 'que' → logprob: -3.9244260787963867
    7. ''' → logprob: -4.299426078796387
    8. ' ' → logprob: -4.299426078796387
    9. ' la' → logprob: -4.424426078796387
    10. 'une' → logprob: -4.424426078796387

Token 12: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.5817108154296875
    2. 'l' → logprob: -1.7067108154296875
    3. ' l' → logprob: -2.0817108154296875
    4. ' la' → logprob: -2.3317108154296875
    5. ' user' → logprob: -2.3317108154296875
    6. 'input' → logprob: -2.3317108154296875
    7. 'user' → logprob: -2.8317108154296875
    8. 'le' → logprob: -3.4567108154296875
    9. 'la' → logprob: -3.7067108154296875
    10. ' vous' → logprob: -4.0817108154296875

Token 13: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.3292084336280823
    2. ''entrée' → logprob: -1.8292083740234375
    3. 'a' → logprob: -2.8292083740234375
    4. ''on' → logprob: -3.5792083740234375
    5. ''' → logprob: -4.2042083740234375
    6. 'es' → logprob: -4.9542083740234375
    7. 'e' → logprob: -6.5792083740234375
    8. ''a' → logprob: -6.9542083740234375
    9. 'input' → logprob: -6.9542083740234375
    10. 'u' → logprob: -7.0792083740234375

Token 14: ' sais' (ID: 30010)
  Prédit: ' souhaite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' souhaite' → logprob: -1.2873632907867432
    2. ' veut' → logprob: -1.5373632907867432
    3. 's' → logprob: -2.037363290786743
    4. ' entre' → logprob: -2.537363290786743
    5. 've' → logprob: -2.662363290786743
    6. ' veu' → logprob: -2.787363290786743
    7. ' ve' → logprob: -3.662363290786743
    8. ' a' → logprob: -4.037363052368164
    9. '```' → logprob: -4.412363052368164
    10. 'sou' → logprob: -4.412363052368164

Token 15: 'ira' (ID: 2633)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -7.135819760151207e-05
    2. '_t' → logprob: -11.25007152557373
    3. '<t' → logprob: -11.62507152557373
    4. '\t' → logprob: -11.75007152557373
    5. 'e' → logprob: -11.87507152557373
    6. '```' → logprob: -12.00007152557373
    7. 'ts' → logprob: -12.75007152557373
    8. '?t' → logprob: -13.00007152557373
    9. 'es' → logprob: -13.12507152557373
    10. '`t' → logprob: -13.12507152557373

Token 16: ' quatre' (ID: 41209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8624557852745056
    2. ''' → logprob: -1.3624558448791504
    3. 's' → logprob: -2.4874558448791504
    4. ' une' → logprob: -3.2374558448791504
    5. ' un' → logprob: -3.3624558448791504
    6. 'es' → logprob: -3.7374558448791504
    7. '_' → logprob: -4.11245584487915
    8. '`' → logprob: -4.23745584487915
    9. ''un' → logprob: -4.36245584487915
    10. ' des' → logprob: -4.48745584487915

Token 17: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2003706693649292
    2. 'val' → logprob: -1.4503706693649292
    3. ' espaces' → logprob: -1.5753706693649292
    4. ' valeurs' → logprob: -2.7003707885742188
    5. '_' → logprob: -2.9503707885742188
    6. ' val' → logprob: -3.9503707885742188
    7. ' nombres' → logprob: -4.075370788574219
    8. ' variables' → logprob: -4.325370788574219
    9. ' lignes' → logprob: -4.325370788574219
    10. '_val' → logprob: -4.825370788574219

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.061873119324445724
    2. 'r' → logprob: -2.936873197555542
    3. 'rs' → logprob: -6.311872959136963
    4. 'ri' → logprob: -6.311872959136963
    5. '```' → logprob: -6.561872959136963
    6. 'ières' → logprob: -7.811872959136963
    7. 'i' → logprob: -8.311873435974121
    8. 'ries' → logprob: -8.311873435974121
    9. 'ires' → logprob: -8.686873435974121
    10. 'rès' → logprob: -8.686873435974121

Token 19: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48538443446159363
    2. 'n' → logprob: -1.110384464263916
    3. 'x' → logprob: -3.110384464263916
    4. 'ent' → logprob: -5.860384464263916
    5. '#' → logprob: -6.735384464263916
    6. 'e' → logprob: -6.735384464263916
    7. 'v' → logprob: -7.235384464263916
    8. 'nombre' → logprob: -7.235384464263916
    9. '\n' → logprob: -7.360384464263916
    10. 'i' → logprob: -7.360384464263916

Token 20: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -9.555654105497524e-05
    2. 'é' → logprob: -9.87509536743164
    3. 'ès' → logprob: -10.87509536743164
    4. '```' → logprob: -12.25009536743164
    5. 's' → logprob: -12.37509536743164
    6. 'par' → logprob: -12.62509536743164
    7. 'ées' → logprob: -12.62509536743164
    8. 'es' → logprob: -12.87509536743164
    9. '#' → logprob: -13.00009536743164
    10. 'ément' → logprob: -13.50009536743164

Token 21: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.24170103669166565
    2. ' par' → logprob: -1.6167010068893433
    3. 'es' → logprob: -4.991701126098633
    4. 's' → logprob: -5.116701126098633
    5. 'és' → logprob: -7.241701126098633
    6. ',' → logprob: -7.241701126098633
    7. '_par' → logprob: -7.616701126098633
    8. '```' → logprob: -8.116701126098633
    9. '(par' → logprob: -8.116701126098633
    10. ' ' → logprob: -8.491701126098633

Token 22: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.34534937143325806
    2. ' des' → logprob: -1.5953493118286133
    3. 'un' → logprob: -3.0953493118286133
    4. 'une' → logprob: -4.470349311828613
    5. 'esp' → logprob: -4.845349311828613
    6. ''' → logprob: -4.970349311828613
    7. ''un' → logprob: -5.720349311828613
    8. 'spaces' → logprob: -5.970349311828613
    9. ''esp' → logprob: -6.095349311828613
    10. 'es' → logprob: -6.220349311828613

Token 23: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.040041375905275345
    2. ' espaces' → logprob: -3.915041446685791
    3. ''esp' → logprob: -4.290041446685791
    4. 'es' → logprob: -5.915041446685791
    5. 'spaces' → logprob: -6.040041446685791
    6. ''espace' → logprob: -8.165040969848633
    7. 'paces' → logprob: -9.415040969848633
    8. '’esp' → logprob: -10.040040969848633
    9. '```' → logprob: -10.540040969848633
    10. '#' → logprob: -10.790040969848633

Token 24: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6127222180366516
    2. 'a' → logprob: -1.7377221584320068
    3. 'x' → logprob: -1.7377221584320068
    4. 'e' → logprob: -3.362722158432007
    5. 'i' → logprob: -4.112722396850586
    6. 'ent' → logprob: -4.362722396850586
    7. 'v' → logprob: -4.862722396850586
    8. 'user' → logprob: -5.112722396850586
    9. 'numbers' → logprob: -5.112722396850586
    10. '```' → logprob: -5.612722396850586

Token 25: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1021822914481163
    2. 'x' → logprob: -3.352182388305664
    3. 'a' → logprob: -3.477182388305664
    4. 'e' → logprob: -4.477182388305664
    5. 'v' → logprob: -5.477182388305664
    6. 'i' → logprob: -5.852182388305664
    7. 'ent' → logprob: -6.227182388305664
    8. 'u' → logprob: -6.227182388305664
    9. 'user' → logprob: -6.852182388305664
    10. 'entr' → logprob: -6.977182388305664

Token 26: ' Ces' (ID: 35720)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39784690737724304
    2. 'e' → logprob: -2.6478469371795654
    3. 'a' → logprob: -2.7728469371795654
    4. 'i' → logprob: -3.1478469371795654
    5. 'ent' → logprob: -3.1478469371795654
    6. 'x' → logprob: -3.3978469371795654
    7. 'user' → logprob: -4.397846698760986
    8. 'entr' → logprob: -4.522846698760986
    9. 'numbers' → logprob: -4.897846698760986
    10. 'v' → logprob: -4.897846698760986

Token 27: ' valeurs' (ID: 73668)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0684155225753784
    2. ' ' → logprob: -1.8184155225753784
    3. 'val' → logprob: -2.318415641784668
    4. ' =' → logprob: -2.693415641784668
    5. ' valeurs' → logprob: -2.693415641784668
    6. 'n' → logprob: -3.193415641784668
    7. ' ent' → logprob: -3.193415641784668
    8. ' n' → logprob: -3.318415641784668
    9. ' val' → logprob: -3.818415641784668
    10. ' ' → logprob: -3.943415641784668

Token 28: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3952315151691437
    2. 's' → logprob: -1.3952314853668213
    3. ' sont' → logprob: -3.0202314853668213
    4. ' seront' → logprob: -4.3952317237854
    5. '=' → logprob: -4.5202317237854
    6. ' ' → logprob: -6.6452317237854
    7. 'ser' → logprob: -7.0202317237854
    8. ' #' → logprob: -7.2702317237854
    9. '#' → logprob: -7.3952317237854
    10. '_' → logprob: -7.8952317237854

Token 29: ' interpr' (ID: 106412)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2125321328639984
    2. 'stock' → logprob: -2.5875320434570312
    3. 'l' → logprob: -3.2125320434570312
    4. ' ensuite' → logprob: -4.462532043457031
    5. ' utilisées' → logprob: -4.462532043457031
    6. ' récup' → logprob: -4.587532043457031
    7. 'r' → logprob: -4.837532043457031
    8. ' l' → logprob: -5.212532043457031
    9. 'rec' → logprob: -5.712532043457031
    10. 'assign' → logprob: -6.087532043457031

Token 30: 'ét' (ID: 3913)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7770875096321106
    2. 'étés' → logprob: -0.9020875096321106
    3. 'ét' → logprob: -2.027087450027466
    4. 'été' → logprob: -6.777087688446045
    5. '<t' → logprob: -7.402087688446045
    6. 'é' → logprob: -8.402087211608887
    7. 'êt' → logprob: -8.902087211608887
    8. '�t' → logprob: -9.277087211608887
    9. '?t' → logprob: -9.527087211608887
    10. '#' → logprob: -9.652087211608887

Token 31: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.006547920405864716
    2. 'es' → logprob: -5.256547927856445
    3. 'é' → logprob: -7.131547927856445
    4. 'és' → logprob: -8.006547927856445
    5. '#' → logprob: -9.381547927856445
    6. 'ée' → logprob: -10.006547927856445
    7. ' es' → logprob: -11.381547927856445
    8. 'e' → logprob: -11.881547927856445
    9. 'd' → logprob: -11.881547927856445
    10. 's' → logprob: -12.381547927856445

Token 32: ' dans' (ID: 2671)
  Prédit: 'comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comme' → logprob: -0.7553175091743469
    2. ' comme' → logprob: -0.8803175091743469
    3. ' en' → logprob: -2.880317449569702
    4. 'en' → logprob: -4.130317687988281
    5. ' as' → logprob: -5.005317687988281
    6. ' ' → logprob: -5.255317687988281
    7. ')' → logprob: -5.630317687988281
    8. ' =' → logprob: -5.630317687988281
    9. ' )' → logprob: -5.630317687988281
    10. ',' → logprob: -5.755317687988281

Token 33: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5209633111953735
    2. 'une' → logprob: -1.8959633111953735
    3. 'la' → logprob: -2.145963191986084
    4. ' une' → logprob: -2.270963191986084
    5. ' des' → logprob: -5.145963191986084
    6. 'l' → logprob: -5.520963191986084
    7. 'a' → logprob: -5.645963191986084
    8. 'le' → logprob: -5.895963191986084
    9. ' l' → logprob: -6.145963191986084
    10. ' list' → logprob: -6.520963191986084

Token 34: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13009685277938843
    2. 'e' → logprob: -2.880096912384033
    3. 'es' → logprob: -4.505096912384033
    4. ''ordre' → logprob: -4.505096912384033
    5. ''ex' → logprob: -4.630096912384033
    6. ''utilisateur' → logprob: -4.755096912384033
    7. ''entrée' → logprob: -5.005096912384033
    8. ''espace' → logprob: -5.630096912384033
    9. ''ensemble' → logprob: -5.755096912384033
    10. 'input' → logprob: -5.755096912384033

Token 35: ' :' (ID: 712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7949432730674744
    2. 'x' → logprob: -1.9199433326721191
    3. 'i' → logprob: -2.794943332672119
    4. 'val' → logprob: -2.919943332672119
    5. 'ent' → logprob: -2.919943332672119
    6. 'values' → logprob: -3.294943332672119
    7. ':' → logprob: -3.544943332672119
    8. 'a' → logprob: -3.669943332672119
    9. 'v' → logprob: -3.919943332672119
    10. 'e' → logprob: -4.044943332672119

Token 36: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16370411217212677
    2. 'n' → logprob: -2.7887041568756104
    3. 'x' → logprob: -3.0387041568756104
    4. ' a' → logprob: -4.413703918457031
    5. 'val' → logprob: -4.913703918457031
    6. 'nombre' → logprob: -5.538703918457031
    7. 'ent' → logprob: -5.663703918457031
    8. '`' → logprob: -5.788703918457031
    9. 'values' → logprob: -5.913703918457031
    10. '```' → logprob: -6.538703918457031

Token 37: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08996006846427917
    2. ' =' → logprob: -2.9649600982666016
    3. ' ,' → logprob: -4.839960098266602
    4. 'i' → logprob: -5.339960098266602
    5. 'e' → logprob: -5.339960098266602
    6. 'es' → logprob: -5.839960098266602
    7. '1' → logprob: -6.089960098266602
    8. 's' → logprob: -6.839960098266602
    9. 'ine' → logprob: -6.964960098266602
    10. '=' → logprob: -6.964960098266602

Token 38: 'lim' (ID: 5406)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.33782958984375
    2. 'large' → logprob: -1.58782958984375
    3. 'long' → logprob: -1.96282958984375
    4. 'nombre' → logprob: -2.58782958984375
    5. 'L' → logprob: -3.08782958984375
    6. ')' → logprob: -3.08782958984375
    7. 'n' → logprob: -3.33782958984375
    8. ',' → logprob: -3.58782958984375
    9. 'max' → logprob: -4.08782958984375
    10. 'input' → logprob: -4.58782958984375

Token 39: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9203196167945862
    2. 'im' → logprob: -2.0453195571899414
    3. '=' → logprob: -2.4203195571899414
    4. 'imit' → logprob: -2.7953195571899414
    5. ' =' → logprob: -2.9203195571899414
    6. '```' → logprob: -3.0453195571899414
    7. 'imité' → logprob: -4.045319557189941
    8. '=int' → logprob: -4.170319557189941
    9. 'e' → logprob: -4.170319557189941
    10. 'i' → logprob: -4.420319557189941

Token 40: ' supérieure' (ID: 106336)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.391634076833725
    2. ' ),' → logprob: -2.141633987426758
    3. '),' → logprob: -3.016633987426758
    4. ')' → logprob: -3.266633987426758
    5. ' =' → logprob: -3.766633987426758
    6. '=' → logprob: -3.891633987426758
    7. ' de' → logprob: -4.016633987426758
    8. '_de' → logprob: -4.141633987426758
    9. '_),' → logprob: -4.141633987426758
    10. ',' → logprob: -4.891633987426758

Token 41: ' d' (ID: 272)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4594241976737976
    2. ')' → logprob: -1.3344242572784424
    3. ' ),' → logprob: -2.9594242572784424
    4. ',' → logprob: -3.8344242572784424
    5. ' de' → logprob: -4.334424018859863
    6. ' )' → logprob: -5.209424018859863
    7. ' des' → logprob: -5.584424018859863
    8. '=' → logprob: -6.334424018859863
    9. 's' → logprob: -6.959424018859863
    10. ' d' → logprob: -6.959424018859863

Token 42: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.46652141213417053
    2. ''' → logprob: -2.3415215015411377
    3. ''entrée' → logprob: -2.4665215015411377
    4. 'u' → logprob: -2.8415215015411377
    5. ''ex' → logprob: -3.4665215015411377
    6. ''ent' → logprob: -3.5915215015411377
    7. ''intégr' → logprob: -4.091521263122559
    8. 'a' → logprob: -4.341521263122559
    9. ''une' → logprob: -4.591521263122559
    10. ''un' → logprob: -4.966521263122559

Token 43: 'it' (ID: 278)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2753271758556366
    2. 'entrée' → logprob: -3.025327205657959
    3. 'int' → logprob: -3.025327205657959
    4. 'a' → logprob: -3.525327205657959
    5. 'i' → logprob: -3.775327205657959
    6. 'une' → logprob: -4.150327205657959
    7. 'inte' → logprob: -4.275327205657959
    8. 'indice' → logprob: -4.900327205657959
    9. 'e' → logprob: -5.150327205657959
    10. 'range' → logprob: -5.400327205657959

Token 44: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.12643827497959137
    2. 'érations' → logprob: -3.1264383792877197
    3. 'é' → logprob: -3.3764383792877197
    4. 'ér' → logprob: -3.7514383792877197
    5. 'éra' → logprob: -4.751438140869141
    6. 'égr' → logprob: -6.501438140869141
    7. 'er' → logprob: -6.626438140869141
    8. '#' → logprob: -7.126438140869141
    9. '```' → logprob: -7.251438140869141
    10. ')' → logprob: -7.251438140869141

Token 45: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1254720687866211
    2. ',' → logprob: -2.375472068786621
    3. '),' → logprob: -4.375472068786621
    4. ' )' → logprob: -4.750472068786621
    5. ' ,' → logprob: -6.625472068786621
    6. 's' → logprob: -6.750472068786621
    7. '#' → logprob: -8.250472068786621
    8. ' ),' → logprob: -8.500472068786621
    9. '):' → logprob: -9.875472068786621
    10. ',)' → logprob: -10.000472068786621

Token 46: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4538017213344574
    2. 'n' → logprob: -1.9538017511367798
    3. 'i' → logprob: -2.9538016319274902
    4. 'r' → logprob: -3.7038016319274902
    5. 'u' → logprob: -4.07880163192749
    6. ' n' → logprob: -4.20380163192749
    7. 'a' → logprob: -4.45380163192749
    8. ' i' → logprob: -4.45380163192749
    9. 's' → logprob: -4.70380163192749
    10. ' I' → logprob: -4.82880163192749

Token 47: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018920281901955605
    2. ' ,' → logprob: -4.268920421600342
    3. ' =' → logprob: -6.268920421600342
    4. ')' → logprob: -6.518920421600342
    5. ' ' → logprob: -7.268920421600342
    6. '),' → logprob: -9.143919944763184
    7. ' et' → logprob: -9.268919944763184
    8. ' (' → logprob: -9.893919944763184
    9. '=' → logprob: -10.018919944763184
    10. 's' → logprob: -10.393919944763184

Token 48: 'const' (ID: 1671)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7534388303756714
    2. 'nombre' → logprob: -2.128438949584961
    3. ' l' → logprob: -3.128438949584961
    4. 'n' → logprob: -3.128438949584961
    5. 'val' → logprob: -3.503438949584961
    6. 'a' → logprob: -3.503438949584961
    7. 'interval' → logprob: -3.503438949584961
    8. 'la' → logprob: -3.628438949584961
    9. ' ' → logprob: -4.128438949584961
    10. 'âge' → logprob: -4.128438949584961

Token 49: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.6044577956199646
    2. '#' → logprob: -2.3544578552246094
    3. 'raints' → logprob: -2.3544578552246094
    4. 'r' → logprob: -2.9794578552246094
    5. 'raint' → logprob: -3.4794578552246094
    6. 'ant' → logprob: -3.7294578552246094
    7. ')' → logprob: -3.8544578552246094
    8. 'ants' → logprob: -3.9794578552246094
    9. 'int' → logprob: -3.9794578552246094
    10. 'antes' → logprob: -4.354457855224609

Token 50: ' de' (ID: 334)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9259071350097656
    2. ' ),' → logprob: -1.1759071350097656
    3. ',' → logprob: -2.3009071350097656
    4. ')' → logprob: -2.3009071350097656
    5. ' de' → logprob: -3.1759071350097656
    6. ' )' → logprob: -4.175907135009766
    7. 'de' → logprob: -4.925907135009766
    8. ' d' → logprob: -4.925907135009766
    9. 'd' → logprob: -5.425907135009766
    10. '=' → logprob: -5.925907135009766

Token 51: ' départ' (ID: 32693)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2698999643325806
    2. 'l' → logprob: -1.8948999643325806
    3. ' la' → logprob: -2.644899845123291
    4. 'multip' → logprob: -2.769899845123291
    5. 'd' → logprob: -2.894899845123291
    6. 'la' → logprob: -3.269899845123291
    7. 'diff' → logprob: -3.394899845123291
    8. 'dé' → logprob: -3.519899845123291
    9. ' incr' → logprob: -4.019899845123291
    10. ' multiplic' → logprob: -4.144899845123291

Token 52: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1604909896850586
    2. ',' → logprob: -2.2854909896850586
    3. ')' → logprob: -3.7854909896850586
    4. ' ),' → logprob: -3.9104909896850586
    5. ' ,' → logprob: -6.785490989685059
    6. ' et' → logprob: -7.160490989685059
    7. ' de' → logprob: -8.410490989685059
    8. 'a' → logprob: -8.535490989685059
    9. 'de' → logprob: -8.910490989685059
    10. '#' → logprob: -8.910490989685059

Token 53: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.27728238701820374
    2. ' B' → logprob: -1.7772823572158813
    3. ' ' → logprob: -3.527282476425171
    4. 'n' → logprob: -5.027282238006592
    5. '#' → logprob: -5.277282238006592
    6. 'x' → logprob: -5.777282238006592
    7. ',' → logprob: -5.902282238006592
    8. ' #' → logprob: -5.902282238006592
    9. 'i' → logprob: -6.152282238006592
    10. 'p' → logprob: -6.277282238006592

Token 54: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7651172280311584
    2. ' B' → logprob: -0.8901172280311584
    3. 'n' → logprob: -3.7651171684265137
    4. ' ' → logprob: -4.640117168426514
    5. ' n' → logprob: -4.890117168426514
    6. ' M' → logprob: -5.015117168426514
    7. 'N' → logprob: -5.015117168426514
    8. 'M' → logprob: -5.140117168426514
    9. '#' → logprob: -5.140117168426514
    10. 'D' → logprob: -5.390117168426514

Token 55: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3766210675239563
    2. ' (' → logprob: -1.2516210079193115
    3. ')' → logprob: -4.126621246337891
    4. ' ,' → logprob: -4.751621246337891
    5. '(' → logprob: -6.126621246337891
    6. '),' → logprob: -7.751621246337891
    7. ' )' → logprob: -9.50162124633789
    8. 's' → logprob: -10.00162124633789
    9. '(com' → logprob: -10.25162124633789
    10. ' ' → logprob: -10.87662124633789

Token 56: 'in' (ID: 258)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.8539659976959229
    2. 'c' → logprob: -1.3539659976959229
    3. ' constante' → logprob: -2.228965997695923
    4. 'l' → logprob: -2.478965997695923
    5. ' const' → logprob: -3.103965997695923
    6. ' ' → logprob: -4.353965759277344
    7. ' l' → logprob: -4.916465759277344
    8. ' c' → logprob: -5.416465759277344
    9. ')' → logprob: -5.416465759277344
    10. 'lim' → logprob: -5.478965759277344

Token 57: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.8611712455749512
    2. 'it' → logprob: -1.2361712455749512
    3. 'ter' → logprob: -2.486171245574951
    4. 't' → logprob: -2.861171245574951
    5. 'crement' → logprob: -3.361171245574951
    6. 'é' → logprob: -3.861171245574951
    7. ']' → logprob: -4.361171245574951
    8. 'c' → logprob: -4.361171245574951
    9. 'té' → logprob: -5.111171245574951
    10. '```' → logprob: -5.298671245574951

Token 58: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.012354481033980846
    2. 'é' → logprob: -4.512354373931885
    3. 'ement' → logprob: -6.887354373931885
    4. 'éments' → logprob: -8.887354850769043
    5. 'ém' → logprob: -10.262354850769043
    6. '```' → logprob: -11.137354850769043
    7. 'e' → logprob: -11.262354850769043
    8. 'em' → logprob: -11.262354850769043
    9. 'è' → logprob: -11.512354850769043
    10. ')' → logprob: -11.512354850769043

Token 59: ' à' (ID: 1221)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.455209881067276
    2. ')' → logprob: -1.0802098512649536
    3. ' ),' → logprob: -4.455209732055664
    4. ',' → logprob: -4.955209732055664
    5. ' )' → logprob: -5.580209732055664
    6. ' et' → logprob: -6.955209732055664
    7. 'e' → logprob: -7.705209732055664
    8. 'et' → logprob: -7.705209732055664
    9. ' ' → logprob: -7.955209732055664
    10. '),
' → logprob: -8.580209732055664

Token 60: ' chaque' (ID: 21194)
  Prédit: ' appliquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appliquer' → logprob: -0.7073317766189575
    2. ' ajouter' → logprob: -1.3323317766189575
    3. 'aj' → logprob: -2.082331657409668
    4. 'ap' → logprob: -2.832331657409668
    5. ' chaque' → logprob: -3.082331657409668
    6. ')' → logprob: -6.082331657409668
    7. ' apporter' → logprob: -6.207331657409668
    8. ' utiliser' → logprob: -7.082331657409668
    9. ' partir' → logprob: -7.082331657409668
    10. 'l' → logprob: -7.207331657409668

Token 61: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.10155054926872253
    2. 'it' → logprob: -2.851550579071045
    3. ' pas' → logprob: -4.101550579071045
    4. ' ' → logprob: -4.226550579071045
    5. 'pas' → logprob: -6.226550579071045
    6. ')' → logprob: -7.101550579071045
    7. ' passage' → logprob: -7.226550579071045
    8. '  ' → logprob: -7.601550579071045
    9. ' iteration' → logprob: -7.601550579071045
    10. 'iteration' → logprob: -7.601550579071045

Token 62: 'ération' (ID: 24977)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07883945852518082
    2. 'ération' → logprob: -2.8288395404815674
    3. 'ér' → logprob: -4.578839302062988
    4. ')' → logprob: -5.578839302062988
    5. 'érations' → logprob: -8.203839302062988
    6. '```' → logprob: -8.203839302062988
    7. '#' → logprob: -8.328839302062988
    8. 'éra' → logprob: -8.703839302062988
    9. 'ère' → logprob: -8.828839302062988
    10. '	' → logprob: -9.078839302062988

Token 63: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005189551156945527
    2. ',' → logprob: -7.750518798828125
    3. '),' → logprob: -10.250518798828125
    4. '#' → logprob: -10.875518798828125
    5. ' )' → logprob: -11.500518798828125
    6. ').' → logprob: -12.250518798828125
    7. 'a' → logprob: -12.750518798828125
    8. 'e' → logprob: -12.750518798828125
    9. ')
' → logprob: -12.750518798828125
    10. ')#' → logprob: -13.250518798828125

Token 64: ' M' (ID: 391)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18935470283031464
    2. ' C' → logprob: -2.689354658126831
    3. ' et' → logprob: -3.689354658126831
    4. ')' → logprob: -4.18935489654541
    5. 'n' → logprob: -4.43935489654541
    6. ' ' → logprob: -4.93935489654541
    7. '#' → logprob: -4.93935489654541
    8. 'et' → logprob: -4.93935489654541
    9. ' and' → logprob: -5.56435489654541
    10. 'x' → logprob: -5.81435489654541

Token 65: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8907732367515564
    2. ' =' → logprob: -1.2657732963562012
    3. '.' → logprob: -2.015773296356201
    4. ',' → logprob: -2.640773296356201
    5. '=' → logprob: -2.765773296356201
    6. ' (' → logprob: -4.515773296356201
    7. '```' → logprob: -5.515773296356201
    8. ' )' → logprob: -5.765773296356201
    9. '#' → logprob: -6.015773296356201
    10. '_' → logprob: -6.015773296356201

Token 66: 'mod' (ID: 4847)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16218675673007965
    2. 'l' → logprob: -4.037186622619629
    3. ' modulo' → logprob: -4.037186622619629
    4. ')' → logprob: -4.287186622619629
    5. ' modulus' → logprob: -4.412186622619629
    6. 'mod' → logprob: -4.662186622619629
    7. ' ' → logprob: -4.974686622619629
    8. ' m' → logprob: -4.974686622619629
    9. ' mod' → logprob: -4.974686622619629
    10. ' module' → logprob: -5.099686622619629

Token 67: 'ulo' (ID: 5953)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3260543644428253
    2. ')' → logprob: -2.326054334640503
    3. 'e' → logprob: -2.326054334640503
    4. 'é' → logprob: -3.451054334640503
    5. 'ule' → logprob: -4.076054573059082
    6. 'ulo' → logprob: -4.826054573059082
    7. ' )' → logprob: -5.326054573059082
    8. 'è' → logprob: -5.326054573059082
    9. ' ' → logprob: -6.451054573059082
    10. ' u' → logprob: -6.451054573059082

Token 68: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004424420651048422
    2. ' )' → logprob: -5.879424571990967
    3. ').' → logprob: -7.379424571990967
    4. ')
' → logprob: -8.379424095153809
    5. '):' → logprob: -8.629424095153809
    6. ',' → logprob: -9.254424095153809
    7. ' ' → logprob: -9.504424095153809
    8. '.' → logprob: -9.504424095153809
    9. ' ' → logprob: -9.629424095153809
    10. 'e' → logprob: -10.004424095153809

Token 69: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14271214604377747
    2. ' pour' → logprob: -2.392712116241455
    3. ' )' → logprob: -3.392712116241455
    4. 'pour' → logprob: -5.392712116241455
    5. 'e' → logprob: -7.517712116241455
    6. ' ' → logprob: -7.642712116241455
    7. ',' → logprob: -7.642712116241455
    8. ').' → logprob: -7.767712116241455
    9. ' dans' → logprob: -8.142712593078613
    10. ' ' → logprob: -8.517712593078613

Token 70: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9089810848236084
    2. 'le' → logprob: -1.6589810848236084
    3. ' la' → logprob: -1.7839810848236084
    4. 'l' → logprob: -2.2839810848236084
    5. ' l' → logprob: -2.4089810848236084
    6. 'la' → logprob: -3.4089810848236084
    7. ' les' → logprob: -4.9089813232421875
    8. 'les' → logprob: -6.2839813232421875
    9. '```' → logprob: -7.0339813232421875
    10. ')' → logprob: -7.2839813232421875

Token 71: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.6082116365432739
    2. 'calcul' → logprob: -0.8582116365432739
    3. ' calculations' → logprob: -3.8582115173339844
    4. 'cal' → logprob: -5.858211517333984
    5. ' opérations' → logprob: -6.608211517333984
    6. ' ' → logprob: -6.858211517333984
    7. 'c' → logprob: -7.733211517333984
    8. ' calc' → logprob: -7.733211517333984
    9. ')' → logprob: -7.733211517333984
    10. ' computations' → logprob: -8.420711517333984

Token 72: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0815759003162384
    2. 'e' → logprob: -3.081575870513916
    3. 'ations' → logprob: -4.206575870513916
    4. ')' → logprob: -4.581575870513916
    5. 'ation' → logprob: -5.831575870513916
    6. 's' → logprob: -6.581575870513916
    7. '#' → logprob: -6.706575870513916
    8. 'a' → logprob: -7.581575870513916
    9. '```' → logprob: -7.831575870513916
    10. ')
' → logprob: -8.456576347351074

Token 73: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011696293950080872
    2. ')
' → logprob: -7.001169681549072
    3. ')

' → logprob: -10.001169204711914
    4. ' )' → logprob: -10.126169204711914
    5. '#' → logprob: -10.251169204711914
    6. '):' → logprob: -10.251169204711914
    7. ').' → logprob: -10.626169204711914
    8. ')
' → logprob: -10.751169204711914
    9. 'def' → logprob: -11.376169204711914
    10. '```' → logprob: -11.501169204711914

Token 74: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22281275689601898
    2. ' )' → logprob: -1.7228127717971802
    3. ').' → logprob: -5.097812652587891
    4. ' et' → logprob: -6.097812652587891
    5. ' ).' → logprob: -6.222812652587891
    6. '):' → logprob: -6.597812652587891
    7. '#' → logprob: -6.722812652587891
    8. 'et' → logprob: -7.097812652587891
    9. ' pour' → logprob: -7.097812652587891
    10. ' ):' → logprob: -7.222812652587891

Token 75: ' éviter' (ID: 64013)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1439186334609985
    2. ' éviter' → logprob: -1.5189186334609985
    3. ' la' → logprob: -2.393918514251709
    4. ' l' → logprob: -2.518918514251709
    5. 'l' → logprob: -2.893918514251709
    6. 'le' → logprob: -3.268918514251709
    7. ' assurer' → logprob: -3.768918514251709
    8. ' effectuer' → logprob: -3.768918514251709
    9. ')' → logprob: -3.893918514251709
    10. ' garantir' → logprob: -4.143918514251709

Token 76: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.22129900753498077
    2. ' des' → logprob: -2.721298933029175
    3. ' une' → logprob: -2.846298933029175
    4. 'les' → logprob: -3.846298933029175
    5. ' overflow' → logprob: -3.971298933029175
    6. ' un' → logprob: -4.721299171447754
    7. ' ' → logprob: -4.721299171447754
    8. ' l' → logprob: -5.471299171447754
    9. ' la' → logprob: -6.096299171447754
    10. 'd' → logprob: -6.221299171447754

Token 77: ' grands' (ID: 43085)
  Prédit: ' dépasse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -0.9163687825202942
    2. 'd' → logprob: -1.5413687229156494
    3. ' overflow' → logprob: -1.9163687229156494
    4. 'val' → logprob: -2.9163687229156494
    5. ' val' → logprob: -2.9163687229156494
    6. ' valeurs' → logprob: -3.4163687229156494
    7. ' déb' → logprob: -3.5413687229156494
    8. ' grandes' → logprob: -3.9163687229156494
    9. ' nombres' → logprob: -4.6663689613342285
    10. 's' → logprob: -4.9163689613342285

Token 78: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2436060607433319
    2. 'esp' → logprob: -2.2436060905456543
    3. 'ent' → logprob: -3.2436060905456543
    4. ' espaces' → logprob: -3.6186060905456543
    5. 's' → logprob: -3.7436060905456543
    6. 'nombre' → logprob: -5.243606090545654
    7. 'n' → logprob: -5.243606090545654
    8. 'es' → logprob: -5.618606090545654
    9. ' ent' → logprob: -5.618606090545654
    10. '<|end|>' → logprob: -7.868606090545654

Token 79: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16487522423267365
    2. ').' → logprob: -1.9148752689361572
    3. ' )' → logprob: -5.789875030517578
    4. '),' → logprob: -8.164875030517578
    5. ' ).' → logprob: -8.164875030517578
    6. '#' → logprob: -8.914875030517578
    7. ')
' → logprob: -9.039875030517578
    8. 's' → logprob: -9.289875030517578
    9. ',' → logprob: -9.414875030517578
    10. '.' → logprob: -9.789875030517578

Token 80: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00870533287525177
    2. 'l' → logprob: -5.508705139160156
    3. 'n' → logprob: -6.758705139160156
    4. 'i' → logprob: -7.133705139160156
    5. 'A' → logprob: -7.508705139160156
    6. '#' → logprob: -7.508705139160156
    7. '```' → logprob: -8.133705139160156
    8. ' L' → logprob: -8.383705139160156
    9. 'x' → logprob: -8.508705139160156
    10. 'a' → logprob: -8.508705139160156

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029456093907356262
    2. ' =' → logprob: -6.002945423126221
    3. ' ,' → logprob: -8.002945899963379
    4. '=' → logprob: -9.002945899963379
    5. ')' → logprob: -12.877945899963379
    6. 's' → logprob: -13.127945899963379
    7. '=input' → logprob: -13.752945899963379
    8. ',input' → logprob: -13.752945899963379
    9. '=int' → logprob: -14.127945899963379
    10. ',A' → logprob: -14.502945899963379

Token 82: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22984883189201355
    2. ' A' → logprob: -1.604848861694336
    3. ' ' → logprob: -5.729848861694336
    4. 'a' → logprob: -6.979848861694336
    5. 'space' → logprob: -9.604848861694336
    6. 's' → logprob: -9.979848861694336
    7. ' =' → logprob: -10.979848861694336
    8. ' ' → logprob: -11.104848861694336
    9. 'x' → logprob: -11.229848861694336
    10. '<|end|>' → logprob: -11.354848861694336

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011656993301585317
    2. ' ,' → logprob: -6.876165866851807
    3. ' =' → logprob: -9.001165390014648
    4. '=' → logprob: -12.126165390014648
    5. ' ' → logprob: -13.126165390014648
    6. ',B' → logprob: -13.751165390014648
    7. '<|end|>' → logprob: -14.751165390014648
    8. ',
' → logprob: -15.626165390014648
    9. 'B' → logprob: -16.00116539001465
    10. ')' → logprob: -16.00116539001465

Token 84: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.0474323071539402
    2. 'B' → logprob: -3.5474324226379395
    3. ' ' → logprob: -4.0474324226379395
    4. '<|end|>' → logprob: -11.047431945800781
    5. ' ' → logprob: -11.297431945800781
    6. ' =' → logprob: -11.547431945800781
    7. '  ' → logprob: -11.672431945800781
    8. ' ,' → logprob: -12.672431945800781
    9. ' 
' → logprob: -12.922431945800781
    10. ',' → logprob: -13.422431945800781

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. ' ,' → logprob: -9.000129699707031
    3. ',M' → logprob: -12.375129699707031
    4. ' =' → logprob: -14.000129699707031
    5. '=' → logprob: -15.000129699707031
    6. 'M' → logprob: -15.250129699707031
    7. '<|end|>' → logprob: -15.875129699707031
    8. ',m' → logprob: -16.00012969970703
    9. ' M' → logprob: -16.12512969970703
    10. ' ' → logprob: -16.87512969970703

Token 86: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.039508651942014694
    2. 'M' → logprob: -3.289508581161499
    3. ' ' → logprob: -6.539508819580078
    4. ' =' → logprob: -12.414508819580078
    5. ' ' → logprob: -12.414508819580078
    6. ' and' → logprob: -13.414508819580078
    7. ' 
' → logprob: -13.414508819580078
    8. '=' → logprob: -13.664508819580078
    9. 's' → logprob: -13.789508819580078
    10. '  ' → logprob: -13.852008819580078

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893870770931244
    2. '=' → logprob: -2.5789387226104736
    3. ',' → logprob: -10.578938484191895
    4. '=input' → logprob: -10.953938484191895
    5. ' ' → logprob: -12.953938484191895
    6. ')' → logprob: -14.078938484191895
    7. '<|end|>' → logprob: -14.328938484191895
    8. ' =
' → logprob: -14.578938484191895
    9. '=int' → logprob: -14.953938484191895
    10. ' =[' → logprob: -15.453938484191895

Token 88: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009794337674975395
    2. 'map' → logprob: -4.634794235229492
    3. ' list' → logprob: -11.134794235229492
    4. ' input' → logprob: -11.134794235229492
    5. ' [' → logprob: -12.509794235229492
    6. 'input' → logprob: -13.509794235229492
    7. ' ' → logprob: -13.634794235229492
    8. '[' → logprob: -13.884794235229492
    9. '	map' → logprob: -14.134794235229492
    10. ' ' → logprob: -14.259794235229492

Token 89: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3910643756389618
    2. '(' → logprob: -1.1410644054412842
    3. '(input' → logprob: -5.516064167022705
    4. '(
' → logprob: -9.391064643859863
    5. '(str' → logprob: -10.266064643859863
    6. '(list' → logprob: -10.766064643859863
    7. '(lambda' → logprob: -11.891064643859863
    8. '<int' → logprob: -12.016064643859863
    9. '(

' → logprob: -13.016064643859863
    10. '(eval' → logprob: -13.141064643859863

Token 90: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10087774693965912
    2. 'input' → logprob: -2.3508777618408203
    3. '(' → logprob: -7.72587776184082
    4. ')' → logprob: -8.97587776184082
    5. ' input' → logprob: -9.72587776184082
    6. ',input' → logprob: -10.35087776184082
    7. '=input' → logprob: -12.35087776184082
    8. ' (' → logprob: -12.60087776184082
    9. '```' → logprob: -13.97587776184082
    10. '<input' → logprob: -14.22587776184082

Token 91: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269315630197525
    2. ' input' → logprob: -2.126931667327881
    3. ')' → logprob: -13.626931190490723
    4. '=input' → logprob: -14.251931190490723
    5. '(input' → logprob: -14.251931190490723
    6. '	input' → logprob: -14.626931190490723
    7. '<input' → logprob: -15.376931190490723
    8. ',input' → logprob: -15.876931190490723
    9. ' ' → logprob: -16.25193214416504
    10. '[input' → logprob: -16.75193214416504

Token 92: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33867377042770386
    2. '().' → logprob: -1.3386738300323486
    3. '())' → logprob: -3.7136738300323486
    4. '(' → logprob: -7.7136735916137695
    5. ' ()' → logprob: -10.46367359161377
    6. '(()' → logprob: -10.58867359161377
    7. '());' → logprob: -10.96367359161377
    8. ')' → logprob: -11.08867359161377
    9. '()>' → logprob: -11.08867359161377
    10. '()))' → logprob: -11.33867359161377

Token 93: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020377879263833165
    2. 'strip' → logprob: -8.500204086303711
    3. 'rstrip' → logprob: -15.625204086303711
    4. ' split' → logprob: -17.00020408630371
    5. 'spl' → logprob: -17.75020408630371
    6. '(split' → logprob: -18.87520408630371
    7. '.split' → logprob: -21.25020408630371
    8. 'read' → logprob: -21.50020408630371
    9. '_split' → logprob: -22.25020408630371
    10. 'plit' → logprob: -22.37520408630371

Token 94: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3830394446849823
    2. '('' → logprob: -1.3830394744873047
    3. ')' → logprob: -3.7580394744873047
    4. '()' → logprob: -3.8830394744873047
    5. '(' → logprob: -4.133039474487305
    6. '()))' → logprob: -5.133039474487305
    7. '))' → logprob: -7.133039474487305
    8. '("' → logprob: -8.133039474487305
    9. '(','' → logprob: -8.258039474487305
    10. '(""))' → logprob: -10.133039474487305

Token 95: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5082878470420837
    2. ':' → logprob: -1.2582879066467285
    3. 'for' → logprob: -2.8832879066467285
    4. ':
' → logprob: -4.0082879066467285
    5. '\n' → logprob: -4.5082879066467285
    6. ')' → logprob: -4.7582879066467285
    7. '' → logprob: -4.7582879066467285
    8. ' for' → logprob: -5.3832879066467285
    9. ',' → logprob: -6.3832879066467285
    10. '<|end|>' → logprob: -6.6332879066467285

Token 96: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.693534791469574
    2. 'result' → logprob: -1.0685348510742188
    3. 'r' → logprob: -2.5685348510742188
    4. '#' → logprob: -3.8185348510742188
    5. ' result' → logprob: -4.193534851074219
    6. ' for' → logprob: -4.443534851074219
    7. 'i' → logprob: -4.693534851074219
    8. 'f' → logprob: -4.818534851074219
    9. 'range' → logprob: -5.318534851074219
    10. 'res' → logprob: -6.318534851074219

Token 97: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2934934198856354
    2. 'fi' → logprob: -1.918493390083313
    3. 'fin' → logprob: -2.2934935092926025
    4. 'for' → logprob: -5.543493270874023
    5. '#' → logprob: -6.793493270874023
    6. 'fine' → logprob: -8.293493270874023
    7. 'claration' → logprob: -8.543493270874023
    8. 'c' → logprob: -8.918493270874023
    9. 'termination' → logprob: -9.168493270874023
    10. 'but' → logprob: -9.168493270874023

Token 98: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.021925093606114388
    2. 'ir' → logprob: -4.52192497253418
    3. 'i' → logprob: -5.89692497253418
    4. 'issant' → logprob: -6.02192497253418
    5. 'inition' → logprob: -6.02192497253418
    6. 'issez' → logprob: -6.89692497253418
    7. 'issage' → logprob: -7.64692497253418
    8. 'ission' → logprob: -8.14692497253418
    9. 'issement' → logprob: -8.14692497253418
    10. 'e' → logprob: -8.39692497253418

Token 99: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3730144500732422
    2. ' ' → logprob: -1.6230144500732422
    3. '<|end|>' → logprob: -2.248014450073242
    4. '(' → logprob: -2.498014450073242
    5. ' de' → logprob: -2.623014450073242
    6. ')' → logprob: -2.623014450073242
    7. 'def' → logprob: -2.873014450073242
    8. ':' → logprob: -3.248014450073242
    9. '#' → logprob: -3.623014450073242
    10. ' d' → logprob: -4.123014450073242

Token 100: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15361164510250092
    2. ''' → logprob: -2.403611660003662
    3. ''une' → logprob: -4.278611660003662
    4. 'a' → logprob: -4.528611660003662
    5. ' la' → logprob: -5.153611660003662
    6. ''un' → logprob: -5.528611660003662
    7. ' ' → logprob: -5.653611660003662
    8. ' a' → logprob: -5.778611660003662
    9. ' e' → logprob: -6.028611660003662
    10. '_' → logprob: -6.278611660003662

Token 101: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3418247699737549
    2. ' fonction' → logprob: -2.466824769973755
    3. 'liste' → logprob: -2.716824769973755
    4. ' liste' → logprob: -3.091824769973755
    5. 'for' → logprob: -3.591824769973755
    6. ' function' → logprob: -3.966824769973755
    7. ' boucle' → logprob: -4.216824531555176
    8. 'def' → logprob: -4.841824531555176
    9. 'function' → logprob: -5.216824531555176
    10. 'range' → logprob: -5.716824531555176

Token 102: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7103509306907654
    2. 'def' → logprob: -0.8353509306907654
    3. ' de' → logprob: -3.96035099029541
    4. ' ' → logprob: -4.21035099029541
    5. '(' → logprob: -4.58535099029541
    6. ')' → logprob: -4.96035099029541
    7. ' )' → logprob: -5.58535099029541
    8. ' calculate' → logprob: -5.83535099029541
    9. 'de' → logprob: -6.08535099029541
    10. '_' → logprob: -6.33535099029541

Token 103: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.41205504536628723
    2. 'calcul' → logprob: -1.2870550155639648
    3. ' effectuer' → logprob: -2.912055015563965
    4. 'cal' → logprob: -5.912055015563965
    5. ' génér' → logprob: -7.287055015563965
    6. ' calcular' → logprob: -7.537055015563965
    7. ' réaliser' → logprob: -7.662055015563965
    8. 'Calcul' → logprob: -7.912055015563965
    9. ' la' → logprob: -8.037055015563965
    10. ' sim' → logprob: -8.412055015563965

Token 104: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008893063059076667
    2. 'ating' → logprob: -7.625889301300049
    3. 'ateur' → logprob: -8.875889778137207
    4. 'uler' → logprob: -9.000889778137207
    5. '#' → logprob: -10.000889778137207
    6. 'atrice' → logprob: -10.625889778137207
    7. 'ul' → logprob: -11.125889778137207
    8. 'ant' → logprob: -11.250889778137207
    9. 'ulating' → logprob: -11.875889778137207
    10. 'uer' → logprob: -12.125889778137207

Token 105: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8150739073753357
    2. 'le' → logprob: -1.0650739669799805
    3. ' la' → logprob: -2.0650739669799805
    4. 'f' → logprob: -3.5650739669799805
    5. 'pow' → logprob: -3.8150739669799805
    6. '(' → logprob: -4.5650739669799805
    7. 'l' → logprob: -5.0650739669799805
    8. ' le' → logprob: -5.3150739669799805
    9. '_la' → logprob: -6.1900739669799805
    10. 'une' → logprob: -6.1900739669799805

Token 106: ' puissance' (ID: 63494)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5333821177482605
    2. 'val' → logprob: -1.5333821773529053
    3. 'suite' → logprob: -2.4083821773529053
    4. 'f' → logprob: -2.6583821773529053
    5. 'pu' → logprob: -5.033381938934326
    6. ' valeur' → logprob: -5.033381938934326
    7. ' suite' → logprob: -5.408381938934326
    8. ' somme' → logprob: -6.033381938934326
    9. 'fonction' → logprob: -6.283381938934326
    10. 'n' → logprob: -6.408381938934326

Token 107: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4363216757774353
    2. '(' → logprob: -1.18632173538208
    3. 'pow' → logprob: -3.43632173538208
    4. '(a' → logprob: -6.06132173538208
    5. '(x' → logprob: -6.06132173538208
    6. 'mod' → logprob: -6.18632173538208
    7. '(pow' → logprob: -6.31132173538208
    8. '(
' → logprob: -6.31132173538208
    9. ')' → logprob: -6.56132173538208
    10. '_pow' → logprob: -7.06132173538208

Token 108: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5993795394897461
    2. ''une' → logprob: -0.8493795394897461
    3. 'a' → logprob: -5.224379539489746
    4. 'un' → logprob: -5.474379539489746
    5. 'une' → logprob: -5.849379539489746
    6. 'e' → logprob: -6.224379539489746
    7. '2' → logprob: -6.349379539489746
    8. ''ex' → logprob: -7.224379539489746
    9. '’une' → logprob: -7.349379539489746
    10. '’un' → logprob: -7.349379539489746

Token 109: ' matr' (ID: 25095)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.06968218088150024
    2. 'base' → logprob: -3.9446821212768555
    3. 'val' → logprob: -4.8196821212768555
    4. 'pu' → logprob: -5.0696821212768555
    5. '#' → logprob: -5.1946821212768555
    6. 'pow' → logprob: -5.4446821212768555
    7. 'number' → logprob: -5.4446821212768555
    8. ' nombre' → logprob: -5.8196821212768555
    9. ' ' → logprob: -5.9446821212768555
    10. 'num' → logprob: -5.9446821212768555

Token 110: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.13996024429798126
    2. 'atrice' → logprob: -2.264960289001465
    3. 'rice' → logprob: -3.764960289001465
    4. 'ix' → logprob: -6.139960289001465
    5. 'rix' → logprob: -7.639960289001465
    6. 'ixe' → logprob: -8.764960289001465
    7. 'atrix' → logprob: -8.889960289001465
    8. 'atriz' → logprob: -9.264960289001465
    9. '#' → logprob: -9.514960289001465
    10. 'tr' → logprob: -9.514960289001465

Token 111: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05881049111485481
    2. '(' → logprob: -3.3088104724884033
    3. ' (' → logprob: -4.808810710906982
    4. ' def' → logprob: -4.933810710906982
    5. ')' → logprob: -6.683810710906982
    6. '(
' → logprob: -7.058810710906982
    7. ':' → logprob: -7.808810710906982
    8. '[' → logprob: -7.808810710906982
    9. '```' → logprob: -7.808810710906982
    10. 'de' → logprob: -7.933810710906982

Token 112: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019726462196558714
    2. 'd' → logprob: -7.001972675323486
    3. ' def' → logprob: -7.501972675323486
    4. 'de' → logprob: -8.376972198486328
    5. ' ' → logprob: -9.376972198486328
    6. 'import' → logprob: -9.751972198486328
    7. ' de' → logprob: -10.376972198486328
    8. '[' → logprob: -10.376972198486328
    9. '```' → logprob: -10.501972198486328
    10. ' d' → logprob: -11.251972198486328

Token 113: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011617124080657959
    2. 'd' → logprob: -4.761617183685303
    3. ' def' → logprob: -6.136617183685303
    4. ' d' → logprob: -7.761617183685303
    5. 'import' → logprob: -8.136616706848145
    6. 'de' → logprob: -10.261616706848145
    7. '
' → logprob: -10.761616706848145
    8. '```' → logprob: -10.761616706848145
    9. ' ' → logprob: -11.136616706848145
    10. ' 
' → logprob: -11.511616706848145

Token 114: ' technique' (ID: 16410)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34802982211112976
    2. ' def' → logprob: -2.348029851913452
    3. ' fonction' → logprob: -2.348029851913452
    4. 'fonction' → logprob: -2.848029851913452
    5. ' function' → logprob: -3.848029851913452
    6. ' déf' → logprob: -5.473029613494873
    7. ' puissance' → logprob: -5.598029613494873
    8. 'dé' → logprob: -5.723029613494873
    9. 'n' → logprob: -5.973029613494873
    10. 'import' → logprob: -6.348029613494873

Token 115: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3337868452072144
    2. ' d' → logprob: -1.5837868452072144
    3. ' permet' → logprob: -1.7087868452072144
    4. ' de' → logprob: -2.708786964416504
    5. ' consiste' → logprob: -2.833786964416504
    6. ' s' → logprob: -2.958786964416504
    7. 's' → logprob: -3.208786964416504
    8. ' est' → logprob: -3.333786964416504
    9. ' matrix' → logprob: -4.458786964416504
    10. 'def' → logprob: -4.833786964416504

Token 116: ' appelée' (ID: 179130)
  Prédit: ' appelée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelée' → logprob: -0.4802801012992859
    2. ' souvent' → logprob: -2.4802801609039307
    3. ' une' → logprob: -2.6052801609039307
    4. ' utilisée' → logprob: -2.9802801609039307
    5. 'appel' → logprob: -3.9802801609039307
    6. 'import' → logprob: -3.9802801609039307
    7. 'util' → logprob: -4.105279922485352
    8. 'une' → logprob: -4.230279922485352
    9. ' essentielle' → logprob: -4.230279922485352
    10. ' fondamentale' → logprob: -4.730279922485352

Token 117: ' exponent' (ID: 51159)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4731169044971466
    2. ' l' → logprob: -1.5981168746948242
    3. '"' → logprob: -2.598116874694824
    4. ' la' → logprob: -3.098116874694824
    5. ' exponent' → logprob: -3.348116874694824
    6. ' '' → logprob: -4.598116874694824
    7. 'l' → logprob: -6.098116874694824
    8. 'la' → logprob: -6.848116874694824
    9. 'ex' → logprob: -6.973116874694824
    10. ' ' → logprob: -7.098116874694824

Token 118: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.00026753442944027483
    2. 'i' → logprob: -9.25026798248291
    3. 'entation' → logprob: -9.50026798248291
    4. 'ation' → logprob: -10.37526798248291
    5. 'enti' → logprob: -10.87526798248291
    6. 'ia' → logprob: -11.62526798248291
    7. 'ent' → logprob: -11.75026798248291
    8. 'ention' → logprob: -11.87526798248291
    9. 'ion' → logprob: -12.25026798248291
    10. 'ial' → logprob: -12.62526798248291

Token 119: ' rapide' (ID: 44887)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1602255403995514
    2. 'par' → logprob: -2.4102256298065186
    3. 'mat' → logprob: -3.6602256298065186
    4. '_par' → logprob: -4.2852253913879395
    5. '_mat' → logprob: -4.6602253913879395
    6. ' matric' → logprob: -5.4102253913879395
    7. '_matrix' → logprob: -6.6602253913879395
    8. ' de' → logprob: -7.0352253913879395
    9. '_m' → logprob: -7.5352253913879395
    10. ' mat' → logprob: -7.7852253913879395

Token 120: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10483591258525848
    2. ' def' → logprob: -3.6048359870910645
    3. ' (' → logprob: -3.8548359870910645
    4. '(' → logprob: -4.1048359870910645
    5. '(
' → logprob: -4.7298359870910645
    6. '_' → logprob: -4.9798359870910645
    7. ' de' → logprob: -5.6048359870910645
    8. '_matrix' → logprob: -5.6048359870910645
    9. ' ' → logprob: -5.7298359870910645
    10. ',' → logprob: -6.2298359870910645

Token 121: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3907825946807861
    2. ' de' → logprob: -1.7657825946807861
    3. ' matr' → logprob: -2.140782594680786
    4. ' matric' → logprob: -2.265782594680786
    5. 'mat' → logprob: -2.390782594680786
    6. ' par' → logprob: -2.390782594680786
    7. 'matrix' → logprob: -2.765782594680786
    8. ' matrix' → logprob: -3.515782594680786
    9. 'de' → logprob: -3.640782594680786
    10. 'par' → logprob: -4.765782356262207

Token 122: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.12669025361537933
    2. 'ex' → logprob: -2.251690149307251
    3. ' "' → logprob: -5.50169038772583
    4. '"' → logprob: -5.87669038772583
    5. ' fast' → logprob: -6.12669038772583
    6. 'fast' → logprob: -6.37669038772583
    7. ' puissance' → logprob: -7.12669038772583
    8. 'pu' → logprob: -7.25169038772583
    9. ' expos' → logprob: -8.376689910888672
    10. 'd' → logprob: -9.126689910888672

Token 123: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.08460771292448044
    2. 'enti' → logprob: -2.8346076011657715
    3. 'entation' → logprob: -4.3346076011657715
    4. 'ent' → logprob: -5.0846076011657715
    5. 'ention' → logprob: -6.8346076011657715
    6. 'i' → logprob: -6.8346076011657715
    7. 'antiation' → logprob: -8.70960807800293
    8. 'ient' → logprob: -8.95960807800293
    9. '```' → logprob: -9.08460807800293
    10. 'ation' → logprob: -9.20960807800293

Token 124: ' b' (ID: 287)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.08025933057069778
    2. ' matric' → logprob: -3.830259323120117
    3. 'mat' → logprob: -4.080259323120117
    4. 'par' → logprob: -4.580259323120117
    5. '<|end|>' → logprob: -5.205259323120117
    6. 'mod' → logprob: -5.205259323120117
    7. '_mat' → logprob: -5.330259323120117
    8. ' mat' → logprob: -5.705259323120117
    9. ' mod' → logprob: -6.455259323120117
    10. ' matr' → logprob: -6.705259323120117

Token 125: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.05397087708115578
    2. 'y' → logprob: -3.1789708137512207
    3. 'in' → logprob: -4.678970813751221
    4. 'yn' → logprob: -7.303970813751221
    5. 'iné' → logprob: -8.428971290588379
    6. '**' → logprob: -9.303971290588379
    7. ')' → logprob: -9.428971290588379
    8. '```' → logprob: -9.553971290588379
    9. '}' → logprob: -10.303971290588379
    10. 'ina' → logprob: -10.428971290588379

Token 126: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041545167565345764
    2. ').' → logprob: -4.041545391082764
    3. ' )' → logprob: -4.791545391082764
    4. 'matrix' → logprob: -5.666545391082764
    5. ' matrix' → logprob: -6.166545391082764
    6. '_matrix' → logprob: -6.166545391082764
    7. ' de' → logprob: -6.666545391082764
    8. ' pour' → logprob: -6.666545391082764
    9. '),' → logprob: -6.791545391082764
    10. ' matr' → logprob: -7.541545391082764

Token 127: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031175839249044657
    2. '
' → logprob: -6.003117561340332
    3. ' def' → logprob: -7.503117561340332
    4. ' 
' → logprob: -9.753117561340332
    5. '```' → logprob: -11.128117561340332
    6. '  
' → logprob: -11.878117561340332
    7. 'd' → logprob: -13.003117561340332
    8. '

' → logprob: -13.128117561340332
    9. 'import' → logprob: -13.628117561340332
    10. 'de' → logprob: -13.878117561340332

Token 128: ' Elle' (ID: 21300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010008628305513412
    2. ' def' → logprob: -9.750100135803223
    3. '
' → logprob: -10.250100135803223
    4. 'import' → logprob: -12.375100135803223
    5. ' 
' → logprob: -14.250100135803223
    6. '```' → logprob: -14.500100135803223
    7. 'd' → logprob: -14.625100135803223
    8. 'de' → logprob: -15.375100135803223
    9. '  
' → logprob: -15.875100135803223
    10. 'from' → logprob: -16.500099182128906

Token 129: ' permet' (ID: 11798)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18081602454185486
    2. ' def' → logprob: -1.8058160543441772
    3. ':' → logprob: -8.180815696716309
    4. ' =' → logprob: -8.305815696716309
    5. ' déf' → logprob: -8.930815696716309
    6. ' ' → logprob: -9.305815696716309
    7. '=' → logprob: -9.430815696716309
    8. ' :' → logprob: -10.305815696716309
    9. ',' → logprob: -10.680815696716309
    10. ' est' → logprob: -10.680815696716309

Token 130: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5940306186676025
    2. ' de' → logprob: -1.3440306186676025
    3. 'd' → logprob: -1.8440306186676025
    4. ' d' → logprob: -3.5940306186676025
    5. 'def' → logprob: -8.094030380249023
    6. 'a' → logprob: -8.094030380249023
    7. 't' → logprob: -8.594030380249023
    8. ' ' → logprob: -9.344030380249023
    9. '_de' → logprob: -9.594030380249023
    10. '#' → logprob: -9.844030380249023

Token 131: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.6706673502922058
    2. 'ré' → logprob: -1.1706674098968506
    3. 'é' → logprob: -2.7956674098968506
    4. ' réduire' → logprob: -3.1706674098968506
    5. ' calcul' → logprob: -3.7956674098968506
    6. 'mult' → logprob: -4.0456671714782715
    7. ' accél' → logprob: -5.5456671714782715
    8. 'acc' → logprob: -5.5456671714782715
    9. ' multiplier' → logprob: -5.7956671714782715
    10. 'cal' → logprob: -6.0456671714782715

Token 132: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.8789383830153383e-05
    2. 'rer' → logprob: -12.375019073486328
    3. 'erer' → logprob: -12.625019073486328
    4. '#' → logprob: -12.625019073486328
    5. 'ler' → logprob: -13.000019073486328
    6. 'érer' → logprob: -13.500019073486328
    7. ' er' → logprob: -13.750019073486328
    8. 'ier' → logprob: -14.250019073486328
    9. 'e' → logprob: -15.375019073486328
    10. 'iner' → logprob: -15.375019073486328

Token 133: ' efficacement' (ID: 155449)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1367214024066925
    2. ' une' → logprob: -2.63672137260437
    3. 'la' → logprob: -3.13672137260437
    4. ' efficacement' → logprob: -4.886721611022949
    5. 'une' → logprob: -6.511721611022949
    6. ' rapidement' → logprob: -6.511721611022949
    7. ' efficiently' → logprob: -7.761721611022949
    8. ' ' → logprob: -8.26172161102295
    9. 'pow' → logprob: -8.51172161102295
    10. 'mat' → logprob: -8.51172161102295

Token 134: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.00909702479839325
    2. ' une' → logprob: -5.134097099304199
    3. 'la' → logprob: -5.884097099304199
    4. ' le' → logprob: -9.1340970993042
    5. ' puissance' → logprob: -10.0090970993042
    6. 'le' → logprob: -10.3840970993042
    7. ' l' → logprob: -10.3840970993042
    8. 'une' → logprob: -10.6340970993042
    9. ' ' → logprob: -10.8840970993042
    10. 'pow' → logprob: -11.1340970993042

Token 135: ' matr' (ID: 25095)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.15280847251415253
    2. ' puissance' → logprob: -2.152808427810669
    3. 'mat' → logprob: -4.152808666229248
    4. 'n' → logprob: -5.277808666229248
    5. ' matr' → logprob: -6.902808666229248
    6. 'p' → logprob: -7.527808666229248
    7. ' puiss' → logprob: -7.652808666229248
    8. 'm' → logprob: -7.652808666229248
    9. 'pow' → logprob: -8.02780818939209
    10. '^' → logprob: -8.27780818939209

Token 136: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.000399091251892969
    2. 'ix' → logprob: -8.125398635864258
    3. 'ic' → logprob: -10.000398635864258
    4. 'i' → logprob: -11.500398635864258
    5. '```' → logprob: -11.500398635864258
    6. '#' → logprob: -12.000398635864258
    7. 'ixe' → logprob: -12.375398635864258
    8. 'ices' → logprob: -12.875398635864258
    9. 'rice' → logprob: -13.125398635864258
    10. '   ' → logprob: -13.125398635864258

Token 137: ' x' (ID: 1215)
  Prédit: ' puissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.7442820072174072
    2. ' raised' → logprob: -2.1192820072174072
    3. ' élevée' → logprob: -2.2442820072174072
    4. 'import' → logprob: -3.2442820072174072
    5. 'pow' → logprob: -3.3692820072174072
    6. '^' → logprob: -3.4942820072174072
    7. '**' → logprob: -3.9942820072174072
    8. ' à' → logprob: -4.119281768798828
    9. ' de' → logprob: -4.244281768798828
    10. 'n' → logprob: -4.494281768798828

Token 138: ' élevée' (ID: 150678)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1964285522699356
    2. ' **' → logprob: -1.9464285373687744
    3. ' à' → logprob: -3.9464285373687744
    4. '_' → logprob: -5.4464287757873535
    5. ' ' → logprob: -6.0714287757873535
    6. '^' → logprob: -6.1964287757873535
    7. ',' → logprob: -6.6964287757873535
    8. 'e' → logprob: -6.9464287757873535
    9. '```' → logprob: -7.5714287757873535
    10. 'à' → logprob: -7.6964287757873535

Token 139: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.14584951102733612
    2. 'à' → logprob: -2.1458494663238525
    3. ' ' → logprob: -4.270849704742432
    4. 'au' → logprob: -6.270849704742432
    5. ' au' → logprob: -7.145849704742432
    6. ''à' → logprob: -7.270849704742432
    7. '```' → logprob: -7.520849704742432
    8. '  ' → logprob: -8.270849227905273
    9. ' to' → logprob: -9.145849227905273
    10. '<|end|>' → logprob: -9.145849227905273

Token 140: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0030005238950252533
    2. 'l' → logprob: -7.003000736236572
    3. ' n' → logprob: -8.003000259399414
    4. 'y' → logprob: -8.128000259399414
    5. 'pu' → logprob: -8.378000259399414
    6. 'power' → logprob: -8.378000259399414
    7. 'la' → logprob: -9.003000259399414
    8. 'un' → logprob: -9.253000259399414
    9. 'x' → logprob: -9.253000259399414
    10. 'e' → logprob: -9.378000259399414

Token 141: ' puissance' (ID: 63494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014369749464094639
    2. 'pu' → logprob: -4.764369964599609
    3. 'power' → logprob: -5.639369964599609
    4. 'pow' → logprob: -6.389369964599609
    5. 'p' → logprob: -8.01436996459961
    6. ' puissance' → logprob: -9.26436996459961
    7. 'N' → logprob: -10.51436996459961
    8. ' n' → logprob: -11.63936996459961
    9. 'L' → logprob: -11.63936996459961
    10. '-' → logprob: -12.63936996459961

Token 142: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03926053270697594
    2. ' n' → logprob: -3.4142606258392334
    3. 'N' → logprob: -6.789260387420654
    4. 'L' → logprob: -6.914260387420654
    5. 'y' → logprob: -7.289260387420654
    6. 'pow' → logprob: -7.539260387420654
    7. 'p' → logprob: -7.789260387420654
    8. ' ' → logprob: -7.914260387420654
    9. 'k' → logprob: -8.164260864257812
    10. 'x' → logprob: -8.289260864257812

Token 143: '.
' (ID: 558)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.3154473304748535
    2. ',' → logprob: -1.6904473304748535
    3. ':' → logprob: -1.9404473304748535
    4. '.' → logprob: -2.0654473304748535
    5. '**' → logprob: -2.5654473304748535
    6. 'e' → logprob: -2.5654473304748535
    7. ' ' → logprob: -2.6904473304748535
    8. ' **' → logprob: -4.4404473304748535
    9. ')' → logprob: -4.5654473304748535
    10. ' en' → logprob: -5.1904473304748535

Token 144: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026200314983725548
    2. 'd' → logprob: -3.776200294494629
    3. '
' → logprob: -5.901200294494629
    4. '```' → logprob: -9.276200294494629
    5. ' 
' → logprob: -10.026200294494629
    6. 'de' → logprob: -10.401200294494629
    7. ' def' → logprob: -11.276200294494629
    8. '

' → logprob: -11.401200294494629
    9. '\' → logprob: -11.526200294494629
    10. '  
' → logprob: -12.901200294494629

Token 145: ' Arguments' (ID: 63373)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003782381536439061
    2. '
' → logprob: -6.253782272338867
    3. 'd' → logprob: -6.503782272338867
    4. ' def' → logprob: -8.753782272338867
    5. ' 
' → logprob: -9.253782272338867
    6. '```' → logprob: -9.878782272338867
    7. 'de' → logprob: -10.628782272338867
    8. '  
' → logprob: -11.628782272338867
    9. '

' → logprob: -11.878782272338867
    10. 'import' → logprob: -13.253782272338867

Token 146: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.261014461517334
    2. '(x' → logprob: -1.261014461517334
    3. 'def' → logprob: -1.511014461517334
    4. '(
' → logprob: -2.511014461517334
    5. ' (' → logprob: -3.261014461517334
    6. '(' → logprob: -3.511014461517334
    7. ' :' → logprob: -3.511014461517334
    8. '(n' → logprob: -4.386014461517334
    9. ':
' → logprob: -4.886014461517334
    10. ' (
' → logprob: -5.636014461517334

Token 147: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7656399607658386
    2. 'def' → logprob: -0.8906399607658386
    3. ' (' → logprob: -3.2656400203704834
    4. '(x' → logprob: -3.3906400203704834
    5. '(
' → logprob: -4.140639781951904
    6. ' x' → logprob: -4.265639781951904
    7. '(' → logprob: -5.265639781951904
    8. 'matrix' → logprob: -5.390639781951904
    9. ' def' → logprob: -5.515639781951904
    10. '#' → logprob: -6.515639781951904

Token 148: '  ' (ID: 256)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12514035403728485
    2. 'def' → logprob: -2.500140428543091
    3. ' x' → logprob: -3.625140428543091
    4. '#' → logprob: -5.750140190124512
    5. 'matrix' → logprob: -6.250140190124512
    6. ' def' → logprob: -6.500140190124512
    7. 'mat' → logprob: -7.500140190124512
    8. ' matrix' → logprob: -7.625140190124512
    9. 'n' → logprob: -8.000140190124512
    10. '   ' → logprob: -8.500140190124512

Token 149: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03351360186934471
    2. 'def' → logprob: -3.7835135459899902
    3. ' x' → logprob: -4.65851354598999
    4. ' def' → logprob: -8.033514022827148
    5. 'n' → logprob: -8.908514022827148
    6. '   ' → logprob: -9.408514022827148
    7. 'matrix' → logprob: -9.533514022827148
    8. '#' → logprob: -10.658514022827148
    9. 'mat' → logprob: -10.658514022827148
    10. '
' → logprob: -10.908514022827148

Token 150: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003045994380954653
    2. ' ,' → logprob: -8.875304222106934
    3. ':' → logprob: -9.000304222106934
    4. ',
' → logprob: -11.375304222106934
    5. ',x' → logprob: -11.625304222106934
    6. ')' → logprob: -11.750304222106934
    7. ',n' → logprob: -12.625304222106934
    8. ',

' → logprob: -13.750304222106934
    9. ' :' → logprob: -13.750304222106934
    10. '):' → logprob: -13.750304222106934

Token 151: ' matr' (ID: 25095)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.5452698469161987
    2. 'matrix' → logprob: -1.6702698469161987
    3. 'x' → logprob: -2.0452699661254883
    4. ' matrix' → logprob: -2.5452699661254883
    5. 'numpy' → logprob: -2.9202699661254883
    6. 'list' → logprob: -2.9202699661254883
    7. ' np' → logprob: -3.2952699661254883
    8. ' x' → logprob: -3.2952699661254883
    9. '[' → logprob: -3.4202699661254883
    10. 'import' → logprob: -3.7952699661254883

Token 152: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00027718624914996326
    2. 'ix' → logprob: -8.250277519226074
    3. 'ic' → logprob: -11.375277519226074
    4. '[' → logprob: -13.875277519226074
    5. 'ixe' → logprob: -14.000277519226074
    6. '   ' → logprob: -14.750277519226074
    7. '```' → logprob: -14.750277519226074
    8. '[]' → logprob: -15.000277519226074
    9. '#' → logprob: -15.125277519226074
    10. 'rice' → logprob: -15.125277519226074

Token 153: ' carr' (ID: 18321)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1718280166387558
    2. '[' → logprob: -2.796828031539917
    3. '<|end|>' → logprob: -3.171828031539917
    4. ')' → logprob: -3.296828031539917
    5. ':' → logprob: -5.171827793121338
    6. ' ,' → logprob: -5.671827793121338
    7. 'def' → logprob: -6.546827793121338
    8. ' (' → logprob: -6.546827793121338
    9. ',
' → logprob: -6.796827793121338
    10. ' =' → logprob: -6.921827793121338

Token 154: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00033951509976759553
    2. 'é' → logprob: -8.00033950805664
    3. '[' → logprob: -13.00033950805664
    4. 'ee' → logprob: -13.62533950805664
    5. 'e' → logprob: -15.37533950805664
    6. '[]' → logprob: -16.37533950805664
    7. '2' → logprob: -16.37533950805664
    8. 'è' → logprob: -17.37533950805664
    9. 'ées' → logprob: -17.62533950805664
    10. '{' → logprob: -17.75033950805664

Token 155: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34292230010032654
    2. '[' → logprob: -1.717922329902649
    3. ' (' → logprob: -2.9679222106933594
    4. '<|end|>' → logprob: -3.9679222106933594
    5. ',
' → logprob: -4.342922210693359
    6. ' ,' → logprob: -4.842922210693359
    7. '[
' → logprob: -5.217922210693359
    8. '[]' → logprob: -5.717922210693359
    9. ')' → logprob: -6.092922210693359
    10. '[n' → logprob: -6.217922210693359

Token 156: ' taille' (ID: 41644)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22061650454998016
    2. 'n' → logprob: -2.720616579055786
    3. '[' → logprob: -3.220616579055786
    4. 'list' → logprob: -3.345616579055786
    5. '4' → logprob: -4.220616340637207
    6. 'size' → logprob: -4.345616340637207
    7. '[[' → logprob: -5.095616340637207
    8. ' ' → logprob: -5.595616340637207
    9. '[]' → logprob: -5.720616340637207
    10. '[
' → logprob: -6.595616340637207

Token 157: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19887885451316833
    2. ' ' → logprob: -1.8238788843154907
    3. 'n' → logprob: -4.073878765106201
    4. ' n' → logprob: -6.948878765106201
    5. 'len' → logprob: -8.57387924194336
    6. '[' → logprob: -8.57387924194336
    7. '3' → logprob: -9.19887924194336
    8. 'int' → logprob: -9.82387924194336
    9. '  ' → logprob: -9.94887924194336
    10. '[]' → logprob: -10.07387924194336

Token 158: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0185087937861681
    2. 'n' → logprob: -4.6435089111328125
    3. 'len' → logprob: -4.8935089111328125
    4. ' ' → logprob: -7.3935089111328125
    5. ' len' → logprob: -8.643508911132812
    6. '(len' → logprob: -9.393508911132812
    7. '3' → logprob: -9.768508911132812
    8. ' n' → logprob: -9.768508911132812
    9. 'N' → logprob: -9.893508911132812
    10. 'k' → logprob: -10.018508911132812

Token 159: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6495427489280701
    2. '[' → logprob: -1.0245428085327148
    3. ' ,' → logprob: -3.024542808532715
    4. '*' → logprob: -3.524542808532715
    5. ' ' → logprob: -3.899542808532715
    6. ',
' → logprob: -5.649542808532715
    7. ')' → logprob: -5.774542808532715
    8. ' *' → logprob: -6.024542808532715
    9. 'x' → logprob: -6.274542808532715
    10. ' x' → logprob: -6.524542808532715

Token 160: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004950098809786141
    2. ' ' → logprob: -7.625494956970215
    3. ',' → logprob: -13.250494956970215
    4. 'n' → logprob: -13.625494956970215
    5. '1' → logprob: -14.000494956970215
    6. ')' → logprob: -14.125494956970215
    7. 'x' → logprob: -14.750494956970215
    8. '2' → logprob: -15.000494956970215
    9. '  ' → logprob: -15.000494956970215
    10. ' ,' → logprob: -15.250494956970215

Token 161: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20007194578647614
    2. ',
' → logprob: -2.0750720500946045
    3. 'def' → logprob: -3.2000720500946045
    4. '
' → logprob: -5.700071811676025
    5. '[' → logprob: -5.825071811676025
    6. ' ,' → logprob: -5.950071811676025
    7. ')' → logprob: -6.075071811676025
    8. '<|end|>' → logprob: -7.075071811676025
    9. '[
' → logprob: -7.950071811676025
    10. '```' → logprob: -8.200072288513184

Token 162: 're' (ID: 264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1274862289428711
    2. ' numpy' → logprob: -4.127486228942871
    3. '),' → logprob: -4.252486228942871
    4. ' )' → logprob: -4.252486228942871
    5. 'list' → logprob: -4.252486228942871
    6. ' list' → logprob: -4.377486228942871
    7. ')
' → logprob: -4.502486228942871
    8. ' ' → logprob: -4.877486228942871
    9. 'numpy' → logprob: -5.002486228942871
    10. 'np' → logprob: -5.502486228942871

Token 163: 'prés' (ID: 61592)
  Prédit: 'prés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.6879968643188477
    2. 'turn' → logprob: -2.0629968643188477
    3. ')' → logprob: -2.4379968643188477
    4. '[' → logprob: -2.9379968643188477
    5. 'list' → logprob: -3.5629968643188477
    6. ' ' → logprob: -3.9379968643188477
    7. 'pr' → logprob: -3.9379968643188477
    8. 'st' → logprob: -4.187996864318848
    9. 'n' → logprob: -4.187996864318848
    10. '#' → logprob: -4.812996864318848

Token 164: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0001426346570951864
    2. 'ented' → logprob: -9.125143051147461
    3. 'entation' → logprob: -10.625143051147461
    4. 'sent' → logprob: -13.125143051147461
    5. 'esent' → logprob: -13.125143051147461
    6. 'e' → logprob: -13.625143051147461
    7. ')' → logprob: -13.750143051147461
    8. 'ente' → logprob: -14.000143051147461
    9. 'enter' → logprob: -14.250143051147461
    10. 'ant' → logprob: -15.000143051147461

Token 165: 'ant' (ID: 493)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.010745828039944172
    2. 'ant' → logprob: -5.135746002197266
    3. 'ee' → logprob: -5.885746002197266
    4. 'é' → logprob: -6.260746002197266
    5. ')' → logprob: -10.510746002197266
    6. 'ent' → logprob: -10.635746002197266
    7. 'ées' → logprob: -11.385746002197266
    8. 'e' → logprob: -11.635746002197266
    9. 'ation' → logprob: -11.760746002197266
    10. '```' → logprob: -11.885746002197266

Token 166: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06664285808801651
    2. ' la' → logprob: -3.4416427612304688
    3. 'une' → logprob: -3.8166427612304688
    4. 'a' → logprob: -5.316642761230469
    5. ')' → logprob: -6.316642761230469
    6. 'la' → logprob: -6.566642761230469
    7. ' a' → logprob: -6.941642761230469
    8. ' un' → logprob: -7.566642761230469
    9. 'n' → logprob: -9.191642761230469
    10. 'import' → logprob: -9.316642761230469

Token 167: ' transformation' (ID: 26242)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.09570781141519547
    2. ')' → logprob: -3.720707893371582
    3. ' matr' → logprob: -3.720707893371582
    4. 'base' → logprob: -4.720707893371582
    5. 'multip' → logprob: -5.470707893371582
    6. ' base' → logprob: -5.845707893371582
    7. 'numpy' → logprob: -5.970707893371582
    8. 'state' → logprob: -6.095707893371582
    9. 'matrix' → logprob: -6.345707893371582
    10. 'pu' → logprob: -6.470707893371582

Token 168: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7357981204986572
    2. ' )' → logprob: -0.8607981204986572
    3. ' numpy' → logprob: -2.7357981204986572
    4. ' de' → logprob: -4.735797882080078
    5. ' ' → logprob: -4.735797882080078
    6. 'numpy' → logprob: -5.735797882080078
    7. '   ' → logprob: -6.360797882080078
    8. ' )
' → logprob: -6.485797882080078
    9. ' matrix' → logprob: -6.735797882080078
    10. 'de' → logprob: -6.860797882080078

Token 169: ' appliquer' (ID: 172872)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.44892606139183044
    2. 'ap' → logprob: -1.5739260911941528
    3. 'ex' → logprob: -2.8239259719848633
    4. ' appliquer' → logprob: -3.1989259719848633
    5. 'élé' → logprob: -4.448925971984863
    6. 'e' → logprob: -4.573925971984863
    7. 'effect' → logprob: -5.073925971984863
    8. '```' → logprob: -5.323925971984863
    9. 'app' → logprob: -5.573925971984863
    10. ')' → logprob: -6.073925971984863

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0095432223752141
    2. ' )' → logprob: -4.759543418884277
    3. '),' → logprob: -7.759543418884277
    4. ')
' → logprob: -8.259543418884277
    5. ' ' → logprob: -10.009543418884277
    6. ',' → logprob: -10.009543418884277
    7. '   ' → logprob: -10.259543418884277
    8. ' à' → logprob: -10.884543418884277
    9. ' )
' → logprob: -10.884543418884277
    10. ' ),' → logprob: -11.259543418884277

Token 171: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2447495311498642
    2. 'n' → logprob: -2.2447495460510254
    3. ')' → logprob: -3.3697495460510254
    4. 'def' → logprob: -3.3697495460510254
    5. ' ' → logprob: -4.244749546051025
    6. ',
' → logprob: -4.619749546051025
    7. ' ,' → logprob: -5.619749546051025
    8. ' n' → logprob: -5.744749546051025
    9. ',n' → logprob: -5.744749546051025
    10. '   ' → logprob: -6.494749546051025

Token 172: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009556090459227562
    2. 'n' → logprob: -5.384556293487549
    3. ' def' → logprob: -5.759556293487549
    4. ')' → logprob: -7.634556293487549
    5. '
' → logprob: -8.25955581665039
    6. ',' → logprob: -8.25955581665039
    7. ' 
' → logprob: -9.13455581665039
    8. '  
' → logprob: -9.13455581665039
    9. ' n' → logprob: -9.25955581665039
    10. ' ' → logprob: -9.25955581665039

Token 173: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006757879164069891
    2. ' n' → logprob: -5.006757736206055
    3. ' ' → logprob: -10.631757736206055
    4. '  ' → logprob: -11.881757736206055
    5. 'def' → logprob: -12.381757736206055
    6. '   ' → logprob: -12.881757736206055
    7. '```' → logprob: -13.381757736206055
    8. '    ' → logprob: -14.506757736206055
    9. '	n' → logprob: -14.506757736206055
    10. 'x' → logprob: -14.506757736206055

Token 174: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3952336013317108
    2. ':' → logprob: -1.3952336311340332
    3. ',' → logprob: -2.645233631134033
    4. ' :' → logprob: -5.270233631134033
    5. ':int' → logprob: -7.020233631134033
    6. ' ):' → logprob: -7.145233631134033
    7. ')' → logprob: -7.645233631134033
    8. ' ,' → logprob: -8.770233154296875
    9. '<|end|>' → logprob: -9.895233154296875
    10. '):
' → logprob: -10.145233154296875

Token 175: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6951189637184143
    2. ' int' → logprob: -0.6951189637184143
    3. 'n' → logprob: -6.4451189041137695
    4. ' n' → logprob: -8.19511890411377
    5. ' l' → logprob: -10.07011890411377
    6. ' ' → logprob: -10.69511890411377
    7. 'l' → logprob: -11.07011890411377
    8. ' entier' → logprob: -11.57011890411377
    9. ' integer' → logprob: -12.44511890411377
    10. '<int' → logprob: -12.69511890411377

Token 176: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8701071739196777
    2. ',' → logprob: -1.3701071739196777
    3. '<|end|>' → logprob: -2.1201071739196777
    4. ')' → logprob: -2.7451071739196777
    5. '):' → logprob: -2.7451071739196777
    6. ' :' → logprob: -3.1201071739196777
    7. '=' → logprob: -4.995107173919678
    8. ' ):' → logprob: -5.745107173919678
    9. ' ' → logprob: -5.870107173919678
    10. ' ,' → logprob: -5.870107173919678

Token 177: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5464158058166504
    2. 'int' → logprob: -1.0464158058166504
    3. ' int' → logprob: -3.4214158058166504
    4. ' )' → logprob: -3.6714158058166504
    5. 'n' → logprob: -6.04641580581665
    6. 'ex' → logprob: -6.17141580581665
    7. ' ' → logprob: -6.92141580581665
    8. 'nombre' → logprob: -7.42141580581665
    9. ' la' → logprob: -7.54641580581665
    10. ' entier' → logprob: -7.54641580581665

Token 178: ' puissance' (ID: 63494)
  Prédit: ' puissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.11495070904493332
    2. ' ' → logprob: -2.614950656890869
    3. 'pu' → logprob: -3.489950656890869
    4. ' puiss' → logprob: -6.364950656890869
    5. ' expos' → logprob: -6.739950656890869
    6. ' exponent' → logprob: -6.989950656890869
    7. 'ex' → logprob: -8.614951133728027
    8. '  ' → logprob: -8.864951133728027
    9. ' pu' → logprob: -8.864951133728027
    10. ' Pu' → logprob: -9.239951133728027

Token 179: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1350363940000534
    2. ' )' → logprob: -2.1350364685058594
    3. ' à' → logprob: -5.260036468505859
    4. ' ' → logprob: -6.385036468505859
    5. ' ' → logprob: -7.260036468505859
    6. '  ' → logprob: -8.63503646850586
    7. 'à' → logprob: -9.63503646850586
    8. ',' → logprob: -10.13503646850586
    9. ' de' → logprob: -10.26003646850586
    10. '   ' → logprob: -10.51003646850586

Token 180: ' laquelle' (ID: 47998)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.17766942083835602
    2. ' é' → logprob: -2.1776695251464844
    3. ' ' → logprob: -4.302669525146484
    4. '  ' → logprob: -4.427669525146484
    5. 'élé' → logprob: -4.927669525146484
    6. 'ex' → logprob: -5.552669525146484
    7. ')' → logprob: -6.302669525146484
    8. 'calcul' → logprob: -6.677669525146484
    9. ' calcul' → logprob: -6.802669525146484
    10. 'e' → logprob: -6.802669525146484

Token 181: ' é' (ID: 1212)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3690840005874634
    2. ' appliquer' → logprob: -1.3690840005874634
    3. 'x' → logprob: -2.244083881378174
    4. ')' → logprob: -2.244083881378174
    5. 'on' → logprob: -2.869083881378174
    6. ' ' → logprob: -3.119083881378174
    7. ' x' → logprob: -3.244083881378174
    8. ' ' → logprob: -3.369083881378174
    9. 'élé' → logprob: -4.244083881378174
    10. 'é' → logprob: -4.369083881378174

Token 182: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.17814838886260986
    2. 'l' → logprob: -2.8031482696533203
    3. 'le' → logprob: -3.0531482696533203
    4. 'lé' → logprob: -3.1781482696533203
    5. 'lev' → logprob: -5.05314826965332
    6. 'x' → logprob: -5.92814826965332
    7. 'é' → logprob: -6.67814826965332
    8. 'él' → logprob: -6.92814826965332
    9. 'v' → logprob: -7.92814826965332
    10. 't' → logprob: -8.30314826965332

Token 183: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032823991030454636
    2. ' )' → logprob: -4.1578240394592285
    3. ' la' → logprob: -4.7828240394592285
    4. 'x' → logprob: -5.4078240394592285
    5. 'la' → logprob: -6.4078240394592285
    6. ' x' → logprob: -6.7828240394592285
    7. ' ' → logprob: -7.7828240394592285
    8. '(x' → logprob: -8.28282356262207
    9. 'l' → logprob: -9.03282356262207
    10. ')x' → logprob: -9.28282356262207

Token 184: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.5854558944702148
    2. 'mat' → logprob: -1.3354558944702148
    3. ' ' → logprob: -2.835455894470215
    4. 'x' → logprob: -2.960455894470215
    5. ' x' → logprob: -3.585455894470215
    6. 'm' → logprob: -4.585455894470215
    7. ')' → logprob: -4.710455894470215
    8. ' matrix' → logprob: -4.960455894470215
    9. ' )' → logprob: -4.960455894470215
    10. 'matrix' → logprob: -5.335455894470215

Token 185: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.04630698263645172
    2. 'ix' → logprob: -3.29630708694458
    3. 'i' → logprob: -5.54630708694458
    4. 'x' → logprob: -5.79630708694458
    5. 'ce' → logprob: -8.421306610107422
    6. ')' → logprob: -8.546306610107422
    7. 'ic' → logprob: -8.796306610107422
    8. 'e' → logprob: -9.046306610107422
    9. 'î' → logprob: -9.046306610107422
    10. ' ' → logprob: -9.546306610107422

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06801488995552063
    2. '):' → logprob: -2.8180148601531982
    3. ' )' → logprob: -5.318015098571777
    4. ' ):' → logprob: -7.568015098571777
    5. '):
' → logprob: -7.818015098571777
    6. ')
' → logprob: -9.693015098571777
    7. ',' → logprob: -10.693015098571777
    8. ').' → logprob: -10.818015098571777
    9. '),' → logprob: -10.943015098571777
    10. ' ' → logprob: -11.193015098571777

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006685417611151934
    2. '
' → logprob: -5.756685256958008
    3. ')' → logprob: -5.881685256958008
    4. ')
' → logprob: -8.006685256958008
    5. 'd' → logprob: -8.256685256958008
    6. ' def' → logprob: -9.506685256958008
    7. ' 
' → logprob: -11.006685256958008
    8. '

' → logprob: -12.381685256958008
    9. 'de' → logprob: -12.506685256958008
    10. '  
' → logprob: -12.756685256958008

Token 188: ' mat' (ID: 2450)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.3304395377635956
    2. ' mat' → logprob: -1.330439567565918
    3. ' pow' → logprob: -4.705439567565918
    4. 'matrix' → logprob: -6.080439567565918
    5. 'mat' → logprob: -6.330439567565918
    6. ' power' → logprob: -6.330439567565918
    7. ' matr' → logprob: -7.080439567565918
    8. 'pow' → logprob: -7.330439567565918
    9. ' fast' → logprob: -8.330439567565918
    10. ' puissance' → logprob: -9.455439567565918

Token 189: '_pow' (ID: 160965)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8563442230224609
    2. '_pow' → logprob: -1.106344223022461
    3. 'rix' → logprob: -2.356344223022461
    4. 'pow' → logprob: -2.606344223022461
    5. 'rice' → logprob: -3.481344223022461
    6. 'r' → logprob: -3.981344223022461
    7. '_power' → logprob: -4.731344223022461
    8. '
' → logprob: -5.731344223022461
    9. '_r' → logprob: -6.106344223022461
    10. '   ' → logprob: -6.356344223022461

Token 190: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.038221877068281174
    2. '(' → logprob: -3.288221836090088
    3. ' (' → logprob: -8.663222312927246
    4. '(
' → logprob: -12.413222312927246
    5. '(matrix' → logprob: -13.163222312927246
    6. '(mat' → logprob: -13.663222312927246
    7. ' ' → logprob: -16.16322135925293
    8. '(

' → logprob: -16.78822135925293
    9. '(m' → logprob: -17.03822135925293
    10. '(Matrix' → logprob: -17.16322135925293

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017306297086179256
    2. ',n' → logprob: -6.751730442047119
    3. ' ,' → logprob: -7.501730442047119
    4. ',x' → logprob: -12.376730918884277
    5. ' ' → logprob: -13.626730918884277
    6. ',
' → logprob: -14.251730918884277
    7. 'n' → logprob: -14.376730918884277
    8. ' n' → logprob: -14.626730918884277
    9. '‌,' → logprob: -15.251730918884277
    10. '(n' → logprob: -15.876730918884277

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014418989419937
    2. ' n' → logprob: -1.7014418840408325
    3. ' ' → logprob: -10.951441764831543
    4. '   ' → logprob: -11.951441764831543
    5. '  ' → logprob: -13.326441764831543
    6. '	n' → logprob: -13.326441764831543
    7. '    ' → logprob: -14.451441764831543
    8. '
' → logprob: -15.576441764831543
    9. ')n' → logprob: -15.951441764831543
    10. '```' → logprob: -16.07644271850586

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007501865038648248
    2. ')' → logprob: -7.8757500648498535
    3. '):
' → logprob: -8.125750541687012
    4. ' ):' → logprob: -9.875750541687012
    5. ':' → logprob: -11.125750541687012
    6. ',' → logprob: -12.375750541687012
    7. '):
' → logprob: -12.875750541687012
    8. '):

' → logprob: -14.750750541687012
    9. ' )' → logprob: -15.750750541687012
    10. '=' → logprob: -15.875750541687012

Token 194: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.417874813079834
    2. '   ' → logprob: -1.167874813079834
    3. ' :' → logprob: -4.292874813079834
    4. ' ' → logprob: -4.417874813079834
    5. ',' → logprob: -6.417874813079834
    6. ':
' → logprob: -7.292874813079834
    7. ' if' → logprob: -7.542874813079834
    8. ')' → logprob: -7.792874813079834
    9. '):' → logprob: -7.917874813079834
    10. '  ' → logprob: -8.042875289916992

Token 195: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7359805703163147
    2. 'if' → logprob: -0.8609805703163147
    3. 'res' → logprob: -3.23598051071167
    4. '   ' → logprob: -3.61098051071167
    5. ' if' → logprob: -3.86098051071167
    6. ' result' → logprob: -4.73598051071167
    7. ' res' → logprob: -6.73598051071167
    8. 'r' → logprob: -7.98598051071167
    9. ' ' → logprob: -8.610980987548828
    10. 'def' → logprob: -8.985980987548828

Token 196: ' Cré' (ID: 109203)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4911198616027832
    2. 'if' → logprob: -1.4911198616027832
    3. 'res' → logprob: -2.991119861602783
    4. ' if' → logprob: -3.116119861602783
    5. ' result' → logprob: -3.491119861602783
    6. ' res' → logprob: -3.866119861602783
    7. 'def' → logprob: -4.991119861602783
    8. '   ' → logprob: -5.616119861602783
    9. 'import' → logprob: -6.116119861602783
    10. 'n' → logprob: -6.366119861602783

Token 197: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.029036864638328552
    2. 'e' → logprob: -4.154036998748779
    3. 'ation' → logprob: -5.779036998748779
    4. 'ate' → logprob: -5.904036998748779
    5. 'ert' → logprob: -6.779036998748779
    6. 'if' → logprob: -6.904036998748779
    7. 'é' → logprob: -7.029036998748779
    8. '   ' → logprob: -7.529036998748779
    9. 'ée' → logprob: -7.654036998748779
    10. '#' → logprob: -7.904036998748779

Token 198: ' de' (ID: 334)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.0735875368118286
    2. 'result' → logprob: -1.1985875368118286
    3. ' res' → logprob: -1.4485875368118286
    4. 'res' → logprob: -2.323587417602539
    5. '   ' → logprob: -3.948587417602539
    6. ' ' → logprob: -6.073587417602539
    7. ' r' → logprob: -7.573587417602539
    8. 'r' → logprob: -7.948587417602539
    9. ' resultat' → logprob: -7.948587417602539
    10. ' base' → logprob: -8.073587417602539

Token 199: ' la' (ID: 557)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.15440315008163452
    2. 'res' → logprob: -2.9044032096862793
    3. ' [[' → logprob: -3.2794032096862793
    4. 'result' → logprob: -3.9044032096862793
    5. '[' → logprob: -4.404403209686279
    6. 'identity' → logprob: -4.904403209686279
    7. ' res' → logprob: -5.279403209686279
    8. ' identity' → logprob: -6.529403209686279
    9. 'I' → logprob: -7.029403209686279
    10. ' result' → logprob: -7.279403209686279

Token 200: ' matr' (ID: 25095)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.20966258645057678
    2. 'result' → logprob: -2.584662675857544
    3. 'identity' → logprob: -2.834662675857544
    4. 'res' → logprob: -3.459662675857544
    5. '[' → logprob: -4.959662437438965
    6. ' [[' → logprob: -4.959662437438965
    7. 'ident' → logprob: -5.459662437438965
    8. ' identity' → logprob: -6.709662437438965
    9. 'I' → logprob: -7.084662437438965
    10. 'id' → logprob: -7.209662437438965

Token 201: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0003758575767278671
    2. '[' → logprob: -9.250375747680664
    3. 'ix' → logprob: -9.250375747680664
    4. 'rice' → logprob: -9.625375747680664
    5. '   ' → logprob: -10.375375747680664
    6. 'atrice' → logprob: -11.250375747680664
    7. '[]' → logprob: -11.375375747680664
    8. 'ce' → logprob: -11.375375747680664
    9. 'ic' → logprob: -11.875375747680664
    10. '[[' → logprob: -11.875375747680664

Token 202: ' identité' (ID: 183136)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2317818403244019
    2. ' res' → logprob: -1.2317818403244019
    3. 'result' → logprob: -1.2317818403244019
    4. ' result' → logprob: -2.1067819595336914
    5. 'r' → logprob: -7.481781959533691
    6. ' identity' → logprob: -7.731781959533691
    7. ' resultat' → logprob: -7.981781959533691
    8. 'I' → logprob: -8.231781959533691
    9. ' ' → logprob: -8.356781959533691
    10. 'identity' → logprob: -8.481781959533691

Token 203: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.286051869392395
    2. ' =' → logprob: -1.661051869392395
    3. ':' → logprob: -3.7860517501831055
    4. '[' → logprob: -5.2860517501831055
    5. ' :' → logprob: -5.2860517501831055
    6. ',' → logprob: -5.4110517501831055
    7. ' ' → logprob: -5.7860517501831055
    8. '[i' → logprob: -6.1610517501831055
    9. ' I' → logprob: -6.2860517501831055
    10. 'identity' → logprob: -6.4110517501831055

Token 204: '3' (ID: 18)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7947449684143066
    2. 'result' → logprob: -1.4197449684143066
    3. '   ' → logprob: -2.0447449684143066
    4. ' =' → logprob: -2.9197449684143066
    5. '=' → logprob: -3.6697449684143066
    6. '[' → logprob: -4.169744968414307
    7. 'identity' → logprob: -4.419744968414307
    8. '([[' → logprob: -4.669744968414307
    9. 'I' → logprob: -4.794744968414307
    10. '([' → logprob: -5.044744968414307

Token 205: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21439705789089203
    2. '[' → logprob: -2.2143969535827637
    3. ' ' → logprob: -3.5893969535827637
    4. ' x' → logprob: -3.7143969535827637
    5. '*' → logprob: -4.464396953582764
    6. ' [
' → logprob: -5.089396953582764
    7. ' [' → logprob: -5.089396953582764
    8. '[
' → logprob: -5.964396953582764
    9. '   ' → logprob: -6.214396953582764
    10. ' *' → logprob: -7.089396953582764

Token 206: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0064383684657514095
    2. '[' → logprob: -5.381438255310059
    3. ' ' → logprob: -6.881438255310059
    4. '   ' → logprob: -7.381438255310059
    5. ' [' → logprob: -9.256438255310059
    6. '  ' → logprob: -10.506438255310059
    7. '    ' → logprob: -11.881438255310059
    8. '[[' → logprob: -11.881438255310059
    9. '[
' → logprob: -12.006438255310059
    10. '```' → logprob: -12.131438255310059

Token 207: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05722193792462349
    2. ':' → logprob: -4.43222188949585
    3. '[' → logprob: -4.55722188949585
    4. '
' → logprob: -4.68222188949585
    5. ' =' → logprob: -4.80722188949585
    6. '[i' → logprob: -6.05722188949585
    7. ':
' → logprob: -6.05722188949585
    8. '[
' → logprob: -6.18222188949585
    9. 'identity' → logprob: -6.43222188949585
    10. 'res' → logprob: -7.18222188949585

Token 208: ' l' (ID: 305)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.46440333127975464
    2. ' i' → logprob: -1.3394033908843994
    3. ' result' → logprob: -3.4644033908843994
    4. 'i' → logprob: -3.7144033908843994
    5. ' la' → logprob: -4.33940315246582
    6. ' ' → logprob: -4.83940315246582
    7. 'result' → logprob: -5.08940315246582
    8. 'res' → logprob: -5.21440315246582
    9. ' r' → logprob: -5.33940315246582
    10. ' le' → logprob: -5.96440315246582

Token 209: ''' (ID: 6)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.055206093937158585
    2. 'range' → logprob: -2.930206060409546
    3. '_range' → logprob: -8.305206298828125
    4. '[' → logprob: -10.930206298828125
    5. 'Range' → logprob: -11.680206298828125
    6. 'i' → logprob: -11.680206298828125
    7. '(range' → logprob: -12.180206298828125
    8. 'e' → logprob: -12.555206298828125
    9. ' ranges' → logprob: -12.805206298828125
    10. ''' → logprob: -12.805206298828125

Token 210: 'initial' (ID: 17493)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8884096741676331
    2. 'rés' → logprob: -1.1384096145629883
    3. 'i' → logprob: -1.6384096145629883
    4. 'res' → logprob: -3.5134096145629883
    5. 'range' → logprob: -4.388409614562988
    6. 'ret' → logprob: -4.638409614562988
    7. 'r' → logprob: -5.138409614562988
    8. ' i' → logprob: -5.638409614562988
    9. ' résultat' → logprob: -5.638409614562988
    10. 'e' → logprob: -6.138409614562988

Token 211: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.10724662989377975
    2. 'result' → logprob: -3.1072466373443604
    3. 'iser' → logprob: -3.6072466373443604
    4. 'res' → logprob: -4.732246398925781
    5. 'ization' → logprob: -5.107246398925781
    6. 'value' → logprob: -5.482246398925781
    7. 'isé' → logprob: -6.107246398925781
    8. '_result' → logprob: -6.607246398925781
    9. 'ise' → logprob: -6.982246398925781
    10. 'mat' → logprob: -7.107246398925781

Token 212: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20975808799266815
    2. 'result' → logprob: -2.7097580432891846
    3. ':' → logprob: -3.5847580432891846
    4. 'I' → logprob: -3.9597580432891846
    5. 'res' → logprob: -4.084758281707764
    6. ' result' → logprob: -4.209758281707764
    7. ' I' → logprob: -4.584758281707764
    8. ' ' → logprob: -4.834758281707764
    9. ' =' → logprob: -5.334758281707764
    10. ' res' → logprob: -5.709758281707764

Token 213: ' y' (ID: 342)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5605886578559875
    2. ' res' → logprob: -1.5605885982513428
    3. 'result' → logprob: -1.8105885982513428
    4. ' result' → logprob: -3.5605885982513428
    5. 'r' → logprob: -4.060588836669922
    6. 'I' → logprob: -6.310588836669922
    7. 'ret' → logprob: -6.435588836669922
    8. ' ' → logprob: -6.560588836669922
    9. ' r' → logprob: -6.560588836669922
    10. '[[' → logprob: -7.185588836669922

Token 214: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6484928131103516
    2. ' =' → logprob: -0.8984928131103516
    3. ':' → logprob: -3.5234928131103516
    4. 'y' → logprob: -4.148492813110352
    5. ' y' → logprob: -4.398492813110352
    6. '=' → logprob: -6.148492813110352
    7. '
' → logprob: -6.148492813110352
    8. ' :' → logprob: -6.273492813110352
    9. '	y' → logprob: -6.398492813110352
    10. ' ' → logprob: -7.273492813110352

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06657806038856506
    2. ' y' → logprob: -3.1915781497955322
    3. 'y' → logprob: -3.8165781497955322
    4. '
' → logprob: -6.941577911376953
    5. '    
' → logprob: -8.441577911376953
    6. '	y' → logprob: -9.441577911376953
    7. '    ' → logprob: -11.566577911376953
    8. '[y' → logprob: -11.941577911376953
    9. ' 
' → logprob: -12.316577911376953
    10. '   ' → logprob: -12.816577911376953

Token 216: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13936619460582733
    2. '   ' → logprob: -2.3893661499023438
    3. ' y' → logprob: -3.2643661499023438
    4. '[
' → logprob: -9.389366149902344
    5. '[' → logprob: -10.014366149902344
    6. '[y' → logprob: -11.264366149902344
    7. '	y' → logprob: -11.264366149902344
    8. ' ' → logprob: -11.639366149902344
    9. '
' → logprob: -12.014366149902344
    10. '  ' → logprob: -12.139366149902344

Token 217: ' La' (ID: 3038)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0891365259885788
    2. ' y' → logprob: -2.7141366004943848
    3. '   ' → logprob: -3.9641366004943848
    4. ' ' → logprob: -11.464136123657227
    5. '	y' → logprob: -11.964136123657227
    6. '  ' → logprob: -12.089136123657227
    7. '
' → logprob: -12.339136123657227
    8. '    ' → logprob: -13.464136123657227
    9. 'n' → logprob: -13.964136123657227
    10. '    
' → logprob: -14.089136123657227

Token 218: ' matr' (ID: 25095)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4747280776500702
    2. ' y' → logprob: -0.9747281074523926
    3. ' ' → logprob: -8.099727630615234
    4. '   ' → logprob: -8.224727630615234
    5. 'n' → logprob: -10.349727630615234
    6. '	y' → logprob: -10.599727630615234
    7. '
' → logprob: -11.974727630615234
    8. '  ' → logprob: -12.099727630615234
    9. ' n' → logprob: -12.599727630615234
    10. ' ' → logprob: -13.724727630615234

Token 219: 'ice' (ID: 603)
  Prédit: 'atrice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.2381611466407776
    2. 'ice' → logprob: -1.7381610870361328
    3. 'at' → logprob: -3.863161087036133
    4. '   ' → logprob: -4.363161087036133
    5. 'atrix' → logprob: -7.863161087036133
    6. '[' → logprob: -7.988161087036133
    7. 'a' → logprob: -8.113161087036133
    8. 'atre' → logprob: -8.613161087036133
    9. 'y' → logprob: -8.738161087036133
    10. 'atique' → logprob: -8.988161087036133

Token 220: ' identité' (ID: 183136)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.45848602056503296
    2. ' y' → logprob: -1.5834860801696777
    3. ' =' → logprob: -2.5834860801696777
    4. ' identité' → logprob: -3.4584860801696777
    5. '_identity' → logprob: -4.208486080169678
    6. 'identity' → logprob: -4.583486080169678
    7. '   ' → logprob: -5.208486080169678
    8. 'ident' → logprob: -5.208486080169678
    9. ' identity' → logprob: -5.208486080169678
    10. ' ' → logprob: -5.208486080169678

Token 221: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010318702086806297
    2. '=' → logprob: -4.885318756103516
    3. ' y' → logprob: -6.385318756103516
    4. 'y' → logprob: -7.385318756103516
    5. ' ' → logprob: -8.385318756103516
    6. ' =
' → logprob: -9.010318756103516
    7. '_y' → logprob: -11.510318756103516
    8. ',' → logprob: -11.885318756103516
    9. '=[' → logprob: -12.010318756103516
    10. ' =[' → logprob: -12.010318756103516

Token 222: ' une' (ID: 2463)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6057254672050476
    2. '[
' → logprob: -1.6057255268096924
    3. '[' → logprob: -2.3557255268096924
    4. ' [[' → logprob: -2.3557255268096924
    5. ' [
' → logprob: -3.1057255268096924
    6. ' [' → logprob: -3.9807255268096924
    7. '   ' → logprob: -7.980725288391113
    8. '  ' → logprob: -10.230725288391113
    9. ' ' → logprob: -10.355725288391113
    10. '([[' → logprob: -11.230725288391113

Token 223: ' matr' (ID: 25095)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.084790587425232
    2. '[
' → logprob: -1.334790587425232
    3. '[' → logprob: -1.959790587425232
    4. ' [
' → logprob: -2.9597907066345215
    5. 'liste' → logprob: -3.0847907066345215
    6. ' [[' → logprob: -3.2097907066345215
    7. ' matr' → logprob: -3.2097907066345215
    8. 'mat' → logprob: -3.4597907066345215
    9. ' [' → logprob: -3.8347907066345215
    10. ' liste' → logprob: -4.7097907066345215

Token 224: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.006101801060140133
    2. 'ix' → logprob: -6.006101608276367
    3. 'ices' → logprob: -6.756101608276367
    4. 'atrice' → logprob: -7.131101608276367
    5. '   ' → logprob: -7.881101608276367
    6. 'ique' → logprob: -8.131101608276367
    7. 'rice' → logprob: -9.006101608276367
    8. '[' → logprob: -9.131101608276367
    9. 'ixe' → logprob: -9.256101608276367
    10. 'Ice' → logprob: -9.256101608276367

Token 225: ' carr' (ID: 18321)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0697815418243408
    2. '[
' → logprob: -1.5697815418243408
    3. ' [
' → logprob: -1.5697815418243408
    4. ' [' → logprob: -1.6947815418243408
    5. '[[' → logprob: -3.319781541824341
    6. ' [[' → logprob: -4.319781303405762
    7. '   ' → logprob: -5.319781303405762
    8. ' =' → logprob: -7.069781303405762
    9. '([
' → logprob: -7.819781303405762
    10. '([[' → logprob: -7.944781303405762

Token 226: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.062137529253959656
    2. 'é' → logprob: -2.8121376037597656
    3. 'è' → logprob: -10.562137603759766
    4. 'és' → logprob: -10.687137603759766
    5. 'ante' → logprob: -11.062137603759766
    6. 'éc' → logprob: -11.187137603759766
    7. '[' → logprob: -11.312137603759766
    8. '   ' → logprob: -11.437137603759766
    9. 'e' → logprob: -11.812137603759766
    10. 'onnée' → logprob: -11.812137603759766

Token 227: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3889053761959076
    2. '[
' → logprob: -2.1389052867889404
    3. ' [' → logprob: -2.7639052867889404
    4. '[[' → logprob: -3.0139052867889404
    5. ' [
' → logprob: -3.8889052867889404
    6. '([[' → logprob: -4.0139055252075195
    7. '(
' → logprob: -4.3889055252075195
    8. '   ' → logprob: -4.5139055252075195
    9. ' =' → logprob: -5.0139055252075195
    10. '([' → logprob: -5.1389055252075195

Token 228: ' tous' (ID: 10688)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38575634360313416
    2. 'y' → logprob: -2.260756254196167
    3. ' ' → logprob: -2.635756254196167
    4. 'i' → logprob: -3.510756254196167
    5. '[i' → logprob: -3.510756254196167
    6. '[' → logprob: -3.635756254196167
    7. ' y' → logprob: -3.635756254196167
    8. '   ' → logprob: -4.635756492614746
    9. ' i' → logprob: -5.385756492614746
    10. ' [' → logprob: -5.510756492614746

Token 229: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.32530683279037476
    2. 'les' → logprob: -1.9503068923950195
    3. ' i' → logprob: -2.8253068923950195
    4. '   ' → logprob: -3.2003068923950195
    5. 'i' → logprob: -4.4503068923950195
    6. ' ' → logprob: -4.5753068923950195
    7. ' y' → logprob: -5.5753068923950195
    8. ' la' → logprob: -6.7003068923950195
    9. '[i' → logprob: -6.7003068923950195
    10. 'élé' → logprob: -6.8253068923950195

Token 230: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.14417891204357147
    2. ' éléments' → logprob: -3.269178867340088
    3. '1' → logprob: -3.394178867340088
    4. 'elements' → logprob: -4.144178867340088
    5. ' ' → logprob: -4.394178867340088
    6. '   ' → logprob: -5.019178867340088
    7. ' elements' → logprob: -5.144178867340088
    8. 'elem' → logprob: -5.144178867340088
    9. 'di' → logprob: -5.394178867340088
    10. '0' → logprob: -5.519178867340088

Token 231: ' de' (ID: 334)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.0550565719604492
    2. ' =' → logprob: -1.1800565719604492
    3. '=' → logprob: -2.055056571960449
    4. '   ' → logprob: -2.305056571960449
    5. 's' → logprob: -2.680056571960449
    6. ' ' → logprob: -4.430056571960449
    7. 'di' → logprob: -4.680056571960449
    8. '[' → logprob: -5.180056571960449
    9. '[i' → logprob: -5.180056571960449
    10. ' de' → logprob: -5.805056571960449

Token 232: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6678345203399658
    2. ' la' → logprob: -0.9178345203399658
    3. 'l' → logprob: -2.667834520339966
    4. 'di' → logprob: -4.667834281921387
    5. '1' → logprob: -5.417834281921387
    6. ' l' → logprob: -6.792834281921387
    7. ' ' → logprob: -7.042834281921387
    8. 'i' → logprob: -7.042834281921387
    9. 's' → logprob: -7.292834281921387
    10. '0' → logprob: -7.667834281921387

Token 233: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.5689927339553833
    2. '1' → logprob: -0.9439927339553833
    3. ' diagonal' → logprob: -3.6939926147460938
    4. 'diag' → logprob: -4.943992614746094
    5. ' ' → logprob: -5.568992614746094
    6. '[' → logprob: -5.693992614746094
    7. ' diagon' → logprob: -6.693992614746094
    8. '0' → logprob: -6.818992614746094
    9. '   ' → logprob: -7.193992614746094
    10. '  ' → logprob: -7.443992614746094

Token 234: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.02357480861246586
    2. 'on' → logprob: -3.8985748291015625
    3. 'al' → logprob: -6.5235748291015625
    4. 'nale' → logprob: -7.3985748291015625
    5. 'o' → logprob: -8.148574829101562
    6. 'onal' → logprob: -8.898574829101562
    7. 'agon' → logprob: -9.648574829101562
    8. '```' → logprob: -10.023574829101562
    9. 'e' → logprob: -10.148574829101562
    10. '   ' → logprob: -10.398574829101562

Token 235: ' principale' (ID: 68926)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9124963283538818
    2. ' sont' → logprob: -1.6624963283538818
    3. '   ' → logprob: -1.6624963283538818
    4. 'princip' → logprob: -2.662496328353882
    5. ' =' → logprob: -3.412496328353882
    6. ' ' → logprob: -3.537496328353882
    7. '=' → logprob: -3.912496328353882
    8. '[i' → logprob: -4.287496566772461
    9. 'principal' → logprob: -4.412496566772461
    10. ' principale' → logprob: -4.787496566772461

Token 236: ' valent' (ID: 148217)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.0447729155421257
    2. 's' → logprob: -3.4197728633880615
    3. ' =' → logprob: -5.794773101806641
    4. '=' → logprob: -6.044773101806641
    5. '   ' → logprob: -6.419773101806641
    6. '#' → logprob: -7.169773101806641
    7. ' ' → logprob: -7.294773101806641
    8. ' are' → logprob: -7.544773101806641
    9. '1' → logprob: -7.544773101806641
    10. 'ont' → logprob: -7.919773101806641

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.125804901123047
    4. '0' → logprob: -18.000804901123047
    5. '  ' → logprob: -18.125804901123047
    6. '```' → logprob: -18.375804901123047
    7. '
' → logprob: -18.750804901123047
    8. ' ' → logprob: -19.625804901123047
    9. '    ' → logprob: -19.625804901123047
    10. 'int' → logprob: -20.250804901123047

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.875012397766113
    4. '```' → logprob: -16.875011444091797
    5. '
' → logprob: -17.000011444091797
    6. '  ' → logprob: -18.250011444091797
    7. 'int' → logprob: -18.375011444091797
    8. '

' → logprob: -19.125011444091797
    9. '0' → logprob: -19.125011444091797
    10. '`' → logprob: -19.500011444091797

Token 239: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7075877785682678
    2. '   ' → logprob: -1.457587718963623
    3. 'y' → logprob: -1.957587718963623
    4. ' y' → logprob: -2.582587718963623
    5. ',
' → logprob: -3.457587718963623
    6. ' et' → logprob: -5.082587718963623
    7. '
' → logprob: -5.082587718963623
    8. ' ,' → logprob: -5.207587718963623
    9. ',y' → logprob: -6.207587718963623
    10. ' ' → logprob: -6.707587718963623

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23824211955070496
    2. ' et' → logprob: -2.7382421493530273
    3. ' y' → logprob: -2.8632421493530273
    4. 'y' → logprob: -3.3632421493530273
    5. 'et' → logprob: -3.7382421493530273
    6. '#' → logprob: -3.9882421493530273
    7. ',' → logprob: -4.863242149353027
    8. ' ' → logprob: -6.363242149353027
    9. ' #' → logprob: -6.988242149353027
    10. '  ' → logprob: -7.738242149353027

Token 241: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08146800845861435
    2. 'et' → logprob: -3.206468105316162
    3. '   ' → logprob: -3.581468105316162
    4. ' #' → logprob: -5.331468105316162
    5. 't' → logprob: -5.706468105316162
    6. ' et' → logprob: -7.331468105316162
    7. ' ' → logprob: -8.081467628479004
    8. '  ' → logprob: -8.331467628479004
    9. 'while' → logprob: -8.831467628479004
    10. '    ' → logprob: -9.456467628479004

Token 242: ' et' (ID: 859)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2037198692560196
    2. ' y' → logprob: -1.9537198543548584
    3. '   ' → logprob: -3.5787198543548584
    4. '#' → logprob: -5.0787200927734375
    5. 'et' → logprob: -5.2037200927734375
    6. ' et' → logprob: -6.5787200927734375
    7. ' ' → logprob: -7.8287200927734375
    8. '  ' → logprob: -8.578720092773438
    9. ' #' → logprob: -8.578720092773438
    10. 't' → logprob: -8.703720092773438

Token 243: ' tous' (ID: 10688)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25611674785614014
    2. ' ' → logprob: -1.7561167478561401
    3. ' les' → logprob: -3.6311168670654297
    4. '   ' → logprob: -4.25611686706543
    5. '  ' → logprob: -5.25611686706543
    6. 'les' → logprob: -5.38111686706543
    7. '    ' → logprob: -7.13111686706543
    8. ' tous' → logprob: -7.38111686706543
    9. 'le' → logprob: -8.25611686706543
    10. 't' → logprob: -8.63111686706543

Token 244: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.22278432548046112
    2. '   ' → logprob: -2.4727842807769775
    3. 'les' → logprob: -2.7227842807769775
    4. '    ' → logprob: -4.347784519195557
    5. ' ' → logprob: -4.722784519195557
    6. ' =' → logprob: -4.847784519195557
    7. '=' → logprob: -5.597784519195557
    8. 'x' → logprob: -5.972784519195557
    9. '0' → logprob: -6.097784519195557
    10. '  ' → logprob: -6.472784519195557

Token 245: ' autres' (ID: 18701)
  Prédit: ' autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.5271725058555603
    2. 'aut' → logprob: -0.9021725058555603
    3. '#' → logprob: -6.027172565460205
    4. 'other' → logprob: -7.402172565460205
    5. ' other' → logprob: -8.152172088623047
    6. ''autres' → logprob: -8.527172088623047
    7. '```' → logprob: -9.277172088623047
    8. 'rest' → logprob: -9.527172088623047
    9. 'élé' → logprob: -9.902172088623047
    10. ' ' → logprob: -10.027172088623047

Token 246: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.5115548968315125
    2. ' sont' → logprob: -2.0115549564361572
    3. '=' → logprob: -2.2615549564361572
    4. 'élé' → logprob: -3.0115549564361572
    5. ' =' → logprob: -3.6365549564361572
    6. 's' → logprob: -4.136554718017578
    7. ' elements' → logprob: -4.261554718017578
    8. ' les' → logprob: -4.386554718017578
    9. ' ceux' → logprob: -4.636554718017578
    10. 'elements' → logprob: -4.636554718017578

Token 247: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9656216502189636
    2. ' sont' → logprob: -1.3406217098236084
    3. ' valent' → logprob: -2.4656217098236084
    4. '=' → logprob: -2.7156217098236084
    5. ' val' → logprob: -2.7156217098236084
    6. ' vaut' → logprob: -2.8406217098236084
    7. 's' → logprob: -3.2156217098236084
    8. ' ' → logprob: -3.5906217098236084
    9. 'val' → logprob: -5.340621471405029
    10. '   ' → logprob: -5.715621471405029

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300399497151375
    2. ' ' → logprob: -3.168004035949707
    3. '   ' → logprob: -13.418004035949707
    4. '  ' → logprob: -13.918004035949707
    5. 's' → logprob: -14.168004035949707
    6. '```' → logprob: -14.793004035949707
    7. ' ' → logprob: -14.918004035949707
    8. 'n' → logprob: -15.293004035949707
    9. '    ' → logprob: -16.04300308227539
    10. ',' → logprob: -16.41800308227539

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. 'z' → logprob: -18.12537956237793
    4. '   ' → logprob: -18.50037956237793
    5. '  ' → logprob: -18.62537956237793
    6. 's' → logprob: -18.62537956237793
    7. '```' → logprob: -19.62537956237793
    8. '۰' → logprob: -19.75037956237793
    9. '000' → logprob: -20.00037956237793
    10. '00' → logprob: -20.00037956237793

Token 250: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08521360903978348
    2. 'y' → logprob: -2.8352136611938477
    3. '
' → logprob: -3.9602136611938477
    4. ' y' → logprob: -6.460213661193848
    5. '.
' → logprob: -7.085213661193848
    6. ' ' → logprob: -7.710213661193848
    7. ':
' → logprob: -8.335213661193848
    8. '	y' → logprob: -8.710213661193848
    9. '.' → logprob: -8.960213661193848
    10. '    
' → logprob: -9.210213661193848

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040428414940834045
    2. ' y' → logprob: -3.915428400039673
    3. 'y' → logprob: -4.540428638458252
    4. '
' → logprob: -4.790428638458252
    5. '    
' → logprob: -7.540428638458252
    6. '	y' → logprob: -9.415428161621094
    7. '```' → logprob: -10.915428161621094
    8. '    ' → logprob: -11.415428161621094
    9. ' ' → logprob: -11.540428161621094
    10. '  
' → logprob: -11.915428161621094

Token 252: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.4246191382408142
    2. '   ' → logprob: -1.174619197845459
    3. ' y' → logprob: -3.299619197845459
    4. ' ' → logprob: -10.2996187210083
    5. '
' → logprob: -10.4246187210083
    6. '	y' → logprob: -10.4246187210083
    7. '  ' → logprob: -10.6746187210083
    8. '    
' → logprob: -11.2996187210083
    9. '```' → logprob: -12.0496187210083
    10. '    ' → logprob: -12.4246187210083

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409364581108093
    2. '=' → logprob: -0.9740936756134033
    3. '=[[' → logprob: -12.349093437194824
    4. '=[' → logprob: -12.474093437194824
    5. ' ' → logprob: -12.849093437194824
    6. ' =[' → logprob: -13.099093437194824
    7. '  ' → logprob: -13.724093437194824
    8. '   ' → logprob: -13.974093437194824
    9. ',' → logprob: -14.849093437194824
    10. '=
' → logprob: -14.974093437194824

Token 254: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.059493180364370346
    2. ' [[' → logprob: -3.059493064880371
    3. '[
' → logprob: -4.559493064880371
    4. '[' → logprob: -8.059493064880371
    5. ' [
' → logprob: -10.059493064880371
    6. ' [' → logprob: -10.809493064880371
    7. '([[' → logprob: -16.934494018554688
    8. ' [[[' → logprob: -17.434494018554688
    9. '[['' → logprob: -18.309494018554688
    10. ' ' → logprob: -19.434494018554688

Token 255: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020723482593894005
    2. '0' → logprob: -6.502072334289551
    3. 'int' → logprob: -7.502072334289551
    4. ' ' → logprob: -11.62707233428955
    5. '(' → logprob: -12.00207233428955
    6. '(int' → logprob: -13.37707233428955
    7. ' int' → logprob: -13.87707233428955
    8. '   ' → logprob: -15.50207233428955
    9. '
' → logprob: -16.752073287963867
    10. '[int' → logprob: -16.752073287963867

Token 256: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5037883520126343
    2. ' if' → logprob: -1.0037883520126343
    3. 'if' → logprob: -3.753788471221924
    4. ']*' → logprob: -6.003788471221924
    5. '0' → logprob: -6.253788471221924
    6. ' for' → logprob: -7.253788471221924
    7. ' ' → logprob: -8.378787994384766
    8. '   ' → logprob: -8.503787994384766
    9. ' ,' → logprob: -9.253787994384766
    10. ']' → logprob: -9.378787994384766

Token 257: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9296174049377441
    2. ' if' → logprob: -1.0546174049377441
    3. ' for' → logprob: -1.8046174049377441
    4. 'if' → logprob: -2.929617404937744
    5. 'for' → logprob: -4.054617404937744
    6. ']*' → logprob: -4.304617404937744
    7. '0' → logprob: -5.179617404937744
    8. ' ' → logprob: -6.929617404937744
    9. ']' → logprob: -7.304617404937744
    10. ' ,' → logprob: -8.179616928100586

Token 258: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. '
' → logprob: -18.7500057220459
    5. '  ' → logprob: -20.1250057220459
    6. 'len' → logprob: -20.7500057220459
    7. '    ' → logprob: -20.8750057220459
    8. '

' → logprob: -21.1250057220459
    9. '```' → logprob: -21.3750057220459
    10. '9' → logprob: -21.6875057220459

Token 259: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'len' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '
' → logprob: -18.125001907348633
    6. '9' → logprob: -20.062501907348633
    7. '  ' → logprob: -20.375001907348633
    8. '```' → logprob: -20.562501907348633
    9. '

' → logprob: -20.875001907348633
    10. '4' → logprob: -21.187501907348633

Token 260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10026588290929794
    2. 'for' → logprob: -2.3502659797668457
    3. ']' → logprob: -10.600265502929688
    4. ' ' → logprob: -11.350265502929688
    5. ',' → logprob: -11.725265502929688
    6. '   ' → logprob: -12.725265502929688
    7. '	for' → logprob: -13.100265502929688
    8. ' if' → logprob: -13.225265502929688
    9. '
' → logprob: -13.725265502929688
    10. '[' → logprob: -13.725265502929688

Token 261: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002890705829486251
    2. ' _' → logprob: -6.002890586853027
    3. '_range' → logprob: -8.127890586853027
    4. ' range' → logprob: -9.377890586853027
    5. '_i' → logprob: -10.752890586853027
    6. 'range' → logprob: -12.002890586853027
    7. ' i' → logprob: -12.877890586853027
    8. ' ' → logprob: -13.002890586853027
    9. 'i' → logprob: -14.002890586853027
    10. '_j' → logprob: -14.252890586853027

Token 262: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.045493267476558685
    2. ' range' → logprob: -3.5454933643341064
    3. ' in' → logprob: -4.795493125915527
    4. 'in' → logprob: -4.920493125915527
    5. ' ' → logprob: -11.170493125915527
    6. '_range' → logprob: -11.170493125915527
    7. '_' → logprob: -11.795493125915527
    8. '0' → logprob: -12.170493125915527
    9. '[' → logprob: -12.170493125915527
    10. '(range' → logprob: -12.545493125915527

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001929228543303907
    2. ' range' → logprob: -6.25192928314209
    3. '_' → logprob: -15.50192928314209
    4. '_range' → logprob: -15.62692928314209
    5. '[' → logprob: -16.001928329467773
    6. '0' → logprob: -16.251928329467773
    7. '(range' → logprob: -17.001928329467773
    8. '	range' → logprob: -17.751928329467773
    9. '3' → logprob: -18.001928329467773
    10. '(' → logprob: -18.251928329467773

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002619318547658622
    2. '3' → logprob: -8.250262260437012
    3. ' (' → logprob: -14.750262260437012
    4. '(
' → logprob: -15.125262260437012
    5. ' ' → logprob: -19.250261306762695
    6. ']' → logprob: -20.125261306762695
    7. '(len' → logprob: -20.250261306762695
    8. '   ' → logprob: -21.000261306762695
    9. '((' → logprob: -21.062761306762695
    10. '```' → logprob: -21.125261306762695

Token 265: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -16.750003814697266
    4. ')' → logprob: -19.500003814697266
    5. '
' → logprob: -19.625003814697266
    6. '  ' → logprob: -20.125003814697266
    7. '0' → logprob: -21.125003814697266
    8. '	' → logprob: -21.250003814697266
    9. '1' → logprob: -21.375003814697266
    10. '    ' → logprob: -21.375003814697266

Token 266: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011165018193423748
    2. ')]
' → logprob: -4.511165142059326
    3. ')]

' → logprob: -9.636164665222168
    4. ')]
' → logprob: -10.011164665222168
    5. ']' → logprob: -12.636164665222168
    6. ')' → logprob: -13.261164665222168
    7. ' )' → logprob: -13.761164665222168
    8. ']
' → logprob: -16.011165618896484
    9. '')]' → logprob: -16.136165618896484
    10. ')][' → logprob: -16.136165618896484

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5909725427627563
    2. 'for' → logprob: -0.8409725427627563
    3. ' for' → logprob: -4.340972423553467
    4. '
' → logprob: -6.465972423553467
    5. 'y' → logprob: -8.590972900390625
    6. '    
' → logprob: -9.340972900390625
    7. '[' → logprob: -11.215972900390625
    8. '	for' → logprob: -11.340972900390625
    9. '```' → logprob: -11.465972900390625
    10. '  ' → logprob: -12.215972900390625

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001705246395431459
    2. '   ' → logprob: -8.750170707702637
    3. ' for' → logprob: -11.375170707702637
    4. 'i' → logprob: -14.875170707702637
    5. '	for' → logprob: -17.00016975402832
    6. '
' → logprob: -17.12516975402832
    7. '```' → logprob: -17.50016975402832
    8. '[i' → logprob: -17.87516975402832
    9. 'y' → logprob: -18.12516975402832
    10. '  ' → logprob: -19.00016975402832

Token 269: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007622245233505964
    2. 'i' → logprob: -4.882622241973877
    3. ' ' → logprob: -11.757622718811035
    4. '	i' → logprob: -11.882622718811035
    5. ' j' → logprob: -14.632622718811035
    6. ' _' → logprob: -14.757622718811035
    7. ' ' → logprob: -15.132622718811035
    8. '_' → logprob: -16.13262176513672
    9. '_i' → logprob: -16.75762176513672
    10. 'I' → logprob: -16.88262176513672

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004925735294818878
    2. 'in' → logprob: -5.379925727844238
    3. ' ' → logprob: -8.129925727844238
    4. ' i' → logprob: -12.879925727844238
    5. '_' → logprob: -13.379925727844238
    6. '  ' → logprob: -13.504925727844238
    7. '   ' → logprob: -13.754925727844238
    8. '0' → logprob: -13.754925727844238
    9. 'range' → logprob: -14.129925727844238
    10. '	in' → logprob: -14.629925727844238

Token 271: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868713080883026
    2. 'range' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.386871337890625
    4. '	range' → logprob: -17.136871337890625
    5. '3' → logprob: -18.136871337890625
    6. ' xrange' → logprob: -18.386871337890625
    7. '(range' → logprob: -18.511871337890625
    8. ' rango' → logprob: -20.386871337890625
    9. ' rang' → logprob: -20.761871337890625
    10. '_range' → logprob: -21.011871337890625

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018150994554162025
    2. '3' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.39315128326416
    4. '(
' → logprob: -14.76815128326416
    5. ' (' → logprob: -17.018150329589844
    6. '   ' → logprob: -17.768150329589844
    7. '(len' → logprob: -18.393150329589844
    8. '	' → logprob: -20.268150329589844
    9. '[' → logprob: -20.393150329589844
    10. '' → logprob: -20.518150329589844

Token 273: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. ')' → logprob: -19.375017166137695
    5. '  ' → logprob: -20.125017166137695
    6. '0' → logprob: -20.250017166137695
    7. '
' → logprob: -20.250017166137695
    8. '```' → logprob: -21.125017166137695
    9. '' → logprob: -21.375017166137695
    10. '    ' → logprob: -21.500017166137695

Token 274: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030033372342586517
    2. '):
' → logprob: -3.5300333499908447
    3. ')' → logprob: -8.280033111572266
    4. ']):' → logprob: -11.780033111572266
    5. ']:' → logprob: -12.155033111572266
    6. '3' → logprob: -12.405033111572266
    7. '):
' → logprob: -12.530033111572266
    8. ' ):' → logprob: -12.780033111572266
    9. '   ' → logprob: -13.405033111572266
    10. ':' → logprob: -13.780033111572266

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009901992045342922
    2. ' y' → logprob: -4.634902000427246
    3. 'y' → logprob: -9.009902000427246
    4. '   ' → logprob: -11.259902000427246
    5. '           ' → logprob: -13.259902000427246
    6. '	y' → logprob: -13.509902000427246
    7. '      ' → logprob: -13.759902000427246
    8. '[' → logprob: -14.134902000427246
    9. '    ' → logprob: -14.134902000427246
    10. '        
' → logprob: -14.384902000427246

Token 276: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.16115914285182953
    2. ' y' → logprob: -1.9111591577529907
    3. '       ' → logprob: -7.161159038543701
    4. '   ' → logprob: -8.91115951538086
    5. '	y' → logprob: -10.66115951538086
    6. '    ' → logprob: -16.78615951538086
    7. ' ' → logprob: -17.16115951538086
    8. '[y' → logprob: -17.78615951538086
    9. '  ' → logprob: -18.66115951538086
    10. '     ' → logprob: -18.66115951538086

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003202073508873582
    2. '[' → logprob: -5.753201961517334
    3. ' [' → logprob: -11.753202438354492
    4. '[y' → logprob: -12.003202438354492
    5. '[I' → logprob: -12.378202438354492
    6. '[j' → logprob: -12.628202438354492
    7. '][' → logprob: -13.628202438354492
    8. ')[' → logprob: -14.128202438354492
    9. '[
' → logprob: -16.003202438354492
    10. '[ii' → logprob: -16.378202438354492

Token 278: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00033069768687710166
    2. '[i' → logprob: -8.625330924987793
    3. ' ][' → logprob: -9.375330924987793
    4. ']' → logprob: -10.000330924987793
    5. '[' → logprob: -11.250330924987793
    6. '   ' → logprob: -12.375330924987793
    7. '       ' → logprob: -14.375330924987793
    8. ')[' → logprob: -14.375330924987793
    9. '[I' → logprob: -14.625330924987793
    10. '"][' → logprob: -14.875330924987793

Token 279: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.505351095460355e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -15.625075340270996
    4. ' ' → logprob: -17.75007438659668
    5. ')i' → logprob: -18.75007438659668
    6. '   ' → logprob: -18.75007438659668
    7. '
' → logprob: -19.25007438659668
    8. ']' → logprob: -19.50007438659668
    9. ')' → logprob: -19.62507438659668
    10. 'I' → logprob: -19.87507438659668

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04952433332800865
    2. '=' → logprob: -3.1745243072509766
    3. ' =' → logprob: -5.299524307250977
    4. ']=' → logprob: -6.549524307250977
    5. ' ]' → logprob: -9.674524307250977
    6. ')' → logprob: -12.174524307250977
    7. ']+=' → logprob: -12.174524307250977
    8. '<|end|>' → logprob: -12.549524307250977
    9. 's' → logprob: -13.924524307250977
    10. '1' → logprob: -14.924524307250977

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ' +=' → logprob: -17.876928329467773
    4. ' =
' → logprob: -18.001928329467773
    5. '+=' → logprob: -18.376928329467773
    6. ' ' → logprob: -18.501928329467773
    7. '=
' → logprob: -18.501928329467773
    8. '＝' → logprob: -19.626928329467773
    9. '.=' → logprob: -19.876928329467773
    10. ')' → logprob: -19.876928329467773

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.250001907348633
    4. '
' → logprob: -22.500001907348633
    5. '۱' → logprob: -23.625001907348633
    6. '１' → logprob: -23.875001907348633
    7. '```' → logprob: -23.875001907348633
    8. '  ' → logprob: -23.875001907348633
    9. '' → logprob: -24.375001907348633
    10. '0' → logprob: -24.562501907348633

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -21.375
    4. '```' → logprob: -23.375
    5. '0' → logprob: -24.0
    6. '۱' → logprob: -24.375
    7. '  ' → logprob: -24.5
    8. '１' → logprob: -24.875
    9. '
' → logprob: -24.875
    10. '' → logprob: -25.0

Token 284: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6056150794029236
    2. '   ' → logprob: -1.4806151390075684
    3. '<|end|>' → logprob: -1.6056151390075684
    4. ' 
' → logprob: -4.855615139007568
    5. '  
' → logprob: -4.855615139007568
    6. '    
' → logprob: -5.355615139007568
    7. ' ' → logprob: -6.105615139007568
    8. '<|end|>' → logprob: -6.605615139007568
    9. '  ' → logprob: -7.480615139007568
    10. '   
' → logprob: -8.23061466217041

Token 285: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1908511370420456
    2. ' 
' → logprob: -2.5658512115478516
    3. '   ' → logprob: -3.3158512115478516
    4. '<|end|>' → logprob: -4.440851211547852
    5. '  
' → logprob: -4.565851211547852
    6. 'while' → logprob: -4.690851211547852
    7. '    
' → logprob: -4.690851211547852
    8. 'for' → logprob: -5.065851211547852
    9. ' ' → logprob: -5.815851211547852
    10. '   
' → logprob: -6.315851211547852

Token 286: ' Pl' (ID: 2064)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8528136610984802
    2. '   ' → logprob: -1.602813720703125
    3. '    ' → logprob: -2.727813720703125
    4. '1' → logprob: -2.852813720703125
    5. ')' → logprob: -2.977813720703125
    6. '<|end|>' → logprob: -3.352813720703125
    7. '       ' → logprob: -3.602813720703125
    8. 'return' → logprob: -4.227813720703125
    9. '    
' → logprob: -4.227813720703125
    10. ' 
' → logprob: -4.227813720703125

Token 287: 'acer' (ID: 17263)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9570164084434509
    2. 'us' → logprob: -0.9570164084434509
    3. 'ay' → logprob: -2.5820164680480957
    4. 'ayer' → logprob: -3.0820164680480957
    5. 'ace' → logprob: -3.4570164680480957
    6. 'acement' → logprob: -4.332016468048096
    7. '#' → logprob: -4.832016468048096
    8. 'u' → logprob: -4.957016468048096
    9. 'ayers' → logprob: -4.957016468048096
    10. 'age' → logprob: -4.957016468048096

Token 288: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6816181540489197
    2. '<|end|>' → logprob: -1.0566182136535645
    3. '1' → logprob: -1.9316182136535645
    4. ' un' → logprob: -8.181617736816406
    5. '    ' → logprob: -8.556617736816406
    6. '  ' → logprob: -8.556617736816406
    7. ' a' → logprob: -8.931617736816406
    8. ' ' → logprob: -9.306617736816406
    9. '```' → logprob: -9.306617736816406
    10. 's' → logprob: -9.556617736816406

Token 289: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004104404244571924
    2. ' ' → logprob: -5.5041046142578125
    3. '<|end|>' → logprob: -11.379104614257812
    4. 'i' → logprob: -13.129104614257812
    5. ' ones' → logprob: -13.129104614257812
    6. 'ones' → logprob: -13.254104614257812
    7. 'identity' → logprob: -13.629104614257812
    8. '    ' → logprob: -13.879104614257812
    9. '```' → logprob: -14.004104614257812
    10. '  ' → logprob: -14.129104614257812

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008608423522673547
    2. ' ' → logprob: -7.125860691070557
    3. 'ones' → logprob: -11.125861167907715
    4. '   ' → logprob: -11.750861167907715
    5. 'i' → logprob: -12.500861167907715
    6. 'élé' → logprob: -12.500861167907715
    7. ' ones' → logprob: -12.625861167907715
    8. 'uns' → logprob: -12.625861167907715
    9. 'un' → logprob: -12.625861167907715
    10. '0' → logprob: -12.750861167907715

Token 291: ' uniquement' (ID: 65527)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.7890672087669373
    2. 'sur' → logprob: -1.164067268371582
    3. '<|end|>' → logprob: -1.789067268371582
    4. ' aux' → logprob: -3.539067268371582
    5. ' dans' → logprob: -4.789067268371582
    6. ' ' → logprob: -4.789067268371582
    7. 'dans' → logprob: -5.539067268371582
    8. '[i' → logprob: -5.539067268371582
    9. 's' → logprob: -5.914067268371582
    10. ' à' → logprob: -6.539067268371582

Token 293: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5074978470802307
    2. 'la' → logprob: -1.632497787475586
    3. 'i' → logprob: -2.132497787475586
    4. 'range' → logprob: -3.507497787475586
    5. ' i' → logprob: -3.757497787475586
    6. 'di' → logprob: -4.257497787475586
    7. 'l' → logprob: -5.257497787475586
    8. 'the' → logprob: -5.257497787475586
    9. ' range' → logprob: -6.507497787475586
    10. '<|end|>' → logprob: -6.882497787475586

Token 294: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.31924161314964294
    2. 'i' → logprob: -2.194241523742676
    3. ' diagonal' → logprob: -2.194241523742676
    4. 'diag' → logprob: -3.694241523742676
    5. ' i' → logprob: -4.444241523742676
    6. ' diagon' → logprob: -4.444241523742676
    7. '[i' → logprob: -7.694241523742676
    8. ' diag' → logprob: -7.694241523742676
    9. 'range' → logprob: -7.819241523742676
    10. '   ' → logprob: -8.819241523742676

Token 295: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0006417844560928643
    2. 'al' → logprob: -8.375641822814941
    3. 'nale' → logprob: -8.625641822814941
    4. 'g' → logprob: -9.500641822814941
    5. 'on' → logprob: -10.125641822814941
    6. 'agon' → logprob: -10.750641822814941
    7. 'le' → logprob: -10.875641822814941
    8. 'e' → logprob: -11.125641822814941
    9. 'ag' → logprob: -12.125641822814941
    10. 'vale' → logprob: -12.375641822814941

Token 296: ' principale' (ID: 68926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05306825041770935
    2. '<|end|>' → logprob: -3.553068161010742
    3. '
' → logprob: -5.053068161010742
    4. ' ' → logprob: -5.178068161010742
    5. '    
' → logprob: -5.928068161010742
    6. '  ' → logprob: -6.303068161010742
    7. '  
' → logprob: -6.553068161010742
    8. ' 
' → logprob: -6.928068161010742
    9. ' while' → logprob: -7.053068161010742
    10. ',' → logprob: -7.428068161010742

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08739559352397919
    2. ' while' → logprob: -2.962395668029785
    3. 'while' → logprob: -3.587395668029785
    4. '    
' → logprob: -6.087395668029785
    5. '
' → logprob: -7.837395668029785
    6. ' ' → logprob: -8.212395668029785
    7. ' 
' → logprob: -8.337395668029785
    8. '  ' → logprob: -8.337395668029785
    9. '	while' → logprob: -8.712395668029785
    10. '  
' → logprob: -8.837395668029785

Token 299: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12141578644514084
    2. ' while' → logprob: -2.746415853500366
    3. '   ' → logprob: -2.996415853500366
    4. '	while' → logprob: -8.996416091918945
    5. '    
' → logprob: -10.746416091918945
    6. 'i' → logprob: -10.871416091918945
    7. 'for' → logprob: -11.246416091918945
    8. ' ' → logprob: -11.496416091918945
    9. '  ' → logprob: -11.746416091918945
    10. 'w' → logprob: -12.746416091918945

Token 300: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05598653107881546
    2. ' while' → logprob: -2.9309866428375244
    3. '   ' → logprob: -7.430986404418945
    4. 'for' → logprob: -7.930986404418945
    5. 'def' → logprob: -9.805986404418945
    6. 'i' → logprob: -9.805986404418945
    7. ' for' → logprob: -11.555986404418945
    8. ' i' → logprob: -11.805986404418945
    9. 'result' → logprob: -11.805986404418945
    10. 'w' → logprob: -13.055986404418945

Token 301: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0007357738213613629
    2. 'c' → logprob: -7.250735759735107
    3. '   ' → logprob: -11.375736236572266
    4. 'cl' → logprob: -12.000736236572266
    5. 'cler' → logprob: -12.375736236572266
    6. 'clé' → logprob: -13.125736236572266
    7. 'cles' → logprob: -14.000736236572266
    8. ' cle' → logprob: -15.250736236572266
    9. '  ' → logprob: -15.750736236572266
    10. 't' → logprob: -16.000736236572266

Token 302: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010670117102563381
    2. ' while' → logprob: -4.635670185089111
    3. ' for' → logprob: -7.885670185089111
    4. '    ' → logprob: -8.260669708251953
    5. 'while' → logprob: -9.010669708251953
    6. '	while' → logprob: -10.260669708251953
    7. ' ' → logprob: -10.635669708251953
    8. ':' → logprob: -11.135669708251953
    9. ',' → logprob: -11.260669708251953
    10. '  ' → logprob: -11.385669708251953

Token 303: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015354069881141186
    2. ' while' → logprob: -5.015354156494141
    3. ' for' → logprob: -5.015354156494141
    4. 'while' → logprob: -6.515354156494141
    5. 'for' → logprob: -8.76535415649414
    6. '  ' → logprob: -9.64035415649414
    7. '    
' → logprob: -9.64035415649414
    8. '	while' → logprob: -10.01535415649414
    9. '    ' → logprob: -10.14035415649414
    10. ',' → logprob: -10.51535415649414

Token 304: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4627390205860138
    2. ' while' → logprob: -1.9627389907836914
    3. '   ' → logprob: -2.8377389907836914
    4. ' for' → logprob: -2.8377389907836914
    5. 'for' → logprob: -3.7127389907836914
    6. 'ans' → logprob: -4.212738990783691
    7. 'ef' → logprob: -4.462738990783691
    8. 'while' → logprob: -4.712738990783691
    9. ' range' → logprob: -4.712738990783691
    10. 'es' → logprob: -4.837738990783691

Token 305: 'ponent' (ID: 1758)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31158825755119324
    2. 'ponent' → logprob: -1.6865882873535156
    3. 'pon' → logprob: -2.6865882873535156
    4. 'écution' → logprob: -4.311588287353516
    5. 'po' → logprob: -8.061588287353516
    6. 'pos' → logprob: -8.311588287353516
    7. 'ecution' → logprob: -9.561588287353516
    8. 'ponential' → logprob: -10.061588287353516
    9. 'pt' → logprob: -10.311588287353516
    10. 't' → logprob: -10.561588287353516

Token 306: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.0011365237878635526
    2. '   ' → logprob: -7.126136302947998
    3. 'ation' → logprob: -9.251136779785156
    4. '       ' → logprob: -9.626136779785156
    5. 'i' → logprob: -9.751136779785156
    6. 'ion' → logprob: -11.001136779785156
    7. 'ponent' → logprob: -11.126136779785156
    8. ' i' → logprob: -11.251136779785156
    9. ' ' → logprob: -11.501136779785156
    10. ' for' → logprob: -11.876136779785156

Token 307: ' rapide' (ID: 44887)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002215084619820118
    2. ':' → logprob: -6.7522149085998535
    3. '    
' → logprob: -8.627215385437012
    4. ' :' → logprob: -8.752215385437012
    5. '  ' → logprob: -9.002215385437012
    6. ' while' → logprob: -9.127215385437012
    7. '    ' → logprob: -9.127215385437012
    8. '
' → logprob: -9.627215385437012
    9. ' for' → logprob: -9.752215385437012
    10. ' ' → logprob: -10.127215385437012

Token 308: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07429620623588562
    2. '
' → logprob: -2.949296236038208
    3. ':' → logprob: -5.074295997619629
    4. '    
' → logprob: -5.074295997619629
    5. '  
' → logprob: -5.949295997619629
    6. ' while' → logprob: -6.949295997619629
    7. '   
' → logprob: -7.199295997619629
    8. ' 
' → logprob: -7.449295997619629
    9. 'while' → logprob: -8.324295997619629
    10. '    ' → logprob: -8.324295997619629

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14846117794513702
    2. ' while' → logprob: -2.023461103439331
    3. 'while' → logprob: -5.77346134185791
    4. '    ' → logprob: -6.89846134185791
    5. ' 
' → logprob: -7.27346134185791
    6. '    
' → logprob: -7.39846134185791
    7. '
' → logprob: -9.14846134185791
    8. '	while' → logprob: -9.27346134185791
    9. ' ' → logprob: -9.89846134185791
    10. '  ' → logprob: -10.77346134185791

Token 310: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4927409887313843
    2. 'while' → logprob: -0.9927409887313843
    3. '   ' → logprob: -3.992741107940674
    4. '	while' → logprob: -10.867740631103516
    5. '    
' → logprob: -11.492740631103516
    6. '    ' → logprob: -11.992740631103516
    7. '  ' → logprob: -13.117740631103516
    8. ' ' → logprob: -13.492740631103516
    9. ' 
' → logprob: -13.617740631103516
    10. '
' → logprob: -14.367740631103516

Token 311: ' tant' (ID: 16235)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3181951642036438
    2. ' while' → logprob: -1.318195104598999
    3. '   ' → logprob: -5.318195343017578
    4. '	while' → logprob: -11.193195343017578
    5. '    
' → logprob: -13.193195343017578
    6. '    ' → logprob: -13.443195343017578
    7. '  ' → logprob: -14.318195343017578
    8. ' ' → logprob: -14.318195343017578
    9. 'for' → logprob: -14.818195343017578
    10. ' 
' → logprob: -15.068195343017578

Token 312: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.00045021495316177607
    2. '   ' → logprob: -8.375450134277344
    3. ' n' → logprob: -9.250450134277344
    4. 'que' → logprob: -10.000450134277344
    5. ' qu' → logprob: -10.625450134277344
    6. ' while' → logprob: -11.125450134277344
    7. ' not' → logprob: -11.500450134277344
    8. ' (' → logprob: -12.125450134277344
    9. ' ' → logprob: -12.500450134277344
    10. 'n' → logprob: -12.625450134277344

Token 313: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2811562120914459
    2. 'n' → logprob: -1.4061561822891235
    3. '(n' → logprob: -13.031156539916992
    4. '	n' → logprob: -13.281156539916992
    5. ' ' → logprob: -13.781156539916992
    6. '   ' → logprob: -14.281156539916992
    7. ' ' → logprob: -16.406156539916992
    8. ' (' → logprob: -16.406156539916992
    9. '_n' → logprob: -16.531156539916992
    10. '  ' → logprob: -17.031156539916992

Token 314: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03806031122803688
    2. '>' → logprob: -3.288060426712036
    3. ':' → logprob: -11.288060188293457
    4. ' ' → logprob: -13.038060188293457
    5. ' ' → logprob: -13.288060188293457
    6. ' !=' → logprob: -14.163060188293457
    7. ' :' → logprob: -14.413060188293457
    8. ' >
' → logprob: -14.663060188293457
    9. '   ' → logprob: -15.288060188293457
    10. '  ' → logprob: -16.288061141967773

Token 315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38692691922187805
    2. ' ' → logprob: -1.1369268894195557
    3. '>' → logprob: -9.886926651000977
    4. ' ' → logprob: -13.511926651000977
    5. ' >' → logprob: -13.636926651000977
    6. '1' → logprob: -14.011926651000977
    7. '  ' → logprob: -14.136926651000977
    8. '=' → logprob: -15.511926651000977
    9. '   ' → logprob: -15.761926651000977
    10. '    ' → logprob: -16.136926651000977

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '>' → logprob: -16.129619598388672
    4. '  ' → logprob: -16.254619598388672
    5. '   ' → logprob: -17.754619598388672
    6. '    ' → logprob: -18.379619598388672
    7. '1' → logprob: -18.629619598388672
    8. '

' → logprob: -18.629619598388672
    9. '
' → logprob: -18.879619598388672
    10. ' >' → logprob: -19.004619598388672

Token 317: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2670486271381378
    2. '   ' → logprob: -1.6420485973358154
    3. ':
' → logprob: -3.3920485973358154
    4. ',' → logprob: -5.3920488357543945
    5. '
' → logprob: -7.3920488357543945
    6. ' :' → logprob: -7.5170488357543945
    7. ',
' → logprob: -8.017048835754395
    8. ' :
' → logprob: -8.142048835754395
    9. '       ' → logprob: -8.517048835754395
    10. '    
' → logprob: -8.767048835754395

Token 318: 'c' (ID: 66)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17637501657009125
    2. ' n' → logprob: -3.051374912261963
    3. 'n' → logprob: -3.301374912261963
    4. ':' → logprob: -3.551374912261963
    5. ')' → logprob: -3.801374912261963
    6. '):
' → logprob: -4.801374912261963
    7. '):' → logprob: -5.551374912261963
    8. ' :' → logprob: -6.176374912261963
    9. ' )' → logprob: -6.301374912261963
    10. ':
' → logprob: -6.301374912261963

Token 319: ''est' (ID: 6616)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.36789172887802124
    2. ' >' → logprob: -2.242891788482666
    3. '   ' → logprob: -3.242891788482666
    4. 'u' → logprob: -3.492891788482666
    5. 'e' → logprob: -3.492891788482666
    6. '#' → logprob: -3.992891788482666
    7. ''est' → logprob: -4.367891788482666
    8. ' ' → logprob: -4.492891788482666
    9. 'ur' → logprob: -4.492891788482666
    10. ':' → logprob: -4.867891788482666

Token 320: '-à' (ID: 56297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6577159762382507
    2. ' n' → logprob: -1.5327160358428955
    3. 'n' → logprob: -1.7827160358428955
    4. ' >' → logprob: -2.9077160358428955
    5. '>' → logprob: -3.6577160358428955
    6. ' ' → logprob: -4.657715797424316
    7. '   ' → logprob: -5.532715797424316
    8. 'not' → logprob: -6.157715797424316
    9. ')' → logprob: -7.782715797424316
    10. '    ' → logprob: -7.907715797424316

Token 321: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5886382460594177
    2. 'n' → logprob: -1.2136383056640625
    3. '>' → logprob: -2.8386383056640625
    4. '0' → logprob: -3.2136383056640625
    5. ' ' → logprob: -4.5886383056640625
    6. '   ' → logprob: -4.7136383056640625
    7. ' n' → logprob: -4.8386383056640625
    8. ' True' → logprob: -5.0886383056640625
    9. 'x' → logprob: -5.3386383056640625
    10. ' not' → logprob: -5.5886383056640625

Token 322: ' que' (ID: 661)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15053944289684296
    2. 'n' → logprob: -2.0255393981933594
    3. '   ' → logprob: -5.650539398193359
    4. ' not' → logprob: -6.775539398193359
    5. ' )' → logprob: -6.900539398193359
    6. ')' → logprob: -7.525539398193359
    7. '    ' → logprob: -7.900539398193359
    8. ' ' → logprob: -7.900539398193359
    9. '>' → logprob: -8.27553939819336
    10. ' ):' → logprob: -8.77553939819336

Token 323: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25195372104644775
    2. 'n' → logprob: -1.5019537210464478
    3. '   ' → logprob: -11.626954078674316
    4. ' ' → logprob: -11.751954078674316
    5. '	n' → logprob: -12.626954078674316
    6. '    ' → logprob: -13.376954078674316
    7. '(n' → logprob: -13.626954078674316
    8. ' ' → logprob: -14.751954078674316
    9. '  ' → logprob: -15.251954078674316
    10. ' not' → logprob: -15.501954078674316

Token 324: ''on' (ID: 25812)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012573933228850365
    2. 'n' → logprob: -4.387573719024658
    3. ' ' → logprob: -10.512574195861816
    4. ' not' → logprob: -11.387574195861816
    5. '>' → logprob: -11.887574195861816
    6. ' x' → logprob: -12.262574195861816
    7. '	n' → logprob: -12.512574195861816
    8. ' ' → logprob: -13.012574195861816
    9. ' >' → logprob: -13.137574195861816
    10. '   ' → logprob: -13.762574195861816

Token 325: ' n' (ID: 297)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17118723690509796
    2. '>' → logprob: -2.046187162399292
    3. ' n' → logprob: -4.296187400817871
    4. ':' → logprob: -5.546187400817871
    5. '   ' → logprob: -5.546187400817871
    6. ' !=' → logprob: -5.546187400817871
    7. 'n' → logprob: -6.421187400817871
    8. ')' → logprob: -8.171187400817871
    9. ' ' → logprob: -8.296187400817871
    10. '!=' → logprob: -8.421187400817871

Token 326: ''a' (ID: 10443)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06002667546272278
    2. '>' → logprob: -2.9350266456604004
    3. ' !=' → logprob: -6.8100266456604
    4. '   ' → logprob: -6.8100266456604
    5. ' ' → logprob: -6.9350266456604
    6. ' while' → logprob: -7.4350266456604
    7. ')' → logprob: -7.4350266456604
    8. ' ' → logprob: -8.310027122497559
    9. ' )' → logprob: -9.310027122497559
    10. 'while' → logprob: -9.560027122497559

Token 327: ' pas' (ID: 2173)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.340459942817688
    2. '>' → logprob: -1.340459942817688
    3. ' ' → logprob: -4.090459823608398
    4. ' not' → logprob: -5.215459823608398
    5. ')' → logprob: -5.840459823608398
    6. '   ' → logprob: -7.465459823608398
    7. ':' → logprob: -8.715459823608398
    8. '  ' → logprob: -8.840459823608398
    9. ' )' → logprob: -9.090459823608398
    10. ' pas' → logprob: -9.340459823608398

Token 328: ' consomm' (ID: 45779)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.3433011770248413
    2. '>' → logprob: -1.5933011770248413
    3. '=' → logprob: -1.7183011770248413
    4. ' ' → logprob: -2.093301296234131
    5. '0' → logprob: -2.593301296234131
    6. ' ==' → logprob: -2.968301296234131
    7. '   ' → logprob: -3.718301296234131
    8. '==' → logprob: -3.718301296234131
    9. 'n' → logprob: -3.843301296234131
    10. ' n' → logprob: -3.968301296234131

Token 329: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006137822289019823
    2. 'e' → logprob: -5.131137847900391
    3. 'ed' → logprob: -8.88113784790039
    4. ' ' → logprob: -11.00613784790039
    5. 'ée' → logprob: -11.25613784790039
    6. 'er' → logprob: -11.75613784790039
    7. '=' → logprob: -12.00613784790039
    8. 'u' → logprob: -12.63113784790039
    9. '>' → logprob: -12.63113784790039
    10. ')' → logprob: -12.75613784790039

Token 330: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23276731371879578
    2. ' >' → logprob: -2.482767343521118
    3. '1' → logprob: -2.982767343521118
    4. ' n' → logprob: -3.357767343521118
    5. '>' → logprob: -4.732767105102539
    6. '   ' → logprob: -4.857767105102539
    7. 'n' → logprob: -5.232767105102539
    8. ':' → logprob: -5.357767105102539
    9. ')' → logprob: -5.732767105102539
    10. ' )' → logprob: -6.357767105102539

Token 331: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3773435652256012
    2. ' ' → logprob: -1.2523435354232788
    3. 'n' → logprob: -3.8773436546325684
    4. '  ' → logprob: -6.252343654632568
    5. ' (' → logprob: -6.502343654632568
    6. ')' → logprob: -7.127343654632568
    7. ' )' → logprob: -7.127343654632568
    8. ' x' → logprob: -7.377343654632568
    9. '(n' → logprob: -7.877343654632568
    10. ' >' → logprob: -8.12734317779541

Token 332: ' bits' (ID: 18189)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6086733937263489
    2. ' ' → logprob: -0.9836733937263489
    3. 'n' → logprob: -2.983673334121704
    4. '   ' → logprob: -4.483673572540283
    5. ' bits' → logprob: -5.108673572540283
    6. '  ' → logprob: -5.733673572540283
    7. ':' → logprob: -6.108673572540283
    8. ' :' → logprob: -6.483673572540283
    9. ' tokens' → logprob: -6.608673572540283
    10. '>' → logprob: -7.483673572540283

Token 333: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1240965127944946
    2. ' de' → logprob: -1.2490965127944946
    3. ' >' → logprob: -2.124096393585205
    4. ':' → logprob: -2.374096393585205
    5. ' of' → logprob: -2.874096393585205
    6. '>' → logprob: -2.999096393585205
    7. ' ' → logprob: -3.499096393585205
    8. ' :' → logprob: -4.749096393585205
    9. 'de' → logprob: -5.249096393585205
    10. '    ' → logprob: -5.499096393585205

Token 334: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6932340264320374
    2. ' n' → logprob: -0.6932340264320374
    3. ' ' → logprob: -9.56823444366455
    4. '   ' → logprob: -11.81823444366455
    5. '	n' → logprob: -12.81823444366455
    6. ' ' → logprob: -13.31823444366455
    7. ')' → logprob: -13.69323444366455
    8. '(n' → logprob: -14.19323444366455
    9. '  ' → logprob: -14.81823444366455
    10. ')n' → logprob: -14.81823444366455

Token 335: ''ex' (ID: 23472)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4779152274131775
    2. ' n' → logprob: -0.9779152274131775
    3. ' ' → logprob: -5.602915287017822
    4. '   ' → logprob: -9.602914810180664
    5. '  ' → logprob: -11.102914810180664
    6. '_n' → logprob: -11.977914810180664
    7. ' space' → logprob: -12.102914810180664
    8. '    ' → logprob: -12.227914810180664
    9. ' ' → logprob: -12.352914810180664
    10. '	n' → logprob: -12.352914810180664

Token 336: 'pos' (ID: 1103)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.017191199585795403
    2. '   ' → logprob: -4.642191410064697
    3. 'n' → logprob: -6.392191410064697
    4. 'p' → logprob: -6.517191410064697
    5. 'if' → logprob: -7.267191410064697
    6. '-' → logprob: -7.392191410064697
    7. ' n' → logprob: -7.642191410064697
    8. ' ' → logprob: -8.017190933227539
    9. '_' → logprob: -8.267190933227539
    10. ' if' → logprob: -8.267190933227539

Token 337: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.43968722224235535
    2. ')' → logprob: -2.4396872520446777
    3. 'ponent' → logprob: -2.4396872520446777
    4. 'e' → logprob: -2.5646872520446777
    5. '   ' → logprob: -4.064687252044678
    6. 'ent' → logprob: -4.314687252044678
    7. ' )' → logprob: -4.439687252044678
    8. ' e' → logprob: -4.689687252044678
    9. 'itant' → logprob: -4.939687252044678
    10. ',' → logprob: -5.439687252044678

Token 338: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4924280643463135
    2. ')' → logprob: -1.7424280643463135
    3. '):
' → logprob: -2.2424280643463135
    4. '   ' → logprob: -2.3674280643463135
    5. ':' → logprob: -5.367427825927734
    6. ' ):' → logprob: -5.867427825927734
    7. ' )' → logprob: -6.367427825927734
    8. ' ):
' → logprob: -6.492427825927734
    9. '),' → logprob: -7.117427825927734
    10. '       ' → logprob: -7.242427825927734

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11548326909542084
    2. ':' → logprob: -2.240483283996582
    3. ':
' → logprob: -6.740483283996582
    4. ' :' → logprob: -7.740483283996582
    5. '       ' → logprob: -7.990483283996582
    6. '    
' → logprob: -8.490483283996582
    7. ',' → logprob: -8.865483283996582
    8. '    ' → logprob: -9.865483283996582
    9. ' 
' → logprob: -10.115483283996582
    10. ' :
' → logprob: -10.115483283996582

Token 340: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005984609015285969
    2. ' while' → logprob: -6.005984783172607
    3. '    
' → logprob: -6.630984783172607
    4. '
' → logprob: -6.880984783172607
    5. 'while' (adapté à ' while') → logprob: -8.13098430633545
    6. ' 
' → logprob: -8.25598430633545
    7. '  
' → logprob: -8.50598430633545
    8. ':' → logprob: -8.88098430633545
    9. '   
' → logprob: -9.50598430633545
    10. '	while' → logprob: -9.75598430633545

Token 341: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004620949272066355
    2. 'n' → logprob: -5.3796210289001465
    3. '	n' → logprob: -15.129620552062988
    4. '(n' → logprob: -15.254620552062988
    5. ' ' → logprob: -16.129621505737305
    6. ' (' → logprob: -16.754621505737305
    7. ' ' → logprob: -17.379621505737305
    8. '_n' → logprob: -18.504621505737305
    9. '(' → logprob: -19.004621505737305
    10. ' н' → logprob: -19.879621505737305

Token 342: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5761089324951172
    2. '>' → logprob: -0.8261089324951172
    3. ':' → logprob: -8.701108932495117
    4. ' ' → logprob: -14.076108932495117
    5. '&gt' → logprob: -14.576108932495117
    6. ')' → logprob: -14.826108932495117
    7. ' :' → logprob: -14.951108932495117
    8. ' ' → logprob: -15.326108932495117
    9. ')>' → logprob: -15.826108932495117
    10. '">' → logprob: -15.826108932495117

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029753848910331726
    2. ' ' → logprob: -3.5297539234161377
    3. '   ' → logprob: -13.279753684997559
    4. '=' → logprob: -14.404753684997559
    5. '    ' → logprob: -14.404753684997559
    6. '1' → logprob: -15.779753684997559
    7. ' ' → logprob: -16.529754638671875
    8. '  ' → logprob: -16.654754638671875
    9. '>' → logprob: -16.654754638671875
    10. '       ' → logprob: -16.842254638671875

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.12510871887207
    4. '۰' → logprob: -19.25010871887207
    5. '>' → logprob: -20.12510871887207
    6. '=' → logprob: -20.18760871887207
    7. '  ' → logprob: -20.18760871887207
    8. '1' → logprob: -20.31260871887207
    9. '    ' → logprob: -20.31260871887207
    10. '00' → logprob: -20.75010871887207

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034096548333764076
    2. ':
' → logprob: -5.8784098625183105
    3. ' :' → logprob: -7.6284098625183105
    4. '   ' → logprob: -9.753409385681152
    5. ',' → logprob: -10.628409385681152
    6. ' :
' → logprob: -10.753409385681152
    7. '       ' → logprob: -11.878409385681152
    8. '):' → logprob: -12.753409385681152
    9. '<|end|>' → logprob: -13.753409385681152
    10. '=' → logprob: -14.753409385681152

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019993774592876434
    2. ' if' → logprob: -4.269993782043457
    3. 'if' → logprob: -5.394993782043457
    4. '   ' → logprob: -7.144993782043457
    5. '    ' → logprob: -8.394993782043457
    6. '        
' → logprob: -9.769993782043457
    7. '      ' → logprob: -9.769993782043457
    8. ':' → logprob: -10.644993782043457
    9. '     ' → logprob: -10.894993782043457
    10. '	' → logprob: -11.019993782043457

Token 347: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5771289467811584
    2. 'if' → logprob: -0.8271289467811584
    3. '       ' → logprob: -6.952128887176514
    4. '   ' → logprob: -8.452129364013672
    5. '    ' → logprob: -11.452129364013672
    6. '	if' → logprob: -12.327129364013672
    7. ' ' → logprob: -14.077129364013672
    8. '        ' → logprob: -14.827129364013672
    9. '  ' → logprob: -14.827129364013672
    10. '        
' → logprob: -14.827129364013672

Token 348: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005264237988740206
    2. ' if' → logprob: -5.2552642822265625
    3. '   ' → logprob: -10.505264282226562
    4. '       ' → logprob: -12.880264282226562
    5. '	if' → logprob: -15.130264282226562
    6. '    ' → logprob: -15.630264282226562
    7. '
' → logprob: -17.255264282226562
    8. ' ' → logprob: -17.380264282226562
    9. '  ' → logprob: -17.755264282226562
    10. '           ' → logprob: -18.130264282226562

Token 349: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02265806496143341
    2. ' if' → logprob: -4.022657871246338
    3. 'ifie' → logprob: -5.647657871246338
    4. 'ifiez' → logprob: -7.397657871246338
    5. 'ifier' → logprob: -9.022658348083496
    6. 'er' → logprob: -9.147658348083496
    7. '   ' → logprob: -9.772658348083496
    8. 'ify' → logprob: -10.397658348083496
    9. 'ifi' → logprob: -10.772658348083496
    10. 'ification' → logprob: -12.147658348083496

Token 350: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11277586966753006
    2. ' n' → logprob: -2.4877758026123047
    3. 'if' → logprob: -4.112775802612305
    4. '(n' → logprob: -5.112775802612305
    5. 'n' → logprob: -7.362775802612305
    6. ' (' → logprob: -7.612775802612305
    7. '   ' → logprob: -11.112775802612305
    8. '       ' → logprob: -11.487775802612305
    9. '    ' → logprob: -12.112775802612305
    10. '	if' → logprob: -12.862775802612305

Token 351: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016049619764089584
    2. 'n' → logprob: -4.141049385070801
    3. ' (' → logprob: -11.7660493850708
    4. '(n' → logprob: -12.2660493850708
    5. ' ' → logprob: -13.0160493850708
    6. '	n' → logprob: -14.7660493850708
    7. '   ' → logprob: -15.5160493850708
    8. '(' → logprob: -16.266050338745117
    9. ' ' → logprob: -17.141050338745117
    10. '_n' → logprob: -18.766050338745117

Token 352: ' bit' (ID: 3546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018154505640268326
    2. ' n' → logprob: -4.018154621124268
    3. '(n' → logprob: -12.64315414428711
    4. '	n' → logprob: -14.01815414428711
    5. ' (' → logprob: -14.89315414428711
    6. '   ' → logprob: -15.51815414428711
    7. ' ' → logprob: -17.26815414428711
    8. '_n' → logprob: -17.64315414428711
    9. 'N' → logprob: -18.01815414428711
    10. '```' → logprob: -18.39315414428711

Token 353: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.019201690331101418
    2. 'n' → logprob: -4.269201755523682
    3. ' (' → logprob: -6.269201755523682
    4. '&' → logprob: -6.769201755523682
    5. ' &' → logprob: -6.769201755523682
    6. '1' → logprob: -8.144201278686523
    7. ' ' → logprob: -8.394201278686523
    8. '(n' → logprob: -8.769201278686523
    9. '   ' → logprob: -9.019201278686523
    10. '	n' → logprob: -11.269201278686523

Token 354: ' poids' (ID: 56058)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008503671269863844
    2. ' n' → logprob: -7.250850200653076
    3. ' ' → logprob: -9.250850677490234
    4. 'l' → logprob: -10.375850677490234
    5. '1' → logprob: -12.750850677490234
    6. '	n' → logprob: -13.250850677490234
    7. ' l' → logprob: -13.375850677490234
    8. '(n' → logprob: -13.875850677490234
    9. 'la' → logprob: -14.000850677490234
    10. '  ' → logprob: -14.750850677490234

Token 355: ' faible' (ID: 75786)
  Prédit: ' faible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.06672705709934235
    2. ' fort' → logprob: -3.0667271614074707
    3. 'fa' → logprob: -4.941727161407471
    4. 'fort' → logprob: -6.066727161407471
    5. '   ' → logprob: -6.191727161407471
    6. ' ' → logprob: -6.316727161407471
    7. ' le' → logprob: -6.316727161407471
    8. 'le' → logprob: -7.066727161407471
    9. '1' → logprob: -8.316726684570312
    10. ' faibles' → logprob: -8.316726684570312

Token 356: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.19843515753746033
    2. ' &' → logprob: -2.073435068130493
    3. '&' → logprob: -4.073435306549072
    4. 'n' → logprob: -4.573435306549072
    5. ' (' → logprob: -4.573435306549072
    6. '1' → logprob: -5.073435306549072
    7. ' ' → logprob: -5.573435306549072
    8. '(n' → logprob: -5.698435306549072
    9. ' de' → logprob: -6.823435306549072
    10. '   ' → logprob: -7.448435306549072

Token 357: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002476724097505212
    2. ' n' → logprob: -6.002476692199707
    3. '(n' → logprob: -14.127476692199707
    4. '	n' → logprob: -15.252476692199707
    5. ')n' → logprob: -18.627477645874023
    6. ' ' → logprob: -18.877477645874023
    7. '_n' → logprob: -19.002477645874023
    8. 'l' → logprob: -19.127477645874023
    9. '   ' → logprob: -19.252477645874023
    10. 'y' → logprob: -19.377477645874023

Token 358: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.03827947750687599
    2. '&' → logprob: -3.2882795333862305
    3. ' ' → logprob: -8.91327953338623
    4. ' &
' → logprob: -10.53827953338623
    5. ' ' → logprob: -10.66327953338623
    6. '%' → logprob: -11.28827953338623
    7. '   ' → logprob: -11.41327953338623
    8. ' %' → logprob: -11.78827953338623
    9. '1' → logprob: -11.91327953338623
    10. '&
' → logprob: -12.28827953338623

Token 359: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046210684813559055
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.379621505737305
    4. 'n' → logprob: -16.379621505737305
    5. 'set' → logprob: -17.379621505737305
    6. ' ' → logprob: -17.629621505737305
    7. '```' → logprob: -17.879621505737305
    8. 'd' → logprob: -18.004621505737305
    9. 'on' → logprob: -18.129621505737305
    10. 'y' → logprob: -18.129621505737305

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008624739944934845
    2. ' ' → logprob: -4.75862455368042
    3. '```' → logprob: -12.383625030517578
    4. 'l' → logprob: -12.758625030517578
    5. '   ' → logprob: -13.508625030517578
    6. 'n' → logprob: -15.008625030517578
    7. '
' → logprob: -15.008625030517578
    8. ' ' → logprob: -15.383625030517578
    9. 'un' → logprob: -15.633625030517578
    10. '`' → logprob: -15.758625030517578

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.625085830688477
    4. '```' → logprob: -17.750085830688477
    5. 'l' → logprob: -18.000085830688477
    6. 'n' → logprob: -18.500085830688477
    7. 'y' → logprob: -18.875085830688477
    8. '0' → logprob: -19.000085830688477
    9. '
' → logprob: -19.250085830688477
    10. '#' → logprob: -19.250085830688477

Token 362: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04293273389339447
    2. ' :' → logprob: -3.9179327487945557
    3. ':
' → logprob: -4.792932510375977
    4. '       ' → logprob: -4.792932510375977
    5. ' if' → logprob: -6.167932510375977
    6. '   ' → logprob: -6.417932510375977
    7. ' :
' → logprob: -7.042932510375977
    8. 'if' → logprob: -7.292932510375977
    9. ',' → logprob: -8.917932510375977
    10. '=' → logprob: -10.292932510375977

Token 363: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06198863685131073
    2. 'n' → logprob: -2.811988592147827
    3. '(n' → logprob: -11.811988830566406
    4. ' (' → logprob: -12.561988830566406
    5. '   ' → logprob: -12.561988830566406
    6. ')' → logprob: -12.686988830566406
    7. ')n' → logprob: -13.811988830566406
    8. '	n' → logprob: -14.311988830566406
    9. ' if' → logprob: -14.436988830566406
    10. ' )' → logprob: -14.436988830566406

Token 364: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2812677025794983
    2. '&' → logprob: -1.4062676429748535
    3. '%' → logprob: -9.781268119812012
    4. ' %' → logprob: -10.281268119812012
    5. ' ' → logprob: -11.406268119812012
    6. ' &
' → logprob: -11.781268119812012
    7. '&
' → logprob: -12.031268119812012
    8. ' ' → logprob: -14.281268119812012
    9. '&nbsp' → logprob: -15.156268119812012
    10. '&A' → logprob: -15.406268119812012

Token 365: ' impair' (ID: 64113)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.19543270766735077
    2. 'odd' → logprob: -1.9454326629638672
    3. ' ' → logprob: -4.445432662963867
    4. '1' → logprob: -4.820432662963867
    5. '%' → logprob: -5.195432662963867
    6. ' impair' → logprob: -5.195432662963867
    7. ' pair' → logprob: -7.070432662963867
    8. 'od' → logprob: -7.195432662963867
    9. 'n' → logprob: -7.945432662963867
    10. 'pair' → logprob: -8.570432662963867

Token 366: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12677563726902008
    2. ':' → logprob: -2.3767757415771484
    3. ')' → logprob: -4.126775741577148
    4. '):
' → logprob: -5.001775741577148
    5. '       ' → logprob: -6.626775741577148
    6. ' ):' → logprob: -7.126775741577148
    7. ' :' → logprob: -7.376775741577148
    8. ' and' → logprob: -8.001775741577148
    9. ' )' → logprob: -9.376775741577148
    10. '   ' → logprob: -10.126775741577148

Token 367: ' cette' (ID: 7696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4175982177257538
    2. ' ' → logprob: -1.1675982475280762
    3. 'n' → logprob: -4.042598247528076
    4. ')' → logprob: -5.917598247528076
    5. '<|end|>' → logprob: -6.292598247528076
    6. '```' → logprob: -6.667598247528076
    7. 'u' → logprob: -7.292598247528076
    8. '  ' → logprob: -7.417598247528076
    9. 'l' → logprob: -7.542598247528076
    10. '>' → logprob: -7.542598247528076

Token 368: ' étape' (ID: 83661)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05886455625295639
    2. ' ' → logprob: -3.4338645935058594
    3. 'n' → logprob: -4.183864593505859
    4. 'int' → logprob: -5.433864593505859
    5. '   ' → logprob: -7.058864593505859
    6. 'l' → logprob: -7.183864593505859
    7. ')' → logprob: -7.683864593505859
    8. ' step' → logprob: -7.683864593505859
    9. ' l' → logprob: -7.808864593505859
    10. ' n' → logprob: -8.05886459350586

Token 369: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7076252102851868
    2. '):' → logprob: -0.7076252102851868
    3. '):
' → logprob: -5.332625389099121
    4. ' :' → logprob: -5.457625389099121
    5. ')' → logprob: -5.707625389099121
    6. '       ' → logprob: -6.957625389099121
    7. ' ):' → logprob: -7.457625389099121
    8. ':
' → logprob: -8.207625389099121
    9. ',' → logprob: -10.457625389099121
    10. '   ' → logprob: -10.457625389099121

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03901040181517601
    2. ':' → logprob: -3.5390102863311768
    3. ' if' → logprob: -5.414010524749756
    4. ' :' → logprob: -5.789010524749756
    5. 'if' → logprob: -7.289010524749756
    6. ':
' → logprob: -8.164010047912598
    7. '   ' → logprob: -8.289010047912598
    8. '           ' → logprob: -9.164010047912598
    9. ' :
' → logprob: -9.414010047912598
    10. '        ' → logprob: -9.664010047912598

Token 371: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6652792692184448
    2. '       ' → logprob: -1.4152792692184448
    3. 'if' → logprob: -1.4152792692184448
    4. '   ' → logprob: -8.915279388427734
    5. '    ' → logprob: -12.040279388427734
    6. '           ' → logprob: -12.165279388427734
    7. '        ' → logprob: -12.915279388427734
    8. '	if' → logprob: -13.040279388427734
    9. '      ' → logprob: -14.040279388427734
    10. '
' → logprob: -14.415279388427734

Token 372: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7925642132759094
    2. 'if' → logprob: -0.9175642132759094
    3. '       ' → logprob: -1.9175641536712646
    4. '   ' → logprob: -7.292564392089844
    5. '    ' → logprob: -9.417564392089844
    6. '           ' → logprob: -10.417564392089844
    7. '        ' → logprob: -10.417564392089844
    8. '	if' → logprob: -10.667564392089844
    9. ' ' → logprob: -12.792564392089844
    10. '      ' → logprob: -12.917564392089844

Token 373: ' oui' (ID: 50908)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.003491023788228631
    2. 'n' → logprob: -5.878490924835205
    3. ' (' → logprob: -7.878490924835205
    4. '(n' → logprob: -8.128491401672363
    5. ' ' → logprob: -12.003491401672363
    6. '(' → logprob: -12.628491401672363
    7. '	n' → logprob: -13.128491401672363
    8. '   ' → logprob: -14.503491401672363
    9. ' ' → logprob: -16.378490447998047
    10. '[n' → logprob: -16.565990447998047

Token 374: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25958195328712463
    2. '       ' → logprob: -1.7595819234848022
    3. ':
' → logprob: -3.634582042694092
    4. '           ' → logprob: -4.009582042694092
    5. ' :' → logprob: -4.884582042694092
    6. ',' → logprob: -6.259582042694092
    7. '        ' → logprob: -7.384582042694092
    8. '{' → logprob: -7.634582042694092
    9. ' :
' → logprob: -7.634582042694092
    10. '   ' → logprob: -8.509581565856934

Token 375: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4273030757904053
    2. ' y' → logprob: -1.6773030757904053
    3. '           ' → logprob: -2.8023030757904053
    4. '        ' → logprob: -2.9273030757904053
    5. '   ' → logprob: -4.677303314208984
    6. '    ' → logprob: -4.677303314208984
    7. ' if' → logprob: -5.302303314208984
    8. 'y' → logprob: -5.427303314208984
    9. ' x' → logprob: -6.302303314208984
    10. ' ' → logprob: -6.552303314208984

Token 376: ' multipl' (ID: 44269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8211239576339722
    2. ' =' → logprob: -1.5711239576339722
    3. '       ' → logprob: -1.9461239576339722
    4. '   ' → logprob: -2.8211240768432617
    5. ' *=' → logprob: -2.8211240768432617
    6. '*=' → logprob: -3.3211240768432617
    7. ' multipl' → logprob: -3.6961240768432617
    8. ':' → logprob: -5.071124076843262
    9. ' y' → logprob: -5.321124076843262
    10. '    ' → logprob: -5.321124076843262

Token 377: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.12003523856401443
    2. 'lie' → logprob: -2.245035171508789
    3. 'ique' → logprob: -5.995035171508789
    4. 'y' → logprob: -6.870035171508789
    5. 'ilie' → logprob: -7.245035171508789
    6. 'uie' → logprob: -7.745035171508789
    7. '   ' → logprob: -7.995035171508789
    8. '}' → logprob: -8.370035171508789
    9. '       ' → logprob: -8.620035171508789
    10. 'ipl' → logprob: -8.745035171508789

Token 378: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5916053652763367
    2. 'y' → logprob: -0.9666053652763367
    3. '       ' → logprob: -2.8416054248809814
    4. '(y' → logprob: -5.216605186462402
    5. '	y' → logprob: -6.591605186462402
    6. '   ' → logprob: -7.591605186462402
    7. ',y' → logprob: -8.841605186462402
    8. ' ' → logprob: -9.341605186462402
    9. '(' → logprob: -9.591605186462402
    10. '           ' → logprob: -9.716605186462402

Token 379: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5249556303024292
    2. '=' → logprob: -0.8999556303024292
    3. ' par' → logprob: -7.024955749511719
    4. ',' → logprob: -7.649955749511719
    5. ' *=' → logprob: -9.524955749511719
    6. '   ' → logprob: -9.524955749511719
    7. '[' → logprob: -10.274955749511719
    8. '=[[' → logprob: -10.399955749511719
    9. ' by' → logprob: -10.524955749511719
    10. '*=' → logprob: -10.649955749511719

Token 380: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47410082817077637
    2. 'x' → logprob: -0.9741008281707764
    3. '	x' → logprob: -10.974101066589355
    4. ' ' → logprob: -13.099101066589355
    5. '(x' → logprob: -13.724101066589355
    6. ' 
' → logprob: -13.724101066589355
    7. '[' → logprob: -14.349101066589355
    8. '[x' → logprob: -14.724101066589355
    9. ',x' → logprob: -14.724101066589355
    10. '   ' → logprob: -15.599101066589355

Token 381: ' matr' (ID: 25095)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269410252571106
    2. ' x' → logprob: -2.126940965652466
    3. ' ' → logprob: -12.126940727233887
    4. '	x' → logprob: -12.501940727233887
    5. '   ' → logprob: -13.376940727233887
    6. '[x' → logprob: -13.876940727233887
    7. '(x' → logprob: -15.251940727233887
    8. ' 
' → logprob: -15.376940727233887
    9. '*x' → logprob: -16.001941680908203
    10. 'mat' → logprob: -16.126941680908203

Token 382: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0005979505367577076
    2. 'ix' → logprob: -7.500597953796387
    3. 'x' → logprob: -11.250597953796387
    4. 'ic' → logprob: -11.500597953796387
    5. 'ce' → logprob: -11.750597953796387
    6. '   ' → logprob: -12.625597953796387
    7. 'rice' → logprob: -12.625597953796387
    8. '#' → logprob: -13.375597953796387
    9. '[' → logprob: -13.500597953796387
    10. '```' → logprob: -13.625597953796387

Token 383: ' cour' (ID: 2871)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18116246163845062
    2. 'x' → logprob: -1.8061624765396118
    3. '   ' → logprob: -7.431162357330322
    4. '(x' → logprob: -8.18116283416748
    5. '	x' → logprob: -8.43116283416748
    6. '[x' → logprob: -9.05616283416748
    7. ',' → logprob: -9.80616283416748
    8. ' ' → logprob: -10.30616283416748
    9. '       ' → logprob: -10.68116283416748
    10. ' 
' → logprob: -11.05616283416748

Token 384: 'ante' (ID: 2116)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6948980093002319
    2. ' x' → logprob: -1.694898009300232
    3. '   ' → logprob: -2.1948981285095215
    4. '       ' → logprob: -2.5698981285095215
    5. '[x' → logprob: -2.9448981285095215
    6. 'ante' → logprob: -2.9448981285095215
    7. 'rent' → logprob: -4.9448981285095215
    8. '[' → logprob: -5.6948981285095215
    9. '           ' → logprob: -5.6948981285095215
    10. 'ent' → logprob: -7.0698981285095215

Token 385: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7292258739471436
    2. ':' → logprob: -1.6042258739471436
    3. ',' → logprob: -2.3542258739471436
    4. ' y' → logprob: -2.6042258739471436
    5. ' :' → logprob: -2.6042258739471436
    6. ' =' → logprob: -3.9792258739471436
    7. ' (' → logprob: -4.604226112365723
    8. ' x' → logprob: -4.604226112365723
    9. '   ' → logprob: -5.229226112365723
    10. ' ,' → logprob: -5.604226112365723

Token 386: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007485353387892246
    2. ',' → logprob: -5.507485389709473
    3. ':' → logprob: -6.507485389709473
    4. ' if' → logprob: -8.257485389709473
    5. '   ' → logprob: -8.382485389709473
    6. '        
' → logprob: -8.382485389709473
    7. '           ' → logprob: -8.507485389709473
    8. '<|end|>' → logprob: -8.757485389709473
    9. '        ' → logprob: -8.882485389709473
    10. ' =' → logprob: -8.882485389709473

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003767305053770542
    2. ' if' → logprob: -6.503767490386963
    3. '        
' → logprob: -7.253767490386963
    4. '   ' → logprob: -7.878767490386963
    5. '           ' → logprob: -8.628767013549805
    6. ':' → logprob: -8.878767013549805
    7. '[' → logprob: -8.878767013549805
    8. 'if' → logprob: -9.253767013549805
    9. ',' → logprob: -9.628767013549805
    10. ' =' → logprob: -9.628767013549805

Token 388: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6705130934715271
    2. ' if' → logprob: -0.9205130934715271
    3. 'if' (adapté à ' if') → logprob: -2.420513153076172
    4. '   ' → logprob: -7.045513153076172
    5. '           ' → logprob: -8.795513153076172
    6. '        
' → logprob: -9.045513153076172
    7. '	if' → logprob: -10.170513153076172
    8. '	' → logprob: -10.420513153076172
    9. '    ' → logprob: -10.545513153076172
    10. '	   ' → logprob: -11.045513153076172

Token 389: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07891391962766647
    2. 'n' → logprob: -2.578913927078247
    3. '(n' → logprob: -11.328913688659668
    4. ' (' → logprob: -11.578913688659668
    5. '	n' → logprob: -13.578913688659668
    6. ' ' → logprob: -14.578913688659668
    7. '(' → logprob: -14.828913688659668
    8. '   ' → logprob: -14.828913688659668
    9. ' ' → logprob: -15.578913688659668
    10. '_n' → logprob: -16.453914642333984

Token 390: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.047216273844242096
    2. ' %' → logprob: -3.1722161769866943
    3. '&' → logprob: -5.922216415405273
    4. '%' → logprob: -6.547216415405273
    5. ' ' → logprob: -9.297216415405273
    6. ' ' → logprob: -13.047216415405273
    7. '[' → logprob: -15.047216415405273
    8. '&nbsp' → logprob: -15.547216415405273
    9. '   ' → logprob: -16.047216415405273
    10. '1' → logprob: -16.547216415405273

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488318204879761
    2. ' ' → logprob: -2.9298832416534424
    3. '   ' → logprob: -14.304883003234863
    4. '  ' → logprob: -16.80488395690918
    5. ' ' → logprob: -16.92988395690918
    6. '' → logprob: -17.24238395690918
    7. '```' → logprob: -17.61738395690918
    8. '#' → logprob: -17.92988395690918
    9. 'nbsp' → logprob: -18.36738395690918
    10. '	' → logprob: -18.42988395690918

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -19.500015258789062
    4. '   ' → logprob: -19.625015258789062
    5. '' → logprob: -20.500015258789062
    6. '

' → logprob: -20.750015258789062
    7. '01' → logprob: -21.125015258789062
    8. '  ' → logprob: -21.250015258789062
    9. '#' → logprob: -21.625015258789062
    10. '-' → logprob: -21.625015258789062

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0055719176307320595
    2. ':
' → logprob: -5.2555718421936035
    3. ' ==' → logprob: -8.755572319030762
    4. ' :' → logprob: -9.255572319030762
    5. '==' → logprob: -9.630572319030762
    6. '       ' → logprob: -11.880572319030762
    7. ' :
' → logprob: -12.630572319030762
    8. '=' → logprob: -12.755572319030762
    9. ' !=' → logprob: -13.130572319030762
    10. '   ' → logprob: -13.630572319030762

Token 394: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40802836418151855
    2. ':' → logprob: -1.1580283641815186
    3. ':
' → logprob: -3.9080283641815186
    4. ' :' → logprob: -8.408028602600098
    5. ' y' → logprob: -9.283028602600098
    6. ' :
' → logprob: -9.283028602600098
    7. '):' → logprob: -9.283028602600098
    8. '[' → logprob: -9.408028602600098
    9. ',' → logprob: -9.533028602600098
    10. '):
' → logprob: -10.408028602600098

Token 395: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05819672718644142
    2. ' y' → logprob: -3.183196783065796
    3. '           ' → logprob: -4.558196544647217
    4. 'y' (adapté à ' y') → logprob: -5.808196544647217
    5. '        
' → logprob: -8.183197021484375
    6. ' for' → logprob: -8.433197021484375
    7. ' x' → logprob: -8.808197021484375
    8. '[' → logprob: -9.433197021484375
    9. '```' → logprob: -9.558197021484375
    10. '   ' → logprob: -9.558197021484375

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38692983984947205
    2. '=' → logprob: -1.1369298696517944
    3. '=[' → logprob: -11.136929512023926
    4. '[' → logprob: -11.636929512023926
    5. '   ' → logprob: -12.011929512023926
    6. '=[[' → logprob: -12.011929512023926
    7. ' =[' → logprob: -12.511929512023926
    8. ' ' → logprob: -12.511929512023926
    9. 'y' → logprob: -12.761929512023926
    10. ',' → logprob: -13.136929512023926

Token 397: ' mat' (ID: 2450)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00572197837755084
    2. '[
' → logprob: -5.2557220458984375
    3. '[' → logprob: -7.7557220458984375
    4. 'mat' → logprob: -10.130722045898438
    5. ' [[' → logprob: -10.880722045898438
    6. 'multiply' → logprob: -14.380722045898438
    7. '[m' → logprob: -15.755722045898438
    8. 'matrix' → logprob: -16.380722045898438
    9. '[['' → logprob: -16.505722045898438
    10. 'mul' → logprob: -16.755722045898438

Token 398: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.643064022064209
    2. 'mul' → logprob: -1.643064022064209
    3. '_mult' → logprob: -1.893064022064209
    4. 'rix' → logprob: -2.143064022064209
    5. 'mult' → logprob: -5.268064022064209
    6. 'ix' → logprob: -5.393064022064209
    7. 'rices' → logprob: -6.768064022064209
    8. 'ult' → logprob: -7.393064022064209
    9. 'x' → logprob: -8.393064498901367
    10. 'ultiply' → logprob: -8.518064498901367

Token 399: '(x' (ID: 4061)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -11.000020027160645
    3. '(x' → logprob: -13.000020027160645
    4. 'y' → logprob: -14.250020027160645
    5. '(
' → logprob: -16.500019073486328
    6. ' (' → logprob: -18.625019073486328
    7. ' y' → logprob: -19.500019073486328
    8. '	y' → logprob: -20.125019073486328
    9. '[y' → logprob: -20.500019073486328
    10. ',y' → logprob: -20.875019073486328

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028394684195518494
    2. ',y' → logprob: -5.8778395652771
    3. ' ,' → logprob: -10.377839088439941
    4. 'y' → logprob: -13.002839088439941
    5. ',
' → logprob: -14.252839088439941
    6. ')' → logprob: -14.502839088439941
    7. ' y' → logprob: -16.877840042114258
    8. ',x' → logprob: -17.627840042114258
    9. ',n' → logprob: -18.252840042114258
    10. '<|end|>' → logprob: -18.377840042114258

Token 401: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007100477814674377
    2. ' y' → logprob: -7.2507100105285645
    3. '	y' → logprob: -16.125709533691406
    4. ')y' → logprob: -17.750709533691406
    5. '   ' → logprob: -18.875709533691406
    6. '[y' → logprob: -19.375709533691406
    7. ')' → logprob: -19.500709533691406
    8. ',y' → logprob: -20.375709533691406
    9. '(y' → logprob: -20.625709533691406
    10. 'x' → logprob: -20.750709533691406

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004688034241553396
    2. ')
' → logprob: -8.000469207763672
    3. '       ' → logprob: -9.000469207763672
    4. ' )' → logprob: -11.625469207763672
    5. ')

' → logprob: -14.375469207763672
    6. '   ' → logprob: -15.250469207763672
    7. ')
' → logprob: -15.625469207763672
    8. '           ' → logprob: -17.250469207763672
    9. ' )
' → logprob: -17.750469207763672
    10. ')#' → logprob: -18.250469207763672

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05192228779196739
    2. '<|end|>' → logprob: -3.17692232131958
    3. 'n' → logprob: -5.42692232131958
    4. ')' → logprob: -6.42692232131958
    5. '        
' → logprob: -7.55192232131958
    6. '   ' → logprob: -8.051921844482422
    7. '[' → logprob: -8.051921844482422
    8. '(n' → logprob: -8.051921844482422
    9. ')n' → logprob: -8.051921844482422
    10. '<|end|>' → logprob: -8.551921844482422

Token 404: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06825019419193268
    2. 'n' → logprob: -2.8182501792907715
    3. ' n' → logprob: -5.9432501792907715
    4. 'x' → logprob: -6.1932501792907715
    5. '        
' → logprob: -7.1932501792907715
    6. '   ' → logprob: -7.6932501792907715
    7. ' x' → logprob: -9.19325065612793
    8. ' 
' → logprob: -9.31825065612793
    9. '
' → logprob: -9.81825065612793
    10. '    
' → logprob: -10.44325065612793

Token 405: ' On' (ID: 2160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007867562817409635
    2. ' x' → logprob: -7.250786781311035
    3. '   ' → logprob: -10.000786781311035
    4. '       ' → logprob: -10.625786781311035
    5. 'n' → logprob: -11.875786781311035
    6. ' ' → logprob: -16.00078582763672
    7. '	x' → logprob: -16.25078582763672
    8. '           ' → logprob: -17.12578582763672
    9. '#' → logprob: -17.87578582763672
    10. '  ' → logprob: -18.00078582763672

Token 406: ' él' (ID: 13045)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7531528472900391
    2. '=' → logprob: -1.503152847290039
    3. ' x' → logprob: -1.628152847290039
    4. ' =' → logprob: -2.253152847290039
    5. '   ' → logprob: -5.628152847290039
    6. '=x' → logprob: -7.503152847290039
    7. '       ' → logprob: -7.753152847290039
    8. '    ' → logprob: -8.253152847290039
    9. ' ' → logprob: -9.128152847290039
    10. ' <<=' → logprob: -9.628152847290039

Token 407: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.21683886647224426
    2. 've' → logprob: -1.7168388366699219
    3. 'eve' → logprob: -4.966838836669922
    4. 'x' → logprob: -5.591838836669922
    5. 'v' → logprob: -6.966838836669922
    6. '`' → logprob: -7.216838836669922
    7. '```' → logprob: -7.591838836669922
    8. '#' → logprob: -7.841838836669922
    9. 'e' → logprob: -8.216838836669922
    10. '=' → logprob: -8.341838836669922

Token 408: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3133930265903473
    2. ' x' → logprob: -1.313392996788025
    3. '   ' → logprob: -9.188392639160156
    4. '	x' → logprob: -11.063392639160156
    5. '       ' → logprob: -11.563392639160156
    6. 'n' → logprob: -13.313392639160156
    7. ' ' → logprob: -13.688392639160156
    8. '(x' → logprob: -15.438392639160156
    9. '           ' → logprob: -15.438392639160156
    10. '  ' → logprob: -15.438392639160156

Token 409: ' matr' (ID: 25095)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002475777640938759
    2. ' x' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. ' ' → logprob: -16.87747573852539
    5. '	x' → logprob: -17.00247573852539
    6. '
' → logprob: -17.37747573852539
    7. 'mat' → logprob: -19.50247573852539
    8. '(x' → logprob: -19.50247573852539
    9. '    ' → logprob: -19.87747573852539
    10. '```' → logprob: -19.87747573852539

Token 410: 'ice' (ID: 603)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4332711100578308
    2. 'ix' → logprob: -1.1832711696624756
    3. '_mul' → logprob: -4.3082709312438965
    4. '_pow' → logprob: -4.8082709312438965
    5. 'u' → logprob: -5.0582709312438965
    6. ' x' → logprob: -5.4332709312438965
    7. 'ice' → logprob: -5.8082709312438965
    8. '(x' → logprob: -5.8082709312438965
    9. '[x' → logprob: -6.6832709312438965
    10. 'ic' → logprob: -6.9332709312438965

Token 411: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0054960413835942745
    2. ' x' → logprob: -5.380496025085449
    3. '(x' → logprob: -7.130496025085449
    4. '=' → logprob: -10.38049602508545
    5. '(
' → logprob: -11.75549602508545
    6. ' =' → logprob: -12.00549602508545
    7. '	x' → logprob: -12.00549602508545
    8. '   ' → logprob: -12.13049602508545
    9. '(' → logprob: -12.13049602508545
    10. 'to' → logprob: -12.88049602508545

Token 412: ' au' (ID: 2791)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03365745767951012
    2. ' =' → logprob: -3.4086575508117676
    3. ',' → logprob: -12.40865707397461
    4. '   ' → logprob: -12.65865707397461
    5. ' ' → logprob: -13.78365707397461
    6. 'x' → logprob: -14.28365707397461
    7. ' to' → logprob: -14.40865707397461
    8. 'to' → logprob: -14.90865707397461
    9. ' à' → logprob: -15.03365707397461
    10. 'à' → logprob: -15.15865707397461

Token 413: ' carré' (ID: 191546)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5025212168693542
    2. ' carré' → logprob: -1.627521276473999
    3. '2' → logprob: -1.877521276473999
    4. 'c' → logprob: -4.12752103805542
    5. ' ' → logprob: -4.62752103805542
    6. 'x' → logprob: -4.87752103805542
    7. 'square' → logprob: -6.00252103805542
    8. ' carr' → logprob: -6.00252103805542
    9. 'Carr' → logprob: -6.37752103805542
    10. ' carre' → logprob: -6.87752103805542

Token 414: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4568224847316742
    2. '       ' → logprob: -1.8318225145339966
    3. ' x' → logprob: -1.9568225145339966
    4. '   ' → logprob: -2.831822395324707
    5. ',' → logprob: -5.956822395324707
    6. '	x' → logprob: -6.331822395324707
    7. ' =' → logprob: -8.081822395324707
    8. ' ' → logprob: -8.206822395324707
    9. '    
' → logprob: -8.331822395324707
    10. ',
' → logprob: -8.581822395324707

Token 415: ' chaque' (ID: 21194)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.012297128327190876
    2. ' chaque' → logprob: -4.8872971534729
    3. ' mat' → logprob: -5.7622971534729
    4. '(mat' → logprob: -7.3872971534729
    5. 'x' → logprob: -7.7622971534729
    6. 'each' → logprob: -8.762296676635742
    7. 'la' → logprob: -9.137296676635742
    8. '	mat' → logprob: -9.262296676635742
    9. ' matr' → logprob: -10.512296676635742
    10. ' each' → logprob: -11.512296676635742

Token 416: ' étape' (ID: 83661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9476344585418701
    2. 'multip' → logprob: -1.5726344585418701
    3. 'x' → logprob: -1.9476344585418701
    4. 'iteration' → logprob: -2.94763445854187
    5. '*' → logprob: -3.57263445854187
    6. 'mat' → logprob: -3.94763445854187
    7. '2' → logprob: -3.94763445854187
    8. 'n' → logprob: -3.94763445854187
    9. 'fois' → logprob: -4.072634696960449
    10. ' x' → logprob: -4.072634696960449

Token 417: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3814062476158142
    2. 'x' → logprob: -1.381406307220459
    3. ' x' → logprob: -2.756406307220459
    4. ',' → logprob: -7.131406307220459
    5. '   ' → logprob: -7.256406307220459
    6. '=' → logprob: -8.0064058303833
    7. '(x' → logprob: -9.0064058303833
    8. ' =' → logprob: -9.2564058303833
    9. '	x' → logprob: -9.2564058303833
    10. ',x' → logprob: -9.6314058303833

Token 418: 'c' (ID: 66)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16146999597549438
    2. ' x' → logprob: -1.9114699363708496
    3. '       ' → logprob: -7.03646993637085
    4. '   ' → logprob: -8.536470413208008
    5. '
' → logprob: -8.911470413208008
    6. '           ' → logprob: -12.161470413208008
    7. ')' → logprob: -12.161470413208008
    8. '	x' → logprob: -12.286470413208008
    9. ' 
' → logprob: -12.411470413208008
    10. ')
' → logprob: -12.661470413208008

Token 419: 'ette' (ID: 3769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.139729306101799
    2. 'ar' → logprob: -2.2647292613983154
    3. ' =' → logprob: -3.8897292613983154
    4. 'arr' → logprob: -6.6397294998168945
    5. '   ' → logprob: -7.0147294998168945
    6. 'on' → logprob: -7.0147294998168945
    7. '**' → logprob: -7.6397294998168945
    8. '=
' → logprob: -8.014729499816895
    9. '#' → logprob: -8.764729499816895
    10. 'om' → logprob: -8.889729499816895

Token 420: ' opération' (ID: 86023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5129473209381104
    2. ' =' → logprob: -1.0129473209381104
    3. 'x' → logprob: -4.012947082519531
    4. ')' → logprob: -4.887947082519531
    5. ' x' → logprob: -5.137947082519531
    6. ' ' → logprob: -6.387947082519531
    7. '   ' → logprob: -7.262947082519531
    8. ' *=' → logprob: -7.512947082519531
    9. 'def' → logprob: -7.762947082519531
    10. ' 
' → logprob: -7.762947082519531

Token 421: ' double' (ID: 3503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44445720314979553
    2. '=' → logprob: -1.0694571733474731
    3. ' x' → logprob: -4.819457054138184
    4. 'x' → logprob: -5.569457054138184
    5. ')' → logprob: -6.569457054138184
    6. '       ' → logprob: -6.694457054138184
    7. '   ' → logprob: -7.444457054138184
    8. ' ' → logprob: -9.444457054138184
    9. '<|end|>' → logprob: -9.569457054138184
    10. ',' → logprob: -10.194457054138184

Token 422: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020001720637083054
    2. ' x' → logprob: -4.1450018882751465
    3. 'l' → logprob: -6.2700018882751465
    4. 'n' → logprob: -7.2700018882751465
    5. ')' → logprob: -7.3950018882751465
    6. ' la' → logprob: -9.020001411437988
    7. ' ' → logprob: -9.270001411437988
    8. 'la' → logprob: -9.270001411437988
    9. '   ' → logprob: -9.395001411437988
    10. '(x' → logprob: -9.520001411437988

Token 423: ''ex' (ID: 23472)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5159828662872314
    2. ' exponent' → logprob: -2.1409828662872314
    3. 'x' → logprob: -2.3909828662872314
    4. 'e' → logprob: -2.3909828662872314
    5. ''ex' → logprob: -2.6409828662872314
    6. ' x' → logprob: -3.8909828662872314
    7. 'a' → logprob: -6.265982627868652
    8. ' ex' → logprob: -6.515982627868652
    9. 'n' → logprob: -7.015982627868652
    10. ' expos' → logprob: -7.015982627868652

Token 424: 'pos' (ID: 1103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3952007293701172
    2. 'p' → logprob: -1.5202007293701172
    3. 'pow' → logprob: -1.7702007293701172
    4. '**' → logprob: -2.145200729370117
    5. 'ponent' → logprob: -2.270200729370117
    6. '^' → logprob: -2.395200729370117
    7. '²' → logprob: -4.770200729370117
    8. '*' → logprob: -4.895200729370117
    9. 'pt' → logprob: -5.270200729370117
    10. 'er' → logprob: -5.270200729370117

Token 425: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.18896092474460602
    2. 'ent' → logprob: -2.5639610290527344
    3. 'ition' → logprob: -3.1889610290527344
    4. 'n' → logprob: -4.313961029052734
    5. 'é' → logprob: -4.813961029052734
    6. 'e' → logprob: -5.063961029052734
    7. '^' → logprob: -5.563961029052734
    8. 'ponent' → logprob: -5.688961029052734
    9. 'ion' → logprob: -6.313961029052734
    10. 'er' → logprob: -6.438961029052734

Token 426: ' qu' (ID: 474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27138882875442505
    2. '       ' → logprob: -2.3963887691497803
    3. ',' → logprob: -3.2713887691497803
    4. ' =' → logprob: -3.7713887691497803
    5. '   ' → logprob: -4.021389007568359
    6. '(x' → logprob: -4.021389007568359
    7. ')
' → logprob: -4.271389007568359
    8. ' x' → logprob: -4.271389007568359
    9. '=' → logprob: -4.521389007568359
    10. '),' → logprob: -5.646389007568359

Token 427: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7806885838508606
    2. 'i' → logprob: -1.0306885242462158
    3. 'x' → logprob: -3.030688524246216
    4. 'el' → logprob: -3.155688524246216
    5. 'u' → logprob: -3.405688524246216
    6. ''elle' → logprob: -3.530688524246216
    7. ''il' → logprob: -5.155688762664795
    8. ''''' → logprob: -5.530688762664795
    9. 'and' → logprob: -5.780688762664795
    10. 'y' → logprob: -5.905688762664795

Token 428: ' multipl' (ID: 44269)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1755441129207611
    2. 'mult' → logprob: -2.550544023513794
    3. ' x' → logprob: -3.425544023513794
    4. '=' → logprob: -3.800544023513794
    5. ' multipl' → logprob: -5.300544261932373
    6. ' =' → logprob: -5.550544261932373
    7. 'y' → logprob: -5.550544261932373
    8. 'é' → logprob: -5.550544261932373
    9. '   ' → logprob: -6.050544261932373
    10. ')' → logprob: -7.050544261932373

Token 429: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.31405532360076904
    2. 'ique' → logprob: -1.314055323600769
    3. 'iqu' → logprob: -7.439055442810059
    4. 'iqué' → logprob: -9.939055442810059
    5. 'lie' → logprob: -10.064055442810059
    6. 'e' → logprob: -10.314055442810059
    7. 'y' → logprob: -11.064055442810059
    8. 'iquant' → logprob: -11.064055442810059
    9. 'i' → logprob: -11.189055442810059
    10. 'ies' → logprob: -11.314055442810059

Token 430: ')
' (ID: 446)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6244553327560425
    2. 'par' → logprob: -1.1244553327560425
    3. ')' → logprob: -2.624455451965332
    4. '   ' → logprob: -3.499455451965332
    5. 'x' → logprob: -3.874455451965332
    6. '),' → logprob: -5.249455451965332
    7. '       ' → logprob: -6.249455451965332
    8. ' ' → logprob: -6.624455451965332
    9. 'e' → logprob: -6.749455451965332
    10. ',' → logprob: -6.874455451965332

Token 431: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2798587679862976
    2. '       ' → logprob: -1.6548588275909424
    3. '   ' → logprob: -3.1548588275909424
    4. ' x' → logprob: -4.779858589172363
    5. '    
' → logprob: -7.404858589172363
    6. '	x' → logprob: -7.904858589172363
    7. '        
' → logprob: -8.154858589172363
    8. '
' → logprob: -9.279858589172363
    9. '  
' → logprob: -9.529858589172363
    10. ' =' → logprob: -9.779858589172363

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3400820791721344
    2. ' x' → logprob: -1.965082049369812
    3. '       ' → logprob: -1.965082049369812
    4. '   ' → logprob: -4.840082168579102
    5. '	x' → logprob: -9.965082168579102
    6. ',' → logprob: -11.715082168579102
    7. ' ' → logprob: -11.840082168579102
    8. '           ' → logprob: -11.965082168579102
    9. ' =' → logprob: -12.465082168579102
    10. ',x' → logprob: -12.715082168579102

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -17.038042068481445
    4. ',' → logprob: -18.538042068481445
    5. '=

' → logprob: -19.913042068481445
    6. ' ' → logprob: -20.163042068481445
    7. '*=' → logprob: -21.163042068481445
    8. '	' → logprob: -21.788042068481445
    9. '=
' → logprob: -22.163042068481445
    10. ' mat' → logprob: -22.163042068481445

Token 434: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.008614808320999146
    2. ' mat' → logprob: -4.758615016937256
    3. '	mat' → logprob: -15.633614540100098
    4. '(mat' → logprob: -16.508615493774414
    5. 'Mat' → logprob: -18.258615493774414
    6. 'm' → logprob: -19.508615493774414
    7. '.mat' → logprob: -19.508615493774414
    8. '_mat' → logprob: -19.633615493774414
    9. ' ' → logprob: -19.633615493774414
    10. ' мат' → logprob: -20.008615493774414

Token 435: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -1.1875571544806007e-05
    2. '_pow' → logprob: -11.375011444091797
    3. '_mat' → logprob: -15.375011444091797
    4. '_' → logprob: -15.750011444091797
    5. 'mul' → logprob: -17.375011444091797
    6. ' _' → logprob: -18.375011444091797
    7. '[_' → logprob: -19.000011444091797
    8. '__' → logprob: -20.125011444091797
    9. '_dup' → logprob: -20.250011444091797
    10. '_mult' → logprob: -20.250011444091797

Token 436: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.87500286102295
    3. 'x' → logprob: -14.62500286102295
    4. '(
' → logprob: -18.125003814697266
    5. ' x' → logprob: -21.000003814697266
    6. ',x' → logprob: -21.875003814697266
    7. '[x' → logprob: -22.000003814697266
    8. ' (' → logprob: -22.250003814697266
    9. '	x' → logprob: -23.250003814697266
    10. '2' → logprob: -24.625003814697266

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05002304166555405
    2. '(x' → logprob: -3.175023078918457
    3. ',x' → logprob: -5.425023078918457
    4. '(' → logprob: -6.550023078918457
    5. 'x' → logprob: -6.800023078918457
    6. ' ,' → logprob: -10.425023078918457
    7. '(
' → logprob: -12.175023078918457
    8. ' x' → logprob: -12.550023078918457
    9. ')' → logprob: -12.550023078918457
    10. '),' → logprob: -12.675023078918457

Token 438: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.547789674485102e-05
    2. ' x' → logprob: -10.250035285949707
    3. '	x' → logprob: -19.250036239624023
    4. ')x' → logprob: -20.000036239624023
    5. '(x' → logprob: -20.125036239624023
    6. '[x' → logprob: -21.375036239624023
    7. ')' → logprob: -22.000036239624023
    8. ' ' → logprob: -23.375036239624023
    9. '"x' → logprob: -23.375036239624023
    10. ',x' → logprob: -23.500036239624023

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12730003893375397
    2. ')
' → logprob: -2.1273000240325928
    3. '       ' → logprob: -8.627300262451172
    4. ',' → logprob: -9.252300262451172
    5. '   ' → logprob: -9.752300262451172
    6. ')
' → logprob: -10.877300262451172
    7. ')n' → logprob: -11.627300262451172
    8. ')

' → logprob: -11.877300262451172
    9. ' ' → logprob: -14.377300262451172
    10. ' )' → logprob: -14.752300262451172

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021924631670117378
    2. 'n' → logprob: -3.8969247341156006
    3. ' n' → logprob: -7.1469244956970215
    4. '
' → logprob: -8.64692497253418
    5. '        
' → logprob: -8.64692497253418
    6. '   ' → logprob: -9.64692497253418
    7. '(n' → logprob: -10.14692497253418
    8. '[n' → logprob: -10.64692497253418
    9. '```' → logprob: -10.77192497253418
    10. ',' → logprob: -10.89692497253418

Token 441: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2158084511756897
    2. 'n' → logprob: -2.215808391571045
    3. '       ' → logprob: -2.465808391571045
    4. '   ' → logprob: -10.465808868408203
    5. ' 
' → logprob: -10.465808868408203
    6. '        
' → logprob: -10.965808868408203
    7. ' ' → logprob: -11.715808868408203
    8. '	n' → logprob: -11.715808868408203
    9. '(n' → logprob: -12.340808868408203
    10. '        ' → logprob: -13.215808868408203

Token 442: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.693274736404419
    2. ' n' → logprob: -0.693274736404419
    3. '       ' → logprob: -9.19327449798584
    4. '   ' → logprob: -10.69327449798584
    5. '	n' → logprob: -13.31827449798584
    6. '    ' → logprob: -13.94327449798584
    7. ' ' → logprob: -15.31827449798584
    8. '        ' → logprob: -15.56827449798584
    9. ' ' → logprob: -16.443275451660156
    10. '  ' → logprob: -17.193275451660156

Token 443: ' div' (ID: 4223)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42663511633872986
    2. ' >>=' → logprob: -1.1766351461410522
    3. ' n' → logprob: -3.8016350269317627
    4. '>>' → logprob: -4.301635265350342
    5. '=' → logprob: -6.426635265350342
    6. '//=' → logprob: -6.676635265350342
    7. '>' → logprob: -9.676634788513184
    8. ' =' → logprob: -10.301634788513184
    9. ' >>' → logprob: -10.426634788513184
    10. '   ' → logprob: -10.801634788513184

Token 444: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.002829603850841522
    2. 'ide' → logprob: -5.877829551696777
    3. 'ize' → logprob: -11.627829551696777
    4. '   ' → logprob: -11.877829551696777
    5. 'isez' → logprob: -13.127829551696777
    6. 'e' → logprob: -13.377829551696777
    7. 'iser' → logprob: -13.627829551696777
    8. 'i' → logprob: -13.752829551696777
    9. 'de' → logprob: -14.502829551696777
    10. '=' → logprob: -15.002829551696777

Token 445: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692968547344208
    2. 'n' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.25192928314209
    4. '	n' → logprob: -14.25192928314209
    5. '(n' → logprob: -15.62692928314209
    6. ' ' → logprob: -16.501930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '    ' → logprob: -18.126930236816406
    9. ' (' → logprob: -19.001930236816406
    10. ')n' → logprob: -19.001930236816406

Token 446: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11063084751367569
    2. ' n' → logprob: -2.860630750656128
    3. ' >>=' → logprob: -3.485630750656128
    4. '//=' → logprob: -5.110630989074707
    5. '   ' → logprob: -5.485630989074707
    6. '>>' → logprob: -5.860630989074707
    7. ' by' → logprob: -6.360630989074707
    8. ' //' → logprob: -6.860630989074707
    9. '//' → logprob: -8.235630989074707
    10. 'by' → logprob: -8.610630989074707

Token 447: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07888989895582199
    2. ' ' → logprob: -2.578889846801758
    3. '```' → logprob: -16.703889846801758
    4. ' ' → logprob: -16.828889846801758
    5. ' deux' → logprob: -18.203889846801758
    6. '   ' → logprob: -18.828889846801758
    7. ' two' → logprob: -18.953889846801758
    8. '1' → logprob: -19.453889846801758
    9. 'de' → logprob: -19.453889846801758
    10. '۲' → logprob: -20.453889846801758

Token 448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -19.625036239624023
    4. '   ' → logprob: -21.000036239624023
    5. '1' → logprob: -22.500036239624023
    6. '２' → logprob: -23.500036239624023
    7. ' ' → logprob: -23.875036239624023
    8. '۲' → logprob: -24.000036239624023
    9. '10' → logprob: -24.125036239624023
    10. '  ' → logprob: -24.625036239624023

Token 449: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8832268714904785
    2. ' n' → logprob: -1.3832268714904785
    3. ' >>=' → logprob: -1.5082268714904785
    4. '   ' → logprob: -3.2582268714904785
    5. '>>' → logprob: -3.2582268714904785
    6. '       ' → logprob: -3.5082268714904785
    7. ' >>' → logprob: -5.2582268714904785
    8. '	n' → logprob: -7.6332268714904785
    9. '(n' → logprob: -7.8832268714904785
    10. ',' → logprob: -7.8832268714904785

Token 450: ' manipul' (ID: 80974)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28792357444763184
    2. ' n' → logprob: -1.4129235744476318
    3. '>>' → logprob: -5.912923812866211
    4. ' ' → logprob: -6.412923812866211
    5. '2' → logprob: -7.787923812866211
    6. '//' → logprob: -7.787923812866211
    7. '#' → logprob: -8.162923812866211
    8. 'shift' → logprob: -8.162923812866211
    9. '>' → logprob: -8.537923812866211
    10. 'x' → logprob: -8.662923812866211

Token 451: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -9.088346359931165e-07
    2. 'nt' → logprob: -15.125000953674316
    3. ' ant' → logprob: -16.0
    4. 'ing' → logprob: -16.125
    5. 'nant' → logprob: -16.375
    6. 'ation' → logprob: -16.5
    7. 'a' → logprob: -16.625
    8. '   ' → logprob: -17.125
    9. '```' → logprob: -17.375
    10. 'Ant' → logprob: -17.375

Token 452: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3869031071662903
    2. ' n' → logprob: -1.1369030475616455
    3. ' ' → logprob: -10.636902809143066
    4. 'x' → logprob: -12.761902809143066
    5. ' ' → logprob: -13.761902809143066
    6. '	n' → logprob: -14.136902809143066
    7. '   ' → logprob: -14.636902809143066
    8. '  ' → logprob: -14.636902809143066
    9. 'a' → logprob: -14.636902809143066
    10. ' a' → logprob: -15.136902809143066

Token 453: ' bits' (ID: 18189)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0722990483045578
    2. ' n' → logprob: -2.822299003601074
    3. ' bits' → logprob: -5.197299003601074
    4. '>>' → logprob: -5.947299003601074
    5. '>' → logprob: -6.697299003601074
    6. '>>>' → logprob: -8.197299003601074
    7. ' ' → logprob: -8.572299003601074
    8. 'bits' → logprob: -8.947299003601074
    9. 'b' → logprob: -9.322299003601074
    10. ' >>=' → logprob: -9.697299003601074

Token 454: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6292451620101929
    2. ' n' → logprob: -1.1292451620101929
    3. '>>' → logprob: -2.8792452812194824
    4. ' >>=' → logprob: -2.8792452812194824
    5. '   ' → logprob: -4.004245281219482
    6. ' >>' → logprob: -4.629245281219482
    7. '       ' → logprob: -6.254245281219482
    8. '>>>' → logprob: -8.129244804382324
    9. '	n' → logprob: -8.504244804382324
    10. ' 
' → logprob: -9.254244804382324

Token 455: 'op' (ID: 467)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868715465068817
    2. ' n' → logprob: -1.136871576309204
    3. '	n' → logprob: -14.761871337890625
    4. '   ' → logprob: -16.761871337890625
    5. '>' → logprob: -17.011871337890625
    6. ')n' → logprob: -17.511871337890625
    7. ')' → logprob: -18.386871337890625
    8. ' ' → logprob: -18.386871337890625
    9. '>>' → logprob: -18.886871337890625
    10. ' ' → logprob: -18.886871337890625

Token 456: 'ération' (ID: 24977)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.10115791112184525
    2. '=' → logprob: -2.8511579036712646
    3. 'n' → logprob: -3.4761579036712646
    4. '=n' → logprob: -5.601158142089844
    5. 't' → logprob: -6.476158142089844
    6. 'r' → logprob: -7.601158142089844
    7. '>' → logprob: -7.726158142089844
    8. ' n' → logprob: -8.351158142089844
    9. '>>>' → logprob: -8.476158142089844
    10. 'x' → logprob: -8.601158142089844

Token 457: ' de' (ID: 334)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.811131477355957
    2. 'n' → logprob: -1.061131477355957
    3. ' >>=' → logprob: -1.686131477355957
    4. ' n' → logprob: -4.186131477355957
    5. '//=' → logprob: -5.311131477355957
    6. '=' → logprob: -5.811131477355957
    7. '>>>' → logprob: -7.186131477355957
    8. ' >>' → logprob: -9.311131477355957
    9. '=n' → logprob: -9.686131477355957
    10. ' //' → logprob: -9.936131477355957

Token 458: ' dé' (ID: 2393)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005384468473494053
    2. ' n' → logprob: -5.25538444519043
    3. '>' → logprob: -10.00538444519043
    4. '>>' → logprob: -10.25538444519043
    5. '>>>' → logprob: -11.00538444519043
    6. 's' → logprob: -11.00538444519043
    7. 'x' → logprob: -12.13038444519043
    8. ' ' → logprob: -12.38038444519043
    9. ' droite' → logprob: -12.38038444519043
    10. '1' → logprob: -12.75538444519043

Token 459: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.08337759971618652
    2. 'c' → logprob: -2.9583775997161865
    3. 'placement' → logprob: -4.208377838134766
    4. '>>' → logprob: -4.583377838134766
    5. 'n' → logprob: -6.583377838134766
    6. 'x' → logprob: -8.333377838134766
    7. 'f' → logprob: -8.333377838134766
    8. 'cale' → logprob: -8.458377838134766
    9. '```' → logprob: -8.708377838134766
    10. '>' → logprob: -8.958377838134766

Token 460: 'age' (ID: 477)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -1.5723724365234375
    2. 'n' → logprob: -1.6973724365234375
    3. ' n' → logprob: -1.8223724365234375
    4. '   ' → logprob: -1.9473724365234375
    5. '>>' → logprob: -2.0723724365234375
    6. 'r' → logprob: -3.0723724365234375
    7. 'age' → logprob: -3.1973724365234375
    8. 'it' → logprob: -4.0723724365234375
    9. 'x' → logprob: -4.1973724365234375
    10. ' right' → logprob: -4.6973724365234375

Token 461: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.287115216255188
    2. '>>' → logprob: -2.1621150970458984
    3. ' n' → logprob: -2.2871150970458984
    4. ' >>=' → logprob: -3.5371150970458984
    5. ' right' → logprob: -7.162115097045898
    6. '=' → logprob: -7.287115097045898
    7. ' ' → logprob: -7.537115097045898
    8. ' >>' → logprob: -7.787115097045898
    9. '   ' → logprob: -8.287115097045898
    10. '>' → logprob: -8.412115097045898

Token 462: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.36588969826698303
    2. '1' → logprob: -2.11588978767395
    3. 'right' → logprob: -2.36588978767395
    4. 'dro' → logprob: -2.86588978767395
    5. ' droit' → logprob: -4.490889549255371
    6. ' right' → logprob: -4.990889549255371
    7. 'd' → logprob: -5.240889549255371
    8. ' ' → logprob: -5.865889549255371
    9. 'r' → logprob: -5.990889549255371
    10. 'n' → logprob: -6.365889549255371

Token 463: ')
' (ID: 446)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39114177227020264
    2. ')' → logprob: -1.3911417722702026
    3. ' n' → logprob: -2.891141891479492
    4. ')
' → logprob: -4.391141891479492
    5. ')n' → logprob: -5.641141891479492
    6. '>>' → logprob: -7.516141891479492
    7. ' )' → logprob: -7.516141891479492
    8. ',' → logprob: -7.766141891479492
    9. '>>>' → logprob: -8.266141891479492
    10. '>' → logprob: -8.391141891479492

Token 464: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5768397450447083
    2. ' n' → logprob: -0.8268397450447083
    3. '       ' → logprob: -7.451839923858643
    4. '   ' → logprob: -8.076839447021484
    5. '	n' → logprob: -11.951839447021484
    6. ' 
' → logprob: -14.576839447021484
    7. '(n' → logprob: -14.701839447021484
    8. ',n' → logprob: -14.951839447021484
    9. ' ' → logprob: -15.701839447021484
    10. '```' → logprob: -15.701839447021484

Token 465: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06197172403335571
    2. 'n' (adapté à ' n') → logprob: -2.811971664428711
    3. '   ' → logprob: -13.061971664428711
    4. '       ' → logprob: -13.561971664428711
    5. '	n' → logprob: -14.311971664428711
    6. '    ' → logprob: -16.81197166442871
    7. ' ' → logprob: -17.31197166442871
    8. '(n' → logprob: -17.93697166442871
    9. ',n' → logprob: -18.06197166442871
    10. '_n' → logprob: -18.31197166442871

Token 466: ' >>=' (ID: 81952)
  Prédit: ' >>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.3653915822505951
    2. '>>' → logprob: -1.2403916120529175
    3. '=' → logprob: -4.240391731262207
    4. '//=' → logprob: -6.115391731262207
    5. ' =' → logprob: -9.240391731262207
    6. ' >>' → logprob: -9.740391731262207
    7. '>' → logprob: -11.365391731262207
    8. ' //' → logprob: -11.740391731262207
    9. ' <<=' → logprob: -12.115391731262207
    10. '>>>' → logprob: -12.490391731262207

Token 467: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -18.375009536743164
    4. '   ' → logprob: -19.500009536743164
    5. ' ' → logprob: -20.125009536743164
    6. '１' → logprob: -20.375009536743164
    7. '' → logprob: -20.625009536743164
    8. '۱' → logprob: -21.312509536743164
    9. '
' → logprob: -22.062509536743164
    10. '  ' → logprob: -22.125009536743164

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -22.25
    6. '0' → logprob: -22.625
    7. '
' → logprob: -22.75
    8. '' → logprob: -23.0
    9. '۱' → logprob: -23.375
    10. '01' → logprob: -23.625

Token 469: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6381127834320068
    2. '   ' → logprob: -1.5131127834320068
    3. '<|end|>' → logprob: -1.6381127834320068
    4. ' return' → logprob: -3.888112783432007
    5. '	return' → logprob: -4.388113021850586
    6. 'return' → logprob: -4.513113021850586
    7. '    
' → logprob: -5.013113021850586
    8. ' 
' → logprob: -6.138113021850586
    9. '	
' → logprob: -7.013113021850586
    10. '  
' → logprob: -7.138113021850586

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7364453077316284
    2. '<|end|>' → logprob: -0.7364453077316284
    3. 'return' → logprob: -3.861445426940918
    4. ' return' → logprob: -4.986445426940918
    5. ':return' → logprob: -5.236445426940918
    6. '\n' → logprob: -6.736445426940918
    7. '	return' → logprob: -6.861445426940918
    8. ')' → logprob: -6.986445426940918
    9. ' ' → logprob: -6.986445426940918
    10. '    
' → logprob: -7.236445426940918

Token 471: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038424599915742874
    2. 'return' → logprob: -3.288424491882324
    3. ' return' → logprob: -7.913424491882324
    4. '	return' → logprob: -11.163424491882324
    5. ':return' → logprob: -13.413424491882324
    6. '       ' → logprob: -14.788424491882324
    7. '    
' → logprob: -14.913424491882324
    8. ' ' → logprob: -14.913424491882324
    9. '  ' → logprob: -15.538424491882324
    10. '{return' → logprob: -15.788424491882324

Token 472: ' Après' (ID: 47562)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0021904718596488237
    2. '   ' → logprob: -6.252190589904785
    3. ' return' → logprob: -8.252190589904785
    4. 'ret' → logprob: -14.627190589904785
    5. '    
' → logprob: -15.377190589904785
    6. ' ' → logprob: -15.627190589904785
    7. '	return' → logprob: -16.62718963623047
    8. ':return' → logprob: -16.75218963623047
    9. '       ' → logprob: -16.87718963623047
    10. '
' → logprob: -17.37718963623047

Token 473: ' avoir' (ID: 16595)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9113820791244507
    2. 'return' → logprob: -1.2863820791244507
    3. ' la' → logprob: -1.4113820791244507
    4. 'le' → logprob: -3.2863821983337402
    5. ' le' → logprob: -3.6613821983337402
    6. ' return' → logprob: -5.28638219833374
    7. 'fin' → logprob: -6.16138219833374
    8. '#' → logprob: -6.41138219833374
    9. 'ret' → logprob: -6.66138219833374
    10. 'l' → logprob: -6.91138219833374

Token 474: ' traité' (ID: 160836)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.19719471037387848
    2. 'return' → logprob: -1.8221946954727173
    3. 'ren' → logprob: -4.197194576263428
    4. ' retourn' → logprob: -6.322194576263428
    5. ' ren' → logprob: -9.197195053100586
    6. ' return' → logprob: -9.197195053100586
    7. '#' → logprob: -9.447195053100586
    8. 'calcul' → logprob: -9.447195053100586
    9. 're' → logprob: -10.947195053100586
    10. 'termin' → logprob: -11.322195053100586

Token 475: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3366583585739136
    2. 'tout' → logprob: -1.7116583585739136
    3. ' n' → logprob: -3.211658477783203
    4. ' tous' → logprob: -3.836658477783203
    5. ' toutes' → logprob: -4.461658477783203
    6. 't' → logprob: -4.586658477783203
    7. 'la' → logprob: -4.586658477783203
    8. 'le' → logprob: -5.711658477783203
    9. ' la' → logprob: -6.211658477783203
    10. ' tout' → logprob: -6.336658477783203

Token 476: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5363112092018127
    2. 'les' → logprob: -0.9113112092018127
    3. '<|end|>' → logprob: -5.161311149597168
    4. ' ' → logprob: -6.411311149597168
    5. ' bits' → logprob: -6.661311149597168
    6. 'bits' → logprob: -7.036311149597168
    7. ' l' → logprob: -7.161311149597168
    8. 'l' → logprob: -7.661311149597168
    9. 'le' → logprob: -7.661311149597168
    10. ' la' → logprob: -8.036311149597168

Token 477: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.008756854571402073
    2. ' bits' → logprob: -4.758756637573242
    3. 'bit' → logprob: -9.133756637573242
    4. 'b' → logprob: -10.508756637573242
    5. 'n' → logprob: -12.758756637573242
    6. ' bit' → logprob: -13.258756637573242
    7. '_bits' → logprob: -14.258756637573242
    8. 'tokens' → logprob: -14.383756637573242
    9. ' ' → logprob: -14.633756637573242
    10. 'steps' → logprob: -16.008756637573242

Token 478: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6427623629570007
    2. '   ' → logprob: -0.7677623629570007
    3. ' return' → logprob: -5.392762184143066
    4. 'return' → logprob: -5.517762184143066
    5. ' ,' → logprob: -7.267762184143066
    6. ' de' → logprob: -7.517762184143066
    7. ' of' → logprob: -9.642762184143066
    8. ',
' → logprob: -9.767762184143066
    9. 'de' → logprob: -9.767762184143066
    10. ' ' → logprob: -10.142762184143066

Token 479: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25472649931907654
    2. 'l' → logprob: -1.504726529121399
    3. ' n' → logprob: -6.379726409912109
    4. ' l' → logprob: -7.004726409912109
    5. 'la' → logprob: -9.12972640991211
    6. 'ex' → logprob: -10.25472640991211
    7. 'x' → logprob: -11.37972640991211
    8. ' ' → logprob: -11.50472640991211
    9. ' la' → logprob: -11.87972640991211
    10. '#' → logprob: -13.12972640991211

Token 480: ''ex' (ID: 23472)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.09043857455253601
    2. ''ex' → logprob: -2.4654386043548584
    3. '_ex' → logprob: -7.340438365936279
    4. 'expo' → logprob: -7.965438365936279
    5. ' expos' → logprob: -8.840438842773438
    6. 'n' → logprob: -9.090438842773438
    7. 'exp' → logprob: -9.215438842773438
    8. ' exponent' → logprob: -9.715438842773438
    9. '’ex' → logprob: -10.215438842773438
    10. ''exp' → logprob: -11.340438842773438

Token 481: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10548330098390579
    2. 'p' → logprob: -2.855483293533325
    3. 'ponent' → logprob: -3.230483293533325
    4. 'posé' → logprob: -5.855483531951904
    5. 'pon' → logprob: -8.855483055114746
    6. 'pont' → logprob: -11.980483055114746
    7. 'écution' → logprob: -12.480483055114746
    8. '```' → logprob: -12.730483055114746
    9. '**' → logprob: -12.855483055114746
    10. '<p' → logprob: -12.980483055114746

Token 482: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0472332164645195
    2. 'ant' → logprob: -3.5472331047058105
    3. 'ponent' → logprob: -5.1722331047058105
    4. 'p' → logprob: -5.7972331047058105
    5. 'é' → logprob: -5.9222331047058105
    6. 'ént' → logprob: -7.0472331047058105
    7. 'ément' → logprob: -7.4222331047058105
    8. 'onent' → logprob: -7.4222331047058105
    9. 'nent' → logprob: -7.5472331047058105
    10. 'n' → logprob: -7.5472331047058105

Token 483: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16240902245044708
    2. 'return' → logprob: -2.4124090671539307
    3. ',' → logprob: -3.1624090671539307
    4. ' return' → logprob: -4.037408828735352
    5. ':return' → logprob: -9.037408828735352
    6. '	return' → logprob: -9.787408828735352
    7. '    
' → logprob: -10.287408828735352
    8. ',
' → logprob: -10.412408828735352
    9. ' ,' → logprob: -10.412408828735352
    10. ' ' → logprob: -10.787408828735352

Token 484: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002489423204679042
    2. '   ' → logprob: -8.500248908996582
    3. ' return' → logprob: -10.000248908996582
    4. '	return' → logprob: -17.7502498626709
    5. 'ret' → logprob: -18.3752498626709
    6. ':return' → logprob: -18.8752498626709
    7. ' ' → logprob: -19.5002498626709
    8. '       ' → logprob: -20.2502498626709
    9. '{return' → logprob: -20.2502498626709
    10. '  ' → logprob: -20.3752498626709

Token 485: ' contient' (ID: 89067)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024492591619491577
    2. ':return' → logprob: -4.7744927406311035
    3. ' return' → logprob: -5.1494927406311035
    4. '   ' → logprob: -6.1494927406311035
    5. '<|end|>' → logprob: -6.2744927406311035
    6. '#' → logprob: -6.7744927406311035
    7. 'eturn' → logprob: -7.0244927406311035
    8. 'returns' → logprob: -7.3994927406311035
    9. '[' → logprob: -7.5244927406311035
    10. ' is' → logprob: -8.149492263793945

Token 486: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5356805920600891
    2. 'la' → logprob: -0.9106805920600891
    3. 'l' → logprob: -4.660680770874023
    4. 'x' → logprob: -6.785680770874023
    5. 'le' → logprob: -7.410680770874023
    6. ' l' → logprob: -7.660680770874023
    7. 'the' → logprob: -8.285680770874023
    8. ' the' → logprob: -8.660680770874023
    9. ' ' → logprob: -9.160680770874023
    10. 'result' → logprob: -9.410680770874023

Token 487: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.35439637303352356
    2. 'rés' → logprob: -1.2293963432312012
    3. 'result' → logprob: -5.479396343231201
    4. ' resultat' → logprob: -7.479396343231201
    5. 'mat' → logprob: -7.854396343231201
    6. 'r' → logprob: -8.60439682006836
    7. 'x' → logprob: -8.97939682006836
    8. ' produit' → logprob: -9.22939682006836
    9. ' result' → logprob: -9.85439682006836
    10. 'Rés' → logprob: -9.85439682006836

Token 488: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001034714630804956
    2. 'return' → logprob: -7.501034736633301
    3. ' return' → logprob: -8.5010347366333
    4. '    
' → logprob: -8.6260347366333
    5. '
' → logprob: -9.7510347366333
    6. '	return' → logprob: -11.5010347366333
    7. ' ' → logprob: -12.1260347366333
    8. '  ' → logprob: -12.3760347366333
    9. ',' → logprob: -12.6260347366333
    10. '<|end|>' → logprob: -12.6260347366333

Token 489: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028946425300091505
    2. ' return' → logprob: -9.250289916992188
    3. 'return' → logprob: -9.625289916992188
    4. '    
' → logprob: -9.875289916992188
    5. '
' → logprob: -10.000289916992188
    6. '	return' → logprob: -10.750289916992188
    7. ':return' → logprob: -12.750289916992188
    8. '<|end|>' → logprob: -13.000289916992188
    9. '  ' → logprob: -14.500289916992188
    10. '   
' → logprob: -14.625289916992188

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022010602697264403
    2. 'return' → logprob: -8.75022029876709
    3. ' return' → logprob: -9.75022029876709
    4. '	return' → logprob: -13.00022029876709
    5. ':return' → logprob: -14.50022029876709
    6. '    
' → logprob: -15.37522029876709
    7. '   ' → logprob: -16.250219345092773
    8. '       ' → logprob: -16.500219345092773
    9. '{return' → logprob: -17.250219345092773
    10. '  ' → logprob: -17.375219345092773

Token 491: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06670564413070679
    2. ' return' → logprob: -3.3167057037353516
    3. '   ' → logprob: -3.5667057037353516
    4. '	return' → logprob: -12.191705703735352
    5. ':return' → logprob: -13.441705703735352
    6. ' ' → logprob: -13.566705703735352
    7. '  ' → logprob: -14.816705703735352
    8. '_return' → logprob: -16.31670570373535
    9. '{return' → logprob: -16.31670570373535
    10. '    
' → logprob: -16.44170570373535

Token 492: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007099286303855479
    2. ' y' → logprob: -7.2507100105285645
    3. '	y' → logprob: -18.375709533691406
    4. '[y' → logprob: -20.000709533691406
    5. '   ' → logprob: -20.875709533691406
    6. '(y' → logprob: -21.000709533691406
    7. ' ' → logprob: -22.000709533691406
    8. ''y' → logprob: -22.500709533691406
    9. ' ' → logprob: -22.875709533691406
    10. '
' → logprob: -23.375709533691406

Token 493: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06883915513753891
    2. '<|end|>' → logprob: -3.6938390731811523
    3. ':' → logprob: -4.693839073181152
    4. '```' → logprob: -4.943839073181152
    5. '#' → logprob: -4.943839073181152
    6. '
' → logprob: -5.193839073181152
    7. '[' → logprob: -5.818839073181152
    8. '\' → logprob: -6.693839073181152
    9. ':def' → logprob: -6.693839073181152
    10. ' def' → logprob: -6.693839073181152

Token 495: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0445127372804563e-05
    2. '#' → logprob: -12.12501049041748
    3. 'd' → logprob: -13.00001049041748
    4. ' def' → logprob: -13.12501049041748
    5. '[' → logprob: -15.25001049041748
    6. 'de' → logprob: -15.37501049041748
    7. '(' → logprob: -15.75001049041748
    8. '```' → logprob: -18.000009536743164
    9. ' ' → logprob: -18.250009536743164
    10. 'import' → logprob: -18.375009536743164

Token 496: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.994086627149954e-05
    2. '#' → logprob: -10.000080108642578
    3. 'fin' → logprob: -11.000080108642578
    4. 'def' → logprob: -11.125080108642578
    5. '```' → logprob: -13.250080108642578
    6. 'fn' → logprob: -14.625080108642578
    7. 'fen' → logprob: -15.875080108642578
    8. 'fl' → logprob: -15.875080108642578
    9. '[' → logprob: -16.125080108642578
    10. 'ff' → logprob: -16.250080108642578

Token 497: 'ition' (ID: 868)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0443270169198513
    2. 'def' → logprob: -3.1693270206451416
    3. 'inition' → logprob: -7.6693267822265625
    4. ' def' → logprob: -8.419326782226562
    5. 'ition' → logprob: -8.544326782226562
    6. '#' → logprob: -8.544326782226562
    7. 'e' → logprob: -9.794326782226562
    8. '_f' → logprob: -10.294326782226562
    9. '```' → logprob: -10.419326782226562
    10. 'ir' → logprob: -10.919326782226562

Token 498: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010402344167232513
    2. ' def' → logprob: -4.635402202606201
    3. '(' → logprob: -8.13540267944336
    4. '#' → logprob: -9.13540267944336
    5. '_' → logprob: -10.01040267944336
    6. ' ' → logprob: -10.51040267944336
    7. '[' → logprob: -10.51040267944336
    8. '(x' → logprob: -11.01040267944336
    9. '```' → logprob: -11.13540267944336
    10. 'import' → logprob: -11.38540267944336

Token 499: ''une' (ID: 13337)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031760167330503464
    2. 'ef' → logprob: -4.406760215759277
    3. 'une' → logprob: -4.906760215759277
    4. 'éf' → logprob: -5.406760215759277
    5. ''une' → logprob: -6.531760215759277
    6. '#' → logprob: -6.781760215759277
    7. 'f' → logprob: -7.031760215759277
    8. '_' → logprob: -7.281760215759277
    9. ' def' → logprob: -7.281760215759277
    10. '[' → logprob: -8.406760215759277

Token 500: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.127333340875339e-06
    2. 'mat' → logprob: -13.125003814697266
    3. ' def' → logprob: -13.625003814697266
    4. '#' → logprob: -14.625003814697266
    5. 'fonction' → logprob: -16.250003814697266
    6. 'function' → logprob: -16.625003814697266
    7. '_def' → logprob: -16.750003814697266
    8. 'ndef' → logprob: -17.125003814697266
    9. 'matrix' → logprob: -17.375003814697266
    10. ':def' → logprob: -17.500003814697266

Token 501: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014862968819215894
    2. ' def' → logprob: -6.876486301422119
    3. '_mat' → logprob: -9.501485824584961
    4. 'mat' → logprob: -9.626485824584961
    5. '(' → logprob: -9.876485824584961
    6. '#' → logprob: -10.126485824584961
    7. '_def' → logprob: -10.376485824584961
    8. ' for' → logprob: -10.501485824584961
    9. '(mat' → logprob: -10.501485824584961
    10. '```' → logprob: -10.501485824584961

Token 502: ' effectuer' (ID: 98625)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.013788160867989063
    2. 'def' → logprob: -5.138788223266602
    3. ' mat' → logprob: -5.263788223266602
    4. 'mult' → logprob: -6.138788223266602
    5. 'mul' → logprob: -8.638788223266602
    6. ' matr' → logprob: -9.388788223266602
    7. '(mat' → logprob: -9.888788223266602
    8. ' multipl' → logprob: -10.013788223266602
    9. 'multip' → logprob: -10.138788223266602
    10. ' la' → logprob: -10.513788223266602

Token 503: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14939166605472565
    2. 'la' → logprob: -2.3993916511535645
    3. 'mat' → logprob: -3.1493916511535645
    4. ' la' → logprob: -5.3993916511535645
    5. '(mat' → logprob: -8.149392127990723
    6. '#' → logprob: -8.899392127990723
    7. 'matrix' → logprob: -9.774392127990723
    8. 'une' → logprob: -10.399392127990723
    9. ' mat' → logprob: -11.524392127990723
    10. 'l' → logprob: -11.899392127990723

Token 504: ' multiplication' (ID: 86340)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.47492149472236633
    2. 'def' → logprob: -0.974921464920044
    3. 'mul' → logprob: -8.224921226501465
    4. 'multip' → logprob: -8.599921226501465
    5. 'mult' → logprob: -8.974921226501465
    6. ' mat' → logprob: -8.974921226501465
    7. 'matrix' → logprob: -9.724921226501465
    8. ' matr' → logprob: -11.224921226501465
    9. ' multiplication' → logprob: -11.349921226501465
    10. ' def' → logprob: -11.724921226501465

Token 505: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011007972061634064
    2. '(x' → logprob: -5.636007785797119
    3. 'mat' → logprob: -5.886007785797119
    4. 'de' → logprob: -6.511007785797119
    5. 'des' → logprob: -6.511007785797119
    6. '(mat' → logprob: -7.261007785797119
    7. '_mat' → logprob: -7.886007785797119
    8. '_matrix' → logprob: -9.136008262634277
    9. '(' → logprob: -9.511008262634277
    10. ' des' → logprob: -9.636008262634277

Token 506: ' matrices' (ID: 75935)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20123769342899323
    2. '2' → logprob: -1.951237678527832
    3. 'mat' → logprob: -3.701237678527832
    4. ' deux' → logprob: -4.826237678527832
    5. 'two' → logprob: -5.826237678527832
    6. 'def' → logprob: -6.076237678527832
    7. '```' → logprob: -7.826237678527832
    8. '(x' → logprob: -8.201237678527832
    9. 'm' → logprob: -8.326237678527832
    10. 'Deux' → logprob: -8.576237678527832

Token 507: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06370187550783157
    2. '(x' → logprob: -2.813701868057251
    3. '(a' → logprob: -7.68870210647583
    4. '(mat' → logprob: -7.68870210647583
    5. '3' → logprob: -8.063701629638672
    6. '(' → logprob: -8.813701629638672
    7. ' (' → logprob: -9.313701629638672
    8. '(m' → logprob: -9.938701629638672
    9. 'mat' → logprob: -10.063701629638672
    10. ' def' → logprob: -10.313701629638672

Token 508: ' M' (ID: 391)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6394866108894348
    2. '(x' → logprob: -0.7644866108894348
    3. ' (' → logprob: -6.264486789703369
    4. '3' → logprob: -6.514486789703369
    5. '(mat' → logprob: -7.014486789703369
    6. 'x' → logprob: -7.264486789703369
    7. '```' → logprob: -8.014486312866211
    8. '(' → logprob: -8.014486312866211
    9. '(matrix' → logprob: -8.264486312866211
    10. '(M' → logprob: -8.764486312866211

Token 509: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4736459888808895e-05
    2. ' def' → logprob: -11.750014305114746
    3. '(def' → logprob: -12.750014305114746
    4. '```' → logprob: -13.375014305114746
    5. '(' → logprob: -14.250014305114746
    6. '(
' → logprob: -14.375014305114746
    7. '(x' → logprob: -15.000014305114746
    8. ':def' → logprob: -15.500014305114746
    9. '<|end|>' → logprob: -16.000015258789062
    10. '(defun' → logprob: -16.125015258789062

Token 510: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -18.5
    3. '```' → logprob: -21.25
    4. '
' → logprob: -21.75
    5. '#' → logprob: -21.875
    6. 'ndef' → logprob: -23.25
    7. '	def' → logprob: -23.625
    8. ':def' → logprob: -23.875
    9. '(def' → logprob: -24.125
    10. 'de' → logprob: -24.875

Token 511: ' Arguments' (ID: 63373)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.875
    3. '
' → logprob: -19.5
    4. '#' → logprob: -22.125
    5. 'de' → logprob: -22.25
    6. '```' → logprob: -23.25
    7. 'ndef' → logprob: -23.875
    8. ':def' → logprob: -24.25
    9. '	def' → logprob: -24.625
    10. '  
' → logprob: -24.75

Token 512: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20124752819538116
    2. '(x' → logprob: -1.8262475728988647
    3. ':' → logprob: -4.201247692108154
    4. ' (' → logprob: -6.326247692108154
    5. ' def' → logprob: -6.701247692108154
    6. '(mat' → logprob: -6.701247692108154
    7. ':
' → logprob: -7.076247692108154
    8. '
' → logprob: -8.326247215270996
    9. '#' → logprob: -8.576247215270996
    10. ' :' → logprob: -9.076247215270996

Token 513: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013572083844337612
    2. '#' → logprob: -9.37513542175293
    3. 'x' → logprob: -10.00013542175293
    4. '
' → logprob: -13.37513542175293
    5. 'mat' → logprob: -13.37513542175293
    6. ' def' → logprob: -13.37513542175293
    7. '```' → logprob: -15.12513542175293
    8. '(x' → logprob: -16.00013542175293
    9. 'from' → logprob: -16.00013542175293
    10. '[
' → logprob: -16.25013542175293

Token 514: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09573543071746826
    2. 'x' → logprob: -2.470735549926758
    3. ' def' → logprob: -6.220735549926758
    4. ' x' → logprob: -6.345735549926758
    5. 'mat' → logprob: -6.345735549926758
    6. '#' → logprob: -7.595735549926758
    7. '(x' → logprob: -8.470735549926758
    8. '
' → logprob: -8.470735549926758
    9. ' mat' → logprob: -9.595735549926758
    10. 'a' → logprob: -9.720735549926758

Token 515: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008953598327934742
    2. 'x' → logprob: -5.38395357131958
    3. 'A' → logprob: -5.50895357131958
    4. 'def' → logprob: -8.508954048156738
    5. '#' → logprob: -10.258954048156738
    6. 'mat' → logprob: -11.133954048156738
    7. 'm' → logprob: -12.508954048156738
    8. '(a' → logprob: -12.633954048156738
    9. 'p' → logprob: -13.008954048156738
    10. ' a' → logprob: -13.008954048156738

Token 516: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049836382269859314
    2. ' =' → logprob: -3.4248363971710205
    3. ' ,' → logprob: -4.424836158752441
    4. 'def' → logprob: -6.424836158752441
    5. '=' → logprob: -6.799836158752441
    6. ',a' → logprob: -7.924836158752441
    7. ',b' → logprob: -8.174836158752441
    8. 'a' → logprob: -8.299836158752441
    9. ' def' → logprob: -9.424836158752441
    10. ')' → logprob: -9.799836158752441

Token 517: ' matr' (ID: 25095)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11688463389873505
    2. 'list' → logprob: -2.366884708404541
    3. '[[' → logprob: -5.741884708404541
    4. 'def' → logprob: -5.866884708404541
    5. ' a' → logprob: -6.241884708404541
    6. '[a' → logprob: -6.491884708404541
    7. 'matrix' → logprob: -6.616884708404541
    8. ' list' → logprob: -6.616884708404541
    9. 'List' → logprob: -6.741884708404541
    10. '[
' → logprob: -6.866884708404541

Token 518: 'ice' (ID: 603)
  Prédit: 'atrice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.488625705242157
    2. 'ix' → logprob: -2.4886257648468018
    3. 'atrix' → logprob: -2.4886257648468018
    4. '[[' → logprob: -2.8636257648468018
    5. 'ice' → logprob: -2.9886257648468018
    6. '[' → logprob: -3.2386257648468018
    7. 'ices' → logprob: -3.4886257648468018
    8. 'a' → logprob: -4.738625526428223
    9. 'atrices' → logprob: -4.988625526428223
    10. 'at' → logprob: -5.238625526428223

Token 519: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.45282915234565735
    2. 'int' → logprob: -1.202829122543335
    3. '3' → logprob: -3.577829122543335
    4. 'size' → logprob: -3.952829122543335
    5. 'dimension' → logprob: -5.077829360961914
    6. 't' → logprob: -5.577829360961914
    7. 'list' → logprob: -5.827829360961914
    8. ' taille' → logprob: -7.452829360961914
    9. '[[' → logprob: -7.452829360961914
    10. 'type' → logprob: -7.577829360961914

Token 521: ' (' (ID: 350)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.015383790247142315
    2. '[' → logprob: -4.390383720397949
    3. '[[' → logprob: -7.140383720397949
    4. '[
' → logprob: -7.265383720397949
    5. 'def' → logprob: -7.515383720397949
    6. ' ' → logprob: -7.890383720397949
    7. 'len' → logprob: -9.76538372039795
    8. ',' → logprob: -9.89038372039795
    9. '[][]' → logprob: -10.14038372039795
    10. ')' → logprob: -10.26538372039795

Token 522: 'I' (ID: 40)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002930366899818182
    2. 'len' → logprob: -8.250292778015137
    3. ' ' → logprob: -10.875292778015137
    4. ')' → logprob: -11.875292778015137
    5. ' len' → logprob: -12.625292778015137
    6. '[' → logprob: -14.250292778015137
    7. '[len' → logprob: -14.500292778015137
    8. '[
' → logprob: -14.625292778015137
    9. 'list' → logprob: -15.375292778015137
    10. '(len' → logprob: -15.750292778015137

Token 523: ' x' (ID: 1215)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.27476364374160767
    2. ',' → logprob: -2.774763584136963
    3. ')' → logprob: -3.149763584136963
    4. ' ' → logprob: -3.149763584136963
    5. '[' → logprob: -3.399763584136963
    6. '][' → logprob: -3.774763584136963
    7. ']' → logprob: -4.149763584136963
    8. 'n' → logprob: -4.899763584136963
    9. '   ' → logprob: -5.774763584136963
    10. ' ,' → logprob: -6.524763584136963

Token 524: ' K' (ID: 658)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00753872562199831
    2. 'len' → logprob: -5.632538795471191
    3. ' ' → logprob: -6.132538795471191
    4. 'J' → logprob: -6.632538795471191
    5. ' len' → logprob: -8.257538795471191
    6. ' J' → logprob: -9.882538795471191
    7. 'j' → logprob: -10.257538795471191
    8. '  ' → logprob: -10.757538795471191
    9. '   ' → logprob: -10.882538795471191
    10. ')' → logprob: -11.257538795471191

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005309535190463066
    2. ')
' → logprob: -5.880309581756592
    3. '),' → logprob: -6.755309581756592
    4. ',' → logprob: -7.880309581756592
    5. ' )' → logprob: -7.880309581756592
    6. '[' → logprob: -8.630309104919434
    7. ' ' → logprob: -9.630309104919434
    8. '3' → logprob: -9.755309104919434
    9. 'a' → logprob: -10.005309104919434
    10. '),
' → logprob: -10.630309104919434

Token 526: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45840033888816833
    2. '#' → logprob: -1.7084003686904907
    3. 'def' → logprob: -2.208400249481201
    4. '   ' → logprob: -2.833400249481201
    5. ' ' → logprob: -5.083400249481201
    6. ' b' → logprob: -5.333400249481201
    7. ',' → logprob: -5.958400249481201
    8. '  ' → logprob: -6.958400249481201
    9. '[' → logprob: -7.208400249481201
    10. ' #' → logprob: -7.583400249481201

Token 527: '  ' (ID: 256)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08662216365337372
    2. ' b' → logprob: -2.7116222381591797
    3. '   ' → logprob: -4.58662223815918
    4. '[' → logprob: -6.08662223815918
    5. 'def' → logprob: -6.33662223815918
    6. '[
' → logprob: -6.83662223815918
    7. ',' → logprob: -7.58662223815918
    8. '  ' → logprob: -8.46162223815918
    9. ' ' → logprob: -9.08662223815918
    10. ' [
' → logprob: -9.71162223815918

Token 528: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.004623203072696924
    2. ' b' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.754623413085938
    4. ' ' → logprob: -14.754623413085938
    5. '[
' → logprob: -14.879623413085938
    6. 'k' → logprob: -15.004623413085938
    7. '[' → logprob: -15.129623413085938
    8. 'a' → logprob: -15.629623413085938
    9. '	b' → logprob: -15.629623413085938
    10. '  ' → logprob: -16.254623413085938

Token 529: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1321972608566284
    2. ' :' → logprob: -1.1321972608566284
    3. ':' → logprob: -1.3821972608566284
    4. '=' → logprob: -3.007197380065918
    5. ',' → logprob: -3.257197380065918
    6. ')' → logprob: -5.507197380065918
    7. '   ' → logprob: -5.632197380065918
    8. '[' → logprob: -6.132197380065918
    9. ' ' → logprob: -6.382197380065918
    10. ' (' → logprob: -6.632197380065918

Token 530: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.4375980794429779
    2. ' matr' → logprob: -1.3125981092453003
    3. '[[' → logprob: -3.5625979900360107
    4. 'matrix' → logprob: -4.06259822845459
    5. 'def' → logprob: -4.43759822845459
    6. 'b' → logprob: -5.06259822845459
    7. '[' → logprob: -5.56259822845459
    8. 'k' → logprob: -5.81259822845459
    9. ' def' → logprob: -6.18759822845459
    10. ' matrix' → logprob: -6.56259822845459

Token 531: 'ice' (ID: 603)
  Prédit: 'atrice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.440751850605011
    2. 'ix' → logprob: -2.815751791000366
    3. 'ices' → logprob: -2.940751791000366
    4. '[' → logprob: -2.940751791000366
    5. 'x' → logprob: -3.565751791000366
    6. 'at' → logprob: -3.690751791000366
    7. 'atrix' → logprob: -3.690751791000366
    8. 'ult' → logprob: -4.065752029418945
    9. 'atrices' → logprob: -4.190752029418945
    10. 'ul' → logprob: -4.190752029418945

Token 532: ' de' (ID: 334)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.9025630354881287
    2. ' de' → logprob: -2.0275630950927734
    3. 'de' → logprob: -2.0275630950927734
    4. 'def' → logprob: -2.5275630950927734
    5. '(K' → logprob: -2.5275630950927734
    6. '(' → logprob: -3.2775630950927734
    7. '   ' → logprob: -3.9025630950927734
    8. ' (' → logprob: -4.277563095092773
    9. ' ' → logprob: -4.527563095092773
    10. '#' → logprob: -4.527563095092773

Token 533: ' taille' (ID: 41644)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.28913894295692444
    2. 'tail' → logprob: -2.1641390323638916
    3. '(' → logprob: -2.9141390323638916
    4. '(K' → logprob: -3.2891390323638916
    5. 'size' → logprob: -3.4141390323638916
    6. ' taille' → logprob: -5.2891387939453125
    7. ' (' → logprob: -6.4141387939453125
    8. ' K' → logprob: -6.7891387939453125
    9. '(int' → logprob: -7.5391387939453125
    10. 'len' → logprob: -7.5391387939453125

Token 534: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.005014344118535519
    2. '(' → logprob: -5.505014419555664
    3. ' (' → logprob: -7.130014419555664
    4. '(k' → logprob: -10.005014419555664
    5. '(len' → logprob: -10.630014419555664
    6. ')' → logprob: -10.630014419555664
    7. '(J' → logprob: -11.255014419555664
    8. ' ' → logprob: -12.255014419555664
    9. '((' → logprob: -12.505014419555664
    10. '(L' → logprob: -12.880014419555664

Token 535: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0041371723636984825
    2. '3' → logprob: -5.87913703918457
    3. 'len' → logprob: -7.12913703918457
    4. ' K' → logprob: -8.00413703918457
    5. ')' → logprob: -9.37913703918457
    6. ' len' → logprob: -10.25413703918457
    7. 'k' → logprob: -10.75413703918457
    8. ' ' → logprob: -11.00413703918457
    9. '(len' → logprob: -11.50413703918457
    10. '(' → logprob: -12.25413703918457

Token 536: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20190131664276123
    2. 'x' → logprob: -1.7019013166427612
    3. '×' → logprob: -8.82690143585205
    4. ',' → logprob: -8.82690143585205
    5. '[' → logprob: -9.82690143585205
    6. ')' → logprob: -10.20190143585205
    7. ' ' → logprob: -10.82690143585205
    8. '#' → logprob: -11.07690143585205
    9. ' ' → logprob: -11.45190143585205
    10. '*' → logprob: -11.70190143585205

Token 537: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -7.874882430769503e-05
    2. ' J' → logprob: -9.625079154968262
    3. 'K' → logprob: -11.625079154968262
    4. '3' → logprob: -13.125079154968262
    5. 'N' → logprob: -14.125079154968262
    6. 'I' → logprob: -15.500079154968262
    7. '   ' → logprob: -15.625079154968262
    8. ' ' → logprob: -15.750079154968262
    9. '  ' → logprob: -16.500078201293945
    10. 'j' → logprob: -16.625078201293945

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003187459195032716
    2. ')
' → logprob: -5.753187656402588
    3. ' )' → logprob: -12.25318717956543
    4. ')
' → logprob: -13.25318717956543
    5. ')#' → logprob: -13.87818717956543
    6. '#' → logprob: -14.25318717956543
    7. ')

' → logprob: -14.87818717956543
    8. '):
' → logprob: -14.87818717956543
    9. 'def' → logprob: -15.62818717956543
    10. ' )
' → logprob: -16.00318717956543

Token 539: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -14.500000953674316
    3. '
' → logprob: -14.625000953674316
    4. '[' → logprob: -18.000001907348633
    5. '#' → logprob: -18.375001907348633
    6. '[
' → logprob: -18.875001907348633
    7. ' 
' → logprob: -19.125001907348633
    8. ':def' → logprob: -19.500001907348633
    9. '  
' → logprob: -19.625001907348633
    10. ')' → logprob: -20.375001907348633

Token 540: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016301481809932739
    2. ' def' → logprob: -8.875163078308105
    3. '   ' → logprob: -11.750163078308105
    4. '[' → logprob: -11.875163078308105
    5. ')' → logprob: -13.000163078308105
    6. '[
' → logprob: -13.125163078308105
    7. ' 
' → logprob: -13.375163078308105
    8. '
' → logprob: -14.125163078308105
    9. ' ' → logprob: -14.875163078308105
    10. '```' → logprob: -15.250163078308105

Token 541: ' Rés' (ID: 104378)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008645339403301477
    2. ' def' → logprob: -8.25086498260498
    3. 'c' → logprob: -8.37586498260498
    4. '#' → logprob: -8.87586498260498
    5. 'I' → logprob: -9.75086498260498
    6. '
' → logprob: -9.87586498260498
    7. 'K' → logprob: -10.12586498260498
    8. 'J' → logprob: -10.75086498260498
    9. 'M' → logprob: -11.25086498260498
    10. 'result' → logprob: -11.37586498260498

Token 542: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.6343091726303101
    2. 'ult' → logprob: -0.7593091726303101
    3. 'def' → logprob: -7.0093092918396
    4. '#' → logprob: -7.6343092918396
    5. 'a' → logprob: -8.759308815002441
    6. 'ul' → logprob: -10.384308815002441
    7. 'ulti' → logprob: -10.884308815002441
    8. '   ' → logprob: -11.134308815002441
    9. 'ULT' → logprob: -11.259308815002441
    10. 'u' → logprob: -11.259308815002441

Token 543: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012515892274677753
    2. ' =' → logprob: -5.137516021728516
    3. '=' → logprob: -5.387516021728516
    4. ':' → logprob: -6.512516021728516
    5. ' def' → logprob: -8.012516021728516
    6. '#' → logprob: -9.512516021728516
    7. ':def' → logprob: -10.387516021728516
    8. ' :' → logprob: -10.637516021728516
    9. ' ' → logprob: -11.637516021728516
    10. '=
' → logprob: -11.762516021728516

Token 544: ' matr' (ID: 25095)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8664756417274475
    2. '[[' → logprob: -1.1164755821228027
    3. ' [[' → logprob: -1.4914755821228027
    4. '[' → logprob: -4.616475582122803
    5. ' def' → logprob: -5.366475582122803
    6. ' c' → logprob: -5.991475582122803
    7. ' [' → logprob: -6.116475582122803
    8. 'c' → logprob: -6.116475582122803
    9. '[
' → logprob: -6.366475582122803
    10. 'result' → logprob: -6.491475582122803

Token 545: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.008596135303378105
    2. 'ix' → logprob: -4.883595943450928
    3. '[' → logprob: -7.508595943450928
    4. '#' → logprob: -9.508596420288086
    5. 'atrice' → logprob: -9.508596420288086
    6. '[[' → logprob: -10.258596420288086
    7. '   ' → logprob: -10.383596420288086
    8. 'ic' → logprob: -10.383596420288086
    9. 'ixe' → logprob: -10.383596420288086
    10. 'ices' → logprob: -10.758596420288086

Token 546: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5589781999588013
    2. 'def' → logprob: -1.8089781999588013
    3. '[' → logprob: -2.0589780807495117
    4. '(' → logprob: -3.1839780807495117
    5. '   ' → logprob: -3.4339780807495117
    6. '=' → logprob: -3.8089780807495117
    7. ' ' → logprob: -4.683978080749512
    8. ' (' → logprob: -5.058978080749512
    9. '(
' → logprob: -5.683978080749512
    10. 'result' → logprob: -5.683978080749512

Token 547: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03039456345140934
    2. '=' → logprob: -4.030394554138184
    3. '[' → logprob: -5.155394554138184
    4. '   ' → logprob: -6.155394554138184
    5. 'def' → logprob: -6.780394554138184
    6. '#' → logprob: -7.655394554138184
    7. ' ' → logprob: -7.905394554138184
    8. '[i' → logprob: -7.905394554138184
    9. ' (' → logprob: -8.030394554138184
    10. '=[' → logprob: -8.155394554138184

Token 548: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.0528741292655468
    2. 'size' → logprob: -3.4278740882873535
    3. ' taille' → logprob: -4.6778740882873535
    4. '[[' → logprob: -4.8028740882873535
    5. '[' → logprob: -7.6778740882873535
    6. 't' → logprob: -8.552874565124512
    7. 'dimension' → logprob: -8.927874565124512
    8. 'dimensions' → logprob: -9.177874565124512
    9. '[I' → logprob: -9.552874565124512
    10. 'ta' → logprob: -9.552874565124512

Token 549: ' (' (ID: 350)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.4177003800868988
    2. ' (' → logprob: -1.4177004098892212
    3. '(' → logprob: -2.4177002906799316
    4. ' =' → logprob: -5.917700290679932
    5. 'a' → logprob: -6.167700290679932
    6. '=' → logprob: -6.917700290679932
    7. ')' → logprob: -7.167700290679932
    8. ' ' → logprob: -7.792700290679932
    9. '[I' → logprob: -7.917700290679932
    10. '(i' → logprob: -8.16770076751709

Token 550: 'I' (ID: 40)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6823686361312866
    2. '3' → logprob: -1.5573686361312866
    3. 'I' → logprob: -1.5573686361312866
    4. ' len' → logprob: -2.932368755340576
    5. ' I' → logprob: -5.057368755340576
    6. ' ' → logprob: -5.557368755340576
    7. ')' → logprob: -6.057368755340576
    8. '(len' → logprob: -6.182368755340576
    9. 'a' → logprob: -6.932368755340576
    10. '[I' → logprob: -6.932368755340576

Token 551: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014752047136425972
    2. 'x' → logprob: -4.63975191116333
    3. ',' → logprob: -6.01475191116333
    4. ')' → logprob: -7.01475191116333
    5. ' ' → logprob: -7.51475191116333
    6. '[' → logprob: -8.139752388000488
    7. ' ,' → logprob: -9.014752388000488
    8. '
' → logprob: -9.389752388000488
    9. '+' → logprob: -9.639752388000488
    10. '*' → logprob: -9.764752388000488

Token 552: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.022752217948436737
    2. ' J' → logprob: -4.522752285003662
    3. 'K' → logprob: -5.022752285003662
    4. '3' → logprob: -5.397752285003662
    5. ' ' → logprob: -8.147751808166504
    6. ' K' → logprob: -9.147751808166504
    7. ')' → logprob: -9.272751808166504
    8. 'N' → logprob: -11.772751808166504
    9. '(' → logprob: -12.397751808166504
    10. 'L' → logprob: -13.022751808166504

Token 553: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12065713107585907
    2. ')
' → logprob: -2.245657205581665
    3. '):
' → logprob: -5.245656967163086
    4. ')
' → logprob: -6.745656967163086
    5. '):' → logprob: -7.495656967163086
    6. 'def' → logprob: -8.120656967163086
    7. '):
' → logprob: -9.370656967163086
    8. ')\' → logprob: -9.620656967163086
    9. '[' → logprob: -9.745656967163086
    10. ')`
' → logprob: -9.870656967163086

Token 554: ' correspondant' (ID: 146058)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -15.875
    3. '```' → logprob: -17.0
    4. ' def' → logprob: -17.375
    5. '3' → logprob: -19.625
    6. ':def' → logprob: -20.5
    7. '#' → logprob: -21.375
    8. '\' → logprob: -21.5
    9. '(def' → logprob: -21.875
    10. '  
' → logprob: -22.375

Token 555: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5273984670639038
    2. '[
' → logprob: -2.4023985862731934
    3. '   ' → logprob: -2.5273985862731934
    4. '(' → logprob: -2.7773985862731934
    5. ' à' → logprob: -2.9023985862731934
    6. '(
' → logprob: -3.2773985862731934
    7. ' (' → logprob: -4.277398586273193
    8. ' a' → logprob: -4.652398586273193
    9. '=' → logprob: -4.777398586273193
    10. '[a' → logprob: -5.027398586273193

Token 556: ' (' (ID: 350)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.015494590625166893
    2. '[' → logprob: -4.6404948234558105
    3. ' [[' → logprob: -5.7654948234558105
    4. '[
' → logprob: -6.0154948234558105
    5. ' [' → logprob: -9.890494346618652
    6. '[]' → logprob: -10.515494346618652
    7. '[i' → logprob: -10.890494346618652
    8. 'a' → logprob: -11.515494346618652
    9. 'len' → logprob: -12.265494346618652
    10. ' ' → logprob: -12.265494346618652

Token 557: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011052774265408516
    2. ' a' → logprob: -5.13605260848999
    3. 'c' → logprob: -6.51105260848999
    4. ')' → logprob: -6.51105260848999
    5. '[
' → logprob: -7.51105260848999
    6. '[' → logprob: -7.63605260848999
    7. ' ' → logprob: -8.636053085327148
    8. '   ' → logprob: -8.636053085327148
    9. '[a' → logprob: -8.761053085327148
    10. '  ' → logprob: -9.386053085327148

Token 558: ' *' (ID: 425)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2597954273223877
    2. ' *' → logprob: -1.5097954273223877
    3. ')' → logprob: -2.0097954273223877
    4. ' @' → logprob: -2.6347954273223877
    5. '[' → logprob: -3.0097954273223877
    6. ' ' → logprob: -3.0097954273223877
    7. '   ' → logprob: -3.2597954273223877
    8. '*' → logprob: -3.5097954273223877
    9. ',' → logprob: -3.7597954273223877
    10. 'def' → logprob: -4.259795188903809

Token 559: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016049854457378387
    2. ' b' → logprob: -4.141049861907959
    3. ')' → logprob: -12.0160493850708
    4. '   ' → logprob: -12.8910493850708
    5. ')b' → logprob: -12.8910493850708
    6. ' ' → logprob: -13.2660493850708
    7. 'a' → logprob: -13.8910493850708
    8. '	b' → logprob: -14.7660493850708
    9. '  ' → logprob: -15.0160493850708
    10. ',' → logprob: -16.078550338745117

Token 560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4313386082649231
    2. ')
' → logprob: -1.0563385486602783
    3. 'def' → logprob: -6.556338787078857
    4. ')
' → logprob: -7.306338787078857
    5. '   ' → logprob: -8.0563383102417
    6. ')

' → logprob: -10.1813383102417
    7. ')`
' → logprob: -10.5563383102417
    8. ',' → logprob: -10.8063383102417
    9. '):
' → logprob: -10.9313383102417
    10. '#' → logprob: -11.0563383102417

Token 561: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. '
' → logprob: -12.000006675720215
    3. ' def' → logprob: -16.6250057220459
    4. '```' → logprob: -16.6250057220459
    5. '3' → logprob: -19.7500057220459
    6. ':def' → logprob: -20.0000057220459
    7. '  
' → logprob: -20.2500057220459
    8. '#' → logprob: -20.3750057220459
    9. '\' → logprob: -20.6250057220459
    10. ' 
' → logprob: -21.0000057220459

Token 562: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3486819267272949
    2. ' M' → logprob: -1.223681926727295
    3. ' ' → logprob: -9.348682403564453
    4. '(' → logprob: -10.098682403564453
    5. '(M' → logprob: -10.223682403564453
    6. ' (' → logprob: -10.598682403564453
    7. '   ' → logprob: -11.723682403564453
    8. ' ' → logprob: -12.098682403564453
    9. '[' → logprob: -12.223682403564453
    10. 'space' → logprob: -12.723682403564453

Token 563: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.688212614681106e-05
    2. '
' → logprob: -11.000017166137695
    3. ' def' → logprob: -16.250017166137695
    4. '```' → logprob: -17.000017166137695
    5. ':def' → logprob: -19.625017166137695
    6. ' 
' → logprob: -19.750017166137695
    7. '\' → logprob: -20.125017166137695
    8. '  
' → logprob: -20.125017166137695
    9. '#' → logprob: -20.250017166137695
    10. 'c' → logprob: -20.625017166137695

Token 564: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '```' → logprob: -19.875
    3. ' def' → logprob: -20.75
    4. '
' → logprob: -21.375
    5. 'de' → logprob: -23.375
    6. 'ndef' → logprob: -24.125
    7. ':def' → logprob: -24.125
    8. '#' → logprob: -24.25
    9. '	def' → logprob: -24.625
    10. 'd' → logprob: -25.375

Token 565: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.014163747429847717
    2. ' mat' → logprob: -4.264163970947266
    3. 'def' → logprob: -15.514163970947266
    4. '	mat' → logprob: -16.389163970947266
    5. '_mat' → logprob: -17.889163970947266
    6. '(mat' → logprob: -17.889163970947266
    7. 'Mat' → logprob: -18.014163970947266
    8. 'm' → logprob: -19.264163970947266
    9. ' мат' → logprob: -19.264163970947266
    10. ' ' → logprob: -20.264163970947266

Token 566: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.875003814697266
    3. '_mat' → logprob: -14.875003814697266
    4. '_mult' → logprob: -15.000003814697266
    5. '_mux' → logprob: -15.750003814697266
    6. ' _' → logprob: -16.000003814697266
    7. '_m' → logprob: -17.750003814697266
    8. '_mu' → logprob: -18.500003814697266
    9. '_pow' → logprob: -18.625003814697266
    10. '*_' → logprob: -19.125003814697266

Token 567: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.000000953674316
    4. '(A' → logprob: -19.5
    5. '(
' → logprob: -20.125
    6. '(x' → logprob: -20.25
    7. 'a' → logprob: -20.375
    8. 'def' → logprob: -20.75
    9. '((' → logprob: -21.0
    10. '   ' → logprob: -22.375

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011856284982059151
    2. ',b' → logprob: -9.250118255615234
    3. ' ,' → logprob: -10.750118255615234
    4. ',a' → logprob: -14.375118255615234
    5. ',
' → logprob: -15.500118255615234
    6. 'b' → logprob: -15.875118255615234
    7. '   ' → logprob: -17.500118255615234
    8. '‌,' → logprob: -17.750118255615234
    9. ',c' → logprob: -18.750118255615234
    10. ' b' → logprob: -18.750118255615234

Token 569: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. '   ' → logprob: -21.12502098083496
    4. ')b' → logprob: -22.12502098083496
    5. '	b' → logprob: -22.50002098083496
    6. '<|end|>' → logprob: -23.25002098083496
    7. 'B' → logprob: -23.37502098083496
    8. '    ' → logprob: -23.50002098083496
    9. ' ' → logprob: -23.75002098083496
    10. '  ' → logprob: -23.75002098083496

Token 570: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002668192028068006
    2. '):
' → logprob: -8.250267028808594
    3. ')' → logprob: -12.375267028808594
    4. ' ):' → logprob: -14.000267028808594
    5. '):
' → logprob: -15.125267028808594
    6. ':' → logprob: -15.875267028808594
    7. '   ' → logprob: -17.500267028808594
    8. '):

' → logprob: -17.500267028808594
    9. ')：' → logprob: -19.125267028808594
    10. '}:' → logprob: -19.625267028808594

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.0339031834737398e-05
    2. 'c' → logprob: -12.000020027160645
    3. '
' → logprob: -12.375020027160645
    4. 'I' → logprob: -13.000020027160645
    5. '   ' → logprob: -13.000020027160645
    6. '    
' → logprob: -13.250020027160645
    7. '```' → logprob: -13.750020027160645
    8. '	c' → logprob: -14.625020027160645
    9. 'a' → logprob: -15.000020027160645
    10. ' c' → logprob: -15.625020027160645

Token 572: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6377522349357605
    2. 'c' → logprob: -0.7627522349357605
    3. ' c' → logprob: -6.137752056121826
    4. 'result' → logprob: -6.887752056121826
    5. ' ' → logprob: -7.262752056121826
    6. '[' → logprob: -7.762752056121826
    7. 'I' → logprob: -7.887752056121826
    8. ' result' → logprob: -8.762752532958984
    9. ' I' → logprob: -10.012752532958984
    10. 'n' → logprob: -10.137752532958984

Token 573: ' Dimensions' (ID: 50402)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.006935594137758017
    2. 'i' → logprob: -5.1319355964660645
    3. 'c' → logprob: -7.0069355964660645
    4. 'result' → logprob: -9.381935119628906
    5. ' I' → logprob: -11.756935119628906
    6. 'n' → logprob: -12.506935119628906
    7. 'res' → logprob: -13.131935119628906
    8. '   ' → logprob: -13.381935119628906
    9. '#' → logprob: -15.131935119628906
    10. 'rows' → logprob: -15.256935119628906

Token 574: ' des' (ID: 731)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.3368317782878876
    2. '   ' → logprob: -1.46183180809021
    3. 'a' → logprob: -3.96183180809021
    4. ' =' → logprob: -4.086831569671631
    5. 'i' → logprob: -4.461831569671631
    6. '=' → logprob: -5.461831569671631
    7. ' I' → logprob: -7.211831569671631
    8. '(I' → logprob: -7.461831569671631
    9. '_I' → logprob: -7.836831569671631
    10. ' ' → logprob: -8.211832046508789

Token 575: ' matrices' (ID: 75935)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31859803199768066
    2. 'len' → logprob: -1.3185980319976807
    3. '[a' → logprob: -6.193597793579102
    4. 'range' → logprob: -6.693597793579102
    5. '[len' → logprob: -7.318597793579102
    6. '[' → logprob: -7.568597793579102
    7. ' len' → logprob: -8.318597793579102
    8. '[[' → logprob: -8.443597793579102
    9. '(len' → logprob: -8.943597793579102
    10. '[
' → logprob: -9.068597793579102

Token 576: ' d' (ID: 272)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5271704196929932
    2. '   ' → logprob: -0.9021704196929932
    3. 'i' → logprob: -6.152170181274414
    4. ' I' → logprob: -7.152170181274414
    5. 'a' → logprob: -8.277170181274414
    6. ':' → logprob: -8.527170181274414
    7. '=' → logprob: -8.527170181274414
    8. '_I' → logprob: -8.777170181274414
    9. ' =' → logprob: -8.902170181274414
    10. '	I' → logprob: -9.777170181274414

Token 577: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10495687276124954
    2. 'len' → logprob: -2.604956865310669
    3. ' len' → logprob: -4.604957103729248
    4. ' a' → logprob: -4.979957103729248
    5. '=len' → logprob: -5.479957103729248
    6. '(len' → logprob: -6.354957103729248
    7. ' =' → logprob: -7.354957103729248
    8. '[' → logprob: -7.854957103729248
    9. '[len' → logprob: -7.854957103729248
    10. 'e' → logprob: -8.10495662689209

Token 578: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02126091718673706
    2. 'I' → logprob: -3.896260976791382
    3. ' I' → logprob: -7.521260738372803
    4. 'i' → logprob: -9.771261215209961
    5. '	I' → logprob: -10.521261215209961
    6. ':' → logprob: -10.896261215209961
    7. 'a' → logprob: -11.146261215209961
    8. ',' → logprob: -11.646261215209961
    9. '  ' → logprob: -12.146261215209961
    10. 'n' → logprob: -12.271261215209961

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13013766705989838
    2. 'I' → logprob: -2.6301376819610596
    3. 'i' → logprob: -3.0051376819610596
    4. ' I' → logprob: -8.13013744354248
    5. ' i' → logprob: -9.88013744354248
    6. 'n' → logprob: -10.50513744354248
    7. '```' → logprob: -11.38013744354248
    8. '	I' → logprob: -11.63013744354248
    9. '  ' → logprob: -12.00513744354248
    10. 'ia' → logprob: -12.25513744354248

Token 580: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.01168957632035017
    2. 'i' → logprob: -4.51168966293335
    3. '   ' → logprob: -7.38668966293335
    4. ' I' → logprob: -10.886689186096191
    5. 'n' → logprob: -14.386689186096191
    6. '	I' → logprob: -14.511689186096191
    7. 'return' → logprob: -14.636689186096191
    8. 'result' → logprob: -14.636689186096191
    9. ' ' → logprob: -14.886689186096191
    10. '```' → logprob: -15.261689186096191

Token 581: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.005700057838112116
    2. 'i' → logprob: -5.63070011138916
    3. ' I' → logprob: -6.75570011138916
    4. '   ' → logprob: -7.00570011138916
    5. ' ' → logprob: -11.38070011138916
    6. ' i' → logprob: -12.25570011138916
    7. '	I' → logprob: -12.50570011138916
    8. '```' → logprob: -12.63070011138916
    9. '_I' → logprob: -14.00570011138916
    10. 'ia' → logprob: -14.25570011138916

Token 582: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36114540696144104
    2. '=' → logprob: -1.2361453771591187
    3. ',' → logprob: -4.486145496368408
    4. '   ' → logprob: -6.736145496368408
    5. 'I' → logprob: -9.98614501953125
    6. '_' → logprob: -10.36114501953125
    7. ' ' → logprob: -10.48614501953125
    8. 'a' → logprob: -10.86114501953125
    9. '=len' → logprob: -11.48614501953125
    10. '_i' → logprob: -11.86114501953125

Token 583: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00027730545843951404
    2. ' len' → logprob: -8.250277519226074
    3. 'I' → logprob: -11.625277519226074
    4. '3' → logprob: -12.000277519226074
    5. 'i' → logprob: -14.875277519226074
    6. '   ' → logprob: -15.250277519226074
    7. '(len' → logprob: -15.500277519226074
    8. '=len' → logprob: -16.000276565551758
    9. '	len' → logprob: -16.875276565551758
    10. '[len' → logprob: -17.625276565551758

Token 584: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6382297873497009
    2. '=' → logprob: -1.2632298469543457
    3. '   ' → logprob: -2.5132298469543457
    4. '=len' → logprob: -2.8882298469543457
    5. 'a' → logprob: -3.8882298469543457
    6. 'len' → logprob: -4.763229846954346
    7. '_a' → logprob: -5.013229846954346
    8. '_' → logprob: -5.138229846954346
    9. 'I' → logprob: -5.763229846954346
    10. ',' → logprob: -7.013229846954346

Token 585: ' lignes' (ID: 81687)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01751173846423626
    2. ' len' → logprob: -4.26751184463501
    3. 'rows' → logprob: -6.26751184463501
    4. 'l' → logprob: -7.51751184463501
    5. 'range' → logprob: -7.76751184463501
    6. ' lignes' → logprob: -8.642511367797852
    7. '=len' → logprob: -9.142511367797852
    8. 'lines' → logprob: -9.892511367797852
    9. 'ligne' → logprob: -10.267511367797852
    10. '(len' → logprob: -10.392511367797852

Token 586: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7362978458404541
    2. '=' → logprob: -0.8612978458404541
    3. '   ' → logprob: -3.111297845840454
    4. '=len' → logprob: -3.611297845840454
    5. 'a' → logprob: -3.736297845840454
    6. 'len' → logprob: -6.486297607421875
    7. 'I' → logprob: -7.486297607421875
    8. ' len' → logprob: -8.236297607421875
    9. '=a' → logprob: -8.361297607421875
    10. ' a' → logprob: -8.736297607421875

Token 587: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. '	a' → logprob: -19.7500057220459
    4. '(a' → logprob: -20.0000057220459
    5. '   ' → logprob: -22.3750057220459
    6. 'а' → logprob: -22.6250057220459
    7. '
' → logprob: -23.0000057220459
    8. '[a' → logprob: -23.5000057220459
    9. '_a' → logprob: -24.3750057220459
    10. 'A' → logprob: -24.3750057220459

Token 588: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20921280980110168
    2. ' =' → logprob: -1.9592127799987793
    3. '   ' → logprob: -3.3342127799987793
    4. 'I' → logprob: -5.209212779998779
    5. 'a' → logprob: -5.334212779998779
    6. '=len' → logprob: -6.459212779998779
    7. ',' → logprob: -9.084213256835938
    8. '=
' → logprob: -9.584213256835938
    9. ' I' → logprob: -10.209213256835938
    10. 'len' → logprob: -10.459213256835938

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18243937194347382
    2. 'I' → logprob: -1.8074393272399902
    3. ' I' → logprob: -6.05743932723999
    4. 'i' → logprob: -8.932439804077148
    5. 'a' → logprob: -9.057439804077148
    6. ' ' → logprob: -10.432439804077148
    7. '    
' → logprob: -11.057439804077148
    8. ' =' → logprob: -11.182439804077148
    9. ',' → logprob: -11.682439804077148
    10. '	I' → logprob: -11.807439804077148

Token 590: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -9.341087570646778e-05
    2. ' I' → logprob: -10.000093460083008
    3. '   ' → logprob: -10.000093460083008
    4. 'i' → logprob: -13.000093460083008
    5. '	I' → logprob: -15.875093460083008
    6. 'a' → logprob: -16.500093460083008
    7. ' ' → logprob: -16.750093460083008
    8. '```' → logprob: -17.250093460083008
    9. '[I' → logprob: -19.000093460083008
    10. ' =' → logprob: -19.500093460083008

Token 591: ' J' (ID: 643)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0001363168703392148
    2. ' I' → logprob: -10.000136375427246
    3. '   ' → logprob: -10.375136375427246
    4. 'i' → logprob: -10.500136375427246
    5. 'len' → logprob: -10.500136375427246
    6. 'a' → logprob: -13.250136375427246
    7. '```' → logprob: -13.750136375427246
    8. ' ' → logprob: -15.000136375427246
    9. '`' → logprob: -15.000136375427246
    10. ' len' → logprob: -15.125136375427246

Token 592: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3206317126750946
    2. '=' → logprob: -1.320631742477417
    3. ',' → logprob: -4.945631504058838
    4. '=len' → logprob: -8.570631980895996
    5. '   ' → logprob: -10.820631980895996
    6. ' ,' → logprob: -11.945631980895996
    7. ' ' → logprob: -12.695631980895996
    8. 'a' → logprob: -13.195631980895996
    9. ')' → logprob: -13.320631980895996
    10. ',a' → logprob: -13.445631980895996

Token 593: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00862119346857071
    2. ' len' → logprob: -4.7586212158203125
    3. '(len' → logprob: -12.008621215820312
    4. '[len' → logprob: -15.383621215820312
    5. '   ' → logprob: -16.008621215820312
    6. '=len' → logprob: -16.383621215820312
    7. '	len' → logprob: -16.883621215820312
    8. ' ' → logprob: -17.508621215820312
    9. 'range' → logprob: -17.758621215820312
    10. '  ' → logprob: -18.758621215820312

Token 594: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.244678020477295
    2. 'de' → logprob: -1.994678020477295
    3. '(a' → logprob: -1.994678020477295
    4. 'of' → logprob: -2.369678020477295
    5. 'def' → logprob: -2.494678020477295
    6. 'len' → logprob: -2.994678020477295
    7. 'des' → logprob: -3.119678020477295
    8. 'a' → logprob: -3.369678020477295
    9. '(b' → logprob: -3.369678020477295
    10. '=' → logprob: -4.119678020477295

Token 595: ' colon' (ID: 20947)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02533036470413208
    2. 'b' → logprob: -3.7753303050994873
    3. 'range' → logprob: -6.775330543518066
    4. ' len' → logprob: -7.650330543518066
    5. '(len' → logprob: -8.150330543518066
    6. 'cols' → logprob: -9.650330543518066
    7. '[len' → logprob: -10.275330543518066
    8. '[b' → logprob: -10.650330543518066
    9. 'a' → logprob: -11.275330543518066
    10. '(b' → logprob: -11.650330543518066

Token 596: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.02832086570560932
    2. 'es' → logprob: -3.653320789337158
    3. 'tes' → logprob: -7.153320789337158
    4. 'nées' → logprob: -8.528321266174316
    5. 'mes' → logprob: -8.653321266174316
    6. 'onnes' → logprob: -8.903321266174316
    7. 's' → logprob: -9.153321266174316
    8. 't' → logprob: -9.403321266174316
    9. 'm' → logprob: -9.528321266174316
    10. 'ne' → logprob: -9.778321266174316

Token 597: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9739714860916138
    2. 'a' → logprob: -1.0989714860916138
    3. ' =' → logprob: -1.4739714860916138
    4. '   ' → logprob: -3.848971366882324
    5. '(a' → logprob: -4.223971366882324
    6. 'b' → logprob: -4.973971366882324
    7. '=a' → logprob: -4.973971366882324
    8. '_a' → logprob: -5.598971366882324
    9. '=len' → logprob: -5.598971366882324
    10. ' a' → logprob: -7.223971366882324

Token 598: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026419671485200524
    2. ' b' → logprob: -8.250264167785645
    3. '(b' → logprob: -13.250264167785645
    4. 'a' → logprob: -13.750264167785645
    5. '   ' → logprob: -16.87526512145996
    6. '[b' → logprob: -17.00026512145996
    7. '	b' → logprob: -17.37526512145996
    8. 'len' → logprob: -17.50026512145996
    9. 'B' → logprob: -18.62526512145996
    10. 'c' → logprob: -18.87526512145996

Token 599: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007678911089897156
    2. 'I' → logprob: -5.257678985595703
    3. ' =' → logprob: -6.132678985595703
    4. '=' → logprob: -9.257678985595703
    5. ',' → logprob: -9.632678985595703
    6. ' I' → logprob: -10.132678985595703
    7. '(I' → logprob: -10.632678985595703
    8. '	I' → logprob: -11.257678985595703
    9. '
' → logprob: -11.632678985595703
    10. ':' → logprob: -12.257678985595703

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14311876893043518
    2. 'I' → logprob: -2.0181188583374023
    3. ' I' → logprob: -9.018118858337402
    4. '(I' → logprob: -9.268118858337402
    5. 'a' → logprob: -9.518118858337402
    6. '    
' → logprob: -10.018118858337402
    7. '	I' → logprob: -10.518118858337402
    8. 'def' → logprob: -11.018118858337402
    9. '```' → logprob: -11.268118858337402
    10. 'i' → logprob: -11.768118858337402

Token 601: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0041487994603812695
    2. '   ' → logprob: -5.504148960113525
    3. ' I' → logprob: -9.629148483276367
    4. ' ' → logprob: -13.129148483276367
    5. 'i' → logprob: -13.254148483276367
    6. '	I' → logprob: -14.379148483276367
    7. '```' → logprob: -16.004148483276367
    8. '  ' → logprob: -16.629148483276367
    9. '_I' → logprob: -17.129148483276367
    10. 'a' → logprob: -17.879148483276367

Token 602: ' K' (ID: 658)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0005284877843223512
    2. '   ' → logprob: -7.750528335571289
    3. ' I' → logprob: -9.375528335571289
    4. ' ' → logprob: -11.750528335571289
    5. 'i' → logprob: -12.500528335571289
    6. '	I' → logprob: -15.000528335571289
    7. '```' → logprob: -15.250528335571289
    8. 'a' → logprob: -15.250528335571289
    9. '       ' → logprob: -15.750528335571289
    10. 'def' → logprob: -16.00052833557129

Token 603: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138844668865204
    2. '=' → logprob: -1.3138844966888428
    3. ',' → logprob: -7.688884258270264
    4. '=len' → logprob: -9.313884735107422
    5. '   ' → logprob: -9.688884735107422
    6. 'a' → logprob: -12.063884735107422
    7. ' ' → logprob: -13.438884735107422
    8. '  ' → logprob: -13.938884735107422
    9. '=a' → logprob: -13.938884735107422
    10. '=int' → logprob: -14.063884735107422

Token 604: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.674858301877975e-05
    2. ' len' → logprob: -9.250096321105957
    3. '(len' → logprob: -14.500096321105957
    4. 'range' → logprob: -16.375097274780273
    5. '   ' → logprob: -16.875097274780273
    6. '=len' → logprob: -17.625097274780273
    7. '3' → logprob: -17.750097274780273
    8. '	len' → logprob: -18.250097274780273
    9. '[len' → logprob: -19.000097274780273
    10. '<len' → logprob: -21.125097274780273

Token 605: ' de' (ID: 334)
  Prédit: '=len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=len' → logprob: -0.5711907148361206
    2. '(len' → logprob: -1.3211907148361206
    3. 'len' → logprob: -2.69619083404541
    4. '(a' → logprob: -3.07119083404541
    5. '=' → logprob: -4.07119083404541
    6. '   ' → logprob: -4.19619083404541
    7. 'a' → logprob: -4.57119083404541
    8. ' =' → logprob: -5.32119083404541
    9. ' de' → logprob: -7.07119083404541
    10. ' len' → logprob: -7.19619083404541

Token 606: ' colon' (ID: 20947)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009417156688869
    2. '(len' → logprob: -7.125941753387451
    3. ' len' → logprob: -9.125941276550293
    4. '3' → logprob: -11.125941276550293
    5. 'range' → logprob: -11.500941276550293
    6. 'cols' → logprob: -13.500941276550293
    7. '   ' → logprob: -14.000941276550293
    8. ' ' → logprob: -15.000941276550293
    9. '(' → logprob: -15.125941276550293
    10. 'col' → logprob: -15.625941276550293

Token 607: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -1.0921517610549927
    2. 'nées' → logprob: -1.0921517610549927
    3. 'ne' → logprob: -1.8421517610549927
    4. 'es' → logprob: -3.342151641845703
    5. 'a' → logprob: -3.467151641845703
    6. 'ères' → logprob: -3.842151641845703
    7. 'n' → logprob: -3.842151641845703
    8. 'nés' → logprob: -4.717151641845703
    9. 'nne' → logprob: -4.842151641845703
    10. 'naires' → logprob: -5.217151641845703

Token 608: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6789109706878662
    2. '=' → logprob: -1.0539109706878662
    3. ' =' → logprob: -2.178910970687866
    4. '(a' → logprob: -4.553911209106445
    5. '   ' → logprob: -4.678911209106445
    6. '=a' → logprob: -5.178911209106445
    7. '_a' → logprob: -6.303911209106445
    8. '=len' → logprob: -6.803911209106445
    9. ' a' → logprob: -6.928911209106445
    10. 'of' → logprob: -7.053911209106445

Token 609: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.5597102396423e-05
    2. ' a' → logprob: -10.250035285949707
    3. '	a' → logprob: -15.625035285949707
    4. '(a' → logprob: -17.000036239624023
    5. 'b' → logprob: -18.750036239624023
    6. '[a' → logprob: -19.750036239624023
    7. 'A' → logprob: -20.250036239624023
    8. '#a' → logprob: -20.875036239624023
    9. '   ' → logprob: -21.125036239624023
    10. '_a' → logprob: -21.125036239624023

Token 610: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003385883988812566
    2. ' =' → logprob: -6.0033860206604
    3. 'I' → logprob: -7.8783860206604
    4. '=' → logprob: -8.378385543823242
    5. '(I' → logprob: -9.003385543823242
    6. ' I' → logprob: -9.128385543823242
    7. ',' → logprob: -11.253385543823242
    8. '	I' → logprob: -11.378385543823242
    9. '    
' → logprob: -11.628385543823242
    10. ':' → logprob: -11.628385543823242

Token 611: 'do' (ID: 2408)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008598146960139275
    2. ' len' → logprob: -5.258598327636719
    3. '=len' → logprob: -5.883598327636719
    4. '   ' → logprob: -8.133598327636719
    5. '(len' → logprob: -9.633598327636719
    6. '0' → logprob: -9.758598327636719
    7. 'range' → logprob: -9.758598327636719
    8. '=' → logprob: -10.383598327636719
    9. ')' → logprob: -11.258598327636719
    10. '[len' → logprob: -11.633598327636719

Token 612: 'it' (ID: 278)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10137637704610825
    2. 't' → logprob: -2.6013762950897217
    3. 'k' → logprob: -4.101376533508301
    4. 'ct' → logprob: -5.726376533508301
    5. 'cs' → logprob: -7.851376533508301
    6. '   ' → logprob: -8.1013765335083
    7. ')' → logprob: -8.7263765335083
    8. 'n' → logprob: -8.7263765335083
    9. 'b' → logprob: -8.9763765335083
    10. ' ' → logprob: -9.3513765335083

Token 613: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5660067200660706
    2. '=len' → logprob: -1.1910066604614258
    3. ' =' → logprob: -2.066006660461426
    4. 'len' → logprob: -7.316006660461426
    5. ' len' → logprob: -7.316006660461426
    6. ' be' → logprob: -8.941006660461426
    7. '=int' → logprob: -9.941006660461426
    8. '    ' → logprob: -10.941006660461426
    9. ',' → logprob: -11.191006660461426
    10. '=
' → logprob: -11.441006660461426

Token 614: ' égal' (ID: 15059)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002490522339940071
    2. ' len' → logprob: -6.002490520477295
    3. '   ' → logprob: -11.377490997314453
    4. '=len' → logprob: -13.252490997314453
    5. '(len' → logprob: -14.377490997314453
    6. '3' → logprob: -14.377490997314453
    7. '	len' → logprob: -15.252490997314453
    8. '    ' → logprob: -16.377490997314453
    9. '[len' → logprob: -16.627490997314453
    10. ' ' → logprob: -16.877490997314453

Token 615: ' au' (ID: 2791)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.8279135823249817
    2. 'len' → logprob: -1.077913522720337
    3. '=len' → logprob: -1.952913522720337
    4. ' len' → logprob: -3.077913522720337
    5. '   ' → logprob: -3.452913522720337
    6. ' au' → logprob: -6.577913761138916
    7. ',len' → logprob: -7.327913761138916
    8. '    ' → logprob: -7.702913761138916
    9. ' à' → logprob: -8.202913284301758
    10. ')' → logprob: -9.077913284301758

Token 616: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006771022453904152
    2. ' len' → logprob: -5.006771087646484
    3. '3' → logprob: -10.131771087646484
    4. '(len' → logprob: -11.131771087646484
    5. '   ' → logprob: -14.756771087646484
    6. '	len' → logprob: -15.381771087646484
    7. ' ' → logprob: -15.756771087646484
    8. '=len' → logprob: -16.006771087646484
    9. '[len' → logprob: -16.256771087646484
    10. '0' → logprob: -16.756771087646484

Token 617: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20023344457149506
    2. 'de' → logprob: -2.5752334594726562
    3. 'len' → logprob: -3.0752334594726562
    4. '   ' → logprob: -3.4502334594726562
    5. '=len' → logprob: -4.450233459472656
    6. ' des' → logprob: -5.325233459472656
    7. '(len' → logprob: -5.950233459472656
    8. '=' → logprob: -6.075233459472656
    9. ' of' → logprob: -6.575233459472656
    10. ' len' → logprob: -6.700233459472656

Token 618: ' lignes' (ID: 81687)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.9566661715507507
    2. 'len' → logprob: -0.9566661715507507
    3. 'l' → logprob: -1.7066662311553955
    4. 'lines' → logprob: -3.8316662311553955
    5. ' lignes' → logprob: -3.9566662311553955
    6. 'ligne' → logprob: -5.956665992736816
    7. 'cols' → logprob: -6.081665992736816
    8. 'range' → logprob: -6.581665992736816
    9. 'colon' → logprob: -6.581665992736816
    10. ' len' → logprob: -7.331665992736816

Token 619: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7477185130119324
    2. 'a' → logprob: -1.3727185726165771
    3. 'de' → logprob: -1.8727185726165771
    4. '   ' → logprob: -3.122718572616577
    5. '(a' → logprob: -3.122718572616577
    6. 'b' → logprob: -4.122718334197998
    7. 'of' → logprob: -4.997718334197998
    8. ' of' → logprob: -5.497718334197998
    9. ' a' → logprob: -6.372718334197998
    10. ')' → logprob: -7.497718334197998

Token 620: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011172432452440262
    2. ' b' → logprob: -4.511172294616699
    3. 'a' → logprob: -9.0111722946167
    4. ' a' → logprob: -12.8861722946167
    5. '(b' → logprob: -17.636173248291016
    6. '	b' → logprob: -18.136173248291016
    7. ' ' → logprob: -19.261173248291016
    8. ')b' → logprob: -19.636173248291016
    9. '(a' → logprob: -19.761173248291016
    10. ' б' → logprob: -20.761173248291016

Token 621: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43526962399482727
    2. ')' → logprob: -1.1852695941925049
    3. ')
' → logprob: -3.060269594192505
    4. '
' → logprob: -9.060269355773926
    5. ' =' → logprob: -9.435269355773926
    6. '):
' → logprob: -9.810269355773926
    7. ')
' → logprob: -10.810269355773926
    8. '):' → logprob: -10.935269355773926
    9. ' )' → logprob: -11.060269355773926
    10. '  ' → logprob: -11.435269355773926

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060796490870416164
    2. 'I' → logprob: -5.13107967376709
    3. ' I' → logprob: -9.50607967376709
    4. '(I' → logprob: -10.25607967376709
    5. ':' → logprob: -11.50607967376709
    6. '
' → logprob: -12.25607967376709
    7. '```' → logprob: -12.25607967376709
    8. '    
' → logprob: -12.38107967376709
    9. '	I' → logprob: -12.50607967376709
    10. 'def' → logprob: -12.50607967376709

Token 623: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -0.07988201081752777
    2. '   ' → logprob: -2.5798819065093994
    3. ' I' → logprob: -6.9548821449279785
    4. ' ' → logprob: -10.45488166809082
    5. '	I' → logprob: -12.45488166809082
    6. '
' → logprob: -12.95488166809082
    7. '  ' → logprob: -13.95488166809082
    8. 'i' → logprob: -14.45488166809082
    9. '```' → logprob: -14.57988166809082
    10. '    
' → logprob: -15.45488166809082

Token 624: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.017600178718567
    2. ',' → logprob: -1.142600178718567
    3. '=' → logprob: -1.142600178718567
    4. '=len' → logprob: -7.767600059509277
    5. '   ' → logprob: -9.767600059509277
    6. ' ,' → logprob: -10.017600059509277
    7. ',J' → logprob: -11.642600059509277
    8. ',j' → logprob: -11.892600059509277
    9. ',len' → logprob: -12.142600059509277
    10. ',K' → logprob: -12.142600059509277

Token 625: ' J' (ID: 643)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.34150430560112
    2. 'K' → logprob: -1.5915043354034424
    3. 'J' → logprob: -2.9665043354034424
    4. ' len' → logprob: -3.4665043354034424
    5. ' K' → logprob: -6.341504096984863
    6. '=len' → logprob: -7.716504096984863
    7. ' J' → logprob: -7.966504096984863
    8. '=' → logprob: -9.341504096984863
    9. ' =' → logprob: -9.341504096984863
    10. '3' → logprob: -9.341504096984863

Token 626: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.143000990152359
    2. ' =' → logprob: -2.268001079559326
    3. ',' → logprob: -3.518001079559326
    4. '=len' → logprob: -9.643000602722168
    5. ' ,' → logprob: -13.393000602722168
    6. '=int' → logprob: -14.768000602722168
    7. '=
' → logprob: -14.768000602722168
    8. '   ' → logprob: -14.893000602722168
    9. ' ' → logprob: -15.268000602722168
    10. '=

' → logprob: -15.518000602722168

Token 627: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.10061929374933243
    2. 'len' → logprob: -2.350619316101074
    3. ' K' → logprob: -8.975619316101074
    4. '=' → logprob: -9.100619316101074
    5. ' len' → logprob: -9.100619316101074
    6. ' =' → logprob: -10.350619316101074
    7. '=len' → logprob: -10.725619316101074
    8. ' ' → logprob: -13.350619316101074
    9. 'k' → logprob: -13.475619316101074
    10. '_K' → logprob: -13.600619316101074

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25236088037490845
    2. ' =' → logprob: -1.5023608207702637
    3. '=len' → logprob: -7.752360820770264
    4. ',' → logprob: -13.627361297607422
    5. ' ' → logprob: -15.252361297607422
    6. '   ' → logprob: -15.877361297607422
    7. 'len' → logprob: -16.127361297607422
    8. '＝' → logprob: -17.002361297607422
    9. '  ' → logprob: -17.377361297607422
    10. ',len' → logprob: -17.502361297607422

Token 629: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005239683669060469
    2. ' len' → logprob: -5.255239486694336
    3. '(len' → logprob: -12.755239486694336
    4. '   ' → logprob: -13.130239486694336
    5. '	len' → logprob: -14.380239486694336
    6. '[len' → logprob: -15.505239486694336
    7. ' ' → logprob: -16.505239486694336
    8. '  ' → logprob: -16.630239486694336
    9. 'range' → logprob: -17.880239486694336
    10. '    ' → logprob: -17.880239486694336

Token 630: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.625001907348633
    3. 'a' → logprob: -14.625001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '(A' → logprob: -17.625001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '(b' → logprob: -19.875001907348633
    8. '((' → logprob: -20.000001907348633
    9. '(ai' → logprob: -20.625001907348633
    10. '[a' → logprob: -20.875001907348633

Token 631: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003099599271081388
    2. '[' → logprob: -8.250309944152832
    3. ')' → logprob: -10.375309944152832
    4. ' ),' → logprob: -11.000309944152832
    5. '   ' → logprob: -15.500309944152832
    6. ' ' → logprob: -15.625309944152832
    7. 'a' → logprob: -16.25031089782715
    8. ',' → logprob: -16.62531089782715
    9. '],' → logprob: -17.37531089782715
    10. '()),' → logprob: -17.50031089782715

Token 632: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '(len' → logprob: -17.625017166137695
    4. '[len' → logprob: -18.250017166137695
    5. '	len' → logprob: -18.250017166137695
    6. '   ' → logprob: -19.625017166137695
    7. '=len' → logprob: -20.125017166137695
    8. '<len' → logprob: -20.875017166137695
    9. '0' → logprob: -21.625017166137695
    10. ',len' → logprob: -21.750017166137695

Token 633: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0052613914012908936
    2. 'b' → logprob: -5.255261421203613
    3. '(a' → logprob: -10.880261421203613
    4. 'a' → logprob: -11.880261421203613
    5. ' b' → logprob: -14.005261421203613
    6. '(' → logprob: -15.005261421203613
    7. '[' → logprob: -15.005261421203613
    8. '	b' → logprob: -15.630261421203613
    9. '[b' → logprob: -16.505260467529297
    10. ' (' → logprob: -17.380260467529297

Token 634: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.491498531133402e-06
    2. '),' → logprob: -11.625009536743164
    3. ' [' → logprob: -15.625009536743164
    4. '0' → logprob: -15.625009536743164
    5. '
' → logprob: -16.375009536743164
    6. '   ' → logprob: -17.000009536743164
    7. ')' → logprob: -17.000009536743164
    8. ' ' → logprob: -18.250009536743164
    9. '[
' → logprob: -18.375009536743164
    10. '[-' → logprob: -18.625009536743164

Token 635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.875001907348633
    4. ')' → logprob: -15.750001907348633
    5. '
' → logprob: -16.500001907348633
    6. '[' → logprob: -16.750001907348633
    7. '1' → logprob: -17.250001907348633
    8. '۰' → logprob: -18.187501907348633
    9. '])' → logprob: -18.562501907348633
    10. '﻿' → logprob: -18.625001907348633

Token 636: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -9.841743303695694e-05
    2. ' ),' → logprob: -9.75009822845459
    3. ')' → logprob: -11.00009822845459
    4. '],' → logprob: -11.50009822845459
    5. ',' → logprob: -12.00009822845459
    6. '   ' → logprob: -12.37509822845459
    7. ' ' → logprob: -14.00009822845459
    8. '[' → logprob: -14.75009822845459
    9. ']),' → logprob: -15.37509822845459
    10. '  ' → logprob: -15.62509822845459

Token 637: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -15.0
    3. '   ' → logprob: -20.5
    4. '	len' → logprob: -21.125
    5. '(len' → logprob: -22.5
    6. '[len' → logprob: -23.5
    7. '=len' → logprob: -24.125
    8. ' ' → logprob: -25.25
    9. '  ' → logprob: -25.25
    10. '<len' → logprob: -25.25

Token 638: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00026217024424113333
    2. '(b' → logprob: -8.250262260437012
    3. 'a' → logprob: -14.000262260437012
    4. '(' → logprob: -18.125261306762695
    5. 'b' → logprob: -18.125261306762695
    6. '(
' → logprob: -18.750261306762695
    7. ' (' → logprob: -20.375261306762695
    8. '(A' → logprob: -21.000261306762695
    9. '(x' → logprob: -21.750261306762695
    10. '((' → logprob: -22.375261306762695

Token 639: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019454145804047585
    2. ')a' → logprob: -6.501945495605469
    3. ')
' → logprob: -8.751945495605469
    4. 'a' → logprob: -9.001945495605469
    5. '[' → logprob: -9.876945495605469
    6. '(a' → logprob: -10.376945495605469
    7. '[a' → logprob: -10.501945495605469
    8. '))' → logprob: -11.251945495605469
    9. ')]' → logprob: -11.501945495605469
    10. ' )' → logprob: -12.626945495605469

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08897633105516434
    2. 'c' → logprob: -2.7139763832092285
    3. '
' → logprob: -4.5889763832092285
    4. '    
' → logprob: -5.4639763832092285
    5. '```' → logprob: -6.4639763832092285
    6. ' c' → logprob: -6.5889763832092285
    7. '	c' → logprob: -6.9639763832092285
    8. '  
' → logprob: -8.33897590637207
    9. '   
' → logprob: -9.58897590637207
    10. ' ' → logprob: -10.08897590637207

Token 641: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4754498302936554
    2. '   ' → logprob: -0.975449800491333
    3. ' c' → logprob: -7.350450038909912
    4. '	c' → logprob: -7.850450038909912
    5. '    
' → logprob: -8.850449562072754
    6. '
' → logprob: -9.725449562072754
    7. '  ' → logprob: -9.975449562072754
    8. ' ' → logprob: -10.100449562072754
    9. '```' → logprob: -11.100449562072754
    10. '   ' → logprob: -11.850449562072754

Token 642: ' Initial' (ID: 9209)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007159919012337923
    2. '   ' → logprob: -5.00715970993042
    3. ' c' → logprob: -7.88215970993042
    4. '#' → logprob: -10.757160186767578
    5. '
' → logprob: -11.132160186767578
    6. ' ' → logprob: -11.382160186767578
    7. '[' → logprob: -12.382160186767578
    8. '	c' → logprob: -12.382160186767578
    9. '[
' → logprob: -12.882160186767578
    10. '  ' → logprob: -12.882160186767578

Token 643: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3268580138683319
    2. 'a' → logprob: -2.7018580436706543
    3. '   ' → logprob: -2.9518580436706543
    4. 'c' → logprob: -3.0768580436706543
    5. 'er' → logprob: -3.4518580436706543
    6. 'isation' → logprob: -4.076858043670654
    7. '#' → logprob: -4.076858043670654
    8. 'izer' → logprob: -4.076858043670654
    9. '[' → logprob: -4.201858043670654
    10. 'ialize' → logprob: -5.201858043670654

Token 644: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.019609495997428894
    2. ' c' → logprob: -4.519609451293945
    3. '   ' → logprob: -4.769609451293945
    4. '	c' → logprob: -10.644609451293945
    5. '[' → logprob: -11.769609451293945
    6. 'result' → logprob: -12.269609451293945
    7. '[
' → logprob: -14.144609451293945
    8. '(' → logprob: -14.269609451293945
    9. '(c' → logprob: -14.269609451293945
    10. '[c' → logprob: -14.644609451293945

Token 645: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06818583607673645
    2. '[[' → logprob: -2.818185806274414
    3. ' c' → logprob: -5.568185806274414
    4. ' [[' → logprob: -6.693185806274414
    5. '[' → logprob: -6.818185806274414
    6. '[
' → logprob: -10.443185806274414
    7. '   ' → logprob: -12.193185806274414
    8. '([[' → logprob: -12.318185806274414
    9. 'res' → logprob: -12.818185806274414
    10. 'result' → logprob: -12.943185806274414

Token 646: ' matr' (ID: 25095)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02447817288339138
    2. '[[' → logprob: -3.7744781970977783
    3. '[' → logprob: -6.774477958679199
    4. '[
' → logprob: -10.2744779586792
    5. ' [[' → logprob: -10.2744779586792
    6. ' c' → logprob: -11.0244779586792
    7. 'result' → logprob: -12.7744779586792
    8. ' [' → logprob: -15.3994779586792
    9. ' ' → logprob: -15.7744779586792
    10. '[c' → logprob: -15.8994779586792

Token 647: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0018978210864588618
    2. '[[' → logprob: -7.126897811889648
    3. 'ix' → logprob: -7.126897811889648
    4. '[' → logprob: -8.626897811889648
    5. 'iz' → logprob: -10.751897811889648
    6. 'atrice' → logprob: -10.876897811889648
    7. 'ize' → logprob: -11.001897811889648
    8. 'ic' → logprob: -11.251897811889648
    9. 'x' → logprob: -11.376897811889648
    10. 'ices' → logprob: -11.876897811889648

Token 648: ' résultat' (ID: 62556)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011283133644610643
    2. ' c' → logprob: -6.876128196716309
    3. '   ' → logprob: -9.876128196716309
    4. '[[' → logprob: -10.751128196716309
    5. '[' → logprob: -11.001128196716309
    6. 'result' → logprob: -12.501128196716309
    7. '([[' → logprob: -14.501128196716309
    8. ' [[' → logprob: -15.001128196716309
    9. '[
' → logprob: -15.001128196716309
    10. '	c' → logprob: -15.501128196716309

Token 649: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42490941286087036
    2. '   ' → logprob: -1.1749093532562256
    3. ' c' → logprob: -3.2999093532562256
    4. '	c' → logprob: -8.674909591674805
    5. ' =' → logprob: -9.049909591674805
    6. '[
' → logprob: -9.924909591674805
    7. '[' → logprob: -10.424909591674805
    8. '
' → logprob: -10.799909591674805
    9. '    
' → logprob: -11.049909591674805
    10. '  ' → logprob: -11.924909591674805

Token 650: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08400221914052963
    2. '   ' → logprob: -2.5840022563934326
    3. '=' → logprob: -5.4590020179748535
    4. 'c' → logprob: -7.9590020179748535
    5. '[' → logprob: -9.459002494812012
    6. ' c' → logprob: -9.584002494812012
    7. ' ' → logprob: -9.584002494812012
    8. ',' → logprob: -9.834002494812012
    9. '  ' → logprob: -9.959002494812012
    10. ' =
' → logprob: -10.209002494812012

Token 651: ' des' (ID: 731)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00017278951418120414
    2. ' [[' → logprob: -9.00017261505127
    3. '[' → logprob: -10.00017261505127
    4. '0' → logprob: -12.50017261505127
    5. '[
' → logprob: -15.12517261505127
    6. ' ' → logprob: -17.875173568725586
    7. '   ' → logprob: -18.125173568725586
    8. ' [' → logprob: -18.125173568725586
    9. '([[' → logprob: -18.625173568725586
    10. '[]' → logprob: -19.250173568725586

Token 652: ' z' (ID: 579)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.47966650128364563
    2. '0' → logprob: -0.9796664714813232
    3. '[' → logprob: -5.229666709899902
    4. 'zeros' → logprob: -9.104666709899902
    5. '[
' → logprob: -9.729666709899902
    6. ' [[' → logprob: -10.729666709899902
    7. '[]' → logprob: -11.229666709899902
    8. ' ' → logprob: -12.104666709899902
    9. ' zeros' → logprob: -13.229666709899902
    10. 'zero' → logprob: -13.729666709899902

Token 653: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.0301071647554636
    2. 'eros' → logprob: -3.530107259750366
    3. '[' → logprob: -8.155107498168945
    4. 'é' → logprob: -10.155107498168945
    5. 'éro' → logprob: -10.780107498168945
    6. 'ero' → logprob: -12.405107498168945
    7. 'e' → logprob: -13.280107498168945
    8. '[[' → logprob: -13.655107498168945
    9. 'er' → logprob: -13.905107498168945
    10. 'ér' → logprob: -14.405107498168945

Token 654: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021225571632385254
    2. 'c' → logprob: -3.8962254524230957
    3. ' c' → logprob: -7.521225452423096
    4. '	c' → logprob: -9.271225929260254
    5. '    
' → logprob: -10.771225929260254
    6. '
' → logprob: -11.771225929260254
    7. '  ' → logprob: -12.271225929260254
    8. ',' → logprob: -12.646225929260254
    9. ' =' → logprob: -13.021225929260254
    10. ' ' → logprob: -13.021225929260254

Token 655: 'dimensions' (ID: 137160)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.003924279939383268
    2. '[I' → logprob: -6.253924369812012
    3. ' [[' → logprob: -6.628924369812012
    4. '[' → logprob: -7.503924369812012
    5. '0' → logprob: -9.378924369812012
    6. '   ' → logprob: -10.628924369812012
    7. '[
' → logprob: -12.378924369812012
    8. ' [' → logprob: -12.628924369812012
    9. 'I' → logprob: -12.753924369812012
    10. ')' → logprob: -14.628924369812012

Token 656: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.15896014869213104
    2. '(I' → logprob: -2.1589601039886475
    3. ' I' → logprob: -4.533960342407227
    4. '=' → logprob: -4.658960342407227
    5. '[I' → logprob: -4.783960342407227
    6. '   ' → logprob: -6.908960342407227
    7. ' (' → logprob: -7.033960342407227
    8. ' =' → logprob: -7.908960342407227
    9. ')' → logprob: -8.533960342407227
    10. '	I' → logprob: -8.908960342407227

Token 657: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01221517100930214
    2. ' x' → logprob: -5.0122151374816895
    3. ' ,' → logprob: -5.5122151374816895
    4. '   ' → logprob: -7.6372151374816895
    5. ')' → logprob: -7.8872151374816895
    6. 'x' → logprob: -8.762215614318848
    7. '=' → logprob: -9.262215614318848
    8. ' ' → logprob: -9.637215614318848
    9. '),' → logprob: -10.387215614318848
    10. '×' → logprob: -10.387215614318848

Token 658: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0004365102213341743
    2. 'I' → logprob: -8.250436782836914
    3. ' J' → logprob: -8.750436782836914
    4. '
' → logprob: -12.625436782836914
    5. '   ' → logprob: -12.625436782836914
    6. 'K' → logprob: -12.750436782836914
    7. ' ' → logprob: -13.000436782836914
    8. 'a' → logprob: -13.125436782836914
    9. '  ' → logprob: -14.375436782836914
    10. '0' → logprob: -14.625436782836914

Token 659: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5792133808135986
    2. ')' → logprob: -0.8292133808135986
    3. '   ' → logprob: -6.3292131423950195
    4. '):
' → logprob: -6.7042131423950195
    5. ')
' → logprob: -9.20421314239502
    6. '):' → logprob: -9.82921314239502
    7. ' )
' → logprob: -10.20421314239502
    8. ')

' → logprob: -10.32921314239502
    9. ').' → logprob: -11.45421314239502
    10. ' )' → logprob: -11.95421314239502

Token 660: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07980816066265106
    2. 'c' → logprob: -2.579808235168457
    3. ' c' → logprob: -7.079808235168457
    4. '	c' → logprob: -10.204808235168457
    5. '
' → logprob: -11.204808235168457
    6. '    
' → logprob: -11.329808235168457
    7. '```' → logprob: -12.079808235168457
    8. '  ' → logprob: -12.454808235168457
    9. ' ' → logprob: -13.204808235168457
    10. '  
' → logprob: -14.829808235168457

Token 661: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.006931931246072054
    2. '   ' → logprob: -5.256931781768799
    3. ' c' → logprob: -6.381931781768799
    4. '	c' → logprob: -12.631932258605957
    5. ' ' → logprob: -14.006932258605957
    6. '  ' → logprob: -15.131932258605957
    7. '[
' → logprob: -15.631932258605957
    8. '[' → logprob: -15.631932258605957
    9. '```' → logprob: -16.38193130493164
    10. '    
' → logprob: -16.50693130493164

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.850207328796387
    4. '=[[' → logprob: -15.850207328796387
    5. '=[' → logprob: -16.35020637512207
    6. '=
' → logprob: -16.85020637512207
    7. ' ' → logprob: -17.10020637512207
    8. '[' → logprob: -17.60020637512207
    9. ' =[' → logprob: -17.60020637512207
    10. '=

' → logprob: -17.85020637512207

Token 663: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.000553151941858232
    2. ' [[' → logprob: -7.500553131103516
    3. '[' → logprob: -15.750553131103516
    4. ' [' → logprob: -19.750553131103516
    5. '([[' → logprob: -21.500553131103516
    6. '[
' → logprob: -21.750553131103516
    7. '   ' → logprob: -23.000553131103516
    8. ' ' → logprob: -23.375553131103516
    9. '[]' → logprob: -23.750553131103516
    10. '[['' → logprob: -24.750553131103516

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. '
' → logprob: -17.8750057220459
    5. '۰' → logprob: -18.0000057220459
    6. '       ' → logprob: -18.3125057220459
    7. '(' → logprob: -18.3125057220459
    8. '00' → logprob: -18.4375057220459
    9. '    ' → logprob: -18.6875057220459
    10. '           ' → logprob: -19.1250057220459

Token 665: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19874164462089539
    2. ']*' → logprob: -2.3237416744232178
    3. ' for' → logprob: -3.0737416744232178
    4. 'for' → logprob: -3.3237416744232178
    5. ' ]' → logprob: -10.448741912841797
    6. '   ' → logprob: -11.198741912841797
    7. ')' → logprob: -11.573741912841797
    8. ' ' → logprob: -12.198741912841797
    9. '*' → logprob: -12.448741912841797
    10. '}' → logprob: -13.323741912841797

Token 666: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7005460262298584
    2. 'for' → logprob: -0.7005460262298584
    3. ']*' → logprob: -5.5755462646484375
    4. ']' → logprob: -6.0755462646484375
    5. '   ' → logprob: -7.4505462646484375
    6. '*' → logprob: -7.5755462646484375
    7. ' ' → logprob: -9.450546264648438
    8. ' *' → logprob: -9.950546264648438
    9. '    ' → logprob: -10.325546264648438
    10. '	for' → logprob: -11.325546264648438

Token 667: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -6.392202976712724e-06
    2. ' J' → logprob: -12.000006675720215
    3. '3' → logprob: -15.625006675720215
    4. '   ' → logprob: -17.3750057220459
    5. ' ' → logprob: -19.3750057220459
    6. '	J' → logprob: -19.3750057220459
    7. 'j' → logprob: -20.6250057220459
    8. '  ' → logprob: -20.8750057220459
    9. '    ' → logprob: -21.1250057220459
    10. '       ' → logprob: -21.2500057220459

Token 668: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4740821421146393
    2. 'for' → logprob: -0.9740821123123169
    3. '   ' → logprob: -12.474081993103027
    4. '	for' → logprob: -13.849081993103027
    5. ' ' → logprob: -16.349082946777344
    6. ']' → logprob: -16.599082946777344
    7. '    ' → logprob: -16.724082946777344
    8. ')' → logprob: -17.224082946777344
    9. '  ' → logprob: -18.224082946777344
    10. '       ' → logprob: -19.349082946777344

Token 669: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06384290754795074
    2. '_range' → logprob: -2.813843011856079
    3. ' _' → logprob: -6.9388427734375
    4. '_i' → logprob: -7.6888427734375
    5. ' range' → logprob: -8.0638427734375
    6. '_in' → logprob: -9.5638427734375
    7. 'range' → logprob: -10.1888427734375
    8. '_I' → logprob: -10.9388427734375
    9. ' in' → logprob: -13.8138427734375
    10. '_
' → logprob: -14.1888427734375

Token 670: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.277553620748222e-05
    2. ' range' → logprob: -9.750062942504883
    3. 'in' → logprob: -12.375062942504883
    4. ' in' → logprob: -15.750062942504883
    5. '	range' → logprob: -18.750062942504883
    6. '(range' → logprob: -19.750062942504883
    7. '  ' → logprob: -19.875062942504883
    8. ' ' → logprob: -20.125062942504883
    9. '   ' → logprob: -20.375062942504883
    10. '_range' → logprob: -20.375062942504883

Token 671: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.988221684878226e-06
    2. ' range' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.00000762939453
    4. 'r' → logprob: -18.12500762939453
    5. ' ' → logprob: -18.25000762939453
    6. 'rang' → logprob: -18.75000762939453
    7. '  ' → logprob: -19.12500762939453
    8. '
' → logprob: -19.37500762939453
    9. 'I' → logprob: -19.87500762939453
    10. '    ' → logprob: -20.12500762939453

Token 672: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -3.082895273109898e-05
    2. 'I' → logprob: -10.500030517578125
    3. '(' → logprob: -12.875030517578125
    4. '(i' → logprob: -15.375030517578125
    5. ' (' → logprob: -15.625030517578125
    6. 'range' → logprob: -16.000030517578125
    7. '   ' → logprob: -17.250030517578125
    8. ' ' → logprob: -17.500030517578125
    9. '(
' → logprob: -17.750030517578125
    10. '(range' → logprob: -19.125030517578125

Token 673: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3199920178740285e-05
    2. ')]
' → logprob: -11.125022888183594
    3. ')' → logprob: -12.000022888183594
    4. ' )' → logprob: -13.375022888183594
    5. ')]

' → logprob: -15.250022888183594
    6. ')]
' → logprob: -15.625022888183594
    7. ']' → logprob: -15.875022888183594
    8. '   ' → logprob: -16.000022888183594
    9. ')],' → logprob: -17.750022888183594
    10. ' ' → logprob: -18.500022888183594

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038973453920334578
    2. ' for' → logprob: -6.253897190093994
    3. 'for' → logprob: -6.378897190093994
    4. '	for' → logprob: -8.378897666931152
    5. '    
' → logprob: -10.628897666931152
    6. '
' → logprob: -12.503897666931152
    7. '       ' → logprob: -12.878897666931152
    8. ' ' → logprob: -13.378897666931152
    9. '  ' → logprob: -13.378897666931152
    10. '<|end|>' → logprob: -13.503897666931152

Token 675: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08236084878444672
    2. 'for' → logprob: -3.3323607444763184
    3. '	for' → logprob: -3.8323607444763184
    4. ' for' → logprob: -3.8323607444763184
    5. '       ' → logprob: -10.707361221313477
    6. '    
' → logprob: -11.957361221313477
    7. '   ' → logprob: -13.707361221313477
    8. ' ' → logprob: -14.082361221313477
    9. '	   ' → logprob: -14.457361221313477
    10. '<|end|>' → logprob: -14.582361221313477

Token 676: ' Multip' (ID: 52811)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010385256027802825
    2. ' for' → logprob: -7.126038551330566
    3. '   ' → logprob: -8.376038551330566
    4. '	for' → logprob: -12.876038551330566
    5. '
' → logprob: -14.376038551330566
    6. ' ' → logprob: -14.751038551330566
    7. '  ' → logprob: -16.37603759765625
    8. '    
' → logprob: -16.75103759765625
    9. '```' → logprob: -16.87603759765625
    10. 'i' → logprob: -17.75103759765625

Token 677: 'lication' (ID: 2389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24954718351364136
    2. ' for' → logprob: -1.7495472431182861
    3. '   ' → logprob: -3.624547243118286
    4. 'ipl' → logprob: -4.249547004699707
    5. 'iplier' → logprob: -6.249547004699707
    6. 'ip' → logprob: -6.249547004699707
    7. 'iple' → logprob: -6.999547004699707
    8. '	for' → logprob: -7.499547004699707
    9. 'plier' → logprob: -8.624547004699707
    10. 'pl' → logprob: -9.624547004699707

Token 678: ' classique' (ID: 76895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24315744638442993
    2. ' for' → logprob: -1.6181573867797852
    3. '	for' → logprob: -4.618157386779785
    4. 'for' → logprob: -4.993157386779785
    5. '    
' → logprob: -7.618157386779785
    6. '
' → logprob: -8.493157386779785
    7. '    ' → logprob: -10.118157386779785
    8. '  ' → logprob: -10.243157386779785
    9. '	
' → logprob: -10.868157386779785
    10. ' 
' → logprob: -10.868157386779785

Token 679: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4691413938999176
    2. '   ' → logprob: -1.0941413640975952
    3. 'for' → logprob: -3.5941414833068848
    4. '<|end|>' → logprob: -5.344141483306885
    5. '	for' → logprob: -5.969141483306885
    6. '    
' → logprob: -6.594141483306885
    7. '       ' → logprob: -6.969141483306885
    8. '
' → logprob: -7.219141483306885
    9. ' ' → logprob: -7.719141483306885
    10. '    ' → logprob: -7.969141483306885

Token 680: ' matrices' (ID: 75935)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3617863655090332
    2. 'range' → logprob: -1.4867863655090332
    3. ' range' → logprob: -2.736786365509033
    4. ' a' → logprob: -4.486786365509033
    5. 'i' → logprob: -6.861786365509033
    6. 'c' → logprob: -8.736785888671875
    7. 'for' → logprob: -9.611785888671875
    8. ' i' → logprob: -10.111785888671875
    9. 'I' → logprob: -10.361785888671875
    10. 'matrix' → logprob: -11.486785888671875

Token 681: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15550826489925385
    2. '
' → logprob: -2.280508279800415
    3. ' for' → logprob: -3.405508279800415
    4. 'for' → logprob: -5.405508041381836
    5. '    
' → logprob: -6.655508041381836
    6. '<|end|>' → logprob: -6.780508041381836
    7. '	for' → logprob: -7.655508041381836
    8. ':' → logprob: -8.030508041381836
    9. '  
' → logprob: -8.155508041381836
    10. '  ' → logprob: -9.405508041381836

Token 682: 'tr' (ID: 371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06128207594156265
    2. ' for' → logprob: -3.311282157897949
    3. 'i' → logprob: -3.811282157897949
    4. ' i' → logprob: -7.186282157897949
    5. '   ' → logprob: -10.06128215789795
    6. 'range' → logprob: -10.31128215789795
    7. ')' → logprob: -12.06128215789795
    8. '
' → logprob: -12.31128215789795
    9. ' range' → logprob: -12.68628215789795
    10. 'r' → logprob: -13.43628215789795

Token 683: 'iple' (ID: 5335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4346271753311157
    2. 'for' → logprob: -1.6846271753311157
    3. 'iple' → logprob: -1.9346271753311157
    4. 'iangle' → logprob: -4.934627056121826
    5. 'ans' → logprob: -5.434627056121826
    6. 'iples' → logprob: -6.059627056121826
    7. 'ip' → logprob: -6.184627056121826
    8. 'y' → logprob: -6.434627056121826
    9. ' for' → logprob: -6.809627056121826
    10. 'e' → logprob: -7.059627056121826

Token 684: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38700994849205017
    2. ' for' → logprob: -1.1370099782943726
    3. ' nested' → logprob: -10.262009620666504
    4. ' boucle' → logprob: -10.387009620666504
    5. ' bou' → logprob: -10.512009620666504
    6. 'bou' → logprob: -10.637009620666504
    7. '   ' → logprob: -11.387009620666504
    8. '	for' → logprob: -12.512009620666504
    9. ' loop' → logprob: -12.887009620666504
    10. 'nested' → logprob: -13.387009620666504

Token 685: ' imb' (ID: 63592)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25214895606040955
    2. 'for' → logprob: -1.502148985862732
    3. '   ' → logprob: -8.502148628234863
    4. '	for' → logprob: -11.627148628234863
    5. ')' → logprob: -13.377148628234863
    6. ' pour' → logprob: -13.752148628234863
    7. ' ' → logprob: -13.877148628234863
    8. ',' → logprob: -14.127148628234863
    9. '
' → logprob: -14.127148628234863
    10. ' ' → logprob: -14.502148628234863

Token 686: 'ri' (ID: 872)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.4570010006427765
    2. 'ri' → logprob: -1.582000970840454
    3. 'ou' → logprob: -2.707000970840454
    4. 'r' → logprob: -3.332000970840454
    5. 'ouc' → logprob: -3.957000970840454
    6. 'quée' → logprob: -4.207001209259033
    7. 'rée' → logprob: -4.582001209259033
    8. 'for' → logprob: -6.082001209259033
    9. 'rc' → logprob: -6.582001209259033
    10. 'lée' → logprob: -6.707001209259033

Token 687: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.01057386677712202
    2. 'q' → logprob: -5.510573863983154
    3. 'rée' → logprob: -6.885573863983154
    4. 'ée' → logprob: -6.885573863983154
    5. 'g' → logprob: -7.010573863983154
    6. 't' → logprob: -7.135573863983154
    7. 'cée' → logprob: -7.385573863983154
    8. 'lée' → logprob: -7.385573863983154
    9. 'd' → logprob: -7.635573863983154
    10. 'née' → logprob: -8.385574340820312

Token 688: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2299988716840744
    2. ' for' → logprob: -2.229998826980591
    3. ')' → logprob: -3.354998826980591
    4. ':' → logprob: -3.979998826980591
    5. '):
' → logprob: -4.22999906539917
    6. 'for' → logprob: -4.60499906539917
    7. '):' → logprob: -4.60499906539917
    8. '
' → logprob: -5.10499906539917
    9. ':
' → logprob: -6.35499906539917
    10. ')
' → logprob: -7.10499906539917

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004166105354670435
    2. ' for' → logprob: -8.12541675567627
    3. '	for' → logprob: -9.50041675567627
    4. 'for' → logprob: -10.75041675567627
    5. '       ' → logprob: -12.00041675567627
    6. '    
' → logprob: -12.25041675567627
    7. '
' → logprob: -12.37541675567627
    8. '<|end|>' → logprob: -12.37541675567627
    9. '```' → logprob: -13.00041675567627
    10. '   ' → logprob: -14.25041675567627

Token 690: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07722137123346329
    2. ' for' → logprob: -3.077221393585205
    3. 'for' (adapté à ' for') → logprob: -3.577221393585205
    4. '	for' → logprob: -8.202220916748047
    5. '
' → logprob: -14.952220916748047
    6. '   ' → logprob: -15.952220916748047
    7. '    
' → logprob: -16.702220916748047
    8. '       ' → logprob: -17.202220916748047
    9. '    ' → logprob: -17.327220916748047
    10. '  ' → logprob: -17.452220916748047

Token 691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009119403548538685
    2. ' i' → logprob: -7.000911712646484
    3. '	i' → logprob: -14.875911712646484
    4. 'ii' → logprob: -16.250911712646484
    5. 'x' → logprob: -17.875911712646484
    6. 'r' → logprob: -17.875911712646484
    7. '   ' → logprob: -18.250911712646484
    8. 'u' → logprob: -18.375911712646484
    9. '_i' → logprob: -18.750911712646484
    10. 'k' → logprob: -18.875911712646484

Token 692: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016049619764089584
    2. 'in' → logprob: -4.141049385070801
    3. ' ' → logprob: -11.2660493850708
    4. '  ' → logprob: -14.5160493850708
    5. '0' → logprob: -14.7660493850708
    6. '   ' → logprob: -14.8910493850708
    7. '	in' → logprob: -15.1410493850708
    8. ',' → logprob: -16.016050338745117
    9. 'import' → logprob: -16.141050338745117
    10. '[' → logprob: -16.391050338745117

Token 693: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407931089401245
    2. ' range' → logprob: -0.9740793108940125
    3. ' in' → logprob: -13.349079132080078
    4. ' ' → logprob: -14.974079132080078
    5. '(range' → logprob: -16.474079132080078
    6. 'in' → logprob: -16.474079132080078
    7. 'I' → logprob: -16.724079132080078
    8. '0' → logprob: -17.099079132080078
    9. '	range' → logprob: -17.099079132080078
    10. 'rang' → logprob: -17.349079132080078

Token 694: '(I' (ID: 16705)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.008660539984703064
    2. '(I' → logprob: -4.758660316467285
    3. ' I' → logprob: -10.008660316467285
    4. '	I' → logprob: -14.008660316467285
    5. '   ' → logprob: -16.0086612701416
    6. '(' → logprob: -17.0086612701416
    7. '[I' → logprob: -17.3836612701416
    8. ' ' → logprob: -17.8836612701416
    9. ' (' → logprob: -18.1336612701416
    10. ',I' → logprob: -18.2586612701416

Token 695: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0699738934636116
    2. '):' → logprob: -2.694973945617676
    3. ':' → logprob: -11.194973945617676
    4. '   ' → logprob: -11.694973945617676
    5. '):
' → logprob: -12.194973945617676
    6. ')' → logprob: -12.444973945617676
    7. ' ):
' → logprob: -12.569973945617676
    8. ':
' → logprob: -13.944973945617676
    9. ' ):' → logprob: -14.444973945617676
    10. ' ' → logprob: -14.569973945617676

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0606488399207592
    2. ' for' → logprob: -2.9356489181518555
    3. 'for' → logprob: -5.3106489181518555
    4. '   ' → logprob: -7.4356489181518555
    5. '	for' → logprob: -8.685648918151855
    6. '	   ' → logprob: -10.560648918151855
    7. '	' → logprob: -10.685648918151855
    8. ' ' → logprob: -13.810648918151855
    9. '	       ' → logprob: -13.935648918151855
    10. '           ' → logprob: -14.310648918151855

Token 697: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023265281692147255
    2. ' for' → logprob: -3.7732653617858887
    3. '   ' → logprob: -11.27326488494873
    4. '	for' → logprob: -11.89826488494873
    5. '       ' → logprob: -15.64826488494873
    6. ' ' → logprob: -16.398265838623047
    7. '  ' → logprob: -18.648265838623047
    8. '    ' → logprob: -19.148265838623047
    9. '
' → logprob: -19.148265838623047
    10. 'range' → logprob: -19.523265838623047

Token 698: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0812448114156723
    2. 'k' → logprob: -2.581244707107544
    3. ' j' → logprob: -6.081244945526123
    4. ' k' → logprob: -9.706244468688965
    5. '   ' → logprob: -12.206244468688965
    6. '0' → logprob: -14.831244468688965
    7. '	j' → logprob: -15.206244468688965
    8. 'range' → logprob: -16.58124542236328
    9. ' ' → logprob: -16.58124542236328
    10. '    ' → logprob: -16.70624542236328

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287521541118622
    2. 'in' → logprob: -1.0537521839141846
    3. 'range' → logprob: -10.178751945495605
    4. ' ' → logprob: -12.428751945495605
    5. 'for' → logprob: -13.428751945495605
    6. '   ' → logprob: -13.428751945495605
    7. ')' → logprob: -13.428751945495605
    8. '(' → logprob: -13.553751945495605
    9. 'en' → logprob: -14.553751945495605
    10. ',' → logprob: -14.803751945495605

Token 700: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38701313734054565
    2. ' range' → logprob: -1.1370131969451904
    3. 'J' → logprob: -8.88701343536377
    4. ' J' → logprob: -13.01201343536377
    5. '(range' → logprob: -13.63701343536377
    6. '   ' → logprob: -15.63701343536377
    7. ' ' → logprob: -15.63701343536377
    8. 'Range' → logprob: -16.262012481689453
    9. '(J' → logprob: -17.387012481689453
    10. '    ' → logprob: -18.012012481689453

Token 701: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -4.9186317482963204e-05
    2. 'J' → logprob: -10.000049591064453
    3. '(' → logprob: -12.625049591064453
    4. '(
' → logprob: -15.875049591064453
    5. ' (' → logprob: -16.125049591064453
    6. '(j' → logprob: -17.125049591064453
    7. '   ' → logprob: -17.125049591064453
    8. '(K' → logprob: -17.625049591064453
    9. '	J' → logprob: -18.375049591064453
    10. '[J' → logprob: -18.625049591064453

Token 702: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20454926788806915
    2. '):
' → logprob: -1.9545493125915527
    3. ':' → logprob: -3.5795493125915527
    4. '       ' → logprob: -4.704549312591553
    5. '   ' → logprob: -5.704549312591553
    6. ':
' → logprob: -7.204549312591553
    7. ')' → logprob: -7.204549312591553
    8. ',' → logprob: -7.454549312591553
    9. 'for' → logprob: -8.704548835754395
    10. ' ):' → logprob: -8.829548835754395

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022665897849947214
    2. ' for' → logprob: -6.2522664070129395
    3. 'for' → logprob: -8.377266883850098
    4. '	       ' → logprob: -9.752266883850098
    5. '		' → logprob: -10.127266883850098
    6. '               ' → logprob: -12.752266883850098
    7. '       ' → logprob: -13.127266883850098
    8. '		   ' → logprob: -14.252266883850098
    9. '          ' → logprob: -14.627266883850098
    10. '[' → logprob: -14.877266883850098

Token 704: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005585075356066227
    2. ' for' → logprob: -5.630585193634033
    3. 's' → logprob: -6.380585193634033
    4. 'sum' → logprob: -8.755584716796875
    5. '           ' → logprob: -9.380584716796875
    6. ' s' → logprob: -11.005584716796875
    7. '       ' → logprob: -11.505584716796875
    8. 'k' → logprob: -11.505584716796875
    9. 'acc' → logprob: -12.505584716796875
    10. 'total' → logprob: -13.630584716796875

Token 705: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.650518920039758e-06
    2. 'l' → logprob: -13.625003814697266
    3. 'kk' → logprob: -14.125003814697266
    4. 'p' → logprob: -14.375003814697266
    5. ' k' → logprob: -15.000003814697266
    6. 't' → logprob: -16.000003814697266
    7. 'r' → logprob: -16.000003814697266
    8. 'x' → logprob: -16.000003814697266
    9. 'm' → logprob: -16.375003814697266
    10. 'w' → logprob: -16.625003814697266

Token 706: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004624153021723032
    2. 'in' → logprob: -5.379624366760254
    3. ' ' → logprob: -13.129624366760254
    4. 'range' → logprob: -13.629624366760254
    5. ')' → logprob: -16.129623413085938
    6. 'import' → logprob: -16.504623413085938
    7. 'd' → logprob: -16.629623413085938
    8. '   ' → logprob: -16.879623413085938
    9. '	in' → logprob: -16.879623413085938
    10. 'n' → logprob: -17.004623413085938

Token 707: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -18.128177642822266
    4. '	range' → logprob: -20.753177642822266
    5. ' ' → logprob: -21.128177642822266
    6. 'ran' → logprob: -21.378177642822266
    7. 'k' → logprob: -21.753177642822266
    8. 'rang' → logprob: -22.253177642822266
    9. '   ' → logprob: -22.503177642822266
    10. 'r' → logprob: -22.753177642822266

Token 708: '(K' (ID: 28797)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -8.149051427608356e-05
    2. '(K' → logprob: -9.500081062316895
    3. ' K' → logprob: -12.000081062316895
    4. 'k' → logprob: -15.500081062316895
    5. 'range' → logprob: -15.750081062316895
    6. '(' → logprob: -18.12508201599121
    7. ' (' → logprob: -18.37508201599121
    8. '	K' → logprob: -18.62508201599121
    9. ' ' → logprob: -19.12508201599121
    10. '   ' → logprob: -19.25008201599121

Token 709: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5183748602867126
    2. '):' → logprob: -1.5183749198913574
    3. '):
' → logprob: -1.7683749198913574
    4. ':
' → logprob: -4.518374919891357
    5. ' :' → logprob: -6.768374919891357
    6. '():
' → logprob: -7.518374919891357
    7. '=' → logprob: -8.1433744430542
    8. '   ' → logprob: -8.5183744430542
    9. '<|end|>' → logprob: -8.5183744430542
    10. ']:' → logprob: -8.6433744430542

Token 710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024965754710137844
    2. ' c' → logprob: -8.375249862670898
    3. '           ' → logprob: -12.125249862670898
    4. '              ' → logprob: -12.125249862670898
    5. 'c' → logprob: -13.125249862670898
    6. '                   ' → logprob: -13.625249862670898
    7. '                ' → logprob: -13.875249862670898
    8. '			' → logprob: -14.125249862670898
    9. '             ' → logprob: -14.125249862670898
    10. '                       ' → logprob: -14.375249862670898

Token 711: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09877921640872955
    2. ' c' → logprob: -2.4737792015075684
    3. '               ' → logprob: -4.723779201507568
    4. '	c' → logprob: -7.848779201507568
    5. '                   ' → logprob: -8.098779678344727
    6. '                               ' → logprob: -10.098779678344727
    7. '                ' → logprob: -10.223779678344727
    8. '              ' → logprob: -10.473779678344727
    9. '			' → logprob: -10.848779678344727
    10. '           ' → logprob: -11.348779678344727

Token 712: ' On' (ID: 2160)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010429323883727193
    2. ' c' → logprob: -6.87604284286499
    3. '               ' → logprob: -12.126043319702148
    4. '                   ' → logprob: -13.001043319702148
    5. '	c' → logprob: -13.126043319702148
    6. '                       ' → logprob: -16.87604331970215
    7. '                               ' → logprob: -16.87604331970215
    8. '                ' → logprob: -17.00104331970215
    9. '%c' → logprob: -17.12604331970215
    10. '           ' → logprob: -17.50104331970215

Token 713: ' addition' (ID: 5856)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05527230724692345
    2. ' c' → logprob: -2.930272340774536
    3. '               ' → logprob: -8.055272102355957
    4. '                   ' → logprob: -10.055272102355957
    5. '           ' → logprob: -10.930272102355957
    6. '                       ' → logprob: -13.430272102355957
    7. '                ' → logprob: -13.680272102355957
    8. '            ' → logprob: -14.055272102355957
    9. ' +=' → logprob: -14.180272102355957
    10. '#' → logprob: -14.180272102355957

Token 714: 'ne' (ID: 611)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17115198075771332
    2. ' +=' → logprob: -2.546151876449585
    3. '                   ' → logprob: -3.546151876449585
    4. '(c' → logprob: -4.671152114868164
    5. 'c' → logprob: -5.046152114868164
    6. ' (' → logprob: -5.046152114868164
    7. '           ' → logprob: -5.421152114868164
    8. '+=' → logprob: -5.421152114868164
    9. '                ' → logprob: -5.671152114868164
    10. ' =' → logprob: -5.796152114868164

Token 715: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20826157927513123
    2. '(a' → logprob: -1.9582616090774536
    3. '(c' → logprob: -4.083261489868164
    4. ' c' → logprob: -4.583261489868164
    5. 'c' → logprob: -5.333261489868164
    6. ' a' → logprob: -5.458261489868164
    7. 'a' → logprob: -5.458261489868164
    8. '(' → logprob: -5.458261489868164
    9. '               ' → logprob: -6.208261489868164
    10. '                ' → logprob: -9.208261489868164

Token 716: ' produit' (ID: 29429)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06813105195760727
    2. 'a' → logprob: -2.9431309700012207
    3. ' (' → logprob: -4.568130970001221
    4. '(' → logprob: -6.318130970001221
    5. ' a' → logprob: -7.068130970001221
    6. '(
' → logprob: -10.068131446838379
    7. '(c' → logprob: -10.068131446838379
    8. 'c' → logprob: -10.318131446838379
    9. '
' → logprob: -13.068131446838379
    10. '((' → logprob: -13.068131446838379

Token 717: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26722267270088196
    2. ' a' → logprob: -1.5172226428985596
    3. '               ' → logprob: -4.767222881317139
    4. '(a' → logprob: -5.892222881317139
    5. '                   ' → logprob: -6.767222881317139
    6. ' (' → logprob: -7.267222881317139
    7. ' c' → logprob: -7.267222881317139
    8. 'c' → logprob: -7.517222881317139
    9. '                ' → logprob: -8.64222240447998
    10. '           ' → logprob: -8.76722240447998

Token 718: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029911313205957413
    2. ' a' → logprob: -3.5299112796783447
    3. '(a' → logprob: -9.404911041259766
    4. ' (' → logprob: -10.154911041259766
    5. '   ' → logprob: -11.029911041259766
    6. ' ' → logprob: -11.779911041259766
    7. '(' → logprob: -12.029911041259766
    8. '	a' → logprob: -12.779911041259766
    9. '    ' → logprob: -13.279911041259766
    10. '  ' → logprob: -13.404911041259766

Token 719: ' correspond' (ID: 11095)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13481839001178741
    2. ' a' → logprob: -2.3848183155059814
    3. '               ' → logprob: -3.5098183155059814
    4. '           ' → logprob: -6.5098185539245605
    5. '                   ' → logprob: -6.5098185539245605
    6. ' de' → logprob: -8.634818077087402
    7. '                ' → logprob: -8.759818077087402
    8. '[a' → logprob: -8.884818077087402
    9. '(a' → logprob: -8.884818077087402
    10. '	a' → logprob: -9.259818077087402

Token 720: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -2.016709804534912
    2. 'a' → logprob: -2.141709804534912
    3. '               ' → logprob: -2.141709804534912
    4. '           ' → logprob: -2.516709804534912
    5. 'ants' → logprob: -2.516709804534912
    6. ' à' → logprob: -2.641709804534912
    7. ']' → logprob: -2.641709804534912
    8. 'ent' → logprob: -2.766709804534912
    9. 'à' → logprob: -2.766709804534912
    10. '[i' → logprob: -2.891709804534912

Token 721: ' selon' (ID: 27571)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.78652423620224
    2. '               ' → logprob: -1.2865242958068848
    3. 'a' → logprob: -1.5365242958068848
    4. ' c' → logprob: -3.7865242958068848
    5. '                   ' → logprob: -4.536524295806885
    6. '           ' → logprob: -5.411524295806885
    7. ' (' → logprob: -5.411524295806885
    8. ',' → logprob: -6.161524295806885
    9. 'c' → logprob: -6.536524295806885
    10. ' à' → logprob: -6.536524295806885

Token 722: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20611055195331573
    2. ' a' → logprob: -1.8311105966567993
    3. 'i' → logprob: -4.95611047744751
    4. ' k' → logprob: -5.45611047744751
    5. ' i' → logprob: -5.95611047744751
    6. ' la' → logprob: -5.95611047744751
    7. 'l' → logprob: -6.45611047744751
    8. ' l' → logprob: -6.58111047744751
    9. 'k' → logprob: -6.95611047744751
    10. '(a' → logprob: -6.95611047744751

Token 723: ' règle' (ID: 115826)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1380847543478012
    2. ' a' → logprob: -2.888084650039673
    3. 'i' → logprob: -4.263084888458252
    4. 'indices' → logprob: -4.763084888458252
    5. 'mod' → logprob: -5.013084888458252
    6. ' modulo' → logprob: -5.138084888458252
    7. 'k' → logprob: -5.388084888458252
    8. '#' → logprob: -5.388084888458252
    9. ' k' → logprob: -5.638084888458252
    10. '               ' → logprob: -5.888084888458252

Token 724: ' de' (ID: 334)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48026639223098755
    2. 'a' → logprob: -1.3552663326263428
    3. '               ' → logprob: -2.6052663326263428
    4. '                ' → logprob: -4.480266571044922
    5. ' (' → logprob: -5.105266571044922
    6. ' des' → logprob: -5.105266571044922
    7. ' +=' → logprob: -5.230266571044922
    8. ' c' → logprob: -5.355266571044922
    9. ' de' → logprob: -5.730266571044922
    10. ' =' → logprob: -6.355266571044922

Token 725: ' multiplication' (ID: 86340)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1918786764144897
    2. ' modulo' → logprob: -1.6918786764144897
    3. 'mod' → logprob: -2.4418787956237793
    4. 'mat' → logprob: -2.5668787956237793
    5. ' multiplication' → logprob: -2.5668787956237793
    6. ' la' → logprob: -2.6918787956237793
    7. 'i' → logprob: -3.4418787956237793
    8. ' modular' → logprob: -3.6918787956237793
    9. 'multip' → logprob: -3.9418787956237793
    10. ' mod' → logprob: -3.9418787956237793

Token 726: ' matric' (ID: 90143)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7772035598754883
    2. ' a' → logprob: -0.7772035598754883
    3. ' +=' → logprob: -4.027203559875488
    4. '(a' → logprob: -4.152203559875488
    5. ' (' → logprob: -4.527203559875488
    6. ' c' → logprob: -4.777203559875488
    7. '           ' → logprob: -4.902203559875488
    8. ' =' → logprob: -5.527203559875488
    9. '               ' → logprob: -5.652203559875488
    10. 'c' → logprob: -6.277203559875488

Token 727: 'ielle' (ID: 22380)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2351934313774109
    2. 'ée' → logprob: -2.8601934909820557
    3. 'a' → logprob: -3.2351934909820557
    4. 'és' → logprob: -3.4851934909820557
    5. 'ès' → logprob: -3.8601934909820557
    6. 'ées' → logprob: -3.8601934909820557
    7. 'e' → logprob: -4.610193252563477
    8. 'x' → logprob: -4.735193252563477
    9. 'ces' → logprob: -4.985193252563477
    10. 'ices' → logprob: -5.610193252563477

Token 728: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04531363397836685
    2. ' c' → logprob: -3.795313596725464
    3. '                   ' → logprob: -3.920313596725464
    4. '                       ' → logprob: -7.920313835144043
    5. ' +=' → logprob: -8.045313835144043
    6. '                ' → logprob: -8.295313835144043
    7. '           ' → logprob: -8.295313835144043
    8. 'c' → logprob: -8.795313835144043
    9. '              ' → logprob: -8.920313835144043
    10. ',' → logprob: -9.545313835144043

Token 729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005201620515435934
    2. ' c' → logprob: -5.505201816558838
    3. '                   ' → logprob: -7.255201816558838
    4. '           ' → logprob: -8.88020133972168
    5. '              ' → logprob: -9.50520133972168
    6. '                ' → logprob: -10.00520133972168
    7. '                       ' → logprob: -10.13020133972168
    8. 'c' → logprob: -10.25520133972168
    9. ' ' → logprob: -11.13020133972168
    10. '                               ' → logprob: -11.38020133972168

Token 730: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.017333446070551872
    2. ' c' → logprob: -4.142333507537842
    3. '               ' → logprob: -6.767333507537842
    4. '(c' → logprob: -9.392333030700684
    5. '                   ' → logprob: -9.892333030700684
    6. ' (' → logprob: -12.392333030700684
    7. '	c' → logprob: -13.267333030700684
    8. '                ' → logprob: -13.642333030700684
    9. '                       ' → logprob: -13.767333030700684
    10. '                               ' → logprob: -13.892333030700684

Token 731: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[I' → logprob: -15.500000953674316
    3. ' [' → logprob: -16.25
    4. '[' → logprob: -17.0
    5. 'i' → logprob: -17.125
    6. '[a' → logprob: -17.625
    7. 'a' → logprob: -17.875
    8. '][' → logprob: -18.125
    9. '```' → logprob: -18.375
    10. '[u' → logprob: -19.125

Token 732: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003428528143558651
    2. '[i' → logprob: -8.000343322753906
    3. '[j' → logprob: -12.125343322753906
    4. ']' → logprob: -14.250343322753906
    5. ' ][' → logprob: -14.250343322753906
    6. '[I' → logprob: -15.750343322753906
    7. '[' → logprob: -15.875343322753906
    8. '"][' → logprob: -16.125343322753906
    9. 'i' → logprob: -16.875343322753906
    10. '   ' → logprob: -17.125343322753906

Token 733: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.48035117983818054
    2. 'k' → logprob: -0.9803512096405029
    3. 'c' → logprob: -6.230350971221924
    4. 'i' → logprob: -6.355350971221924
    5. '][' → logprob: -6.355350971221924
    6. '0' → logprob: -8.605351448059082
    7. '   ' → logprob: -8.605351448059082
    8. ']' → logprob: -9.105351448059082
    9. ' j' → logprob: -10.105351448059082
    10. 'for' → logprob: -10.355351448059082

Token 734: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005244668107479811
    2. ']+=' → logprob: -5.255244731903076
    3. ']=(' → logprob: -12.255244255065918
    4. ']+' → logprob: -12.755244255065918
    5. ' ]' → logprob: -13.255244255065918
    6. ']=' → logprob: -14.380244255065918
    7. '+=' → logprob: -14.880244255065918
    8. '+' → logprob: -15.005244255065918
    9. '```' → logprob: -16.630245208740234
    10. ')' → logprob: -17.380245208740234

Token 735: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012258152477443218
    2. '=' → logprob: -4.512258052825928
    3. ' +=' → logprob: -6.762258052825928
    4. '+=(' → logprob: -10.637258529663086
    5. ' =' → logprob: -10.762258529663086
    6. ']+=' → logprob: -12.512258529663086
    7. '+' → logprob: -13.137258529663086
    8. '=(' → logprob: -13.512258529663086
    9. '%=' → logprob: -14.387258529663086
    10. '   ' → logprob: -16.262258529663086

Token 736: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01834413781762123
    2. '(a' → logprob: -4.018343925476074
    3. ' a' → logprob: -8.643343925476074
    4. '(' → logprob: -11.768343925476074
    5. ' (' → logprob: -11.768343925476074
    6. '   ' → logprob: -13.768343925476074
    7. '	a' → logprob: -14.018343925476074
    8. ' ' → logprob: -15.768343925476074
    9. '_a' → logprob: -16.39334487915039
    10. '((' → logprob: -16.51834487915039

Token 737: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. '[k' → logprob: -16.750001907348633
    4. ' [' → logprob: -16.875001907348633
    5. 'i' → logprob: -18.250001907348633
    6. '[j' → logprob: -18.625001907348633
    7. '][' → logprob: -18.875001907348633
    8. '[I' → logprob: -19.000001907348633
    9. '```' → logprob: -19.250001907348633
    10. '

' → logprob: -21.250001907348633

Token 738: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.718606891809031e-05
    2. '[k' → logprob: -9.875066757202148
    3. ']' → logprob: -11.875066757202148
    4. ' ][' → logprob: -12.000066757202148
    5. 'k' → logprob: -14.125066757202148
    6. '[' → logprob: -14.625066757202148
    7. '[j' → logprob: -14.625066757202148
    8. '
' → logprob: -15.500066757202148
    9. ']][' → logprob: -16.00006675720215
    10. '}[' → logprob: -16.37506675720215

Token 739: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.25
    3. '	k' → logprob: -18.0
    4. '[k' → logprob: -18.375
    5. '][' → logprob: -20.5
    6. '```' → logprob: -21.5
    7. '   ' → logprob: -21.75
    8. '(k' → logprob: -21.875
    9. 'j' → logprob: -22.125
    10. '0' → logprob: -22.375

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.875140905380249
    2. '*' → logprob: -1.250140905380249
    3. ' *' → logprob: -1.250140905380249
    4. ']*' → logprob: -4.625141143798828
    5. '*b' → logprob: -8.000141143798828
    6. ' ]' → logprob: -10.000141143798828
    7. 'b' → logprob: -10.625141143798828
    8. ' b' → logprob: -10.625141143798828
    9. ' ' → logprob: -11.250141143798828
    10. '   ' → logprob: -12.375141143798828

Token 741: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5272982120513916
    2. '*' → logprob: -1.5272982120513916
    3. '*b' → logprob: -1.6522982120513916
    4. 'b' → logprob: -7.2772979736328125
    5. ' b' → logprob: -8.152297973632812
    6. '*c' → logprob: -9.902297973632812
    7. '               ' → logprob: -11.402297973632812
    8. '   ' → logprob: -12.152297973632812
    9. ' ' → logprob: -12.277297973632812
    10. '           ' → logprob: -12.277297973632812

Token 742: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1517960956552997e-05
    2. ' b' → logprob: -11.375011444091797
    3. '   ' → logprob: -20.125011444091797
    4. '	b' → logprob: -20.250011444091797
    5. '(b' → logprob: -20.875011444091797
    6. '[b' → logprob: -21.125011444091797
    7. ')b' → logprob: -22.250011444091797
    8. '*b' → logprob: -22.875011444091797
    9. '           ' → logprob: -23.250011444091797
    10. '       ' → logprob: -23.750011444091797

Token 743: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.080963092041202e-06
    2. '][' → logprob: -12.500004768371582
    3. '[' → logprob: -14.250004768371582
    4. 'k' → logprob: -14.750004768371582
    5. '[j' → logprob: -16.0000057220459
    6. ' [' → logprob: -16.3750057220459
    7. '[i' → logprob: -17.8750057220459
    8. '[l' → logprob: -18.0000057220459
    9. '```' → logprob: -18.2500057220459
    10. ']' → logprob: -18.2500057220459

Token 744: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005956052802503109
    2. '[j' → logprob: -5.130956172943115
    3. ' ][' → logprob: -11.380955696105957
    4. ']' → logprob: -11.630955696105957
    5. 'j' → logprob: -12.755955696105957
    6. ' [' → logprob: -13.255955696105957
    7. '[' → logprob: -13.880955696105957
    8. '[i' → logprob: -14.880955696105957
    9. '"][' → logprob: -15.130955696105957
    10. ')[' → logprob: -15.630955696105957

Token 745: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.000001907348633
    3. '	j' → logprob: -19.125001907348633
    4. '[j' → logprob: -20.875001907348633
    5. '   ' → logprob: -22.375001907348633
    6. '_j' → logprob: -22.750001907348633
    7. '```' → logprob: -23.125001907348633
    8. ' ' → logprob: -23.250001907348633
    9. '$j' → logprob: -23.375001907348633
    10. '0' → logprob: -23.375001907348633

Token 746: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09983184188604355
    2. ']%' → logprob: -2.7248318195343018
    3. '%' → logprob: -4.349832057952881
    4. ')' → logprob: -4.849832057952881
    5. ' ]' → logprob: -5.474832057952881
    6. ' %' → logprob: -5.849832057952881
    7. '%c' → logprob: -7.099832057952881
    8. ')%' → logprob: -7.599832057952881
    9. '               ' → logprob: -9.099831581115723
    10. '
' → logprob: -10.599831581115723

Token 747: '           ' (ID: 352)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.368664026260376
    2. '%' → logprob: -1.243664026260376
    3. '               ' → logprob: -4.243663787841797
    4. '%c' → logprob: -5.993663787841797
    5. ' %=' → logprob: -6.243663787841797
    6. '           ' → logprob: -7.243663787841797
    7. '                   ' → logprob: -9.243663787841797
    8. '<|end|>' → logprob: -9.493663787841797
    9. ' ' → logprob: -9.743663787841797
    10. ')' → logprob: -9.743663787841797

Token 748: ' #' (ID: 1069)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3099648058414459
    2. '           ' → logprob: -1.8099647760391235
    3. 'c' → logprob: -2.809964895248413
    4. '               ' → logprob: -3.184964895248413
    5. '%c' → logprob: -7.184964656829834
    6. ' ' → logprob: -8.559965133666992
    7. '```' → logprob: -9.059965133666992
    8. '   ' → logprob: -10.309965133666992
    9. '            ' → logprob: -10.434965133666992
    10. '                   ' → logprob: -10.559965133666992

Token 749: ' On' (ID: 2160)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005426562391221523
    2. ' c' → logprob: -5.255426406860352
    3. '           ' → logprob: -8.630426406860352
    4. '   ' → logprob: -12.005426406860352
    5. '       ' → logprob: -12.380426406860352
    6. 'for' → logprob: -13.130426406860352
    7. ' for' → logprob: -14.255426406860352
    8. '               ' → logprob: -14.755426406860352
    9. ' ' → logprob: -15.130426406860352
    10. '	c' → logprob: -15.255426406860352

Token 750: ' prend' (ID: 37463)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010066879913210869
    2. ' c' → logprob: -4.635066986083984
    3. '[c' → logprob: -8.510066986083984
    4. '[' → logprob: -10.510066986083984
    5. '%c' → logprob: -10.510066986083984
    6. '           ' → logprob: -11.010066986083984
    7. '[i' → logprob: -11.385066986083984
    8. '	c' → logprob: -12.010066986083984
    9. '[
' → logprob: -12.385066986083984
    10. '   ' → logprob: -12.760066986083984

Token 751: ' le' (ID: 505)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3870586156845093
    2. 'c' → logprob: -1.1370586156845093
    3. '%c' → logprob: -8.76205825805664
    4. '%' → logprob: -11.13705825805664
    5. '	c' → logprob: -11.88705825805664
    6. '_c' → logprob: -12.26205825805664
    7. ' %' → logprob: -13.51205825805664
    8. ' ' → logprob: -14.13705825805664
    9. ' modulo' → logprob: -14.63705825805664
    10. '```' → logprob: -14.76205825805664

Token 752: ' modulo' (ID: 112372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8766822218894958
    2. '%' → logprob: -1.2516822814941406
    3. '%c' → logprob: -1.3766822814941406
    4. ' c' → logprob: -3.5016822814941406
    5. ' %' → logprob: -4.251682281494141
    6. 'mod' → logprob: -7.751682281494141
    7. ' modulo' → logprob: -8.50168228149414
    8. ' %=' → logprob: -9.25168228149414
    9. '%
' → logprob: -9.50168228149414
    10. '[c' → logprob: -9.87668228149414

Token 753: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3369077146053314
    2. ' M' → logprob: -1.4619077444076538
    3. 'c' → logprob: -3.7119076251983643
    4. ' c' → logprob: -4.586907863616943
    5. ' (' → logprob: -4.836907863616943
    6. '(' → logprob: -4.836907863616943
    7. '           ' → logprob: -6.336907863616943
    8. '(M' → logprob: -6.961907863616943
    9. '(c' → logprob: -8.211907386779785
    10. '               ' → logprob: -8.586907386779785

Token 754: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3103558123111725
    2. ' c' → logprob: -1.43535578250885
    3. 'c' → logprob: -4.1853556632995605
    4. '               ' → logprob: -5.3103556632995605
    5. '   ' → logprob: -6.0603556632995605
    6. '%c' → logprob: -6.5603556632995605
    7. '       ' → logprob: -6.6853556632995605
    8. ',' → logprob: -6.9353556632995605
    9. '                   ' → logprob: -7.6853556632995605
    10. ' ' → logprob: -8.060356140136719

Token 755: ' éviter' (ID: 64013)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06996844708919525
    2. ' c' → logprob: -2.6949684619903564
    3. '   ' → logprob: -11.319968223571777
    4. '           ' → logprob: -11.444968223571777
    5. '	c' → logprob: -12.819968223571777
    6. ' ' → logprob: -13.944968223571777
    7. '  ' → logprob: -14.194968223571777
    8. '               ' → logprob: -14.194968223571777
    9. '%c' → logprob: -14.444968223571777
    10. '       ' → logprob: -14.569968223571777

Token 756: ' que' (ID: 661)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43346327543258667
    2. ' c' → logprob: -1.0584633350372314
    3. '=' → logprob: -6.058463096618652
    4. '%c' → logprob: -6.683463096618652
    5. '<|end|>' → logprob: -8.308463096618652
    6. '```' → logprob: -8.558463096618652
    7. ' ' → logprob: -8.558463096618652
    8. '=c' → logprob: -8.933463096618652
    9. '(c' → logprob: -9.683463096618652
    10. ' %=' → logprob: -9.933463096618652

Token 757: ' les' (ID: 1341)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12699267268180847
    2. 'c' → logprob: -2.126992702484131
    3. '=' → logprob: -10.376992225646973
    4. ' ' → logprob: -11.501992225646973
    5. '           ' → logprob: -11.626992225646973
    6. '	c' → logprob: -12.876992225646973
    7. ' =' → logprob: -13.126992225646973
    8. '=c' → logprob: -13.126992225646973
    9. ' ' → logprob: -13.251992225646973
    10. '```' → logprob: -13.376992225646973

Token 758: ' nombres' (ID: 76205)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7223545908927917
    2. 'c' → logprob: -0.8473545908927917
    3. ' ' → logprob: -3.2223546504974365
    4. '[' → logprob: -3.3473546504974365
    5. '=' → logprob: -5.722354412078857
    6. '[
' → logprob: -7.097354412078857
    7. '<|end|>' → logprob: -7.097354412078857
    8. ' +=' → logprob: -7.347354412078857
    9. ' 
' → logprob: -7.472354412078857
    10. '```' → logprob: -7.597354412078857

Token 759: ' deviennent' (ID: 165279)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7027412056922913
    2. ' c' → logprob: -0.7027412056922913
    3. '           ' → logprob: -5.0777411460876465
    4. '=' → logprob: -6.4527411460876465
    5. ' continue' → logprob: -7.5777411460876465
    6. ' =' → logprob: -7.9527411460876465
    7. '[' → logprob: -8.827741622924805
    8. '=c' → logprob: -9.202741622924805
    9. ' +=' → logprob: -9.952741622924805
    10. '   ' → logprob: -9.952741622924805

Token 760: ' trop' (ID: 14765)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5487346649169922
    2. ' c' → logprob: -1.6737346649169922
    3. ' trop' → logprob: -1.6737346649169922
    4. ' M' → logprob: -3.798734664916992
    5. 'M' → logprob: -3.923734664916992
    6. ' large' → logprob: -6.798734664916992
    7. ' demasiado' → logprob: -6.798734664916992
    8. ' too' → logprob: -7.173734664916992
    9. 'large' → logprob: -7.548734664916992
    10. ' grandes' → logprob: -8.548734664916992

Token 761: ' grands' (ID: 43085)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.38131165504455566
    2. 'grand' → logprob: -2.1313116550445557
    3. 'c' → logprob: -2.2563116550445557
    4. ' grandes' → logprob: -3.3813116550445557
    5. ' grands' → logprob: -4.006311416625977
    6. ' large' → logprob: -4.131311416625977
    7. 'gr' → logprob: -5.381311416625977
    8. 'b' → logprob: -6.256311416625977
    9. 'M' → logprob: -6.381311416625977
    10. 's' → logprob: -6.506311416625977

Token 762: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011128936894237995
    2. ' c' → logprob: -5.261128902435303
    3. '               ' → logprob: -5.511128902435303
    4. '       ' → logprob: -7.761128902435303
    5. '   ' → logprob: -7.761128902435303
    6. '%c' → logprob: -7.761128902435303
    7. '                   ' → logprob: -9.261129379272461
    8. 'c' → logprob: -9.386129379272461
    9. '          ' → logprob: -9.636129379272461
    10. '            ' → logprob: -10.386129379272461

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12425713986158371
    2. ' c' → logprob: -2.2492570877075195
    3. '               ' → logprob: -4.6242570877075195
    4. 'c' → logprob: -7.2492570877075195
    5. '   ' → logprob: -7.8742570877075195
    6. ' ' → logprob: -8.99925708770752
    7. '       ' → logprob: -9.37425708770752
    8. '          ' → logprob: -9.74925708770752
    9. '%c' → logprob: -9.87425708770752
    10. '            ' → logprob: -10.37425708770752

Token 764: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.5782518982887268
    2. ' c' → logprob: -0.8282518982887268
    3. '           ' → logprob: -6.078251838684082
    4. '               ' → logprob: -11.828251838684082
    5. '   ' → logprob: -12.328251838684082
    6. '	c' → logprob: -13.078251838684082
    7. '       ' → logprob: -13.328251838684082
    8. ' ' → logprob: -13.703251838684082
    9. '%c' → logprob: -15.203251838684082
    10. '          ' → logprob: -15.453251838684082

Token 765: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.625001907348633
    3. '[c' → logprob: -14.625001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '[I' → logprob: -17.250001907348633
    7. '[j' → logprob: -17.625001907348633
    8. '
' → logprob: -17.750001907348633
    9. 'c' → logprob: -17.750001907348633
    10. '\[' → logprob: -17.750001907348633

Token 766: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25269055366516113
    2. '[i' → logprob: -1.5026905536651611
    3. '[j' → logprob: -7.377690315246582
    4. ']' → logprob: -9.002690315246582
    5. '[' → logprob: -12.377690315246582
    6. ' ][' → logprob: -13.002690315246582
    7. '%i' → logprob: -13.752690315246582
    8. 'i' → logprob: -14.002690315246582
    9. '[I' → logprob: -14.002690315246582
    10. '%' → logprob: -14.377690315246582

Token 767: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -14.75
    3. '[j' → logprob: -17.25
    4. '	j' → logprob: -17.5
    5. '```' → logprob: -18.375
    6. '$j' → logprob: -18.5
    7. '
' → logprob: -18.625
    8. 'i' → logprob: -19.125
    9. '_j' → logprob: -19.625
    10. ']' → logprob: -19.625

Token 768: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09548874944448471
    2. ')' → logprob: -3.2204887866973877
    3. '%=' → logprob: -3.2204887866973877
    4. ' %=' → logprob: -4.845488548278809
    5. '%' → logprob: -5.720488548278809
    6. ')%' → logprob: -10.595488548278809
    7. ']%' → logprob: -10.845488548278809
    8. '=' → logprob: -12.470488548278809
    9. '}' → logprob: -13.220488548278809
    10. '```' → logprob: -13.595488548278809

Token 769: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00888104923069477
    2. ' %=' → logprob: -4.758881092071533
    3. '=' → logprob: -8.758880615234375
    4. '%' → logprob: -9.133880615234375
    5. ' ' → logprob: -14.633880615234375
    6. '//=' → logprob: -14.883880615234375
    7. '	' → logprob: -15.383880615234375
    8. ' =' → logprob: -16.258880615234375
    9. '```' → logprob: -16.258880615234375
    10. '   ' → logprob: -16.883880615234375

Token 770: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0040785204619169235
    2. ' M' → logprob: -5.504078388214111
    3. '	M' → logprob: -17.129077911376953
    4. '   ' → logprob: -17.879077911376953
    5. '(M' → logprob: -18.379077911376953
    6. ' ' → logprob: -18.504077911376953
    7. ' ' → logprob: -19.754077911376953
    8. '<M' → logprob: -20.129077911376953
    9. '\M' → logprob: -20.129077911376953
    10. 'Ｍ' → logprob: -20.254077911376953

Token 771: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000998986535705626
    2. '	return' → logprob: -7.8759989738464355
    3. 'return' → logprob: -8.250999450683594
    4. '<|end|>' → logprob: -8.250999450683594
    5. ' return' → logprob: -9.625999450683594
    6. '    
' → logprob: -11.625999450683594
    7. '       ' → logprob: -11.750999450683594
    8. '<|end|>' → logprob: -12.750999450683594
    9. ' ' → logprob: -13.250999450683594
    10. '    ' → logprob: -13.625999450683594

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034142236108891666
    2. '<|end|>' → logprob: -8.250341415405273
    3. 'return' → logprob: -10.500341415405273
    4. '       ' → logprob: -10.750341415405273
    5. ' return' → logprob: -12.000341415405273
    6. '    
' → logprob: -12.000341415405273
    7. '	return' → logprob: -12.125341415405273
    8. ' ' → logprob: -12.625341415405273
    9. '```' → logprob: -13.000341415405273
    10. '  ' → logprob: -13.375341415405273

Token 773: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3134516775608063
    2. 'return' (adapté à ' return') → logprob: -1.3134516477584839
    3. ' return' → logprob: -8.938451766967773
    4. '	return' → logprob: -9.813451766967773
    5. ':return' → logprob: -13.688451766967773
    6. ' ' → logprob: -14.563451766967773
    7. '  ' → logprob: -14.688451766967773
    8. '    
' → logprob: -14.813451766967773
    9. '```' → logprob: -14.813451766967773
    10. '       ' → logprob: -15.063451766967773

Token 774: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '	c' → logprob: -18.876171112060547
    4. '(c' → logprob: -22.751171112060547
    5. ')c' → logprob: -23.001171112060547
    6. '[c' → logprob: -23.376171112060547
    7. '_c' → logprob: -23.751171112060547
    8. '<c' → logprob: -24.876171112060547
    9. 'cation' → logprob: -25.126171112060547
    10. '$c' → logprob: -25.126171112060547

Token 775: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05839892104268074
    2. '[' → logprob: -4.058398723602295
    3. 'L' → logprob: -4.808398723602295
    4. '<|end|>' → logprob: -4.808398723602295
    5. 'def' → logprob: -5.308398723602295
    6. '```' → logprob: -5.683398723602295
    7. '[
' → logprob: -5.933398723602295
    8. '(' → logprob: -5.933398723602295
    9. 'A' → logprob: -6.058398723602295
    10. '
' → logprob: -6.058398723602295

Token 776: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00887998379766941
    2. 'F' → logprob: -5.758880138397217
    3. 'n' → logprob: -6.383880138397217
    4. 'T' → logprob: -7.258880138397217
    5. 'f' → logprob: -7.508880138397217
    6. 'res' → logprob: -8.008879661560059
    7. 'result' → logprob: -8.133879661560059
    8. '```' → logprob: -8.383879661560059
    9. 'x' → logprob: -8.508879661560059
    10. 'A' → logprob: -8.508879661560059

Token 777: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06216307356953621
    2. 'T' → logprob: -4.18716287612915
    3. 'n' → logprob: -4.31216287612915
    4. 'F' → logprob: -4.68716287612915
    5. 'def' → logprob: -4.81216287612915
    6. 'f' → logprob: -5.81216287612915
    7. 'R' → logprob: -6.68716287612915
    8. 'N' → logprob: -7.06216287612915
    9. 'res' → logprob: -7.06216287612915
    10. 't' → logprob: -7.06216287612915

Token 778: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6766465902328491
    2. 't' → logprob: -2.3016467094421387
    3. 'x' → logprob: -2.5516467094421387
    4. 'n' → logprob: -2.9266467094421387
    5. 'T' → logprob: -3.0516467094421387
    6. 'res' → logprob: -3.1766467094421387
    7. 'result' → logprob: -3.4266467094421387
    8. 'A' → logprob: -4.176646709442139
    9. 'f' → logprob: -4.301646709442139
    10. 'initial' → logprob: -4.301646709442139

Token 779: ' n' (ID: 297)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.3277145624160767
    2. '[' → logprob: -1.5777145624160767
    3. 'A' → logprob: -1.9527145624160767
    4. 'x' → logprob: -2.327714443206787
    5. 'result' → logprob: -3.077714443206787
    6. 'res' → logprob: -3.202714443206787
    7. '[A' → logprob: -3.202714443206787
    8. 'ans' → logprob: -3.327714443206787
    9. '#' → logprob: -4.077714443206787
    10. '[
' → logprob: -4.202714443206787

Token 780: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5295205116271973
    2. '=' → logprob: -0.9045205116271973
    3. 'ext' → logprob: -5.529520511627197
    4. 'n' → logprob: -7.529520511627197
    5. 'for' → logprob: -8.279520034790039
    6. 'L' → logprob: -8.529520034790039
    7. '   ' → logprob: -8.654520034790039
    8. '=L' → logprob: -8.779520034790039
    9. 'ex' → logprob: -9.154520034790039
    10. 't' → logprob: -9.154520034790039

Token 781: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270257532596588
    2. ' =' → logprob: -2.127025842666626
    3. '0' → logprob: -9.252025604248047
    4. '_' → logprob: -15.127025604248047
    5. '=n' → logprob: -15.252025604248047
    6. '=int' → logprob: -15.252025604248047
    7. ',' → logprob: -15.752025604248047
    8. '_=' → logprob: -15.752025604248047
    9. 'o' → logprob: -15.877025604248047
    10. '=(' → logprob: -16.127025604248047

Token 782: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05675012618303299
    2. ' n' → logprob: -3.8067500591278076
    3. '(' → logprob: -4.931750297546387
    4. '((' → logprob: -5.306750297546387
    5. ' (' → logprob: -5.431750297546387
    6. ' =' → logprob: -5.681750297546387
    7. '(n' → logprob: -5.931750297546387
    8. 'A' → logprob: -6.056750297546387
    9. '=' → logprob: -6.056750297546387
    10. 'max' → logprob: -6.556750297546387

Token 783: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045699864625930786
    2. '_' → logprob: -3.6706998348236084
    3. ' =' → logprob: -4.0457000732421875
    4. '=' → logprob: -6.4207000732421875
    5. '_=' → logprob: -10.170700073242188
    6. 'o' → logprob: -11.420700073242188
    7. '```' → logprob: -11.795700073242188
    8. 's' → logprob: -11.920700073242188
    9. ',' → logprob: -12.170700073242188
    10. ' ' → logprob: -13.295700073242188

Token 784: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4275457561016083
    2. 'n' → logprob: -1.5525457859039307
    3. ' =' → logprob: -2.0525457859039307
    4. '=n' → logprob: -5.427545547485352
    5. '0' → logprob: -6.302545547485352
    6. '=
' → logprob: -7.052545547485352
    7. '
' → logprob: -8.177545547485352
    8. ',' → logprob: -8.927545547485352
    9. '_n' → logprob: -9.927545547485352
    10. ' n' → logprob: -10.052545547485352

Token 785: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023777850437909365
    2. '#' → logprob: -7.127377986907959
    3. ' n' → logprob: -7.627377986907959
    4. '=' → logprob: -7.752377986907959
    5. 'A' → logprob: -8.2523775100708
    6. ' =' → logprob: -9.6273775100708
    7. '0' → logprob: -9.6273775100708
    8. '
' → logprob: -9.8773775100708
    9. '```' → logprob: -10.1273775100708
    10. 'L' → logprob: -10.7523775100708

Token 786: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004632807336747646
    2. ' =' → logprob: -5.379632949829102
    3. ',' → logprob: -12.629632949829102
    4. 's' → logprob: -12.879632949829102
    5. '=n' → logprob: -13.629632949829102
    6. 'n' → logprob: -13.754632949829102
    7. '=

' → logprob: -13.879632949829102
    8. '#' → logprob: -14.379632949829102
    9. '=int' → logprob: -14.629632949829102
    10. '=
' → logprob: -14.754632949829102

Token 787: ' des' (ID: 731)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15481047332286835
    2. 'L' → logprob: -2.4048104286193848
    3. '(A' → logprob: -3.2798104286193848
    4. '(L' → logprob: -5.279810428619385
    5. ' A' → logprob: -5.654810428619385
    6. 'n' → logprob: -6.154810428619385
    7. ' (' → logprob: -6.529810428619385
    8. '(' → logprob: -7.154810428619385
    9. '0' → logprob: -7.279810428619385
    10. ' L' → logprob: -8.029810905456543

Token 788: ' indices' (ID: 30378)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5423842072486877
    2. 'n' → logprob: -1.292384147644043
    3. 'L' → logprob: -2.417384147644043
    4. '0' → logprob: -4.792384147644043
    5. '[A' → logprob: -4.792384147644043
    6. '2' → logprob: -5.167384147644043
    7. '[n' → logprob: -5.167384147644043
    8. '[' → logprob: -5.417384147644043
    9. '[L' → logprob: -5.417384147644043
    10. 'ent' → logprob: -6.042384147644043

Token 789: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8564313650131226
    2. ' =' → logprob: -0.8564313650131226
    3. 'n' → logprob: -1.9814313650131226
    4. '0' → logprob: -4.606431484222412
    5. '_n' → logprob: -7.481431484222412
    6. ' n' → logprob: -7.731431484222412
    7. '_' → logprob: -7.731431484222412
    8. '   ' → logprob: -8.731431007385254
    9. 'de' → logprob: -8.981431007385254
    10. 'initial' → logprob: -9.106431007385254

Token 790: ' début' (ID: 29589)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24941053986549377
    2. 'l' → logprob: -2.624410629272461
    3. 'dé' → logprob: -3.749410629272461
    4. 'mat' → logprob: -4.124410629272461
    5. ' ' → logprob: -4.249410629272461
    6. 'n' → logprob: -4.499410629272461
    7. ' range' → logprob: -4.499410629272461
    8. 'la' → logprob: -4.999410629272461
    9. 'i' → logprob: -5.249410629272461
    10. 't' → logprob: -5.374410629272461

Token 791: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17944785952568054
    2. ' =' → logprob: -2.179447889328003
    3. '=' → logprob: -3.179447889328003
    4. '_n' → logprob: -5.679447650909424
    5. ',' → logprob: -6.554447650909424
    6. '0' → logprob: -6.804447650909424
    7. ' n' → logprob: -7.054447650909424
    8. '
' → logprob: -7.429447650909424
    9. '_' → logprob: -7.429447650909424
    10. '```' → logprob: -8.054448127746582

Token 792: ' de' (ID: 334)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0007798461592756212
    2. ' fin' → logprob: -7.625779628753662
    3. '#' → logprob: -8.87578010559082
    4. 'n' → logprob: -9.12578010559082
    5. 'de' → logprob: -11.00078010559082
    6. '```' → logprob: -11.12578010559082
    7. '   ' → logprob: -12.62578010559082
    8. ' ' → logprob: -13.62578010559082
    9. 'arr' → logprob: -13.62578010559082
    10. ' n' → logprob: -14.25078010559082

Token 793: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0005840110243298113
    2. ' fin' → logprob: -7.500584125518799
    3. '```' → logprob: -11.25058364868164
    4. 'n' → logprob: -12.12558364868164
    5. 'range' → logprob: -13.00058364868164
    6. 'f' → logprob: -13.25058364868164
    7. 'l' → logprob: -13.37558364868164
    8. 'interval' → logprob: -14.12558364868164
    9. '#' → logprob: -14.12558364868164
    10. 'suite' → logprob: -14.25058364868164

Token 794: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1641789823770523
    2. 'n' → logprob: -2.2891790866851807
    3. ' =' → logprob: -3.0391790866851807
    4. '=
' → logprob: -7.164178848266602
    5. '0' → logprob: -7.914178848266602
    6. '=n' → logprob: -8.289178848266602
    7. '
' → logprob: -8.664178848266602
    8. '_n' → logprob: -8.789178848266602
    9. ' n' → logprob: -9.039178848266602
    10. ',' → logprob: -9.164178848266602

Token 795: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02288481779396534
    2. 'L' → logprob: -4.022884845733643
    3. 'A' → logprob: -6.647884845733643
    4. '(range' → logprob: -6.647884845733643
    5. ' range' → logprob: -6.772884845733643
    6. '(L' → logprob: -7.897884845733643
    7. 'n' → logprob: -9.147884368896484
    8. 'l' → logprob: -9.272884368896484
    9. '(A' → logprob: -9.397884368896484
    10. 'x' → logprob: -9.647884368896484

Token 796: ' boucle' (ID: 174211)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45228514075279236
    2. 'for' → logprob: -1.9522851705551147
    3. 'range' → logprob: -1.9522851705551147
    4. ' range' → logprob: -3.702285051345825
    5. 'i' → logprob: -3.827285051345825
    6. ' n' → logprob: -4.952285289764404
    7. ' for' → logprob: -5.077285289764404
    8. 'mat' → logprob: -5.577285289764404
    9. '(' → logprob: -5.702285289764404
    10. '#' → logprob: -6.577285289764404

Token 797: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5391584038734436
    2. '=' → logprob: -1.4141583442687988
    3. ' =' → logprob: -2.039158344268799
    4. '0' → logprob: -3.789158344268799
    5. '
' → logprob: -4.664158344268799
    6. '=
' → logprob: -5.414158344268799
    7. '_n' → logprob: -5.539158344268799
    8. '=n' → logprob: -6.789158344268799
    9. '_' → logprob: -7.664158344268799
    10. ',' → logprob: -8.039158821105957

Token 798: ' chiffres' (ID: 105565)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2611933946609497
    2. 'i' → logprob: -1.7611933946609497
    3. 'l' → logprob: -3.51119327545166
    4. 'for' → logprob: -4.13619327545166
    5. 'n' → logprob: -5.13619327545166
    6. ' range' → logprob: -6.76119327545166
    7. 'la' → logprob: -6.88619327545166
    8. 'it' → logprob: -7.63619327545166
    9. ' i' → logprob: -7.76119327545166
    10. 'val' → logprob: -7.88619327545166

Token 799: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8292601704597473
    2. 'n' → logprob: -0.9542601704597473
    3. ' =' → logprob: -1.9542601108551025
    4. '0' → logprob: -4.079260349273682
    5. '
' → logprob: -4.579260349273682
    6. '=
' → logprob: -4.954260349273682
    7. '```' → logprob: -7.204260349273682
    8. '_n' → logprob: -7.829260349273682
    9. ' =
' → logprob: -8.329259872436523
    10. '_' → logprob: -8.454259872436523

Token 800: ' d' (ID: 272)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3642175197601318
    2. 'i' → logprob: -1.3642175197601318
    3. 'n' → logprob: -1.4892175197601318
    4. 'l' → logprob: -2.114217519760132
    5. 'A' → logprob: -2.989217519760132
    6. ' L' → logprob: -3.489217519760132
    7. 'range' → logprob: -4.364217758178711
    8. 'val' → logprob: -4.614217758178711
    9. 'for' → logprob: -5.239217758178711
    10. ' n' → logprob: -5.614217758178711

Token 801: ' chiffres' (ID: 105565)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5564000606536865
    2. 'é' → logprob: -1.8064000606536865
    3. 'i' → logprob: -1.9314000606536865
    4. 'éc' → logprob: -3.0564000606536865
    5. '=' → logprob: -3.6814000606536865
    6. ' =' → logprob: -4.181400299072266
    7. 'n' → logprob: -4.306400299072266
    8. 'f' → logprob: -5.681400299072266
    9. 'éf' → logprob: -5.681400299072266
    10. ',' → logprob: -6.306400299072266

Token 802: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4366309940814972
    2. 'n' → logprob: -1.0616309642791748
    3. '0' → logprob: -5.811631202697754
    4. ' =' → logprob: -5.936631202697754
    5. '=
' → logprob: -6.436631202697754
    6. '_n' → logprob: -8.811631202697754
    7. '=n' → logprob: -8.936631202697754
    8. '_' → logprob: -9.061631202697754
    9. '
' → logprob: -9.061631202697754
    10. '=

' → logprob: -10.561631202697754

Token 803: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08102782070636749
    2. '=' → logprob: -2.5810277462005615
    3. '=
' → logprob: -6.831027984619141
    4. ' =' → logprob: -7.456027984619141
    5. '0' → logprob: -9.08102798461914
    6. '#' → logprob: -9.45602798461914
    7. '=n' → logprob: -9.95602798461914
    8. 'd' → logprob: -10.45602798461914
    9. '
' → logprob: -10.45602798461914
    10. '_n' → logprob: -10.58102798461914

Token 804: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003704933915287256
    2. '#' → logprob: -9.375370025634766
    3. 'd' → logprob: -9.500370025634766
    4. '=' → logprob: -9.500370025634766
    5. '
' → logprob: -9.750370025634766
    6. '```' → logprob: -10.500370025634766
    7. '0' → logprob: -11.625370025634766
    8. ' =' → logprob: -11.625370025634766
    9. '=
' → logprob: -11.875370025634766
    10. 'for' → logprob: -12.125370025634766

Token 805: '(-(' (ID: 174232)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038334764540195465
    2. '=' → logprob: -3.788334846496582
    3. '#' → logprob: -5.288334846496582
    4. ' =' → logprob: -5.413334846496582
    5. '_' → logprob: -5.788334846496582
    6. '0' → logprob: -7.288334846496582
    7. ',' → logprob: -7.913334846496582
    8. '_n' → logprob: -8.288334846496582
    9. '```' → logprob: -8.663334846496582
    10. '
' → logprob: -9.038334846496582

Token 806: '10' (ID: 702)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2040182501077652
    2. '(L' → logprob: -1.704018235206604
    3. '((' → logprob: -6.9540181159973145
    4. 'n' → logprob: -7.5790181159973145
    5. '(' → logprob: -7.7040181159973145
    6. ' L' → logprob: -8.704018592834473
    7. ' (' → logprob: -8.829018592834473
    8. '(n' → logprob: -9.704018592834473
    9. ')' → logprob: -10.204018592834473
    10. '1' → logprob: -10.204018592834473

Token 807: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.21552270650863647
    2. ')' → logprob: -2.8405227661132812
    3. ' **' → logprob: -3.2155227661132812
    4. ' //' → logprob: -3.8405227661132812
    5. 'L' → logprob: -3.9655227661132812
    6. '//' → logprob: -4.215522766113281
    7. '(L' → logprob: -4.715522766113281
    8. '0' → logprob: -4.840522766113281
    9. '10' → logprob: -5.840522766113281
    10. '(n' → logprob: -5.840522766113281

Token 808: ' d' (ID: 272)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7026229500770569
    2. 'd' → logprob: -0.9526229500770569
    3. '9' → logprob: -2.702622890472412
    4. '(L' → logprob: -3.827622890472412
    5. '1' → logprob: -4.827622890472412
    6. '10' → logprob: -5.452622890472412
    7. 'n' → logprob: -5.577622890472412
    8. '(' → logprob: -5.827622890472412
    9. '6' → logprob: -6.452622890472412
    10. '4' → logprob: -6.577622890472412

Token 809: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7153335809707642
    2. '(L' → logprob: -1.7153335809707642
    3. 'L' → logprob: -1.9653335809707642
    4. 'd' → logprob: -1.9653335809707642
    5. '(d' → logprob: -2.3403334617614746
    6. '(' → logprob: -2.4653334617614746
    7. '//' → logprob: -2.9653334617614746
    8. '))' → logprob: -3.7153334617614746
    9. '(n' → logprob: -3.9653334617614746
    10. '10' → logprob: -4.090333461761475

Token 810: ' A' (ID: 355)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.21800191700458527
    2. '1' → logprob: -1.9680019617080688
    3. 'n' → logprob: -3.3430018424987793
    4. '(L' → logprob: -4.468001842498779
    5. ' L' → logprob: -5.968001842498779
    6. '(' → logprob: -6.343001842498779
    7. '((' → logprob: -6.468001842498779
    8. '(n' → logprob: -6.843001842498779
    9. 'd' → logprob: -7.343001842498779
    10. ' (' → logprob: -8.093002319335938

Token 811: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36737728118896484
    2. 'L' → logprob: -2.617377281188965
    3. '+' → logprob: -2.742377281188965
    4. ' +' → logprob: -3.992377281188965
    5. '))' → logprob: -4.242377281188965
    6. ' -' → logprob: -4.242377281188965
    7. ')//' → logprob: -4.367377281188965
    8. 'n' → logprob: -4.492377281188965
    9. '**' → logprob: -4.617377281188965
    10. ' )' → logprob: -4.617377281188965

Token 812: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8494207262992859
    2. ' //' → logprob: -0.8494207262992859
    3. ')' → logprob: -2.2244207859039307
    4. '(n' → logprob: -4.474420547485352
    5. '(L' → logprob: -4.849420547485352
    6. '+' → logprob: -5.099420547485352
    7. ')//' → logprob: -5.974420547485352
    8. '(' → logprob: -6.474420547485352
    9. '#' → logprob: -6.599420547485352
    10. 'n' → logprob: -6.849420547485352

Token 813: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.18720634281635284
    2. 'L' → logprob: -2.062206268310547
    3. '1' → logprob: -4.437206268310547
    4. '(B' → logprob: -4.687206268310547
    5. 'M' → logprob: -4.812206268310547
    6. '(L' → logprob: -5.187206268310547
    7. ' B' → logprob: -5.812206268310547
    8. '(' → logprob: -5.937206268310547
    9. '((' → logprob: -6.812206268310547
    10. ' L' → logprob: -7.562206268310547

Token 814: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4522249698638916
    2. ')' → logprob: -1.8272249698638916
    3. '(n' → logprob: -2.4522249698638916
    4. '(L' → logprob: -2.8272249698638916
    5. '(d' → logprob: -4.3272247314453125
    6. 'd' → logprob: -4.5772247314453125
    7. '((' → logprob: -4.9522247314453125
    8. 'n' → logprob: -5.0772247314453125
    9. '1' → logprob: -5.4522247314453125
    10. '(
' → logprob: -5.7022247314453125

Token 815: ' fait' (ID: 7473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4765863418579102
    2. 'n' → logprob: -1.6015863418579102
    3. '(' → logprob: -1.7265863418579102
    4. 'd' → logprob: -1.9765863418579102
    5. '<|end|>' → logprob: -1.9765863418579102
    6. '#' → logprob: -2.97658634185791
    7. '(n' → logprob: -3.97658634185791
    8. '=' → logprob: -5.10158634185791
    9. '0' → logprob: -5.35158634185791
    10. ' (' → logprob: -5.35158634185791

Token 816: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8580201268196106
    2. 'lambda' → logprob: -1.7330200672149658
    3. '((' → logprob: -1.8580200672149658
    4. '(lambda' → logprob: -2.233020067214966
    5. 'n' → logprob: -2.733020067214966
    6. ' (' → logprob: -3.983020067214966
    7. 'part' → logprob: -4.233020305633545
    8. ' ((' → logprob: -4.733020305633545
    9. '(n' → logprob: -5.108020305633545
    10. '(((' → logprob: -5.483020305633545

Token 817: ' arr' (ID: 1724)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08641444146633148
    2. '((' → logprob: -3.586414337158203
    3. ' (' → logprob: -4.086414337158203
    4. '(
' → logprob: -4.961414337158203
    5. ')' → logprob: -5.086414337158203
    6. '('' → logprob: -5.586414337158203
    7. 'n' → logprob: -5.836414337158203
    8. '(n' → logprob: -6.211414337158203
    9. '(((' → logprob: -6.336414337158203
    10. '1' → logprob: -6.461414337158203

Token 818: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.10029702633619308
    2. 'ond' → logprob: -2.350296974182129
    3. 'ondissement' → logprob: -9.475296974182129
    4. 'ont' → logprob: -11.850296974182129
    5. 'ound' → logprob: -13.725296974182129
    6. '```' → logprob: -13.975296974182129
    7. 'on' → logprob: -13.975296974182129
    8. 'онд' → logprob: -14.100296974182129
    9. 'onde' → logprob: -14.100296974182129
    10. '>' → logprob: -14.600296974182129

Token 819: ' "' (ID: 392)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5075968503952026
    2. '(' → logprob: -1.1325968503952026
    3. 'd' → logprob: -4.007596969604492
    4. 'up' → logprob: -4.382596969604492
    5. '(
' → logprob: -4.757596969604492
    6. 'down' → logprob: -4.757596969604492
    7. '(n' → logprob: -5.132596969604492
    8. 'def' → logprob: -5.132596969604492
    9. 'div' → logprob: -5.632596969604492
    10. ')' → logprob: -6.507596969604492

Token 820: 'pl' (ID: 528)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7965952754020691
    2. '(-(' → logprob: -1.4215953350067139
    3. '(' → logprob: -1.9215953350067139
    4. 'up' → logprob: -2.171595335006714
    5. '(
' → logprob: -5.046595096588135
    6. '-' → logprob: -5.046595096588135
    7. '(-' → logprob: -5.171595096588135
    8. 'div' → logprob: -5.296595096588135
    9. '(n' → logprob: -5.546595096588135
    10. '(((' → logprob: -5.546595096588135

Token 821: 'af' (ID: 1553)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.508833110332489
    2. 'af' → logprob: -1.3838331699371338
    3. 'anch' → logprob: -2.133833169937134
    4. 'ur' → logprob: -4.133832931518555
    5. 'us' → logprob: -5.383832931518555
    6. 'ef' → logprob: -6.508832931518555
    7. 'anche' → logprob: -7.133832931518555
    8. 'anf' → logprob: -7.383832931518555
    9. 'ane' → logprob: -7.508832931518555
    10. 'a' → logprob: -7.508832931518555

Token 822: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.02009005658328533
    2. 'onné' → logprob: -4.520090103149414
    3. 'on' → logprob: -5.645090103149414
    4. 'uff' → logprob: -6.895090103149414
    5. 'af' → logprob: -7.145090103149414
    6. 'ef' → logprob: -7.270090103149414
    7. 'u' → logprob: -7.895090103149414
    8. 'onnement' → logprob: -8.145090103149414
    9. 'off' → logprob: -8.270090103149414
    10. 'aff' → logprob: -8.270090103149414

Token 823: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3296318054199219
    2. '(
' → logprob: -1.9546318054199219
    3. '((' → logprob: -2.079631805419922
    4. 'div' → logprob: -5.704631805419922
    5. 'def' → logprob: -6.454631805419922
    6. '(-(' → logprob: -6.454631805419922
    7. '(n' → logprob: -6.579631805419922
    8. ' (' → logprob: -6.829631805419922
    9. '_div' → logprob: -7.454631805419922
    10. ')' → logprob: -7.579631805419922

Token 824: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3138187825679779
    2. '(' → logprob: -2.3138186931610107
    3. 'd' → logprob: -2.5638186931610107
    4. '(
' → logprob: -2.9388186931610107
    5. '(n' → logprob: -3.8138186931610107
    6. '(d' → logprob: -4.18881893157959
    7. '((' → logprob: -7.31381893157959
    8. ' (' → logprob: -8.06381893157959
    9. '#' → logprob: -8.18881893157959
    10. ')' → logprob: -8.31381893157959

Token 825: ' obtenir' (ID: 54423)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.35568639636039734
    2. '(' → logprob: -1.6056864261627197
    3. '(-(' → logprob: -3.3556864261627197
    4. ' (' → logprob: -3.7306864261627197
    5. ' ((' → logprob: -4.230686187744141
    6. 'n' → logprob: -4.605686187744141
    7. '(n' → logprob: -5.480686187744141
    8. 'div' → logprob: -5.980686187744141
    9. '(((' → logprob: -6.355686187744141
    10. '(lambda' → logprob: -6.855686187744141

Token 826: ' le' (ID: 505)
  Prédit: '(-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-(' → logprob: -0.8785639405250549
    2. 'n' → logprob: -1.3785638809204102
    3. '(' → logprob: -2.00356388092041
    4. '((' → logprob: -2.12856388092041
    5. ' (' → logprob: -4.00356388092041
    6. '(-' → logprob: -4.12856388092041
    7. '(n' → logprob: -4.37856388092041
    8. ' n' → logprob: -4.87856388092041
    9. '(L' → logprob: -5.12856388092041
    10. '0' → logprob: -5.37856388092041

Token 827: ' nombre' (ID: 9733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26120156049728394
    2. '(L' → logprob: -2.2612016201019287
    3. 'n' → logprob: -3.3862016201019287
    4. 'prem' → logprob: -3.7612016201019287
    5. '((' → logprob: -4.38620138168335
    6. ' (' → logprob: -4.63620138168335
    7. 'nombre' → logprob: -4.63620138168335
    8. '-(' → logprob: -4.76120138168335
    9. ' premier' → logprob: -5.26120138168335
    10. 'L' → logprob: -5.26120138168335

Token 828: ' minimal' (ID: 19957)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20392414927482605
    2. '(' → logprob: -2.0789241790771484
    3. '(n' → logprob: -3.4539241790771484
    4. 'd' → logprob: -4.953924179077148
    5. '(
' → logprob: -4.953924179077148
    6. '_n' → logprob: -5.328924179077148
    7. '_' → logprob: -5.828924179077148
    8. '((' → logprob: -6.453924179077148
    9. '#' → logprob: -7.078924179077148
    10. 'of' → logprob: -7.328924179077148

Token 829: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13325844705104828
    2. '(n' → logprob: -2.63325834274292
    3. '(' → logprob: -3.63325834274292
    4. '((' → logprob: -4.25825834274292
    5. 'd' → logprob: -5.13325834274292
    6. '(
' → logprob: -6.25825834274292
    7. 'def' → logprob: -6.25825834274292
    8. '_n' → logprob: -7.13325834274292
    9. 'of' → logprob: -8.008258819580078
    10. '#' → logprob: -8.758258819580078

Token 830: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6057536602020264
    2. '(' → logprob: -1.6057536602020264
    3. 'd' → logprob: -2.4807536602020264
    4. ')' → logprob: -2.6057536602020264
    5. '(
' → logprob: -4.2307538986206055
    6. '_' → logprob: -4.3557538986206055
    7. 'digits' → logprob: -4.4807538986206055
    8. 'steps' → logprob: -5.2307538986206055
    9. 'iterations' → logprob: -5.2307538986206055
    10. ' n' → logprob: -5.8557538986206055

Token 831: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.003251031506806612
    2. 'iterations' → logprob: -6.378251075744629
    3. 'itera' → logprob: -7.628251075744629
    4. ''' → logprob: -7.753251075744629
    5. 'iter' → logprob: -8.128251075744629
    6. '(it' → logprob: -9.878251075744629
    7. 'ité' → logprob: -10.253251075744629
    8. 'iteration' → logprob: -10.628251075744629
    9. ' it' → logprob: -10.628251075744629
    10. '```' → logprob: -11.003251075744629

Token 832: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.5441200137138367
    2. 'r' → logprob: -0.9191200137138367
    3. 'er' → logprob: -4.794119834899902
    4. 'ations' → logprob: -5.919119834899902
    5. 'L' → logprob: -6.044119834899902
    6. '#' → logprob: -6.544119834899902
    7. '(L' → logprob: -6.669119834899902
    8. 't' → logprob: -7.294119834899902
    9. ')' → logprob: -7.794119834899902
    10. 'ration' → logprob: -7.794119834899902

Token 833: ' nécessaires' (ID: 74402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21790337562561035
    2. 'd' → logprob: -1.8429033756256104
    3. '#' → logprob: -4.467903137207031
    4. '10' → logprob: -4.967903137207031
    5. '
' → logprob: -5.592903137207031
    6. '0' → logprob: -5.717903137207031
    7. '=' → logprob: -5.842903137207031
    8. '(' → logprob: -6.217903137207031
    9. '<|end|>' → logprob: -6.467903137207031
    10. ' =' → logprob: -6.717903137207031

Token 834: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5264278650283813
    2. 'd' → logprob: -1.5264278650283813
    3. '(' → logprob: -2.026427745819092
    4. ')' → logprob: -3.901427745819092
    5. '#' → logprob: -4.526427745819092
    6. '=' → logprob: -4.776427745819092
    7. '(
' → logprob: -5.276427745819092
    8. '_' → logprob: -5.401427745819092
    9. '(n' → logprob: -6.276427745819092
    10. ',' → logprob: -6.276427745819092

Token 835: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27906864881515503
    2. 'n' → logprob: -1.5290687084197998
    3. '(' → logprob: -4.154068470001221
    4. '```' → logprob: -6.029068470001221
    5. '(
' → logprob: -6.154068470001221
    6. ' =' → logprob: -6.654068470001221
    7. '#' → logprob: -7.279068470001221
    8. ' (' → logprob: -7.529068470001221
    9. '[' → logprob: -7.529068470001221
    10. '`' → logprob: -7.654068470001221

Token 836: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6942040324211121
    2. '_' → logprob: -0.6942040324211121
    3. '=' → logprob: -7.194203853607178
    4. ' =' → logprob: -8.819204330444336
    5. '_=' → logprob: -9.194204330444336
    6. ' _' → logprob: -11.194204330444336
    7. '=_' → logprob: -11.694204330444336
    8. '_
' → logprob: -11.694204330444336
    9. '_,' → logprob: -12.194204330444336
    10. ',' → logprob: -12.569204330444336

Token 837: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519322335720062
    2. '=' → logprob: -1.5019322633743286
    3. ',' → logprob: -13.001932144165039
    4. ' =
' → logprob: -15.251932144165039
    5. ' ' → logprob: -15.376932144165039
    6. ' ' → logprob: -16.00193214416504
    7. '=
' → logprob: -16.62693214416504
    8. '=int' → logprob: -16.75193214416504
    9. '=

' → logprob: -16.75193214416504
    10. '＝' → logprob: -17.25193214416504

Token 838: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00593827897682786
    2. '(-' → logprob: -5.3809380531311035
    3. '-(' → logprob: -7.2559380531311035
    4. '(' → logprob: -8.005938529968262
    5. ' -' → logprob: -8.755938529968262
    6. '((' → logprob: -10.630938529968262
    7. '0' → logprob: -10.880938529968262
    8. 'max' → logprob: -10.880938529968262
    9. '-max' → logprob: -10.880938529968262
    10. '(-(' → logprob: -11.005938529968262

Token 839: '(-(' (ID: 174232)
  Prédit: '(-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-(' → logprob: -0.07324716448783875
    2. '(-' → logprob: -3.073247194290161
    3. '((' → logprob: -4.073246955871582
    4. '((-' → logprob: -5.573246955871582
    5. '(' → logprob: -5.698246955871582
    6. '-' → logprob: -8.698246955871582
    7. ' (' → logprob: -11.573246955871582
    8. '-(' → logprob: -12.198246955871582
    9. ' ((' → logprob: -13.698246955871582
    10. '(
' → logprob: -14.073246955871582

Token 840: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3868953287601471
    2. '(' → logprob: -1.1368952989578247
    3. '((' → logprob: -11.386895179748535
    4. ' (' → logprob: -11.636895179748535
    5. ' ' → logprob: -13.261895179748535
    6. '
' → logprob: -14.261895179748535
    7. '100' → logprob: -14.636895179748535
    8. '(
' → logprob: -15.136895179748535
    9. 'pow' → logprob: -15.136895179748535
    10. '1' → logprob: -16.13689613342285

Token 841: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07002101838588715
    2. ' **' → logprob: -2.695020914077759
    3. ' ' → logprob: -10.19502067565918
    4. 'd' → logprob: -11.69502067565918
    5. ' **)' → logprob: -11.82002067565918
    6. ')' → logprob: -11.94502067565918
    7. ' d' → logprob: -12.19502067565918
    8. '**)' → logprob: -12.19502067565918
    9. ' ' → logprob: -12.57002067565918
    10. ')**' → logprob: -12.82002067565918

Token 842: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013943230733275414
    2. '0' → logprob: -4.638943195343018
    3. ' d' → logprob: -6.138943195343018
    4. '1' → logprob: -6.888943195343018
    5. ' ' → logprob: -8.138943672180176
    6. '3' → logprob: -8.388943672180176
    7. '9' → logprob: -9.138943672180176
    8. '6' → logprob: -9.138943672180176
    9. '10' → logprob: -9.638943672180176
    10. '```' → logprob: -9.763943672180176

Token 843: '0' (ID: 15)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07347767800092697
    2. '0' → logprob: -2.8234777450561523
    3. '9' → logprob: -5.073477745056152
    4. 'L' → logprob: -6.198477745056152
    5. '6' → logprob: -6.948477745056152
    6. '1' → logprob: -7.198477745056152
    7. '15' → logprob: -8.698477745056152
    8. '```' → logprob: -8.698477745056152
    9. '18' → logprob: -8.823477745056152
    10. '3' → logprob: -8.948477745056152

Token 844: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22126413881778717
    2. '-' → logprob: -1.721264123916626
    3. 'd' → logprob: -4.346264362335205
    4. '-d' → logprob: -5.471264362335205
    5. ' ' → logprob: -6.471264362335205
    6. ' d' → logprob: -7.721264362335205
    7. ')' → logprob: -8.346263885498047
    8. '   ' → logprob: -9.846263885498047
    9. '1' → logprob: -10.096263885498047
    10. '    ' → logprob: -10.346263885498047

Token 845: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005236837547272444
    2. ' A' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.255236625671387
    4. '	A' → logprob: -14.505236625671387
    5. ' ' → logprob: -14.880236625671387
    6. 'L' → logprob: -15.505236625671387
    7. '(A' → logprob: -16.755237579345703
    8. '  ' → logprob: -17.130237579345703
    9. '_A' → logprob: -17.380237579345703
    10. ''A' → logprob: -17.380237579345703

Token 846: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013003747910261154
    2. ' )' → logprob: -4.513003826141357
    3. ' +' → logprob: -7.138003826141357
    4. ')//' → logprob: -7.388003826141357
    5. '+' → logprob: -7.763003826141357
    6. '   ' → logprob: -10.3880033493042
    7. ' ' → logprob: -10.7630033493042
    8. ' -' → logprob: -11.0130033493042
    9. '-' → logprob: -11.7630033493042
    10. ')/' → logprob: -11.8880033493042

Token 847: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19999796152114868
    2. '+' → logprob: -3.199997901916504
    3. '//' → logprob: -3.199997901916504
    4. ' //' → logprob: -3.199997901916504
    5. ' ' → logprob: -3.699997901916504
    6. ' +' → logprob: -3.949997901916504
    7. ' )' → logprob: -4.574997901916504
    8. '   ' → logprob: -6.324997901916504
    9. ')//' → logprob: -7.324997901916504
    10. '       ' → logprob: -7.574997901916504

Token 848: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.627176768844947e-05
    2. ' B' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.62509536743164
    4. '	B' → logprob: -18.00009536743164
    5. '       ' → logprob: -20.00009536743164
    6. ' ' → logprob: -20.87509536743164
    7. '           ' → logprob: -21.00009536743164
    8. '(B' → logprob: -21.00009536743164
    9. '>B' → logprob: -21.50009536743164
    10. '```' → logprob: -21.75009536743164

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.984787902794778e-05
    2. ')
' → logprob: -9.250100135803223
    3. ')n' → logprob: -13.875100135803223
    4. ')
' → logprob: -14.125100135803223
    5. ')

' → logprob: -14.500100135803223
    6. ' )' → logprob: -14.625100135803223
    7. '))' → logprob: -15.750100135803223
    8. ')#' → logprob: -15.875100135803223
    9. ')`' → logprob: -16.125099182128906
    10. ')+' → logprob: -16.625099182128906

Token 850: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23038145899772644
    2. 'n' → logprob: -1.6053814888000488
    3. '<|end|>' → logprob: -5.480381488800049
    4. '
' → logprob: -8.48038101196289
    5. ' n' → logprob: -8.60538101196289
    6. ' 
' → logprob: -9.85538101196289
    7. '<|end|>' → logprob: -9.98038101196289
    8. '+' → logprob: -10.23038101196289
    9. '0' → logprob: -10.35538101196289
    10. '

' → logprob: -10.60538101196289

Token 851: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5277529358863831
    2. '
' → logprob: -0.9027529358863831
    3. '<|end|>' → logprob: -5.777752876281738
    4. ' n' → logprob: -7.527752876281738
    5. '#' → logprob: -8.402752876281738
    6. ')' → logprob: -8.777752876281738
    7. '  
' → logprob: -9.402752876281738
    8. '+' → logprob: -9.652752876281738
    9. ')n' → logprob: -9.777752876281738
    10. '
' → logprob: -9.902752876281738

Token 852: ' Pour' (ID: 13931)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5684887170791626
    2. '<|end|>' → logprob: -1.5684887170791626
    3. 'n' → logprob: -1.9434887170791626
    4. '
' → logprob: -3.068488597869873
    5. ')' → logprob: -4.693488597869873
    6. ' ' → logprob: -5.068488597869873
    7. '1' → logprob: -5.318488597869873
    8. ' n' → logprob: -5.693488597869873
    9. ' 
' → logprob: -6.068488597869873
    10. '#' → logprob: -6.193488597869873

Token 853: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0981239080429077
    2. 'd' → logprob: -1.3481239080429077
    3. '0' → logprob: -1.5981239080429077
    4. ' ' → logprob: -1.7231239080429077
    5. ' n' → logprob: -4.098124027252197
    6. 'n' → logprob: -5.473124027252197
    7. '1' → logprob: -5.598124027252197
    8. '10' → logprob: -7.223124027252197
    9. '_' → logprob: -8.598123550415039
    10. ' now' → logprob: -9.223123550415039

Token 854: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39433667063713074
    2. '+' → logprob: -2.144336700439453
    3. '0' → logprob: -2.144336700439453
    4. '=' → logprob: -3.019336700439453
    5. ' ' → logprob: -3.394336700439453
    6. ' +' → logprob: -5.019336700439453
    7. ' =' → logprob: -6.394336700439453
    8. ')' → logprob: -8.769336700439453
    9. ' +=' → logprob: -9.394336700439453
    10. '+=' → logprob: -9.394336700439453

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38720932602882385
    2. '1' → logprob: -1.1372092962265015
    3. ' ' → logprob: -8.012208938598633
    4. '```' → logprob: -13.574708938598633
    5. '   ' → logprob: -14.449708938598633
    6. '`' → logprob: -14.637208938598633
    7. 'd' → logprob: -14.762208938598633
    8. '(' → logprob: -15.074708938598633
    9. '01' → logprob: -15.199708938598633
    10. ' ' → logprob: -15.262208938598633

Token 856: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2683092951774597
    2. 'n' → logprob: -1.5183093547821045
    3. '+' → logprob: -4.518309116363525
    4. '#' → logprob: -6.393309116363525
    5. '+
' → logprob: -7.143309116363525
    6. '<|end|>' → logprob: -7.393309116363525
    7. '
' → logprob: -7.893309116363525
    8. ')' → logprob: -8.268309593200684
    9. ' 
' → logprob: -8.393309593200684
    10. 'd' → logprob: -8.393309593200684

Token 857: 'prem' (ID: 76294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09725821018218994
    2. '0' → logprob: -2.4722580909729004
    3. ' )' → logprob: -5.3472580909729
    4. '1' → logprob: -6.3472580909729
    5. 'd' → logprob: -7.2222580909729
    6. 'n' → logprob: -7.8472580909729
    7. '#' → logprob: -8.472258567810059
    8. '+' → logprob: -9.097258567810059
    9. ')n' → logprob: -9.472258567810059
    10. ')
' → logprob: -9.722258567810059

Token 858: 'ière' (ID: 12452)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.3693166673183441
    2. 'ière' → logprob: -1.2443166971206665
    3. 'i' → logprob: -4.744316577911377
    4. 'iers' → logprob: -5.119316577911377
    5. '1' → logprob: -5.869316577911377
    6. 'e' → logprob: -7.119316577911377
    7. 'ières' → logprob: -7.244316577911377
    8. 'iere' → logprob: -7.744316577911377
    9. 't' → logprob: -7.994316577911377
    10. 'ié' → logprob: -8.994317054748535

Token 859: ' classe' (ID: 29329)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08477441221475601
    2. ' )' → logprob: -2.5847744941711426
    3. '1' → logprob: -5.709774494171143
    4. '0' → logprob: -6.584774494171143
    5. 'd' → logprob: -7.334774494171143
    6. ' ' → logprob: -8.459774017333984
    7. ' ' → logprob: -9.334774017333984
    8. 'digit' → logprob: -10.459774017333984
    9. '10' → logprob: -10.709774017333984
    10. '9' → logprob: -10.959774017333984

Token 860: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011371198343113065
    2. '0' → logprob: -7.3761372566223145
    3. ')
' → logprob: -8.251136779785156
    4. ')n' → logprob: -9.126136779785156
    5. ' )' → logprob: -9.876136779785156
    6. 'n' → logprob: -10.376136779785156
    7. ')#' → logprob: -11.751136779785156
    8. '(n' → logprob: -12.001136779785156
    9. '`)' → logprob: -12.126136779785156
    10. 'd' → logprob: -12.251136779785156

Token 861: ' chiffres' (ID: 105565)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.138689637184143
    2. 'ch' → logprob: -1.138689637184143
    3. 'd' → logprob: -2.1386895179748535
    4. 'digits' → logprob: -2.2636895179748535
    5. ')' → logprob: -2.8886895179748535
    6. '10' → logprob: -3.2636895179748535
    7. ' chiffres' → logprob: -4.0136895179748535
    8. '```' → logprob: -5.2636895179748535
    9. 'n' → logprob: -5.5136895179748535
    10. 'nombre' → logprob: -5.5136895179748535

Token 862: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018355604261159897
    2. ')
' → logprob: -4.018355369567871
    3. ')n' → logprob: -8.768355369567871
    4. ')
' → logprob: -11.143355369567871
    5. ' )' → logprob: -11.643355369567871
    6. ')

' → logprob: -11.768355369567871
    7. 'n' → logprob: -12.018355369567871
    8. '+' → logprob: -12.768355369567871
    9. ')#' → logprob: -13.143355369567871
    10. '),' → logprob: -13.768355369567871

Token 863: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21526090800762177
    2. 'n' → logprob: -1.8402608633041382
    3. '<|end|>' → logprob: -3.7152609825134277
    4. ')' → logprob: -6.340260982513428
    5. '  
' → logprob: -6.465260982513428
    6. '
' → logprob: -6.590260982513428
    7. '

' → logprob: -6.840260982513428
    8. ' 
' → logprob: -6.965260982513428
    9. '+' → logprob: -7.215260982513428
    10. '_n' → logprob: -7.965260982513428

Token 864: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.188715860247612
    2. '1' → logprob: -1.8137158155441284
    3. '=' → logprob: -5.688715934753418
    4. '+' → logprob: -5.688715934753418
    5. ' =' → logprob: -7.063715934753418
    6. '_' → logprob: -7.438715934753418
    7. 'o' → logprob: -7.938715934753418
    8. ',' → logprob: -9.188715934753418
    9. '+=' → logprob: -9.313715934753418
    10. ' ' → logprob: -10.063715934753418

Token 865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688376545906067
    2. '=' → logprob: -1.1368837356567383
    3. ',' → logprob: -11.386883735656738
    4. ' ' → logprob: -14.136883735656738
    5. ' ,' → logprob: -15.761883735656738
    6. ' ' → logprob: -15.761883735656738
    7. ')' → logprob: -16.011884689331055
    8. '_' → logprob: -16.761884689331055
    9. '>' → logprob: -17.136884689331055
    10. ' =
' → logprob: -17.261884689331055

Token 866: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031953046564012766
    2. ' -' → logprob: -5.753195285797119
    3. 'n' → logprob: -11.628195762634277
    4. '-(' → logprob: -12.878195762634277
    5. '-n' → logprob: -13.628195762634277
    6. '   ' → logprob: -13.878195762634277
    7. '(-' → logprob: -14.003195762634277
    8. ' n' → logprob: -14.128195762634277
    9. ' ' → logprob: -14.253195762634277
    10. '0' → logprob: -15.690695762634277

Token 867: '(-(' (ID: 174232)
  Prédit: '(-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-(' → logprob: -0.020665910094976425
    2. '(-' → logprob: -3.8956658840179443
    3. '(' → logprob: -9.520666122436523
    4. '((' → logprob: -10.645666122436523
    5. '((-' → logprob: -10.895666122436523
    6. '-' → logprob: -12.145666122436523
    7. ' (' → logprob: -13.270666122436523
    8. '(
' → logprob: -14.770666122436523
    9. '(n' → logprob: -15.145666122436523
    10. '(int' → logprob: -16.020666122436523

Token 868: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06200286000967026
    2. '10' → logprob: -2.8120028972625732
    3. ' (' → logprob: -10.437003135681152
    4. '((' → logprob: -13.562003135681152
    5. ' ' → logprob: -13.812003135681152
    6. '(
' → logprob: -14.062003135681152
    7. '(int' → logprob: -14.312003135681152
    8. '0' → logprob: -14.562003135681152
    9. '100' → logprob: -14.937003135681152
    10. '1' → logprob: -15.187003135681152

Token 869: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.25257712602615356
    2. '**' → logprob: -1.5025770664215088
    3. ' ' → logprob: -7.627577304840088
    4. '0' → logprob: -9.75257682800293
    5. '1' → logprob: -9.87757682800293
    6. ' ' → logprob: -10.50257682800293
    7. ' *' → logprob: -12.25257682800293
    8. '(' → logprob: -12.75257682800293
    9. '```' → logprob: -12.75257682800293
    10. ' **)' → logprob: -13.00257682800293

Token 870: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017118285177275538
    2. ' ' → logprob: -7.376711845397949
    3. '9' → logprob: -7.376711845397949
    4. '6' → logprob: -9.25171184539795
    5. '4' → logprob: -9.25171184539795
    6. 'L' → logprob: -9.25171184539795
    7. '0' → logprob: -9.50171184539795
    8. '(' → logprob: -11.00171184539795
    9. '10' → logprob: -11.43921184539795
    10. '3' → logprob: -11.68921184539795

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004842962371185422
    2. '9' → logprob: -8.750484466552734
    3. 'L' → logprob: -9.125484466552734
    4. '4' → logprob: -10.000484466552734
    5. ' ' → logprob: -10.125484466552734
    6. '(' → logprob: -10.625484466552734
    7. '0' → logprob: -10.750484466552734
    8. '10' → logprob: -10.875484466552734
    9. '6' → logprob: -11.375484466552734
    10. '3' → logprob: -11.687984466552734

Token 872: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014169389382004738
    2. '-' → logprob: -4.264169216156006
    3. ' ' → logprob: -12.764169692993164
    4. '-A' → logprob: -12.764169692993164
    5. '-B' → logprob: -16.514169692993164
    6. ' ' → logprob: -17.389169692993164
    7. ')' → logprob: -17.514169692993164
    8. ',' → logprob: -18.389169692993164
    9. '  ' → logprob: -18.764169692993164
    10. '   ' → logprob: -19.514169692993164

Token 873: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3132645785808563
    2. ' A' → logprob: -1.3132646083831787
    3. ' ' → logprob: -13.813264846801758
    4. 'B' → logprob: -14.063264846801758
    5. '	A' → logprob: -14.313264846801758
    6. '   ' → logprob: -15.688264846801758
    7. ' B' → logprob: -16.063264846801758
    8. '(A' → logprob: -16.438264846801758
    9. '_A' → logprob: -17.688264846801758
    10. ')' → logprob: -17.938264846801758

Token 874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005639957962557673
    2. ' )' → logprob: -7.500564098358154
    3. ')//' → logprob: -12.125563621520996
    4. '()' → logprob: -13.625563621520996
    5. '))' → logprob: -14.000563621520996
    6. '//' → logprob: -14.000563621520996
    7. '   ' → logprob: -14.000563621520996
    8. ' //' → logprob: -14.625563621520996
    9. ']' → logprob: -15.125563621520996
    10. ' ' → logprob: -15.500563621520996

Token 875: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10765379667282104
    2. ' //' → logprob: -2.357653856277466
    3. '//' → logprob: -5.232653617858887
    4. ' )' → logprob: -6.357653617858887
    5. ' ' → logprob: -8.357653617858887
    6. ')//' → logprob: -9.232653617858887
    7. ' ' → logprob: -12.607653617858887
    8. '   ' → logprob: -12.857653617858887
    9. ']' → logprob: -13.232653617858887
    10. '#' → logprob: -13.232653617858887

Token 876: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018150178715586662
    2. ' B' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.768150329589844
    4. '	B' → logprob: -16.893150329589844
    5. ' ' → logprob: -17.143150329589844
    6. 'b' → logprob: -17.393150329589844
    7. '```' → logprob: -17.768150329589844
    8. ')' → logprob: -17.893150329589844
    9. '>B' → logprob: -18.268150329589844
    10. ' ' → logprob: -18.393150329589844

Token 877: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.763666947837919e-05
    2. '   ' → logprob: -10.50004768371582
    3. ')
' → logprob: -11.75004768371582
    4. ' )' → logprob: -12.50004768371582
    5. '()' → logprob: -13.50004768371582
    6. ')#' → logprob: -13.87504768371582
    7. '))' → logprob: -14.12504768371582
    8. ')+' → logprob: -14.25004768371582
    9. '())' → logprob: -14.25004768371582
    10. '#' → logprob: -14.25004768371582

Token 878: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010554174892604351
    2. '<|end|>' → logprob: -5.385554313659668
    3. ' #' → logprob: -5.760554313659668
    4. ' ' → logprob: -6.260554313659668
    5. ')' → logprob: -8.385554313659668
    6. '+' → logprob: -8.885554313659668
    7. '
' → logprob: -9.010554313659668
    8. 'n' → logprob: -9.010554313659668
    9. '<|end|>' → logprob: -9.135554313659668
    10. ' n' → logprob: -10.760554313659668

Token 880: ' Pour' (ID: 13931)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7033978700637817
    2. '(-(' → logprob: -0.8283978700637817
    3. ' -' → logprob: -3.328397750854492
    4. '(-' → logprob: -4.078397750854492
    5. '(' → logprob: -5.328397750854492
    6. ' -(' → logprob: -5.703397750854492
    7. '-(' → logprob: -6.203397750854492
    8. '#' → logprob: -6.203397750854492
    9. '0' → logprob: -7.078397750854492
    10. '1' → logprob: -7.453397750854492

Token 881: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018444545567035675
    2. ' ' → logprob: -4.143444538116455
    3. '(' → logprob: -6.518444538116455
    4. '10' → logprob: -7.768444538116455
    5. '0' → logprob: -8.268445014953613
    6. ' (' → logprob: -9.268445014953613
    7. 'd' → logprob: -9.768445014953613
    8. '(d' → logprob: -10.643445014953613
    9. '(-(' → logprob: -11.018445014953613
    10. '-' → logprob: -11.768445014953613

Token 882: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2344324588775635
    2. '=' → logprob: -1.2344324588775635
    3. '+' → logprob: -1.4844324588775635
    4. '(' → logprob: -1.9844324588775635
    5. '-' → logprob: -4.109432220458984
    6. ' +' → logprob: -4.109432220458984
    7. '+(' → logprob: -5.234432220458984
    8. ' -' → logprob: -5.359432220458984
    9. ' =' → logprob: -5.859432220458984
    10. '0' → logprob: -6.609432220458984

Token 883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -9.625076293945312
    3. '(' → logprob: -12.000076293945312
    4. '2' → logprob: -13.750076293945312
    5. '0' → logprob: -13.750076293945312
    6. '   ' → logprob: -14.125076293945312
    7. '10' → logprob: -15.000076293945312
    8. '```' → logprob: -15.500076293945312
    9. '  ' → logprob: -16.125076293945312
    10. ' (' → logprob: -16.562576293945312

Token 884: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: 'su' (ID: 20634)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07625281810760498
    2. ')' → logprob: -2.8262529373168945
    3. ' ' → logprob: -4.8262529373168945
    4. 'n' → logprob: -6.2012529373168945
    5. '#' → logprob: -6.4512529373168945
    6. '+' → logprob: -7.9512529373168945
    7. '0' → logprob: -8.326252937316895
    8. '(' → logprob: -8.326252937316895
    9. '```' → logprob: -8.451252937316895
    10. 'd' → logprob: -8.576252937316895

Token 886: 'ivant' (ID: 100782)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010151848196983337
    2. 'b' → logprob: -5.1351518630981445
    3. 'per' → logprob: -6.8851518630981445
    4. 'pp' → logprob: -7.2601518630981445
    5. 'pper' → logprob: -7.2601518630981445
    6. '0' → logprob: -7.5101518630981445
    7. 'r' → logprob: -8.260151863098145
    8. 'pé' → logprob: -8.510151863098145
    9. '{' → logprob: -9.010151863098145
    10. '```' → logprob: -9.135151863098145

Token 887: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012851139763370156
    2. '+' → logprob: -7.501285076141357
    3. '1' → logprob: -7.876285076141357
    4. ' )' → logprob: -8.501285552978516
    5. '-' → logprob: -10.376285552978516
    6. '#' → logprob: -10.626285552978516
    7. ' +' → logprob: -10.751285552978516
    8. ')#' → logprob: -11.001285552978516
    9. ')
' → logprob: -11.501285552978516
    10. '0' → logprob: -11.626285552978516

Token 888: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47910577058792114
    2. 'n' → logprob: -1.3541057109832764
    3. 'd' → logprob: -2.8541057109832764
    4. '<|end|>' → logprob: -3.4791057109832764
    5. '```' → logprob: -4.3541059494018555
    6. 'if' → logprob: -4.9791059494018555
    7. ')' → logprob: -5.1041059494018555
    8. 'for' → logprob: -6.3541059494018555
    9. '
' → logprob: -6.8541059494018555
    10. '[' → logprob: -7.1041059494018555

Token 889: ' Initial' (ID: 9209)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43764057755470276
    2. 'for' → logprob: -1.5626405477523804
    3. 'if' → logprob: -2.93764066696167
    4. 'n' → logprob: -3.18764066696167
    5. '#' → logprob: -3.18764066696167
    6. 'print' → logprob: -6.56264066696167
    7. 'i' → logprob: -6.68764066696167
    8. '```' → logprob: -6.81264066696167
    9. 'result' → logprob: -7.06264066696167
    10. 'while' → logprob: -7.31264066696167

Token 890: 'isation' (ID: 6993)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0361802577972412
    2. 's' → logprob: -1.1611802577972412
    3. 'isation' → logprob: -1.6611802577972412
    4. 'z' → logprob: -2.536180257797241
    5. '#' → logprob: -4.03618049621582
    6. 'is' → logprob: -4.16118049621582
    7. 'ization' → logprob: -4.78618049621582
    8. 'al' → logprob: -5.28618049621582
    9. 'i' → logprob: -6.41118049621582
    10. ' n' → logprob: -6.53618049621582

Token 891: ' du' (ID: 1462)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.355393409729004
    2. 'result' → logprob: -1.605393409729004
    3. 'ans' → logprob: -1.855393409729004
    4. 'n' → logprob: -1.980393409729004
    5. 'dp' → logprob: -2.980393409729004
    6. 'current' → logprob: -3.230393409729004
    7. 'a' → logprob: -3.480393409729004
    8. 'cur' → logprob: -3.605393409729004
    9. 'answer' → logprob: -3.855393409729004
    10. 'i' → logprob: -4.480393409729004

Token 892: ' vect' (ID: 106052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8443320393562317
    2. 'res' → logprob: -1.094331979751587
    3. 'ans' → logprob: -2.219331979751587
    4. 'total' → logprob: -2.969331979751587
    5. 'answer' → logprob: -3.219331979751587
    6. 'count' → logprob: -4.219332218170166
    7. 'rés' → logprob: -4.594332218170166
    8. 'r' → logprob: -5.719332218170166
    9. 's' → logprob: -5.844332218170166
    10. 'comp' → logprob: -7.219332218170166

Token 893: 'eur' (ID: 8671)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.5435516834259033
    2. 'eur' → logprob: -1.6685516834259033
    3. 'ector' → logprob: -1.6685516834259033
    4. 'ec' → logprob: -3.6685516834259033
    5. 'e' → logprob: -4.418551445007324
    6. '[' → logprob: -6.543551445007324
    7. '#' → logprob: -7.668551445007324
    8. 'er' → logprob: -7.793551445007324
    9. 'al' → logprob: -8.293551445007324
    10. 'é' → logprob: -8.293551445007324

Token 894: ' "' (ID: 392)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20193755626678467
    2. ' v' → logprob: -3.076937675476074
    3. 'a' → logprob: -3.576937675476074
    4. 'dp' → logprob: -3.951937675476074
    5. '[' → logprob: -4.076937675476074
    6. 'res' → logprob: -4.326937675476074
    7. 'vec' → logprob: -4.576937675476074
    8. 'f' → logprob: -5.201937675476074
    9. 'V' → logprob: -5.201937675476074
    10. 's' → logprob: -5.451937675476074

Token 895: 'ret' (ID: 3431)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2419401854276657
    2. '[' → logprob: -1.9919401407241821
    3. 's' → logprob: -4.741940021514893
    4. 'a' → logprob: -4.991940021514893
    5. 'res' → logprob: -4.991940021514893
    6. 'dp' → logprob: -4.991940021514893
    7. 'V' → logprob: -5.241940021514893
    8. '[A' → logprob: -5.241940021514893
    9. 'f' → logprob: -5.491940021514893
    10. 'init' → logprob: -5.616940021514893

Token 896: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011405826546251774
    2. '=' → logprob: -5.011405944824219
    3. ' ' → logprob: -6.636405944824219
    4. 'u' → logprob: -7.386405944824219
    5. '[' → logprob: -7.636405944824219
    6. '=[' → logprob: -8.136405944824219
    7. 'eur' → logprob: -8.136405944824219
    8. ' =[' → logprob: -8.136405944824219
    9. '=[]
' → logprob: -8.761405944824219
    10. '```' → logprob: -9.011405944824219

Token 897: ' représentant' (ID: 136122)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0022581410594284534
    2. '=' → logprob: -6.37725830078125
    3. ' =' → logprob: -7.62725830078125
    4. ' ret' → logprob: -10.37725830078125
    5. '[' → logprob: -10.75225830078125
    6. '=
' → logprob: -12.37725830078125
    7. '
' → logprob: -12.62725830078125
    8. '=[' → logprob: -12.75225830078125
    9. '```' → logprob: -12.87725830078125
    10. '#' → logprob: -14.37725830078125

Token 898: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0162336565554142
    2. '[[' → logprob: -4.266233444213867
    3. '[A' → logprob: -6.891233444213867
    4. ' [' → logprob: -7.516233444213867
    5. '[
' → logprob: -7.641233444213867
    6. ' [[' → logprob: -10.891233444213867
    7. 'A' → logprob: -12.891233444213867
    8. '[a' → logprob: -13.516233444213867
    9. '   ' → logprob: -14.141233444213867
    10. '[n' → logprob: -14.141233444213867

Token 899: ''état' (ID: 116357)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0054914141073822975
    2. ' [' → logprob: -6.380491256713867
    3. '[
' → logprob: -6.505491256713867
    4. '[[' → logprob: -8.005491256713867
    5. 'initial' → logprob: -8.505491256713867
    6. '[]' → logprob: -8.630491256713867
    7. ''état' → logprob: -8.630491256713867
    8. 'e' → logprob: -8.755491256713867
    9. '[state' → logprob: -8.880491256713867
    10. '[result' → logprob: -9.255491256713867

Token 900: ' courant' (ID: 74694)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.09775768965482712
    2. ' =' → logprob: -2.972757577896118
    3. '[' → logprob: -3.722757577896118
    4. '=' → logprob: -4.347757816314697
    5. ' ret' → logprob: -5.847757816314697
    6. '=[' → logprob: -6.472757816314697
    7. ' [' → logprob: -9.097757339477539
    8. '[
' → logprob: -9.972757339477539
    9. 's' → logprob: -10.097757339477539
    10. '=[[' → logprob: -10.097757339477539

Token 901: '.
' (ID: 558)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.40068021416664124
    2. ' =' → logprob: -1.2756801843643188
    3. '=' → logprob: -3.4006803035736084
    4. '[' → logprob: -4.400680065155029
    5. ' ret' → logprob: -5.525680065155029
    6. '=[' → logprob: -7.900680065155029
    7. '
' → logprob: -8.400680541992188
    8. ' [' → logprob: -8.525680541992188
    9. '=
' → logprob: -8.900680541992188
    10. ' =
' → logprob: -9.275680541992188

Token 902: '#' (ID: 2)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0005207431968301535
    2. '[' → logprob: -7.625520706176758
    3. ' ret' → logprob: -10.375520706176758
    4. '```' → logprob: -14.625520706176758
    5. ' [' → logprob: -14.750520706176758
    6. '[
' → logprob: -15.375520706176758
    7. '[[' → logprob: -15.750520706176758
    8. '
' → logprob: -16.625520706176758
    9. '[A' → logprob: -16.875520706176758
    10. '$ret' → logprob: -17.250520706176758

Token 903: ' C' (ID: 363)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.125015258789062
    3. ' ret' → logprob: -14.250015258789062
    4. '#' → logprob: -17.750015258789062
    5. '
' → logprob: -18.625015258789062
    6. '[A' → logprob: -18.625015258789062
    7. '```' → logprob: -18.750015258789062
    8. ' [' → logprob: -20.000015258789062
    9. '$ret' → logprob: -20.250015258789062
    10. 'A' → logprob: -20.500015258789062

Token 904: ''est' (ID: 6616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.635334849357605
    2. '=' → logprob: -0.760334849357605
    3. 'ret' → logprob: -6.3853349685668945
    4. '=[' → logprob: -7.8853349685668945
    5. '[' → logprob: -8.885334968566895
    6. '=
' → logprob: -9.635334968566895
    7. 'ont' → logprob: -9.760334968566895
    8. ' =[' → logprob: -9.885334968566895
    9. '```' → logprob: -10.010334968566895
    10. ' ret' → logprob: -10.260334968566895

Token 905: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08144943416118622
    2. '[[' → logprob: -3.331449508666992
    3. '[A' → logprob: -3.331449508666992
    4. ' [' → logprob: -5.456449508666992
    5. '[
' → logprob: -6.206449508666992
    6. ' [[' → logprob: -7.831449508666992
    7. '[a' → logprob: -11.081449508666992
    8. 'A' → logprob: -11.456449508666992
    9. ' [
' → logprob: -11.831449508666992
    10. '[B' → logprob: -12.206449508666992

Token 906: ' matr' (ID: 25095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006639821454882622
    2. '[[' → logprob: -5.5066399574279785
    3. '[
' → logprob: -6.7566399574279785
    4. ' [' → logprob: -6.7566399574279785
    5. 'list' → logprob: -8.88163948059082
    6. 'ret' → logprob: -10.88163948059082
    7. 'vector' → logprob: -11.13163948059082
    8. ' [[' → logprob: -11.25663948059082
    9. '3' → logprob: -11.75663948059082
    10. 'vec' → logprob: -12.13163948059082

Token 907: 'ice' (ID: 603)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.539569079875946
    2. 'rice' → logprob: -2.289569139480591
    3. 'ice' → logprob: -2.539569139480591
    4. 't' → logprob: -2.539569139480591
    5. 'atrice' → logprob: -2.664569139480591
    6. 'ix' → logprob: -3.539569139480591
    7. 'tr' → logprob: -3.539569139480591
    8. 'rix' → logprob: -4.414568901062012
    9. '[
' → logprob: -5.789568901062012
    10. 'x' → logprob: -5.914568901062012

Token 908: ' colonne' (ID: 148275)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.40924906730651855
    2. '[' → logprob: -1.2842490673065186
    3. '[
' → logprob: -3.2842490673065186
    4. '1' → logprob: -5.534249305725098
    5. '=[[' → logprob: -5.659249305725098
    6. ' [[' → logprob: -5.659249305725098
    7. '([[' → logprob: -5.909249305725098
    8. ' =' → logprob: -6.784249305725098
    9. ' of' → logprob: -6.784249305725098
    10. 'ret' → logprob: -6.784249305725098

Token 909: ' ' (ID: 220)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.0174355506896973
    2. '[' → logprob: -1.2674355506896973
    3. '[
' → logprob: -1.3924355506896973
    4. ' =' → logprob: -3.0174355506896973
    5. '=[[' → logprob: -3.7674355506896973
    6. '=' → logprob: -4.267435550689697
    7. 'ret' → logprob: -4.392435550689697
    8. '([[' → logprob: -5.517435550689697
    9. ' [[' → logprob: -6.517435550689697
    10. '=[' → logprob: -7.017435550689697

Token 910: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9024053812026978
    2. '[[' → logprob: -1.2774053812026978
    3. '[
' → logprob: -1.7774053812026978
    4. ' =' → logprob: -3.152405261993408
    5. 'ret' → logprob: -3.402405261993408
    6. '=[[' → logprob: -3.402405261993408
    7. '=' → logprob: -3.777405261993408
    8. ' [[' → logprob: -6.027405261993408
    9. '([[' → logprob: -6.027405261993408
    10. ' of' → logprob: -6.027405261993408

Token 911: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3984731435775757
    2. '=' → logprob: -2.0234732627868652
    3. ' =' → logprob: -2.5234732627868652
    4. '=[[' → logprob: -3.3984732627868652
    5. 'x' → logprob: -3.6484732627868652
    6. '[
' → logprob: -3.7734732627868652
    7. '[[' → logprob: -4.398473262786865
    8. '
' → logprob: -4.398473262786865
    9. '=[' → logprob: -5.773473262786865
    10. 'd' → logprob: -7.398473262786865

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001446545124053955
    2. '3' → logprob: -6.626446723937988
    3. '[' → logprob: -9.501446723937988
    4. ' ' → logprob: -10.751446723937988
    5. '
' → logprob: -11.501446723937988
    6. '```' → logprob: -11.876446723937988
    7. '=' → logprob: -12.626446723937988
    8. '[
' → logprob: -12.876446723937988
    9. '(' → logprob: -14.626446723937988
    10. '   ' → logprob: -15.376446723937988

Token 913: '.
' (ID: 558)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.12296228855848312
    2. '[
' → logprob: -2.872962236404419
    3. '[' → logprob: -3.122962236404419
    4. '[[' → logprob: -4.997962474822998
    5. ' =' → logprob: -5.122962474822998
    6. '
' → logprob: -7.122962474822998
    7. '=' → logprob: -7.997962474822998
    8. ' ret' → logprob: -8.12296199798584
    9. ',' → logprob: -8.37296199798584
    10. ' [' → logprob: -8.99796199798584

Token 914: '#' (ID: 2)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.4736459888808895e-05
    2. '[[' → logprob: -11.750014305114746
    3. '[' → logprob: -12.625014305114746
    4. ' ret' → logprob: -13.000014305114746
    5. '[
' → logprob: -13.875014305114746
    6. '
' → logprob: -15.875014305114746
    7. '```' → logprob: -16.875015258789062
    8. '$ret' → logprob: -18.000015258789062
    9. ' [[' → logprob: -19.125015258789062
    10. '_ret' → logprob: -19.500015258789062

Token 915: ' Les' (ID: 7029)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -4.572941179503687e-05
    2. '[' → logprob: -10.250045776367188
    3. '[[' → logprob: -11.625045776367188
    4. '[
' → logprob: -14.000045776367188
    5. ' ret' → logprob: -15.000045776367188
    6. '```' → logprob: -15.875045776367188
    7. '``' → logprob: -18.500045776367188
    8. '$ret' → logprob: -18.875045776367188
    9. '
' → logprob: -19.125045776367188
    10. ' [' → logprob: -19.625045776367188

Token 916: ' éléments' (ID: 57375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47318896651268005
    2. 'ret' → logprob: -1.3481889963150024
    3. '[
' → logprob: -2.223188877105713
    4. ' [' → logprob: -5.473188877105713
    5. ' ret' → logprob: -6.973188877105713
    6. '#' → logprob: -7.098188877105713
    7. '[[' → logprob: -7.098188877105713
    8. 'r' → logprob: -7.223188877105713
    9. '0' → logprob: -7.848188877105713
    10. ' [
' → logprob: -8.098189353942871

Token 917: ' peuvent' (ID: 21321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08271604776382446
    2. '=' → logprob: -2.5827159881591797
    3. '[' → logprob: -5.83271598815918
    4. '[
' → logprob: -8.58271598815918
    5. ' =
' → logprob: -8.58271598815918
    6. '=
' → logprob: -8.83271598815918
    7. '=[' → logprob: -9.08271598815918
    8. '=[
' → logprob: -9.33271598815918
    9. 'ret' → logprob: -9.58271598815918
    10. 's' → logprob: -10.45771598815918

Token 918: ' représ' (ID: 31534)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5146504044532776
    2. '[' → logprob: -1.6396503448486328
    3. ' =' → logprob: -1.6396503448486328
    4. '[
' → logprob: -5.639650344848633
    5. '#' → logprob: -6.014650344848633
    6. ' être' → logprob: -6.264650344848633
    7. 'être' → logprob: -6.514650344848633
    8. '```' → logprob: -6.514650344848633
    9. '=[' → logprob: -6.639650344848633
    10. ' [' → logprob: -7.639650344848633

Token 919: 'enter' (ID: 3547)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6389873027801514
    2. '[' → logprob: -0.7639873027801514
    3. '=[
' → logprob: -6.5139875411987305
    4. '=' → logprob: -6.6389875411987305
    5. 'er' → logprob: -6.8889875411987305
    6. ' [
' → logprob: -7.5139875411987305
    7. '=[' → logprob: -7.7639875411987305
    8. 't' → logprob: -8.51398754119873
    9. '=
' → logprob: -8.63898754119873
    10. '[]' → logprob: -8.88898754119873

Token 920: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0804578885436058
    2. '[A' → logprob: -2.580457925796509
    3. '[
' → logprob: -6.58045768737793
    4. 'A' → logprob: -9.33045768737793
    5. '[L' → logprob: -10.20545768737793
    6. ' [' → logprob: -10.33045768737793
    7. '0' → logprob: -11.45545768737793
    8. '[B' → logprob: -13.33045768737793
    9. '[[' → logprob: -13.58045768737793
    10. '
' → logprob: -13.58045768737793

Token 921: ' sommes' (ID: 32024)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0436524860560894
    2. '[
' → logprob: -3.1686525344848633
    3. ' [' → logprob: -8.168652534484863
    4. '[[' → logprob: -9.043652534484863
    5. '0' → logprob: -9.418652534484863
    6. 'val' → logprob: -10.043652534484863
    7. '[A' → logprob: -10.418652534484863
    8. '[state' → logprob: -10.668652534484863
    9. '[val' → logprob: -11.043652534484863
    10. 'values' → logprob: -12.043652534484863

Token 922: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22860489785671234
    2. ',' → logprob: -2.353604793548584
    3. '[
' → logprob: -3.103604793548584
    4. ' =' → logprob: -3.728604793548584
    5. '   ' → logprob: -4.478604793548584
    6. ' [' → logprob: -4.728604793548584
    7. '=' → logprob: -5.228604793548584
    8. ',
' → logprob: -5.228604793548584
    9. ' ,' → logprob: -6.478604793548584
    10. 'ret' → logprob: -6.728604793548584

Token 923: ' termes' (ID: 72480)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.861889660358429
    2. '[' → logprob: -0.861889660358429
    3. 'des' → logprob: -3.111889600753784
    4. '0' → logprob: -3.236889600753784
    5. 'com' → logprob: -3.361889600753784
    6. 'counts' → logprob: -3.611889600753784
    7. 'coeff' → logprob: -6.361889839172363
    8. ' des' → logprob: -6.361889839172363
    9. 'indices' → logprob: -6.986889839172363
    10. '```' → logprob: -7.361889839172363

Token 924: ' constants' (ID: 38252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26647529006004333
    2. '[' → logprob: -1.8914753198623657
    3. ' ou' → logprob: -3.391475200653076
    4. ' ,' → logprob: -4.766475200653076
    5. 'initial' → logprob: -4.766475200653076
    6. ' des' → logprob: -5.141475200653076
    7. ' =' → logprob: -5.266475200653076
    8. '=' → logprob: -5.266475200653076
    9. ' initial' → logprob: -6.016475200653076
    10. 'des' → logprob: -6.266475200653076

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01867273636162281
    2. '[' → logprob: -5.018672943115234
    3. ',
' → logprob: -5.268672943115234
    4. '=' → logprob: -5.518672943115234
    5. '[
' → logprob: -7.518672943115234
    6. 'ret' → logprob: -7.518672943115234
    7. ' =' → logprob: -7.893672943115234
    8. '```' → logprob: -8.143672943115234
    9. ' ,' → logprob: -8.518672943115234
    10. '#' → logprob: -8.768672943115234

Token 926: ' etc' (ID: 5178)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024570874869823456
    2. 'ou' → logprob: -5.149570941925049
    3. '[' → logprob: -5.274570941925049
    4. 'et' → logprob: -5.399570941925049
    5. ' ou' → logprob: -5.774570941925049
    6. '0' → logprob: -6.149570941925049
    7. ' or' → logprob: -6.774570941925049
    8. 'or' → logprob: -7.399570941925049
    9. 'des' → logprob: -7.524570941925049
    10. ' #' → logprob: -7.899570941925049

Token 927: '.,' (ID: 4213)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.05902189388871193
    2. '=' → logprob: -3.4340219497680664
    3. ' =' → logprob: -4.309021949768066
    4. '[' → logprob: -4.809021949768066
    5. '[
' → logprob: -6.934021949768066
    6. '=
' → logprob: -7.434021949768066
    7. '```' → logprob: -7.809021949768066
    8. '=[' → logprob: -7.809021949768066
    9. '=[[' → logprob: -8.309021949768066
    10. ',' → logprob: -8.684021949768066

Token 928: ' selon' (ID: 27571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05433393269777298
    2. 'ret' → logprob: -3.4293339252471924
    3. '[
' → logprob: -4.0543341636657715
    4. ' [' → logprob: -6.6793341636657715
    5. '[[' → logprob: -6.6793341636657715
    6. '#' → logprob: -7.9293341636657715
    7. '
' → logprob: -9.179333686828613
    8. '=' → logprob: -10.554333686828613
    9. ' =' → logprob: -10.804333686828613
    10. '```' → logprob: -10.804333686828613

Token 929: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19639593362808228
    2. 'la' → logprob: -2.5713958740234375
    3. 'le' → logprob: -3.4463958740234375
    4. 'l' → logprob: -3.4463958740234375
    5. '[
' → logprob: -3.8213958740234375
    6. '#' → logprob: -4.8213958740234375
    7. ' la' → logprob: -5.6963958740234375
    8. '[A' → logprob: -6.9463958740234375
    9. '[l' → logprob: -7.1963958740234375
    10. 'les' → logprob: -7.1963958740234375

Token 930: ' transformation' (ID: 26242)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.5947295427322388
    2. '#' → logprob: -1.8447295427322388
    3. ' logique' → logprob: -1.9697295427322388
    4. 'form' → logprob: -2.344729423522949
    5. 'comment' → logprob: -3.969729423522949
    6. 'dé' → logprob: -5.344729423522949
    7. '```' → logprob: -5.344729423522949
    8. 'logic' → logprob: -6.094729423522949
    9. 'ligne' → logprob: -6.094729423522949
    10. 'fonction' → logprob: -6.219729423522949

Token 931: ' de' (ID: 334)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0007469753036275506
    2. ' =' → logprob: -8.250746726989746
    3. '#' → logprob: -8.875746726989746
    4. '=' → logprob: -9.000746726989746
    5. '
' → logprob: -9.375746726989746
    6. '[' → logprob: -10.375746726989746
    7. ' ret' → logprob: -10.750746726989746
    8. '```' → logprob: -11.125746726989746
    9. 'initial' → logprob: -11.625746726989746
    10. '[
' → logprob: -11.625746726989746

Token 932: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8787577748298645
    2. '[' → logprob: -1.5037577152252197
    3. 'mat' → logprob: -1.8787577152252197
    4. 'la' → logprob: -2.7537577152252197
    5. 'ret' → logprob: -2.7537577152252197
    6. 'A' → logprob: -4.003757953643799
    7. '#' → logprob: -4.128757953643799
    8. '[
' → logprob: -4.628757953643799
    9. 'x' → logprob: -5.128757953643799
    10. '0' → logprob: -5.378757953643799

Token 933: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.15754151344299316
    2. '```' → logprob: -3.532541513442993
    3. 'range' → logprob: -3.782541513442993
    4. '[' → logprob: -3.782541513442993
    5. 'ligne' → logprob: -4.032541275024414
    6. 'matrix' → logprob: -4.782541275024414
    7. 'vect' → logprob: -5.157541275024414
    8. '#' → logprob: -5.282541275024414
    9. 'ret' → logprob: -5.407541275024414
    10. '``' → logprob: -5.657541275024414

Token 934: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0016525676473975182
    2. 'ce' → logprob: -7.126652717590332
    3. 'ix' → logprob: -7.751652717590332
    4. 'ic' → logprob: -8.251652717590332
    5. '```' → logprob: -9.626652717590332
    6. 'rice' → logprob: -10.501652717590332
    7. '#' → logprob: -11.126652717590332
    8. 'ière' → logprob: -11.251652717590332
    9. '[' → logprob: -12.501652717590332
    10. 'ices' → logprob: -12.626652717590332

Token 935: '.
' (ID: 558)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0034612060990184546
    2. ' =' → logprob: -5.8784613609313965
    3. '=' → logprob: -7.5034613609313965
    4. '#' → logprob: -10.503460884094238
    5. ' ret' → logprob: -10.878460884094238
    6. '
' → logprob: -11.503460884094238
    7. '=[' → logprob: -11.878460884094238
    8. '[' → logprob: -12.003460884094238
    9. ']' → logprob: -12.003460884094238
    10. '=
' → logprob: -12.128460884094238

Token 936: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -11.000030517578125
    3. '[[' → logprob: -11.500030517578125
    4. '[
' → logprob: -13.125030517578125
    5. ' ret' → logprob: -14.250030517578125
    6. '```' → logprob: -14.750030517578125
    7. '``' → logprob: -17.000030517578125
    8. '$ret' → logprob: -17.750030517578125
    9. ' =' → logprob: -18.875030517578125
    10. '_ret' → logprob: -19.000030517578125

Token 937: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889220863580704
    2. ' =' → logprob: -2.578892230987549
    3. '=[' → logprob: -13.95389175415039
    4. '=[[' → logprob: -13.95389175415039
    5. '=
' → logprob: -15.95389175415039
    6. '[' → logprob: -16.07889175415039
    7. ' =[' → logprob: -16.20389175415039
    8. ',' → logprob: -16.32889175415039
    9. ')' → logprob: -16.57889175415039
    10. '＝' → logprob: -16.70389175415039

Token 938: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -7.107425062713446e-06
    2. '[
' → logprob: -12.000006675720215
    3. '[' → logprob: -14.250006675720215
    4. ' [[' → logprob: -15.500006675720215
    5. '[A' → logprob: -19.00000762939453
    6. '([[' → logprob: -19.62500762939453
    7. '[['' → logprob: -21.12500762939453
    8. '[(' → logprob: -23.00000762939453
    9. '=[[' → logprob: -23.12500762939453
    10. '[\' → logprob: -23.62500762939453

Token 939: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.028675168752670288
    2. '0' → logprob: -3.778675079345703
    3. '1' → logprob: -5.278675079345703
    4. '(A' → logprob: -8.653675079345703
    5. '(' → logprob: -9.403675079345703
    6. '10' → logprob: -11.153675079345703
    7. '[A' → logprob: -11.403675079345703
    8. ' A' → logprob: -11.528675079345703
    9. 'B' → logprob: -12.903675079345703
    10. 'L' → logprob: -13.028675079345703

Token 940: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07043440639972687
    2. '],
' → logprob: -2.820434331893921
    3. '],[' → logprob: -4.9454345703125
    4. ']' → logprob: -6.9454345703125
    5. '],

' → logprob: -8.9454345703125
    6. '0' → logprob: -9.6954345703125
    7. '],
' → logprob: -9.8204345703125
    8. ']]' → logprob: -10.1954345703125
    9. ' ],' → logprob: -10.5704345703125
    10. '[' → logprob: -11.0704345703125

Token 941: ' [' (ID: 723)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.1764676570892334
    2. 'A' → logprob: -2.4264676570892334
    3. '[' → logprob: -2.6764676570892334
    4. '1' → logprob: -5.8014678955078125
    5. '[L' → logprob: -7.5514678955078125
    6. '0' → logprob: -7.8014678955078125
    7. '[(' → logprob: -8.426467895507812
    8. ' [' → logprob: -9.051467895507812
    9. '(A' → logprob: -9.051467895507812
    10. 'L' → logprob: -10.176467895507812

Token 942: 'A' (ID: 32)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5462418794631958
    2. 'A' → logprob: -0.9212418794631958
    3. '0' → logprob: -3.7962417602539062
    4. '10' → logprob: -8.796241760253906
    5. 'L' → logprob: -9.671241760253906
    6. '(A' → logprob: -10.046241760253906
    7. '(' → logprob: -10.546241760253906
    8. 'a' → logprob: -10.671241760253906
    9. 'B' → logprob: -11.671241760253906
    10. 'int' → logprob: -11.671241760253906

Token 943: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0033590320963412523
    2. '+' → logprob: -6.628358840942383
    3. '%' → logprob: -6.878358840942383
    4. ' ],' → logprob: -7.128358840942383
    5. '],[' → logprob: -9.503358840942383
    6. ' %' → logprob: -10.128358840942383
    7. '-' → logprob: -10.503358840942383
    8. ' +' → logprob: -10.878358840942383
    9. '],
' → logprob: -11.628358840942383
    10. ']' → logprob: -11.628358840942383

Token 944: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024512779782526195
    2. '[B' → logprob: -8.875245094299316
    3. '[A' → logprob: -9.625245094299316
    4. '1' → logprob: -11.375245094299316
    5. '[-' → logprob: -11.500245094299316
    6. ' [' → logprob: -11.500245094299316
    7. '[M' → logprob: -12.625245094299316
    8. '0' → logprob: -13.375245094299316
    9. '[(' → logprob: -15.250245094299316
    10. '[n' → logprob: -15.250245094299316

Token 945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.600714161526412e-05
    2. '0' → logprob: -9.500076293945312
    3. '2' → logprob: -15.000076293945312
    4. '10' → logprob: -15.875076293945312
    5. 'M' → logprob: -16.250076293945312
    6. ' ' → logprob: -16.375076293945312
    7. '   ' → logprob: -16.375076293945312
    8. 'A' → logprob: -16.375076293945312
    9. '(' → logprob: -17.000076293945312
    10. 'B' → logprob: -17.375076293945312

Token 946: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.005671256221830845
    2. ']' → logprob: -5.25567102432251
    3. ')]' → logprob: -7.75567102432251
    4. ']]
' → logprob: -12.380671501159668
    5. ']}' → logprob: -13.880671501159668
    6. ']]]' → logprob: -14.005671501159668
    7. ']
' → logprob: -14.630671501159668
    8. '}]' → logprob: -14.880671501159668
    9. '])' → logprob: -14.880671501159668
    10. ' ]]' → logprob: -15.005671501159668

Token 947: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 948: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 949: ' Premier' (ID: 27686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03867911919951439
    2. 'n' → logprob: -4.413679122924805
    3. '#' → logprob: -4.663679122924805
    4. 'i' → logprob: -5.288679122924805
    5. 'while' → logprob: -5.538679122924805
    6. 'range' → logprob: -6.663679122924805
    7. 'L' → logprob: -6.913679122924805
    8. ')' → logprob: -7.038679122924805
    9. 'd' → logprob: -7.038679122924805
    10. 'result' → logprob: -7.288679122924805

Token 950: ' terme' (ID: 42959)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4831065535545349
    2. '=' → logprob: -1.9831066131591797
    3. 'd' → logprob: -2.4831066131591797
    4. 'n' → logprob: -3.6081066131591797
    5. ']' → logprob: -3.7331066131591797
    6. 'L' → logprob: -3.8581066131591797
    7. '#' → logprob: -4.10810661315918
    8. '[' → logprob: -4.23310661315918
    9. 'token' → logprob: -4.23310661315918
    10. '0' → logprob: -4.35810661315918

Token 951: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3439013361930847
    2. '<|end|>' → logprob: -2.2189013957977295
    3. 'n' → logprob: -2.5939013957977295
    4. '#' → logprob: -3.0939013957977295
    5. '
' → logprob: -3.3439013957977295
    6. ' for' → logprob: -4.96890115737915
    7. 'while' → logprob: -5.09390115737915
    8. 'i' → logprob: -5.59390115737915
    9. ')' → logprob: -5.71890115737915
    10. '```' → logprob: -6.21890115737915

Token 952: ' terme' (ID: 42959)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13744273781776428
    2. '<|end|>' → logprob: -2.8874428272247314
    3. '0' → logprob: -3.1374428272247314
    4. ' [' → logprob: -4.262442588806152
    5. '#' → logprob: -5.512442588806152
    6. ' ' → logprob: -6.512442588806152
    7. ']' → logprob: -6.637442588806152
    8. 'n' → logprob: -6.637442588806152
    9. '[[' → logprob: -6.762442588806152
    10. '[A' → logprob: -7.012442588806152

Token 953: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.8011777400970459
    2. '+' → logprob: -1.176177740097046
    3. 'su' → logprob: -3.176177740097046
    4. ' initial' → logprob: -3.176177740097046
    5. 'constant' → logprob: -3.426177740097046
    6. '0' → logprob: -3.801177740097046
    7. ',' → logprob: -4.051177978515625
    8. 'plus' → logprob: -4.301177978515625
    9. 'sup' → logprob: -4.301177978515625
    10. 'supp' → logprob: -4.426177978515625

Token 954: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20194651186466217
    2. ' [' → logprob: -1.701946496963501
    3. '0' → logprob: -7.95194673538208
    4. '1' → logprob: -9.201946258544922
    5. '<|end|>' → logprob: -10.451946258544922
    6. ' ' → logprob: -10.951946258544922
    7. '[A' → logprob: -12.076946258544922
    8. ']' → logprob: -12.201946258544922
    9. '...' → logprob: -12.701946258544922
    10. '[[' → logprob: -12.701946258544922

Token 957: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007485830225050449
    2. '0' → logprob: -5.507485866546631
    3. '[' → logprob: -5.757485866546631
    4. ' ' → logprob: -9.507485389709473
    5. 'une' → logprob: -10.007485389709473
    6. 'l' → logprob: -10.507485389709473
    7. 'la' → logprob: -10.632485389709473
    8. 'un' → logprob: -11.132485389709473
    9. 'le' → logprob: -11.632485389709473
    10. ' [' → logprob: -11.632485389709473

Token 958: ' terme' (ID: 42959)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4335368871688843
    2. '0' → logprob: -1.5585368871688843
    3. 'constant' → logprob: -2.308537006378174
    4. 'const' → logprob: -4.183537006378174
    5. '[' → logprob: -4.933537006378174
    6. 'vect' → logprob: -5.808537006378174
    7. 'b' → logprob: -6.183537006378174
    8. ' constant' → logprob: -6.558537006378174
    9. 'nombre' → logprob: -6.683537006378174
    10. '```' → logprob: -6.683537006378174

Token 959: ' constant' (ID: 9594)
  Prédit: 'constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constant' → logprob: -0.07823607325553894
    2. ' constant' → logprob: -2.9532361030578613
    3. 'const' → logprob: -3.8282361030578613
    4. '1' → logprob: -7.078236103057861
    5. 'de' → logprob: -8.328235626220703
    6. '```' → logprob: -10.203235626220703
    7. ' constante' → logprob: -10.328235626220703
    8. 'd' → logprob: -10.453235626220703
    9. '_constant' → logprob: -10.453235626220703
    10. 'con' → logprob: -10.578235626220703

Token 960: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38249850273132324
    2. '#' → logprob: -1.6324985027313232
    3. '
' → logprob: -2.8824985027313232
    4. 'matrix' → logprob: -4.132498741149902
    5. 'mat' → logprob: -4.257498741149902
    6. 'n' → logprob: -4.507498741149902
    7. 'i' → logprob: -5.382498741149902
    8. 'def' → logprob: -6.007498741149902
    9. '```' → logprob: -6.132498741149902
    10. ' for' → logprob: -6.132498741149902

Token 961: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6596252918243408
    2. '<|end|>' → logprob: -0.9096252918243408
    3. '#' → logprob: -3.159625291824341
    4. 'for' → logprob: -4.534625053405762
    5. '
' → logprob: -4.659625053405762
    6. '<|end|>' → logprob: -4.909625053405762
    7. ')' → logprob: -5.659625053405762
    8. ',' → logprob: -6.034625053405762
    9. '.' → logprob: -6.534625053405762
    10. 'def' → logprob: -7.659625053405762

Token 962: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2503489851951599
    2. 'for' → logprob: -2.6253490447998047
    3. 'n' → logprob: -3.5003490447998047
    4. '
' → logprob: -3.7503490447998047
    5. 'def' → logprob: -4.250349044799805
    6. 'trans' → logprob: -4.375349044799805
    7. 'mat' → logprob: -4.625349044799805
    8. 'next' → logprob: -4.750349044799805
    9. 'matrix' → logprob: -5.375349044799805
    10. '```' → logprob: -5.375349044799805

Token 963: 'pour' (ID: 52723)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1743861585855484
    2. ')' → logprob: -1.9243861436843872
    3. ']' → logprob: -4.674386024475098
    4. ')]' → logprob: -5.799386024475098
    5. ')])' → logprob: -6.924386024475098
    6. '])]' → logprob: -8.174386024475098
    7. ' ])' → logprob: -8.299386024475098
    8. '#' → logprob: -9.799386024475098
    9. ']])' → logprob: -9.924386024475098
    10. ' )' → logprob: -10.674386024475098

Token 964: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0285063982009888
    2. 'le' → logprob: -1.4035063982009888
    3. 'la' → logprob: -1.6535063982009888
    4. 'l' → logprob: -2.528506278991699
    5. 'gestion' → logprob: -3.278506278991699
    6. 'g' → logprob: -3.653506278991699
    7. 'fac' → logprob: -3.903506278991699
    8. 'aj' → logprob: -5.153506278991699
    9. ')' → logprob: -5.153506278991699
    10. 'calcul' → logprob: -5.903506278991699

Token 965: ''aff' (ID: 53397)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7589356899261475
    2. 'a' → logprob: -1.3839356899261475
    3. 'es' → logprob: -3.0089356899261475
    4. ''instant' → logprob: -3.0089356899261475
    5. 'égalité' → logprob: -3.6339356899261475
    6. 'iné' → logprob: -3.6339356899261475
    7. ''aj' → logprob: -3.8839356899261475
    8. ''ex' → logprob: -4.633935928344727
    9. ''utilisation' → logprob: -4.758935928344727
    10. ''intégr' → logprob: -4.883935928344727

Token 966: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.14198508858680725
    2. 'ichage' → logprob: -2.1419851779937744
    3. 'ect' → logprob: -5.016984939575195
    4. 'inement' → logprob: -6.266984939575195
    5. 'f' → logprob: -6.641984939575195
    6. 'in' → logprob: -6.766984939575195
    7. 'fin' → logprob: -6.891984939575195
    8. 'n' → logprob: -7.141984939575195
    9. 'iné' → logprob: -7.641984939575195
    10. '#' → logprob: -7.766984939575195

Token 967: ')

' (ID: 1029)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005577010102570057
    2. ')' → logprob: -5.255577087402344
    3. ')])' → logprob: -8.880577087402344
    4. ' transformation' → logprob: -10.380577087402344
    5. 'transform' → logprob: -10.630577087402344
    6. ')],' → logprob: -10.755577087402344
    7. ')]
' → logprob: -11.130577087402344
    8. ')].' → logprob: -11.130577087402344
    9. '),' → logprob: -11.255577087402344
    10. ' )' → logprob: -11.380577087402344

Token 968: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28697526454925537
    2. 'for' → logprob: -1.5369752645492554
    3. 'd' → logprob: -4.786975383758545
    4. 'i' → logprob: -4.911975383758545
    5. 'n' → logprob: -4.911975383758545
    6. 'def' → logprob: -6.161975383758545
    7. 'T' → logprob: -6.411975383758545
    8. 'while' → logprob: -6.661975383758545
    9. '```' → logprob: -6.661975383758545
    10. 'result' → logprob: -7.286975383758545

Token 969: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057198408991098404
    2. '#' → logprob: -3.4321985244750977
    3. 'def' → logprob: -4.682198524475098
    4. 'base' → logprob: -5.807198524475098
    5. 'd' → logprob: -6.182198524475098
    6. 'i' → logprob: -6.432198524475098
    7. 'current' → logprob: -6.807198524475098
    8. 'result' → logprob: -6.932198524475098
    9. 'n' → logprob: -6.932198524475098
    10. 'T' → logprob: -7.432198524475098

Token 970: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029446007683873177
    2. '=' → logprob: -4.404446125030518
    3. ' for' → logprob: -4.529446125030518
    4. ' =' → logprob: -5.279446125030518
    5. 'def' → logprob: -8.40444564819336
    6. 'import' → logprob: -8.90444564819336
    7. '#' → logprob: -9.15444564819336
    8. 'n' → logprob: -9.52944564819336
    9. 'range' → logprob: -9.52944564819336
    10. '+=' → logprob: -9.65444564819336

Token 971: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1606554538011551
    2. ' for' → logprob: -2.2856554985046387
    3. 'range' → logprob: -4.535655498504639
    4. '#' → logprob: -4.535655498504639
    5. ' calcul' → logprob: -5.035655498504639
    6. ' utiliser' → logprob: -5.660655498504639
    7. 'calcul' → logprob: -5.785655498504639
    8. 'faire' → logprob: -6.535655498504639
    9. 'util' → logprob: -6.785655498504639
    10. ' #' → logprob: -7.035655498504639

Token 972: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.011871719732880592
    2. 'rer' → logprob: -4.511871814727783
    3. 'er' → logprob: -7.761871814727783
    4. '#' → logprob: -8.886871337890625
    5. 'ér' → logprob: -9.011871337890625
    6. 'r' → logprob: -10.636871337890625
    7. '=' → logprob: -11.011871337890625
    8. 'ré' → logprob: -11.136871337890625
    9. 'n' → logprob: -11.511871337890625
    10. 'l' → logprob: -11.636871337890625

Token 973: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0606770515441895
    2. ' for' → logprob: -1.4356770515441895
    3. ' i' → logprob: -2.0606770515441895
    4. 'd' → logprob: -2.4356770515441895
    5. 'n' → logprob: -3.0606770515441895
    6. ' d' → logprob: -3.1856770515441895
    7. ' n' → logprob: -3.8106770515441895
    8. 'i' → logprob: -3.9356770515441895
    9. 'range' → logprob: -4.0606770515441895
    10. '_' → logprob: -4.1856770515441895

Token 974: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005475532729178667
    2. ' range' → logprob: -5.2554755210876465
    3. 'd' → logprob: -8.380475997924805
    4. '1' → logprob: -12.380475997924805
    5. '2' → logprob: -13.755475997924805
    6. ' d' → logprob: -13.755475997924805
    7. '10' → logprob: -13.880475997924805
    8. '[' → logprob: -13.880475997924805
    9. 'n' → logprob: -14.130475997924805
    10. '(range' → logprob: -14.755475997924805

Token 975: ' longue' (ID: 59564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01997940056025982
    2. 'd' → logprob: -4.519979476928711
    3. ' range' → logprob: -4.769979476928711
    4. '1' → logprob: -8.269979476928711
    5. ' d' → logprob: -10.644979476928711
    6. 'n' → logprob: -10.769979476928711
    7. '2' → logprob: -11.019979476928711
    8. '10' → logprob: -11.144979476928711
    9. '[' → logprob: -11.644979476928711
    10. 'ranges' → logprob: -11.644979476928711

Token 976: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.021785248070955276
    2. 'r' → logprob: -4.271785259246826
    3. 'urs' → logprob: -4.896785259246826
    4. 'urse' → logprob: -10.771784782409668
    5. '#' → logprob: -11.146784782409668
    6. 'urde' → logprob: -11.146784782409668
    7. 'ar' → logprob: -11.521784782409668
    8. 'u' → logprob: -11.646784782409668
    9. 'eur' → logprob: -11.896784782409668
    10. 'er' → logprob: -12.521784782409668

Token 977: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6503983736038208
    2. '(' → logprob: -1.4003983736038208
    3. '(d' → logprob: -2.1503982543945312
    4. 'range' → logprob: -3.1503982543945312
    5. '(range' → logprob: -3.4003982543945312
    6. 'de' → logprob: -4.400398254394531
    7. ' d' → logprob: -4.900398254394531
    8. 'for' → logprob: -5.650398254394531
    9. 's' → logprob: -6.150398254394531
    10. '_range' → logprob: -6.275398254394531

Token 978: ' chiffres' (ID: 105565)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5741303563117981
    2. 'digits' → logprob: -1.0741302967071533
    3. 'd' → logprob: -2.9491302967071533
    4. 'str' → logprob: -4.074130535125732
    5. 'ch' → logprob: -4.199130535125732
    6. ' range' → logprob: -5.199130535125732
    7. ' chiffres' → logprob: -6.074130535125732
    8. '1' → logprob: -7.824130535125732
    9. ' digits' → logprob: -8.199130058288574
    10. ' ' → logprob: -8.199130058288574

Token 979: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23281416296958923
    2. 'd' → logprob: -1.7328141927719116
    3. ' for' → logprob: -3.607814073562622
    4. 'range' → logprob: -6.107814311981201
    5. 'from' → logprob: -7.482814311981201
    6. ' d' → logprob: -8.107813835144043
    7. ',' → logprob: -8.232813835144043
    8. '
' → logprob: -9.357813835144043
    9. ' range' → logprob: -9.732813835144043
    10. '0' → logprob: -9.857813835144043

Token 980: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2973746955394745
    2. 'e' → logprob: -1.7973747253417969
    3. '0' → logprob: -3.922374725341797
    4. '1' → logprob: -4.672374725341797
    5. 'igits' → logprob: -4.922374725341797
    6. 'ans' → logprob: -4.922374725341797
    7. 'es' → logprob: -5.297374725341797
    8. 'i' → logprob: -5.297374725341797
    9. 'ranges' → logprob: -5.422374725341797
    10. '(range' → logprob: -5.672374725341797

Token 981: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00029995047952979803
    2. ' range' → logprob: -8.250300407409668
    3. '0' → logprob: -10.875300407409668
    4. '1' → logprob: -11.250300407409668
    5. 'rang' → logprob: -12.875300407409668
    6. '2' → logprob: -13.750300407409668
    7. '```' → logprob: -14.500300407409668
    8. '10' → logprob: -14.875300407409668
    9. '
' → logprob: -15.125300407409668
    10. 'r' → logprob: -15.250300407409668

Token 982: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.898723561083898e-05
    2. ' range' → logprob: -9.625079154968262
    3. '0' → logprob: -12.000079154968262
    4. '1' → logprob: -12.375079154968262
    5. '2' → logprob: -14.250079154968262
    6. 'rang' → logprob: -14.625079154968262
    7. '[' → logprob: -15.500079154968262
    8. '
' → logprob: -15.500079154968262
    9. '10' → logprob: -15.625079154968262
    10. '```' → logprob: -15.750079154968262

Token 983: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.904464066028595
    2. 'for' → logprob: -1.1544640064239502
    3. ' in' → logprob: -2.40446400642395
    4. 'in' → logprob: -3.15446400642395
    5. ' for' → logprob: -3.15446400642395
    6. 'range' → logprob: -3.65446400642395
    7. '
' → logprob: -3.77946400642395
    8. '1' → logprob: -4.154464244842529
    9. 'import' → logprob: -4.279464244842529
    10. 'd' → logprob: -4.404464244842529

Token 984: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.7047707438468933
    2. '10' → logprob: -1.704770803451538
    3. '9' → logprob: -2.329770803451538
    4. '1' → logprob: -2.704770803451538
    5. '19' → logprob: -2.829770803451538
    6. '2' → logprob: -3.579770803451538
    7. '15' → logprob: -4.204770565032959
    8. '16' → logprob: -4.329770565032959
    9. '12' → logprob: -4.329770565032959
    10. '20' → logprob: -4.704770565032959

Token 985: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.7435876131057739
    2. '10' → logprob: -1.743587613105774
    3. '9' → logprob: -1.868587613105774
    4. '1' → logprob: -2.9935874938964844
    5. '2' → logprob: -3.1185874938964844
    6. '19' → logprob: -3.7435874938964844
    7. '6' → logprob: -3.8685874938964844
    8. '15' → logprob: -4.243587493896484
    9. '12' → logprob: -4.493587493896484
    10. '20' → logprob: -4.868587493896484

Token 986: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007256731390953064
    2. '
' → logprob: -5.382256507873535
    3. 'd' → logprob: -6.257256507873535
    4. ' for' → logprob: -7.257256507873535
    5. '

' → logprob: -13.132256507873535
    6. '1' → logprob: -13.507256507873535
    7. ',
' → logprob: -13.757256507873535
    8. ' 
' → logprob: -14.007256507873535
    9. '#' → logprob: -14.132256507873535
    10. '
' → logprob: -14.132256507873535

Token 987: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0390678346157074
    2. '
' → logprob: -3.2890677452087402
    3. ' for' → logprob: -7.28906774520874
    4. 'd' → logprob: -8.039068222045898
    5. '
' → logprob: -11.914068222045898
    6. '

' → logprob: -12.914068222045898
    7. 'range' → logprob: -13.039068222045898
    8. '1' → logprob: -13.664068222045898
    9. ',
' → logprob: -13.664068222045898
    10. '\n' → logprob: -13.789068222045898

Token 988: 'car' (ID: 6830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10968247056007385
    2. ' for' → logprob: -2.484682559967041
    3. '18' → logprob: -4.609682559967041
    4. 'range' → logprob: -5.109682559967041
    5. '1' → logprob: -6.359682559967041
    6. '19' → logprob: -6.484682559967041
    7. ')' → logprob: -7.609682559967041
    8. '
' → logprob: -8.109682083129883
    9. ' range' → logprob: -8.359682083129883
    10. ' ' → logprob: -9.609682083129883

Token 989: ' les' (ID: 1341)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.09066309779882431
    2. ' ' → logprob: -3.090663194656372
    3. '10' → logprob: -3.965663194656372
    4. '19' → logprob: -4.090662956237793
    5. 'L' → logprob: -5.590662956237793
    6. ' L' → logprob: -7.965662956237793
    7. '1' → logprob: -8.090662956237793
    8. 'len' → logprob: -8.715662956237793
    9. 'for' → logprob: -8.840662956237793
    10. 'd' → logprob: -8.965662956237793

Token 990: ' ent' (ID: 1121)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.11264423280954361
    2. 'for' → logprob: -3.8626441955566406
    3. 'd' → logprob: -4.112644195556641
    4. ' for' → logprob: -4.237644195556641
    5. '19' → logprob: -4.612644195556641
    6. ' ' → logprob: -4.737644195556641
    7. '10' → logprob: -4.737644195556641
    8. '9' → logprob: -5.362644195556641
    9. 'L' → logprob: -5.487644195556641
    10. 'n' → logprob: -6.237644195556641

Token 991: 'iers' (ID: 11012)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0814548209309578
    2. 't' → logprob: -2.5814547538757324
    3. 'iers' → logprob: -7.331454753875732
    4. 'ières' → logprob: -7.706454753875732
    5. '```' → logprob: -7.706454753875732
    6. 'ière' → logprob: -8.58145523071289
    7. 'digits' → logprob: -8.95645523071289
    8. 'ter' → logprob: -9.70645523071289
    9. 'fants' → logprob: -9.70645523071289
    10. 'tiers' → logprob: -9.95645523071289

Token 992: ' de' (ID: 334)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.15039074420928955
    2. '<=' → logprob: -2.150390625
    3. ' <' → logprob: -4.150390625
    4. '1' → logprob: -6.400390625
    5. ' in' → logprob: -6.775390625
    6. '<' → logprob: -7.275390625
    7. 'in' → logprob: -7.400390625
    8. 'import' → logprob: -7.650390625
    9. ' ≤' → logprob: -8.150390625
    10. ' ' → logprob: -8.275390625

Token 993: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.543533205986023
    2. '1' → logprob: -0.918533205986023
    3. ' ' → logprob: -4.4185333251953125
    4. '19' → logprob: -5.4185333251953125
    5. 'd' → logprob: -6.7935333251953125
    6. 'range' → logprob: -6.7935333251953125
    7. '10' → logprob: -7.5435333251953125
    8. 'digits' → logprob: -8.543533325195312
    9. 'l' → logprob: -9.293533325195312
    10. '9' → logprob: -9.418533325195312

Token 994: '64' (ID: 2220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09372091293334961
    2. '18' → logprob: -2.4687209129333496
    3. '19' → logprob: -5.96872091293335
    4. '10' → logprob: -7.21872091293335
    5. 'range' → logprob: -7.34372091293335
    6. ' ' → logprob: -8.468721389770508
    7. '2' → logprob: -8.593721389770508
    8. '0' → logprob: -9.093721389770508
    9. 'int' → logprob: -9.718721389770508
    10. '```' → logprob: -9.968721389770508

Token 995: ' bits' (ID: 18189)
  Prédit: '-bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.6163569688796997
    2. 'bits' → logprob: -1.6163569688796997
    3. '_bit' → logprob: -2.74135684967041
    4. '_bits' → logprob: -2.74135684967041
    5. 'bit' → logprob: -2.86635684967041
    6. 'range' → logprob: -4.24135684967041
    7. ' bits' → logprob: -4.49135684967041
    8. 'd' → logprob: -4.61635684967041
    9. '^' → logprob: -4.74135684967041
    10. '**' → logprob: -5.11635684967041

Token 996: ' ont' (ID: 4930)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19980870187282562
    2. ':' → logprob: -2.5748085975646973
    3. ' +' → logprob: -3.0748085975646973
    4. 'for' → logprob: -4.199808597564697
    5. '):' → logprob: -4.449808597564697
    6. ':
' → logprob: -5.199808597564697
    7. '>' → logprob: -6.074808597564697
    8. ' are' → logprob: -6.074808597564697
    9. 'in' → logprob: -6.074808597564697
    10. ' in' → logprob: -6.074808597564697

Token 997: ' au' (ID: 2791)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40636831521987915
    2. ' range' → logprob: -2.0313682556152344
    3. 'd' → logprob: -2.2813682556152344
    4. '18' → logprob: -2.6563682556152344
    5. '1' → logprob: -3.9063682556152344
    6. ' ' → logprob: -5.781368255615234
    7. '```' → logprob: -6.656368255615234
    8. ' une' → logprob: -7.031368255615234
    9. 'de' → logprob: -7.156368255615234
    10. '17' → logprob: -7.656368255615234

Token 998: ' plus' (ID: 2932)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011570458300411701
    2. ' range' → logprob: -5.261570453643799
    3. 'n' → logprob: -6.136570453643799
    4. 'rang' → logprob: -6.386570453643799
    5. 'c' → logprob: -8.136570930480957
    6. 'r' → logprob: -8.386570930480957
    7. 'moins' → logprob: -8.761570930480957
    8. 'x' → logprob: -8.886570930480957
    9. 'près' → logprob: -8.886570930480957
    10. 'ranges' → logprob: -8.886570930480957

Token 999: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.016172317788004875
    2. '19' → logprob: -4.766172409057617
    3. ' ' → logprob: -4.891172409057617
    4. '1' → logprob: -11.891172409057617
    5. '```' → logprob: -12.891172409057617
    6. '``' → logprob: -13.641172409057617
    7. '
' → logprob: -13.891172409057617
    8. '17' → logprob: -14.141172409057617
    9. '9' → logprob: -14.516172409057617
    10. '   ' → logprob: -15.141172409057617

Token 1000: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.004089678172022104
    2. '19' → logprob: -5.629089832305908
    3. ' ' → logprob: -7.629089832305908
    4. '```' → logprob: -13.50408935546875
    5. '1' → logprob: -14.37908935546875
    6. '``' → logprob: -14.62908935546875
    7. '17' → logprob: -15.50408935546875
    8. '
' → logprob: -15.62908935546875
    9. '20' → logprob: -16.37908935546875
    10. '9' → logprob: -16.75408935546875

Token 1001: ' chiffres' (ID: 105565)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.5884220600128174
    2. ' chiffres' → logprob: -0.9634220600128174
    3. 'digits' → logprob: -3.0884220600128174
    4. 'd' → logprob: -5.463421821594238
    5. ' espaces' → logprob: -5.713421821594238
    6. '
' → logprob: -5.713421821594238
    7. ' caractères' → logprob: -5.963421821594238
    8. 'e' → logprob: -6.838421821594238
    9. ')' → logprob: -7.088421821594238
    10. '0' → logprob: -7.838421821594238

Token 1002: ')
' (ID: 446)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8968043327331543
    2. '):' → logprob: -1.3968043327331543
    3. 'd' → logprob: -1.6468043327331543
    4. ')' → logprob: -2.8968043327331543
    5. '):
' → logprob: -3.6468043327331543
    6. '+' → logprob: -3.8968043327331543
    7. 'dans' → logprob: -3.8968043327331543
    8. 'en' → logprob: -5.146804332733154
    9. ':' → logprob: -5.271804332733154
    10. 'de' → logprob: -5.646804332733154

Token 1003: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008137094788253307
    2. 'd' → logprob: -5.133137226104736
    3. ' for' → logprob: -6.133137226104736
    4. '
' → logprob: -10.633136749267578
    5. '#' → logprob: -12.883136749267578
    6. ',' → logprob: -13.383136749267578
    7. 'f' → logprob: -13.508136749267578
    8. ',
' → logprob: -13.508136749267578
    9. ' d' → logprob: -13.758136749267578
    10. '```' → logprob: -14.508136749267578

Token 1004: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.47407835721969604
    2. 'd' → logprob: -0.974078357219696
    3. '	d' → logprob: -14.474078178405762
    4. '_d' → logprob: -15.099078178405762
    5. ' ' → logprob: -15.349078178405762
    6. ' ' → logprob: -15.474078178405762
    7. '_' → logprob: -16.224079132080078
    8. '   ' → logprob: -17.974079132080078
    9. ')d' → logprob: -18.099079132080078
    10. ' _' → logprob: -18.224079132080078

Token 1005: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18012173473834991
    2. 'in' → logprob: -1.8051217794418335
    3. ' ' → logprob: -8.805121421813965
    4. 'd' → logprob: -9.180121421813965
    5. '1' → logprob: -9.805121421813965
    6. ' ' → logprob: -11.555121421813965
    7. '	in' → logprob: -11.555121421813965
    8. 'n' → logprob: -12.180121421813965
    9. 'range' → logprob: -12.492621421813965
    10. ',' → logprob: -12.492621421813965

Token 1006: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006741184741258621
    2. ' range' → logprob: -5.006741046905518
    3. '1' → logprob: -10.631741523742676
    4. '(range' → logprob: -14.131741523742676
    5. ' ' → logprob: -14.756741523742676
    6. 'in' → logprob: -15.256741523742676
    7. '   ' → logprob: -16.13174057006836
    8. '	range' → logprob: -16.13174057006836
    9. '```' → logprob: -16.75674057006836
    10. ' in' → logprob: -16.88174057006836

Token 1007: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002489691600203514
    2. '1' → logprob: -6.0024895668029785
    3. '(
' → logprob: -11.502490043640137
    4. ' (' → logprob: -12.502490043640137
    5. ',' → logprob: -15.627490043640137
    6. ' ' → logprob: -18.37748908996582
    7. '(

' → logprob: -18.50248908996582
    8. 'd' → logprob: -18.62748908996582
    9. '   ' → logprob: -18.75248908996582
    10. '[' → logprob: -18.81498908996582

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '18' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.750006675720215
    4. '19' → logprob: -14.250006675720215
    5. '0' → logprob: -14.250006675720215
    6. '(' → logprob: -15.250006675720215
    7. '2' → logprob: -16.7500057220459
    8. '
' → logprob: -16.8750057220459
    9. '10' → logprob: -17.1250057220459
    10. '```' → logprob: -17.8750057220459

Token 1009: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013350016670301557
    2. ' ,' → logprob: -6.626335144042969
    3. '18' → logprob: -12.251335144042969
    4. ',
' → logprob: -13.001335144042969
    5. '1' → logprob: -14.501335144042969
    6. '(' → logprob: -15.376335144042969
    7. '‌,' → logprob: -15.626335144042969
    8. ' ,
' → logprob: -15.876335144042969
    9. '19' → logprob: -16.00133514404297
    10. ',len' → logprob: -16.12633514404297

Token 1010: ' ' (ID: 220)
  Prédit: '19'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '19' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -9.875054359436035
    3. '20' → logprob: -13.875054359436035
    4. '1' → logprob: -14.125054359436035
    5. '   ' → logprob: -14.625054359436035
    6. '10' → logprob: -15.250054359436035
    7. '18' → logprob: -15.500054359436035
    8. '
' → logprob: -16.00005340576172
    9. '9' → logprob: -17.62505340576172
    10. '``' → logprob: -17.62505340576172

Token 1011: '19' (ID: 858)
  Prédit: '19'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '19' → logprob: -6.396757089532912e-05
    2. '20' → logprob: -9.7500638961792
    3. ' ' → logprob: -12.7500638961792
    4. '10' → logprob: -13.5000638961792
    5. '1' → logprob: -15.1250638961792
    6. '18' → logprob: -15.3750638961792
    7. '
' → logprob: -15.5000638961792
    8. '2' → logprob: -15.7500638961792
    9. '11' → logprob: -15.8750638961792
    10. '``' → logprob: -16.000064849853516

Token 1012: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04885997623205185
    2. '):
' → logprob: -3.0488600730895996
    3. ')' → logprob: -8.548859596252441
    4. ':' → logprob: -10.423859596252441
    5. ' ):' → logprob: -10.423859596252441
    6. '):
' → logprob: -11.298859596252441
    7. '   ' → logprob: -12.423859596252441
    8. ' :' → logprob: -13.548859596252441
    9. ' ):
' → logprob: -14.548859596252441
    10. '+' → logprob: -14.798859596252441

Token 1013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012714238837361336
    2. 'n' → logprob: -7.3762712478637695
    3. '#' → logprob: -8.75127124786377
    4. '    
' → logprob: -9.37627124786377
    5. ' if' → logprob: -9.37627124786377
    6. 'if' → logprob: -9.37627124786377
    7. ':' → logprob: -9.50127124786377
    8. ' n' → logprob: -10.00127124786377
    9. ' #' → logprob: -10.50127124786377
    10. '
' → logprob: -11.00127124786377

Token 1014: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0235241651535034
    2. 'if' → logprob: -1.2735241651535034
    3. 'n' → logprob: -1.3985241651535034
    4. '#' (adapté à ' #') → logprob: -3.398524284362793
    5. 'l' → logprob: -3.523524284362793
    6. 'start' → logprob: -3.648524284362793
    7. ' if' → logprob: -5.023524284362793
    8. 'i' → logprob: -5.523524284362793
    9. 'from' → logprob: -6.148524284362793
    10. 'm' → logprob: -6.273524284362793

Token 1015: ' Construction' (ID: 31452)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4520288109779358
    2. 'if' → logprob: -1.452028751373291
    3. 'n' → logprob: -3.327028751373291
    4. 'lower' → logprob: -3.827028751373291
    5. 'l' → logprob: -4.077028751373291
    6. '#' → logprob: -4.577028751373291
    7. 'low' → logprob: -4.827028751373291
    8. 'from' → logprob: -5.327028751373291
    9. 'L' → logprob: -5.327028751373291
    10. 'upper' → logprob: -5.702028751373291

Token 1016: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07817235589027405
    2. 'n' → logprob: -3.453172445297241
    3. ' n' → logprob: -4.203172206878662
    4. ' de' → logprob: -4.703172206878662
    5. ' la' → logprob: -4.828172206878662
    6. 'de' → logprob: -5.828172206878662
    7. 'l' → logprob: -6.328172206878662
    8. 't' → logprob: -6.953172206878662
    9. ' l' → logprob: -7.453172206878662
    10. ' L' → logprob: -7.453172206878662

Token 1017: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1330182552337646
    2. 'n' → logprob: -1.3830182552337646
    3. '10' → logprob: -1.7580182552337646
    4. 'la' → logprob: -2.6330182552337646
    5. 'L' → logprob: -3.3830182552337646
    6. '(' → logprob: -4.258018493652344
    7. 'pow' → logprob: -4.258018493652344
    8. 'x' → logprob: -4.508018493652344
    9. '[[' → logprob: -4.508018493652344
    10. 'B' → logprob: -4.633018493652344

Token 1018: ' matr' (ID: 25095)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.1952139139175415
    2. 'x' → logprob: -1.9452139139175415
    3. 'n' → logprob: -2.445213794708252
    4. 'if' → logprob: -2.695213794708252
    5. '#' → logprob: -2.820213794708252
    6. 'mat' → logprob: -2.820213794708252
    7. 'l' → logprob: -3.070213794708252
    8. 'M' → logprob: -3.070213794708252
    9. 'A' → logprob: -3.695213794708252
    10. 'm' → logprob: -3.820213794708252

Token 1019: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.1087404415011406
    2. 'atrice' → logprob: -2.3587403297424316
    3. 'tr' → logprob: -5.733740329742432
    4. '#' → logprob: -6.608740329742432
    5. 'at' → logprob: -7.108740329742432
    6. 'def' → logprob: -7.608740329742432
    7. 'ix' → logprob: -7.608740329742432
    8. 'try' → logprob: -8.10874080657959
    9. 'rice' → logprob: -8.23374080657959
    10. 'ière' → logprob: -8.48374080657959

Token 1020: ' de' (ID: 334)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.16775643825531
    2. 'x' → logprob: -2.0427565574645996
    3. 'mat' → logprob: -2.0427565574645996
    4. 'A' → logprob: -2.1677565574645996
    5. 't' → logprob: -2.2927565574645996
    6. 'm' → logprob: -3.0427565574645996
    7. 'M' → logprob: -3.1677565574645996
    8. 'a' → logprob: -3.1677565574645996
    9. 'trans' → logprob: -4.2927565574646
    10. '[' → logprob: -4.7927565574646

Token 1021: ' transition' (ID: 14463)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.10151176154613495
    2. '[[' → logprob: -2.6015117168426514
    3. '[
' → logprob: -4.6015119552612305
    4. 'transition' → logprob: -5.2265119552612305
    5. 'transform' → logprob: -5.4765119552612305
    6. 'mat' → logprob: -5.9765119552612305
    7. '[' → logprob: -8.97651195526123
    8. '#' → logprob: -10.35151195526123
    9. ' transformation' → logprob: -10.97651195526123
    10. '([[' → logprob: -10.97651195526123

Token 1022: ' "' (ID: 392)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.9787681698799133
    2. 'trans' → logprob: -1.6037681102752686
    3. 'T' → logprob: -1.9787681102752686
    4. 't' → logprob: -2.6037681102752686
    5. 'm' → logprob: -3.1037681102752686
    6. 'A' → logprob: -3.2287681102752686
    7. 'x' → logprob: -3.3537681102752686
    8. 'M' → logprob: -3.9787681102752686
    9. '   ' → logprob: -4.478768348693848
    10. 'a' → logprob: -4.978768348693848

Token 1023: 'mat' (ID: 8872)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.774452269077301
    2. 'mat' → logprob: -2.2744522094726562
    3. 'trans' → logprob: -2.2744522094726562
    4. '[[' → logprob: -2.3994522094726562
    5. 't' → logprob: -2.8994522094726562
    6. 'M' → logprob: -3.3994522094726562
    7. 'A' → logprob: -3.7744522094726562
    8. 'm' → logprob: -3.8994522094726562
    9. 'x' → logprob: -3.8994522094726562
    10. 'tmp' → logprob: -4.149452209472656

Token 1024: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060871850699186325
    2. 'r' → logprob: -3.5608718395233154
    3. '=' → logprob: -3.6858718395233154
    4. 'rix' → logprob: -6.4358720779418945
    5. 'rans' → logprob: -6.5608720779418945
    6. '   ' → logprob: -7.0608720779418945
    7. ' =
' → logprob: -7.4358720779418945
    8. '=
' → logprob: -8.435872077941895
    9. '_mat' → logprob: -8.935872077941895
    10. 'rice' → logprob: -9.310872077941895

Token 1025: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05217385292053223
    2. 'mat' → logprob: -3.0521738529205322
    3. ' =' → logprob: -6.802173614501953
    4. '	mat' → logprob: -6.927173614501953
    5. ' mat' → logprob: -7.052173614501953
    6. '=' → logprob: -8.177173614501953
    7. ':' → logprob: -8.802173614501953
    8. '(mat' → logprob: -10.177173614501953
    9. ',' → logprob: -10.677173614501953
    10. '
' → logprob: -10.802173614501953

Token 1026: ' la' (ID: 557)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6795697808265686
    2. '[[' → logprob: -0.9295697808265686
    3. '[' → logprob: -2.554569721221924
    4. 'd' → logprob: -4.054569721221924
    5. 'mat' → logprob: -7.054569721221924
    6. ' [
' → logprob: -7.429569721221924
    7. 'B' → logprob: -7.804569721221924
    8. ' [[' → logprob: -8.179570198059082
    9. '#' → logprob: -8.554570198059082
    10. '   ' → logprob: -8.804570198059082

Token 1027: ' longueur' (ID: 104613)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.33386632800102234
    2. '3' → logprob: -2.4588663578033447
    3. 'multip' → logprob: -2.8338663578033447
    4. 'calcul' → logprob: -3.4588663578033447
    5. '[' → logprob: -3.7088663578033447
    6. 'mod' → logprob: -3.8338663578033447
    7. 'trans' → logprob: -3.9588663578033447
    8. 'd' → logprob: -4.833866119384766
    9. '[
' → logprob: -5.083866119384766
    10. 'for' → logprob: -5.458866119384766

Token 1028: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4708353281021118
    2. 'mat' → logprob: -1.5958353281021118
    3. '   ' → logprob: -2.2208352088928223
    4. '(' → logprob: -2.3458352088928223
    5. '(
' → logprob: -2.4708352088928223
    6. '[
' → logprob: -2.5958352088928223
    7. ' =' → logprob: -2.5958352088928223
    8. '=' → logprob: -2.9708352088928223
    9. 'd' → logprob: -3.5958352088928223
    10. ' (' → logprob: -4.345835208892822

Token 1029: '.
' (ID: 558)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.29026132822036743
    2. 'd' → logprob: -2.1652612686157227
    3. '   ' → logprob: -2.2902612686157227
    4. ' =' → logprob: -4.915261268615723
    5. ' digits' → logprob: -5.040261268615723
    6. '_digits' → logprob: -5.165261268615723
    7. '=' → logprob: -5.790261268615723
    8. 'igits' → logprob: -6.040261268615723
    9. '```' → logprob: -6.665261268615723
    10. ' d' → logprob: -7.040261268615723

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02256249263882637
    2. 'mat' → logprob: -3.8975625038146973
    3. ' mat' → logprob: -6.522562503814697
    4. '	mat' → logprob: -7.897562503814697
    5. '```' → logprob: -9.522562026977539
    6. '[' → logprob: -10.272562026977539
    7. '    
' → logprob: -10.522562026977539
    8. '(mat' → logprob: -11.647562026977539
    9. '    ' → logprob: -12.022562026977539
    10. '
' → logprob: -12.897562026977539

Token 1031: ' #' (ID: 1069)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0010164948180317879
    2. '   ' → logprob: -7.501016616821289
    3. ' mat' → logprob: -7.751016616821289
    4. '[' → logprob: -11.626016616821289
    5. '```' → logprob: -11.751016616821289
    6. '
' → logprob: -12.126016616821289
    7. '[
' → logprob: -13.001016616821289
    8. '	mat' → logprob: -13.501016616821289
    9. ' ' → logprob: -13.751016616821289
    10. '#' (adapté à ' #') → logprob: -14.001016616821289

Token 1032: ' La' (ID: 3038)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -9.729906196298543e-06
    2. ' mat' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.750009536743164
    4. '
' → logprob: -14.500009536743164
    5. '#' → logprob: -14.875009536743164
    6. '```' → logprob: -15.125009536743164
    7. '[' → logprob: -15.750009536743164
    8. '	mat' → logprob: -16.250009536743164
    9. '0' → logprob: -17.125009536743164
    10. 'base' → logprob: -17.375009536743164

Token 1033: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.010392430238425732
    2. ' mat' → logprob: -4.635392665863037
    3. ' =' → logprob: -8.510392189025879
    4. '[' → logprob: -8.760392189025879
    5. 'm' → logprob: -9.385392189025879
    6. '
' → logprob: -9.635392189025879
    7. '=' → logprob: -9.885392189025879
    8. '[
' → logprob: -11.260392189025879
    9. ' ' → logprob: -11.385392189025879
    10. '_mat' → logprob: -11.885392189025879

Token 1034: 'ice' (ID: 603)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7879896759986877
    2. 'ice' → logprob: -1.412989616394043
    3. 'ix' → logprob: -1.662989616394043
    4. 'mat' → logprob: -3.287989616394043
    5. 'atrice' → logprob: -3.287989616394043
    6. 'rice' → logprob: -4.412989616394043
    7. '[' → logprob: -5.162989616394043
    8. '#' → logprob: -5.162989616394043
    9. '   ' → logprob: -5.287989616394043
    10. ' mat' → logprob: -6.162989616394043

Token 1035: ' encode' (ID: 31288)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2266831248998642
    2. ' =' → logprob: -1.7266831398010254
    3. 'mat' → logprob: -3.7266831398010254
    4. '_mat' → logprob: -7.476683139801025
    5. ' mat' → logprob: -8.476682662963867
    6. '=
' → logprob: -9.726682662963867
    7. ' =
' → logprob: -11.101682662963867
    8. '=[' → logprob: -11.101682662963867
    9. '=[[' → logprob: -12.601682662963867
    10. '[' → logprob: -12.726682662963867

Token 1036: ' l' (ID: 305)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5562632083892822
    2. '[' → logprob: -1.0562632083892822
    3. '[[' → logprob: -2.5562632083892822
    4. ' [
' → logprob: -7.181262969970703
    5. '   ' → logprob: -8.181262969970703
    6. ' [[' → logprob: -8.931262969970703
    7. ' [' → logprob: -9.306262969970703
    8. '([[' → logprob: -11.306262969970703
    9. '([
' → logprob: -11.431262969970703
    10. '0' → logprob: -11.931262969970703

Token 1037: ''op' (ID: 70747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3419593274593353
    2. '[
' → logprob: -1.4669593572616577
    3. 'a' → logprob: -3.091959238052368
    4. 'e' → logprob: -5.341959476470947
    5. '[[' → logprob: -5.591959476470947
    6. ''état' → logprob: -6.466959476470947
    7. '   ' → logprob: -7.091959476470947
    8. ''information' → logprob: -7.716959476470947
    9. ''' → logprob: -8.216958999633789
    10. ' [
' → logprob: -8.341958999633789

Token 1038: 'ération' (ID: 24977)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.060928225517273
    2. '[
' → logprob: -2.0609283447265625
    3. 'os' → logprob: -2.1859283447265625
    4. '[[' → logprob: -2.3109283447265625
    5. '=[[' → logprob: -2.5609283447265625
    6. 'mat' → logprob: -3.0609283447265625
    7. '```' → logprob: -3.0609283447265625
    8. '_mat' → logprob: -3.5609283447265625
    9. 'érations' → logprob: -4.5609283447265625
    10. 'ération' → logprob: -4.5609283447265625

Token 1039: ' d' (ID: 272)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.1831343173980713
    2. ' =' → logprob: -2.6831343173980713
    3. ' mat' → logprob: -3.3081343173980713
    4. '[
' → logprob: -3.5581343173980713
    5. '[' → logprob: -3.9331343173980713
    6. '=' → logprob: -5.183134078979492
    7. ' =
' → logprob: -6.183134078979492
    8. '   ' → logprob: -6.433134078979492
    9. ' [
' → logprob: -6.433134078979492
    10. '=
' → logprob: -7.308134078979492

Token 1040: ''aj' (ID: 116735)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.21040156483650208
    2. '[[' → logprob: -2.0854015350341797
    3. '[' → logprob: -2.9604015350341797
    4. 'trans' → logprob: -5.08540153503418
    5. 'addition' → logprob: -6.21040153503418
    6. 'increment' → logprob: -6.58540153503418
    7. 'multip' → logprob: -7.21040153503418
    8. 'transition' → logprob: -7.46040153503418
    9. ' [
' → logprob: -7.46040153503418
    10. 'augmentation' → logprob: -7.58540153503418

Token 1041: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.001770139206200838
    2. 'oute' → logprob: -6.50177001953125
    3. 'outer' → logprob: -8.50177001953125
    4. 'ust' → logprob: -10.25177001953125
    5. 'oint' → logprob: -12.00177001953125
    6. 'outez' → logprob: -12.12677001953125
    7. 'o' → logprob: -12.75177001953125
    8. '[' → logprob: -13.37677001953125
    9. '#' → logprob: -13.50177001953125
    10. '```' → logprob: -13.75177001953125

Token 1042: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48999568819999695
    2. '[' → logprob: -1.8649957180023193
    3. ' de' → logprob: -2.4899957180023193
    4. ' =' → logprob: -3.6149957180023193
    5. ' [' → logprob: -3.9899957180023193
    6. ',' → logprob: -4.11499547958374
    7. '[
' → logprob: -4.23999547958374
    8. 'mat' → logprob: -4.48999547958374
    9. ' d' → logprob: -4.61499547958374
    10. '    ' → logprob: -4.73999547958374

Token 1043: ' B' (ID: 418)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.796585202217102
    2. '[
' → logprob: -1.046585202217102
    3. 'B' → logprob: -1.921585202217102
    4. '[' → logprob: -3.2965850830078125
    5. 'd' → logprob: -5.0465850830078125
    6. '1' → logprob: -5.9215850830078125
    7. '0' → logprob: -7.0465850830078125
    8. '10' → logprob: -7.0465850830078125
    9. 'A' → logprob: -7.1715850830078125
    10. ' [
' → logprob: -7.6715850830078125

Token 1044: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41065776348114014
    2. ',' → logprob: -2.0356578826904297
    3. ' et' → logprob: -3.0356578826904297
    4. ' à' → logprob: -3.0356578826904297
    5. ' ' → logprob: -3.1606578826904297
    6. '
' → logprob: -4.41065788269043
    7. '[' → logprob: -4.53565788269043
    8. ' ,' → logprob: -5.03565788269043
    9. ' *' → logprob: -5.66065788269043
    10. '  ' → logprob: -5.78565788269043

Token 1045: ' chaque' (ID: 21194)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7391166090965271
    2. 'l' → logprob: -0.9891166090965271
    3. '[' → logprob: -3.239116668701172
    4. 'ret' → logprob: -3.739116668701172
    5. 'd' → logprob: -4.114116668701172
    6. '[[' → logprob: -4.364116668701172
    7. '[
' → logprob: -4.489116668701172
    8. '0' → logprob: -4.614116668701172
    9. ' chaque' → logprob: -4.989116668701172
    10. 'la' → logprob: -5.239116668701172

Token 1046: ' étape' (ID: 83661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4549269676208496
    2. 'd' → logprob: -2.2049269676208496
    3. '10' → logprob: -2.4549269676208496
    4. 'ligne' → logprob: -2.9549269676208496
    5. 'digit' → logprob: -3.0799269676208496
    6. '[
' → logprob: -4.07992696762085
    7. '   ' → logprob: -4.20492696762085
    8. 'ch' → logprob: -5.07992696762085
    9. ' ' → logprob: -5.07992696762085
    10. ' [' → logprob: -5.32992696762085

Token 1047: ' et' (ID: 859)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.3503044843673706
    2. '   ' → logprob: -1.8503044843673706
    3. ' mat' → logprob: -2.22530460357666
    4. '[' → logprob: -4.60030460357666
    5. '[
' → logprob: -4.97530460357666
    6. '	mat' → logprob: -5.22530460357666
    7. ' =' → logprob: -6.10030460357666
    8. ':' → logprob: -6.35030460357666
    9. ',' → logprob: -6.47530460357666
    10. '(mat' → logprob: -7.60030460357666

Token 1048: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5085157752037048
    2. ' la' → logprob: -2.3835158348083496
    3. 'l' → logprob: -2.7585158348083496
    4. '[
' → logprob: -3.0085158348083496
    5. ' l' → logprob: -3.2585158348083496
    6. ' [' → logprob: -4.00851583480835
    7. ' de' → logprob: -4.13351583480835
    8. 'de' → logprob: -4.13351583480835
    9. 'la' → logprob: -4.13351583480835
    10. ' ' → logprob: -4.38351583480835

Token 1049: ' montée' (ID: 156495)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.128564715385437
    2. '[' → logprob: -1.378564715385437
    3. '10' → logprob: -2.3785648345947266
    4. '[
' → logprob: -2.5035648345947266
    5. 'mult' → logprob: -2.8785648345947266
    6. '0' → logprob: -2.8785648345947266
    7. 'mat' → logprob: -3.8785648345947266
    8. 'pow' → logprob: -4.003564834594727
    9. '
' → logprob: -4.128564834594727
    10. '[[' → logprob: -4.378564834594727

Token 1050: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8138347268104553
    2. '[' → logprob: -1.4388346672058105
    3. 'de' → logprob: -2.1888346672058105
    4. ' des' → logprob: -2.1888346672058105
    5. ' d' → logprob: -3.4388346672058105
    6. '[i' → logprob: -3.8138346672058105
    7. 'd' → logprob: -4.5638346672058105
    8. 'des' → logprob: -4.8138346672058105
    9. '   ' → logprob: -5.3138346672058105
    10. ' en' → logprob: -5.6888346672058105

Token 1051: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9509808421134949
    2. 'la' → logprob: -1.5759809017181396
    3. '10' → logprob: -2.7009809017181396
    4. '[' → logprob: -2.8259809017181396
    5. 'd' → logprob: -2.8259809017181396
    6. 'mat' → logprob: -3.0759809017181396
    7. 'l' → logprob: -3.0759809017181396
    8. '[i' → logprob: -3.8259809017181396
    9. ''une' → logprob: -4.2009806632995605
    10. '[(' → logprob: -4.2009806632995605

Token 1052: ' chiffre' (ID: 107420)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19209854304790497
    2. '0' → logprob: -2.067098617553711
    3. '1' → logprob: -3.817098617553711
    4. '[' → logprob: -4.817098617553711
    5. '[
' → logprob: -4.817098617553711
    6. '```' → logprob: -6.067098617553711
    7. '[[' → logprob: -6.067098617553711
    8. '
' → logprob: -6.692098617553711
    9. 'd' → logprob: -6.817098617553711
    10. 'mat' → logprob: -7.067098617553711

Token 1053: ' en' (ID: 469)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.29557210206985474
    2. '   ' → logprob: -1.54557204246521
    3. ' mat' → logprob: -4.295572280883789
    4. '[' → logprob: -4.795572280883789
    5. ' =' → logprob: -5.045572280883789
    6. '_mat' → logprob: -5.670572280883789
    7. 's' → logprob: -5.795572280883789
    8. '[
' → logprob: -6.420572280883789
    9. '=' → logprob: -6.920572280883789
    10. ',' → logprob: -7.295572280883789

Token 1054: ' base' (ID: 3611)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.9758588671684265
    2. '10' → logprob: -2.2258589267730713
    3. 'mat' → logprob: -2.7258589267730713
    4. '[' → logprob: -2.7258589267730713
    5. 'multip' → logprob: -2.7258589267730713
    6. 'base' → logprob: -2.8508589267730713
    7. '[[' → logprob: -2.9758589267730713
    8. 'val' → logprob: -3.1008589267730713
    9. '```' → logprob: -3.2258589267730713
    10. 'd' → logprob: -3.4758589267730713

Token 1055: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010846133809536695
    2. ' ' → logprob: -6.876084804534912
    3. '[' → logprob: -10.751084327697754
    4. '   ' → logprob: -11.876084327697754
    5. '```' → logprob: -11.876084327697754
    6. '1' → logprob: -12.001084327697754
    7. 'mat' → logprob: -12.626084327697754
    8. '[
' → logprob: -13.626084327697754
    9. '[[' → logprob: -13.751084327697754
    10. '(' → logprob: -14.001084327697754

Token 1056: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.250006675720215
    3. '```' → logprob: -14.375006675720215
    4. 'mat' → logprob: -14.750006675720215
    5. '   ' → logprob: -14.875006675720215
    6. '1' → logprob: -15.250006675720215
    7. '
' → logprob: -15.375006675720215
    8. '``' → logprob: -16.37500762939453
    9. '100' → logprob: -16.62500762939453
    10. '[[' → logprob: -17.25000762939453

Token 1057: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34417641162872314
    2. 'mat' → logprob: -1.3441764116287231
    3. ' mat' → logprob: -4.469176292419434
    4. '[' → logprob: -5.594176292419434
    5. ':' → logprob: -5.844176292419434
    6. '	mat' → logprob: -5.844176292419434
    7. ',' → logprob: -5.969176292419434
    8. ' =' → logprob: -6.344176292419434
    9. '
' → logprob: -7.094176292419434
    10. '[
' → logprob: -7.344176292419434

Token 1058: 'pu' (ID: 5112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35186055302619934
    2. '[' → logprob: -2.351860523223877
    3. '[
' → logprob: -2.726860523223877
    4. ')
' → logprob: -2.851860523223877
    5. '[[' → logprob: -2.976860523223877
    6. '```' → logprob: -4.726860523223877
    7. '0' → logprob: -5.476860523223877
    8. '10' → logprob: -5.851860523223877
    9. ' )' → logprob: -6.476860523223877
    10. ' ' → logprob: -6.601860523223877

Token 1059: 'issance' (ID: 17968)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3072003424167633
    2. '[' → logprob: -2.3072004318237305
    3. '[
' → logprob: -2.5572004318237305
    4. '10' → logprob: -3.6822004318237305
    5. '```' → logprob: -4.1822004318237305
    6. ']' → logprob: -4.4322004318237305
    7. '       ' → logprob: -4.9322004318237305
    8. '[[' → logprob: -5.4322004318237305
    9. '][' → logprob: -5.5572004318237305
    10. 'mat' → logprob: -5.8072004318237305

Token 1060: ').
' (ID: 6294)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7424959540367126
    2. '10' → logprob: -0.9924959540367126
    3. '(
' → logprob: -3.2424960136413574
    4. ')' → logprob: -3.4924960136413574
    5. ' de' → logprob: -4.367496013641357
    6. ' (' → logprob: -4.492496013641357
    7. 'de' → logprob: -4.742496013641357
    8. ' ,' → logprob: -4.742496013641357
    9. ' of' → logprob: -4.992496013641357
    10. ' ' → logprob: -5.242496013641357

Token 1061: '   ' (ID: 271)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0052694459445774555
    2. '   ' → logprob: -5.255269527435303
    3. ' mat' → logprob: -11.130269050598145
    4. '```' → logprob: -11.380269050598145
    5. '	mat' → logprob: -12.005269050598145
    6. '[' → logprob: -13.880269050598145
    7. '[
' → logprob: -14.130269050598145
    8. '    
' → logprob: -14.255269050598145
    9. '
' → logprob: -15.380269050598145
    10. '``' → logprob: -15.505269050598145

Token 1062: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' (adapté à ' mat') → logprob: -0.000918008794542402
    2. '   ' → logprob: -7.250917911529541
    3. ' mat' → logprob: -8.5009183883667
    4. '```' → logprob: -13.5009183883667
    5. '	mat' → logprob: -14.0009183883667
    6. '[' → logprob: -14.1259183883667
    7. '
' → logprob: -14.6259183883667
    8. 'Mat' → logprob: -14.8759183883667
    9. '[
' → logprob: -15.2509183883667
    10. ' ' → logprob: -15.7509183883667

Token 1063: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026465594768524
    2. '=' → logprob: -1.9102646112442017
    3. ' =
' → logprob: -10.78526496887207
    4. '=
' → logprob: -11.91026496887207
    5. ' =[' → logprob: -12.28526496887207
    6. ' ' → logprob: -13.28526496887207
    7. '=[' → logprob: -13.41026496887207
    8. '=[[' → logprob: -13.53526496887207
    9. '   ' → logprob: -13.78526496887207
    10. '=[
' → logprob: -14.03526496887207

Token 1064: ' [
' (ID: 4240)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6692070364952087
    2. '[
' → logprob: -0.9192070364952087
    3. '[' → logprob: -2.4192070960998535
    4. ' [[' → logprob: -9.919206619262695
    5. ' [
' → logprob: -12.044206619262695
    6. ' [' → logprob: -13.169206619262695
    7. '   ' → logprob: -13.794206619262695
    8. '[\' → logprob: -15.919206619262695
    9. '([[' → logprob: -16.794206619262695
    10. '[['' → logprob: -17.794206619262695

Token 1065: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013372665271162987
    2. '       ' → logprob: -7.251337051391602
    3. '   ' → logprob: -7.501337051391602
    4. ' [' → logprob: -9.751337051391602
    5. '[
' → logprob: -11.126337051391602
    6. ' ' → logprob: -14.126337051391602
    7. '	' → logprob: -14.501337051391602
    8. '  ' → logprob: -15.876337051391602
    9. '    ' → logprob: -15.876337051391602
    10. '     ' → logprob: -16.0013370513916

Token 1066: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -13.62500286102295
    3. '[
' → logprob: -13.75000286102295
    4. ' [' → logprob: -15.00000286102295
    5. '[(' → logprob: -15.50000286102295
    6. '[B' → logprob: -16.000003814697266
    7. '[A' → logprob: -16.500003814697266
    8. ' ' → logprob: -18.000003814697266
    9. '
' → logprob: -18.000003814697266
    10. '[[' → logprob: -18.500003814697266

Token 1067: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.463036435074173e-05
    2. '[' → logprob: -11.250024795532227
    3. '1' → logprob: -12.125024795532227
    4. '   ' → logprob: -12.375024795532227
    5. ' ' → logprob: -13.875024795532227
    6. '0' → logprob: -15.375024795532227
    7. '
' → logprob: -15.500024795532227
    8. '(' → logprob: -15.750024795532227
    9. '```' → logprob: -16.375024795532227
    10. '       ' → logprob: -16.500024795532227

Token 1068: ' **' (ID: 6240)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015887735644355416
    2. ' ,' → logprob: -6.626588821411133
    3. '0' → logprob: -8.626588821411133
    4. '   ' → logprob: -10.251588821411133
    5. '       ' → logprob: -11.751588821411133
    6. ',d' → logprob: -11.751588821411133
    7. ' ' → logprob: -11.876588821411133
    8. '    ' → logprob: -12.001588821411133
    9. '+' → logprob: -12.751588821411133
    10. '  ' → logprob: -13.126588821411133

Token 1069: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029798856005072594
    2. '1' → logprob: -3.529798746109009
    3. '   ' → logprob: -10.90479850769043
    4. '0' → logprob: -11.15479850769043
    5. ' d' → logprob: -11.65479850769043
    6. '9' → logprob: -13.65479850769043
    7. '2' → logprob: -13.77979850769043
    8. '(' → logprob: -13.77979850769043
    9. '3' → logprob: -14.65479850769043
    10. '```' → logprob: -14.65479850769043

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025758943520486355
    2. ' ,' → logprob: -6.002575874328613
    3. '   ' → logprob: -9.502575874328613
    4. '%' → logprob: -12.377575874328613
    5. '  ' → logprob: -12.627575874328613
    6. ',
' → logprob: -13.002575874328613
    7. '0' → logprob: -13.127575874328613
    8. '       ' → logprob: -13.127575874328613
    9. '    ' → logprob: -13.252575874328613
    10. ' ' → logprob: -13.252575874328613

Token 1071: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5179670453071594
    2. '0' → logprob: -1.1429669857025146
    3. '10' → logprob: -2.7679669857025146
    4. 'A' → logprob: -4.392967224121094
    5. '1' → logprob: -4.767967224121094
    6. ' B' → logprob: -7.267967224121094
    7. ' ' → logprob: -8.142967224121094
    8. '   ' → logprob: -8.142967224121094
    9. '(B' → logprob: -9.142967224121094
    10. '(' → logprob: -9.517967224121094

Token 1072: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.566119909286499
    2. '1' → logprob: -1.066119909286499
    3. '10' → logprob: -2.441119909286499
    4. 'B' → logprob: -7.441120147705078
    5. '(' → logprob: -9.191120147705078
    6. ' ' → logprob: -9.941120147705078
    7. '   ' → logprob: -10.566120147705078
    8. '100' → logprob: -10.691120147705078
    9. 'd' → logprob: -10.941120147705078
    10. '5' → logprob: -11.691120147705078

Token 1073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01027468591928482
    2. ' ,' → logprob: -4.760274887084961
    3. '   ' → logprob: -6.885274887084961
    4. '       ' → logprob: -8.635274887084961
    5. '],' → logprob: -9.260274887084961
    6. ',
' → logprob: -9.635274887084961
    7. '    ' → logprob: -9.760274887084961
    8. '[' → logprob: -10.135274887084961
    9. '  ' → logprob: -10.260274887084961
    10. '0' → logprob: -10.510274887084961

Token 1074: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008332294411957264
    2. 'B' → logprob: -4.883332252502441
    3. ' ' → logprob: -7.883332252502441
    4. '   ' → logprob: -9.383332252502441
    5. '    ' → logprob: -9.633332252502441
    6. ' B' → logprob: -10.133332252502441
    7. '     ' → logprob: -10.633332252502441
    8. '       ' → logprob: -11.133332252502441
    9. '[' → logprob: -11.258332252502441
    10. '(B' → logprob: -11.508332252502441

Token 1075: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005274907220155001
    2. 'B' → logprob: -5.255274772644043
    3. ' ' → logprob: -10.630274772644043
    4. '1' → logprob: -12.255274772644043
    5. '   ' → logprob: -12.630274772644043
    6. ' B' → logprob: -12.880274772644043
    7. 'b' → logprob: -14.005274772644043
    8. 'd' → logprob: -14.255274772644043
    9. '(B' → logprob: -14.442774772644043
    10. '     ' → logprob: -14.692774772644043

Token 1076: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4759642779827118
    2. '],
' → logprob: -0.9759643077850342
    3. '   ' → logprob: -6.850964069366455
    4. '],
' → logprob: -8.100964546203613
    5. ']' → logprob: -8.475964546203613
    6. '],[' → logprob: -8.850964546203613
    7. '       ' → logprob: -9.350964546203613
    8. ',' → logprob: -10.725964546203613
    9. ' ],' → logprob: -10.850964546203613
    10. '],

' → logprob: -11.100964546203613

Token 1077: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47834235429763794
    2. '       ' → logprob: -0.9783423542976379
    3. '   ' → logprob: -5.478342533111572
    4. ' [' → logprob: -9.728342056274414
    5. '[
' → logprob: -11.478342056274414
    6. '	' → logprob: -11.728342056274414
    7. '           ' → logprob: -14.853342056274414
    8. '      ' → logprob: -14.978342056274414
    9. ' ' → logprob: -15.853342056274414
    10. '	   ' → logprob: -15.853342056274414

Token 1078: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009384985081851482
    2. '[B' → logprob: -5.009385108947754
    3. '       ' → logprob: -6.134385108947754
    4. ' [' → logprob: -8.259385108947754
    5. '   ' → logprob: -8.384385108947754
    6. '[
' → logprob: -12.259385108947754
    7. '[A' → logprob: -13.009385108947754
    8. '0' → logprob: -13.759385108947754
    9. '      ' → logprob: -14.134385108947754
    10. ' ' → logprob: -14.634385108947754

Token 1079: ' Cette' (ID: 27383)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000568402698263526
    2. '[B' → logprob: -7.500568389892578
    3. '0' → logprob: -11.750568389892578
    4. ' [' → logprob: -11.875568389892578
    5. '[
' → logprob: -15.000568389892578
    6. '   ' → logprob: -15.500568389892578
    7. '[A' → logprob: -17.125568389892578
    8. '       ' → logprob: -17.500568389892578
    9. ' ' → logprob: -17.625568389892578
    10. 'B' → logprob: -17.750568389892578

Token 1080: ' ligne' (ID: 19583)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07686399668455124
    2. ',' → logprob: -3.701864004135132
    3. ' [' → logprob: -3.701864004135132
    4. '[
' → logprob: -4.576863765716553
    5. '   ' → logprob: -5.076863765716553
    6. ',
' → logprob: -5.951863765716553
    7. '0' → logprob: -6.701863765716553
    8. ' ,' → logprob: -7.326863765716553
    9. '
' → logprob: -7.451863765716553
    10. ' ' → logprob: -7.701863765716553

Token 1081: ' g' (ID: 329)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3524489402770996
    2. '[' → logprob: -1.6024489402770996
    3. ',
' → logprob: -2.4774489402770996
    4. '   ' → logprob: -5.2274489402771
    5. '<|end|>' → logprob: -5.8524489402771
    6. ',[' → logprob: -6.6024489402771
    7. '[
' → logprob: -7.4774489402771
    8. ']' → logprob: -7.9774489402771
    9. ' ,' → logprob: -8.352449417114258
    10. ' [' → logprob: -8.352449417114258

Token 1082: 'ère' (ID: 4346)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18919625878334045
    2. '=' → logprob: -2.0641963481903076
    3. 'enerate' → logprob: -4.0641961097717285
    4. ' =' → logprob: -4.9391961097717285
    5. 'enerated' → logprob: -5.0641961097717285
    6. ']' → logprob: -6.0641961097717285
    7. 'u' → logprob: -6.3141961097717285
    8. '[
' → logprob: -6.5641961097717285
    9. 'ives' → logprob: -6.8141961097717285
    10. '=[' → logprob: -7.0641961097717285

Token 1083: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004642184358090162
    2. ' [' → logprob: -5.879642009735107
    3. '0' → logprob: -6.504642009735107
    4. '10' → logprob: -8.129642486572266
    5. '   ' → logprob: -10.879642486572266
    6. '[
' → logprob: -11.504642486572266
    7. ' ' → logprob: -12.379642486572266
    8. '    ' → logprob: -12.754642486572266
    9. '[B' → logprob: -13.129642486572266
    10. '       ' → logprob: -13.504642486572266

Token 1084: ' propagation' (ID: 86772)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0996587872505188
    2. '10' → logprob: -2.599658727645874
    3. '1' → logprob: -4.474658966064453
    4. 'B' → logprob: -5.474658966064453
    5. '[' → logprob: -5.849658966064453
    6. 'ret' → logprob: -7.349658966064453
    7. ' ' → logprob: -7.974658966064453
    8. '(' → logprob: -8.224658966064453
    9. 'd' → logprob: -8.349658966064453
    10. 'pow' → logprob: -9.224658966064453

Token 1085: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020587847102433443
    2. ' [' → logprob: -7.002058982849121
    3. ',' → logprob: -8.002058982849121
    4. '   ' → logprob: -8.127058982849121
    5. '       ' → logprob: -8.502058982849121
    6. '[
' → logprob: -9.002058982849121
    7. '0' → logprob: -9.627058982849121
    8. '<|end|>' → logprob: -9.752058982849121
    9. '[...,' → logprob: -10.627058982849121
    10. ' ' → logprob: -11.627058982849121

Token 1086: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18853788077831268
    2. '10' → logprob: -2.313537836074829
    3. 'B' → logprob: -3.438537836074829
    4. '1' → logprob: -3.938537836074829
    5. '[' → logprob: -4.563538074493408
    6. 'd' → logprob: -5.063538074493408
    7. 'ret' → logprob: -6.063538074493408
    8. '(' → logprob: -7.063538074493408
    9. 'mat' → logprob: -8.06353759765625
    10. 'n' → logprob: -8.56353759765625

Token 1087: ' puissance' (ID: 63494)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08993697166442871
    2. '10' → logprob: -2.9649369716644287
    3. '1' → logprob: -3.7149369716644287
    4. 'B' → logprob: -5.339937210083008
    5. 'ret' → logprob: -5.839937210083008
    6. 'd' → logprob: -7.089937210083008
    7. '```' → logprob: -7.964937210083008
    8. 'pow' → logprob: -8.339937210083008
    9. 'mat' → logprob: -8.589937210083008
    10. 'A' → logprob: -8.589937210083008

Token 1088: ' selon' (ID: 27571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40439996123313904
    2. ',' → logprob: -1.1543999910354614
    3. '   ' → logprob: -4.529399871826172
    4. ',
' → logprob: -5.779399871826172
    5. '<|end|>' → logprob: -6.904399871826172
    6. ' [' → logprob: -7.029399871826172
    7. '[
' → logprob: -7.029399871826172
    8. '       ' → logprob: -8.654399871826172
    9. ' ,' → logprob: -9.279399871826172
    10. ' ' → logprob: -9.404399871826172

Token 1089: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8057522773742676
    2. '10' → logprob: -0.9307522773742676
    3. '0' → logprob: -2.3057522773742676
    4. '[' → logprob: -3.4307522773742676
    5. 'B' → logprob: -4.680752277374268
    6. ' ' → logprob: -4.930752277374268
    7. '1' → logprob: -6.305752277374268
    8. 'l' → logprob: -6.305752277374268
    9. ' d' → logprob: -7.305752277374268
    10. ']' → logprob: -7.430752277374268

Token 1090: ' position' (ID: 4010)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22186245024204254
    2. 'B' → logprob: -1.8468624353408813
    3. '0' → logprob: -4.346862316131592
    4. '10' → logprob: -4.596862316131592
    5. '[' → logprob: -4.721862316131592
    6. '1' → logprob: -6.096862316131592
    7. ' B' → logprob: -6.221862316131592
    8. 'A' → logprob: -6.596862316131592
    9. 'range' → logprob: -6.721862316131592
    10. ' d' → logprob: -7.721862316131592

Token 1091: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23692265152931213
    2. '[' → logprob: -1.7369226217269897
    3. ',
' → logprob: -3.8619227409362793
    4. '   ' → logprob: -4.611922740936279
    5. ',[' → logprob: -5.861922740936279
    6. '[
' → logprob: -7.986922740936279
    7. ' ,' → logprob: -8.236922264099121
    8. ' [' → logprob: -9.111922264099121
    9. '       ' → logprob: -9.486922264099121
    10. '	' → logprob: -9.736922264099121

Token 1092: ' chiffre' (ID: 107420)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6832467317581177
    2. '0' → logprob: -1.0582467317581177
    3. '10' → logprob: -2.683246612548828
    4. 'B' → logprob: -2.933246612548828
    5. '1' → logprob: -4.808246612548828
    6. ' ' → logprob: -4.933246612548828
    7. ' B' → logprob: -5.683246612548828
    8. '[' → logprob: -5.933246612548828
    9. 'l' → logprob: -6.308246612548828
    10. '   ' → logprob: -7.308246612548828

Token 1093: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019985012710094452
    2. '[' → logprob: -4.519985198974609
    3. ',
' → logprob: -5.394985198974609
    4. '   ' → logprob: -5.644985198974609
    5. ']' → logprob: -8.39498519897461
    6. ',[' → logprob: -8.39498519897461
    7. '[
' → logprob: -8.76998519897461
    8. ' ,' → logprob: -9.89498519897461
    9. '],' → logprob: -10.14498519897461
    10. '       ' → logprob: -10.39498519897461

Token 1094: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019099602475762367
    2. '       ' → logprob: -4.019099712371826
    3. ' [' → logprob: -7.144099712371826
    4. '   ' → logprob: -8.769099235534668
    5. '	' → logprob: -13.644099235534668
    6. '           ' → logprob: -13.769099235534668
    7. '      ' → logprob: -15.019099235534668
    8. '[
' → logprob: -15.019099235534668
    9. '        ' → logprob: -15.394099235534668
    10. ' ' → logprob: -15.519099235534668

Token 1095: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -3.953082341467962e-05
    2. '[B' → logprob: -10.250039100646973
    3. '0' → logprob: -12.625039100646973
    4. ' [' → logprob: -14.250039100646973
    5. '[
' → logprob: -16.62504005432129
    6. '[-' → logprob: -17.62504005432129
    7. '[A' → logprob: -17.87504005432129
    8. '   ' → logprob: -18.25004005432129
    9. 'B' → logprob: -18.62504005432129
    10. '       ' → logprob: -19.75004005432129

Token 1096: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001454955490771681
    2. 'B' → logprob: -10.00014591217041
    3. '10' → logprob: -10.00014591217041
    4. ' ' → logprob: -10.75014591217041
    5. '[' → logprob: -11.00014591217041
    6. '1' → logprob: -11.87514591217041
    7. '   ' → logprob: -12.62514591217041
    8. '[B' → logprob: -13.37514591217041
    9. '  ' → logprob: -14.50014591217041
    10. '    ' → logprob: -14.50014591217041

Token 1097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0065948134288191795
    2. ' ,' → logprob: -5.506594657897949
    3. '   ' → logprob: -6.881594657897949
    4. '[' → logprob: -7.381594657897949
    5. '       ' → logprob: -7.381594657897949
    6. '][' → logprob: -9.38159465789795
    7. '    ' → logprob: -9.88159465789795
    8. ',
' → logprob: -10.63159465789795
    9. '0' → logprob: -10.88159465789795
    10. '        ' → logprob: -11.00659465789795

Token 1098: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.289473822107539e-05
    2. '   ' → logprob: -10.125062942504883
    3. ' ' → logprob: -11.250062942504883
    4. '    ' → logprob: -13.250062942504883
    5. '       ' → logprob: -13.250062942504883
    6. '0' → logprob: -13.250062942504883
    7. '[' → logprob: -14.000062942504883
    8. '10' → logprob: -14.000062942504883
    9. '     ' → logprob: -14.125062942504883
    10. '  ' → logprob: -14.750062942504883

Token 1099: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.75001335144043
    3. '   ' → logprob: -12.50001335144043
    4. '10' → logprob: -14.50001335144043
    5. '
' → logprob: -15.00001335144043
    6. '0' → logprob: -15.00001335144043
    7. '    ' → logprob: -15.62501335144043
    8. '  ' → logprob: -15.75001335144043
    9. 'mat' → logprob: -16.00001335144043
    10. '     ' → logprob: -16.12501335144043

Token 1100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030526963528245687
    2. ' ,' → logprob: -6.003052711486816
    3. '[' → logprob: -8.253052711486816
    4. '   ' → logprob: -9.003052711486816
    5. '0' → logprob: -9.128052711486816
    6. '       ' → logprob: -10.003052711486816
    7. '    ' → logprob: -11.628052711486816
    8. ',
' → logprob: -12.003052711486816
    9. ' ' → logprob: -12.253052711486816
    10. '  ' → logprob: -12.628052711486816

Token 1101: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00016802136087790132
    2. ' B' → logprob: -8.875167846679688
    3. '   ' → logprob: -10.875167846679688
    4. '1' → logprob: -12.750167846679688
    5. '       ' → logprob: -13.000167846679688
    6. '    ' → logprob: -13.875167846679688
    7. '     ' → logprob: -14.000167846679688
    8. '0' → logprob: -14.125167846679688
    9. '      ' → logprob: -14.875167846679688
    10. '	B' → logprob: -15.125167846679688

Token 1102: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6940085887908936
    2. '],
' → logprob: -0.6940085887908936
    3. '   ' → logprob: -8.319008827209473
    4. ' ],' → logprob: -8.319008827209473
    5. ' ],
' → logprob: -8.444008827209473
    6. '],
' → logprob: -9.444008827209473
    7. ']' → logprob: -10.069008827209473
    8. '],

' → logprob: -10.569008827209473
    9. '],[' → logprob: -12.944008827209473
    10. '    ' → logprob: -13.194008827209473

Token 1103: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02309977449476719
    2. '       ' → logprob: -4.023099899291992
    3. ' [' → logprob: -5.398099899291992
    4. '   ' → logprob: -8.148099899291992
    5. '	' → logprob: -9.148099899291992
    6. ']' → logprob: -12.273099899291992
    7. '[
' → logprob: -12.523099899291992
    8. '0' → logprob: -12.648099899291992
    9. ' ' → logprob: -13.273099899291992
    10. '	   ' → logprob: -14.523099899291992

Token 1104: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015106932260096073
    2. ' [' → logprob: -6.7515106201171875
    3. '   ' → logprob: -8.626510620117188
    4. '       ' → logprob: -9.126510620117188
    5. '0' → logprob: -10.251510620117188
    6. '[
' → logprob: -11.501510620117188
    7. ',' → logprob: -13.501510620117188
    8. ']' → logprob: -13.876510620117188
    9. ' ' → logprob: -14.001510620117188
    10. '	' → logprob: -14.251510620117188

Token 1105: ' Cette' (ID: 27383)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004388933070003986
    2. ' [' → logprob: -5.504388809204102
    3. '0' → logprob: -8.129388809204102
    4. '[
' → logprob: -11.754388809204102
    5. '   ' → logprob: -12.879388809204102
    6. ' ' → logprob: -13.004388809204102
    7. '       ' → logprob: -13.504388809204102
    8. '<|end|>' → logprob: -14.629388809204102
    9. ']' → logprob: -14.754388809204102
    10. '	' → logprob: -15.254388809204102

Token 1106: ' ligne' (ID: 19583)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5419067144393921
    2. ']' → logprob: -1.541906714439392
    3. '[' → logprob: -1.916906714439392
    4. '],
' → logprob: -3.2919068336486816
    5. '0' → logprob: -4.916906833648682
    6. '   ' → logprob: -5.666906833648682
    7. ' ],' → logprob: -5.916906833648682
    8. ' ' → logprob: -6.541906833648682
    9. ',' → logprob: -6.541906833648682
    10. ' [' → logprob: -7.291906833648682

Token 1107: ' ajoute' (ID: 91611)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48090553283691406
    2. '[' → logprob: -1.480905532836914
    3. '],' → logprob: -2.480905532836914
    4. ',
' → logprob: -3.730905532836914
    5. '   ' → logprob: -3.855905532836914
    6. '       ' → logprob: -4.355905532836914
    7. ']' → logprob: -5.105905532836914
    8. '],
' → logprob: -5.855905532836914
    9. ' ,' → logprob: -7.105905532836914
    10. '[
' → logprob: -7.355905532836914

Token 1108: ' B' (ID: 418)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061183176934719086
    2. 'B' → logprob: -3.561183214187622
    3. ' ' → logprob: -3.811183214187622
    4. ' B' → logprob: -4.936182975769043
    5. '1' → logprob: -6.811182975769043
    6. '[' → logprob: -8.811182975769043
    7. '```' → logprob: -9.436182975769043
    8. '    ' → logprob: -9.561182975769043
    9. '   ' → logprob: -10.186182975769043
    10. ' [' → logprob: -10.186182975769043

Token 1109: ' à' (ID: 1221)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7632937431335449
    2. ',' → logprob: -1.013293743133545
    3. '   ' → logprob: -2.138293743133545
    4. '       ' → logprob: -3.388293743133545
    5. ']' → logprob: -4.388293743133545
    6. '[' → logprob: -5.888293743133545
    7. '],
' → logprob: -6.138293743133545
    8. ',
' → logprob: -6.638293743133545
    9. ' ],' → logprob: -9.138294219970703
    10. '     ' → logprob: -9.888294219970703

Token 1110: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5088370442390442
    2. 'ret' → logprob: -1.8838369846343994
    3. 'la' → logprob: -2.2588369846343994
    4. '0' → logprob: -2.3838369846343994
    5. '1' → logprob: -3.6338369846343994
    6. 'l' → logprob: -4.5088372230529785
    7. '[[' → logprob: -5.6338372230529785
    8. ' [' → logprob: -5.7588372230529785
    9. ' la' → logprob: -6.6338372230529785
    10. ' ' → logprob: -7.5088372230529785

Token 1111: ' it' (ID: 480)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.34153643250465393
    2. ']' → logprob: -2.716536521911621
    3. 'iteration' → logprob: -3.216536521911621
    4. ')' → logprob: -3.341536521911621
    5. '1' → logprob: -3.466536521911621
    6. 'it' → logprob: -3.591536521911621
    7. '
' → logprob: -3.841536521911621
    8. ' étape' → logprob: -3.966536521911621
    9. 'd' → logprob: -4.341536521911621
    10. 'step' → logprob: -4.716536521911621

Token 1112: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.009473439306020737
    2. 'er' → logprob: -4.8844733238220215
    3. 'é' → logprob: -7.1344733238220215
    4. 'éré' → logprob: -8.38447380065918
    5. 'érée' → logprob: -8.88447380065918
    6. 'éra' → logprob: -9.00947380065918
    7. 'érations' → logprob: -9.25947380065918
    8. 'ér' → logprob: -9.38447380065918
    9. 'érer' → logprob: -9.63447380065918
    10. '[' → logprob: -9.63447380065918

Token 1113: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13878580927848816
    2. '   ' → logprob: -2.7637858390808105
    3. '       ' → logprob: -3.6387858390808105
    4. ']' → logprob: -3.8887858390808105
    5. '],' → logprob: -4.6387858390808105
    6. ',
' → logprob: -5.2637858390808105
    7. '[' → logprob: -5.3887858390808105
    8. '[
' → logprob: -9.638785362243652
    9. '],
' → logprob: -9.888785362243652
    10. '[],' → logprob: -10.013785362243652

Token 1114: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.723770797252655
    2. '[' → logprob: -1.3487708568572998
    3. '1' → logprob: -1.7237708568572998
    4. 'la' → logprob: -3.3487708568573
    5. ' [' → logprob: -5.098770618438721
    6. '   ' → logprob: -5.223770618438721
    7. ' la' → logprob: -5.348770618438721
    8. 'l' → logprob: -5.473770618438721
    9. ']' → logprob: -5.473770618438721
    10. '       ' → logprob: -5.473770618438721

Token 1115: ''acc' (ID: 46331)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3197145462036133
    2. 'ligne' → logprob: -1.4447145462036133
    3. '[' → logprob: -1.8197145462036133
    4. 'it' → logprob: -2.3197145462036133
    5. '1' → logprob: -2.5697145462036133
    6. ']' → logprob: -3.1947145462036133
    7. 'range' → logprob: -3.9447145462036133
    8. ')' → logprob: -4.069714546203613
    9. 'iteration' → logprob: -4.444714546203613
    10. '[
' → logprob: -4.444714546203613

Token 1116: 'umulate' (ID: 134636)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.005424192640930414
    2. 'ér' → logprob: -6.0054240226745605
    3. 'er' → logprob: -6.3804240226745605
    4. 'é' → logprob: -7.7554240226745605
    5. '#' → logprob: -8.630424499511719
    6. 'érée' → logprob: -8.755424499511719
    7. 'érations' → logprob: -9.005424499511719
    8. 'éra' → logprob: -10.130424499511719
    9. ']' → logprob: -10.130424499511719
    10. ')' → logprob: -10.380424499511719

Token 1117: 'ur' (ID: 330)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3842906057834625
    2. 'lation' → logprob: -1.8842905759811401
    3. 'ateur' → logprob: -3.1342906951904297
    4. 'm' → logprob: -3.5092906951904297
    5. 'tion' → logprob: -3.6342906951904297
    6. 'l' → logprob: -3.7592906951904297
    7. 'ment' → logprob: -5.25929069519043
    8. 'r' → logprob: -5.38429069519043
    9. 'ration' → logprob: -5.50929069519043
    10. 'um' → logprob: -5.63429069519043

Token 1118: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2481621950864792
    2. '   ' → logprob: -2.373162269592285
    3. ']' → logprob: -2.623162269592285
    4. '],' → logprob: -3.498162269592285
    5. '       ' → logprob: -4.373162269592285
    6. '[' → logprob: -4.873162269592285
    7. ',
' → logprob: -5.873162269592285
    8. '[
' → logprob: -8.623162269592285
    9. '],
' → logprob: -9.498162269592285
    10. ' ,' → logprob: -9.873162269592285

Token 1119: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016860088799148798
    2. '       ' → logprob: -6.626686096191406
    3. ' [' → logprob: -8.001686096191406
    4. '   ' → logprob: -11.251686096191406
    5. '0' → logprob: -12.001686096191406
    6. '[
' → logprob: -12.626686096191406
    7. '	' → logprob: -13.376686096191406
    8. '```' → logprob: -14.876686096191406
    9. ' ' → logprob: -15.626686096191406
    10. ']' → logprob: -16.251686096191406

Token 1120: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.0003442832676228136
    2. '0' → logprob: -8.000344276428223
    3. ' [' → logprob: -11.750344276428223
    4. '[
' → logprob: -14.500344276428223
    5. '       ' → logprob: -15.250344276428223
    6. '   ' → logprob: -16.62534523010254
    7. ' ' → logprob: -18.50034523010254
    8. '[[' → logprob: -19.00034523010254
    9. '#' → logprob: -19.12534523010254
    10. '[...,' → logprob: -19.12534523010254

Token 1121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '000' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '#' → logprob: -16.875001907348633
    7. '00' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.812501907348633
    9. '```' → logprob: -19.250001907348633
    10. '1' → logprob: -19.375001907348633

Token 1122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018664896488189697
    2. '0' → logprob: -4.018664836883545
    3. ' ,' → logprob: -8.018665313720703
    4. '[' → logprob: -8.893665313720703
    5. '       ' → logprob: -10.268665313720703
    6. '   ' → logprob: -12.393665313720703
    7. ' ' → logprob: -12.768665313720703
    8. ',
' → logprob: -13.018665313720703
    9. '<|end|>' → logprob: -13.893665313720703
    10. '     ' → logprob: -14.893665313720703

Token 1123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.750003814697266
    4. '       ' → logprob: -15.250003814697266
    5. '1' → logprob: -16.125003814697266
    6. '     ' → logprob: -17.125003814697266
    7. '    ' → logprob: -17.750003814697266
    8. '        ' → logprob: -18.000003814697266
    9. '  ' → logprob: -18.125003814697266
    10. '#' → logprob: -18.187503814697266

Token 1124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7835754988482222e-05
    2. '1' → logprob: -11.000018119812012
    3. ' ' → logprob: -13.875018119812012
    4. '   ' → logprob: -16.875017166137695
    5. '[' → logprob: -18.125017166137695
    6. '       ' → logprob: -19.375017166137695
    7. '
' → logprob: -19.500017166137695
    8. ',' → logprob: -19.625017166137695
    9. '#' → logprob: -19.875017166137695
    10. '  ' → logprob: -19.875017166137695

Token 1125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38694193959236145
    2. '1' → logprob: -1.136941909790039
    3. ' ,' → logprob: -10.136941909790039
    4. '   ' → logprob: -11.136941909790039
    5. '       ' → logprob: -11.636941909790039
    6. ' ' → logprob: -13.011941909790039
    7. '=' → logprob: -13.511941909790039
    8. ',
' → logprob: -14.136941909790039
    9. '```' → logprob: -14.261941909790039
    10. '[' → logprob: -14.511941909790039

Token 1126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -13.625006675720215
    4. '     ' → logprob: -16.25000762939453
    5. '  ' → logprob: -16.37500762939453
    6. '    ' → logprob: -16.62500762939453
    7. '       ' → logprob: -16.62500762939453
    8. '      ' → logprob: -17.75000762939453
    9. '
' → logprob: -18.37500762939453
    10. '        ' → logprob: -18.50000762939453

Token 1127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '
' → logprob: -18.375001907348633
    5. '     ' → logprob: -19.000001907348633
    6. '       ' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.250001907348633
    8. '    ' → logprob: -19.375001907348633
    9. '      ' → logprob: -20.500001907348633
    10. '           ' → logprob: -20.625001907348633

Token 1128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002323914086446166
    2. ']
' → logprob: -6.627324104309082
    3. '   ' → logprob: -7.127324104309082
    4. ']]' → logprob: -9.252324104309082
    5. ' ]' → logprob: -9.877324104309082
    6. '],' → logprob: -10.127324104309082
    7. '       ' → logprob: -12.502324104309082
    8. '],
' → logprob: -13.502324104309082
    9. ']
' → logprob: -14.627324104309082
    10. ']

' → logprob: -15.002324104309082

Token 1129: '        ' (ID: 269)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38704419136047363
    2. '   ' → logprob: -1.1370441913604736
    3. ' ]' → logprob: -9.012043952941895
    4. ']
' → logprob: -10.262043952941895
    5. ']

' → logprob: -12.762043952941895
    6. '}' → logprob: -12.762043952941895
    7. '	' → logprob: -12.762043952941895
    8. ']
' → logprob: -13.262043952941895
    9. '  ' → logprob: -13.387043952941895
    10. '       ' → logprob: -13.887043952941895

Token 1130: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008728972636163235
    2. '   ' → logprob: -4.758728981018066
    3. ' ]' → logprob: -9.633728981018066
    4. '],' → logprob: -10.508728981018066
    5. ']
' → logprob: -10.883728981018066
    6. '       ' → logprob: -14.133728981018066
    7. '  ' → logprob: -14.633728981018066
    8. ',' → logprob: -15.008728981018066
    9. ']]' → logprob: -15.508728981018066
    10. '];' → logprob: -15.508728981018066

Token 1131: ' Cette' (ID: 27383)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020468863658607006
    2. '<|end|>' → logprob: -7.002047061920166
    3. ' ]' → logprob: -7.752047061920166
    4. '[' → logprob: -8.002046585083008
    5. '   ' → logprob: -8.752046585083008
    6. ']
' → logprob: -9.252046585083008
    7. '  ' → logprob: -11.252046585083008
    8. '],' → logprob: -11.252046585083008
    9. '```' → logprob: -11.252046585083008
    10. ' ' → logprob: -11.502046585083008

Token 1132: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7368659377098083
    2. ']' → logprob: -0.8618659377098083
    3. 'line' → logprob: -3.111865997314453
    4. ' ligne' → logprob: -3.861865997314453
    5. '[' → logprob: -4.611865997314453
    6. '],' → logprob: -4.986865997314453
    7. ' line' → logprob: -6.361865997314453
    8. '#' → logprob: -6.611865997314453
    9. '],
' → logprob: -6.611865997314453
    10. 'for' → logprob: -6.736865997314453

Token 1133: ' maint' (ID: 5425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47583410143852234
    2. ']' → logprob: -1.1008341312408447
    3. '[' → logprob: -4.100833892822266
    4. '<|end|>' → logprob: -4.225833892822266
    5. '],' → logprob: -5.225833892822266
    6. '   ' → logprob: -5.725833892822266
    7. ' ,' → logprob: -6.475833892822266
    8. '       ' → logprob: -7.725833892822266
    9. '[...,' → logprob: -7.725833892822266
    10. ',
' → logprob: -7.975833892822266

Token 1134: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.011413360014557838
    2. '[' → logprob: -4.88641357421875
    3. '       ' → logprob: -7.13641357421875
    4. 'iente' → logprob: -7.26141357421875
    5. 'ienne' → logprob: -8.01141357421875
    6. 'ent' → logprob: -8.01141357421875
    7. '   ' → logprob: -8.26141357421875
    8. 'ien' → logprob: -8.38641357421875
    9. 'iene' → logprob: -8.51141357421875
    10. 'iens' → logprob: -8.51141357421875

Token 1135: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23327496647834778
    2. ' l' → logprob: -2.3582749366760254
    3. 'la' → logprob: -2.6082749366760254
    4. '1' → logprob: -3.7332749366760254
    5. ' la' → logprob: -4.358274936676025
    6. 'le' → logprob: -6.608274936676025
    7. '<|end|>' → logprob: -7.233274936676025
    8. '```' → logprob: -7.983274936676025
    9. '   ' → logprob: -8.358275413513184
    10. '[' → logprob: -9.483275413513184

Token 1136: ' terme' (ID: 42959)
  Prédit: 'stat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stat' → logprob: -0.7900322675704956
    2. '1' → logprob: -1.2900322675704956
    3. 'ter' → logprob: -2.415032386779785
    4. 'term' → logprob: -3.165032386779785
    5. 'const' → logprob: -3.290032386779785
    6. 'status' → logprob: -4.040032386779785
    7. 'state' → logprob: -4.165032386779785
    8. 'constant' → logprob: -4.790032386779785
    9. 'val' → logprob: -4.915032386779785
    10. 'identity' → logprob: -5.415032386779785

Token 1137: ' constant' (ID: 9594)
  Prédit: 'constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constant' → logprob: -0.08049044013023376
    2. ' constant' → logprob: -2.7054903507232666
    3. 'const' → logprob: -4.580490589141846
    4. '1' → logprob: -8.705490112304688
    5. '   ' → logprob: -10.455490112304688
    6. '_constant' → logprob: -11.330490112304688
    7. ' constante' → logprob: -12.205490112304688
    8. '    ' → logprob: -12.205490112304688
    9. '  ' → logprob: -12.580490112304688
    10. '```' → logprob: -12.705490112304688

Token 1138: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08537200093269348
    2. '   ' → logprob: -2.585371971130371
    3. '],' → logprob: -5.835371971130371
    4. ' ]' → logprob: -5.835371971130371
    5. ']
' → logprob: -7.960371971130371
    6. '}' → logprob: -9.335371971130371
    7. '       ' → logprob: -9.460371971130371
    8. ',' → logprob: -10.335371971130371
    9. ']]' → logprob: -11.835371971130371
    10. '],
' → logprob: -11.835371971130371

Token 1139: 'pour' (ID: 52723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26283133029937744
    2. ')]' → logprob: -2.137831211090088
    3. ')' → logprob: -2.262831211090088
    4. '0' → logprob: -6.387831211090088
    5. ')])' → logprob: -6.387831211090088
    6. ' ' → logprob: -6.512831211090088
    7. ')]
' → logprob: -7.012831211090088
    8. ']' → logprob: -7.262831211090088
    9. ')],' → logprob: -7.387831211090088
    10. ')
' → logprob: -7.637831211090088

Token 1140: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21884934604167938
    2. 'la' → logprob: -2.4688494205474854
    3. 'aff' → logprob: -3.4688494205474854
    4. 'le' → logprob: -3.7188494205474854
    5. 'mat' → logprob: -3.8438494205474854
    6. 'multip' → logprob: -4.343849182128906
    7. 'les' → logprob: -4.468849182128906
    8. 'calcul' → logprob: -5.718849182128906
    9. ')' → logprob: -5.968849182128906
    10. 'addition' → logprob: -7.093849182128906

Token 1141: ''aff' (ID: 53397)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.029546240344643593
    2. ''aff' → logprob: -4.27954626083374
    3. ')' → logprob: -5.65454626083374
    4. ' affine' → logprob: -5.77954626083374
    5. ''ident' → logprob: -6.15454626083374
    6. 'addition' → logprob: -6.52954626083374
    7. 'Affine' → logprob: -7.02954626083374
    8. '])' → logprob: -7.15454626083374
    9. '#' → logprob: -7.65454626083374
    10. 'ident' → logprob: -8.279545783996582

Token 1142: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.05719694495201111
    2. 'iné' → logprob: -3.557196855545044
    3. 'ne' → logprob: -4.307197093963623
    4. ')' → logprob: -5.307197093963623
    5. 'ène' → logprob: -6.182197093963623
    6. 'e' → logprob: -6.807197093963623
    7. 'îne' → logprob: -7.307197093963623
    8. 'in' → logprob: -8.057196617126465
    9. '#' → logprob: -8.057196617126465
    10. '   ' → logprob: -8.432196617126465

Token 1143: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2574414014816284
    2. ')]' → logprob: -1.6324414014816284
    3. '   ' → logprob: -4.382441520690918
    4. ')' → logprob: -4.382441520690918
    5. ']
' → logprob: -5.132441520690918
    6. ' ]' → logprob: -8.507441520690918
    7. '       ' → logprob: -9.257441520690918
    8. '],' → logprob: -9.257441520690918
    9. ')],' → logprob: -9.882441520690918
    10. ')]
' → logprob: -10.257441520690918

Token 1144: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04866082966327667
    2. '   ' → logprob: -3.0486607551574707
    3. ' ]' → logprob: -10.548661231994629
    4. ']
' → logprob: -10.673661231994629
    5. '[' → logprob: -12.048661231994629
    6. '```' → logprob: -12.548661231994629
    7. '       ' → logprob: -12.923661231994629
    8. '[
' → logprob: -13.298661231994629
    9. ')' → logprob: -13.423661231994629
    10. ',' → logprob: -13.548661231994629

Token 1145: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16028465330600739
    2. '   ' → logprob: -1.9102846384048462
    3. ']
' (adapté à ' ]
') → logprob: -10.160284996032715
    4. ' ]' → logprob: -11.910284996032715
    5. '}' → logprob: -12.035284996032715
    6. ')' → logprob: -12.535284996032715
    7. ']

' → logprob: -13.410284996032715
    8. '```' → logprob: -13.660284996032715
    9. '	' → logprob: -14.660284996032715
    10. ']
' → logprob: -15.035284996032715

Token 1146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00964807067066431
    2. 'n' → logprob: -5.384647846221924
    3. '<|end|>' → logprob: -6.634647846221924
    4. 'if' → logprob: -7.009647846221924
    5. '```' → logprob: -7.509647846221924
    6. 'for' → logprob: -7.509647846221924
    7. 'step' → logprob: -8.134648323059082
    8. 'count' → logprob: -8.134648323059082
    9. '#' → logprob: -8.884648323059082
    10. 'while' → logprob: -9.009648323059082

Token 1147: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7913718819618225
    2. 'if' → logprob: -0.9163718819618225
    3. 'for' → logprob: -2.1663718223571777
    4. 'count' → logprob: -5.041371822357178
    5. '   ' → logprob: -5.166371822357178
    6. ' if' → logprob: -5.666371822357178
    7. 'step' → logprob: -5.791371822357178
    8. ' for' → logprob: -6.166371822357178
    9. 'steps' → logprob: -6.166371822357178
    10. '#' (adapté à ' #') → logprob: -6.291371822357178

Token 1148: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7856427431106567
    2. 'for' → logprob: -1.7856427431106567
    3. 'n' → logprob: -1.9106427431106567
    4. 'start' → logprob: -2.660642623901367
    5. 'count' → logprob: -2.910642623901367
    6. 'm' → logprob: -3.285642623901367
    7. 'nd' → logprob: -4.410642623901367
    8. 'end' → logprob: -4.535642623901367
    9. 'while' → logprob: -4.910642623901367
    10. 'lim' → logprob: -4.910642623901367

Token 1149: ' ajuste' (ID: 94049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7398200631141663
    2. 'n' → logprob: -0.8648200631141663
    3. '#' → logprob: -2.7398200035095215
    4. 'if' → logprob: -4.8648200035095215
    5. 'continue' → logprob: -4.9898200035095215
    6. '   ' → logprob: -5.2398200035095215
    7. 's' → logprob: -6.1148200035095215
    8. 'for' → logprob: -6.1148200035095215
    9. '=#' → logprob: -6.6148200035095215
    10. 'pow' → logprob: -6.8648200035095215

Token 1150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5570067763328552
    2. '   ' → logprob: -0.9320067763328552
    3. ' n' → logprob: -4.9320068359375
    4. 'l' → logprob: -4.9320068359375
    5. 'la' → logprob: -5.1820068359375
    6. 'mat' → logprob: -5.4320068359375
    7. 'if' → logprob: -6.0570068359375
    8. ' la' → logprob: -6.1820068359375
    9. 'le' → logprob: -7.5570068359375
    10. 'les' → logprob: -7.6820068359375

Token 1151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36454644799232483
    2. '1' → logprob: -1.2395464181900024
    3. 'n' → logprob: -5.239546298980713
    4. 'ext' → logprob: -5.489546298980713
    5. '_' → logprob: -6.239546298980713
    6. 'd' → logprob: -6.364546298980713
    7. '```' → logprob: -7.864546298980713
    8. 'i' → logprob: -8.239546775817871
    9. '_ext' → logprob: -8.239546775817871
    10. '_i' → logprob: -8.739546775817871

Token 1152: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022793589159846306
    2. '+=' → logprob: -4.272793769836426
    3. ' =' → logprob: -5.022793769836426
    4. 'if' → logprob: -7.272793769836426
    5. ' +=' → logprob: -7.772793769836426
    6. '=max' → logprob: -8.772793769836426
    7. 'n' → logprob: -9.022793769836426
    8. '=n' → logprob: -9.272793769836426
    9. '-=' → logprob: -9.647793769836426
    10. '   ' → logprob: -9.647793769836426

Token 1153: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.102663055062294
    2. 'n' → logprob: -2.852663040161133
    3. 'min' → logprob: -3.727663040161133
    4. 'if' → logprob: -4.227663040161133
    5. 'range' → logprob: -7.727663040161133
    6. 'd' → logprob: -8.227663040161133
    7. '0' → logprob: -8.352663040161133
    8. '#' → logprob: -9.852663040161133
    9. '(max' → logprob: -10.727663040161133
    10. '```' → logprob: -10.727663040161133

Token 1154: ' cas' (ID: 2108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5726130604743958
    2. 'max' → logprob: -1.822613000869751
    3. 'for' → logprob: -2.072613000869751
    4. 'range' → logprob: -2.447613000869751
    5. 'n' → logprob: -3.822613000869751
    6. 'min' → logprob: -4.07261323928833
    7. 'code' → logprob: -4.82261323928833
    8. '#' → logprob: -4.82261323928833
    9. 'continue' → logprob: -6.44761323928833
    10. 'd' → logprob: -6.44761323928833

Token 1155: ' où' (ID: 15113)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9620547294616699
    2. '=' → logprob: -1.21205472946167
    3. '   ' → logprob: -2.58705472946167
    4. ' if' → logprob: -2.71205472946167
    5. 'n' → logprob: -3.21205472946167
    6. '<=' → logprob: -3.33705472946167
    7. ' =' → logprob: -3.71205472946167
    8. '<' → logprob: -4.71205472946167
    9. '+=' → logprob: -4.71205472946167
    10. '==' → logprob: -4.83705472946167

Token 1156: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025272024795413017
    2. 'd' → logprob: -3.7752721309661865
    3. 'L' → logprob: -6.900271892547607
    4. ' n' → logprob: -7.025271892547607
    5. ' d' → logprob: -9.900272369384766
    6. '10' → logprob: -10.525272369384766
    7. '```' → logprob: -11.900272369384766
    8. '   ' → logprob: -12.025272369384766
    9. ' L' → logprob: -12.025272369384766
    10. '0' → logprob: -12.025272369384766

Token 1157: ' première' (ID: 23423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055696114897727966
    2. 'd' → logprob: -2.9306960105895996
    3. 'L' → logprob: -7.6806960105896
    4. '#' → logprob: -9.305696487426758
    5. '```' → logprob: -10.055696487426758
    6. '10' → logprob: -10.180696487426758
    7. 'for' → logprob: -10.305696487426758
    8. '   ' → logprob: -10.305696487426758
    9. ' n' → logprob: -10.430696487426758
    10. 'if' → logprob: -11.055696487426758

Token 1158: ' valeur' (ID: 41664)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4322305917739868
    2. ' <' → logprob: -1.5572305917739868
    3. ' ==' → logprob: -2.3072304725646973
    4. '>' → logprob: -2.4322304725646973
    5. '<=' → logprob: -2.4322304725646973
    6. 'n' → logprob: -2.6822304725646973
    7. '<' → logprob: -2.8072304725646973
    8. ' <=' → logprob: -2.8072304725646973
    9. '<n' → logprob: -3.5572304725646973
    10. 'if' → logprob: -4.307230472564697

Token 1159: ' tombe' (ID: 106773)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6948404908180237
    2. '<' → logprob: -1.069840431213379
    3. '<n' → logprob: -2.819840431213379
    4. '=' → logprob: -2.944840431213379
    5. '<=' → logprob: -4.319840431213379
    6. ' <' → logprob: -4.569840431213379
    7. ' >' → logprob: -4.944840431213379
    8. '>=' → logprob: -5.319840431213379
    9. ' =' → logprob: -6.569840431213379
    10. 'n' → logprob: -6.819840431213379

Token 1160: ' en' (ID: 469)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7923657894134521
    2. '=' → logprob: -0.9173657894134521
    3. 'if' → logprob: -2.792365789413452
    4. '>' → logprob: -2.917365789413452
    5. '<n' → logprob: -5.167366027832031
    6. 'n' → logprob: -5.292366027832031
    7. '<=' → logprob: -5.417366027832031
    8. ' if' → logprob: -5.667366027832031
    9. ' <' → logprob: -5.667366027832031
    10. ' =' → logprob: -6.167366027832031

Token 1161: ' dehors' (ID: 95167)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6806410551071167
    2. '0' → logprob: -1.3056410551071167
    3. 'd' → logprob: -2.9306411743164062
    4. '-dessous' → logprob: -3.1806411743164062
    5. '1' → logprob: -3.5556411743164062
    6. '-' → logprob: -4.055641174316406
    7. '10' → logprob: -4.055641174316406
    8. 'de' → logprob: -4.680641174316406
    9. 'negative' → logprob: -4.930641174316406
    10. 'neg' → logprob: -5.305641174316406

Token 1162: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.034572958946228
    2. 'if' → logprob: -1.534572958946228
    3. '>' → logprob: -1.909572958946228
    4. ' if' → logprob: -2.2845730781555176
    5. 'd' → logprob: -2.4095730781555176
    6. ' n' → logprob: -3.4095730781555176
    7. ' d' → logprob: -4.659573078155518
    8. '>=' → logprob: -5.159573078155518
    9. '<=' → logprob: -5.159573078155518
    10. '0' → logprob: -5.409573078155518

Token 1163: ' domaine' (ID: 46481)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5431575179100037
    2. 'interval' → logprob: -1.2931575775146484
    3. 'pl' → logprob: -2.5431575775146484
    4. 'for' → logprob: -3.2931575775146484
    5. 'd' → logprob: -3.9181575775146484
    6. 'bou' → logprob: -5.793157577514648
    7. 'if' → logprob: -6.293157577514648
    8. 'rang' → logprob: -7.043157577514648
    9. '#' → logprob: -7.668157577514648
    10. 'bloc' → logprob: -7.793157577514648

Token 1164: ' valide' (ID: 137323)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.766435980796814
    2. 'if' → logprob: -1.266435980796814
    3. '   ' → logprob: -1.391435980796814
    4. 'and' → logprob: -6.3914361000061035
    5. ' and' → logprob: -6.6414361000061035
    6. 'n' → logprob: -7.0164361000061035
    7. 'while' → logprob: -8.516435623168945
    8. ' +=' → logprob: -9.016435623168945
    9. ',' → logprob: -9.141435623168945
    10. ':' → logprob: -9.641435623168945

Token 1165: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2459675520658493
    2. 'if' → logprob: -2.1209676265716553
    3. '   ' → logprob: -2.4959676265716553
    4. '=' → logprob: -5.120967388153076
    5. ' =' → logprob: -5.495967388153076
    6. ' +=' → logprob: -6.120967388153076
    7. '+=' → logprob: -6.870967388153076
    8. 'n' → logprob: -6.995967388153076
    9. '	if' → logprob: -8.120967864990234
    10. 'while' → logprob: -8.620967864990234

Token 1166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007481207139790058
    2. 'if' → logprob: -5.257481098175049
    3. ' if' → logprob: -6.132481098175049
    4. 'n' → logprob: -10.132481575012207
    5. '```' → logprob: -11.007481575012207
    6. 'while' → logprob: -11.632481575012207
    7. ' n' → logprob: -12.632481575012207
    8. ' while' → logprob: -12.882481575012207
    9. '       ' → logprob: -14.007481575012207
    10. '   ' → logprob: -14.507481575012207

Token 1167: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7072017192840576
    2. 'if' (adapté à ' if') → logprob: -0.7072017192840576
    3. ' if' → logprob: -4.332201957702637
    4. 'while' → logprob: -7.457201957702637
    5. 'n' → logprob: -8.582201957702637
    6. '```' → logprob: -10.582201957702637
    7. ' while' → logprob: -11.457201957702637
    8. '       ' → logprob: -11.832201957702637
    9. '	if' → logprob: -12.832201957702637
    10. ' n' → logprob: -13.332201957702637

Token 1168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003995292354375124
    2. ' n' → logprob: -5.628995418548584
    3. 'd' → logprob: -8.378994941711426
    4. 'L' → logprob: -9.128994941711426
    5. '   ' → logprob: -10.003994941711426
    6. ' L' → logprob: -12.753994941711426
    7. ' d' → logprob: -12.878994941711426
    8. '	n' → logprob: -13.128994941711426
    9. '(n' → logprob: -14.128994941711426
    10. '    ' → logprob: -14.628994941711426

Token 1169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021656060125678778
    2. 'd' → logprob: -7.127165794372559
    3. '_' → logprob: -7.502165794372559
    4. '_d' → logprob: -8.377165794372559
    5. '==' → logprob: -9.502165794372559
    6. '[d' → logprob: -9.502165794372559
    7. '>' → logprob: -9.752165794372559
    8. '```' → logprob: -9.877165794372559
    9. ' <' → logprob: -10.002165794372559
    10. 'n' → logprob: -10.377165794372559

Token 1170: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.050885941833257675
    2. ' <' → logprob: -3.0508859157562256
    3. '<=' → logprob: -6.425886154174805
    4. ' <=' → logprob: -8.175886154174805
    5. '>' → logprob: -8.675886154174805
    6. '<n' → logprob: -8.925886154174805
    7. '>=' → logprob: -10.425886154174805
    8. ' >' → logprob: -10.550886154174805
    9. ' >=' → logprob: -12.050886154174805
    10. '<len' → logprob: -12.300886154174805

Token 1171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2847002148628235
    2. '10' → logprob: -2.0347001552581787
    3. '1' → logprob: -2.1597001552581787
    4. 'n' → logprob: -6.784700393676758
    5. 'd' → logprob: -8.909700393676758
    6. ' ' → logprob: -9.159700393676758
    7. '(' → logprob: -9.159700393676758
    8. '=' → logprob: -9.784700393676758
    9. 'L' → logprob: -10.034700393676758
    10. 'max' → logprob: -10.534700393676758

Token 1172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03701155260205269
    2. '1' → logprob: -3.4120116233825684
    3. '10' → logprob: -6.162011623382568
    4. 'n' → logprob: -7.037011623382568
    5. 'd' → logprob: -9.03701114654541
    6. 'max' → logprob: -9.53701114654541
    7. 'L' → logprob: -9.53701114654541
    8. '(' → logprob: -10.28701114654541
    9. '=' → logprob: -11.03701114654541
    10. ' ' → logprob: -11.16201114654541

Token 1173: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3469957113265991
    2. '       ' → logprob: -1.4719957113265991
    3. ':
' → logprob: -2.8469958305358887
    4. 'n' → logprob: -6.096995830535889
    5. '   ' → logprob: -6.096995830535889
    6. ' n' → logprob: -8.09699535369873
    7. ' :' → logprob: -8.34699535369873
    8. ':n' → logprob: -8.59699535369873
    9. ' =' → logprob: -9.47199535369873
    10. '=' → logprob: -9.84699535369873

Token 1174: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4961744248867035
    2. 'd' → logprob: -1.2461744546890259
    3. '0' → logprob: -2.6211743354797363
    4. '10' → logprob: -4.496174335479736
    5. 'A' → logprob: -4.871174335479736
    6. 'L' → logprob: -5.996174335479736
    7. '(' → logprob: -6.121174335479736
    8. ' n' → logprob: -6.496174335479736
    9. '   ' → logprob: -6.621174335479736
    10. 'ret' → logprob: -6.996174335479736

Token 1175: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4275943338871002
    2. 'd' → logprob: -1.6775943040847778
    3. '0' → logprob: -2.0525944232940674
    4. '10' → logprob: -4.677594184875488
    5. 'A' → logprob: -4.927594184875488
    6. '1' → logprob: -5.427594184875488
    7. '(' → logprob: -5.427594184875488
    8. 'L' → logprob: -5.677594184875488
    9. '(n' → logprob: -7.052594184875488
    10. '-' → logprob: -7.052594184875488

Token 1176: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0831900835037231
    2. '<n' → logprob: -1.4581900835037231
    3. '<' → logprob: -2.2081899642944336
    4. ':' → logprob: -2.4581899642944336
    5. ' <=' → logprob: -2.7081899642944336
    6. ' ==' → logprob: -3.2081899642944336
    7. '<=' → logprob: -3.3331899642944336
    8. '==' → logprob: -3.5831899642944336
    9. '   ' → logprob: -3.8331899642944336
    10. '>' → logprob: -4.333189964294434

Token 1177: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11005745828151703
    2. 'd' → logprob: -2.3600573539733887
    3. '=' → logprob: -5.235057353973389
    4. ' n' → logprob: -6.485057353973389
    5. 'L' → logprob: -6.610057353973389
    6. '10' → logprob: -7.360057353973389
    7. '1' → logprob: -7.610057353973389
    8. ' d' → logprob: -8.735057830810547
    9. '=n' → logprob: -9.360057830810547
    10. 'mat' → logprob: -10.235057830810547

Token 1178: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7993600964546204
    2. ' <' → logprob: -1.7993600368499756
    3. '<' → logprob: -2.2993600368499756
    4. '<n' → logprob: -2.4243600368499756
    5. ':' → logprob: -3.0493600368499756
    6. '1' → logprob: -3.4243600368499756
    7. 'n' → logprob: -3.5493600368499756
    8. '   ' → logprob: -3.6743600368499756
    9. 'd' → logprob: -4.049360275268555
    10. '<=' → logprob: -4.799360275268555

Token 1179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06346852332353592
    2. ':
' → logprob: -2.8134684562683105
    3. '   ' → logprob: -7.6884684562683105
    4. '       ' → logprob: -7.6884684562683105
    5. '=' → logprob: -8.813468933105469
    6. ' and' → logprob: -8.938468933105469
    7. '==' → logprob: -9.313468933105469
    8. ' :' → logprob: -9.938468933105469
    9. ':
' → logprob: -10.313468933105469
    10. 'and' → logprob: -10.563468933105469

Token 1180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025410223752260208
    2. 'n' → logprob: -3.7754101753234863
    3. ' n' → logprob: -6.275410175323486
    4. '   ' → logprob: -8.525410652160645
    5. ':' → logprob: -9.775410652160645
    6. '```' → logprob: -11.525410652160645
    7. '	n' → logprob: -12.650410652160645
    8. '	' → logprob: -12.650410652160645
    9. ':
' → logprob: -13.275410652160645
    10. '           ' → logprob: -13.400410652160645

Token 1181: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.580116331577301
    2. '       ' → logprob: -0.830116331577301
    3. ' n' → logprob: -5.705116271972656
    4. '   ' → logprob: -7.455116271972656
    5. '           ' → logprob: -8.330116271972656
    6. '               ' → logprob: -12.330116271972656
    7. '```' → logprob: -12.580116271972656
    8. '      ' → logprob: -12.705116271972656
    9. '	n' → logprob: -13.080116271972656
    10. '     ' → logprob: -13.205116271972656

Token 1182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.625000953674316
    3. 'n' → logprob: -16.875
    4. '=' → logprob: -17.0
    5. '۰' → logprob: -17.125
    6. '_' → logprob: -17.25
    7. '０' → logprob: -18.0
    8. 'o' → logprob: -18.0
    9. '[' → logprob: -18.625
    10. '+=' → logprob: -19.625

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008079635445028543
    2. ' =' → logprob: -7.125807762145996
    3. '+=' → logprob: -12.625807762145996
    4. '＝' → logprob: -17.000808715820312
    5. '=n' → logprob: -17.000808715820312
    6. '.=' → logprob: -17.125808715820312
    7. '=}' → logprob: -18.000808715820312
    8. ',' → logprob: -18.125808715820312
    9. '=
' → logprob: -18.125808715820312
    10. ' +=' → logprob: -18.125808715820312

Token 1184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.47757811343763e-05
    2. '1' → logprob: -10.375044822692871
    3. 'n' → logprob: -11.750044822692871
    4. ' ' → logprob: -12.250044822692871
    5. '   ' → logprob: -15.437544822692871
    6. 'min' → logprob: -15.500044822692871
    7. 'max' → logprob: -16.000043869018555
    8. '#' → logprob: -17.562543869018555
    9. '۰' → logprob: -17.625043869018555
    10. '10' → logprob: -18.062543869018555

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5358694731257856e-05
    2. '1' → logprob: -10.375035285949707
    3. ' ' → logprob: -13.000035285949707
    4. 'n' → logprob: -13.375035285949707
    5. '   ' → logprob: -16.250036239624023
    6. 'min' → logprob: -17.562536239624023
    7. '=' → logprob: -18.312536239624023
    8. 'max' → logprob: -18.500036239624023
    9. '۰' → logprob: -18.562536239624023
    10. '[' → logprob: -18.562536239624023

Token 1186: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03605806455016136
    2. '<|end|>' → logprob: -3.411057949066162
    3. '       ' → logprob: -7.536057949066162
    4. ')' → logprob: -7.661057949066162
    5. '    
' → logprob: -8.28605842590332
    6. '
' → logprob: -8.66105842590332
    7. '.' → logprob: -8.78605842590332
    8. 'elif' → logprob: -9.03605842590332
    9. '<|end|>' → logprob: -9.16105842590332
    10. '    ' → logprob: -9.28605842590332

Token 1187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14020387828350067
    2. 'if' → logprob: -2.7652039527893066
    3. 'for' → logprob: -3.5152039527893066
    4. 'n' → logprob: -3.6402039527893066
    5. 'while' → logprob: -4.765203952789307
    6. '```' → logprob: -6.265203952789307
    7. ' for' → logprob: -7.890203952789307
    8. ' if' → logprob: -8.140203475952148
    9. 'count' → logprob: -8.390203475952148
    10. 'steps' → logprob: -9.140203475952148

Token 1188: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6371703743934631
    2. 'if' → logprob: -1.0121703147888184
    3. 'n' → logprob: -3.0121703147888184
    4. 'while' → logprob: -3.6371703147888184
    5. 'count' → logprob: -4.387170314788818
    6. 'for' → logprob: -4.387170314788818
    7. ' if' → logprob: -6.137170314788818
    8. 'steps' → logprob: -6.262170314788818
    9. 'cnt' → logprob: -7.012170314788818
    10. '#' (adapté à ' #') → logprob: -8.387170791625977

Token 1189: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25916358828544617
    2. 'n' → logprob: -2.1341636180877686
    3. 'count' → logprob: -3.5091636180877686
    4. 'cnt' → logprob: -4.1341633796691895
    5. 'length' → logprob: -4.2591633796691895
    6. 'steps' → logprob: -4.3841633796691895
    7. 'm' → logprob: -5.0091633796691895
    8. 'while' → logprob: -5.0091633796691895
    9. 'step' → logprob: -5.3841633796691895
    10. 'end' → logprob: -5.3841633796691895

Token 1190: ' travaille' (ID: 92596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03266364336013794
    2. '   ' → logprob: -4.407663822174072
    3. '=' → logprob: -4.907663822174072
    4. '#' → logprob: -5.032663822174072
    5. ' if' → logprob: -6.032663822174072
    6. 'n' → logprob: -6.407663822174072
    7. 'continue' → logprob: -7.657663822174072
    8. 'for' → logprob: -8.032663345336914
    9. 'while' → logprob: -8.157663345336914
    10. '+=' → logprob: -8.282663345336914

Token 1191: ' uniquement' (ID: 65527)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8578788638114929
    2. '   ' → logprob: -0.9828788638114929
    3. ' if' → logprob: -2.1078789234161377
    4. '       ' → logprob: -2.6078789234161377
    5. '           ' → logprob: -6.482878684997559
    6. 'n' → logprob: -7.482878684997559
    7. '	if' → logprob: -7.607878684997559
    8. ' +=' → logprob: -7.732878684997559
    9. 'while' → logprob: -7.857878684997559
    10. ',' → logprob: -8.107878684997559

Token 1192: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4476891756057739
    2. ' if' → logprob: -1.072689175605774
    3. '   ' → logprob: -4.072689056396484
    4. 'n' → logprob: -6.697689056396484
    5. ',' → logprob: -8.697689056396484
    6. 'with' → logprob: -9.572689056396484
    7. ' n' → logprob: -9.697689056396484
    8. 'd' → logprob: -10.447689056396484
    9. 'while' → logprob: -10.822689056396484
    10. 'in' → logprob: -10.822689056396484

Token 1193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014296402223408222
    2. ' n' → logprob: -7.001429557800293
    3. '0' → logprob: -7.751429557800293
    4. '   ' → logprob: -9.626429557800293
    5. 'd' → logprob: -11.376429557800293
    6. ' ' → logprob: -12.251429557800293
    7. 'not' → logprob: -12.876429557800293
    8. '(n' → logprob: -14.001429557800293
    9. '	n' → logprob: -14.001429557800293
    10. '  ' → logprob: -14.751429557800293

Token 1194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1497916877269745
    2. '1' → logprob: -2.024791717529297
    3. '<' → logprob: -6.024791717529297
    4. '<n' → logprob: -6.024791717529297
    5. '<=' → logprob: -7.149791717529297
    6. ' <' → logprob: -7.399791717529297
    7. '>=' → logprob: -8.524791717529297
    8. '>' → logprob: -8.649791717529297
    9. ' <=' → logprob: -8.899791717529297
    10. 'n' → logprob: -9.149791717529297

Token 1195: ' valide' (ID: 137323)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5766676068305969
    2. ' <=' → logprob: -1.0766675472259521
    3. '<' → logprob: -2.951667547225952
    4. '<=' → logprob: -3.201667547225952
    5. '<n' → logprob: -5.576667785644531
    6. '<len' → logprob: -7.701667785644531
    7. '   ' → logprob: -9.201667785644531
    8. ' !=' → logprob: -10.201667785644531
    9. ' >=' → logprob: -10.576667785644531
    10. '<size' → logprob: -10.951667785644531

Token 1196: ' :' (ID: 712)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.30801647901535034
    2. ' <=' → logprob: -1.5580165386199951
    3. '   ' → logprob: -3.683016538619995
    4. '<' → logprob: -4.058016300201416
    5. '<=' → logprob: -5.183016300201416
    6. 'and' → logprob: -6.183016300201416
    7. '<n' → logprob: -6.308016300201416
    8. ' and' → logprob: -6.308016300201416
    9. ' >=' → logprob: -8.558016777038574
    10. '<len' → logprob: -9.058016777038574

Token 1197: ' au' (ID: 2791)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1503974050283432
    2. 'n' → logprob: -2.275397300720215
    3. '   ' → logprob: -3.525397300720215
    4. ' if' → logprob: -5.025397300720215
    5. ' n' → logprob: -7.150397300720215
    6. '       ' → logprob: -9.900397300720215
    7. '```' → logprob: -11.275397300720215
    8. 'while' → logprob: -11.775397300720215
    9. 'for' → logprob: -12.525397300720215
    10. '    ' → logprob: -12.650397300720215

Token 1198: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.5376085638999939
    2. 'n' → logprob: -1.5376086235046387
    3. 'if' → logprob: -1.9126086235046387
    4. ' moins' → logprob: -3.5376086235046387
    5. 'inf' → logprob: -5.662608623504639
    6. 'mo' → logprob: -5.662608623504639
    7. '<=' → logprob: -5.912608623504639
    8. 'le' → logprob: -6.162608623504639
    9. 'elif' → logprob: -6.287608623504639
    10. '<' → logprob: -6.287608623504639

Token 1199: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10876055061817169
    2. '0' → logprob: -2.6087605953216553
    3. '<' → logprob: -4.358760356903076
    4. '<=' → logprob: -4.608760356903076
    5. '<n' → logprob: -5.233760356903076
    6. '```' → logprob: -7.233760356903076
    7. '   ' → logprob: -8.233760833740234
    8. ' n' → logprob: -8.608760833740234
    9. '1' → logprob: -10.483760833740234
    10. 'le' → logprob: -10.483760833740234

Token 1200: '0' (ID: 15)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9826303124427795
    2. '<' → logprob: -1.1076302528381348
    3. '0' → logprob: -1.3576302528381348
    4. ' <=' → logprob: -3.8576302528381348
    5. ' <' → logprob: -4.607630252838135
    6. '>' → logprob: -5.857630252838135
    7. '<n' → logprob: -6.857630252838135
    8. '```' → logprob: -6.857630252838135
    9. '>=' → logprob: -7.857630252838135
    10. '1' → logprob: -7.982630252838135

Token 1201: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.917549729347229
    2. ' <' → logprob: -0.917549729347229
    3. ' <=' → logprob: -2.0425496101379395
    4. '<=' → logprob: -2.6675496101379395
    5. '<n' → logprob: -6.4175496101379395
    6. '<len' → logprob: -9.292550086975098
    7. '>' → logprob: -10.417550086975098
    8. '<num' → logprob: -11.042550086975098
    9. ' !=' → logprob: -11.292550086975098
    10. '!=' → logprob: -11.292550086975098

Token 1202: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00034893216798081994
    2. '=' → logprob: -8.500349044799805
    3. ' n' → logprob: -9.000349044799805
    4. '10' → logprob: -11.250349044799805
    5. '=n' → logprob: -12.500349044799805
    6. 'L' → logprob: -14.250349044799805
    7. 'N' → logprob: -14.375349044799805
    8. ' =' → logprob: -14.500349044799805
    9. '1' → logprob: -14.750349044799805
    10. '   ' → logprob: -14.875349044799805

Token 1203: '1' (ID: 16)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.754988968372345
    2. ' and' → logprob: -1.7549889087677002
    3. ' <' → logprob: -2.2549889087677
    4. '<L' → logprob: -2.6299889087677
    5. '<' → logprob: -3.2549889087677
    6. '0' → logprob: -3.7549889087677
    7. '<=' → logprob: -3.7549889087677
    8. 'and' → logprob: -3.8799889087677
    9. '<n' → logprob: -3.8799889087677
    10. ' <=' → logprob: -4.254989147186279

Token 1204: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11180062592029572
    2. ' and' → logprob: -2.6118006706237793
    3. 'and' → logprob: -3.4868006706237793
    4. ':' → logprob: -7.236800670623779
    5. 'if' → logprob: -7.611800670623779
    6. '       ' → logprob: -8.111800193786621
    7. ' if' → logprob: -8.986800193786621
    8. '    ' → logprob: -10.486800193786621
    9. '<|end|>' → logprob: -10.486800193786621
    10. '  ' → logprob: -11.236800193786621

Token 1205: 'don' (ID: 22130)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1709524542093277
    2. ' and' → logprob: -1.9209524393081665
    3. '   ' → logprob: -5.545952320098877
    4. '<n' → logprob: -6.170952320098877
    5. 'if' → logprob: -6.295952320098877
    6. 'n' → logprob: -6.420952320098877
    7. '<' → logprob: -7.420952320098877
    8. ':' → logprob: -8.420952796936035
    9. '<=' → logprob: -8.795952796936035
    10. ' n' → logprob: -9.670952796936035

Token 1206: 'c' (ID: 66)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3927807807922363
    2. '```' → logprob: -1.8927807807922363
    3. ')' → logprob: -2.0177807807922363
    4. '0' → logprob: -2.1427807807922363
    5. 'f' → logprob: -2.6427807807922363
    6. 'e' → logprob: -3.0177807807922363
    7. 'and' → logprob: -3.1427807807922363
    8. 'o' → logprob: -3.3927807807922363
    9. 'n' → logprob: -3.3927807807922363
    10. 'x' → logprob: -4.517780780792236

Token 1207: ' il' (ID: 1793)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020575523376464844
    2. ' n' → logprob: -3.895575523376465
    3. '```' → logprob: -11.270575523376465
    4. 'd' → logprob: -11.395575523376465
    5. '   ' → logprob: -11.895575523376465
    6. ')n' → logprob: -14.145575523376465
    7. '(n' → logprob: -14.770575523376465
    8. ')' → logprob: -14.895575523376465
    9. '	n' → logprob: -15.270575523376465
    10. ' d' → logprob: -15.395575523376465

Token 1208: ' y' (ID: 342)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008354047313332558
    2. ' <' → logprob: -4.883354187011719
    3. '<n' → logprob: -7.508354187011719
    4. '   ' → logprob: -10.008354187011719
    5. '<=' → logprob: -10.133354187011719
    6. '<len' → logprob: -10.633354187011719
    7. '>' → logprob: -10.758354187011719
    8. '!=' → logprob: -11.008354187011719
    9. '>=' → logprob: -11.633354187011719
    10. '<
' → logprob: -11.758354187011719

Token 1209: ' a' (ID: 261)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.004538350272923708
    2. ' <' → logprob: -5.754538536071777
    3. '<n' → logprob: -7.879538536071777
    4. '<=' → logprob: -8.379538536071777
    5. ')' → logprob: -8.629538536071777
    6. '<
' → logprob: -8.879538536071777
    7. '   ' → logprob: -9.254538536071777
    8. '!=' → logprob: -9.254538536071777
    9. '>' → logprob: -9.754538536071777
    10. '<len' → logprob: -10.004538536071777

Token 1210: ' quelque' (ID: 36359)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.9762328267097473
    2. 'un' → logprob: -1.9762327671051025
    3. 'des' → logprob: -2.1012327671051025
    4. 'une' → logprob: -2.3512327671051025
    5. 'au' → logprob: -2.9762327671051025
    6. ' une' → logprob: -3.6012327671051025
    7. '   ' → logprob: -3.6012327671051025
    8. 'n' → logprob: -3.6012327671051025
    9. ' quelque' → logprob: -3.7262327671051025
    10. ' des' → logprob: -3.8512327671051025

Token 1211: ' chose' (ID: 15505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21258097887039185
    2. '   ' → logprob: -2.587580919265747
    3. '```' → logprob: -3.087580919265747
    4. 'n' → logprob: -4.337581157684326
    5. 'd' → logprob: -4.462581157684326
    6. ' if' → logprob: -4.712581157684326
    7. '>' → logprob: -4.962581157684326
    8. ':' → logprob: -5.087581157684326
    9. '.' → logprob: -5.587581157684326
    10. ')' → logprob: -5.962581157684326

Token 1212: ' à' (ID: 1221)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.15176264941692352
    2. '<=' → logprob: -2.6517627239227295
    3. ' <' → logprob: -3.2767627239227295
    4. '   ' → logprob: -3.7767627239227295
    5. '<n' → logprob: -5.65176248550415
    6. ' <=' → logprob: -5.65176248550415
    7. '       ' → logprob: -6.77676248550415
    8. '```' → logprob: -8.151762962341309
    9. '<len' → logprob: -8.401762962341309
    10. '<s' → logprob: -8.651762962341309

Token 1213: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.019981155171990395
    2. 'range' → logprob: -4.644981384277344
    3. 'for' → logprob: -5.394981384277344
    4. 'process' → logprob: -6.144981384277344
    5. ' faire' → logprob: -7.019981384277344
    6. 'calcul' → logprob: -7.269981384277344
    7. '
' → logprob: -7.519981384277344
    8. 'trait' → logprob: -7.644981384277344
    9. 'fait' → logprob: -8.894981384277344
    10. ' traiter' → logprob: -9.144981384277344

Token 1214: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9703506231307983
    2. ' and' → logprob: -0.9703506231307983
    3. '       ' → logprob: -1.7203506231307983
    4. 'and' → logprob: -3.095350742340088
    5. ':' → logprob: -4.470350742340088
    6. ')' → logprob: -5.345350742340088
    7. '):' → logprob: -7.470350742340088
    8. ',' → logprob: -8.09535026550293
    9. '```' → logprob: -9.09535026550293
    10. ':
' → logprob: -9.22035026550293

Token 1215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010053006699308753
    2. '       ' → logprob: -7.501005172729492
    3. 'if' → logprob: -7.751005172729492
    4. '```' → logprob: -11.626005172729492
    5. ' if' → logprob: -11.876005172729492
    6. 'while' → logprob: -13.126005172729492
    7. '   ' → logprob: -13.126005172729492
    8. '	if' → logprob: -14.751005172729492
    9. 'and' → logprob: -15.126005172729492
    10. '    ' → logprob: -15.251005172729492

Token 1216: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11754355579614639
    2. 'if' (adapté à ' if') → logprob: -2.2425434589385986
    3. '       ' → logprob: -6.117543697357178
    4. ' if' → logprob: -6.242543697357178
    5. '```' → logprob: -7.742543697357178
    6. 'while' → logprob: -9.24254322052002
    7. '   ' → logprob: -11.36754322052002
    8. '	if' → logprob: -11.74254322052002
    9. ' while' → logprob: -13.24254322052002
    10. '
' → logprob: -13.24254322052002

Token 1217: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6339946389198303
    2. 'n' → logprob: -0.7589946389198303
    3. '   ' → logprob: -6.6339945793151855
    4. '    ' → logprob: -10.008995056152344
    5. '	n' → logprob: -11.008995056152344
    6. ' ' → logprob: -11.633995056152344
    7. '  ' → logprob: -12.508995056152344
    8. ' ' → logprob: -13.258995056152344
    9. '0' → logprob: -13.383995056152344
    10. '(n' → logprob: -14.383995056152344

Token 1218: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002986392646562308
    2. ' n' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.750298500061035
    4. '	n' → logprob: -15.000298500061035
    5. '<n' → logprob: -15.125298500061035
    6. ' ' → logprob: -15.500298500061035
    7. '(n' → logprob: -15.750298500061035
    8. '0' → logprob: -16.12529945373535
    9. 'd' → logprob: -16.25029945373535
    10. '  ' → logprob: -16.50029945373535

Token 1219: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2682807743549347
    2. ' <' → logprob: -1.5182807445526123
    3. '<n' → logprob: -4.143280982971191
    4. '   ' → logprob: -8.393280982971191
    5. '<len' → logprob: -10.268280982971191
    6. '<=' → logprob: -10.768280982971191
    7. ' ' → logprob: -11.393280982971191
    8. '<N' → logprob: -11.643280982971191
    9. ' <=' → logprob: -11.768280982971191
    10. '<size' → logprob: -11.893280982971191

Token 1220: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006373812211677432
    2. ' n' → logprob: -7.375637531280518
    3. '   ' → logprob: -11.50063705444336
    4. 'd' → logprob: -14.75063705444336
    5. '	n' → logprob: -15.87563705444336
    6. '    ' → logprob: -16.00063705444336
    7. '       ' → logprob: -16.87563705444336
    8. ' ' → logprob: -17.50063705444336
    9. '     ' → logprob: -17.50063705444336
    10. '  ' → logprob: -17.50063705444336

Token 1221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009753053891472518
    2. 'n' → logprob: -7.125975131988525
    3. '_' → logprob: -10.125975608825684
    4. '   ' → logprob: -10.500975608825684
    5. '1' → logprob: -10.875975608825684
    6. '<' → logprob: -11.000975608825684
    7. 'd' → logprob: -11.125975608825684
    8. '<n' → logprob: -11.125975608825684
    9. '_n' → logprob: -11.250975608825684
    10. ' <' → logprob: -12.500975608825684

Token 1222: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03092964179813862
    2. ' <' → logprob: -3.5309295654296875
    3. 'and' → logprob: -7.6559295654296875
    4. ' and' → logprob: -7.9059295654296875
    5. '<n' → logprob: -8.030929565429688
    6. '   ' → logprob: -12.655929565429688
    7. '<len' → logprob: -12.780929565429688
    8. '<int' → logprob: -13.780929565429688
    9. '<
' → logprob: -14.030929565429688
    10. '<s' → logprob: -14.530929565429688

Token 1223: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.375
    3. 'd' → logprob: -19.125
    4. '   ' → logprob: -19.25
    5. '#' → logprob: -19.375
    6. '	n' → logprob: -19.5
    7. 'L' → logprob: -19.625
    8. '=' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. '=n' → logprob: -20.0

Token 1224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010684162843972445
    2. '_' → logprob: -6.876068592071533
    3. '   ' → logprob: -11.251068115234375
    4. 'n' → logprob: -11.751068115234375
    5. '_n' → logprob: -13.001068115234375
    6. '0' → logprob: -13.376068115234375
    7. 'd' → logprob: -13.501068115234375
    8. '{' → logprob: -13.626068115234375
    9. ' ' → logprob: -13.751068115234375
    10. '       ' → logprob: -14.001068115234375

Token 1225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3163565993309021
    2. ':
' → logprob: -1.3163566589355469
    3. '       ' → logprob: -5.941356658935547
    4. '   ' → logprob: -8.191356658935547
    5. ' and' → logprob: -9.191356658935547
    6. ':
' → logprob: -10.441356658935547
    7. ' :' → logprob: -10.941356658935547
    8. ' :
' → logprob: -11.316356658935547
    9. ':

' → logprob: -11.941356658935547
    10. '):
' → logprob: -12.191356658935547

Token 1226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009517176658846438
    2. 'mat' → logprob: -8.000951766967773
    3. 'n' → logprob: -8.250951766967773
    4. 'pow' → logprob: -8.875951766967773
    5. '   ' → logprob: -9.500951766967773
    6. '```' → logprob: -10.000951766967773
    7. 'count' → logprob: -10.750951766967773
    8. 'steps' → logprob: -11.000951766967773
    9. 'ret' → logprob: -11.500951766967773
    10. 'power' → logprob: -12.000951766967773

Token 1227: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7615588307380676
    2. 'pow' → logprob: -1.8865587711334229
    3. 'steps' → logprob: -1.8865587711334229
    4. 'cnt' → logprob: -3.511558771133423
    5. 'p' → logprob: -3.761558771133423
    6. 'ret' → logprob: -4.011559009552002
    7. 'exp' → logprob: -4.136559009552002
    8. 't' → logprob: -4.136559009552002
    9. 'count' → logprob: -4.386559009552002
    10. 'mat' → logprob: -4.386559009552002

Token 1228: ' On' (ID: 2160)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6854655146598816
    2. 'mat' → logprob: -2.1854655742645264
    3. 'p' → logprob: -2.4354655742645264
    4. 'power' → logprob: -2.5604655742645264
    5. 'ret' → logprob: -2.9354655742645264
    6. 'exp' → logprob: -3.0604655742645264
    7. 'cnt' → logprob: -3.8104655742645264
    8. 't' → logprob: -3.9354655742645264
    9. 'steps' → logprob: -3.9354655742645264
    10. '   ' → logprob: -4.810465335845947

Token 1229: ' applique' (ID: 180579)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9815824627876282
    2. '=' → logprob: -1.1065824031829834
    3. 'mat' → logprob: -1.7315824031829834
    4. 'ret' → logprob: -3.2315824031829834
    5. 'n' → logprob: -3.3565824031829834
    6. 'res' → logprob: -4.6065826416015625
    7. '#' → logprob: -4.9815826416015625
    8. 'p' → logprob: -5.4815826416015625
    9. 't' → logprob: -5.6065826416015625
    10. 'temp' → logprob: -6.1065826416015625

Token 1230: ' (' (ID: 350)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.09467001259326935
    2. 'pow' → logprob: -2.844670057296753
    3. 'ret' → logprob: -3.594670057296753
    4. 'exp' → logprob: -6.844669818878174
    5. 'power' → logprob: -7.219669818878174
    6. ' mat' → logprob: -7.219669818878174
    7. '   ' → logprob: -7.594669818878174
    8. 'res' → logprob: -7.719669818878174
    9. 't' → logprob: -8.969670295715332
    10. 'p' → logprob: -8.969670295715332

Token 1231: 'n' (ID: 77)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -4.668304245569743e-05
    2. 'ret' → logprob: -10.250046730041504
    3. '   ' → logprob: -12.250046730041504
    4. ' mat' → logprob: -12.250046730041504
    5. '	mat' → logprob: -15.000046730041504
    6. 'n' → logprob: -15.125046730041504
    7. '(mat' → logprob: -15.250046730041504
    8. '       ' → logprob: -15.375046730041504
    9. '
' → logprob: -15.750046730041504
    10. '           ' → logprob: -16.250045776367188

Token 1232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. 'n' → logprob: -14.00000286102295
    3. '0' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.75000286102295
    5. '
' → logprob: -15.50000286102295
    6. ')' → logprob: -16.000001907348633
    7. '_' → logprob: -17.062501907348633
    8. '```' → logprob: -17.062501907348633
    9. '       ' → logprob: -17.125001907348633
    10. ' -' → logprob: -17.125001907348633

Token 1233: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6967088580131531
    2. ' -' → logprob: -0.6967088580131531
    3. '-n' → logprob: -5.696708679199219
    4. '-
' → logprob: -9.571708679199219
    5. '   ' → logprob: -10.196708679199219
    6. ')' → logprob: -10.446708679199219
    7. 'n' → logprob: -11.321708679199219
    8. ' ' → logprob: -11.571708679199219
    9. ' -
' → logprob: -11.696708679199219
    10. '-m' → logprob: -11.946708679199219

Token 1234: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011629798245849088
    2. '1' → logprob: -9.125116348266602
    3. ')' → logprob: -12.875116348266602
    4. ' n' → logprob: -12.875116348266602
    5. ')n' → logprob: -13.750116348266602
    6. '   ' → logprob: -14.125116348266602
    7. '	n' → logprob: -15.625116348266602
    8. '```' → logprob: -16.7501163482666
    9. '_n' → logprob: -17.3751163482666
    10. '       ' → logprob: -17.7501163482666

Token 1235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1605280488729477
    2. 'n' → logprob: -1.9105280637741089
    3. ' n' → logprob: -8.160528182983398
    4. ')' → logprob: -12.410528182983398
    5. 'н' → logprob: -13.035528182983398
    6. ')n' → logprob: -13.035528182983398
    7. '   ' → logprob: -13.660528182983398
    8. '(n' → logprob: -14.160528182983398
    9. 'o' → logprob: -14.285528182983398
    10. '[' → logprob: -14.285528182983398

Token 1236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01239733211696148
    2. ' -' → logprob: -5.762397289276123
    3. '-' → logprob: -6.137397289276123
    4. '),' → logprob: -6.512397289276123
    5. ')-' → logprob: -6.512397289276123
    6. ')n' → logprob: -7.012397289276123
    7. ',' → logprob: -7.137397289276123
    8. ' )' → logprob: -7.262397289276123
    9. ')
' → logprob: -8.012397766113281
    10. '
' → logprob: -8.637397766113281

Token 1237: ' fois' (ID: 14697)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9330928325653076
    2. 'mat' → logprob: -1.9330928325653076
    3. '       ' → logprob: -2.4330928325653076
    4. ')' → logprob: -2.5580928325653076
    5. ',' → logprob: -2.5580928325653076
    6. ' =' → logprob: -2.6830928325653076
    7. '=' → logprob: -3.0580928325653076
    8. '_pow' → logprob: -3.1830928325653076
    9. '_mat' → logprob: -4.433093070983887
    10. ' mat' → logprob: -5.058093070983887

Token 1238: ' la' (ID: 557)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.060416921973228455
    2. '       ' → logprob: -3.1854169368743896
    3. ' mat' → logprob: -4.3104166984558105
    4. 'pow' → logprob: -6.4354166984558105
    5. 'ret' → logprob: -7.3104166984558105
    6. '   ' → logprob: -7.6854166984558105
    7. '           ' → logprob: -7.9354166984558105
    8. '(mat' → logprob: -8.685417175292969
    9. 'la' → logprob: -9.560417175292969
    10. 'result' → logprob: -9.685417175292969

Token 1239: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0002712297427933663
    2. ' mat' → logprob: -8.25027084350586
    3. '(mat' → logprob: -12.12527084350586
    4. '	mat' → logprob: -13.25027084350586
    5. 'pow' → logprob: -14.75027084350586
    6. 'def' → logprob: -14.87527084350586
    7. '   ' → logprob: -15.00027084350586
    8. '
' → logprob: -15.50027084350586
    9. 'matrix' → logprob: -15.75027084350586
    10. '```' → logprob: -15.87527084350586

Token 1240: 'ice' (ID: 603)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.4110971689224243
    2. 'ice' → logprob: -1.5360971689224243
    3. 'mat' → logprob: -2.9110970497131348
    4. '_pow' → logprob: -3.9110970497131348
    5. '_mul' → logprob: -4.286097049713135
    6. '_mat' → logprob: -4.911097049713135
    7. 'pow' → logprob: -4.911097049713135
    8. 'ic' → logprob: -5.161097049713135
    9. '(mat' → logprob: -5.411097049713135
    10. 'mul' → logprob: -6.036097049713135

Token 1241: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.5365378260612488
    2. 'pow' → logprob: -1.1615378856658936
    3. ' mat' → logprob: -3.4115378856658936
    4. '_pow' → logprob: -3.6615378856658936
    5. '(mat' → logprob: -3.7865378856658936
    6. '       ' → logprob: -4.9115376472473145
    7. '   ' → logprob: -6.1615376472473145
    8. 'mul' → logprob: -6.1615376472473145
    9. ' =' → logprob: -6.4115376472473145
    10. '_mat' → logprob: -6.5365376472473145

Token 1242: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.793328583240509
    2. ' =' → logprob: -1.7933285236358643
    3. 'pow' → logprob: -2.0433285236358643
    4. '_pow' → logprob: -2.0433285236358643
    5. '=' → logprob: -2.7933285236358643
    6. 'mat' → logprob: -4.043328762054443
    7. ',' → logprob: -4.293328762054443
    8. '           ' → logprob: -4.918328762054443
    9. '**' → logprob: -5.168328762054443
    10. '(pow' → logprob: -5.918328762054443

Token 1243: ' l' (ID: 305)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -3.054500666621607e-06
    2. ' ret' → logprob: -13.50000286102295
    3. 'mat' → logprob: -14.25000286102295
    4. '(ret' → logprob: -14.25000286102295
    5. '
' → logprob: -15.87500286102295
    6. '$ret' → logprob: -16.875003814697266
    7. '	ret' → logprob: -17.000003814697266
    8. '```' → logprob: -18.125003814697266
    9. 'la' → logprob: -18.250003814697266
    10. '#' → logprob: -18.750003814697266

Token 1244: ''état' (ID: 116357)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -2.618001053633634e-05
    2. 'mat' → logprob: -10.750025749206543
    3. ' ret' → logprob: -13.750025749206543
    4. '	ret' → logprob: -14.375025749206543
    5. 'result' → logprob: -14.625025749206543
    6. '$ret' → logprob: -14.625025749206543
    7. '   ' → logprob: -14.875025749206543
    8. 'reten' → logprob: -15.250025749206543
    9. '_ret' → logprob: -15.500025749206543
    10. 'retval' → logprob: -15.625025749206543

Token 1245: ' courant' (ID: 74694)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0033712731674313545
    2. '   ' → logprob: -7.003371238708496
    3. ' =' → logprob: -7.128371238708496
    4. '=' → logprob: -7.378371238708496
    5. ' ret' → logprob: -7.878371238708496
    6. '       ' → logprob: -8.003371238708496
    7. 'res' → logprob: -9.628371238708496
    8. 'result' → logprob: -10.003371238708496
    9. 'mat' → logprob: -10.128371238708496
    10. 'cur' → logprob: -10.503371238708496

Token 1246: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14409656822681427
    2. 'ret' → logprob: -2.019096612930298
    3. ' ret' → logprob: -6.644096374511719
    4. '```' → logprob: -10.394096374511719
    5. '(ret' → logprob: -10.644096374511719
    6. '           ' → logprob: -10.769096374511719
    7. '   ' → logprob: -11.144096374511719
    8. '	ret' → logprob: -12.144096374511719
    9. ',' → logprob: -12.644096374511719
    10. '
' → logprob: -12.769096374511719

Token 1247: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.6405310816480778e-05
    2. ' ret' → logprob: -11.500016212463379
    3. '(ret' → logprob: -13.000016212463379
    4. 'mat' → logprob: -13.250016212463379
    5. '
' → logprob: -13.375016212463379
    6. '   ' → logprob: -15.000016212463379
    7. '	ret' → logprob: -16.250017166137695
    8. '$ret' → logprob: -16.750017166137695
    9. '```' → logprob: -17.500017166137695
    10. '
' → logprob: -17.625017166137695

Token 1248: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8755118250846863
    2. '       ' → logprob: -1.000511884689331
    3. '=' → logprob: -2.250511884689331
    4. '           ' → logprob: -2.250511884689331
    5. 'ret' → logprob: -6.750511646270752
    6. '```' → logprob: -7.125511646270752
    7. ')' → logprob: -7.250511646270752
    8. '               ' → logprob: -7.625511646270752
    9. '   ' → logprob: -8.00051212310791
    10. ',' → logprob: -8.25051212310791

Token 1249: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005039490759372711
    2. 'ret' → logprob: -5.380039691925049
    3. '	' → logprob: -8.25503921508789
    4. '           ' → logprob: -10.13003921508789
    5. '	ret' → logprob: -10.38003921508789
    6. ' ret' → logprob: -10.88003921508789
    7. '   ' → logprob: -11.50503921508789
    8. '        
' → logprob: -11.63003921508789
    9. '```' → logprob: -11.63003921508789
    10. ' =' → logprob: -11.88003921508789

Token 1250: ' accum' (ID: 23148)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.01973550207912922
    2. 'mat' → logprob: -5.144735336303711
    3. 'mettre' → logprob: -5.519735336303711
    4. 'ob' → logprob: -5.894735336303711
    5. 'update' → logprob: -6.394735336303711
    6. '   ' → logprob: -6.519735336303711
    7. 'calcul' → logprob: -6.894735336303711
    8. ' ret' → logprob: -7.269735336303711
    9. 'acc' → logprob: -7.519735336303711
    10. '       ' → logprob: -7.769735336303711

Token 1251: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0005426656571216881
    2. 'érer' → logprob: -8.125542640686035
    3. 'ret' → logprob: -9.125542640686035
    4. 'u' → logprob: -10.375542640686035
    5. 'uer' → logprob: -10.375542640686035
    6. 'er' → logprob: -10.375542640686035
    7. 'uller' → logprob: -11.125542640686035
    8. '   ' → logprob: -12.000542640686035
    9. '(ret' → logprob: -12.750542640686035
    10. '=' → logprob: -12.875542640686035

Token 1252: ' les' (ID: 1341)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.7233163118362427
    2. 'mat' → logprob: -0.7233163118362427
    3. ' mat' → logprob: -4.473316192626953
    4. ' ret' → logprob: -4.723316192626953
    5. '   ' → logprob: -4.848316192626953
    6. '       ' → logprob: -6.973316192626953
    7. 'result' → logprob: -8.973316192626953
    8. 'res' → logprob: -9.223316192626953
    9. '```' → logprob: -9.473316192626953
    10. '(mat' → logprob: -9.598316192626953

Token 1253: ' effets' (ID: 72414)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.029630953446030617
    2. 'result' → logprob: -4.1546311378479
    3. 'mat' → logprob: -4.6546311378479
    4. 'res' → logprob: -5.6546311378479
    5. 'val' → logprob: -8.154630661010742
    6. ' ret' → logprob: -9.404630661010742
    7. 'new' → logprob: -11.279630661010742
    8. 'mul' → logprob: -11.404630661010742
    9. 'rés' → logprob: -11.779630661010742
    10. 'pow' → logprob: -11.904630661010742

Token 1254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031435392796993256
    2. ' =' → logprob: -4.156435489654541
    3. '=' → logprob: -4.281435489654541
    4. '           ' → logprob: -6.781435489654541
    5. 'ret' → logprob: -8.781435012817383
    6. '   ' → logprob: -10.406435012817383
    7. '               ' → logprob: -10.531435012817383
    8. '      ' → logprob: -10.906435012817383
    9. '	' → logprob: -11.156435012817383
    10. '        
' → logprob: -11.281435012817383

Token 1255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004585346207022667
    2. 'ret' → logprob: -5.504585266113281
    3. '	' → logprob: -9.129585266113281
    4. '	ret' → logprob: -9.254585266113281
    5. ' ret' → logprob: -9.504585266113281
    6. '           ' → logprob: -9.629585266113281
    7. '```' → logprob: -9.879585266113281
    8. '   ' → logprob: -10.129585266113281
    9. '        
' → logprob: -10.379585266113281
    10. '(ret' → logprob: -12.004585266113281

Token 1256: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.054712776094675064
    2. 'mat' → logprob: -3.4297127723693848
    3. 'pow' → logprob: -4.429712772369385
    4. 'tmp' → logprob: -5.679712772369385
    5. 'res' → logprob: -6.679712772369385
    6. 'power' → logprob: -7.054712772369385
    7. 'temp' → logprob: -7.429712772369385
    8. '   ' → logprob: -7.429712772369385
    9. 'mul' → logprob: -7.429712772369385
    10. 'powered' → logprob: -7.929712772369385

Token 1257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474078506231308
    2. ' =' → logprob: -0.9740785360336304
    3. '[' → logprob: -14.474078178405762
    4. '   ' → logprob: -14.849078178405762
    5. '       ' → logprob: -15.724078178405762
    6. ' mat' → logprob: -15.974078178405762
    7. '＝' → logprob: -16.349079132080078
    8. ' ' → logprob: -16.474079132080078
    9. '    ' → logprob: -16.599079132080078
    10. 'mat' → logprob: -16.849079132080078

Token 1258: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00016146517009474337
    2. ' mat' → logprob: -9.000161170959473
    3. '[[' → logprob: -10.250161170959473
    4. '[' → logprob: -13.375161170959473
    5. '	mat' → logprob: -15.250161170959473
    6. '[
' → logprob: -15.375161170959473
    7. ' [[' → logprob: -15.625161170959473
    8. '(mat' → logprob: -15.625161170959473
    9. 'mul' → logprob: -16.37516212463379
    10. 'mult' → logprob: -17.00016212463379

Token 1259: '_mul' (ID: 75111)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -2.868328920158092e-05
    2. '_mul' → logprob: -10.500028610229492
    3. '[_' → logprob: -14.500028610229492
    4. 'pow' → logprob: -15.375028610229492
    5. '=_' → logprob: -15.625028610229492
    6. '   ' → logprob: -17.125028610229492
    7. '_mat' → logprob: -17.625028610229492
    8. ''_' → logprob: -17.750028610229492
    9. '*_' → logprob: -18.000028610229492
    10. '```' → logprob: -18.000028610229492

Token 1260: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.011676028370857239
    2. '(ret' → logprob: -4.511675834655762
    3. 'ret' → logprob: -8.136675834655762
    4. 'mat' → logprob: -8.261675834655762
    5. '(' → logprob: -10.011675834655762
    6. '([' → logprob: -10.886675834655762
    7. ' mat' → logprob: -12.386675834655762
    8. '(
' → logprob: -13.261675834655762
    9. '(Mat' → logprob: -13.511675834655762
    10. '	mat' → logprob: -13.636675834655762

Token 1261: '_pow' (ID: 160965)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40315473079681396
    2. '(mat' → logprob: -2.0281548500061035
    3. 'ret' → logprob: -2.6531548500061035
    4. 'mat' → logprob: -2.9031548500061035
    5. '(ret' → logprob: -3.2781548500061035
    6. 'pow' → logprob: -3.6531548500061035
    7. ')' → logprob: -6.0281548500061035
    8. '_pow' → logprob: -6.1531548500061035
    9. '(pow' → logprob: -6.7781548500061035
    10. '[' → logprob: -7.1531548500061035

Token 1262: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -3.225939872208983e-05
    2. 'mat' → logprob: -10.750032424926758
    3. '(' → logprob: -12.375032424926758
    4. '(
' → logprob: -12.500032424926758
    5. '	mat' → logprob: -13.375032424926758
    6. ' mat' → logprob: -14.125032424926758
    7. '(Mat' → logprob: -15.000032424926758
    8. '_mat' → logprob: -17.125032424926758
    9. ' мат' → logprob: -17.250032424926758
    10. '.mat' → logprob: -18.125032424926758

Token 1263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015760881826281548
    2. '(n' → logprob: -5.015760898590088
    3. ',n' → logprob: -5.515760898590088
    4. ' ,' → logprob: -6.265760898590088
    5. ',[' → logprob: -6.265760898590088
    6. ',(' → logprob: -7.640760898590088
    7. '(mat' → logprob: -8.51576042175293
    8. '[n' → logprob: -9.14076042175293
    9. '(ret' → logprob: -9.26576042175293
    10. '[' → logprob: -9.76576042175293

Token 1264: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008044379763305187
    2. '(n' → logprob: -5.008044242858887
    3. ' n' → logprob: -6.633044242858887
    4. ')n' → logprob: -12.258044242858887
    5. ' (' → logprob: -12.883044242858887
    6. '   ' → logprob: -13.008044242858887
    7. '[n' → logprob: -13.508044242858887
    8. '(' → logprob: -14.758044242858887
    9. '
' → logprob: -16.008045196533203
    10. '	n' → logprob: -16.133045196533203

Token 1265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2325226366519928
    2. '(n' → logprob: -1.6075226068496704
    3. 'n' → logprob: -5.482522487640381
    4. '[n' → logprob: -6.107522487640381
    5. '(' → logprob: -7.857522487640381
    6. ')n' → logprob: -9.357522964477539
    7. '[' → logprob: -9.482522964477539
    8. ' n' → logprob: -9.982522964477539
    9. '   ' → logprob: -10.607522964477539
    10. '(
' → logprob: -11.232522964477539

Token 1266: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23566992580890656
    2. ' -' → logprob: -1.6106699705123901
    3. '-n' → logprob: -4.61067008972168
    4. '[' → logprob: -8.73567008972168
    5. '[-' → logprob: -9.73567008972168
    6. '[n' → logprob: -11.61067008972168
    7. ' ' → logprob: -11.98567008972168
    8. ')' → logprob: -12.23567008972168
    9. '-
' → logprob: -12.23567008972168
    10. '   ' → logprob: -12.61067008972168

Token 1267: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3425219549390022e-05
    2. ' n' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.37501335144043
    4. '0' → logprob: -14.25001335144043
    5. ')' → logprob: -14.87501335144043
    6. ')n' → logprob: -15.50001335144043
    7. '1' → logprob: -16.37501335144043
    8. '	n' → logprob: -16.50001335144043
    9. '(n' → logprob: -16.62501335144043
    10. '       ' → logprob: -17.12501335144043

Token 1268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. 'n' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.500001907348633
    5. ')' → logprob: -16.625001907348633
    6. '۰' → logprob: -16.750001907348633
    7. '1' → logprob: -17.000001907348633
    8. '০' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. '_' → logprob: -17.812501907348633

Token 1269: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -5.598092684522271e-05
    2. ')' → logprob: -10.125056266784668
    3. '   ' → logprob: -11.875056266784668
    4. ' ),' → logprob: -12.500056266784668
    5. '       ' → logprob: -13.125056266784668
    6. ',' → logprob: -13.250056266784668
    7. '),
' → logprob: -14.625056266784668
    8. '],' → logprob: -15.625056266784668
    9. ' ' → logprob: -15.750056266784668
    10. '           ' → logprob: -15.875056266784668

Token 1270: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -7.493430894101039e-05
    2. ' ret' → logprob: -9.500075340270996
    3. '(ret' → logprob: -17.62507438659668
    4. '   ' → logprob: -18.12507438659668
    5. '	ret' → logprob: -18.25007438659668
    6. '$ret' → logprob: -20.12507438659668
    7. '
' → logprob: -21.87507438659668
    8. '[' → logprob: -22.12507438659668
    9. '_ret' → logprob: -22.12507438659668
    10. ')' → logprob: -22.37507438659668

Token 1271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03629065304994583
    2. '   ' → logprob: -3.4112906455993652
    3. ')
' → logprob: -6.036290645599365
    4. '<|end|>' → logprob: -8.661291122436523
    5. '[' → logprob: -10.286291122436523
    6. ')

' → logprob: -11.911291122436523
    7. '       ' → logprob: -12.286291122436523
    8. '    
' → logprob: -12.411291122436523
    9. '<|end|>' → logprob: -12.536291122436523
    10. '```' → logprob: -12.911291122436523

Token 1272: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.923613965511322
    2. '   ' → logprob: -1.6736140251159668
    3. 'n' → logprob: -1.7986140251159668
    4. '<|end|>' → logprob: -1.7986140251159668
    5. '\n' → logprob: -2.673614025115967
    6. ' n' → logprob: -5.923614025115967
    7. '  
' → logprob: -6.173614025115967
    8. '	n' → logprob: -6.173614025115967
    9. '    
' → logprob: -6.423614025115967
    10. '[n' → logprob: -6.548614025115967

Token 1273: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3066651225090027
    2. '   ' → logprob: -1.5566651821136475
    3. 'n' → logprob: -3.1816651821136475
    4. '    
' → logprob: -5.806664943695068
    5. '\n' → logprob: -6.181664943695068
    6. '	n' → logprob: -6.306664943695068
    7. '<|end|>' → logprob: -6.556664943695068
    8. '```' → logprob: -7.181664943695068
    9. ' n' → logprob: -7.556664943695068
    10. ' 
' → logprob: -7.556664943695068

Token 1274: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46320751309394836
    2. 'n' → logprob: -1.338207483291626
    3. '
' → logprob: -2.463207483291626
    4. ' n' → logprob: -4.213207721710205
    5. '	n' → logprob: -5.588207721710205
    6. '    
' → logprob: -6.088207721710205
    7. '```' → logprob: -7.088207721710205
    8. ' 
' → logprob: -7.213207721710205
    9. ' ' → logprob: -9.088207244873047
    10. '(n' → logprob: -9.088207244873047

Token 1275: ' dé' (ID: 2393)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10631872713565826
    2. '   ' → logprob: -2.356318712234497
    3. '#' → logprob: -5.481318950653076
    4. ' n' → logprob: -6.481318950653076
    5. '=' → logprob: -8.231318473815918
    6. '    ' → logprob: -10.106318473815918
    7. ' #' → logprob: -10.231318473815918
    8. ' =' → logprob: -10.856318473815918
    9. '       ' → logprob: -11.356318473815918
    10. '  ' → logprob: -12.231318473815918

Token 1276: 'place' (ID: 3243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5162217020988464
    2. 'f' → logprob: -1.5162217617034912
    3. 'fin' → logprob: -2.141221761703491
    4. '   ' → logprob: -3.016221761703491
    5. 'l' → logprob: -4.766221523284912
    6. 'c' → logprob: -6.016221523284912
    7. '#' → logprob: -6.141221523284912
    8. 'fine' → logprob: -6.516221523284912
    9. ' n' → logprob: -7.016221523284912
    10. '    ' → logprob: -8.64122200012207

Token 1277: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002278542669955641
    2. '   ' → logprob: -8.625227928161621
    3. ' n' → logprob: -10.000227928161621
    4. '```' → logprob: -14.125227928161621
    5. '0' → logprob: -14.875227928161621
    6. '
' → logprob: -15.125227928161621
    7. '	n' → logprob: -15.500227928161621
    8. '_n' → logprob: -15.625227928161621
    9. '    ' → logprob: -15.875227928161621
    10. '#' → logprob: -15.875227928161621

Token 1278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013646431034430861
    2. '1' → logprob: -6.626364707946777
    3. 'n' → logprob: -10.251364707946777
    4. 'o' → logprob: -14.001364707946777
    5. '   ' → logprob: -14.251364707946777
    6. ' n' → logprob: -14.751364707946777
    7. '۰' → logprob: -14.876364707946777
    8. '_' → logprob: -15.251364707946777
    9. '```' → logprob: -15.751364707946777
    10. '\xe2\x82' → logprob: -15.876364707946777

Token 1279: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009736846201121807
    2. ' =' → logprob: -5.259737014770508
    3. '+=' → logprob: -5.509737014770508
    4. ' +=' → logprob: -8.134737014770508
    5. '=n' → logprob: -9.009737014770508
    6. ',' → logprob: -11.259737014770508
    7. 'n' → logprob: -11.384737014770508
    8. ' n' → logprob: -13.134737014770508
    9. '=
' → logprob: -13.134737014770508
    10. ' ' → logprob: -14.509737014770508

Token 1280: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00043376852408982813
    2. ' n' → logprob: -7.750433921813965
    3. '   ' → logprob: -13.000433921813965
    4. '
' → logprob: -14.625433921813965
    5. '#' → logprob: -16.50043296813965
    6. '    ' → logprob: -17.12543296813965
    7. '```' → logprob: -17.12543296813965
    8. '	n' → logprob: -17.25043296813965
    9. ' ' → logprob: -17.87543296813965
    10. ',' → logprob: -18.50043296813965

Token 1281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'n' → logprob: -17.125
    3. '0' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. '１' → logprob: -18.125
    6. '۱' → logprob: -18.375
    7. '१' → logprob: -18.875
    8. '#' → logprob: -19.0625
    9. '+=' → logprob: -19.375
    10. '১' → logprob: -19.375

Token 1282: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015759251546114683
    2. '+=' → logprob: -6.626575946807861
    3. ' =' → logprob: -9.126575469970703
    4. ',' → logprob: -9.376575469970703
    5. '=n' → logprob: -11.001575469970703
    6. ' +=' → logprob: -11.251575469970703
    7. 'n' → logprob: -11.626575469970703
    8. '=
' → logprob: -12.001575469970703
    9. ' n' → logprob: -12.251575469970703
    10. 'd' → logprob: -13.251575469970703

Token 1283: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1101769506931305
    2. 'd' → logprob: -2.7351770401000977
    3. ' n' → logprob: -3.6101770401000977
    4. '10' → logprob: -4.735177040100098
    5. ' d' → logprob: -6.485177040100098
    6. 'next' → logprob: -6.735177040100098
    7. '(n' → logprob: -8.610177040100098
    8. '(' → logprob: -8.860177040100098
    9. ' ' → logprob: -9.360177040100098
    10. 'range' → logprob: -9.610177040100098

Token 1284: ' boucle' (ID: 174211)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25918343663215637
    2. 'n' → logprob: -1.509183406829834
    3. 'next' → logprob: -5.384183406829834
    4. ' d' → logprob: -7.259183406829834
    5. 'for' → logprob: -7.634183406829834
    6. ' n' → logprob: -8.134183883666992
    7. '```' → logprob: -8.509183883666992
    8. ' suivante' → logprob: -9.134183883666992
    9. '+' → logprob: -9.509183883666992
    10. '[' → logprob: -9.509183883666992

Token 1285: ' suivante' (ID: 107439)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5838664174079895
    2. 'n' → logprob: -1.8338663578033447
    3. ' n' → logprob: -2.0838663578033447
    4. ',' → logprob: -3.2088663578033447
    5. ' =' → logprob: -3.3338663578033447
    6. ' +=' → logprob: -3.5838663578033447
    7. '+=' → logprob: -3.7088663578033447
    8. '   ' → logprob: -4.333866596221924
    9. 'd' → logprob: -4.583866596221924
    10. '=n' → logprob: -6.708866596221924

Token 1286: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3992287516593933
    2. '=' → logprob: -2.149228811264038
    3. ' n' → logprob: -2.399228811264038
    4. '   ' → logprob: -3.524228811264038
    5. ',' → logprob: -3.649228811264038
    6. '	n' → logprob: -4.149228572845459
    7. ' +=' → logprob: -4.149228572845459
    8. ' =' → logprob: -4.274228572845459
    9. '+=' → logprob: -5.024228572845459
    10. '
' → logprob: -5.649228572845459

Token 1287: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00157127995043993
    2. '   ' → logprob: -6.876571178436279
    3. ' n' → logprob: -7.626571178436279
    4. '
' → logprob: -10.001571655273438
    5. '    ' → logprob: -12.876571655273438
    6. 'd' → logprob: -13.376571655273438
    7. '    
' → logprob: -14.626571655273438
    8. '	n' → logprob: -15.001571655273438
    9. ' ' → logprob: -15.126571655273438
    10. '       ' → logprob: -15.376571655273438

Token 1288: ' "' (ID: 392)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018897335976362228
    2. '+=' → logprob: -6.376889705657959
    3. ' =' → logprob: -9.251890182495117
    4. '=
' → logprob: -10.126890182495117
    5. '*=' → logprob: -10.501890182495117
    6. ' +=' → logprob: -11.751890182495117
    7. ')' → logprob: -12.126890182495117
    8. 'n' → logprob: -12.751890182495117
    9. '=n' → logprob: -13.126890182495117
    10. ')=' → logprob: -13.126890182495117

Token 1289: 'avance' (ID: 177059)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009306210093200207
    2. ' n' → logprob: -5.63430643081665
    3. '=' → logprob: -6.25930643081665
    4. 'rem' → logprob: -7.25930643081665
    5. 'shift' → logprob: -8.009305953979492
    6. 'continue' → logprob: -8.009305953979492
    7. 'replace' → logprob: -8.259305953979492
    8. '+=' → logprob: -8.259305953979492
    9. 'reset' → logprob: -8.259305953979492
    10. 's' → logprob: -8.759305953979492

Token 1290: '"' (ID: 1)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.867509126663208
    2. '   ' → logprob: -1.492509126663208
    3. 'd' → logprob: -2.117509126663208
    4. '=' → logprob: -2.367509126663208
    5. ',' → logprob: -2.867509126663208
    6. ')' → logprob: -3.117509126663208
    7. ' n' → logprob: -4.367508888244629
    8. ' d' → logprob: -4.367508888244629
    9. ' =' → logprob: -5.367508888244629
    10. ' +=' → logprob: -6.117508888244629

Token 1291: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5610432028770447
    2. 'n' → logprob: -1.6860432624816895
    3. ',' → logprob: -1.8110432624816895
    4. ')' → logprob: -3.1860432624816895
    5. '(n' → logprob: -4.1860432624816895
    6. '+=' → logprob: -4.9360432624816895
    7. '(' → logprob: -5.9360432624816895
    8. '   ' → logprob: -6.0610432624816895
    9. ' n' → logprob: -6.3110432624816895
    10. 'd' → logprob: -6.4360432624816895

Token 1292: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024820810649544
    2. ' n' → logprob: -6.127481937408447
    3. 'd' → logprob: -8.502482414245605
    4. '   ' → logprob: -9.502482414245605
    5. '(n' → logprob: -11.752482414245605
    6. '1' → logprob: -13.127482414245605
    7. '```' → logprob: -13.127482414245605
    8. '10' → logprob: -13.627482414245605
    9. '	n' → logprob: -13.627482414245605
    10. ' d' → logprob: -14.252482414245605

Token 1293: ' plage' (ID: 78241)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07953780144453049
    2. 'd' → logprob: -3.079537868499756
    3. ' n' → logprob: -4.704537868499756
    4. 'next' → logprob: -5.079537868499756
    5. '10' → logprob: -5.204537868499756
    6. '```' → logprob: -5.454537868499756
    7. '1' → logprob: -5.954537868499756
    8. ' next' → logprob: -7.204537868499756
    9. '   ' → logprob: -8.329537391662598
    10. '`' → logprob: -8.329537391662598

Token 1294: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6364763975143433
    2. ' suivante' → logprob: -1.3864763975143433
    3. 'n' → logprob: -2.386476516723633
    4. '=' → logprob: -3.636476516723633
    5. ')' → logprob: -3.886476516723633
    6. ',' → logprob: -4.011476516723633
    7. 'de' → logprob: -4.511476516723633
    8. '+' → logprob: -4.511476516723633
    9. '(n' → logprob: -5.136476516723633
    10. ':' → logprob: -5.136476516723633

Token 1295: ' chiffres' (ID: 105565)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.32471293210983276
    2. 'ch' → logprob: -1.6997129917144775
    3. 'n' → logprob: -2.8247129917144775
    4. 'digits' → logprob: -3.8247129917144775
    5. 'val' → logprob: -4.824712753295898
    6. 'nombre' → logprob: -5.949712753295898
    7. ' chiffres' → logprob: -7.324712753295898
    8. '10' → logprob: -7.324712753295898
    9. '```' → logprob: -7.324712753295898
    10. 'next' → logprob: -8.449712753295898

Token 1296: ' d' (ID: 272)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.079291820526123
    2. 'd' → logprob: -1.704291820526123
    3. ')' → logprob: -1.829291820526123
    4. '+=' → logprob: -2.204291820526123
    5. '+' → logprob: -2.454291820526123
    6. '=' → logprob: -2.954291820526123
    7. ' +=' → logprob: -3.454291820526123
    8. ',' → logprob: -4.204291820526123
    9. '(' → logprob: -5.329291820526123
    10. '   ' → logprob: -5.704291820526123

Token 1297: '+' (ID: 10)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6103743314743042
    2. '+' → logprob: -0.8603743314743042
    3. '=' → logprob: -3.9853744506835938
    4. ' +=' → logprob: -4.360374450683594
    5. ')' → logprob: -6.235374450683594
    6. ',' → logprob: -9.235374450683594
    7. '+)' → logprob: -9.610374450683594
    8. ']+=' → logprob: -9.985374450683594
    9. ' +' → logprob: -10.110374450683594
    10. ' =' → logprob: -10.235374450683594

Token 1298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0714859813451767
    2. '+' → logprob: -2.696485996246338
    3. '```' → logprob: -6.571485996246338
    4. ')' → logprob: -10.44648551940918
    5. ' +' → logprob: -10.44648551940918
    6. 'd' → logprob: -10.69648551940918
    7. '`' → logprob: -11.19648551940918
    8. '   ' → logprob: -12.07148551940918
    9. '``' → logprob: -12.19648551940918
    10. ' ' → logprob: -12.32148551940918

Token 1299: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5325086116790771
    2. ')
' → logprob: -0.9075086116790771
    3. ',' → logprob: -5.907508850097656
    4. ')n' → logprob: -6.032508850097656
    5. '   ' → logprob: -6.907508850097656
    6. '+' → logprob: -7.407508850097656
    7. 'n' → logprob: -7.407508850097656
    8. '
' → logprob: -8.032508850097656
    9. '```' → logprob: -8.282508850097656
    10. '=' → logprob: -8.282508850097656

Token 1300: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2068910449743271
    2. '   ' → logprob: -2.4568910598754883
    3. ' n' → logprob: -2.9568910598754883
    4. '```' → logprob: -3.0818910598754883
    5. '``' → logprob: -6.331891059875488
    6. '	n' → logprob: -6.706891059875488
    7. '    
' → logprob: -9.081891059875488
    8. '
' → logprob: -9.456891059875488
    9. ' 
' → logprob: -10.081891059875488
    10. ' ' → logprob: -10.581891059875488

Token 1301: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08342739194631577
    2. '   ' → logprob: -2.8334274291992188
    3. ' n' → logprob: -4.083427429199219
    4. '	n' → logprob: -5.708427429199219
    5. '```' → logprob: -7.083427429199219
    6. '``' → logprob: -9.583427429199219
    7. ' 
' → logprob: -10.333427429199219
    8. '    
' → logprob: -10.583427429199219
    9. '
' → logprob: -10.583427429199219
    10. '`
' → logprob: -11.083427429199219

Token 1302: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001742531661875546
    2. '   ' → logprob: -6.501742362976074
    3. ' n' → logprob: -8.376742362976074
    4. '```' → logprob: -12.251742362976074
    5. '	n' → logprob: -13.626742362976074
    6. '
' → logprob: -13.626742362976074
    7. ' ' → logprob: -13.751742362976074
    8. 'd' → logprob: -14.001742362976074
    9. '``' → logprob: -15.251742362976074
    10. '  ' → logprob: -15.376742362976074

Token 1303: ' borne' (ID: 111819)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.036610424518585205
    2. '   ' → logprob: -3.6616103649139404
    3. ' n' → logprob: -4.9116106033325195
    4. '=' → logprob: -6.1616106033325195
    5. ' =' → logprob: -8.78661060333252
    6. ',' → logprob: -8.91161060333252
    7. '+=' → logprob: -9.03661060333252
    8. '
' → logprob: -10.03661060333252
    9. ' +=' → logprob: -10.16161060333252
    10. ' ' → logprob: -10.16161060333252

Token 1304: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07795911282300949
    2. 'd' → logprob: -3.0779590606689453
    3. '   ' → logprob: -4.452959060668945
    4. ' n' → logprob: -4.702959060668945
    5. '=' → logprob: -5.702959060668945
    6. '(n' → logprob: -6.827959060668945
    7. ' =' → logprob: -7.077959060668945
    8. ' d' → logprob: -7.327959060668945
    9. '0' → logprob: -8.202959060668945
    10. ',' → logprob: -8.202959060668945

Token 1305: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805112838745117
    2. '1' → logprob: -3.288051128387451
    3. 'ext' → logprob: -12.53805160522461
    4. 'n' → logprob: -13.78805160522461
    5. 'o' → logprob: -14.16305160522461
    6. '   ' → logprob: -14.28805160522461
    7. '```' → logprob: -14.28805160522461
    8. '_' → logprob: -15.10055160522461
    9. '=' → logprob: -15.22555160522461
    10. '۰' → logprob: -15.35055160522461

Token 1306: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013074349611997604
    2. '+=' → logprob: -4.6380743980407715
    3. ' =' → logprob: -5.7630743980407715
    4. ' +=' → logprob: -8.888073921203613
    5. '=n' → logprob: -11.263073921203613
    6. '=max' → logprob: -11.513073921203613
    7. '=int' → logprob: -12.638073921203613
    8. '   ' → logprob: -12.888073921203613
    9. ',' → logprob: -13.263073921203613
    10. '=min' → logprob: -13.888073921203613

Token 1307: ' L' (ID: 451)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7264537811279297
    2. 'min' → logprob: -1.3514537811279297
    3. 'L' → logprob: -2.1014537811279297
    4. '18' → logprob: -2.4764537811279297
    5. '-' → logprob: -3.8514537811279297
    6. 'n' → logprob: -4.35145378112793
    7. '(' → logprob: -5.35145378112793
    8. '-(' → logprob: -5.35145378112793
    9. '19' → logprob: -6.10145378112793
    10. '-min' → logprob: -6.72645378112793

Token 1308: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4213891327381134
    2. ' =' → logprob: -1.171389102935791
    3. ',' → logprob: -4.296389102935791
    4. 'n' → logprob: -5.171389102935791
    5. ' +=' → logprob: -5.421389102935791
    6. '+=' → logprob: -6.046389102935791
    7. ' n' → logprob: -6.171389102935791
    8. '+' → logprob: -6.671389102935791
    9. '   ' → logprob: -7.046389102935791
    10. '=n' → logprob: -7.296389102935791

Token 1309: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.741366982460022
    2. 'min' → logprob: -1.241366982460022
    3. ' min' → logprob: -2.3663668632507324
    4. '   ' → logprob: -2.6163668632507324
    5. ' n' → logprob: -2.9913668632507324
    6. 'L' → logprob: -4.741366863250732
    7. 'max' → logprob: -5.491366863250732
    8. ' L' → logprob: -5.741366863250732
    9. ' max' → logprob: -8.24136734008789
    10. 'if' → logprob: -8.36636734008789

Token 1310: ' limite' (ID: 48939)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10380521416664124
    2. ' min' → logprob: -2.6038053035736084
    3. 'n' → logprob: -3.9788053035736084
    4. 'L' → logprob: -6.353805065155029
    5. '=' → logprob: -7.103805065155029
    6. ' n' → logprob: -7.228805065155029
    7. '=min' → logprob: -7.353805065155029
    8. 'max' → logprob: -7.728805065155029
    9. ' =' → logprob: -8.228805541992188
    10. 'if' → logprob: -8.353805541992188

Token 1311: ' globale' (ID: 87991)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004222520627081394
    2. ' =' → logprob: -5.504222393035889
    3. 'n' → logprob: -9.629222869873047
    4. '   ' → logprob: -10.629222869873047
    5. '=min' → logprob: -10.754222869873047
    6. '=n' → logprob: -11.129222869873047
    7. '=max' → logprob: -11.379222869873047
    8. '=
' → logprob: -12.379222869873047
    9. ',' → logprob: -14.129222869873047
    10. '+=' → logprob: -14.754222869873047

Token 1312: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019002746790647507
    2. ' =' → logprob: -4.019002914428711
    3. 'n' → logprob: -8.269002914428711
    4. '   ' → logprob: -9.144002914428711
    5. '=
' → logprob: -9.269002914428711
    6. ',' → logprob: -9.269002914428711
    7. '=n' → logprob: -9.269002914428711
    8. '=min' → logprob: -9.394002914428711
    9. '=max' → logprob: -9.519002914428711
    10. '+=' → logprob: -10.894002914428711

Token 1313: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07288604974746704
    2. '   ' → logprob: -2.6978859901428223
    3. ' n' → logprob: -6.072885990142822
    4. '```' → logprob: -7.572885990142822
    5. 'd' → logprob: -10.32288646697998
    6. '``' → logprob: -10.44788646697998
    7. '`' → logprob: -10.94788646697998
    8. '	n' → logprob: -11.32288646697998
    9. ',' → logprob: -11.82288646697998
    10. '
' → logprob: -11.94788646697998

Token 1314: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1462496966123581
    2. '   ' → logprob: -2.021249771118164
    3. ' n' → logprob: -5.896249771118164
    4. '	n' → logprob: -7.646249771118164
    5. '```' → logprob: -8.146249771118164
    6. '``' → logprob: -10.771249771118164
    7. ' ' → logprob: -11.896249771118164
    8. '    ' → logprob: -12.646249771118164
    9. 'd' → logprob: -12.646249771118164
    10. '   ' → logprob: -12.771249771118164

Token 1315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017826409311965108
    2. '1' → logprob: -6.376782417297363
    3. '_' → logprob: -10.001782417297363
    4. '+=' → logprob: -12.126782417297363
    5. ' +=' → logprob: -12.251782417297363
    6. '+' → logprob: -12.501782417297363
    7. ' =' → logprob: -12.626782417297363
    8. 'o' → logprob: -12.626782417297363
    9. '   ' → logprob: -12.751782417297363
    10. '=' → logprob: -12.751782417297363

Token 1316: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029708960209973156
    2. ',' → logprob: -8.500297546386719
    3. '+=' → logprob: -10.125297546386719
    4. '=n' → logprob: -10.250297546386719
    5. ' =' → logprob: -11.000297546386719
    6. ',n' → logprob: -14.125297546386719
    7. '.=' → logprob: -15.625297546386719
    8. ' +=' → logprob: -16.25029754638672
    9. '=
' → logprob: -16.25029754638672
    10. '=}' → logprob: -16.50029754638672

Token 1317: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04323554039001465
    2. 'min' → logprob: -3.1682355403900146
    3. ' n' → logprob: -9.043235778808594
    4. ' min' → logprob: -9.168235778808594
    5. '=min' → logprob: -12.293235778808594
    6. '10' → logprob: -12.793235778808594
    7. '(min' → logprob: -13.168235778808594
    8. '   ' → logprob: -13.168235778808594
    9. '[min' → logprob: -14.543235778808594
    10. 'max' → logprob: -14.668235778808594

Token 1318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.875003814697266
    3. 'n' → logprob: -14.875003814697266
    4. '_' → logprob: -15.125003814697266
    5. '=' → logprob: -15.500003814697266
    6. '```' → logprob: -16.625003814697266
    7. '+' → logprob: -17.375003814697266
    8. '(n' → logprob: -18.000003814697266
    9. '+=' → logprob: -18.500003814697266
    10. '(' → logprob: -18.625003814697266

Token 1319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001434690784662962
    2. '+=' → logprob: -9.625143051147461
    3. ' =' → logprob: -10.000143051147461
    4. ',' → logprob: -10.875143051147461
    5. '=n' → logprob: -12.000143051147461
    6. '=
' → logprob: -12.000143051147461
    7. ' +=' → logprob: -15.875143051147461
    8. 'n' → logprob: -16.37514305114746
    9. '=

' → logprob: -16.37514305114746
    10. '=user' → logprob: -16.50014305114746

Token 1320: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017004783148877323
    2. ' n' → logprob: -8.75016975402832
    3. '   ' → logprob: -12.00016975402832
    4. 'max' → logprob: -12.62516975402832
    5. '(n' → logprob: -13.62516975402832
    6. '	n' → logprob: -15.12516975402832
    7. 'min' → logprob: -15.50016975402832
    8. ' ' → logprob: -16.62516975402832
    9. '  ' → logprob: -17.00016975402832
    10. '(' → logprob: -17.12516975402832

Token 1321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005491026677191257
    2. '0' → logprob: -7.62554931640625
    3. '+' → logprob: -10.25054931640625
    4. 'n' → logprob: -10.87554931640625
    5. '(n' → logprob: -12.37554931640625
    6. '_' → logprob: -14.75054931640625
    7. '+n' → logprob: -15.12554931640625
    8. '01' → logprob: -15.25054931640625
    9. '```' → logprob: -15.37554931640625
    10. '<n' → logprob: -16.06304931640625

Token 1322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025539683178067207
    2. '+' → logprob: -4.150539875030518
    3. ' +' → logprob: -5.025539875030518
    4. 'n' → logprob: -6.775539875030518
    5. ' ,' → logprob: -7.650539875030518
    6. ',n' → logprob: -8.27553939819336
    7. '+,' → logprob: -8.40053939819336
    8. ' n' → logprob: -8.40053939819336
    9. ' if' → logprob: -8.52553939819336
    10. ',L' → logprob: -9.27553939819336

Token 1323: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16855281591415405
    2. ' min' → logprob: -2.043552875518799
    3. 'L' → logprob: -4.043552875518799
    4. ' L' → logprob: -5.543552875518799
    5. '-' → logprob: -6.168552875518799
    6. '-min' → logprob: -7.168552875518799
    7. ' -' → logprob: -7.168552875518799
    8. 'max' → logprob: -9.04355239868164
    9. '-l' → logprob: -9.41855239868164
    10. '-L' → logprob: -9.41855239868164

Token 1324: '(-' (ID: 8087)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0018512967508286238
    2. 'L' → logprob: -6.8768510818481445
    3. '(' → logprob: -7.1268510818481445
    4. '(
' → logprob: -11.876851081848145
    5. '((' → logprob: -12.251851081848145
    6. '(n' → logprob: -13.126851081848145
    7. ' (' → logprob: -14.876851081848145
    8. 'n' → logprob: -15.126851081848145
    9. ' L' → logprob: -15.126851081848145
    10. '[L' → logprob: -16.62685203552246

Token 1325: '(-(' (ID: 174232)
  Prédit: '(-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-(' → logprob: -0.002855040365830064
    2. '(' → logprob: -6.377854824066162
    3. '((' → logprob: -7.752854824066162
    4. '(L' → logprob: -7.877854824066162
    5. '(-' → logprob: -8.12785530090332
    6. 'L' → logprob: -10.62785530090332
    7. '((-' → logprob: -11.37785530090332
    8. '(n' → logprob: -12.12785530090332
    9. '(
' → logprob: -13.12785530090332
    10. ' (' → logprob: -13.50285530090332

Token 1326: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008677801117300987
    2. '10' → logprob: -4.758677959442139
    3. '(L' → logprob: -10.50867748260498
    4. '((' → logprob: -10.63367748260498
    5. ' (' → logprob: -11.63367748260498
    6. 'L' → logprob: -13.50867748260498
    7. '(int' → logprob: -14.75867748260498
    8. '(
' → logprob: -15.63367748260498
    9. ' ' → logprob: -16.008678436279297
    10. '[' → logprob: -16.258678436279297

Token 1327: ' **' (ID: 6240)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.08546163886785507
    2. 'd' → logprob: -2.7104616165161133
    3. ' (' → logprob: -4.210461616516113
    4. '(' → logprob: -8.335461616516113
    5. ' d' → logprob: -8.585461616516113
    6. '{' → logprob: -9.710461616516113
    7. '**' → logprob: -10.835461616516113
    8. '   ' → logprob: -11.085461616516113
    9. '^{' → logprob: -11.960461616516113
    10. '^(' → logprob: -12.335461616516113

Token 1328: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011864298954606056
    2. 'd' → logprob: -4.511864185333252
    3. '(' → logprob: -7.261864185333252
    4. ' (' → logprob: -9.13686466217041
    5. ' d' → logprob: -13.01186466217041
    6. '(
' → logprob: -13.76186466217041
    7. '{' → logprob: -13.88686466217041
    8. '((' → logprob: -14.51186466217041
    9. '   ' → logprob: -14.63686466217041
    10. '
' → logprob: -15.01186466217041

Token 1329: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07911251485347748
    2. 'd' → logprob: -2.5791125297546387
    3. ' (' → logprob: -8.95411205291748
    4. '(' → logprob: -9.57911205291748
    5. '{' → logprob: -11.57911205291748
    6. ' d' → logprob: -12.07911205291748
    7. '(L' → logprob: -12.70411205291748
    8. '((' → logprob: -13.82911205291748
    9. '   ' → logprob: -13.95411205291748
    10. '(D' → logprob: -14.20411205291748

Token 1330: ' +' (ID: 659)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5591113567352295
    2. '(d' → logprob: -0.9341113567352295
    3. ' (' → logprob: -4.059111595153809
    4. '+' → logprob: -4.809111595153809
    5. ' d' → logprob: -4.934111595153809
    6. '(' → logprob: -6.184111595153809
    7. '   ' → logprob: -8.684111595153809
    8. '```' → logprob: -8.934111595153809
    9. ')' → logprob: -9.184111595153809
    10. ' +' → logprob: -9.809111595153809

Token 1331: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03554968163371086
    2. '(d' → logprob: -3.4105496406555176
    3. '1' → logprob: -6.535549640655518
    4. ' d' → logprob: -8.285550117492676
    5. '(' → logprob: -9.785550117492676
    6. ' (' → logprob: -9.910550117492676
    7. '   ' → logprob: -11.035550117492676
    8. '```' → logprob: -11.035550117492676
    9. '(A' → logprob: -11.410550117492676
    10. '(L' → logprob: -11.535550117492676

Token 1332: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1856897473335266
    2. '1' → logprob: -1.9356896877288818
    3. '(d' → logprob: -3.935689687728882
    4. '(L' → logprob: -5.560689926147461
    5. 'L' → logprob: -8.060689926147461
    6. '(A' → logprob: -8.310689926147461
    7. '```' → logprob: -8.435689926147461
    8. '0' → logprob: -8.685689926147461
    9. '(' → logprob: -9.185689926147461
    10. '(B' → logprob: -9.310689926147461

Token 1333: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08971370756626129
    2. '-' → logprob: -2.7147138118743896
    3. ')' → logprob: -3.9647138118743896
    4. ' ' → logprob: -7.9647135734558105
    5. ' )' → logprob: -9.714714050292969
    6. ')-' → logprob: -9.839714050292969
    7. '   ' → logprob: -10.339714050292969
    8. '     ' → logprob: -11.089714050292969
    9. 'd' → logprob: -11.214714050292969
    10. '        ' → logprob: -11.339714050292969

Token 1334: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4778287708759308
    2. '-' → logprob: -0.9778287410736084
    3. '-A' → logprob: -6.2278289794921875
    4. ')' → logprob: -6.7278289794921875
    5. '-B' → logprob: -8.102828979492188
    6. ' ' → logprob: -9.227828979492188
    7. '   ' → logprob: -9.977828979492188
    8. '       ' → logprob: -10.977828979492188
    9. '     ' → logprob: -11.102828979492188
    10. '        ' → logprob: -11.102828979492188

Token 1335: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003806257154792547
    2. ' A' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.875380516052246
    4. '	A' → logprob: -16.125381469726562
    5. ' ' → logprob: -17.625381469726562
    6. 'B' → logprob: -17.875381469726562
    7. ')' → logprob: -18.000381469726562
    8. '```' → logprob: -18.125381469726562
    9. '       ' → logprob: -18.375381469726562
    10. '    ' → logprob: -18.375381469726562

Token 1336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002125757047906518
    2. ' )' → logprob: -6.7521257400512695
    3. ',' → logprob: -8.00212574005127
    4. '),' → logprob: -8.75212574005127
    5. '   ' → logprob: -8.87712574005127
    6. ')//' → logprob: -9.00212574005127
    7. '-' → logprob: -10.00212574005127
    8. ' -' → logprob: -10.37712574005127
    9. '//' → logprob: -10.62712574005127
    10. '       ' → logprob: -10.87712574005127

Token 1337: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11960379034280777
    2. '//' → logprob: -2.2446038722991943
    3. ' ' → logprob: -5.494603633880615
    4. ')' → logprob: -6.369603633880615
    5. '```' → logprob: -8.619604110717773
    6. '#' → logprob: -9.119604110717773
    7. ' ' → logprob: -9.369604110717773
    8. '   ' → logprob: -9.619604110717773
    9. '        ' → logprob: -9.619604110717773
    10. ' )' → logprob: -9.744604110717773

Token 1338: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006717267446219921
    2. ' B' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.381717681884766
    4. ')' → logprob: -14.506717681884766
    5. '           ' → logprob: -16.006717681884766
    6. '       ' → logprob: -16.131717681884766
    7. '    ' → logprob: -16.131717681884766
    8. '	B' → logprob: -16.131717681884766
    9. ' ' → logprob: -16.506717681884766
    10. '```' → logprob: -16.881717681884766

Token 1339: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.055014755576848984
    2. ',' → logprob: -2.9300148487091064
    3. ')' → logprob: -9.555014610290527
    4. ' ),' → logprob: -9.930014610290527
    5. ',),' → logprob: -12.180014610290527
    6. ' ,' → logprob: -13.055014610290527
    7. '   ' → logprob: -13.305014610290527
    8. ')),' → logprob: -13.555014610290527
    9. ',L' → logprob: -14.180014610290527
    10. 'if' → logprob: -15.305014610290527

Token 1340: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.8889261304575484e-06
    2. ' L' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.125003814697266
    4. '	L' → logprob: -18.375003814697266
    5. '    ' → logprob: -20.750003814697266
    6. '       ' → logprob: -21.000003814697266
    7. ')' → logprob: -21.250003814697266
    8. '           ' → logprob: -21.250003814697266
    9. ' ' → logprob: -21.375003814697266
    10. '  ' → logprob: -21.625003814697266

Token 1341: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.664371848164592e-05
    2. ' )' → logprob: -11.250016212463379
    3. '   ' → logprob: -13.000016212463379
    4. '))' → logprob: -14.625016212463379
    5. '+' → logprob: -15.125016212463379
    6. ')
' → logprob: -15.875016212463379
    7. '),' → logprob: -16.625017166137695
    8. '())' → logprob: -17.000017166137695
    9. '`)' → logprob: -17.125017166137695
    10. ')))' → logprob: -17.250017166137695

Token 1342: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4743247628211975
    2. '#' → logprob: -1.5993247032165527
    3. 'if' → logprob: -2.2243247032165527
    4. '```' → logprob: -3.5993247032165527
    5. 'print' → logprob: -4.349324703216553
    6. 'pass' → logprob: -5.224324703216553
    7. 'result' → logprob: -5.349324703216553
    8. '<|end|>' → logprob: -5.349324703216553
    9. ')' → logprob: -5.474324703216553
    10. 'sum' → logprob: -5.474324703216553

Token 1343: ' Enfin' (ID: 85274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.745069499127567e-05
    2. '#' → logprob: -9.87508773803711
    3. 'result' → logprob: -10.87508773803711
    4. 's' → logprob: -12.00008773803711
    5. '```' → logprob: -12.25008773803711
    6. 'total' → logprob: -13.25008773803711
    7. '#print' → logprob: -13.75008773803711
    8. 'if' → logprob: -14.00008773803711
    9. 'sum' → logprob: -14.50008773803711
    10. '
' → logprob: -14.87508773803711

Token 1344: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012035658583045006
    2. '#' → logprob: -7.751203536987305
    3. '
' → logprob: -7.876203536987305
    4. 'for' → logprob: -8.376203536987305
    5. 'result' → logprob: -10.001203536987305
    6. ' print' → logprob: -10.501203536987305
    7. '```' → logprob: -10.626203536987305
    8. 'total' → logprob: -10.751203536987305
    9. '#print' → logprob: -11.501203536987305
    10. 'sum' → logprob: -11.501203536987305

Token 1345: ' après' (ID: 16460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010541265364736319
    2. '#' → logprob: -7.126054286956787
    3. 'result' → logprob: -8.376053810119629
    4. 'total' → logprob: -11.876053810119629
    5. 's' → logprob: -12.751053810119629
    6. 'sum' → logprob: -13.001053810119629
    7. '#print' → logprob: -13.251053810119629
    8. 'answer' → logprob: -13.501053810119629
    9. ' print' → logprob: -13.501053810119629
    10. 'ans' → logprob: -14.251053810119629

Token 1346: ' avoir' (ID: 16595)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011387886479496956
    2. ' print' → logprob: -7.626138687133789
    3. '#' → logprob: -8.001138687133789
    4. 'ret' → logprob: -8.376138687133789
    5. '   ' → logprob: -9.876138687133789
    6. 'for' → logprob: -11.751138687133789
    7. '#print' → logprob: -12.376138687133789
    8. '(ret' → logprob: -12.501138687133789
    9. '(print' → logprob: -12.501138687133789
    10. '```' → logprob: -13.126138687133789

Token 1347: ' accum' (ID: 23148)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017791526624932885
    2. 'ret' → logprob: -9.500178337097168
    3. ' print' → logprob: -10.000178337097168
    4. '#' → logprob: -10.500178337097168
    5. 'range' → logprob: -10.875178337097168
    6. '   ' → logprob: -12.625178337097168
    7. 'for' → logprob: -12.750178337097168
    8. 'pr' → logprob: -13.875178337097168
    9. '(ret' → logprob: -14.000178337097168
    10. '(print' → logprob: -14.125178337097168

Token 1348: 'ulé' (ID: 147268)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.3909297287464142
    2. 'ulé' → logprob: -1.2659296989440918
    3. '#' → logprob: -4.140929698944092
    4. 'ul' → logprob: -5.015929698944092
    5. 'er' → logprob: -5.265929698944092
    6. 'érant' → logprob: -6.015929698944092
    7. 'érer' → logprob: -6.015929698944092
    8. '=' → logprob: -6.640929698944092
    9. ']' → logprob: -6.890929698944092
    10. '_' → logprob: -7.515929698944092

Token 1349: ' toutes' (ID: 17502)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18459691107273102
    2. 'ret' → logprob: -1.8095968961715698
    3. '#' → logprob: -5.934597015380859
    4. 'le' → logprob: -6.809597015380859
    5. 'la' → logprob: -7.934597015380859
    6. '(ret' → logprob: -8.18459701538086
    7. '   ' → logprob: -8.80959701538086
    8. ' print' → logprob: -9.43459701538086
    9. 'l' → logprob: -9.93459701538086
    10. 'result' → logprob: -9.93459701538086

Token 1350: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.036143142729997635
    2. '#' → logprob: -3.7861430644989014
    3. ' les' → logprob: -4.7861433029174805
    4. 'le' → logprob: -6.0361433029174805
    5. 'l' → logprob: -7.7861433029174805
    6. 'calcul' → logprob: -7.7861433029174805
    7. 'print' → logprob: -7.9111433029174805
    8. 'la' → logprob: -8.16114330291748
    9. '()' → logprob: -9.03614330291748
    10. '```' → logprob: -9.53614330291748

Token 1351: ' contributions' (ID: 29298)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016639739274978638
    2. 'ret' → logprob: -5.141639709472656
    3. 'calcul' → logprob: -5.766639709472656
    4. 'val' → logprob: -6.141639709472656
    5. '#' → logprob: -6.266639709472656
    6. 'rés' → logprob: -7.641639709472656
    7. '```' → logprob: -7.766639709472656
    8. 'prints' → logprob: -7.891639709472656
    9. 'result' → logprob: -8.266639709472656
    10. 'aff' → logprob: -8.641639709472656

Token 1352: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00035357745946384966
    2. '#' → logprob: -8.375353813171387
    3. ',' → logprob: -9.750353813171387
    4. ' print' → logprob: -10.875353813171387
    5. '```' → logprob: -11.375353813171387
    6. 'result' → logprob: -12.250353813171387
    7. '[' → logprob: -12.500353813171387
    8. 'ret' → logprob: -12.500353813171387
    9. '
' → logprob: -12.500353813171387
    10. '   ' → logprob: -12.625353813171387

Token 1353: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1994775377388578e-05
    2. 'result' → logprob: -11.750012397766113
    3. '#' → logprob: -13.250012397766113
    4. 'total' → logprob: -14.500012397766113
    5. 'for' → logprob: -14.500012397766113
    6. '```' → logprob: -14.500012397766113
    7. '
' → logprob: -15.375012397766113
    8. ' print' → logprob: -15.625012397766113
    9. '#print' → logprob: -15.875012397766113
    10. 'sum' → logprob: -15.875012397766113

Token 1354: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006510786479339004
    2. '#' → logprob: -7.375650882720947
    3. '#print' → logprob: -11.375651359558105
    4. ' print' → logprob: -12.375651359558105
    5. '```' → logprob: -13.000651359558105
    6. '
' → logprob: -13.125651359558105
    7. 'for' → logprob: -13.125651359558105
    8. 'pr' → logprob: -13.500651359558105
    9. 'ret' → logprob: -15.750651359558105
    10. '[' → logprob: -16.25065040588379

Token 1355: ' la' (ID: 557)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.4746848940849304
    2. 'ret' → logprob: -0.9746848940849304
    3. '(sum' → logprob: -7.974684715270996
    4. 'sum' → logprob: -8.349684715270996
    5. ' ret' → logprob: -11.849684715270996
    6. '((' → logprob: -12.099684715270996
    7. '(' → logprob: -12.349684715270996
    8. 'print' → logprob: -12.849684715270996
    9. '(str' → logprob: -13.349684715270996
    10. '$ret' → logprob: -13.724684715270996

Token 1356: ' valeur' (ID: 41664)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.04926631227135658
    2. 'print' → logprob: -3.1742663383483887
    3. '(ret' → logprob: -5.174266338348389
    4. 'result' → logprob: -7.924266338348389
    5. 'r' → logprob: -10.17426586151123
    6. ' ret' → logprob: -10.29926586151123
    7. 'res' → logprob: -10.29926586151123
    8. '
' → logprob: -10.54926586151123
    9. 'sum' → logprob: -11.17426586151123
    10. 're' → logprob: -11.29926586151123

Token 1357: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3005540668964386
    2. 'ret' → logprob: -1.5505540370941162
    3. '(ret' → logprob: -3.050554037094116
    4. '(print' → logprob: -9.425554275512695
    5. '```' → logprob: -10.175554275512695
    6. '((' → logprob: -12.300554275512695
    7. '``' → logprob: -13.425554275512695
    8. '(' → logprob: -13.550554275512695
    9. ' ret' → logprob: -14.300554275512695
    10. '`' → logprob: -14.300554275512695

Token 1358: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.771655115589965e-05
    2. '```' → logprob: -11.625018119812012
    3. 'ret' → logprob: -11.750018119812012
    4. ' print' → logprob: -15.250018119812012
    5. '(print' → logprob: -15.250018119812012
    6. '``' → logprob: -15.375018119812012
    7. '(ret' → logprob: -16.000017166137695
    8. '`' → logprob: -18.125017166137695
    9. '
' → logprob: -19.375017166137695
    10. '(' → logprob: -20.125017166137695

Token 1359: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2070499062538147
    2. 'ret' → logprob: -1.70704984664917
    3. '[' → logprob: -5.20704984664917
    4. '0' → logprob: -9.832050323486328
    5. 'l' → logprob: -10.832050323486328
    6. '(ret' → logprob: -11.207050323486328
    7. '```' → logprob: -11.332050323486328
    8. '#' → logprob: -11.457050323486328
    9. 'stdout' → logprob: -12.082050323486328
    10. '``' → logprob: -12.457050323486328

Token 1360: ''ind' (ID: 82245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6351333856582642
    2. 'print' → logprob: -1.7601333856582642
    3. 'mod' → logprob: -2.5101332664489746
    4. '0' → logprob: -2.8851332664489746
    5. '[-' → logprob: -3.3851332664489746
    6. '%' → logprob: -3.5101332664489746
    7. '```' → logprob: -3.7601332664489746
    8. '`' → logprob: -3.7601332664489746
    9. '#' → logprob: -4.385133266448975
    10. '1' → logprob: -5.510133266448975

Token 1361: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00016194197814911604
    2. 'ices' → logprob: -9.250162124633789
    3. 'ice' → logprob: -9.875162124633789
    4. 'e' → logprob: -11.500162124633789
    5. '#' → logprob: -13.875162124633789
    6. 'es' → logprob: -14.000162124633789
    7. 'ent' → logprob: -14.000162124633789
    8. 'print' → logprob: -14.125162124633789
    9. '[' → logprob: -15.375162124633789
    10. '```' → logprob: -16.00016212463379

Token 1362: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0125280125066638
    2. '[' → logprob: -4.387527942657471
    3. '```' → logprob: -11.512528419494629
    4. '
' → logprob: -12.637528419494629
    5. 'ret' → logprob: -13.012528419494629
    6. ' ' → logprob: -14.012528419494629
    7. '``' → logprob: -14.637528419494629
    8. '(' → logprob: -14.887528419494629
    9. '`' → logprob: -15.012528419494629
    10. '[
' → logprob: -15.637528419494629

Token 1363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.12500286102295
    4. '```' → logprob: -14.50000286102295
    5. '[' → logprob: -16.000003814697266
    6. '1' → logprob: -16.750003814697266
    7. '``' → logprob: -17.500003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '`' → logprob: -18.500003814697266
    10. '
' → logprob: -18.875003814697266

Token 1364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021271906734909862
    2. '[' → logprob: -8.500212669372559
    3. '0' → logprob: -12.375212669372559
    4. ']' → logprob: -12.625212669372559
    5. ' ][' → logprob: -13.750212669372559
    6. '```' → logprob: -15.250212669372559
    7. '
' → logprob: -16.250213623046875
    8. ']
' → logprob: -16.875213623046875
    9. '"][' → logprob: -17.125213623046875
    10. '#' → logprob: -17.250213623046875

Token 1365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '
' → logprob: -18.75
    4. '۰' → logprob: -21.625
    5. '   ' → logprob: -22.0
    6. '00' → logprob: -22.375
    7. ']' → logprob: -22.5
    8. '```' → logprob: -22.75
    9. '
' → logprob: -23.25
    10. '０' → logprob: -23.375

Token 1366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03847942873835564
    2. '])' → logprob: -3.2884793281555176
    3. ' ]' → logprob: -8.288479804992676
    4. ')]' → logprob: -9.913479804992676
    5. '])]' → logprob: -9.913479804992676
    6. ']%' → logprob: -10.038479804992676
    7. ' ])' → logprob: -11.163479804992676
    8. ')' → logprob: -11.413479804992676
    9. ']
' → logprob: -11.788479804992676
    10. ']))' → logprob: -12.788479804992676

Token 1367: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.77022064034827e-05
    2. '```' → logprob: -9.250097274780273
    3. '
' → logprob: -13.750097274780273
    4. '``' → logprob: -14.625097274780273
    5. ' print' → logprob: -18.250097274780273
    6. '`
' → logprob: -20.250097274780273
    7. '#' → logprob: -20.375097274780273
    8. '`' → logprob: -20.875097274780273
    9. '#print' → logprob: -21.000097274780273
    10. '(print' → logprob: -21.625097274780273

Token 1368: ' vect' (ID: 106052)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.250000953674316
    3. 'print' → logprob: -16.0
    4. ' ret' → logprob: -17.625
    5. '
' → logprob: -18.25
    6. '``' → logprob: -18.75
    7. '`' → logprob: -19.0
    8. 'result' → logprob: -19.375
    9. '$ret' → logprob: -19.625
    10. '(ret' → logprob: -19.75

Token 1369: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.0012673746095970273
    2. '[' → logprob: -7.126267433166504
    3. '[[' → logprob: -8.501267433166504
    4. 'ret' → logprob: -8.751267433166504
    5. 'ect' → logprob: -10.376267433166504
    6. 'er' → logprob: -10.751267433166504
    7. 'e' → logprob: -11.751267433166504
    8. 'eu' → logprob: -12.251267433166504
    9. '][' → logprob: -12.376267433166504
    10. '[
' → logprob: -12.376267433166504

Token 1370: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016605432610958815
    2. 'ret' → logprob: -6.626660346984863
    3. '```' → logprob: -8.126660346984863
    4. ' print' → logprob: -11.626660346984863
    5. '`' → logprob: -11.751660346984863
    6. '``' → logprob: -11.876660346984863
    7. '(ret' → logprob: -11.876660346984863
    8. '(print' → logprob: -12.251660346984863
    9. '#print' → logprob: -13.626660346984863
    10. '#' → logprob: -14.126660346984863

Token 1371: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.908022285439074e-05
    2. '```' → logprob: -9.750059127807617
    3. '
' → logprob: -14.625059127807617
    4. '``' → logprob: -15.125059127807617
    5. ' print' → logprob: -17.000059127807617
    6. '(print' → logprob: -18.375059127807617
    7. '#print' → logprob: -18.750059127807617
    8. '#' → logprob: -19.000059127807617
    9. ')
' → logprob: -19.125059127807617
    10. '`
' → logprob: -19.750059127807617

Token 1372: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. '```' → logprob: -11.000017166137695
    3. '``' → logprob: -17.000017166137695
    4. '
' → logprob: -19.000017166137695
    5. ' print' → logprob: -19.250017166137695
    6. '`' → logprob: -22.750017166137695
    7. '#print' → logprob: -23.250017166137695
    8. '  
' → logprob: -24.000017166137695
    9. '    
' → logprob: -24.250017166137695
    10. '	print' → logprob: -25.375017166137695

Token 1373: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -9.674858301877975e-05
    2. 'ret' → logprob: -9.250096321105957
    3. '(' → logprob: -14.625096321105957
    4. ' ret' → logprob: -16.375097274780273
    5. '$ret' → logprob: -17.875097274780273
    6. ' (' → logprob: -19.625097274780273
    7. '	ret' → logprob: -20.375097274780273
    8. '(int' → logprob: -20.375097274780273
    9. '(
' → logprob: -20.500097274780273
    10. '_ret' → logprob: -20.625097274780273

Token 1374: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.636475493200123e-05
    2. ')[' → logprob: -9.750076293945312
    3. '][' → logprob: -11.250076293945312
    4. '[[' → logprob: -13.250076293945312
    5. '```' → logprob: -13.375076293945312
    6. '0' → logprob: -14.125076293945312
    7. ')' → logprob: -14.375076293945312
    8. '[
' → logprob: -16.125076293945312
    9. '[][' → logprob: -16.250076293945312
    10. '   ' → logprob: -16.625076293945312

Token 1375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -19.875
    3. ' ' → logprob: -21.25
    4. '۰' → logprob: -21.5
    5. '０' → logprob: -22.75
    6. '```' → logprob: -23.5
    7. '00' → logprob: -23.625
    8. ' ' → logprob: -24.375
    9. '٠' → logprob: -24.625
    10. '000' → logprob: -25.0

Token 1376: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.2855416066013277e-05
    2. '[' → logprob: -10.375032424926758
    3. ']' → logprob: -13.750032424926758
    4. '0' → logprob: -15.375032424926758
    5. ' ][' → logprob: -15.625032424926758
    6. ']
' → logprob: -17.625032424926758
    7. '])' → logprob: -17.625032424926758
    8. '"][' → logprob: -18.125032424926758
    9. ']][' → logprob: -18.500032424926758
    10. ''][' → logprob: -18.875032424926758

Token 1377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.5
    3. '۰' → logprob: -23.0
    4. '   ' → logprob: -24.25
    5. '00' → logprob: -24.75
    6. '```' → logprob: -25.0
    7. '[' → logprob: -25.375
    8. ' ' → logprob: -25.75
    9. '٠' → logprob: -25.75
    10. '०' → logprob: -25.875

Token 1378: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07940050214529037
    2. '])' → logprob: -2.5794005393981934
    3. '%' → logprob: -8.079400062561035
    4. ' )' → logprob: -9.579400062561035
    5. ']' → logprob: -10.204400062561035
    6. ')%' → logprob: -10.454400062561035
    7. ')])' → logprob: -10.704400062561035
    8. '%)' → logprob: -10.954400062561035
    9. '})' → logprob: -11.829400062561035
    10. ' ])' → logprob: -12.079400062561035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1376
Tokens correctement prédits (1ère position, stricte): 318
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 762
Précision stricte (1ère position): 23.11%
Précision adaptée (1ère position): 24.78%
Précision (top 10): 55.38%
================================================================================
