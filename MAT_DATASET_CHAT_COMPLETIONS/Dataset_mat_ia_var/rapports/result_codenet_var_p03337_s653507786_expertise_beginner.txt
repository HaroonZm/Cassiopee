================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)
somme = a + b
soustraction = a - b
multiplication = a * b
resultat = somme
if soustraction > resultat:
    resultat = soustraction
if multiplication > resultat:
    resultat = multiplication
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020072180777788162
    2. '.' → logprob: -4.520071983337402
    3. '()' → logprob: -4.895071983337402
    4. '(
' → logprob: -7.270071983337402
    5. '().' → logprob: -8.520071983337402
    6. '(.)' → logprob: -8.520071983337402
    7. '('.')' → logprob: -9.520071983337402
    8. ',' → logprob: -9.520071983337402
    9. ''' → logprob: -10.020071983337402
    10. '(

' → logprob: -10.270071983337402

Token 6: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6593208909034729
    2. 'split' → logprob: -0.7843208909034729
    3. 'strip' → logprob: -4.409320831298828
    4. '.strip' → logprob: -5.034320831298828
    5. '.' → logprob: -5.659320831298828
    6. ',' → logprob: -6.284320831298828
    7. '().' → logprob: -6.909320831298828
    8. '()' → logprob: -7.534320831298828
    9. ' split' → logprob: -8.034320831298828
    10. ''s' → logprob: -9.409320831298828

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026723461225628853
    2. '()' → logprob: -3.6517233848571777
    3. '('' → logprob: -9.026723861694336
    4. '(
' → logprob: -9.776723861694336
    5. '"' → logprob: -9.901723861694336
    6. '`' → logprob: -10.151723861694336
    7. '("("' → logprob: -10.776723861694336
    8. '`()' → logprob: -10.776723861694336
    9. ''' → logprob: -11.151723861694336
    10. '```' → logprob: -11.151723861694336

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7422665953636169
    2. '.' → logprob: -1.4922666549682617
    3. '=' → logprob: -1.4922666549682617
    4. ',' → logprob: -3.8672666549682617
    5. ' =' → logprob: -4.242266654968262
    6. '#' → logprob: -4.367266654968262
    7. '```' → logprob: -4.867266654968262
    8. '[' → logprob: -5.492266654968262
    9. '*' → logprob: -6.242266654968262
    10. ' a' → logprob: -6.742266654968262

Token 9: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3990224301815033
    2. '[' → logprob: -1.1490224599838257
    3. ' ' → logprob: -5.649022579193115
    4. '.' → logprob: -5.899022579193115
    5. '<|end|>' → logprob: -6.649022579193115
    6. 'a' → logprob: -6.899022579193115
    7. ' +' → logprob: -7.149022579193115
    8. '*' → logprob: -7.274022579193115
    9. '```' → logprob: -8.274022102355957
    10. '=' → logprob: -8.274022102355957

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.037165019661188126
    2. 'a' → logprob: -3.9121649265289307
    3. ' int' → logprob: -4.16216516494751
    4. ' a' → logprob: -7.66216516494751
    5. 'float' → logprob: -8.162164688110352
    6. 'input' → logprob: -9.787164688110352
    7. 'b' → logprob: -9.787164688110352
    8. ' float' → logprob: -11.537164688110352
    9. '0' → logprob: -12.037164688110352
    10. ' ' → logprob: -12.287164688110352

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2528618574142456
    2. '(' → logprob: -1.5028618574142456
    3. '('' → logprob: -7.252861976623535
    4. 'a' → logprob: -9.002861976623535
    5. '()' → logprob: -10.877861976623535
    6. '```' → logprob: -10.877861976623535
    7. '("' → logprob: -11.127861976623535
    8. '(input' → logprob: -11.377861976623535
    9. '("("' → logprob: -11.502861976623535
    10. ')' → logprob: -12.252861976623535

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008600078872404993
    2. '+' → logprob: -7.125860214233398
    3. ' )' → logprob: -10.500860214233398
    4. '+)' → logprob: -12.000860214233398
    5. ')
' → logprob: -12.125860214233398
    6. ')+' → logprob: -12.625860214233398
    7. ' +' → logprob: -12.875860214233398
    8. ')a' → logprob: -13.125860214233398
    9. '<|end|>' → logprob: -13.750860214233398
    10. '*' → logprob: -13.750860214233398

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5464768409729004
    2. '+' → logprob: -0.9214768409729004
    3. ' b' → logprob: -4.7964768409729
    4. ' ' → logprob: -4.7964768409729
    5. '<|end|>' → logprob: -6.1714768409729
    6. '+b' → logprob: -6.2964768409729
    7. ' +' → logprob: -7.0464768409729
    8. '*' → logprob: -7.7964768409729
    9. ' 
' → logprob: -8.171476364135742
    10. '+
' → logprob: -8.171476364135742

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22834895551204681
    2. ' +' → logprob: -2.103348970413208
    3. '<|end|>' → logprob: -2.853348970413208
    4. ' ' → logprob: -4.353348731994629
    5. ')' → logprob: -4.853348731994629
    6. '*' → logprob: -7.478348731994629
    7. '<|end|>' → logprob: -7.478348731994629
    8. '[' → logprob: -7.728348731994629
    9. ' +=' → logprob: -7.978348731994629
    10. '=' → logprob: -8.353348731994629

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.348455011844635
    2. ' int' → logprob: -1.2234549522399902
    3. ' ' → logprob: -12.598455429077148
    4. 'b' → logprob: -13.973455429077148
    5. '<int' → logprob: -13.973455429077148
    6. '=int' → logprob: -14.098455429077148
    7. '(int' → logprob: -14.223455429077148
    8. ' b' → logprob: -14.348455429077148
    9. '   ' → logprob: -14.473455429077148
    10. '0' → logprob: -14.598455429077148

Token 16: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18112069368362427
    2. '(b' → logprob: -1.8061206340789795
    3. '(a' → logprob: -6.806120872497559
    4. 'b' → logprob: -9.931120872497559
    5. ' (' → logprob: -9.931120872497559
    6. '('' → logprob: -10.556120872497559
    7. '("("' → logprob: -10.681120872497559
    8. '```' → logprob: -10.806120872497559
    9. ')' → logprob: -10.931120872497559
    10. '()' → logprob: -11.056120872497559

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '')' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '```' → logprob: -15.500000953674316
    5. '<|end|>' → logprob: -15.875000953674316
    6. '`)' → logprob: -15.875000953674316
    7. ' )' → logprob: -16.250001907348633
    8. '))' → logprob: -16.625001907348633
    9. '+' → logprob: -17.625001907348633
    10. '()' → logprob: -17.875001907348633

Token 18: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0440820455551147
    2. 'if' → logprob: -1.2940820455551147
    3. 'c' → logprob: -1.4190820455551147
    4. 's' → logprob: -3.2940821647644043
    5. 'print' → logprob: -3.5440821647644043
    6. 'i' → logprob: -4.544082164764404
    7. 'sum' → logprob: -4.794082164764404
    8. '+
' → logprob: -4.794082164764404
    9. '#' → logprob: -4.919082164764404
    10. 'result' → logprob: -5.044082164764404

Token 19: 'omme' (ID: 30420)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.765808641910553
    2. 'um' → logprob: -1.2658085823059082
    3. 'u' → logprob: -2.015808582305908
    4. '=' → logprob: -2.515808582305908
    5. '.' → logprob: -4.640808582305908
    6. ' =' → logprob: -5.140808582305908
    7. 't' → logprob: -5.640808582305908
    8. '+=' → logprob: -5.765808582305908
    9. '-' → logprob: -6.015808582305908
    10. ' +=' → logprob: -6.015808582305908

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20958206057548523
    2. '_' → logprob: -2.0845820903778076
    3. '+' → logprob: -2.9595820903778076
    4. 's' → logprob: -4.5845818519592285
    5. '()' → logprob: -6.8345818519592285
    6. ')' → logprob: -7.8345818519592285
    7. '=' → logprob: -8.209582328796387
    8. '(a' → logprob: -8.584582328796387
    9. '(s' → logprob: -8.959582328796387
    10. ' +' → logprob: -9.334582328796387

Token 21: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07896061986684799
    2. ' a' → logprob: -2.578960657119751
    3. '0' → logprob: -9.578960418701172
    4. ' ' → logprob: -13.328960418701172
    5. '	a' → logprob: -17.203960418701172
    6. '(a' → logprob: -17.953960418701172
    7. 'b' → logprob: -18.578960418701172
    8. ' ' → logprob: -18.953960418701172
    9. '_a' → logprob: -19.453960418701172
    10. 's' → logprob: -19.578960418701172

Token 22: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002817358821630478
    2. ' +' → logprob: -5.877817153930664
    3. '+b' → logprob: -11.627817153930664
    4. '<|end|>' → logprob: -13.377817153930664
    5. '+)' → logprob: -15.002817153930664
    6. ')' → logprob: -15.502817153930664
    7. '+=' → logprob: -15.502817153930664
    8. '"+"' → logprob: -15.877817153930664
    9. '+B' → logprob: -16.002817153930664
    10. '+++' → logprob: -16.127817153930664

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931517124176025
    2. ' b' → logprob: -0.6931517124176025
    3. ' ' → logprob: -12.443151473999023
    4. '1' → logprob: -14.818151473999023
    5. ' ' → logprob: -16.443151473999023
    6. '	b' → logprob: -16.693151473999023
    7. ' б' → logprob: -16.818151473999023
    8. '_b' → logprob: -17.693151473999023
    9. '```' → logprob: -17.693151473999023
    10. ')b' → logprob: -17.818151473999023

Token 24: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08745446801185608
    2. '\n' → logprob: -3.2124545574188232
    3. '<|end|>' → logprob: -4.837454319000244
    4. '
' → logprob: -4.837454319000244
    5. '\' → logprob: -5.212454319000244
    6. '+' → logprob: -5.337454319000244
    7. '.' → logprob: -5.837454319000244
    8. '#' → logprob: -6.087454319000244
    9. '*' → logprob: -6.212454319000244
    10. '```' → logprob: -6.337454319000244

Token 25: 'sou' (ID: 153109)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013301216531544924
    2. 'p' → logprob: -7.6263298988342285
    3. '#' → logprob: -8.626330375671387
    4. 'if' → logprob: -8.751330375671387
    5. '
' → logprob: -8.876330375671387
    6. '\n' → logprob: -9.001330375671387
    7. '\' → logprob: -10.001330375671387
    8. 'prin' → logprob: -10.001330375671387
    9. '```' → logprob: -10.251330375671387
    10. 'r' → logprob: -11.251330375671387

Token 26: 'straction' (ID: 79887)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15115179121494293
    2. 'stra' → logprob: -2.5261518955230713
    3. 'bs' → logprob: -3.6511518955230713
    4. 's' → logprob: -3.9011518955230713
    5. 'str' → logprob: -4.901151657104492
    6. 'm' → logprob: -6.276151657104492
    7. 'straction' → logprob: -6.526151657104492
    8. 'st' → logprob: -6.776151657104492
    9. 'bm' → logprob: -6.901151657104492
    10. 'bst' → logprob: -8.526151657104492

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05019198730587959
    2. ' ' → logprob: -3.800191879272461
    3. '_' → logprob: -3.925191879272461
    4. '=' → logprob: -5.675191879272461
    5. 's' → logprob: -6.050191879272461
    6. '  ' → logprob: -7.425191879272461
    7. '(s' → logprob: -8.425191879272461
    8. '<|end|>' → logprob: -9.675191879272461
    9. ' _' → logprob: -10.300191879272461
    10. '_=' → logprob: -10.925191879272461

Token 28: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01418242696672678
    2. 'b' → logprob: -4.2641825675964355
    3. ' ' → logprob: -11.139182090759277
    4. ' ' → logprob: -12.639182090759277
    5. '	b' → logprob: -14.764182090759277
    6. ' a' → logprob: -15.889182090759277
    7. ' -' → logprob: -16.389183044433594
    8. 'a' → logprob: -16.639183044433594
    9. '-' → logprob: -16.764183044433594
    10. ' int' → logprob: -16.889183044433594

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04304589331150055
    2. '-' → logprob: -3.168045997619629
    3. ' ' → logprob: -10.168045997619629
    4. ' ' → logprob: -12.793045997619629
    5. '_' → logprob: -13.293045997619629
    6. '<|end|>' → logprob: -13.918045997619629
    7. '"' → logprob: -14.168045997619629
    8. ')' → logprob: -14.293045997619629
    9. ''' → logprob: -15.293045997619629
    10. '>' → logprob: -15.668045997619629

Token 30: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003177952254191041
    2. ' b' → logprob: -5.753178119659424
    3. '<|end|>' → logprob: -15.628177642822266
    4. ' ' → logprob: -17.628177642822266
    5. '	b' → logprob: -17.753177642822266
    6. '>b' → logprob: -19.253177642822266
    7. ')b' → logprob: -19.253177642822266
    8. ' б' → logprob: -20.378177642822266
    9. '1' → logprob: -21.878177642822266
    10. '  ' → logprob: -22.378177642822266

Token 31: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.070542812347412
    2. '+' → logprob: -1.320542812347412
    3. '<|end|>' → logprob: -1.820542812347412
    4. '\' → logprob: -2.320542812347412
    5. '+
' → logprob: -3.195542812347412
    6. 's' → logprob: -3.570542812347412
    7. ' 
' → logprob: -4.320542812347412
    8. '
' → logprob: -4.445542812347412
    9. '*' → logprob: -4.570542812347412
    10. '' → logprob: -5.320542812347412

Token 32: 'multip' (ID: 163898)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.057516515254974365
    2. '+' → logprob: -3.682516574859619
    3. '*' → logprob: -5.057516574859619
    4. '\n' → logprob: -5.182516574859619
    5. '\' → logprob: -6.057516574859619
    6. '<|end|>' → logprob: -6.057516574859619
    7. 's' → logprob: -6.307516574859619
    8. '
' → logprob: -6.557516574859619
    9. '```' → logprob: -6.557516574859619
    10. 'c' → logprob: -6.682516574859619

Token 33: 'lication' (ID: 2389)
  Prédit: 'lication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.0043108342215418816
    2. '*' → logprob: -6.379310607910156
    3. 'l' → logprob: -6.754310607910156
    4. 'lation' → logprob: -8.004310607910156
    5. 'ication' → logprob: -8.254310607910156
    6. 'lic' → logprob: -8.504310607910156
    7. 'li' → logprob: -8.629310607910156
    8. ' *' → logprob: -8.629310607910156
    9. 'lica' → logprob: -8.754310607910156
    10. 'lications' → logprob: -9.254310607910156

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009918416617438197
    2. '=' → logprob: -7.3759918212890625
    3. ' ' → logprob: -8.625991821289062
    4. '<|end|>' → logprob: -9.500991821289062
    5. ' *' → logprob: -10.125991821289062
    6. ' *=' → logprob: -10.250991821289062
    7. 's' → logprob: -11.375991821289062
    8. '*' → logprob: -11.875991821289062
    9. '<|end|>' → logprob: -12.125991821289062
    10. ')' → logprob: -12.375991821289062

Token 35: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.313273549079895
    2. 'a' → logprob: -1.313273549079895
    3. ' ' → logprob: -12.063273429870605
    4. 's' → logprob: -13.313273429870605
    5. 'b' → logprob: -13.438273429870605
    6. ' b' → logprob: -13.813273429870605
    7. '	a' → logprob: -14.313273429870605
    8. '_a' → logprob: -14.938273429870605
    9. ' ' → logprob: -15.188273429870605
    10. ' а' → logprob: -16.188274383544922

Token 36: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03410123661160469
    2. '*' → logprob: -3.4091012477874756
    3. '<|end|>' → logprob: -8.659101486206055
    4. ' ' → logprob: -8.909101486206055
    5. '[' → logprob: -9.659101486206055
    6. ' ' → logprob: -10.659101486206055
    7. '<|end|>' → logprob: -11.409101486206055
    8. '  ' → logprob: -11.659101486206055
    9. 'multip' → logprob: -12.159101486206055
    10. ' *
' → logprob: -12.284101486206055

Token 37: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16030901670455933
    2. 'b' → logprob: -1.910309076309204
    3. ' ' → logprob: -9.410308837890625
    4. '	b' → logprob: -13.410308837890625
    5. ' ' → logprob: -14.910308837890625
    6. '<|end|>' → logprob: -14.910308837890625
    7. ' б' → logprob: -15.035308837890625
    8. '_b' → logprob: -15.535308837890625
    9. '  ' → logprob: -16.035308837890625
    10. ')b' → logprob: -16.910308837890625

Token 38: '
' (ID: 198)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.5818865299224854
    2. 'div' → logprob: -1.5818865299224854
    3. '/' → logprob: -1.9568865299224854
    4. '\n' → logprob: -3.3318865299224854
    5. '/div' → logprob: -4.831886291503906
    6. ' ' → logprob: -4.956886291503906
    7. '\' → logprob: -5.081886291503906
    8. '<|end|>' → logprob: -5.206886291503906
    9. '/
' → logprob: -5.456886291503906
    10. 'newline' → logprob: -5.706886291503906

Token 39: 'result' (ID: 2521)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.030672864988446236
    2. 'print' → logprob: -4.030673027038574
    3. 'div' → logprob: -4.405673027038574
    4. 'mod' → logprob: -9.780673027038574
    5. 'addition' → logprob: -9.780673027038574
    6. 'if' → logprob: -10.655673027038574
    7. 'multip' → logprob: -10.780673027038574
    8. '```' → logprob: -11.280673027038574
    9. '#' → logprob: -12.030673027038574
    10. '/' → logprob: -12.405673027038574

Token 40: 'at' (ID: 266)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1937532126903534
    2. 'at' → logprob: -2.193753242492676
    3. ' =' → logprob: -3.193753242492676
    4. '=' → logprob: -3.818753242492676
    5. '_' → logprob: -7.193753242492676
    6. ' ' → logprob: -8.068753242492676
    7. 'ats' → logprob: -8.568753242492676
    8. '1' → logprob: -9.193753242492676
    9. 'a' → logprob: -9.693753242492676
    10. '.' → logprob: -9.943753242492676

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12387362122535706
    2. ' ' → logprob: -2.373873710632324
    3. '=' → logprob: -4.248873710632324
    4. '<|end|>' → logprob: -5.373873710632324
    5. '_' → logprob: -5.748873710632324
    6. '  ' → logprob: -7.998873710632324
    7. 's' → logprob: -8.123873710632324
    8. '<|end|>' → logprob: -8.498873710632324
    9. ' ' → logprob: -9.623873710632324
    10. ')' → logprob: -9.873873710632324

Token 42: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.8240969181060791
    2. 's' → logprob: -1.449096918106079
    3. ' a' → logprob: -1.949096918106079
    4. 'a' → logprob: -2.199096918106079
    5. 'multip' → logprob: -3.574096918106079
    6. 'sou' → logprob: -3.824096918106079
    7. ' som' → logprob: -4.9490966796875
    8. ' multiplication' → logprob: -5.3240966796875
    9. ' ' → logprob: -5.4490966796875
    10. 'som' → logprob: -5.9490966796875

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' sou' (ID: 4069)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.3088427186012268
    2. ' a' → logprob: -1.683842658996582
    3. ' resultat' → logprob: -3.683842658996582
    4. ' ' → logprob: -3.683842658996582
    5. 's' → logprob: -4.558842658996582
    6. 'a' → logprob: -4.933842658996582
    7. 'sou' → logprob: -5.058842658996582
    8. ' result' → logprob: -6.308842658996582
    9. ' b' → logprob: -7.058842658996582
    10. 'result' → logprob: -7.433842658996582

Token 46: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.003690574551001191
    2. 'traction' → logprob: -6.753690719604492
    3. 'stra' → logprob: -7.128690719604492
    4. 'stract' → logprob: -7.628690719604492
    5. 'str' → logprob: -7.878690719604492
    6. 'tras' → logprob: -8.253690719604492
    7. 'b' → logprob: -8.628690719604492
    8. 's' → logprob: -8.753690719604492
    9. '>' → logprob: -10.003690719604492
    10. 't' → logprob: -10.253690719604492

Token 47: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04340836778283119
    2. '>' → logprob: -3.2934083938598633
    3. ' <' → logprob: -5.918408393859863
    4. ' >=' → logprob: -6.168408393859863
    5. ' ' → logprob: -8.168408393859863
    6. '<' → logprob: -9.168408393859863
    7. '>=' → logprob: -9.293408393859863
    8. ' !=' → logprob: -10.168408393859863
    9. ' <=' → logprob: -11.043408393859863
    10. ' >

' → logprob: -11.918408393859863

Token 48: ' resultat' (ID: 67404)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6057443618774414
    2. '0' → logprob: -1.2307443618774414
    3. ' somme' → logprob: -2.2307443618774414
    4. ' resultat' → logprob: -3.6057443618774414
    5. 'multip' → logprob: -5.105744361877441
    6. 'result' → logprob: -5.230744361877441
    7. ' result' → logprob: -5.230744361877441
    8. ' multiplication' → logprob: -5.605744361877441
    9. 's' → logprob: -5.855744361877441
    10. 'sou' → logprob: -6.730744361877441

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0056337895803153515
    2. ' :' → logprob: -5.63063383102417
    3. ':
' → logprob: -6.25563383102417
    4. ' and' → logprob: -9.755633354187012
    5. ' :
' → logprob: -10.505633354187012
    6. 'and' → logprob: -12.130633354187012
    7. ' or' → logprob: -12.880633354187012
    8. '):' → logprob: -13.005633354187012
    9. ' ' → logprob: -13.255633354187012
    10. ':

' → logprob: -13.380633354187012

Token 50: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6860159039497375
    2. ' resultat' → logprob: -1.8110158443450928
    3. ' ' → logprob: -2.0610158443450928
    4. ' result' → logprob: -2.5610158443450928
    5. ' sou' → logprob: -3.1860158443450928
    6. '    
' → logprob: -4.186016082763672
    7. 'sou' → logprob: -4.186016082763672
    8. ' ' → logprob: -4.561016082763672
    9. 'result' → logprob: -4.561016082763672
    10. ' résultat' → logprob: -4.686016082763672

Token 51: ' resultat' (ID: 67404)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.32032549381256104
    2. ' sou' → logprob: -1.320325493812561
    3. '   ' → logprob: -5.1953253746032715
    4. 'result' → logprob: -8.19532585144043
    5. 's' → logprob: -8.19532585144043
    6. ' result' → logprob: -8.32032585144043
    7. '    ' → logprob: -8.94532585144043
    8. ' resultat' → logprob: -9.19532585144043
    9. ' ' → logprob: -9.32032585144043
    10. '    
' → logprob: -9.32032585144043

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00408160500228405
    2. '=' → logprob: -5.504081726074219
    3. ' ' → logprob: -12.879081726074219
    4. '=s' → logprob: -15.129081726074219
    5. ' =
' → logprob: -15.879081726074219
    6. ' ' → logprob: -17.25408172607422
    7. ' +=' → logprob: -17.25408172607422
    8. 's' → logprob: -17.75408172607422
    9. '_' → logprob: -17.87908172607422
    10. ',' → logprob: -17.87908172607422

Token 53: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.34902429580688477
    2. ' sou' → logprob: -1.2240242958068848
    3. 's' → logprob: -7.849024295806885
    4. ' ' → logprob: -9.349023818969727
    5. '	s' → logprob: -10.349023818969727
    6. ' sout' → logprob: -10.849023818969727
    7. ' ' → logprob: -11.349023818969727
    8. ' su' → logprob: -11.599023818969727
    9. ' sul' → logprob: -11.849023818969727
    10. '   ' → logprob: -12.349023818969727

Token 54: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.0015502138994634151
    2. 'stract' → logprob: -7.126550197601318
    3. 'traction' → logprob: -8.001550674438477
    4. 'b' → logprob: -8.251550674438477
    5. 'str' → logprob: -9.626550674438477
    6. 'stra' → logprob: -10.001550674438477
    7. 'struction' → logprob: -10.751550674438477
    8. 'trast' → logprob: -12.376550674438477
    9. 'bst' → logprob: -12.501550674438477
    10. 'bs' → logprob: -12.876550674438477

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5299768447875977
    2. 'if' → logprob: -1.1549768447875977
    3. '\n' → logprob: -2.6549768447875977
    4. ' if' → logprob: -4.654976844787598
    5. 'elif' → logprob: -5.279976844787598
    6. '```' → logprob: -5.654976844787598
    7. '\' → logprob: -5.904976844787598
    8. '<|end|>' → logprob: -6.529976844787598
    9. '    
' → logprob: -7.029976844787598
    10. '   ' → logprob: -7.029976844787598

Token 56: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10411377251148224
    2. '
' → logprob: -2.479113817214966
    3. '```' → logprob: -5.229113578796387
    4. '\n' → logprob: -5.354113578796387
    5. 'elif' → logprob: -6.229113578796387
    6. ' if' → logprob: -7.229113578796387
    7. '<|end|>' → logprob: -7.729113578796387
    8. '    
' → logprob: -7.854113578796387
    9. '  
' → logprob: -7.854113578796387
    10. '\' → logprob: -7.854113578796387

Token 57: ' multiplication' (ID: 86340)
  Prédit: ' multiplication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.25205230712890625
    2. 'multip' → logprob: -1.5020523071289062
    3. ' multip' → logprob: -9.877052307128906
    4. ' multiplic' → logprob: -10.127052307128906
    5. ' ' → logprob: -10.752052307128906
    6. 'Multip' → logprob: -12.627052307128906
    7. 'multiply' → logprob: -13.002052307128906
    8. ' ' → logprob: -13.877052307128906
    9. ' multiprocessing' → logprob: -14.502052307128906
    10. '   ' → logprob: -14.877052307128906

Token 58: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0013325021136552095
    2. '>' → logprob: -6.6263322830200195
    3. ' ' → logprob: -12.00133228302002
    4. ' ' → logprob: -16.126333236694336
    5. '   ' → logprob: -16.376333236694336
    6. ' >

' → logprob: -16.751333236694336
    7. ' >
' → logprob: -17.626333236694336
    8. '  ' → logprob: -17.626333236694336
    9. '>end' → logprob: -18.876333236694336
    10. '<|end|>' → logprob: -19.251333236694336

Token 59: ' resultat' (ID: 67404)
  Prédit: ' resultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resultat' → logprob: -0.4891170263290405
    2. 'result' → logprob: -0.9891170263290405
    3. ' result' → logprob: -4.48911714553833
    4. ' résultat' → logprob: -5.73911714553833
    5. ' ' → logprob: -8.739116668701172
    6. ' ' → logprob: -9.239116668701172
    7. '_result' → logprob: -10.239116668701172
    8. ' resultado' → logprob: -10.364116668701172
    9. 'r' → logprob: -10.864116668701172
    10. '[result' → logprob: -10.864116668701172

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00545964390039444
    2. ':
' → logprob: -5.255459785461426
    3. '   ' → logprob: -8.630459785461426
    4. ' :' → logprob: -10.130459785461426
    5. ' :
' → logprob: -12.255459785461426
    6. ':

' → logprob: -14.005459785461426
    7. '=' → logprob: -14.380459785461426
    8. 'result' → logprob: -15.130459785461426
    9. ' =' → logprob: -15.755459785461426
    10. '>' → logprob: -16.13045883178711

Token 61: '   ' (ID: 271)
  Prédit: ' multiplication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.22834867238998413
    2. ' multip' → logprob: -1.978348731994629
    3. 'multip' → logprob: -2.728348731994629
    4. ' multiplic' → logprob: -8.603348731994629
    5. '   ' → logprob: -8.728348731994629
    6. ' multiprocessing' → logprob: -8.978348731994629
    7. '<|end|>' → logprob: -11.103348731994629
    8. ' result' → logprob: -11.603348731994629
    9. ' resultat' → logprob: -11.728348731994629
    10. ' Multip' → logprob: -12.103348731994629

Token 62: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5086897611618042
    2. ' resultat' → logprob: -1.2586897611618042
    3. ' result' → logprob: -2.2586898803710938
    4. '   ' → logprob: -5.008689880371094
    5. ' résultat' → logprob: -5.883689880371094
    6. 'multip' → logprob: -8.133689880371094
    7. ' multiplication' → logprob: -9.008689880371094
    8. '_result' → logprob: -9.508689880371094
    9. ' resultado' → logprob: -9.633689880371094
    10. ' multip' → logprob: -9.883689880371094

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. '<|end|>' → logprob: -15.828889846801758
    4. ' ' → logprob: -15.953889846801758
    5. ' +=' → logprob: -16.453889846801758
    6. ' =
' → logprob: -16.828889846801758
    7. ' =)' → logprob: -17.453889846801758
    8. '=

' → logprob: -18.703889846801758
    9. '+=' → logprob: -18.703889846801758
    10. ' ' → logprob: -19.203889846801758

Token 64: ' multiplication' (ID: 86340)
  Prédit: ' multiplication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.31406307220458984
    2. 'multip' → logprob: -1.3140630722045898
    3. ' multip' → logprob: -7.18906307220459
    4. ' multiplic' → logprob: -10.06406307220459
    5. ' multiprocessing' → logprob: -13.81406307220459
    6. ' ' → logprob: -14.06406307220459
    7. ' multiplex' → logprob: -14.56406307220459
    8. 'mult' → logprob: -15.31406307220459
    9. 'multiply' → logprob: -15.31406307220459
    10. 'Multip' → logprob: -15.68906307220459

Token 65: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.77627644513268e-06
    2. '
' → logprob: -12.625008583068848
    3. ' print' → logprob: -12.625008583068848
    4. '```' → logprob: -14.250008583068848
    5. ')' → logprob: -14.875008583068848
    6. 'pr' → logprob: -15.500008583068848
    7. ' 
' → logprob: -16.125009536743164
    8. '(print' → logprob: -16.500009536743164
    9. 'prin' → logprob: -16.500009536743164
    10. '.print' → logprob: -16.625009536743164

Token 66: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.250003814697266
    3. ' print' → logprob: -14.125003814697266
    4. 'if' → logprob: -14.250003814697266
    5. '
' → logprob: -15.000003814697266
    6. '#' → logprob: -16.375003814697266
    7. '\' → logprob: -17.000003814697266
    8. '>' → logprob: -17.375003814697266
    9. '#print' → logprob: -17.875003814697266
    10. '  
' → logprob: -18.000003814697266

Token 67: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47412732243537903
    2. '(result' → logprob: -0.9741272926330566
    3. '(resultado' → logprob: -10.849127769470215
    4. 'result' → logprob: -11.224127769470215
    5. '()' → logprob: -11.349127769470215
    6. '('' → logprob: -13.599127769470215
    7. '(res' → logprob: -13.974127769470215
    8. '(
' → logprob: -13.974127769470215
    9. ' (' → logprob: -14.599127769470215
    10. '(max' → logprob: -14.724127769470215

Token 68: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.0339031834737398e-05
    2. ')' → logprob: -10.875020027160645
    3. 'ат' → logprob: -14.250020027160645
    4. 'a' → logprob: -15.375020027160645
    5. ' at' → logprob: -16.37502098083496
    6. '))' → logprob: -16.75002098083496
    7. 'ât' → logprob: -16.75002098083496
    8. '_at' → logprob: -16.75002098083496
    9. 'ats' → logprob: -17.00002098083496
    10. 't' → logprob: -17.25002098083496

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.25
    3. ' )' → logprob: -16.875
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -18.75
    6. ')}' → logprob: -19.0
    7. ')**' → logprob: -20.375
    8. '`)' → logprob: -20.375
    9. '),' → logprob: -20.375
    10. ')#' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 38.81%
Précision adaptée (1ère position): 38.81%
Précision (top 10): 79.10%
================================================================================
