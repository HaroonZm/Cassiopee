================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def convert_input_to_int(s):
    return int(s)

def int_to_str(n):
    return str(n)

def str_to_list(s):
    return list(s)

def char_list_to_int_list(char_list):
    return list(map(int, char_list))

def sum_of_list(lst):
    return sum(lst)

def is_divisible(n, divisor):
    return n % divisor == 0

def print_yes():
    print("Yes")

def print_no():
    print("No")

def decide_and_print(n, divisor):
    if is_divisible(n, divisor):
        print_yes()
    else:
        print_no()

def main():
    s = get_input()
    n = convert_input_to_int(s)
    a = int_to_str(n)
    char_list = str_to_list(a)
    int_list = char_list_to_int_list(char_list)
    b = sum_of_list(int_list)
    decide_and_print(n, b)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158825984224677
    2. '_' → logprob: -6.2521586418151855
    3. '():' → logprob: -9.252159118652344
    4. ' (' → logprob: -10.252159118652344
    5. '()' → logprob: -10.627159118652344
    6. '```' → logprob: -10.627159118652344
    7. '(_' → logprob: -11.502159118652344
    8. '(:' → logprob: -11.627159118652344
    9. '(_:' → logprob: -12.127159118652344
    10. ':' → logprob: -12.502159118652344

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5172414183616638
    2. '\' → logprob: -1.3922414779663086
    3. '\n' → logprob: -3.3922414779663086
    4. '   ' → logprob: -3.5172414779663086
    5. '(' → logprob: -3.7672414779663086
    6. '    
' → logprob: -4.517241477966309
    7. ':' → logprob: -4.642241477966309
    8. ''' → logprob: -5.392241477966309
    9. '()' → logprob: -5.392241477966309
    10. ''\' → logprob: -5.517241477966309

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46133580803871155
    2. 'user' → logprob: -1.9613357782363892
    3. 'i' → logprob: -2.7113358974456787
    4. 'input' → logprob: -2.9613358974456787
    5. 'x' → logprob: -3.3363358974456787
    6. 'r' → logprob: -3.7113358974456787
    7. ' ' → logprob: -4.2113356590271
    8. '   ' → logprob: -4.3363356590271
    9. 'u' → logprob: -4.9613356590271
    10. 'n' → logprob: -5.4613356590271

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3073161840438843
    2. ' input' → logprob: -1.6823161840438843
    3. 'input' → logprob: -3.057316303253174
    4. '"' → logprob: -3.807316303253174
    5. ''' → logprob: -5.057316303253174
    6. '  ' → logprob: -6.682316303253174
    7. ' "' → logprob: -7.307316303253174
    8. ' '' → logprob: -7.682316303253174
    9. '(input' → logprob: -8.682315826416016
    10. ' None' → logprob: -9.557315826416016

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029428747948259115
    2. '('' → logprob: -6.37794303894043
    3. '()' → logprob: -7.75294303894043
    4. ''' → logprob: -7.87794303894043
    5. '("("' → logprob: -8.25294303894043
    6. '"' → logprob: -9.62794303894043
    7. '```' → logprob: -10.75294303894043
    8. '(
' → logprob: -10.75294303894043
    9. ' (' → logprob: -11.62794303894043
    10. ' ' → logprob: -11.62794303894043

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5308982729911804
    2. '\n' → logprob: -2.155898332595825
    3. 'def' → logprob: -2.905898332595825
    4. '()' → logprob: -3.155898332595825
    5. '```' → logprob: -3.405898332595825
    6. '#' → logprob: -3.780898332595825
    7. '
' → logprob: -3.905898332595825
    8. '(
' → logprob: -3.905898332595825
    9. '.' → logprob: -3.905898332595825
    10. '\' → logprob: -4.280898094177246

Token 9: ' convert' (ID: 8452)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.21845389902591705
    2. ' calculate' → logprob: -2.093453884124756
    3. ' process' → logprob: -4.093453884124756
    4. ' add' → logprob: -4.343453884124756
    5. ' user' → logprob: -4.468453884124756
    6. ' space' → logprob: -5.093453884124756
    7. ' ' → logprob: -5.093453884124756
    8. ' compute' → logprob: -6.093453884124756
    9. ' my' → logprob: -6.218453884124756
    10. ' read' → logprob: -6.218453884124756

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14531588554382324
    2. '_to' → logprob: -2.0203158855438232
    3. '_string' → logprob: -7.520316123962402
    4. '(' → logprob: -7.645316123962402
    5. '_token' → logprob: -8.020316123962402
    6. '_value' → logprob: -8.520316123962402
    7. '_text' → logprob: -9.020316123962402
    8. ' _' → logprob: -9.520316123962402
    9. '_str' → logprob: -9.645316123962402
    10. '_space' → logprob: -9.645316123962402

Token 11: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5880695581436157
    2. '(' → logprob: -0.8380695581436157
    3. '_' → logprob: -5.213069438934326
    4. '('_' → logprob: -6.463069438934326
    5. '_text' → logprob: -6.838069438934326
    6. '(_' → logprob: -6.838069438934326
    7. 'to' → logprob: -7.713069438934326
    8. '_parent' → logprob: -7.838069438934326
    9. '("_' → logprob: -8.213069915771484
    10. '_string' → logprob: -8.213069915771484

Token 12: '_int' (ID: 12285)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.3447656035423279
    2. '_int' → logprob: -2.0947656631469727
    3. '_number' → logprob: -3.0947656631469727
    4. '_' → logprob: -3.2197656631469727
    5. '_list' → logprob: -3.7197656631469727
    6. '_integer' → logprob: -3.9697656631469727
    7. '_tokens' → logprob: -4.719765663146973
    8. '_lower' → logprob: -4.969765663146973
    9. '_token' → logprob: -5.844765663146973
    10. '_float' → logprob: -5.844765663146973

Token 13: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015923626720905304
    2. '_' → logprob: -4.890923500061035
    3. '()' → logprob: -5.890923500061035
    4. '```' → logprob: -6.140923500061035
    5. 's' → logprob: -6.390923500061035
    6. '("("' → logprob: -7.640923500061035
    7. '():' → logprob: -8.765923500061035
    8. '   ' → logprob: -9.390923500061035
    9. '(_)' → logprob: -9.390923500061035
    10. '(_' → logprob: -9.890923500061035

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05021749809384346
    2. ')' → logprob: -3.050217390060425
    3. ' ):' → logprob: -7.550217628479004
    4. '):
' → logprob: -7.675217628479004
    5. 'u' → logprob: -8.175217628479004
    6. '   ' → logprob: -9.800217628479004
    7. ':' → logprob: -9.925217628479004
    8. ' )' → logprob: -10.175217628479004
    9. 't' → logprob: -10.300217628479004
    10. '**' → logprob: -10.425217628479004

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003191612893715501
    2. 'int' → logprob: -6.8781914710998535
    3. ' return' → logprob: -7.1281914710998535
    4. '    ' → logprob: -7.6281914710998535
    5. '(int' → logprob: -8.253191947937012
    6. '(' → logprob: -8.378191947937012
    7. '[int' → logprob: -9.003191947937012
    8. ' int' → logprob: -9.253191947937012
    9. 'return' → logprob: -10.378191947937012
    10. ':' → logprob: -10.753191947937012

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48898380994796753
    2. 'try' → logprob: -1.2389838695526123
    3. 'return' (adapté à ' return') → logprob: -3.2389838695526123
    4. ' try' → logprob: -3.4889838695526123
    5. ' return' → logprob: -3.8639838695526123
    6. 'int' → logprob: -5.113983631134033
    7. '```' → logprob: -8.363984107971191
    8. ' int' → logprob: -9.363984107971191
    9. '    ' → logprob: -12.113984107971191
    10. '  ' → logprob: -12.613984107971191

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008627697825431824
    2. 'int' → logprob: -4.758627891540527
    3. '   ' → logprob: -11.883627891540527
    4. '(int' → logprob: -12.758627891540527
    5. ' ' → logprob: -13.758627891540527
    6. '```' → logprob: -14.133627891540527
    7. '=int' → logprob: -14.758627891540527
    8. '[int' → logprob: -14.883627891540527
    9. '	int' → logprob: -15.008627891540527
    10. '<int' → logprob: -15.633627891540527

Token 18: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07890389114618301
    2. '(' → logprob: -2.578903913497925
    3. 's' → logprob: -11.578904151916504
    4. ' (' → logprob: -13.078904151916504
    5. '('' → logprob: -13.578904151916504
    6. '(`' → logprob: -14.828904151916504
    7. '((' → logprob: -15.328904151916504
    8. '("("' → logprob: -15.328904151916504
    9. '()' → logprob: -15.828904151916504
    10. '(
' → logprob: -15.953904151916504

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.588793960167095e-05
    2. '))' → logprob: -9.500076293945312
    3. ')))' → logprob: -14.500076293945312
    4. ' )' → logprob: -15.000076293945312
    5. '())' → logprob: -17.125076293945312
    6. '')' → logprob: -17.375076293945312
    7. ')return' → logprob: -17.625076293945312
    8. ')
' → logprob: -17.625076293945312
    9. ')s' → logprob: -18.000076293945312
    10. '`)' → logprob: -18.125076293945312

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013944639824330807
    2. '

' → logprob: -4.888944625854492
    3. '
' → logprob: -6.138944625854492
    4. '\' → logprob: -6.263944625854492
    5. 'd' → logprob: -6.513944625854492
    6. '```' → logprob: -8.263944625854492
    7. '#' → logprob: -8.513944625854492
    8. '\n' → logprob: -9.388944625854492
    9. ' def' → logprob: -10.888944625854492
    10. '``' → logprob: -11.013944625854492

Token 21: ' int' (ID: 677)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7159901857376099
    2. ' process' → logprob: -1.7159901857376099
    3. ' convert' → logprob: -1.9659901857376099
    4. ' add' → logprob: -3.0909900665283203
    5. ' main' → logprob: -3.2159900665283203
    6. ' get' → logprob: -3.3409900665283203
    7. ' compute' → logprob: -4.09099006652832
    8. ' multiply' → logprob: -4.59099006652832
    9. ' factorial' → logprob: -4.71599006652832
    10. ' square' → logprob: -4.96599006652832

Token 22: '_to' (ID: 5089)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9098396897315979
    2. '_to' → logprob: -1.1598396301269531
    3. 'eger' → logprob: -1.5348396301269531
    4. '_' → logprob: -3.659839630126953
    5. 'o' → logprob: -4.784839630126953
    6. 'erval' → logprob: -5.284839630126953
    7. '_val' → logprob: -5.534839630126953
    8. 'ialize' → logprob: -5.784839630126953
    9. 'ernal' → logprob: -6.159839630126953
    10. 'e' → logprob: -6.284839630126953

Token 23: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.09274819493293762
    2. '_str' → logprob: -2.7177481651306152
    3. '_' → logprob: -3.8427481651306152
    4. '_s' → logprob: -7.217748165130615
    5. ' _' → logprob: -8.592748641967773
    6. 'string' → logprob: -9.592748641967773
    7. ' string' → logprob: -9.592748641967773
    8. '_strings' → logprob: -10.342748641967773
    9. 'str' → logprob: -12.217748641967773
    10. 's' → logprob: -12.342748641967773

Token 24: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038509091828018427
    2. '(s' → logprob: -6.003850936889648
    3. '(a' → logprob: -8.003850936889648
    4. '("("' → logprob: -8.128850936889648
    5. '(value' → logprob: -8.503850936889648
    6. '(x' → logprob: -8.878850936889648
    7. '(n' → logprob: -9.628850936889648
    8. '("")' → logprob: -9.753850936889648
    9. '(e' → logprob: -9.878850936889648
    10. 's' → logprob: -10.003850936889648

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10033563524484634
    2. ')' → logprob: -2.3503355979919434
    3. '):
' → logprob: -9.350336074829102
    4. ' ):' → logprob: -10.350336074829102
    5. ' )' → logprob: -12.850336074829102
    6. ' ' → logprob: -13.975336074829102
    7. 't' → logprob: -13.975336074829102
    8. ':' → logprob: -14.100336074829102
    9. ')：' → logprob: -14.225336074829102
    10. ')n' → logprob: -14.225336074829102

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05252829194068909
    2. ' return' → logprob: -3.0525283813476562
    3. 'return' → logprob: -5.552528381347656
    4. ' str' → logprob: -10.052528381347656
    5. '    ' → logprob: -11.802528381347656
    6. 'str' → logprob: -13.552528381347656
    7. '	return' → logprob: -13.927528381347656
    8. '   ' → logprob: -13.927528381347656
    9. ' ' → logprob: -14.302528381347656
    10. '  ' → logprob: -14.302528381347656

Token 27: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25346311926841736
    2. '   ' → logprob: -1.5034631490707397
    3. 'return' (adapté à ' return') → logprob: -6.628463268280029
    4. ' str' → logprob: -8.628462791442871
    5. '    ' → logprob: -10.503462791442871
    6. ' f' → logprob: -13.878462791442871
    7. '   ' → logprob: -14.003462791442871
    8. ' ' → logprob: -14.253462791442871
    9. '	return' → logprob: -14.253462791442871
    10. '  ' → logprob: -15.378462791442871

Token 28: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.001272973488084972
    2. 'str' → logprob: -6.751273155212402
    3. ' ' → logprob: -9.376273155212402
    4. '	str' → logprob: -11.376273155212402
    5. ' ' → logprob: -12.126273155212402
    6. ' f' → logprob: -14.501273155212402
    7. '(str' → logprob: -15.126273155212402
    8. '  ' → logprob: -15.876273155212402
    9. '"' → logprob: -16.251272201538086
    10. '=str' → logprob: -17.126272201538086

Token 29: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0619698166847229
    2. '(' → logprob: -2.811969757080078
    3. ' (' → logprob: -13.686969757080078
    4. 'n' → logprob: -14.436969757080078
    5. '(
' → logprob: -16.186969757080078
    6. ')' → logprob: -16.561969757080078
    7. '(nn' → logprob: -17.186969757080078
    8. '()' → logprob: -17.186969757080078
    9. '(`' → logprob: -17.561969757080078
    10. '(

' → logprob: -17.811969757080078

Token 30: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')n' → logprob: -14.375000953674316
    3. '))' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.125001907348633
    5. ')
' → logprob: -16.875001907348633
    6. '}' → logprob: -18.250001907348633
    7. ')))' → logprob: -18.375001907348633
    8. ')return' → logprob: -18.750001907348633
    9. ')}}' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.500001907348633

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08575917035341263
    2. 'd' → logprob: -2.710759162902832
    3. '\' → logprob: -4.835759162902832
    4. '#' → logprob: -6.085759162902832
    5. '\n' → logprob: -6.585759162902832
    6. 'n' → logprob: -6.585759162902832
    7. 'a' → logprob: -7.210759162902832
    8. '
' → logprob: -8.085759162902832
    9. '+' → logprob: -8.210759162902832
    10. '<|end|>' → logprob: -8.210759162902832

Token 32: ' str' (ID: 989)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3917233347892761
    2. ' add' → logprob: -1.766723394393921
    3. ' multiply' → logprob: -2.516723394393921
    4. ' calculate' → logprob: -2.891723394393921
    5. ' square' → logprob: -5.391723155975342
    6. ' double' → logprob: -5.641723155975342
    7. ' factorial' → logprob: -6.391723155975342
    8. ' compute' → logprob: -6.641723155975342
    9. 'main' → logprob: -6.891723155975342
    10. ' sum' → logprob: -7.016723155975342

Token 33: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.24258314073085785
    2. '_' → logprob: -2.3675830364227295
    3. '_len' → logprob: -3.3675830364227295
    4. 'ing' → logprob: -3.9925830364227295
    5. '_concat' → logprob: -4.117583274841309
    6. '_ip' → logprob: -4.242583274841309
    7. 'ip' → logprob: -4.367583274841309
    8. '_ing' → logprob: -4.742583274841309
    9. '_strip' → logprob: -5.992583274841309
    10. '_replace' → logprob: -6.242583274841309

Token 34: '_list' (ID: 4162)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.003682617098093033
    2. '_' → logprob: -6.378682613372803
    3. '_str' → logprob: -6.503682613372803
    4. 'int' → logprob: -8.753683090209961
    5. '_list' → logprob: -8.878683090209961
    6. '_float' → logprob: -9.253683090209961
    7. '_bool' → logprob: -11.003683090209961
    8. '_bytes' → logprob: -11.128683090209961
    9. '_i' → logprob: -11.503683090209961
    10. '_char' → logprob: -11.503683090209961

Token 35: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008490587584674358
    2. '(s' → logprob: -5.383490562438965
    3. '('' → logprob: -6.133490562438965
    4. '("("' → logprob: -6.633490562438965
    5. 's' → logprob: -8.883490562438965
    6. '(n' → logprob: -10.133490562438965
    7. '(str' → logprob: -10.258490562438965
    8. ' (' → logprob: -10.633490562438965
    9. '("")' → logprob: -11.008490562438965
    10. '_' → logprob: -11.133490562438965

Token 36: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5763976573944092
    2. '):' → logprob: -0.8263976573944092
    3. '(' → logprob: -8.451397895812988
    4. '(s' → logprob: -9.451397895812988
    5. ' )' → logprob: -10.326397895812988
    6. '):
' → logprob: -10.451397895812988
    7. ' ):' → logprob: -10.951397895812988
    8. 's' → logprob: -10.951397895812988
    9. '):

' → logprob: -11.076397895812988
    10. ':)' → logprob: -11.826397895812988

Token 37: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8862717151641846
    2. '(s' → logprob: -1.5112717151641846
    3. 'list' → logprob: -1.6362717151641846
    4. '[]' → logprob: -2.7612717151641846
    5. '(' → logprob: -3.0112717151641846
    6. '(list' → logprob: -4.1362714767456055
    7. '[s' → logprob: -4.3862714767456055
    8. ' list' → logprob: -4.6362714767456055
    9. 'return' → logprob: -4.8862714767456055
    10. '[' → logprob: -4.8862714767456055

Token 38: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08178914338350296
    2. 'list' → logprob: -2.706789255142212
    3. ' s' → logprob: -5.081789016723633
    4. 's' → logprob: -5.331789016723633
    5. ' [' → logprob: -7.581789016723633
    6. '[s' → logprob: -9.331789016723633
    7. ' []' → logprob: -10.331789016723633
    8. '[list' → logprob: -10.331789016723633
    9. '[' → logprob: -10.456789016723633
    10. '[]' → logprob: -11.081789016723633

Token 39: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.045247893780469894
    2. 'list' → logprob: -3.420247793197632
    3. ' s' → logprob: -4.670248031616211
    4. 's' → logprob: -6.295248031616211
    5. ' [' → logprob: -8.670248031616211
    6. ' []' → logprob: -9.670248031616211
    7. '[list' → logprob: -10.295248031616211
    8. '[' → logprob: -10.920248031616211
    9. '[s' → logprob: -11.045248031616211
    10. '[]' → logprob: -12.045248031616211

Token 40: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011089086532592773
    2. '(' → logprob: -4.511089324951172
    3. 's' → logprob: -10.136089324951172
    4. ' (' → logprob: -15.136089324951172
    5. '(ss' → logprob: -15.261089324951172
    6. '('' → logprob: -15.261089324951172
    7. '((' → logprob: -15.386089324951172
    8. '(str' → logprob: -15.511089324951172
    9. '()' → logprob: -16.511089324951172
    10. '(S' → logprob: -16.511089324951172

Token 41: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.25
    3. '))' → logprob: -17.125
    4. ' )' → logprob: -17.125
    5. '()' → logprob: -18.25
    6. '())' → logprob: -19.125
    7. '(' → logprob: -19.375
    8. '[' → logprob: -19.5
    9. ')`' → logprob: -19.5
    10. ')s' → logprob: -20.0

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7132077217102051
    2. 'd' → logprob: -0.8382077217102051
    3. '[' → logprob: -3.088207721710205
    4. '#' → logprob: -4.588207721710205
    5. 'a' → logprob: -4.963207721710205
    6. '(' → logprob: -5.213207721710205
    7. '\' → logprob: -5.213207721710205
    8. 'e' → logprob: -7.463207721710205
    9. '[
' → logprob: -7.463207721710205
    10. 'n' → logprob: -7.588207721710205

Token 43: ' char' (ID: 1826)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.5066917538642883
    2. ' str' → logprob: -1.5066916942596436
    3. '_' → logprob: -3.2566916942596436
    4. ' list' → logprob: -3.3816916942596436
    5. ' get' → logprob: -3.6316916942596436
    6. ' sum' → logprob: -4.756691932678223
    7. ' ' → logprob: -4.881691932678223
    8. ' reverse' → logprob: -4.881691932678223
    9. ' map' → logprob: -5.006691932678223
    10. ' main' → logprob: -5.131691932678223

Token 44: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4058205783367157
    2. '_to' → logprob: -1.155820608139038
    3. '_at' → logprob: -4.530820369720459
    4. 'acter' → logprob: -5.780820369720459
    5. '_t' → logprob: -5.905820369720459
    6. '_s' → logprob: -7.030820369720459
    7. '_a' → logprob: -7.655820369720459
    8. '_count' → logprob: -8.405820846557617
    9. 's' → logprob: -8.905820846557617
    10. 'acters' → logprob: -8.905820846557617

Token 45: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4944455623626709
    2. '_to' → logprob: -1.369445562362671
    3. 's' → logprob: -2.244445562362671
    4. '_s' → logprob: -4.11944580078125
    5. '(' → logprob: -4.61944580078125
    6. '(s' → logprob: -6.49444580078125
    7. '_a' → logprob: -8.11944580078125
    8. '_(' → logprob: -8.49444580078125
    9. '(_)' → logprob: -8.86944580078125
    10. '=' → logprob: -8.86944580078125

Token 46: '_int' (ID: 12285)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0008943092543631792
    2. '_' → logprob: -7.625894546508789
    3. '_string' → logprob: -8.125894546508789
    4. 'str' → logprob: -9.500894546508789
    5. '_s' → logprob: -10.375894546508789
    6. 's' → logprob: -12.750894546508789
    7. '_st' → logprob: -14.250894546508789
    8. '_int' → logprob: -15.250894546508789
    9. ' _' → logprob: -15.750894546508789
    10. 'string' → logprob: -15.875894546508789

Token 47: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4966672658920288
    2. '(' → logprob: -1.3716672658920288
    3. '(s' → logprob: -1.9966672658920288
    4. '_list' → logprob: -6.496667385101318
    5. '(a' → logprob: -9.37166690826416
    6. '(l' → logprob: -9.74666690826416
    7. '_' → logprob: -9.87166690826416
    8. '(list' → logprob: -10.12166690826416
    9. '(lst' → logprob: -10.12166690826416
    10. '_s' → logprob: -10.24666690826416

Token 48: '(char' (ID: 14823)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009368319297209382
    2. '(s' → logprob: -7.125936985015869
    3. 's' → logprob: -9.500936508178711
    4. '("("' → logprob: -11.000936508178711
    5. ' (' → logprob: -11.500936508178711
    6. '(n' → logprob: -12.500936508178711
    7. '(l' → logprob: -12.500936508178711
    8. '('' → logprob: -13.250936508178711
    9. '(a' → logprob: -13.500936508178711
    10. '(ls' → logprob: -13.500936508178711

Token 49: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20206640660762787
    2. 's' → logprob: -1.952066421508789
    3. '_list' → logprob: -3.577066421508789
    4. '_)' → logprob: -5.327066421508789
    5. ')_' → logprob: -5.452066421508789
    6. ')' → logprob: -6.577066421508789
    7. '_s' → logprob: -6.952066421508789
    8. '_l' → logprob: -7.327066421508789
    9. 'List' → logprob: -8.077066421508789
    10. '(' → logprob: -8.952066421508789

Token 50: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28328678011894226
    2. '):' → logprob: -2.0332868099212646
    3. '(' → logprob: -2.1582868099212646
    4. '():' → logprob: -10.158287048339844
    5. '(s' → logprob: -10.533287048339844
    6. ' )' → logprob: -10.783287048339844
    7. '(n' → logprob: -11.283287048339844
    8. '):
' → logprob: -11.408287048339844
    9. ')(' → logprob: -11.408287048339844
    10. ':)' → logprob: -11.408287048339844

Token 51: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030037416145205498
    2. ' [' → logprob: -4.1550374031066895
    3. '   ' → logprob: -4.9050374031066895
    4. '[]' → logprob: -6.1550374031066895
    5. '[:]' → logprob: -6.2800374031066895
    6. '(' → logprob: -7.1550374031066895
    7. '[int' → logprob: -7.9050374031066895
    8. ' []' → logprob: -7.9050374031066895
    9. ' return' → logprob: -8.280037879943848
    10. 'return' → logprob: -8.530037879943848

Token 52: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18052197992801666
    2. ' [' → logprob: -1.8055219650268555
    3. ' return' → logprob: -8.430521965026855
    4. '[int' → logprob: -8.555521965026855
    5. 'return' (adapté à ' return') → logprob: -8.930521965026855
    6. '   ' → logprob: -9.055521965026855
    7. ' []' → logprob: -10.430521965026855
    8. '[]' → logprob: -10.805521965026855
    9. ' ' → logprob: -10.805521965026855
    10. ' [
' → logprob: -11.305521965026855

Token 53: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2062506079673767
    2. '[' → logprob: -1.7062506675720215
    3. '[list' → logprob: -5.9562506675720215
    4. '[int' → logprob: -6.4562506675720215
    5. ' list' → logprob: -7.4562506675720215
    6. '[List' → logprob: -10.206250190734863
    7. 'list' → logprob: -10.831250190734863
    8. ' []' → logprob: -12.206250190734863
    9. '[]' → logprob: -12.831250190734863
    10. '[len' → logprob: -13.081250190734863

Token 54: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005989589262753725
    2. '(map' → logprob: -5.1309895515441895
    3. '(char' → logprob: -10.505990028381348
    4. '(int' → logprob: -11.880990028381348
    5. '([' → logprob: -12.130990028381348
    6. '(convert' → logprob: -12.755990028381348
    7. 'map' → logprob: -12.880990028381348
    8. '("("' → logprob: -13.130990028381348
    9. '(range' → logprob: -13.255990028381348
    10. '(s' → logprob: -13.380990028381348

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02175958640873432
    2. '(' → logprob: -3.896759510040283
    3. '(lambda' → logprob: -7.396759510040283
    4. '(ord' → logprob: -7.771759510040283
    5. '(
' → logprob: -9.896759986877441
    6. '<int' → logprob: -10.271759986877441
    7. 'int' → logprob: -10.521759986877441
    8. ')' → logprob: -10.896759986877441
    9. '(char' → logprob: -11.021759986877441
    10. '(chr' → logprob: -11.271759986877441

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20324483513832092
    2. ',char' → logprob: -1.9532448053359985
    3. '(char' → logprob: -3.703244924545288
    4. '(' → logprob: -4.078244686126709
    5. ' ,' → logprob: -8.703245162963867
    6. ',
' → logprob: -8.703245162963867
    7. ',(' → logprob: -9.453245162963867
    8. '(chars' → logprob: -10.453245162963867
    9. 'char' → logprob: -10.703245162963867
    10. '<|end|>' → logprob: -11.203245162963867

Token 57: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.31337133049964905
    2. 'char' → logprob: -1.3133713006973267
    3. '(char' → logprob: -9.813371658325195
    4. ',char' → logprob: -10.188371658325195
    5. '	char' → logprob: -12.063371658325195
    6. '<char' → logprob: -12.188371658325195
    7. '_char' → logprob: -12.938371658325195
    8. ')' → logprob: -13.188371658325195
    9. ' ' → logprob: -14.188371658325195
    10. '   ' → logprob: -14.938371658325195

Token 58: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.250005722045898
    3. '_l' → logprob: -15.375005722045898
    4. '_)' → logprob: -15.625005722045898
    5. ')_' → logprob: -15.750005722045898
    6. ')' → logprob: -16.1250057220459
    7. 'list' → logprob: -16.2500057220459
    8. 'List' → logprob: -16.6250057220459
    9. '_li' → logprob: -17.0000057220459
    10. '_lst' → logprob: -17.7500057220459

Token 59: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00031162876985035837
    2. ')' → logprob: -8.125311851501465
    3. ')))' → logprob: -11.250311851501465
    4. '))
' → logprob: -14.000311851501465
    5. '()))' → logprob: -14.125311851501465
    6. ' ))' → logprob: -14.125311851501465
    7. '   ' → logprob: -16.50031089782715
    8. '(' → logprob: -16.62531089782715
    9. ' ' → logprob: -16.87531089782715
    10. ''))' → logprob: -18.25031089782715

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015051016816869378
    2. 'd' → logprob: -7.501504898071289
    3. '
' → logprob: -7.876504898071289
    4. '#' → logprob: -8.626504898071289
    5. '\' → logprob: -8.876504898071289
    6. '```' → logprob: -9.376504898071289
    7. '<|end|>' → logprob: -10.251504898071289
    8. '[' → logprob: -10.376504898071289
    9. '\n' → logprob: -10.751504898071289
    10. '

' → logprob: -11.376504898071289

Token 61: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07750625163316727
    2. ' sum' → logprob: -3.7025063037872314
    3. ' calculate' → logprob: -4.577506065368652
    4. ' add' → logprob: -4.577506065368652
    5. ' convert' → logprob: -4.577506065368652
    6. ' process' → logprob: -5.202506065368652
    7. ' multiply' → logprob: -5.327506065368652
    8. ' get' → logprob: -6.327506065368652
    9. ' factorial' → logprob: -6.327506065368652
    10. ' reverse' → logprob: -6.577506065368652

Token 62: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12914153933525085
    2. '_' → logprob: -2.3791415691375732
    3. '_(' → logprob: -4.254141330718994
    4. '_numbers' → logprob: -5.129141330718994
    5. '(_' → logprob: -5.879141330718994
    6. '_list' → logprob: -6.629141330718994
    7. '_sum' → logprob: -7.129141330718994
    8. '(_)' → logprob: -7.254141330718994
    9. '_elements' → logprob: -8.254141807556152
    10. '_values' → logprob: -8.379141807556152

Token 63: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.7946363091468811
    2. '_numbers' → logprob: -0.9196363091468811
    3. '_elements' → logprob: -3.2946362495422363
    4. '_int' → logprob: -3.5446362495422363
    5. '_digits' → logprob: -4.294636249542236
    6. 'int' → logprob: -4.419636249542236
    7. 'numbers' → logprob: -4.419636249542236
    8. '_lists' → logprob: -4.544636249542236
    9. 'ints' → logprob: -4.669636249542236
    10. '_in' → logprob: -4.919636249542236

Token 64: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002310599898919463
    2. '(lst' → logprob: -6.502310752868652
    3. '_list' → logprob: -9.002310752868652
    4. '(ls' → logprob: -9.002310752868652
    5. '(l' → logprob: -9.252310752868652
    6. '(list' → logprob: -9.752310752868652
    7. '(n' → logprob: -9.877310752868652
    8. '(s' → logprob: -10.002310752868652
    9. '_' → logprob: -10.127310752868652
    10. '(List' → logprob: -10.252310752868652

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4846082031726837
    2. ')' → logprob: -0.9846081733703613
    3. '(' → logprob: -4.734608173370361
    4. ' ):' → logprob: -7.609608173370361
    5. '(lst' → logprob: -7.609608173370361
    6. ' )' → logprob: -7.984608173370361
    7. '):
' → logprob: -9.35960865020752
    8. '   ' → logprob: -9.60960865020752
    9. '_' → logprob: -10.35960865020752
    10. '):

' → logprob: -10.60960865020752

Token 66: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10863425582647324
    2. '   ' → logprob: -3.8586342334747314
    3. '(sum' → logprob: -3.9836342334747314
    4. '(lst' → logprob: -3.9836342334747314
    5. 'sum' → logprob: -4.2336344718933105
    6. ' return' → logprob: -4.3586344718933105
    7. ' sum' → logprob: -5.1086344718933105
    8. 'return' → logprob: -5.4836344718933105
    9. 'lst' → logprob: -5.9836344718933105
    10. ' lst' → logprob: -6.3586344718933105

Token 67: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6177067756652832
    2. ' sum' → logprob: -0.8677067756652832
    3. 'sum' → logprob: -3.617706775665283
    4. 'return' (adapté à ' return') → logprob: -4.617706775665283
    5. '   ' → logprob: -5.492706775665283
    6. ' ' → logprob: -10.367706298828125
    7. '    ' → logprob: -10.617706298828125
    8. ')' → logprob: -12.117706298828125
    9. '  ' → logprob: -13.492706298828125
    10. '=sum' → logprob: -13.617706298828125

Token 68: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.006716079078614712
    2. 'sum' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.881715774536133
    4. '(sum' → logprob: -15.381715774536133
    5. '	sum' → logprob: -16.381715774536133
    6. '   ' → logprob: -16.506715774536133
    7. ' ' → logprob: -17.506715774536133
    8. '  ' → logprob: -18.506715774536133
    9. '=sum' → logprob: -18.631715774536133
    10. ' suma' → logprob: -19.756715774536133

Token 69: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.048616886138916016
    2. '(' → logprob: -3.048616886138916
    3. '(list' → logprob: -11.423616409301758
    4. '(ls' → logprob: -11.798616409301758
    5. '(lista' → logprob: -12.923616409301758
    6. '(l' → logprob: -13.423616409301758
    7. '(s' → logprob: -13.423616409301758
    8. '("("' → logprob: -14.423616409301758
    9. '(ll' → logprob: -14.548616409301758
    10. '(len' → logprob: -14.548616409301758

Token 70: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.125000953674316
    3. '))' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.25
    5. ')return' → logprob: -17.25
    6. '   ' → logprob: -18.375
    7. ')))' → logprob: -18.75
    8. '())' → logprob: -18.875
    9. ')`' → logprob: -18.875
    10. ')

' → logprob: -19.375

Token 71: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21187379956245422
    2. '()' → logprob: -1.9618737697601318
    3. 'def' → logprob: -3.211873769760132
    4. '(
' → logprob: -5.211874008178711
    5. 'n' → logprob: -6.836874008178711
    6. '\n' → logprob: -7.336874008178711
    7. '(n' → logprob: -7.461874008178711
    8. '#' → logprob: -7.711874008178711
    9. '()
' → logprob: -7.836874008178711
    10. '```' → logprob: -8.586874008178711

Token 72: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0048729428090155125
    2. ' calculate' → logprob: -5.879872798919678
    3. ' multiply' → logprob: -6.879872798919678
    4. ' compute' → logprob: -8.879873275756836
    5. ' process' → logprob: -9.004873275756836
    6. ' factorial' → logprob: -9.004873275756836
    7. ' add' → logprob: -9.379873275756836
    8. ' get' → logprob: -9.379873275756836
    9. ' double' → logprob: -9.504873275756836
    10. ' product' → logprob: -9.504873275756836

Token 73: '_div' (ID: 36926)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.8452464938163757
    2. '_prime' → logprob: -1.0952465534210205
    3. '_pal' → logprob: -1.9702465534210205
    4. '_' → logprob: -2.3452465534210205
    5. '_positive' → logprob: -7.970246315002441
    6. ' even' → logprob: -8.845246315002441
    7. 'even' → logprob: -9.220246315002441
    8. ' _' → logprob: -10.095246315002441
    9. '_multiple' → logprob: -10.095246315002441
    10. '_div' → logprob: -10.220246315002441

Token 74: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -2.696889623621246e-06
    2. 'isable' → logprob: -13.37500286102295
    3. 'is' → logprob: -14.37500286102295
    4. '_' → logprob: -15.25000286102295
    5. 'ISIBLE' → logprob: -15.75000286102295
    6. '_is' → logprob: -17.625001907348633
    7. 'sible' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'idable' → logprob: -18.500001907348633
    10. '(is' → logprob: -19.250001907348633

Token 75: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.575120210647583
    2. '_by' → logprob: -1.075120210647583
    3. '_' → logprob: -2.450120210647583
    4. 'by' → logprob: -5.075119972229004
    5. 'By' → logprob: -7.075119972229004
    6. ' ' → logprob: -7.700119972229004
    7. '```' → logprob: -7.950119972229004
    8. '(n' → logprob: -8.575119972229004
    9. 's' → logprob: -8.950119972229004
    10. ' (' → logprob: -8.950119972229004

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1079799085855484
    2. 'by' → logprob: -2.6079800128936768
    3. ',n' → logprob: -4.857979774475098
    4. '_by' → logprob: -5.107979774475098
    5. '):' → logprob: -5.107979774475098
    6. ' by' → logprob: -5.232979774475098
    7. 'By' → logprob: -6.732979774475098
    8. ' ,' → logprob: -7.232979774475098
    9. ')' → logprob: -7.482979774475098
    10. '(n' → logprob: -8.107979774475098

Token 77: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.38634559512138367
    2. ' d' → logprob: -1.636345624923706
    3. 'div' → logprob: -2.636345624923706
    4. 'd' → logprob: -3.886345624923706
    5. ' k' → logprob: -4.136345386505127
    6. ' m' → logprob: -5.136345386505127
    7. 'k' → logprob: -6.261345386505127
    8. 'm' → logprob: -6.511345386505127
    9. ' x' → logprob: -6.511345386505127
    10. ' ' → logprob: -6.761345386505127

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043045323342084885
    2. ')' → logprob: -3.1680452823638916
    3. ' ):' → logprob: -10.793045043945312
    4. '):
' → logprob: -11.293045043945312
    5. ' ' → logprob: -12.668045043945312
    6. '=' → logprob: -12.918045043945312
    7. ':' → logprob: -13.293045043945312
    8. ',' → logprob: -13.418045043945312
    9. ')：' → logprob: -14.293045043945312
    10. ' )' → logprob: -14.293045043945312

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1746111363172531
    2. ' return' → logprob: -2.0496110916137695
    3. ' n' → logprob: -4.4246110916137695
    4. ':' → logprob: -5.2996110916137695
    5. ' ' → logprob: -5.2996110916137695
    6. 'n' → logprob: -6.1746110916137695
    7. '    ' → logprob: -6.2996110916137695
    8. ' (' → logprob: -6.4246110916137695
    9. 'return' → logprob: -7.4246110916137695
    10. '(n' → logprob: -7.4246110916137695

Token 80: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.007754384074360132
    2. ' n' → logprob: -5.132754325866699
    3. '   ' → logprob: -7.007754325866699
    4. 'return' (adapté à ' return') → logprob: -7.132754325866699
    5. 'n' → logprob: -9.1327543258667
    6. '    ' → logprob: -12.1327543258667
    7. ' ' → logprob: -12.8827543258667
    8. '    
' → logprob: -13.5077543258667
    9. ' ' → logprob: -14.0077543258667
    10. '	return' → logprob: -14.5077543258667

Token 81: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0181526318192482
    2. 'n' → logprob: -4.018152713775635
    3. ' (' → logprob: -14.018152236938477
    4. ' ' → logprob: -14.018152236938477
    5. '(n' → logprob: -14.143152236938477
    6. '	n' → logprob: -15.143152236938477
    7. '(' → logprob: -16.518152236938477
    8. ' ' → logprob: -18.018152236938477
    9. '0' → logprob: -18.268152236938477
    10. '_n' → logprob: -18.393152236938477

Token 82: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.008040240965783596
    2. '%' → logprob: -5.008040428161621
    3. ' ' → logprob: -6.633040428161621
    4. ' ' → logprob: -11.883040428161621
    5. '<|end|>' → logprob: -15.633040428161621
    6. '%s' → logprob: -15.758040428161621
    7. '  ' → logprob: -16.258039474487305
    8. ' %=' → logprob: -16.633039474487305
    9. '%i' → logprob: -16.633039474487305
    10. ' %)' → logprob: -16.883039474487305

Token 83: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.003178782993927598
    2. ' divisor' → logprob: -5.753178596496582
    3. '(div' → logprob: -15.128178596496582
    4. ' div' → logprob: -15.128178596496582
    5. ' divis' → logprob: -15.378178596496582
    6. '	div' → logprob: -15.628178596496582
    7. '_div' → logprob: -16.0031795501709
    8. 'divider' → logprob: -17.1281795501709
    9. ' ' → logprob: -18.2531795501709
    10. 'd' → logprob: -18.3781795501709

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07967419922351837
    2. '==' → logprob: -2.579674243927002
    3. '=' → logprob: -7.704674243927002
    4. ' ' → logprob: -8.204673767089844
    5. '0' → logprob: -10.329673767089844
    6. ' =' → logprob: -10.704673767089844
    7. ' ' → logprob: -12.579673767089844
    8. '===' → logprob: -14.829673767089844
    9. '()==' → logprob: -15.329673767089844
    10. '==
' → logprob: -15.704673767089844

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.061967849731445
    4. '   ' → logprob: -20.186967849731445
    5. '	' → logprob: -20.561967849731445
    6. '```' → logprob: -20.561967849731445
    7. '  ' → logprob: -20.811967849731445
    8. '۰' → logprob: -21.061967849731445
    9. ' ' → logprob: -21.436967849731445
    10. '00' → logprob: -21.811967849731445

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -20.625
    4. '00' → logprob: -20.75
    5. '```' → logprob: -20.75
    6. ' ' → logprob: -22.0
    7. '０' → logprob: -22.0625
    8. '٠' → logprob: -22.125
    9. '   ' → logprob: -22.1875
    10. 'zero' → logprob: -22.25

Token 87: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9304050803184509
    2. '

' → logprob: -1.3054051399230957
    3. '
' → logprob: -1.5554051399230957
    4. '\n' → logprob: -3.0554051399230957
    5. '(' → logprob: -3.8054051399230957
    6. '()

' → logprob: -4.430405139923096
    7. '\' → logprob: -4.805405139923096
    8. '<|end|>' → logprob: -5.055405139923096
    9. '()' → logprob: -5.180405139923096
    10. '(

' → logprob: -5.305405139923096

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08421658724546432
    2. 'd' → logprob: -2.834216594696045
    3. '#' → logprob: -4.209216594696045
    4. '\' → logprob: -6.209216594696045
    5. '```' → logprob: -6.334216594696045
    6. 'n' → logprob: -6.959216594696045
    7. '<|end|>' → logprob: -7.459216594696045
    8. '
' → logprob: -7.834216594696045
    9. '\n' → logprob: -7.959216594696045
    10. '(' → logprob: -8.084216117858887

Token 89: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014628231525421143
    2. ' check' → logprob: -4.7646284103393555
    3. ' is' → logprob: -5.6396284103393555
    4. 'main' → logprob: -6.3896284103393555
    5. ' find' → logprob: -9.014628410339355
    6. ' solve' → logprob: -9.139628410339355
    7. ' process' → logprob: -9.139628410339355
    8. ' get' → logprob: -9.514628410339355
    9. ' calculate' → logprob: -9.514628410339355
    10. ' factorial' → logprob: -9.889628410339355

Token 90: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015160536859184504
    2. '()' → logprob: -6.876515865325928
    3. '("")' → logprob: -8.751516342163086
    4. '('' → logprob: -8.876516342163086
    5. '("' → logprob: -10.001516342163086
    6. '_' → logprob: -10.626516342163086
    7. '("("' → logprob: -10.876516342163086
    8. '("""' → logprob: -11.251516342163086
    9. 's' → logprob: -11.876516342163086
    10. ' (' → logprob: -12.126516342163086

Token 91: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014329795725643635
    2. '():' → logprob: -4.26432991027832
    3. ' ()' → logprob: -9.51432991027832
    4. '():
' → logprob: -10.51432991027832
    5. '()
' → logprob: -11.13932991027832
    6. '_' → logprob: -11.38932991027832
    7. '(' → logprob: -11.76432991027832
    8. '()">' → logprob: -12.01432991027832
    9. '`()' → logprob: -12.01432991027832
    10. ']()' → logprob: -12.88932991027832

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025245302822440863
    2. 'print' → logprob: -6.252524375915527
    3. ' print' → logprob: -7.502524375915527
    4. '    
' → logprob: -11.002524375915527
    5. '(' → logprob: -11.502524375915527
    6. '    ' → logprob: -11.877524375915527
    7. '```' → logprob: -12.502524375915527
    8. '()' → logprob: -13.877524375915527
    9. '	print' → logprob: -14.002524375915527
    10. '       ' → logprob: -14.252524375915527

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13371053338050842
    2. '   ' → logprob: -2.1337106227874756
    3. ' print' → logprob: -5.0087103843688965
    4. 'pr' → logprob: -10.508710861206055
    5. 'p' → logprob: -10.758710861206055
    6. '```' → logprob: -11.133710861206055
    7. 'prin' → logprob: -12.133710861206055
    8. '	print' → logprob: -13.258710861206055
    9. '    
' → logprob: -13.258710861206055
    10. 'pri' → logprob: -13.383710861206055

Token 94: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5888183116912842
    2. '(' → logprob: -0.8388183116912842
    3. '('' → logprob: -4.463818550109863
    4. '("("' → logprob: -6.713818550109863
    5. '(True' → logprob: -10.963818550109863
    6. '("")' → logprob: -11.338818550109863
    7. '("""' → logprob: -11.588818550109863
    8. ' ("' → logprob: -11.713818550109863
    9. '()' → logprob: -12.713818550109863
    10. '(""' → logprob: -12.838818550109863

Token 95: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.07038351893424988
    2. 'YES' → logprob: -2.6953835487365723
    3. 'yes' → logprob: -7.820383548736572
    4. 'Y' → logprob: -10.445383071899414
    5. ' Yes' → logprob: -12.070383071899414
    6. '"' → logprob: -12.320383071899414
    7. '_yes' → logprob: -13.070383071899414
    8. 'Ye' → logprob: -13.570383071899414
    9. 'True' → logprob: -14.320383071899414
    10. ' yes' → logprob: -15.070383071899414

Token 96: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.054500666621607e-06
    2. '")
' → logprob: -13.37500286102295
    3. '")

' → logprob: -14.37500286102295
    4. ')")' → logprob: -14.62500286102295
    5. ')' → logprob: -15.12500286102295
    6. 'def' → logprob: -16.625003814697266
    7. '")
' → logprob: -17.750003814697266
    8. '"' → logprob: -18.000003814697266
    9. '!")' → logprob: -18.250003814697266
    10. '\")' → logprob: -18.500003814697266

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.375
    3. ' def' → logprob: -17.5
    4. 'ndef' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '	def' → logprob: -19.375
    7. '<|end|>' → logprob: -19.375
    8. '    
' → logprob: -20.625
    9. 'de' → logprob: -20.75
    10. '\' → logprob: -21.125

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01883373036980629
    2. ' print' → logprob: -4.018833637237549
    3. '_print' → logprob: -7.768833637237549
    4. 'def' → logprob: -8.268834114074707
    5. ' def' → logprob: -12.893834114074707
    6. '_' → logprob: -14.143834114074707
    7. '.print' → logprob: -14.893834114074707
    8. 'pr' → logprob: -15.393834114074707
    9. '_pr' → logprob: -15.643834114074707
    10. '	print' → logprob: -15.893834114074707

Token 99: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.011315300129354
    2. '_No' → logprob: -4.76131534576416
    3. '_' → logprob: -6.26131534576416
    4. '_NO' → logprob: -7.76131534576416
    5. 'No' → logprob: -8.63631534576416
    6. '_n' → logprob: -9.26131534576416
    7. '("_' → logprob: -10.13631534576416
    8. '("' → logprob: -10.63631534576416
    9. '_N' → logprob: -11.13631534576416
    10. '_("' → logprob: -13.13631534576416

Token 100: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.014684110297821e-06
    2. '()' → logprob: -12.375008583068848
    3. '():
' → logprob: -12.375008583068848
    4. ' ():' → logprob: -14.500008583068848
    5. '():
' → logprob: -18.250009536743164
    6. '():

' → logprob: -18.625009536743164
    7. '(' → logprob: -19.750009536743164
    8. ':' → logprob: -20.000009536743164
    9. ' ()' → logprob: -20.750009536743164
    10. '()">' → logprob: -21.875009536743164

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007201932370662689
    2. 'print' → logprob: -5.0072021484375
    3. ' print' → logprob: -7.6322021484375
    4. '	print' → logprob: -14.0072021484375
    5. ' ' → logprob: -14.7572021484375
    6. '(' → logprob: -15.2572021484375
    7. '```' → logprob: -15.8822021484375
    8. '  ' → logprob: -16.3822021484375
    9. '()' → logprob: -16.5072021484375
    10. '       ' → logprob: -16.7572021484375

Token 102: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.15310683415737e-05
    2. '   ' → logprob: -11.000021934509277
    3. ' print' → logprob: -12.250021934509277
    4. '	print' → logprob: -17.25002098083496
    5. '```' → logprob: -20.50002098083496
    6. '  ' → logprob: -20.87502098083496
    7. '(print' → logprob: -21.12502098083496
    8. ' ' → logprob: -21.37502098083496
    9. 'Print' → logprob: -21.62502098083496
    10. '       ' → logprob: -22.37502098083496

Token 103: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001605115394340828
    2. '(' → logprob: -8.750160217285156
    3. '"No' → logprob: -13.750160217285156
    4. 'No' → logprob: -15.500160217285156
    5. '(No' → logprob: -15.500160217285156
    6. '('' → logprob: -16.125160217285156
    7. '()' → logprob: -16.250160217285156
    8. '(
' → logprob: -16.375160217285156
    9. '("")' → logprob: -16.625160217285156
    10. '(no' → logprob: -16.875160217285156

Token 104: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0009120595059357584
    2. '"No' → logprob: -7.000912189483643
    3. '"' → logprob: -14.625911712646484
    4. ' No' → logprob: -16.250911712646484
    5. '")' → logprob: -17.125911712646484
    6. 'NO' → logprob: -17.875911712646484
    7. '“No' → logprob: -19.000911712646484
    8. '"N' → logprob: -20.500911712646484
    9. '_No' → logprob: -20.625911712646484
    10. '>No' → logprob: -20.875911712646484

Token 105: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00017600801947992295
    2. ')' → logprob: -8.750176429748535
    3. ')")' → logprob: -11.375176429748535
    4. '")
' → logprob: -12.500176429748535
    5. '()' → logprob: -13.375176429748535
    6. '")

' → logprob: -14.375176429748535
    7. '"' → logprob: -16.37517547607422
    8. '')' → logprob: -16.62517547607422
    9. '")
' → logprob: -18.00017547607422
    10. ' ")' → logprob: -18.37517547607422

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.061054359131958e-06
    2. 'if' → logprob: -11.750007629394531
    3. ' def' → logprob: -16.50000762939453
    4. 'for' → logprob: -18.12500762939453
    5. 'n' → logprob: -18.25000762939453
    6. '```' → logprob: -18.75000762939453
    7. 'ndef' → logprob: -19.00000762939453
    8. 'while' → logprob: -19.75000762939453
    9. '    
' → logprob: -20.12500762939453
    10. '
' → logprob: -20.50000762939453

Token 107: ' decide' (ID: 13001)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6937488317489624
    2. 'main' → logprob: -0.6937488317489624
    3. 'check' → logprob: -8.318748474121094
    4. ' check' → logprob: -8.568748474121094
    5. 'solve' → logprob: -9.818748474121094
    6. 'def' → logprob: -10.193748474121094
    7. ' is' → logprob: -10.818748474121094
    8. 'is' → logprob: -10.943748474121094
    9. ' solve' → logprob: -11.193748474121094
    10. 'process' → logprob: -11.443748474121094

Token 108: '_and' (ID: 18645)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06918717175722122
    2. '(n' → logprob: -3.0691871643066406
    3. '_div' → logprob: -4.694187164306641
    4. '(' → logprob: -5.444187164306641
    5. '()' → logprob: -6.319187164306641
    6. '(div' → logprob: -6.444187164306641
    7. '(number' → logprob: -7.694187164306641
    8. '(s' → logprob: -7.819187164306641
    9. '_' → logprob: -7.944187164306641
    10. '_output' → logprob: -8.19418716430664

Token 109: '_print' (ID: 31509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001655898173339665
    2. 'execute' → logprob: -7.0016560554504395
    3. '_print' → logprob: -7.2516560554504395
    4. 'run' → logprob: -11.501655578613281
    5. ' print' → logprob: -11.626655578613281
    6. 'output' → logprob: -12.251655578613281
    7. '_execute' → logprob: -12.751655578613281
    8. 'act' → logprob: -13.251655578613281
    9. 'perform' → logprob: -13.876655578613281
    10. 'call' → logprob: -14.126655578613281

Token 110: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2294711470603943
    2. '(n' → logprob: -1.729471206665039
    3. '(' → logprob: -3.979471206665039
    4. '()' → logprob: -4.854471206665039
    5. '(s' → logprob: -7.729471206665039
    6. ' ():' → logprob: -9.104471206665039
    7. '():
' → logprob: -9.229471206665039
    8. '(_' → logprob: -9.604471206665039
    9. '()(' → logprob: -9.604471206665039
    10. '(()' → logprob: -9.604471206665039

Token 111: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00571108516305685
    2. '):
' → logprob: -5.630711078643799
    3. ',' → logprob: -6.255711078643799
    4. ')' → logprob: -8.880711555480957
    5. ' ):' → logprob: -10.505711555480957
    6. ',n' → logprob: -12.255711555480957
    7. '   ' → logprob: -12.880711555480957
    8. '):
' → logprob: -12.880711555480957
    9. ':' → logprob: -13.005711555480957
    10. '(n' → logprob: -13.505711555480957

Token 112: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0944020077586174
    2. ' divisor' → logprob: -2.4694020748138428
    3. 'd' → logprob: -5.469401836395264
    4. 'divider' → logprob: -7.969401836395264
    5. ' d' → logprob: -8.344402313232422
    6. ' ' → logprob: -9.219402313232422
    7. '   ' → logprob: -9.344402313232422
    8. ' divis' → logprob: -9.469402313232422
    9. 'k' → logprob: -9.469402313232422
    10. ' div' → logprob: -9.719402313232422

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.706686690449715e-05
    2. ')' → logprob: -9.875066757202148
    3. '):
' → logprob: -11.250066757202148
    4. ' ):' → logprob: -13.375066757202148
    5. ',' → logprob: -14.500066757202148
    6. ':' → logprob: -15.125066757202148
    7. '   ' → logprob: -17.12506675720215
    8. '}:' → logprob: -17.75006675720215
    9. ' ' → logprob: -17.87506675720215
    10. '():' → logprob: -18.12506675720215

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004226085729897022
    2. ' if' → logprob: -5.504226207733154
    3. 'if' → logprob: -9.629225730895996
    4. '<|end|>' → logprob: -10.254225730895996
    5. '	if' → logprob: -11.254225730895996
    6. '    
' → logprob: -11.254225730895996
    7. '   ' → logprob: -12.504225730895996
    8. '
' → logprob: -12.504225730895996
    9. ' ' → logprob: -12.629225730895996
    10. '<|end|>' → logprob: -13.129225730895996

Token 115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23262722790241241
    2. '   ' → logprob: -1.732627272605896
    3. ' if' → logprob: -3.4826271533966064
    4. '	if' → logprob: -13.482626914978027
    5. '    
' → logprob: -13.607626914978027
    6. '```' → logprob: -14.107626914978027
    7. '  ' → logprob: -14.732626914978027
    8. ' ' → logprob: -14.732626914978027
    9. '       ' → logprob: -14.982626914978027
    10. '
' → logprob: -15.357626914978027

Token 116: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25193002820014954
    2. 'is' → logprob: -1.5019299983978271
    3. '   ' → logprob: -14.376930236816406
    4. ' n' → logprob: -16.376930236816406
    5. '	is' → logprob: -16.501930236816406
    6. '(is' → logprob: -16.626930236816406
    7. 'n' → logprob: -16.876930236816406
    8. '    ' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.001930236816406

Token 117: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.625006675720215
    3. 'div' → logprob: -12.625006675720215
    4. '_DIV' → logprob: -15.875006675720215
    5. ' divisible' → logprob: -16.12500762939453
    6. '<div' → logprob: -17.75000762939453
    7. '_di' → logprob: -18.12500762939453
    8. '_dis' → logprob: -18.37500762939453
    9. '__' → logprob: -18.50000762939453
    10. ' divis' → logprob: -18.87500762939453

Token 118: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -7.064297824399546e-05
    2. 'is' → logprob: -9.625070571899414
    3. 'isable' → logprob: -12.750070571899414
    4. 'sible' → logprob: -13.875070571899414
    5. 'ISIBLE' → logprob: -14.375070571899414
    6. 'ible' → logprob: -17.500070571899414
    7. '(is' → logprob: -17.750070571899414
    8. ' is' → logprob: -18.250070571899414
    9. '   ' → logprob: -18.750070571899414
    10. 's' → logprob: -18.750070571899414

Token 119: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.64839569455944e-05
    2. '(' → logprob: -9.500076293945312
    3. ' (' → logprob: -13.625076293945312
    4. ')' → logprob: -15.500076293945312
    5. ' ' → logprob: -16.625076293945312
    6. 'n' → logprob: -16.875076293945312
    7. '(
' → logprob: -17.625076293945312
    8. '

' → logprob: -18.250076293945312
    9. ',' → logprob: -18.250076293945312
    10. ')(' → logprob: -18.625076293945312

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031043673516251147
    2. ' ,' → logprob: -8.125310897827148
    3. '(div' → logprob: -12.000310897827148
    4. ',
' → logprob: -13.125310897827148
    5. ',n' → logprob: -13.625310897827148
    6. 'div' → logprob: -13.625310897827148
    7. ',d' → logprob: -14.000310897827148
    8. ' ' → logprob: -14.000310897827148
    9. ')' → logprob: -14.875310897827148
    10. '(n' → logprob: -15.250310897827148

Token 121: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.004659503698348999
    2. ' divisor' → logprob: -5.379659652709961
    3. ' divis' → logprob: -11.629659652709961
    4. '(div' → logprob: -11.879659652709961
    5. ' div' → logprob: -12.004659652709961
    6. '	div' → logprob: -12.004659652709961
    7. ')' → logprob: -12.254659652709961
    8. '   ' → logprob: -13.004659652709961
    9. '_div' → logprob: -13.129659652709961
    10. ' ' → logprob: -14.254659652709961

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011465814895927906
    2. '):
' → logprob: -4.511466026306152
    3. ')' → logprob: -7.886466026306152
    4. ' ):' → logprob: -10.886466026306152
    5. ':' → logprob: -11.386466026306152
    6. '   ' → logprob: -11.886466026306152
    7. '):
' → logprob: -12.886466026306152
    8. '):

' → logprob: -14.636466026306152
    9. '():' → logprob: -14.886466026306152
    10. ' ):
' → logprob: -15.011466026306152

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031055594445206225
    2. '   ' → logprob: -8.500310897827148
    3. '        
' → logprob: -10.375310897827148
    4. 'print' → logprob: -10.875310897827148
    5. '
' → logprob: -11.250310897827148
    6. ' print' → logprob: -11.500310897827148
    7. '    
' → logprob: -12.000310897827148
    8. ':' → logprob: -12.125310897827148
    9. ')' → logprob: -12.625310897827148
    10. ',' → logprob: -12.750310897827148

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20414948463439941
    2. ' print' → logprob: -1.7041494846343994
    3. '       ' → logprob: -5.95414924621582
    4. '   ' → logprob: -9.82914924621582
    5. '
' → logprob: -10.20414924621582
    6. '	print' → logprob: -11.07914924621582
    7. '(print' → logprob: -11.07914924621582
    8. '        
' → logprob: -11.70414924621582
    9. '.print' → logprob: -13.07914924621582
    10. '           ' → logprob: -13.70414924621582

Token 125: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -6.704273118884885e-07
    2. '_no' → logprob: -14.875000953674316
    3. '_' → logprob: -15.250000953674316
    4. 'Yes' → logprob: -17.875
    5. '("_' → logprob: -18.75
    6. '(' → logprob: -18.75
    7. '_y' → logprob: -19.125
    8. '_you' → logprob: -19.125
    9. ' _' → logprob: -19.375
    10. '"_' → logprob: -20.0

Token 126: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16022910177707672
    2. '()
' → logprob: -1.9102290868759155
    3. '   ' → logprob: -13.035228729248047
    4. '()

' → logprob: -13.660228729248047
    5. '()
' → logprob: -13.910228729248047
    6. '()`' → logprob: -15.535228729248047
    7. '()\' → logprob: -15.785228729248047
    8. ' ()' → logprob: -16.035228729248047
    9. '(' → logprob: -16.410228729248047
    10. '())' → logprob: -16.910228729248047

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042173630208708346
    2. ' else' → logprob: -8.000421524047852
    3. 'else' → logprob: -9.375421524047852
    4. '	else' → logprob: -14.125421524047852
    5. '    
' → logprob: -15.125421524047852
    6. '  ' → logprob: -16.25042152404785
    7. ' ' → logprob: -16.87542152404785
    8. '<|end|>' → logprob: -17.00042152404785
    9. '   ' → logprob: -17.00042152404785
    10. '       ' → logprob: -17.25042152404785

Token 128: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3786401152610779
    2. ' else' → logprob: -1.6286401748657227
    3. 'else' (adapté à ' else') → logprob: -2.1286401748657227
    4. '	else' → logprob: -11.878640174865723
    5. ' ' → logprob: -12.253640174865723
    6. '  ' → logprob: -14.378640174865723
    7. '_else' → logprob: -16.003639221191406
    8. '    ' → logprob: -16.503639221191406
    9. 'e' → logprob: -16.628639221191406
    10. '    
' → logprob: -16.878639221191406

Token 129: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06803081929683685
    2. ':' → logprob: -2.818030834197998
    3. '():' → logprob: -5.943030834197998
    4. ':
' → logprob: -6.568030834197998
    5. '()' → logprob: -6.693030834197998
    6. '():
' → logprob: -7.318030834197998
    7. '   ' → logprob: -10.81803035736084
    8. '()
' → logprob: -10.81803035736084
    9. ' :' → logprob: -11.06803035736084
    10. '      ' → logprob: -11.56803035736084

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.88418151892256e-05
    2. 'print' → logprob: -10.125059127807617
    3. ' print' → logprob: -11.375059127807617
    4. '   ' → logprob: -12.000059127807617
    5. '      ' → logprob: -14.750059127807617
    6. '     ' → logprob: -15.250059127807617
    7. '           ' → logprob: -16.375059127807617
    8. '(print' → logprob: -16.875059127807617
    9. '	   ' → logprob: -17.000059127807617
    10. '    ' → logprob: -17.375059127807617

Token 131: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02989094704389572
    2. ' print' → logprob: -3.529891014099121
    3. '       ' → logprob: -8.904891014099121
    4. '   ' → logprob: -12.654891014099121
    5. '(print' → logprob: -14.529891014099121
    6. '	print' → logprob: -14.904891014099121
    7. '.print' → logprob: -14.904891014099121
    8. ' ' → logprob: -15.529891014099121
    9. '_print' → logprob: -16.154890060424805
    10. '           ' → logprob: -17.279890060424805

Token 132: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.500000953674316
    3. '_n' → logprob: -15.250000953674316
    4. 'no' → logprob: -16.875
    5. 'No' → logprob: -17.375
    6. '"_' → logprob: -17.625
    7. '```' → logprob: -18.0
    8. '("_' → logprob: -18.0
    9. ' _' → logprob: -18.125
    10. '_No' → logprob: -18.375

Token 133: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022613419219851494
    2. '()
' → logprob: -3.897613525390625
    3. '()

' → logprob: -6.397613525390625
    4. '()\' → logprob: -8.397613525390625
    5. '(' → logprob: -9.022613525390625
    6. '(
' → logprob: -10.897613525390625
    7. 'def' → logprob: -11.022613525390625
    8. '()


' → logprob: -12.522613525390625
    9. '()`' → logprob: -12.647613525390625
    10. 'n' → logprob: -12.897613525390625

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026108557358384132
    2. 'div' → logprob: -6.627610683441162
    3. 'n' → logprob: -7.002610683441162
    4. 'if' → logprob: -8.37761116027832
    5. 's' → logprob: -8.87761116027832
    6. 'input' → logprob: -13.12761116027832
    7. 'd' → logprob: -13.75261116027832
    8. '#' → logprob: -15.12761116027832
    9. ' def' → logprob: -15.12761116027832
    10. 'number' → logprob: -15.12761116027832

Token 135: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16022644937038422
    2. ' main' → logprob: -1.9102264642715454
    3. 'process' → logprob: -14.035226821899414
    4. 'def' → logprob: -14.285226821899414
    5. '_main' → logprob: -14.910226821899414
    6. 'run' → logprob: -15.035226821899414
    7. 'solve' → logprob: -16.410226821899414
    8. ' process' → logprob: -16.535226821899414
    9. '	main' → logprob: -16.785226821899414
    10. ' run' → logprob: -16.910226821899414

Token 136: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.822646693966817e-06
    2. '():
' → logprob: -12.250007629394531
    3. ' ():' → logprob: -13.000007629394531
    4. '()' → logprob: -14.250007629394531
    5. '(' → logprob: -17.87500762939453
    6. '():
' → logprob: -18.25000762939453
    7. '(":' → logprob: -19.87500762939453
    8. '()>' → logprob: -20.12500762939453
    9. '_' → logprob: -20.25000762939453
    10. '(:' → logprob: -20.62500762939453

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04560829699039459
    2. ' s' → logprob: -3.2956082820892334
    3. 's' → logprob: -5.5456085205078125
    4. ' input' → logprob: -6.2956085205078125
    5. 'input' → logprob: -7.0456085205078125
    6. ' n' → logprob: -8.045608520507812
    7. 'n' → logprob: -8.045608520507812
    8. '    
' → logprob: -9.170608520507812
    9. '
' → logprob: -9.795608520507812
    10. ' user' → logprob: -9.920608520507812

Token 138: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.07078097760677338
    2. ' s' → logprob: -2.8207809925079346
    3. '   ' → logprob: -5.3207807540893555
    4. 'input' → logprob: -6.5707807540893555
    5. 'n' → logprob: -7.0707807540893555
    6. 'user' → logprob: -7.4457807540893555
    7. ' user' → logprob: -7.8207807540893555
    8. ' input' → logprob: -8.195780754089355
    9. ' raw' → logprob: -9.070780754089355
    10. 'raw' → logprob: -9.195780754089355

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020556366071105003
    2. '=' → logprob: -3.8955564498901367
    3. '=input' → logprob: -11.770556449890137
    4. ' ' → logprob: -12.895556449890137
    5. ' =
' → logprob: -14.020556449890137
    6. ')' → logprob: -14.020556449890137
    7. '_input' → logprob: -14.520556449890137
    8. '_' → logprob: -14.645556449890137
    9. ' =)' → logprob: -14.645556449890137
    10. '   ' → logprob: -14.895556449890137

Token 140: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12692853808403015
    2. ' get' → logprob: -2.1269285678863525
    3. '	get' → logprob: -15.501928329467773
    4. '   ' → logprob: -16.126928329467773
    5. '(get' → logprob: -16.251928329467773
    6. 'input' → logprob: -17.001928329467773
    7. ' ' → logprob: -17.126928329467773
    8. ' input' → logprob: -17.251928329467773
    9. '  ' → logprob: -17.376928329467773
    10. '_get' → logprob: -18.001928329467773

Token 141: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -11.875007629394531
    3. '_in' → logprob: -15.875007629394531
    4. '_inputs' → logprob: -16.25000762939453
    5. '_output' → logprob: -16.87500762939453
    6. 'input' → logprob: -17.25000762939453
    7. '_Input' → logprob: -17.25000762939453
    8. '_line' → logprob: -17.50000762939453
    9. ' _' → logprob: -17.75000762939453
    10. '_user' → logprob: -18.00000762939453

Token 142: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. '()
' → logprob: -11.500011444091797
    3. '()

' → logprob: -14.375011444091797
    4. ' ()' → logprob: -15.375011444091797
    5. '()`' → logprob: -15.625011444091797
    6. '()"' → logprob: -16.000011444091797
    7. '()\' → logprob: -16.250011444091797
    8. '().' → logprob: -16.500011444091797
    9. '();' → logprob: -17.000011444091797
    10. '(' → logprob: -17.125011444091797

Token 143: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8346299529075623
    2. '
' → logprob: -1.209630012512207
    3. '   ' → logprob: -1.709630012512207
    4. ' n' → logprob: -2.584630012512207
    5. ' 
' → logprob: -5.584630012512207
    6. ' ' → logprob: -5.709630012512207
    7. '    
' → logprob: -7.084630012512207
    8. 'num' → logprob: -7.334630012512207
    9. '    ' → logprob: -7.584630012512207
    10. '	n' → logprob: -8.084630012512207

Token 144: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.008137094788253307
    2. 'num' → logprob: -5.258137226104736
    3. 'i' → logprob: -6.258137226104736
    4. '   ' → logprob: -8.133136749267578
    5. 'number' → logprob: -8.258136749267578
    6. 'int' → logprob: -8.508136749267578
    7. ' n' → logprob: -9.008136749267578
    8. 'nums' → logprob: -10.008136749267578
    9. 'numbers' → logprob: -11.008136749267578
    10. 'lst' → logprob: -11.758136749267578

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168446883559227
    2. '=' → logprob: -4.2641682624816895
    3. '=int' → logprob: -13.264168739318848
    4. '_' → logprob: -13.389168739318848
    5. ' ' → logprob: -13.764168739318848
    6. '_int' → logprob: -16.01416778564453
    7. 's' → logprob: -16.01416778564453
    8. '   ' → logprob: -16.26416778564453
    9. '  ' → logprob: -16.38916778564453
    10. 'int' → logprob: -16.76416778564453

Token 146: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.048835575580596924
    2. 'convert' → logprob: -3.048835515975952
    3. ' int' → logprob: -8.548835754394531
    4. 'int' → logprob: -9.923835754394531
    5. '(convert' → logprob: -13.298835754394531
    6. '_convert' → logprob: -13.548835754394531
    7. '   ' → logprob: -13.673835754394531
    8. ' char' → logprob: -15.298835754394531
    9. 'char' → logprob: -15.423835754394531
    10. '.convert' → logprob: -15.548835754394531

Token 147: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.875003814697266
    3. '_s' → logprob: -14.000003814697266
    4. 's' → logprob: -14.125003814697266
    5. '_inputs' → logprob: -14.250003814697266
    6. '_output' → logprob: -14.625003814697266
    7. '_in' → logprob: -15.875003814697266
    8. '```' → logprob: -16.125003814697266
    9. 'input' → logprob: -16.875003814697266
    10. '
' → logprob: -17.500003814697266

Token 148: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. '_input' → logprob: -14.500000953674316
    3. '_t' → logprob: -17.25
    4. 'to' → logprob: -18.0
    5. '_' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. ' _' → logprob: -19.875
    8. '_into' → logprob: -20.25
    9. 't' → logprob: -20.375
    10. '_from' → logprob: -20.625

Token 149: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0019318510312587023
    2. 'int' → logprob: -6.251931667327881
    3. ' int' → logprob: -13.126932144165039
    4. '_str' → logprob: -13.876932144165039
    5. 'nt' → logprob: -16.12693214416504
    6. '_in' → logprob: -16.25193214416504
    7. 'Int' → logprob: -16.87693214416504
    8. ' _' → logprob: -17.75193214416504
    9. '_' → logprob: -18.00193214416504
    10. 't' → logprob: -18.12693214416504

Token 150: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00013405199570115656
    2. '(' → logprob: -9.000134468078613
    3. '(n' → logprob: -11.750134468078613
    4. ' (' → logprob: -12.875134468078613
    5. 's' → logprob: -18.500133514404297
    6. '(
' → logprob: -19.250133514404297
    7. '(f' → logprob: -19.250133514404297
    8. '(S' → logprob: -19.375133514404297
    9. '('' → logprob: -19.500133514404297
    10. '("("' → logprob: -19.625133514404297

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048623472452163696
    2. ')
' → logprob: -3.048623561859131
    3. ')
' → logprob: -10.548623085021973
    4. ' )' → logprob: -12.548623085021973
    5. ')

' → logprob: -12.673623085021973
    6. ' )
' → logprob: -13.798623085021973
    7. '   ' → logprob: -14.423623085021973
    8. '))' → logprob: -14.548623085021973
    9. ')n' → logprob: -15.548623085021973
    10. ' ' → logprob: -15.673623085021973

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005716301035135984
    2. 'div' → logprob: -5.630716323852539
    3. 'd' → logprob: -7.505716323852539
    4. ' divisor' → logprob: -8.005716323852539
    5. ' if' → logprob: -8.755716323852539
    6. 'if' → logprob: -8.880716323852539
    7. '    
' → logprob: -9.005716323852539
    8. 'def' → logprob: -9.130716323852539
    9. '
' → logprob: -9.130716323852539
    10. 'n' → logprob: -9.255716323852539

Token 153: ' a' (ID: 261)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.05935851112008095
    2. 'dec' → logprob: -3.059358596801758
    3. 'if' → logprob: -5.309358596801758
    4. 'result' → logprob: -6.059358596801758
    5. 'd' → logprob: -7.559358596801758
    6. ' divisor' → logprob: -7.559358596801758
    7. '   ' → logprob: -7.684358596801758
    8. 'm' → logprob: -7.934358596801758
    9. 'is' → logprob: -8.559358596801758
    10. 'n' → logprob: -8.559358596801758

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2475762516260147
    2. '_list' → logprob: -1.6225762367248535
    3. '_chars' → logprob: -5.1225762367248535
    4. '=' → logprob: -5.2475762367248535
    5. '_str' → logprob: -5.3725762367248535
    6. 'rray' → logprob: -6.7475762367248535
    7. '_lst' → logprob: -7.1225762367248535
    8. '_' → logprob: -7.3725762367248535
    9. '_digits' → logprob: -7.4975762367248535
    10. 'rr' → logprob: -7.4975762367248535

Token 155: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08598092198371887
    2. 'int' → logprob: -3.0859808921813965
    3. ' str' → logprob: -3.5859808921813965
    4. 'char' → logprob: -5.5859808921813965
    5. 's' → logprob: -6.2109808921813965
    6. ' int' → logprob: -6.5859808921813965
    7. 'sum' → logprob: -7.3359808921813965
    8. 'n' → logprob: -7.9609808921813965
    9. '[' → logprob: -9.085981369018555
    10. '[]' → logprob: -9.210981369018555

Token 156: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00032879042555578053
    2. '(n' → logprob: -9.50032901763916
    3. '(s' → logprob: -9.75032901763916
    4. '(str' → logprob: -10.00032901763916
    5. '(a' → logprob: -10.37532901763916
    6. 'a' → logprob: -10.37532901763916
    7. 'to' → logprob: -10.62532901763916
    8. 's' → logprob: -10.75032901763916
    9. '_list' → logprob: -11.75032901763916
    10. 'tolist' → logprob: -12.00032901763916

Token 157: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0007148159202188253
    2. 'str' → logprob: -7.2507147789001465
    3. '_s' → logprob: -13.125715255737305
    4. 's' → logprob: -13.125715255737305
    5. '_' → logprob: -14.375715255737305
    6. '_st' → logprob: -15.750715255737305
    7. ' str' → logprob: -16.125715255737305
    8. 'a' → logprob: -16.750715255737305
    9. ' _' → logprob: -18.125715255737305
    10. 'r' → logprob: -18.125715255737305

Token 158: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019511326681822538
    2. '(' → logprob: -6.251951217651367
    3. '(s' → logprob: -10.876951217651367
    4. ' (' → logprob: -13.626951217651367
    5. '((' → logprob: -14.126951217651367
    6. '(a' → logprob: -14.126951217651367
    7. '(sum' → logprob: -14.501951217651367
    8. '("("' → logprob: -16.126951217651367
    9. '('' → logprob: -16.751951217651367
    10. '(len' → logprob: -16.751951217651367

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09393981844186783
    2. '())' → logprob: -2.468939781188965
    3. '()' → logprob: -5.468939781188965
    4. ' )' → logprob: -7.843939781188965
    5. ')
' → logprob: -8.843939781188965
    6. '())
' → logprob: -9.218939781188965
    7. ' ())' → logprob: -10.218939781188965
    8. '(' → logprob: -10.343939781188965
    9. '))' → logprob: -11.593939781188965
    10. '(n' → logprob: -11.843939781188965

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00746121583506465
    2. 'b' → logprob: -5.507461071014404
    3. '    
' → logprob: -6.382461071014404
    4. '
' → logprob: -7.507461071014404
    5. 'a' → logprob: -8.257461547851562
    6. '[' → logprob: -9.257461547851562
    7. ' ' → logprob: -9.507461547851562
    8. ' b' → logprob: -9.632461547851562
    9. '_list' → logprob: -9.757461547851562
    10. ',' → logprob: -9.882461547851562

Token 161: ' char' (ID: 1826)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6580476760864258
    2. 'lst' → logprob: -1.5330476760864258
    3. 'l' → logprob: -1.7830476760864258
    4. 'char' (adapté à ' char') → logprob: -2.783047676086426
    5. ' lst' → logprob: -4.408047676086426
    6. 'c' → logprob: -4.533047676086426
    7. '   ' → logprob: -5.158047676086426
    8. 'chars' → logprob: -5.658047676086426
    9. ' char' → logprob: -6.783047676086426
    10. ' l' → logprob: -6.908047676086426

Token 162: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.01597219705581665
    2. '_a' → logprob: -4.640972137451172
    3. '_' → logprob: -5.140972137451172
    4. '_lst' → logprob: -9.390972137451172
    5. ' _' → logprob: -9.640972137451172
    6. 's' → logprob: -9.765972137451172
    7. '_l' → logprob: -10.140972137451172
    8. 'a' → logprob: -10.515972137451172
    9. '_s' → logprob: -11.265972137451172
    10. '_li' → logprob: -11.265972137451172

Token 163: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40028703212738037
    2. '=' → logprob: -1.5252870321273804
    3. ' =' → logprob: -2.40028715133667
    4. '_to' → logprob: -4.40028715133667
    5. '_a' → logprob: -5.40028715133667
    6. '_=' → logprob: -5.52528715133667
    7. 's' → logprob: -7.52528715133667
    8. 'a' → logprob: -8.400286674499512
    9. '=_' → logprob: -10.775286674499512
    10. 'to' → logprob: -11.650286674499512

Token 164: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12702102959156036
    2. ' str' → logprob: -2.127021074295044
    3. 'a' → logprob: -9.377020835876465
    4. ' a' → logprob: -12.502020835876465
    5. 'list' → logprob: -13.002020835876465
    6. '(str' → logprob: -14.377020835876465
    7. 'int' → logprob: -14.377020835876465
    8. 's' → logprob: -15.002020835876465
    9. ' list' → logprob: -15.127020835876465
    10. '   ' → logprob: -15.377020835876465

Token 165: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.842555426876061e-06
    2. '_a' → logprob: -12.375004768371582
    3. '(a' → logprob: -15.750004768371582
    4. 'a' → logprob: -16.0000057220459
    5. ''_' → logprob: -16.0000057220459
    6. '"_' → logprob: -16.6250057220459
    7. '_' → logprob: -16.8750057220459
    8. ' _' → logprob: -17.3750057220459
    9. '```' → logprob: -17.8750057220459
    10. 'to' → logprob: -18.0000057220459

Token 166: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07921043038368225
    2. 'list' → logprob: -2.5792105197906494
    3. 'ist' → logprob: -8.70421028137207
    4. 'a' → logprob: -9.07921028137207
    5. '(a' → logprob: -10.82921028137207
    6. 'List' → logprob: -11.82921028137207
    7. 'lst' → logprob: -12.20421028137207
    8. ' list' → logprob: -13.07921028137207
    9. 's' → logprob: -13.32921028137207
    10. 'l' → logprob: -13.45421028137207

Token 167: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.1080467781284824e-05
    2. '(' → logprob: -10.500041007995605
    3. '(s' → logprob: -11.250041007995605
    4. ' (' → logprob: -14.625041007995605
    5. '(
' → logprob: -17.875041961669922
    6. 'a' → logprob: -17.875041961669922
    7. '(n' → logprob: -19.000041961669922
    8. '('' → logprob: -19.375041961669922
    9. ' ' → logprob: -20.000041961669922
    10. '((' → logprob: -20.250041961669922

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. ')
' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. ' )' → logprob: -16.250022888183594
    5. ')a' → logprob: -16.375022888183594
    6. '')' → logprob: -16.750022888183594
    7. '),' → logprob: -17.000022888183594
    8. ')

' → logprob: -17.000022888183594
    9. '[' → logprob: -17.125022888183594
    10. '(' → logprob: -17.250022888183594

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2314530462026596
    2. 'int' → logprob: -1.7314530611038208
    3. ' int' → logprob: -3.6064529418945312
    4. ' ' → logprob: -7.231452941894531
    5. 'num' → logprob: -7.231452941894531
    6. ' num' → logprob: -8.231452941894531
    7. '    
' → logprob: -9.356452941894531
    8. 'n' → logprob: -9.481452941894531
    9. '<int' → logprob: -9.481452941894531
    10. '[int' → logprob: -9.481452941894531

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0018170286202803254
    2. ' int' → logprob: -6.501817226409912
    3. 'num' → logprob: -8.126816749572754
    4. '   ' → logprob: -12.376816749572754
    5. ' ' → logprob: -12.501816749572754
    6. '<int' → logprob: -13.126816749572754
    7. 'number' → logprob: -13.376816749572754
    8. ' num' → logprob: -13.626816749572754
    9. 'ints' → logprob: -13.876816749572754
    10. '_int' → logprob: -14.001816749572754

Token 171: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008594118990004063
    2. '_' → logprob: -7.125859260559082
    3. ' _' → logprob: -11.000859260559082
    4. '_lst' → logprob: -11.125859260559082
    5. '_lists' → logprob: -11.375859260559082
    6. '_char' → logprob: -12.750859260559082
    7. '_to' → logprob: -13.375859260559082
    8. '_List' → logprob: -14.250859260559082
    9. '_li' → logprob: -14.250859260559082
    10. 'List' → logprob: -14.500859260559082

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697042524814606
    2. '=' → logprob: -2.1269705295562744
    3. '_' → logprob: -10.376970291137695
    4. '(' → logprob: -11.876970291137695
    5. '_=' → logprob: -13.501970291137695
    6. '＝' → logprob: -13.876970291137695
    7. '=_' → logprob: -14.251970291137695
    8. ' =)' → logprob: -14.876970291137695
    9. 's' → logprob: -15.251970291137695
    10. ')' → logprob: -15.876970291137695

Token 173: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.3132651150226593
    2. 'char' → logprob: -1.313265085220337
    3. '(char' → logprob: -12.688264846801758
    4. '	char' → logprob: -16.313264846801758
    5. '_char' → logprob: -16.938264846801758
    6. '<char' → logprob: -17.438264846801758
    7. ' ' → logprob: -17.938264846801758
    8. ',char' → logprob: -18.063264846801758
    9. ' ' → logprob: -18.438264846801758
    10. '   ' → logprob: -18.813264846801758

Token 174: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.6405310816480778e-05
    2. 'ar' → logprob: -11.250016212463379
    3. '_to' → logprob: -14.375016212463379
    4. 'ist' → logprob: -14.875016212463379
    5. '_lists' → logprob: -15.000016212463379
    6. 'acter' → logprob: -15.250016212463379
    7. '_LIST' → logprob: -15.250016212463379
    8. 'List' → logprob: -15.375016212463379
    9. '_lst' → logprob: -15.625016212463379
    10. 'cter' → logprob: -16.000017166137695

Token 175: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.750001907348633
    3. '_t' → logprob: -14.750001907348633
    4. 'to' → logprob: -14.875001907348633
    5. ' _' → logprob: -15.500001907348633
    6. 'To' → logprob: -16.500001907348633
    7. ''_' → logprob: -16.750001907348633
    8. '_TO' → logprob: -17.125001907348633
    9. '__' → logprob: -17.250001907348633
    10. '"_' → logprob: -17.750001907348633

Token 176: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16027377545833588
    2. '_int' → logprob: -1.910273790359497
    3. ' int' → logprob: -10.410273551940918
    4. '_list' → logprob: -11.660273551940918
    5. 'char' → logprob: -12.285273551940918
    6. '_char' → logprob: -12.785273551940918
    7. '(int' → logprob: -13.410273551940918
    8. '[int' → logprob: -14.035273551940918
    9. '<int' → logprob: -14.660273551940918
    10. '_in' → logprob: -15.410273551940918

Token 177: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.961759259458631e-06
    2. 'list' → logprob: -12.500004768371582
    3. '_' → logprob: -14.125004768371582
    4. 'List' → logprob: -15.000004768371582
    5. '_lst' → logprob: -16.7500057220459
    6. '_lists' → logprob: -17.1250057220459
    7. '_LIST' → logprob: -17.7500057220459
    8. 's' → logprob: -18.2500057220459
    9. '_List' → logprob: -18.2500057220459
    10. '_l' → logprob: -18.3750057220459

Token 178: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.0024781543761491776
    2. '(' → logprob: -6.002478122711182
    3. ' (' → logprob: -14.12747859954834
    4. '(
' → logprob: -14.62747859954834
    5. '(int' → logprob: -14.87747859954834
    6. 'char' → logprob: -15.50247859954834
    7. '(a' → logprob: -15.87747859954834
    8. ',char' → logprob: -15.87747859954834
    9. '(character' → logprob: -16.377477645874023
    10. '((' → logprob: -16.627477645874023

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.292907877039397e-06
    2. 'ist' → logprob: -13.00000286102295
    3. 'list' → logprob: -14.25000286102295
    4. 'List' → logprob: -15.62500286102295
    5. '_l' → logprob: -17.125003814697266
    6. '_' → logprob: -17.500003814697266
    7. '_LIST' → logprob: -17.625003814697266
    8. '_List' → logprob: -18.500003814697266
    9. ')' → logprob: -18.625003814697266
    10. '-list' → logprob: -19.250003814697266

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2524021157296374e-05
    2. ')
' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.375052452087402
    4. ' )' → logprob: -15.000052452087402
    5. ' ' → logprob: -16.75005340576172
    6. '))' → logprob: -17.25005340576172
    7. ')n' → logprob: -18.12505340576172
    8. ')

' → logprob: -18.25005340576172
    9. ')
' → logprob: -18.37505340576172
    10. '()' → logprob: -18.50005340576172

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20302778482437134
    2. '
' → logprob: -1.8280277252197266
    3. '    
' → logprob: -4.453027725219727
    4. 'sum' → logprob: -5.703027725219727
    5. 'total' → logprob: -6.578027725219727
    6. ' sum' → logprob: -6.828027725219727
    7. '  
' → logprob: -6.953027725219727
    8. ' 
' → logprob: -7.078027725219727
    9. ' total' → logprob: -7.203027725219727
    10. 'n' → logprob: -7.328027725219727

Token 182: ' b' (ID: 287)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03472330793738365
    2. 'result' → logprob: -3.5347232818603516
    3. 's' → logprob: -6.159723281860352
    4. ' total' → logprob: -6.409723281860352
    5. 'sum' → logprob: -7.159723281860352
    6. '   ' → logprob: -8.284723281860352
    7. 'sm' → logprob: -9.784723281860352
    8. ' result' → logprob: -10.284723281860352
    9. 'summ' → logprob: -10.784723281860352
    10. 't' → logprob: -11.409723281860352

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0056639062240719795
    2. '=' → logprob: -5.755663871765137
    3. '_' → logprob: -6.380663871765137
    4. '_sum' → logprob: -7.255663871765137
    5. '   ' → logprob: -10.255663871765137
    6. ' ' → logprob: -10.755663871765137
    7. '=sum' → logprob: -11.630663871765137
    8. 'sum' → logprob: -12.130663871765137
    9. ' _' → logprob: -12.755663871765137
    10. '  ' → logprob: -13.130663871765137

Token 184: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20142170786857605
    2. ' sum' → logprob: -1.7014217376708984
    3. '   ' → logprob: -12.451421737670898
    4. ' ' → logprob: -13.076421737670898
    5. '  ' → logprob: -13.951421737670898
    6. '(sum' → logprob: -14.451421737670898
    7. '	sum' → logprob: -14.576421737670898
    8. '
' → logprob: -15.326421737670898
    9. '    ' → logprob: -16.8264217376709
    10. '=sum' → logprob: -17.0764217376709

Token 185: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.625017166137695
    3. 'of' → logprob: -11.750017166137695
    4. '(' → logprob: -15.750017166137695
    5. ' of' → logprob: -17.625017166137695
    6. '(int' → logprob: -17.750017166137695
    7. '_OF' → logprob: -17.875017166137695
    8. 'Of' → logprob: -18.250017166137695
    9. '(_' → logprob: -18.875017166137695
    10. '(of' → logprob: -19.000017166137695

Token 186: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.12054745107889175
    2. 'int' → logprob: -2.8705475330352783
    3. 'list' → logprob: -2.8705475330352783
    4. 'List' → logprob: -8.8705472946167
    5. '(int' → logprob: -9.4955472946167
    6. 'lst' → logprob: -11.8705472946167
    7. 'ist' → logprob: -13.1205472946167
    8. '[int' → logprob: -13.6205472946167
    9. ' list' → logprob: -14.1205472946167
    10. 'b' → logprob: -14.3705472946167

Token 187: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005240156780928373
    2. '(' → logprob: -5.255239963531494
    3. '<int' → logprob: -13.630240440368652
    4. ' (' → logprob: -13.880240440368652
    5. '<|end|>' → logprob: -14.255240440368652
    6. 'int' → logprob: -14.380240440368652
    7. '(
' → logprob: -14.505240440368652
    8. '(a' → logprob: -14.755240440368652
    9. '[int' → logprob: -15.005240440368652
    10. '=int' → logprob: -15.755240440368652

Token 188: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'list' → logprob: -16.5
    3. '(_' → logprob: -16.75
    4. ')' → logprob: -17.25
    5. '(int' → logprob: -17.5
    6. '_lst' → logprob: -17.5
    7. ')_' → logprob: -17.875
    8. 'List' → logprob: -18.125
    9. '(list' → logprob: -18.25
    10. '_' → logprob: -18.375

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07813266664743423
    2. '(n' → logprob: -2.7031326293945312
    3. '(' → logprob: -5.578132629394531
    4. '   ' → logprob: -5.828132629394531
    5. '(a' → logprob: -7.453132629394531
    6. '(b' → logprob: -8.078132629394531
    7. ',' → logprob: -8.328132629394531
    8. '(s' → logprob: -9.078132629394531
    9. ' ' → logprob: -9.328132629394531
    10. ')
' → logprob: -10.953132629394531

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026735646650195122
    2. 'dec' → logprob: -4.026735782623291
    3. 'div' → logprob: -4.901735782623291
    4. '    
' → logprob: -8.276735305786133
    5. ' div' → logprob: -8.401735305786133
    6. ' if' → logprob: -9.026735305786133
    7. 'if' → logprob: -9.026735305786133
    8. ' decide' → logprob: -9.276735305786133
    9. '
' → logprob: -9.651735305786133
    10. '(div' → logprob: -9.776735305786133

Token 191: ' decide' (ID: 13001)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.03911300376057625
    2. '   ' → logprob: -3.2891130447387695
    3. 'div' → logprob: -6.9141130447387695
    4. ' decide' → logprob: -10.03911304473877
    5. '  ' → logprob: -11.41411304473877
    6. '
' → logprob: -11.91411304473877
    7. '    
' → logprob: -12.53911304473877
    8. ' dec' → logprob: -12.66411304473877
    9. ' ' → logprob: -12.91411304473877
    10. 'if' → logprob: -13.16411304473877

Token 192: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.9361264946837764e-07
    2. '_an' → logprob: -16.625
    3. '_' → logprob: -17.5
    4. '_AND' → logprob: -19.25
    5. '_a' → logprob: -19.375
    6. ' _' → logprob: -20.0
    7. 'and' → logprob: -21.5
    8. '```' → logprob: -21.5
    9. '_or' → logprob: -22.125
    10. '__' → logprob: -22.5

Token 193: '_print' (ID: 31509)
  Prédit: '_print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_print' → logprob: -0.251930832862854
    2. 'print' → logprob: -1.501930832862854
    3. 'Print' → logprob: -14.376931190490723
    4. ' print' → logprob: -14.501931190490723
    5. '(print' → logprob: -16.001930236816406
    6. '```' → logprob: -16.751930236816406
    7. 'pr' → logprob: -16.876930236816406
    8. '	print' → logprob: -16.876930236816406
    9. '_PRINT' → logprob: -17.251930236816406
    10. 'int' → logprob: -17.501930236816406

Token 194: '(n' (ID: 2406)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.390986829996109
    2. '(n' → logprob: -1.1409868001937866
    3. '(' → logprob: -5.515986919403076
    4. ' (' → logprob: -9.640986442565918
    5. '(s' → logprob: -11.515986442565918
    6. 'b' → logprob: -12.640986442565918
    7. '(
' → logprob: -13.015986442565918
    8. '(a' → logprob: -13.015986442565918
    9. '((' → logprob: -13.640986442565918
    10. ' ' → logprob: -14.015986442565918

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009378718212246895
    2. ',b' → logprob: -5.259378910064697
    3. ' ,' → logprob: -5.759378910064697
    4. 'b' → logprob: -7.634378910064697
    5. '6' → logprob: -9.134378433227539
    6. '7' → logprob: -9.509378433227539
    7. ' b' → logprob: -10.134378433227539
    8. '2' → logprob: -10.259378433227539
    9. ' ' → logprob: -10.384378433227539
    10. '10' → logprob: -10.384378433227539

Token 196: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861468818038702
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.633615493774414
    4. '2' → logprob: -16.758615493774414
    5. ' ' → logprob: -16.883615493774414
    6. ')b' → logprob: -17.383615493774414
    7. '6' → logprob: -17.508615493774414
    8. '7' → logprob: -18.133615493774414
    9. '3' → logprob: -18.258615493774414
    10. '9' → logprob: -18.383615493774414

Token 197: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.125015258789062
    3. ')

' → logprob: -14.875015258789062
    4. ' )' → logprob: -16.250015258789062
    5. '))' → logprob: -18.000015258789062
    6. ')`' → logprob: -18.000015258789062
    7. '())' → logprob: -18.875015258789062
    8. ')n' → logprob: -19.125015258789062
    9. ')#' → logprob: -19.250015258789062
    10. '**' → logprob: -19.375015258789062

Token 198: 'main' (ID: 7731)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8047192692756653
    2. '
' → logprob: -0.9297192692756653
    3. 'if' → logprob: -1.9297192096710205
    4. '<|end|>' → logprob: -5.9297194480896
    5. 'n' → logprob: -6.0547194480896
    6. '\' → logprob: -6.0547194480896
    7. '#' → logprob: -6.6797194480896
    8. '' → logprob: -6.8047194480896
    9. '```' → logprob: -7.0547194480896
    10. '  
' → logprob: -7.1797194480896

Token 199: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023270756006240845
    2. '(' → logprob: -3.773270845413208
    3. '()
' → logprob: -11.773270606994629
    4. '();' → logprob: -11.898270606994629
    5. '(
' → logprob: -12.648270606994629
    6. '()`' → logprob: -13.398270606994629
    7. '()">' → logprob: -13.898270606994629
    8. '()

' → logprob: -14.148270606994629
    9. ' ()' → logprob: -14.523270606994629
    10. '(

' → logprob: -14.648270606994629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 197
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 172
Précision stricte (1ère position): 47.21%
Précision adaptée (1ère position): 51.78%
Précision (top 10): 87.31%
================================================================================
