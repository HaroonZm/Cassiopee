================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
setattr(sys, 'setrecursionlimit', int(10e6+7-0)) # why not goldilocks value?
from itertools import accumulate as accl, combinations as combos, permutations as perms # bizzare aliasing
from math import factorial as _facty
# Overly verbose docstring in a lambda! Unusual, but possible if you know how
def factorization(N):
    '''
    Break number into powers of primes as list of pairs.
    '''
    junk, pwr, p = [], 0, 2
    while p*p <= N:
        while N%p==0:
            N//=p; pwr+=1
        if pwr: junk.append((p, pwr))
        p+=1; pwr=0
    if N!=1: junk.append((N,1))
    return junk

def combos_count(big, small): # 'big' and 'small', so friendly
    # horrifically in-place numerator modification
    if big-small < small: small = big-small
    if small==0: return 1
    if small==1: return big
    top = [big-small+k+1 for k in range(small)]
    bot = [k+1 for k in range(small)]
    for idx in range(2,small+1):
        pt = bot[idx-1]
        if pt>1:
            off = (big-small)%idx
            for jj in range(idx-1,small,idx):
                top[jj-off] /= pt
                bot[jj] /= pt
    rv=1
    for q in top:
        if q>1: rv *= int(q)
    return rv

def combos_rep(big, small):
    # because words should feel fun
    return combos_count(big+small-1, small)

from collections import deque as deq, Counter as C  
from heapq import heapify as heapstart, heappop as eat, heappush as spit, heappushpop as gobble, heapreplace as chomp, nlargest as arriba, nsmallest as abajo
from copy import deepcopy as dpc, copy as cc
from operator import itemgetter as itg
from functools import reduce as squish
try: from math import gcd as ogcd
except ImportError: from fractions import gcd as ogcd
def full_gcd(nums):
    return squish(ogcd, nums)
lcmx = lambda a,b: (a*b)//ogcd(a,b)
def all_lcm(vals):
    return squish(lcmx, vals, 1)

HYPER = 10**18
MODNUM = 10**9+7
mp = lambda a, n, m=MODNUM: pow(a, n, m)
def invmod(x, m=MODNUM):
    return mp(x, m-2, m)
def inv_table(L, m=MODNUM):
    # making a whole table in a completely unorthodox way
    return [0,1] + [(inv_table(m%i,m)[-1]*(m-m//i)%m) for i in range(2,L+1)] if L>1 else ([0,1][:L+1] if L==1 else [1])
def factseq(L, m=MODNUM):
    # recursively? not efficient, but satisfying
    if L == 0: return [1]
    arr = [0]*(L+1)
    prod = 1
    for i in range(1, L+1):
        prod = prod*i%m
        arr[i] = prod
    return arr
def modcomb(N, K, flst=[], m=MODNUM):
    from math import factorial as FF
    if min(N,K)<0 or N<K: return 0
    if N==0 or K==0: return 1
    if len(flst) <= N:
        A,B,C = FF(N)%m, FF(K)%m, FF(N-K)%m
    else:
        A,B,C = flst[N], flst[K], flst[N-K]
    return (A * mp(B, m-2, m) * mp(C, m-2, m)) % m
def maa(a, b, p=MODNUM): return (a+b)%MODNUM
def mss(a, b, p=MODNUM): return (a-b)%p
def mmu(a, b, p=MODNUM): return (a%p)*(b%p)%p
def mdd(a, b, p=MODNUM): return mmu(a, mp(b,p-2,p), p)

# partial input hackery
_reader = sys.stdin.readline
def _r(): return _reader().strip()
rr = lambda: list(map(int, _r().split()))
rrt = lambda: tuple(map(int, _r().split()))
rmap = lambda: map(int, _r().split())

N = int(_r())
lst_of_tuple = [rrt() for _ in range(N)]
something = [(x, y, y-x) for x,y in lst_of_tuple]
something.sort(key=itg(1))
clock = 0
for x, y, dt in something:
    clock += x
    if clock > y:
        print("No")
        break
else:
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'set' (ID: 977)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: 'attr' (ID: 6035)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14169007539749146
    2. 'uptools' → logprob: -3.1416900157928467
    3. 'up' → logprob: -3.3916900157928467
    4. 'attr' → logprob: -3.7666900157928467
    5. 's' → logprob: -4.141690254211426
    6. '(' → logprob: -4.641690254211426
    7. 'a' → logprob: -6.391690254211426
    8. 'u' → logprob: -6.891690254211426
    9. '()' → logprob: -7.391690254211426
    10. 'upt' → logprob: -7.641690254211426

Token 5: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009560054168105125
    2. '(sys' → logprob: -7.125956058502197
    3. '(set' → logprob: -9.875955581665039
    4. '(
' → logprob: -9.875955581665039
    5. '(

' → logprob: -11.375955581665039
    6. '(import' → logprob: -12.000955581665039
    7. '(os' → logprob: -12.125955581665039
    8. '(System' → logprob: -12.375955581665039
    9. '(object' → logprob: -12.625955581665039
    10. '(open' → logprob: -13.000955581665039

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012904745526611805
    2. '.' → logprob: -7.251290321350098
    3. ' ,' → logprob: -8.501290321350098
    4. '.,' → logprob: -8.501290321350098
    5. ',module' → logprob: -10.126290321350098
    6. ')' → logprob: -10.251290321350098
    7. ',.' → logprob: -10.626290321350098
    8. ',set' → logprob: -10.876290321350098
    9. ',System' → logprob: -11.876290321350098
    10. '```' → logprob: -12.001290321350098

Token 7: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08693508058786392
    2. '"' → logprob: -3.586935043334961
    3. ''s' → logprob: -4.086935043334961
    4. ''import' → logprob: -4.461935043334961
    5. ' '__' → logprob: -4.961935043334961
    6. ' '' → logprob: -5.086935043334961
    7. ''ex' → logprob: -6.086935043334961
    8. ')' → logprob: -6.211935043334961
    9. ' "__' → logprob: -6.336935043334961
    10. ''name' → logprob: -6.836935043334961

Token 8: 'set' (ID: 977)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.9761643409729004
    2. 'path' → logprob: -1.3511643409729004
    3. 'modules' → logprob: -2.6011643409729004
    4. 'stdout' → logprob: -2.8511643409729004
    5. 'ps' → logprob: -2.9761643409729004
    6. '_path' → logprob: -3.1011643409729004
    7. 'version' → logprob: -3.1011643409729004
    8. '_' → logprob: -3.4761643409729004
    9. 'stdin' → logprob: -4.1011643409729
    10. 'stderr' → logprob: -4.8511643409729

Token 9: 'rec' (ID: 9285)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5551341772079468
    2. 'attr' → logprob: -1.4301341772079468
    3. 'trace' → logprob: -1.9301341772079468
    4. 'profile' → logprob: -4.805134296417236
    5. 'def' → logprob: -5.180134296417236
    6. '_' → logprob: -5.555134296417236
    7. 'attribute' → logprob: -5.930134296417236
    8. 'rec' → logprob: -6.055134296417236
    9. '_trace' → logprob: -6.055134296417236
    10. '_default' → logprob: -6.180134296417236

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0017979926196858287
    2. '_' → logprob: -6.501798152923584
    3. 'ursive' → logprob: -9.376797676086426
    4. '_limit' → logprob: -9.501797676086426
    5. 'ursor' → logprob: -10.126797676086426
    6. 'ur' → logprob: -11.126797676086426
    7. 'urs' → logprob: -11.251797676086426
    8. '_hook' → logprob: -11.501797676086426
    9. 'limit' → logprob: -11.626797676086426
    10. 'urse' → logprob: -11.876797676086426

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0007129086880013347
    2. '_limit' → logprob: -7.250712871551514
    3. 'lim' → logprob: -13.750713348388672
    4. 'depth' → logprob: -13.875713348388672
    5. ' limit' → logprob: -15.250713348388672
    6. '-limit' → logprob: -15.500713348388672
    7. 'limits' → logprob: -15.750713348388672
    8. 'Limit' → logprob: -15.875713348388672
    9. '_depth' → logprob: -16.625713348388672
    10. '_LIMIT' → logprob: -17.125713348388672

Token 12: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.9329953193664551
    2. '(' → logprob: -1.057995319366455
    3. ',' → logprob: -1.432995319366455
    4. '(',' → logprob: -4.807995319366455
    5. ''' → logprob: -5.807995319366455
    6. ')' → logprob: -5.932995319366455
    7. '(','' → logprob: -6.057995319366455
    8. '','' → logprob: -6.807995319366455
    9. '',(' → logprob: -7.182995319366455
    10. '('' → logprob: -7.432995319366455

Token 13: ' int' (ID: 677)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5408586263656616
    2. 'lambda' → logprob: -1.6658586263656616
    3. ' lambda' → logprob: -2.540858745574951
    4. ' ' → logprob: -2.915858745574951
    5. ')' → logprob: -3.415858745574951
    6. '999' → logprob: -4.415858745574951
    7. 'int' → logprob: -4.665858745574951
    8. '200' → logprob: -5.165858745574951
    9. 'sys' → logprob: -5.290858745574951
    10. '10' → logprob: -5.540858745574951

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04202935844659805
    2. '('' → logprob: -3.41702938079834
    3. ')' → logprob: -5.16702938079834
    4. '40' → logprob: -6.54202938079834
    5. '32' → logprob: -8.41702938079834
    6. ''' → logprob: -8.54202938079834
    7. ' (' → logprob: -8.66702938079834
    8. '("' → logprob: -9.41702938079834
    9. ' ' → logprob: -9.66702938079834
    10. '()' → logprob: -9.91702938079834

Token 15: '10' (ID: 702)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39543044567108154
    2. ')' → logprob: -2.020430564880371
    3. '100' → logprob: -3.020430564880371
    4. 'input' → logprob: -3.270430564880371
    5. ' ' → logprob: -3.520430564880371
    6. '(' → logprob: -3.645430564880371
    7. ' input' → logprob: -4.770430564880371
    8. '"' → logprob: -5.020430564880371
    9. '))' → logprob: -5.020430564880371
    10. '10' → logprob: -5.145430564880371

Token 16: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2644291818141937
    2. '000' → logprob: -1.8894292116165161
    3. '00' → logprob: -2.6394290924072266
    4. '(' → logprob: -5.389429092407227
    5. '**' → logprob: -5.764429092407227
    6. '6' → logprob: -7.139429092407227
    7. '2' → logprob: -8.389429092407227
    8. ' ' → logprob: -8.514429092407227
    9. ')' → logprob: -8.639429092407227
    10. '()' → logprob: -9.139429092407227

Token 17: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.23043401539325714
    2. '7' → logprob: -2.105433940887451
    3. '5' → logprob: -3.105433940887451
    4. '2' → logprob: -3.980433940887451
    5. '3' → logprob: -4.980433940887451
    6. '4' → logprob: -5.105433940887451
    7. ' ' → logprob: -5.605433940887451
    8. '1' → logprob: -5.980433940887451
    9. '0' → logprob: -7.355433940887451
    10. '+' → logprob: -8.10543441772461

Token 18: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133056163787842
    2. ')' → logprob: -1.3133056163787842
    3. ')))' → logprob: -10.688305854797363
    4. '0' → logprob: -11.938305854797363
    5. '(' → logprob: -13.188305854797363
    6. '),' → logprob: -13.188305854797363
    7. '))
' → logprob: -13.313305854797363
    8. ' ))' → logprob: -13.563305854797363
    9. ')
' → logprob: -13.813305854797363
    10. ' )' → logprob: -13.938305854797363

Token 19: '7' (ID: 22)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6416290402412415
    2. '1' → logprob: -0.8916290402412415
    3. ' ' → logprob: -3.5166289806365967
    4. '2' → logprob: -4.641629219055176
    5. '3' → logprob: -4.641629219055176
    6. '5' → logprob: -4.766629219055176
    7. '))' → logprob: -6.266629219055176
    8. '4' → logprob: -6.516629219055176
    9. '6' → logprob: -7.391629219055176
    10. '-' → logprob: -7.391629219055176

Token 20: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08897501975297928
    2. ')' → logprob: -2.463974952697754
    3. ')))' → logprob: -10.713974952697754
    4. ' ' → logprob: -12.838974952697754
    5. ' ))' → logprob: -12.838974952697754
    6. '))
' → logprob: -13.463974952697754
    7. '0' → logprob: -13.588974952697754
    8. '(' → logprob: -13.838974952697754
    9. ''))' → logprob: -14.338974952697754
    10. '),' → logprob: -14.338974952697754

Token 21: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34991616010665894
    2. '0' → logprob: -1.7249162197113037
    3. ' ' → logprob: -2.5999162197113037
    4. '7' → logprob: -4.724915981292725
    5. '10' → logprob: -4.974915981292725
    6. '.' → logprob: -5.599915981292725
    7. ' sys' → logprob: -5.599915981292725
    8. '2' → logprob: -5.724915981292725
    9. '3' → logprob: -5.849915981292725
    10. '))' → logprob: -5.974915981292725

Token 22: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1450134664773941
    2. ')' → logprob: -2.0200135707855225
    3. '1' → logprob: -6.520013332366943
    4. '.' → logprob: -8.145013809204102
    5. ')))' → logprob: -8.395013809204102
    6. ' ' → logprob: -9.770013809204102
    7. '0' → logprob: -9.770013809204102
    8. ''))' → logprob: -9.895013809204102
    9. ' ))' → logprob: -9.895013809204102
    10. '(' → logprob: -10.395013809204102

Token 23: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021136753261089325
    2. ')' → logprob: -4.02113676071167
    3. '(
' → logprob: -6.27113676071167
    4. '()' → logprob: -7.89613676071167
    5. '\n' → logprob: -8.271136283874512
    6. '\' → logprob: -8.771136283874512
    7. '' → logprob: -9.771136283874512
    8. '\(' → logprob: -9.896136283874512
    9. ' ' → logprob: -10.146136283874512
    10. '.' → logprob: -10.146136283874512

Token 24: ' why' (ID: 4436)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2051331251859665
    2. '\n' → logprob: -2.4551331996917725
    3. '
' → logprob: -3.3301331996917725
    4. '(' → logprob: -3.5801331996917725
    5. '\' → logprob: -4.455132961273193
    6. '()' → logprob: -5.205132961273193
    7. '.' → logprob: -5.330132961273193
    8. '' → logprob: -5.955132961273193
    9. ' )' → logprob: -6.080132961273193
    10. ')
' → logprob: -6.580132961273193

Token 25: ' not' (ID: 625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5984836220741272
    2. ')' → logprob: -0.8484836220741272
    3. '\' → logprob: -4.848483562469482
    4. '
' → logprob: -5.723483562469482
    5. '\n' → logprob: -5.723483562469482
    6. '(
' → logprob: -6.098483562469482
    7. '.' → logprob: -6.223483562469482
    8. ' (' → logprob: -7.098483562469482
    9. '' → logprob: -7.223483562469482
    10. ' ' → logprob: -7.223483562469482

Token 26: ' gold' (ID: 8568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12869367003440857
    2. ')' → logprob: -2.5036935806274414
    3. '(
' → logprob: -3.6286935806274414
    4. '
' → logprob: -5.378693580627441
    5. '\n' → logprob: -6.003693580627441
    6. '()' → logprob: -6.503693580627441
    7. '\' → logprob: -6.753693580627441
    8. '.' → logprob: -7.878693580627441
    9. ')
' → logprob: -7.878693580627441
    10. ' ' → logprob: -8.003693580627441

Token 27: 'il' (ID: 311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2873575985431671
    2. ')' → logprob: -1.5373575687408447
    3. '
' → logprob: -4.287357807159424
    4. '(
' → logprob: -4.662357807159424
    5. '\n' → logprob: -5.287357807159424
    6. '()' → logprob: -6.787357807159424
    7. '\' → logprob: -6.787357807159424
    8. '#' → logprob: -6.912357807159424
    9. '' → logprob: -7.412357807159424
    10. ')
' → logprob: -7.412357807159424

Token 28: 'ocks' (ID: 14622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08718028664588928
    2. '(' → logprob: -2.8371803760528564
    3. '\' → logprob: -5.712180137634277
    4. '_' → logprob: -5.712180137634277
    5. '(
' → logprob: -6.212180137634277
    6. '.' → logprob: -6.337180137634277
    7. '\n' → logprob: -6.337180137634277
    8. '' → logprob: -6.462180137634277
    9. '
' → logprob: -6.587180137634277
    10. '()' → logprob: -6.712180137634277

Token 29: ' value' (ID: 1432)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2854671776294708
    2. ')' → logprob: -2.1604671478271484
    3. '(
' → logprob: -2.9104671478271484
    4. '()' → logprob: -3.1604671478271484
    5. '
' → logprob: -3.9104671478271484
    6. '\n' → logprob: -5.410467147827148
    7. '()
' → logprob: -5.660467147827148
    8. '#' → logprob: -6.285467147827148
    9. '' → logprob: -6.410467147827148
    10. '\' → logprob: -6.785467147827148

Token 30: '?
' (ID: 3901)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1604226529598236
    2. ')' → logprob: -2.4104225635528564
    3. '(
' → logprob: -3.0354225635528564
    4. '()' → logprob: -5.2854228019714355
    5. '
' → logprob: -6.2854228019714355
    6. '\n' → logprob: -7.2854228019714355
    7. '(

' → logprob: -7.5354228019714355
    8. '#' → logprob: -7.6604228019714355
    9. '()
' → logprob: -7.9104228019714355
    10. '' → logprob: -8.160422325134277

Token 31: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019554555416107178
    2. '(
' → logprob: -4.644554615020752
    3. ')' → logprob: -5.144554615020752
    4. '
' → logprob: -6.519554615020752
    5. '\n' → logprob: -7.644554615020752
    6. ' (' → logprob: -7.644554615020752
    7. '(

' → logprob: -7.769554615020752
    8. '' → logprob: -8.144554138183594
    9. '()' → logprob: -8.769554138183594
    10. '\' → logprob: -8.894554138183594

Token 32: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3921690583229065
    2. ' collections' → logprob: -1.8921689987182617
    3. ' ' → logprob: -3.1421689987182617
    4. ' os' → logprob: -3.1421689987182617
    5. ' sys' → logprob: -4.017168998718262
    6. ' space' → logprob: -4.267168998718262
    7. ' numpy' → logprob: -4.642168998718262
    8. ' functools' → logprob: -4.767168998718262
    9. 'collections' → logprob: -4.892168998718262
    10. ' itertools' → logprob: -5.142168998718262

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0029635541141033173
    2. 'import' → logprob: -5.877963542938232
    3. ' ' → logprob: -9.37796401977539
    4. '	import' → logprob: -10.37796401977539
    5. ' itertools' → logprob: -11.37796401977539
    6. '.import' → logprob: -11.37796401977539
    7. '.' → logprob: -11.75296401977539
    8. ' .' → logprob: -12.62796401977539
    9. '_import' → logprob: -13.00296401977539
    10. '<|end|>' → logprob: -13.12796401977539

Token 34: ' accumulate' (ID: 74226)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0116033554077148
    2. ' product' → logprob: -2.011603355407715
    3. 'count' → logprob: -2.011603355407715
    4. ' cycle' → logprob: -2.136603355407715
    5. ' chain' → logprob: -2.511603355407715
    6. 'com' → logprob: -3.011603355407715
    7. ' combinations' → logprob: -3.261603355407715
    8. ' permutations' → logprob: -3.511603355407715
    9. ' accumulate' → logprob: -4.136603355407715
    10. 'product' → logprob: -5.136603355407715

Token 35: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6470183730125427
    2. '(' → logprob: -1.5220184326171875
    3. ',' → logprob: -2.5220184326171875
    4. '(
' → logprob: -3.1470184326171875
    5. '\n' → logprob: -3.6470184326171875
    6. '#' → logprob: -3.8970184326171875
    7. '<|end|>' → logprob: -4.0220184326171875
    8. 'import' → logprob: -4.2720184326171875
    9. '\' → logprob: -4.6470184326171875
    10. ' ' → logprob: -4.7720184326171875

Token 36: ' accl' (ID: 171989)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6314255595207214
    2. ' acc' → logprob: -1.0064256191253662
    3. ' accumulate' → logprob: -3.506425619125366
    4. ' ac' → logprob: -4.381425380706787
    5. 'ac' → logprob: -4.631425380706787
    6. '_acc' → logprob: -4.631425380706787
    7. ' accu' → logprob: -4.881425380706787
    8. ' accum' → logprob: -5.006425380706787
    9. 'a' → logprob: -5.131425380706787
    10. ' ' → logprob: -5.631425380706787

Token 37: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.4645664393901825
    2. 'u' → logprob: -1.3395664691925049
    3. 'umulate' → logprob: -3.089566469192505
    4. ',' → logprob: -3.339566469192505
    5. '.' → logprob: -5.339566230773926
    6. 'uminate' → logprob: -5.339566230773926
    7. ')' → logprob: -5.464566230773926
    8. 'm' → logprob: -5.714566230773926
    9. '(' → logprob: -6.464566230773926
    10. 'import' → logprob: -6.464566230773926

Token 38: ' combinations' (ID: 43835)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.113708257675171
    2. ' chain' → logprob: -1.113708257675171
    3. 'com' → logprob: -2.488708257675171
    4. 'product' → logprob: -2.613708257675171
    5. 'count' → logprob: -2.863708257675171
    6. 'group' → logprob: -3.363708257675171
    7. ' product' → logprob: -3.613708257675171
    8. ' group' → logprob: -4.36370849609375
    9. 'cycle' → logprob: -4.61370849609375
    10. 'is' → logprob: -4.73870849609375

Token 39: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5164462327957153
    2. '<|end|>' → logprob: -1.2664462327957153
    3. ',' → logprob: -3.141446113586426
    4. '(
' → logprob: -3.266446113586426
    5. '
' → logprob: -4.391446113586426
    6. 'import' → logprob: -5.016446113586426
    7. ')' → logprob: -5.141446113586426
    8. '<|end|>' → logprob: -5.891446113586426
    9. ' (' → logprob: -6.141446113586426
    10. 'from' → logprob: -6.516446113586426

Token 40: ' combos' (ID: 150243)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.7998544573783875
    2. 'comb' → logprob: -1.1748545169830322
    3. 'com' → logprob: -1.5498545169830322
    4. ' combos' → logprob: -4.424854278564453
    5. 'combo' → logprob: -4.924854278564453
    6. 'c' → logprob: -5.674854278564453
    7. 'cmb' → logprob: -6.299854278564453
    8. ' combo' → logprob: -6.549854278564453
    9. 'co' → logprob: -7.174854278564453
    10. ' cmb' → logprob: -7.174854278564453

Token 41: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08404409140348434
    2. ')' → logprob: -3.7090439796447754
    3. '(
' → logprob: -3.7090439796447754
    4. ',' → logprob: -4.084043979644775
    5. '
' → logprob: -6.209043979644775
    6. '#' → logprob: -6.209043979644775
    7. '\n' → logprob: -6.209043979644775
    8. '\' → logprob: -6.334043979644775
    9. '<|end|>' → logprob: -6.334043979644775
    10. '(

' → logprob: -6.709043979644775

Token 42: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6089133024215698
    2. ' chain' → logprob: -1.7339133024215698
    3. ' product' → logprob: -2.1089134216308594
    4. 'product' → logprob: -2.7339134216308594
    5. 'per' → logprob: -3.6089134216308594
    6. 'chain' → logprob: -3.6089134216308594
    7. 'com' → logprob: -4.483913421630859
    8. 'count' → logprob: -5.358913421630859
    9. ' group' → logprob: -5.608913421630859
    10. ' counter' → logprob: -5.983913421630859

Token 43: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.2681123912334442
    2. 'as' → logprob: -1.5181124210357666
    3. '<|end|>' → logprob: -4.1431121826171875
    4. '<|end|>' → logprob: -9.393112182617188
    5. '(as' → logprob: -10.268112182617188
    6. '	as' → logprob: -10.768112182617188
    7. '(' → logprob: -11.393112182617188
    8. 'from' → logprob: -11.893112182617188
    9. ' ' → logprob: -12.018112182617188
    10. ' (' → logprob: -12.643112182617188

Token 44: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.17476819455623627
    2. 'perm' → logprob: -2.1747682094573975
    3. 'comb' → logprob: -3.7997682094573975
    4. 'p' → logprob: -4.924767971038818
    5. 'combo' → logprob: -5.174767971038818
    6. ' perms' → logprob: -5.174767971038818
    7. ' combos' → logprob: -6.174767971038818
    8. 'pm' → logprob: -7.174767971038818
    9. 'com' → logprob: -7.549767971038818
    10. ' perm' → logprob: -7.549767971038818

Token 45: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39200276136398315
    2. ')' → logprob: -1.517002820968628
    3. '(
' → logprob: -3.267002820968628
    4. ',' → logprob: -3.892002820968628
    5. '\n' → logprob: -4.267002582550049
    6. '#' → logprob: -4.642002582550049
    7. '<|end|>' → logprob: -4.767002582550049
    8. '
' → logprob: -5.142002582550049
    9. '\' → logprob: -6.267002582550049
    10. 'import' → logprob: -6.892002582550049

Token 46: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'izzare' (ID: 94035)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ack' → logprob: -1.7243025302886963
    2. 'r' → logprob: -1.9743025302886963
    3. 'ut' → logprob: -1.9743025302886963
    4. 'ecause' → logprob: -2.2243025302886963
    5. 'reak' → logprob: -2.4743025302886963
    6. 'y' → logprob: -2.5993025302886963
    7. 'est' → logprob: -3.2243025302886963
    8. 'ad' → logprob: -3.4743025302886963
    9. 'uilt' → logprob: -3.4743025302886963
    10. 'l' → logprob: -4.099302291870117

Token 48: ' alias' (ID: 26026)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5476441383361816
    2. ',' → logprob: -1.5476441383361816
    3. ')' → logprob: -1.9226441383361816
    4. '
' → logprob: -1.9226441383361816
    5. '<|end|>' → logprob: -2.0476441383361816
    6. '_' → logprob: -3.7976441383361816
    7. '(
' → logprob: -3.7976441383361816
    8. 'import' → logprob: -4.047644138336182
    9. '\n' → logprob: -4.172644138336182
    10. '\' → logprob: -4.422644138336182

Token 49: 'ing' (ID: 289)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.948819637298584
    2. '<|end|>' → logprob: -0.948819637298584
    3. ')' → logprob: -2.698819637298584
    4. ',' → logprob: -3.073819637298584
    5. '(' → logprob: -4.073819637298584
    6. '\' → logprob: -4.573819637298584
    7. '\n' → logprob: -4.573819637298584
    8. '#' → logprob: -4.698819637298584
    9. '

' → logprob: -4.698819637298584
    10. '(
' → logprob: -4.698819637298584

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4940441846847534
    2. '<|end|>' → logprob: -1.3690441846847534
    3. ')' → logprob: -2.869044303894043
    4. '\n' → logprob: -4.369044303894043
    5. '(
' → logprob: -4.494044303894043
    6. '(' → logprob: -4.494044303894043
    7. ',' → logprob: -4.619044303894043
    8. '<|end|>' → logprob: -5.244044303894043
    9. ' ' → logprob: -5.369044303894043
    10. '' → logprob: -5.494044303894043

Token 51: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08939239382743835
    2. '<|end|>' → logprob: -3.2143924236297607
    3. '

' → logprob: -3.9643924236297607
    4. ')' → logprob: -5.339392185211182
    5. '#' → logprob: -5.339392185211182
    6. '' → logprob: -5.589392185211182
    7. '\n' → logprob: -6.089392185211182
    8. 'import' → logprob: -6.214392185211182
    9. '
' → logprob: -6.464392185211182
    10. ' ' → logprob: -6.839392185211182

Token 52: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.16012296080589294
    2. 'math' → logprob: -2.160122871398926
    3. ' collections' → logprob: -4.160122871398926
    4. 'collections' → logprob: -4.535122871398926
    5. ' functools' → logprob: -5.660122871398926
    6. ' operator' → logprob: -7.410122871398926
    7. ' itertools' → logprob: -7.535122871398926
    8. ' ' → logprob: -8.160122871398926
    9. 'operator' → logprob: -8.410122871398926
    10. ' fractions' → logprob: -8.910122871398926

Token 53: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02460518106818199
    2. 'import' → logprob: -4.0246052742004395
    3. ' ' → logprob: -5.6496052742004395
    4. '<|end|>' → logprob: -5.8996052742004395
    5. '<|end|>' → logprob: -9.899604797363281
    6. '	import' → logprob: -9.899604797363281
    7. '_import' → logprob: -11.024604797363281
    8. '.' → logprob: -11.024604797363281
    9. ' im' → logprob: -11.774604797363281
    10. ' importar' → logprob: -11.899604797363281

Token 54: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.0885995626449585
    2. ' sqrt' → logprob: -1.4635995626449585
    3. ' gcd' → logprob: -1.5885995626449585
    4. ' inf' → logprob: -2.463599681854248
    5. ' ceil' → logprob: -2.963599681854248
    6. ' comb' → logprob: -3.213599681854248
    7. 'sqrt' → logprob: -4.213599681854248
    8. ' is' → logprob: -4.338599681854248
    9. ' log' → logprob: -5.338599681854248
    10. 'is' → logprob: -5.588599681854248

Token 55: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04855216667056084
    2. ',' → logprob: -4.0485520362854
    3. '(
' → logprob: -4.0485520362854
    4. '
' → logprob: -6.0485520362854
    5. ')' → logprob: -6.4235520362854
    6. ' ' → logprob: -6.5485520362854
    7. ' (' → logprob: -6.5485520362854
    8. '\n' → logprob: -6.7985520362854
    9. '\' → logprob: -6.9235520362854
    10. '' → logprob: -7.4235520362854

Token 56: ' _' (ID: 1175)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.5054999589920044
    2. 'fact' → logprob: -1.6304999589920044
    3. ' f' → logprob: -2.130499839782715
    4. 'f' → logprob: -3.380499839782715
    5. ' fac' → logprob: -3.755499839782715
    6. 'fac' → logprob: -5.005499839782715
    7. ' facto' → logprob: -5.005499839782715
    8. ' factorial' → logprob: -5.630499839782715
    9. ' ' → logprob: -6.505499839782715
    10. '!' → logprob: -6.505499839782715

Token 57: 'fact' (ID: 53534)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.2004803717136383
    2. 'fact' → logprob: -1.825480341911316
    3. 'f' → logprob: -5.2004804611206055
    4. 'fac' → logprob: -5.3254804611206055
    5. ' factorial' → logprob: -5.8254804611206055
    6. 'fabs' → logprob: -6.2004804611206055
    7. 'ceil' → logprob: -6.7004804611206055
    8. 'prod' → logprob: -7.4504804611206055
    9. '!' → logprob: -7.7004804611206055
    10. 'floor' → logprob: -7.7004804611206055

Token 58: 'y' (ID: 88)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5630785226821899
    2. ')' → logprob: -1.31307852268219
    3. '
' → logprob: -2.8130784034729004
    4. ',' → logprob: -3.0630784034729004
    5. '(
' → logprob: -4.4380784034729
    6. '_' → logprob: -4.5630784034729
    7. '#' → logprob: -4.8130784034729
    8. '\n' → logprob: -5.0630784034729
    9. '<|end|>' → logprob: -5.6880784034729
    10. 'def' → logprob: -5.8130784034729

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3110392689704895
    2. '(' → logprob: -1.9360392093658447
    3. ')' → logprob: -3.4360392093658447
    4. '<|end|>' → logprob: -4.186039447784424
    5. '(
' → logprob: -4.311039447784424
    6. ',' → logprob: -4.561039447784424
    7. '\n' → logprob: -4.686039447784424
    8. '_' → logprob: -4.811039447784424
    9. '' → logprob: -5.311039447784424
    10. 'def' → logprob: -5.436039447784424

Token 60: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23418840765953064
    2. '

' → logprob: -2.2341883182525635
    3. 'def' → logprob: -2.9841883182525635
    4. '_' → logprob: -4.484188556671143
    5. '<|end|>' → logprob: -4.609188556671143
    6. '
' → logprob: -5.109188556671143
    7. '' → logprob: -5.484188556671143
    8. ',' → logprob: -5.609188556671143
    9. 'import' → logprob: -6.359188556671143
    10. '#' → logprob: -6.484188556671143

Token 61: ' Over' (ID: 7931)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8277945518493652
    2. '
' → logprob: -1.3277945518493652
    3. ' ' → logprob: -2.4527945518493652
    4. '

' → logprob: -3.0777945518493652
    5. '<|end|>' → logprob: -3.5777945518493652
    6. ' 
' → logprob: -3.9527945518493652
    7. 'def' → logprob: -4.077794551849365
    8. '#' → logprob: -4.202794551849365
    9. '_

' → logprob: -4.327794551849365
    10. ' 

' → logprob: -4.452794551849365

Token 62: 'ly' (ID: 423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2796911001205444
    2. 'import' → logprob: -1.9046911001205444
    3. 'loaded' → logprob: -2.154691219329834
    4. 'rides' → logprob: -2.279691219329834
    5. 'load' → logprob: -2.654691219329834
    6. 'r' → logprob: -2.779691219329834
    7. 'ride' → logprob: -3.404691219329834
    8. 'loading' → logprob: -3.404691219329834
    9. 'all' → logprob: -3.529691219329834
    10. 'ridden' → logprob: -3.529691219329834

Token 63: ' verbose' (ID: 32134)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.8647597432136536
    2. 'verbose' → logprob: -0.9897597432136536
    3. 'complex' → logprob: -2.114759683609009
    4. 'long' → logprob: -3.489759683609009
    5. ' complicated' → logprob: -4.489759922027588
    6. ' verbose' → logprob: -4.614759922027588
    7. ' complex' → logprob: -5.114759922027588
    8. 'optim' → logprob: -5.614759922027588
    9. 'optimized' → logprob: -6.114759922027588
    10. 'amb' → logprob: -6.114759922027588

Token 64: ' doc' (ID: 6806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48168063163757324
    2. '
' → logprob: -2.2316806316375732
    3. ' ' → logprob: -2.2316806316375732
    4. '_' → logprob: -2.8566806316375732
    5. '

' → logprob: -3.6066806316375732
    6. ' def' → logprob: -4.106680870056152
    7. '<|end|>' → logprob: -4.481680870056152
    8. ',' → logprob: -4.856680870056152
    9. ' 

' → logprob: -4.856680870056152
    10. ' 
' → logprob: -4.981680870056152

Token 65: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.006148126907646656
    2. 'strings' → logprob: -5.256148338317871
    3. 's' → logprob: -7.631148338317871
    4. '"""' → logprob: -9.506148338317871
    5. 'str' → logprob: -9.506148338317871
    6. 'ument' → logprob: -9.506148338317871
    7. ' string' → logprob: -10.756148338317871
    8. '<|end|>' → logprob: -10.881148338317871
    9. '_' → logprob: -11.256148338317871
    10. ':' → logprob: -11.256148338317871

Token 66: ' in' (ID: 306)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.22387704253196716
    2. '"""
' → logprob: -2.223876953125
    3. '"' → logprob: -3.973876953125
    4. '\n' → logprob: -3.973876953125
    5. ''''
' → logprob: -4.723876953125
    6. ''''' → logprob: -4.848876953125
    7. '\' → logprob: -5.098876953125
    8. ' """
' → logprob: -5.348876953125
    9. '
' → logprob: -5.723876953125
    10. '"""

' → logprob: -5.723876953125

Token 67: ' a' (ID: 261)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8991364240646362
    2. ' """' → logprob: -1.3991364240646362
    3. ' triple' → logprob: -1.8991364240646362
    4. ' '''' → logprob: -3.649136543273926
    5. ''''' → logprob: -3.649136543273926
    6. ' a' → logprob: -3.899136543273926
    7. ' Python' → logprob: -4.274136543273926
    8. ' the' → logprob: -4.399136543273926
    9. ' multiline' → logprob: -4.774136543273926
    10. '"""
' → logprob: -4.899136543273926

Token 68: ' lambda' (ID: 27871)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7972050905227661
    2. ' """' → logprob: -1.7972050905227661
    3. 'n' → logprob: -3.2972049713134766
    4. 'f' → logprob: -3.4222049713134766
    5. ' ' → logprob: -3.5472049713134766
    6. 'a' → logprob: -3.6722049713134766
    7. ')' → logprob: -3.7972049713134766
    8. 'def' → logprob: -3.7972049713134766
    9. ' "' → logprob: -4.047204971313477
    10. '"' → logprob: -4.047204971313477

Token 69: '!' (ID: 0)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0435190200805664
    2. '_' → logprob: -1.6685190200805664
    3. ' =' → logprob: -1.9185190200805664
    4. 'f' → logprob: -2.1685190200805664
    5. ',' → logprob: -3.1685190200805664
    6. '_lambda' → logprob: -3.9185190200805664
    7. '(' → logprob: -4.293519020080566
    8. 's' → logprob: -4.293519020080566
    9. ' (' → logprob: -4.668519020080566
    10. '(
' → logprob: -4.793519020080566

Token 70: ' Un' (ID: 1367)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.075499176979065
    2. '_' → logprob: -2.7004990577697754
    3. '\n' → logprob: -2.7004990577697754
    4. '\' → logprob: -2.9504990577697754
    5. ')' → logprob: -3.0754990577697754
    6. ',' → logprob: -3.0754990577697754
    7. ' =' → logprob: -3.2004990577697754
    8. '(
' → logprob: -3.4504990577697754
    9. 'f' → logprob: -3.5754990577697754
    10. ' 
' → logprob: -3.7004990577697754

Token 71: 'usual' (ID: 134017)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9994716644287109
    2. '=lambda' → logprob: -1.124471664428711
    3. 'used' → logprob: -3.249471664428711
    4. '=' → logprob: -3.874471664428711
    5. 'defined' → logprob: -3.874471664428711
    6. 'c' → logprob: -4.124471664428711
    7. 'def' → logprob: -4.124471664428711
    8. 'd' → logprob: -4.249471664428711
    9. ' =' → logprob: -4.249471664428711
    10. 'ction' → logprob: -4.624471664428711

Token 72: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3875735998153687
    2. '_' → logprob: -1.5125735998153687
    3. 'lambda' → logprob: -1.6375735998153687
    4. 'f' → logprob: -1.7625735998153687
    5. '_lambda' → logprob: -3.887573719024658
    6. 's' → logprob: -3.887573719024658
    7. ',' → logprob: -4.137573719024658
    8. ' lambda' → logprob: -4.512573719024658
    9. ' ' → logprob: -4.637573719024658
    10. ':' → logprob: -5.012573719024658

Token 73: ' but' (ID: 889)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7561383843421936
    2. ' lambda' → logprob: -1.2561383247375488
    3. ' ' → logprob: -2.631138324737549
    4. ''' → logprob: -3.006138324737549
    5. ' '' → logprob: -3.381138324737549
    6. ' 
' → logprob: -4.006138324737549
    7. ' l' → logprob: -5.006138324737549
    8. ' key' → logprob: -5.131138324737549
    9. ' but' → logprob: -5.193638324737549
    10. '#' → logprob: -5.506138324737549

Token 74: ' possible' (ID: 4149)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6627229452133179
    2. 'lambda' → logprob: -1.5377229452133179
    3. ' factorial' → logprob: -2.4127230644226074
    4. ' f' → logprob: -3.1627230644226074
    5. ' lamb' → logprob: -4.162723064422607
    6. ' ' → logprob: -4.287723064422607
    7. 'f' → logprob: -4.350223064422607
    8. ' l' → logprob: -4.537723064422607
    9. ' (' → logprob: -5.037723064422607
    10. ' _' → logprob: -5.350223064422607

Token 75: ' if' (ID: 538)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6164315342903137
    2. 'f' → logprob: -2.491431474685669
    3. ' =' → logprob: -2.616431474685669
    4. '_' → logprob: -2.741431474685669
    5. '_lambda' → logprob: -2.866431474685669
    6. ',' → logprob: -3.866431474685669
    7. '(
' → logprob: -4.241431713104248
    8. 's' → logprob: -4.366431713104248
    9. ' lambda' → logprob: -4.491431713104248
    10. 'l' → logprob: -4.616431713104248

Token 76: ' you' (ID: 481)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5556974411010742
    2. ' lambda' → logprob: -1.9306974411010742
    3. ' False' → logprob: -2.055697441101074
    4. ' (' → logprob: -3.180697441101074
    5. 'lambda' → logprob: -3.930697441101074
    6. ' ' → logprob: -4.055697441101074
    7. ' not' → logprob: -4.055697441101074
    8. '```' → logprob: -4.680697441101074
    9. 'True' → logprob: -5.305697441101074
    10. '(' → logprob: -5.430697441101074

Token 77: ' know' (ID: 1761)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.2956363260746002
    2. ''re' → logprob: -2.6706364154815674
    3. 'want' → logprob: -2.9206364154815674
    4. 'really' → logprob: -4.170636177062988
    5. '<|end|>' → logprob: -4.295636177062988
    6. ' are' → logprob: -4.545636177062988
    7. ''ve' → logprob: -4.795636177062988
    8. 'are' → logprob: -5.045636177062988
    9. ' need' → logprob: -5.045636177062988
    10. ' must' → logprob: -5.170636177062988

Token 78: ' how' (ID: 1495)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.44781413674354553
    2. ' lambda' → logprob: -1.3228141069412231
    3. '_' → logprob: -3.3228142261505127
    4. '_lambda' → logprob: -4.197813987731934
    5. '(lambda' → logprob: -4.447813987731934
    6. ' (' → logprob: -4.697813987731934
    7. ' ' → logprob: -5.072813987731934
    8. ' =' → logprob: -6.260313987731934
    9. '=lambda' → logprob: -6.260313987731934
    10. ' _' → logprob: -6.322813987731934

Token 79: '
' (ID: 198)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8871189951896667
    2. 'f' → logprob: -1.2621190547943115
    3. ' my' → logprob: -3.5121190547943115
    4. ' l' → logprob: -3.6371190547943115
    5. ' factorial' → logprob: -3.7621190547943115
    6. 'lambda' → logprob: -3.8871190547943115
    7. ' foo' → logprob: -4.137118816375732
    8. '_' → logprob: -4.262118816375732
    9. 'my' → logprob: -4.262118816375732
    10. 'foo' → logprob: -4.387118816375732

Token 80: 'def' (ID: 1314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9390546679496765
    2. 'fact' → logprob: -1.9390547275543213
    3. 'factor' → logprob: -2.0640547275543213
    4. ' f' → logprob: -3.3140547275543213
    5. 'foo' → logprob: -3.4390547275543213
    6. 'lambda' → logprob: -3.4390547275543213
    7. 'x' → logprob: -3.9390547275543213
    8. '_' → logprob: -4.064054489135742
    9. 'my' → logprob: -4.314054489135742
    10. 'n' → logprob: -4.689054489135742

Token 81: ' factor' (ID: 12332)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.0489252507686615
    2. ' set' → logprob: -4.298925399780273
    3. ' ' → logprob: -4.923925399780273
    4. ' factor' → logprob: -5.673925399780273
    5. ' _' → logprob: -5.798925399780273
    6. ' lambda' → logprob: -6.173925399780273
    7. ' fibonacci' → logprob: -6.298925399780273
    8. ' recurse' → logprob: -6.548925399780273
    9. ' long' → logprob: -6.673925399780273
    10. ' foo' → logprob: -7.048925399780273

Token 82: 'ization' (ID: 2860)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.09227611124515533
    2. 'ialize' → logprob: -2.467276096343994
    3. '_' → logprob: -6.092276096343994
    4. '```' → logprob: -7.842276096343994
    5. 'ize' → logprob: -9.467276573181152
    6. '   ' → logprob: -9.467276573181152
    7. '=' → logprob: -9.717276573181152
    8. 'i' → logprob: -9.967276573181152
    9. ' ' → logprob: -10.092276573181152
    10. '  ' → logprob: -10.342276573181152

Token 83: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2906166613101959
    2. '(n' → logprob: -1.4156166315078735
    3. '(num' → logprob: -5.415616512298584
    4. ' (' → logprob: -6.165616512298584
    5. '(x' → logprob: -6.915616512298584
    6. '_' → logprob: -7.165616512298584
    7. '(number' → logprob: -7.415616512298584
    8. '_factor' → logprob: -8.790616989135742
    9. '_of' → logprob: -9.915616989135742
    10. ':' → logprob: -10.165616989135742

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023245064076036215
    2. ',' → logprob: -6.87732458114624
    3. ':' → logprob: -7.25232458114624
    4. ')' → logprob: -8.002324104309082
    5. ' ):' → logprob: -8.502324104309082
    6. '):
' → logprob: -10.627324104309082
    7. ' :' → logprob: -11.752324104309082
    8. '=' → logprob: -12.252324104309082
    9. '   ' → logprob: -13.877324104309082
    10. '):
' → logprob: -14.002324104309082

Token 85: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024064991623163223
    2. '   ' → logprob: -4.899065017700195
    3. '():' → logprob: -5.024065017700195
    4. ' :' → logprob: -6.024065017700195
    5. '):' → logprob: -6.024065017700195
    6. ':
' → logprob: -6.149065017700195
    7. '<|end|>' → logprob: -7.649065017700195
    8. ':return' → logprob: -8.274065017700195
    9. '():
' → logprob: -8.649065017700195
    10. ' ' → logprob: -8.774065017700195

Token 86: ' '''
' (ID: 26725)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4285547733306885
    2. ' return' → logprob: -1.6785547733306885
    3. ' f' → logprob: -1.8035547733306885
    4. 'f' → logprob: -2.6785547733306885
    5. ' d' → logprob: -2.6785547733306885
    6. ' factors' → logprob: -3.3035547733306885
    7. 'd' → logprob: -3.6785547733306885
    8. 'if' → logprob: -3.8035547733306885
    9. '    ' → logprob: -3.8035547733306885
    10. '   ' → logprob: -3.8035547733306885

Token 87: '   ' (ID: 271)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.6015738844871521
    2. 'Factor' → logprob: -1.7265739440917969
    3. '   ' → logprob: -3.226573944091797
    4. ' De' → logprob: -3.351573944091797
    5. 'De' → logprob: -3.726573944091797
    6. 'Return' → logprob: -3.726573944091797
    7. ' Return' → logprob: -3.976573944091797
    8. 'Returns' → logprob: -3.976573944091797
    9. ' Given' → logprob: -4.601573944091797
    10. ' Returns' → logprob: -4.851573944091797

Token 88: ' Break' (ID: 19842)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -1.0139049291610718
    2. ' Factor' → logprob: -2.0139050483703613
    3. 'Return' → logprob: -2.2639050483703613
    4. 'Returns' → logprob: -2.5139050483703613
    5. ' Given' → logprob: -3.5139050483703613
    6. ' Returns' → logprob: -3.7639050483703613
    7. ' Return' → logprob: -3.7639050483703613
    8. 'Calculate' → logprob: -3.7639050483703613
    9. 'Given' → logprob: -3.8889050483703613
    10. 'Compute' → logprob: -4.013905048370361

Token 89: ' number' (ID: 2086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6736598610877991
    2. ' down' → logprob: -1.9236598014831543
    3. ' N' → logprob: -2.0486598014831543
    4. 'down' → logprob: -2.0486598014831543
    5. ' s' → logprob: -3.6736598014831543
    6. '   ' → logprob: -3.9236598014831543
    7. ' the' → logprob: -4.048659801483154
    8. 'N' → logprob: -5.048659801483154
    9. '       ' → logprob: -6.048659801483154
    10. 'd' → logprob: -6.486159801483154

Token 90: ' into' (ID: 1511)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6714531779289246
    2. ' down' → logprob: -1.7964532375335693
    3. 'N' → logprob: -2.4214532375335693
    4. 'down' → logprob: -2.4214532375335693
    5. ' into' → logprob: -2.5464532375335693
    6. '   ' → logprob: -3.0464532375335693
    7. '    ' → logprob: -6.04645299911499
    8. 's' → logprob: -6.04645299911499
    9. ' ' → logprob: -6.17145299911499
    10. '```' → logprob: -6.23395299911499

Token 91: ' powers' (ID: 27742)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.4604702591896057
    2. ' its' → logprob: -1.210470199584961
    3. 'prime' → logprob: -3.585470199584961
    4. ' primes' → logprob: -4.085470199584961
    5. 'its' → logprob: -4.460470199584961
    6. ' factors' → logprob: -4.710470199584961
    7. 'f' → logprob: -6.710470199584961
    8. ' all' → logprob: -7.272970199584961
    9. '   ' → logprob: -7.460470199584961
    10. ' a' → logprob: -7.522970199584961

Token 92: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.047674760222435
    2. 'of' → logprob: -3.5476746559143066
    3. '   ' → logprob: -4.297674655914307
    4. '    ' → logprob: -6.922674655914307
    5. ' ' → logprob: -6.922674655914307
    6. ' and' → logprob: -7.172674655914307
    7. '  ' → logprob: -8.422675132751465
    8. '```' → logprob: -8.672675132751465
    9. '-of' → logprob: -8.672675132751465
    10. 'Of' → logprob: -9.047675132751465

Token 93: ' primes' (ID: 104042)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0263904333114624
    2. ' primes' → logprob: -1.0263904333114624
    3. '2' → logprob: -1.7763904333114624
    4. ' prime' → logprob: -2.901390552520752
    5. 'prime' → logprob: -4.276390552520752
    6. ' two' → logprob: -4.401390552520752
    7. ' its' → logprob: -4.401390552520752
    8. 'pr' → logprob: -4.401390552520752
    9. '   ' → logprob: -6.526390552520752
    10. 'its' → logprob: -6.651390552520752

Token 94: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10813601315021515
    2. ' and' → logprob: -3.358135938644409
    3. '.' → logprob: -3.733135938644409
    4. ''''' → logprob: -3.983135938644409
    5. ''''
' → logprob: -5.358136177062988
    6. ',' → logprob: -5.483136177062988
    7. ''' → logprob: -5.608136177062988
    8. '\n' → logprob: -6.358136177062988
    9. 'and' → logprob: -6.483136177062988
    10. ':' → logprob: -6.858136177062988

Token 95: ' list' (ID: 1562)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.9431688785552979
    2. ' a' → logprob: -1.3181688785552979
    3. ' follows' → logprob: -1.6931688785552979
    4. ' prime' → logprob: -3.568168878555298
    5. ' its' → logprob: -3.818168878555298
    6. ' factor' → logprob: -4.193168640136719
    7. ' primes' → logprob: -4.318168640136719
    8. '```' → logprob: -4.568168640136719
    9. 'f' → logprob: -4.693168640136719
    10. '   ' → logprob: -4.943168640136719

Token 96: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3047159016132355
    2. ' of' → logprob: -1.429715871810913
    3. ' and' → logprob: -5.304716110229492
    4. '.' → logprob: -5.429716110229492
    5. ''''' → logprob: -5.554716110229492
    6. ''''
' → logprob: -5.804716110229492
    7. 'of' → logprob: -6.429716110229492
    8. '\n' → logprob: -7.179716110229492
    9. '.
' → logprob: -7.179716110229492
    10. '
' → logprob: -7.429716110229492

Token 97: ' pairs' (ID: 24702)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.3695935010910034
    2. ' (' → logprob: -1.2445935010910034
    3. ' pairs' → logprob: -5.369593620300293
    4. '(int' → logprob: -5.494593620300293
    5. ' tuple' → logprob: -6.119593620300293
    6. ' primes' → logprob: -6.244593620300293
    7. 'tu' → logprob: -6.494593620300293
    8. '(' → logprob: -6.869593620300293
    9. '(str' → logprob: -7.119593620300293
    10. '(pr' → logprob: -7.494593620300293

Token 98: '.
' (ID: 558)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.521516740322113
    2. '   ' → logprob: -1.1465167999267578
    3. '\n' → logprob: -3.521516799926758
    4. '(N' → logprob: -3.771516799926758
    5. '(' → logprob: -4.146516799926758
    6. '(n' → logprob: -5.021516799926758
    7. '(p' → logprob: -6.771516799926758
    8. ',' → logprob: -6.896516799926758
    9. ' and' → logprob: -6.896516799926758
    10. '[(' → logprob: -6.896516799926758

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03302181139588356
    2. '(' → logprob: -5.158021926879883
    3. ' (' → logprob: -5.158021926879883
    4. '\n' → logprob: -5.283021926879883
    5. ''' → logprob: -5.908021926879883
    6. ''''' → logprob: -5.908021926879883
    7. ''\' → logprob: -6.158021926879883
    8. ')' → logprob: -6.158021926879883
    9. '    
' → logprob: -7.283021926879883
    10. '(
' → logprob: -7.408021926879883

Token 100: ' '''
' (ID: 26725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05273514986038208
    2. '
' → logprob: -4.427735328674316
    3. ''''' → logprob: -4.552735328674316
    4. '\n' → logprob: -4.802735328674316
    5. '    
' → logprob: -5.052735328674316
    6. ''''
' (adapté à ' '''
') → logprob: -5.177735328674316
    7. '```' → logprob: -6.177735328674316
    8. ' '''
' → logprob: -7.177735328674316
    9. '''' → logprob: -7.302735328674316
    10. '    ' → logprob: -7.427735328674316

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22047071158885956
    2. ' from' → logprob: -2.595470666885376
    3. '    ' → logprob: -3.595470666885376
    4. ' if' → logprob: -3.970470666885376
    5. ' import' → logprob: -4.220470905303955
    6. ' primes' → logprob: -4.595470905303955
    7. ' res' → logprob: -4.970470905303955
    8. ' pass' → logprob: -5.095470905303955
    9. ' tokens' → logprob: -5.470470905303955
    10. 'import' → logprob: -5.470470905303955

Token 102: ' junk' (ID: 36526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10130755603313446
    2. 'res' → logprob: -3.9763076305389404
    3. ' factors' → logprob: -4.101307392120361
    4. 'factor' → logprob: -4.351307392120361
    5. '   ' → logprob: -5.101307392120361
    6. 'facts' → logprob: -5.101307392120361
    7. 'result' → logprob: -5.226307392120361
    8. ' res' → logprob: -5.351307392120361
    9. 'def' → logprob: -5.601307392120361
    10. 'fact' → logprob: -5.851307392120361

Token 103: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04485977813601494
    2. '=' → logprob: -3.2948598861694336
    3. '   ' → logprob: -5.669859886169434
    4. ',' → logprob: -6.794859886169434
    5. ' ' → logprob: -7.294859886169434
    6. '=[]' → logprob: -8.419859886169434
    7. '=int' → logprob: -9.044859886169434
    8. '  ' → logprob: -9.169859886169434
    9. '    ' → logprob: -9.232359886169434
    10. 'import' → logprob: -9.357359886169434

Token 104: ' p' (ID: 275)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.606211543083191
    2. ' factors' → logprob: -1.981211543083191
    3. ' i' → logprob: -2.2312116622924805
    4. 'n' → logprob: -2.4812116622924805
    5. ' p' → logprob: -2.7312116622924805
    6. 'f' → logprob: -2.9812116622924805
    7. ' f' → logprob: -3.2312116622924805
    8. ' d' → logprob: -3.3562116622924805
    9. ' res' → logprob: -3.4812116622924805
    10. 'p' → logprob: -3.6062116622924805

Token 105: 'wr' (ID: 16085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7756431698799133
    2. 'r' → logprob: -0.9006431698799133
    3. '=' → logprob: -2.4006431102752686
    4. 'ow' → logprob: -4.275643348693848
    5. ',' → logprob: -4.525643348693848
    6. 'os' → logprob: -5.650643348693848
    7. 'ower' → logprob: -5.900643348693848
    8. '   ' → logprob: -6.150643348693848
    9. ' ' → logprob: -7.025643348693848
    10. 'i' → logprob: -7.150643348693848

Token 106: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8067977428436279
    2. ' =' → logprob: -1.056797742843628
    3. '=' → logprob: -1.681797742843628
    4. ',' → logprob: -4.056797981262207
    5. '   ' → logprob: -7.306797981262207
    6. ' ' → logprob: -7.556797981262207
    7. 'airs' → logprob: -8.056797981262207
    8. '_list' → logprob: -8.806797981262207
    9. '  ' → logprob: -9.181797981262207
    10. '```' → logprob: -9.181797981262207

Token 107: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.8895506858825684
    2. ' factors' → logprob: -1.8895506858825684
    3. ' res' → logprob: -2.2645506858825684
    4. ' primes' → logprob: -2.3895506858825684
    5. ' n' → logprob: -2.5145506858825684
    6. ' prime' → logprob: -2.7645506858825684
    7. ' div' → logprob: -2.8895506858825684
    8. ' factor' → logprob: -3.2645506858825684
    9. ' d' → logprob: -3.3895506858825684
    10. ' p' → logprob: -3.7645506858825684

Token 108: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5351011157035828
    2. ' =' → logprob: -1.5351011753082275
    3. '=' → logprob: -1.9101011753082275
    4. 'rv' → logprob: -4.660100936889648
    5. 'i' → logprob: -5.285100936889648
    6. 'rim' → logprob: -5.660100936889648
    7. 'rev' → logprob: -5.660100936889648
    8. ',' → logprob: -5.785100936889648
    9. 'v' → logprob: -5.785100936889648
    10. '   ' → logprob: -6.035100936889648

Token 109: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.13220463693141937
    2. ' [],' → logprob: -2.382204532623291
    3. 'N' → logprob: -3.757204532623291
    4. ' N' → logprob: -5.507204532623291
    5. '[]' → logprob: -6.382204532623291
    6. '   ' → logprob: -6.882204532623291
    7. '0' → logprob: -7.507204532623291
    8. '1' → logprob: -8.38220500946045
    9. ' ' → logprob: -9.00720500946045
    10. '[N' → logprob: -9.25720500946045

Token 110: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23020903766155243
    2. ' ' → logprob: -1.6052089929580688
    3. '[],' → logprob: -6.855208873748779
    4. '[]' → logprob: -7.105208873748779
    5. ' [],' → logprob: -7.230208873748779
    6. ' []' → logprob: -7.355208873748779
    7. '0' → logprob: -7.605208873748779
    8. 'N' → logprob: -8.105209350585938
    9. ' N' → logprob: -8.230209350585938
    10. '1' → logprob: -9.417709350585938

Token 111: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06523843854665756
    2. '0' → logprob: -2.9402384757995605
    3. 'N' → logprob: -5.5652384757995605
    4. '[],' → logprob: -5.8152384757995605
    5. ' ' → logprob: -6.3152384757995605
    6. '1' → logprob: -7.8152384757995605
    7. '[]' → logprob: -7.8152384757995605
    8. 'None' → logprob: -7.8152384757995605
    9. '{},' → logprob: -9.065237998962402
    10. ' [],' → logprob: -9.940237998962402

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015097891446202993
    2. ' ,' → logprob: -9.125150680541992
    3. '1' → logprob: -11.000150680541992
    4. '   ' → logprob: -11.625150680541992
    5. '2' → logprob: -12.375150680541992
    6. ',
' → logprob: -13.000150680541992
    7. '0' → logprob: -13.125150680541992
    8. '#' → logprob: -13.750150680541992
    9. '7' → logprob: -14.250150680541992
    10. '6' → logprob: -14.375150680541992

Token 113: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02060670778155327
    2. ' ' → logprob: -3.895606756210327
    3. '   ' → logprob: -10.020606994628906
    4. '  ' → logprob: -11.395606994628906
    5. '    ' → logprob: -13.270606994628906
    6. '     ' → logprob: -13.395606994628906
    7. '1' → logprob: -14.270606994628906
    8. '[' → logprob: -14.708106994628906
    9. 'import' → logprob: -14.708106994628906
    10. '       ' → logprob: -14.708106994628906

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001847062085289508
    2. ' ' → logprob: -8.625185012817383
    3. '   ' → logprob: -13.125185012817383
    4. '  ' → logprob: -14.250185012817383
    5. '1' → logprob: -14.812685012817383
    6. '     ' → logprob: -15.625185012817383
    7. '```' → logprob: -15.625185012817383
    8. '    ' → logprob: -15.812685012817383
    9. 'import' → logprob: -15.875185012817383
    10. '3' → logprob: -16.000185012817383

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6836627125740051
    2. '<|end|>' → logprob: -1.6836626529693604
    3. ' while' → logprob: -2.1836626529693604
    4. 'while' → logprob: -2.3086626529693604
    5. '   ' → logprob: -2.5586626529693604
    6. ',' → logprob: -5.0586628913879395
    7. 'tokens' → logprob: -5.1836628913879395
    8. '<|end|>' → logprob: -6.1836628913879395
    9. '	while' → logprob: -6.9336628913879395
    10. '    
' → logprob: -6.9336628913879395

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21748051047325134
    2. 'f' → logprob: -1.7174805402755737
    3. 'result' → logprob: -5.342480659484863
    4. 'res' → logprob: -5.467480659484863
    5. 'while' → logprob: -5.717480659484863
    6. ' factors' → logprob: -6.592480659484863
    7. ' while' → logprob: -7.342480659484863
    8. '    
' → logprob: -8.217480659484863
    9. 'results' → logprob: -8.592480659484863
    10. 'fact' → logprob: -8.717480659484863

Token 117: ' while' (ID: 2049)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.508063793182373
    2. '   ' → logprob: -1.758063793182373
    3. 'while' (adapté à ' while') → logprob: -1.758063793182373
    4. ' while' → logprob: -3.633063793182373
    5. 'res' → logprob: -4.508063793182373
    6. ' factors' → logprob: -4.758063793182373
    7. 'result' → logprob: -6.383063793182373
    8. 'facts' → logprob: -6.383063793182373
    9. 'fact' → logprob: -7.133063793182373
    10. 'ans' → logprob: -7.633063793182373

Token 118: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.13150295615196228
    2. 'p' → logprob: -2.131502866744995
    3. ' N' → logprob: -5.881503105163574
    4. 'N' → logprob: -6.881503105163574
    5. ' ' → logprob: -8.006503105163574
    6. '(p' → logprob: -8.381503105163574
    7. ' (' → logprob: -9.381503105163574
    8. '   ' → logprob: -10.131503105163574
    9. '(N' → logprob: -11.131503105163574
    10. '(' → logprob: -11.256503105163574

Token 119: '*p' (ID: 72579)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6890877485275269
    2. ' *' → logprob: -1.3140877485275269
    3. '*p' → logprob: -2.0640878677368164
    4. '*' → logprob: -2.8140878677368164
    5. '<=' → logprob: -3.1890878677368164
    6. '**' → logprob: -6.939087867736816
    7. ' ' → logprob: -9.814087867736816
    8. 'p' → logprob: -10.314087867736816
    9. '*N' → logprob: -10.689087867736816
    10. ' **' → logprob: -11.439087867736816

Token 120: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4741175174713135
    2. '<=' → logprob: -0.9741175174713135
    3. '<' → logprob: -10.974117279052734
    4. ' ' → logprob: -12.474117279052734
    5. ')<=' → logprob: -12.724117279052734
    6. ' <' → logprob: -12.849117279052734
    7. ']<=' → logprob: -13.224117279052734
    8. '()' → logprob: -13.224117279052734
    9. '```' → logprob: -13.349117279052734
    10. '0' → logprob: -14.099117279052734

Token 121: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004942946252413094
    2. ' N' → logprob: -7.625494480133057
    3. '   ' → logprob: -12.625494003295898
    4. '	N' → logprob: -13.375494003295898
    5. ' ' → logprob: -13.625494003295898
    6. ' ' → logprob: -16.6254940032959
    7. '
' → logprob: -17.2504940032959
    8. '  ' → logprob: -17.5004940032959
    9. 'n' → logprob: -17.6254940032959
    10. '(N' → logprob: -18.1254940032959

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09107772260904312
    2. ':
' → logprob: -2.4660778045654297
    3. ' and' → logprob: -6.21607780456543
    4. 'and' → logprob: -9.96607780456543
    5. '   ' → logprob: -9.96607780456543
    6. ' :' → logprob: -10.71607780456543
    7. ' :
' → logprob: -11.71607780456543
    8. ':
' → logprob: -12.21607780456543
    9. ':

' → logprob: -12.21607780456543
    10. '       ' → logprob: -13.96607780456543

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29529595375061035
    2. '<|end|>' → logprob: -1.4202959537506104
    3. ' if' → logprob: -5.045295715332031
    4. '<|end|>' → logprob: -5.545295715332031
    5. '   ' → logprob: -6.170295715332031
    6. '    ' → logprob: -7.170295715332031
    7. 'if' → logprob: -8.295295715332031
    8. ' ' → logprob: -8.920295715332031
    9. ' while' → logprob: -9.795295715332031
    10. '        
' → logprob: -10.170295715332031

Token 124: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8673210740089417
    2. ' if' → logprob: -1.3673210144042969
    3. ' while' → logprob: -1.8673210144042969
    4. 'while' (adapté à ' while') → logprob: -2.242321014404297
    5. 'count' → logprob: -3.242321014404297
    6. '   ' → logprob: -4.742321014404297
    7. ' count' → logprob: -4.742321014404297
    8. '       ' → logprob: -5.742321014404297
    9. 'cnt' → logprob: -5.867321014404297
    10. '    ' → logprob: -7.492321014404297

Token 125: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06206414848566055
    2. ' N' → logprob: -2.8120641708374023
    3. '(N' → logprob: -9.687064170837402
    4. ' (' → logprob: -11.437064170837402
    5. ' ' → logprob: -11.562064170837402
    6. '   ' → logprob: -11.937064170837402
    7. '(' → logprob: -12.437064170837402
    8. ' not' → logprob: -13.687064170837402
    9. '	N' → logprob: -13.937064170837402
    10. '  ' → logprob: -14.562064170837402

Token 126: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12696024775505066
    2. ' %' → logprob: -2.126960277557373
    3. '%e' → logprob: -11.001959800720215
    4. '%i' → logprob: -12.626959800720215
    5. ' ' → logprob: -12.876959800720215
    6. '%x' → logprob: -13.001959800720215
    7. '%d' → logprob: -13.251959800720215
    8. ' ' → logprob: -13.251959800720215
    9. '%E' → logprob: -14.001959800720215
    10. '%n' → logprob: -14.251959800720215

Token 127: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.611323624383658e-05
    2. ' p' → logprob: -9.625065803527832
    3. '2' → logprob: -17.62506675720215
    4. '<p' → logprob: -17.87506675720215
    5. ' ' → logprob: -18.37506675720215
    6. '<|end|>' → logprob: -19.75006675720215
    7. '(p' → logprob: -20.37506675720215
    8. '	p' → logprob: -20.87506675720215
    9. '
' → logprob: -21.00006675720215
    10. 'python' → logprob: -21.25006675720215

Token 128: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17991045117378235
    2. ' ==' → logprob: -1.80491042137146
    3. ' ' → logprob: -9.929910659790039
    4. '<' → logprob: -10.179910659790039
    5. '[' → logprob: -11.054910659790039
    6. '**' → logprob: -11.304910659790039
    7. '=' → logprob: -11.679910659790039
    8. ')==' → logprob: -11.929910659790039
    9. '   ' → logprob: -12.179910659790039
    10. '===' → logprob: -12.179910659790039

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.75006675720215
    4. '  ' → logprob: -18.87506675720215
    5. '00' → logprob: -21.00006675720215
    6. '۰' → logprob: -21.25006675720215
    7. '    ' → logprob: -21.50006675720215
    8. ' ' → logprob: -21.62506675720215
    9. 'p' → logprob: -22.00006675720215
    10. '     ' → logprob: -22.18756675720215

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6934900879859924
    2. ':
' → logprob: -0.6934900879859924
    3. ' and' → logprob: -9.193490028381348
    4. ' :
' → logprob: -9.193490028381348
    5. ' :' → logprob: -10.068490028381348
    6. '           ' → logprob: -10.568490028381348
    7. ':
' → logprob: -10.818490028381348
    8. ':

' → logprob: -11.068490028381348
    9. '):
' → logprob: -11.318490028381348
    10. '       ' → logprob: -11.568490028381348

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15048468112945557
    2. ' p' → logprob: -2.275484561920166
    3. '       ' → logprob: -4.025484561920166
    4. 'p' → logprob: -4.775484561920166
    5. ' N' → logprob: -5.150484561920166
    6. '        ' → logprob: -5.900484561920166
    7. '
' → logprob: -7.275484561920166
    8. 'N' → logprob: -7.900484561920166
    9. '         ' → logprob: -8.525485038757324
    10. ' ' → logprob: -8.525485038757324

Token 132: ' N' (ID: 478)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8290531635284424
    2. 'p' → logprob: -0.9540531635284424
    3. 'N' (adapté à ' N') → logprob: -2.4540531635284424
    4. ' N' → logprob: -2.5790531635284424
    5. ' junk' → logprob: -4.454052925109863
    6. '   ' → logprob: -6.579052925109863
    7. 'junk' → logprob: -6.704052925109863
    8. '           ' → logprob: -6.954052925109863
    9. '       ' → logprob: -7.954052925109863
    10. 'n' → logprob: -8.579052925109863

Token 133: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.0023108383174985647
    2. ' //' → logprob: -6.252310752868652
    3. '/=' → logprob: -8.377310752868652
    4. '//' → logprob: -9.002310752868652
    5. '=' → logprob: -10.502310752868652
    6. ' /=' → logprob: -14.002310752868652
    7. '/' → logprob: -15.252310752868652
    8. ' =' → logprob: -15.502310752868652
    9. 'div' → logprob: -16.50231170654297
    10. ' ' → logprob: -16.75231170654297

Token 134: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '2' → logprob: -16.8750057220459
    4. '
' → logprob: -19.0000057220459
    5. '10' → logprob: -19.8750057220459
    6. '   ' → logprob: -20.1250057220459
    7. '	p' → logprob: -20.2500057220459
    8. '<p' → logprob: -20.8750057220459
    9. '```' → logprob: -21.1250057220459
    10. ' ' → logprob: -22.1250057220459

Token 135: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3673017919063568
    2. 'p' → logprob: -1.2423018217086792
    3. '
' → logprob: -4.617301940917969
    4. ',' → logprob: -5.492301940917969
    5. ' p' → logprob: -6.117301940917969
    6. '       ' → logprob: -6.742301940917969
    7. ',p' → logprob: -6.742301940917969
    8. 'j' → logprob: -10.617301940917969
    9. '               ' → logprob: -11.492301940917969
    10. ' ,' → logprob: -11.617301940917969

Token 136: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009837547317147255
    2. ' p' → logprob: -4.634837627410889
    3. '           ' → logprob: -9.50983715057373
    4. '       ' → logprob: -12.50983715057373
    5. '   ' → logprob: -13.38483715057373
    6. '
' → logprob: -14.25983715057373
    7. 'junk' → logprob: -14.50983715057373
    8. ' ' → logprob: -15.38483715057373
    9. ' junk' → logprob: -15.38483715057373
    10. '	p' → logprob: -15.38483715057373

Token 137: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.0022307864855974913
    2. 'w' → logprob: -6.252230644226074
    3. 'wrk' → logprob: -9.002230644226074
    4. 'r' → logprob: -9.502230644226074
    5. 'rw' → logprob: -10.002230644226074
    6. '_wr' → logprob: -10.752230644226074
    7. ' ' → logprob: -12.502230644226074
    8. '   ' → logprob: -12.502230644226074
    9. 'rr' → logprob: -13.002230644226074
    10. '```' → logprob: -13.127230644226074

Token 138: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029774675145745277
    2. ' +=' → logprob: -3.5297746658325195
    3. ']+=' → logprob: -10.65477466583252
    4. '+='' → logprob: -15.40477466583252
    5. '+=(' → logprob: -15.77977466583252
    6. '+' → logprob: -15.90477466583252
    7. '=' → logprob: -15.90477466583252
    8. '+="' → logprob: -17.529775619506836
    9. ' ' → logprob: -18.154775619506836
    10. '```' → logprob: -18.529775619506836

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.875045776367188
    4. ' ' → logprob: -20.375045776367188
    5. '
' → logprob: -20.562545776367188
    6. '１' → logprob: -20.875045776367188
    7. '```' → logprob: -20.937545776367188
    8. '  ' → logprob: -21.062545776367188
    9. '+' → logprob: -21.187545776367188
    10. '۱' → logprob: -21.437545776367188

Token 140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019419649615883827
    2. '
' → logprob: -6.251942157745361
    3. '        
' → logprob: -12.501941680908203
    4. '   ' → logprob: -12.626941680908203
    5. '```' → logprob: -12.751941680908203
    6. '           ' → logprob: -14.626941680908203
    7. '
' → logprob: -15.126941680908203
    8. ' if' → logprob: -15.126941680908203
    9. ',' → logprob: -15.126941680908203
    10. 'n' → logprob: -15.439441680908203

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.5491004129871726e-05
    2. ' else' → logprob: -11.125045776367188
    3. '
' → logprob: -11.625045776367188
    4. ' p' → logprob: -12.375045776367188
    5. '   ' → logprob: -12.500045776367188
    6. '           ' → logprob: -12.625045776367188
    7. ' if' → logprob: -12.625045776367188
    8. 'else' → logprob: -13.750045776367188
    9. '        
' → logprob: -13.875045776367188
    10. '```' → logprob: -13.875045776367188

Token 142: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3067583739757538
    2. ' if' → logprob: -1.5567584037780762
    3. '       ' → logprob: -2.931758403778076
    4. '   ' → logprob: -10.931757926940918
    5. '
' → logprob: -11.306757926940918
    6. ';if' → logprob: -12.556757926940918
    7. '	if' → logprob: -12.806757926940918
    8. ' ' → logprob: -12.931757926940918
    9. '```' → logprob: -13.181757926940918
    10. 'If' → logprob: -13.181757926940918

Token 143: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.061981018632650375
    2. 'p' → logprob: -2.811980962753296
    3. ' ' → logprob: -11.436981201171875
    4. ' not' → logprob: -13.936981201171875
    5. ' ' → logprob: -14.561981201171875
    6. '(p' → logprob: -15.061981201171875
    7. 'not' → logprob: -15.936981201171875
    8. 'pw' → logprob: -15.936981201171875
    9. '  ' → logprob: -16.061981201171875
    10. '   ' → logprob: -16.124481201171875

Token 144: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.055131521075963974
    2. 'r' → logprob: -3.305131435394287
    3. 'w' → logprob: -4.805131435394287
    4. '>' → logprob: -5.305131435394287
    5. 'rw' → logprob: -7.305131435394287
    6. ' >' → logprob: -7.555131435394287
    7. 'wrk' → logprob: -7.805131435394287
    8. '   ' → logprob: -8.180131912231445
    9. '_wr' → logprob: -8.180131912231445
    10. ' ' → logprob: -8.430131912231445

Token 145: ':' (ID: 25)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05698391795158386
    2. ' >' → logprob: -2.9319839477539062
    3. ':' → logprob: -6.181983947753906
    4. '>:' → logprob: -10.806983947753906
    5. '<|end|>' → logprob: -12.931983947753906
    6. '   ' → logprob: -13.306983947753906
    7. ':
' → logprob: -13.681983947753906
    8. '!=' → logprob: -14.056983947753906
    9. ' :' → logprob: -14.181983947753906
    10. '0' → logprob: -14.306983947753906

Token 146: ' junk' (ID: 36526)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18428008258342743
    2. ' junk' → logprob: -1.8092800378799438
    3. '           ' → logprob: -5.934279918670654
    4. '        ' → logprob: -7.434279918670654
    5. 'junk' → logprob: -7.559279918670654
    6. '
' → logprob: -8.059280395507812
    7. '```' → logprob: -9.184280395507812
    8. '   ' → logprob: -9.684280395507812
    9. '        
' → logprob: -10.184280395507812
    10. '    ' → logprob: -10.184280395507812

Token 147: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006334475474432111
    2. '.' → logprob: -7.375633239746094
    3. 'append' → logprob: -12.375633239746094
    4. ' .' → logprob: -13.375633239746094
    5. '.app' → logprob: -14.500633239746094
    6. '.extend' → logprob: -15.250633239746094
    7. '.ap' → logprob: -16.000633239746094
    8. '+=' → logprob: -16.750633239746094
    9. '.Append' → logprob: -16.750633239746094
    10. ' append' → logprob: -16.875633239746094

Token 148: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00034869377850554883
    2. '([' → logprob: -8.000349044799805
    3. '(' → logprob: -11.375349044799805
    4. '(([' → logprob: -13.625349044799805
    5. ' ((' → logprob: -14.875349044799805
    6. '(
' → logprob: -16.500349044799805
    7. ' ' → logprob: -17.500349044799805
    8. '(((' → logprob: -17.875349044799805
    9. '   ' → logprob: -18.625349044799805
    10. '(p' → logprob: -19.250349044799805

Token 149: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.061054359131958e-06
    2. ' p' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '	p' → logprob: -18.87500762939453
    5. '(p' → logprob: -19.12500762939453
    6. ' ' → logprob: -19.50000762939453
    7. '    ' → logprob: -20.25000762939453
    8. '*p' → logprob: -20.50000762939453
    9. ',p' → logprob: -20.62500762939453
    10. '       ' → logprob: -20.62500762939453

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07155756652355194
    2. ',p' → logprob: -2.6965575218200684
    3. ' ,' → logprob: -6.446557521820068
    4. 'p' → logprob: -11.071557998657227
    5. ',
' → logprob: -12.071557998657227
    6. ' p' → logprob: -12.321557998657227
    7. ',w' → logprob: -13.196557998657227
    8. ',n' → logprob: -14.196557998657227
    9. '[' → logprob: -14.321557998657227
    10. '[p' → logprob: -14.696557998657227

Token 151: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048587825149297714
    2. ' p' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.173587799072266
    4. ')p' → logprob: -16.548587799072266
    5. '	p' → logprob: -17.298587799072266
    6. '    ' → logprob: -17.548587799072266
    7. '(p' → logprob: -17.673587799072266
    8. '   ' → logprob: -17.673587799072266
    9. 'pow' → logprob: -17.798587799072266
    10. ')' → logprob: -17.798587799072266

Token 152: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.44824710488319397
    2. 'w' → logprob: -1.5732470750808716
    3. 'r' → logprob: -1.9482470750808716
    4. '))' → logprob: -4.573246955871582
    5. 'rw' → logprob: -7.073246955871582
    6. 'wer' → logprob: -9.823246955871582
    7. 'р' → logprob: -10.448246955871582
    8. ')' → logprob: -11.448246955871582
    9. '
' → logprob: -11.573246955871582
    10. '_r' → logprob: -11.698246955871582

Token 153: '))
' (ID: 2210)
  Prédit: '));'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '));' → logprob: -0.06377715617418289
    2. '))' → logprob: -3.313777208328247
    3. '))
' → logprob: -3.688777208328247
    4. ')),' → logprob: -8.938776969909668
    5. '       ' → logprob: -9.563776969909668
    6. ' ' → logprob: -9.688776969909668
    7. ');' → logprob: -10.188776969909668
    8. '))
' → logprob: -10.688776969909668
    9. '));
' → logprob: -10.688776969909668
    10. '),' → logprob: -10.938776969909668

Token 154: '       ' (ID: 309)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8506040573120117
    2. '       ' → logprob: -1.4756040573120117
    3. ',p' → logprob: -2.1006040573120117
    4. ',' → logprob: -2.4756040573120117
    5. '
' → logprob: -2.7256040573120117
    6. ';p' → logprob: -3.9756040573120117
    7. ' ' → logprob: -4.100604057312012
    8. 'p' → logprob: -4.225604057312012
    9. '           ' → logprob: -5.475604057312012
    10. '(p' → logprob: -5.475604057312012

Token 155: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.39664149284362793
    2. ' p' → logprob: -1.646641492843628
    3. '       ' → logprob: -2.021641492843628
    4. '   ' → logprob: -6.146641731262207
    5. '    ' → logprob: -9.396641731262207
    6. ' ' → logprob: -10.896641731262207
    7. '      ' → logprob: -11.771641731262207
    8. '
' → logprob: -12.146641731262207
    9. '	p' → logprob: -12.146641731262207
    10. '     ' → logprob: -12.271641731262207

Token 156: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01419076882302761
    2. ' +=' → logprob: -4.264190673828125
    3. '+' → logprob: -11.264190673828125
    4. '=' → logprob: -12.264190673828125
    5. ',' → logprob: -12.514190673828125
    6. ']+=' → logprob: -12.889190673828125
    7. '++' → logprob: -13.639190673828125
    8. '```' → logprob: -14.014190673828125
    9. 'p' → logprob: -14.514190673828125
    10. 'increment' → logprob: -15.014190673828125

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.362307223957032e-05
    2. ' ' → logprob: -9.750073432922363
    3. '(' → logprob: -12.250073432922363
    4. 'p' → logprob: -12.375073432922363
    5. '2' → logprob: -13.375073432922363
    6. '-' → logprob: -13.625073432922363
    7. '(p' → logprob: -13.750073432922363
    8. '{' → logprob: -14.625073432922363
    9. '[' → logprob: -14.875073432922363
    10. '+' → logprob: -15.625073432922363

Token 158: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7081005573272705
    2. ' p' → logprob: -1.8331005573272705
    3. ';' → logprob: -1.9581005573272705
    4. 'p' → logprob: -2.2081005573272705
    5. ',' → logprob: -2.8331005573272705
    6. '   ' → logprob: -3.9581005573272705
    7. ';p' → logprob: -4.333100318908691
    8. '0' → logprob: -5.958100318908691
    9. ',p' → logprob: -6.708100318908691
    10. '
' → logprob: -7.083100318908691

Token 159: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0059747775085270405
    2. ' p' → logprob: -5.130974769592285
    3. '   ' → logprob: -10.130974769592285
    4. '       ' → logprob: -12.380974769592285
    5. ' ' → logprob: -13.505974769592285
    6. '  ' → logprob: -15.130974769592285
    7. '	p' → logprob: -16.3809757232666
    8. '0' → logprob: -16.5059757232666
    9. '    ' → logprob: -16.6309757232666
    10. 'pow' → logprob: -17.0059757232666

Token 160: 'wr' (ID: 16085)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001093841710826382
    2. ' =' → logprob: -9.125109672546387
    3. '0' → logprob: -15.000109672546387
    4. '=
' → logprob: -19.00010871887207
    5. ',' → logprob: -19.75010871887207
    6. '=False' → logprob: -20.25010871887207
    7. '=

' → logprob: -20.37510871887207
    8. '=}' → logprob: -20.87510871887207
    9. ' ' → logprob: -21.00010871887207
    10. '=int' → logprob: -21.12510871887207

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -17.50004005432129
    4. '<|end|>' → logprob: -18.31254005432129
    5. '   ' → logprob: -18.43754005432129
    6. '00' → logprob: -18.93754005432129
    7. '000' → logprob: -19.18754005432129
    8. '  ' → logprob: -19.31254005432129
    9. '```' → logprob: -19.37504005432129
    10. '０' → logprob: -19.43754005432129

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01166094746440649
    2. 'return' → logprob: -4.636661052703857
    3. ' return' → logprob: -6.761661052703857
    4. ' if' → logprob: -7.886661052703857
    5. 'if' → logprob: -8.2616605758667
    6. 'while' → logprob: -9.3866605758667
    7. ' while' → logprob: -10.7616605758667
    8. '
' → logprob: -13.0116605758667
    9. ' ' → logprob: -13.8866605758667
    10. '       ' → logprob: -14.3866605758667

Token 164: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31845611333847046
    2. 'return' → logprob: -1.9434561729431152
    3. '   ' → logprob: -2.3184561729431152
    4. ' if' → logprob: -3.8184561729431152
    5. 'while' → logprob: -4.943456172943115
    6. ' return' → logprob: -6.318456172943115
    7. ' while' → logprob: -9.068455696105957
    8. '
' → logprob: -10.693455696105957
    9. 'for' → logprob: -10.818455696105957
    10. ' ' → logprob: -11.318455696105957

Token 165: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00466176075860858
    2. ' if' → logprob: -5.379661560058594
    3. 'return' → logprob: -10.254661560058594
    4. '
' → logprob: -12.379661560058594
    5. '   ' → logprob: -13.629661560058594
    6. '```' → logprob: -14.504661560058594
    7. ' return' → logprob: -15.629661560058594
    8. '#' → logprob: -16.754661560058594
    9. '    
' → logprob: -17.629661560058594
    10. ' ' → logprob: -17.879661560058594

Token 166: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804585337638855
    2. ' N' → logprob: -3.288045883178711
    3. ' ' → logprob: -13.038045883178711
    4. '   ' → logprob: -14.038045883178711
    5. ' ' → logprob: -14.663045883178711
    6. '	N' → logprob: -15.163045883178711
    7. '  ' → logprob: -15.538045883178711
    8. '>N' → logprob: -15.663045883178711
    9. 'n' → logprob: -15.975545883178711
    10. '(N' → logprob: -16.53804588317871

Token 167: '!=' (ID: 11408)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008615988306701183
    2. ' >' → logprob: -4.758615970611572
    3. '!=' → logprob: -14.38361644744873
    4. ' ' → logprob: -14.75861644744873
    5. '1' → logprob: -15.75861644744873
    6. '()>' → logprob: -16.383615493774414
    7. ')>' → logprob: -16.383615493774414
    8. ' ' → logprob: -16.508615493774414
    9. '&gt' → logprob: -16.883615493774414
    10. '   ' → logprob: -17.008615493774414

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.1250057220459
    4. '>' → logprob: -16.2500057220459
    5. '
' → logprob: -16.7500057220459
    6. '```' → logprob: -17.5000057220459
    7. '0' → logprob: -18.5000057220459
    8. '  ' → logprob: -19.3750057220459
    9. '

' → logprob: -19.6250057220459
    10. '[' → logprob: -19.6250057220459

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006091846618801355
    2. ':
' → logprob: -5.131092071533203
    3. ':j' → logprob: -8.756092071533203
    4. '   ' → logprob: -12.381092071533203
    5. ' :' → logprob: -14.006092071533203
    6. ':

' → logprob: -14.631092071533203
    7. ':
' → logprob: -16.381092071533203
    8. '  ' → logprob: -17.006092071533203
    9. '       ' → logprob: -17.131092071533203
    10. '    ' → logprob: -17.506092071533203

Token 170: ' junk' (ID: 36526)
  Prédit: ' junk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' junk' → logprob: -0.03623386099934578
    2. 'junk' → logprob: -3.411233901977539
    3. '   ' → logprob: -6.036233901977539
    4. '       ' → logprob: -8.661233901977539
    5. '    ' → logprob: -11.536233901977539
    6. ' ' → logprob: -13.036233901977539
    7. '	j' → logprob: -13.161233901977539
    8. 'j' → logprob: -13.911233901977539
    9. 'juk' → logprob: -13.911233901977539
    10. ' jun' → logprob: -14.286233901977539

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.949026571121067e-05
    2. '.' → logprob: -9.750099182128906
    3. 'append' → logprob: -10.125099182128906
    4. ' .' → logprob: -14.250099182128906
    5. '=' → logprob: -16.375099182128906
    6. '.setdefault' → logprob: -16.500099182128906
    7. '   ' → logprob: -16.875099182128906
    8. ').' → logprob: -17.000099182128906
    9. '_append' → logprob: -17.500099182128906
    10. '	append' → logprob: -17.750099182128906

Token 172: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -15.125059127807617
    4. '(N' → logprob: -15.250059127807617
    5. ' ((' → logprob: -18.875059127807617
    6. ' ' → logprob: -19.875059127807617
    7. ' (' → logprob: -20.875059127807617
    8. '```' → logprob: -20.875059127807617
    9. '(

' → logprob: -21.000059127807617
    10. '[(' → logprob: -21.625059127807617

Token 173: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004248355980962515
    2. '(N' → logprob: -7.875424861907959
    3. ' N' → logprob: -10.1254243850708
    4. '(' → logprob: -13.0004243850708
    5. ' (' → logprob: -13.2504243850708
    6. ',N' → logprob: -15.8754243850708
    7. ' ' → logprob: -15.8754243850708
    8. '	N' → logprob: -15.8754243850708
    9. '[N' → logprob: -16.375425338745117
    10. '   ' → logprob: -16.625425338745117

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. '1' → logprob: -11.125022888183594
    3. ' ,' → logprob: -11.750022888183594
    4. ',
' → logprob: -16.000022888183594
    5. ' ' → logprob: -16.500022888183594
    6. '   ' → logprob: -17.625022888183594
    7. '2' → logprob: -17.750022888183594
    8. '```' → logprob: -18.000022888183594
    9. '0' → logprob: -18.125022888183594
    10. '‌,' → logprob: -18.875022888183594

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021857109386473894
    2. ' ' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.627185821533203
    4. '  ' → logprob: -16.252185821533203
    5. ' ' → logprob: -17.502185821533203
    6. '0' → logprob: -17.939685821533203
    7. '```' → logprob: -18.502185821533203
    8. '    ' → logprob: -18.752185821533203
    9. '     ' → logprob: -18.814685821533203
    10. '
' → logprob: -19.252185821533203

Token 176: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.665608823299408
    2. '))' → logprob: -1.4156088829040527
    3. ')
' → logprob: -1.6656088829040527
    4. '))
' → logprob: -2.9156088829040527
    5. ')
' → logprob: -11.915608406066895
    6. ')return' → logprob: -13.290608406066895
    7. '))
' → logprob: -13.415608406066895
    8. ')

' → logprob: -13.915608406066895
    9. ')))' → logprob: -14.290608406066895
    10. '))

' → logprob: -14.290608406066895

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04868093132972717
    2. 'return' → logprob: -3.2986810207366943
    3. ' return' → logprob: -4.548680782318115
    4. '	return' → logprob: -14.173681259155273
    5. ' ' → logprob: -14.548681259155273
    6. '
' → logprob: -14.548681259155273
    7. ':return' → logprob: -15.673681259155273
    8. '{return' → logprob: -15.923681259155273
    9. '  ' → logprob: -17.048681259155273
    10. '```' → logprob: -17.048681259155273

Token 178: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03063703514635563
    2. ' return' → logprob: -3.53063702583313
    3. '   ' → logprob: -7.030637264251709
    4. ' ' → logprob: -14.15563678741455
    5. '
' → logprob: -14.65563678741455
    6. '	return' → logprob: -15.03063678741455
    7. '{return' → logprob: -16.030637741088867
    8. '  ' → logprob: -16.530637741088867
    9. ':return' → logprob: -17.030637741088867
    10. '    ' → logprob: -17.280637741088867

Token 179: ' junk' (ID: 36526)
  Prédit: 'junk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junk' → logprob: -0.0298639964312315
    2. ' junk' → logprob: -3.5298640727996826
    3. 'j' → logprob: -9.779864311218262
    4. '[j' → logprob: -9.904864311218262
    5. '(j' → logprob: -12.779864311218262
    6. 'juk' → logprob: -13.654864311218262
    7. ' ' → logprob: -14.529864311218262
    8. 'jum' → logprob: -14.654864311218262
    9. '	j' → logprob: -15.154864311218262
    10. 'jun' → logprob: -15.404864311218262

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3496257960796356
    2. '#' → logprob: -2.474625825881958
    3. '<|end|>' → logprob: -2.724625825881958
    4. ')' → logprob: -3.849625825881958
    5. 'for' → logprob: -3.974625825881958
    6. ' ' → logprob: -4.349625587463379
    7. '
' → logprob: -4.474625587463379
    8. 'n' → logprob: -4.599625587463379
    9. 'factor' → logprob: -4.724625587463379
    10. 'import' → logprob: -4.849625587463379

Token 182: ' combos' (ID: 150243)
  Prédit: ' fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fib' → logprob: -1.2339423894882202
    2. ' prime' → logprob: -1.3589423894882202
    3. ' factorial' → logprob: -2.2339425086975098
    4. ' gcd' → logprob: -2.7339425086975098
    5. ' fibonacci' → logprob: -3.1089425086975098
    6. ' factor' → logprob: -3.3589425086975098
    7. ' main' → logprob: -3.8589425086975098
    8. ' sum' → logprob: -3.9839425086975098
    9. ' count' → logprob: -4.48394250869751
    10. ' primes' → logprob: -4.60894250869751

Token 183: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036633722484111786
    2. '(n' → logprob: -7.128663539886475
    3. '(iter' → logprob: -7.128663539886475
    4. '(range' → logprob: -8.128663063049316
    5. ' (' → logprob: -8.503663063049316
    6. '(a' → logprob: -8.503663063049316
    7. '_' → logprob: -8.753663063049316
    8. '(_' → logprob: -8.878663063049316
    9. '('' → logprob: -9.628663063049316
    10. '):' → logprob: -9.753663063049316

Token 184: '(big' (ID: 140437)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02434425987303257
    2. '(' → logprob: -3.7743442058563232
    3. '(N' → logprob: -7.649344444274902
    4. '(lst' → logprob: -8.399344444274902
    5. '(iter' → logprob: -9.274344444274902
    6. ' (' → logprob: -9.649344444274902
    7. '(s' → logprob: -10.024344444274902
    8. '(k' → logprob: -10.649344444274902
    9. '(def' → logprob: -10.899344444274902
    10. '(m' → logprob: -11.149344444274902

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39618873596191406
    2. '):' → logprob: -1.896188735961914
    3. ',n' → logprob: -2.396188735961914
    4. ')' → logprob: -3.396188735961914
    5. 'n' → logprob: -4.396188735961914
    6. '_n' → logprob: -5.021188735961914
    7. 'N' → logprob: -5.271188735961914
    8. 'int' → logprob: -5.396188735961914
    9. '):
' → logprob: -5.396188735961914
    10. '(n' → logprob: -6.146188735961914

Token 186: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.012298309244215488
    2. ' small' → logprob: -5.387298107147217
    3. 'k' → logprob: -5.637298107147217
    4. 'little' → logprob: -5.762298107147217
    5. 'sm' → logprob: -7.512298107147217
    6. ' k' → logprob: -9.012298583984375
    7. 'n' → logprob: -9.137298583984375
    8. 'r' → logprob: -10.012298583984375
    9. 'subset' → logprob: -10.512298583984375
    10. ' little' → logprob: -11.012298583984375

Token 187: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012092802207916975
    2. '):
' → logprob: -6.876209259033203
    3. ')' → logprob: -8.876209259033203
    4. '):
' → logprob: -11.001209259033203
    5. ' ):' → logprob: -11.376209259033203
    6. ',' → logprob: -12.501209259033203
    7. ':' → logprob: -13.376209259033203
    8. '):

' → logprob: -13.501209259033203
    9. '   ' → logprob: -14.501209259033203
    10. '=' → logprob: -14.501209259033203

Token 188: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03569682314991951
    2. 'return' → logprob: -4.285696983337402
    3. 'from' → logprob: -4.410696983337402
    4. ' return' → logprob: -4.910696983337402
    5. ' from' → logprob: -6.785696983337402
    6. 'import' → logprob: -7.535696983337402
    7. '	return' → logprob: -10.785696983337402
    8. '    
' → logprob: -11.035696983337402
    9. ' ' → logprob: -11.285696983337402
    10. '  ' → logprob: -11.285696983337402

Token 189: ' '' (ID: 461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6603920459747314
    2. 'from' → logprob: -1.6603920459747314
    3. ' return' → logprob: -1.7853920459747314
    4. 'import' → logprob: -3.0353920459747314
    5. ' from' → logprob: -3.7853920459747314
    6. 'def' → logprob: -4.660391807556152
    7. '   ' → logprob: -4.660391807556152
    8. 'big' → logprob: -4.660391807556152
    9. '0' → logprob: -5.410391807556152
    10. ' ' → logprob: -5.535391807556152

Token 190: 'big' (ID: 25934)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6418866515159607
    2. 'return' → logprob: -1.0168867111206055
    3. '"""' → logprob: -3.6418867111206055
    4. 'import' → logprob: -3.8918867111206055
    5. ''''' → logprob: -4.0168867111206055
    6. ''''
' → logprob: -4.6418867111206055
    7. 'def' → logprob: -5.0168867111206055
    8. ' return' → logprob: -5.0168867111206055
    9. '   ' → logprob: -5.2668867111206055
    10. ''' → logprob: -5.5168867111206055

Token 191: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03962782770395279
    2. ' ,' → logprob: -4.789628028869629
    3. ')' → logprob: -5.039628028869629
    4. ' >=' → logprob: -5.414628028869629
    5. '>=' → logprob: -5.539628028869629
    6. ' ' → logprob: -5.789628028869629
    7. '>' → logprob: -6.039628028869629
    8. '-' → logprob: -6.164628028869629
    9. ' -' → logprob: -6.289628028869629
    10. '):' → logprob: -6.414628028869629

Token 192: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14919863641262054
    2. '>=' → logprob: -2.274198532104492
    3. ' >=' → logprob: -4.649198532104492
    4. 'def' → logprob: -5.024198532104492
    5. '=' → logprob: -5.149198532104492
    6. '==' → logprob: -6.274198532104492
    7. '>' → logprob: -6.399198532104492
    8. ' ,' → logprob: -6.899198532104492
    9. 'choose' → logprob: -7.024198532104492
    10. '   ' → logprob: -7.024198532104492

Token 193: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.15154731273651123
    2. 'small' → logprob: -2.651547431945801
    3. ''' → logprob: -2.901547431945801
    4. ' '' → logprob: -4.776547431945801
    5. ' small' → logprob: -5.151547431945801
    6. ' ' → logprob: -8.1515474319458
    7. '   ' → logprob: -9.4015474319458
    8. 'little' → logprob: -9.6515474319458
    9. ''l' → logprob: -9.7765474319458
    10. '`' → logprob: -10.0265474319458

Token 194: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.0021155239082872868
    2. ' small' → logprob: -6.252115726470947
    3. 'little' → logprob: -8.877115249633789
    4. 'sm' → logprob: -10.752115249633789
    5. ' ' → logprob: -12.002115249633789
    6. ''s' → logprob: -12.627115249633789
    7. '_small' → logprob: -12.752115249633789
    8. '```' → logprob: -13.002115249633789
    9. '.small' → logprob: -13.127115249633789
    10. ''' → logprob: -13.502115249633789

Token 195: '',' (ID: 787)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4322843551635742
    2. ')' → logprob: -1.5572843551635742
    3. ' are' → logprob: -2.807284355163574
    4. '):
' → logprob: -3.307284355163574
    5. ',' → logprob: -4.432284355163574
    6. ''):' → logprob: -4.432284355163574
    7. ' ):' → logprob: -5.807284355163574
    8. '')' → logprob: -6.182284355163574
    9. ''' → logprob: -6.182284355163574
    10. ' )' → logprob: -6.682284355163574

Token 196: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5791996121406555
    2. 'def' → logprob: -2.3291995525360107
    3. ' n' → logprob: -2.5791995525360107
    4. ' return' → logprob: -2.5791995525360107
    5. ' def' → logprob: -2.7041995525360107
    6. '    ' → logprob: -3.7041995525360107
    7. ' /' → logprob: -3.8291995525360107
    8. 'n' → logprob: -3.9541995525360107
    9. 'return' → logprob: -4.20419979095459
    10. ' ' → logprob: -4.57919979095459

Token 197: ' friendly' (ID: 11888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8739757537841797
    2. 'from' → logprob: -1.6239757537841797
    3. 'def' → logprob: -1.8739757537841797
    4. 'big' → logprob: -2.7489757537841797
    5. '#' → logprob: -2.9989757537841797
    6. '
' → logprob: -3.8739757537841797
    7. 'small' → logprob: -4.24897575378418
    8. 'not' → logprob: -4.49897575378418
    9. 'return' → logprob: -4.49897575378418
    10. 'import' → logprob: -4.62397575378418

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7129272818565369
    2. ':' → logprob: -0.8379272818565369
    3. ':
' → logprob: -2.8379273414611816
    4. ',' → logprob: -5.087927341461182
    5. '):' → logprob: -5.212927341461182
    6. '):
' → logprob: -5.337927341461182
    7. '=' → logprob: -7.087927341461182
    8. '{' → logprob: -7.587927341461182
    9. ')' → logprob: -8.337926864624023
    10. ',
' → logprob: -9.337926864624023

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6859369874000549
    2. '   ' → logprob: -0.8109369874000549
    3. ':
' → logprob: -4.18593692779541
    4. ' return' → logprob: -4.56093692779541
    5. '):' → logprob: -4.81093692779541
    6. '=' → logprob: -4.93593692779541
    7. '):
' → logprob: -5.56093692779541
    8. 'return' → logprob: -6.31093692779541
    9. ' =' → logprob: -6.68593692779541
    10. ',' → logprob: -7.06093692779541

Token 200: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23016005754470825
    2. '   ' → logprob: -2.6051599979400635
    3. ' from' → logprob: -2.6051599979400635
    4. 'if' → logprob: -4.105160236358643
    5. 'res' → logprob: -4.355160236358643
    6. 'import' → logprob: -4.605160236358643
    7. 'return' → logprob: -4.855160236358643
    8. ' res' → logprob: -6.105160236358643
    9. ' if' → logprob: -6.230160236358643
    10. 'fact' → logprob: -6.980160236358643

Token 201: ' horr' (ID: 16869)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14044567942619324
    2. 'return' → logprob: -3.2654457092285156
    3. 'if' → logprob: -3.3904457092285156
    4. 'res' → logprob: -3.3904457092285156
    5. 'import' → logprob: -4.515445709228516
    6. ' from' → logprob: -5.640445709228516
    7. 'fact' → logprob: -6.515445709228516
    8. 'result' → logprob: -6.640445709228516
    9. '"""' → logprob: -6.765445709228516
    10. 'r' → logprob: -6.765445709228516

Token 202: 'ifically' (ID: 46730)
  Prédit: 'ibly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibly' → logprob: -0.3349462151527405
    2. 'ible' → logprob: -1.3349461555480957
    3. '   ' → logprob: -4.334946155548096
    4. 'id' → logprob: -5.584946155548096
    5. 'ifically' → logprob: -6.084946155548096
    6. 'ify' → logprob: -7.584946155548096
    7. 'endous' → logprob: -8.084946632385254
    8. 'ide' → logprob: -8.209946632385254
    9. 'ified' → logprob: -8.334946632385254
    10. 'ors' → logprob: -8.834946632385254

Token 203: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6484609246253967
    2. ' inefficient' → logprob: -2.023460865020752
    3. 'ine' → logprob: -2.523460865020752
    4. 'from' → logprob: -3.148460865020752
    5. ' ine' → logprob: -3.398460865020752
    6. 'import' → logprob: -3.648460865020752
    7. ' naive' → logprob: -3.898460865020752
    8. ' ugly' → logprob: -3.898460865020752
    9. 'verbose' → logprob: -4.523460865020752
    10. 'def' → logprob: -4.648460865020752

Token 204: '-place' (ID: 81838)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8347234725952148
    2. 'complete' → logprob: -2.209723472595215
    3. 'efficient' → logprob: -2.709723472595215
    4. 'math' → logprob: -2.834723472595215
    5. 'com' → logprob: -2.959723472595215
    6. 'factor' → logprob: -3.084723472595215
    7. 'put' → logprob: -3.334723472595215
    8. 'exact' → logprob: -3.334723472595215
    9. 'ternal' → logprob: -3.959723472595215
    10. 'e' → logprob: -4.209723472595215

Token 205: ' numerator' (ID: 149054)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.193421721458435
    2. ' def' → logprob: -1.818421721458435
    3. 'def' → logprob: -2.3184218406677246
    4. ' =' → logprob: -2.4434218406677246
    5. ' big' → logprob: -3.1934218406677246
    6. ' return' → logprob: -3.4434218406677246
    7. '=' → logprob: -3.5684218406677246
    8. 'big' → logprob: -3.5684218406677246
    9. ' if' → logprob: -3.6934218406677246
    10. 'return' → logprob: -3.8184218406677246

Token 206: ' modification' (ID: 29847)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14776214957237244
    2. '=' → logprob: -2.0227620601654053
    3. ',' → logprob: -6.147762298583984
    4. '=n' → logprob: -6.772762298583984
    5. '   ' → logprob: -7.522762298583984
    6. 's' → logprob: -8.647762298583984
    7. '_=' → logprob: -8.647762298583984
    8. ' ' → logprob: -8.897762298583984
    9. '_n' → logprob: -9.147762298583984
    10. '_' → logprob: -9.522762298583984

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22771994769573212
    2. ' =' → logprob: -1.9777199029922485
    3. '=' → logprob: -4.102719783782959
    4. 'def' → logprob: -4.227719783782959
    5. ',' → logprob: -4.977719783782959
    6. ':' → logprob: -5.477719783782959
    7. ' numerator' → logprob: -5.727719783782959
    8. 'n' → logprob: -6.102719783782959
    9. ' for' → logprob: -6.227719783782959
    10. '):
' → logprob: -6.352719783782959

Token 208: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28151828050613403
    2. '=' → logprob: -2.1565182209014893
    3. '   ' → logprob: -2.5315182209014893
    4. 'def' → logprob: -3.5315182209014893
    5. ',' → logprob: -5.531518459320068
    6. ' for' → logprob: -5.906518459320068
    7. ' def' → logprob: -6.281518459320068
    8. ':' → logprob: -6.406518459320068
    9. '
' → logprob: -6.406518459320068
    10. ' numerator' → logprob: -6.531518459320068

Token 209: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1799330711364746
    2. '   ' → logprob: -2.3049330711364746
    3. ' for' → logprob: -2.4299330711364746
    4. 'n' → logprob: -2.6799330711364746
    5. 'result' → logprob: -2.8049330711364746
    6. 'res' → logprob: -2.9299330711364746
    7. 'numer' → logprob: -3.3049330711364746
    8. 'if' (adapté à ' if') → logprob: -3.4299330711364746
    9. 'num' → logprob: -3.4299330711364746
    10. ' res' → logprob: -3.5549330711364746

Token 210: ' big' (ID: 3464)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.16435791552066803
    2. 'big' → logprob: -2.539357900619507
    3. ' small' → logprob: -2.789357900619507
    4. ' big' → logprob: -4.664358139038086
    5. 'not' → logprob: -6.914358139038086
    6. ' not' → logprob: -7.914358139038086
    7. '(big' → logprob: -8.289358139038086
    8. '   ' → logprob: -10.289358139038086
    9. 'sm' → logprob: -10.414358139038086
    10. '(' → logprob: -10.539358139038086

Token 211: '-small' (ID: 76604)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4291631877422333
    2. ' <' → logprob: -1.0541632175445557
    3. '>=' → logprob: -8.554162979125977
    4. ' >=' → logprob: -9.679162979125977
    5. '>' → logprob: -9.929162979125977
    6. '<=' → logprob: -10.179162979125977
    7. '==' → logprob: -10.304162979125977
    8. ' ' → logprob: -10.679162979125977
    9. '<size' → logprob: -11.554162979125977
    10. ' <=' → logprob: -11.679162979125977

Token 212: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25442856550216675
    2. ' <' → logprob: -1.5044286251068115
    3. '==' → logprob: -6.879428386688232
    4. '>' → logprob: -7.754428386688232
    5. '<=' → logprob: -8.00442886352539
    6. ' ==' → logprob: -8.25442886352539
    7. ' <=' → logprob: -8.50442886352539
    8. ' >' → logprob: -9.00442886352539
    9. '>=' → logprob: -10.12942886352539
    10. ' ' → logprob: -10.87942886352539

Token 213: ' small' (ID: 3291)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06378687918186188
    2. 'small' → logprob: -3.4387869834899902
    3. ' ' → logprob: -3.6887869834899902
    4. ' small' → logprob: -5.43878698348999
    5. '1' → logprob: -9.313786506652832
    6. '=' → logprob: -9.688786506652832
    7. 'big' → logprob: -9.688786506652832
    8. '2' → logprob: -10.751286506652832
    9. '10' → logprob: -11.438786506652832
    10. '5' → logprob: -11.501286506652832

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006320151500403881
    2. ' :' → logprob: -5.881319999694824
    3. ' or' → logprob: -6.131319999694824
    4. ':
' → logprob: -6.881319999694824
    5. ':return' → logprob: -8.631319999694824
    6. '   ' → logprob: -10.256319999694824
    7. ' and' → logprob: -10.256319999694824
    8. '==' → logprob: -11.256319999694824
    9. '):' → logprob: -11.756319999694824
    10. '-' → logprob: -12.006319999694824

Token 215: ' small' (ID: 3291)
  Prédit: ' small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' small' → logprob: -0.15299619734287262
    2. '   ' → logprob: -3.027996301651001
    3. 'small' → logprob: -3.152996301651001
    4. '       ' → logprob: -3.652996301651001
    5. ' big' → logprob: -3.777996301651001
    6. 'big' → logprob: -6.527996063232422
    7. '_small' → logprob: -8.902996063232422
    8. ',' → logprob: -10.277996063232422
    9. ' ' → logprob: -10.402996063232422
    10. '    ' → logprob: -10.402996063232422

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602986603975296
    2. ' =' → logprob: -1.9102987051010132
    3. ',' → logprob: -10.035298347473145
    4. '*=' → logprob: -12.160298347473145
    5. '+=' → logprob: -12.285298347473145
    6. '   ' → logprob: -12.660298347473145
    7. '=sys' → logprob: -13.035298347473145
    8. '=int' → logprob: -13.160298347473145
    9. '=b' → logprob: -13.410298347473145
    10. '=min' → logprob: -13.660298347473145

Token 217: ' big' (ID: 3464)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.06202750653028488
    2. ' big' → logprob: -2.8120274543762207
    3. '(big' → logprob: -9.812027931213379
    4. '   ' → logprob: -13.312027931213379
    5. 'Big' → logprob: -14.062027931213379
    6. ' ' → logprob: -14.437027931213379
    7. '_big' → logprob: -14.562027931213379
    8. ' (' → logprob: -14.937027931213379
    9. 'min' → logprob: -15.062027931213379
    10. 'b' → logprob: -15.687027931213379

Token 218: '-small' (ID: 76604)
  Prédit: '-small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-small' → logprob: -0.12390332669019699
    2. '-' → logprob: -2.498903274536133
    3. ' -' → logprob: -3.373903274536133
    4. 'small' → logprob: -10.123903274536133
    5. ' small' → logprob: -10.373903274536133
    6. '-sm' → logprob: -10.498903274536133
    7. '-
' → logprob: -13.498903274536133
    8. '-big' → logprob: -14.498903274536133
    9. '_small' → logprob: -14.748903274536133
    10. ' ' → logprob: -14.998903274536133

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18338480591773987
    2. '
' → logprob: -1.8083847761154175
    3. '    
' → logprob: -6.558384895324707
    4. '<|end|>' → logprob: -7.183384895324707
    5. '
' → logprob: -8.558384895324707
    6. ' 
' → logprob: -8.558384895324707
    7. '  
' → logprob: -8.558384895324707
    8. ',' → logprob: -8.933384895324707
    9. '<|end|>' → logprob: -9.558384895324707
    10. 'tokens' → logprob: -9.683384895324707

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08285926282405853
    2. '
' → logprob: -2.5828592777252197
    3. '    
' → logprob: -5.832859039306641
    4. '  
' → logprob: -8.83285903930664
    5. ',' → logprob: -9.20785903930664
    6. ' 
' → logprob: -9.45785903930664
    7. ' numerator' → logprob: -9.58285903930664
    8. '
' → logprob: -10.08285903930664
    9. '   
' → logprob: -10.08285903930664
    10. 'n' → logprob: -10.08285903930664

Token 221: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0605753660202026
    2. ' numerator' → logprob: -1.5605753660202026
    3. ' res' → logprob: -2.060575485229492
    4. ' num' → logprob: -2.810575485229492
    5. 'num' → logprob: -3.060575485229492
    6. 'res' → logprob: -3.185575485229492
    7. 'numer' → logprob: -3.560575485229492
    8. '
' → logprob: -3.560575485229492
    9. ' result' → logprob: -4.185575485229492
    10. ' numer' → logprob: -4.435575485229492

Token 222: ' small' (ID: 3291)
  Prédit: ' small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' small' → logprob: -0.4802072048187256
    2. 'small' → logprob: -0.9802072048187256
    3. ' not' → logprob: -5.355207443237305
    4. 'not' → logprob: -6.855207443237305
    5. ' big' → logprob: -8.980207443237305
    6. '   ' → logprob: -9.355207443237305
    7. 'big' → logprob: -9.480207443237305
    8. ' ' → logprob: -10.980207443237305
    9. '_small' → logprob: -12.042707443237305
    10. '  ' → logprob: -12.980207443237305

Token 223: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5782723426818848
    2. ' ==' → logprob: -0.8282723426818848
    3. ' ' → logprob: -6.453272342681885
    4. '<' → logprob: -8.953271865844727
    5. '=' → logprob: -9.203271865844727
    6. ' in' → logprob: -9.328271865844727
    7. ':' → logprob: -9.703271865844727
    8. '<=' → logprob: -9.703271865844727
    9. '>' → logprob: -9.828271865844727
    10. ' <=' → logprob: -9.953271865844727

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008625920861959457
    2. ' ' → logprob: -4.7586259841918945
    3. '1' → logprob: -11.633625984191895
    4. '   ' → logprob: -13.946125984191895
    5. '  ' → logprob: -15.071125984191895
    6. '2' → logprob: -15.321125984191895
    7. '۰' → logprob: -15.633625984191895
    8. 'small' → logprob: -16.571125030517578
    9. '    ' → logprob: -16.633625030517578
    10. ' or' → logprob: -16.821125030517578

Token 225: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006201449781656265
    2. ':return' → logprob: -5.131201267242432
    3. ':
' → logprob: -8.38120174407959
    4. ' :' → logprob: -10.13120174407959
    5. ' or' → logprob: -13.00620174407959
    6. '   ' → logprob: -13.75620174407959
    7. 'return' → logprob: -16.131200790405273
    8. ' ' → logprob: -16.256200790405273
    9. '{return' → logprob: -16.631200790405273
    10. ' return' → logprob: -16.631200790405273

Token 226: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.050907351076602936
    2. '   ' → logprob: -3.1759073734283447
    3. 'return' → logprob: -5.800907135009766
    4. ' ' → logprob: -5.925907135009766
    5. '1' → logprob: -6.175907135009766
    6. '	return' → logprob: -10.050907135009766
    7. '       ' → logprob: -10.175907135009766
    8. ':return' → logprob: -11.925907135009766
    9. '    ' → logprob: -12.175907135009766
    10. '  ' → logprob: -12.175907135009766

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003185436362400651
    2. ' ' → logprob: -5.753185272216797
    3. '   ' → logprob: -12.128185272216797
    4. 'int' → logprob: -13.503185272216797
    5. '  ' → logprob: -14.253185272216797
    6. ' ' → logprob: -16.940685272216797
    7. '    ' → logprob: -17.065685272216797
    8. ' int' → logprob: -17.315685272216797
    9. '
' → logprob: -17.565685272216797
    10. '0' → logprob: -17.753185272216797

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. 'int' → logprob: -15.500041007995605
    5. '  ' → logprob: -16.62504005432129
    6. '0' → logprob: -18.37504005432129
    7. '```' → logprob: -18.37504005432129
    8. '`' → logprob: -18.50004005432129
    9. '
' → logprob: -18.56254005432129
    10. ' ' → logprob: -18.75004005432129

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40469127893447876
    2. '
' → logprob: -1.279691219329834
    3. '    
' → logprob: -3.029691219329834
    4. ' numerator' → logprob: -6.404691219329834
    5. '	
' → logprob: -7.279691219329834
    6. ' num' → logprob: -7.529691219329834
    7. ' 
' → logprob: -7.654691219329834
    8. ' result' → logprob: -7.654691219329834
    9. 'num' → logprob: -7.904691219329834
    10. '   
' → logprob: -8.154691696166992

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09745029360055923
    2. '
' → logprob: -3.3474502563476562
    3. ' numerator' → logprob: -4.097450256347656
    4. 'num' → logprob: -4.222450256347656
    5. 'numer' → logprob: -4.722450256347656
    6. ' num' → logprob: -5.597450256347656
    7. 'res' → logprob: -5.722450256347656
    8. '    
' → logprob: -5.847450256347656
    9. 'result' → logprob: -6.472450256347656
    10. 'n' → logprob: -6.472450256347656

Token 231: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1428520679473877
    2. 'num' → logprob: -1.6428520679473877
    3. 'numer' → logprob: -1.8928520679473877
    4. 'result' → logprob: -2.1428520679473877
    5. ' numerator' → logprob: -3.0178520679473877
    6. '   ' → logprob: -3.1428520679473877
    7. ' res' → logprob: -3.1428520679473877
    8. ' result' → logprob: -3.8928520679473877
    9. 'ret' → logprob: -4.142851829528809
    10. 'prod' → logprob: -4.892851829528809

Token 232: ' small' (ID: 3291)
  Prédit: ' small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' small' → logprob: -0.4269099831581116
    2. ' big' → logprob: -1.4269099235534668
    3. 'small' → logprob: -2.426909923553467
    4. 'big' → logprob: -4.051909923553467
    5. ' ' → logprob: -8.176910400390625
    6. ' isinstance' → logprob: -8.301910400390625
    7. ' not' → logprob: -8.864410400390625
    8. '(big' → logprob: -9.114410400390625
    9. '_small' → logprob: -9.176910400390625
    10. ' False' → logprob: -9.301910400390625

Token 233: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4753580689430237
    2. ' ==' → logprob: -0.9753580689430237
    3. '>' → logprob: -7.100358009338379
    4. ' >' → logprob: -7.975358009338379
    5. ' ' → logprob: -9.725358009338379
    6. '=' → logprob: -11.350358009338379
    7. '==
' → logprob: -11.725358009338379
    8. '```' → logprob: -11.975358009338379
    9. ' ' → logprob: -12.350358009338379
    10. ']==' → logprob: -12.725358009338379

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001088066608645022
    2. ' ' → logprob: -6.8760881423950195
    3. '0' → logprob: -10.37608814239502
    4. 'big' → logprob: -11.25108814239502
    5. 'small' → logprob: -13.00108814239502
    6. '2' → logprob: -13.18858814239502
    7. '   ' → logprob: -13.25108814239502
    8. '  ' → logprob: -13.62608814239502
    9. '-' → logprob: -14.00108814239502
    10. '(big' → logprob: -15.12608814239502

Token 235: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001270112581551075
    2. ' :' → logprob: -7.376270294189453
    3. ':return' → logprob: -7.376270294189453
    4. ':
' → logprob: -11.001270294189453
    5. 'return' → logprob: -14.876270294189453
    6. ' return' → logprob: -16.001270294189453
    7. '   ' → logprob: -16.126270294189453
    8. ' :
' → logprob: -17.376270294189453
    9. ':

' → logprob: -17.501270294189453
    10. ':
' → logprob: -18.001270294189453

Token 236: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0021995019633322954
    2. 'return' → logprob: -6.127199649810791
    3. '	return' → logprob: -11.877199172973633
    4. '    ' → logprob: -12.877199172973633
    5. '   ' → logprob: -13.127199172973633
    6. ' 
' → logprob: -13.752199172973633
    7. 'eturn' → logprob: -14.502199172973633
    8. ':return' → logprob: -14.752199172973633
    9. '<|end|>' → logprob: -15.252199172973633
    10. ' ' → logprob: -15.502199172973633

Token 237: ' big' (ID: 3464)
  Prédit: ' big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.47407999634742737
    2. 'big' → logprob: -0.974079966545105
    3. 'int' → logprob: -13.974080085754395
    4. '(big' → logprob: -14.099080085754395
    5. ' ' → logprob: -14.974080085754395
    6. '   ' → logprob: -15.224080085754395
    7. ' int' → logprob: -15.349080085754395
    8. ' bigint' → logprob: -15.724080085754395
    9. '.big' → logprob: -16.224079132080078
    10. 'Big' → logprob: -16.349079132080078

Token 238: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4931262135505676
    2. ' *' → logprob: -0.9931262135505676
    3. '*(' → logprob: -5.243126392364502
    4. ' return' → logprob: -5.243126392364502
    5. 'return' → logprob: -5.493126392364502
    6. '   ' → logprob: -6.743126392364502
    7. ' ' → logprob: -6.868126392364502
    8. '    ' → logprob: -8.118125915527344
    9. '  ' → logprob: -8.368125915527344
    10. ' -' → logprob: -8.618125915527344

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05256527289748192
    2. '
' → logprob: -3.427565336227417
    3. '    
' → logprob: -4.052565097808838
    4. '	
' → logprob: -8.177565574645996
    5. '   
' → logprob: -8.802565574645996
    6. ' 
' → logprob: -9.177565574645996
    7. ' result' → logprob: -9.302565574645996
    8. ' numerator' → logprob: -9.302565574645996
    9. 'num' → logprob: -9.427565574645996
    10. 'n' → logprob: -9.552565574645996

Token 240: ' top' (ID: 2344)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.435733675956726
    2. 'num' → logprob: -1.935733675956726
    3. ' res' → logprob: -2.3107337951660156
    4. ' numerator' → logprob: -2.3107337951660156
    5. 'numer' → logprob: -2.3107337951660156
    6. 'result' → logprob: -2.5607337951660156
    7. ' result' → logprob: -2.6857337951660156
    8. ' num' → logprob: -3.5607337951660156
    9. '   ' → logprob: -3.5607337951660156
    10. 'r' → logprob: -4.060733795166016

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6358385682106018
    2. '=' → logprob: -0.7608385682106018
    3. ',' → logprob: -6.885838508605957
    4. '_' → logprob: -7.635838508605957
    5. '   ' → logprob: -8.010838508605957
    6. ' ' → logprob: -8.135838508605957
    7. 'prod' → logprob: -9.010838508605957
    8. '_=' → logprob: -9.135838508605957
    9. '=n' → logprob: -9.385838508605957
    10. '=[' → logprob: -9.760838508605957

Token 242: ' [' (ID: 723)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.6268507242202759
    2. '1' → logprob: -1.7518507242202759
    3. ' big' → logprob: -2.0018506050109863
    4. ' list' → logprob: -2.7518506050109863
    5. 'list' → logprob: -3.5018506050109863
    6. ' [' → logprob: -4.001850605010986
    7. '[' → logprob: -4.126850605010986
    8. ' ' → logprob: -4.251850605010986
    9. '(big' → logprob: -6.001850605010986
    10. 'factor' → logprob: -6.376850605010986

Token 243: 'big' (ID: 25934)
  Prédit: 'big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.012862647883594036
    2. 'i' → logprob: -5.012862682342529
    3. ' big' → logprob: -5.262862682342529
    4. 'x' → logprob: -7.887862682342529
    5. ' i' → logprob: -8.137862205505371
    6. '*' → logprob: -9.512862205505371
    7. 'top' → logprob: -10.137862205505371
    8. '(big' → logprob: -10.387862205505371
    9. '_big' → logprob: -10.637862205505371
    10. 'k' → logprob: -11.137862205505371

Token 244: '-small' (ID: 76604)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.10794266313314438
    2. '-k' → logprob: -3.232942581176758
    3. ' -' → logprob: -3.357942581176758
    4. '-' → logprob: -3.607942581176758
    5. ']' → logprob: -8.107942581176758
    6. '-x' → logprob: -8.982942581176758
    7. ' ' → logprob: -9.357942581176758
    8. '-n' → logprob: -9.357942581176758
    9. '   ' → logprob: -9.857942581176758
    10. ' for' → logprob: -9.857942581176758

Token 245: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.349895179271698
    2. '+i' → logprob: -1.4748952388763428
    3. ' +' → logprob: -2.8498952388763428
    4. '+k' → logprob: -4.974895000457764
    5. '+j' → logprob: -6.599895000457764
    6. '+n' → logprob: -9.099895477294922
    7. '+x' → logprob: -9.224895477294922
    8. '+t' → logprob: -10.474895477294922
    9. ' i' → logprob: -11.724895477294922
    10. '+r' → logprob: -11.974895477294922

Token 246: '+' (ID: 10)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45526325702667236
    2. '+' → logprob: -1.0802632570266724
    3. 'for' → logprob: -3.705263137817383
    4. ' +' → logprob: -6.705263137817383
    5. ' ' → logprob: -8.580263137817383
    6. '+k' → logprob: -8.830263137817383
    7. '   ' → logprob: -11.205263137817383
    8. 'k' → logprob: -11.330263137817383
    9. '+i' → logprob: -11.455263137817383
    10. '	for' → logprob: -12.455263137817383

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002186426194384694
    2. ' ' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.25218677520752
    4. '2' → logprob: -15.12718677520752
    5. '  ' → logprob: -15.62718677520752
    6. '```' → logprob: -16.564685821533203
    7. '0' → logprob: -16.814685821533203
    8. ' for' → logprob: -17.189685821533203
    9. ' i' → logprob: -17.377185821533203
    10. 'i' → logprob: -17.377185821533203

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0794278085231781
    2. 'for' → logprob: -2.579427719116211
    3. ' ' → logprob: -7.579427719116211
    4. '	for' → logprob: -11.579427719116211
    5. '   ' → logprob: -12.079427719116211
    6. ']' → logprob: -12.204427719116211
    7. '  ' → logprob: -13.204427719116211
    8. ' k' → logprob: -13.454427719116211
    9. 'k' → logprob: -13.829427719116211
    10. '
' → logprob: -14.204427719116211

Token 249: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12693388760089874
    2. ' k' → logprob: -2.1269338130950928
    3. 'range' → logprob: -12.501934051513672
    4. ' range' → logprob: -13.126934051513672
    5. '	k' → logprob: -16.501934051513672
    6. ' ' → logprob: -17.001934051513672
    7. '_k' → logprob: -17.251934051513672
    8. ',k' → logprob: -18.376934051513672
    9. '{k' → logprob: -19.376934051513672
    10. '  ' → logprob: -19.626934051513672

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00017827287956606597
    2. 'in' → logprob: -9.000178337097168
    3. ' k' → logprob: -10.625178337097168
    4. ' ' → logprob: -10.750178337097168
    5. 'k' → logprob: -11.875178337097168
    6. 'range' → logprob: -14.375178337097168
    7. '<|end|>' → logprob: -14.375178337097168
    8. ' range' → logprob: -14.500178337097168
    9. '  ' → logprob: -15.625178337097168
    10. 's' → logprob: -15.875178337097168

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815052703022957
    2. ' range' → logprob: -4.018150329589844
    3. '	range' → logprob: -14.893150329589844
    4. '(range' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.518150329589844
    6. ' xrange' → logprob: -17.268150329589844
    7. '   ' → logprob: -18.643150329589844
    8. '
' → logprob: -19.143150329589844
    9. '  ' → logprob: -19.893150329589844
    10. 'rang' → logprob: -20.893150329589844

Token 252: '(s' (ID: 1858)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.04946080222725868
    2. ' small' → logprob: -3.0494608879089355
    3. '(s' → logprob: -7.0494608879089355
    4. '_small' → logprob: -13.299460411071777
    5. '.small' → logprob: -13.799460411071777
    6. '0' → logprob: -14.299460411071777
    7. ' ' → logprob: -14.299460411071777
    8. '(' → logprob: -14.549460411071777
    9. ' (' → logprob: -15.299460411071777
    10. 'sm' → logprob: -15.549460411071777

Token 253: 'mall' (ID: 28671)
  Prédit: 'mall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mall' → logprob: -0.0007176732178777456
    2. 'small' → logprob: -7.625717639923096
    3. ' mall' → logprob: -9.750718116760254
    4. '   ' → logprob: -10.000718116760254
    5. '[' → logprob: -10.250718116760254
    6. ' small' → logprob: -10.500718116760254
    7. ' ' → logprob: -10.625718116760254
    8. ')' → logprob: -11.250718116760254
    9. 'm' → logprob: -12.125718116760254
    10. ']' → logprob: -12.375718116760254

Token 254: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002584785979706794
    2. ' )' → logprob: -8.875258445739746
    3. ')' → logprob: -9.750258445739746
    4. ']' → logprob: -10.375258445739746
    5. ' ]' → logprob: -10.875258445739746
    6. ')][' → logprob: -13.125258445739746
    7. ')],' → logprob: -13.375258445739746
    8. ')]
' → logprob: -13.875258445739746
    9. ' ' → logprob: -13.875258445739746
    10. '])' → logprob: -14.125258445739746

Token 255: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' bot' (ID: 11257)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7162643671035767
    2. 'for' → logprob: -0.7162643671035767
    3. '   ' → logprob: -4.341264247894287
    4. 'bottom' → logprob: -5.841264247894287
    5. ' bottom' → logprob: -6.341264247894287
    6. '/' → logprob: -6.341264247894287
    7. 'result' → logprob: -7.091264247894287
    8. ' /' → logprob: -7.716264247894287
    9. ' denom' → logprob: -7.841264247894287
    10. '/b' → logprob: -8.591264724731445

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02055554836988449
    2. '=' → logprob: -3.8955554962158203
    3. ' =[' → logprob: -11.52055549621582
    4. '=[' → logprob: -13.52055549621582
    5. ' ' → logprob: -13.64555549621582
    6. '[' → logprob: -15.14555549621582
    7. 'import' → logprob: -15.27055549621582
    8. '   ' → logprob: -15.52055549621582
    9. '  ' → logprob: -15.64555549621582
    10. '	' → logprob: -16.64555549621582

Token 258: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31074270606040955
    2. '1' → logprob: -2.0607426166534424
    3. ' [' → logprob: -2.5607426166534424
    4. '[list' → logprob: -4.3107428550720215
    5. 'factor' → logprob: -4.5607428550720215
    6. ' ' → logprob: -4.6857428550720215
    7. 'list' → logprob: -5.1857428550720215
    8. 'range' → logprob: -5.3107428550720215
    9. ' list' → logprob: -5.3107428550720215
    10. '[k' → logprob: -5.6857428550720215

Token 259: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010955975390970707
    2. ' k' → logprob: -5.260955810546875
    3. '1' → logprob: -5.760955810546875
    4. 'i' → logprob: -6.260955810546875
    5. 'factor' → logprob: -8.510955810546875
    6. '(k' → logprob: -8.635955810546875
    7. 'x' → logprob: -9.510955810546875
    8. ' i' → logprob: -10.260955810546875
    9. '(' → logprob: -10.635955810546875
    10. ' ' → logprob: -10.885955810546875

Token 260: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010944887064397335
    2. ' for' → logprob: -5.010944843292236
    3. '1' → logprob: -5.635944843292236
    4. '(' → logprob: -8.260945320129395
    5. ' ' → logprob: -8.760945320129395
    6. ' +' → logprob: -8.885945320129395
    7. 'for' → logprob: -9.760945320129395
    8. 'small' → logprob: -10.635945320129395
    9. ' small' → logprob: -11.760945320129395
    10. ' in' → logprob: -13.135945320129395

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005610156804323196
    2. ' ' → logprob: -7.500561237335205
    3. '0' → logprob: -11.875560760498047
    4. '2' → logprob: -14.875560760498047
    5. '   ' → logprob: -15.500560760498047
    6. '```' → logprob: -15.625560760498047
    7. '  ' → logprob: -15.875560760498047
    8. 'for' → logprob: -17.063060760498047
    9. '(' → logprob: -17.250560760498047
    10. '    ' → logprob: -17.375560760498047

Token 262: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011047935113310814
    2. 'for' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.13604736328125
    4. '	for' → logprob: -16.88604736328125
    5. '```' → logprob: -18.26104736328125
    6. ' in' → logprob: -19.01104736328125
    7. ')' → logprob: -19.63604736328125
    8. ']' → logprob: -20.01104736328125
    9. '   ' → logprob: -20.76104736328125
    10. '[' → logprob: -20.88604736328125

Token 263: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.31328514218330383
    2. 'k' → logprob: -1.3132851123809814
    3. ' range' → logprob: -11.188284873962402
    4. 'range' → logprob: -11.688284873962402
    5. ' ' → logprob: -14.688284873962402
    6. '_k' → logprob: -14.938284873962402
    7. ',k' → logprob: -15.813284873962402
    8. '	k' → logprob: -16.06328582763672
    9. '/k' → logprob: -16.93828582763672
    10. ' in' → logprob: -17.31328582763672

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018346481025218964
    2. 'in' → logprob: -4.143346309661865
    3. 'range' → logprob: -6.518346309661865
    4. ' range' → logprob: -7.143346309661865
    5. 'k' → logprob: -10.268346786499023
    6. ' ' → logprob: -11.893346786499023
    7. ' k' → logprob: -13.393346786499023
    8. '  ' → logprob: -16.268346786499023
    9. '<|end|>' → logprob: -16.768346786499023
    10. '[' → logprob: -17.268346786499023

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868713080883026
    2. ' range' → logprob: -1.136871337890625
    3. '(range' → logprob: -15.511871337890625
    4. '	range' → logprob: -16.761871337890625
    5. ' ' → logprob: -18.511871337890625
    6. 'k' → logprob: -20.886871337890625
    7. ' xrange' → logprob: -20.886871337890625
    8. '  ' → logprob: -21.011871337890625
    9. '_range' → logprob: -21.136871337890625
    10. '.range' → logprob: -21.261871337890625

Token 266: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.25296783447265625
    2. 'small' → logprob: -1.7529678344726562
    3. ' small' → logprob: -3.0029678344726562
    4. ' (' → logprob: -7.877967834472656
    5. '(' → logprob: -8.502967834472656
    6. 'sm' → logprob: -12.002967834472656
    7. '_small' → logprob: -12.127967834472656
    8. '(sm' → logprob: -12.252967834472656
    9. '.small' → logprob: -12.377967834472656
    10. 's' → logprob: -12.752967834472656

Token 267: 'mall' (ID: 28671)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.014696354046463966
    2. 'mall' → logprob: -4.26469612121582
    3. ' small' → logprob: -7.88969612121582
    4. 'all' → logprob: -9.51469612121582
    5. '_small' → logprob: -10.51469612121582
    6. '.small' → logprob: -10.51469612121582
    7. ')' → logprob: -11.01469612121582
    8. '   ' → logprob: -12.88969612121582
    9. 'mal' → logprob: -13.01469612121582
    10. '(' → logprob: -13.63969612121582

Token 268: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.11541189253330231
    2. ']' → logprob: -2.2404119968414307
    3. ')' → logprob: -6.115411758422852
    4. '])' → logprob: -8.490411758422852
    5. ' ]' → logprob: -8.990411758422852
    6. ')])' → logprob: -10.865411758422852
    7. '])]' → logprob: -11.865411758422852
    8. ']
' → logprob: -12.240411758422852
    9. ' )' → logprob: -12.490411758422852
    10. ']}' → logprob: -13.115411758422852

Token 269: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34176725149154663
    2. ' for' → logprob: -1.7167673110961914
    3. '   ' → logprob: -2.2167673110961914
    4. '	for' → logprob: -7.716767311096191
    5. 'i' → logprob: -8.966767311096191
    6. '  ' → logprob: -10.091767311096191
    7. 'result' → logprob: -10.091767311096191
    8. ' i' → logprob: -10.216767311096191
    9. '*' → logprob: -10.216767311096191
    10. ' ' → logprob: -10.466767311096191

Token 271: ' idx' (ID: 14016)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9731239080429077
    2. 'k' → logprob: -1.3481239080429077
    3. ' i' → logprob: -1.3481239080429077
    4. 'i' → logprob: -2.3481240272521973
    5. ' j' → logprob: -6.473124027252197
    6. 'j' → logprob: -6.848124027252197
    7. ' idx' → logprob: -7.348124027252197
    8. ' b' → logprob: -7.598124027252197
    9. 'idx' → logprob: -7.598124027252197
    10. 'x' → logprob: -8.098123550415039

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023216528352349997
    2. 'in' → logprob: -6.127321720123291
    3. ',' → logprob: -9.127321243286133
    4. ' ' → logprob: -10.627321243286133
    5. ' ,' → logprob: -13.627321243286133
    6. '	in' → logprob: -14.252321243286133
    7. '  ' → logprob: -14.752321243286133
    8. ',in' → logprob: -14.877321243286133
    9. '   ' → logprob: -15.502321243286133
    10. 'range' → logprob: -16.002321243286133

Token 273: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142629742622375
    2. 'range' → logprob: -1.7014262676239014
    3. ' reversed' → logprob: -12.20142650604248
    4. ' ' → logprob: -12.95142650604248
    5. '(range' → logprob: -13.32642650604248
    6. '	range' → logprob: -13.32642650604248
    7. '   ' → logprob: -14.32642650604248
    8. '  ' → logprob: -15.07642650604248
    9. ' xrange' → logprob: -15.32642650604248
    10. 're' → logprob: -15.32642650604248

Token 274: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.010118571110069752
    2. 'small' → logprob: -5.38511848449707
    3. '(len' → logprob: -5.51011848449707
    4. ' small' → logprob: -6.88511848449707
    5. ' (' → logprob: -8.26011848449707
    6. '(' → logprob: -9.01011848449707
    7. 'len' → logprob: -11.26011848449707
    8. '   ' → logprob: -12.13511848449707
    9. 's' → logprob: -12.51011848449707
    10. '(sm' → logprob: -12.63511848449707

Token 275: '2' (ID: 17)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.011564325541257858
    2. ' small' → logprob: -4.511564254760742
    3. 'len' → logprob: -7.636564254760742
    4. '-small' → logprob: -11.261564254760742
    5. ' len' → logprob: -11.886564254760742
    6. '   ' → logprob: -12.261564254760742
    7. '0' → logprob: -13.011564254760742
    8. 'sm' → logprob: -13.136564254760742
    9. '-' → logprob: -13.636564254760742
    10. '1' → logprob: -13.761564254760742

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006043385714292526
    2. ' ,' → logprob: -5.256043434143066
    3. ',s' → logprob: -7.381043434143066
    4. ',len' → logprob: -8.881043434143066
    5. ':' → logprob: -11.131043434143066
    6. '):' → logprob: -11.256043434143066
    7. '   ' → logprob: -11.756043434143066
    8. 'small' → logprob: -12.506043434143066
    9. ',length' → logprob: -13.506043434143066
    10. ')' → logprob: -14.131043434143066

Token 277: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.0077542648650705814
    2. ' small' → logprob: -5.007754325866699
    3. 'len' → logprob: -6.882754325866699
    4. ' len' → logprob: -11.5077543258667
    5. '   ' → logprob: -12.8827543258667
    6. 'sm' → logprob: -15.6327543258667
    7. ' ' → logprob: -15.8827543258667
    8. '-small' → logprob: -16.507753372192383
    9. '  ' → logprob: -17.132753372192383
    10. 's' → logprob: -17.132753372192383

Token 278: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020409563556313515
    2. '):
' → logprob: -4.02040958404541
    3. ' ):' → logprob: -6.14540958404541
    4. ':' → logprob: -9.39540958404541
    5. ' ):
' → logprob: -11.14540958404541
    6. '   ' → logprob: -11.89540958404541
    7. '+' → logprob: -13.27040958404541
    8. ' ' → logprob: -13.52040958404541
    9. '}:' → logprob: -14.02040958404541
    10. ')' → logprob: -14.39540958404541

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006750782020390034
    2. ' ' → logprob: -5.006750583648682
    3. '):' → logprob: -11.25675106048584
    4. '0' → logprob: -11.75675106048584
    5. ')' → logprob: -12.13175106048584
    6. '  ' → logprob: -12.75675106048584
    7. '   ' → logprob: -12.75675106048584
    8. '):
' → logprob: -13.63175106048584
    9. '
' → logprob: -14.13175106048584
    10. '    ' → logprob: -14.88175106048584

Token 280: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6612459421157837
    2. '):' → logprob: -0.7862459421157837
    3. ':' → logprob: -3.661245822906494
    4. ':
' → logprob: -6.786245822906494
    5. ' ):
' → logprob: -7.411245822906494
    6. ' ):' → logprob: -7.661245822906494
    7. '   ' → logprob: -8.286246299743652
    8. ')' → logprob: -10.786246299743652
    9. ' :' → logprob: -10.911246299743652
    10. '):
' → logprob: -11.161246299743652

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009031229419633746
    2. ' top' → logprob: -7.500903129577637
    3. '   ' → logprob: -8.375903129577637
    4. ',' → logprob: -10.875903129577637
    5. '    ' → logprob: -11.000903129577637
    6. ' for' → logprob: -11.125903129577637
    7. 'top' → logprob: -11.625903129577637
    8. '        
' → logprob: -11.625903129577637
    9. '<|end|>' → logprob: -11.875903129577637
    10. '	top' → logprob: -12.000903129577637

Token 282: ' pt' (ID: 18961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4992484450340271
    2. ' for' → logprob: -1.4992485046386719
    3. '   ' → logprob: -2.499248504638672
    4. ' if' → logprob: -3.374248504638672
    5. ' top' → logprob: -3.999248504638672
    6. '    ' → logprob: -4.499248504638672
    7. ' i' → logprob: -4.874248504638672
    8. 'for' → logprob: -5.249248504638672
    9. ' j' → logprob: -6.874248504638672
    10. ' ' → logprob: -6.999248504638672

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2624236345291138
    2. 'op' → logprob: -1.2624236345291138
    3. '=' → logprob: -1.6374236345291138
    4. '   ' → logprob: -3.012423515319824
    5. 'p' → logprob: -3.262423515319824
    6. 'idx' → logprob: -3.387423515319824
    7. '1' → logprob: -3.637423515319824
    8. 'for' → logprob: -3.637423515319824
    9. '0' → logprob: -4.637423515319824
    10. 'i' → logprob: -4.762423515319824

Token 284: ' bot' (ID: 11257)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0718466117978096
    2. 'top' → logprob: -3.8218467235565186
    3. '0' → logprob: -4.0718464851379395
    4. ' idx' → logprob: -4.1968464851379395
    5. 'bot' → logprob: -4.3218464851379395
    6. ' bot' → logprob: -7.1968464851379395
    7. ' top' → logprob: -7.4468464851379395
    8. ' ' → logprob: -8.696846961975098
    9. '1' → logprob: -9.196846961975098
    10. '(idx' → logprob: -9.321846961975098

Token 285: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0014751063426956534
    2. 'idx' → logprob: -6.6264753341674805
    3. '[:' → logprob: -10.00147533416748
    4. '.index' → logprob: -10.37647533416748
    5. '[' → logprob: -10.50147533416748
    6. ' idx' → logprob: -11.25147533416748
    7. '	idx' → logprob: -11.62647533416748
    8. 'index' → logprob: -12.25147533416748
    9. '(idx' → logprob: -12.37647533416748
    10. '   ' → logprob: -13.25147533416748

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015921075828373432
    2. ' -' → logprob: -6.75159215927124
    3. ']' → logprob: -7.87659215927124
    4. 'idx' → logprob: -10.501591682434082
    5. '   ' → logprob: -12.876591682434082
    6. '-token' → logprob: -12.876591682434082
    7. ' idx' → logprob: -13.126591682434082
    8. ']-' → logprob: -13.126591682434082
    9. ']==' → logprob: -14.126591682434082
    10. ' ' → logprob: -14.501591682434082

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00851114559918642
    2. '2' → logprob: -5.383511066436768
    3. '-' → logprob: -5.633511066436768
    4. ']' → logprob: -8.758511543273926
    5. ' ' → logprob: -9.883511543273926
    6. 'idx' → logprob: -10.008511543273926
    7. ' -' → logprob: -10.883511543273926
    8. '   ' → logprob: -10.883511543273926
    9. '0' → logprob: -11.633511543273926
    10. '```' → logprob: -13.008511543273926

Token 288: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1553843766450882
    2. ']
' → logprob: -2.2803843021392822
    3. '-' → logprob: -3.2803843021392822
    4. ' -' → logprob: -7.155384540557861
    5. ']*' → logprob: -7.155384540557861
    6. ' ]' → logprob: -7.280384540557861
    7. ']-' → logprob: -8.030384063720703
    8. ' ]
' → logprob: -8.030384063720703
    9. ']
' → logprob: -8.280384063720703
    10. ']/' → logprob: -8.280384063720703

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09039315581321716
    2. '   ' → logprob: -3.59039306640625
    3. '
' → logprob: -3.96539306640625
    4. ' for' → logprob: -3.96539306640625
    5. 'for' → logprob: -4.21539306640625
    6. '        
' → logprob: -5.59039306640625
    7. '           ' → logprob: -7.59039306640625
    8. '    
' → logprob: -8.09039306640625
    9. ';' → logprob: -8.71539306640625
    10. ',' → logprob: -8.71539306640625

Token 290: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01878037117421627
    2. 'if' (adapté à ' if') → logprob: -4.89378023147583
    3. ' for' → logprob: -5.64378023147583
    4. 'num' → logprob: -5.89378023147583
    5. 'val' → logprob: -6.26878023147583
    6. 'top' → logprob: -7.01878023147583
    7. '   ' → logprob: -7.51878023147583
    8. 'div' → logprob: -8.768780708312988
    9. 'cur' → logprob: -8.893780708312988
    10. '       ' → logprob: -9.393780708312988

Token 291: ' pt' (ID: 18961)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.805825412273407
    2. ' pt' → logprob: -1.5558254718780518
    3. 'pt' → logprob: -1.6808254718780518
    4. ' top' → logprob: -1.9308254718780518
    5. ' not' → logprob: -5.555825233459473
    6. '(pt' → logprob: -6.430825233459473
    7. '(top' → logprob: -6.680825233459473
    8. 'not' → logprob: -6.930825233459473
    9. ' all' → logprob: -7.430825233459473
    10. ' bot' → logprob: -7.555825233459473

Token 292: '>' (ID: 29)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28264039754867554
    2. ' %' → logprob: -2.1576404571533203
    3. ' ==' → logprob: -2.6576404571533203
    4. '==' → logprob: -2.9076404571533203
    5. ' in' → logprob: -6.90764045715332
    6. ' ' → logprob: -7.03264045715332
    7. '%n' → logprob: -7.28264045715332
    8. ':' → logprob: -7.65764045715332
    9. '%d' → logprob: -7.65764045715332
    10. '%i' → logprob: -7.78264045715332

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013500887900590897
    2. 'top' → logprob: -4.638500690460205
    3. ' ' → logprob: -5.638500690460205
    4. ' top' → logprob: -8.763501167297363
    5. '0' → logprob: -11.763501167297363
    6. '=' → logprob: -12.013501167297363
    7. '   ' → logprob: -13.138501167297363
    8. 'bot' → logprob: -13.888501167297363
    9. '  ' → logprob: -14.013501167297363
    10. '[top' → logprob: -14.576001167297363

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16135312616825104
    2. ':
' → logprob: -1.9113531112670898
    3. '<|end|>' → logprob: -7.91135311126709
    4. ' and' → logprob: -8.53635311126709
    5. ' :
' → logprob: -9.03635311126709
    6. '<|end|>' → logprob: -9.28635311126709
    7. '):
' → logprob: -9.28635311126709
    8. '       ' → logprob: -9.28635311126709
    9. '           ' → logprob: -9.66135311126709
    10. ',' → logprob: -10.16135311126709

Token 295: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1614396572113037
    2. ' for' → logprob: -1.9114396572113037
    3. 'for' → logprob: -7.786439895629883
    4. ',' → logprob: -8.286439895629883
    5. '<|end|>' → logprob: -8.411439895629883
    6. '   ' → logprob: -8.786439895629883
    7. '           ' → logprob: -9.661439895629883
    8. ' ' → logprob: -10.536439895629883
    9. '<|end|>' → logprob: -11.411439895629883
    10. '	for' → logprob: -11.786439895629883

Token 296: ' off' (ID: 1277)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6132736206054688
    2. 'for' → logprob: -0.8632736206054688
    3. '           ' → logprob: -3.8632736206054688
    4. '       ' → logprob: -4.488273620605469
    5. '   ' → logprob: -5.988273620605469
    6. ' top' → logprob: -7.613273620605469
    7. ' ' → logprob: -8.238273620605469
    8. 'top' → logprob: -9.113273620605469
    9. '	for' → logprob: -9.238273620605469
    10. 'num' → logprob: -9.363273620605469

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6078575253486633
    2. '=' → logprob: -0.8578575253486633
    3. 'set' → logprob: -3.6078574657440186
    4. '=set' → logprob: -6.857857704162598
    5. '   ' → logprob: -6.982857704162598
    6. 's' → logprob: -7.732857704162598
    7. 'top' → logprob: -8.107857704162598
    8. '       ' → logprob: -8.357857704162598
    9. ',' → logprob: -8.607857704162598
    10. 'et' → logprob: -8.982857704162598

Token 298: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37089797854423523
    2. 'idx' → logprob: -1.2458980083465576
    3. '(idx' → logprob: -4.1208977699279785
    4. ' idx' → logprob: -6.3708977699279785
    5. '-' → logprob: -6.8708977699279785
    6. '(' → logprob: -7.2458977699279785
    7. '1' → logprob: -7.3708977699279785
    8. 'top' → logprob: -7.9958977699279785
    9. 'len' → logprob: -8.245898246765137
    10. 'pt' → logprob: -8.245898246765137

Token 299: 'big' (ID: 25934)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12927144765853882
    2. '0' → logprob: -2.6292715072631836
    3. '1' → logprob: -3.5042715072631836
    4. ' idx' → logprob: -4.254271507263184
    5. '2' → logprob: -6.004271507263184
    6. 'top' → logprob: -7.254271507263184
    7. ' ' → logprob: -8.004271507263184
    8. '-' → logprob: -8.254271507263184
    9. 'pt' → logprob: -8.254271507263184
    10. '   ' → logprob: -8.379271507263184

Token 300: '-small' (ID: 76604)
  Prédit: '-small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-small' → logprob: -0.0210059005767107
    2. ' -' → logprob: -4.021006107330322
    3. '-' → logprob: -6.271006107330322
    4. '-sm' → logprob: -7.271006107330322
    5. '-set' → logprob: -9.521005630493164
    6. '-token' → logprob: -9.646005630493164
    7. 'small' → logprob: -10.396005630493164
    8. '-large' → logprob: -10.771005630493164
    9. '-top' → logprob: -11.271005630493164
    10. '_small' → logprob: -11.396005630493164

Token 301: ')%' (ID: 57656)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12848621606826782
    2. '+k' → logprob: -2.128486156463623
    3. ')' → logprob: -7.378486156463623
    4. ' +' → logprob: -8.003486633300781
    5. '+
' → logprob: -8.503486633300781
    6. ')+' → logprob: -9.003486633300781
    7. '+j' → logprob: -10.003486633300781
    8. '+n' → logprob: -10.128486633300781
    9. '+)' → logprob: -10.253486633300781
    10. '+i' → logprob: -11.253486633300781

Token 302: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05186331644654274
    2. 'pt' → logprob: -3.301863431930542
    3. '(idx' → logprob: -5.176863193511963
    4. '(pt' → logprob: -5.926863193511963
    5. ' idx' → logprob: -6.176863193511963
    6. 'top' → logprob: -6.801863193511963
    7. ' (' → logprob: -7.051863193511963
    8. '(' → logprob: -7.301863193511963
    9. '(top' → logprob: -7.801863193511963
    10. 'bot' → logprob: -9.426863670349121

Token 303: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5615344643592834
    2. '
' → logprob: -0.9365344643592834
    3. '            
' → logprob: -4.311534404754639
    4. ' 
' → logprob: -4.811534404754639
    5. ';' → logprob: -5.811534404754639
    6. '       ' → logprob: -6.061534404754639
    7. '<|end|>' → logprob: -6.061534404754639
    8. '  
' → logprob: -6.561534404754639
    9. '        
' → logprob: -6.686534404754639
    10. '<|end|>' → logprob: -6.686534404754639

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007290104869753122
    2. ' for' → logprob: -5.757289886474609
    3. '       ' → logprob: -6.132289886474609
    4. '<|end|>' → logprob: -7.132289886474609
    5. 'for' → logprob: -7.882289886474609
    6. ',' → logprob: -8.75728988647461
    7. '               ' → logprob: -8.88228988647461
    8. ';' → logprob: -9.50728988647461
    9. '   ' → logprob: -9.75728988647461
    10. '
' → logprob: -9.88228988647461

Token 305: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18641963601112366
    2. 'for' (adapté à ' for') → logprob: -2.311419725418091
    3. '           ' → logprob: -3.311419725418091
    4. '   ' → logprob: -3.936419725418091
    5. ' top' → logprob: -4.936419486999512
    6. ' if' → logprob: -6.561419486999512
    7. '
' → logprob: -6.686419486999512
    8. '       ' → logprob: -7.436419486999512
    9. 'top' → logprob: -7.436419486999512
    10. '            
' → logprob: -7.686419486999512

Token 306: ' jj' (ID: 79791)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.378501296043396
    2. 'i' → logprob: -1.753501296043396
    3. ' i' → logprob: -2.0035014152526855
    4. ' k' → logprob: -2.2535014152526855
    5. 'j' → logprob: -2.3785014152526855
    6. ' j' → logprob: -2.3785014152526855
    7. 'pos' → logprob: -4.2535014152526855
    8. 'x' → logprob: -4.5035014152526855
    9. ' pos' → logprob: -4.6285014152526855
    10. ' sub' → logprob: -4.7535014152526855

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368685021996498
    2. 'in' → logprob: -3.408686876296997
    3. ',' → logprob: -10.908686637878418
    4. 'range' → logprob: -11.908686637878418
    5. ' ' → logprob: -12.283686637878418
    6. '	in' → logprob: -13.158686637878418
    7. '    ' → logprob: -13.408686637878418
    8. ' range' → logprob: -13.783686637878418
    9. '   ' → logprob: -14.033686637878418
    10. ',j' → logprob: -14.533686637878418

Token 308: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01816680282354355
    2. ' range' → logprob: -4.018167018890381
    3. '   ' → logprob: -11.393166542053223
    4. ' ' → logprob: -13.393166542053223
    5. '	range' → logprob: -13.643166542053223
    6. '    ' → logprob: -14.643166542053223
    7. '  ' → logprob: -14.768166542053223
    8. 're' → logprob: -14.768166542053223
    9. '(range' → logprob: -15.018166542053223
    10. 'top' → logprob: -15.018166542053223

Token 309: '(idx' (ID: 42793)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.20043766498565674
    2. '(idx' → logprob: -2.200437545776367
    3. '(len' → logprob: -2.700437545776367
    4. '(' → logprob: -6.325437545776367
    5. '(off' → logprob: -7.325437545776367
    6. 'small' → logprob: -7.700437545776367
    7. '(k' → logprob: -8.075437545776367
    8. 'len' → logprob: -8.950437545776367
    9. 'idx' → logprob: -9.200437545776367
    10. 'off' → logprob: -9.325437545776367

Token 310: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3676581084728241
    2. '):' → logprob: -1.4926581382751465
    3. '):
' → logprob: -3.1176581382751465
    4. ',' → logprob: -3.3676581382751465
    5. ' -' → logprob: -5.9926581382751465
    6. '+' → logprob: -7.2426581382751465
    7. '   ' → logprob: -7.7426581382751465
    8. '       ' → logprob: -8.992657661437988
    9. '  ' → logprob: -9.492657661437988
    10. ',len' → logprob: -9.742657661437988

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32206404209136963
    2. 'small' → logprob: -1.4470640420913696
    3. 'pt' → logprob: -4.19706392288208
    4. 'len' → logprob: -4.32206392288208
    5. 'idx' → logprob: -5.44706392288208
    6. '2' → logprob: -5.82206392288208
    7. 'off' → logprob: -6.94706392288208
    8. '-' → logprob: -7.32206392288208
    9. ' ' → logprob: -7.44706392288208
    10. '0' → logprob: -7.57206392288208

Token 312: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.6203510165214539
    2. ',' → logprob: -1.2453510761260986
    3. '):' → logprob: -1.8703510761260986
    4. '):
' → logprob: -4.3703508377075195
    5. ' ,' → logprob: -5.9953508377075195
    6. '-' → logprob: -6.8703508377075195
    7. '           ' → logprob: -7.1203508377075195
    8. ' ,-' → logprob: -7.1203508377075195
    9. ' -' → logprob: -7.9953508377075195
    10. '+' → logprob: -7.9953508377075195

Token 313: 'small' (ID: 18158)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08565467596054077
    2. 'small' → logprob: -2.5856547355651855
    3. ' -' → logprob: -5.7106547355651855
    4. ' small' → logprob: -6.0856547355651855
    5. '-small' → logprob: -7.7106547355651855
    6. '0' → logprob: -7.8356547355651855
    7. 'len' → logprob: -8.960654258728027
    8. 'jj' → logprob: -9.210654258728027
    9. '1' → logprob: -11.210654258728027
    10. ' ' → logprob: -11.335654258728027

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6039659976959229
    2. ',-' → logprob: -0.8539659976959229
    3. ',j' → logprob: -4.728965759277344
    4. '-' → logprob: -4.978965759277344
    5. '):' → logprob: -6.103965759277344
    6. ' ,' → logprob: -6.353965759277344
    7. ',k' → logprob: -6.478965759277344
    8. '+' → logprob: -6.603965759277344
    9. ',None' → logprob: -7.103965759277344
    10. '-j' → logprob: -7.353965759277344

Token 315: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.013128464110195637
    2. ' idx' → logprob: -4.388128280639648
    3. '-' → logprob: -8.013128280639648
    4. ' -' → logprob: -8.638128280639648
    5. '	idx' → logprob: -9.763128280639648
    6. '(idx' → logprob: -10.513128280639648
    7. '   ' → logprob: -12.138128280639648
    8. 'jj' → logprob: -12.388128280639648
    9. '-j' → logprob: -13.013128280639648
    10. '           ' → logprob: -13.013128280639648

Token 316: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133768141269684
    2. ',' → logprob: -1.438376784324646
    3. ',j' → logprob: -4.0633769035339355
    4. '):' → logprob: -4.4383769035339355
    5. '               ' → logprob: -7.3133769035339355
    6. ',k' → logprob: -7.6883769035339355
    7. ',index' → logprob: -7.9383769035339355
    8. ',+' → logprob: -8.813376426696777
    9. ' ,' → logprob: -8.938376426696777
    10. '):
' → logprob: -9.188376426696777

Token 317: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013964263489469886
    2. '           ' → logprob: -8.501396179199219
    3. ' top' → logprob: -8.501396179199219
    4. '```' → logprob: -8.626396179199219
    5. ' for' → logprob: -8.751396179199219
    6. 'top' → logprob: -9.001396179199219
    7. '<|end|>' → logprob: -9.876396179199219
    8. '                ' → logprob: -10.126396179199219
    9. '                
' → logprob: -10.126396179199219
    10. '              ' → logprob: -10.126396179199219

Token 318: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.06738711893558502
    2. 'top' (adapté à ' top') → logprob: -2.942387104034424
    3. '               ' → logprob: -5.442387104034424
    4. '   ' → logprob: -5.567387104034424
    5. ' bot' → logprob: -6.192387104034424
    6. '           ' → logprob: -7.067387104034424
    7. 'bot' → logprob: -7.192387104034424
    8. '	top' → logprob: -9.067387580871582
    9. '    ' → logprob: -9.192387580871582
    10. ' if' → logprob: -9.567387580871582

Token 319: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00026538874953985214
    2. '[' → logprob: -8.750265121459961
    3. '[idx' → logprob: -10.000265121459961
    4. '   ' → logprob: -11.125265121459961
    5. '[ii' → logprob: -11.750265121459961
    6. '```' → logprob: -12.000265121459961
    7. '[js' → logprob: -12.375265121459961
    8. 'jj' → logprob: -12.500265121459961
    9. '[
' → logprob: -12.625265121459961
    10. ' [' → logprob: -12.750265121459961

Token 320: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1295105665922165
    2. ']' → logprob: -2.1295106410980225
    3. '-' → logprob: -7.379510402679443
    4. ']==' → logprob: -7.379510402679443
    5. ']=' → logprob: -8.004510879516602
    6. ']='' → logprob: -8.879510879516602
    7. '<|end|>' → logprob: -9.129510879516602
    8. ']+=' → logprob: -9.254510879516602
    9. '   ' → logprob: -9.379510879516602
    10. 'jj' → logprob: -9.754510879516602

Token 321: '-off' (ID: 18990)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -8.41129949549213e-05
    2. ' ]' → logprob: -10.500083923339844
    3. ']=' → logprob: -10.750083923339844
    4. ' //' → logprob: -11.375083923339844
    5. '//' → logprob: -12.125083923339844
    6. ']*' → logprob: -12.250083923339844
    7. ']/' → logprob: -12.875083923339844
    8. '   ' → logprob: -13.000083923339844
    9. '//=' → logprob: -13.375083923339844
    10. ']-' → logprob: -13.875083923339844

Token 322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00025895543512888253
    2. ' ]' → logprob: -9.125259399414062
    3. ' //' → logprob: -9.500259399414062
    4. '//' → logprob: -10.250259399414062
    5. '   ' → logprob: -11.375259399414062
    6. ']=' → logprob: -11.750259399414062
    7. '//=' → logprob: -12.125259399414062
    8. ')' → logprob: -12.500259399414062
    9. ']*' → logprob: -13.000259399414062
    10. ')//' → logprob: -13.250259399414062

Token 323: ' /=' (ID: 37808)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.3956601619720459
    2. ' //' → logprob: -1.145660161972046
    3. '//' → logprob: -4.895660400390625
    4. '   ' → logprob: -7.145660400390625
    5. ' ' → logprob: -8.895660400390625
    6. '=' → logprob: -9.395660400390625
    7. '  ' → logprob: -9.895660400390625
    8. '*=' → logprob: -10.020660400390625
    9. ' =' → logprob: -10.145660400390625
    10. '    ' → logprob: -10.395660400390625

Token 324: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.0003377270477358252
    2. ' pt' → logprob: -8.000337600708008
    3. 'bot' → logprob: -13.750337600708008
    4. 'float' → logprob: -14.125337600708008
    5. '           ' → logprob: -16.125337600708008
    6. '   ' → logprob: -16.250337600708008
    7. '	pt' → logprob: -16.625337600708008
    8. 'top' → logprob: -17.000337600708008
    9. '(pt' → logprob: -17.000337600708008
    10. '_pt' → logprob: -18.000337600708008

Token 325: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' bot' (ID: 11257)
  Prédit: ' bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bot' → logprob: -0.998627245426178
    2. '<|end|>' → logprob: -1.1236271858215332
    3. ' top' → logprob: -1.9986271858215332
    4. 'bot' (adapté à ' bot') → logprob: -2.248627185821533
    5. 'top' → logprob: -3.623627185821533
    6. ' ' → logprob: -4.873627185821533
    7. ')' → logprob: -4.998627185821533
    8. ' pt' → logprob: -5.123627185821533
    9. '               ' → logprob: -5.248627185821533
    10. '(bot' → logprob: -5.998627185821533

Token 328: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.049458183348178864
    2. '[idx' → logprob: -3.0494582653045654
    3. 'jj' → logprob: -7.674458026885986
    4. 'idx' → logprob: -8.049458503723145
    5. ' jj' → logprob: -10.049458503723145
    6. '[' → logprob: -11.174458503723145
    7. '[js' → logprob: -11.299458503723145
    8. ' idx' → logprob: -12.799458503723145
    9. '_idx' → logprob: -13.424458503723145
    10. '[ii' → logprob: -13.549458503723145

Token 329: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04040207341313362
    2. '[' → logprob: -4.290401935577393
    3. '[j' → logprob: -4.790401935577393
    4. 'x' → logprob: -5.040401935577393
    5. 'jj' → logprob: -5.915401935577393
    6. '-' → logprob: -6.415401935577393
    7. '{' → logprob: -6.915401935577393
    8. 'off' → logprob: -7.040401935577393
    9. 'idx' → logprob: -7.165401935577393
    10. ']' → logprob: -7.415401935577393

Token 330: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10430517047643661
    2. '-off' → logprob: -2.3543052673339844
    3. '-offset' → logprob: -6.729305267333984
    4. ' -' → logprob: -7.104305267333984
    5. '<|end|>' → logprob: -7.854305267333984
    6. ' off' → logprob: -8.104305267333984
    7. '-token' → logprob: -8.604305267333984
    8. '<|end|>' → logprob: -8.729305267333984
    9. '-index' → logprob: -8.854305267333984
    10. '-user' → logprob: -8.979305267333984

Token 331: ' /=' (ID: 37808)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.10282602161169052
    2. '/=' → logprob: -2.4778261184692383
    3. '=' → logprob: -5.102826118469238
    4. ' /=' → logprob: -5.352826118469238
    5. ' //' → logprob: -6.352826118469238
    6. '//' → logprob: -6.852826118469238
    7. ' ' → logprob: -9.477826118469238
    8. '  ' → logprob: -10.977826118469238
    9. '          ' → logprob: -11.477826118469238
    10. '*=' → logprob: -11.477826118469238

Token 332: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.005236598663032055
    2. ' pt' → logprob: -5.255236625671387
    3. 'idx' → logprob: -13.755236625671387
    4. '.pt' → logprob: -14.380236625671387
    5. '_pt' → logprob: -14.880236625671387
    6. '(pt' → logprob: -15.130236625671387
    7. '	pt' → logprob: -15.255236625671387
    8. ' idx' → logprob: -16.88023567199707
    9. 'pti' → logprob: -16.88023567199707
    10. 'p' → logprob: -17.25523567199707

Token 333: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' rv' (ID: 37141)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760891437530518
    2. ' =' → logprob: -0.8260891437530518
    3. ',' → logprob: -8.951088905334473
    4. '=[]' → logprob: -12.076088905334473
    5. ' ' → logprob: -12.326088905334473
    6. '.=' → logprob: -13.451088905334473
    7. '=int' → logprob: -13.576088905334473
    8. 'eturn' → logprob: -13.951088905334473
    9. ' =[' → logprob: -14.451088905334473
    10. '=[]
' → logprob: -14.451088905334473

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001818097778595984
    2. 'int' → logprob: -6.6268181800842285
    3. ' ' → logprob: -8.25181770324707
    4. 'top' → logprob: -8.50181770324707
    5. 'round' → logprob: -11.87681770324707
    6. 'prod' → logprob: -12.00181770324707
    7. ' int' → logprob: -12.50181770324707
    8. '   ' → logprob: -12.50181770324707
    9. '  ' → logprob: -14.12681770324707
    10. '(' → logprob: -14.37681770324707

Token 338: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022281328216195107
    2. '    
' → logprob: -4.897281169891357
    3. '   ' → logprob: -5.022281169891357
    4. ' 
' → logprob: -5.897281169891357
    5. '  
' → logprob: -7.022281169891357
    6. 'for' → logprob: -7.272281169891357
    7. '<|end|>' → logprob: -7.272281169891357
    8. '	
' → logprob: -7.397281169891357
    9. '   
' → logprob: -7.397281169891357
    10. '
' → logprob: -7.522281169891357

Token 339: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5248480439186096
    2. 'for' → logprob: -1.2748479843139648
    3. '*' → logprob: -2.524847984313965
    4. '   ' → logprob: -3.899847984313965
    5. ' for' → logprob: -4.149847984313965
    6. '    
' → logprob: -5.149847984313965
    7. ' 
' → logprob: -5.649847984313965
    8. '  
' → logprob: -6.899847984313965
    9. '<|end|>' → logprob: -7.399847984313965
    10. ' ' → logprob: -7.899847984313965

Token 340: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1777045726776123
    2. '
' → logprob: -2.1777045726776123
    3. ' for' → logprob: -3.3027045726776123
    4. '   ' → logprob: -4.802704811096191
    5. '    
' → logprob: -5.802704811096191
    6. ' 
' → logprob: -7.177704811096191
    7. '	for' → logprob: -7.927704811096191
    8. '   
' → logprob: -9.052704811096191
    9. '  
' → logprob: -9.927704811096191
    10. '	
' → logprob: -10.052704811096191

Token 341: ' q' (ID: 2335)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.055247187614441
    2. 'k' → logprob: -1.555247187614441
    3. 'x' → logprob: -2.0552473068237305
    4. 'val' → logprob: -2.4302473068237305
    5. ' val' → logprob: -3.4302473068237305
    6. 't' → logprob: -3.6802473068237305
    7. ' v' → logprob: -3.6802473068237305
    8. 'num' → logprob: -4.0552473068237305
    9. 'top' → logprob: -4.3052473068237305
    10. ' k' → logprob: -4.5552473068237305

Token 342: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006771499291062355
    2. 'in' → logprob: -5.006771564483643
    3. ' ' → logprob: -10.756771087646484
    4. 'q' → logprob: -12.381771087646484
    5. '   ' → logprob: -12.506771087646484
    6. 'token' → logprob: -12.631771087646484
    7. '  ' → logprob: -12.756771087646484
    8. 'top' → logprob: -12.881771087646484
    9. 'n' → logprob: -13.631771087646484
    10. '1' → logprob: -13.631771087646484

Token 343: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.003471182659268379
    2. ' top' → logprob: -5.878471374511719
    3. 'range' → logprob: -7.378471374511719
    4. ' range' → logprob: -10.503471374511719
    5. 'bot' → logprob: -11.753471374511719
    6. '   ' → logprob: -13.378471374511719
    7. ' ' → logprob: -13.628471374511719
    8. '[top' → logprob: -13.628471374511719
    9. '(top' → logprob: -13.878471374511719
    10. '	top' → logprob: -14.753471374511719

Token 344: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020005226135253906
    2. ':
' → logprob: -4.395005226135254
    3. '   ' → logprob: -6.520005226135254
    4. ':q' → logprob: -6.770005226135254
    5. '*q' → logprob: -7.020005226135254
    6. '*' → logprob: -7.020005226135254
    7. '       ' → logprob: -7.145005226135254
    8. ':return' → logprob: -7.270005226135254
    9. '*=' → logprob: -7.395005226135254
    10. ':int' → logprob: -8.020005226135254

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00899470690637827
    2. ' *=' → logprob: -5.7589945793151855
    3. '*=' → logprob: -6.2589945793151855
    4. '*' → logprob: -6.5089945793151855
    5. '   ' → logprob: -7.3839945793151855
    6. ' rv' → logprob: -8.258995056152344
    7. '	' → logprob: -8.383995056152344
    8. '(rv' → logprob: -8.508995056152344
    9. ' *' → logprob: -8.633995056152344
    10. '<|end|>' → logprob: -8.633995056152344

Token 346: ' if' (ID: 538)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.25199079513549805
    2. ' rv' → logprob: -1.501990795135498
    3. '       ' → logprob: -10.251991271972656
    4. '(rv' → logprob: -11.251991271972656
    5. 'int' → logprob: -11.876991271972656
    6. '.rv' → logprob: -12.751991271972656
    7. '   ' → logprob: -14.001991271972656
    8. '    ' → logprob: -14.251991271972656
    9. '        ' → logprob: -14.626991271972656
    10. '           ' → logprob: -15.001991271972656

Token 347: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4283447265625
    2. 'q' → logprob: -1.3033447265625
    3. ' isinstance' → logprob: -3.0533447265625
    4. ' type' → logprob: -4.4283447265625
    5. ' abs' → logprob: -5.5533447265625
    6. 'abs' → logprob: -5.6783447265625
    7. ' not' → logprob: -5.6783447265625
    8. 'type' → logprob: -6.0533447265625
    9. ' int' → logprob: -6.3033447265625
    10. 'int' → logprob: -6.6783447265625

Token 348: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21393996477127075
    2. '!=' → logprob: -2.338939905166626
    3. ' >' → logprob: -2.713939905166626
    4. ' !=' → logprob: -4.088940143585205
    5. '*>' → logprob: -5.463940143585205
    6. '*' → logprob: -6.338940143585205
    7. '>=' → logprob: -6.463940143585205
    8. '==' → logprob: -6.713940143585205
    9. '<|end|>' → logprob: -7.338940143585205
    10. ':' → logprob: -7.588940143585205

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010532584972679615
    2. '0' → logprob: -5.135532379150391
    3. ' ' → logprob: -5.385532379150391
    4. '   ' → logprob: -12.01053237915039
    5. '  ' → logprob: -13.51053237915039
    6. '     ' → logprob: -13.88553237915039
    7. '>' → logprob: -14.51053237915039
    8. '    ' → logprob: -14.76053237915039
    9. '
' → logprob: -15.13553237915039
    10. '	' → logprob: -15.51053237915039

Token 350: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09433107078075409
    2. '*' → logprob: -3.0943310260772705
    3. ':
' → logprob: -4.09433126449585
    4. '*=' → logprob: -4.09433126449585
    5. '           ' → logprob: -5.46933126449585
    6. ' *=' → logprob: -5.84433126449585
    7. '       ' → logprob: -6.21933126449585
    8. '*:' → logprob: -6.84433126449585
    9. ' *' → logprob: -8.469330787658691
    10. '*q' → logprob: -9.094330787658691

Token 351: ' rv' (ID: 37141)
  Prédit: ' rv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rv' → logprob: -0.004330660216510296
    2. '           ' → logprob: -5.629330635070801
    3. 'rv' → logprob: -7.379330635070801
    4. '(rv' → logprob: -9.5043306350708
    5. '.rv' → logprob: -11.3793306350708
    6. '               ' → logprob: -11.7543306350708
    7. '	       ' → logprob: -12.2543306350708
    8. '            ' → logprob: -13.3793306350708
    9. '          ' → logprob: -13.5043306350708
    10. ' ' → logprob: -14.0043306350708

Token 352: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0005603004829026759
    2. ' *=' → logprob: -7.500560283660889
    3. '*' → logprob: -12.250560760498047
    4. '=' → logprob: -14.125560760498047
    5. '=int' → logprob: -14.500560760498047
    6. '   ' → logprob: -14.625560760498047
    7. 'int' → logprob: -14.625560760498047
    8. '```' → logprob: -16.125560760498047
    9. ' ' → logprob: -16.250560760498047
    10. '	' → logprob: -16.250560760498047

Token 353: ' int' (ID: 677)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03518664464354515
    2. 'int' → logprob: -3.410186529159546
    3. ' q' → logprob: -6.660186767578125
    4. ' int' → logprob: -8.285186767578125
    5. 'round' → logprob: -12.285186767578125
    6. '(int' → logprob: -15.160186767578125
    7. 'float' → logprob: -15.285186767578125
    8. '	q' → logprob: -15.285186767578125
    9. '   ' → logprob: -15.410186767578125
    10. ' ' → logprob: -15.410186767578125

Token 354: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0015348586020991206
    2. '(round' → logprob: -6.501534938812256
    3. 'q' → logprob: -10.751534461975098
    4. 'round' → logprob: -12.001534461975098
    5. '(' → logprob: -12.251534461975098
    6. ' (' → logprob: -16.626535415649414
    7. '(abs' → logprob: -17.376535415649414
    8. '((' → logprob: -17.501535415649414
    9. '	q' → logprob: -18.251535415649414
    10. ' round' → logprob: -18.251535415649414

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016612585168331861
    2. ' )' → logprob: -6.50166130065918
    3. ')
' → logprob: -8.87666130065918
    4. ')#' → logprob: -12.12666130065918
    5. ')

' → logprob: -12.50166130065918
    6. '))' → logprob: -13.62666130065918
    7. ')return' → logprob: -13.62666130065918
    8. ' )
' → logprob: -13.62666130065918
    9. ');' → logprob: -14.00166130065918
    10. ' ' → logprob: -14.00166130065918

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07923927903175354
    2. 'return' → logprob: -2.8292393684387207
    3. ' return' → logprob: -4.079239368438721
    4. '	return' → logprob: -8.704238891601562
    5. '
' → logprob: -10.829238891601562
    6. '    
' → logprob: -12.079238891601562
    7. ':return' → logprob: -12.579238891601562
    8. '       ' → logprob: -13.704238891601562
    9. ' ' → logprob: -13.829238891601562
    10. '  ' → logprob: -13.954238891601562

Token 357: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5280829668045044
    2. '   ' → logprob: -1.2780829668045044
    3. ' return' → logprob: -2.028082847595215
    4. '	return' → logprob: -9.653082847595215
    5. ' ' → logprob: -11.528082847595215
    6. '
' → logprob: -11.528082847595215
    7. ':return' → logprob: -11.903082847595215
    8. '  ' → logprob: -12.403082847595215
    9. '    
' → logprob: -12.653082847595215
    10. '       ' → logprob: -13.278082847595215

Token 358: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.011049943044781685
    2. ' rv' → logprob: -4.511049747467041
    3. '(rv' → logprob: -13.6360502243042
    4. 'int' → logprob: -13.8860502243042
    5. ' int' → logprob: -17.761049270629883
    6. '.rv' → logprob: -18.761049270629883
    7. ' ' → logprob: -19.761049270629883
    8. ' ' → logprob: -19.886049270629883
    9. 'r' → logprob: -20.261049270629883
    10. 'rav' → logprob: -20.386049270629883

Token 359: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3051339387893677
    2. '<|end|>' → logprob: -1.4301339387893677
    3. ' ' → logprob: -5.055133819580078
    4. '#' → logprob: -5.180133819580078
    5. ')' → logprob: -5.680133819580078
    6. ' def' → logprob: -6.055133819580078
    7. 'p' → logprob: -7.305133819580078
    8. 'import' → logprob: -7.430133819580078
    9. '<|end|>' → logprob: -7.430133819580078
    10. 'set' → logprob: -7.805133819580078

Token 361: ' combos' (ID: 150243)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -2.0294229984283447
    2. ' fib' → logprob: -2.7794229984283447
    3. ' combos' → logprob: -2.7794229984283447
    4. ' stir' → logprob: -3.0294229984283447
    5. 'factor' → logprob: -3.1544229984283447
    6. ' perm' → logprob: -3.1544229984283447
    7. ' fact' → logprob: -3.2794229984283447
    8. ' pas' → logprob: -3.4044229984283447
    9. ' pow' → logprob: -3.5294229984283447
    10. ' sum' → logprob: -3.5294229984283447

Token 362: '_rep' (ID: 72946)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0029447749257087708
    2. '_' → logprob: -6.0029449462890625
    3. '(_' → logprob: -8.752944946289062
    4. '_(' → logprob: -9.252944946289062
    5. '(' → logprob: -9.502944946289062
    6. ' _' → logprob: -9.627944946289062
    7. '_Count' → logprob: -10.502944946289062
    8. '_COUNT' → logprob: -11.627944946289062
    9. '_c' → logprob: -11.752944946289062
    10. '_counts' → logprob: -12.502944946289062

Token 363: '(big' (ID: 140437)
  Prédit: '(big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -0.07288460433483124
    2. '_count' → logprob: -3.4478845596313477
    3. '(l' → logprob: -4.197884559631348
    4. '(_' → logprob: -5.447884559631348
    5. '(_,' → logprob: -5.822884559631348
    6. 'eat' → logprob: -6.072884559631348
    7. '(s' → logprob: -6.072884559631348
    8. 'et' → logprob: -6.572884559631348
    9. '(' → logprob: -6.572884559631348
    10. '(count' → logprob: -6.697884559631348

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000145137935760431
    2. ' ,' → logprob: -9.375144958496094
    3. ',s' → logprob: -11.625144958496094
    4. ',count' → logprob: -11.750144958496094
    5. ',k' → logprob: -11.750144958496094
    6. ',int' → logprob: -12.000144958496094
    7. '   ' → logprob: -12.125144958496094
    8. ',b' → logprob: -12.375144958496094
    9. ',n' → logprob: -12.875144958496094
    10. '_,' → logprob: -13.625144958496094

Token 365: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.09581375122070312
    2. ' small' → logprob: -2.720813751220703
    3. 'length' → logprob: -5.720813751220703
    4. 'rep' → logprob: -5.845813751220703
    5. ' rep' → logprob: -6.095813751220703
    6. 'n' → logprob: -6.345813751220703
    7. 'sm' → logprob: -6.720813751220703
    8. 're' → logprob: -6.970813751220703
    9. 'k' → logprob: -6.970813751220703
    10. 'items' → logprob: -6.970813751220703

Token 366: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14297980070114136
    2. '):' → logprob: -2.017979860305786
    3. '):
' → logprob: -9.017979621887207
    4. ':' → logprob: -9.642979621887207
    5. ',b' → logprob: -9.642979621887207
    6. ' ,' → logprob: -11.017979621887207
    7. ')' → logprob: -11.517979621887207
    8. ',s' → logprob: -11.767979621887207
    9. '):
' → logprob: -13.142979621887207
    10. ' ):' → logprob: -13.142979621887207

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013689270708709955
    2. ' if' → logprob: -8.126368522644043
    3. ' def' → logprob: -8.251368522644043
    4. ' from' → logprob: -8.876368522644043
    5. 'def' → logprob: -9.001368522644043
    6. '(big' → logprob: -9.001368522644043
    7. ' for' → logprob: -10.126368522644043
    8. '(' → logprob: -10.126368522644043
    9. 'from' → logprob: -10.376368522644043
    10. ':
' → logprob: -10.626368522644043

Token 368: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1740429401397705
    2. '   ' → logprob: -2.0490429401397705
    3. ''''
' → logprob: -4.674042701721191
    4. 'res' → logprob: -4.924042701721191
    5. 'rv' → logprob: -5.174042701721191
    6. ' if' → logprob: -6.049042701721191
    7. '"""
' → logprob: -6.924042701721191
    8. 'dp' → logprob: -6.924042701721191
    9. 'from' → logprob: -7.299042701721191
    10. 'r' → logprob: -7.424042701721191

Token 369: ' because' (ID: 2236)
  Prédit: ''''
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''''
' → logprob: -0.8791912198066711
    2. '   ' → logprob: -1.6291911602020264
    3. ' from' → logprob: -2.6291911602020264
    4. ' if' → logprob: -2.7541911602020264
    5. 'from' → logprob: -2.7541911602020264
    6. 'if' → logprob: -3.2541911602020264
    7. ' rv' → logprob: -3.5041911602020264
    8. ''''' → logprob: -3.7541911602020264
    9. '"""
' → logprob: -4.0041913986206055
    10. ' res' → logprob: -4.6291913986206055

Token 370: ' words' (ID: 6391)
  Prédit: ' big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.8575277328491211
    2. ' small' → logprob: -1.607527732849121
    3. 'big' → logprob: -1.732527732849121
    4. ' not' → logprob: -2.607527732849121
    5. 'small' → logprob: -2.857527732849121
    6. '   ' → logprob: -4.232527732849121
    7. ' isinstance' → logprob: -5.232527732849121
    8. ''' → logprob: -5.357527732849121
    9. 'not' → logprob: -5.482527732849121
    10. ' ' → logprob: -5.482527732849121

Token 371: ' should' (ID: 1757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2403268665075302
    2. 'def' → logprob: -2.7403268814086914
    3. ' =' → logprob: -3.7403268814086914
    4. '(big' → logprob: -3.7403268814086914
    5. '):
' → logprob: -4.365326881408691
    6. 'from' → logprob: -4.490326881408691
    7. '():
' → logprob: -4.490326881408691
    8. ':' → logprob: -4.740326881408691
    9. '(' → logprob: -4.740326881408691
    10. ',' → logprob: -4.740326881408691

Token 372: ' feel' (ID: 3195)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.13737145066261292
    2. ' not' → logprob: -2.88737154006958
    3. '   ' → logprob: -4.26237154006958
    4. 'be' → logprob: -4.63737154006958
    5. ' have' → logprob: -4.63737154006958
    6. 'def' → logprob: -5.26237154006958
    7. 'count' → logprob: -5.63737154006958
    8. 'not' → logprob: -5.76237154006958
    9. '[]' → logprob: -6.01237154006958
    10. 'have' → logprob: -6.13737154006958

Token 373: ' fun' (ID: 2827)
  Prédit: 'like'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'like' → logprob: -0.559116780757904
    2. ' like' → logprob: -1.6841168403625488
    3. 'f' → logprob: -2.934116840362549
    4. 'free' → logprob: -3.934116840362549
    5. 'com' → logprob: -4.684116840362549
    6. '   ' → logprob: -4.809116840362549
    7. 'more' → logprob: -4.934116840362549
    8. ' free' → logprob: -5.059116840362549
    9. 'good' → logprob: -5.059116840362549
    10. ' familiar' → logprob: -5.059116840362549

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13597935438156128
    2. 'def' → logprob: -3.260979413986206
    3. '(big' → logprob: -3.510979413986206
    4. ',' → logprob: -4.260979175567627
    5. '):
' → logprob: -4.885979175567627
    6. ':' → logprob: -5.135979175567627
    7. ':
' → logprob: -5.260979175567627
    8. ' def' → logprob: -5.510979175567627
    9. '(' → logprob: -5.760979175567627
    10. 'from' → logprob: -5.885979175567627

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013454732252284884
    2. ',' → logprob: -7.376345634460449
    3. ':' → logprob: -8.12634563446045
    4. ' if' → logprob: -9.25134563446045
    5. '):' → logprob: -9.87634563446045
    6. ':
' → logprob: -10.00134563446045
    7. '):
' → logprob: -10.12634563446045
    8. 'def' → logprob: -11.12634563446045
    9. ' =' → logprob: -11.25134563446045
    10. 'from' → logprob: -11.25134563446045

Token 376: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7876909375190735
    2. '   ' → logprob: -1.0376908779144287
    3. 'if' → logprob: -2.6626908779144287
    4. ' rv' → logprob: -2.7876908779144287
    5. ' from' → logprob: -3.9126908779144287
    6. ' res' → logprob: -4.412691116333008
    7. ' top' → logprob: -5.037691116333008
    8. 'from' → logprob: -5.412691116333008
    9. ' numerator' → logprob: -5.662691116333008
    10. 'rv' → logprob: -5.662691116333008

Token 377: ' combos' (ID: 150243)
  Prédit: ' combos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combos' → logprob: -0.6342273354530334
    2. 'comb' → logprob: -0.7592273354530334
    3. 'combo' → logprob: -7.634227275848389
    4. 'factor' → logprob: -8.634227752685547
    5. ' combo' → logprob: -8.759227752685547
    6. '[' → logprob: -9.009227752685547
    7. 'fact' → logprob: -9.384227752685547
    8. 'int' → logprob: -9.384227752685547
    9. 'ac' → logprob: -9.634227752685547
    10. ' comb' → logprob: -10.009227752685547

Token 378: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0018202434293925762
    2. 's' → logprob: -6.376820087432861
    3. '_rep' → logprob: -9.50182056427002
    4. '_co' → logprob: -11.62682056427002
    5. '_' → logprob: -11.75182056427002
    6. '_c' → logprob: -12.37682056427002
    7. '_cnt' → logprob: -12.50182056427002
    8. 'count' → logprob: -12.87682056427002
    9. '_counts' → logprob: -13.12682056427002
    10. 'u' → logprob: -13.75182056427002

Token 379: '(big' (ID: 140437)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2165808528661728
    2. '+' → logprob: -1.716580867767334
    3. ' ,' → logprob: -4.841580867767334
    4. ' +' → logprob: -5.091580867767334
    5. '-' → logprob: -7.091580867767334
    6. '   ' → logprob: -9.716580390930176
    7. ' -' → logprob: -10.591580390930176
    8. ',s' → logprob: -10.841580390930176
    9. '+s' → logprob: -11.216580390930176
    10. '+,' → logprob: -11.341580390930176

Token 381: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.0008062947308644652
    2. ' small' → logprob: -7.1258063316345215
    3. '-small' → logprob: -14.000805854797363
    4. '_small' → logprob: -14.750805854797363
    5. '.small' → logprob: -15.250805854797363
    6. '-' → logprob: -15.625805854797363
    7. ' ' → logprob: -16.12580680847168
    8. '   ' → logprob: -16.62580680847168
    9. '
' → logprob: -16.75080680847168
    10. 'smooth' → logprob: -18.12580680847168

Token 382: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1906495839357376
    2. '-' → logprob: -1.9406496286392212
    3. ' ,' → logprob: -3.6906495094299316
    4. ' -' → logprob: -5.315649509429932
    5. ')' → logprob: -10.69064998626709
    6. '   ' → logprob: -11.44064998626709
    7. ',k' → logprob: -11.56564998626709
    8. ' ' → logprob: -11.69064998626709
    9. ',s' → logprob: -11.69064998626709
    10. '-small' → logprob: -12.19064998626709

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '11' → logprob: -16.875
    4. '2' → logprob: -17.875
    5. 'small' → logprob: -18.375
    6. '-' → logprob: -19.625
    7. '۱' → logprob: -19.75
    8. '3' → logprob: -19.75
    9. '111' → logprob: -20.1875
    10. '```' → logprob: -20.375

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ' ,' → logprob: -8.250265121459961
    3. ',s' → logprob: -13.125265121459961
    4. '   ' → logprob: -15.000265121459961
    5. ',b' → logprob: -15.000265121459961
    6. ',
' → logprob: -15.125265121459961
    7. ')' → logprob: -15.750265121459961
    8. ',k' → logprob: -17.12526512145996
    9. '	' → logprob: -17.25026512145996
    10. ',n' → logprob: -17.25026512145996

Token 385: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.014165159314870834
    2. ' small' → logprob: -4.264164924621582
    3. 'big' → logprob: -13.889164924621582
    4. '.small' → logprob: -14.514164924621582
    5. '_small' → logprob: -15.889164924621582
    6. ')' → logprob: -16.7641658782959
    7. 'sm' → logprob: -17.1391658782959
    8. ' big' → logprob: -17.7641658782959
    9. 'Small' → logprob: -17.8891658782959
    10. '   ' → logprob: -18.3891658782959

Token 386: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.50000286102295
    3. ' )' → logprob: -14.00000286102295
    4. ')}' → logprob: -15.87500286102295
    5. ')return' → logprob: -16.375001907348633
    6. ')#' → logprob: -16.625001907348633
    7. '))' → logprob: -16.750001907348633
    8. '),' → logprob: -17.125001907348633
    9. '<|end|>' → logprob: -17.125001907348633
    10. '}' → logprob: -17.875001907348633

Token 387: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.39838528633117676
    2. 'math' → logprob: -2.1483852863311768
    3. ' functools' → logprob: -2.6483852863311768
    4. ' collections' → logprob: -2.7733852863311768
    5. 'collections' → logprob: -3.0233852863311768
    6. ' itertools' → logprob: -4.398385047912598
    7. ' fractions' → logprob: -5.023385047912598
    8. ' operator' → logprob: -5.398385047912598
    9. 'operator' → logprob: -5.898385047912598
    10. 'sys' → logprob: -6.898385047912598

Token 389: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0007855643052607775
    2. ' import' → logprob: -7.6257853507995605
    3. 'port' → logprob: -8.875785827636719
    4. 'from' → logprob: -9.375785827636719
    5. '<|end|>' → logprob: -11.625785827636719
    6. 'ort' → logprob: -12.125785827636719
    7. 'n' → logprob: -12.250785827636719
    8. 'rt' → logprob: -12.250785827636719
    9. 'abc' → logprob: -12.250785827636719
    10. 's' → logprob: -12.375785827636719

Token 390: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.409353107213974
    2. ' defaultdict' → logprob: -1.6593531370162964
    3. 'default' → logprob: -2.159353017807007
    4. 'Counter' → logprob: -4.284353256225586
    5. ' deque' → logprob: -4.784353256225586
    6. ' Counter' → logprob: -5.534353256225586
    7. 'abc' → logprob: -5.659353256225586
    8. 'named' → logprob: -8.659353256225586
    9. 'de' → logprob: -8.784353256225586
    10. 'collections' → logprob: -8.909353256225586

Token 391: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6103425621986389
    2. '
' → logprob: -1.2353425025939941
    3. '<|end|>' → logprob: -2.110342502593994
    4. '

' → logprob: -3.860342502593994
    5. 'deque' → logprob: -4.485342502593994
    6. 'import' → logprob: -5.985342502593994
    7. 'class' → logprob: -5.985342502593994
    8. '<|end|>' → logprob: -6.360342502593994
    9. '```' → logprob: -7.110342502593994
    10. 'from' → logprob: -7.360342502593994

Token 392: ' de' (ID: 334)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.7079323530197144
    2. 'deque' → logprob: -1.9579323530197144
    3. ' dq' → logprob: -1.9579323530197144
    4. 'de' → logprob: -2.332932472229004
    5. ' de' → logprob: -2.957932472229004
    6. 'd' → logprob: -2.957932472229004
    7. ' deque' → logprob: -4.082932472229004
    8. '_de' → logprob: -5.582932472229004
    9. ' d' → logprob: -5.707932472229004
    10. '	de' → logprob: -9.957932472229004

Token 393: 'q' (ID: 80)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.005168885458260775
    2. 'q' → logprob: -5.505168914794922
    3. 'qu' → logprob: -7.005168914794922
    4. 'fault' → logprob: -8.755168914794922
    5. 'f' → logprob: -11.005168914794922
    6. 'queue' → logprob: -13.005168914794922
    7. 'ques' → logprob: -13.255168914794922
    8. 'uq' → logprob: -13.380168914794922
    9. 'qe' → logprob: -13.755168914794922
    10. 'fa' → logprob: -15.505168914794922

Token 394: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6452446579933167
    2. '
' → logprob: -1.1452445983886719
    3. '<|end|>' → logprob: -2.645244598388672
    4. 'deque' → logprob: -3.895244598388672
    5. ',' → logprob: -4.520244598388672
    6. ' 
' → logprob: -4.770244598388672
    7. '  
' → logprob: -4.895244598388672
    8. '

' → logprob: -5.020244598388672
    9. 'from' → logprob: -5.270244598388672
    10. '#' → logprob: -5.395244598388672

Token 395: ' Counter' (ID: 32251)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.30153271555900574
    2. 'Counter' → logprob: -1.6765327453613281
    3. ' defaultdict' → logprob: -2.926532745361328
    4. ' Counter' → logprob: -4.551532745361328
    5. 'named' → logprob: -4.926532745361328
    6. 'Ordered' → logprob: -7.051532745361328
    7. 'deque' → logprob: -7.676532745361328
    8. ' named' → logprob: -8.301532745361328
    9. 'counter' → logprob: -9.801532745361328
    10. ' default' → logprob: -10.176532745361328

Token 396: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.06238127127289772
    2. 'as' → logprob: -2.9373812675476074
    3. '<|end|>' → logprob: -4.937381267547607
    4. 'from' → logprob: -9.062381744384766
    5. ',' → logprob: -9.437381744384766
    6. '<|end|>' → logprob: -9.937381744384766
    7. 'import' → logprob: -11.187381744384766
    8. ' ' → logprob: -12.062381744384766
    9. ' from' → logprob: -12.312381744384766
    10. '
' → logprob: -12.437381744384766

Token 397: ' C' (ID: 363)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.20143555104732513
    2. 'Cnt' → logprob: -2.4514355659484863
    3. 'Ctr' → logprob: -3.0764355659484863
    4. 'Cn' → logprob: -3.7014355659484863
    5. 'C' → logprob: -4.201435565948486
    6. ' Counter' → logprob: -5.951435565948486
    7. 'Coun' → logprob: -6.201435565948486
    8. 'Count' → logprob: -6.326435565948486
    9. 'Ct' → logprob: -6.326435565948486
    10. 'cnt' → logprob: -7.576435565948486

Token 398: '  
' (ID: 4066)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6865336894989014
    2. 'from' → logprob: -1.1865336894989014
    3. 'deque' → logprob: -2.3115336894989014
    4. '#' → logprob: -3.8115336894989014
    5. '<|end|>' → logprob: -4.3115339279174805
    6. 'import' → logprob: -4.4365339279174805
    7. ')' → logprob: -5.0615339279174805
    8. '
' → logprob: -5.6865339279174805
    9. ',' → logprob: -5.8115339279174805
    10. ' from' → logprob: -5.9365339279174805

Token 400: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5959120392799377
    2. 'collections' → logprob: -1.720911979675293
    3. 'math' → logprob: -2.220911979675293
    4. ' heap' → logprob: -2.845911979675293
    5. 'operator' → logprob: -3.470911979675293
    6. ' functools' → logprob: -3.720911979675293
    7. ' math' → logprob: -4.470911979675293
    8. ' collections' → logprob: -4.470911979675293
    9. 'random' → logprob: -5.470911979675293
    10. ' operator' → logprob: -5.720911979675293

Token 401: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.25
    3. 'import' → logprob: -17.25
    4. 'dict' → logprob: -20.625
    5. 'que' → logprob: -21.5
    6. 'Q' → logprob: -21.5
    7. ' queue' → logprob: -21.75
    8. 's' → logprob: -22.375
    9. 'n' → logprob: -22.5
    10. ' as' → logprob: -22.75

Token 402: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4741112291812897
    2. ' import' → logprob: -0.9741111993789673
    3. '	import' → logprob: -11.349111557006836
    4. '<|end|>' → logprob: -11.349111557006836
    5. '_import' → logprob: -12.224111557006836
    6. ' ' → logprob: -12.474111557006836
    7. ' as' → logprob: -14.474111557006836
    8. ' imports' → logprob: -15.474111557006836
    9. '(import' → logprob: -15.724111557006836
    10. 'from' → logprob: -15.974111557006836

Token 403: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.06328894942998886
    2. 'he' → logprob: -2.938288927078247
    3. 'heap' → logprob: -5.313289165496826
    4. ' heap' → logprob: -5.813289165496826
    5. ' n' → logprob: -8.063288688659668
    6. 'nl' → logprob: -9.563288688659668
    7. 'n' → logprob: -10.188288688659668
    8. ' ' → logprob: -10.938288688659668
    9. '.he' → logprob: -11.938288688659668
    10. '.heap' → logprob: -13.188288688659668

Token 404: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.006761436816304922
    2. 'q' → logprob: -5.50676155090332
    3. 'replace' → logprob: -6.13176155090332
    4. 'push' → logprob: -8.38176155090332
    5. 'ush' → logprob: -9.63176155090332
    6. 'op' → logprob: -9.63176155090332
    7. 'lify' → logprob: -9.63176155090332
    8. 'pop' → logprob: -10.00676155090332
    9. '<|end|>' → logprob: -12.13176155090332
    10. 'sort' → logprob: -12.13176155090332

Token 405: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06462479382753372
    2. ' as' → logprob: -2.814624786376953
    3. 'as' → logprob: -6.314624786376953
    4. ' ,' → logprob: -7.939624786376953
    5. '<|end|>' → logprob: -8.814624786376953
    6. 'import' → logprob: -8.939624786376953
    7. 'from' → logprob: -10.314624786376953
    8. ' ' → logprob: -10.439624786376953
    9. ',
' → logprob: -10.564624786376953
    10. ',h' → logprob: -10.814624786376953

Token 406: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.021843433380127
    2. 'hq' → logprob: -1.021843433380127
    3. 'h' → logprob: -1.771843433380127
    4. 'hf' → logprob: -2.396843433380127
    5. 'hp' → logprob: -4.896843433380127
    6. ' h' → logprob: -5.271843433380127
    7. ' heap' → logprob: -5.521843433380127
    8. ' hf' → logprob: -7.396843433380127
    9. 'he' → logprob: -7.521843433380127
    10. '_heap' → logprob: -8.146842956542969

Token 407: 'start' (ID: 5236)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.02507951110601425
    2. 'q' → logprob: -4.525079727172852
    3. 'push' → logprob: -4.775079727172852
    4. 'fy' → logprob: -6.150079727172852
    5. 'lify' → logprob: -6.150079727172852
    6. 'replace' → logprob: -7.150079727172852
    7. '_push' → logprob: -9.275079727172852
    8. 'IFY' → logprob: -9.650079727172852
    9. 'ush' → logprob: -10.025079727172852
    10. '<|end|>' → logprob: -10.525079727172852

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036234736908227205
    2. 'from' → logprob: -6.3786234855651855
    3. '<|end|>' → logprob: -6.6286234855651855
    4. 'import' → logprob: -8.878623008728027
    5. '
' → logprob: -9.503623008728027
    6. ',
' → logprob: -9.503623008728027
    7. ' ,' → logprob: -9.878623008728027
    8. 'def' → logprob: -10.003623008728027
    9. ',h' → logprob: -10.128623008728027
    10. ',b' → logprob: -10.878623008728027

Token 409: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.02847428433597088
    2. ' he' → logprob: -3.6534743309020996
    3. 'heap' → logprob: -6.2784743309021
    4. '_he' → logprob: -8.653473854064941
    5. ' heap' → logprob: -10.153473854064941
    6. '.he' → logprob: -10.778473854064941
    7. ' ' → logprob: -11.153473854064941
    8. 'nl' → logprob: -11.528473854064941
    9. '```' → logprob: -12.278473854064941
    10. 'h' → logprob: -12.528473854064941

Token 410: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.36574100604048e-06
    2. 'ap' → logprob: -12.375004768371582
    3. 'appen' → logprob: -17.750003814697266
    4. 'a' → logprob: -17.875003814697266
    5. ' app' → logprob: -18.125003814697266
    6. 'pp' → logprob: -18.125003814697266
    7. '_app' → logprob: -19.750003814697266
    8. 'APP' → logprob: -20.250003814697266
    9. '	app' → logprob: -20.250003814697266
    10. 'appe' → logprob: -20.375003814697266

Token 411: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.03815222531557083
    2. 'op' → logprob: -3.2881522178649902
    3. 'app' → logprob: -9.288152694702148
    4. 'e' → logprob: -12.038152694702148
    5. 'ap' → logprob: -12.288152694702148
    6. 'push' → logprob: -13.163152694702148
    7. '[' → logprob: -13.413152694702148
    8. 'o' → logprob: -13.538152694702148
    9. '```' → logprob: -14.288152694702148
    10. 'opp' → logprob: -14.413152694702148

Token 412: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.35552480816841125
    2. 'as' → logprob: -1.2305247783660889
    3. ',' → logprob: -4.980525016784668
    4. 'he' → logprob: -9.980525016784668
    5. '<|end|>' → logprob: -10.105525016784668
    6. '(heap' → logprob: -10.730525016784668
    7. 'heap' → logprob: -11.230525016784668
    8. 'import' → logprob: -11.480525016784668
    9. 'from' → logprob: -11.480525016784668
    10. 'and' → logprob: -11.605525016784668

Token 413: ' eat' (ID: 11237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.1329570710659027
    2. 'heap' → logprob: -2.2579569816589355
    3. ' he' → logprob: -4.0079569816589355
    4. ' heap' → logprob: -6.7579569816589355
    5. 'h' → logprob: -8.007957458496094
    6. 'hq' → logprob: -9.757957458496094
    7. '_he' → logprob: -10.007957458496094
    8. '_heap' → logprob: -10.132957458496094
    9. ' ' → logprob: -11.132957458496094
    10. '(heap' → logprob: -11.132957458496094

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008336194790899754
    2. 'heap' → logprob: -5.008336067199707
    3. '(heap' → logprob: -7.633336067199707
    4. 'he' → logprob: -8.133336067199707
    5. 'as' → logprob: -8.883336067199707
    6. '_heap' → logprob: -9.008336067199707
    7. '<|end|>' → logprob: -9.133336067199707
    8. ' ,' → logprob: -9.383336067199707
    9. 'pop' → logprob: -9.508336067199707
    10. ' as' → logprob: -9.633336067199707

Token 415: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03908606618642807
    2. ' he' → logprob: -3.289086103439331
    3. 'heap' → logprob: -6.914085865020752
    4. ' heap' → logprob: -11.03908634185791
    5. ' ' → logprob: -12.03908634185791
    6. '```' → logprob: -12.41408634185791
    7. 'h' → logprob: -12.60158634185791
    8. '.he' → logprob: -12.85158634185791
    9. 'push' → logprob: -12.91408634185791
    10. '   ' → logprob: -12.97658634185791

Token 416: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009149204124696553
    2. 'ap' → logprob: -7.000915050506592
    3. 'a' → logprob: -13.125914573669434
    4. 'APP' → logprob: -15.000914573669434
    5. 'apput' → logprob: -15.375914573669434
    6. 'ап' → logprob: -15.500914573669434
    7. 'appen' → logprob: -15.875914573669434
    8. '```' → logprob: -16.50091552734375
    9. 'q' → logprob: -16.87591552734375
    10. '(app' → logprob: -17.00091552734375

Token 417: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.843177233240567e-05
    2. 'op' → logprob: -11.500018119812012
    3. 'push' → logprob: -12.625018119812012
    4. 'p' → logprob: -13.750018119812012
    5. 'us' → logprob: -13.875018119812012
    6. '   ' → logprob: -14.500018119812012
    7. 'u' → logprob: -14.625018119812012
    8. '```' → logprob: -14.875018119812012
    9. '

' → logprob: -15.375018119812012
    10. 'sh' → logprob: -15.625018119812012

Token 418: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.6933803558349609
    2. ' as' → logprob: -0.6933803558349609
    3. '(heap' → logprob: -8.693380355834961
    4. '<|end|>' → logprob: -10.193380355834961
    5. 'heap' → logprob: -11.443380355834961
    6. ',' → logprob: -12.068380355834961
    7. ' (' → logprob: -13.568380355834961
    8. ' ' → logprob: -13.693380355834961
    9. '<|end|>' → logprob: -13.943380355834961
    10. ' heap' → logprob: -14.193380355834961

Token 419: ' spit' (ID: 106281)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -1.108301043510437
    2. 'feed' → logprob: -1.358301043510437
    3. 'heap' → logprob: -1.983301043510437
    4. 'serve' → logprob: -3.6083011627197266
    5. 'pump' → logprob: -3.7333011627197266
    6. 'h' → logprob: -3.9833011627197266
    7. 'give' → logprob: -4.108301162719727
    8. 'add' → logprob: -4.233301162719727
    9. 'put' → logprob: -4.358301162719727
    10. 'drop' → logprob: -4.358301162719727

Token 420: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16970627009868622
    2. '#' → logprob: -3.044706344604492
    3. '<|end|>' → logprob: -3.419706344604492
    4. 'import' → logprob: -3.919706344604492
    5. 'from' → logprob: -4.294706344604492
    6. '
' → logprob: -4.294706344604492
    7. ',' → logprob: -4.544706344604492
    8. '<|end|>' → logprob: -5.919706344604492
    9. 'class' → logprob: -6.419706344604492
    10. '  
' → logprob: -6.669706344604492

Token 421: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6956576108932495
    2. 'heap' → logprob: -0.6956576108932495
    3. ' he' → logprob: -6.445657730102539
    4. ' heap' → logprob: -7.195657730102539
    5. 'n' → logprob: -9.195657730102539
    6. ' n' → logprob: -10.945657730102539
    7. 'nl' → logprob: -11.070657730102539
    8. 'is' → logprob: -11.195657730102539
    9. 'h' → logprob: -12.320657730102539
    10. 'merge' → logprob: -12.445657730102539

Token 422: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.22928635776042938
    2. 'app' → logprob: -1.6042863130569458
    3. 'replace' → logprob: -5.979286193847656
    4. 'n' → logprob: -8.354286193847656
    5. 'aps' → logprob: -8.604286193847656
    6. 'push' → logprob: -8.854286193847656
    7. 'p' → logprob: -9.104286193847656
    8. 'pp' → logprob: -9.104286193847656
    9. 'ush' → logprob: -9.729286193847656
    10. 'apy' → logprob: -9.729286193847656

Token 423: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.2021479457616806
    2. 'op' → logprob: -1.7021479606628418
    3. 'p' → logprob: -9.202147483825684
    4. 'replace' → logprob: -9.452147483825684
    5. 'push' → logprob: -9.577147483825684
    6. 'sh' → logprob: -9.702147483825684
    7. 'q' → logprob: -10.514647483825684
    8. 'us' → logprob: -10.514647483825684
    9. 'ap' → logprob: -10.577147483825684
    10. 'u' → logprob: -10.577147483825684

Token 424: 'pop' (ID: 15042)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.6849197149276733
    2. ' as' → logprob: -1.0599197149276733
    3. '<|end|>' → logprob: -2.184919834136963
    4. '_n' → logprob: -4.934919834136963
    5. '<|end|>' → logprob: -5.059919834136963
    6. '_as' → logprob: -5.309919834136963
    7. ' ' → logprob: -6.309919834136963
    8. '_back' → logprob: -6.934919834136963
    9. 'pop' → logprob: -6.934919834136963
    10. 'from' → logprob: -7.059919834136963

Token 425: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0789559930562973
    2. 'as' → logprob: -2.578955888748169
    3. '<|end|>' → logprob: -9.70395565032959
    4. '	as' → logprob: -13.45395565032959
    5. ' ' → logprob: -13.82895565032959
    6. '<|end|>' → logprob: -14.20395565032959
    7. 'from' → logprob: -14.57895565032959
    8. ',' → logprob: -14.57895565032959
    9. '(as' → logprob: -15.20395565032959
    10. 'import' → logprob: -15.82895565032959

Token 426: ' gob' (ID: 18778)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.33185285329818726
    2. 'push' → logprob: -2.206852912902832
    3. 'heap' → logprob: -2.956852912902832
    4. 'h' → logprob: -3.331852912902832
    5. ' he' → logprob: -3.831852912902832
    6. 'sp' → logprob: -4.206852912902832
    7. 'eat' → logprob: -4.456852912902832
    8. 'replace' → logprob: -5.206852912902832
    9. ' push' → logprob: -5.581852912902832
    10. 'e' → logprob: -6.269352912902832

Token 427: 'ble' (ID: 1124)
  Prédit: 'ble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.040851689875125885
    2. 'p' → logprob: -4.165851593017578
    3. 'ush' → logprob: -4.540851593017578
    4. 'push' → logprob: -4.540851593017578
    5. 'lin' → logprob: -6.540851593017578
    6. 'pop' → logprob: -7.665851593017578
    7. 'ack' → logprob: -8.415851593017578
    8. 'b' → logprob: -8.665851593017578
    9. 'let' → logprob: -9.040851593017578
    10. 'pile' → logprob: -9.290851593017578

Token 428: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.7164589762687683
    2. 'heap' → logprob: -0.7164589762687683
    3. ' heap' → logprob: -4.591458797454834
    4. ' he' → logprob: -5.091458797454834
    5. ' n' → logprob: -5.716458797454834
    6. 'n' → logprob: -6.341458797454834
    7. 'nl' → logprob: -6.966458797454834
    8. 'merge' → logprob: -7.841458797454834
    9. '_n' → logprob: -9.591459274291992
    10. '_heap' → logprob: -9.716459274291992

Token 430: 'replace' (ID: 15208)
  Prédit: 'replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.00121737876906991
    2. 'ify' → logprob: -6.751217365264893
    3. '_replace' → logprob: -11.00121784210205
    4. 'sort' → logprob: -11.25121784210205
    5. 'merge' → logprob: -12.50121784210205
    6. 'remove' → logprob: -12.75121784210205
    7. 'Replace' → logprob: -13.00121784210205
    8. 'combine' → logprob: -13.62621784210205
    9. 'push' → logprob: -13.75121784210205
    10. 'pop' → logprob: -14.00121784210205

Token 431: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.576387882232666
    2. ' as' → logprob: -0.826387882232666
    3. '<|end|>' → logprob: -7.951387882232666
    4. 'import' → logprob: -9.576387405395508
    5. '<|end|>' → logprob: -11.951387405395508
    6. '	as' → logprob: -12.076387405395508
    7. 'from' → logprob: -12.076387405395508
    8. '(heap' → logprob: -13.201387405395508
    9. '(as' → logprob: -13.576387405395508
    10. ',' → logprob: -13.701387405395508

Token 432: ' ch' (ID: 549)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7084404230117798
    2. ' heap' → logprob: -2.0834403038024902
    3. 'replace' → logprob: -2.0834403038024902
    4. 'he' → logprob: -2.7084403038024902
    5. 'swap' → logprob: -4.08344030380249
    6. 'eat' → logprob: -4.14594030380249
    7. 're' → logprob: -4.27094030380249
    8. 'pop' → logprob: -4.33344030380249
    9. ' eat' → logprob: -4.33344030380249
    10. ' replace' → logprob: -4.39594030380249

Token 433: 'omp' (ID: 23036)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6329792141914368
    2. 'ange' → logprob: -1.132979154586792
    3. 'ang' → logprob: -2.882979154586792
    4. 'urn' → logprob: -4.257979393005371
    5. 'omp' → logprob: -4.382979393005371
    6. 'o' → logprob: -4.632979393005371
    7. 'eep' → logprob: -4.882979393005371
    8. 'eat' → logprob: -5.132979393005371
    9. 'op' → logprob: -5.507979393005371
    10. 'ump' → logprob: -5.632979393005371

Token 434: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' n' (ID: 297)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.26476049423217773
    2. 'he' → logprob: -1.6397604942321777
    3. 'nl' → logprob: -3.8897604942321777
    4. 'n' → logprob: -4.639760494232178
    5. 'merge' → logprob: -5.514760494232178
    6. ' heap' → logprob: -6.264760494232178
    7. ' n' → logprob: -7.139760494232178
    8. ' he' → logprob: -7.514760494232178
    9. '_n' → logprob: -7.889760494232178
    10. '_heap' → logprob: -8.514760971069336

Token 436: 'largest' (ID: 191832)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.523857593536377
    2. 'largest' → logprob: -0.898857593536377
    3. 'large' → logprob: -7.398857593536377
    4. 'ext' → logprob: -10.148857116699219
    5. 'l' → logprob: -10.898857116699219
    6. 'larg' → logprob: -11.148857116699219
    7. '_small' → logprob: -11.273857116699219
    8. 'Largest' → logprob: -11.898857116699219
    9. 'e' → logprob: -12.148857116699219
    10. 'mall' → logprob: -12.523857116699219

Token 437: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' arriba' (ID: 67116)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.4058631956577301
    2. ' n' → logprob: -1.4058631658554077
    3. ' nl' → logprob: -2.9058632850646973
    4. 'n' → logprob: -3.9058632850646973
    5. 'largest' → logprob: -6.280863285064697
    6. 'max' → logprob: -6.405863285064697
    7. ' max' → logprob: -6.655863285064697
    8. '_n' → logprob: -7.030863285064697
    9. 'big' → logprob: -7.155863285064697
    10. ' heap' → logprob: -7.280863285064697

Token 439: ',' (ID: 11)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.0228385925292969
    2. ',' → logprob: -1.3978385925292969
    3. 'as' → logprob: -1.8978385925292969
    4. 'from' → logprob: -2.147838592529297
    5. '<|end|>' → logprob: -2.272838592529297
    6. 'import' → logprob: -4.022838592529297
    7. '<|end|>' → logprob: -6.022838592529297
    8. ' from' → logprob: -6.147838592529297
    9. 'def' → logprob: -7.772838592529297
    10. '
' → logprob: -9.022838592529297

Token 440: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09854277968406677
    2. 'nl' → logprob: -2.5985426902770996
    3. ' n' → logprob: -4.8485426902771
    4. 'heap' → logprob: -5.2235426902771
    5. 'merge' → logprob: -6.2235426902771
    6. 'he' → logprob: -6.2235426902771
    7. 'is' → logprob: -7.4735426902771
    8. '_n' → logprob: -7.4735426902771
    9. 'nth' → logprob: -8.973543167114258
    10. '	n' → logprob: -8.973543167114258

Token 441: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.06040648743510246
    2. 'largest' → logprob: -3.060406446456909
    3. 'ext' → logprob: -5.935406684875488
    4. 'l' → logprob: -6.310406684875488
    5. 'tiny' → logprob: -7.560406684875488
    6. 'split' → logprob: -7.935406684875488
    7. 'wor' → logprob: -8.060406684875488
    8. 'argest' → logprob: -8.060406684875488
    9. 'import' → logprob: -8.185406684875488
    10. 'most' → logprob: -8.560406684875488

Token 442: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.004237242974340916
    2. 'ist' → logprob: -6.129237174987793
    3. 'ists' → logprob: -7.254237174987793
    4. 'all' → logprob: -8.004237174987793
    5. 'ests' → logprob: -8.629237174987793
    6. 'lest' → logprob: -8.629237174987793
    7. 'ost' → logprob: -9.254237174987793
    8. 'eft' → logprob: -9.254237174987793
    9. 'argest' → logprob: -9.504237174987793
    10. 'east' → logprob: -9.879237174987793

Token 443: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.12705357372760773
    2. ' as' → logprob: -2.1270534992218018
    3. '<|end|>' → logprob: -10.252053260803223
    4. '	as' → logprob: -10.502053260803223
    5. '<|end|>' → logprob: -11.377053260803223
    6. '(as' → logprob: -11.502053260803223
    7. '_as' → logprob: -11.877053260803223
    8. '(n' → logprob: -12.002053260803223
    9. ',' → logprob: -12.252053260803223
    10. ' ' → logprob: -12.627053260803223

Token 444: ' abajo' (ID: 84172)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.006528734229505062
    2. ' abajo' → logprob: -5.506528854370117
    3. ' ab' → logprob: -6.756528854370117
    4. 'aba' → logprob: -7.256528854370117
    5. 'abas' → logprob: -9.006528854370117
    6. 'adel' → logprob: -9.381528854370117
    7. ' debajo' → logprob: -10.006528854370117
    8. 'aban' → logprob: -10.131528854370117
    9. 'below' → logprob: -10.506528854370117
    10. 'abat' → logprob: -10.631528854370117

Token 445: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' copy' (ID: 5150)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.2071610689163208
    2. 'collections' → logprob: -1.4571610689163208
    3. 'operator' → logprob: -1.7071610689163208
    4. 'random' → logprob: -2.2071609497070312
    5. 'fun' → logprob: -2.9571609497070312
    6. 'bis' → logprob: -3.8321609497070312
    7. 'os' → logprob: -4.082160949707031
    8. 'statistics' → logprob: -4.457160949707031
    9. ' functools' → logprob: -4.707160949707031
    10. 'heap' → logprob: -4.707160949707031

Token 448: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10048625618219376
    2. ' import' → logprob: -2.3504862785339355
    3. ' ' → logprob: -9.350485801696777
    4. '	import' → logprob: -9.600485801696777
    5. '<|end|>' → logprob: -9.975485801696777
    6. ' ' → logprob: -10.600485801696777
    7. 'from' → logprob: -10.725485801696777
    8. '.deepcopy' → logprob: -11.100485801696777
    9. '_import' → logprob: -12.100485801696777
    10. ' importar' → logprob: -13.475485801696777

Token 449: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.09369354695081711
    2. 'deep' → logprob: -2.968693494796753
    3. 'copy' → logprob: -3.468693494796753
    4. '.deepcopy' → logprob: -5.593693733215332
    5. ' copy' → logprob: -5.968693733215332
    6. 'deque' → logprob: -8.218693733215332
    7. 'import' → logprob: -8.593693733215332
    8. ' import' → logprob: -9.218693733215332
    9. ' deep' → logprob: -10.218693733215332
    10. 'dee' → logprob: -10.468693733215332

Token 450: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ' d' (ID: 272)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.8936263918876648
    2. 'deep' → logprob: -0.8936263918876648
    3. 'dc' → logprob: -2.1436264514923096
    4. 'd' → logprob: -4.3936262130737305
    5. '_dc' → logprob: -4.5186262130737305
    6. '_copy' → logprob: -4.6436262130737305
    7. 'cp' → logprob: -5.2686262130737305
    8. ' copy' → logprob: -5.5186262130737305
    9. 'cpy' → logprob: -5.6436262130737305
    10. 'dp' → logprob: -5.7686262130737305

Token 452: 'pc' (ID: 6344)
  Prédit: 'eep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eep' → logprob: -0.03569371625781059
    2. 'copy' → logprob: -3.535693645477295
    3. 'e' → logprob: -5.410693645477295
    4. 'ee' → logprob: -7.410693645477295
    5. 'cpy' → logprob: -7.910693645477295
    6. 'ef' → logprob: -8.660694122314453
    7. 'eef' → logprob: -9.910694122314453
    8. 'eeper' → logprob: -10.160694122314453
    9. 'ep' → logprob: -10.535694122314453
    10. 'cp' → logprob: -10.660694122314453

Token 453: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11952456086874008
    2. '<|end|>' → logprob: -3.1195244789123535
    3. 'from' → logprob: -3.7445244789123535
    4. 'import' → logprob: -4.6195244789123535
    5. '#' → logprob: -4.9945244789123535
    6. ')' → logprob: -5.4945244789123535
    7. ',' → logprob: -5.7445244789123535
    8. ' ' → logprob: -5.8695244789123535
    9. 's' → logprob: -6.3695244789123535
    10. '_' → logprob: -6.3695244789123535

Token 454: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.12998946011066437
    2. 'l' → logprob: -3.3799893856048584
    3. '_' → logprob: -3.7549893856048584
    4. 'reduce' → logprob: -5.0049896240234375
    5. 'deque' → logprob: -5.2549896240234375
    6. 'deep' → logprob: -5.3799896240234375
    7. 'chain' → logprob: -5.3799896240234375
    8. 'bis' → logprob: -5.3799896240234375
    9. '_is' → logprob: -5.6299896240234375
    10. 'd' → logprob: -5.7549896240234375

Token 455: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.7037758231163025
    2. ' as' → logprob: -0.7037758231163025
    3. '.deepcopy' → logprob: -5.078775882720947
    4. '(' → logprob: -6.203775882720947
    5. '<|end|>' → logprob: -7.078775882720947
    6. 'import' → logprob: -7.703775882720947
    7. ' ' → logprob: -8.703775405883789
    8. 'from' → logprob: -8.953775405883789
    9. '
' → logprob: -9.078775405883789
    10. ' (' → logprob: -9.203775405883789

Token 456: ' cc' (ID: 22988)
  Prédit: 'cpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cpy' → logprob: -0.6572346687316895
    2. 'cp' → logprob: -1.2822346687316895
    3. 'copy' → logprob: -1.6572346687316895
    4. 'd' → logprob: -5.2822346687316895
    5. 'c' → logprob: -5.6572346687316895
    6. 'cop' → logprob: -5.7822346687316895
    7. 'deep' → logprob: -7.2822346687316895
    8. 'dc' → logprob: -8.032234191894531
    9. ' cp' → logprob: -8.282234191894531
    10. 'pc' → logprob: -8.782234191894531

Token 457: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5230953097343445
    2. ',' → logprob: -2.2730953693389893
    3. '<|end|>' → logprob: -2.2730953693389893
    4. '#' → logprob: -2.3980953693389893
    5. 'import' → logprob: -3.2730953693389893
    6. 'from' → logprob: -3.5230953693389893
    7. '<|end|>' → logprob: -4.27309513092041
    8. 'as' → logprob: -5.14809513092041
    9. ' as' → logprob: -5.39809513092041
    10. '
' → logprob: -5.89809513092041

Token 458: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21082071959972382
    2. '#' → logprob: -2.9608206748962402
    3. 'import' → logprob: -3.3358206748962402
    4. '<|end|>' → logprob: -3.3358206748962402
    5. 'from' → logprob: -3.5858206748962402
    6. ')' → logprob: -4.83582067489624
    7. ',' → logprob: -5.58582067489624
    8. '<|end|>' → logprob: -6.08582067489624
    9. '\n' → logprob: -6.33582067489624
    10. '.' → logprob: -6.33582067489624

Token 459: ' operator' (ID: 11019)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.1927127838134766
    2. 'collections' → logprob: -1.6927127838134766
    3. 'math' → logprob: -2.3177127838134766
    4. ' functools' → logprob: -2.3177127838134766
    5. 'operator' → logprob: -2.8177127838134766
    6. ' math' → logprob: -3.5677127838134766
    7. 'typing' → logprob: -3.8177127838134766
    8. ' collections' → logprob: -3.8177127838134766
    9. ' typing' → logprob: -3.9427127838134766
    10. ' operator' → logprob: -3.9427127838134766

Token 460: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35236772894859314
    2. 'import' → logprob: -1.2273677587509155
    3. ' as' → logprob: -5.602367877960205
    4. ',' → logprob: -9.477367401123047
    5. '<|end|>' → logprob: -9.727367401123047
    6. '	import' → logprob: -10.352367401123047
    7. ' ' → logprob: -10.852367401123047
    8. 'as' → logprob: -10.852367401123047
    9. '_import' → logprob: -11.852367401123047
    10. ' ,' → logprob: -12.352367401123047

Token 461: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.6421762108802795
    2. ' item' → logprob: -0.8921762108802795
    3. 'mul' → logprob: -3.6421761512756348
    4. ' mul' → logprob: -4.017176151275635
    5. 'add' → logprob: -4.892176151275635
    6. ' add' → logprob: -5.767176151275635
    7. 'attr' → logprob: -6.017176151275635
    8. 'getitem' → logprob: -6.267176151275635
    9. 'method' → logprob: -7.017176151275635
    10. ' method' → logprob: -7.142176151275635

Token 462: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -8.494741632603109e-05
    2. 'get' → logprob: -9.50008487701416
    3. 'getitem' → logprob: -11.75008487701416
    4. 'attr' → logprob: -13.25008487701416
    5. 'gett' → logprob: -15.50008487701416
    6. 'item' → logprob: -16.625085830688477
    7. 'setter' → logprob: -17.500085830688477
    8. 'gets' → logprob: -18.500085830688477
    9. 'Getter' → logprob: -18.625085830688477
    10. 'caller' → logprob: -18.625085830688477

Token 463: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.005899165291339159
    2. 'as' → logprob: -6.130898952484131
    3. ',' → logprob: -6.380898952484131
    4. 'import' → logprob: -6.505898952484131
    5. '<|end|>' → logprob: -7.880898952484131
    6. ' (' → logprob: -9.880899429321289
    7. '(' → logprob: -10.005899429321289
    8. ' import' → logprob: -11.005899429321289
    9. '<|end|>' → logprob: -11.880899429321289
    10. 'from' → logprob: -12.755899429321289

Token 464: ' it' (ID: 480)
  Prédit: 'ig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.1251525580883026
    2. 'item' → logprob: -3.375152587890625
    3. 'igt' → logprob: -3.375152587890625
    4. 'it' → logprob: -3.500152587890625
    5. 'iget' → logprob: -4.875152587890625
    6. 'itg' → logprob: -4.875152587890625
    7. ' ig' → logprob: -6.625152587890625
    8. '_' → logprob: -7.125152587890625
    9. 'igr' → logprob: -7.625152587890625
    10. 'attr' → logprob: -7.750152587890625

Token 465: 'g' (ID: 70)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.0017719273455440998
    2. 'er' → logprob: -6.376771926879883
    3. 'ertools' → logprob: -9.876771926879883
    4. 'emba' → logprob: -12.251771926879883
    5. 'tem' → logprob: -12.501771926879883
    6. 'erm' → logprob: -13.001771926879883
    7. '<|end|>' → logprob: -13.501771926879883
    8. 'ert' → logprob: -13.876771926879883
    9. 'emq' → logprob: -13.876771926879883
    10. 'emt' → logprob: -14.126771926879883

Token 466: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.7855438590049744
    2. 'operator' → logprob: -1.4105439186096191
    3. ' operator' → logprob: -1.7855439186096191
    4. 'random' → logprob: -3.535543918609619
    5. 'fun' → logprob: -3.910543918609619
    6. 'bis' → logprob: -4.285543918609619
    7. 'math' → logprob: -4.660543918609619
    8. 'os' → logprob: -4.785543918609619
    9. 'collections' → logprob: -4.785543918609619
    10. ' itertools' → logprob: -5.160543918609619

Token 469: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2819243371486664
    2. 'import' → logprob: -1.4069243669509888
    3. '_import' → logprob: -7.406924247741699
    4. '	import' → logprob: -9.9069242477417
    5. ',' → logprob: -10.2819242477417
    6. '_' → logprob: -10.4069242477417
    7. '<|end|>' → logprob: -10.6569242477417
    8. ' ' → logprob: -12.1569242477417
    9. ' ' → logprob: -12.2819242477417
    10. ' as' → logprob: -12.5319242477417

Token 470: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.48116612434387207
    2. 'l' → logprob: -0.9811661243438721
    3. 'cache' → logprob: -5.606165885925293
    4. 'partial' → logprob: -6.231165885925293
    5. ' l' → logprob: -7.606165885925293
    6. 'wrap' → logprob: -7.981165885925293
    7. 'cmp' → logprob: -8.231165885925293
    8. ' reduce' → logprob: -8.481165885925293
    9. 'cached' → logprob: -9.481165885925293
    10. ' wraps' → logprob: -12.106165885925293

Token 471: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.12486778199672699
    2. 'import' → logprob: -2.8748676776885986
    3. 'from' → logprob: -3.7498676776885986
    4. '<|end|>' → logprob: -3.9998676776885986
    5. 'as' → logprob: -4.374867916107178
    6. ',' → logprob: -5.999867916107178
    7. '(lambda' → logprob: -7.124867916107178
    8. '(' → logprob: -7.124867916107178
    9. ' import' → logprob: -7.124867916107178
    10. '(import' → logprob: -7.749867916107178

Token 472: ' squ' (ID: 14685)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6435187458992004
    2. 'rd' → logprob: -1.0185186862945557
    3. ' red' → logprob: -3.1435186862945557
    4. 'r' → logprob: -3.7685186862945557
    5. '_red' → logprob: -4.268518924713135
    6. 'rf' → logprob: -5.018518924713135
    7. 'f' → logprob: -5.143518924713135
    8. 'reduce' → logprob: -5.518518924713135
    9. 'rr' → logprob: -5.893518924713135
    10. '_rd' → logprob: -6.018518924713135

Token 473: 'ish' (ID: 1109)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.047625552862882614
    2. 'ared' → logprob: -3.5476255416870117
    3. 'at' → logprob: -5.047625541687012
    4. 'ashed' → logprob: -5.297625541687012
    5. 'are' → logprob: -6.047625541687012
    6. 'ush' → logprob: -7.797625541687012
    7. 'ashes' → logprob: -7.797625541687012
    8. 'ished' → logprob: -8.297625541687012
    9. '```' → logprob: -8.547625541687012
    10. 'ale' → logprob: -8.547625541687012

Token 474: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6714413166046143
    2. ',' → logprob: -1.4214413166046143
    3. '<|end|>' → logprob: -1.6714413166046143
    4. ')' → logprob: -4.296441078186035
    5. '#' → logprob: -4.421441078186035
    6. ',
' → logprob: -4.671441078186035
    7. 'import' → logprob: -4.921441078186035
    8. '<|end|>' → logprob: -5.796441078186035
    9. ':' → logprob: -5.921441078186035
    10. '
' → logprob: -6.046441078186035

Token 475: 'try' (ID: 1806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39926907420158386
    2. 'from' → logprob: -1.8992691040039062
    3. 'import' → logprob: -2.6492691040039062
    4. '#' → logprob: -3.0242691040039062
    5. '<|end|>' → logprob: -3.6492691040039062
    6. ')' → logprob: -4.149269104003906
    7. 'set' → logprob: -6.149269104003906
    8. ' from' → logprob: -6.399269104003906
    9. ',' → logprob: -6.774269104003906
    10. 'lambda' → logprob: -6.899269104003906

Token 476: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016222994774580002
    2. ':
' → logprob: -4.141222953796387
    3. ' :' → logprob: -8.641222953796387
    4. ' :
' → logprob: -12.516222953796387
    5. 'except' → logprob: -13.141222953796387
    6. '{' → logprob: -13.641222953796387
    7. '   ' → logprob: -14.016222953796387
    8. ':
' → logprob: -14.016222953796387
    9. ':return' → logprob: -14.141222953796387
    10. ' except' → logprob: -14.766222953796387

Token 477: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1198539137840271
    2. ' :' → logprob: -2.994853973388672
    3. ':
' → logprob: -3.244853973388672
    4. ' import' → logprob: -4.869853973388672
    5. 'except' → logprob: -5.494853973388672
    6. ' except' → logprob: -5.744853973388672
    7. 'import' → logprob: -5.869853973388672
    8. ' :
' → logprob: -6.119853973388672
    9. '   ' → logprob: -6.494853973388672
    10. '    ' → logprob: -7.744853973388672

Token 478: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.0708155632019043
    2. ' functools' → logprob: -1.5708155632019043
    3. '_' → logprob: -1.6958155632019043
    4. 'math' → logprob: -1.9458155632019043
    5. ' sym' → logprob: -3.8208155632019043
    6. ' itertools' → logprob: -4.070815563201904
    7. 'collections' → logprob: -4.195815563201904
    8. '__' → logprob: -4.445815563201904
    9. 'cmath' → logprob: -4.445815563201904
    10. ' collections' → logprob: -4.945815563201904

Token 479: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38727474212646484
    2. ' import' → logprob: -1.1372747421264648
    3. '_import' → logprob: -8.637274742126465
    4. '<|end|>' → logprob: -9.262274742126465
    5. '	import' → logprob: -9.387274742126465
    6. 'from' → logprob: -11.262274742126465
    7. '<|end|>' → logprob: -11.512274742126465
    8. ' ' → logprob: -11.887274742126465
    9. '#import' → logprob: -12.637274742126465
    10. 'is' → logprob: -13.262274742126465

Token 480: ' gcd' (ID: 106918)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.061810243874788284
    2. 'prod' → logprob: -3.311810255050659
    3. 'g' → logprob: -4.56181001663208
    4. 'comb' → logprob: -4.68681001663208
    5. 'log' → logprob: -6.31181001663208
    6. ' comb' → logprob: -7.18681001663208
    7. ' gcd' → logprob: -8.061810493469238
    8. 'dist' → logprob: -8.311810493469238
    9. 'inf' → logprob: -8.811810493469238
    10. 'lg' → logprob: -8.811810493469238

Token 481: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.02779313735663891
    2. 'except' → logprob: -4.402792930603027
    3. ',' → logprob: -5.027792930603027
    4. ' except' → logprob: -5.652792930603027
    5. '<|end|>' → logprob: -6.027792930603027
    6. 'as' → logprob: -6.527792930603027
    7. '
' → logprob: -7.652792930603027
    8. 'import' → logprob: -7.902792930603027
    9. 'from' → logprob: -9.152792930603027
    10. '<|end|>' → logprob: -9.277792930603027

Token 482: ' og' (ID: 2085)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009298062650486827
    2. ' gcd' → logprob: -7.750929832458496
    3. 'math' → logprob: -7.875929832458496
    4. '_g' → logprob: -9.250929832458496
    5. ' g' → logprob: -11.750929832458496
    6. ' math' → logprob: -11.875929832458496
    7. '__' → logprob: -12.500929832458496
    8. '	g' → logprob: -13.375929832458496
    9. '   ' → logprob: -14.375929832458496
    10. 'G' → logprob: -14.875929832458496

Token 483: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.8288533091545105
    2. 'g' → logprob: -0.9538533091545105
    3. 'from' → logprob: -2.4538533687591553
    4. ' as' → logprob: -3.4538533687591553
    5. ' gcd' → logprob: -3.4538533687591553
    6. ' from' → logprob: -4.578853130340576
    7. '_g' → logprob: -4.953853130340576
    8. 'def' → logprob: -5.328853130340576
    9. ',' → logprob: -5.953853130340576
    10. '
' → logprob: -6.578853130340576

Token 484: '
' (ID: 198)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.09562698751688004
    2. ' except' → logprob: -2.7206270694732666
    3. '
' → logprob: -3.7206270694732666
    4. ',' → logprob: -7.2206268310546875
    5. ' as' → logprob: -8.845626831054688
    6. ';' → logprob: -9.220626831054688
    7. 'import' → logprob: -9.845626831054688
    8. '
' → logprob: -10.595626831054688
    9. 'from' → logprob: -10.595626831054688
    10. '_except' → logprob: -10.720626831054688

Token 485: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.0029239910654723644
    2. ' except' → logprob: -5.877923965454102
    3. '
' → logprob: -9.127923965454102
    4. ',' → logprob: -12.252923965454102
    5. ';' → logprob: -13.252923965454102
    6. 'from' → logprob: -13.377923965454102
    7. 'import' → logprob: -14.127923965454102
    8. '_except' → logprob: -14.502923965454102
    9. '   ' → logprob: -14.752923965454102
    10. '#' → logprob: -15.502923965454102

Token 486: ' Import' (ID: 19998)
  Prédit: 'Import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Import' → logprob: -0.2637002170085907
    2. ' Import' → logprob: -1.513700246810913
    3. 'Module' → logprob: -4.638700008392334
    4. ':' → logprob: -6.263700008392334
    5. ' Module' → logprob: -9.763700485229492
    6. '(' → logprob: -10.263700485229492
    7. '(Module' → logprob: -10.638700485229492
    8. '(module' → logprob: -12.513700485229492
    9. ':
' → logprob: -13.013700485229492
    10. '_import' → logprob: -14.013700485229492

Token 487: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.107425062713446e-06
    2. 'Import' → logprob: -11.875006675720215
    3. 'Warning' → logprob: -16.75000762939453
    4. 'rror' → logprob: -17.50000762939453
    5. ' Error' → logprob: -17.87500762939453
    6. 'Module' → logprob: -18.62500762939453
    7. 'error' → logprob: -20.50000762939453
    8. '	Error' → logprob: -20.50000762939453
    9. ':' → logprob: -20.62500762939453
    10. 'import' → logprob: -20.75000762939453

Token 488: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014845087425783277
    2. ':
' → logprob: -7.001484394073486
    3. ' :' → logprob: -8.501484870910645
    4. ' from' → logprob: -8.751484870910645
    5. 'from' → logprob: -9.126484870910645
    6. ':def' → logprob: -9.626484870910645
    7. ':g' → logprob: -10.751484870910645
    8. 'import' → logprob: -12.501484870910645
    9. '   ' → logprob: -12.751484870910645
    10. 'g' → logprob: -13.126484870910645

Token 489: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.45881691575050354
    2. '   ' → logprob: -1.5838168859481812
    3. 'from' → logprob: -1.8338168859481812
    4. '	from' → logprob: -6.833817005157471
    5. ' def' → logprob: -7.083817005157471
    6. 'def' → logprob: -7.583817005157471
    7. 'import' → logprob: -8.208816528320312
    8. ' pass' → logprob: -9.083816528320312
    9. ' import' → logprob: -9.833816528320312
    10. ' ' → logprob: -10.208816528320312

Token 490: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.0007036144379526377
    2. ' fractions' → logprob: -7.750703811645508
    3. 'math' → logprob: -8.250703811645508
    4. '__' → logprob: -11.625703811645508
    5. 'os' → logprob: -14.500703811645508
    6. 'future' → logprob: -14.625703811645508
    7. 'fun' → logprob: -14.875703811645508
    8. 'operator' → logprob: -15.250703811645508
    9. 'Fra' → logprob: -15.250703811645508
    10. 'g' → logprob: -15.625703811645508

Token 491: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31341204047203064
    2. ' import' → logprob: -1.313412070274353
    3. '	import' → logprob: -8.938411712646484
    4. ' ' → logprob: -11.938411712646484
    5. 'module' → logprob: -12.438411712646484
    6. ' math' → logprob: -13.063411712646484
    7. ' module' → logprob: -13.688411712646484
    8. 'from' → logprob: -14.313411712646484
    9. '#import' → logprob: -14.438411712646484
    10. ' gcd' → logprob: -14.563411712646484

Token 492: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.006723891478031874
    2. ' gcd' → logprob: -5.006723880767822
    3. '_g' → logprob: -12.13172435760498
    4. ' g' → logprob: -13.63172435760498
    5. '	g' → logprob: -14.25672435760498
    6. 'math' → logprob: -14.88172435760498
    7. ' ' → logprob: -15.25672435760498
    8. 'great' → logprob: -15.25672435760498
    9. '```' → logprob: -15.75672435760498
    10. '.g' → logprob: -16.256723403930664

Token 493: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.029805226251482964
    2. 'as' → logprob: -3.5298051834106445
    3. '<|end|>' → logprob: -10.029805183410645
    4. ' ' → logprob: -12.404805183410645
    5. 'import' → logprob: -12.779805183410645
    6. 'from' → logprob: -13.529805183410645
    7. '	as' → logprob: -14.154805183410645
    8. '<|end|>' → logprob: -14.654805183410645
    9. ' ' → logprob: -15.779805183410645
    10. 'asg' → logprob: -16.02980613708496

Token 494: ' og' (ID: 2085)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0011239065788686275
    2. 'fra' → logprob: -6.876123905181885
    3. 'f' → logprob: -9.626124382019043
    4. ' gcd' → logprob: -11.376124382019043
    5. 'fg' → logprob: -11.876124382019043
    6. 'og' → logprob: -13.251124382019043
    7. 'fraction' → logprob: -13.626124382019043
    8. 'old' → logprob: -14.376124382019043
    9. '_g' → logprob: -14.376124382019043
    10. ' ' → logprob: -14.876124382019043

Token 495: 'cd' (ID: 8301)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02844635397195816
    2. 'cd' → logprob: -3.6534464359283447
    3. '_g' → logprob: -6.778446197509766
    4. 'c' → logprob: -7.528446197509766
    5. ' gcd' → logprob: -8.278446197509766
    6. '_c' → logprob: -9.903446197509766
    7. 'def' → logprob: -10.278446197509766
    8. '_cd' → logprob: -10.653446197509766
    9. 'cdf' → logprob: -11.153446197509766
    10. 'd' → logprob: -11.403446197509766

Token 496: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8816642761230469
    2. '<|end|>' → logprob: -1.0066642761230469
    3. 'def' → logprob: -2.881664276123047
    4. '#' → logprob: -3.006664276123047
    5. 'import' → logprob: -3.506664276123047
    6. ')' → logprob: -3.631664276123047
    7. ',' → logprob: -4.756664276123047
    8. '<|end|>' → logprob: -4.756664276123047
    9. ' 
' → logprob: -5.256664276123047
    10. '\n' → logprob: -5.756664276123047

Token 497: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: ' full' (ID: 3149)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.8044161200523376
    2. 'g' → logprob: -1.9294161796569824
    3. 'og' → logprob: -1.9294161796569824
    4. ' og' → logprob: -2.3044161796569824
    5. ' eg' → logprob: -3.1794161796569824
    6. ' main' → logprob: -3.6794161796569824
    7. ' g' → logprob: -3.8044161796569824
    8. ' solve' → logprob: -4.304416179656982
    9. 'eg' → logprob: -5.429416179656982
    10. ' fast' → logprob: -5.679416179656982

Token 499: '_g' (ID: 5439)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.014469859190285206
    2. 'factor' → logprob: -5.639469623565674
    3. '_name' → logprob: -6.264469623565674
    4. '_set' → logprob: -6.264469623565674
    5. '_' → logprob: -6.389469623565674
    6. '_match' → logprob: -6.639469623565674
    7. '_fact' → logprob: -7.014469623565674
    8. 'match' → logprob: -7.389469623565674
    9. '_f' → logprob: -7.889469623565674
    10. '_comb' → logprob: -8.639470100402832

Token 500: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00036787090357393026
    2. 'g' → logprob: -8.125368118286133
    3. 'cdf' → logprob: -10.250368118286133
    4. 'reat' → logprob: -11.500368118286133
    5. 'cdn' → logprob: -11.625368118286133
    6. 'cf' → logprob: -12.000368118286133
    7. 'def' → logprob: -12.625368118286133
    8. 'full' → logprob: -13.500368118286133
    9. 'dc' → logprob: -13.500368118286133
    10. ' gcd' → logprob: -13.750368118286133

Token 501: '(nums' (ID: 40372)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0066161309368908405
    2. '(x' → logprob: -5.256616115570068
    3. '(*' → logprob: -7.006616115570068
    4. '(A' → logprob: -9.006616592407227
    5. '(nums' → logprob: -9.131616592407227
    6. '(numbers' → logprob: -9.131616592407227
    7. '(lst' → logprob: -9.506616592407227
    8. ' (' → logprob: -11.256616592407227
    9. '(N' → logprob: -12.006616592407227
    10. '(' → logprob: -12.131616592407227

Token 502: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0056093730963766575
    2. '):
' → logprob: -5.255609512329102
    3. '(nums' → logprob: -8.630609512329102
    4. ' ):' → logprob: -9.005609512329102
    5. ')' → logprob: -10.255609512329102
    6. ':' → logprob: -11.005609512329102
    7. '(lst' → logprob: -11.380609512329102
    8. '):
' → logprob: -12.130609512329102
    9. '   ' → logprob: -12.880609512329102
    10. '(' → logprob: -14.130609512329102

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004551023303065449
    2. ' return' → logprob: -7.875454902648926
    3. 's' → logprob: -10.500454902648926
    4. ' reduce' → logprob: -11.750454902648926
    5. 'return' → logprob: -11.875454902648926
    6. ' def' → logprob: -12.125454902648926
    7. ':' → logprob: -12.500454902648926
    8. ' ' → logprob: -12.500454902648926
    9. 'def' → logprob: -12.750454902648926
    10. ' s' → logprob: -13.125454902648926

Token 504: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11299353837966919
    2. 's' → logprob: -3.7379934787750244
    3. ' reduce' → logprob: -4.1129937171936035
    4. 'return' (adapté à ' return') → logprob: -4.4879937171936035
    5. 'def' → logprob: -4.6129937171936035
    6. 'from' → logprob: -4.7379937171936035
    7. ' return' → logprob: -4.8629937171936035
    8. 'reduce' → logprob: -4.8629937171936035
    9. 'rv' → logprob: -5.1129937171936035
    10. ' rv' → logprob: -5.1129937171936035

Token 505: ' squ' (ID: 14685)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1276068091392517
    2. 'reduce' → logprob: -2.2526068687438965
    3. 'og' → logprob: -4.7526068687438965
    4. ' squ' → logprob: -6.6276068687438965
    5. '0' → logprob: -6.6276068687438965
    6. 'abs' → logprob: -6.7526068687438965
    7. ' reduce' → logprob: -7.6276068687438965
    8. '1' → logprob: -8.127606391906738
    9. 'sq' → logprob: -8.252606391906738
    10. 'd' → logprob: -8.752606391906738

Token 506: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.000639169302303344
    2. 'ush' → logprob: -8.375638961791992
    3. '(' → logprob: -9.125638961791992
    4. '[' → logprob: -9.750638961791992
    5. 'esh' → logprob: -10.000638961791992
    6. '(lambda' → logprob: -10.000638961791992
    7. 'sh' → logprob: -10.250638961791992
    8. '(
' → logprob: -11.125638961791992
    9. '_' → logprob: -11.625638961791992
    10. '((' → logprob: -11.750638961791992

Token 507: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023262133821845055
    2. '(lambda' → logprob: -3.7732620239257812
    3. 'og' → logprob: -11.523262023925781
    4. '(
' → logprob: -13.273262023925781
    5. '(it' → logprob: -13.648262023925781
    6. '(os' → logprob: -13.773262023925781
    7. ' og' → logprob: -13.898262023925781
    8. '((' → logprob: -14.398262023925781
    9. 'lambda' → logprob: -14.523262023925781
    10. ' (' → logprob: -15.273262023925781

Token 508: 'og' (ID: 479)
  Prédit: 'og'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'og' → logprob: -2.45848218582978e-06
    2. 'lambda' → logprob: -13.75000286102295
    3. ' og' → logprob: -13.87500286102295
    4. ')' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(' → logprob: -16.500001907348633
    7. '[' → logprob: -16.625001907348633
    8. '(lambda' → logprob: -16.875001907348633
    9. '
' → logprob: -17.125001907348633
    10. 'ог' → logprob: -18.625001907348633

Token 509: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.570319702499546e-05
    2. 'g' → logprob: -10.625025749206543
    3. ' gcd' → logprob: -14.500025749206543
    4. 'd' → logprob: -14.750025749206543
    5. '_cd' → logprob: -15.750025749206543
    6. 'c' → logprob: -16.500024795532227
    7. 'cdf' → logprob: -16.875024795532227
    8. '(g' → logprob: -17.750024795532227
    9. '[g' → logprob: -17.750024795532227
    10. '   ' → logprob: -18.250024795532227

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000317231344524771
    2. ',num' → logprob: -8.375317573547363
    3. '(nums' → logprob: -9.625317573547363
    4. ' ,' → logprob: -11.125317573547363
    5. '(' → logprob: -12.875317573547363
    6. 'nums' → logprob: -14.125317573547363
    7. ',int' → logprob: -14.250317573547363
    8. ')' → logprob: -14.500317573547363
    9. ',n' → logprob: -15.375317573547363
    10. 'import' → logprob: -15.750317573547363

Token 511: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.2015170305967331
    2. ' nums' → logprob: -1.7015169858932495
    3. '(nums' → logprob: -9.201517105102539
    4. '   ' → logprob: -13.826517105102539
    5. '[' → logprob: -14.201517105102539
    6. ')' → logprob: -15.326517105102539
    7. ' ' → logprob: -15.451517105102539
    8. 'num' → logprob: -15.576517105102539
    9. '_nums' → logprob: -15.576517105102539
    10. 'Nums' → logprob: -15.951517105102539

Token 512: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')return' → logprob: -14.375006675720215
    4. '())' → logprob: -14.500006675720215
    5. '))' → logprob: -15.625006675720215
    6. '[' → logprob: -15.875006675720215
    7. ' ' → logprob: -16.2500057220459
    8. '(' → logprob: -16.3750057220459
    9. ')`' → logprob: -16.3750057220459
    10. ')>' → logprob: -16.5000057220459

Token 513: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31240203976631165
    2. '#' → logprob: -1.9374020099639893
    3. '<|end|>' → logprob: -2.1874020099639893
    4. ')' → logprob: -6.187402248382568
    5. 'import' → logprob: -6.437402248382568
    6. ',' → logprob: -6.687402248382568
    7. '<|end|>' → logprob: -6.687402248382568
    8. '
' → logprob: -6.812402248382568
    9. '```' → logprob: -6.937402248382568
    10. ';' → logprob: -7.312402248382568

Token 514: 'cm' (ID: 7871)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.29923877120018005
    2. 'en' → logprob: -2.049238681793213
    3. 'ist' → logprob: -2.799238681793213
    4. 'def' → logprob: -4.674238681793213
    5. ' =' → logprob: -4.674238681793213
    6. 'ast' → logprob: -5.049238681793213
    7. '=[]' → logprob: -5.174238681793213
    8. 'amb' → logprob: -5.299238681793213
    9. 'ine' → logprob: -5.424238681793213
    10. 'et' → logprob: -5.674238681793213

Token 515: 'x' (ID: 87)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6683099865913391
    2. '=lambda' → logprob: -1.4183099269866943
    3. 'def' → logprob: -1.9183099269866943
    4. '=' → logprob: -3.1683099269866943
    5. '(' → logprob: -3.5433099269866943
    6. '_' → logprob: -5.168310165405273
    7. '(a' → logprob: -5.168310165405273
    8. 'import' → logprob: -5.543310165405273
    9. '_list' → logprob: -5.918310165405273
    10. 'from' → logprob: -6.543310165405273

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22753983736038208
    2. '=lambda' → logprob: -1.8525397777557373
    3. '=' → logprob: -3.6025397777557373
    4. 'def' → logprob: -4.102540016174316
    5. '(a' → logprob: -6.852540016174316
    6. 'a' → logprob: -7.602540016174316
    7. 'import' → logprob: -7.852540016174316
    8. '   ' → logprob: -8.477540016174316
    9. '(lambda' → logprob: -9.352540016174316
    10. ' ' → logprob: -9.477540016174316

Token 517: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.005111491307616234
    2. 'def' → logprob: -5.7551116943359375
    3. '(lambda' → logprob: -7.2551116943359375
    4. '=lambda' → logprob: -7.2551116943359375
    5. ' lambda' → logprob: -8.380111694335938
    6. 'l' → logprob: -9.005111694335938
    7. 's' → logprob: -9.130111694335938
    8. '1' → logprob: -10.505111694335938
    9. '   ' → logprob: -11.005111694335938
    10. '_lambda' → logprob: -12.380111694335938

Token 518: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0367744155228138
    2. ' a' → logprob: -3.4117743968963623
    3. 'lambda' → logprob: -6.411774635314941
    4. ' lambda' → logprob: -7.161774635314941
    5. 'x' → logprob: -7.786774635314941
    6. '=lambda' → logprob: -8.536774635314941
    7. ' x' → logprob: -9.911774635314941
    8. 'A' → logprob: -10.411774635314941
    9. '(a' → logprob: -12.286774635314941
    10. '	a' → logprob: -12.786774635314941

Token 519: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.027143754065036774
    2. ',' → logprob: -4.027143955230713
    3. ',a' → logprob: -5.027143955230713
    4. 'b' → logprob: -6.402143955230713
    5. 'a' → logprob: -7.277143955230713
    6. ' b' → logprob: -11.027143478393555
    7. ',x' → logprob: -11.902143478393555
    8. ' a' → logprob: -12.027143478393555
    9. ',y' → logprob: -12.652143478393555
    10. ',l' → logprob: -12.777143478393555

Token 520: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0056143575347959995
    2. ':a' → logprob: -6.005614280700684
    3. ' :' → logprob: -6.255614280700684
    4. ':(' → logprob: -6.880614280700684
    5. ',a' → logprob: -9.380614280700684
    6. ',' → logprob: -9.755614280700684
    7. 'a' → logprob: -11.130614280700684
    8. '=a' → logprob: -11.880614280700684
    9. '=' → logprob: -12.005614280700684
    10. '   ' → logprob: -12.255614280700684

Token 521: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0681331604719162
    2. '(a' → logprob: -3.3181331157684326
    3. ' a' → logprob: -3.5681331157684326
    4. ' (' → logprob: -7.568133354187012
    5. 'abs' → logprob: -7.818133354187012
    6. ' abs' → logprob: -8.568133354187012
    7. '   ' → logprob: -9.568133354187012
    8. '(abs' → logprob: -9.568133354187012
    9. 'int' → logprob: -10.318133354187012
    10. ' ' → logprob: -10.443133354187012

Token 522: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004971408750861883
    2. '(a' → logprob: -5.379971504211426
    3. ' a' → logprob: -8.129971504211426
    4. 'abs' → logprob: -10.129971504211426
    5. '   ' → logprob: -12.004971504211426
    6. ' (' → logprob: -12.879971504211426
    7. '(abs' → logprob: -12.879971504211426
    8. '	a' → logprob: -13.504971504211426
    9. '((' → logprob: -14.004971504211426
    10. '  ' → logprob: -14.254971504211426

Token 523: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0006379772676154971
    2. '//' → logprob: -7.375638008117676
    3. ' *' → logprob: -11.625638008117676
    4. 'b' → logprob: -13.625638008117676
    5. '*a' → logprob: -14.375638008117676
    6. ' //' → logprob: -15.125638008117676
    7. '*l' → logprob: -15.125638008117676
    8. '//*' → logprob: -16.62563705444336
    9. '%b' → logprob: -17.62563705444336
    10. '*x' → logprob: -17.87563705444336

Token 524: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.004010015167295933
    2. ')' → logprob: -5.754010200500488
    3. '//' → logprob: -7.129010200500488
    4. ' )' → logprob: -10.754010200500488
    5. ' //' → logprob: -11.629010200500488
    6. ')#' → logprob: -16.629009246826172
    7. ' //(' → logprob: -17.379009246826172
    8. '){//' → logprob: -17.504009246826172
    9. '}//' → logprob: -17.504009246826172
    10. ')%' → logprob: -17.879009246826172

Token 525: 'og' (ID: 479)
  Prédit: 'og'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.4306345283985138
    2. 'full' → logprob: -1.0556344985961914
    3. ' full' → logprob: -7.430634498596191
    4. ' og' → logprob: -8.180634498596191
    5. '__' → logprob: -8.305634498596191
    6. '(' → logprob: -8.305634498596191
    7. 'g' → logprob: -8.930634498596191
    8. 'os' → logprob: -9.430634498596191
    9. 'ug' → logprob: -9.555634498596191
    10. '_full' → logprob: -9.805634498596191

Token 526: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0041355108842253685
    2. 'g' → logprob: -5.504135608673096
    3. '_g' → logprob: -9.879135131835938
    4. ' gcd' → logprob: -12.754135131835938
    5. '(g' → logprob: -13.879135131835938
    6. 'cdf' → logprob: -14.254135131835938
    7. '.g' → logprob: -15.254135131835938
    8. 'c' → logprob: -15.629135131835938
    9. 'f' → logprob: -15.754135131835938
    10. '_cd' → logprob: -15.754135131835938

Token 527: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -14.375000953674316
    3. '(' → logprob: -16.75
    4. ' (' → logprob: -17.0
    5. 'def' → logprob: -18.25
    6. ',a' → logprob: -18.5
    7. 'import' → logprob: -19.375
    8. '((' → logprob: -19.625
    9. '(
' → logprob: -19.625
    10. ',' → logprob: -19.875

Token 528: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.616032600402832
    2. ',b' → logprob: -0.866032600402832
    3. ',' → logprob: -3.241032600402832
    4. ' b' → logprob: -8.991032600402832
    5. ' ,' → logprob: -10.366032600402832
    6. '(b' → logprob: -11.616032600402832
    7. '   ' → logprob: -12.866032600402832
    8. '	b' → logprob: -12.866032600402832
    9. ' ' → logprob: -13.116032600402832
    10. '%b' → logprob: -13.741032600402832

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002270198310725391
    2. ' )' → logprob: -9.125226974487305
    3. '<|end|>' → logprob: -10.125226974487305
    4. ')a' → logprob: -10.250226974487305
    5. 'a' → logprob: -11.125226974487305
    6. '),' → logprob: -12.000226974487305
    7. ',' → logprob: -12.250226974487305
    8. '(a' → logprob: -12.250226974487305
    9. ' ' → logprob: -12.750226974487305
    10. ')
' → logprob: -13.750226974487305

Token 530: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016396207734942436
    2. 'from' → logprob: -4.7663960456848145
    3. '<|end|>' → logprob: -5.6413960456848145
    4. '#' → logprob: -6.3913960456848145
    5. 'l' → logprob: -7.0163960456848145
    6. 'import' → logprob: -8.516396522521973
    7. 'g' → logprob: -8.641396522521973
    8. 'next' → logprob: -8.766396522521973
    9. ';' → logprob: -8.891396522521973
    10. '<|end|>' → logprob: -9.016396522521973

Token 531: ' all' (ID: 722)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -1.3950673341751099
    2. 'full' → logprob: -1.3950673341751099
    3. 'l' → logprob: -1.5200673341751099
    4. ' l' → logprob: -2.2700672149658203
    5. 'factor' → logprob: -3.6450672149658203
    6. ' fact' → logprob: -5.02006721496582
    7. 'fact' → logprob: -5.14506721496582
    8. ' main' → logprob: -5.14506721496582
    9. ' factor' → logprob: -5.27006721496582
    10. 'main' → logprob: -5.27006721496582

Token 532: '_l' (ID: 1478)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.6007769107818604
    2. '_div' → logprob: -0.8507769107818604
    3. '_l' → logprob: -5.225776672363281
    4. '_g' → logprob: -5.600776672363281
    5. '(lst' → logprob: -5.850776672363281
    6. '_com' → logprob: -6.100776672363281
    7. 'f' → logprob: -6.475776672363281
    8. 'div' → logprob: -6.600776672363281
    9. '_pairs' → logprob: -6.975776672363281
    10. '_factor' → logprob: -7.350776672363281

Token 533: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.6962902545928955
    2. 'ambda' → logprob: -0.9462902545928955
    3. 'amb' → logprob: -3.3212902545928955
    4. 'en' → logprob: -3.9462902545928955
    5. 'ist' → logprob: -3.9462902545928955
    6. 'l' → logprob: -4.446290016174316
    7. 'ines' → logprob: -5.071290016174316
    8. 'cms' → logprob: -5.821290016174316
    9. '=lambda' → logprob: -6.446290016174316
    10. 'range' → logprob: -6.446290016174316

Token 534: '(vals' (ID: 167053)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.0212377309799194
    2. '(lst' → logprob: -1.0212377309799194
    3. '(a' → logprob: -1.5212377309799194
    4. '(numbers' → logprob: -3.646237850189209
    5. '(arr' → logprob: -3.896237850189209
    6. '(l' → logprob: -5.521237850189209
    7. '(x' → logprob: -5.646237850189209
    8. 'x' → logprob: -6.146237850189209
    9. '(list' → logprob: -6.521237850189209
    10. '(*' → logprob: -6.771237850189209

Token 535: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11963943392038345
    2. '(vals' → logprob: -2.6196393966674805
    3. '):
' → logprob: -3.6196393966674805
    4. '(lst' → logprob: -4.4946393966674805
    5. '):
' → logprob: -7.2446393966674805
    6. ' ):' → logprob: -7.4946393966674805
    7. '(values' → logprob: -9.11963939666748
    8. '(nums' → logprob: -9.11963939666748
    9. '   ' → logprob: -9.24463939666748
    10. ')' → logprob: -9.36963939666748

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052690957672894
    2. ' return' → logprob: -5.5052690505981445
    3. ' reduce' → logprob: -7.6302690505981445
    4. 'return' → logprob: -8.255269050598145
    5. ' def' → logprob: -9.005269050598145
    6. 'def' → logprob: -9.005269050598145
    7. 'reduce' → logprob: -9.505269050598145
    8. 's' → logprob: -9.630269050598145
    9. 'from' → logprob: -11.005269050598145
    10. ' from' → logprob: -11.255269050598145

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07150860875844955
    2. '   ' → logprob: -3.4465086460113525
    3. 'reduce' → logprob: -3.6965086460113525
    4. ' return' → logprob: -4.946508407592773
    5. 's' → logprob: -5.446508407592773
    6. 'from' → logprob: -7.821508407592773
    7. ' reduce' → logprob: -7.821508407592773
    8. ' ' → logprob: -9.821508407592773
    9. 'def' → logprob: -10.446508407592773
    10. 're' → logprob: -11.071508407592773

Token 538: ' squ' (ID: 14685)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00988180935382843
    2. 'reduce' → logprob: -4.759881973266602
    3. ' squ' → logprob: -6.759881973266602
    4. ' reduce' → logprob: -9.884881973266602
    5. '1' → logprob: -10.759881973266602
    6. 'redu' → logprob: -11.634881973266602
    7. 'sq' → logprob: -11.634881973266602
    8. '(s' → logprob: -12.509881973266602
    9. '   ' → logprob: -12.634881973266602
    10. 'spl' → logprob: -13.259881973266602

Token 539: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.0013296448159962893
    2. 'sh' → logprob: -6.62632942199707
    3. 'ash' → logprob: -13.75132942199707
    4. 'l' → logprob: -14.75132942199707
    5. 'r' → logprob: -15.25132942199707
    6. 'ush' → logprob: -15.37632942199707
    7. '[' → logprob: -15.37632942199707
    8. '_' → logprob: -15.50132942199707
    9. ' ish' → logprob: -15.50132942199707
    10. 'h' → logprob: -15.62632942199707

Token 540: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00020628207130357623
    2. '(lambda' → logprob: -8.500205993652344
    3. 'l' → logprob: -13.375205993652344
    4. '(' → logprob: -13.625205993652344
    5. ' (' → logprob: -16.750205993652344
    6. '	l' → logprob: -17.375205993652344
    7. '(
' → logprob: -18.000205993652344
    8. 'lambda' → logprob: -18.125205993652344
    9. '((' → logprob: -19.375205993652344
    10. '(L' → logprob: -20.000205993652344

Token 541: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.01116088591516018
    2. 'cx' → logprob: -4.511160850524902
    3. 'mx' → logprob: -9.261160850524902
    4. 'am' → logprob: -12.761160850524902
    5. 'cmb' → logprob: -13.136160850524902
    6. 'c' → logprob: -13.386160850524902
    7. 'ist' → logprob: -13.511160850524902
    8. 'cb' → logprob: -13.511160850524902
    9. 'cms' → logprob: -13.636160850524902
    10. 'mb' → logprob: -13.636160850524902

Token 542: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015812745550647378
    2. 'lambda' → logprob: -9.375158309936523
    3. '(lambda' → logprob: -10.375158309936523
    4. 'l' → logprob: -10.500158309936523
    5. '=lambda' → logprob: -11.625158309936523
    6. ')' → logprob: -12.625158309936523
    7. '   ' → logprob: -14.875158309936523
    8. '```' → logprob: -15.000158309936523
    9. 's' → logprob: -15.250158309936523
    10. 'm' → logprob: -15.375158309936523

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002624086628202349
    2. '(vals' → logprob: -8.375262260437012
    3. ',val' → logprob: -10.625262260437012
    4. 'vals' → logprob: -12.625262260437012
    5. ' ,' → logprob: -12.625262260437012
    6. '(' → logprob: -14.500262260437012
    7. 'Vals' → logprob: -16.625263214111328
    8. ' vals' → logprob: -16.750263214111328
    9. ')' → logprob: -16.875263214111328
    10. '   ' → logprob: -17.125263214111328

Token 544: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.03809920698404312
    2. ' vals' → logprob: -3.2880992889404297
    3. '(vals' → logprob: -9.78809928894043
    4. 'val' → logprob: -13.91309928894043
    5. '_vals' → logprob: -15.66309928894043
    6. 'Vals' → logprob: -15.78809928894043
    7. '[' → logprob: -16.41309928894043
    8. ')' → logprob: -16.78809928894043
    9. '   ' → logprob: -17.16309928894043
    10. 'map' → logprob: -17.41309928894043

Token 545: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. '(vals' → logprob: -11.500019073486328
    3. '())' → logprob: -12.375019073486328
    4. '(' → logprob: -13.625019073486328
    5. 'def' → logprob: -14.250019073486328
    6. '))' → logprob: -14.625019073486328
    7. '(values' → logprob: -14.625019073486328
    8. ')
' → logprob: -14.875019073486328
    9. '[' → logprob: -14.875019073486328
    10. ' )' → logprob: -15.250019073486328

Token 546: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.433829159708694e-05
    2. ' ' → logprob: -10.00007438659668
    3. ')' → logprob: -10.62507438659668
    4. 'start' → logprob: -12.87507438659668
    5. 'initial' → logprob: -14.87507438659668
    6. 'lambda' → logprob: -15.00007438659668
    7. 'None' → logprob: -15.37507438659668
    8. '   ' → logprob: -15.50007438659668
    9. '[' → logprob: -15.87507438659668
    10. '  ' → logprob: -15.87507438659668

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007997421780601144
    2. 'start' → logprob: -7.500799655914307
    3. 'vals' → logprob: -9.000800132751465
    4. '[' → logprob: -9.750800132751465
    5. ')' → logprob: -10.500800132751465
    6. 'initial' → logprob: -11.250800132751465
    7. ' ' → logprob: -12.375800132751465
    8. 'val' → logprob: -12.500800132751465
    9. 'init' → logprob: -13.000800132751465
    10. 'lambda' → logprob: -13.250800132751465

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.500000953674316
    4. '))' → logprob: -15.750000953674316
    5. ')
' → logprob: -17.750001907348633
    6. ')`' → logprob: -17.750001907348633
    7. 'def' → logprob: -18.500001907348633
    8. '())' → logprob: -18.500001907348633
    9. '_)' → logprob: -19.000001907348633
    10. ')}' → logprob: -19.125001907348633

Token 549: 'H' (ID: 39)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09659875184297562
    2. '#' → logprob: -3.0965988636016846
    3. 'class' → logprob: -4.2215986251831055
    4. 'import' → logprob: -4.7215986251831055
    5. 'from' → logprob: -4.8465986251831055
    6. 'if' → logprob: -5.8465986251831055
    7. '_' → logprob: -6.3465986251831055
    8. ')' → logprob: -6.5965986251831055
    9. 'print' → logprob: -7.2215986251831055
    10. '<|end|>' → logprob: -7.2215986251831055

Token 550: 'YP' (ID: 19266)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8948835730552673
    2. ' =' → logprob: -1.019883632659912
    3. 'H' → logprob: -2.644883632659912
    4. 'E' → logprob: -3.394883632659912
    5. 'EL' → logprob: -3.894883632659912
    6. 'e' → logprob: -4.019883632659912
    7. 'I' → logprob: -4.769883632659912
    8. 'int' → logprob: -4.894883632659912
    9. '=int' → logprob: -5.144883632659912
    10. '#' → logprob: -5.144883632659912

Token 551: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.049209460616111755
    2. 'E' → logprob: -4.4242095947265625
    3. 'OTH' → logprob: -4.4242095947265625
    4. 'ERT' → logprob: -5.4242095947265625
    5. 'H' → logprob: -5.5492095947265625
    6. 'OT' → logprob: -5.7992095947265625
    7. 'ERC' → logprob: -5.9242095947265625
    8. '=' → logprob: -6.0492095947265625
    9. ' =' → logprob: -7.0492095947265625
    10. 'PER' → logprob: -7.1742095947265625

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8185322880744934
    2. '=' → logprob: -1.6935322284698486
    3. 'PARAM' → logprob: -1.8185322284698486
    4. '_' → logprob: -3.4435322284698486
    5. '={}' → logprob: -4.318532466888428
    6. 'S' → logprob: -4.443532466888428
    7. '_PARAMS' → logprob: -4.693532466888428
    8. 'param' → logprob: -5.193532466888428
    9. 'OPT' → logprob: -5.193532466888428
    10. 'params' → logprob: -5.318532466888428

Token 553: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3771511912345886
    2. '100' → logprob: -1.6271512508392334
    3. ' ' → logprob: -3.3771512508392334
    4. '2' → logprob: -4.002151012420654
    5. 'int' → logprob: -4.752151012420654
    6. '1' → logprob: -4.752151012420654
    7. '3' → logprob: -5.502151012420654
    8. '20' → logprob: -5.752151012420654
    9. '[' → logprob: -5.877151012420654
    10. '200' → logprob: -6.002151012420654

Token 554: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24602684378623962
    2. '100' → logprob: -2.4960267543792725
    3. 'int' → logprob: -2.8710267543792725
    4. '2' → logprob: -3.8710267543792725
    5. '1' → logprob: -4.996026992797852
    6. '3' → logprob: -5.246026992797852
    7. '999' → logprob: -5.746026992797852
    8. '4' → logprob: -5.871026992797852
    9. '200' → logprob: -5.871026992797852
    10. '(' → logprob: -5.871026992797852

Token 555: '**' (ID: 410)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1066092252731323
    2. ' =' → logprob: -1.4816092252731323
    3. '_' → logprob: -1.6066092252731323
    4. '=' → logprob: -2.356609344482422
    5. ':' → logprob: -3.106609344482422
    6. ',' → logprob: -3.356609344482422
    7. '#' → logprob: -4.231609344482422
    8. '.' → logprob: -4.731609344482422
    9. 'import' → logprob: -4.731609344482422
    10. '[' → logprob: -5.231609344482422

Token 556: '18' (ID: 1157)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2555686831474304
    2. '6' → logprob: -2.005568742752075
    3. '9' → logprob: -2.505568742752075
    4. '8' → logprob: -5.380568504333496
    5. '18' → logprob: -6.005568504333496
    6. '12' → logprob: -6.880568504333496
    7. '10' → logprob: -7.880568504333496
    8. '5' → logprob: -8.255568504333496
    9. '15' → logprob: -9.130568504333496
    10. '4' → logprob: -9.505568504333496

Token 557: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14346471428871155
    2. '<|end|>' → logprob: -2.7684648036956787
    3. '#' → logprob: -3.0184648036956787
    4. '
' → logprob: -4.8934645652771
    5. 'class' → logprob: -5.1434645652771
    6. '<|end|>' → logprob: -6.6434645652771
    7. '_' → logprob: -6.7684645652771
    8. 'for' → logprob: -7.5184645652771
    9. 'newline' → logprob: -7.6434645652771
    10. 'import' → logprob: -7.8934645652771

Token 558: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049971677362918854
    2. '#' → logprob: -3.549971580505371
    3. '<|end|>' → logprob: -5.174971580505371
    4. '```' → logprob: -5.674971580505371
    5. 'class' → logprob: -5.924971580505371
    6. 'import' → logprob: -6.424971580505371
    7. 'from' → logprob: -6.424971580505371
    8. '...' → logprob: -6.799971580505371
    9. ')' → logprob: -7.549971580505371
    10. '_' → logprob: -8.049971580505371

Token 559: 'NUM' (ID: 30776)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143692195415497
    2. ' =' → logprob: -1.7014368772506714
    3. ',' → logprob: -10.826436996459961
    4. '=int' → logprob: -13.826436996459961
    5. '_=' → logprob: -14.076436996459961
    6. '_' → logprob: -14.701436996459961
    7. '=
' → logprob: -14.826436996459961
    8. '=

' → logprob: -15.076436996459961
    9. ' ' → logprob: -15.451436996459961
    10. '.' → logprob: -15.826436996459961

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01604093797504902
    2. ' =' → logprob: -4.141040802001953
    3. '1' → logprob: -13.641040802001953
    4. ',' → logprob: -13.641040802001953
    5. '10' → logprob: -13.891040802001953
    6. '7' → logprob: -13.891040802001953
    7. '=

' → logprob: -13.891040802001953
    8. '=
' → logprob: -14.766040802001953
    9. '_=' → logprob: -15.516040802001953
    10. '0' → logprob: -15.891040802001953

Token 561: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2817670404911041
    2. '998' → logprob: -1.7817670106887817
    3. '100' → logprob: -2.6567671298980713
    4. '1' → logprob: -5.781766891479492
    5. '(' → logprob: -6.406766891479492
    6. 'int' → logprob: -7.281766891479492
    7. '2' → logprob: -7.781766891479492
    8. '999' → logprob: -8.156766891479492
    9. '123' → logprob: -8.531766891479492
    10. ' ' → logprob: -9.281766891479492

Token 562: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5438460111618042
    2. '998' → logprob: -1.1688460111618042
    3. '100' → logprob: -2.2938461303710938
    4. '(' → logprob: -5.793846130371094
    5. 'int' → logprob: -6.418846130371094
    6. '1' → logprob: -6.418846130371094
    7. '999' → logprob: -7.668846130371094
    8. '2' → logprob: -8.793846130371094
    9. '123' → logprob: -8.918846130371094
    10. '987' → logprob: -9.168846130371094

Token 563: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007388437166810036
    2. '**' → logprob: -5.132388591766357
    3. '09' → logprob: -7.257388591766357
    4. '+' → logprob: -7.632388591766357
    5. '7' → logprob: -9.0073881149292
    6. '6' → logprob: -9.8823881149292
    7. '```' → logprob: -10.2573881149292
    8. '_' → logprob: -10.3823881149292
    9. '000' → logprob: -11.6323881149292
    10. '07' → logprob: -12.6323881149292

Token 564: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4121114822482923e-06
    2. '+' → logprob: -13.625003814697266
    3. '10' → logprob: -14.500003814697266
    4. '09' → logprob: -14.625003814697266
    5. '18' → logprob: -14.875003814697266
    6. '15' → logprob: -15.625003814697266
    7. '8' → logprob: -15.750003814697266
    8. '7' → logprob: -15.875003814697266
    9. '12' → logprob: -15.875003814697266
    10. '19' → logprob: -16.625003814697266

Token 565: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002205828350270167
    2. '7' → logprob: -8.62522029876709
    3. ' +' → logprob: -10.12522029876709
    4. '+
' → logprob: -14.37522029876709
    5. 'plus' → logprob: -15.37522029876709
    6. '```' → logprob: -16.125221252441406
    7. '＋' → logprob: -16.625221252441406
    8. '\' → logprob: -18.000221252441406
    9. ' plus' → logprob: -18.250221252441406
    10. '
' → logprob: -18.375221252441406

Token 566: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.7432603272027336e-06
    2. '+' → logprob: -13.500001907348633
    3. '9' → logprob: -15.125001907348633
    4. '07' → logprob: -19.250001907348633
    5. '```' → logprob: -20.000001907348633
    6. '87' → logprob: -20.500001907348633
    7. '19' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '17' → logprob: -21.375001907348633
    10. '

' → logprob: -21.375001907348633

Token 567: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7009246349334717
    2. '<|end|>' → logprob: -1.0759246349334717
    3. '
' → logprob: -2.4509246349334717
    4. '#' → logprob: -2.9509246349334717
    5. ',' → logprob: -5.075924873352051
    6. '<|end|>' → logprob: -5.450924873352051
    7. ':' → logprob: -6.200924873352051
    8. '.' → logprob: -6.450924873352051
    9. ';' → logprob: -6.575924873352051
    10. 'import' → logprob: -6.575924873352051

Token 568: 'mp' (ID: 2211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028753703460097313
    2. '#' → logprob: -4.028753757476807
    3. 'class' → logprob: -5.028753757476807
    4. '<|end|>' → logprob: -6.528753757476807
    5. 'import' → logprob: -6.903753757476807
    6. 'from' → logprob: -7.653753757476807
    7. '<|end|>' → logprob: -8.278753280639648
    8. 'print' → logprob: -9.153753280639648
    9. '.' → logprob: -9.528753280639648
    10. '```' → logprob: -10.278753280639648

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10994073748588562
    2. ' =' → logprob: -2.609940767288208
    3. '={}' → logprob: -4.359940528869629
    4. 'a' → logprob: -5.359940528869629
    5. '={' → logprob: -5.984940528869629
    6. '_=' → logprob: -6.234940528869629
    7. '={}
' → logprob: -6.234940528869629
    8. 'o' → logprob: -6.859940528869629
    9. 'd' → logprob: -7.359940528869629
    10. 'r' → logprob: -7.484940528869629

Token 570: ' lambda' (ID: 27871)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003546502848621458
    2. 'dict' → logprob: -8.000354766845703
    3. '{' → logprob: -11.625354766845703
    4. 'default' → logprob: -12.000354766845703
    5. 'C' → logprob: -13.625354766845703
    6. '[]' → logprob: -13.750354766845703
    7. 'set' → logprob: -14.625354766845703
    8. '{}
' → logprob: -14.875354766845703
    9. 'lambda' → logprob: -15.125354766845703
    10. ' {}' → logprob: -15.875354766845703

Token 571: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1786545217037201
    2. ' x' → logprob: -2.428654432296753
    3. ':' → logprob: -3.803654432296753
    4. 'lambda' → logprob: -3.928654432296753
    5. 's' → logprob: -4.928654670715332
    6. 'a' → logprob: -4.928654670715332
    7. 'd' → logprob: -5.428654670715332
    8. 'f' → logprob: -5.803654670715332
    9. ' lambda' → logprob: -6.303654670715332
    10. '_:' → logprob: -6.303654670715332

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6657336354255676
    2. ':' → logprob: -0.7907336354255676
    3. ' :' → logprob: -4.540733814239502
    4. ',a' → logprob: -4.915733814239502
    5. ':a' → logprob: -5.540733814239502
    6. ',_' → logprob: -6.540733814239502
    7. ' ,' → logprob: -6.790733814239502
    8. 'a' → logprob: -7.040733814239502
    9. ',n' → logprob: -7.165733814239502
    10. ':x' → logprob: -7.290733814239502

Token 573: ' n' (ID: 297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7120339870452881
    2. 'tuple' → logprob: -1.462033987045288
    3. '(lambda' → logprob: -1.962033987045288
    4. '(int' → logprob: -3.087033987045288
    5. ' lambda' → logprob: -3.212033987045288
    6. ' tuple' → logprob: -4.587034225463867
    7. 'a' → logprob: -4.587034225463867
    8. ' (' → logprob: -4.587034225463867
    9. 'int' → logprob: -4.837034225463867
    10. '(a' → logprob: -5.462034225463867

Token 574: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07811646163463593
    2. '=' → logprob: -3.2031164169311523
    3. '=[' → logprob: -3.9531164169311523
    4. ':[' → logprob: -5.203116416931152
    5. ',' → logprob: -5.328116416931152
    6. ',a' → logprob: -6.703116416931152
    7. ':(' → logprob: -6.703116416931152
    8. '=(' → logprob: -7.328116416931152
    9. 'a' → logprob: -7.578116416931152
    10. ' :' → logprob: -7.953116416931152

Token 575: ' m' (ID: 284)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5147919654846191
    2. '[' → logprob: -1.1397919654846191
    3. '(lambda' → logprob: -4.139791965484619
    4. 'lambda' → logprob: -4.639791965484619
    5. 'f' → logprob: -4.764791965484619
    6. '(' → logprob: -4.764791965484619
    7. 'x' → logprob: -5.264791965484619
    8. 'a' → logprob: -5.389791965484619
    9. '([' → logprob: -5.889791965484619
    10. 'p' → logprob: -6.014791965484619

Token 576: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006811053026467562
    2. ',' → logprob: -5.756811141967773
    3. 'a' → logprob: -6.756811141967773
    4. ':[' → logprob: -7.006811141967773
    5. ' :' → logprob: -7.756811141967773
    6. '=' → logprob: -7.881811141967773
    7. ':(' → logprob: -8.381811141967773
    8. '=[' → logprob: -8.631811141967773
    9. ':[[' → logprob: -8.881811141967773
    10. ',a' → logprob: -9.506811141967773

Token 577: 'MOD' (ID: 52135)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4018826186656952
    2. 'MOD' → logprob: -2.0268826484680176
    3. 'a' → logprob: -3.1518826484680176
    4. 'int' → logprob: -3.4018826484680176
    5. '[' → logprob: -3.7768826484680176
    6. 'n' → logprob: -4.401882648468018
    7. '(lambda' → logprob: -4.526882648468018
    8. 'None' → logprob: -4.901882648468018
    9. '1' → logprob: -5.026882648468018
    10. '10' → logprob: -5.026882648468018

Token 578: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.0003190193965565413
    2. 'num' → logprob: -8.750319480895996
    3. '=' → logprob: -9.625319480895996
    4. ':' → logprob: -10.500319480895996
    5. 'N' → logprob: -10.750319480895996
    6. '=a' → logprob: -11.000319480895996
    7. 'a' → logprob: -11.250319480895996
    8. '_NUM' → logprob: -11.750319480895996
    9. ':a' → logprob: -13.500319480895996
    10. 'NUMBER' → logprob: -14.125319480895996

Token 579: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016002024058252573
    2. ' :' → logprob: -6.62660026550293
    3. ':(' → logprob: -8.75160026550293
    4. ',' → logprob: -9.37660026550293
    5. ':a' → logprob: -10.87660026550293
    6. 'a' → logprob: -12.25160026550293
    7. ':[' → logprob: -13.12660026550293
    8. ',a' → logprob: -13.62660026550293
    9. '_:' → logprob: -14.25160026550293
    10. '   ' → logprob: -14.37660026550293

Token 580: ' pow' (ID: 9779)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5832077860832214
    2. 'a' → logprob: -1.9582078456878662
    3. 'pow' → logprob: -2.208207845687866
    4. '((' → logprob: -2.458207845687866
    5. ' (' → logprob: -2.708207845687866
    6. '(pow' → logprob: -3.708207845687866
    7. ' pow' → logprob: -5.458207607269287
    8. '(' → logprob: -5.708207607269287
    9. ' a' → logprob: -5.833207607269287
    10. ' ((' → logprob: -5.958207607269287

Token 581: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000558512459974736
    2. '(' → logprob: -7.500558376312256
    3. 'a' → logprob: -12.250558853149414
    4. '(
' → logprob: -14.125558853149414
    5. '((' → logprob: -18.625558853149414
    6. '(abs' → logprob: -19.875558853149414
    7. '```' → logprob: -20.000558853149414
    8. '$a' → logprob: -20.250558853149414
    9. '(int' → logprob: -20.250558853149414
    10. '10' → logprob: -20.375558853149414

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2523517906665802
    2. ',n' → logprob: -1.5023517608642578
    3. '(n' → logprob: -8.752351760864258
    4. ' ,' → logprob: -9.127351760864258
    5. '%' → logprob: -9.627351760864258
    6. '%n' → logprob: -9.752351760864258
    7. '(' → logprob: -10.877351760864258
    8. 'n' → logprob: -12.002351760864258
    9. ' %' → logprob: -12.377351760864258
    10. ',
' → logprob: -14.127351760864258

Token 583: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.45848218582978e-06
    2. ' n' → logprob: -13.00000286102295
    3. '	n' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '(n' → logprob: -18.625001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '
' → logprob: -19.625001907348633
    8. 'int' → logprob: -19.750001907348633
    9. '```' → logprob: -19.750001907348633
    10. '2' → logprob: -20.000001907348633

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12458986788988113
    2. '%' → logprob: -2.3745899200439453
    3. '%m' → logprob: -4.624589920043945
    4. ',m' → logprob: -4.749589920043945
    5. ' %' → logprob: -5.249589920043945
    6. ' ,' → logprob: -8.124589920043945
    7. '%,' → logprob: -10.874589920043945
    8. ')' → logprob: -11.124589920043945
    9. ',%' → logprob: -11.499589920043945
    10. ',M' → logprob: -11.874589920043945

Token 585: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004306692280806601
    2. ' m' → logprob: -7.750430583953857
    3. 'mod' → logprob: -19.000431060791016
    4. ')' → logprob: -19.625431060791016
    5. 'MOD' → logprob: -20.375431060791016
    6. ' ' → logprob: -20.375431060791016
    7. '	m' → logprob: -20.500431060791016
    8. 'м' → logprob: -21.375431060791016
    9. ')m' → logprob: -21.375431060791016
    10. ' ' → logprob: -21.500431060791016

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. '),' → logprob: -16.250001907348633
    4. ')
' → logprob: -16.625001907348633
    5. '))' → logprob: -16.875001907348633
    6. ')#' → logprob: -17.125001907348633
    7. ')`' → logprob: -17.125001907348633
    8. ');' → logprob: -17.375001907348633
    9. ')

' → logprob: -18.375001907348633
    10. ')}' → logprob: -18.625001907348633

Token 587: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12540309131145477
    2. '<|end|>' → logprob: -2.7504031658172607
    3. '#' → logprob: -3.7504031658172607
    4. '...' → logprob: -5.875402927398682
    5. 'from' → logprob: -6.125402927398682
    6. ')' → logprob: -6.125402927398682
    7. 'mp' → logprob: -6.250402927398682
    8. '_' → logprob: -6.875402927398682
    9. 'pow' → logprob: -6.875402927398682
    10. 'import' → logprob: -6.875402927398682

Token 588: ' inv' (ID: 1827)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4018508493900299
    2. ' mp' → logprob: -1.5268508195877075
    3. ' inv' → logprob: -4.151850700378418
    4. 'mod' → logprob: -4.401850700378418
    5. ' main' → logprob: -4.651850700378418
    6. ' fast' → logprob: -4.651850700378418
    7. ' modular' → logprob: -4.776850700378418
    8. ' pow' → logprob: -4.901850700378418
    9. 'mp' → logprob: -5.151850700378418
    10. ' bin' → logprob: -5.526850700378418

Token 589: 'mod' (ID: 4847)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12443599104881287
    2. '(x' → logprob: -2.2494359016418457
    3. '(' → logprob: -5.124435901641846
    4. 'mp' → logprob: -6.374435901641846
    5. 'mod' → logprob: -6.499435901641846
    6. '(mp' → logprob: -7.249435901641846
    7. '(n' → logprob: -7.499435901641846
    8. '_mp' → logprob: -7.874435901641846
    9. 'a' → logprob: -8.124436378479004
    10. '_mod' → logprob: -8.874436378479004

Token 590: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007410150719806552
    2. '(x' → logprob: -7.250741004943848
    3. '(n' → logprob: -11.125741004943848
    4. '(' → logprob: -11.250741004943848
    5. 'a' → logprob: -13.875741004943848
    6. '(b' → logprob: -14.250741004943848
    7. '(num' → logprob: -14.250741004943848
    8. ' (' → logprob: -14.875741004943848
    9. '(A' → logprob: -15.375741004943848
    10. '(m' → logprob: -15.500741004943848

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017425069585442543
    2. ',m' → logprob: -4.267425060272217
    3. '):' → logprob: -6.892425060272217
    4. ',n' → logprob: -7.017425060272217
    5. ' ,' → logprob: -7.142425060272217
    6. ',x' → logprob: -7.892425060272217
    7. '(x' → logprob: -9.892425537109375
    8. '(m' → logprob: -10.267425537109375
    9. '(n' → logprob: -10.767425537109375
    10. ',k' → logprob: -10.892425537109375

Token 592: ' m' (ID: 284)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02820521406829357
    2. ' MOD' → logprob: -3.653205156326294
    3. 'm' → logprob: -6.653205394744873
    4. '-' → logprob: -8.278204917907715
    5. '   ' → logprob: -9.653204917907715
    6. '-M' → logprob: -9.778204917907715
    7. ' -' → logprob: -9.778204917907715
    8. 'mod' → logprob: -10.153204917907715
    9. '_MOD' → logprob: -10.278204917907715
    10. 'M' → logprob: -10.403204917907715

Token 593: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3925624191761017
    2. '):' → logprob: -1.1425623893737793
    3. '):
' → logprob: -5.392562389373779
    4. '=M' → logprob: -7.142562389373779
    5. '=m' → logprob: -8.267562866210938
    6. '=x' → logprob: -10.767562866210938
    7. '=None' → logprob: -10.892562866210938
    8. ')' → logprob: -11.017562866210938
    9. '):
' → logprob: -11.767562866210938
    10. '):

' → logprob: -12.642562866210938

Token 594: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.061054359131958e-06
    2. ' MOD' → logprob: -11.875007629394531
    3. 'm' → logprob: -14.125007629394531
    4. '_MOD' → logprob: -15.875007629394531
    5. 'mod' → logprob: -16.62500762939453
    6. 'M' → logprob: -17.12500762939453
    7. 'MO' → logprob: -18.12500762939453
    8. 'Mod' → logprob: -18.62500762939453
    9. '.MOD' → logprob: -18.62500762939453
    10. 'MODE' → logprob: -18.75000762939453

Token 595: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.004130641929805279
    2. 'MOD' → logprob: -5.504130840301514
    3. 'num' → logprob: -9.879130363464355
    4. '_NUM' → logprob: -15.004130363464355
    5. 'UM' → logprob: -15.129130363464355
    6. '=' → logprob: -16.254131317138672
    7. '```' → logprob: -17.004131317138672
    8. ')' → logprob: -17.504131317138672
    9. '7' → logprob: -17.629131317138672
    10. '1' → logprob: -18.129131317138672

Token 596: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003217574267182499
    2. '):
' → logprob: -8.125321388244629
    3. ' ):' → logprob: -10.875321388244629
    4. ')' → logprob: -12.125321388244629
    5. '):
' → logprob: -14.000321388244629
    6. '):

' → logprob: -14.750321388244629
    7. '   ' → logprob: -16.875322341918945
    8. '):(' → logprob: -17.750322341918945
    9. ':' → logprob: -18.250322341918945
    10. '=None' → logprob: -18.500322341918945

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8695091009140015
    2. 'return' → logprob: -1.1195091009140015
    3. ' return' → logprob: -1.3695091009140015
    4. '	return' → logprob: -8.869508743286133
    5. 'pow' → logprob: -11.744508743286133
    6. ' ' → logprob: -12.119508743286133
    7. '{return' → logprob: -12.619508743286133
    8. ' pow' → logprob: -12.619508743286133
    9. '  ' → logprob: -12.869508743286133
    10. '   ' → logprob: -12.994508743286133

Token 598: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00702462624758482
    2. '   ' → logprob: -5.007024765014648
    3. ' return' → logprob: -8.132024765014648
    4. 'pow' → logprob: -11.632024765014648
    5. '	return' → logprob: -12.007024765014648
    6. ' ' → logprob: -16.63202476501465
    7. 'mp' → logprob: -17.38202476501465
    8. '    ' → logprob: -17.50702476501465
    9. 'def' → logprob: -17.63202476501465
    10. '  ' → logprob: -17.88202476501465

Token 599: ' mp' (ID: 11543)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02325514331459999
    2. 'mp' → logprob: -3.7732551097869873
    3. ' pow' → logprob: -11.773255348205566
    4. ' mp' → logprob: -13.273255348205566
    5. 'pm' → logprob: -15.398255348205566
    6. '(pow' → logprob: -17.64825439453125
    7. 'mod' → logprob: -18.14825439453125
    8. '	mp' → logprob: -18.39825439453125
    9. 'power' → logprob: -19.02325439453125
    10. 'inv' → logprob: -19.14825439453125

Token 600: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4259644558478612e-05
    2. 'x' → logprob: -11.250014305114746
    3. '(' → logprob: -13.750014305114746
    4. 'def' → logprob: -16.00001335144043
    5. '(pow' → logprob: -17.75001335144043
    6. '(
' → logprob: -18.25001335144043
    7. 'a' → logprob: -19.12501335144043
    8. 'pow' → logprob: -19.50001335144043
    9. '	x' → logprob: -19.87501335144043
    10. ' x' → logprob: -19.87501335144043

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002042840700596571
    2. ',m' → logprob: -6.377042770385742
    3. ',-' → logprob: -8.252042770385742
    4. ',
' → logprob: -10.252042770385742
    5. ' ,' → logprob: -10.752042770385742
    6. ',M' → logprob: -11.752042770385742
    7. '   ' → logprob: -13.252042770385742
    8. '-' → logprob: -13.252042770385742
    9. 'MOD' → logprob: -13.377042770385742
    10. '(' → logprob: -13.377042770385742

Token 602: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.7432603272027336e-06
    2. '-' → logprob: -13.500001907348633
    3. ' m' → logprob: -15.125001907348633
    4. '%m' → logprob: -17.750001907348633
    5. '(m' → logprob: -18.625001907348633
    6. '-m' → logprob: -19.375001907348633
    7. 'mod' → logprob: -19.875001907348633
    8. '	m' → logprob: -20.250001907348633
    9. '{' → logprob: -20.500001907348633
    10. '.m' → logprob: -20.625001907348633

Token 603: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. ' -' → logprob: -14.125000953674316
    3. '−' → logprob: -17.875
    4. '–' → logprob: -18.375
    5. '```' → logprob: -22.5
    6. '()-' → logprob: -22.625
    7. '‑' → logprob: -22.875
    8. '{-' → logprob: -23.0
    9. '2' → logprob: -23.375
    10. ' ' → logprob: -23.375

Token 604: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.000000953674316
    3. '-' → logprob: -15.750000953674316
    4. '
' → logprob: -16.625
    5. ' ' → logprob: -17.0
    6. '۲' → logprob: -17.5
    7. '

' → logprob: -17.6875
    8. '٢' → logprob: -18.25
    9. '   ' → logprob: -18.5
    10. 'two' → logprob: -18.75

Token 605: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018327576981391758
    2. ',' → logprob: -9.00018310546875
    3. ' )' → logprob: -9.75018310546875
    4. ',)' → logprob: -14.00018310546875
    5. ',m' → logprob: -15.12518310546875
    6. ',x' → logprob: -15.87518310546875
    7. '),' → logprob: -16.25018310546875
    8. ')
' → logprob: -16.50018310546875
    9. ' ,' → logprob: -16.87518310546875
    10. '}' → logprob: -17.12518310546875

Token 606: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0206720617134124e-05
    2. ' m' → logprob: -11.50001049041748
    3. ')' → logprob: -17.875009536743164
    4. 'mod' → logprob: -19.500009536743164
    5. ')m' → logprob: -21.500009536743164
    6. 'м' → logprob: -22.875009536743164
    7. 'MOD' → logprob: -23.125009536743164
    8. '	m' → logprob: -23.625009536743164
    9. ' м' → logprob: -24.250009536743164
    10. 'md' → logprob: -25.125009536743164

Token 607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -17.0
    4. '))' → logprob: -17.625
    5. ')#' → logprob: -17.875
    6. '),' → logprob: -18.875
    7. ')

' → logprob: -19.0
    8. ')return' → logprob: -19.0
    9. ')}' → logprob: -19.125
    10. '())' → logprob: -19.375

Token 608: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3308400809764862
    2. '#' → logprob: -1.8308401107788086
    3. '<|end|>' → logprob: -2.3308401107788086
    4. 'print' → logprob: -4.830840110778809
    5. '...' → logprob: -5.330840110778809
    6. '<|end|>' → logprob: -5.955840110778809
    7. '```' → logprob: -6.080840110778809
    8. 'import' → logprob: -6.830840110778809
    9. ')' → logprob: -7.455840110778809
    10. ';' → logprob: -7.705840110778809

Token 609: ' inv' (ID: 1827)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0819580554962158
    2. 'inv' → logprob: -1.0819580554962158
    3. 'mul' → logprob: -3.206958055496216
    4. 'mult' → logprob: -3.456958055496216
    5. 'fact' → logprob: -3.456958055496216
    6. 'safe' → logprob: -4.081957817077637
    7. 'fast' → logprob: -4.206957817077637
    8. 'n' → logprob: -4.206957817077637
    9. 'fix' → logprob: -4.581957817077637
    10. 'comb' → logprob: -4.706957817077637

Token 610: '_table' (ID: 11721)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.41866585687967e-06
    2. '_mod' → logprob: -12.125008583068848
    3. 'def' → logprob: -14.625008583068848
    4. '(x' → logprob: -14.750008583068848
    5. 'm' → logprob: -15.000008583068848
    6. '=' → logprob: -15.000008583068848
    7. 'pow' → logprob: -15.000008583068848
    8. 'import' → logprob: -15.750008583068848
    9. 'mods' → logprob: -15.750008583068848
    10. '(mod' → logprob: -15.875008583068848

Token 611: '(L' (ID: 11075)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003664206713438034
    2. '(N' → logprob: -6.628664016723633
    3. '(size' → logprob: -7.753664016723633
    4. '(sz' → logprob: -7.753664016723633
    5. '(' → logprob: -7.878664016723633
    6. '(x' → logprob: -8.128664016723633
    7. '(max' → logprob: -8.128664016723633
    8. '(m' → logprob: -8.253664016723633
    9. '(limit' → logprob: -9.253664016723633
    10. '(k' → logprob: -9.753664016723633

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021704821847379208
    2. ',L' → logprob: -7.252170562744141
    3. '):' → logprob: -7.377170562744141
    4. '(n' → logprob: -8.25217056274414
    5. ',n' → logprob: -8.50217056274414
    6. '(L' → logprob: -9.50217056274414
    7. ',size' → logprob: -9.62717056274414
    8. ' ,' → logprob: -10.00217056274414
    9. ',l' → logprob: -10.25217056274414
    10. '(' → logprob: -10.50217056274414

Token 613: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4773654043674469
    2. 'n' → logprob: -1.6023653745651245
    3. 'mod' → logprob: -2.477365493774414
    4. 'M' → logprob: -3.477365493774414
    5. 'MOD' → logprob: -3.977365493774414
    6. 'p' → logprob: -4.227365493774414
    7. 'N' → logprob: -4.352365493774414
    8. ' m' → logprob: -5.727365493774414
    9. ' n' → logprob: -5.852365493774414
    10. 'max' → logprob: -6.602365493774414

Token 614: '=' (ID: 28)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43992042541503906
    2. '):' → logprob: -1.064920425415039
    3. '=' → logprob: -4.689920425415039
    4. '):
' → logprob: -6.564920425415039
    5. '=L' → logprob: -8.064920425415039
    6. ',' → logprob: -9.064920425415039
    7. '):

' → logprob: -10.064920425415039
    8. '=None' → logprob: -10.564920425415039
    9. '=M' → logprob: -10.564920425415039
    10. ')' → logprob: -11.189920425415039

Token 615: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.981667537620524e-06
    2. '10' → logprob: -14.125001907348633
    3. ' MOD' → logprob: -14.125001907348633
    4. '100' → logprob: -14.750001907348633
    5. 'MO' → logprob: -17.000001907348633
    6. '_MOD' → logprob: -17.000001907348633
    7. 'MODE' → logprob: -18.625001907348633
    8. '.MOD' → logprob: -18.750001907348633
    9. 'M' → logprob: -19.500001907348633
    10. 'mod' → logprob: -19.625001907348633

Token 616: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -7.52919222577475e-05
    2. 'MOD' → logprob: -9.625075340270996
    3. 'num' → logprob: -11.625075340270996
    4. '_NUM' → logprob: -15.625075340270996
    5. 'UM' → logprob: -17.37507438659668
    6. 'OD' → logprob: -17.87507438659668
    7. 'nums' → logprob: -19.50007438659668
    8. 'MODE' → logprob: -20.12507438659668
    9. '=' → logprob: -20.37507438659668
    10. '_MOD' → logprob: -20.37507438659668

Token 617: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16113418340682983
    2. '):
' → logprob: -1.9111342430114746
    3. '):
' → logprob: -7.036134243011475
    4. ')' → logprob: -10.911133766174316
    5. ' ):' → logprob: -12.286133766174316
    6. ',' → logprob: -12.786133766174316
    7. '):

' → logprob: -13.161133766174316
    8. '=None' → logprob: -13.786133766174316
    9. ' ):
' → logprob: -14.786133766174316
    10. '=' → logprob: -15.411133766174316

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13983534276485443
    2. ' inv' → logprob: -3.8898353576660156
    3. ' t' → logprob: -4.139835357666016
    4. ' ret' → logprob: -4.139835357666016
    5. ' res' → logprob: -4.389835357666016
    6. ' rv' → logprob: -4.514835357666016
    7. ' r' → logprob: -4.889835357666016
    8. 'inv' → logprob: -4.889835357666016
    9. 'ret' → logprob: -5.264835357666016
    10. ' tab' → logprob: -5.389835357666016

Token 619: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.4133485555648804
    2. 'rv' → logprob: -1.5383485555648804
    3. 'n' → logprob: -2.03834867477417
    4. 'ret' → logprob: -2.16334867477417
    5. 'r' → logprob: -2.53834867477417
    6. 'dp' → logprob: -3.53834867477417
    7. 'N' → logprob: -3.91334867477417
    8. 'tab' → logprob: -3.91334867477417
    9. '   ' → logprob: -3.91334867477417
    10. 't' → logprob: -4.16334867477417

Token 620: ' making' (ID: 4137)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7338629364967346
    2. 'rv' → logprob: -1.7338628768920898
    3. 'ret' → logprob: -2.60886287689209
    4. 'tab' → logprob: -3.23386287689209
    5. 'in' → logprob: -3.48386287689209
    6. 'dp' → logprob: -3.98386287689209
    7. 'arr' → logprob: -3.98386287689209
    8. 'r' → logprob: -3.98386287689209
    9. 'tbl' → logprob: -3.98386287689209
    10. 'lst' → logprob: -4.35886287689209

Token 621: ' a' (ID: 261)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7380120754241943
    2. 'L' → logprob: -2.2380120754241943
    3. 'rv' → logprob: -2.4880120754241943
    4. 'ret' → logprob: -2.7380120754241943
    5. 'r' → logprob: -3.3630120754241943
    6. 't' → logprob: -3.4880120754241943
    7. 'in' → logprob: -3.4880120754241943
    8. 'table' → logprob: -3.7380120754241943
    9. 'tbl' → logprob: -3.9880120754241943
    10. 'iv' → logprob: -4.488012313842773

Token 622: ' whole' (ID: 6062)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.5698213577270508
    2. 'lst' → logprob: -1.4448213577270508
    3. 'list' → logprob: -2.694821357727051
    4. 'inv' → logprob: -2.819821357727051
    5. 'def' → logprob: -4.069821357727051
    6. 't' → logprob: -4.194821357727051
    7. 'n' → logprob: -4.944821357727051
    8. 'l' → logprob: -4.944821357727051
    9. ' table' → logprob: -5.694821357727051
    10. 'rev' → logprob: -5.819821357727051

Token 623: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.26779770851135254
    2. 'list' → logprob: -1.7677977085113525
    3. 'inv' → logprob: -3.5177977085113525
    4. ' table' → logprob: -4.267797470092773
    5. ' list' → logprob: -5.017797470092773
    6. 'inverse' → logprob: -5.017797470092773
    7. 'def' → logprob: -5.892797470092773
    8. 'in' → logprob: -7.017797470092773
    9. '_table' → logprob: -7.267797470092773
    10. 'array' → logprob: -7.392797470092773

Token 624: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6838492751121521
    2. '(L' → logprob: -1.6838493347167969
    3. '(n' → logprob: -2.683849334716797
    4. '=[' → logprob: -2.808849334716797
    5. 'inv' → logprob: -3.183849334716797
    6. '(inv' → logprob: -3.433849334716797
    7. 'of' → logprob: -3.683849334716797
    8. '   ' → logprob: -4.058849334716797
    9. '=' → logprob: -4.433849334716797
    10. 'def' → logprob: -4.433849334716797

Token 625: ' a' (ID: 261)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.7901324033737183
    2. 'range' → logprob: -1.1651324033737183
    3. 'm' → logprob: -2.415132522583008
    4. 'one' → logprob: -3.040132522583008
    5. '[' → logprob: -3.915132522583008
    6. 'reverse' → logprob: -4.040132522583008
    7. 'def' → logprob: -4.540132522583008
    8. 'python' → logprob: -4.665132522583008
    9. 'size' → logprob: -4.915132522583008
    10. ' advance' → logprob: -4.915132522583008

Token 626: ' completely' (ID: 9141)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.3946763575077057
    2. 'list' → logprob: -2.269676446914673
    3. 'def' → logprob: -2.769676446914673
    4. 'for' → logprob: -2.769676446914673
    5. '[' → logprob: -3.394676446914673
    6. 'lambda' → logprob: -4.269676208496094
    7. 'j' → logprob: -4.769676208496094
    8. ' for' → logprob: -5.644676208496094
    9. ' single' → logprob: -5.644676208496094
    10. ' list' → logprob: -5.644676208496094

Token 627: ' un' (ID: 537)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.8919981718063354
    2. 'single' → logprob: -2.266998291015625
    3. 'python' → logprob: -2.391998291015625
    4. 'def' → logprob: -2.516998291015625
    5. 'clear' → logprob: -2.766998291015625
    6. 'functional' → logprob: -2.891998291015625
    7. 'Python' → logprob: -3.016998291015625
    8. 'for' → logprob: -3.141998291015625
    9. 'non' → logprob: -3.141998291015625
    10. 'lazy' → logprob: -3.266998291015625

Token 628: 'orth' (ID: 2909)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.043927475810050964
    2. 'def' → logprob: -4.4189276695251465
    3. 'python' → logprob: -4.4189276695251465
    4. 'der' → logprob: -5.9189276695251465
    5. '_py' → logprob: -6.1689276695251465
    6. '-python' → logprob: -6.1689276695251465
    7. 'vector' → logprob: -6.2939276695251465
    8. 'necessary' → logprob: -6.4189276695251465
    9. 'Python' → logprob: -6.6689276695251465
    10. 'optimized' → logprob: -6.7939276695251465

Token 629: 'odox' (ID: 52131)
  Prédit: 'odox'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odox' → logprob: -0.49449223279953003
    2. 'ogonal' → logprob: -0.99449223279953
    3. 'ought' → logprob: -5.619492053985596
    4. 'oped' → logprob: -6.369492053985596
    5. 'ooked' → logprob: -6.369492053985596
    6. '```' → logprob: -6.369492053985596
    7. 'adox' → logprob: -6.494492053985596
    8. 'and' → logprob: -6.619492053985596
    9. 'oded' → logprob: -6.869492053985596
    10. '#' → logprob: -6.994492053985596

Token 630: ' way' (ID: 2006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39303261041641235
    2. 'way' → logprob: -2.1430325508117676
    3. 'fashion' → logprob: -3.5180325508117676
    4. 'and' → logprob: -3.7680325508117676
    5. '#' → logprob: -3.7680325508117676
    6. ' fashion' → logprob: -3.8930325508117676
    7. ' way' → logprob: -4.018032550811768
    8. ' manner' → logprob: -4.018032550811768
    9. 'python' → logprob: -4.143032550811768
    10. 'm' → logprob: -4.393032550811768

Token 631: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1310676634311676
    2. 'r' → logprob: -3.8810677528381348
    3. 't' → logprob: -5.006067752838135
    4. ' ret' → logprob: -5.131067752838135
    5. 'ret' → logprob: -5.256067752838135
    6. 'inv' → logprob: -5.381067752838135
    7. 'n' → logprob: -5.631067752838135
    8. ' =' → logprob: -5.631067752838135
    9. ' rev' → logprob: -5.631067752838135
    10. ' rv' → logprob: -5.756067752838135

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02182362787425518
    2. ',' → logprob: -4.396823406219482
    3. 'r' → logprob: -7.146823406219482
    4. 't' → logprob: -7.521823406219482
    5. ' t' → logprob: -7.521823406219482
    6. ' ret' → logprob: -7.646823406219482
    7. ' rev' → logprob: -7.646823406219482
    8. 'n' → logprob: -7.771823406219482
    9. ' r' → logprob: -8.02182388305664
    10. ' =' → logprob: -8.02182388305664

Token 633: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26059749722480774
    2. 'inv' → logprob: -3.5105974674224854
    3. ' inv' → logprob: -3.6355974674224854
    4. ' ret' → logprob: -3.7605974674224854
    5. 'r' → logprob: -3.8855974674224854
    6. 'ret' → logprob: -4.1355977058410645
    7. ' r' → logprob: -4.3855977058410645
    8. 'n' → logprob: -4.6355977058410645
    9. 't' → logprob: -5.1355977058410645
    10. ' res' → logprob: -5.1355977058410645

Token 634: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050176795572042465
    2. '[d' → logprob: -3.9251768589019775
    3. '[L' → logprob: -4.925176620483398
    4. '[s' → logprob: -5.675176620483398
    5. '[int' → logprob: -5.800176620483398
    6. '[l' → logprob: -5.925176620483398
    7. '[(' → logprob: -6.050176620483398
    8. '[in' → logprob: -6.175176620483398
    9. '[list' → logprob: -6.550176620483398
    10. 'list' → logprob: -6.675176620483398

Token 635: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031743425875902176
    2. 'inv' → logprob: -4.15674352645874
    3. '0' → logprob: -4.28174352645874
    4. '-' → logprob: -7.53174352645874
    5. 'None' → logprob: -7.53174352645874
    6. '(' → logprob: -8.031743049621582
    7. 'int' → logprob: -9.531743049621582
    8. '[' → logprob: -9.906743049621582
    9. '*' → logprob: -9.906743049621582
    10. 'pow' → logprob: -10.281743049621582

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41517093777656555
    2. ']+' → logprob: -1.2901709079742432
    3. ']' → logprob: -2.915170907974243
    4. ']*(' → logprob: -5.165171146392822
    5. ']*' → logprob: -6.665171146392822
    6. ',x' → logprob: -6.665171146392822
    7. ',m' → logprob: -7.040171146392822
    8. ',(' → logprob: -7.165171146392822
    9. ',
' → logprob: -9.415170669555664
    10. ',None' → logprob: -9.665170669555664

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.25002670288086
    4. '  ' → logprob: -15.87502670288086
    5. '0' → logprob: -16.75002670288086
    6. 'inv' → logprob: -16.87502670288086
    7. '    ' → logprob: -17.12502670288086
    8. '     ' → logprob: -17.62502670288086
    9. ']' → logprob: -18.62502670288086
    10. '       ' → logprob: -18.87502670288086

Token 638: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3874244689941406
    2. ']+' → logprob: -1.1374244689941406
    3. ']*(' → logprob: -7.512424468994141
    4. ']+\' → logprob: -13.51242446899414
    5. ' ]' → logprob: -13.63742446899414
    6. '   ' → logprob: -13.76242446899414
    7. ']*' → logprob: -14.01242446899414
    8. '
' → logprob: -14.88742446899414
    9. ']<' → logprob: -15.01242446899414
    10. ',' → logprob: -15.13742446899414

Token 639: ' +' (ID: 659)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.3283150792121887
    2. ']' → logprob: -2.078315019607544
    3. '+[' → logprob: -2.703315019607544
    4. '+' → logprob: -3.078315019607544
    5. ' +' → logprob: -3.328315019607544
    6. '   ' → logprob: -5.828315258026123
    7. '+(' → logprob: -6.328315258026123
    8. ',' → logprob: -8.453314781188965
    9. ')+' → logprob: -8.578314781188965
    10. ']*(' → logprob: -8.828314781188965

Token 640: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5822116732597351
    2. '[L' → logprob: -1.5822117328643799
    3. '[(' → logprob: -2.33221173286438
    4. '[m' → logprob: -2.58221173286438
    5. '[i' → logprob: -4.207211494445801
    6. '[in' → logprob: -4.457211494445801
    7. '[n' → logprob: -4.582211494445801
    8. '[l' → logprob: -4.832211494445801
    9. '[list' → logprob: -5.082211494445801
    10. '[((' → logprob: -6.082211494445801

Token 641: 'inv' (ID: 31086)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14350920915603638
    2. '(m' → logprob: -2.3935091495513916
    3. '(i' → logprob: -4.393509387969971
    4. 'inv' → logprob: -4.893509387969971
    5. 'i' → logprob: -5.268509387969971
    6. '(inv' → logprob: -5.893509387969971
    7. '(lambda' → logprob: -6.018509387969971
    8. '((' → logprob: -6.268509387969971
    9. '(L' → logprob: -6.393509387969971
    10. 'lambda' → logprob: -6.393509387969971

Token 642: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00464206887409091
    2. 'mod' → logprob: -6.254642009735107
    3. 'table' → logprob: -6.254642009735107
    4. '(i' → logprob: -7.629642009735107
    5. '(m' → logprob: -9.629642486572266
    6. 'Table' → logprob: -10.254642486572266
    7. '(' → logprob: -10.629642486572266
    8. '((' → logprob: -10.754642486572266
    9. 'tab' → logprob: -10.754642486572266
    10. 'm' → logprob: -10.754642486572266

Token 643: '(m' (ID: 2145)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0005121642025187612
    2. '[-' → logprob: -8.12551212310791
    3. '[L' → logprob: -8.87551212310791
    4. '[i' → logprob: -10.25051212310791
    5. '(i' → logprob: -10.75051212310791
    6. '((' → logprob: -12.75051212310791
    7. '(' → logprob: -12.75051212310791
    8. ':=' → logprob: -13.25051212310791
    9. '(m' → logprob: -13.37551212310791
    10. 'L' → logprob: -13.37551212310791

Token 644: '%i' (ID: 157265)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.21925276517868042
    2. '[i' → logprob: -1.7192528247833252
    3. '(L' → logprob: -5.469252586364746
    4. '[k' → logprob: -5.469252586364746
    5. '[L' → logprob: -5.469252586364746
    6. '[m' → logprob: -5.844252586364746
    7. 'L' → logprob: -7.594252586364746
    8. '(i' → logprob: -7.594252586364746
    9. ')[' → logprob: -7.844252586364746
    10. '[j' → logprob: -8.094252586364746

Token 645: ',m' (ID: 26648)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.33108729124069214
    2. '[m' → logprob: -2.206087350845337
    3. '-' → logprob: -2.456087350845337
    4. '[i' → logprob: -3.831087350845337
    5. ',' → logprob: -4.206087112426758
    6. ')[' → logprob: -4.331087112426758
    7. ']' → logprob: -4.706087112426758
    8. ')' → logprob: -4.831087112426758
    9. '][' → logprob: -5.706087112426758
    10. '][-' → logprob: -6.081087112426758

Token 646: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17306886613368988
    2. ')*(' → logprob: -2.9230687618255615
    3. ')[' → logprob: -3.0480687618255615
    4. ')*' → logprob: -3.5480687618255615
    5. ')-(' → logprob: -3.9230687618255615
    6. '[i' → logprob: -5.673069000244141
    7. '[-' → logprob: -6.048069000244141
    8. ')-' → logprob: -6.548069000244141
    9. ')+(' → logprob: -7.423069000244141
    10. ')%' → logprob: -7.673069000244141

Token 647: '-' (ID: 12)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010890178382396698
    2. '-m' → logprob: -5.510890007019043
    3. '-' → logprob: -6.010890007019043
    4. ']' → logprob: -6.885890007019043
    5. '0' → logprob: -7.010890007019043
    6. '(m' → logprob: -7.260890007019043
    7. '-(' → logprob: -8.135890007019043
    8. '(' → logprob: -8.260890007019043
    9. '(-' → logprob: -8.385890007019043
    10. '1' → logprob: -8.510890007019043

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039623770862817764
    2. 'm' → logprob: -8.000395774841309
    3. '(' → logprob: -10.125395774841309
    4. 'i' → logprob: -12.250395774841309
    5. '(m' → logprob: -12.375395774841309
    6. ']' → logprob: -12.625395774841309
    7. '-' → logprob: -12.750395774841309
    8. 'int' → logprob: -13.875395774841309
    9. '0' → logprob: -14.250395774841309
    10. 'j' → logprob: -14.750395774841309

Token 649: ']*(' (ID: 92627)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6951993107795715
    2. '*' → logprob: -0.9451993107795715
    3. '*m' → logprob: -2.1951992511749268
    4. ']*' → logprob: -7.820199489593506
    5. ']*(' → logprob: -7.945199489593506
    6. ')*' → logprob: -9.445199012756348
    7. ' *' → logprob: -9.945199012756348
    8. 'm' → logprob: -10.070199012756348
    9. ')' → logprob: -10.445199012756348
    10. ']' → logprob: -10.445199012756348

Token 650: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018524127081036568
    2. '(m' → logprob: -4.018524169921875
    3. '-(' → logprob: -8.143524169921875
    4. '-m' → logprob: -9.643524169921875
    5. ' (' → logprob: -12.268524169921875
    6. ' m' → logprob: -12.393524169921875
    7. '(' → logprob: -13.143524169921875
    8. '-' → logprob: -13.268524169921875
    9. '	m' → logprob: -13.393524169921875
    10. '   ' → logprob: -13.768524169921875

Token 651: '-m' (ID: 2126)
  Prédit: '-m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.36775416135787964
    2. '-' → logprob: -1.6177542209625244
    3. '-(' → logprob: -3.1177542209625244
    4. '-i' → logprob: -3.2427542209625244
    5. '//' → logprob: -4.367753982543945
    6. 'm' → logprob: -4.367753982543945
    7. ' -' → logprob: -7.992753982543945
    8. 'i' → logprob: -8.992753982543945
    9. '#' → logprob: -8.992753982543945
    10. '
' → logprob: -11.242753982543945

Token 652: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -5.319370302458992e-06
    2. '//=' → logprob: -12.500005722045898
    3. 'i' → logprob: -14.375005722045898
    4. '#' → logprob: -15.000005722045898
    5. '/i' → logprob: -15.125005722045898
    6. ' //' → logprob: -16.5000057220459
    7. '//
' → logprob: -16.6250057220459
    8. '```' → logprob: -16.8750057220459
    9. '//'' → logprob: -17.0000057220459
    10. '%i' → logprob: -17.1250057220459

Token 653: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.9153885558771435e-06
    2. ' i' → logprob: -12.250005722045898
    3. '%i' → logprob: -14.250005722045898
    4. 'x' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.1250057220459
    6. '	i' → logprob: -16.3750057220459
    7. '_i' → logprob: -17.3750057220459
    8. '
' → logprob: -17.7500057220459
    9. '(i' → logprob: -17.8750057220459
    10. '  ' → logprob: -18.5000057220459

Token 654: ')%' (ID: 57656)
  Prédit: '%i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.1661980301141739
    2. ')%' → logprob: -1.9161980152130127
    3. ')' → logprob: -5.416198253631592
    4. '))' → logprob: -6.791198253631592
    5. '+i' → logprob: -8.041197776794434
    6. '%' → logprob: -10.166197776794434
    7. ' %' → logprob: -12.041197776794434
    8. ']%' → logprob: -12.166197776794434
    9. '])' → logprob: -12.416197776794434
    10. '%d' → logprob: -12.416197776794434

Token 655: 'm' (ID: 76)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004341261519584805
    2. ' i' → logprob: -7.750433921813965
    3. ' ' → logprob: -14.000433921813965
    4. 'm' → logprob: -14.125433921813965
    5. '	i' → logprob: -14.625433921813965
    6. '%i' → logprob: -14.875433921813965
    7. '  ' → logprob: -15.625433921813965
    8. '   ' → logprob: -15.625433921813965
    9. ' ' → logprob: -15.750433921813965
    10. ',i' → logprob: -15.875433921813965

Token 656: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00917710829526186
    2. ')%' → logprob: -4.759177207946777
    3. ' )' → logprob: -7.509177207946777
    4. ')
' → logprob: -12.384177207946777
    5. ')//' → logprob: -12.384177207946777
    6. '%i' → logprob: -12.884177207946777
    7. '   ' → logprob: -14.009177207946777
    8. '))' → logprob: -15.009177207946777
    9. '//' → logprob: -15.009177207946777
    10. ')i' → logprob: -15.134177207946777

Token 657: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16121241450309753
    2. 'for' → logprob: -1.91121244430542
    3. '   ' → logprob: -7.03621244430542
    4. ' ' → logprob: -9.911211967468262
    5. '  ' → logprob: -10.786211967468262
    6. '	for' → logprob: -11.161211967468262
    7. '       ' → logprob: -11.411211967468262
    8. '    ' → logprob: -11.786211967468262
    9. '      ' → logprob: -13.286211967468262
    10. '     ' → logprob: -13.786211967468262

Token 658: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005269565153867006
    2. ' i' → logprob: -5.255269527435303
    3. 'range' → logprob: -10.505270004272461
    4. ' range' → logprob: -11.755270004272461
    5. '(i' → logprob: -15.630270004272461
    6. '	i' → logprob: -16.25527000427246
    7. ' ' → logprob: -16.63027000427246
    8. '  ' → logprob: -17.00527000427246
    9. '   ' → logprob: -17.25527000427246
    10. '%i' → logprob: -18.75527000427246

Token 659: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07889661937952042
    2. ' in' → logprob: -2.5788965225219727
    3. ' ' → logprob: -12.703896522521973
    4. 'range' → logprob: -12.953896522521973
    5. '  ' → logprob: -15.078896522521973
    6. 'i' → logprob: -15.453896522521973
    7. '
' → logprob: -15.578896522521973
    8. 'n' → logprob: -15.953896522521973
    9. '   ' → logprob: -16.20389747619629
    10. '	in' → logprob: -16.32889747619629

Token 660: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '	range' → logprob: -20.8750057220459
    4. '(range' → logprob: -21.0000057220459
    5. 'list' → logprob: -21.5000057220459
    6. '   ' → logprob: -22.3750057220459
    7. ' ' → logprob: -22.6250057220459
    8. 'Range' → logprob: -22.8750057220459
    9. '2' → logprob: -23.0000057220459
    10. '  ' → logprob: -23.1250057220459

Token 661: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '(' → logprob: -16.000001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '3' → logprob: -18.875001907348633
    6. '  ' → logprob: -19.000001907348633
    7. '```' → logprob: -19.500001907348633
    8. '    ' → logprob: -20.000001907348633
    9. '
' → logprob: -20.125001907348633
    10. '２' → logprob: -22.000001907348633

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.6250057220459
    4. '3' → logprob: -17.0000057220459
    5. '  ' → logprob: -18.7500057220459
    6. '
' → logprob: -19.5000057220459
    7. '```' → logprob: -19.6250057220459
    8. '２' → logprob: -20.5000057220459
    9. '    ' → logprob: -20.6250057220459
    10. '	' → logprob: -20.7500057220459

Token 663: ',L' (ID: 68006)
  Prédit: ',m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.11680541932582855
    2. ',' → logprob: -2.3668053150177
    3. ',len' → logprob: -4.116805553436279
    4. ',L' → logprob: -9.741805076599121
    5. ' ,' → logprob: -10.241805076599121
    6. ',length' → logprob: -10.366805076599121
    7. ',l' → logprob: -11.116805076599121
    8. ',n' → logprob: -11.741805076599121
    9. 'm' → logprob: -11.741805076599121
    10. ',M' → logprob: -13.491805076599121

Token 664: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09032553434371948
    2. ')])' → logprob: -2.4653255939483643
    3. '+' → logprob: -7.840325355529785
    4. '])]' → logprob: -8.215325355529785
    5. ')],' → logprob: -8.465325355529785
    6. ')' → logprob: -8.465325355529785
    7. '])' → logprob: -8.590325355529785
    8. '1' → logprob: -10.215325355529785
    9. ')][' → logprob: -10.215325355529785
    10. ',' → logprob: -11.090325355529785

Token 665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.125009536743164
    4. '2' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.250009536743164
    6. '  ' → logprob: -17.875009536743164
    7. '0' → logprob: -18.625009536743164
    8. ')' → logprob: -19.000009536743164
    9. 'm' → logprob: -19.125009536743164
    10. '``' → logprob: -19.375009536743164

Token 666: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028052396373823285
    2. ')]' → logprob: -8.250280380249023
    3. ' ]' → logprob: -11.000280380249023
    4. '])' → logprob: -13.625280380249023
    5. ']
' → logprob: -13.625280380249023
    6. ']]' → logprob: -16.625280380249023
    7. ')' → logprob: -17.000280380249023
    8. '()]' → logprob: -17.375280380249023
    9. ']

' → logprob: -17.500280380249023
    10. ']}' → logprob: -17.875280380249023

Token 667: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0003051917883567512
    2. ' L' → logprob: -8.12530517578125
    3. 'len' → logprob: -12.37530517578125
    4. '(L' → logprob: -13.37530517578125
    5. 'True' → logprob: -13.37530517578125
    6. '2' → logprob: -14.37530517578125
    7. '(' → logprob: -14.62530517578125
    8. '1' → logprob: -14.75030517578125
    9. '	L' → logprob: -16.12530517578125
    10. ' len' → logprob: -16.25030517578125

Token 669: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.581281840801239
    2. '>=' → logprob: -0.831281840801239
    3. 'else' → logprob: -5.706281661987305
    4. ' else' → logprob: -6.956281661987305
    5. ' >=' → logprob: -7.831281661987305
    6. ' >' → logprob: -7.956281661987305
    7. '<|end|>' → logprob: -9.956281661987305
    8. '0' → logprob: -10.081281661987305
    9. '1' → logprob: -10.581281661987305
    10. '2' → logprob: -10.581281661987305

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011200665176147595
    2. '0' → logprob: -9.12511157989502
    3. '=' → logprob: -13.62511157989502
    4. ' ' → logprob: -14.25011157989502
    5. '2' → logprob: -14.62511157989502
    6. '   ' → logprob: -16.000112533569336
    7. '
' → logprob: -16.000112533569336
    8. '```' → logprob: -16.375112533569336
    9. '``' → logprob: -16.875112533569336
    10. '

' → logprob: -17.187612533569336

Token 671: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 672: ' ([' (ID: 31338)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007877098978497088
    2. '[]' → logprob: -7.500787734985352
    3. ' [' → logprob: -8.500787734985352
    4. '[m' → logprob: -11.000787734985352
    5. '[i' → logprob: -11.375787734985352
    6. '[]
' → logprob: -14.625787734985352
    7. 'None' → logprob: -14.750787734985352
    8. '[-' → logprob: -15.125787734985352
    9. '[in' → logprob: -15.125787734985352
    10. ' []' → logprob: -15.250787734985352

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06563819199800491
    2. '1' → logprob: -2.940638303756714
    3. ']' → logprob: -5.065638065338135
    4. '])' → logprob: -6.690638065338135
    5. 'x' → logprob: -6.940638065338135
    6. 'm' → logprob: -7.315638065338135
    7. 'i' → logprob: -7.565638065338135
    8. ' ' → logprob: -8.315638542175293
    9. 'None' → logprob: -8.940638542175293
    10. '][' → logprob: -9.315638542175293

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013266648165881634
    2. ']' → logprob: -7.001326560974121
    3. ']+' → logprob: -8.501326560974121
    4. '])' → logprob: -8.876326560974121
    5. '1' → logprob: -10.126326560974121
    6. ',i' → logprob: -11.126326560974121
    7. ' ,' → logprob: -12.376326560974121
    8. ',x' → logprob: -12.751326560974121
    9. ',L' → logprob: -12.751326560974121
    10. ',None' → logprob: -13.376326560974121

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010390079842181876
    2. ' ' → logprob: -9.500103950500488
    3. '0' → logprob: -10.875103950500488
    4. ']' → logprob: -13.062603950500488
    5. '(' → logprob: -13.625103950500488
    6. 'i' → logprob: -13.687603950500488
    7. 'L' → logprob: -13.750103950500488
    8. '  ' → logprob: -14.812603950500488
    9. 'x' → logprob: -14.812603950500488
    10. '   ' → logprob: -14.875103950500488

Token 676: '][:' (ID: 63357)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07899080216884613
    2. ']' → logprob: -2.5789906978607178
    3. ')' → logprob: -10.328990936279297
    4. ']+' → logprob: -10.578990936279297
    5. ' ])' → logprob: -10.703990936279297
    6. ',' → logprob: -12.203990936279297
    7. ' ]' → logprob: -12.703990936279297
    8. '<|end|>' → logprob: -13.078990936279297
    9. '])
' → logprob: -13.703990936279297
    10. ')]' → logprob: -13.828990936279297

Token 677: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0017772804712876678
    2. '2' → logprob: -6.376777172088623
    3. ' L' → logprob: -10.126777648925781
    4. '(' → logprob: -11.001777648925781
    5. '1' → logprob: -12.001777648925781
    6. ':L' → logprob: -12.126777648925781
    7. '(L' → logprob: -13.126777648925781
    8. ' ' → logprob: -13.126777648925781
    9. '	L' → logprob: -13.626777648925781
    10. '0' → logprob: -14.376777648925781

Token 678: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07265428453683853
    2. ']' → logprob: -2.6976542472839355
    3. '+' → logprob: -6.3226542472839355
    4. ']+' → logprob: -7.6976542472839355
    5. ')' → logprob: -7.8226542472839355
    6. ')]' → logprob: -10.322654724121094
    7. '])]' → logprob: -11.447654724121094
    8. ' ])' → logprob: -12.697654724121094
    9. '])
' → logprob: -12.822654724121094
    10. ')])' → logprob: -13.072654724121094

Token 679: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0348307266831398
    2. '])' → logprob: -3.6598308086395264
    3. 'L' → logprob: -5.034830570220947
    4. ']' → logprob: -6.784830570220947
    5. '1' → logprob: -7.409830570220947
    6. ')' → logprob: -9.284831047058105
    7. ' ' → logprob: -10.159831047058105
    8. '+' → logprob: -10.534831047058105
    9. '(' → logprob: -11.784831047058105
    10. '[' → logprob: -11.909831047058105

Token 680: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31365031003952026
    2. ']' → logprob: -1.313650369644165
    3. ')' → logprob: -8.563650131225586
    4. ']+' → logprob: -8.813650131225586
    5. '])]' → logprob: -11.063650131225586
    6. ' ])' → logprob: -11.563650131225586
    7. '+' → logprob: -11.938650131225586
    8. ')]' → logprob: -12.188650131225586
    9. ']),' → logprob: -13.188650131225586
    10. ' ]' → logprob: -13.313650131225586

Token 681: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014052089303731918
    2. '])' → logprob: -4.764051914215088
    3. '<|end|>' → logprob: -5.764051914215088
    4. ']' → logprob: -6.139051914215088
    5. ')]' → logprob: -10.639052391052246
    6. ' )' → logprob: -10.889052391052246
    7. 'else' → logprob: -11.139052391052246
    8. '+' → logprob: -11.764052391052246
    9. '<|end|>' → logprob: -11.889052391052246
    10. 'def' → logprob: -12.014052391052246

Token 682: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.09258532524108887
    2. 'True' → logprob: -2.842585325241089
    3. ' L' → logprob: -3.717585325241089
    4. ' True' → logprob: -5.717585563659668
    5. 'False' → logprob: -6.342585563659668
    6. 'None' → logprob: -8.342585563659668
    7. '0' → logprob: -8.467585563659668
    8. ' not' → logprob: -9.717585563659668
    9. ' False' → logprob: -9.842585563659668
    10. ' ' → logprob: -10.217585563659668

Token 683: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4250251054763794
    2. '+' → logprob: -1.5500251054763794
    3. '>=' → logprob: -2.92502498626709
    4. '<' → logprob: -3.42502498626709
    5. 'else' → logprob: -3.55002498626709
    6. '==' → logprob: -4.67502498626709
    7. ' else' → logprob: -4.92502498626709
    8. '<=' → logprob: -6.67502498626709
    9. '<len' → logprob: -7.17502498626709
    10. ')' → logprob: -8.42502498626709

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021855637896806002
    2. '0' → logprob: -8.625218391418457
    3. ' ' → logprob: -10.500218391418457
    4. '2' → logprob: -11.500218391418457
    5. '   ' → logprob: -14.625218391418457
    6. 'L' → logprob: -16.062719345092773
    7. '  ' → logprob: -16.187719345092773
    8. '```' → logprob: -16.250219345092773
    9. '-' → logprob: -16.500219345092773
    10. '(' → logprob: -16.500219345092773

Token 685: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31336191296577454
    2. 'else' → logprob: -1.3133618831634521
    3. ')' → logprob: -10.063362121582031
    4. ']' → logprob: -10.938362121582031
    5. '	else' → logprob: -10.938362121582031
    6. '])' → logprob: -11.563362121582031
    7. '   ' → logprob: -11.938362121582031
    8. ' ' → logprob: -13.688362121582031
    9. '  ' → logprob: -14.063362121582031
    10. '       ' → logprob: -14.313362121582031

Token 686: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3663736581802368
    2. '[])' → logprob: -1.3663736581802368
    3. '[]' → logprob: -2.9913735389709473
    4. ' [])' → logprob: -6.866373538970947
    5. ' [' → logprob: -7.991373538970947
    6. '[])
' → logprob: -9.866374015808105
    7. '[]):' → logprob: -11.366374015808105
    8. '[]
' → logprob: -11.741374015808105
    9. ' []' → logprob: -11.991374015808105
    10. ')' → logprob: -11.991374015808105

Token 687: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00384722463786602
    2. '])' → logprob: -5.628847122192383
    3. ']' → logprob: -8.378847122192383
    4. '1' → logprob: -11.753847122192383
    5. 'None' → logprob: -13.253847122192383
    6. ' ' → logprob: -13.253847122192383
    7. ' ])' → logprob: -13.878847122192383
    8. '(' → logprob: -14.128847122192383
    9. ']])' → logprob: -14.503847122192383
    10. '[]' → logprob: -14.753847122192383

Token 688: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00016229959146585315
    2. ']' → logprob: -9.125162124633789
    3. '])]' → logprob: -10.375162124633789
    4. '][:' → logprob: -11.625162124633789
    5. '0' → logprob: -12.375162124633789
    6. '])
' → logprob: -13.500162124633789
    7. ' ])' → logprob: -14.125162124633789
    8. '])[' → logprob: -14.125162124633789
    9. ',' → logprob: -14.250162124633789
    10. ')' → logprob: -14.250162124633789

Token 689: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' fact' (ID: 2840)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.4510161876678467
    2. ' inv' → logprob: -1.9510161876678467
    3. ' fact' → logprob: -2.2010161876678467
    4. 'fact' → logprob: -2.2010161876678467
    5. 'mod' → logprob: -2.7010161876678467
    6. ' mod' → logprob: -2.9510161876678467
    7. ' mp' → logprob: -3.3260161876678467
    8. 'mp' → logprob: -3.5760161876678467
    9. 'bin' → logprob: -4.326016426086426
    10. 'in' → logprob: -4.513516426086426

Token 691: 'seq' (ID: 27794)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.11921300739049911
    2. 'orial' → logprob: -2.619213104248047
    3. 'ory' → logprob: -3.744213104248047
    4. '=' → logprob: -4.494213104248047
    5. ' =' → logprob: -5.744213104248047
    6. 'y' → logprob: -7.494213104248047
    7. 'def' → logprob: -8.244213104248047
    8. 'oral' → logprob: -8.869213104248047
    9. 'orical' → logprob: -9.369213104248047
    10. '=lambda' → logprob: -9.494213104248047

Token 692: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.43180856108665466
    2. '(n' → logprob: -1.056808590888977
    3. '(N' → logprob: -6.4318084716796875
    4. '(x' → logprob: -7.6818084716796875
    5. ' (' → logprob: -7.8068084716796875
    6. '(l' → logprob: -8.181808471679688
    7. '(' → logprob: -9.431808471679688
    8. ' =' → logprob: -9.556808471679688
    9. '(limit' → logprob: -9.806808471679688
    10. '=' → logprob: -10.806808471679688

Token 693: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5670250654220581
    2. '):
' → logprob: -0.9420250654220581
    3. ',' → logprob: -3.3170251846313477
    4. '):
' → logprob: -5.567025184631348
    5. ')' → logprob: -6.567025184631348
    6. '(L' → logprob: -7.442025184631348
    7. ':' → logprob: -8.067025184631348
    8. ',L' → logprob: -8.692025184631348
    9. '=' → logprob: -8.942025184631348
    10. '(n' → logprob: -9.067025184631348

Token 694: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.021932212635874748
    2. ' m' → logprob: -3.8969321250915527
    3. '):
' → logprob: -7.896932125091553
    4. 'mod' → logprob: -7.896932125091553
    5. '   ' → logprob: -8.396932601928711
    6. 'M' → logprob: -9.021932601928711
    7. ')' → logprob: -9.646932601928711
    8. ' ' → logprob: -9.771932601928711
    9. 'MOD' → logprob: -10.771932601928711
    10. '):

' → logprob: -10.896932601928711

Token 695: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.822646693966817e-06
    2. '=None' → logprob: -12.500007629394531
    3. '):' → logprob: -13.000007629394531
    4. ' =' → logprob: -13.625007629394531
    5. '):
' → logprob: -15.000007629394531
    6. ')' → logprob: -16.37500762939453
    7. '=M' → logprob: -16.62500762939453
    8. ')=' → logprob: -17.12500762939453
    9. '=(' → logprob: -17.87500762939453
    10. 'MOD' → logprob: -18.12500762939453

Token 696: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.034592388459714e-06
    2. ' MOD' → logprob: -12.125005722045898
    3. 'm' → logprob: -15.625005722045898
    4. 'MO' → logprob: -16.5000057220459
    5. '   ' → logprob: -16.7500057220459
    6. '10' → logprob: -16.7500057220459
    7. '_MOD' → logprob: -17.0000057220459
    8. ' ' → logprob: -17.1250057220459
    9. '100' → logprob: -17.1250057220459
    10. '
' → logprob: -17.6250057220459

Token 697: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.13161446154117584
    2. 'MOD' → logprob: -2.1316144466400146
    3. 'OD' → logprob: -5.381614685058594
    4. 'num' → logprob: -9.756614685058594
    5. 'UM' → logprob: -12.131614685058594
    6. 'OM' → logprob: -12.881614685058594
    7. 'ODE' → logprob: -13.506614685058594
    8. 'mod' → logprob: -13.631614685058594
    9. '_NUM' → logprob: -14.006614685058594
    10. '=' → logprob: -14.131614685058594

Token 698: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3148994743824005
    2. '):' → logprob: -1.3148994445800781
    3. '):
' → logprob: -6.439899444580078
    4. ')' → logprob: -10.314899444580078
    5. '):

' → logprob: -12.314899444580078
    6. ' ):
' → logprob: -14.564899444580078
    7. ' ):' → logprob: -14.689899444580078
    8. ':' → logprob: -15.439899444580078
    9. '   ' → logprob: -15.564899444580078
    10. '):

' → logprob: -15.564899444580078

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011187756434082985
    2. 'f' → logprob: -4.886187553405762
    3. ':' → logprob: -6.761187553405762
    4. '=' → logprob: -7.511187553405762
    5. ' f' → logprob: -8.011187553405762
    6. '[' → logprob: -8.136187553405762
    7. 'r' → logprob: -8.511187553405762
    8. 's' → logprob: -8.511187553405762
    9. 'return' → logprob: -8.886187553405762
    10. ' =' → logprob: -9.136187553405762

Token 700: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3575618863105774
    2. 'seq' → logprob: -2.3575618267059326
    3. 'fs' → logprob: -2.4825618267059326
    4. 'res' → logprob: -3.4825618267059326
    5. '   ' → logprob: -3.7325618267059326
    6. 'rv' → logprob: -4.107562065124512
    7. ' f' → logprob: -4.857562065124512
    8. 'fac' → logprob: -4.982562065124512
    9. 'ret' → logprob: -5.107562065124512
    10. ' fs' → logprob: -5.232562065124512

Token 701: ' recursively' (ID: 130266)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.41831448674201965
    2. 'fs' → logprob: -2.2933144569396973
    3. 'rv' → logprob: -2.7933144569396973
    4. 'facts' → logprob: -2.7933144569396973
    5. 'fact' → logprob: -3.7933144569396973
    6. 'seq' → logprob: -4.043314456939697
    7. 'return' → logprob: -4.293314456939697
    8. ' f' → logprob: -4.543314456939697
    9. '   ' → logprob: -4.668314456939697
    10. ' fs' → logprob: -4.918314456939697

Token 702: '?' (ID: 30)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46785879135131836
    2. 'f' → logprob: -1.9678587913513184
    3. 'return' → logprob: -2.3428587913513184
    4. 'lambda' → logprob: -3.5928587913513184
    5. 'seq' → logprob: -3.7178587913513184
    6. 'yield' → logprob: -3.9678587913513184
    7. 'res' → logprob: -4.342858791351318
    8. '   ' → logprob: -4.467858791351318
    9. 'fac' → logprob: -4.842858791351318
    10. 'fact' → logprob: -4.842858791351318

Token 703: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805329084396362
    2. 'return' → logprob: -1.3305329084396362
    3. 'f' → logprob: -2.705533027648926
    4. ' return' → logprob: -3.330533027648926
    5. 'if' → logprob: -3.705533027648926
    6. ' if' → logprob: -4.330533027648926
    7. ' f' → logprob: -4.330533027648926
    8. 'seq' → logprob: -5.705533027648926
    9. 'r' → logprob: -6.080533027648926
    10. ' res' → logprob: -6.205533027648926

Token 704: ' efficient' (ID: 12430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26761510968208313
    2. 'f' → logprob: -2.7676150798797607
    3. ' def' → logprob: -3.3926150798797607
    4. ' f' → logprob: -3.6426150798797607
    5. '[]' → logprob: -3.7676150798797607
    6. '[' → logprob: -4.39261531829834
    7. ' [' → logprob: -4.51761531829834
    8. 'lambda' → logprob: -4.64261531829834
    9. 'L' → logprob: -4.76761531829834
    10. '(lambda' → logprob: -5.14261531829834

Token 705: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7652026414871216
    2. 'if' → logprob: -1.1402026414871216
    3. ' if' → logprob: -2.140202522277832
    4. ':' → logprob: -2.890202522277832
    5. 'return' → logprob: -4.515202522277832
    6. 'f' → logprob: -5.265202522277832
    7. ' =' → logprob: -5.265202522277832
    8. ',' → logprob: -5.765202522277832
    9. '=' → logprob: -5.765202522277832
    10. 'def' → logprob: -6.265202522277832

Token 706: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0599684715270996
    2. 'seq' → logprob: -2.3099684715270996
    3. 'rv' → logprob: -2.5599684715270996
    4. 'f' → logprob: -2.8099684715270996
    5. ' res' → logprob: -2.9349684715270996
    6. 'res' → logprob: -2.9349684715270996
    7. ' seq' → logprob: -3.1849684715270996
    8. 'r' → logprob: -3.3099684715270996
    9. 'def' → logprob: -3.5599684715270996
    10. 'if' → logprob: -3.9349684715270996

Token 707: ' satisfying' (ID: 52718)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23316630721092224
    2. ' [' → logprob: -2.483166217803955
    3. 'True' → logprob: -3.233166217803955
    4. ' True' → logprob: -3.608166217803955
    5. ' L' → logprob: -4.733166217803955
    6. '[L' → logprob: -4.858166217803955
    7. '([' → logprob: -4.983166217803955
    8. '[]' → logprob: -5.233166217803955
    9. 'L' → logprob: -5.358166217803955
    10. 'fact' → logprob: -5.733166217803955

Token 708: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027058131992816925
    2. 'f' → logprob: -4.277058124542236
    3. 'return' → logprob: -5.277058124542236
    4. ' f' → logprob: -6.152058124542236
    5. ':' → logprob: -6.402058124542236
    6. ' return' → logprob: -7.027058124542236
    7. ' if' → logprob: -7.652058124542236
    8. 'if' → logprob: -7.777058124542236
    9. '[' → logprob: -8.027058601379395
    10. '    ' → logprob: -8.152058601379395

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10457760840654373
    2. 'f' → logprob: -3.1045775413513184
    3. 'return' → logprob: -3.4795775413513184
    4. 'if' → logprob: -4.979577541351318
    5. ' return' → logprob: -5.729577541351318
    6. ' f' → logprob: -5.854577541351318
    7. ' if' → logprob: -5.979577541351318
    8. 'r' → logprob: -6.229577541351318
    9. ':' → logprob: -6.729577541351318
    10. 's' → logprob: -7.479577541351318

Token 710: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12250551581382751
    2. 'f' → logprob: -2.9975054264068604
    3. '[' → logprob: -3.4975054264068604
    4. '   ' → logprob: -4.4975056648254395
    5. 'if' (adapté à ' if') → logprob: -4.4975056648254395
    6. 'fs' → logprob: -5.8725056648254395
    7. 'res' → logprob: -6.6225056648254395
    8. 'def' → logprob: -6.6225056648254395
    9. 'seq' → logprob: -6.8725056648254395
    10. 'r' → logprob: -6.9975056648254395

Token 711: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01836497150361538
    2. ' L' → logprob: -4.018364906311035
    3. 'not' → logprob: -9.143364906311035
    4. ' not' → logprob: -9.268364906311035
    5. '   ' → logprob: -12.393364906311035
    6. ' ' → logprob: -12.393364906311035
    7. '(L' → logprob: -13.393364906311035
    8. '  ' → logprob: -13.768364906311035
    9. '0' → logprob: -13.893364906311035
    10. '	L' → logprob: -14.268364906311035

Token 712: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4721364676952362
    2. '==' → logprob: -1.0971364974975586
    3. '<=' → logprob: -3.4721364974975586
    4. ' ==' → logprob: -4.722136497497559
    5. ' <' → logprob: -6.347136497497559
    6. ' <=' → logprob: -7.847136497497559
    7. '0' → logprob: -8.347136497497559
    8. 'in' → logprob: -10.097136497497559
    9. '=' → logprob: -10.347136497497559
    10. ' ' → logprob: -10.722136497497559

Token 713: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047583275591023266
    2. '1' → logprob: -8.000475883483887
    3. ' ' → logprob: -8.875475883483887
    4. '   ' → logprob: -15.375475883483887
    5. '  ' → logprob: -16.12547492980957
    6. '    ' → logprob: -16.87547492980957
    7. '-' → logprob: -17.12547492980957
    8. '[' → logprob: -17.12547492980957
    9. '2' → logprob: -17.25047492980957
    10. '100' → logprob: -17.25047492980957

Token 714: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012737659562844783
    2. '1' → logprob: -9.500127792358398
    3. ' ' → logprob: -9.875127792358398
    4. '-' → logprob: -15.250127792358398
    5. '   ' → logprob: -15.625127792358398
    6. '  ' → logprob: -16.2501277923584
    7. '2' → logprob: -16.6876277923584
    8. '    ' → logprob: -17.3751277923584
    9. '[' → logprob: -17.5001277923584
    10. '(' → logprob: -17.5001277923584

Token 715: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005834150360897183
    2. ':return' → logprob: -7.875583648681641
    3. ':
' → logprob: -8.62558364868164
    4. '   ' → logprob: -10.87558364868164
    5. ' :' → logprob: -13.00058364868164
    6. 'return' → logprob: -13.25058364868164
    7. ' ' → logprob: -14.25058364868164
    8. ' or' → logprob: -16.25058364868164
    9. ':
' → logprob: -16.75058364868164
    10. '  ' → logprob: -17.37558364868164

Token 716: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010064402595162392
    2. ' return' → logprob: -5.135064601898193
    3. 'return' → logprob: -5.510064601898193
    4. '1' → logprob: -10.760064125061035
    5. '[' → logprob: -10.760064125061035
    6. ' ' → logprob: -11.010064125061035
    7. '       ' → logprob: -11.885064125061035
    8. '  ' → logprob: -12.260064125061035
    9. ' [' → logprob: -12.760064125061035
    10. '	return' → logprob: -12.885064125061035

Token 717: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. ' [' → logprob: -12.000009536743164
    3. '[]' → logprob: -12.750009536743164
    4. '[]
' → logprob: -16.500009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '1' → logprob: -17.000009536743164
    7. ' ' → logprob: -18.250009536743164
    8. '{' → logprob: -19.375009536743164
    9. '  ' → logprob: -20.000009536743164
    10. '[]

' → logprob: -20.125009536743164

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. '0' → logprob: -11.500021934509277
    3. ' ' → logprob: -11.625021934509277
    4. '[' → logprob: -13.250021934509277
    5. '   ' → logprob: -15.375021934509277
    6. '(' → logprob: -16.00002098083496
    7. '
' → logprob: -16.25002098083496
    8. '  ' → logprob: -17.12502098083496
    9. ']' → logprob: -17.25002098083496
    10. '```' → logprob: -17.25002098083496

Token 719: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.08006051182746887
    2. ']' → logprob: -2.5800604820251465
    3. ']+' → logprob: -7.4550604820251465
    4. ',' → logprob: -7.8300604820251465
    5. ']
' → logprob: -8.955060958862305
    6. ']

' → logprob: -10.080060958862305
    7. ']*(' → logprob: -11.580060958862305
    8. '   ' → logprob: -11.955060958862305
    9. '0' → logprob: -13.080060958862305
    10. ']*' → logprob: -13.455060958862305

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030293059535324574
    2. 'f' → logprob: -8.625303268432617
    3. 'fact' → logprob: -9.500303268432617
    4. 'res' → logprob: -11.125303268432617
    5. 'fac' → logprob: -11.375303268432617
    6. 'seq' → logprob: -12.125303268432617
    7. 'lst' → logprob: -12.875303268432617
    8. 'r' → logprob: -13.125303268432617
    9. 'x' → logprob: -13.250303268432617
    10. ' res' → logprob: -13.375303268432617

Token 721: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11558300256729126
    2. 'r' → logprob: -3.9905829429626465
    3. 'f' → logprob: -4.6155829429626465
    4. 'res' → logprob: -4.7405829429626465
    5. ' res' → logprob: -4.8655829429626465
    6. 'ret' → logprob: -4.8655829429626465
    7. 'prev' → logprob: -4.8655829429626465
    8. 'rv' → logprob: -4.9905829429626465
    9. ' rv' → logprob: -4.9905829429626465
    10. 'fs' → logprob: -5.6155829429626465

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0072676134295761585
    2. ' =' → logprob: -5.007267475128174
    3. '=f' → logprob: -7.507267475128174
    4. '_=' → logprob: -14.382267951965332
    5. 'fact' → logprob: -14.507267951965332
    6. '=[' → logprob: -14.757267951965332
    7. 'f' → logprob: -14.757267951965332
    8. ' ' → logprob: -15.632267951965332
    9. '=[]' → logprob: -15.757267951965332
    10. '=list' → logprob: -16.007266998291016

Token 723: ' [' (ID: 723)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.02975812554359436
    2. ' fact' → logprob: -3.5297582149505615
    3. 'd' → logprob: -12.77975845336914
    4. 'factor' → logprob: -13.02975845336914
    5. '[' → logprob: -14.15475845336914
    6. 'f' → logprob: -14.52975845336914
    7. ' ' → logprob: -14.52975845336914
    8. '_fact' → logprob: -15.27975845336914
    9. ' d' → logprob: -15.90475845336914
    10. '   ' → logprob: -16.15475845336914

Token 724: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00113176298327744
    2. 'arr' → logprob: -7.001131534576416
    3. '*' → logprob: -9.001132011413574
    4. '(' → logprob: -10.251132011413574
    5. '0' → logprob: -10.376132011413574
    6. 'None' → logprob: -11.876132011413574
    7. '*(' → logprob: -12.251132011413574
    8. '(arr' → logprob: -12.376132011413574
    9. 'fact' → logprob: -12.876132011413574
    10. 'x' → logprob: -13.001132011413574

Token 725: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6061335802078247
    2. ']*(' → logprob: -1.1061335802078247
    3. ']+' → logprob: -2.481133460998535
    4. ']*' → logprob: -3.856133460998535
    5. ',' → logprob: -3.981133460998535
    6. '1' → logprob: -9.481133460998535
    7. '0' → logprob: -9.481133460998535
    8. 'None' → logprob: -10.106133460998535
    9. ']
' → logprob: -10.606133460998535
    10. ']+=' → logprob: -11.856133460998535

Token 726: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.2664456789934775e-06
    2. ' L' → logprob: -13.875000953674316
    3. '(L' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '(' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '	L' → logprob: -18.750001907348633
    8. '1' → logprob: -19.250001907348633
    9. '2' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.375001907348633

Token 727: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018530222587287426
    2. ' +' → logprob: -8.625185012817383
    3. '+
' → logprob: -13.375185012817383
    4. '
' → logprob: -13.500185012817383
    5. '1' → logprob: -14.375185012817383
    6. ')' → logprob: -14.375185012817383
    7. '-' → logprob: -15.000185012817383
    8. ']' → logprob: -15.000185012817383
    9. '```' → logprob: -15.500185012817383
    10. ']+' → logprob: -15.750185012817383

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -18.625
    5. '
' → logprob: -19.125
    6. '2' → logprob: -19.125
    7. '+' → logprob: -19.25
    8. '  ' → logprob: -20.75
    9. '-' → logprob: -20.875
    10. '۱' → logprob: -21.1875

Token 729: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.001428928691893816
    2. ')' → logprob: -6.626429080963135
    3. ')
' → logprob: -9.251428604125977
    4. ' )
' → logprob: -12.251428604125977
    5. ');' → logprob: -14.376428604125977
    6. ')

' → logprob: -14.876428604125977
    7. ']
' → logprob: -15.376428604125977
    8. ');
' → logprob: -15.501428604125977
    9. ')`
' → logprob: -15.501428604125977
    10. 'arr' → logprob: -16.001428604125977

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5397634506225586
    2. 'arr' → logprob: -0.9147634506225586
    3. ' arr' → logprob: -4.539763450622559
    4. '	arr' → logprob: -5.164763450622559
    5. '[arr' → logprob: -9.789763450622559
    6. 'for' → logprob: -11.289763450622559
    7. '```' → logprob: -11.289763450622559
    8. ' for' → logprob: -11.414763450622559
    9. '[' → logprob: -12.414763450622559
    10. '<arr' → logprob: -12.539763450622559

Token 731: ' prod' (ID: 10207)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05588575452566147
    2. ' arr' → logprob: -3.0558857917785645
    3. '   ' → logprob: -4.9308857917785645
    4. '	arr' → logprob: -10.305885314941406
    5. 'for' → logprob: -11.680885314941406
    6. '```' → logprob: -12.430885314941406
    7. ' for' → logprob: -12.680885314941406
    8. '
' → logprob: -13.555885314941406
    9. '_arr' → logprob: -14.305885314941406
    10. '``' → logprob: -15.555885314941406

Token 732: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16336865723133087
    2. ' =' → logprob: -2.1633687019348145
    3. '[' → logprob: -3.7883687019348145
    4. 'arr' → logprob: -4.5383687019348145
    5. ',' → logprob: -6.9133687019348145
    6. '<|end|>' → logprob: -7.5383687019348145
    7. '<|end|>' → logprob: -8.413368225097656
    8. ' ' → logprob: -8.788368225097656
    9. '   ' → logprob: -9.163368225097656
    10. 's' → logprob: -9.163368225097656

Token 733: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.87508487701416
    3. 'arr' → logprob: -10.37508487701416
    4. '   ' → logprob: -13.62508487701416
    5. 'fact' → logprob: -15.25008487701416
    6. '  ' → logprob: -15.50008487701416
    7. 'int' → logprob: -15.75008487701416
    8. 'factor' → logprob: -16.250085830688477
    9. '```' → logprob: -16.750085830688477
    10. '`' → logprob: -16.812585830688477

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. 'arr' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '   ' → logprob: -15.875004768371582
    5. 'fact' → logprob: -17.625003814697266
    6. '[' → logprob: -18.125003814697266
    7. 'int' → logprob: -18.375003814697266
    8. '  ' → logprob: -18.500003814697266
    9. '`' → logprob: -19.375003814697266
    10. '=' → logprob: -19.500003814697266

Token 735: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04490557312965393
    2. ' for' → logprob: -3.294905662536621
    3. '   ' → logprob: -5.794905662536621
    4. 'for' → logprob: -6.294905662536621
    5. '<|end|>' → logprob: -6.794905662536621
    6. ' 
' → logprob: -8.419905662536621
    7. '	for' → logprob: -8.544905662536621
    8. '<|end|>' → logprob: -9.294905662536621
    9. '
' → logprob: -9.669905662536621
    10. '	
' → logprob: -9.794905662536621

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006674022297374904
    2. ' for' → logprob: -7.750667572021484
    3. 'for' → logprob: -8.375667572021484
    4. '	for' → logprob: -12.750667572021484
    5. '<|end|>' → logprob: -13.500667572021484
    6. ',' → logprob: -13.625667572021484
    7. 'import' → logprob: -15.750667572021484
    8. 'def' → logprob: -15.875667572021484
    9. '[' → logprob: -16.125667572021484
    10. ';' → logprob: -16.250667572021484

Token 737: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03166431933641434
    2. '   ' → logprob: -3.7816643714904785
    3. ' for' → logprob: -4.7816643714904785
    4. 'i' → logprob: -14.28166389465332
    5. '	for' → logprob: -14.65666389465332
    6. 'arr' → logprob: -15.65666389465332
    7. ' i' → logprob: -16.15666389465332
    8. ' ' → logprob: -17.53166389465332
    9. 'import' → logprob: -17.53166389465332
    10. '  ' → logprob: -18.65666389465332

Token 738: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22590385377407074
    2. 'k' → logprob: -1.975903868675232
    3. 'x' → logprob: -3.8509037494659424
    4. 'ii' → logprob: -4.2259039878845215
    5. ' i' → logprob: -4.6009039878845215
    6. 'idx' → logprob: -5.2259039878845215
    7. 'q' → logprob: -6.3509039878845215
    8. 'n' → logprob: -6.4759039878845215
    9. 'j' → logprob: -6.4759039878845215
    10. 'kk' → logprob: -6.7259039878845215

Token 739: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12695246934890747
    2. 'in' → logprob: -2.1269524097442627
    3. ' ' → logprob: -11.626952171325684
    4. ',' → logprob: -11.876952171325684
    5. '1' → logprob: -12.751952171325684
    6. 'range' → logprob: -13.501952171325684
    7. '	in' → logprob: -14.376952171325684
    8. '   ' → logprob: -14.751952171325684
    9. 'import' → logprob: -14.751952171325684
    10. 'n' → logprob: -14.751952171325684

Token 740: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -17.250553131103516
    4. '	range' → logprob: -19.250553131103516
    5. ' ' → logprob: -20.500553131103516
    6. '   ' → logprob: -20.875553131103516
    7. '  ' → logprob: -20.875553131103516
    8. '1' → logprob: -21.125553131103516
    9. 'in' → logprob: -21.125553131103516
    10. '
' → logprob: -21.125553131103516

Token 741: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20142103731632233
    2. '(' → logprob: -1.7014210224151611
    3. ' ' → logprob: -12.201420783996582
    4. '(L' → logprob: -13.451420783996582
    5. '2' → logprob: -14.076420783996582
    6. '   ' → logprob: -15.201420783996582
    7. 'L' → logprob: -16.9514217376709
    8. '[' → logprob: -16.9514217376709
    9. ' (' → logprob: -17.3264217376709
    10. '
' → logprob: -17.8264217376709

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'L' → logprob: -14.000003814697266
    4. '2' → logprob: -15.500003814697266
    5. '0' → logprob: -16.125003814697266
    6. '(' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.125003814697266
    8. '```' → logprob: -19.375003814697266
    9. '  ' → logprob: -19.625003814697266
    10. 'i' → logprob: -19.625003814697266

Token 743: ',' (ID: 11)
  Prédit: ',L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.25283083319664
    2. ',' → logprob: -1.5028308629989624
    3. ' ,' → logprob: -7.127830982208252
    4. ',len' → logprob: -9.752830505371094
    5. 'L' → logprob: -11.002830505371094
    6. ',i' → logprob: -11.127830505371094
    7. '(L' → logprob: -13.252830505371094
    8. ' L' → logprob: -13.627830505371094
    9. ',
' → logprob: -13.752830505371094
    10. '1' → logprob: -13.752830505371094

Token 744: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0001239196863025427
    2. ' L' → logprob: -9.000123977661133
    3. '	L' → logprob: -15.375123977661133
    4. '   ' → logprob: -15.875123977661133
    5. '(L' → logprob: -16.000123977661133
    6. 'len' → logprob: -17.875123977661133
    7. ' ' → logprob: -18.125123977661133
    8. '  ' → logprob: -18.625123977661133
    9. '[L' → logprob: -19.625123977661133
    10. ',L' → logprob: -19.750123977661133

Token 745: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.700132997939363e-05
    2. ' +' → logprob: -11.000017166137695
    3. '):
' → logprob: -16.750017166137695
    4. '+i' → logprob: -16.875017166137695
    5. '   ' → logprob: -17.000017166137695
    6. '+
' → logprob: -18.250017166137695
    7. '+=' → logprob: -18.500017166137695
    8. '[' → logprob: -19.375017166137695
    9. '):' → logprob: -19.375017166137695
    10. '
' → logprob: -19.625017166137695

Token 746: '1' (ID: 16)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0009618389885872602
    2. '1' → logprob: -7.625961780548096
    3. ' L' → logprob: -8.500962257385254
    4. '+' → logprob: -8.625962257385254
    5. '(L' → logprob: -9.500962257385254
    6. 'len' → logprob: -11.375962257385254
    7. ' ' → logprob: -13.625962257385254
    8. ' len' → logprob: -14.250962257385254
    9. '(' → logprob: -14.375962257385254
    10. 'Len' → logprob: -14.500962257385254

Token 747: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6267240643501282
    2. ':' → logprob: -1.2517240047454834
    3. '):' → logprob: -2.0017240047454834
    4. ':
' → logprob: -3.6267240047454834
    5. '   ' → logprob: -4.1267242431640625
    6. ',' → logprob: -6.8767242431640625
    7. '       ' → logprob: -8.001724243164062
    8. '):
' → logprob: -9.376724243164062
    9. ')' → logprob: -9.501724243164062
    10. ' ):
' → logprob: -9.501724243164062

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.102680633077398e-05
    2. '<|end|>' → logprob: -10.000090599060059
    3. ',' → logprob: -10.375090599060059
    4. '   ' → logprob: -12.375090599060059
    5. '<|end|>' → logprob: -12.625090599060059
    6. '```' → logprob: -13.500090599060059
    7. '#' → logprob: -14.125090599060059
    8. '	   ' → logprob: -14.562590599060059
    9. ' ' → logprob: -14.687590599060059
    10. '>' → logprob: -15.250090599060059

Token 749: ' prod' (ID: 10207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030416471417993307
    2. 'arr' → logprob: -6.128041744232178
    3. '   ' → logprob: -8.00304126739502
    4. 'prod' (adapté à ' prod') → logprob: -9.00304126739502
    5. '	arr' → logprob: -9.37804126739502
    6. ' prod' → logprob: -9.62804126739502
    7. ' arr' → logprob: -9.62804126739502
    8. '```' → logprob: -10.12804126739502
    9. '<|end|>' → logprob: -10.37804126739502
    10. '<|end|>' → logprob: -10.75304126739502

Token 750: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0005062076961621642
    2. ' *=' → logprob: -8.000506401062012
    3. '=' → logprob: -8.750506401062012
    4. ' =' → logprob: -11.375506401062012
    5. '*' → logprob: -14.500506401062012
    6. '   ' → logprob: -15.750506401062012
    7. '```' → logprob: -16.000505447387695
    8. '	' → logprob: -17.375505447387695
    9. ' ' → logprob: -17.375505447387695
    10. '\' → logprob: -18.000505447387695

Token 751: ' prod' (ID: 10207)
  Prédit: '(prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prod' → logprob: -0.1432519406080246
    2. ' (' → logprob: -2.268251895904541
    3. 'prod' → logprob: -4.018251895904541
    4. '(pro' → logprob: -4.893251895904541
    5. ' prod' → logprob: -5.643251895904541
    6. '(' → logprob: -7.143251895904541
    7. '       ' → logprob: -10.1432523727417
    8. '(i' → logprob: -10.3932523727417
    9. '.prod' → logprob: -11.0182523727417
    10. '   ' → logprob: -11.1432523727417

Token 752: '*i' (ID: 51147)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0013063102960586548
    2. '(prod' → logprob: -7.376306533813477
    3. ' *' → logprob: -8.126306533813477
    4. '*(' → logprob: -8.251306533813477
    5. '(pro' → logprob: -9.876306533813477
    6. 'prod' → logprob: -10.501306533813477
    7. '(' → logprob: -10.876306533813477
    8. '(i' → logprob: -11.626306533813477
    9. ' (' → logprob: -11.876306533813477
    10. '*i' → logprob: -12.376306533813477

Token 753: '%m' (ID: 141123)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31710541248321533
    2. ' %' → logprob: -1.3171054124832153
    3. '%m' → logprob: -6.442105293273926
    4. '
' → logprob: -6.692105293273926
    5. '%i' → logprob: -7.317105293273926
    6. '%n' → logprob: -8.942105293273926
    7. ' ' → logprob: -9.567105293273926
    8. ' 
' → logprob: -9.942105293273926
    9. '<|end|>' → logprob: -11.067105293273926
    10. '%d' → logprob: -11.192105293273926

Token 754: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00625914242118597
    2. 'arr' → logprob: -5.881258964538574
    3. '   ' → logprob: -6.131258964538574
    4. ',' → logprob: -7.631258964538574
    5. ' arr' → logprob: -7.631258964538574
    6. '<|end|>' → logprob: -9.381258964538574
    7. ';' → logprob: -9.506258964538574
    8. '	arr' → logprob: -9.881258964538574
    9. '
' → logprob: -10.506258964538574
    10. '[arr' → logprob: -11.131258964538574

Token 755: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004896456957794726
    2. 'arr' → logprob: -8.250489234924316
    3. '   ' → logprob: -9.000489234924316
    4. ' arr' → logprob: -9.750489234924316
    5. ',' → logprob: -11.250489234924316
    6. '<|end|>' → logprob: -11.375489234924316
    7. ';' → logprob: -12.625489234924316
    8. '	arr' → logprob: -12.625489234924316
    9. '[arr' → logprob: -13.125489234924316
    10. '<arr' → logprob: -13.500489234924316

Token 756: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.03838742524385452
    2. ' arr' → logprob: -3.2883875370025635
    3. '       ' → logprob: -8.038387298583984
    4. '   ' → logprob: -10.913387298583984
    5. '	arr' → logprob: -13.038387298583984
    6. '[arr' → logprob: -13.663387298583984
    7. '```' → logprob: -14.163387298583984
    8. '_arr' → logprob: -15.538387298583984
    9. '$arr' → logprob: -15.663387298583984
    10. '<arr' → logprob: -15.913387298583984

Token 757: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -18.375001907348633
    4. '=' → logprob: -18.500001907348633
    5. '[
' → logprob: -18.875001907348633
    6. '[I' → logprob: -19.375001907348633
    7. '[...]' → logprob: -19.625001907348633
    8. '[:]' → logprob: -19.750001907348633
    9. '```' → logprob: -20.000001907348633
    10. '\[' → logprob: -20.625001907348633

Token 758: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15025974810123444
    2. ']=' → logprob: -2.5252597332000732
    3. ']' → logprob: -2.9002597332000732
    4. ' =' → logprob: -5.650259971618652
    5. ']+=' → logprob: -7.650259971618652
    6. '=i' → logprob: -8.025259971618652
    7. ' ]' → logprob: -10.150259971618652
    8. '   ' → logprob: -10.900259971618652
    9. '<|end|>' → logprob: -10.900259971618652
    10. '<|end|>' → logprob: -11.400259971618652

Token 759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0564331205387134e-05
    2. ' =' → logprob: -11.50001049041748
    3. '=int' → logprob: -15.87501049041748
    4. '=i' → logprob: -16.625011444091797
    5. '=
' → logprob: -17.750011444091797
    6. '.=' → logprob: -17.875011444091797
    7. '=f' → logprob: -18.125011444091797
    8. '=

' → logprob: -18.250011444091797
    9. '=s' → logprob: -18.375011444091797
    10. '=p' → logprob: -18.625011444091797

Token 760: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -7.226628895296017e-06
    2. ' prod' → logprob: -11.875007629394531
    3. '(prod' → logprob: -15.375007629394531
    4. 'product' → logprob: -17.50000762939453
    5. 'pro' → logprob: -17.87500762939453
    6. 'prog' → logprob: -18.25000762939453
    7. 'proc' → logprob: -18.25000762939453
    8. 'prot' → logprob: -18.37500762939453
    9. '.prod' → logprob: -19.12500762939453
    10. 'prof' → logprob: -19.62500762939453

Token 761: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005264613428153098
    2. '
' → logprob: -7.875526428222656
    3. 'return' → logprob: -9.375526428222656
    4. '<|end|>' → logprob: -10.500526428222656
    5. ' return' → logprob: -11.125526428222656
    6. '	return' → logprob: -11.875526428222656
    7. '<|end|>' → logprob: -12.875526428222656
    8. ',' → logprob: -13.250526428222656
    9. ':return' → logprob: -13.500526428222656
    10. '    
' → logprob: -13.625526428222656

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.05499910004437e-05
    2. 'return' → logprob: -9.500090599060059
    3. ' return' → logprob: -11.625090599060059
    4. '<|end|>' → logprob: -12.750090599060059
    5. '       ' → logprob: -13.250090599060059
    6. '```' → logprob: -14.750090599060059
    7. '[' → logprob: -14.875090599060059
    8. '	return' → logprob: -15.250090599060059
    9. '.' → logprob: -15.750090599060059
    10. 'def' → logprob: -15.875090599060059

Token 763: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2586333751678467
    2. '   ' → logprob: -1.5086333751678467
    3. ' return' → logprob: -5.008633613586426
    4. '	return' → logprob: -13.383633613586426
    5. '
' → logprob: -16.50863265991211
    6. '```' → logprob: -16.63363265991211
    7. 'def' → logprob: -16.75863265991211
    8. ' ' → logprob: -17.13363265991211
    9. 'eturn' → logprob: -17.25863265991211
    10. ':return' → logprob: -17.63363265991211

Token 764: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -7.493430894101039e-05
    2. ' arr' → logprob: -9.500075340270996
    3. '[arr' → logprob: -18.12507438659668
    4. '[' → logprob: -20.50007438659668
    5. '	arr' → logprob: -21.12507438659668
    6. '(arr' → logprob: -21.50007438659668
    7. '_arr' → logprob: -22.87507438659668
    8. '$arr' → logprob: -23.12507438659668
    9. '.arr' → logprob: -23.87507438659668
    10. '<arr' → logprob: -24.12507438659668

Token 765: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016050786944106221
    2. '#' → logprob: -8.251605033874512
    3. ')' → logprob: -8.626605033874512
    4. 'fact' → logprob: -8.626605033874512
    5. 'factor' → logprob: -8.751605033874512
    6. '<|end|>' → logprob: -8.751605033874512
    7. 'from' → logprob: -9.251605033874512
    8. 'pow' → logprob: -9.376605033874512
    9. 'class' → logprob: -9.501605033874512
    10. '```' → logprob: -9.876605033874512

Token 766: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006698915269225836
    2. 'class' → logprob: -5.756699085235596
    3. '#' → logprob: -6.756699085235596
    4. 'pow' → logprob: -7.381699085235596
    5. 'from' → logprob: -7.881699085235596
    6. 'fact' → logprob: -8.131698608398438
    7. 'mod' → logprob: -8.631698608398438
    8. 'inv' → logprob: -8.881698608398438
    9. 'factor' → logprob: -9.131698608398438
    10. 'dp' → logprob: -9.506698608398438

Token 767: ' mod' (ID: 1812)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.2706809341907501
    2. 'fact' → logprob: -2.5206809043884277
    3. 'comb' → logprob: -2.8956809043884277
    4. ' inv' → logprob: -3.7706809043884277
    5. 'mod' → logprob: -3.7706809043884277
    6. 'n' → logprob: -4.020680904388428
    7. 'bin' → logprob: -4.520680904388428
    8. 'choose' → logprob: -5.145680904388428
    9. ' fact' → logprob: -5.270680904388428
    10. 'pow' → logprob: -5.770680904388428

Token 768: 'comb' (ID: 43606)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.3016805946826935
    2. '_pow' → logprob: -2.301680564880371
    3. 'pow' → logprob: -2.551680564880371
    4. '_mul' → logprob: -3.301680564880371
    5. '_inverse' → logprob: -4.426680564880371
    6. 'factor' → logprob: -4.926680564880371
    7. '_mult' → logprob: -6.176680564880371
    8. 'mul' → logprob: -6.301680564880371
    9. 'inv' → logprob: -6.301680564880371
    10. '_inv' → logprob: -6.301680564880371

Token 769: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1662764698266983
    2. '(n' → logprob: -2.416276454925537
    3. '(_' → logprob: -3.416276454925537
    4. '(L' → logprob: -4.041276454925537
    5. '(a' → logprob: -5.041276454925537
    6. '(_,' → logprob: -5.791276454925537
    7. '_' → logprob: -6.416276454925537
    8. '_count' → logprob: -7.541276454925537
    9. '(count' → logprob: -7.916276454925537
    10. '(`' → logprob: -8.166276931762695

Token 770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004923873930238187
    2. ',n' → logprob: -7.875492572784424
    3. ',N' → logprob: -9.625492095947266
    4. ' ,' → logprob: -10.625492095947266
    5. ',K' → logprob: -11.000492095947266
    6. ',k' → logprob: -13.375492095947266
    7. ',L' → logprob: -13.625492095947266
    8. '_,' → logprob: -14.000492095947266
    9. ',C' → logprob: -15.500492095947266
    10. ',M' → logprob: -15.750492095947266

Token 771: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.17966443300247192
    2. 'k' → logprob: -2.429664373397827
    3. 'R' → logprob: -3.179664373397827
    4. 'r' → logprob: -3.554664373397827
    5. 'n' → logprob: -5.429664611816406
    6. ' K' → logprob: -6.929664611816406
    7. 'M' → logprob: -7.679664611816406
    8. 'm' → logprob: -9.679664611816406
    9. ' k' → logprob: -9.929664611816406
    10. 'a' → logprob: -10.304664611816406

Token 772: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ',N' → logprob: -10.125043869018555
    3. ' ,' → logprob: -12.750043869018555
    4. '):' → logprob: -15.000043869018555
    5. ',n' → logprob: -15.125043869018555
    6. '   ' → logprob: -15.500043869018555
    7. ',
' → logprob: -17.000043869018555
    8. 'N' → logprob: -17.000043869018555
    9. '(N' → logprob: -17.250043869018555
    10. '_,' → logprob: -17.250043869018555

Token 773: ' fl' (ID: 1548)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.70707106590271
    2. 'M' → logprob: -1.45707106590271
    3. 'mod' → logprob: -2.45707106590271
    4. 'MOD' → logprob: -2.83207106590271
    5. ' M' → logprob: -3.45707106590271
    6. ' m' → logprob: -3.58207106590271
    7. 'arr' → logprob: -3.58207106590271
    8. 'fact' → logprob: -4.082071304321289
    9. ' MOD' → logprob: -5.082071304321289
    10. ' fact' → logprob: -5.707071304321289

Token 774: 'st' (ID: 302)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11077503859996796
    2. '):' → logprob: -3.8607749938964844
    3. 'ags' → logprob: -3.8607749938964844
    4. 'O' → logprob: -4.485774993896484
    5. 'ag' → logprob: -4.485774993896484
    6. ',' → logprob: -4.860774993896484
    7. 'AG' → logprob: -5.235774993896484
    8. '=None' → logprob: -5.485774993896484
    9. '=[]' → logprob: -5.860774993896484
    10. 'ist' → logprob: -6.110774993896484

Token 775: '=[],' (ID: 171004)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009255890734493732
    2. ',' → logprob: -4.884255886077881
    3. '):
' → logprob: -6.634255886077881
    4. ' ):' → logprob: -9.134256362915039
    5. '=[]' → logprob: -9.509256362915039
    6. ')' → logprob: -10.134256362915039
    7. '=None' → logprob: -10.259256362915039
    8. '):
' → logprob: -11.134256362915039
    9. ',L' → logprob: -11.509256362915039
    10. '[]):' → logprob: -12.009256362915039

Token 776: ' m' (ID: 284)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.5455045700073242
    2. 'inv' → logprob: -1.5455045700073242
    3. 'm' → logprob: -2.045504570007324
    4. 'fact' → logprob: -2.170504570007324
    5. ' fact' → logprob: -2.795504570007324
    6. ' m' → logprob: -2.920504570007324
    7. ' inv' → logprob: -3.170504570007324
    8. ' mod' → logprob: -3.170504570007324
    9. 'fl' → logprob: -3.545504570007324
    10. 'fac' → logprob: -4.170504570007324

Token 777: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.9153885558771435e-06
    2. '=None' → logprob: -13.000005722045898
    3. '):' → logprob: -13.250005722045898
    4. ' =' → logprob: -14.250005722045898
    5. '=M' → logprob: -14.500005722045898
    6. 'MOD' → logprob: -15.125005722045898
    7. '):
' → logprob: -15.250005722045898
    8. '=
' → logprob: -16.1250057220459
    9. '=m' → logprob: -16.8750057220459
    10. ')' → logprob: -17.6250057220459

Token 778: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.650518920039758e-06
    2. ' MOD' → logprob: -13.000003814697266
    3. '10' → logprob: -14.125003814697266
    4. 'None' → logprob: -15.875003814697266
    5. '_MOD' → logprob: -16.125003814697266
    6. 'int' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.250003814697266
    8. '0' → logprob: -17.000003814697266
    9. '100' → logprob: -17.125003814697266
    10. 'm' → logprob: -17.250003814697266

Token 779: 'NUM' (ID: 30776)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5759642124176025
    2. 'NUM' → logprob: -0.8259642124176025
    3. 'OD' → logprob: -10.825963973999023
    4. '```' → logprob: -13.825963973999023
    5. 'num' → logprob: -14.075963973999023
    6. '_MOD' → logprob: -14.200963973999023
    7. '0' → logprob: -14.575963973999023
    8. '100' → logprob: -15.200963973999023
    9. '_NUM' → logprob: -15.575963973999023
    10. ' MOD' → logprob: -15.700963973999023

Token 780: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2522940933704376
    2. '):
' → logprob: -1.5022940635681152
    3. '):
' → logprob: -8.002294540405273
    4. ')' → logprob: -11.127294540405273
    5. '):

' → logprob: -11.627294540405273
    6. '   ' → logprob: -12.752294540405273
    7. ' ):' → logprob: -12.877294540405273
    8. ' ):
' → logprob: -14.627294540405273
    9. ',' → logprob: -15.252294540405273
    10. '):

' → logprob: -15.752294540405273

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1454712152481079
    2. ' if' → logprob: -2.0204710960388184
    3. 'if' → logprob: -6.020471096038818
    4. '	if' → logprob: -8.145471572875977
    5. '```' → logprob: -11.395471572875977
    6. '    
' → logprob: -11.520471572875977
    7. ' return' → logprob: -11.520471572875977
    8. '   ' → logprob: -12.145471572875977
    9. ':' → logprob: -12.395471572875977
    10. '    ' → logprob: -12.395471572875977

Token 782: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0030689798295497894
    2. '   ' → logprob: -5.878068923950195
    3. 'while' → logprob: -9.128068923950195
    4. 'r' → logprob: -9.628068923950195
    5. ' if' → logprob: -10.628068923950195
    6. 'f' → logprob: -11.128068923950195
    7. 'res' → logprob: -11.253068923950195
    8. 'return' → logprob: -11.378068923950195
    9. 'k' → logprob: -11.878068923950195
    10. 'inv' → logprob: -12.503068923950195

Token 783: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5791171193122864
    2. 'operator' → logprob: -0.8291171193122864
    3. 'fun' → logprob: -6.079117298126221
    4. 'sys' → logprob: -7.329117298126221
    5. 'it' → logprob: -10.079116821289062
    6. 'heap' → logprob: -10.329116821289062
    7. '__' → logprob: -10.454116821289062
    8. '_operator' → logprob: -10.454116821289062
    9. ' operator' → logprob: -10.579116821289062
    10. 'collections' → logprob: -11.079116821289062

Token 784: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10391373187303543
    2. ' import' → logprob: -2.3539137840270996
    3. '<|end|>' → logprob: -6.8539137840271
    4. '```' → logprob: -7.4789137840271
    5. '_import' → logprob: -7.6039137840271
    6. '	import' → logprob: -7.8539137840271
    7. '#import' → logprob: -8.353913307189941
    8. 'def' → logprob: -8.603913307189941
    9. 'imports' → logprob: -8.978913307189941
    10. '
' → logprob: -9.353913307189941

Token 785: ' factorial' (ID: 111204)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.5516231060028076
    2. 'comb' → logprob: -1.1766231060028076
    3. 'factor' → logprob: -2.5516231060028076
    4. 'is' → logprob: -4.051623344421387
    5. 'ceil' → logprob: -4.426623344421387
    6. 'sqrt' → logprob: -6.301623344421387
    7. 'inf' → logprob: -6.426623344421387
    8. 'dist' → logprob: -6.801623344421387
    9. 'log' → logprob: -6.801623344421387
    10. '```' → logprob: -7.301623344421387

Token 786: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.8202236294746399
    2. 'as' → logprob: -1.3202235698699951
    3. 'import' → logprob: -1.8202235698699951
    4. '<|end|>' → logprob: -2.445223569869995
    5. '<|end|>' → logprob: -3.695223569869995
    6. 'def' → logprob: -4.820223808288574
    7. ' ' → logprob: -6.945223808288574
    8. 'factor' → logprob: -7.070223808288574
    9. '(N' → logprob: -7.195223808288574
    10. ')' → logprob: -7.195223808288574

Token 787: ' FF' (ID: 54537)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.6899195909500122
    2. '_factor' → logprob: -0.9399195909500122
    3. 'factor' → logprob: -2.6899194717407227
    4. '_fac' → logprob: -3.9399194717407227
    5. 'fact' → logprob: -4.064919471740723
    6. ' factorial' → logprob: -5.814919471740723
    7. '_f' → logprob: -9.314919471740723
    8. 'fac' → logprob: -9.689919471740723
    9. '.factor' → logprob: -10.564919471740723
    10. 'f' → logprob: -11.064919471740723

Token 788: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5924347639083862
    2. '_factor' → logprob: -1.7174347639083862
    3. 'f' → logprob: -2.467434883117676
    4. 'def' → logprob: -2.592434883117676
    5. '_ff' → logprob: -3.592434883117676
    6. '_f' → logprob: -4.342434883117676
    7. 'import' → logprob: -4.467434883117676
    8. '(N' → logprob: -5.217434883117676
    9. 'factor' → logprob: -5.217434883117676
    10. 'F' → logprob: -5.467434883117676

Token 789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004826323129236698
    2. ' if' → logprob: -5.379826545715332
    3. 'if' → logprob: -9.254826545715332
    4. '
' → logprob: -10.629826545715332
    5. 'def' → logprob: -10.629826545715332
    6. 'n' → logprob: -10.879826545715332
    7. '	if' → logprob: -11.629826545715332
    8. '   ' → logprob: -12.129826545715332
    9. ' return' → logprob: -12.379826545715332
    10. ' def' → logprob: -12.504826545715332

Token 790: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.520264744758606
    2. 'if' (adapté à ' if') → logprob: -1.020264744758606
    3. '   ' → logprob: -3.1452646255493164
    4. ' return' → logprob: -7.145264625549316
    5. 'return' → logprob: -7.895264625549316
    6. 'n' → logprob: -8.520264625549316
    7. ' f' → logprob: -9.145264625549316
    8. ' n' → logprob: -9.270264625549316
    9. ' numerator' → logprob: -9.270264625549316
    10. ' inv' → logprob: -9.645264625549316

Token 791: ' min' (ID: 1349)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11676935106515884
    2. 'len' → logprob: -3.241769313812256
    3. 'fl' → logprob: -3.491769313812256
    4. 'not' → logprob: -3.741769313812256
    5. ' K' → logprob: -4.991769313812256
    6. 'N' → logprob: -5.366769313812256
    7. ' not' → logprob: -5.991769313812256
    8. 'False' → logprob: -7.241769313812256
    9. 'F' → logprob: -7.491769313812256
    10. 'FL' → logprob: -7.991769313812256

Token 792: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22602425515651703
    2. '(K' → logprob: -1.6010242700576782
    3. '(' → logprob: -7.601024150848389
    4. 'K' → logprob: -9.601024627685547
    5. '((' → logprob: -11.476024627685547
    6. 'N' → logprob: -11.851024627685547
    7. '(
' → logprob: -12.101024627685547
    8. '(k' → logprob: -12.601024627685547
    9. '   ' → logprob: -12.601024627685547
    10. ' (' → logprob: -12.726024627685547

Token 793: ',K' (ID: 107147)
  Prédit: ',K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.16142475605010986
    2. ',' → logprob: -1.9114247560501099
    3. '<K' → logprob: -6.91142463684082
    4. 'K' → logprob: -9.91142463684082
    5. ',N' → logprob: -10.16142463684082
    6. ' ,' → logprob: -10.16142463684082
    7. '==' → logprob: -11.03642463684082
    8. '-K' → logprob: -11.66142463684082
    9. '_,' → logprob: -12.03642463684082
    10. ')' → logprob: -12.03642463684082

Token 794: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5916306376457214
    2. ')==' → logprob: -0.9666306376457214
    3. ',' → logprob: -3.841630697250366
    4. ',K' → logprob: -3.966630697250366
    5. '==' → logprob: -4.466630458831787
    6. ',N' → logprob: -5.341630458831787
    7. ')>=' → logprob: -5.716630458831787
    8. ')<' → logprob: -6.591630458831787
    9. ')>' → logprob: -6.716630458831787
    10. ' ==' → logprob: -7.091630458831787

Token 795: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.721228368813172e-05
    2. ' ' → logprob: -9.375086784362793
    3. '1' → logprob: -13.875086784362793
    4. 'K' → logprob: -14.125086784362793
    5. '=' → logprob: -15.250086784362793
    6. '2' → logprob: -16.56258773803711
    7. '(' → logprob: -16.68758773803711
    8. '```' → logprob: -16.68758773803711
    9. '۰' → logprob: -16.75008773803711
    10. ' K' → logprob: -17.43758773803711

Token 796: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16938115656375885
    2. ':' → logprob: -1.9193811416625977
    3. ':return' → logprob: -4.794381141662598
    4. '   ' → logprob: -8.044381141662598
    5. ' :' → logprob: -8.169381141662598
    6. 'or' → logprob: -9.794381141662598
    7. ':
' → logprob: -9.794381141662598
    8. ' and' → logprob: -10.294381141662598
    9. ' return' → logprob: -10.919381141662598
    10. '):' → logprob: -10.919381141662598

Token 797: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00020354038861114532
    2. 'N' → logprob: -8.750203132629395
    3. ' K' → logprob: -10.250203132629395
    4. '   ' → logprob: -12.500203132629395
    5. '  ' → logprob: -13.000203132629395
    6. ' ' → logprob: -13.625203132629395
    7. 'max' → logprob: -13.875203132629395
    8. 'min' → logprob: -14.625203132629395
    9. '(K' → logprob: -14.625203132629395
    10. '(' → logprob: -15.875203132629395

Token 798: '<K' (ID: 47827)
  Prédit: '<K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<K' → logprob: -0.18418559432029724
    2. '<' → logprob: -1.9341856241226196
    3. ' <' → logprob: -3.80918550491333
    4. '<N' → logprob: -6.55918550491333
    5. '<Key' → logprob: -10.684185981750488
    6. '<Q' → logprob: -11.434185981750488
    7. '+' → logprob: -11.684185981750488
    8. '<len' → logprob: -12.309185981750488
    9. '-K' → logprob: -12.684185981750488
    10. 'K' → logprob: -12.934185981750488

Token 799: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09623697400093079
    2. ':return' → logprob: -2.4712369441986084
    3. ':
' → logprob: -5.0962371826171875
    4. ' or' → logprob: -7.8462371826171875
    5. '):' → logprob: -8.096237182617188
    6. ' return' → logprob: -9.096237182617188
    7. 'return' → logprob: -9.471237182617188
    8. '   ' → logprob: -9.596237182617188
    9. '==' → logprob: -9.971237182617188
    10. ' :' → logprob: -10.221237182617188

Token 800: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6854120492935181
    2. '   ' → logprob: -1.185412049293518
    3. 'return' → logprob: -1.685412049293518
    4. '       ' → logprob: -5.8104119300842285
    5. '	return' → logprob: -6.1854119300842285
    6. '
' → logprob: -10.685412406921387
    7. '{return' → logprob: -11.185412406921387
    8. ':return' → logprob: -11.310412406921387
    9. ' ' → logprob: -11.685412406921387
    10. '0' → logprob: -12.310412406921387

Token 801: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. '
' → logprob: -17.37500762939453
    5. '  ' → logprob: -18.37500762939453
    6. '```' → logprob: -18.50000762939453
    7. 'None' → logprob: -19.87500762939453
    8. '    ' → logprob: -19.87500762939453
    9. '    
' → logprob: -20.25000762939453
    10. '[' → logprob: -20.25000762939453

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'int' → logprob: -16.875001907348633
    4. '```' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '`' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. 'None' → logprob: -20.125001907348633
    9. '1' → logprob: -20.500001907348633
    10. '000' → logprob: -20.750001907348633

Token 803: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015130772953853011
    2. '
' → logprob: -6.6265130043029785
    3. 'def' → logprob: -9.626513481140137
    4. '    
' → logprob: -9.626513481140137
    5. ',' → logprob: -11.251513481140137
    6. ' if' → logprob: -11.751513481140137
    7. 'if' → logprob: -11.876513481140137
    8. '<|end|>' → logprob: -12.126513481140137
    9. 'return' → logprob: -12.876513481140137
    10. '#' → logprob: -12.876513481140137

Token 804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006916418671607971
    2. ' if' → logprob: -5.131916522979736
    3. 'if' → logprob: -7.506916522979736
    4. ')' → logprob: -9.756916046142578
    5. 'def' → logprob: -10.006916046142578
    6. '```' → logprob: -10.131916046142578
    7. ' return' → logprob: -10.381916046142578
    8. '    
' → logprob: -10.381916046142578
    9. '    ' → logprob: -10.506916046142578
    10. '.' → logprob: -10.631916046142578

Token 805: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16666102409362793
    2. '   ' → logprob: -2.166661024093628
    3. ' if' → logprob: -3.291661024093628
    4. 'f' → logprob: -7.166661262512207
    5. 'inv' → logprob: -8.166661262512207
    6. 'fact' → logprob: -9.291661262512207
    7. ' f' → logprob: -9.541661262512207
    8. 'r' → logprob: -9.666661262512207
    9. 'fl' → logprob: -10.041661262512207
    10. 'n' → logprob: -10.041661262512207

Token 806: ' N' (ID: 478)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0575079582631588
    2. 'fl' → logprob: -3.5575079917907715
    3. ' not' → logprob: -4.1825079917907715
    4. 'len' → logprob: -4.6825079917907715
    5. 'K' → logprob: -6.0575079917907715
    6. 'N' → logprob: -8.182507514953613
    7. '(not' → logprob: -9.432507514953613
    8. ' fl' → logprob: -9.682507514953613
    9. '(fl' → logprob: -10.932507514953613
    10. ' len' → logprob: -11.057507514953613

Token 807: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7481958270072937
    2. '<' → logprob: -1.1231958866119385
    3. ' ==' → logprob: -2.9981958866119385
    4. ' <' → logprob: -2.9981958866119385
    5. '<K' → logprob: -3.2481958866119385
    6. '<N' → logprob: -3.2481958866119385
    7. '<len' → logprob: -4.248195648193359
    8. '>=' → logprob: -5.498195648193359
    9. ' in' → logprob: -6.498195648193359
    10. ' not' → logprob: -7.123195648193359

Token 808: '0' (ID: 15)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0019331586081534624
    2. '0' → logprob: -6.2519330978393555
    3. ' K' → logprob: -12.751933097839355
    4. ' ' → logprob: -13.751933097839355
    5. '   ' → logprob: -16.001934051513672
    6. '1' → logprob: -16.626934051513672
    7. '```' → logprob: -16.751934051513672
    8. '  ' → logprob: -16.876934051513672
    9. '=' → logprob: -16.876934051513672
    10. '
' → logprob: -17.126934051513672

Token 809: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.48616987466812134
    2. 'and' → logprob: -0.9861698746681213
    3. ':' → logprob: -4.986169815063477
    4. ':return' → logprob: -5.611169815063477
    5. '   ' → logprob: -6.986169815063477
    6. ' or' → logprob: -7.486169815063477
    7. ':
' → logprob: -10.736169815063477
    8. 'or' → logprob: -11.611169815063477
    9. 'return' → logprob: -12.236169815063477
    10. ' ' → logprob: -12.611169815063477

Token 810: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0026525864377617836
    2. ' K' → logprob: -6.252652645111084
    3. 'N' → logprob: -7.252652645111084
    4. '   ' → logprob: -11.877652168273926
    5. 'min' → logprob: -13.252652168273926
    6. ' N' → logprob: -13.377652168273926
    7. ' ' → logprob: -13.877652168273926
    8. '  ' → logprob: -14.127652168273926
    9. '(' → logprob: -14.752652168273926
    10. '    ' → logprob: -15.002652168273926

Token 811: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002850998193025589
    2. ' ==' → logprob: -5.8778510093688965
    3. '0' → logprob: -10.877850532531738
    4. ')==' → logprob: -11.002850532531738
    5. ']==' → logprob: -12.002850532531738
    6. '()==' → logprob: -12.877850532531738
    7. '===' → logprob: -15.002850532531738
    8. ' ' → logprob: -15.002850532531738
    9. '```' → logprob: -15.252850532531738
    10. '==-' → logprob: -15.377850532531738

Token 812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. 'K' → logprob: -11.000040054321289
    3. 'N' → logprob: -11.125040054321289
    4. ' ' → logprob: -11.875040054321289
    5. '1' → logprob: -14.625040054321289
    6. '```' → logprob: -14.625040054321289
    7. '   ' → logprob: -14.750040054321289
    8. '(' → logprob: -17.00004005432129
    9. '(N' → logprob: -17.00004005432129
    10. '  ' → logprob: -17.18754005432129

Token 813: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009252764866687357
    2. ':return' → logprob: -7.125925064086914
    3. ':
' → logprob: -9.500925064086914
    4. '   ' → logprob: -10.500925064086914
    5. ' or' → logprob: -11.375925064086914
    6. ' :' → logprob: -12.000925064086914
    7. ' and' → logprob: -15.125925064086914
    8. '  ' → logprob: -15.625925064086914
    9. ' ' → logprob: -16.000925064086914
    10. '       ' → logprob: -17.000925064086914

Token 814: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5686981081962585
    2. '   ' → logprob: -1.3186981678009033
    3. 'return' → logprob: -1.8186981678009033
    4. '       ' → logprob: -5.568697929382324
    5. '	return' → logprob: -9.068697929382324
    6. '1' → logprob: -9.943697929382324
    7. ' ' → logprob: -10.943697929382324
    8. '  ' → logprob: -11.568697929382324
    9. ':return' → logprob: -12.068697929382324
    10. '    ' → logprob: -12.693697929382324

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.25001049041748
    4. 'int' → logprob: -18.125009536743164
    5. '  ' → logprob: -19.000009536743164
    6. '(' → logprob: -20.125009536743164
    7. '۱' → logprob: -20.375009536743164
    8. '１' → logprob: -21.125009536743164
    9. '    ' → logprob: -21.312509536743164
    10. '{' → logprob: -21.500009536743164

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'int' → logprob: -15.250000953674316
    4. '(' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '0' → logprob: -18.125
    7. '{' → logprob: -18.875
    8. '۱' → logprob: -19.8125
    9. '１' → logprob: -20.5
    10. '  ' → logprob: -20.625

Token 817: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.876193169271573e-05
    2. ' if' → logprob: -10.125088691711426
    3. '
' → logprob: -11.375088691711426
    4. 'if' → logprob: -11.625088691711426
    5. '    
' → logprob: -11.875088691711426
    6. ',' → logprob: -12.125088691711426
    7. 'def' → logprob: -12.375088691711426
    8. '```' → logprob: -12.750088691711426
    9. 'return' → logprob: -13.125088691711426
    10. ' return' → logprob: -13.375088691711426

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007903324440121651
    2. 'if' → logprob: -7.250790119171143
    3. ' if' → logprob: -9.7507905960083
    4. '
' → logprob: -11.6257905960083
    5. 'def' → logprob: -12.0007905960083
    6. '```' → logprob: -13.5007905960083
    7. 'return' → logprob: -13.6257905960083
    8. ',' → logprob: -14.0007905960083
    9. 'from' → logprob: -14.0007905960083
    10. '    
' → logprob: -14.6257905960083

Token 819: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22693777084350586
    2. '   ' → logprob: -1.7269377708435059
    3. ' if' → logprob: -3.851937770843506
    4. 'f' → logprob: -6.851937770843506
    5. 'inv' → logprob: -6.851937770843506
    6. 'num' → logprob: -7.851937770843506
    7. 'fact' → logprob: -8.351938247680664
    8. 'numer' → logprob: -8.476938247680664
    9. 'fl' → logprob: -8.851938247680664
    10. ' ' → logprob: -9.226938247680664

Token 820: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.40760916471481323
    2. 'K' → logprob: -1.907609224319458
    3. 'len' → logprob: -2.532609224319458
    4. 'fl' → logprob: -2.657609224319458
    5. ' not' → logprob: -3.907609224319458
    6. 'N' → logprob: -4.282608985900879
    7. ' K' → logprob: -7.282608985900879
    8. 'min' → logprob: -7.532608985900879
    9. ' len' → logprob: -7.907608985900879
    10. ' fl' → logprob: -8.407608985900879

Token 821: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00016671013145241886
    2. '(fl' → logprob: -8.750166893005371
    3. '(' → logprob: -12.500166893005371
    4. '(F' → logprob: -13.250166893005371
    5. 'fl' → logprob: -13.875166893005371
    6. '(lst' → logprob: -14.125166893005371
    7. '_f' → logprob: -14.875166893005371
    8. '(flat' → logprob: -15.375166893005371
    9. '(
' → logprob: -16.375165939331055
    10. '	fl' → logprob: -16.625165939331055

Token 822: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0006708591827191412
    2. 'fl' → logprob: -7.500670909881592
    3. 'ilst' → logprob: -10.500670433044434
    4. 'll' → logprob: -11.250670433044434
    5. '_lst' → logprob: -11.250670433044434
    6. 'lg' → logprob: -11.375670433044434
    7. 'l' → logprob: -11.500670433044434
    8. '(lst' → logprob: -11.875670433044434
    9. '=' → logprob: -12.000670433044434
    10. 'tl' → logprob: -12.125670433044434

Token 823: ')' (ID: 8)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.5080510377883911
    2. '==' → logprob: -1.2580510377883911
    3. ')' → logprob: -2.2580509185791016
    4. ' ==' → logprob: -5.883050918579102
    5. ')<' → logprob: -6.008050918579102
    6. ')>' → logprob: -7.258050918579102
    7. '<' → logprob: -7.258050918579102
    8. ')<=' → logprob: -7.508050918579102
    9. 'and' → logprob: -8.008050918579102
    10. ' and' → logprob: -8.008050918579102

Token 824: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32415834069252014
    2. '<' → logprob: -1.5741583108901978
    3. '<=' → logprob: -3.1991584300994873
    4. '<len' → logprob: -4.824158191680908
    5. '>=' → logprob: -5.324158191680908
    6. ' ==' → logprob: -5.324158191680908
    7. '>' → logprob: -5.574158191680908
    8. '<n' → logprob: -6.449158191680908
    9. '<N' → logprob: -6.699158191680908
    10. '<f' → logprob: -6.949158191680908

Token 825: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0382557287812233
    2. 'max' → logprob: -3.2882556915283203
    3. 'K' → logprob: -8.78825569152832
    4. '0' → logprob: -10.41325569152832
    5. ' max' → logprob: -10.78825569152832
    6. ' N' → logprob: -11.53825569152832
    7. '1' → logprob: -14.53825569152832
    8. 'min' → logprob: -15.53825569152832
    9. ' ' → logprob: -15.66325569152832
    10. '(max' → logprob: -15.78825569152832

Token 826: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04488460719585419
    2. ':
' → logprob: -4.04488468170166
    3. ':return' → logprob: -4.16988468170166
    4. '   ' → logprob: -4.91988468170166
    5. ' or' → logprob: -6.41988468170166
    6. '):
' → logprob: -7.79488468170166
    7. ':def' → logprob: -7.91988468170166
    8. 'def' → logprob: -8.04488468170166
    9. '):' → logprob: -8.91988468170166
    10. 'or' → logprob: -9.29488468170166

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4820763170719147
    2. '   ' → logprob: -0.9820762872695923
    3. ':' → logprob: -5.982076168060303
    4. '    ' → logprob: -6.482076168060303
    5. ' return' → logprob: -7.357076168060303
    6. '<|end|>' → logprob: -7.357076168060303
    7. '[' → logprob: -7.732076168060303
    8. ' def' → logprob: -8.107076644897461
    9. '```' → logprob: -8.232076644897461
    10. '     ' → logprob: -8.857076644897461

Token 828: ' A' (ID: 355)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.004128149710595608
    2. ' fl' → logprob: -5.6291279792785645
    3. '   ' → logprob: -7.7541279792785645
    4. 'for' → logprob: -10.629128456115723
    5. '	fl' → logprob: -11.254128456115723
    6. 'fn' → logprob: -11.379128456115723
    7. 'return' → logprob: -11.754128456115723
    8. 'f' → logprob: -11.754128456115723
    9. 'arr' → logprob: -11.754128456115723
    10. 'flen' → logprob: -12.004128456115723

Token 829: ',B' (ID: 19853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44202369451522827
    2. ' =' → logprob: -1.067023754119873
    3. '.extend' → logprob: -5.067023754119873
    4. '=f' → logprob: -5.192023754119873
    5. '+=' → logprob: -6.817023754119873
    6. ' +=' → logprob: -8.817023277282715
    7. '.append' → logprob: -9.317023277282715
    8. '=[]
' → logprob: -11.817023277282715
    9. '[:]' → logprob: -11.817023277282715
    10. 'pp' → logprob: -12.442023277282715

Token 830: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11424741894006729
    2. ' =' → logprob: -2.6142473220825195
    3. '=f' → logprob: -3.3642473220825195
    4. '=A' → logprob: -9.61424732208252
    5. '=[' → logprob: -10.36424732208252
    6. '=[]' → logprob: -11.36424732208252
    7. ',f' → logprob: -11.36424732208252
    8. '=[]
' → logprob: -12.23924732208252
    9. '=C' → logprob: -12.36424732208252
    10. '=len' → logprob: -12.48924732208252

Token 831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5831068754196167
    2. '=' → logprob: -0.8331068754196167
    3. '=f' → logprob: -4.958106994628906
    4. '=len' → logprob: -10.833106994628906
    5. '=[]' → logprob: -11.083106994628906
    6. '=[' → logprob: -11.208106994628906
    7. '   ' → logprob: -11.208106994628906
    8. ',f' → logprob: -11.208106994628906
    9. '=[]
' → logprob: -11.333106994628906
    10. ',' → logprob: -11.583106994628906

Token 832: ' FF' (ID: 54537)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0036512718070298433
    2. 'fl' → logprob: -6.003651142120361
    3. ' fact' → logprob: -7.128651142120361
    4. 'f' → logprob: -8.62865161895752
    5. '(f' → logprob: -9.50365161895752
    6. 'factor' → logprob: -10.75365161895752
    7. '[' → logprob: -10.87865161895752
    8. 'fst' → logprob: -11.37865161895752
    9. 'fac' → logprob: -11.50365161895752
    10. '(' → logprob: -11.87865161895752

Token 833: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002043748099822551
    2. ' =' → logprob: -9.125204086303711
    3. '(' → logprob: -10.000204086303711
    4. '(n' → logprob: -10.500204086303711
    5. 'import' → logprob: -12.750204086303711
    6. ',' → logprob: -12.875204086303711
    7. '=N' → logprob: -13.125204086303711
    8. ',N' → logprob: -13.250204086303711
    9. '(F' → logprob: -13.375204086303711
    10. '=' → logprob: -13.375204086303711

Token 834: ')%' (ID: 57656)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00012237003829795867
    2. '+' → logprob: -9.3751220703125
    3. '-' → logprob: -11.3751220703125
    4. ')' → logprob: -11.3751220703125
    5. ' ),' → logprob: -12.6251220703125
    6. '()),' → logprob: -13.2501220703125
    7. ',),' → logprob: -13.3751220703125
    8. '-K' → logprob: -13.8751220703125
    9. '   ' → logprob: -13.8751220703125
    10. '),(' → logprob: -14.0001220703125

Token 835: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05501396581530571
    2. 'MOD' → logprob: -2.93001389503479
    3. ' m' → logprob: -9.805013656616211
    4. '(m' → logprob: -10.680013656616211
    5. '10' → logprob: -11.555013656616211
    6. 'mod' → logprob: -11.555013656616211
    7. ' MOD' → logprob: -11.680013656616211
    8. '100' → logprob: -12.180013656616211
    9. '```' → logprob: -12.680013656616211
    10. '
' → logprob: -12.930013656616211

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005208624061197042
    2. ',B' → logprob: -8.125520706176758
    3. ',D' → logprob: -9.500520706176758
    4. ',A' → logprob: -9.750520706176758
    5. ',f' → logprob: -10.125520706176758
    6. ' ,' → logprob: -10.375520706176758
    7. ',F' → logprob: -11.125520706176758
    8. ',b' → logprob: -13.625520706176758
    9. ',p' → logprob: -14.500520706176758
    10. ',E' → logprob: -14.625520706176758

Token 837: ' FF' (ID: 54537)
  Prédit: 'FF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'FF' → logprob: -0.09037378430366516
    2. '1' → logprob: -3.0903737545013428
    3. 'inv' → logprob: -4.090373992919922
    4. 'pow' → logprob: -4.590373992919922
    5. '_ff' → logprob: -5.340373992919922
    6. '(' → logprob: -6.090373992919922
    7. 'fact' → logprob: -6.215373992919922
    8. '_' → logprob: -6.340373992919922
    9. 'ff' → logprob: -7.090373992919922
    10. '_F' → logprob: -7.965373992919922

Token 838: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.005339655559509993
    2. 'K' → logprob: -5.255339622497559
    3. '(N' → logprob: -10.130339622497559
    4. '(' → logprob: -10.380339622497559
    5. '   ' → logprob: -11.505339622497559
    6. '[K' → logprob: -12.630339622497559
    7. '
' → logprob: -12.880339622497559
    8. '```' → logprob: -13.130339622497559
    9. '{' → logprob: -13.505339622497559
    10. ' (' → logprob: -13.505339622497559

Token 839: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0001673061487963423
    2. '%m' → logprob: -9.250166893005371
    3. ')' → logprob: -9.625166893005371
    4. ')m' → logprob: -13.000166893005371
    5. '   ' → logprob: -14.000166893005371
    6. ']%' → logprob: -14.625166893005371
    7. '}%' → logprob: -15.000166893005371
    8. '%n' → logprob: -15.375166893005371
    9. 'm' → logprob: -15.375166893005371
    10. ' ' → logprob: -15.375166893005371

Token 840: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.704273118884885e-07
    2. ' m' → logprob: -14.625000953674316
    3. '(m' → logprob: -16.5
    4. '%m' → logprob: -19.5
    5. '   ' → logprob: -20.0
    6. '{' → logprob: -20.125
    7. 'м' → logprob: -20.125
    8. '	m' → logprob: -20.375
    9. 'MOD' → logprob: -20.5
    10. ')m' → logprob: -20.625

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013916619354858994
    2. ' ,' → logprob: -6.626391887664795
    3. '   ' → logprob: -10.876391410827637
    4. ',B' → logprob: -10.876391410827637
    5. ',A' → logprob: -10.876391410827637
    6. ',
' → logprob: -13.001391410827637
    7. ',m' → logprob: -13.501391410827637
    8. ',D' → logprob: -13.751391410827637
    9. ',C' → logprob: -14.001391410827637
    10. ',b' → logprob: -14.376391410827637

Token 842: ' FF' (ID: 54537)
  Prédit: 'FF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FF' → logprob: -0.0004897649050690234
    2. ' FF' → logprob: -7.625489711761475
    3. 'FA' → logprob: -13.750490188598633
    4. '   ' → logprob: -15.250490188598633
    5. '(' → logprob: -15.875490188598633
    6. '  ' → logprob: -16.500490188598633
    7. ' ' → logprob: -16.625490188598633
    8. 'FFF' → logprob: -17.250490188598633
    9. 'FO' → logprob: -17.750490188598633
    10. 'FFFF' → logprob: -18.500490188598633

Token 843: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00019865304057020694
    2. '((' → logprob: -8.625198364257812
    3. 'N' → logprob: -11.750198364257812
    4. '(K' → logprob: -12.750198364257812
    5. '   ' → logprob: -13.250198364257812
    6. ' (' → logprob: -13.250198364257812
    7. '(n' → logprob: -13.250198364257812
    8. '(M' → logprob: -13.875198364257812
    9. '(' → logprob: -14.125198364257812
    10. '(L' → logprob: -14.375198364257812

Token 844: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.00018816311785485595
    2. ' -' → logprob: -8.625187873840332
    3. ')%' → logprob: -12.375187873840332
    4. ')' → logprob: -13.500187873840332
    5. '-C' → logprob: -13.750187873840332
    6. 'K' → logprob: -14.500187873840332
    7. '   ' → logprob: -14.875187873840332
    8. '-%' → logprob: -15.000187873840332
    9. '-k' → logprob: -15.625187873840332
    10. '-К' → logprob: -16.00018882751465

Token 845: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.008059397339820862
    2. '%m' → logprob: -4.883059501647949
    3. ')' → logprob: -7.883059501647949
    4. ' %' → logprob: -10.75805950164795
    5. ')m' → logprob: -11.25805950164795
    6. '%' → logprob: -11.38305950164795
    7. '()%' → logprob: -11.38305950164795
    8. '%n' → logprob: -12.63305950164795
    9. ']%' → logprob: -12.63305950164795
    10. '   ' → logprob: -12.63305950164795

Token 846: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -15.875
    3. 'MOD' → logprob: -18.625
    4. 'м' → logprob: -18.75
    5. '   ' → logprob: -19.375
    6. '{' → logprob: -19.5
    7. '
' → logprob: -19.5
    8. '	m' → logprob: -19.625
    9. '%m' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 847: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5312156081199646
    2. ',' → logprob: -1.4062156677246094
    3. '<|end|>' → logprob: -1.9062156677246094
    4. ')' → logprob: -4.531215667724609
    5. '<|end|>' → logprob: -6.406215667724609
    6. ' return' → logprob: -6.656215667724609
    7. 'return' → logprob: -7.156215667724609
    8. '[' → logprob: -7.531215667724609
    9. ':return' → logprob: -7.531215667724609
    10. '  ' → logprob: -7.906215667724609

Token 848: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04817620664834976
    2. ',' → logprob: -3.1731762886047363
    3. 'return' → logprob: -6.423176288604736
    4. ')' → logprob: -6.548176288604736
    5. ' return' → logprob: -7.048176288604736
    6. '```' → logprob: -8.548175811767578
    7. ';' → logprob: -8.673175811767578
    8. ',
' → logprob: -8.923175811767578
    9. ':return' → logprob: -8.923175811767578
    10. '[' → logprob: -9.048175811767578

Token 849: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037277232855558395
    2. ')' → logprob: -4.0372772216796875
    3. '<|end|>' → logprob: -4.4122772216796875
    4. ',' → logprob: -6.1622772216796875
    5. ';' → logprob: -6.4122772216796875
    6. ':return' → logprob: -7.2872772216796875
    7. ' return' → logprob: -7.4122772216796875
    8. ':' → logprob: -7.7872772216796875
    9. '       ' → logprob: -8.412277221679688
    10. '.' → logprob: -8.537277221679688

Token 850: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17956940829753876
    2. ':' → logprob: -1.9295693635940552
    3. ':
' → logprob: -5.054569244384766
    4. ' return' → logprob: -5.179569244384766
    5. ',' → logprob: -6.554569244384766
    6. ':return' → logprob: -7.054569244384766
    7. 'def' → logprob: -7.304569244384766
    8. 'return' → logprob: -7.429569244384766
    9. ' A' → logprob: -7.679569244384766
    10. '[' → logprob: -7.679569244384766

Token 851: '       ' (ID: 309)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3577488660812378
    2. ' A' → logprob: -1.2327488660812378
    3. '   ' → logprob: -4.732748985290527
    4. 'a' → logprob: -8.732748985290527
    5. '       ' → logprob: -8.982748985290527
    6. ' a' → logprob: -10.357748985290527
    7. 'inv' → logprob: -10.607748985290527
    8. ' inv' → logprob: -10.857748985290527
    9. 'def' → logprob: -11.107748985290527
    10. 'F' → logprob: -11.482748985290527

Token 852: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.05636271834373474
    2. 'return' → logprob: -3.5563626289367676
    3. 'a' → logprob: -4.056362628936768
    4. 'inv' → logprob: -5.306362628936768
    5. '   ' → logprob: -6.306362628936768
    6. ' A' → logprob: -7.556362628936768
    7. 'fact' → logprob: -7.931362628936768
    8. 'f' → logprob: -7.931362628936768
    9. 'def' → logprob: -8.056363105773926
    10. 'num' → logprob: -9.181363105773926

Token 853: ',B' (ID: 19853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035846810787916183
    2. ',' → logprob: -3.785846710205078
    3. ' =' → logprob: -4.410846710205078
    4. '=f' → logprob: -8.160846710205078
    5. ',f' → logprob: -9.660846710205078
    6. '=A' → logprob: -10.785846710205078
    7. '=int' → logprob: -13.285846710205078
    8. '=
' → logprob: -14.160846710205078
    9. ',b' → logprob: -14.410846710205078
    10. ',A' → logprob: -14.660846710205078

Token 854: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3147673010826111
    2. ',' → logprob: -1.6897673606872559
    3. '=C' → logprob: -3.064767360687256
    4. ' =' → logprob: -3.564767360687256
    5. ',C' → logprob: -4.564767360687256
    6. 'C' → logprob: -10.189766883850098
    7. '=f' → logprob: -11.064766883850098
    8. '=A' → logprob: -11.814766883850098
    9. ',f' → logprob: -12.064766883850098
    10. '=B' → logprob: -12.189766883850098

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011056899093091488
    2. ' =' → logprob: -4.511056900024414
    3. ',' → logprob: -12.511056900024414
    4. '=A' → logprob: -13.011056900024414
    5. '=[' → logprob: -14.386056900024414
    6. ':' → logprob: -14.386056900024414
    7. '=f' → logprob: -14.386056900024414
    8. '[' → logprob: -14.636056900024414
    9. '[:]' → logprob: -15.136056900024414
    10. '   ' → logprob: -15.386056900024414

Token 856: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -7.576873758807778e-05
    2. ' fl' → logprob: -10.000075340270996
    3. '(f' → logprob: -10.500075340270996
    4. '(fl' → logprob: -13.875075340270996
    5. '   ' → logprob: -14.875075340270996
    6. '	fl' → logprob: -15.000075340270996
    7. 'f' → logprob: -15.500075340270996
    8. ' (' → logprob: -15.625075340270996
    9. 'fld' → logprob: -16.000076293945312
    10. 'fst' → logprob: -16.375076293945312

Token 857: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -4.127333340875339e-06
    2. 'lst' → logprob: -12.750003814697266
    3. '[' → logprob: -14.375003814697266
    4. 'sl' → logprob: -15.875003814697266
    5. 's' → logprob: -16.125003814697266
    6. 'ст' → logprob: -16.125003814697266
    7. '(lst' → logprob: -16.750003814697266
    8. 'ist' → logprob: -17.125003814697266
    9. 'sts' → logprob: -17.250003814697266
    10. '[]' → logprob: -17.500003814697266

Token 858: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00017553119687363505
    2. '[K' → logprob: -8.750175476074219
    3. 'N' → logprob: -11.000175476074219
    4. '[n' → logprob: -15.750175476074219
    5. '[' → logprob: -15.875175476074219
    6. '_N' → logprob: -17.37517547607422
    7. 'K' → logprob: -17.75017547607422
    8. '(N' → logprob: -18.62517547607422
    9. '[C' → logprob: -19.12517547607422
    10. '	N' → logprob: -19.25017547607422

Token 859: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0042685773223638535
    2. ']' → logprob: -5.504268646240234
    3. ']*' → logprob: -8.879268646240234
    4. '-' → logprob: -10.754268646240234
    5. ']-' → logprob: -11.129268646240234
    6. '-K' → logprob: -11.629268646240234
    7. ' -' → logprob: -13.254268646240234
    8. ' ],' → logprob: -14.004268646240234
    9. '-k' → logprob: -14.004268646240234
    10. ']%' → logprob: -14.129268646240234

Token 860: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -4.7755875129951164e-05
    2. ' fl' → logprob: -10.00004768371582
    3. '	fl' → logprob: -14.00004768371582
    4. ' ' → logprob: -15.12504768371582
    5. '   ' → logprob: -15.37504768371582
    6. '  ' → logprob: -16.12504768371582
    7. '(fl' → logprob: -16.12504768371582
    8. '(f' → logprob: -16.50004768371582
    9. 'FL' → logprob: -16.62504768371582
    10. '(' → logprob: -16.75004768371582

Token 861: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -8.661626634420827e-05
    2. '[' → logprob: -10.250086784362793
    3. 'lst' → logprob: -10.375086784362793
    4. '[N' → logprob: -11.875086784362793
    5. '[K' → logprob: -12.750086784362793
    6. 's' → logprob: -13.500086784362793
    7. '[l' → logprob: -13.750086784362793
    8. 'ist' → logprob: -13.875086784362793
    9. 'sl' → logprob: -14.000086784362793
    10. '[len' → logprob: -14.250086784362793

Token 862: '[K' (ID: 137571)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01252213679254055
    2. '[K' → logprob: -4.387522220611572
    3. '   ' → logprob: -12.387521743774414
    4. '[' → logprob: -12.637521743774414
    5. ' K' → logprob: -13.887521743774414
    6. ' ' → logprob: -13.887521743774414
    7. '```' → logprob: -14.137521743774414
    8. '[N' → logprob: -14.637521743774414
    9. '(K' → logprob: -14.762521743774414
    10. '	K' → logprob: -14.762521743774414

Token 863: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.0206720617134124e-05
    2. ']' → logprob: -11.50001049041748
    3. ' ],' → logprob: -17.000009536743164
    4. '),' → logprob: -17.375009536743164
    5. '],
' → logprob: -17.500009536743164
    6. ''],' → logprob: -18.000009536743164
    7. ',' → logprob: -18.375009536743164
    8. '},' → logprob: -18.375009536743164
    9. ']*' → logprob: -18.375009536743164
    10. '>,' → logprob: -18.500009536743164

Token 864: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.001704579102806747
    2. ' fl' → logprob: -6.376704692840576
    3. '	fl' → logprob: -13.626704216003418
    4. 'fr' → logprob: -14.626704216003418
    5. 'f' → logprob: -15.501704216003418
    6. '   ' → logprob: -15.626704216003418
    7. ' ' → logprob: -16.001705169677734
    8. 'flt' → logprob: -16.626705169677734
    9. 'fld' → logprob: -16.876705169677734
    10. 'FL' → logprob: -17.001705169677734

Token 865: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0003222342347726226
    2. 'lst' → logprob: -9.000322341918945
    3. '[N' → logprob: -9.125322341918945
    4. '[' → logprob: -9.375322341918945
    5. '[n' → logprob: -14.125322341918945
    6. '[C' → logprob: -14.625322341918945
    7. 'rst' → logprob: -14.750322341918945
    8. 'ст' → logprob: -14.875322341918945
    9. 's' → logprob: -15.000322341918945
    10. '[l' → logprob: -15.125322341918945

Token 866: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00023214559769257903
    2. 'N' → logprob: -8.375231742858887
    3. '[' → logprob: -13.750231742858887
    4. '[
' → logprob: -16.000232696533203
    5. ' N' → logprob: -16.375232696533203
    6. '(N' → logprob: -16.375232696533203
    7. '{' → logprob: -16.875232696533203
    8. '	N' → logprob: -17.250232696533203
    9. '```' → logprob: -17.250232696533203
    10. ' [' → logprob: -17.500232696533203

Token 867: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -9.968312951968983e-06
    2. 'K' → logprob: -12.250009536743164
    3. ']' → logprob: -13.125009536743164
    4. ' -' → logprob: -13.250009536743164
    5. '-' → logprob: -14.500009536743164
    6. '-M' → logprob: -15.375009536743164
    7. '```' → logprob: -16.000009536743164
    8. '-К' → logprob: -16.125009536743164
    9. '-k' → logprob: -16.500009536743164
    10. '(K' → logprob: -16.750009536743164

Token 868: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010533124441280961
    2. '])' → logprob: -9.500104904174805
    3. ')' → logprob: -11.750104904174805
    4. '],' → logprob: -12.125104904174805
    5. ')]' → logprob: -12.250104904174805
    6. ' ]' → logprob: -12.750104904174805
    7. '<|end|>' → logprob: -12.750104904174805
    8. ']]' → logprob: -13.250104904174805
    9. ']
' → logprob: -13.250104904174805
    10. '])]' → logprob: -14.125104904174805

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.44443862256594e-05
    2. '```' → logprob: -10.500064849853516
    3. 'return' → logprob: -10.875064849853516
    4. ' return' → logprob: -11.500064849853516
    5. ')' → logprob: -12.750064849853516
    6. ',' → logprob: -13.000064849853516
    7. '       ' → logprob: -14.000064849853516
    8. 'def' → logprob: -14.250064849853516
    9. ':return' → logprob: -15.000064849853516
    10. ':' → logprob: -15.375064849853516

Token 870: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011993973748758435
    2. 'return' (adapté à ' return') → logprob: -6.876199245452881
    3. 'inv' → logprob: -9.751199722290039
    4. 'if' → logprob: -9.876199722290039
    5. ' return' → logprob: -10.376199722290039
    6. '	return' → logprob: -11.751199722290039
    7. '```' → logprob: -13.001199722290039
    8. ',' → logprob: -13.126199722290039
    9. 'def' → logprob: -13.501199722290039
    10. 'rc' → logprob: -13.876199722290039

Token 871: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16576099395751953
    2. 'A' → logprob: -2.4157609939575195
    3. ' (' → logprob: -3.0407609939575195
    4. ' A' → logprob: -4.1657609939575195
    5. '(' → logprob: -9.04076099395752
    6. '((' → logprob: -11.79076099395752
    7. ' ' → logprob: -12.29076099395752
    8. '   ' → logprob: -13.54076099395752
    9. '	A' → logprob: -13.66576099395752
    10. ' ' → logprob: -15.04076099395752

Token 872: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00047106825513765216
    2. '(A' → logprob: -8.125471115112305
    3. ' A' → logprob: -8.750471115112305
    4. '(' → logprob: -11.250471115112305
    5. ' (' → logprob: -13.250471115112305
    6. '   ' → logprob: -13.625471115112305
    7. '	A' → logprob: -15.375471115112305
    8. ' ' → logprob: -15.750471115112305
    9. '  ' → logprob: -15.875471115112305
    10. '((' → logprob: -15.875471115112305

Token 873: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10020969063043594
    2. ' *' → logprob: -2.3502097129821777
    3. '*(' → logprob: -12.85020923614502
    4. '**' → logprob: -14.85020923614502
    5. '*((' → logprob: -17.225210189819336
    6. '*out' → logprob: -18.350210189819336
    7. '*object' → logprob: -18.975210189819336
    8. '*ft' → logprob: -19.225210189819336
    9. '*A' → logprob: -19.475210189819336
    10. ' ' → logprob: -19.600210189819336

Token 874: ' mp' (ID: 11543)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0031578729394823313
    2. ' inv' → logprob: -5.878158092498779
    3. 'pow' → logprob: -8.003157615661621
    4. '(inv' → logprob: -11.128157615661621
    5. ' pow' → logprob: -13.128157615661621
    6. 'in' → logprob: -14.128157615661621
    7. 'inverse' → logprob: -14.253157615661621
    8. 'invert' → logprob: -15.503157615661621
    9. 'int' → logprob: -16.753158569335938
    10. '(' → logprob: -17.003158569335938

Token 875: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -8.149051427608356e-05
    2. '(inv' → logprob: -10.125081062316895
    3. '(' → logprob: -11.000081062316895
    4. 'B' → logprob: -11.375081062316895
    5. '(C' → logprob: -11.750081062316895
    6. 'inv' → logprob: -12.375081062316895
    7. '(in' → logprob: -14.500081062316895
    8. '((' → logprob: -14.750081062316895
    9. '(pow' → logprob: -16.62508201599121
    10. '(
' → logprob: -17.12508201599121

Token 876: ',' (ID: 11)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.23380842804908752
    2. 'inv' → logprob: -2.7338085174560547
    3. ',' → logprob: -3.2338085174560547
    4. '(-' → logprob: -3.2338085174560547
    5. '(' → logprob: -3.9838085174560547
    6. 'm' → logprob: -4.483808517456055
    7. '-' → logprob: -5.108808517456055
    8. '(inv' → logprob: -5.233808517456055
    9. ')' → logprob: -5.608808517456055
    10. '(mod' → logprob: -5.733808517456055

Token 877: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.3557529857498594e-05
    2. '-' → logprob: -11.37502384185791
    3. ' m' → logprob: -11.87502384185791
    4. '-m' → logprob: -12.75002384185791
    5. 'mod' → logprob: -14.12502384185791
    6. '(m' → logprob: -14.37502384185791
    7. '%m' → logprob: -15.37502384185791
    8. 'MOD' → logprob: -15.75002384185791
    9. '-mod' → logprob: -16.125022888183594
    10. '<m' → logprob: -16.250022888183594

Token 878: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00027813989436253905
    2. ' -' → logprob: -8.25027847290039
    3. 'm' → logprob: -11.12527847290039
    4. '-m' → logprob: -13.62527847290039
    5. '   ' → logprob: -15.12527847290039
    6. ' ' → logprob: -16.25027847290039
    7. '(m' → logprob: -16.37527847290039
    8. '  ' → logprob: -16.37527847290039
    9. '2' → logprob: -16.50027847290039
    10. '−' → logprob: -16.75027847290039

Token 879: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '-' → logprob: -10.875020027160645
    3. '```' → logprob: -14.625020027160645
    4. ' -' → logprob: -15.875020027160645
    5. ' ' → logprob: -16.125019073486328
    6. '
' → logprob: -17.625019073486328
    7. '   ' → logprob: -17.750019073486328
    8. '۲' → logprob: -19.000019073486328
    9. 'm' → logprob: -19.312519073486328
    10. '{' → logprob: -19.687519073486328

Token 880: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003661952679976821
    2. ',m' → logprob: -5.753662109375
    3. ' ,' → logprob: -7.878662109375
    4. ')' → logprob: -9.503662109375
    5. '%m' → logprob: -10.628662109375
    6. 'm' → logprob: -13.253662109375
    7. '```' → logprob: -13.503662109375
    8. '-' → logprob: -14.253662109375
    9. '%' → logprob: -14.253662109375
    10. '   ' → logprob: -14.628662109375

Token 881: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.4121114822482923e-06
    2. ' m' → logprob: -12.625003814697266
    3. 'MOD' → logprob: -18.375003814697266
    4. ')' → logprob: -18.500003814697266
    5. '   ' → logprob: -18.750003814697266
    6. 'mod' → logprob: -19.125003814697266
    7. '	m' → logprob: -20.125003814697266
    8. '  ' → logprob: -20.250003814697266
    9. ')m' → logprob: -20.250003814697266
    10. 'м' → logprob: -20.250003814697266

Token 882: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023085770662873983
    2. '))' → logprob: -6.752308368682861
    3. ')%' → logprob: -7.002308368682861
    4. ',' → logprob: -9.37730884552002
    5. ' )' → logprob: -10.00230884552002
    6. '%m' → logprob: -10.12730884552002
    7. '   ' → logprob: -10.62730884552002
    8. ',m' → logprob: -12.00230884552002
    9. ')m' → logprob: -12.12730884552002
    10. '```' → logprob: -12.12730884552002

Token 883: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5468192100524902
    2. '*' → logprob: -0.9218192100524902
    3. ')' → logprob: -4.29681921005249
    4. '%' → logprob: -4.92181921005249
    5. '%m' → logprob: -6.92181921005249
    6. ' %' → logprob: -7.67181921005249
    7. '*m' → logprob: -7.67181921005249
    8. '   ' → logprob: -8.046819686889648
    9. ')%' → logprob: -8.421819686889648
    10. ' ' → logprob: -10.796819686889648

Token 884: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -9.615255839889869e-05
    2. ' mp' → logprob: -9.250096321105957
    3. '	mp' → logprob: -17.12509536743164
    4. '(mp' → logprob: -18.12509536743164
    5. '   ' → logprob: -19.50009536743164
    6. '  ' → logprob: -20.12509536743164
    7. ' ' → logprob: -20.87509536743164
    8. '
' → logprob: -21.37509536743164
    9. '    ' → logprob: -22.00009536743164
    10. '.mp' → logprob: -22.25009536743164

Token 885: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0001911432045744732
    2. 'C' → logprob: -8.625190734863281
    3. '(' → logprob: -11.500190734863281
    4. ' (' → logprob: -14.500190734863281
    5. '	C' → logprob: -15.125190734863281
    6. ')' → logprob: -15.625190734863281
    7. ' C' → logprob: -16.00019073486328
    8. '((' → logprob: -16.25019073486328
    9. '(
' → logprob: -16.50019073486328
    10. '(CC' → logprob: -16.50019073486328

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010027815587818623
    2. ',m' → logprob: -4.635027885437012
    3. '(' → logprob: -9.010027885437012
    4. ' ,' → logprob: -9.135027885437012
    5. '(m' → logprob: -10.260027885437012
    6. '<|end|>' → logprob: -12.885027885437012
    7. ')' → logprob: -14.010027885437012
    8. ',n' → logprob: -14.385027885437012
    9. 'm' → logprob: -14.385027885437012
    10. ',M' → logprob: -14.635027885437012

Token 887: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023246755823493004
    2. ' m' → logprob: -3.7732467651367188
    3. '   ' → logprob: -14.773246765136719
    4. '(m' → logprob: -15.023246765136719
    5. '    ' → logprob: -15.773246765136719
    6. ' ' → logprob: -15.898246765136719
    7. '	m' → logprob: -16.64824676513672
    8. 'mod' → logprob: -16.89824676513672
    9. ')' → logprob: -17.27324676513672
    10. ')m' → logprob: -17.52324676513672

Token 888: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.246537173457909e-06
    2. ' -' → logprob: -12.375003814697266
    3. '–' → logprob: -19.625003814697266
    4. '2' → logprob: -20.625003814697266
    5. '   ' → logprob: -20.875003814697266
    6. '−' → logprob: -20.875003814697266
    7. ',' → logprob: -22.125003814697266
    8. '```' → logprob: -22.250003814697266
    9. '1' → logprob: -22.375003814697266
    10. '--' → logprob: -22.500003814697266

Token 889: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.875
    4. '-' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. ')' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. '(' → logprob: -19.625
    9. '3' → logprob: -20.25
    10. '{' → logprob: -21.125

Token 890: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001887349528260529
    2. ',m' → logprob: -6.376887321472168
    3. ' ,' → logprob: -8.751887321472168
    4. 'm' → logprob: -10.626887321472168
    5. ')' → logprob: -13.626887321472168
    6. '(m' → logprob: -14.751887321472168
    7. '<|end|>' → logprob: -15.251887321472168
    8. '))' → logprob: -15.751887321472168
    9. '),' → logprob: -15.751887321472168
    10. '(' → logprob: -16.126888275146484

Token 891: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00038038729690015316
    2. ' m' → logprob: -7.875380516052246
    3. 'mod' → logprob: -15.625380516052246
    4. '   ' → logprob: -16.62537956237793
    5. '	m' → logprob: -16.87537956237793
    6. 'MOD' → logprob: -17.00037956237793
    7. ')' → logprob: -17.37537956237793
    8. ' ' → logprob: -18.25037956237793
    9. '       ' → logprob: -18.25037956237793
    10. 'м' → logprob: -18.75037956237793

Token 892: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005793657619506121
    2. ' )' → logprob: -8.000579833984375
    3. '))' → logprob: -8.375579833984375
    4. ')%' → logprob: -11.750579833984375
    5. '   ' → logprob: -13.750579833984375
    6. ',' → logprob: -14.125579833984375
    7. ')return' → logprob: -14.625579833984375
    8. ')m' → logprob: -14.750579833984375
    9. '})' → logprob: -14.875579833984375
    10. '),' → logprob: -14.875579833984375

Token 893: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14665856957435608
    2. ')' → logprob: -2.5216586589813232
    3. ' %' → logprob: -3.1466586589813232
    4. '<|end|>' → logprob: -5.021658420562744
    5. ')%' → logprob: -5.271658420562744
    6. '   ' → logprob: -7.896658420562744
    7. '<|end|>' → logprob: -8.896658897399902
    8. '%n' → logprob: -9.021658897399902
    9. '%)' → logprob: -9.146658897399902
    10. ' //' → logprob: -9.646658897399902

Token 894: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00012511172099038959
    2. ' m' → logprob: -9.00012493133545
    3. 'MOD' → logprob: -13.37512493133545
    4. 'mod' → logprob: -15.75012493133545
    5. '(m' → logprob: -18.625125885009766
    6. ' MOD' → logprob: -18.750125885009766
    7. '	m' → logprob: -20.250125885009766
    8. '```' → logprob: -20.375125885009766
    9. '%m' → logprob: -21.000125885009766
    10. 'м' → logprob: -21.125125885009766

Token 895: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23150883615016937
    2. '#' → logprob: -2.106508731842041
    3. 'def' → logprob: -2.731508731842041
    4. '<|end|>' → logprob: -4.981508731842041
    5. ';' → logprob: -6.481508731842041
    6. 'mp' → logprob: -6.606508731842041
    7. 'return' → logprob: -6.856508731842041
    8. '...' → logprob: -6.981508731842041
    9. ',' → logprob: -7.231508731842041
    10. '
' → logprob: -7.356508731842041

Token 897: ' maa' (ID: 47470)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.24331580102443695
    2. 'inv' → logprob: -2.8683156967163086
    3. ' mod' → logprob: -2.9933156967163086
    4. 'pow' → logprob: -3.8683156967163086
    5. 'main' → logprob: -4.118315696716309
    6. 'comb' → logprob: -4.493315696716309
    7. 'fact' → logprob: -4.993315696716309
    8. ' inv' → logprob: -5.493315696716309
    9. 'bin' → logprob: -5.618315696716309
    10. 'fast' → logprob: -5.618315696716309

Token 898: '(a' (ID: 6271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48931246995925903
    2. 'p' → logprob: -1.1143124103546143
    3. 'th' → logprob: -3.4893124103546143
    4. 'sk' → logprob: -4.739312648773193
    5. 'd' → logprob: -5.864312648773193
    6. 'def' → logprob: -6.114312648773193
    7. 'xp' → logprob: -6.114312648773193
    8. 'pp' → logprob: -6.239312648773193
    9. 'pl' → logprob: -6.739312648773193
    10. 's' → logprob: -6.864312648773193

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05788131430745125
    2. ',b' → logprob: -3.4328813552856445
    3. '):' → logprob: -5.0578813552856445
    4. ' ,' → logprob: -5.4328813552856445
    5. '):
' → logprob: -6.1828813552856445
    6. '[' → logprob: -6.4328813552856445
    7. 'rr' → logprob: -6.4328813552856445
    8. ',n' → logprob: -6.5578813552856445
    9. 'rray' → logprob: -6.9328813552856445
    10. 's' → logprob: -6.9328813552856445

Token 900: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004703653044998646
    2. ' b' → logprob: -6.004703521728516
    3. '*' → logprob: -7.254703521728516
    4. '*b' → logprob: -7.504703521728516
    5. 'lst' → logprob: -8.379703521728516
    6. 'l' → logprob: -8.629703521728516
    7. 'arr' → logprob: -9.254703521728516
    8. 'n' → logprob: -9.754703521728516
    9. '   ' → logprob: -9.879703521728516
    10. 'L' → logprob: -10.004703521728516

Token 901: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004118411801755428
    2. '):
' → logprob: -5.7541184425354
    3. ',' → logprob: -7.1291184425354
    4. ')' → logprob: -10.254117965698242
    5. '=' → logprob: -10.754117965698242
    6. ':' → logprob: -11.254117965698242
    7. ',b' → logprob: -11.379117965698242
    8. ',a' → logprob: -11.379117965698242
    9. '):
' → logprob: -11.504117965698242
    10. ',c' → logprob: -11.629117965698242

Token 902: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026005441322922707
    2. 'op' → logprob: -5.026005268096924
    3. ' c' → logprob: -5.026005268096924
    4. '/' → logprob: -6.151005268096924
    5. '):' → logprob: -6.151005268096924
    6. ' /' → logprob: -6.526005268096924
    7. '=' → logprob: -6.901005268096924
    8. ' op' → logprob: -7.401005268096924
    9. '):
' → logprob: -7.526005268096924
    10. ')' → logprob: -7.526005268096924

Token 903: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5193321108818054
    2. '):
' → logprob: -1.0193321704864502
    3. ',' → logprob: -3.26933217048645
    4. '=' → logprob: -5.519331932067871
    5. '):
' → logprob: -6.644331932067871
    6. ')' → logprob: -8.394331932067871
    7. 'r' → logprob: -9.394331932067871
    8. '  ' → logprob: -9.894331932067871
    9. '=None' → logprob: -9.894331932067871
    10. ',q' → logprob: -9.894331932067871

Token 904: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10030641406774521
    2. '10' → logprob: -2.725306510925293
    3. '0' → logprob: -4.725306510925293
    4. 'None' → logprob: -5.225306510925293
    5. '-' → logprob: -5.225306510925293
    6. '2' → logprob: -5.350306510925293
    7. '100' → logprob: -6.225306510925293
    8. '1' → logprob: -6.600306510925293
    9. ')' → logprob: -7.350306510925293
    10. ' MOD' → logprob: -7.725306510925293

Token 905: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.13089720904827118
    2. 'MOD' → logprob: -2.380897283554077
    3. 'OD' → logprob: -4.130897045135498
    4. '=' → logprob: -5.380897045135498
    5. ')' → logprob: -6.130897045135498
    6. ',' → logprob: -6.255897045135498
    7. '):
' → logprob: -6.380897045135498
    8. '):' → logprob: -6.505897045135498
    9. '_NUM' → logprob: -7.755897045135498
    10. 'num' → logprob: -7.880897045135498

Token 906: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1603168398141861
    2. '):
' → logprob: -1.910316824913025
    3. '):
' → logprob: -9.660316467285156
    4. ')' → logprob: -11.785316467285156
    5. '   ' → logprob: -12.035316467285156
    6. ' ):' → logprob: -12.410316467285156
    7. '=' → logprob: -12.410316467285156
    8. ',' → logprob: -12.410316467285156
    9. ' ):
' → logprob: -13.910316467285156
    10. '):

' → logprob: -14.285316467285156

Token 907: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026575347408652306
    2. ' return' → logprob: -4.276575565338135
    3. 'return' → logprob: -4.401575565338135
    4. '	return' → logprob: -9.776575088500977
    5. '   ' → logprob: -12.151575088500977
    6. ':return' → logprob: -12.151575088500977
    7. '    ' → logprob: -12.901575088500977
    8. '       ' → logprob: -13.276575088500977
    9. '  ' → logprob: -13.651575088500977
    10. ' ' → logprob: -14.026575088500977

Token 908: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.007912516593933105
    2. '((' → logprob: -4.882912635803223
    3. ' (' → logprob: -8.632912635803223
    4. '(' → logprob: -9.757912635803223
    5. '(max' → logprob: -10.757912635803223
    6. 'a' → logprob: -10.882912635803223
    7. '(((' → logprob: -11.257912635803223
    8. '(abs' → logprob: -12.007912635803223
    9. '(mp' → logprob: -12.132912635803223
    10. '(min' → logprob: -13.507912635803223

Token 909: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6340946555137634
    2. '(a' → logprob: -0.7590946555137634
    3. '((' → logprob: -6.884094715118408
    4. '(' → logprob: -8.50909423828125
    5. ' (' → logprob: -8.75909423828125
    6. ' a' → logprob: -9.38409423828125
    7. '(((' → logprob: -11.75909423828125
    8. '   ' → logprob: -12.00909423828125
    9. '(p' → logprob: -13.38409423828125
    10. ' ' → logprob: -13.63409423828125

Token 910: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6412938833236694
    2. '+b' → logprob: -0.8912938833236694
    3. ' +' → logprob: -2.891294002532959
    4. '*' → logprob: -5.516294002532959
    5. '*b' → logprob: -6.266294002532959
    6. '+p' → logprob: -7.016294002532959
    7. '%' → logprob: -7.391294002532959
    8. ' *' → logprob: -8.8912935256958
    9. '%b' → logprob: -10.0162935256958
    10. '-b' → logprob: -10.0162935256958

Token 911: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10040151327848434
    2. ')%' → logprob: -2.3504014015197754
    3. '-' → logprob: -8.975401878356934
    4. ' )' → logprob: -10.350401878356934
    5. '+' → logprob: -10.850401878356934
    6. '-p' → logprob: -11.975401878356934
    7. '%' → logprob: -12.225401878356934
    8. '+p' → logprob: -12.975401878356934
    9. ')p' → logprob: -13.225401878356934
    10. ' -' → logprob: -14.850401878356934

Token 912: 'MOD' (ID: 52135)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.15310683415737e-05
    2. ' p' → logprob: -10.750021934509277
    3. '```' → logprob: -20.50002098083496
    4. '	p' → logprob: -20.87502098083496
    5. ' ' → logprob: -21.25002098083496
    6. 'MOD' → logprob: -21.37502098083496
    7. '<p' → logprob: -22.00002098083496
    8. '(p' → logprob: -22.12502098083496
    9. '_p' → logprob: -22.37502098083496
    10. '   ' → logprob: -23.00002098083496

Token 913: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.04361550882458687
    2. 'p' → logprob: -3.1686155796051025
    3. 'MOD' → logprob: -7.543615341186523
    4. ' p' → logprob: -9.543615341186523
    5. 'm' → logprob: -11.793615341186523
    6. 'num' → logprob: -12.793615341186523
    7. 'P' → logprob: -13.918615341186523
    8. '[' → logprob: -14.418615341186523
    9. '(p' → logprob: -14.418615341186523
    10. '```' → logprob: -14.918615341186523

Token 914: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13584741950035095
    2. '<|end|>' → logprob: -2.885847330093384
    3. '#' → logprob: -3.385847330093384
    4. ',' → logprob: -4.885847568511963
    5. '_' → logprob: -4.885847568511963
    6. ' def' → logprob: -5.635847568511963
    7. 'a' → logprob: -6.010847568511963
    8. '=' → logprob: -6.135847568511963
    9. '\' → logprob: -6.260847568511963
    10. '
' → logprob: -6.260847568511963

Token 915: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22686299681663513
    2. '<|end|>' → logprob: -1.6018630266189575
    3. '
' → logprob: -6.976862907409668
    4. ' def' → logprob: -8.351862907409668
    5. '<|end|>' → logprob: -9.101862907409668
    6. 'a' → logprob: -9.976862907409668
    7. '#' → logprob: -10.351862907409668
    8. ')' → logprob: -11.226862907409668
    9. ',' → logprob: -11.476862907409668
    10. '  ' → logprob: -11.726862907409668

Token 916: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6829909682273865
    2. ' m' → logprob: -1.4329910278320312
    3. ' maa' → logprob: -2.6829910278320312
    4. ' sub' → logprob: -3.3079910278320312
    5. 'maa' → logprob: -3.6829910278320312
    6. ' mab' → logprob: -3.8079910278320312
    7. 'sub' → logprob: -3.9329910278320312
    8. 'ma' → logprob: -4.182991027832031
    9. ' ma' → logprob: -4.557991027832031
    10. ' madd' → logprob: -4.932991027832031

Token 917: 'ss' (ID: 1087)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.49047523736953735
    2. 'ul' → logprob: -1.1154751777648926
    3. 'ult' → logprob: -3.3654751777648926
    4. 'sub' → logprob: -4.365475177764893
    5. 'mul' → logprob: -4.990475177764893
    6. 'add' → logprob: -6.240475177764893
    7. 'a' → logprob: -6.615475177764893
    8. 'ull' → logprob: -7.365475177764893
    9. 'aa' → logprob: -7.490475177764893
    10. 'ulm' → logprob: -8.24047565460205

Token 918: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.22465932369232178
    2. 's' → logprob: -1.7246593236923218
    3. 'a' → logprob: -4.224659442901611
    4. 'ub' → logprob: -5.349659442901611
    5. 'sub' → logprob: -5.974659442901611
    6. 'def' → logprob: -8.349658966064453
    7. 'subtract' → logprob: -8.724658966064453
    8. 'u' → logprob: -9.099658966064453
    9. 'sq' → logprob: -9.599658966064453
    10. 'x' → logprob: -9.974658966064453

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0822698324918747
    2. ',b' → logprob: -2.9572699069976807
    3. ',a' → logprob: -4.082269668579102
    4. 'a' → logprob: -5.207269668579102
    5. '(a' → logprob: -5.457269668579102
    6. ' ,' → logprob: -8.332269668579102
    7. 'b' → logprob: -9.582269668579102
    8. 's' → logprob: -10.832269668579102
    9. '<|end|>' → logprob: -11.332269668579102
    10. '(b' → logprob: -11.332269668579102

Token 920: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019569406285881996
    2. 'a' → logprob: -6.626956939697266
    3. ' b' → logprob: -7.376956939697266
    4. '(a' → logprob: -13.126956939697266
    5. '(b' → logprob: -13.501956939697266
    6. ' a' → logprob: -14.251956939697266
    7. 'lambda' → logprob: -14.626956939697266
    8. ',b' → logprob: -15.501956939697266
    9. '	b' → logprob: -15.501956939697266
    10. ' ' → logprob: -16.251956939697266

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01952497847378254
    2. ',a' → logprob: -4.019525051116943
    3. '(a' → logprob: -7.019525051116943
    4. 'a' → logprob: -8.144524574279785
    5. ' ,' → logprob: -9.519524574279785
    6. ',b' → logprob: -9.769524574279785
    7. ',c' → logprob: -10.269524574279785
    8. ',s' → logprob: -11.894524574279785
    9. 'def' → logprob: -12.519524574279785
    10. ',p' → logprob: -12.644524574279785

Token 922: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003926537465304136
    2. ' p' → logprob: -5.628926753997803
    3. 'c' → logprob: -8.753926277160645
    4. 'MOD' → logprob: -8.753926277160645
    5. ' MOD' → logprob: -12.628926277160645
    6. '(p' → logprob: -12.878926277160645
    7. ' (' → logprob: -13.503926277160645
    8. ' c' → logprob: -13.753926277160645
    9. 'q' → logprob: -14.003926277160645
    10. 'b' → logprob: -14.753926277160645

Token 923: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.386147626675665e-05
    2. '=p' → logprob: -9.750073432922363
    3. '=a' → logprob: -12.375073432922363
    4. '=(' → logprob: -12.750073432922363
    5. '(a' → logprob: -12.875073432922363
    6. 'p' → logprob: -12.875073432922363
    7. ',' → logprob: -13.750073432922363
    8. '(p' → logprob: -14.250073432922363
    9. ',p' → logprob: -14.375073432922363
    10. 'a' → logprob: -15.500073432922363

Token 924: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.584239938296378e-06
    2. 'p' → logprob: -12.375007629394531
    3. ' MOD' → logprob: -13.000007629394531
    4. 'b' → logprob: -14.250007629394531
    5. 'a' → logprob: -15.375007629394531
    6. '0' → logprob: -16.87500762939453
    7. '(M' → logprob: -17.25000762939453
    8. '_MOD' → logprob: -17.50000762939453
    9. ' ' → logprob: -17.87500762939453
    10. '(a' → logprob: -18.00000762939453

Token 925: 'NUM' (ID: 30776)
  Prédit: 'OD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OD' → logprob: -0.07560058683156967
    2. 'MOD' → logprob: -3.3256006240844727
    3. 'NUM' → logprob: -3.3256006240844727
    4. 'ODULE' → logprob: -8.200600624084473
    5. 'ODY' → logprob: -8.700600624084473
    6. 'ODE' → logprob: -8.950600624084473
    7. 'ОД' → logprob: -9.075600624084473
    8. '0' → logprob: -9.700600624084473
    9. 'OR' → logprob: -10.200600624084473
    10. 'od' → logprob: -10.450600624084473

Token 926: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.6656825866666622e-05
    2. '):
' → logprob: -11.12502670288086
    3. ' ):' → logprob: -12.25002670288086
    4. ',' → logprob: -12.37502670288086
    5. '):(' → logprob: -13.75002670288086
    6. '(a' → logprob: -15.25002670288086
    7. ':' → logprob: -15.25002670288086
    8. ')' → logprob: -15.25002670288086
    9. 'a' → logprob: -15.25002670288086
    10. '   ' → logprob: -15.50002670288086

Token 927: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2375849038362503
    2. ' return' → logprob: -1.7375849485397339
    3. '(a' → logprob: -3.4875848293304443
    4. ' (' → logprob: -5.487585067749023
    5. '   ' → logprob: -7.612585067749023
    6. 'def' → logprob: -8.237585067749023
    7. '((' → logprob: -10.737585067749023
    8. ' ' → logprob: -10.862585067749023
    9. '(return' → logprob: -11.737585067749023
    10. 'a' → logprob: -13.237585067749023

Token 928: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003037843620404601
    2. '((' → logprob: -6.378037929534912
    3. '(max' → logprob: -7.003037929534912
    4. ' (' → logprob: -8.628037452697754
    5. '(abs' → logprob: -8.628037452697754
    6. 'a' → logprob: -11.003037452697754
    7. '(' → logprob: -11.128037452697754
    8. '(min' → logprob: -11.378037452697754
    9. 'max' → logprob: -12.003037452697754
    10. '   ' → logprob: -12.003037452697754

Token 929: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16023732721805573
    2. '(a' → logprob: -1.9102373123168945
    3. ' a' → logprob: -11.910237312316895
    4. ' (' → logprob: -12.285237312316895
    5. '((' → logprob: -14.035237312316895
    6. '[a' → logprob: -15.285237312316895
    7. '(max' → logprob: -15.410237312316895
    8. '(' → logprob: -15.910237312316895
    9. 'max' → logprob: -16.28523826599121
    10. '
' → logprob: -16.78523826599121

Token 930: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.0024153725244104862
    2. ' -' → logprob: -6.627415180206299
    3. '-' → logprob: -6.877415180206299
    4. '+b' → logprob: -9.877415657043457
    5. '+' → logprob: -12.002415657043457
    6. '-б' → logprob: -15.502415657043457
    7. 'b' → logprob: -15.877415657043457
    8. ',b' → logprob: -16.12741470336914
    9. '-B' → logprob: -16.87741470336914
    10. '-p' → logprob: -16.87741470336914

Token 931: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.014173968695104122
    2. ')' → logprob: -4.264173984527588
    3. ' )' → logprob: -11.51417350769043
    4. ')p' → logprob: -15.38917350769043
    5. '+' → logprob: -16.51417350769043
    6. '%' → logprob: -16.76417350769043
    7. 'b' → logprob: -16.88917350769043
    8. ']%' → logprob: -16.88917350769043
    9. ')b' → logprob: -17.76417350769043
    10. ')#' → logprob: -17.88917350769043

Token 932: 'p' (ID: 79)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012550858780741692
    2. 'p' → logprob: -4.3875508308410645
    3. ' MOD' → logprob: -10.512551307678223
    4. ' p' → logprob: -11.387551307678223
    5. 'm' → logprob: -13.512551307678223
    6. '_MOD' → logprob: -14.887551307678223
    7. ' ' → logprob: -15.387551307678223
    8. '.MOD' → logprob: -16.137550354003906
    9. '
' → logprob: -16.512550354003906
    10. 'MODE' → logprob: -16.637550354003906

Token 933: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00510793412104249
    2. '<|end|>' → logprob: -5.380107879638672
    3. '#' → logprob: -9.130107879638672
    4. ' def' → logprob: -9.505107879638672
    5. ')' → logprob: -9.630107879638672
    6. 'a' → logprob: -9.880107879638672
    7. '_' → logprob: -10.255107879638672
    8. '%' → logprob: -10.630107879638672
    9. '.' → logprob: -10.880107879638672
    10. '
' → logprob: -10.880107879638672

Token 934: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026872646412812173
    2. '<|end|>' → logprob: -8.250268936157227
    3. '#' → logprob: -12.500268936157227
    4. ' def' → logprob: -13.000268936157227
    5. '<|end|>' → logprob: -14.750268936157227
    6. '```' → logprob: -15.250268936157227
    7. '
' → logprob: -16.125268936157227
    8. '^' → logprob: -16.500268936157227
    9. 'from' → logprob: -16.500268936157227
    10. 'import' → logprob: -16.750268936157227

Token 935: ' mm' (ID: 8957)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4612530469894409
    2. 'mm' → logprob: -1.836253046989441
    3. 'mmm' → logprob: -2.3362531661987305
    4. 'ms' → logprob: -3.4612531661987305
    5. 'mul' → logprob: -4.4612531661987305
    6. ' m' → logprob: -4.4612531661987305
    7. 'mst' → logprob: -4.5862531661987305
    8. 'mt' → logprob: -4.8362531661987305
    9. 'mp' → logprob: -5.6487531661987305
    10. 'mx' → logprob: -5.7112531661987305

Token 936: 'u' (ID: 84)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4822380244731903
    2. 'ul' → logprob: -1.2322380542755127
    3. 'ult' → logprob: -2.8572380542755127
    4. 'a' → logprob: -3.4822380542755127
    5. 'ultiply' → logprob: -6.732237815856934
    6. 'u' → logprob: -6.857237815856934
    7. 'm' → logprob: -8.482237815856934
    8. 'ultip' → logprob: -9.107237815856934
    9. 'mul' → logprob: -9.607237815856934
    10. 's' → logprob: -9.732237815856934

Token 937: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001705246395431459
    2. 'a' → logprob: -8.750170707702637
    3. '(' → logprob: -12.000170707702637
    4. ' (' → logprob: -12.750170707702637
    5. '(u' → logprob: -14.000170707702637
    6. 'ultip' → logprob: -14.125170707702637
    7. 'u' → logprob: -14.125170707702637
    8. 'ultiply' → logprob: -15.750170707702637
    9. '(x' → logprob: -16.37516975402832
    10. '<|end|>' → logprob: -16.50016975402832

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001929228543303907
    2. ',b' → logprob: -6.75192928314209
    3. ' ,' → logprob: -7.37692928314209
    4. 'b' → logprob: -10.37692928314209
    5. '(' → logprob: -10.37692928314209
    6. '<|end|>' → logprob: -10.87692928314209
    7. ',a' → logprob: -11.37692928314209
    8. 'a' → logprob: -11.62692928314209
    9. ' ' → logprob: -11.62692928314209
    10. '(a' → logprob: -11.87692928314209

Token 939: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.4391956685576588e-05
    2. ' b' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -20.125024795532227
    4. ')b' → logprob: -20.500024795532227
    5. ' ' → logprob: -20.750024795532227
    6. '	b' → logprob: -21.125024795532227
    7. '(b' → logprob: -21.250024795532227
    8. 'p' → logprob: -21.875024795532227
    9. 'a' → logprob: -22.250024795532227
    10. '  ' → logprob: -22.500024795532227

Token 940: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006903939065523446
    2. ',p' → logprob: -7.750690460205078
    3. '%' → logprob: -8.875690460205078
    4. ' ,' → logprob: -9.875690460205078
    5. ')%' → logprob: -10.500690460205078
    6. ')' → logprob: -11.125690460205078
    7. '%,' → logprob: -11.250690460205078
    8. 'a' → logprob: -12.500690460205078
    9. 'p' → logprob: -13.000690460205078
    10. ',a' → logprob: -13.125690460205078

Token 941: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07888989895582199
    2. ' p' → logprob: -2.578889846801758
    3. ' ' → logprob: -15.828889846801758
    4. 'def' → logprob: -17.703889846801758
    5. 'b' → logprob: -17.828889846801758
    6. '   ' → logprob: -18.203889846801758
    7. '(p' → logprob: -18.328889846801758
    8. '	p' → logprob: -18.453889846801758
    9. '  ' → logprob: -19.703889846801758
    10. 'c' → logprob: -19.953889846801758

Token 942: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04386483505368233
    2. ',p' → logprob: -3.1688647270202637
    3. 'p' → logprob: -7.293864727020264
    4. '(p' → logprob: -9.418865203857422
    5. '%' → logprob: -10.168865203857422
    6. '=' → logprob: -10.793865203857422
    7. 'a' → logprob: -11.668865203857422
    8. '%,' → logprob: -11.793865203857422
    9. ' ,' → logprob: -11.793865203857422
    10. ',a' → logprob: -11.918865203857422

Token 943: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.029753848910331726
    2. 'p' → logprob: -3.5297539234161377
    3. ' MOD' → logprob: -14.279753684997559
    4. ' p' → logprob: -14.404753684997559
    5. 'int' → logprob: -14.404753684997559
    6. 'm' → logprob: -14.779753684997559
    7. '_MOD' → logprob: -14.904753684997559
    8. '(p' → logprob: -15.154753684997559
    9. 'pow' → logprob: -15.529753684997559
    10. 'mod' → logprob: -16.029754638671875

Token 944: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.001985021401196718
    2. 'MOD' → logprob: -6.3769850730896
    3. 'OD' → logprob: -8.626984596252441
    4. 'p' → logprob: -9.626984596252441
    5. 'num' → logprob: -10.501984596252441
    6. '_NUM' → logprob: -12.126984596252441
    7. '```' → logprob: -14.126984596252441
    8. ' p' → logprob: -14.126984596252441
    9. 'od' → logprob: -14.626984596252441
    10. 'COD' → logprob: -14.751984596252441

Token 945: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.939851037808694e-05
    2. ' ):' → logprob: -11.125029563903809
    3. '):
' → logprob: -11.625029563903809
    4. ')' → logprob: -12.625029563903809
    5. '):(' → logprob: -14.000029563903809
    6. ':' → logprob: -14.750029563903809
    7. '):
' → logprob: -15.000029563903809
    8. ' ' → logprob: -15.625029563903809
    9. 'a' → logprob: -15.875029563903809
    10. '   ' → logprob: -16.125028610229492

Token 946: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38769394159317017
    2. 'return' → logprob: -1.1376938819885254
    3. ' (' → logprob: -7.512693881988525
    4. '   ' → logprob: -8.387694358825684
    5. 'def' → logprob: -10.762694358825684
    6. '(return' → logprob: -11.512694358825684
    7. '(a' → logprob: -11.762694358825684
    8. ' ' → logprob: -12.012694358825684
    9. '	return' → logprob: -13.637694358825684
    10. ' def' → logprob: -13.887694358825684

Token 947: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018150994554162025
    2. ' (' → logprob: -4.018150806427002
    3. 'a' → logprob: -14.51815128326416
    4. '((' → logprob: -14.89315128326416
    5. '(' → logprob: -15.76815128326416
    6. '(int' → logprob: -16.893150329589844
    7. ' ' → logprob: -17.768150329589844
    8. '   ' → logprob: -18.143150329589844
    9. '(ab' → logprob: -18.268150329589844
    10. '(x' → logprob: -18.393150329589844

Token 948: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01770019717514515
    2. 'a' → logprob: -4.5177001953125
    3. ' (' → logprob: -5.0177001953125
    4. ' a' → logprob: -11.5177001953125
    5. '(' → logprob: -15.0177001953125
    6. '((' → logprob: -15.5177001953125
    7. '```' → logprob: -17.0177001953125
    8. ' ' → logprob: -17.6427001953125
    9. '(
' → logprob: -17.7677001953125
    10. '   ' → logprob: -17.7677001953125

Token 949: '%' (ID: 4)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.10121221095323563
    2. '*' → logprob: -2.3512122631073
    3. ' *' → logprob: -6.976212024688721
    4. '*a' → logprob: -9.976212501525879
    5. 'b' → logprob: -11.851212501525879
    6. '*)' → logprob: -12.101212501525879
    7. ',b' → logprob: -12.476212501525879
    8. '*p' → logprob: -13.476212501525879
    9. '%b' → logprob: -13.601212501525879
    10. ' b' → logprob: -13.851212501525879

Token 950: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5776426196098328
    2. 'b' → logprob: -0.8276426196098328
    3. ' p' → logprob: -6.952642440795898
    4. ' b' → logprob: -7.202642440795898
    5. ' ' → logprob: -14.077642440795898
    6. ',' → logprob: -17.2026424407959
    7. '```' → logprob: -17.5776424407959
    8. ')' → logprob: -17.8276424407959
    9. '(p' → logprob: -18.7026424407959
    10. '   ' → logprob: -18.8276424407959

Token 951: ')*(' (ID: 44406)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.7647477984428406
    2. ' *' → logprob: -1.0147478580474854
    3. '*' → logprob: -1.7647478580474854
    4. ')*' → logprob: -7.389747619628906
    5. '*a' → logprob: -9.139747619628906
    6. ')' → logprob: -10.014747619628906
    7. ')*(' → logprob: -10.889747619628906
    8. '   ' → logprob: -11.764747619628906
    9. '*p' → logprob: -12.139747619628906
    10. '*(' → logprob: -12.264747619628906

Token 952: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004638861399143934
    2. ' b' → logprob: -5.504638671875
    3. '(b' → logprob: -7.504638671875
    4. ' (' → logprob: -11.629638671875
    5. ' ' → logprob: -14.879638671875
    6. '   ' → logprob: -15.254638671875
    7. '	b' → logprob: -16.129638671875
    8. '```' → logprob: -16.754638671875
    9. ')b' → logprob: -16.879638671875
    10. '  ' → logprob: -17.379638671875

Token 953: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0001519325451226905
    2. ' %' → logprob: -8.875151634216309
    3. ')%' → logprob: -11.375151634216309
    4. '%b' → logprob: -15.375151634216309
    5. ')' → logprob: -16.125152587890625
    6. '%m' → logprob: -16.750152587890625
    7. '%c' → logprob: -17.000152587890625
    8. '%x' → logprob: -17.125152587890625
    9. '%d' → logprob: -17.375152587890625
    10. '%i' → logprob: -17.500152587890625

Token 954: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1472419600977446e-06
    2. ' p' → logprob: -13.750000953674316
    3. ' ' → logprob: -19.500001907348633
    4. '%' → logprob: -19.875001907348633
    5. '<p' → logprob: -20.375001907348633
    6. ')' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.875001907348633
    8. ')p' → logprob: -20.875001907348633
    9. '```' → logprob: -21.000001907348633
    10. '	p' → logprob: -22.375001907348633

Token 955: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0014687958173453808
    2. ')' → logprob: -6.626468658447266
    3. '%' → logprob: -8.876468658447266
    4. ' )' → logprob: -13.626468658447266
    5. ' %' → logprob: -14.126468658447266
    6. '   ' → logprob: -14.376468658447266
    7. ' ' → logprob: -15.001468658447266
    8. ']%' → logprob: -15.501468658447266
    9. '%)' → logprob: -16.376468658447266
    10. '       ' → logprob: -17.126468658447266

Token 956: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.375000953674316
    3. ' ' → logprob: -19.5
    4. 'MOD' → logprob: -20.0
    5. '   ' → logprob: -20.375
    6. '
' → logprob: -20.5
    7. '(p' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. '	p' → logprob: -22.25
    10. '<p' → logprob: -22.5

Token 957: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002826627343893051
    2. '<|end|>' → logprob: -6.127826690673828
    3. '#' → logprob: -8.377826690673828
    4. ' def' → logprob: -9.127826690673828
    5. ')' → logprob: -9.502826690673828
    6. '%' → logprob: -9.627826690673828
    7. '^' → logprob: -10.127826690673828
    8. '.' → logprob: -10.502826690673828
    9. '*' → logprob: -10.502826690673828
    10. '=' → logprob: -11.252826690673828

Token 958: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008220335468649864
    2. '<|end|>' → logprob: -4.883220195770264
    3. '#' → logprob: -7.508220195770264
    4. '<|end|>' → logprob: -11.258220672607422
    5. 'from' → logprob: -11.508220672607422
    6. '```' → logprob: -11.883220672607422
    7. 'import' → logprob: -11.883220672607422
    8. ')' → logprob: -12.133220672607422
    9. 'class' → logprob: -12.383220672607422
    10. ' def' → logprob: -12.883220672607422

Token 959: ' m' (ID: 284)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.7233924269676208
    2. 'm' → logprob: -1.0983924865722656
    3. 'mm' → logprob: -2.7233924865722656
    4. 'mp' → logprob: -3.2233924865722656
    5. 'ms' → logprob: -4.723392486572266
    6. 'mod' → logprob: -4.848392486572266
    7. 'mex' → logprob: -4.848392486572266
    8. 'mmm' → logprob: -4.973392486572266
    9. ' m' → logprob: -5.660892486572266
    10. ' md' → logprob: -5.785892486572266

Token 960: 'dd' (ID: 1183)
  Prédit: 'mu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mu' → logprob: -0.464407742023468
    2. 'od' → logprob: -1.5894076824188232
    3. 'u' → logprob: -2.5894076824188232
    4. 'ul' → logprob: -3.4644076824188232
    5. 'm' → logprob: -4.089407920837402
    6. 'o' → logprob: -4.839407920837402
    7. 'mul' → logprob: -4.964407920837402
    8. 'pow' → logprob: -5.089407920837402
    9. 'odu' → logprob: -5.089407920837402
    10. 'mod' → logprob: -5.714407920837402

Token 961: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002707529056351632
    2. '(' → logprob: -8.62527084350586
    3. 'a' → logprob: -9.50027084350586
    4. 'u' → logprob: -11.62527084350586
    5. ' (' → logprob: -12.62527084350586
    6. 'def' → logprob: -14.25027084350586
    7. '(u' → logprob: -14.37527084350586
    8. '(
' → logprob: -14.62527084350586
    9. '(x' → logprob: -14.75027084350586
    10. 'f' → logprob: -14.87527084350586

Token 962: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005353979649953544
    2. ',b' → logprob: -8.750535011291504
    3. ' ,' → logprob: -8.750535011291504
    4. '(a' → logprob: -9.000535011291504
    5. ',a' → logprob: -9.375535011291504
    6. 'a' → logprob: -11.875535011291504
    7. 'b' → logprob: -14.000535011291504
    8. '_,' → logprob: -14.250535011291504
    9. '(b' → logprob: -14.375535011291504
    10. '(' → logprob: -14.875535011291504

Token 963: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023246875032782555
    2. ' b' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.023246765136719
    4. ' ' → logprob: -15.773246765136719
    5. '  ' → logprob: -16.39824676513672
    6. '   ' → logprob: -16.39824676513672
    7. '	b' → logprob: -16.52324676513672
    8. '(b' → logprob: -16.64824676513672
    9. '    ' → logprob: -17.64824676513672
    10. 'def' → logprob: -18.27324676513672

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11419733613729477
    2. '(a' → logprob: -2.239197254180908
    3. ',a' → logprob: -7.614197254180908
    4. ' ,' → logprob: -7.739197254180908
    5. ' (' → logprob: -8.489197731018066
    6. 'a' → logprob: -8.489197731018066
    7. ' a' → logprob: -11.489197731018066
    8. '%,' → logprob: -11.614197731018066
    9. '(' → logprob: -12.489197731018066
    10. '',' → logprob: -12.989197731018066

Token 965: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10022565722465515
    2. ' p' → logprob: -2.3502256870269775
    3. 'b' → logprob: -11.100225448608398
    4. ' b' → logprob: -13.350225448608398
    5. 'a' → logprob: -14.350225448608398
    6. '(p' → logprob: -14.475225448608398
    7. ' ' → logprob: -14.475225448608398
    8. '	p' → logprob: -15.975225448608398
    9. 'def' → logprob: -16.1002254486084
    10. ' def' → logprob: -16.2252254486084

Token 966: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003565575461834669
    2. '(a' → logprob: -8.750356674194336
    3. ',p' → logprob: -8.875356674194336
    4. ',a' → logprob: -10.500356674194336
    5. ' ,' → logprob: -11.375356674194336
    6. '=' → logprob: -12.125356674194336
    7. 'p' → logprob: -12.375356674194336
    8. ',b' → logprob: -12.500356674194336
    9. 'a' → logprob: -13.375356674194336
    10. '(p' → logprob: -13.500356674194336

Token 967: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0025080014020204544
    2. 'p' → logprob: -6.002508163452148
    3. 'int' → logprob: -10.377508163452148
    4. ' MOD' → logprob: -15.002508163452148
    5. '_MOD' → logprob: -15.002508163452148
    6. '(p' → logprob: -15.877508163452148
    7. 'Mod' → logprob: -16.00250816345215
    8. 'mod' → logprob: -16.62750816345215
    9. 'm' → logprob: -16.87750816345215
    10. '0' → logprob: -17.00250816345215

Token 968: 'NUM' (ID: 30776)
  Prédit: 'NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.020510004833340645
    2. 'MOD' → logprob: -4.145510196685791
    3. 'p' → logprob: -5.520510196685791
    4. 'OD' → logprob: -8.645509719848633
    5. '_NUM' → logprob: -8.895509719848633
    6. '(p' → logprob: -10.395509719848633
    7. ' p' → logprob: -10.645509719848633
    8. 'num' → logprob: -10.895509719848633
    9. 'OM' → logprob: -11.395509719848633
    10. '```' → logprob: -11.520509719848633

Token 969: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.065608562901616e-05
    2. '):
' → logprob: -9.500081062316895
    3. '):
' → logprob: -13.250081062316895
    4. ')' → logprob: -13.250081062316895
    5. ' ):' → logprob: -13.750081062316895
    6. '):(' → logprob: -14.125081062316895
    7. ':' → logprob: -15.625081062316895
    8. '):

' → logprob: -16.125080108642578
    9. 'def' → logprob: -17.250080108642578
    10. '   ' → logprob: -17.375080108642578

Token 970: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.022230960428714752
    2. '   ' → logprob: -4.522231101989746
    3. 'return' → logprob: -4.522231101989746
    4. ' def' → logprob: -9.022231101989746
    5. 'def' → logprob: -9.772231101989746
    6. ' (' → logprob: -10.272231101989746
    7. ' if' → logprob: -10.897231101989746
    8. ' ' → logprob: -11.522231101989746
    9. '	return' → logprob: -12.272231101989746
    10. '(a' → logprob: -12.397231101989746

Token 971: ' mm' (ID: 8957)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02495604008436203
    2. '((' → logprob: -4.024956226348877
    3. ' (' → logprob: -5.774956226348877
    4. '(mm' → logprob: -5.899956226348877
    5. 'a' → logprob: -7.524956226348877
    6. 'pow' → logprob: -9.524955749511719
    7. '(pow' → logprob: -9.524955749511719
    8. '(m' → logprob: -9.774955749511719
    9. 'mm' → logprob: -10.024955749511719
    10. '(int' → logprob: -10.149955749511719

Token 972: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.2200749754119897e-06
    2. '(u' → logprob: -13.250001907348633
    3. 'a' → logprob: -15.750001907348633
    4. '(a' → logprob: -16.125001907348633
    5. 'ul' → logprob: -17.000001907348633
    6. ''u' → logprob: -17.000001907348633
    7. '	u' → logprob: -17.250001907348633
    8. '
' → logprob: -17.500001907348633
    9. 'mu' → logprob: -17.625001907348633
    10. '*u' → logprob: -17.875001907348633

Token 973: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.93448489275761e-05
    2. 'a' → logprob: -9.625079154968262
    3. '((' → logprob: -11.625079154968262
    4. 'def' → logprob: -13.250079154968262
    5. '(' → logprob: -14.125079154968262
    6. '(pow' → logprob: -14.625079154968262
    7. '(int' → logprob: -14.875079154968262
    8. 'int' → logprob: -15.250079154968262
    9. 'pow' → logprob: -15.250079154968262
    10. 'inv' → logprob: -16.125080108642578

Token 974: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06573106348514557
    2. ',' → logprob: -2.8157310485839844
    3. '(b' → logprob: -6.065731048583984
    4. ',b' → logprob: -7.690731048583984
    5. 'a' → logprob: -8.190731048583984
    6. '(' → logprob: -8.440731048583984
    7. ',a' → logprob: -8.440731048583984
    8. 'b' → logprob: -9.690731048583984
    9. '(p' → logprob: -9.940731048583984
    10. ' (' → logprob: -10.065731048583984

Token 975: ' mp' (ID: 11543)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5563066601753235
    2. 'inv' → logprob: -1.1813066005706787
    3. 'a' → logprob: -2.1813066005706787
    4. '(inv' → logprob: -5.806306838989258
    5. 'pow' → logprob: -6.431306838989258
    6. ' inv' → logprob: -6.681306838989258
    7. ' b' → logprob: -7.556306838989258
    8. '(a' → logprob: -8.306306838989258
    9. ' a' → logprob: -9.556306838989258
    10. 'inverse' → logprob: -9.931306838989258

Token 976: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00044056313345208764
    2. '(a' → logprob: -7.75044059753418
    3. 'a' → logprob: -11.87544059753418
    4. 'b' → logprob: -12.87544059753418
    5. '(' → logprob: -15.25044059753418
    6. '```' → logprob: -17.25044059753418
    7. ' (' → logprob: -17.50044059753418
    8. '((' → logprob: -17.87544059753418
    9. '(
' → logprob: -18.50044059753418
    10. '   ' → logprob: -18.50044059753418

Token 977: ',p' (ID: 14835)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3995923399925232
    2. ',' → logprob: -1.649592399597168
    3. ',p' → logprob: -2.524592399597168
    4. '(-' → logprob: -3.274592399597168
    5. 'p' → logprob: -4.774592399597168
    6. '(' → logprob: -4.899592399597168
    7. ',-' → logprob: -6.649592399597168
    8. '(a' → logprob: -7.524592399597168
    9. '-' → logprob: -7.649592399597168
    10. 'a' → logprob: -7.774592399597168

Token 978: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00019972586596850306
    2. ' -' → logprob: -8.875199317932129
    3. ',' → logprob: -10.375199317932129
    4. ',p' → logprob: -10.750199317932129
    5. ',-' → logprob: -12.250199317932129
    6. '-p' → logprob: -14.000199317932129
    7. 'p' → logprob: -14.125199317932129
    8. '   ' → logprob: -15.000199317932129
    9. ',m' → logprob: -15.750199317932129
    10. '(p' → logprob: -16.125200271606445

Token 979: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. '```' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '-' → logprob: -15.062506675720215
    5. ')' → logprob: -15.250006675720215
    6. '   ' → logprob: -16.12500762939453
    7. '``' → logprob: -16.43750762939453
    8. 'p' → logprob: -16.43750762939453
    9. '
' → logprob: -16.56250762939453
    10. '۲' → logprob: -16.56250762939453

Token 980: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3491126000881195
    2. ',p' → logprob: -1.224112629890442
    3. ' ,' → logprob: -7.599112510681152
    4. 'p' → logprob: -8.849112510681152
    5. ')' → logprob: -11.724112510681152
    6. '%' → logprob: -12.224112510681152
    7. ' p' → logprob: -12.724112510681152
    8. '(p' → logprob: -13.224112510681152
    9. '```' → logprob: -13.724112510681152
    10. ' ' → logprob: -14.349112510681152

Token 981: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5246544480323792
    2. ',p' → logprob: -0.8996544480323792
    3. ' ,' → logprob: -7.524654388427734
    4. ')' → logprob: -7.524654388427734
    5. ')%' → logprob: -8.524654388427734
    6. '))' → logprob: -8.649654388427734
    7. ',m' → logprob: -10.524654388427734
    8. 'p' → logprob: -11.774654388427734
    9. ')p' → logprob: -11.774654388427734
    10. ',a' → logprob: -12.149654388427734

Token 982: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017958412354346365
    2. ' p' → logprob: -8.625179290771484
    3. ')' → logprob: -19.125179290771484
    4. ' ' → logprob: -19.875179290771484
    5. '   ' → logprob: -20.000179290771484
    6. ' ' → logprob: -20.125179290771484
    7. '<p' → logprob: -21.125179290771484
    8. '	p' → logprob: -21.250179290771484
    9. ')p' → logprob: -21.500179290771484
    10. '$p' → logprob: -22.125179290771484

Token 983: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.750005722045898
    3. ' )' → logprob: -14.000005722045898
    4. ')a' → logprob: -14.375005722045898
    5. ')#' → logprob: -14.500005722045898
    6. 'def' → logprob: -14.625005722045898
    7. ')%' → logprob: -15.625005722045898
    8. ')return' → logprob: -15.750005722045898
    9. '))' → logprob: -15.750005722045898
    10. ')

' → logprob: -16.2500057220459

Token 984: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3304027020931244
    2. '<|end|>' → logprob: -1.4554027318954468
    3. '#' → logprob: -3.4554026126861572
    4. '<|end|>' → logprob: -4.455402851104736
    5. ')' → logprob: -6.455402851104736
    6. 'import' → logprob: -6.705402851104736
    7. 'class' → logprob: -7.705402851104736
    8. '```' → logprob: -8.455402374267578
    9. ';' → logprob: -8.955402374267578
    10. 'print' → logprob: -8.955402374267578

Token 985: ' partial' (ID: 13664)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24659664928913116
    2. '#' → logprob: -1.7465966939926147
    3. 'import' → logprob: -3.746596574783325
    4. '<|end|>' → logprob: -4.371596813201904
    5. 'from' → logprob: -6.246596813201904
    6. 'class' → logprob: -6.371596813201904
    7. ')' → logprob: -7.371596813201904
    8. 'pass' → logprob: -7.496596813201904
    9. '<|end|>' → logprob: -7.496596813201904
    10. 'for' → logprob: -8.246596336364746

Token 986: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01616082340478897
    2. 'import' → logprob: -5.39116096496582
    3. ' =' → logprob: -5.64116096496582
    4. 'from' → logprob: -5.76616096496582
    5. '=' → logprob: -6.76616096496582
    6. ' def' → logprob: -7.39116096496582
    7. '_' → logprob: -7.39116096496582
    8. '#' → logprob: -7.64116096496582
    9. 's' → logprob: -8.01616096496582
    10. 'class' → logprob: -8.14116096496582

Token 987: ' hack' (ID: 27750)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.138377070426941
    2. ' =' → logprob: -1.388377070426941
    3. '=' → logprob: -1.888377070426941
    4. 'import' → logprob: -3.0133771896362305
    5. '#' → logprob: -3.2633771896362305
    6. '_' → logprob: -3.6383771896362305
    7. 'input' → logprob: -3.8883771896362305
    8. 'n' → logprob: -4.0133771896362305
    9. 's' → logprob: -4.2633771896362305
    10. '(' → logprob: -4.2633771896362305

Token 988: 'ery' (ID: 875)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.425520896911621
    2. ' =' → logprob: -1.550520896911621
    3. '=' → logprob: -2.050520896911621
    4. 'def' → logprob: -2.050520896911621
    5. 'import' → logprob: -3.050520896911621
    6. 'data' → logprob: -3.300520896911621
    7. '#' → logprob: -3.425520896911621
    8. '_' → logprob: -3.550520896911621
    9. 'n' → logprob: -3.675520896911621
    10. ':' → logprob: -4.175520896911621

Token 989: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4932765066623688
    2. 'input' → logprob: -1.8682764768600464
    3. 'inp' → logprob: -2.993276596069336
    4. 'import' → logprob: -3.368276596069336
    5. '_' → logprob: -3.493276596069336
    6. 'n' → logprob: -3.618276596069336
    7. 'data' → logprob: -4.368276596069336
    8. 'read' → logprob: -4.368276596069336
    9. 'I' → logprob: -4.743276596069336
    10. 'in' → logprob: -4.993276596069336

Token 990: '_reader' (ID: 55777)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3275628089904785
    2. 'input' → logprob: -1.4525628089904785
    3. 'inp' → logprob: -2.5775628089904785
    4. 'import' → logprob: -2.7025628089904785
    5. 'data' → logprob: -3.0775628089904785
    6. 'raw' → logprob: -3.0775628089904785
    7. 'read' → logprob: -3.2025628089904785
    8. 'try' → logprob: -3.3275628089904785
    9. '_' → logprob: -3.4525628089904785
    10. 'N' → logprob: -3.5775628089904785

Token 991: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07592891156673431
    2. ' =' → logprob: -2.7009289264678955
    3. '=lambda' → logprob: -6.075928688049316
    4. '=input' → logprob: -6.200928688049316
    5. '=sys' → logprob: -7.200928688049316
    6. 'import' → logprob: -7.450928688049316
    7. '=_' → logprob: -8.700928688049316
    8. 'input' → logprob: -9.575928688049316
    9. '_=' → logprob: -10.950928688049316
    10. 'def' → logprob: -11.325928688049316

Token 992: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0708097442984581
    2. 'iter' → logprob: -3.320809841156006
    3. 'lambda' → logprob: -4.070809841156006
    4. 'input' → logprob: -4.570809841156006
    5. '(sys' → logprob: -5.945809841156006
    6. '(lambda' → logprob: -6.445809841156006
    7. '=sys' → logprob: -8.570809364318848
    8. ' sys' → logprob: -9.070809364318848
    9. ' iter' → logprob: -9.320809364318848
    10. '(iter' → logprob: -9.445809364318848

Token 993: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.14340025186538696
    2. 'stdin' → logprob: -2.018400192260742
    3. '_st' → logprob: -8.768400192260742
    4. '.stdout' → logprob: -9.018400192260742
    5. 'std' → logprob: -9.268400192260742
    6. '(stdin' → logprob: -9.268400192260742
    7. '```' → logprob: -10.143400192260742
    8. '_' → logprob: -10.393400192260742
    9. '__' → logprob: -10.518400192260742
    10. 'import' → logprob: -10.768400192260742

Token 994: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.19693051278591156
    2. 'read' → logprob: -1.9469305276870728
    3. 'buffer' → logprob: -4.446930408477783
    4. ' =' → logprob: -4.821930408477783
    5. '_read' → logprob: -4.821930408477783
    6. '=' → logprob: -5.196930408477783
    7. '_buffer' → logprob: -6.196930408477783
    8. '.read' → logprob: -8.821930885314941
    9. 'def' → logprob: -9.446930885314941
    10. ' readline' → logprob: -9.446930885314941

Token 995: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012665858492255211
    2. '_' → logprob: -5.262665748596191
    3. '
' → logprob: -5.762665748596191
    4. 'input' → logprob: -6.637665748596191
    5. '_input' → logprob: -7.512665748596191
    6. '_reader' → logprob: -7.762665748596191
    7. '_token' → logprob: -8.262665748596191
    8. '#' → logprob: -8.387665748596191
    9. ' =' → logprob: -8.762665748596191
    10. '_next' → logprob: -8.762665748596191

Token 996: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006429721601307392
    2. 'n' → logprob: -6.506429672241211
    3. 'input' → logprob: -6.506429672241211
    4. '_' → logprob: -7.131429672241211
    5. 'read' → logprob: -7.631429672241211
    6. 'N' → logprob: -7.756429672241211
    7. '_input' → logprob: -7.881429672241211
    8. 'next' → logprob: -8.756429672241211
    9. 'for' → logprob: -8.756429672241211
    10. 'get' → logprob: -9.131429672241211

Token 997: ' _' (ID: 1175)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.40850141644477844
    2. 'input' → logprob: -1.533501386642456
    3. 'ints' → logprob: -4.158501625061035
    4. 'inp' → logprob: -4.158501625061035
    5. '_input' → logprob: -4.283501625061035
    6. 'r' → logprob: -4.408501625061035
    7. 'get' → logprob: -4.533501625061035
    8. '_read' → logprob: -4.783501625061035
    9. 'int' → logprob: -5.408501625061035
    10. 'ri' → logprob: -5.533501625061035

Token 998: 'r' (ID: 81)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.46047282218933105
    2. 'input' → logprob: -1.710472822189331
    3. 'reader' → logprob: -2.085472822189331
    4. 'parse' → logprob: -4.83547306060791
    5. '_reader' → logprob: -4.83547306060791
    6. 'inp' → logprob: -4.96047306060791
    7. 'int' → logprob: -5.08547306060791
    8. 'main' → logprob: -5.21047306060791
    9. 'get' → logprob: -5.58547306060791
    10. '_input' → logprob: -5.83547306060791

Token 999: '():' (ID: 9442)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.0029286143835633993
    2. 'e' → logprob: -6.002928733825684
    3. '():
' → logprob: -8.502928733825684
    4. 'd' → logprob: -9.377928733825684
    5. 'ad' → logprob: -10.127928733825684
    6. '()' → logprob: -11.252928733825684
    7. 'ea' → logprob: -11.252928733825684
    8. '_e' → logprob: -11.377928733825684
    9. '_' → logprob: -11.502928733825684
    10. 'ef' → logprob: -11.752928733825684

Token 1000: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5649528503417969
    2. '   ' → logprob: -1.3149528503417969
    3. ' return' → logprob: -1.8149528503417969
    4. '_reader' → logprob: -9.939952850341797
    5. '_return' → logprob: -9.939952850341797
    6. ' ' → logprob: -10.314952850341797
    7. 'line' → logprob: -10.439952850341797
    8. '_r' → logprob: -11.064952850341797
    9. ' s' → logprob: -11.064952850341797
    10. ' line' → logprob: -11.189952850341797

Token 1001: ' _' (ID: 1175)
  Prédit: '_reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.010526563972234726
    2. '_r' → logprob: -4.635526657104492
    3. 'sys' → logprob: -7.260526657104492
    4. 'r' → logprob: -10.635526657104492
    5. '_input' → logprob: -11.885526657104492
    6. ' sys' → logprob: -12.010526657104492
    7. '_read' → logprob: -12.135526657104492
    8. '.Reader' → logprob: -12.510526657104492
    9. ' _' → logprob: -12.635526657104492
    10. '_runner' → logprob: -12.760526657104492

Token 1002: 'reader' (ID: 22564)
  Prédit: 'reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.018173474818468094
    2. '_reader' → logprob: -4.018173694610596
    3. 'r' → logprob: -10.768173217773438
    4. 'input' → logprob: -13.768173217773438
    5. ' reader' → logprob: -14.893173217773438
    6. '	reader' → logprob: -15.018173217773438
    7. '.reader' → logprob: -15.268173217773438
    8. '-reader' → logprob: -15.768173217773438
    9. 'sys' → logprob: -15.893173217773438
    10. 'read' → logprob: -16.143173217773438

Token 1003: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6934828162193298
    2. '().' → logprob: -0.6934828162193298
    3. '()
' → logprob: -8.443482398986816
    4. 'def' → logprob: -9.693482398986816
    5. '()

' → logprob: -11.568482398986816
    6. '.readline' → logprob: -11.818482398986816
    7. '()\' → logprob: -11.943482398986816
    8. '()[' → logprob: -12.068482398986816
    9. '().__' → logprob: -12.193482398986816
    10. '.strip' → logprob: -12.318482398986816

Token 1004: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16023163497447968
    2. 'rstrip' → logprob: -1.910231590270996
    3. ' strip' → logprob: -12.160231590270996
    4. '_strip' → logprob: -13.160231590270996
    5. 'split' → logprob: -16.160232543945312
    6. '(strip' → logprob: -16.160232543945312
    7. '.rstrip' → logprob: -17.535232543945312
    8. 'str' → logprob: -17.535232543945312
    9. '-strip' → logprob: -18.035232543945312
    10. '.strip' → logprob: -18.160232543945312

Token 1005: '()
' (ID: 1234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7055202126502991
    2. '<|end|>' → logprob: -0.7055202126502991
    3. '()' → logprob: -5.330520153045654
    4. '<|end|>' → logprob: -5.580520153045654
    5. '```' → logprob: -6.705520153045654
    6. '
' → logprob: -7.205520153045654
    7. '#' → logprob: -7.330520153045654
    8. 'tokens' → logprob: -8.205520629882812
    9. 'token' → logprob: -8.830520629882812
    10. '_' → logprob: -9.580520629882812

Token 1006: 'rr' (ID: 1006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.249780638725497e-05
    2. '_r' → logprob: -11.250032424926758
    3. '_' → logprob: -12.250032424926758
    4. 'r' → logprob: -13.000032424926758
    5. '```' → logprob: -13.250032424926758
    6. ' def' → logprob: -13.375032424926758
    7. '<|end|>' → logprob: -13.500032424926758
    8. 'import' → logprob: -13.625032424926758
    9. '_n' → logprob: -13.875032424926758
    10. '_def' → logprob: -13.875032424926758

Token 1007: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5495312213897705
    2. ' =' → logprob: -1.2995312213897705
    3. '()' → logprob: -2.0495312213897705
    4. 'r' → logprob: -4.674530982971191
    5. 'def' → logprob: -5.049530982971191
    6. '=[]' → logprob: -6.799530982971191
    7. '_' → logprob: -8.049530982971191
    8. '()
' → logprob: -8.049530982971191
    9. '_=' → logprob: -8.299530982971191
    10. '=lambda' → logprob: -8.424530982971191

Token 1008: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4342693090438843
    2. '_r' → logprob: -1.1842693090438843
    3. 'sys' → logprob: -3.684269428253174
    4. 'int' → logprob: -4.809269428253174
    5. 'r' → logprob: -5.059269428253174
    6. ' lambda' → logprob: -5.934269428253174
    7. '(lambda' → logprob: -5.934269428253174
    8. 'input' → logprob: -7.559269428253174
    9. '_reader' → logprob: -7.809269428253174
    10. '_lambda' → logprob: -9.184268951416016

Token 1009: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05491185188293457
    2. ' :' → logprob: -3.0549118518829346
    3. ':_' → logprob: -5.3049116134643555
    4. '_r' → logprob: -7.4299116134643555
    5. ':int' → logprob: -8.179911613464355
    6. ':R' → logprob: -8.679911613464355
    7. ':r' → logprob: -8.804911613464355
    8. '():' → logprob: -9.554911613464355
    9. ' _' → logprob: -10.554911613464355
    10. 'r' → logprob: -11.304911613464355

Token 1010: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7449721097946167
    2. '_r' → logprob: -0.7449721097946167
    3. 'map' → logprob: -3.1199722290039062
    4. 'list' → logprob: -5.619972229003906
    5. 'r' → logprob: -6.494972229003906
    6. 'tuple' → logprob: -7.369972229003906
    7. 'input' → logprob: -8.369972229003906
    8. 'sys' → logprob: -8.869972229003906
    9. 'ints' → logprob: -9.994972229003906
    10. '_reader' → logprob: -10.119972229003906

Token 1011: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00011248346709180623
    2. '(_' → logprob: -9.500112533569336
    3. '_map' → logprob: -10.875112533569336
    4. 'map' → logprob: -11.125112533569336
    5. '(' → logprob: -13.375112533569336
    6. '(int' → logprob: -13.625112533569336
    7. '(range' → logprob: -14.875112533569336
    8. '
' → logprob: -15.750112533569336
    9. ' map' → logprob: -15.875112533569336
    10. '(
' → logprob: -16.125112533569336

Token 1012: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2014293223619461
    2. 'int' → logprob: -1.7014293670654297
    3. '_int' → logprob: -11.82642936706543
    4. '=int' → logprob: -12.95142936706543
    5. 'str' → logprob: -13.57642936706543
    6. '   ' → logprob: -13.57642936706543
    7. ' int' → logprob: -14.07642936706543
    8. '<int' → logprob: -14.57642936706543
    9. ',int' → logprob: -14.70142936706543
    10. '	int' → logprob: -14.95142936706543

Token 1013: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1985468715429306
    2. '(_' → logprob: -2.073546886444092
    3. '_r' → logprob: -3.073546886444092
    4. ',_' → logprob: -5.073546886444092
    5. '(' → logprob: -6.823546886444092
    6. ')' → logprob: -8.073546409606934
    7. ')(_' → logprob: -9.198546409606934
    8. ' ,' → logprob: -9.823546409606934
    9. '),' → logprob: -10.198546409606934
    10. '
' → logprob: -10.573546409606934

Token 1014: ' _' (ID: 1175)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.005931758787482977
    2. '_reader' → logprob: -5.130931854248047
    3. 'r' → logprob: -13.880931854248047
    4. ' _' → logprob: -14.130931854248047
    5. '_R' → logprob: -15.380931854248047
    6. 'Reader' → logprob: -15.630931854248047
    7. '_rd' → logprob: -15.755931854248047
    8. 'reader' → logprob: -15.880931854248047
    9. '_read' → logprob: -16.005931854248047
    10. '_rr' → logprob: -16.005931854248047

Token 1015: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01299668662250042
    2. '_reader' → logprob: -4.512996673583984
    3. 'reader' → logprob: -6.887996673583984
    4. '_r' → logprob: -7.012996673583984
    5. 'read' → logprob: -11.262996673583984
    6. '(r' → logprob: -12.762996673583984
    7. 'Reader' → logprob: -13.012996673583984
    8. '(reader' → logprob: -13.137996673583984
    9. '.reader' → logprob: -13.137996673583984
    10. ' reader' → logprob: -14.137996673583984

Token 1016: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.314625690924004e-05
    2. '))' → logprob: -10.000073432922363
    3. '.split' → logprob: -11.000073432922363
    4. '()' → logprob: -12.000073432922363
    5. '()))' → logprob: -12.625073432922363
    6. '.' → logprob: -14.500073432922363
    7. ' ().' → logprob: -14.750073432922363
    8. ')))' → logprob: -16.000072479248047
    9. '.strip' → logprob: -16.000072479248047
    10. '()[' → logprob: -16.125072479248047

Token 1017: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.061054359131958e-06
    2. 'rstrip' → logprob: -12.375007629394531
    3. 'strip' → logprob: -13.000007629394531
    4. ' split' → logprob: -14.375007629394531
    5. ')' → logprob: -14.875007629394531
    6. 'spl' → logprob: -15.000007629394531
    7. '(split' → logprob: -15.875007629394531
    8. '.split' → logprob: -16.75000762939453
    9. 's' → logprob: -16.87500762939453
    10. 'plit' → logprob: -17.00000762939453

Token 1018: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.32802340388298035
    2. '))' → logprob: -1.3280234336853027
    3. '()' → logprob: -4.328023433685303
    4. '()))
' → logprob: -6.578023433685303
    5. '))
' → logprob: -10.203022956848145
    6. '()));' → logprob: -10.953022956848145
    7. ')))' → logprob: -12.703022956848145
    8. '()))

' → logprob: -12.828022956848145
    9. ' ))' → logprob: -13.203022956848145
    10. '(' → logprob: -13.203022956848145

Token 1019: 'rr' (ID: 1006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0051030684262514114
    2. 'n' → logprob: -6.25510311126709
    3. '#' → logprob: -6.88010311126709
    4. 'w' → logprob: -7.75510311126709
    5. 'r' → logprob: -7.88010311126709
    6. 'print' → logprob: -8.63010311126709
    7. 'for' → logprob: -8.88010311126709
    8. '_' → logprob: -9.00510311126709
    9. 'N' → logprob: -9.00510311126709
    10. 's' → logprob: -9.63010311126709

Token 1020: 't' (ID: 83)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3885921537876129
    2. '=' → logprob: -1.2635921239852905
    3. '()' → logprob: -3.76359224319458
    4. 'def' → logprob: -4.88859224319458
    5. '_' → logprob: -6.01359224319458
    6. '=[]' → logprob: -6.26359224319458
    7. 'r' → logprob: -6.63859224319458
    8. '=lambda' → logprob: -7.01359224319458
    9. ')' → logprob: -7.76359224319458
    10. 's' → logprob: -8.138591766357422

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05586974322795868
    2. ' =' → logprob: -3.0558698177337646
    3. '=lambda' → logprob: -4.9308695793151855
    4. 'def' → logprob: -11.930870056152344
    5. '=[]' → logprob: -11.930870056152344
    6. '=_' → logprob: -12.305870056152344
    7. 'r' → logprob: -12.680870056152344
    8. 'lambda' → logprob: -12.930870056152344
    9. '=r' → logprob: -13.180870056152344
    10. '()' → logprob: -13.180870056152344

Token 1022: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.008200351148843765
    2. ' lambda' → logprob: -4.883200168609619
    3. '_r' → logprob: -7.758200168609619
    4. '(lambda' → logprob: -9.508200645446777
    5. 'r' → logprob: -9.633200645446777
    6. 'rr' → logprob: -12.008200645446777
    7. '_lambda' → logprob: -12.008200645446777
    8. '=lambda' → logprob: -12.258200645446777
    9. '_rr' → logprob: -12.883200645446777
    10. 'sys' → logprob: -13.883200645446777

Token 1023: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.42374929785728455
    2. 'lambda' → logprob: -1.173749327659607
    3. ':' → logprob: -4.5487494468688965
    4. '(lambda' → logprob: -4.7987494468688965
    5. '()' → logprob: -4.9237494468688965
    6. '_r' → logprob: -6.0487494468688965
    7. 'r' → logprob: -6.1737494468688965
    8. 'str' → logprob: -6.6737494468688965
    9. 'sys' → logprob: -6.7987494468688965
    10. '_lambda' → logprob: -7.0487494468688965

Token 1024: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7213363647460938
    2. 'tuple' → logprob: -1.7213363647460938
    3. '_r' → logprob: -1.8463363647460938
    4. 'lambda' → logprob: -1.8463363647460938
    5. 'sys' → logprob: -4.721336364746094
    6. 'read' → logprob: -5.596336364746094
    7. 'r' → logprob: -6.971336364746094
    8. ' lambda' → logprob: -6.971336364746094
    9. 'range' → logprob: -7.096336364746094
    10. 'map' → logprob: -7.471336364746094

Token 1025: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07272833585739136
    2. 'int' → logprob: -2.822728395462036
    3. '(map' → logprob: -4.697728157043457
    4. '(int' → logprob: -6.697728157043457
    5. '_map' → logprob: -8.197728157043457
    6. '_int' → logprob: -10.697728157043457
    7. '[int' → logprob: -10.822728157043457
    8. '_r' → logprob: -11.322728157043457
    9. ' map' → logprob: -12.072728157043457
    10. 'ints' → logprob: -12.572728157043457

Token 1026: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009125363430939615
    2. '(int' → logprob: -7.000912666320801
    3. '_int' → logprob: -14.7509126663208
    4. ' int' → logprob: -15.1259126663208
    5. '=int' → logprob: -15.3759126663208
    6. '[int' → logprob: -16.875911712646484
    7. '<int' → logprob: -17.375911712646484
    8. '   ' → logprob: -17.500911712646484
    9. 'str' → logprob: -17.625911712646484
    10. '	int' → logprob: -18.250911712646484

Token 1027: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001234518364071846
    2. '(' → logprob: -7.001234531402588
    3. '(_' → logprob: -8.25123405456543
    4. '_r' → logprob: -10.25123405456543
    5. ',_' → logprob: -10.62623405456543
    6. ',r' → logprob: -13.75123405456543
    7. ' ,' → logprob: -14.75123405456543
    8. '(),' → logprob: -14.87623405456543
    9. ' ' → logprob: -15.75123405456543
    10. '   ' → logprob: -15.75123405456543

Token 1028: ' _' (ID: 1175)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.438573680294212e-06
    2. 'r' → logprob: -12.750005722045898
    3. ' _' → logprob: -13.625005722045898
    4. '_rr' → logprob: -13.750005722045898
    5. '_reader' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.5000057220459
    7. ' ' → logprob: -17.6250057220459
    8. '_R' → logprob: -17.6250057220459
    9. '(_' → logprob: -19.0000057220459
    10. '  ' → logprob: -19.2500057220459

Token 1029: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007960893213748932
    2. '_r' → logprob: -4.882960796356201
    3. '_reader' → logprob: -8.50796127319336
    4. '(r' → logprob: -10.00796127319336
    5. 'n' → logprob: -10.63296127319336
    6. 'reader' → logprob: -10.88296127319336
    7. 'input' → logprob: -11.50796127319336
    8. 'split' → logprob: -12.00796127319336
    9. '.readline' → logprob: -12.00796127319336
    10. '.r' → logprob: -12.25796127319336

Token 1030: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. ').' → logprob: -13.75000286102295
    3. '()' → logprob: -14.50000286102295
    4. ' ().' → logprob: -14.87500286102295
    5. '.' → logprob: -16.000001907348633
    6. '.split' → logprob: -16.125001907348633
    7. '().__' → logprob: -16.125001907348633
    8. '()[' → logprob: -16.250001907348633
    9. '>().' → logprob: -16.375001907348633
    10. ')' → logprob: -16.625001907348633

Token 1031: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -11.875009536743164
    3. 'strip' → logprob: -14.375009536743164
    4. ' split' → logprob: -14.750009536743164
    5. '))' → logprob: -15.500009536743164
    6. '(split' → logprob: -15.500009536743164
    7. '()' → logprob: -15.625009536743164
    8. 'spl' → logprob: -16.125009536743164
    9. 'rstrip' → logprob: -16.125009536743164
    10. 'next' → logprob: -16.250009536743164

Token 1032: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029852306470274925
    2. '()))' → logprob: -3.5298523902893066
    3. '()' → logprob: -9.279851913452148
    4. ')' → logprob: -12.904851913452148
    5. ')))' → logprob: -13.154851913452148
    6. '())' → logprob: -13.279851913452148
    7. '))
' → logprob: -13.529851913452148
    8. '()))
' → logprob: -14.654851913452148
    9. ' ))' → logprob: -15.154851913452148
    10. '__))' → logprob: -15.904851913452148

Token 1033: 'r' (ID: 81)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00932381022721529
    2. '#' → logprob: -5.384323596954346
    3. 'n' → logprob: -6.759323596954346
    4. 'class' → logprob: -7.509323596954346
    5. 'import' → logprob: -7.634323596954346
    6. '```' → logprob: -7.884323596954346
    7. 'r' → logprob: -8.259324073791504
    8. 'for' → logprob: -8.259324073791504
    9. 'print' → logprob: -8.634324073791504
    10. 'rr' → logprob: -8.759324073791504

Token 1034: 'map' (ID: 3726)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13542616367340088
    2. 'aw' → logprob: -2.6354260444641113
    3. 'ange' → logprob: -4.010426044464111
    4. ' =' → logprob: -4.260426044464111
    5. 'ead' → logprob: -5.385426044464111
    6. 'int' → logprob: -6.010426044464111
    7. 'range' → logprob: -6.135426044464111
    8. 'and' → logprob: -6.135426044464111
    9. 'def' → logprob: -6.760426044464111
    10. 'andom' → logprob: -7.260426044464111

Token 1035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4908168613910675
    2. ' =' → logprob: -0.9908168315887451
    3. '=lambda' → logprob: -4.115817070007324
    4. '(lambda' → logprob: -9.365817070007324
    5. ' ' → logprob: -9.615817070007324
    6. 't' → logprob: -10.115817070007324
    7. '_' → logprob: -10.740817070007324
    8. '=_' → logprob: -11.365817070007324
    9. ',' → logprob: -11.490817070007324
    10. '_=' → logprob: -11.490817070007324

Token 1036: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.044762421399354935
    2. ' lambda' → logprob: -3.544762372970581
    3. '(lambda' → logprob: -4.79476261138916
    4. 'map' → logprob: -5.04476261138916
    5. 'range' → logprob: -9.54476261138916
    6. '=lambda' → logprob: -10.16976261138916
    7. ' map' → logprob: -10.66976261138916
    8. 'list' → logprob: -10.79476261138916
    9. '   ' → logprob: -11.41976261138916
    10. '_lambda' → logprob: -12.04476261138916

Token 1037: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4870201349258423
    2. 'lambda' → logprob: -1.9870201349258423
    3. 'f' → logprob: -2.6120200157165527
    4. 'list' → logprob: -3.2370200157165527
    5. ':' → logprob: -3.3620200157165527
    6. 'map' → logprob: -3.4870200157165527
    7. 'func' → logprob: -4.112020015716553
    8. '=lambda' → logprob: -4.362020015716553
    9. 'sys' → logprob: -4.612020015716553
    10. ':int' → logprob: -5.487020015716553

Token 1038: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.006772568449378014
    2. 'list' → logprob: -5.381772518157959
    3. ' map' → logprob: -6.381772518157959
    4. 'dict' → logprob: -7.881772518157959
    5. 'lambda' → logprob: -10.631772994995117
    6. 'range' → logprob: -11.256772994995117
    7. 'rr' → logprob: -11.381772994995117
    8. '   ' → logprob: -11.881772994995117
    9. ' ' → logprob: -12.131772994995117
    10. '_map' → logprob: -12.256772994995117

Token 1039: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008622255176305771
    2. 'int' → logprob: -4.758622169494629
    3. '(_' → logprob: -12.883622169494629
    4. '_int' → logprob: -12.883622169494629
    5. '(' → logprob: -14.633622169494629
    6. '<int' → logprob: -14.883622169494629
    7. '()' → logprob: -15.008622169494629
    8. '=int' → logprob: -15.133622169494629
    9. '(str' → logprob: -15.258622169494629
    10. '(lambda' → logprob: -15.383622169494629

Token 1040: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1655712127685547
    2. '()' → logprob: -1.4155712127685547
    3. '(),' → logprob: -1.5405712127685547
    4. '())' → logprob: -2.1655712127685547
    5. ')' → logprob: -3.2905712127685547
    6. '_r' → logprob: -3.4155712127685547
    7. '(' → logprob: -3.7905712127685547
    8. '(_' → logprob: -3.9155712127685547
    9. ',_' → logprob: -7.040571212768555
    10. '   ' → logprob: -7.915571212768555

Token 1041: ' _' (ID: 1175)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.478889215737581e-05
    2. 'sys' → logprob: -10.375054359436035
    3. '_sys' → logprob: -11.250054359436035
    4. ' _' → logprob: -12.375054359436035
    5. '_rr' → logprob: -12.375054359436035
    6. 'r' → logprob: -14.125054359436035
    7. '_reader' → logprob: -14.500054359436035
    8. ' sys' → logprob: -15.000054359436035
    9. '_rc' → logprob: -15.875054359436035
    10. '_s' → logprob: -16.37505531311035

Token 1042: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003060184419155121
    2. '_reader' → logprob: -6.128060340881348
    3. '_r' → logprob: -7.378060340881348
    4. 'reader' → logprob: -8.628060340881348
    5. 'read' → logprob: -10.378060340881348
    6. '(r' → logprob: -11.128060340881348
    7. 'sys' → logprob: -11.753060340881348
    8. ' r' → logprob: -12.253060340881348
    9. '.r' → logprob: -13.503060340881348
    10. '(' → logprob: -13.503060340881348

Token 1043: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.0126840758603066e-05
    2. ')' → logprob: -10.875040054321289
    3. '()' → logprob: -10.875040054321289
    4. '())' → logprob: -13.875040054321289
    5. ').' → logprob: -15.000040054321289
    6. '.split' → logprob: -15.625040054321289
    7. ' ().' → logprob: -15.625040054321289
    8. '.' → logprob: -15.750040054321289
    9. '()[' → logprob: -15.750040054321289
    10. '))' → logprob: -16.25004005432129

Token 1044: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2127087504486553e-05
    2. 'strip' → logprob: -11.125021934509277
    3. ')' → logprob: -12.000021934509277
    4. ' split' → logprob: -13.875021934509277
    5. '.split' → logprob: -16.500022888183594
    6. 'rstrip' → logprob: -17.000022888183594
    7. 'read' → logprob: -17.375022888183594
    8. ').' → logprob: -17.625022888183594
    9. 'spl' → logprob: -17.625022888183594
    10. '_split' → logprob: -17.625022888183594

Token 1045: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07915414869785309
    2. '())' → logprob: -2.5791542530059814
    3. '()' → logprob: -8.579154014587402
    4. '))' → logprob: -9.579154014587402
    5. ')#' → logprob: -13.329154014587402
    6. ' )' → logprob: -13.704154014587402
    7. '();)' → logprob: -13.954154014587402
    8. '()))' → logprob: -14.204154014587402
    9. ')
' → logprob: -14.579154014587402
    10. ')}' → logprob: -14.579154014587402

Token 1046: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007182637695223093
    2. '#' → logprob: -5.507182598114014
    3. 'class' → logprob: -6.507182598114014
    4. 'n' → logprob: -7.507182598114014
    5. 'for' → logprob: -7.757182598114014
    6. 'import' → logprob: -8.507183074951172
    7. 'N' → logprob: -9.257183074951172
    8. '_' → logprob: -9.632183074951172
    9. 'print' → logprob: -10.132183074951172
    10. 'data' → logprob: -10.632183074951172

Token 1047: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03926568478345871
    2. ' =' → logprob: -3.2892656326293945
    3. ',' → logprob: -7.0392656326293945
    4. '=int' → logprob: -8.164265632629395
    5. '=N' → logprob: -10.539265632629395
    6. '.' → logprob: -11.789265632629395
    7. '=sys' → logprob: -12.039265632629395
    8. '=input' → logprob: -12.414265632629395
    9. ',N' → logprob: -12.664265632629395
    10. ' ' → logprob: -13.414265632629395

Token 1048: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007543915882706642
    2. '0' → logprob: -6.007544040679932
    3. ' int' → logprob: -6.257544040679932
    4. 'rr' → logprob: -6.382544040679932
    5. '10' → logprob: -7.132544040679932
    6. '100' → logprob: -9.257543563842773
    7. 'r' → logprob: -9.257543563842773
    8. '20' → logprob: -9.382543563842773
    9. '5' → logprob: -9.882543563842773
    10. '1' → logprob: -10.007543563842773

Token 1049: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.11331364512443542
    2. '()' → logprob: -2.363313674926758
    3. '(input' → logprob: -4.863313674926758
    4. '(' → logprob: -5.988313674926758
    5. '_r' → logprob: -6.738313674926758
    6. 'input' → logprob: -6.863313674926758
    7. '(sys' → logprob: -7.863313674926758
    8. '_input' → logprob: -10.113313674926758
    9. '()
' → logprob: -10.488313674926758
    10. 'sys' → logprob: -10.738313674926758

Token 1050: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3353906571865082
    2. '_r' → logprob: -2.210390567779541
    3. '_reader' → logprob: -2.585390567779541
    4. '()' → logprob: -2.710390567779541
    5. '())' → logprob: -3.460390567779541
    6. '())
' → logprob: -8.0853910446167
    7. 'reader' → logprob: -8.3353910446167
    8. '(r' → logprob: -8.4603910446167
    9. '().' → logprob: -8.7103910446167
    10. '()
' → logprob: -8.9603910446167

Token 1051: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005755512393079698
    2. '()' → logprob: -7.500575542449951
    3. '())
' → logprob: -11.37557601928711
    4. ')' → logprob: -11.87557601928711
    5. '().' → logprob: -12.62557601928711
    6. ' ())' → logprob: -14.75057601928711
    7. '();)' → logprob: -16.00057601928711
    8. '()
' → logprob: -16.25057601928711
    9. '())

' → logprob: -16.25057601928711
    10. '(' → logprob: -16.37557601928711

Token 1052: 'lst' (ID: 65430)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5553068518638611
    2. 'A' → logprob: -0.9303068518638611
    3. 'nums' → logprob: -4.805306911468506
    4. 'vals' → logprob: -4.930306911468506
    5. 'a' → logprob: -5.055306911468506
    6. 'lst' → logprob: -5.305306911468506
    7. 'for' → logprob: -7.180306911468506
    8. 'numbers' → logprob: -7.430306911468506
    9. 'dp' → logprob: -7.555306911468506
    10. 'data' → logprob: -7.680306911468506

Token 1053: '_of' (ID: 8023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016072848811745644
    2. ' =' → logprob: -4.141072750091553
    3. 'lst' → logprob: -10.891073226928711
    4. '=[]' → logprob: -11.641073226928711
    5. '()' → logprob: -12.516073226928711
    6. '_' → logprob: -13.391073226928711
    7. '=list' → logprob: -13.891073226928711
    8. '   ' → logprob: -14.266073226928711
    9. ' ' → logprob: -14.516073226928711
    10. '=[]
' → logprob: -14.766073226928711

Token 1054: '_tuple' (ID: 53371)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.608282744884491
    2. 'lst' → logprob: -1.1082828044891357
    3. 'rr' → logprob: -2.6082828044891357
    4. 'int' → logprob: -4.108282566070557
    5. 't' → logprob: -4.483282566070557
    6. 'numbers' → logprob: -5.233282566070557
    7. 'nums' → logprob: -6.108282566070557
    8. 'list' → logprob: -6.608282566070557
    9. 'lists' → logprob: -6.608282566070557
    10. ' =' → logprob: -6.608282566070557

Token 1055: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015341434627771378
    2. ' =' → logprob: -6.5015339851379395
    3. '=' → logprob: -10.376534461975098
    4. '=s' → logprob: -15.751534461975098
    5. '_s' → logprob: -15.751534461975098
    6. 'es' → logprob: -16.00153350830078
    7. ' s' → logprob: -16.25153350830078
    8. '=[]' → logprob: -16.62653350830078
    9. '=[]
' → logprob: -17.00153350830078
    10. '()' → logprob: -18.12653350830078

Token 1056: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012789263855665922
    2. 'rr' → logprob: -7.876278877258301
    3. '[t' → logprob: -8.6262788772583
    4. '[arr' → logprob: -8.6262788772583
    5. '[r' → logprob: -9.0012788772583
    6. '[]
' → logprob: -9.7512788772583
    7. '[N' → logprob: -9.7512788772583
    8. '[]' → logprob: -10.2512788772583
    9. '[list' → logprob: -10.2512788772583
    10. 'tuple' → logprob: -10.2512788772583

Token 1057: 'rr' (ID: 1006)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.8313960433006287
    2. 'rr' → logprob: -1.2063961029052734
    3. 'tuple' → logprob: -1.3313961029052734
    4. 'r' → logprob: -7.581396102905273
    5. 'tt' → logprob: -8.206396102905273
    6. '(tuple' → logprob: -8.831396102905273
    7. ' tuple' → logprob: -9.456396102905273
    8. '(' → logprob: -9.956396102905273
    9. '(rr' → logprob: -9.956396102905273
    10. '   ' → logprob: -11.456396102905273

Token 1058: 't' (ID: 83)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0782315582036972
    2. '()]' → logprob: -2.8282315731048584
    3. '())' → logprob: -4.453231334686279
    4. 't' → logprob: -5.453231334686279
    5. '()]
' → logprob: -8.828231811523438
    6. ' ()' → logprob: -11.453231811523438
    7. '()
' → logprob: -12.078231811523438
    8. '()][' → logprob: -12.203231811523438
    9. '()[' → logprob: -12.328231811523438
    10. '(),' → logprob: -12.328231811523438

Token 1059: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01173882745206356
    2. '())' → logprob: -4.6367387771606445
    3. '()]' → logprob: -6.6367387771606445
    4. '(N' → logprob: -7.3867387771606445
    5. '()
' → logprob: -10.886738777160645
    6. ' ()' → logprob: -11.511738777160645
    7. '(' → logprob: -12.761738777160645
    8. '(),' → logprob: -13.011738777160645
    9. '()[' → logprob: -13.136738777160645
    10. '().' → logprob: -13.136738777160645

Token 1060: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03308362886309624
    2. 'for' → logprob: -3.90808367729187
    3. '(N' → logprob: -4.408083438873291
    4. ' for' → logprob: -8.40808391571045
    5. '(' → logprob: -9.90808391571045
    6. '(i' → logprob: -12.78308391571045
    7. '()]' → logprob: -13.53308391571045
    8. ' ()' → logprob: -13.65808391571045
    9. '_' → logprob: -13.65808391571045
    10. ')' → logprob: -13.78308391571045

Token 1061: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02207471802830696
    2. 'range' → logprob: -4.5220746994018555
    3. ' range' → logprob: -4.5220746994018555
    4. '_range' → logprob: -9.647074699401855
    5. 'in' → logprob: -11.147074699401855
    6. ' in' → logprob: -11.772074699401855
    7. ' _' → logprob: -12.022074699401855
    8. '(range' → logprob: -12.147074699401855
    9. '_in' → logprob: -13.897074699401855
    10. '	range' → logprob: -15.397074699401855

Token 1062: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.133488267660141
    2. 'range' → logprob: -2.133488178253174
    3. ' in' → logprob: -5.133488178253174
    4. ' range' → logprob: -7.383488178253174
    5. '  ' → logprob: -11.633488655090332
    6. ' ' → logprob: -12.633488655090332
    7. '(range' → logprob: -12.883488655090332
    8. '_' → logprob: -13.133488655090332
    9. '   ' → logprob: -13.133488655090332
    10. 'N' → logprob: -13.883488655090332

Token 1063: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '_' → logprob: -17.50002098083496
    4. '(range' → logprob: -17.87502098083496
    5. '   ' → logprob: -18.37502098083496
    6. '	range' → logprob: -18.37502098083496
    7. '_range' → logprob: -19.12502098083496
    8. '  ' → logprob: -19.75002098083496
    9. ' ' → logprob: -20.87502098083496
    10. '
' → logprob: -21.00002098083496

Token 1064: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.392202976712724e-06
    2. 'N' → logprob: -12.000006675720215
    3. '(' → logprob: -15.500006675720215
    4. '(
' → logprob: -18.8750057220459
    5. '	N' → logprob: -19.0000057220459
    6. '(n' → logprob: -19.0000057220459
    7. ' (' → logprob: -20.0000057220459
    8. '(int' → logprob: -20.1250057220459
    9. ' N' → logprob: -20.2500057220459
    10. '   ' → logprob: -20.3750057220459

Token 1065: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.747814349073451e-05
    2. ')' → logprob: -11.375017166137695
    3. ']' → logprob: -12.625017166137695
    4. '()]' → logprob: -13.250017166137695
    5. ')]
' → logprob: -14.625017166137695
    6. '())' → logprob: -15.000017166137695
    7. ')],' → logprob: -17.000017166137695
    8. ')])' → logprob: -17.250017166137695
    9. '()' → logprob: -17.500017166137695
    10. '}]' → logprob: -17.625017166137695

Token 1066: 'something' (ID: 64493)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7765424251556396
    2. 'dp' → logprob: -0.9015424251556396
    3. 'from' → logprob: -3.4015424251556396
    4. 's' → logprob: -4.026542663574219
    5. 'ans' → logprob: -4.526542663574219
    6. 'freq' → logprob: -4.651542663574219
    7. 'res' → logprob: -4.901542663574219
    8. 'd' → logprob: -5.026542663574219
    9. 'cnt' → logprob: -5.026542663574219
    10. 'result' → logprob: -5.276542663574219

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000939450750593096
    2. '=
' → logprob: -8.37593936920166
    3. '=[]' → logprob: -8.75093936920166
    4. ' =' → logprob: -9.12593936920166
    5. '_sorted' → logprob: -9.25093936920166
    6. '=sum' → logprob: -9.62593936920166
    7. 'sorted' → logprob: -10.00093936920166
    8. '.sort' → logprob: -10.37593936920166
    9. '=s' → logprob: -10.62593936920166
    10. 's' → logprob: -10.75093936920166

Token 1068: ' [(' (ID: 43900)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8949504494667053
    2. '0' → logprob: -1.2699503898620605
    3. '[]' → logprob: -1.8949503898620605
    4. '[' → logprob: -3.2699503898620605
    5. 'sorted' → logprob: -3.2699503898620605
    6. 'sum' → logprob: -3.5199503898620605
    7. '{' → logprob: -4.3949503898620605
    8. 'dict' → logprob: -4.6449503898620605
    9. 'lst' → logprob: -4.7699503898620605
    10. '1' → logprob: -4.7699503898620605

Token 1069: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09656639397144318
    2. 'lst' → logprob: -3.9715664386749268
    3. 'a' → logprob: -4.096566200256348
    4. 'i' → logprob: -4.346566200256348
    5. '0' → logprob: -4.596566200256348
    6. 'v' → logprob: -4.846566200256348
    7. 't' → logprob: -5.221566200256348
    8. 'val' → logprob: -5.846566200256348
    9. 'item' → logprob: -6.346566200256348
    10. 'l' → logprob: -6.471566200256348

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5954446792602539
    2. '[' → logprob: -1.095444679260254
    3. ',y' → logprob: -2.220444679260254
    4. ',x' → logprob: -6.345444679260254
    5. '-' → logprob: -6.845444679260254
    6. ',i' → logprob: -6.970444679260254
    7. '0' → logprob: -7.845444679260254
    8. ' ,' → logprob: -8.345444679260254
    9. ',k' → logprob: -8.595444679260254
    10. ')' → logprob: -8.845444679260254

Token 1071: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0061134095303714275
    2. 'x' → logprob: -5.631113529205322
    3. ' y' → logprob: -6.631113529205322
    4. '1' → logprob: -7.506113529205322
    5. 'p' → logprob: -9.256113052368164
    6. ')' → logprob: -9.881113052368164
    7. '(y' → logprob: -9.881113052368164
    8. 'z' → logprob: -10.006113052368164
    9. 'a' → logprob: -10.381113052368164
    10. '2' → logprob: -10.631113052368164

Token 1072: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12655623257160187
    2. ',' → logprob: -2.251556158065796
    3. '+' → logprob: -4.876556396484375
    4. ' +' → logprob: -6.876556396484375
    5. ',x' → logprob: -7.126556396484375
    6. 'for' → logprob: -7.501556396484375
    7. ' for' → logprob: -7.501556396484375
    8. '-' → logprob: -7.626556396484375
    9. ',y' → logprob: -7.751556396484375
    10. '[' → logprob: -7.751556396484375

Token 1073: ' y' (ID: 342)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5475220084190369
    2. 'x' → logprob: -0.9225220084190369
    3. 'abs' → logprob: -4.922522068023682
    4. '1' → logprob: -5.547522068023682
    5. 'y' → logprob: -5.797522068023682
    6. '(x' → logprob: -6.172522068023682
    7. '0' → logprob: -6.422522068023682
    8. ' z' → logprob: -7.422522068023682
    9. '(' → logprob: -7.547522068023682
    10. ' x' → logprob: -7.672522068023682

Token 1074: '-x' (ID: 12651)
  Prédit: '-x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.4149196445941925
    2. ')' → logprob: -1.4149196147918701
    3. '-' → logprob: -3.03991961479187
    4. '+' → logprob: -3.66491961479187
    5. ' -' → logprob: -4.289919853210449
    6. '+x' → logprob: -4.914919853210449
    7. '*' → logprob: -8.16491985321045
    8. 'x' → logprob: -8.16491985321045
    9. '-y' → logprob: -8.16491985321045
    10. '**' → logprob: -8.53991985321045

Token 1075: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034893216798081994
    2. ' )' → logprob: -8.750349044799805
    3. '')' → logprob: -9.375349044799805
    4. '+' → logprob: -9.750349044799805
    5. ',)' → logprob: -11.000349044799805
    6. ',' → logprob: -11.625349044799805
    7. ')
' → logprob: -11.875349044799805
    8. ' +' → logprob: -12.375349044799805
    9. '")' → logprob: -13.125349044799805
    10. '[' → logprob: -14.000349044799805

Token 1076: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018981115892529488
    2. ' for' → logprob: -4.643980979919434
    3. 'for' → logprob: -4.893980979919434
    4. '(x' → logprob: -7.018980979919434
    5. '   ' → logprob: -8.018980979919434
    6. ',' → logprob: -8.643980979919434
    7. ' in' → logprob: -9.018980979919434
    8. ' )' → logprob: -10.018980979919434
    9. ' ' → logprob: -10.268980979919434
    10. ',)' → logprob: -10.768980979919434

Token 1077: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02976299449801445
    2. '(x' → logprob: -3.5297629833221436
    3. ' x' → logprob: -11.654763221740723
    4. '_,' → logprob: -13.529763221740723
    5. ' (' → logprob: -13.779763221740723
    6. '(_,' → logprob: -13.904763221740723
    7. 'lst' → logprob: -15.529763221740723
    8. '_x' → logprob: -16.029762268066406
    9. '(' → logprob: -16.654762268066406
    10. '_' → logprob: -17.154762268066406

Token 1078: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20158125460147858
    2. ',y' → logprob: -1.7015812397003174
    3. ',_' → logprob: -9.201581001281738
    4. ' ,' → logprob: -11.201581001281738
    5. ',l' → logprob: -11.326581001281738
    6. ',s' → logprob: -11.576581001281738
    7. ',x' → logprob: -12.076581001281738
    8. ',
' → logprob: -12.076581001281738
    9. ' in' → logprob: -12.201581001281738
    10. ',t' → logprob: -12.326581001281738

Token 1079: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132663369178772
    2. 'in' → logprob: -1.3132662773132324
    3. ',' → logprob: -12.93826675415039
    4. ')' → logprob: -14.18826675415039
    5. 'lst' → logprob: -14.31326675415039
    6. ' ' → logprob: -14.68826675415039
    7. '<|end|>' → logprob: -16.43826675415039
    8. ']' → logprob: -16.93826675415039
    9. 's' → logprob: -17.06326675415039
    10. '
' → logprob: -17.18826675415039

Token 1080: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.0206720617134124e-05
    2. ' lst' → logprob: -11.50001049041748
    3. 'list' → logprob: -18.875009536743164
    4. 'ls' → logprob: -19.250009536743164
    5. '(lst' → logprob: -19.375009536743164
    6. '_lst' → logprob: -21.375009536743164
    7. 'l' → logprob: -22.250009536743164
    8. 'lt' → logprob: -22.375009536743164
    9. '.lst' → logprob: -22.750009536743164
    10. 'll' → logprob: -23.125009536743164

Token 1081: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1041145626222715e-05
    2. 'of' → logprob: -12.125011444091797
    3. 't' → logprob: -12.375011444091797
    4. 'tuple' → logprob: -14.000011444091797
    5. ')' → logprob: -15.875011444091797
    6. '_to' → logprob: -16.250011444091797
    7. '_OF' → logprob: -16.500011444091797
    8. '_t' → logprob: -16.625011444091797
    9. 'Of' → logprob: -16.750011444091797
    10. '_for' → logprob: -16.875011444091797

Token 1082: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.014560087583959103
    2. 'range' → logprob: -4.514560222625732
    3. '_tuple' → logprob: -5.764560222625732
    4. 't' → logprob: -8.514559745788574
    5. 'tu' → logprob: -8.889559745788574
    6. '_t' → logprob: -10.764559745788574
    7. 'uple' → logprob: -12.764559745788574
    8. '(tuple' → logprob: -12.764559745788574
    9. ' tuple' → logprob: -13.639559745788574
    10. '1' → logprob: -14.764559745788574

Token 1083: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004946522531099617
    2. ')]' → logprob: -7.750494480133057
    3. ' ]' → logprob: -10.000494956970215
    4. '()]' → logprob: -11.625494956970215
    5. ']
' → logprob: -12.250494956970215
    6. ')' → logprob: -13.000494956970215
    7. '   ' → logprob: -14.750494956970215
    8. '`]' → logprob: -14.750494956970215
    9. '<|end|>' → logprob: -14.875494956970215
    10. '}]' → logprob: -15.375494956970215

Token 1084: 'something' (ID: 64493)
  Prédit: 'something'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.0700034499168396
    2. 'dp' → logprob: -3.0700035095214844
    3. 'sorted' → logprob: -5.195003509521484
    4. 's' → logprob: -6.320003509521484
    5. 'from' → logprob: -6.320003509521484
    6. 'cnt' → logprob: -6.820003509521484
    7. 'lst' → logprob: -6.945003509521484
    8. '#' → logprob: -7.070003509521484
    9. 'by' → logprob: -7.445003509521484
    10. 'interval' → logprob: -7.445003509521484

Token 1085: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1086: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.12020163983106613
    2. 'key' → logprob: -2.870201587677002
    3. '(reverse' → logprob: -3.620201587677002
    4. '()' → logprob: -3.620201587677002
    5. 'reverse' → logprob: -5.870201587677002
    6. '()
' → logprob: -8.74520206451416
    7. ',key' → logprob: -11.24520206451416
    8. ' key' → logprob: -12.24520206451416
    9. '();' → logprob: -12.24520206451416
    10. '.reverse' → logprob: -12.49520206451416

Token 1087: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.062000297009944916
    2. '=' → logprob: -2.812000274658203
    3. 'lambda' → logprob: -11.312000274658203
    4. ' =' → logprob: -11.437000274658203
    5. '=item' → logprob: -11.562000274658203
    6. '=_' → logprob: -17.187000274658203
    7. '=
' → logprob: -17.187000274658203
    8. '   ' → logprob: -18.812000274658203
    9. '=(' → logprob: -19.062000274658203
    10. '=int' → logprob: -19.437000274658203

Token 1088: 'itg' (ID: 177123)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0012959542218595743
    2. 'item' → logprob: -7.751296043395996
    3. 'itg' → logprob: -7.751296043395996
    4. 'it' → logprob: -8.501296043395996
    5. '(lambda' → logprob: -9.001296043395996
    6. '=lambda' → logprob: -9.376296043395996
    7. ' lambda' → logprob: -11.376296043395996
    8. 'itm' → logprob: -12.251296043395996
    9. '   ' → logprob: -13.501296043395996
    10. 'getitem' → logprob: -13.501296043395996

Token 1089: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023444509133696556
    2. '(lambda' → logprob: -4.148444652557373
    3. '2' → logprob: -5.148444652557373
    4. 'lambda' → logprob: -7.023444652557373
    5. '(-' → logprob: -7.773444652557373
    6. '((' → logprob: -8.523444175720215
    7. '0' → logprob: -10.523444175720215
    8. '[' → logprob: -11.523444175720215
    9. '3' → logprob: -12.273444175720215
    10. '1' → logprob: -12.398444175720215

Token 1090: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005502560641616583
    2. 'lambda' → logprob: -5.755502700805664
    3. '(' → logprob: -6.380502700805664
    4. '(lambda' → logprob: -7.755502700805664
    5. '0' → logprob: -9.630502700805664
    6. 'it' → logprob: -9.630502700805664
    7. '-' → logprob: -10.005502700805664
    8. '[' → logprob: -12.130502700805664
    9. '3' → logprob: -12.255502700805664
    10. '=lambda' → logprob: -12.380502700805664

Token 1091: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06675827503204346
    2. ',' → logprob: -2.816758155822754
    3. ')' → logprob: -5.691758155822754
    4. '),' → logprob: -6.691758155822754
    5. ')+' → logprob: -10.191758155822754
    6. '))
' → logprob: -10.566758155822754
    7. ')))' → logprob: -10.816758155822754
    8. ')]' → logprob: -11.441758155822754
    9. ',key' → logprob: -11.566758155822754
    10. ' ,' → logprob: -11.691758155822754

Token 1092: 'clock' (ID: 34421)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6101318001747131
    2. 'dp' → logprob: -1.9851317405700684
    3. 'ans' → logprob: -2.2351317405700684
    4. 'i' → logprob: -3.3601317405700684
    5. 'res' → logprob: -3.7351317405700684
    6. 'last' → logprob: -4.235131740570068
    7. 'prev' → logprob: -4.360131740570068
    8. 'idx' → logprob: -4.610131740570068
    9. 'cnt' → logprob: -4.610131740570068
    10. 'cur' → logprob: -4.735131740570068

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07040707021951675
    2. ' =' → logprob: -2.8204071521759033
    3. 'wise' → logprob: -5.070406913757324
    4. '=[]' → logprob: -7.195406913757324
    5. '=time' → logprob: -8.445406913757324
    6. 'w' → logprob: -8.945406913757324
    7. '_w' → logprob: -9.570406913757324
    8. '_=' → logprob: -9.695406913757324
    9. '={}' → logprob: -9.695406913757324
    10. 'tower' → logprob: -9.820406913757324

Token 1094: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02103017456829548
    2. '-' → logprob: -4.396029949188232
    3. '1' → logprob: -5.646029949188232
    4. 'something' → logprob: -6.271029949188232
    5. 'float' → logprob: -7.021029949188232
    6. 'N' → logprob: -7.771029949188232
    7. '[' → logprob: -8.02103042602539
    8. 'False' → logprob: -8.27103042602539
    9. '-s' → logprob: -8.64603042602539
    10. 'lst' → logprob: -9.02103042602539

Token 1095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004991813097149134
    2. '1' → logprob: -5.8799920082092285
    3. 'something' → logprob: -7.2549920082092285
    4. 'lambda' → logprob: -7.8799920082092285
    5. 'N' → logprob: -8.37999153137207
    6. 'len' → logprob: -8.50499153137207
    7. '[' → logprob: -8.62999153137207
    8. 'lst' → logprob: -8.75499153137207
    9. 'max' → logprob: -9.75499153137207
    10. '-' → logprob: -10.00499153137207

Token 1096: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6183798909187317
    2. 'ans' → logprob: -1.493379831314087
    3. 'res' → logprob: -2.243379831314087
    4. 'out' → logprob: -3.118379831314087
    5. 'answer' → logprob: -3.868379831314087
    6. 'result' → logprob: -3.993379831314087
    7. 'output' → logprob: -4.493380069732666
    8. 'clock' → logprob: -4.618380069732666
    9. 'idx' → logprob: -4.993380069732666
    10. 'count' → logprob: -5.618380069732666

Token 1097: 'for' (ID: 1938)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.032133936882019
    2. 'for' → logprob: -1.907133936882019
    3. 'rv' → logprob: -2.4071340560913086
    4. 'count' → logprob: -2.6571340560913086
    5. 'answer' → logprob: -2.9071340560913086
    6. 'out' → logprob: -2.9071340560913086
    7. 'dp' → logprob: -3.5321340560913086
    8. 'cnt' → logprob: -3.7821340560913086
    9. 'res' → logprob: -3.9071340560913086
    10. 'best' → logprob: -4.032134056091309

Token 1098: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13979366421699524
    2. '_,' → logprob: -2.889793634414673
    3. 'i' → logprob: -3.014793634414673
    4. '(x' → logprob: -4.389793872833252
    5. ' x' → logprob: -6.139793872833252
    6. 'idx' → logprob: -6.389793872833252
    7. '_' → logprob: -6.514793872833252
    8. '_x' → logprob: -6.639793872833252
    9. '(_,' → logprob: -6.764793872833252
    10. '_i' → logprob: -7.139793872833252

Token 1099: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6261155605316162
    2. 'in' → logprob: -1.2511155605316162
    3. ' in' → logprob: -1.7511155605316162
    4. ' ,' → logprob: -6.126115798950195
    5. ',y' → logprob: -6.501115798950195
    6. ',in' → logprob: -7.751115798950195
    7. ',x' → logprob: -8.126115798950195
    8. ',_' → logprob: -8.251115798950195
    9. ',s' → logprob: -8.501115798950195
    10. '=' → logprob: -9.251115798950195

Token 1100: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010573413455858827
    2. ' y' → logprob: -7.001057147979736
    3. '_,' → logprob: -9.001057624816895
    4. '_y' → logprob: -11.251057624816895
    5. ',' → logprob: -13.001057624816895
    6. ',y' → logprob: -13.501057624816895
    7. 'clock' → logprob: -13.501057624816895
    8. 't' → logprob: -14.376057624816895
    9. 'z' → logprob: -14.376057624816895
    10. '_' → logprob: -14.501057624816895

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007344299927353859
    2. ' in' → logprob: -5.6323442459106445
    3. 'in' → logprob: -6.1323442459106445
    4. ',z' → logprob: -7.5073442459106445
    5. ',y' → logprob: -7.8823442459106445
    6. ' ,' → logprob: -8.007344245910645
    7. ',_' → logprob: -9.507344245910645
    8. ',x' → logprob: -10.132344245910645
    9. ',
' → logprob: -10.757344245910645
    10. ',in' → logprob: -10.882344245910645

Token 1102: ' dt' (ID: 14008)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.22451990842819214
    2. 'diff' → logprob: -2.224519968032837
    3. 'd' → logprob: -2.974519968032837
    4. 'dt' → logprob: -5.099519729614258
    5. 'dif' → logprob: -5.224519729614258
    6. 'gap' → logprob: -5.724519729614258
    7. 'lz' → logprob: -5.724519729614258
    8. 'dx' → logprob: -5.849519729614258
    9. 'delta' → logprob: -6.349519729614258
    10. '_' → logprob: -6.474519729614258

Token 1103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17993833124637604
    2. 'in' → logprob: -1.8049383163452148
    3. 'n' → logprob: -9.054938316345215
    4. '
' → logprob: -10.304938316345215
    5. 'ime' → logprob: -10.804938316345215
    6. '_in' → logprob: -12.679938316345215
    7. 'x' → logprob: -13.304938316345215
    8. '=' → logprob: -13.304938316345215
    9. 'm' → logprob: -13.429938316345215
    10. ' ' → logprob: -13.679938316345215

Token 1104: ' something' (ID: 3543)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.004079828038811684
    2. ' something' → logprob: -5.504079818725586
    3. 'in' → logprob: -14.754079818725586
    4. 'sorted' → logprob: -15.754079818725586
    5. ' in' → logprob: -15.754079818725586
    6. 'Something' → logprob: -15.879079818725586
    7. 'range' → logprob: -16.129079818725586
    8. 'omething' → logprob: -16.254079818725586
    9. '[(' → logprob: -16.504079818725586
    10. '
' → logprob: -17.004079818725586

Token 1105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04872043803334236
    2. ':
' → logprob: -3.048720359802246
    3. '   ' → logprob: -9.798720359802246
    4. ',' → logprob: -10.048720359802246
    5. ' :' → logprob: -11.673720359802246
    6. '):
' → logprob: -11.923720359802246
    7. '<|end|>' → logprob: -12.048720359802246
    8. ' :
' → logprob: -12.798720359802246
    9. ':

' → logprob: -13.173720359802246
    10. ' in' → logprob: -13.298720359802246

Token 1106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11621465533971786
    2. ' if' → logprob: -2.2412147521972656
    3. '```' → logprob: -6.491214752197266
    4. 'if' → logprob: -7.116214752197266
    5. '	if' → logprob: -7.991214752197266
    6. ' while' → logprob: -8.241214752197266
    7. ' clock' → logprob: -8.241214752197266
    8. 'clock' → logprob: -9.241214752197266
    9. '``' → logprob: -10.741214752197266
    10. '_clock' → logprob: -10.991214752197266

Token 1107: ' clock' (ID: 16523)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3938855230808258
    2. 'clock' (adapté à ' clock') → logprob: -1.1438854932785034
    3. '   ' → logprob: -5.268885612487793
    4. 'print' → logprob: -6.893885612487793
    5. ' if' → logprob: -7.268885612487793
    6. ' clock' → logprob: -9.143885612487793
    7. '_clock' → logprob: -12.143885612487793
    8. '
' → logprob: -12.268885612487793
    9. '```' → logprob: -12.768885612487793
    10. 'while' → logprob: -12.893885612487793

Token 1108: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44427478313446045
    2. '+=' → logprob: -1.3192747831344604
    3. '=max' → logprob: -2.81927490234375
    4. ' =' → logprob: -3.56927490234375
    5. ' +=' → logprob: -5.81927490234375
    6. 'max' → logprob: -7.56927490234375
    7. '>=' → logprob: -11.31927490234375
    8. '<=' → logprob: -11.31927490234375
    9. ' max' → logprob: -11.44427490234375
    10. '   ' → logprob: -11.94427490234375

Token 1109: ' x' (ID: 1215)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.001604367163963616
    2. '1' → logprob: -6.8766045570373535
    3. 'max' → logprob: -8.001604080200195
    4. 'y' → logprob: -8.626604080200195
    5. '(dt' → logprob: -10.751604080200195
    6. '(' → logprob: -11.376604080200195
    7. 'abs' → logprob: -11.376604080200195
    8. 'x' → logprob: -11.876604080200195
    9. 'int' → logprob: -13.126604080200195
    10. ' dt' → logprob: -13.626604080200195

Token 1110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1111: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2675260603427887
    2. '<|end|>' → logprob: -2.142526149749756
    3. '-' → logprob: -2.642526149749756
    4. ' +' → logprob: -3.392526149749756
    5. ' -' → logprob: -5.142526149749756
    6. 'if' → logprob: -6.892526149749756
    7. '+
' → logprob: -7.142526149749756
    8. ')' → logprob: -7.142526149749756
    9. ' ' → logprob: -7.517526149749756
    10. '+=' → logprob: -7.642526149749756

Token 1112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5300498008728027
    2. 'clock' → logprob: -1.4050498008728027
    3. ' if' → logprob: -1.9050498008728027
    4. ' clock' → logprob: -4.780049800872803
    5. 'dt' → logprob: -5.280049800872803
    6. '   ' → logprob: -6.530049800872803
    7. ' dt' → logprob: -7.780049800872803
    8. 'assert' → logprob: -7.780049800872803
    9. 'print' → logprob: -7.780049800872803
    10. 'y' → logprob: -8.280050277709961

Token 1113: ' clock' (ID: 16523)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.0015035520773380995
    2. ' clock' → logprob: -6.6265034675598145
    3. 'dt' → logprob: -9.251503944396973
    4. 'y' → logprob: -10.376503944396973
    5. '(clock' → logprob: -10.376503944396973
    6. '   ' → logprob: -11.501503944396973
    7. 'x' → logprob: -12.251503944396973
    8. '  ' → logprob: -13.501503944396973
    9. 'not' → logprob: -13.876503944396973
    10. ' dt' → logprob: -14.251503944396973

Token 1114: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.009810280054807663
    2. ' >' → logprob: -4.634810447692871
    3. '>=' → logprob: -10.509810447692871
    4. '<=' → logprob: -10.759810447692871
    5. '<' → logprob: -13.259810447692871
    6. '>x' → logprob: -13.634810447692871
    7. '+' → logprob: -14.134810447692871
    8. '>
' → logprob: -14.884810447692871
    9. ' <=' → logprob: -15.259810447692871
    10. '>end' → logprob: -15.634810447692871

Token 1115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.751746746478602e-05
    2. 'dt' → logprob: -10.25004768371582
    3. ' y' → logprob: -11.75004768371582
    4. 'clock' → logprob: -13.62504768371582
    5. 'yt' → logprob: -14.00004768371582
    6. 'something' → logprob: -14.12504768371582
    7. 'x' → logprob: -14.25004768371582
    8. '0' → logprob: -16.00004768371582
    9. '(y' → logprob: -16.12504768371582
    10. 't' → logprob: -16.50004768371582

Token 1116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23106878995895386
    2. ':
' → logprob: -1.6060688495635986
    3. '   ' → logprob: -5.4810686111450195
    4. ':return' → logprob: -7.4810686111450195
    5. '       ' → logprob: -7.9810686111450195
    6. '):
' → logprob: -8.60606861114502
    7. '):' → logprob: -8.73106861114502
    8. '<|end|>' → logprob: -10.10606861114502
    9. '+' → logprob: -10.48106861114502
    10. ')' → logprob: -10.85606861114502

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03132310137152672
    2. 'print' → logprob: -3.531323194503784
    3. ' print' → logprob: -7.156322956085205
    4. '   ' → logprob: -7.156322956085205
    5. '```' → logprob: -12.031323432922363
    6. 'break' → logprob: -12.781323432922363
    7. '	print' → logprob: -13.656323432922363
    8. '           ' → logprob: -15.156323432922363
    9. '#print' → logprob: -15.281323432922363
    10. '#' → logprob: -15.406323432922363

Token 1118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -13.125003814697266
    3. 'break' → logprob: -13.750003814697266
    4. '
' → logprob: -16.000003814697266
    5. ' print' → logprob: -16.250003814697266
    6. 'clock' → logprob: -16.750003814697266
    7. '#print' → logprob: -16.750003814697266
    8. 'exit' → logprob: -17.000003814697266
    9. '```' → logprob: -18.250003814697266
    10. 'raise' → logprob: -18.500003814697266

Token 1119: '("' (ID: 568)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.604948878288269
    2. '"' → logprob: -0.979948878288269
    3. '("' → logprob: -3.4799489974975586
    4. ''' → logprob: -3.7299489974975586
    5. 'No' → logprob: -4.229948997497559
    6. '('' → logprob: -5.604948997497559
    7. '-' → logprob: -6.479948997497559
    8. 'NO' → logprob: -6.479948997497559
    9. '“No' → logprob: -8.229948997497559
    10. '"H' → logprob: -8.354948997497559

Token 1120: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.052092719823122025
    2. 'NO' → logprob: -3.0520927906036377
    3. '"No' → logprob: -6.427092552185059
    4. 'no' → logprob: -7.677092552185059
    5. '_no' → logprob: -8.052092552185059
    6. 'Fail' → logprob: -8.677092552185059
    7. 'fail' → logprob: -8.677092552185059
    8. 'Impossible' → logprob: -9.302092552185059
    9. ':no' → logprob: -9.302092552185059
    10. 'Late' → logprob: -9.427092552185059

Token 1121: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3871816396713257
    2. '")
' → logprob: -1.1371816396713257
    3. '");' → logprob: -9.137181282043457
    4. ')' → logprob: -9.512181282043457
    5. ')")
' → logprob: -9.637181282043457
    6. ')")' → logprob: -10.762181282043457
    7. '")
' → logprob: -11.137181282043457
    8. ')
' → logprob: -11.387181282043457
    9. ' ")' → logprob: -12.137181282043457
    10. ' ")
' → logprob: -12.262181282043457

Token 1122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.706686690449715e-05
    2. '<|end|>' → logprob: -10.125066757202148
    3. '   ' → logprob: -11.250066757202148
    4. '```' → logprob: -12.250066757202148
    5. '           ' → logprob: -13.000066757202148
    6. '	' → logprob: -13.125066757202148
    7. '
' → logprob: -13.625066757202148
    8. '        
' → logprob: -14.750066757202148
    9. ')' → logprob: -15.125066757202148
    10. '<|end|>' → logprob: -15.125066757202148

Token 1123: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.6312321753939614e-05
    2. 'exit' → logprob: -10.625036239624023
    3. ' exit' → logprob: -12.250036239624023
    4. '	exit' → logprob: -12.875036239624023
    5. '   ' → logprob: -13.375036239624023
    6. '	' → logprob: -14.125036239624023
    7. '
' → logprob: -14.875036239624023
    8. '           ' → logprob: -15.125036239624023
    9. '	break' → logprob: -15.125036239624023
    10. '<|end|>' → logprob: -15.125036239624023

Token 1124: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.127333340875339e-06
    2. ' else' → logprob: -13.125003814697266
    3. '```' → logprob: -13.125003814697266
    4. '#else' → logprob: -17.125003814697266
    5. '
' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '_else' → logprob: -18.500003814697266
    8. '}else' → logprob: -18.750003814697266
    9. 'continue' → logprob: -19.750003814697266
    10. '    
' → logprob: -20.125003814697266

Token 1125: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.47626737493556e-05
    2. ' else' → logprob: -10.37503433227539
    3. '```' → logprob: -12.62503433227539
    4. '
' → logprob: -17.12503433227539
    5. '   ' → logprob: -17.12503433227539
    6. '_else' → logprob: -17.25003433227539
    7. 'continue' → logprob: -17.87503433227539
    8. '#else' → logprob: -17.87503433227539
    9. '    
' → logprob: -18.12503433227539
    10. '}else' → logprob: -18.37503433227539

Token 1126: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013406439684331417
    2. ':
' → logprob: -4.763406276702881
    3. ':' → logprob: -5.388406276702881
    4. '       ' → logprob: -9.388406753540039
    5. ' :
' → logprob: -10.138406753540039
    6. ' :' → logprob: -10.763406753540039
    7. '    ' → logprob: -11.013406753540039
    8. ' print' → logprob: -11.138406753540039
    9. '  ' → logprob: -12.013406753540039
    10. '[' → logprob: -12.138406753540039

Token 1127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004130641929805279
    2. 'print' → logprob: -5.504130840301514
    3. '       ' → logprob: -10.004130363464355
    4. ' print' → logprob: -12.379130363464355
    5. '	print' → logprob: -12.879130363464355
    6. ' ' → logprob: -16.379131317138672
    7. '   ' → logprob: -17.379131317138672
    8. '  ' → logprob: -17.879131317138672
    9. '```' → logprob: -18.129131317138672
    10. '           ' → logprob: -18.379131317138672

Token 1128: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020892347674816847
    2. '   ' → logprob: -6.252089023590088
    3. ' print' → logprob: -8.752089500427246
    4. '	print' → logprob: -13.502089500427246
    5. '       ' → logprob: -13.752089500427246
    6. ' ' → logprob: -17.12708854675293
    7. '  ' → logprob: -19.00208854675293
    8. '```' → logprob: -19.00208854675293
    9. 'printf' → logprob: -19.87708854675293
    10. '.print' → logprob: -20.00208854675293

Token 1129: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.399378566537052e-05
    2. '"' → logprob: -9.750083923339844
    3. 'Yes' → logprob: -11.000083923339844
    4. '('' → logprob: -12.375083923339844
    5. '(' → logprob: -12.500083923339844
    6. '"No' → logprob: -14.125083923339844
    7. '(No' → logprob: -16.500083923339844
    8. '(("' → logprob: -17.000083923339844
    9. 'No' → logprob: -17.500083923339844
    10. ''' → logprob: -17.750083923339844

Token 1130: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.981667537620524e-06
    2. '"' → logprob: -13.375001907348633
    3. 'YES' → logprob: -14.875001907348633
    4. ' Yes' → logprob: -16.750001907348633
    5. 'Good' → logprob: -18.750001907348633
    6. '“Yes' → logprob: -19.250001907348633
    7. '
' → logprob: -19.500001907348633
    8. 'Yeah' → logprob: -20.000001907348633
    9. 'Sure' → logprob: -20.000001907348633
    10. ''' → logprob: -20.375001907348633

Token 1131: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03958028182387352
    2. '<|end|>' → logprob: -3.2895803451538086
    3. '")' → logprob: -6.664580345153809
    4. '```' → logprob: -8.914580345153809
    5. '')' → logprob: -9.789580345153809
    6. '
' → logprob: -10.914580345153809
    7. '#' → logprob: -11.789580345153809
    8. '()' → logprob: -11.789580345153809
    9. '`)' → logprob: -11.789580345153809
    10. '<|end|>' → logprob: -11.914580345153809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1129
Tokens correctement prédits (1ère position, stricte): 435
Tokens correctement prédits (1ère position, avec adaptation): 453
Tokens correctement prédits (top 10): 853
Précision stricte (1ère position): 38.53%
Précision adaptée (1ère position): 40.12%
Précision (top 10): 75.55%
================================================================================
