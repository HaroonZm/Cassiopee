================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def generate_sequence(n, k, s):
    """
    Génère une séquence de n entiers où :
    - exactement k éléments sont égaux à s,
    - les (n - k) autres éléments sont fixés à une valeur évitant la duplication inutile de s,
    conformément aux contraintes du problème (ex : pour certains problèmes de codeforces, éviter d'avoir tous les éléments identiques).

    Si s n'est pas égal à 10**9, les éléments restants valent 10**9.
    Si s vaut 10**9, les éléments restants valent 1, pour rester dans la plage [1, 10**9].

    Args:
        n (int): Taille totale de la séquence.
        k (int): Nombre d'éléments devant valoir s.
        s (int): Valeur fixée pour k éléments.

    Returns:
        list : Une liste de n entiers contenant exactement k fois s, et (n-k) valeurs convenablement choisies.
    """
    if s != 10 ** 9:
        # Si s est différent de 10**9, on utilise 10**9 pour remplir le reste afin d'éviter des valeurs égales à s.
        ans = [s] * k + [10 ** 9] * (n - k)
    else:
        # Si s vaut 10**9, pour éviter tout débordement on utilise 1 comme valeur de remplissage.
        ans = [s] * k + [1] * (n - k)
    return ans

# Lecture des données d'entrée sous la forme de trois entiers séparés par des espaces.
n, k, s = map(int, input().split())

# Génération de la séquence selon les contraintes.
result_sequence = generate_sequence(n, k, s)

# Affichage du résultat sous forme d'espace entre les éléments.
print(*result_sequence)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' generate' (ID: 10419)
  → Token d'amorce (pas de prédiction)

Token 2: '_sequence' (ID: 55606)
  → Token d'amorce (pas de prédiction)

Token 3: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03841392695903778
    2. '_' → logprob: -3.4134140014648438
    3. '():' → logprob: -6.538414001464844
    4. '(_:' → logprob: -7.038414001464844
    5. '(:' → logprob: -7.163414001464844
    6. '```' → logprob: -7.413414001464844
    7. '(_' → logprob: -8.288414001464844
    8. 'def' → logprob: -8.538414001464844
    9. '_:' → logprob: -8.788414001464844
    10. ':' → logprob: -9.038414001464844

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04338781163096428
    2. ')' → logprob: -3.1683878898620605
    3. ':' → logprob: -8.793387413024902
    4. '_' → logprob: -8.793387413024902
    5. ',' → logprob: -10.043387413024902
    6. '):
' → logprob: -12.168387413024902
    7. ')：' → logprob: -12.543387413024902
    8. 's' → logprob: -12.668387413024902
    9. ')>' → logprob: -12.668387413024902
    10. '```' → logprob: -12.793387413024902

Token 5: ' k' (ID: 372)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.09835286438465118
    2. ' start' → logprob: -3.9733529090881348
    3. 'sequence' → logprob: -3.9733529090881348
    4. ' k' → logprob: -4.098352909088135
    5. ' )' → logprob: -4.098352909088135
    6. ')' → logprob: -5.223352909088135
    7. ' seed' → logprob: -5.598352909088135
    8. ' step' → logprob: -5.723352909088135
    9. ' seq' → logprob: -6.098352909088135
    10. ' ' → logprob: -6.473352909088135

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004157822113484144
    2. ')' → logprob: -5.629158020019531
    3. ':' → logprob: -8.004158020019531
    4. ',' → logprob: -8.504158020019531
    5. ''):' → logprob: -12.629158020019531
    6. '):
' → logprob: -12.629158020019531
    7. '```' → logprob: -12.879158020019531
    8. '**' → logprob: -13.379158020019531
    9. ')>' → logprob: -13.379158020019531
    10. '*' → logprob: -13.879158020019531

Token 7: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8159000277519226
    2. ' sequence' → logprob: -1.1909000873565674
    3. ' m' → logprob: -2.6909000873565674
    4. ' )' → logprob: -3.5659000873565674
    5. ' l' → logprob: -3.5659000873565674
    6. ' start' → logprob: -3.6909000873565674
    7. ')' → logprob: -4.065899848937988
    8. ' initial' → logprob: -4.315899848937988
    9. ' lst' → logprob: -4.440899848937988
    10. 'sequence' → logprob: -4.940899848937988

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026496173813939095
    2. ')' → logprob: -6.127649784088135
    3. ':' → logprob: -8.252649307250977
    4. ',' → logprob: -8.627649307250977
    5. ''):' → logprob: -11.752649307250977
    6. ' ):' → logprob: -12.752649307250977
    7. '=' → logprob: -12.752649307250977
    8. '):
' → logprob: -12.877649307250977
    9. '**' → logprob: -13.752649307250977
    10. '"):' → logprob: -14.002649307250977

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022527987137436867
    2. '   ' → logprob: -4.022528171539307
    3. '```' → logprob: -5.772528171539307
    4. ':
' → logprob: -7.522528171539307
    5. '":' → logprob: -9.397527694702148
    6. '':' → logprob: -9.397527694702148
    7. '():' → logprob: -9.397527694702148
    8. '`:' → logprob: -9.522527694702148
    9. ' :' → logprob: -9.647527694702148
    10. '):' → logprob: -9.772527694702148

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143830344080925
    2. '```' → logprob: -2.8938302993774414
    3. '       ' → logprob: -4.018830299377441
    4. '`' → logprob: -4.518830299377441
    5. '\' → logprob: -4.643830299377441
    6. ''' → logprob: -5.018830299377441
    7. ' ' → logprob: -5.018830299377441
    8. '    ' → logprob: -5.018830299377441
    9. 'i' → logprob: -5.768830299377441
    10. '\n' → logprob: -5.893830299377441

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2337929010391235
    2. '"""' → logprob: -1.4837929010391235
    3. 'Generate' → logprob: -1.4837929010391235
    4. '"""
' → logprob: -1.7337929010391235
    5. ''''' → logprob: -4.608792781829834
    6. ' """
' → logprob: -4.733792781829834
    7. 'i' → logprob: -4.733792781829834
    8. ''''
' → logprob: -4.983792781829834
    9. 'Returns' → logprob: -5.233792781829834
    10. '```' → logprob: -5.608792781829834

Token 12: ' Gén' (ID: 71828)
  Prédit: 'Generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Generate' → logprob: -0.1877525895833969
    2. 'Gener' → logprob: -1.812752604484558
    3. '"""
' → logprob: -6.062752723693848
    4. '"""' → logprob: -6.187752723693848
    5. '   ' → logprob: -6.687752723693848
    6. ' Generates' → logprob: -7.187752723693848
    7. 'Returns' → logprob: -7.562752723693848
    8. ' Generate' → logprob: -7.687752723693848
    9. 'Return' → logprob: -8.312752723693848
    10. ' """
' → logprob: -10.062752723693848

Token 13: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.14069955050945282
    2. 'ère' → logprob: -2.640699625015259
    3. 'érer' → logprob: -3.015699625015259
    4. 'ération' → logprob: -5.26569938659668
    5. 'èr' → logprob: -6.26569938659668
    6. '   ' → logprob: -7.14069938659668
    7. 'é' → logprob: -7.26569938659668
    8. 'érateur' → logprob: -7.39069938659668
    9. 'è' → logprob: -7.51569938659668
    10. 'éra' → logprob: -8.64069938659668

Token 14: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.27412915229797363
    2. ' un' → logprob: -2.0241291522979736
    3. ' ' → logprob: -3.1491291522979736
    4. 'une' → logprob: -3.5241291522979736
    5. ' a' → logprob: -4.1491289138793945
    6. ' des' → logprob: -5.2741289138793945
    7. 'e' → logprob: -5.6491289138793945
    8. ' la' → logprob: -5.7741289138793945
    9. '   ' → logprob: -6.1491289138793945
    10. 'a' → logprob: -6.3991289138793945

Token 15: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.9465690851211548
    2. ' ' → logprob: -1.8215690851211548
    3. ' sequence' → logprob: -1.9465690851211548
    4. ' sé' → logprob: -2.6965689659118652
    5. '_' → logprob: -2.9465689659118652
    6. 'sé' → logprob: -2.9465689659118652
    7. 'sequence' → logprob: -3.1965689659118652
    8. 'liste' → logprob: -3.6965689659118652
    9. '   ' → logprob: -3.9465689659118652
    10. ' chaîne' → logprob: -4.071568965911865

Token 16: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.000297685619443655
    2. 'q' → logprob: -9.000297546386719
    3. 'rie' → logprob: -9.375297546386719
    4. 'qu' → logprob: -9.625297546386719
    5. 'que' → logprob: -11.625297546386719
    6. 'QUENCE' → logprob: -12.000297546386719
    7. '-' → logprob: -12.375297546386719
    8. 'quences' → logprob: -13.500297546386719
    9. '_' → logprob: -14.750297546386719
    10. '#' → logprob: -15.125297546386719

Token 17: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2579900026321411
    2. ' ' → logprob: -1.7579900026321411
    3. '```' → logprob: -3.8829898834228516
    4. '_' → logprob: -5.132989883422852
    5. ' d' → logprob: -5.257989883422852
    6. 'e' → logprob: -5.882989883422852
    7. ' ```' → logprob: -6.257989883422852
    8. ')' → logprob: -6.257989883422852
    9. 'de' → logprob: -6.632989883422852
    10. ''' → logprob: -6.632989883422852

Token 18: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.102526068687439
    2. ' caractères' → logprob: -1.352526068687439
    3. ' nombres' → logprob: -1.602526068687439
    4. ' n' → logprob: -2.8525261878967285
    5. 'k' → logprob: -2.8525261878967285
    6. 'n' → logprob: -3.3525261878967285
    7. 's' → logprob: -4.2275261878967285
    8. ' ent' → logprob: -4.4775261878967285
    9. ' ' → logprob: -4.9775261878967285
    10. 'ent' → logprob: -5.2275261878967285

Token 19: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19863474369049072
    2. ' caractères' → logprob: -2.073634624481201
    3. ' éléments' → logprob: -3.948634624481201
    4. ' espaces' → logprob: -4.823634624481201
    5. ' ent' → logprob: -5.198634624481201
    6. ' mots' → logprob: -5.448634624481201
    7. ' tokens' → logprob: -5.573634624481201
    8. '_' → logprob: -5.948634624481201
    9. 'élé' → logprob: -6.323634624481201
    10. ' entier' → logprob: -7.073634624481201

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00854779127985239
    2. 'ières' → logprob: -5.383547782897949
    3. 'i' → logprob: -5.633547782897949
    4. 'ier' → logprob: -8.25854778289795
    5. '```' → logprob: -10.50854778289795
    6. 'ié' → logprob: -10.75854778289795
    7. 'ière' → logprob: -11.25854778289795
    8. '   ' → logprob: -11.88354778289795
    9. 'r' → logprob: -13.00854778289795
    10. 'ers' → logprob: -13.13354778289795

Token 21: ' où' (ID: 15113)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5866724848747253
    2. ' ' → logprob: -1.9616725444793701
    3. ' ,' → logprob: -2.21167254447937
    4. '   ' → logprob: -3.21167254447937
    5. '.' → logprob: -3.71167254447937
    6. ' )' → logprob: -3.96167254447937
    7. 's' → logprob: -4.086672306060791
    8. ')' → logprob: -4.211672306060791
    9. '```' → logprob: -4.461672306060791
    10. '  ' → logprob: -4.836672306060791

Token 22: ' :
' (ID: 10039)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4284592866897583
    2. ' chaque' → logprob: -1.1784592866897583
    3. ' les' → logprob: -4.303459167480469
    4. ' l' → logprob: -4.928459167480469
    5. 'la' → logprob: -5.053459167480469
    6. '   ' → logprob: -5.928459167480469
    7. ' chacun' → logprob: -6.303459167480469
    8. 'les' → logprob: -6.428459167480469
    9. ' ' → logprob: -6.553459167480469
    10. 'l' → logprob: -6.803459167480469

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3239210844039917
    2. ' ' → logprob: -2.9489212036132812
    3. '_' → logprob: -3.4489212036132812
    4. '```' → logprob: -3.4489212036132812
    5. 'a' → logprob: -3.8239212036132812
    6. 'n' → logprob: -3.8239212036132812
    7. ')' → logprob: -3.8239212036132812
    8. '    ' → logprob: -3.9489212036132812
    9. ''' → logprob: -4.323921203613281
    10. ',' → logprob: -4.948921203613281

Token 24: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5604977011680603
    2. 'n' → logprob: -2.685497760772705
    3. '    ' → logprob: -3.060497760772705
    4. '```' → logprob: -3.060497760772705
    5. ' chaque' → logprob: -3.560497760772705
    6. 'a' → logprob: -3.810497760772705
    7. ' """' → logprob: -3.810497760772705
    8. ')' → logprob: -3.935497760772705
    9. 's' → logprob: -4.060497760772705
    10. ' ' → logprob: -4.310497760772705

Token 25: ' exactement' (ID: 108701)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05783676356077194
    2. ' each' → logprob: -4.057836532592773
    3. ' la' → logprob: -4.057836532592773
    4. ' les' → logprob: -4.932836532592773
    5. '   ' → logprob: -5.182836532592773
    6. ' chacun' → logprob: -6.682836532592773
    7. 'les' → logprob: -6.807836532592773
    8. ' k' → logprob: -7.057836532592773
    9. ' Chaque' → logprob: -7.057836532592773
    10. 'Chaque' → logprob: -7.057836532592773

Token 26: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1468367576599121
    2. 'k' → logprob: -2.396836757659912
    3. ' ' → logprob: -3.146836757659912
    4. ' s' → logprob: -6.396836757659912
    5. 's' → logprob: -7.271836757659912
    6. ' n' → logprob: -9.77183723449707
    7. 'n' → logprob: -10.27183723449707
    8. '  ' → logprob: -10.52183723449707
    9. ' a' → logprob: -10.89683723449707
    10. 'space' → logprob: -11.02183723449707

Token 27: ' éléments' (ID: 57375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2849426865577698
    2. ' des' → logprob: -2.534942626953125
    3. ' espaces' → logprob: -2.659942626953125
    4. ' éléments' → logprob: -2.784942626953125
    5. ' ent' → logprob: -4.409942626953125
    6. 'élé' → logprob: -5.159942626953125
    7. ' valeurs' → logprob: -6.034942626953125
    8. ' elements' → logprob: -6.409942626953125
    9. '0' → logprob: -6.659942626953125
    10. 's' → logprob: -7.034942626953125

Token 28: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.2078605592250824
    2. 's' → logprob: -2.4578604698181152
    3. ' de' → logprob: -2.7078604698181152
    4. ' =' → logprob: -4.082860469818115
    5. '=' → logprob: -5.207860469818115
    6. ' are' → logprob: -5.957860469818115
    7. ' doivent' → logprob: -6.207860469818115
    8. ' ' → logprob: -6.332860469818115
    9. ' appara' → logprob: -6.707860469818115
    10. ' ont' → logprob: -7.457860469818115

Token 29: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.047531433403491974
    2. 'ég' → logprob: -3.9225313663482666
    3. '1' → logprob: -4.422531604766846
    4. ' ' → logprob: -5.797531604766846
    5. ' présents' → logprob: -5.922531604766846
    6. ' égal' → logprob: -6.422531604766846
    7. 's' → logprob: -6.672531604766846
    8. ' des' → logprob: -6.672531604766846
    9. 'strict' → logprob: -6.797531604766846
    10. 'sup' → logprob: -7.422531604766846

Token 30: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.011934977024793625
    2. 'al' → logprob: -4.886934757232666
    3. 'als' → logprob: -6.636934757232666
    4. 'a' → logprob: -7.136934757232666
    5. 'ale' → logprob: -7.261934757232666
    6. 'ales' → logprob: -7.511934757232666
    7. '```' → logprob: -7.511934757232666
    8. '   ' → logprob: -10.324435234069824
    9. 'au' → logprob: -10.449435234069824
    10. '``' → logprob: -10.699435234069824

Token 31: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.34584271907806396
    2. ' ' → logprob: -1.595842719078064
    3. 'à' → logprob: -2.8458428382873535
    4. ' a' → logprob: -4.3458428382873535
    5. 's' → logprob: -4.5958428382873535
    6. '  ' → logprob: -5.8458428382873535
    7. ' s' → logprob: -6.5958428382873535
    8. 'a' → logprob: -6.7208428382873535
    9. ''à' → logprob: -7.0958428382873535
    10. ' to' → logprob: -7.9708428382873535

Token 32: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6086531281471252
    2. 's' → logprob: -1.4836530685424805
    3. ' ' → logprob: -1.8586530685424805
    4. '1' → logprob: -2.7336530685424805
    5. '0' → logprob: -4.8586530685424805
    6. ''s' → logprob: -8.85865306854248
    7. '```' → logprob: -9.98365306854248
    8. '  ' → logprob: -10.35865306854248
    9. ' '' → logprob: -10.48365306854248
    10. '2' → logprob: -10.85865306854248

Token 33: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14615494012832642
    2. '.' → logprob: -2.5211548805236816
    3. ',
' → logprob: -3.3961548805236816
    4. ')' → logprob: -4.646154880523682
    5. '   ' → logprob: -5.021154880523682
    6. '"""' → logprob: -5.896154880523682
    7. '```' → logprob: -7.646154880523682
    8. 'e' → logprob: -7.896154880523682
    9. '.
' → logprob: -8.14615535736084
    10. ':' → logprob: -8.27115535736084

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16328410804271698
    2. ' et' → logprob: -2.1632840633392334
    3. 'et' → logprob: -4.4132843017578125
    4. ',' → logprob: -5.1632843017578125
    5. ' ' → logprob: -5.5382843017578125
    6. '    ' → logprob: -5.6632843017578125
    7. '  ' → logprob: -6.1632843017578125
    8. ' and' → logprob: -6.9132843017578125
    9. 'def' → logprob: -6.9132843017578125
    10. '-' → logprob: -7.0382843017578125

Token 35: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39015594124794006
    2. ' et' → logprob: -1.2651559114456177
    3. 'et' → logprob: -3.8901560306549072
    4. ' les' → logprob: -5.515155792236328
    5. ',' → logprob: -6.015155792236328
    6. ' ' → logprob: -6.265155792236328
    7. '  ' → logprob: -6.265155792236328
    8. '    ' → logprob: -6.640155792236328
    9. ''' → logprob: -6.640155792236328
    10. '"' → logprob: -7.265155792236328

Token 36: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06012445688247681
    2. '   ' → logprob: -3.810124397277832
    3. 'les' → logprob: -4.310124397277832
    4. ' le' → logprob: -5.435124397277832
    5. ' tous' → logprob: -5.435124397277832
    6. ' ' → logprob: -5.560124397277832
    7. 't' → logprob: -5.560124397277832
    8. 'le' → logprob: -6.185124397277832
    9. 's' → logprob: -6.935124397277832
    10. 'l' → logprob: -7.685124397277832

Token 37: ' (' (ID: 350)
  Prédit: ' autres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.021841008216142654
    2. ' ' → logprob: -4.271841049194336
    3. ' autre' → logprob: -5.396841049194336
    4. ' other' → logprob: -6.646841049194336
    5. 'aut' → logprob: -7.271841049194336
    6. ' restantes' → logprob: -8.396841049194336
    7. '   ' → logprob: -8.896841049194336
    8. ' rest' → logprob: -8.896841049194336
    9. ' aut' → logprob: -9.021841049194336
    10. ''autres' → logprob: -9.271841049194336

Token 38: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08877520263195038
    2. 'n' → logprob: -2.838775157928467
    3. ' autres' → logprob: -4.088775157928467
    4. ' ' → logprob: -4.838775157928467
    5. '   ' → logprob: -7.588775157928467
    6. ' )' → logprob: -8.213775634765625
    7. ')' → logprob: -8.463775634765625
    8. ' autre' → logprob: -9.088775634765625
    9. 'aut' → logprob: -9.213775634765625
    10. '    ' → logprob: -9.213775634765625

Token 39: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.025143688544631004
    2. '-' → logprob: -4.025143623352051
    3. '-k' → logprob: -5.025143623352051
    4. ' ' → logprob: -7.900143623352051
    5. '-n' → logprob: -11.65014362335205
    6. ')' → logprob: -11.77514362335205
    7. ' ' → logprob: -13.40014362335205
    8. '   ' → logprob: -13.52514362335205
    9. ' )' → logprob: -14.02514362335205
    10. '  ' → logprob: -14.02514362335205

Token 40: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759647488594055
    2. ' k' → logprob: -0.8259647488594055
    3. ' ' → logprob: -10.70096492767334
    4. '	k' → logprob: -13.57596492767334
    5. ' к' → logprob: -14.32596492767334
    6. '-k' → logprob: -14.82596492767334
    7. '_k' → logprob: -15.95096492767334
    8. ' ' → logprob: -16.325963973999023
    9. ')' → logprob: -16.450963973999023
    10. '<|end|>' → logprob: -16.575963973999023

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07054805755615234
    2. ' )' → logprob: -2.8205480575561523
    3. ' -' → logprob: -5.070548057556152
    4. '-' → logprob: -6.820548057556152
    5. '-k' → logprob: -7.195548057556152
    6. '-s' → logprob: -9.195548057556152
    7. ' éléments' → logprob: -9.320548057556152
    8. ' ' → logprob: -9.945548057556152
    9. ' ' → logprob: -10.445548057556152
    10. 's' → logprob: -10.445548057556152

Token 42: ' autres' (ID: 18701)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.11458573490381241
    2. ' ' → logprob: -2.8645856380462646
    3. ' autres' → logprob: -3.3645856380462646
    4. 'élé' → logprob: -4.364585876464844
    5. ' elements' → logprob: -6.239585876464844
    6. ' restantes' → logprob: -7.239585876464844
    7. ' rest' → logprob: -7.739585876464844
    8. ' sont' → logprob: -8.864585876464844
    9. 'elements' → logprob: -9.114585876464844
    10. ' espaces' → logprob: -9.489585876464844

Token 43: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.23672229051589966
    2. ' éléments' → logprob: -1.6117222309112549
    3. ' ' → logprob: -4.986722469329834
    4. 's' → logprob: -6.486722469329834
    5. ' sont' → logprob: -6.736722469329834
    6. 'é' → logprob: -7.486722469329834
    7. 'elements' → logprob: -7.861722469329834
    8. ' él' → logprob: -8.486721992492676
    9. ' elements' → logprob: -8.611721992492676
    10. 'él' → logprob: -8.986721992492676

Token 44: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.03447330743074417
    2. 's' → logprob: -3.784473419189453
    3. '<|end|>' → logprob: -5.409473419189453
    4. ' are' → logprob: -5.784473419189453
    5. ' ' → logprob: -7.034473419189453
    6. ' ont' → logprob: -7.784473419189453
    7. ' des' → logprob: -8.284473419189453
    8. ' peuvent' → logprob: -8.284473419189453
    9. 'ont' → logprob: -8.409473419189453
    10. ' seront' → logprob: -9.034473419189453

Token 45: ' fix' (ID: 9295)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5314779281616211
    2. ' différents' → logprob: -1.156477928161621
    3. ' distinct' → logprob: -3.031477928161621
    4. '0' → logprob: -4.906477928161621
    5. ' d' → logprob: -5.156477928161621
    6. 'distinct' → logprob: -5.156477928161621
    7. ' ' → logprob: -5.781477928161621
    8. ' répart' → logprob: -5.906477928161621
    9. ' al' → logprob: -6.031477928161621
    10. ' différentes' → logprob: -6.281477928161621

Token 46: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2814771234989166
    2. 'és' → logprob: -1.4064770936965942
    3. 'u' → logprob: -9.156476974487305
    4. 'ée' → logprob: -9.781476974487305
    5. 'e' → logprob: -9.906476974487305
    6. 'ées' → logprob: -10.031476974487305
    7. 's' → logprob: -11.156476974487305
    8. 'es' → logprob: -11.781476974487305
    9. 'è' → logprob: -11.781476974487305
    10. 'á' → logprob: -12.531476974487305

Token 47: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06102988123893738
    2. 'à' → logprob: -4.18602991104126
    3. '_' → logprob: -4.43602991104126
    4. ' ' → logprob: -4.81102991104126
    5. ' a' → logprob: -5.43602991104126
    6. '=' → logprob: -5.56102991104126
    7. 'e' → logprob: -5.81102991104126
    8. ',' → logprob: -5.81102991104126
    9. ' =' → logprob: -6.18602991104126
    10. 's' → logprob: -6.93602991104126

Token 48: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18223939836025238
    2. '0' → logprob: -1.8072394132614136
    3. ' s' → logprob: -6.307239532470703
    4. 's' → logprob: -7.557239532470703
    5. '1' → logprob: -9.557239532470703
    6. ' zéro' → logprob: -11.182239532470703
    7. ' z' → logprob: -11.557239532470703
    8. ' (' → logprob: -11.932239532470703
    9. ' ' → logprob: -11.932239532470703
    10. ' None' → logprob: -12.369739532470703

Token 49: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.558817982673645
    2. '0' → logprob: -0.933817982673645
    3. '1' → logprob: -4.4338178634643555
    4. ' valeur' → logprob: -4.4338178634643555
    5. ' autre' → logprob: -6.0588178634643555
    6. ' random' → logprob: -6.6838178634643555
    7. 'val' → logprob: -6.6838178634643555
    8. ' val' → logprob: -6.8088178634643555
    9. ' None' → logprob: -7.0588178634643555
    10. '   ' → logprob: -7.6838178634643555

Token 50: ' év' (ID: 23692)
  Prédit: ' different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' different' → logprob: -1.1291875839233398
    2. ' distinct' → logprob: -1.3791875839233398
    3. ' différente' → logprob: -1.8791875839233398
    4. ' s' → logprob: -2.12918758392334
    5. ' ' → logprob: -3.62918758392334
    6. 's' → logprob: -3.87918758392334
    7. ' _' → logprob: -4.37918758392334
    8. '0' → logprob: -4.50418758392334
    9. '_' → logprob: -4.50418758392334
    10. ' différent' → logprob: -4.62918758392334

Token 51: 'itant' (ID: 61641)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.39673516154289246
    2. 'alu' → logprob: -1.6467351913452148
    3. 'ale' → logprob: -2.646735191345215
    4. 'it' → logprob: -4.146735191345215
    5. 'a' → logprob: -5.021735191345215
    6. 'alee' → logprob: -5.271735191345215
    7. 'itable' → logprob: -5.521735191345215
    8. '```' → logprob: -5.646735191345215
    9. 'ite' → logprob: -5.896735191345215
    10. 'alent' → logprob: -6.021735191345215

Token 52: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3961832523345947
    2. 'e' → logprob: -1.6461832523345947
    3. ' de' → logprob: -1.7711832523345947
    4. ' d' → logprob: -2.2711832523345947
    5. 's' → logprob: -2.8961832523345947
    6. ' s' → logprob: -2.8961832523345947
    7. ' e' → logprob: -3.0211832523345947
    8. ' ' → logprob: -3.3961832523345947
    9. ' l' → logprob: -3.5211832523345947
    10. ' la' → logprob: -3.7711832523345947

Token 53: ' duplication' (ID: 142358)
  Prédit: ' collision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collision' → logprob: -1.1604307889938354
    2. 's' → logprob: -1.6604307889938354
    3. ' s' → logprob: -1.7854307889938354
    4. ' duplication' → logprob: -2.785430908203125
    5. '_' → logprob: -2.910430908203125
    6. ' répét' → logprob: -3.035430908203125
    7. 'collision' → logprob: -3.285430908203125
    8. ' conflit' → logprob: -3.660430908203125
    9. ' ' → logprob: -3.660430908203125
    10. ' conflict' → logprob: -4.410430908203125

Token 54: ' inutile' (ID: 157748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8162603974342346
    2. '_' → logprob: -1.8162603378295898
    3. ' ' → logprob: -1.8162603378295898
    4. ' ,' → logprob: -2.81626033782959
    5. 's' → logprob: -3.31626033782959
    6. '   ' → logprob: -3.81626033782959
    7. '.' → logprob: -3.94126033782959
    8. '0' → logprob: -4.31626033782959
    9. ' _' → logprob: -4.44126033782959
    10. '```' → logprob: -4.56626033782959

Token 55: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0881774425506592
    2. '_' → logprob: -1.9631774425506592
    3. 's' → logprob: -2.213177442550659
    4. ' ' → logprob: -2.213177442550659
    5. ' d' → logprob: -2.463177442550659
    6. '0' → logprob: -3.338177442550659
    7. ' ,' → logprob: -3.463177442550659
    8. '   ' → logprob: -3.588177442550659
    9. ' de' → logprob: -4.213177680969238
    10. ' =' → logprob: -4.338177680969238

Token 56: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.055165477097034454
    2. 's' → logprob: -2.9301655292510986
    3. ' ' → logprob: -9.05516529083252
    4. ' l' → logprob: -9.80516529083252
    5. ' la' → logprob: -10.55516529083252
    6. '<|end|>' → logprob: -10.55516529083252
    7. 'l' → logprob: -10.68016529083252
    8. '```' → logprob: -12.05516529083252
    9. ' ' → logprob: -12.30516529083252
    10. ' the' → logprob: -12.43016529083252

Token 57: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40305474400520325
    2. '.' → logprob: -2.278054714202881
    3. '0' → logprob: -2.903054714202881
    4. ' ' → logprob: -3.028054714202881
    5. '_' → logprob: -3.403054714202881
    6. '1' → logprob: -3.653054714202881
    7. ' ,' → logprob: -4.028054714202881
    8. ',
' → logprob: -4.403054714202881
    9. '   ' → logprob: -4.528054714202881
    10. '```' → logprob: -4.653054714202881

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5239157676696777
    2. ',' → logprob: -1.7739157676696777
    3. '0' → logprob: -2.3989157676696777
    4. '.' → logprob: -3.3989157676696777
    5. ' ' → logprob: -3.3989157676696777
    6. '1' → logprob: -3.5239157676696777
    7. ' ,' → logprob: -4.398915767669678
    8. '```' → logprob: -4.898915767669678
    9. ')' → logprob: -5.523915767669678
    10. '_' → logprob: -5.648915767669678

Token 59: ' conformément' (ID: 189432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.198817491531372
    2. ' ' → logprob: -1.698817491531372
    3. ',' → logprob: -2.073817491531372
    4. '   ' → logprob: -2.073817491531372
    5. '1' → logprob: -2.198817491531372
    6. ' ,' → logprob: -3.448817491531372
    7. '```' → logprob: -3.573817491531372
    8. '_' → logprob: -4.198817253112793
    9. '2' → logprob: -4.823817253112793
    10. '.' → logprob: -5.073817253112793

Token 60: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.34796395897865295
    2. ' à' → logprob: -1.9729639291763306
    3. ' au' → logprob: -1.9729639291763306
    4. '   ' → logprob: -4.722963809967041
    5. ' ' → logprob: -6.097963809967041
    6. ' to' → logprob: -6.722963809967041
    7. 'au' → logprob: -6.847963809967041
    8. '    ' → logprob: -7.347963809967041
    9. 'aux' → logprob: -7.347963809967041
    10. ' a' → logprob: -7.972963809967041

Token 61: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.06384782493114471
    2. ' règles' → logprob: -3.438847780227661
    3. ' critères' → logprob: -4.56384801864624
    4. ' cons' → logprob: -4.93884801864624
    5. ' spéc' → logprob: -5.18884801864624
    6. ' constraints' → logprob: -5.93884801864624
    7. ' conditions' → logprob: -6.68884801864624
    8. ' ' → logprob: -6.93884801864624
    9. ' exigences' → logprob: -7.43884801864624
    10. ' instructions' → logprob: -8.188847541809082

Token 62: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6671710014343262
    2. '.' → logprob: -1.4171710014343262
    3. ' de' → logprob: -2.792171001434326
    4. ' .' → logprob: -3.167171001434326
    5. ' ' → logprob: -3.667171001434326
    6. ',' → logprob: -3.792171001434326
    7. ' ,' → logprob: -3.917171001434326
    8. ' d' → logprob: -4.042171001434326
    9. ' :' → logprob: -4.042171001434326
    10. ' du' → logprob: -4.917171001434326

Token 63: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.15368607640266418
    2. ' ' → logprob: -2.028686046600342
    3. ' probl' → logprob: -5.528686046600342
    4. ' problem' → logprob: -6.153686046600342
    5. ' probleme' → logprob: -6.778686046600342
    6. ' code' → logprob: -7.278686046600342
    7. ' problèmes' → logprob: -7.528686046600342
    8. ' problém' → logprob: -7.653686046600342
    9. ' contrat' → logprob: -8.6536865234375
    10. ' domaine' → logprob: -8.7786865234375

Token 64: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15256716310977936
    2. ':' → logprob: -2.277567148208618
    3. '.' → logprob: -4.402567386627197
    4. ',' → logprob: -4.652567386627197
    5. ')' → logprob: -5.652567386627197
    6. '):' → logprob: -5.652567386627197
    7. ' :' → logprob: -6.152567386627197
    8. '
' → logprob: -6.277567386627197
    9. '\n' → logprob: -6.527567386627197
    10. ':
' → logprob: -7.027567386627197

Token 65: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08670654892921448
    2. '   ' → logprob: -3.0867066383361816
    3. ' )' → logprob: -3.8367066383361816
    4. ').' → logprob: -5.461706638336182
    5. '):
' → logprob: -5.586706638336182
    6. '"""' → logprob: -6.336706638336182
    7. 'def' → logprob: -6.461706638336182
    8. '```' → logprob: -6.586706638336182
    9. ')
' → logprob: -7.211706638336182
    10. '"""
' → logprob: -8.336706161499023

Token 66: ' :' (ID: 712)
  Prédit: 'emple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emple' → logprob: -1.234644889831543
    2. 'plic' → logprob: -1.609644889831543
    3. 'cept' → logprob: -1.859644889831543
    4. 'p' → logprob: -2.609644889831543
    5. 'act' → logprob: -2.984644889831543
    6. 'trait' → logprob: -3.359644889831543
    7. 'em' → logprob: -3.484644889831543
    8. 'e' → logprob: -3.609644889831543
    9. ')' → logprob: -3.984644889831543
    10. 'é' → logprob: -4.234644889831543

Token 67: ' pour' (ID: 1930)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3839229941368103
    2. ' ' → logprob: -1.508923053741455
    3. 's' → logprob: -3.508923053741455
    4. '0' → logprob: -4.133923053741455
    5. ' l' → logprob: -4.758923053741455
    6. '1' → logprob: -5.133923053741455
    7. ' )' → logprob: -5.133923053741455
    8. ' None' → logprob: -5.133923053741455
    9. ' la' → logprob: -5.883923053741455
    10. ' a' → logprob: -6.008923053741455

Token 68: ' certains' (ID: 30681)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46445369720458984
    2. ' éviter' → logprob: -1.4644536972045898
    3. ' s' → logprob: -2.58945369720459
    4. ' l' → logprob: -4.08945369720459
    5. ' ' → logprob: -4.46445369720459
    6. ' garantir' → logprob: -4.71445369720459
    7. 'i' → logprob: -5.21445369720459
    8. ' x' → logprob: -5.96445369720459
    9. ' une' → logprob: -6.08945369720459
    10. ' ev' → logprob: -6.46445369720459

Token 69: ' problèmes' (ID: 49822)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.3603835105895996
    2. ' s' → logprob: -1.8603835105895996
    3. ' )' → logprob: -3.7353835105895996
    4. ' types' → logprob: -3.8603835105895996
    5. 's' → logprob: -4.2353835105896
    6. ' cases' → logprob: -4.4853835105896
    7. ' n' → logprob: -4.8603835105896
    8. ' problèmes' → logprob: -4.8603835105896
    9. ' nombres' → logprob: -5.1103835105896
    10. ' espaces' → logprob: -5.2353835105896

Token 70: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019355449825525284
    2. ' ,' → logprob: -4.144355297088623
    3. ')' → logprob: -6.269355297088623
    4. ' de' → logprob: -7.894355297088623
    5. '<|end|>' → logprob: -8.019355773925781
    6. ' )' → logprob: -8.769355773925781
    7. ' d' → logprob: -9.644355773925781
    8. ' des' → logprob: -10.019355773925781
    9. ' on' → logprob: -10.269355773925781
    10. ',
' → logprob: -10.269355773925781

Token 71: ' code' (ID: 3490)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -1.5713921785354614
    2. ' cod' → logprob: -1.6963921785354614
    3. ' somme' → logprob: -1.6963921785354614
    4. ' permutations' → logprob: -2.571392059326172
    5. ' combin' → logprob: -2.696392059326172
    6. ' permutation' → logprob: -2.946392059326172
    7. 's' → logprob: -3.571392059326172
    8. ' combinaison' → logprob: -3.571392059326172
    9. ' code' → logprob: -4.071392059326172
    10. ' génération' → logprob: -4.321392059326172

Token 72: 'forces' (ID: 95249)
  Prédit: 'forces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forces' → logprob: -0.3474898636341095
    2. 'wars' → logprob: -2.347489833831787
    3. ' de' → logprob: -2.722489833831787
    4. ' golf' → logprob: -3.722489833831787
    5. '```' → logprob: -3.972489833831787
    6. 'chef' → logprob: -4.097489833831787
    7. ' d' → logprob: -4.972489833831787
    8. ' en' → logprob: -5.097489833831787
    9. 'de' → logprob: -5.222489833831787
    10. ',' → logprob: -5.222489833831787

Token 73: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21930831670761108
    2. ',' → logprob: -2.219308376312256
    3. '):' → logprob: -2.594308376312256
    4. ' )' → logprob: -4.969308376312256
    5. '):
' → logprob: -5.844308376312256
    6. '   ' → logprob: -6.844308376312256
    7. ' ):' → logprob: -7.344308376312256
    8. ' ,' → logprob: -7.469308376312256
    9. ').' → logprob: -7.969308376312256
    10. '```' → logprob: -8.219307899475098

Token 74: ' éviter' (ID: 64013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5047464966773987
    2. ' s' → logprob: -1.879746437072754
    3. ' on' → logprob: -2.254746437072754
    4. ' )' → logprob: -3.004746437072754
    5. 's' → logprob: -4.254746437072754
    6. ')' → logprob: -4.629746437072754
    7. ' `' → logprob: -4.754746437072754
    8. ' la' → logprob: -4.879746437072754
    9. ' l' → logprob: -5.129746437072754
    10. ' n' → logprob: -5.254746437072754

Token 75: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.285293459892273
    2. ' d' → logprob: -1.410293459892273
    3. ' de' → logprob: -1.785293459892273
    4. '_' → logprob: -2.6602935791015625
    5. ' que' → logprob: -2.6602935791015625
    6. ' la' → logprob: -3.1602935791015625
    7. ' l' → logprob: -3.1602935791015625
    8. 's' → logprob: -3.4102935791015625
    9. ' s' → logprob: -4.0352935791015625
    10. ' _' → logprob: -5.4102935791015625

Token 76: ''avoir' (ID: 55863)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.054721474647522
    2. 'e' → logprob: -1.429721474647522
    3. '_' → logprob: -2.1797213554382324
    4. 'u' → logprob: -2.3047213554382324
    5. 'uplic' → logprob: -2.4297213554382324
    6. 'a' → logprob: -4.179721355438232
    7. ''avoir' → logprob: -4.179721355438232
    8. ''être' → logprob: -4.304721355438232
    9. 'uplicate' → logprob: -4.304721355438232
    10. ''é' → logprob: -5.179721355438232

Token 77: ' tous' (ID: 10688)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47630631923675537
    2. 's' → logprob: -1.7263063192367554
    3. ' des' → logprob: -2.101306438446045
    4. ' ' → logprob: -3.351306438446045
    5. ' deux' → logprob: -3.976306438446045
    6. ' la' → logprob: -4.851306438446045
    7. ' que' → logprob: -5.226306438446045
    8. ' le' → logprob: -6.601306438446045
    9. ' exactement' → logprob: -6.726306438446045
    10. ' un' → logprob: -6.851306438446045

Token 78: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8066484332084656
    2. ' les' → logprob: -1.4316484928131104
    3. ' s' → logprob: -1.5566484928131104
    4. '```' → logprob: -3.3066484928131104
    5. 'les' → logprob: -4.056648254394531
    6. ' des' → logprob: -4.556648254394531
    7. '<|end|>' → logprob: -4.681648254394531
    8. ' ' → logprob: -5.056648254394531
    9. '_' → logprob: -5.181648254394531
    10. ' ég' → logprob: -6.056648254394531

Token 79: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5469446778297424
    2. 's' → logprob: -2.0469446182250977
    3. ' éléments' → logprob: -2.0469446182250977
    4. ' s' → logprob: -3.5469446182250977
    5. '0' → logprob: -3.7969446182250977
    6. ' elements' → logprob: -3.9219446182250977
    7. ' autres' → logprob: -4.046944618225098
    8. ' ' → logprob: -4.546944618225098
    9. '```' → logprob: -4.546944618225098
    10. 'aut' → logprob: -4.671944618225098

Token 80: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.3101136088371277
    2. 'diff' → logprob: -2.3101136684417725
    3. ' différents' → logprob: -2.9351136684417725
    4. ' ident' → logprob: -3.5601136684417725
    5. ' distinct' → logprob: -3.9351136684417725
    6. '=' → logprob: -4.560113430023193
    7. ' different' → logprob: -4.560113430023193
    8. ' eg' → logprob: -4.935113430023193
    9. 'distinct' → logprob: -5.060113430023193
    10. 's' → logprob: -5.185113430023193

Token 81: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.0060119833797216415
    2. 'ique' → logprob: -5.381011962890625
    3. '```' → logprob: -7.006011962890625
    4. 'i' → logprob: -8.756011962890625
    5. 'iqu' → logprob: -9.006011962890625
    6. 'iq' → logprob: -9.881011962890625
    7. '#' → logprob: -10.506011962890625
    8. '``' → logprob: -10.756011962890625
    9. 'ic' → logprob: -11.256011962890625
    10. 'ques' → logprob: -11.631011962890625

Token 82: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027005335316061974
    2. ')
' → logprob: -4.152005195617676
    3. '   ' → logprob: -5.277005195617676
    4. ' )' → logprob: -5.527005195617676
    5. '):
' → logprob: -7.652005195617676
    6. ' )
' → logprob: -7.902005195617676
    7. ',' → logprob: -8.277005195617676
    8. '):' → logprob: -8.902005195617676
    9. ' ' → logprob: -9.152005195617676
    10. '```' → logprob: -9.527005195617676

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014222975820302963
    2. '\n' → logprob: -5.889223098754883
    3. ')' → logprob: -6.014223098754883
    4. '"""
' → logprob: -6.264223098754883
    5. '
' → logprob: -6.389223098754883
    6. '"""' → logprob: -6.639223098754883
    7. ' 
' → logprob: -6.764223098754883
    8. '```' → logprob: -7.389223098754883
    9. ' """
' → logprob: -7.639223098754883
    10. '    
' → logprob: -7.639223098754883

Token 84: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008624620735645294
    2. ' 
' → logprob: -6.38362455368042
    3. '
' → logprob: -6.50862455368042
    4. '    
' → logprob: -6.50862455368042
    5. '```' → logprob: -6.88362455368042
    6. ')' → logprob: -7.13362455368042
    7. '\n' → logprob: -7.38362455368042
    8. '   
' → logprob: -8.383625030517578
    9. '    ' → logprob: -8.508625030517578
    10. 'n' → logprob: -8.633625030517578

Token 85: ' s' (ID: 265)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1049901470541954
    2. ' n' → logprob: -2.354990243911743
    3. 'k' → logprob: -5.729990005493164
    4. 'n' → logprob: -7.229990005493164
    5. ' s' → logprob: -8.104990005493164
    6. ' ' → logprob: -9.479990005493164
    7. ' ' → logprob: -9.604990005493164
    8. ' not' → logprob: -9.729990005493164
    9. ' le' → logprob: -9.729990005493164
    10. ' la' → logprob: -9.979990005493164

Token 86: ' n' (ID: 297)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6645046472549438
    2. ' in' → logprob: -1.6645046472549438
    3. ' >' → logprob: -2.0395045280456543
    4. ' not' → logprob: -2.7895045280456543
    5. ' !=' → logprob: -4.039504528045654
    6. '>' → logprob: -4.039504528045654
    7. ' est' → logprob: -4.289504528045654
    8. '==' → logprob: -4.414504528045654
    9. ' is' → logprob: -4.664504528045654
    10. ' <' → logprob: -4.914504528045654

Token 87: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.25410372018814087
    2. 'est' → logprob: -2.754103660583496
    3. 'e' → logprob: -3.004103660583496
    4. 'ot' → logprob: -4.004103660583496
    5. '=' → logprob: -4.379103660583496
    6. '>' → logprob: -4.629103660583496
    7. '==' → logprob: -4.754103660583496
    8. 'et' → logprob: -4.754103660583496
    9. 'a' → logprob: -5.004103660583496
    10. 'é' → logprob: -5.004103660583496

Token 88: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.055862415581941605
    2. 'pas' → logprob: -2.9308624267578125
    3. ' None' → logprob: -7.9308624267578125
    4. '_pas' → logprob: -8.180862426757812
    5. 'égal' → logprob: -9.555862426757812
    6. '=' → logprob: -9.680862426757812
    7. ' jamais' → logprob: -9.930862426757812
    8. '_' → logprob: -10.805862426757812
    9. 'p' → logprob: -10.930862426757812
    10. 's' → logprob: -11.180862426757812

Token 89: ' égal' (ID: 15059)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0018762783147394657
    2. 'None' → logprob: -6.751876354217529
    3. ' dans' → logprob: -8.376875877380371
    4. ' pas' → logprob: -8.501875877380371
    5. '_' → logprob: -9.751875877380371
    6. 'dans' → logprob: -10.126875877380371
    7. ' in' → logprob: -10.376875877380371
    8. ' a' → logprob: -10.501875877380371
    9. ' ' → logprob: -11.251875877380371
    10. ' présent' → logprob: -11.376875877380371

Token 90: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08481231331825256
    2. ' ' → logprob: -2.9598124027252197
    3. ' a' → logprob: -4.084812164306641
    4. 'à' → logprob: -4.834812164306641
    5. ' None' → logprob: -6.709812164306641
    6. ' au' → logprob: -7.209812164306641
    7. 'e' → logprob: -7.459812164306641
    8. ' pas' → logprob: -7.834812164306641
    9. '  ' → logprob: -7.959812164306641
    10. '=' → logprob: -7.959812164306641

Token 91: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7648231983184814
    2. ' ' → logprob: -1.3898231983184814
    3. '0' → logprob: -2.2648231983184814
    4. ' s' → logprob: -2.5148231983184814
    5. 'None' → logprob: -3.2648231983184814
    6. ' k' → logprob: -3.5148231983184814
    7. ' n' → logprob: -3.8898231983184814
    8. 's' → logprob: -5.264822959899902
    9. 'k' → logprob: -5.889822959899902
    10. '1' → logprob: -6.139822959899902

Token 92: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2636532485485077
    2. 'None' → logprob: -2.26365327835083
    3. ' None' → logprob: -3.51365327835083
    4. ' ' → logprob: -3.51365327835083
    5. 'k' → logprob: -3.76365327835083
    6. 's' → logprob: -4.26365327835083
    7. '1' → logprob: -4.38865327835083
    8. 'n' → logprob: -4.88865327835083
    9. '-' → logprob: -5.76365327835083
    10. 'a' → logprob: -6.01365327835083

Token 93: '**' (ID: 410)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0636250302195549
    2. ' :' → logprob: -3.1886250972747803
    3. ',' → logprob: -3.9386250972747803
    4. ' ' → logprob: -7.688624858856201
    5. ' ,' → logprob: -8.81362533569336
    6. '0' → logprob: -9.31362533569336
    7. ':
' → logprob: -10.18862533569336
    8. ',:' → logprob: -10.31362533569336
    9. '=' → logprob: -10.93862533569336
    10. ')' → logprob: -11.06362533569336

Token 94: '9' (ID: 24)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8448345065116882
    2. '-' → logprob: -2.094834566116333
    3. '7' → logprob: -2.094834566116333
    4. '6' → logprob: -2.469834566116333
    5. ' -' → logprob: -2.969834566116333
    6. '5' → logprob: -3.344834566116333
    7. '**' → logprob: -3.469834566116333
    8. '4' → logprob: -3.594834566116333
    9. '0' → logprob: -3.594834566116333
    10. '9' → logprob: -3.844834566116333

Token 95: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04563802853226662
    2. ' :' → logprob: -3.295638084411621
    3. ',' → logprob: -5.045638084411621
    4. ' ' → logprob: -8.170638084411621
    5. '   ' → logprob: -8.170638084411621
    6. ':
' → logprob: -8.670638084411621
    7. ' ,' → logprob: -9.045638084411621
    8. ' and' → logprob: -9.920638084411621
    9. ' :
' → logprob: -9.920638084411621
    10. ':return' → logprob: -10.420638084411621

Token 96: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8193418383598328
    2. ' :' → logprob: -0.8193418383598328
    3. ':' → logprob: -2.4443418979644775
    4. '    ' → logprob: -3.8193418979644775
    5. ' ' → logprob: -6.069341659545898
    6. ' on' → logprob: -6.319341659545898
    7. ' :
' → logprob: -6.569341659545898
    8. ' ' → logprob: -6.944341659545898
    9. ' alors' → logprob: -7.069341659545898
    10. '       ' → logprob: -7.569341659545898

Token 97: ' éléments' (ID: 57375)
  Prédit: ' autres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.37260472774505615
    2. ' next' → logprob: -1.6226047277450562
    3. ' valeurs' → logprob: -3.9976048469543457
    4. ' suivants' → logprob: -3.9976048469543457
    5. ' éléments' → logprob: -4.247604846954346
    6. ' autre' → logprob: -4.372604846954346
    7. ' code' → logprob: -4.997604846954346
    8. 'next' → logprob: -4.997604846954346
    9. ' prochains' → logprob: -4.997604846954346
    10. ' rest' → logprob: -6.122604846954346

Token 98: ' rest' (ID: 2867)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.685621976852417
    2. ' suivants' → logprob: -1.310621976852417
    3. ' rest' → logprob: -2.560621976852417
    4. ' sont' → logprob: -3.060621976852417
    5. ' different' → logprob: -4.560622215270996
    6. '=' → logprob: -4.560622215270996
    7. ' restantes' → logprob: -4.810622215270996
    8. ' autres' → logprob: -5.060622215270996
    9. ' peuvent' → logprob: -5.310622215270996
    10. 'rest' → logprob: -5.310622215270996

Token 99: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.6593250036239624
    2. 'ants' → logprob: -0.7843250036239624
    3. 'ent' → logprob: -3.659325122833252
    4. 'a' → logprob: -9.159324645996094
    5. 'e' → logprob: -9.284324645996094
    6. 'au' → logprob: -9.659324645996094
    7. 'ante' → logprob: -9.784324645996094
    8. 'aient' → logprob: -9.784324645996094
    9. '   ' → logprob: -10.159324645996094
    10. 'aur' → logprob: -10.159324645996094

Token 100: ' valent' (ID: 148217)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.10855983197689056
    2. ' =' → logprob: -3.2335598468780518
    3. ' seront' → logprob: -3.2335598468780518
    4. '=' → logprob: -4.858559608459473
    5. ' are' → logprob: -5.108559608459473
    6. ' peuvent' → logprob: -5.608559608459473
    7. ' doivent' → logprob: -6.733559608459473
    8. 's' → logprob: -6.858559608459473
    9. ' vaut' → logprob: -6.858559608459473
    10. '<|end|>' → logprob: -7.608559608459473

Token 101: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6187793016433716
    2. ' ' → logprob: -1.2437793016433716
    3. 's' → logprob: -2.493779182434082
    4. '0' → logprob: -2.618779182434082
    5. '10' → logprob: -4.118779182434082
    6. '1' → logprob: -7.618779182434082
    7. ' (' → logprob: -7.868779182434082
    8. '100' → logprob: -8.243779182434082
    9. '(' → logprob: -9.993779182434082
    10. '(s' → logprob: -10.243779182434082

Token 102: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0668970346450806
    2. 's' → logprob: -1.0668970346450806
    3. ' s' → logprob: -1.5668970346450806
    4. ' ' → logprob: -2.316896915435791
    5. '10' → logprob: -5.816896915435791
    6. '1' → logprob: -6.691896915435791
    7. '100' → logprob: -9.44189739227295
    8. '   ' → logprob: -9.69189739227295
    9. ' (' → logprob: -9.81689739227295
    10. '(s' → logprob: -10.06689739227295

Token 103: '**' (ID: 410)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6365277171134949
    2. 'else' → logprob: -1.6365277767181396
    3. '0' → logprob: -2.5115277767181396
    4. '   ' → logprob: -2.5115277767181396
    5. ' ' → logprob: -2.8865277767181396
    6. '
' → logprob: -4.5115275382995605
    7. '    
' → logprob: -4.8865275382995605
    8. ':' → logprob: -5.1365275382995605
    9. '-' → logprob: -5.2615275382995605
    10. ' 
' → logprob: -5.2615275382995605

Token 104: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.869017852295656e-06
    2. '-' → logprob: -12.750006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '```' → logprob: -13.625006675720215
    5. '6' → logprob: -14.875006675720215
    6. '8' → logprob: -16.31250762939453
    7. '**' → logprob: -16.50000762939453
    8. '09' → logprob: -17.00000762939453
    9. '10' → logprob: -17.43750762939453
    10. '^' → logprob: -17.56250762939453

Token 105: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26677507162094116
    2. ':' → logprob: -1.516775131225586
    3. ':
' → logprob: -4.516775131225586
    4. '\n' → logprob: -7.016775131225586
    5. ' :' → logprob: -7.016775131225586
    6. '
' → logprob: -7.391775131225586
    7. ',' → logprob: -8.016775131225586
    8. '    
' → logprob: -8.641775131225586
    9. ' ' → logprob: -8.891775131225586
    10. ' :
' → logprob: -9.266775131225586

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009332195855677128
    2. '
' → logprob: -5.509332180023193
    3. ' else' → logprob: -5.759332180023193
    4. 'else' → logprob: -6.884332180023193
    5. '    
' → logprob: -7.259332180023193
    6. ' 
' → logprob: -9.384332656860352
    7. ' elif' → logprob: -9.884332656860352
    8. '\n' → logprob: -10.009332656860352
    9. ':' → logprob: -10.634332656860352
    10. '       ' → logprob: -10.884332656860352

Token 107: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024663826916366816
    2. ' else' → logprob: -7.377466201782227
    3. '
' → logprob: -7.502466201782227
    4. '    
' → logprob: -8.002466201782227
    5. 'def' → logprob: -8.252466201782227
    6. 'else' → logprob: -8.377466201782227
    7. '"""
' → logprob: -9.127466201782227
    8. ' def' → logprob: -10.002466201782227
    9. '```' → logprob: -10.127466201782227
    10. '\n' → logprob: -10.252466201782227

Token 108: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00462403753772378
    2. 's' → logprob: -5.379623889923096
    3. ' ' → logprob: -13.129624366760254
    4. ' ' → logprob: -13.754624366760254
    5. ' n' → logprob: -15.379624366760254
    6. '_s' → logprob: -16.254623413085938
    7. '	s' → logprob: -16.504623413085938
    8. 'n' → logprob: -16.754623413085938
    9. '  ' → logprob: -16.754623413085938
    10. ' isinstance' → logprob: -16.754623413085938

Token 109: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07288748770952225
    2. '==' → logprob: -2.697887420654297
    3. '=' → logprob: -6.947887420654297
    4. ' !=' → logprob: -7.322887420654297
    5. ' est' → logprob: -7.697887420654297
    6. ' =' → logprob: -8.822887420654297
    7. ' >' → logprob: -8.822887420654297
    8. '>' → logprob: -8.947887420654297
    9. ' ' → logprob: -9.572887420654297
    10. '!=' → logprob: -9.947887420654297

Token 110: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02981008030474186
    2. '10' → logprob: -3.5298101902008057
    3. '1' → logprob: -11.279809951782227
    4. 'd' → logprob: -11.779809951782227
    5. ' ==' → logprob: -12.029809951782227
    6. '  ' → logprob: -12.279809951782227
    7. '==' → logprob: -12.529809951782227
    8. ' à' → logprob: -12.529809951782227
    9. ' égal' → logprob: -12.529809951782227
    10. '=' → logprob: -12.904809951782227

Token 111: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001937558175995946
    2. ' ' → logprob: -6.251937389373779
    3. '1' → logprob: -11.751937866210938
    4. '=' → logprob: -15.251937866210938
    5. '100' → logprob: -15.251937866210938
    6. '  ' → logprob: -15.626937866210938
    7. '==' → logprob: -16.126937866210938
    8. '```' → logprob: -16.126937866210938
    9. '   ' → logprob: -17.001937866210938
    10. '0' → logprob: -17.001937866210938

Token 112: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16374196112155914
    2. '9' → logprob: -1.913741946220398
    3. '^' → logprob: -6.2887420654296875
    4. '\xe2\x81' → logprob: -6.5387420654296875
    5. ' **' → logprob: -9.538742065429688
    6. '```' → logprob: -9.788742065429688
    7. ' ' → logprob: -10.788742065429688
    8. '
' → logprob: -11.413742065429688
    9. 'e' → logprob: -11.413742065429688
    10. '*' → logprob: -12.163742065429688

Token 113: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. '09' → logprob: -18.625
    5. '９' → logprob: -18.75
    6. '९' → logprob: -18.8125
    7. '۹' → logprob: -18.875
    8. 'g' → logprob: -19.125
    9. 'int' → logprob: -19.1875
    10. '^' → logprob: -19.25

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05160590261220932
    2. '-' → logprob: -3.3016059398651123
    3. ':' → logprob: -4.426605701446533
    4. ' -' → logprob: -7.551605701446533
    5. '   ' → logprob: -7.551605701446533
    6. ' ,' → logprob: -8.176606178283691
    7. 'else' → logprob: -9.801606178283691
    8. '+' → logprob: -10.051606178283691
    9. ' else' → logprob: -11.176606178283691
    10. ':
' → logprob: -11.426606178283691

Token 115: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.039223287254571915
    2. '   ' → logprob: -4.0392231941223145
    3. 'les' → logprob: -4.6642231941223145
    4. '0' → logprob: -5.0392231941223145
    5. ' ' → logprob: -6.1642231941223145
    6. '1' → logprob: -7.2892231941223145
    7. ' alors' → logprob: -7.6642231941223145
    8. ' ils' → logprob: -7.7892231941223145
    9. ' ' → logprob: -8.039223670959473
    10. '    ' → logprob: -8.664223670959473

Token 116: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.3546254336833954
    2. 'élé' → logprob: -1.2296254634857178
    3. 'elements' → logprob: -5.854625225067139
    4. ' elements' → logprob: -6.104625225067139
    5. ' autres' → logprob: -7.354625225067139
    6. 'rest' → logprob: -8.854625701904297
    7. ' rest' → logprob: -9.854625701904297
    8. 'él' → logprob: -10.479625701904297
    9. 'é' → logprob: -10.604625701904297
    10. ' élément' → logprob: -10.604625701904297

Token 117: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.5934250354766846
    2. 'rest' → logprob: -0.8434250354766846
    3. ' valent' → logprob: -5.3434247970581055
    4. '_rest' → logprob: -5.5934247970581055
    5. ' restent' → logprob: -5.7184247970581055
    6. ' val' → logprob: -6.0934247970581055
    7. 'val' → logprob: -6.8434247970581055
    8. ' restantes' → logprob: -7.3434247970581055
    9. ' vaut' → logprob: -7.4684247970581055
    10. '   ' → logprob: -7.7184247970581055

Token 118: 'ants' (ID: 2027)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.004945547319948673
    2. '   ' → logprob: -5.754945755004883
    3. 'ant' → logprob: -6.379945755004883
    4. 'an' → logprob: -11.379945755004883
    5. 'nt' → logprob: -11.504945755004883
    6. 'ont' → logprob: -11.629945755004883
    7. '       ' → logprob: -12.254945755004883
    8. '           ' → logprob: -12.504945755004883
    9. 'aient' → logprob: -12.629945755004883
    10. '=' → logprob: -12.754945755004883

Token 119: ' valent' (ID: 148217)
  Prédit: ' valent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valent' → logprob: -0.05766157805919647
    2. ' vaut' → logprob: -4.057661533355713
    3. 'val' → logprob: -4.307661533355713
    4. ' val' → logprob: -4.307661533355713
    5. ' =' → logprob: -5.057661533355713
    6. ' ' → logprob: -6.682661533355713
    7. ' sont' → logprob: -7.182661533355713
    8. '=' → logprob: -7.307661533355713
    9. ' vont' → logprob: -7.307661533355713
    10. 'v' → logprob: -7.432661533355713

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12245563417673111
    2. '10' → logprob: -2.747455596923828
    3. ' ' → logprob: -3.497455596923828
    4. '1' → logprob: -3.997455596923828
    5. 's' → logprob: -6.497455596923828
    6. '9' → logprob: -7.622455596923828
    7. '999' → logprob: -8.372455596923828
    8. '(' → logprob: -8.747455596923828
    9. ' s' → logprob: -10.247455596923828
    10. '100' → logprob: -10.747455596923828

Token 121: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34776151180267334
    2. '10' → logprob: -1.3477615118026733
    3. '1' → logprob: -3.972761631011963
    4. '999' → logprob: -4.847761631011963
    5. 's' → logprob: -5.097761631011963
    6. '9' → logprob: -7.472761631011963
    7. '(' → logprob: -8.347761154174805
    8. '100' → logprob: -8.847761154174805
    9. ' ' → logprob: -9.097761154174805
    10. '-' → logprob: -10.597761154174805

Token 122: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06319987028837204
    2. ':' → logprob: -3.313199758529663
    3. '
' → logprob: -5.188199996948242
    4. '    
' → logprob: -5.438199996948242
    5. ':
' → logprob: -5.688199996948242
    6. '\n' → logprob: -5.688199996948242
    7. ' 
' → logprob: -6.313199996948242
    8. 'def' → logprob: -6.563199996948242
    9. ',' → logprob: -7.188199996948242
    10. '  
' → logprob: -7.188199996948242

Token 123: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023385586217045784
    2. '    
' → logprob: -4.648385524749756
    3. ' afin' → logprob: -5.648385524749756
    4. ' 
' → logprob: -6.023385524749756
    5. ' et' → logprob: -6.648385524749756
    6. ' en' → logprob: -6.773385524749756
    7. '    ' → logprob: -6.898385524749756
    8. 'def' → logprob: -7.148385524749756
    9. ' ' → logprob: -7.648385524749756
    10. ' pour' → logprob: -7.898385524749756

Token 124: ' rester' (ID: 54655)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.12699435651302338
    2. 'év' → logprob: -2.5019943714141846
    3. ' ne' → logprob: -3.7519943714141846
    4. ' garantir' → logprob: -5.5019941329956055
    5. 'ne' → logprob: -6.5019941329956055
    6. ' garder' → logprob: -7.0019941329956055
    7. ' différ' → logprob: -7.0019941329956055
    8. ' conserver' → logprob: -7.0019941329956055
    9. 'é' → logprob: -7.1269941329956055
    10. ' assurer' → logprob: -7.5019941329956055

Token 125: ' dans' (ID: 2671)
  Prédit: ' coh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coh' → logprob: -1.043069839477539
    2. 'distinct' → logprob: -1.293069839477539
    3. 'diff' → logprob: -1.668069839477539
    4. ' distinct' → logprob: -2.418069839477539
    5. ' différents' → logprob: -3.168069839477539
    6. 'different' → logprob: -4.168069839477539
    7. ' différent' → logprob: -4.418069839477539
    8. 'dans' → logprob: -4.918069839477539
    9. ' compatibles' → logprob: -5.918069839477539
    10. ' different' → logprob: -6.293069839477539

Token 126: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.749603271484375
    2. ' la' → logprob: -1.374603271484375
    3. ' les' → logprob: -2.499603271484375
    4. 'l' → logprob: -2.874603271484375
    5. ' une' → logprob: -2.874603271484375
    6. ' le' → logprob: -3.624603271484375
    7. ' des' → logprob: -4.499603271484375
    8. 'la' → logprob: -4.499603271484375
    9. 'les' → logprob: -4.749603271484375
    10. 'le' → logprob: -4.749603271484375

Token 127: ' plage' (ID: 78241)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -1.0435388088226318
    2. 'interval' → logprob: -1.1685388088226318
    3. 'contr' → logprob: -2.793538808822632
    4. '```' → logprob: -3.418538808822632
    5. ' limites' → logprob: -3.418538808822632
    6. ' même' → logprob: -3.668538808822632
    7. 'pro' → logprob: -3.793538808822632
    8. 'lim' → logprob: -3.918538808822632
    9. 'def' → logprob: -4.043539047241211
    10. 'range' → logprob: -4.168539047241211

Token 128: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05172307789325714
    2. ' de' → logprob: -3.926723003387451
    3. ' valid' → logprob: -3.926723003387451
    4. ' des' → logprob: -5.801723003387451
    5. ' d' → logprob: -6.301723003387451
    6. ' ' → logprob: -7.051723003387451
    7. ' )' → logprob: -7.051723003387451
    8. ' else' → logprob: -7.301723003387451
    9. ' safe' → logprob: -7.551723003387451
    10. '    
' → logprob: -8.17672348022461

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008272472769021988
    2. ' ' → logprob: -4.883272647857666
    3. '2' → logprob: -8.008272171020508
    4. 's' → logprob: -9.383272171020508
    5. '   ' → logprob: -9.383272171020508
    6. '(' → logprob: -10.133272171020508
    7. '0' → logprob: -10.133272171020508
    8. ',' → logprob: -10.258272171020508
    9. ' s' → logprob: -11.133272171020508
    10. '10' → logprob: -11.633272171020508

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010725847678259015
    2. ' ,' → logprob: -7.001072406768799
    3. ',n' → logprob: -8.751072883605957
    4. ',
' → logprob: -14.376072883605957
    5. ';' → logprob: -14.626072883605957
    6. 'n' → logprob: -15.126072883605957
    7. ']' → logprob: -15.126072883605957
    8. '10' → logprob: -15.376072883605957
    9. '1' → logprob: -15.876072883605957
    10. '100' → logprob: -16.00107192993164

Token 131: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1602582484483719
    2. ' ' → logprob: -1.9102582931518555
    3. '100' → logprob: -10.910258293151855
    4. 's' → logprob: -12.035258293151855
    5. ' s' → logprob: -12.660258293151855
    6. 'int' → logprob: -13.285258293151855
    7. ' int' → logprob: -14.160258293151855
    8. '  ' → logprob: -14.285258293151855
    9. '
' → logprob: -14.285258293151855
    10. '   ' → logprob: -14.410258293151855

Token 132: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000919796759262681
    2. ' ' → logprob: -7.125919818878174
    3. '100' → logprob: -9.750919342041016
    4. 'int' → logprob: -10.500919342041016
    5. 's' → logprob: -10.625919342041016
    6. 'n' → logprob: -13.125919342041016
    7. '1' → logprob: -13.625919342041016
    8. '(' → logprob: -14.250919342041016
    9. ' s' → logprob: -15.125919342041016
    10. '   ' → logprob: -15.375919342041016

Token 133: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1799221932888031
    2. '9' → logprob: -1.8049222230911255
    3. '^' → logprob: -9.429922103881836
    4. '\xe2\x81' → logprob: -9.929922103881836
    5. '```' → logprob: -10.304922103881836
    6. ' **' → logprob: -11.804922103881836
    7. ']' → logprob: -12.554922103881836
    8. '*' → logprob: -14.054922103881836
    9. '_' → logprob: -14.054922103881836
    10. ' ' → logprob: -14.679922103881836

Token 134: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.375001907348633
    5. '09' → logprob: -17.687501907348633
    6. '``' → logprob: -18.000001907348633
    7. '**' → logprob: -18.125001907348633
    8. '^' → logprob: -18.875001907348633
    9. 'int' → logprob: -18.937501907348633
    10. '９' → logprob: -19.125001907348633

Token 135: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8159909248352051
    2. '].' → logprob: -1.190990924835205
    3. ']
' → logprob: -1.690990924835205
    4. '].
' → logprob: -2.690990924835205
    5. ' ]' → logprob: -7.565990924835205
    6. ' ]
' → logprob: -8.190990447998047
    7. ' ].' → logprob: -8.190990447998047
    8. '   ' → logprob: -8.440990447998047
    9. ']

' → logprob: -9.190990447998047
    10. '].

' → logprob: -9.190990447998047

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004217539913952351
    2. '"""' → logprob: -6.629217624664307
    3. '    
' → logprob: -7.129217624664307
    4. '
' → logprob: -7.254217624664307
    5. '"""
' → logprob: -7.879217624664307
    6. 'def' → logprob: -8.129217147827148
    7. ' """
' → logprob: -8.379217147827148
    8. '```' → logprob: -8.879217147827148
    9. ' 
' → logprob: -9.004217147827148
    10. ' """' → logprob: -9.879217147827148

Token 137: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036201801151037216
    2. 'rest' → logprob: -4.4112019538879395
    3. 'def' → logprob: -4.7862019538879395
    4. 'result' → logprob: -5.5362019538879395
    5. ' rest' → logprob: -5.5362019538879395
    6. ' if' → logprob: -6.1612019538879395
    7. 'if' → logprob: -6.7862019538879395
    8. '
' → logprob: -7.4112019538879395
    9. ' result' → logprob: -7.6612019538879395
    10. 'res' → logprob: -7.7862019538879395

Token 138: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17470622062683105
    2. '=' → logprob: -2.549706220626831
    3. ':' → logprob: -2.674706220626831
    4. '   ' → logprob: -4.92470645904541
    5. '):' → logprob: -6.42470645904541
    6. ')' → logprob: -6.67470645904541
    7. '<|end|>' → logprob: -7.42470645904541
    8. ' :' → logprob: -7.54970645904541
    9. ' =' → logprob: -8.29970645904541
    10. ' ,' → logprob: -8.42470645904541

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7644981741905212
    2. ' n' → logprob: -0.8894981741905212
    3. '    ' → logprob: -2.389498233795166
    4. 'n' → logprob: -3.514498233795166
    5. ' 
' → logprob: -7.764498233795166
    6. '    
' → logprob: -7.764498233795166
    7. ' ' → logprob: -8.139497756958008
    8. '(n' → logprob: -8.264497756958008
    9. '  ' → logprob: -8.389497756958008
    10. '     
' → logprob: -8.639497756958008

Token 140: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02065470442175865
    2. ' n' → logprob: -4.020654678344727
    3. '   ' → logprob: -6.020654678344727
    4. 'self' → logprob: -9.645654678344727
    5. ' self' → logprob: -12.020654678344727
    6. '       ' → logprob: -14.395654678344727
    7. '	n' → logprob: -14.395654678344727
    8. ' ' → logprob: -14.520654678344727
    9. '    
' → logprob: -14.520654678344727
    10. '```' → logprob: -15.020654678344727

Token 141: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003772650845348835
    2. ':' → logprob: -6.128772735595703
    3. ' ,' → logprob: -7.128772735595703
    4. ':int' → logprob: -8.003772735595703
    5. '<|end|>' → logprob: -8.128772735595703
    6. ',int' → logprob: -9.378772735595703
    7. '<|end|>' → logprob: -10.753772735595703
    8. '):' → logprob: -11.128772735595703
    9. ')' → logprob: -12.003772735595703
    10. 'int' → logprob: -12.128772735595703

Token 142: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038050562143325806
    2. ' int' → logprob: -3.288050651550293
    3. ':int' → logprob: -12.413050651550293
    4. ',int' → logprob: -13.788050651550293
    5. 'n' → logprob: -13.913050651550293
    6. '   ' → logprob: -14.288050651550293
    7. '=int' → logprob: -14.413050651550293
    8. ')' → logprob: -14.663050651550293
    9. ' )' → logprob: -14.663050651550293
    10. '[int' → logprob: -14.913050651550293

Token 143: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39903250336647034
    2. ')' → logprob: -1.274032473564148
    3. '):' → logprob: -3.0240325927734375
    4. '<|end|>' → logprob: -7.8990325927734375
    5. '),' → logprob: -8.899032592773438
    6. '):
' → logprob: -9.399032592773438
    7. '   ' → logprob: -10.274032592773438
    8. ' )' → logprob: -10.899032592773438
    9. '<|end|>' → logprob: -11.399032592773438
    10. '):

' → logprob: -11.524032592773438

Token 144: ' Taille' (ID: 174124)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.1380829811096191
    2. ' Le' → logprob: -1.7630829811096191
    3. ' number' → logprob: -2.263082981109619
    4. ' int' → logprob: -2.513082981109619
    5. ' le' → logprob: -2.763082981109619
    6. 'Nombre' → logprob: -2.763082981109619
    7. ' n' → logprob: -3.138082981109619
    8. ' Nombre' → logprob: -3.638082981109619
    9. ' la' → logprob: -4.013082981109619
    10. 'Le' → logprob: -4.013082981109619

Token 145: ' totale' (ID: 52898)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29625052213668823
    2. ',' → logprob: -1.546250581741333
    3. ')' → logprob: -3.796250581741333
    4. '<|end|>' → logprob: -5.046250343322754
    5. ' ,' → logprob: -6.046250343322754
    6. ' des' → logprob: -6.171250343322754
    7. '=' → logprob: -6.421250343322754
    8. ' )' → logprob: -6.421250343322754
    9. '  ' → logprob: -6.921250343322754
    10. '    ' → logprob: -7.296250343322754

Token 147: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6348477005958557
    2. 'la' → logprob: -0.7598477005958557
    3. 'l' → logprob: -6.509847640991211
    4. 'sequence' → logprob: -7.634847640991211
    5. ' sequence' → logprob: -8.759847640991211
    6. ' ' → logprob: -10.509847640991211
    7. ' l' → logprob: -10.759847640991211
    8. 'the' → logprob: -11.384847640991211
    9. 'sé' → logprob: -11.384847640991211
    10. ' the' → logprob: -11.759847640991211

Token 148: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.2857426702976227
    2. ' sé' → logprob: -1.7857426404953003
    3. 'sequence' → logprob: -2.66074275970459
    4. ' sequence' → logprob: -4.66074275970459
    5. 'suite' → logprob: -7.03574275970459
    6. 's' → logprob: -7.78574275970459
    7. 'liste' → logprob: -9.16074275970459
    8. 'seq' → logprob: -10.28574275970459
    9. 'sequ' → logprob: -11.03574275970459
    10. ' suite' → logprob: -11.16074275970459

Token 149: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -3.650518920039758e-06
    2. 'QUENCE' → logprob: -13.375003814697266
    3. 'qu' → logprob: -14.250003814697266
    4. 'q' → logprob: -14.375003814697266
    5. 'rie' → logprob: -14.500003814697266
    6. 'quences' → logprob: -15.625003814697266
    7. '   ' → logprob: -16.125003814697266
    8. 'que' → logprob: -16.750003814697266
    9. '-' → logprob: -18.875003814697266
    10. '
' → logprob: -19.250003814697266

Token 150: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4909512400627136
    2. ')' → logprob: -1.7409512996673584
    3. ',' → logprob: -1.7409512996673584
    4. '```' → logprob: -4.115951061248779
    5. ',
' → logprob: -4.740951061248779
    6. '<|end|>' → logprob: -5.615951061248779
    7. ':' → logprob: -6.615951061248779
    8. '\n' → logprob: -6.740951061248779
    9. '    
' → logprob: -6.865951061248779
    10. '
' → logprob: -7.115951061248779

Token 151: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7921097278594971
    2. ' ' → logprob: -1.792109727859497
    3. ')' → logprob: -2.042109727859497
    4. '    ' → logprob: -2.792109727859497
    5. '       ' → logprob: -2.792109727859497
    6. ' 
' → logprob: -3.292109727859497
    7. '```' → logprob: -4.042109489440918
    8. ' )' → logprob: -4.417109489440918
    9. ''' → logprob: -4.917109489440918
    10. ',' → logprob: -5.042109489440918

Token 152: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.06199502944946289
    2. ' k' → logprob: -2.811995029449463
    3. '   ' → logprob: -10.561994552612305
    4. '```' → logprob: -14.311994552612305
    5. '       ' → logprob: -14.811994552612305
    6. '	k' → logprob: -15.311994552612305
    7. ' ' → logprob: -16.811994552612305
    8. '
' → logprob: -16.936994552612305
    9. '    ' → logprob: -17.061994552612305
    10. 'def' → logprob: -17.686994552612305

Token 153: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8909639716148376
    2. ')' → logprob: -1.3909640312194824
    3. '<|end|>' → logprob: -1.8909640312194824
    4. ':int' → logprob: -2.3909640312194824
    5. '=int' → logprob: -3.2659640312194824
    6. ',' → logprob: -4.015964031219482
    7. ' (' → logprob: -4.140964031219482
    8. '=' → logprob: -5.015964031219482
    9. '(int' → logprob: -5.265964031219482
    10. '):' → logprob: -5.265964031219482

Token 154: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004078639671206474
    2. ' int' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.504077911376953
    4. '=int' → logprob: -17.129077911376953
    5. '[int' → logprob: -17.504077911376953
    6. '(int' → logprob: -17.879077911376953
    7. ':int' → logprob: -18.004077911376953
    8. ']int' → logprob: -18.754077911376953
    9. ' )' → logprob: -19.254077911376953
    10. '<int' → logprob: -19.504077911376953

Token 155: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10166630148887634
    2. ')' → logprob: -2.351666212081909
    3. ':' → logprob: -6.726666450500488
    4. '):
' → logprob: -8.851666450500488
    5. ' ):' → logprob: -10.226666450500488
    6. ',' → logprob: -10.601666450500488
    7. '<|end|>' → logprob: -11.476666450500488
    8. '):

' → logprob: -11.726666450500488
    9. ')>' → logprob: -11.976666450500488
    10. ':int' → logprob: -11.976666450500488

Token 156: ' Nombre' (ID: 70208)
  Prédit: ' Nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Nombre' → logprob: -0.3172118365764618
    2. 'Nombre' → logprob: -2.317211866378784
    3. ' nombre' → logprob: -2.442211866378784
    4. ' Number' → logprob: -3.192211866378784
    5. ' Le' → logprob: -3.942211866378784
    6. ' number' → logprob: -4.817211627960205
    7. ' int' → logprob: -4.817211627960205
    8. 'Number' → logprob: -6.067211627960205
    9. ' Exact' → logprob: -6.442211627960205
    10. 'int' → logprob: -6.567211627960205

Token 157: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.11250544339418411
    2. ' des' → logprob: -2.7375054359436035
    3. ' de' → logprob: -3.9875054359436035
    4. ' ' → logprob: -4.8625054359436035
    5. '<|end|>' → logprob: -5.7375054359436035
    6. ')' → logprob: -6.1125054359436035
    7. ' )' → logprob: -6.3625054359436035
    8. 'd' → logprob: -6.6125054359436035
    9. ' =' → logprob: -6.7375054359436035
    10. '=' → logprob: -6.8625054359436035

Token 158: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3943800628185272
    2. ' éléments' → logprob: -1.1443800926208496
    3. ' elements' → logprob: -6.01938009262085
    4. ' s' → logprob: -6.51938009262085
    5. ' espaces' → logprob: -7.14438009262085
    6. 's' → logprob: -7.39438009262085
    7. ''esp' → logprob: -7.76938009262085
    8. 'elements' → logprob: -7.89438009262085
    9. ' élément' → logprob: -8.769379615783691
    10. '_elements' → logprob: -8.894379615783691

Token 159: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0391475148499012
    2. ' éléments' → logprob: -3.2891476154327393
    3. ' espaces' → logprob: -8.66414737701416
    4. 'é' → logprob: -8.91414737701416
    5. 'elements' → logprob: -9.03914737701416
    6. ''esp' → logprob: -9.16414737701416
    7. ' él' → logprob: -9.28914737701416
    8. 'él' → logprob: -9.53914737701416
    9. ''' → logprob: -9.91414737701416
    10. ' ' → logprob: -10.03914737701416

Token 160: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -4.596781946020201e-05
    2. 'ment' → logprob: -10.375045776367188
    3. 'm' → logprob: -12.000045776367188
    4. '   ' → logprob: -12.250045776367188
    5. '```' → logprob: -13.625045776367188
    6. 'ents' → logprob: -14.875045776367188
    7. 'phants' → logprob: -15.375045776367188
    8. 'me' → logprob: -15.500045776367188
    9. 'nts' → logprob: -15.500045776367188
    10. 'MENTS' → logprob: -15.875045776367188

Token 161: ' devant' (ID: 37522)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.04452621191740036
    2. ' à' → logprob: -3.5445261001586914
    3. 'égal' → logprob: -5.544526100158691
    4. 'ég' → logprob: -6.044526100158691
    5. ' =' → logprob: -6.169526100158691
    6. 's' → logprob: -6.669526100158691
    7. '   ' → logprob: -7.169526100158691
    8. ' égal' → logprob: -7.169526100158691
    9. ' s' → logprob: -7.419526100158691
    10. 'à' → logprob: -7.419526100158691

Token 162: ' val' (ID: 1459)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.3184111714363098
    2. ' être' → logprob: -1.318411111831665
    3. ' val' → logprob: -6.318411350250244
    4. 'val' → logprob: -7.193411350250244
    5. 'êtres' → logprob: -7.568411350250244
    6. ' ' → logprob: -7.693411350250244
    7. ''être' → logprob: -8.193410873413086
    8. 'égal' → logprob: -8.193410873413086
    9. 'etre' → logprob: -8.693410873413086
    10. '=' → logprob: -8.818410873413086

Token 163: 'oir' (ID: 12906)
  Prédit: 'oir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oir' → logprob: -0.00018506382184568793
    2. 'o' → logprob: -9.125185012817383
    3. '   ' → logprob: -11.125185012817383
    4. '=' → logprob: -11.750185012817383
    5. '
' → logprob: -12.125185012817383
    6. '#' → logprob: -12.625185012817383
    7. 'oire' → logprob: -12.625185012817383
    8. '__' → logprob: -12.875185012817383
    9. '```' → logprob: -12.875185012817383
    10. 'ir' → logprob: -13.000185012817383

Token 164: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.026597635820508003
    2. 's' → logprob: -3.651597738265991
    3. ' ' → logprob: -8.27659797668457
    4. ' exactement' → logprob: -11.15159797668457
    5. ' exactly' → logprob: -11.27659797668457
    6. '_s' → logprob: -12.40159797668457
    7. ' ' → logprob: -12.77659797668457
    8. '```' → logprob: -12.77659797668457
    9. '  ' → logprob: -13.52659797668457
    10. '	s' → logprob: -14.02659797668457

Token 165: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7260302305221558
    2. ')' → logprob: -0.8510302305221558
    3. '   ' → logprob: -2.9760303497314453
    4. '),' → logprob: -3.8510303497314453
    5. '):
' → logprob: -5.226030349731445
    6. '):' → logprob: -5.226030349731445
    7. ',
' → logprob: -6.101030349731445
    8. ')
' → logprob: -6.976030349731445
    9. ').' → logprob: -7.101030349731445
    10. '.' → logprob: -7.601030349731445

Token 166: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012863356620073318
    2. ')' → logprob: -5.3878631591796875
    3. '```' → logprob: -5.7628631591796875
    4. '       ' → logprob: -6.1378631591796875
    5. '"""
' → logprob: -6.7628631591796875
    6. '"""' → logprob: -7.1378631591796875
    7. ',' → logprob: -8.137863159179688
    8. '    
' → logprob: -8.387863159179688
    9. ')
' → logprob: -9.512863159179688
    10. '"' → logprob: -9.887863159179688

Token 167: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3982112407684326
    2. ' s' → logprob: -1.1482112407684326
    3. '   ' → logprob: -4.523211479187012
    4. '       ' → logprob: -9.023211479187012
    5. '```' → logprob: -9.148211479187012
    6. '
' → logprob: -10.648211479187012
    7. '"""
' → logprob: -11.148211479187012
    8. ' ' → logprob: -11.148211479187012
    9. 'return' → logprob: -11.273211479187012
    10. 'indent' → logprob: -11.273211479187012

Token 168: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15553908050060272
    2. '(int' → logprob: -2.405539035797119
    3. '):' → logprob: -3.280539035797119
    4. ')' → logprob: -5.155539035797119
    5. '):
' → logprob: -5.405539035797119
    6. ':' → logprob: -5.530539035797119
    7. 'int' → logprob: -7.405539035797119
    8. ':int' → logprob: -7.530539035797119
    9. '   ' → logprob: -8.530539512634277
    10. ' int' → logprob: -8.530539512634277

Token 169: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008253679610788822
    2. '):' → logprob: -5.133253574371338
    3. ')' → logprob: -6.633253574371338
    4. ':' → logprob: -7.633253574371338
    5. ':int' → logprob: -8.133254051208496
    6. '):
' → logprob: -9.258254051208496
    7. '[int' → logprob: -9.633254051208496
    8. ' int' → logprob: -10.133254051208496
    9. '   ' → logprob: -11.258254051208496
    10. '(int' → logprob: -11.758254051208496

Token 170: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003095243126153946
    2. ')' → logprob: -6.2530951499938965
    3. '):
' → logprob: -6.8780951499938965
    4. ' ):' → logprob: -9.378095626831055
    5. ':' → logprob: -10.003095626831055
    6. '):

' → logprob: -13.253095626831055
    7. '   ' → logprob: -13.503095626831055
    8. ',' → logprob: -13.878095626831055
    9. ':int' → logprob: -15.003095626831055
    10. '```' → logprob: -15.003095626831055

Token 171: ' Vale' (ID: 55242)
  Prédit: 'La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'La' → logprob: -0.2677576541900635
    2. 'Vale' → logprob: -2.3927576541900635
    3. ' La' → logprob: -2.8927576541900635
    4. 'L' → logprob: -3.2677576541900635
    5. 'val' → logprob: -4.517757415771484
    6. ' Vale' → logprob: -4.642757415771484
    7. 'int' → logprob: -4.642757415771484
    8. ' L' → logprob: -5.142757415771484
    9. ' la' → logprob: -5.642757415771484
    10. 'Le' → logprob: -5.892757415771484

Token 172: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -6.12258882028982e-05
    2. 'u' → logprob: -10.25006103515625
    3. 'urs' → logprob: -10.75006103515625
    4. 'eur' → logprob: -12.87506103515625
    5. '   ' → logprob: -14.37506103515625
    6. 'ue' → logprob: -15.87506103515625
    7. '       ' → logprob: -16.12506103515625
    8. 'leur' → logprob: -16.12506103515625
    9. ' ur' → logprob: -16.25006103515625
    10. 'urn' → logprob: -16.25006103515625

Token 173: ' fix' (ID: 9295)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9150107502937317
    2. ' à' → logprob: -1.915010690689087
    3. ' de' → logprob: -2.290010690689087
    4. ',' → logprob: -2.915010690689087
    5. ':' → logprob: -2.915010690689087
    6. '   ' → logprob: -3.165010690689087
    7. ' des' → logprob: -3.290010690689087
    8. '):' → logprob: -3.290010690689087
    9. '_des' → logprob: -3.665010690689087
    10. '):
' → logprob: -3.790010690689087

Token 174: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04222330451011658
    2. '   ' → logprob: -3.2922232151031494
    3. 'é' → logprob: -6.0422234535217285
    4. 'e' → logprob: -7.0422234535217285
    5. ' ' → logprob: -8.04222297668457
    6. 'ue' → logprob: -8.66722297668457
    7. '       ' → logprob: -9.29222297668457
    8. 'ee' → logprob: -9.66722297668457
    9. 'uée' → logprob: -10.04222297668457
    10. ' à' → logprob: -10.16722297668457

Token 175: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162023782730103
    2. '):' → logprob: -1.3412023782730103
    3. '):
' → logprob: -1.7162023782730103
    4. ')' → logprob: -3.5912022590637207
    5. ' ):' → logprob: -3.9662022590637207
    6. ' ):
' → logprob: -5.091202259063721
    7. ',' → logprob: -5.216202259063721
    8. ' =' → logprob: -5.341202259063721
    9. '=' → logprob: -6.091202259063721
    10. ' )' → logprob: -6.591202259063721

Token 176: ' k' (ID: 372)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3117547929286957
    2. ' s' → logprob: -1.811754822731018
    3. ' la' → logprob: -2.6867547035217285
    4. 'les' → logprob: -4.0617547035217285
    5. 's' → logprob: -4.9367547035217285
    6. ' l' → logprob: -5.4367547035217285
    7. 'l' → logprob: -6.3117547035217285
    8. ')' → logprob: -6.3117547035217285
    9. ' ' → logprob: -6.6867547035217285
    10. ' le' → logprob: -7.0617547035217285

Token 177: ' éléments' (ID: 57375)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.9393274188041687
    2. 'élé' → logprob: -1.1893274784088135
    3. ')' → logprob: -1.9393274784088135
    4. ' éléments' → logprob: -1.9393274784088135
    5. ' elements' → logprob: -5.439327239990234
    6. '   ' → logprob: -5.814327239990234
    7. ' ):' → logprob: -6.689327239990234
    8. '_elements' → logprob: -6.814327239990234
    9. 'elements' → logprob: -6.814327239990234
    10. ' ' → logprob: -7.064327239990234

Token 178: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4566701054573059
    2. '):
' → logprob: -1.0816700458526611
    3. '):' → logprob: -3.831670045852661
    4. ')' → logprob: -5.20667028427124
    5. '```' → logprob: -9.206669807434082
    6. ',' → logprob: -9.581669807434082
    7. '):
' → logprob: -9.581669807434082
    8. '"""
' → logprob: -10.206669807434082
    9. ':' → logprob: -10.831669807434082
    10. '
' → logprob: -10.956669807434082

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015264620073139668
    2. '"""
' → logprob: -4.765264511108398
    3. '    
' → logprob: -6.140264511108398
    4. '"""' → logprob: -6.140264511108398
    5. '
' → logprob: -7.140264511108398
    6. ' """
' → logprob: -7.265264511108398
    7. ')' → logprob: -8.265264511108398
    8. '"' → logprob: -8.890264511108398
    9. ')
' → logprob: -9.015264511108398
    10. ' 
' → logprob: -9.765264511108398

Token 180: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26364096999168396
    2. 'Returns' (adapté à ' Returns') → logprob: -1.5136409997940063
    3. 'def' → logprob: -5.263640880584717
    4. '"""
' → logprob: -5.513640880584717
    5. 'returns' → logprob: -7.138640880584717
    6. '
' → logprob: -7.638640880584717
    7. ' Returns' → logprob: -8.013641357421875
    8. '"""' → logprob: -8.263641357421875
    9. '```' → logprob: -8.763641357421875
    10. 'Retour' → logprob: -9.138641357421875

Token 181: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5880523920059204
    2. ' [
' → logprob: -1.4630523920059204
    3. '[' → logprob: -2.213052272796631
    4. ' ' → logprob: -2.838052272796631
    5. ' []' → logprob: -4.588052272796631
    6. '  ' → logprob: -4.713052272796631
    7. ':' → logprob: -5.463052272796631
    8. '[]' → logprob: -5.838052272796631
    9. '[:]' → logprob: -5.963052272796631
    10. '<|end|>' → logprob: -5.963052272796631

Token 182: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6870307922363281
    2. '   ' → logprob: -0.8120307922363281
    3. '[' → logprob: -3.687030792236328
    4. '    ' → logprob: -4.312030792236328
    5. ' []' → logprob: -4.687030792236328
    6. ' [
' → logprob: -5.687030792236328
    7. '[]' → logprob: -7.812030792236328
    8. ' ' → logprob: -7.937030792236328
    9. ' List' → logprob: -8.312030792236328
    10. 'List' → logprob: -8.437030792236328

Token 183: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.17841428518295288
    2. 'list' (adapté à ' list') → logprob: -2.1784143447875977
    3. ' List' → logprob: -3.1784143447875977
    4. ' list' → logprob: -4.803414344787598
    5. '[List' → logprob: -8.428414344787598
    6. '   ' → logprob: -9.303414344787598
    7. '_list' → logprob: -12.053414344787598
    8. '```' → logprob: -12.178414344787598
    9. '[' → logprob: -12.803414344787598
    10. ' [' → logprob: -13.553414344787598

Token 184: ' :' (ID: 712)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.805981972021982e-05
    2. '[' → logprob: -10.25009822845459
    3. '<int' → logprob: -10.25009822845459
    4. '   ' → logprob: -11.75009822845459
    5. '```' → logprob: -12.37509822845459
    6. '[Int' → logprob: -12.50009822845459
    7. '(int' → logprob: -12.87509822845459
    8. '<|end|>' → logprob: -13.00009822845459
    9. '[List' → logprob: -13.12509822845459
    10. '[
' → logprob: -13.62509822845459

Token 185: ' Une' (ID: 19758)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.16867798566818237
    2. ' [' → logprob: -1.9186780452728271
    3. '[' → logprob: -5.543677806854248
    4. '[n' → logprob: -5.793677806854248
    5. '   ' → logprob: -7.168677806854248
    6. '[Int' → logprob: -9.043678283691406
    7. ' int' → logprob: -9.418678283691406
    8. ' n' → logprob: -9.418678283691406
    9. '[str' → logprob: -9.668678283691406
    10. '[s' → logprob: -10.043678283691406

Token 186: ' liste' (ID: 31719)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2321085929870605
    2. '   ' → logprob: -1.6071085929870605
    3. ' [' → logprob: -1.6071085929870605
    4. '[' → logprob: -2.3571085929870605
    5. '[n' → logprob: -2.6071085929870605
    6. ' sequence' → logprob: -2.9821085929870605
    7. ' de' → logprob: -3.4821085929870605
    8. ' list' → logprob: -3.4821085929870605
    9. 'sequence' → logprob: -4.7321085929870605
    10. ' liste' → logprob: -5.3571085929870605

Token 187: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8723620772361755
    2. '[int' → logprob: -0.8723620772361755
    3. ' de' → logprob: -2.7473621368408203
    4. '<|end|>' → logprob: -3.1223621368408203
    5. '```' → logprob: -4.49736213684082
    6. '(range' → logprob: -4.62236213684082
    7. ' of' → logprob: -4.99736213684082
    8. ' d' → logprob: -5.37236213684082
    9. '   ' → logprob: -5.62236213684082
    10. '[
' → logprob: -5.62236213684082

Token 188: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14368310570716858
    2. ' int' → logprob: -2.1436831951141357
    3. 'n' → logprob: -4.893682956695557
    4. 'ent' → logprob: -5.518682956695557
    5. ' n' → logprob: -5.893682956695557
    6. ' ent' → logprob: -6.643682956695557
    7. 'ints' → logprob: -7.518682956695557
    8. ' integers' → logprob: -8.518683433532715
    9. 'inte' → logprob: -8.768683433532715
    10. '[int' → logprob: -9.143683433532715

Token 189: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6743584275245667
    2. ' d' → logprob: -0.9243584275245667
    3. ' integers' → logprob: -2.674358367919922
    4. 'ent' → logprob: -4.549358367919922
    5. ' int' → logprob: -5.424358367919922
    6. '<int' → logprob: -6.049358367919922
    7. '[int' → logprob: -6.174358367919922
    8. 'int' → logprob: -6.299358367919922
    9. 'd' → logprob: -7.049358367919922
    10. ' entier' → logprob: -7.174358367919922

Token 190: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.1093578804284334e-05
    2. 'ières' → logprob: -10.250051498413086
    3. 'ier' → logprob: -12.375051498413086
    4. '```' → logprob: -12.500051498413086
    5. 'i' → logprob: -12.750051498413086
    6. '   ' → logprob: -14.125051498413086
    7. 'ieres' → logprob: -14.250051498413086
    8. 'ires' → logprob: -14.375051498413086
    9. 't' → logprob: -14.500051498413086
    10. 'ers' → logprob: -14.625051498413086

Token 191: ' contenant' (ID: 131049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057544201612472534
    2. '[' → logprob: -3.307544231414795
    3. ':' → logprob: -4.307544231414795
    4. ']' → logprob: -7.182544231414795
    5. ':
' → logprob: -7.182544231414795
    6. 'def' → logprob: -7.307544231414795
    7. '```' → logprob: -7.307544231414795
    8. '
' → logprob: -7.682544231414795
    9. '    
' → logprob: -7.932544231414795
    10. '       ' → logprob: -8.182543754577637

Token 192: ' exactement' (ID: 108701)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9552403092384338
    2. ' s' → logprob: -1.580240249633789
    3. 's' → logprob: -1.955240249633789
    4. ' la' → logprob: -2.080240249633789
    5. ' exactement' → logprob: -2.705240249633789
    6. ' exactly' → logprob: -3.330240249633789
    7. ' ' → logprob: -4.080240249633789
    8. 'k' → logprob: -5.205240249633789
    9. ' l' → logprob: -5.330240249633789
    10. ' les' → logprob: -5.330240249633789

Token 193: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.13821983337402344
    2. 'k' → logprob: -2.1382198333740234
    3. ' s' → logprob: -4.888219833374023
    4. 's' → logprob: -5.763219833374023
    5. ' exactly' → logprob: -8.013219833374023
    6. ' exactement' → logprob: -9.388219833374023
    7. '[k' → logprob: -10.263219833374023
    8. ' ' → logprob: -10.513219833374023
    9. ' [' → logprob: -10.638219833374023
    10. 'exact' → logprob: -11.138219833374023

Token 194: ' fois' (ID: 14697)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.032214365899562836
    2. 's' → logprob: -4.157214164733887
    3. ' elements' → logprob: -4.407214164733887
    4. ' éléments' → logprob: -5.907214164733887
    5. ' occurrences' → logprob: -7.657214164733887
    6. ' instances' → logprob: -8.407214164733887
    7. 'elements' → logprob: -9.282214164733887
    8. 'élé' → logprob: -9.532214164733887
    9. ' de' → logprob: -10.032214164733887
    10. ' fois' → logprob: -10.157214164733887

Token 195: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20141518115997314
    2. 's' → logprob: -1.7014151811599731
    3. ' le' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.826415061950684
    5. '   ' → logprob: -15.326415061950684
    6. 'le' → logprob: -15.701415061950684
    7. '_s' → logprob: -16.076416015625
    8. ' la' → logprob: -16.326416015625
    9. '`s' → logprob: -16.576416015625
    10. ' ' → logprob: -16.826416015625

Token 196: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.675409197807312
    2. ']' → logprob: -1.300409197807312
    3. ',' → logprob: -1.550409197807312
    4. 'def' → logprob: -6.675409317016602
    5. ' ]' → logprob: -6.800409317016602
    6. '[' → logprob: -6.925409317016602
    7. ' +' → logprob: -7.050409317016602
    8. ')' → logprob: -7.175409317016602
    9. ',
' → logprob: -8.425409317016602
    10. '.' → logprob: -8.425409317016602

Token 197: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08596090972423553
    2. '[' → logprob: -3.585960865020752
    3. ' [' → logprob: -3.960960865020752
    4. '    ' → logprob: -4.460960865020752
    5. ' puis' → logprob: -5.085960865020752
    6. '[]' → logprob: -5.210960865020752
    7. ' et' → logprob: -6.085960865020752
    8. ' n' → logprob: -6.335960865020752
    9. ' rest' → logprob: -6.585960865020752
    10. '    
' → logprob: -6.835960865020752

Token 198: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5054140686988831
    2. '   ' → logprob: -1.6304140090942383
    3. ' (' → logprob: -2.2554140090942383
    4. '(n' → logprob: -2.8804140090942383
    5. 'n' → logprob: -4.005414009094238
    6. ' des' → logprob: -4.630414009094238
    7. ' les' → logprob: -4.755414009094238
    8. ' une' → logprob: -6.505414009094238
    9. ' ' → logprob: -7.505414009094238
    10. '  ' → logprob: -7.880414009094238

Token 199: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20251163840293884
    2. 'n' → logprob: -1.7025116682052612
    3. '   ' → logprob: -6.827511787414551
    4. ')n' → logprob: -12.70251178741455
    5. ' ' → logprob: -13.07751178741455
    6. ' (' → logprob: -13.20251178741455
    7. '	n' → logprob: -13.32751178741455
    8. ')' → logprob: -13.45251178741455
    9. '(n' → logprob: -13.82751178741455
    10. ' ' → logprob: -13.82751178741455

Token 200: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018389543518424034
    2. '-' → logprob: -4.018389701843262
    3. '-k' → logprob: -8.393389701843262
    4. ' ' → logprob: -12.018389701843262
    5. '   ' → logprob: -12.643389701843262
    6. '-n' → logprob: -12.768389701843262
    7. ')' → logprob: -14.893389701843262
    8. '    ' → logprob: -15.518389701843262
    9. ' ' → logprob: -16.018388748168945
    10. '  ' → logprob: -16.018388748168945

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005629229708574712
    2. ' )' → logprob: -7.500563144683838
    3. '')' → logprob: -13.00056266784668
    4. '-' → logprob: -13.37556266784668
    5. ' -' → logprob: -13.62556266784668
    6. '[' → logprob: -14.25056266784668
    7. ' ' → logprob: -14.37556266784668
    8. ')
' → logprob: -14.87556266784668
    9. ')n' → logprob: -15.00056266784668
    10. ' ' → logprob: -15.25056266784668

Token 202: ' valeurs' (ID: 73668)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.484640121459961
    2. ' elements' → logprob: -2.109640121459961
    3. ' fois' → logprob: -2.359640121459961
    4. ' espaces' → logprob: -2.359640121459961
    5. ' copies' → logprob: -2.484640121459961
    6. ' éléments' → logprob: -2.484640121459961
    7. '[' → logprob: -2.609640121459961
    8. ' d' → logprob: -2.859640121459961
    9. ' valeurs' → logprob: -3.734640121459961
    10. ' de' → logprob: -4.234640121459961

Token 203: ' conven' (ID: 9891)
  Prédit: ' différentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différentes' → logprob: -0.6522836685180664
    2. 'diff' → logprob: -1.6522836685180664
    3. '   ' → logprob: -2.5272836685180664
    4. ' distinct' → logprob: -3.1522836685180664
    5. ' év' → logprob: -3.4022836685180664
    6. ' diff' → logprob: -3.6522836685180664
    7. ' qui' → logprob: -3.9022836685180664
    8. ' different' → logprob: -3.9022836685180664
    9. ' [' → logprob: -4.527283668518066
    10. ' différents' → logprob: -5.027283668518066

Token 204: 'ablement' (ID: 63986)
  Prédit: 'ablement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ablement' → logprob: -0.4624677300453186
    2. 'ues' → logprob: -1.3374676704406738
    3. 'ables' → logprob: -2.712467670440674
    4. 'ient' → logprob: -3.712467670440674
    5. 'able' → logprob: -5.587467670440674
    6. 'u' → logprob: -5.712467670440674
    7. '```' → logprob: -6.462467670440674
    8. 'amment' → logprob: -6.587467670440674
    9. 'ientes' → logprob: -6.587467670440674
    10. 'iennent' → logprob: -7.337467670440674

Token 205: ' chois' (ID: 33475)
  Prédit: ' chois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.10649567097425461
    2. ' rem' → logprob: -3.2314956188201904
    3. 'cho' → logprob: -3.8564956188201904
    4. ' espac' → logprob: -4.6064958572387695
    5. ' répart' → logprob: -5.2314958572387695
    6. ' cho' → logprob: -5.4814958572387695
    7. ' différentes' → logprob: -5.4814958572387695
    8. 'rem' → logprob: -5.6064958572387695
    9. 'altern' → logprob: -6.1064958572387695
    10. ' remplac' → logprob: -6.1064958572387695

Token 206: 'ies' (ID: 566)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20636680722236633
    2. '[' → logprob: -3.081366777420044
    3. 'u' → logprob: -3.581366777420044
    4. ']' → logprob: -3.581366777420044
    5. 'ed' → logprob: -3.956366777420044
    6. 'e' → logprob: -4.331367015838623
    7. 'ée' → logprob: -4.456367015838623
    8. '=' → logprob: -4.831367015838623
    9. '[
' → logprob: -4.831367015838623
    10. 'é' → logprob: -5.081367015838623

Token 207: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005226763430982828
    2. '.' → logprob: -6.2552266120910645
    3. 'def' → logprob: -6.2552266120910645
    4. ']' → logprob: -7.5052266120910645
    5. '[' → logprob: -8.505227088928223
    6. '.
' → logprob: -9.255227088928223
    7. ',' → logprob: -9.505227088928223
    8. '```' → logprob: -9.505227088928223
    9. '[]' → logprob: -9.630227088928223
    10. '
' → logprob: -9.630227088928223

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005256287753582001
    2. '```' → logprob: -6.255256175994873
    3. ']' → logprob: -6.630256175994873
    4. '"""' → logprob: -7.130256175994873
    5. 'def' → logprob: -7.380256175994873
    6. '"""
' → logprob: -8.505256652832031
    7. '    
' → logprob: -8.880256652832031
    8. ')' → logprob: -9.255256652832031
    9. '
' → logprob: -10.130256652832031
    10. '\n' → logprob: -11.255256652832031

Token 209: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06460423022508621
    2. ':' → logprob: -3.6896042823791504
    3. '```' → logprob: -4.31460428237915
    4. ':
' → logprob: -4.68960428237915
    5. '
' → logprob: -5.06460428237915
    6. '\n' → logprob: -6.31460428237915
    7. ')' → logprob: -6.56460428237915
    8. '):
' → logprob: -6.56460428237915
    9. '    
' → logprob: -6.68960428237915
    10. '"""
' (adapté à ' """
') → logprob: -7.43960428237915

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018208740220870823
    2. '```' → logprob: -8.875182151794434
    3. '    
' → logprob: -10.750182151794434
    4. '    ' → logprob: -11.625182151794434
    5. 'def' → logprob: -11.875182151794434
    6. 'rest' → logprob: -12.625182151794434
    7. 'elements' → logprob: -15.000182151794434
    8. ' rest' → logprob: -15.250182151794434
    9. '       ' → logprob: -15.375182151794434
    10. '
' → logprob: -15.375182151794434

Token 211: ' if' (ID: 538)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.41104036569595337
    2. 'if' (adapté à ' if') → logprob: -2.0360403060913086
    3. 'result' → logprob: -2.5360403060913086
    4. '   ' → logprob: -3.4110403060913086
    5. 'sequence' → logprob: -3.5360403060913086
    6. 'seq' → logprob: -3.5360403060913086
    7. 'res' → logprob: -3.9110403060913086
    8. 'remaining' → logprob: -5.036040306091309
    9. ' if' → logprob: -6.286040306091309
    10. 'val' → logprob: -6.786040306091309

Token 212: ' s' (ID: 265)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.017634732648730278
    2. 'k' → logprob: -4.642634868621826
    3. ' s' → logprob: -4.892634868621826
    4. ' n' → logprob: -8.392634391784668
    5. 's' → logprob: -9.767634391784668
    6. ' ' → logprob: -10.142634391784668
    7. ' not' → logprob: -11.642634391784668
    8. '   ' → logprob: -12.517634391784668
    9. '  ' → logprob: -13.017634391784668
    10. 'n' → logprob: -13.205134391784668

Token 213: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7457801699638367
    2. ' ==' → logprob: -0.8707801699638367
    3. '==' → logprob: -2.8707802295684814
    4. '!=' → logprob: -2.9957802295684814
    5. ' <' → logprob: -8.870779991149902
    6. ')' → logprob: -9.745779991149902
    7. '=' → logprob: -10.120779991149902
    8. ' ' → logprob: -10.370779991149902
    9. '   ' → logprob: -10.495779991149902
    10. '<' → logprob: -10.745779991149902

Token 214: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10024387389421463
    2. '10' → logprob: -2.3502438068389893
    3. '100' → logprob: -10.22524356842041
    4. '1' → logprob: -14.47524356842041
    5. 'int' → logprob: -15.47524356842041
    6. ' int' → logprob: -16.600244522094727
    7. '(' → logprob: -16.850244522094727
    8. ' ' → logprob: -16.850244522094727
    9. '   ' → logprob: -17.100244522094727
    10. ' (' → logprob: -17.100244522094727

Token 215: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012630375567823648
    2. '100' → logprob: -9.000125885009766
    3. ' ' → logprob: -12.875125885009766
    4. '(' → logprob: -15.875125885009766
    5. '1' → logprob: -16.250125885009766
    6. '109' → logprob: -16.875125885009766
    7. 'int' → logprob: -17.250125885009766
    8. '```' → logprob: -18.625125885009766
    9. '   ' → logprob: -18.875125885009766
    10. '104' → logprob: -20.125125885009766

Token 216: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0002261854097014293
    2. '9' → logprob: -8.625226020812988
    3. ' **' → logprob: -10.000226020812988
    4. '^' → logprob: -14.375226020812988
    5. '```' → logprob: -15.125226020812988
    6. '*' → logprob: -15.750226020812988
    7. ' ' → logprob: -15.875226020812988
    8. '\xe2\x81' → logprob: -16.625226974487305
    9. ' ' → logprob: -17.750226974487305
    10. '   ' → logprob: -18.000226974487305

Token 217: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '```' → logprob: -16.8750057220459
    5. '  ' → logprob: -18.7500057220459
    6. '

' → logprob: -18.7500057220459
    7. '    ' → logprob: -19.2500057220459
    8. '``' → logprob: -19.3750057220459
    9. '９' → logprob: -19.3750057220459
    10. '
' → logprob: -19.4375057220459

Token 218: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.375
    4. '９' → logprob: -18.875
    5. '999' → logprob: -19.625
    6. '۹' → logprob: -19.6875
    7. '९' → logprob: -19.6875
    8. '   ' → logprob: -19.6875
    9. '09' → logprob: -19.8125
    10. '

' → logprob: -20.125

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10023482143878937
    2. ':
' → logprob: -2.3502347469329834
    3. ':
' → logprob: -11.100234985351562
    4. '   ' → logprob: -11.850234985351562
    5. ':

' → logprob: -13.600234985351562
    6. ' :' → logprob: -13.725234985351562
    7. ':return' → logprob: -13.975234985351562
    8. '):
' → logprob: -14.100234985351562
    9. ' :
' → logprob: -14.475234985351562
    10. '       ' → logprob: -14.600234985351562

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01136786863207817
    2. 'rest' → logprob: -4.8863677978515625
    3. ' rest' → logprob: -5.8863677978515625
    4. 'other' → logprob: -8.386367797851562
    5. ' other' → logprob: -8.636367797851562
    6. ':' → logprob: -8.886367797851562
    7. '
' → logprob: -9.636367797851562
    8. '   ' → logprob: -9.761367797851562
    9. '    
' → logprob: -10.386367797851562
    10. '        
' → logprob: -10.511367797851562

Token 221: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.9101963639259338
    2. 'other' → logprob: -1.035196304321289
    3. '   ' → logprob: -1.660196304321289
    4. 'remaining' → logprob: -4.160196304321289
    5. 'return' → logprob: -4.285196304321289
    6. 'others' → logprob: -4.910196304321289
    7. 'value' → logprob: -5.035196304321289
    8. 'val' → logprob: -5.535196304321289
    9. 'reste' → logprob: -7.410196304321289
    10. '       ' → logprob: -7.410196304321289

Token 222: ' Si' (ID: 7832)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6647024154663086
    2. ' rest' → logprob: -1.9147024154663086
    3. '   ' → logprob: -2.4147024154663086
    4. 'other' → logprob: -3.0397024154663086
    5. 'remaining' → logprob: -3.4147024154663086
    6. '       ' → logprob: -3.5397024154663086
    7. ' remaining' → logprob: -3.9147024154663086
    8. 'val' → logprob: -4.039702415466309
    9. ' other' → logprob: -4.039702415466309
    10. 'others' → logprob: -4.164702415466309

Token 223: ' s' (ID: 265)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.88763827085495
    2. ' rest' → logprob: -1.0126383304595947
    3. '   ' → logprob: -2.6376383304595947
    4. ' remaining' → logprob: -3.8876383304595947
    5. 'remaining' → logprob: -3.8876383304595947
    6. 'reste' → logprob: -3.8876383304595947
    7. ' reste' → logprob: -4.012638092041016
    8. 'val' → logprob: -4.012638092041016
    9. ' other' → logprob: -4.262638092041016
    10. 'other' → logprob: -4.637638092041016

Token 224: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0350509881973267
    2. '_rest' → logprob: -1.1600509881973267
    3. 'reste' → logprob: -2.410050868988037
    4. 'rest' → logprob: -2.910050868988037
    5. '!=' → logprob: -3.035050868988037
    6. '_val' → logprob: -3.535050868988037
    7. '_rem' → logprob: -3.660050868988037
    8. '_' → logprob: -3.660050868988037
    9. 'n' → logprob: -4.410050868988037
    10. 'val' → logprob: -4.785050868988037

Token 225: ' différent' (ID: 114823)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2574903964996338
    2. 'not' → logprob: -2.382490396499634
    3. ' not' → logprob: -2.507490396499634
    4. ' ' → logprob: -3.132490396499634
    5. 'different' → logprob: -6.132490158081055
    6. ' s' → logprob: -6.257490158081055
    7. 's' → logprob: -6.382490158081055
    8. '1' → logprob: -6.632490158081055
    9. ' différent' → logprob: -7.382490158081055
    10. ' different' → logprob: -7.382490158081055

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22664226591587067
    2. '   ' → logprob: -1.8516422510147095
    3. 'de' → logprob: -4.10164213180542
    4. ' from' → logprob: -4.85164213180542
    5. '10' → logprob: -4.85164213180542
    6. ' des' → logprob: -5.22664213180542
    7. 'from' → logprob: -5.72664213180542
    8. '    ' → logprob: -6.10164213180542
    9. '       ' → logprob: -6.72664213180542
    10. ',' → logprob: -8.226642608642578

Token 227: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02983495220541954
    2. ' ' → logprob: -3.5298349857330322
    3. '100' → logprob: -10.029834747314453
    4. 's' → logprob: -10.904834747314453
    5. ' s' → logprob: -11.279834747314453
    6. '   ' → logprob: -12.779834747314453
    7. ' (' → logprob: -12.904834747314453
    8. '(' → logprob: -13.029834747314453
    9. '1' → logprob: -14.154834747314453
    10. '0' → logprob: -14.529834747314453

Token 228: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011164079420268536
    2. 's' → logprob: -4.63616418838501
    3. ' ' → logprob: -7.01116418838501
    4. '(' → logprob: -8.261163711547852
    5. '100' → logprob: -8.511163711547852
    6. ' s' → logprob: -10.886163711547852
    7. '1' → logprob: -11.386163711547852
    8. '0' → logprob: -12.261163711547852
    9. '   ' → logprob: -12.886163711547852
    10. ' (' → logprob: -13.011163711547852

Token 229: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.36516860127449036
    2. '9' → logprob: -1.240168571472168
    3. ' **' → logprob: -4.115168571472168
    4. ' ' → logprob: -8.990168571472168
    5. '^' → logprob: -9.865168571472168
    6. '\xe2\x81' → logprob: -10.365168571472168
    7. '```' → logprob: -10.865168571472168
    8. '7' → logprob: -11.490168571472168
    9. '   ' → logprob: -11.490168571472168
    10. ' ' → logprob: -12.115168571472168

Token 230: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -13.62501049041748
    4. '   ' → logprob: -15.81251049041748
    5. '^' → logprob: -16.687511444091797
    6. '**' → logprob: -17.250011444091797
    7. '９' → logprob: -17.375011444091797
    8. '``' → logprob: -17.375011444091797
    9. '
' → logprob: -17.437511444091797
    10. '९' → logprob: -17.437511444091797

Token 231: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5408601760864258
    2. '       ' → logprob: -1.1658601760864258
    3. ',' → logprob: -3.040860176086426
    4. ':
' → logprob: -3.165860176086426
    5. 'rest' → logprob: -4.790860176086426
    6. '           ' → logprob: -6.415860176086426
    7. ' :' → logprob: -6.540860176086426
    8. ' rest' → logprob: -6.790860176086426
    9. '   ' → logprob: -6.915860176086426
    10. '_rest' → logprob: -6.915860176086426

Token 232: ' on' (ID: 402)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8838841915130615
    2. ' rest' → logprob: -1.6338841915130615
    3. '       ' → logprob: -2.2588841915130615
    4. '   ' → logprob: -2.3838841915130615
    5. ' other' → logprob: -3.2588841915130615
    6. 'other' → logprob: -3.2588841915130615
    7. ' return' → logprob: -3.6338841915130615
    8. 'return' → logprob: -4.133884429931641
    9. ' remainder' → logprob: -4.883884429931641
    10. 'val' → logprob: -5.008884429931641

Token 233: ' utilise' (ID: 70283)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.196722149848938
    2. 'return' → logprob: -1.446722149848938
    3. ' return' → logprob: -1.946722149848938
    4. 'rem' → logprob: -2.0717220306396484
    5. 'val' → logprob: -2.5717220306396484
    6. '   ' → logprob: -3.3217220306396484
    7. 'reste' → logprob: -3.4467220306396484
    8. ' rem' → logprob: -4.446722030639648
    9. ' rest' → logprob: -4.696722030639648
    10. ' reste' → logprob: -5.446722030639648

Token 234: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07610822468996048
    2. ' ' → logprob: -3.32610821723938
    3. '[' → logprob: -3.45110821723938
    4. ' [' → logprob: -5.326108455657959
    5. '   ' → logprob: -7.326108455657959
    6. '1' → logprob: -10.2011079788208
    7. '100' → logprob: -10.3261079788208
    8. '0' → logprob: -10.3261079788208
    9. '       ' → logprob: -11.7011079788208
    10. '    ' → logprob: -13.7011079788208

Token 235: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.333223139634356e-05
    2. '[' → logprob: -10.500033378601074
    3. '(' → logprob: -13.250033378601074
    4. ' ' → logprob: -13.625033378601074
    5. '   ' → logprob: -13.625033378601074
    6. '100' → logprob: -13.750033378601074
    7. '1' → logprob: -15.125033378601074
    8. '0' → logprob: -17.375032424926758
    9. '999' → logprob: -17.875032424926758
    10. '```' → logprob: -18.000032424926758

Token 236: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.25193122029304504
    2. ' **' → logprob: -1.5019311904907227
    3. '*' → logprob: -14.251931190490723
    4. '^' → logprob: -14.876931190490723
    5. ' ' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.501931190490723
    7. '9' → logprob: -15.626931190490723
    8. ' *' → logprob: -16.12693214416504
    9. ' **
' → logprob: -16.12693214416504
    10. '```' → logprob: -16.12693214416504

Token 237: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.125110626220703
    4. '```' → logprob: -14.250110626220703
    5. '    ' → logprob: -17.437610626220703
    6. '  ' → logprob: -17.687610626220703
    7. ' ' → logprob: -18.000110626220703
    8. '``' → logprob: -18.250110626220703
    9. '９' → logprob: -18.250110626220703
    10. '^' → logprob: -18.312610626220703

Token 238: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7917935848236084
    2. '       ' → logprob: -0.7917935848236084
    3. ' for' → logprob: -2.7917935848236084
    4. 'for' → logprob: -4.6667938232421875
    5. ',' → logprob: -5.0417938232421875
    6. ')' → logprob: -5.6667938232421875
    7. 'rest' → logprob: -5.7917938232421875
    8. '
' → logprob: -6.2917938232421875
    9. '    
' → logprob: -6.5417938232421875
    10. ' pour' → logprob: -6.7917938232421875

Token 239: ' remplir' (ID: 113625)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2158889770507812
    2. ' [' → logprob: -1.8408889770507812
    3. 'rest' → logprob: -2.0908889770507812
    4. ' rest' → logprob: -2.2158889770507812
    5. '_rest' → logprob: -2.9658889770507812
    6. ' les' → logprob: -3.0908889770507812
    7. ' the' → logprob: -3.0908889770507812
    8. '[n' → logprob: -3.8408889770507812
    9. '_' → logprob: -3.9658889770507812
    10. ' _' → logprob: -4.090888977050781

Token 240: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5312747359275818
    2. '(n' → logprob: -1.1562747955322266
    3. '[n' → logprob: -3.2812747955322266
    4. ' les' → logprob: -3.9062747955322266
    5. ' (' → logprob: -4.531274795532227
    6. ' n' → logprob: -5.031274795532227
    7. ' la' → logprob: -5.156274795532227
    8. ' [' → logprob: -5.281274795532227
    9. '    ' → logprob: -5.906274795532227
    10. '[' → logprob: -6.031274795532227

Token 241: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.05560782551765442
    2. 'reste' → logprob: -2.930607795715332
    3. 'rest' → logprob: -8.180607795715332
    4. ' restant' → logprob: -8.555607795715332
    5. 's' → logprob: -9.805607795715332
    6. '   ' → logprob: -9.805607795715332
    7. 're' → logprob: -10.055607795715332
    8. 'res' → logprob: -10.555607795715332
    9. 'remaining' → logprob: -11.180607795715332
    10. 'r' → logprob: -11.305607795715332

Token 242: ' afin' (ID: 22217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00537367956712842
    2. '   ' → logprob: -6.130373477935791
    3. '
' → logprob: -6.505373477935791
    4. ',' → logprob: -7.255373477935791
    5. '        
' → logprob: -8.00537395477295
    6. '    
' → logprob: -8.88037395477295
    7. 'return' → logprob: -9.00537395477295
    8. '           ' → logprob: -9.50537395477295
    9. ' for' → logprob: -10.25537395477295
    10. '[' → logprob: -10.50537395477295

Token 243: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30568432807922363
    2. ' d' → logprob: -1.8056843280792236
    3. '       ' → logprob: -2.9306843280792236
    4. '   ' → logprob: -3.4306843280792236
    5. 'de' → logprob: -4.9306840896606445
    6. '    ' → logprob: -5.9306840896606445
    7. 'd' → logprob: -6.0556840896606445
    8. '           ' → logprob: -7.1806840896606445
    9. '        ' → logprob: -9.180684089660645
    10. ' of' → logprob: -9.555684089660645

Token 244: ''év' (ID: 114425)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.022858720272779465
    2. ''év' → logprob: -3.8978586196899414
    3. '’éviter' → logprob: -6.522858619689941
    4. ' éviter' → logprob: -7.522858619689941
    5. 'ev' → logprob: -8.522858619689941
    6. '   ' → logprob: -10.022858619689941
    7. 'é' → logprob: -10.147858619689941
    8. 'v' → logprob: -12.272858619689941
    9. ''' → logprob: -12.772858619689941
    10. '\'' → logprob: -13.022858619689941

Token 245: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -4.727905979962088e-05
    2. '   ' → logprob: -11.25004768371582
    3. 'it' → logprob: -11.62504768371582
    4. ' iter' → logprob: -11.87504768371582
    5. '_iter' → logprob: -12.62504768371582
    6. '```' → logprob: -13.00004768371582
    7. '
' → logprob: -13.12504768371582
    8. 'ite' → logprob: -13.37504768371582
    9. 'iterr' → logprob: -13.50004768371582
    10. '

' → logprob: -13.62504768371582

Token 246: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33937618136405945
    2. ' la' → logprob: -1.5893762111663818
    3. ' une' → logprob: -3.589376211166382
    4. '    ' → logprob: -3.714376211166382
    5. ' de' → logprob: -4.589375972747803
    6. ' ' → logprob: -5.339375972747803
    7. ' des' → logprob: -5.589375972747803
    8. ' d' → logprob: -5.839375972747803
    9. ' les' → logprob: -5.964375972747803
    10. ' l' → logprob: -6.464375972747803

Token 247: ' valeurs' (ID: 73668)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.2180901765823364
    2. 'dup' → logprob: -1.3430901765823364
    3. 'duplicates' → logprob: -1.8430901765823364
    4. ' duplic' → logprob: -2.093090057373047
    5. ' doubl' → logprob: -2.343090057373047
    6. ' duplicates' → logprob: -3.343090057373047
    7. 'duplic' → logprob: -3.968090057373047
    8. 's' → logprob: -5.843090057373047
    9. 'd' → logprob: -6.468090057373047
    10. 'du' → logprob: -6.718090057373047

Token 248: ' ég' (ID: 33150)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9718731045722961
    2. ' ident' → logprob: -1.2218730449676514
    3. ' inutil' → logprob: -1.7218730449676514
    4. ' red' → logprob: -3.5968730449676514
    5. ' ég' → logprob: -3.9718730449676514
    6. '_' → logprob: -4.3468732833862305
    7. ' =' → logprob: -4.3468732833862305
    8. '=' → logprob: -4.8468732833862305
    9. ' en' → logprob: -4.9718732833862305
    10. ' duplicates' → logprob: -4.9718732833862305

Token 249: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.008703920990228653
    2. 'al' → logprob: -4.758703708648682
    3. '```' → logprob: -10.25870418548584
    4. 'aux' → logprob: -10.63370418548584
    5. 'ale' → logprob: -11.00870418548584
    6. '``' → logprob: -13.00870418548584
    7. 'a' → logprob: -13.13370418548584
    8. 'uales' → logprob: -13.25870418548584
    9. '

' → logprob: -13.75870418548584
    10. '
' → logprob: -14.13370418548584

Token 250: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037641242146492004
    2. '       ' → logprob: -3.6626412868499756
    3. ' à' → logprob: -5.6626410484313965
    4. '    ' → logprob: -6.2876410484313965
    5. '10' → logprob: -6.7876410484313965
    6. '=' → logprob: -7.0376410484313965
    7. '[' → logprob: -7.2876410484313965
    8. ',' → logprob: -7.2876410484313965
    9. '```' → logprob: -7.7876410484313965
    10. 'else' → logprob: -7.9126410484313965

Token 251: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16023053228855133
    2. ' s' → logprob: -1.9102305173873901
    3. ' ' → logprob: -12.16023063659668
    4. '_s' → logprob: -14.78523063659668
    5. ' ' → logprob: -15.66023063659668
    6. 'space' → logprob: -16.41023063659668
    7. '    ' → logprob: -16.53523063659668
    8. '```' → logprob: -16.66023063659668
    9. ''s' → logprob: -17.16023063659668
    10. '	s' → logprob: -17.28523063659668

Token 252: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08811964839696884
    2. '   ' → logprob: -2.5881197452545166
    3. '
' → logprob: -5.3381195068359375
    4. '    
' → logprob: -6.7131195068359375
    5. ',' → logprob: -7.0881195068359375
    6. '        
' → logprob: -7.3381195068359375
    7. '           ' → logprob: -8.213119506835938
    8. 'else' → logprob: -8.463119506835938
    9. 'return' → logprob: -8.713119506835938
    10. '

' → logprob: -9.338119506835938

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006733018439263105
    2. 'return' → logprob: -5.256732940673828
    3. ' return' → logprob: -7.256732940673828
    4. 'rest' → logprob: -7.381732940673828
    5. 'result' → logprob: -10.006732940673828
    6. ' rest' → logprob: -10.131732940673828
    7. '           ' → logprob: -11.131732940673828
    8. '   ' → logprob: -11.131732940673828
    9. '        
' → logprob: -11.256732940673828
    10. 'res' → logprob: -12.381732940673828

Token 254: ' ans' (ID: 3345)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.4781828820705414
    2. 'return' → logprob: -1.4781829118728638
    3. ' return' → logprob: -3.103182792663574
    4. '   ' → logprob: -3.103182792663574
    5. ' rest' → logprob: -3.603182792663574
    6. 'result' → logprob: -4.478182792663574
    7. '       ' → logprob: -4.978182792663574
    8. 'remaining' → logprob: -5.353182792663574
    9. ' remainder' → logprob: -5.853182792663574
    10. 'sequence' → logprob: -6.228182792663574

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117042779922485
    2. '=' → logprob: -1.40617036819458
    3. '   ' → logprob: -11.531170845031738
    4. ' ' → logprob: -12.406170845031738
    5. '=[]' → logprob: -13.281170845031738
    6. '[' → logprob: -13.406170845031738
    7. '=[]
' → logprob: -14.656170845031738
    8. '[:]' → logprob: -14.906170845031738
    9. '=[' → logprob: -15.156170845031738
    10. ']' → logprob: -15.156170845031738

Token 256: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16027814149856567
    2. '[' → logprob: -1.910278081893921
    3. '[s' → logprob: -10.6602783203125
    4. '   ' → logprob: -11.4102783203125
    5. '[n' → logprob: -11.4102783203125
    6. '[int' → logprob: -12.9102783203125
    7. '[]' → logprob: -13.9102783203125
    8. '[k' → logprob: -13.9102783203125
    9. ' ' → logprob: -14.0352783203125
    10. '[num' → logprob: -14.7852783203125

Token 257: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043018829077482224
    2. '10' → logprob: -3.1680188179016113
    3. ' s' → logprob: -11.29301929473877
    4. '   ' → logprob: -13.41801929473877
    5. ' ' → logprob: -13.79301929473877
    6. '100' → logprob: -13.79301929473877
    7. '(' → logprob: -13.91801929473877
    8. '```' → logprob: -14.54301929473877
    9. '`s' → logprob: -15.04301929473877
    10. 'int' → logprob: -15.29301929473877

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0305641982704401
    2. ']*' → logprob: -3.530564308166504
    3. ' ]' → logprob: -7.280564308166504
    4. ' if' → logprob: -9.655564308166504
    5. ']+' → logprob: -10.155564308166504
    6. 'if' → logprob: -11.155564308166504
    7. ' for' → logprob: -12.780564308166504
    8. ']*(' → logprob: -12.905564308166504
    9. '   ' → logprob: -13.905564308166504
    10. ',' → logprob: -14.155564308166504

Token 259: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3871830999851227
    2. ' +' → logprob: -1.1371830701828003
    3. '*' → logprob: -8.51218318939209
    4. '+[' → logprob: -9.51218318939209
    5. ' *' → logprob: -11.01218318939209
    6. '+k' → logprob: -11.13718318939209
    7. '[:]' → logprob: -12.88718318939209
    8. '[' → logprob: -13.76218318939209
    9. '   ' → logprob: -14.51218318939209
    10. '+n' → logprob: -14.76218318939209

Token 260: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.25
    3. 'kx' → logprob: -22.5
    4. '{k' → logprob: -23.625
    5. '	k' → logprob: -23.75
    6. '```' → logprob: -26.0
    7. 'к' → logprob: -26.5
    8. '   ' → logprob: -26.75
    9. '(k' → logprob: -26.875
    10. 'kst' → logprob: -27.125

Token 261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038273051381111145
    2. '+' → logprob: -3.2882730960845947
    3. '+[' → logprob: -8.413272857666016
    4. '   ' → logprob: -12.413272857666016
    5. ' +
' → logprob: -12.913272857666016
    6. '       ' → logprob: -13.538272857666016
    7. '[' → logprob: -14.413272857666016
    8. '+
' → logprob: -14.538272857666016
    9. ' plus' → logprob: -15.038272857666016
    10. ' ans' → logprob: -15.413272857666016

Token 262: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021044313907623
    2. ' [' → logprob: -2.350210428237915
    3. '[(' → logprob: -12.850210189819336
    4. '([' → logprob: -14.475210189819336
    5. '[n' → logprob: -15.850210189819336
    6. ' [(' → logprob: -16.100210189819336
    7. '   ' → logprob: -16.225210189819336
    8. '(' → logprob: -16.350210189819336
    9. ' ' → logprob: -16.725210189819336
    10. ' ' → logprob: -17.100210189819336

Token 263: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005270280409604311
    2. '(' → logprob: -5.255270481109619
    3. ' ' → logprob: -10.505270004272461
    4. '100' → logprob: -12.130270004272461
    5. '   ' → logprob: -13.130270004272461
    6. ' (' → logprob: -13.630270004272461
    7. 'int' → logprob: -15.380270004272461
    8. '```' → logprob: -16.88027000427246
    9. '    ' → logprob: -17.13027000427246
    10. '  ' → logprob: -17.38027000427246

Token 264: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20152083039283752
    2. ' **' → logprob: -1.7015208005905151
    3. '9' → logprob: -9.201520919799805
    4. '*' → logprob: -12.951520919799805
    5. ' ' → logprob: -13.826520919799805
    6. '```' → logprob: -14.201520919799805
    7. ' ' → logprob: -14.701520919799805
    8. ' *' → logprob: -15.076520919799805
    9. ' **)' → logprob: -15.514020919799805
    10. ')' → logprob: -15.639020919799805

Token 265: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.750021934509277
    4. '```' → logprob: -15.875021934509277
    5. '    ' → logprob: -17.500022888183594
    6. '       ' → logprob: -17.750022888183594
    7. '९' → logprob: -17.937522888183594
    8. '۹' → logprob: -18.000022888183594
    9. '  ' → logprob: -18.000022888183594
    10. '９' → logprob: -18.125022888183594

Token 266: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -18.0
    5. '９' → logprob: -19.375
    6. '``' → logprob: -19.875
    7. '۹' → logprob: -20.25
    8. '
' → logprob: -20.4375
    9. '९' → logprob: -20.625
    10. '`' → logprob: -20.875

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007333897519856691
    2. ' ]' → logprob: -7.250733375549316
    3. ']*' → logprob: -10.750733375549316
    4. '   ' → logprob: -14.500733375549316
    5. ' for' → logprob: -14.625733375549316
    6. ']*(' → logprob: -14.750733375549316
    7. ')' → logprob: -15.375733375549316
    8. '']' → logprob: -15.625733375549316
    9. '"]' → logprob: -16.250734329223633
    10. '```' → logprob: -16.750734329223633

Token 268: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0838928371667862
    2. '*' → logprob: -3.333892822265625
    3. '*(' → logprob: -3.458892822265625
    4. '[' → logprob: -4.958892822265625
    5. '   ' → logprob: -6.208892822265625
    6. ')' → logprob: -6.458892822265625
    7. ' [' → logprob: -6.833892822265625
    8. '*[' → logprob: -7.708892822265625
    9. ' ' → logprob: -7.958892822265625
    10. '[n' → logprob: -8.708892822265625

Token 269: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032008851412683725
    2. ' (' → logprob: -5.753201007843018
    3. '   ' → logprob: -10.75320053100586
    4. '(' → logprob: -13.50320053100586
    5. '((' → logprob: -16.00320053100586
    6. '  ' → logprob: -16.87820053100586
    7. '[n' → logprob: -17.12820053100586
    8. 'n' → logprob: -17.25320053100586
    9. '(nn' → logprob: -17.37820053100586
    10. ' ' → logprob: -17.50320053100586

Token 270: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004071159288287163
    2. '(n' → logprob: -5.629071235656738
    3. ' n' → logprob: -7.879071235656738
    4. '   ' → logprob: -9.379071235656738
    5. ' (' → logprob: -11.879071235656738
    6. '	n' → logprob: -14.754071235656738
    7. '(' → logprob: -15.379071235656738
    8. '       ' → logprob: -16.504070281982422
    9. ')n' → logprob: -16.629070281982422
    10. '_n' → logprob: -16.879070281982422

Token 271: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13457229733467102
    2. '-' → logprob: -2.1345722675323486
    3. '-k' → logprob: -4.884572505950928
    4. ' ' → logprob: -10.13457202911377
    5. '   ' → logprob: -12.13457202911377
    6. '-n' → logprob: -12.13457202911377
    7. ')' → logprob: -14.13457202911377
    8. ' k' → logprob: -14.63457202911377
    9. '  ' → logprob: -16.009572982788086
    10. '-u' → logprob: -16.259572982788086

Token 272: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. '	k' → logprob: -20.37520408630371
    4. ' ' → logprob: -21.87520408630371
    5. ' к' → logprob: -22.50020408630371
    6. ')' → logprob: -22.62520408630371
    7. '   ' → logprob: -23.12520408630371
    8. 'kx' → logprob: -23.25020408630371
    9. '{k' → logprob: -23.62520408630371
    10. '
' → logprob: -24.00020408630371

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7968066206085496e-05
    2. ' )' → logprob: -10.625027656555176
    3. ')
' → logprob: -12.875027656555176
    4. '   ' → logprob: -14.250027656555176
    5. '))' → logprob: -16.000028610229492
    6. ')

' → logprob: -16.625028610229492
    7. ')`' → logprob: -16.750028610229492
    8. '),' → logprob: -17.250028610229492
    9. '')' → logprob: -17.375028610229492
    10. '）' → logprob: -17.500028610229492

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03254133090376854
    2. 'else' → logprob: -3.532541275024414
    3. ' else' → logprob: -5.907541275024414
    4. '    
' → logprob: -10.407541275024414
    5. '	else' → logprob: -10.532541275024414
    6. 'return' → logprob: -12.282541275024414
    7. '
' → logprob: -12.782541275024414
    8. '<|end|>' → logprob: -13.532541275024414
    9. '```' → logprob: -14.282541275024414
    10. '_else' → logprob: -15.157541275024414

Token 275: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0668904110789299
    2. '   ' → logprob: -2.8168904781341553
    3. ' else' → logprob: -5.316890239715576
    4. '	else' → logprob: -13.066890716552734
    5. '_else' → logprob: -15.566890716552734
    6. 'elif' → logprob: -15.941890716552734
    7. '    
' → logprob: -16.691890716552734
    8. 'elser' → logprob: -17.066890716552734
    9. 'els' → logprob: -17.316890716552734
    10. '```' → logprob: -17.316890716552734

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08997402340173721
    2. ':
' → logprob: -2.4649739265441895
    3. '       ' → logprob: -6.9649739265441895
    4. '   ' → logprob: -10.214974403381348
    5. ' :' → logprob: -10.339974403381348
    6. ' :
' → logprob: -11.339974403381348
    7. '    ' → logprob: -13.089974403381348
    8. ':
' → logprob: -13.839974403381348
    9. ':

' → logprob: -13.964974403381348
    10. '):
' → logprob: -13.964974403381348

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001217813478433527
    2. '   ' → logprob: -9.8751220703125
    3. 'ans' → logprob: -10.3751220703125
    4. ' ans' → logprob: -10.6251220703125
    5. '
' → logprob: -11.3751220703125
    6. '        
' → logprob: -13.8751220703125
    7. '     ' → logprob: -14.8751220703125
    8. '    ' → logprob: -15.0001220703125
    9. '           ' → logprob: -15.0001220703125
    10. '    
' → logprob: -15.0001220703125

Token 278: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13259319961071014
    2. ' ans' → logprob: -2.1325931549072266
    3. '       ' → logprob: -5.382593154907227
    4. '   ' → logprob: -7.007593154907227
    5. '	ans' → logprob: -10.257593154907227
    6. '
' → logprob: -10.507593154907227
    7. '    ' → logprob: -11.382593154907227
    8. '(ans' → logprob: -11.507593154907227
    9. ' ' → logprob: -11.632593154907227
    10. '     ' → logprob: -11.757593154907227

Token 279: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01860826648771763
    2. ' ans' → logprob: -4.018608093261719
    3. '   ' → logprob: -8.268608093261719
    4. '       ' → logprob: -8.643608093261719
    5. 'answer' → logprob: -12.018608093261719
    6. '	ans' → logprob: -12.393608093261719
    7. '    ' → logprob: -13.018608093261719
    8. '#' → logprob: -13.018608093261719
    9. '
' → logprob: -13.143608093261719
    10. ' ' → logprob: -13.393608093261719

Token 280: ' s' (ID: 265)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5777291059494019
    2. ' ans' → logprob: -0.8277291059494019
    3. '   ' → logprob: -6.702729225158691
    4. '#' → logprob: -8.327729225158691
    5. ' ' → logprob: -8.827729225158691
    6. '	ans' → logprob: -10.452729225158691
    7. '(ans' → logprob: -10.952729225158691
    8. '  ' → logprob: -10.952729225158691
    9. '1' → logprob: -11.077729225158691
    10. '       ' → logprob: -11.202729225158691

Token 281: ' vaut' (ID: 83004)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0426727794110775
    2. '!=' → logprob: -3.792672872543335
    3. ' ==' → logprob: -4.667672634124756
    4. ' est' → logprob: -4.792672634124756
    5. ' vaut' → logprob: -7.292672634124756
    6. ' n' → logprob: -8.167673110961914
    7. ' is' → logprob: -9.042673110961914
    8. '==' → logprob: -9.042673110961914
    9. '=' → logprob: -9.292673110961914
    10. 'val' → logprob: -9.542673110961914

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023430535569787025
    2. ' ' → logprob: -3.773430585861206
    3. '10' → logprob: -8.648430824279785
    4. '0' → logprob: -12.148430824279785
    5. '   ' → logprob: -12.773430824279785
    6. 's' → logprob: -14.398430824279785
    7. '[' → logprob: -15.773430824279785
    8. '  ' → logprob: -15.773430824279785
    9. '```' → logprob: -15.773430824279785
    10. '100' → logprob: -15.898430824279785

Token 283: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.078985296189785
    2. '10' → logprob: -2.5789852142333984
    3. ' ' → logprob: -9.328985214233398
    4. 's' → logprob: -12.453985214233398
    5. '0' → logprob: -13.828985214233398
    6. '(' → logprob: -14.953985214233398
    7. '100' → logprob: -15.078985214233398
    8. '
' → logprob: -15.203985214233398
    9. '```' → logprob: -15.453985214233398
    10. '   ' → logprob: -15.578985214233398

Token 284: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0008065330912359059
    2. ' **' → logprob: -7.1258063316345215
    3. '9' → logprob: -13.12580680847168
    4. '*' → logprob: -16.87580680847168
    5. '^' → logprob: -17.62580680847168
    6. ' ' → logprob: -17.87580680847168
    7. '```' → logprob: -18.25080680847168
    8. '\xe2\x81' → logprob: -18.62580680847168
    9. ' ' → logprob: -18.62580680847168
    10. '
' → logprob: -19.25080680847168

Token 285: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '**' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '```' → logprob: -16.5
    5. '^' → logprob: -18.125
    6. '6' → logprob: -18.25
    7. '(' → logprob: -18.6875
    8. '۹' → logprob: -19.125
    9. '\xe2\x81' → logprob: -19.5
    10. '0' → logprob: -19.625

Token 286: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33822932839393616
    2. ',' → logprob: -1.7132292985916138
    3. ':' → logprob: -2.9632294178009033
    4. '   ' → logprob: -3.4632294178009033
    5. ':
' → logprob: -4.213229179382324
    6. ' ans' → logprob: -5.588229179382324
    7. 'ans' → logprob: -5.963229179382324
    8. '           ' → logprob: -6.838229179382324
    9. ' ,' → logprob: -7.338229179382324
    10. ',
' → logprob: -8.588229179382324

Token 287: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10411452502012253
    2. ' ans' → logprob: -2.354114532470703
    3. '       ' → logprob: -6.229114532470703
    4. '   ' → logprob: -6.354114532470703
    5. '	ans' → logprob: -9.604114532470703
    6. '
' → logprob: -10.479114532470703
    7. '    ' → logprob: -11.104114532470703
    8. ' ' → logprob: -11.354114532470703
    9. '(ans' → logprob: -11.354114532470703
    10. '  ' → logprob: -11.604114532470703

Token 288: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.34534752368927
    2. 'év' → logprob: -2.0953474044799805
    3. 'ans' → logprob: -3.0953474044799805
    4. ' remplir' → logprob: -3.3453474044799805
    5. ' ev' → logprob: -3.8453474044799805
    6. 'ev' → logprob: -4.0953474044799805
    7. 'les' → logprob: -4.5953474044799805
    8. 'rem' → logprob: -5.0953474044799805
    9. ' ans' → logprob: -5.4703474044799805
    10. ' rester' → logprob: -5.7203474044799805

Token 289: ' tout' (ID: 5501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8440797924995422
    2. ' d' → logprob: -1.3440797328948975
    3. ' [' → logprob: -2.3440797328948975
    4. ' la' → logprob: -3.0940797328948975
    5. ' des' → logprob: -3.0940797328948975
    6. 'd' → logprob: -3.4690797328948975
    7. ' que' → logprob: -3.8440797328948975
    8. ' les' → logprob: -4.219079971313477
    9. 'des' → logprob: -4.219079971313477
    10. 'la' → logprob: -4.594079971313477

Token 290: ' déb' (ID: 37874)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0884019136428833
    2. '[' → logprob: -1.5884019136428833
    3. 'd' → logprob: -2.5884017944335938
    4. '1' → logprob: -2.7134017944335938
    5. ' [' → logprob: -3.0884017944335938
    6. 'dou' → logprob: -3.5884017944335938
    7. ' ' → logprob: -3.5884017944335938
    8. ' conflit' → logprob: -3.5884017944335938
    9. 'dup' → logprob: -3.7134017944335938
    10. ' d' → logprob: -3.7134017944335938

Token 291: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0004990590969100595
    2. 'or' → logprob: -8.75049877166748
    3. 'org' → logprob: -9.50049877166748
    4. 'order' → logprob: -9.87549877166748
    5. 'o' → logprob: -10.50049877166748
    6. 'ut' → logprob: -10.75049877166748
    7. 'orde' → logprob: -11.00049877166748
    8. '
' → logprob: -11.12549877166748
    9. 'ordre' → logprob: -11.12549877166748
    10. 'ort' → logprob: -11.25049877166748

Token 292: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.08861365169286728
    2. 't' → logprob: -3.338613748550415
    3. 'ail' → logprob: -4.588613510131836
    4. 'atement' → logprob: -5.088613510131836
    5. 'it' → logprob: -5.338613510131836
    6. 'ir' → logprob: -5.338613510131836
    7. 'u' → logprob: -5.463613510131836
    8. 'ord' → logprob: -5.588613510131836
    9. 'rement' → logprob: -5.963613510131836
    10. 'a' → logprob: -6.338613510131836

Token 293: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3126254677772522
    2. ',' → logprob: -1.4376254081726074
    3. ' ans' → logprob: -4.187625408172607
    4. 'ans' → logprob: -4.437625408172607
    5. '   ' → logprob: -5.812625408172607
    6. ' ,' → logprob: -7.812625408172607
    7. ' on' → logprob: -8.562625885009766
    8. '           ' → logprob: -9.437625885009766
    9. '(ans' → logprob: -9.937625885009766
    10. ' (' → logprob: -10.187625885009766

Token 294: ' utilise' (ID: 70283)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.6720215678215027
    2. ' utilise' → logprob: -0.7970215678215027
    3. 'rem' → logprob: -3.4220216274261475
    4. ' rem' → logprob: -5.422021389007568
    5. ' rempl' → logprob: -8.547021865844727
    6. ' chois' → logprob: -8.672021865844727
    7. ' util' → logprob: -8.797021865844727
    8. 'fill' → logprob: -8.922021865844727
    9. 'cho' → logprob: -8.922021865844727
    10. ' use' → logprob: -9.547021865844727

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20480680465698242
    2. ' ' → logprob: -1.7048068046569824
    3. '[' → logprob: -6.329806804656982
    4. ' [' → logprob: -6.454806804656982
    5. '   ' → logprob: -10.45480728149414
    6. '    ' → logprob: -13.70480728149414
    7. '       ' → logprob: -14.07980728149414
    8. '```' → logprob: -15.07980728149414
    9. '  ' → logprob: -15.20480728149414
    10. ' ' → logprob: -15.32980728149414

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010317382402718067
    2. ' ' → logprob: -7.501031875610352
    3. '[' → logprob: -7.751031875610352
    4. ' [' → logprob: -10.126031875610352
    5. '   ' → logprob: -11.751031875610352
    6. '[
' → logprob: -16.12603187561035
    7. '  ' → logprob: -17.00103187561035
    8. '    ' → logprob: -17.12603187561035
    9. '```' → logprob: -17.25103187561035
    10. '`' → logprob: -17.62603187561035

Token 297: ' comme' (ID: 7971)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8323074579238892
    2. '       ' → logprob: -1.2073074579238892
    3. ' for' → logprob: -1.7073074579238892
    4. '   ' → logprob: -3.0823073387145996
    5. ' ans' → logprob: -4.2073073387146
    6. '*' → logprob: -4.8323073387146
    7. 'for' → logprob: -5.0823073387146
    8. 'ans' → logprob: -6.0823073387146
    9. '        ' → logprob: -6.0823073387146
    10. '    ' → logprob: -6.5823073387146

Token 298: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6455069184303284
    2. ' valeur' → logprob: -0.7705069184303284
    3. ' valeurs' → logprob: -5.145506858825684
    4. ' rempl' → logprob: -6.020506858825684
    5. ' val' → logprob: -7.270506858825684
    6. 'rem' → logprob: -7.395506858825684
    7. 'élé' → logprob: -7.395506858825684
    8. 'value' → logprob: -7.770506858825684
    9. 'rest' → logprob: -8.145506858825684
    10. ' les' → logprob: -8.520506858825684

Token 299: ' de' (ID: 334)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6930475234985352
    2. '   ' → logprob: -0.9430475234985352
    3. '       ' → logprob: -3.068047523498535
    4. ' de' → logprob: -4.193047523498535
    5. ' for' → logprob: -4.193047523498535
    6. 'pour' → logprob: -4.443047523498535
    7. '    ' → logprob: -4.943047523498535
    8. ' ' → logprob: -5.568047523498535
    9. '  ' → logprob: -5.818047523498535
    10. 'for' → logprob: -6.318047523498535

Token 300: ' rempl' (ID: 66326)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.2570784389972687
    2. ' rempl' → logprob: -1.6320784091949463
    3. ' remplacement' → logprob: -3.6320784091949463
    4. 'compl' → logprob: -6.632078647613525
    5. 're' → logprob: -6.882078647613525
    6. 'reste' → logprob: -7.507078647613525
    7. 'replacement' → logprob: -7.882078647613525
    8. 'r' → logprob: -7.882078647613525
    9. ' rem' → logprob: -8.257078170776367
    10. 'rest' → logprob: -8.757078170776367

Token 301: 'issage' (ID: 63863)
  Prédit: 'issage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issage' → logprob: -0.009355925023555756
    2. 'acement' → logprob: -5.3843560218811035
    3. 'arge' → logprob: -6.5093560218811035
    4. 'a' → logprob: -7.8843560218811035
    5. 'age' → logprob: -7.8843560218811035
    6. 'ace' → logprob: -8.009355545043945
    7. 'issement' → logprob: -8.134355545043945
    8. 'sage' → logprob: -8.259355545043945
    9. 'aise' → logprob: -8.259355545043945
    10. 'ais' → logprob: -9.134355545043945

Token 302: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19642572104930878
    2. '   ' → logprob: -2.071425676345825
    3. 'ans' → logprob: -3.696425676345825
    4. ' ans' → logprob: -3.696425676345825
    5. ' for' → logprob: -7.071425914764404
    6. ',' → logprob: -7.571425914764404
    7. '	ans' → logprob: -8.196425437927246
    8. '    ' → logprob: -8.946425437927246
    9. '     ' → logprob: -9.071425437927246
    10. '           ' → logprob: -9.071425437927246

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011759092099964619
    2. 'ans' → logprob: -4.636759281158447
    3. ' ans' → logprob: -6.261759281158447
    4. '   ' → logprob: -9.511758804321289
    5. '
' → logprob: -12.136758804321289
    6. '	ans' → logprob: -12.636758804321289
    7. '        
' → logprob: -12.886758804321289
    8. '(ans' → logprob: -13.011758804321289
    9. '    ' → logprob: -13.636758804321289
    10. '           ' → logprob: -14.136758804321289

Token 304: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.01672660931944847
    2. ' ans' → logprob: -4.141726493835449
    3. '       ' → logprob: -7.516726493835449
    4. '   ' → logprob: -8.89172649383545
    5. '	ans' → logprob: -12.39172649383545
    6. 'answer' → logprob: -13.01672649383545
    7. '(ans' → logprob: -13.89172649383545
    8. ' ' → logprob: -14.39172649383545
    9. '        
' → logprob: -14.76672649383545
    10. '_ans' → logprob: -14.76672649383545

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' =[' → logprob: -15.076414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '[' → logprob: -16.451414108276367
    6. '=[' → logprob: -16.826414108276367
    7. '＝' → logprob: -17.451414108276367
    8. ' +=' → logprob: -17.451414108276367
    9. '   ' → logprob: -17.576414108276367
    10. ' ' → logprob: -18.576414108276367

Token 306: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.06200153008103371
    2. ' [' → logprob: -2.8120014667510986
    3. '[' → logprob: -10.31200122833252
    4. '   ' → logprob: -15.43700122833252
    5. '([' → logprob: -15.93700122833252
    6. ' ' → logprob: -16.187002182006836
    7. '[S' → logprob: -16.187002182006836
    8. ' ' → logprob: -18.062002182006836
    9. '[k' → logprob: -18.062002182006836
    10. '  ' → logprob: -18.312002182006836

Token 307: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5107177862082608e-05
    2. '10' → logprob: -11.000024795532227
    3. ' s' → logprob: -12.000024795532227
    4. '1' → logprob: -13.125024795532227
    5. '   ' → logprob: -16.625024795532227
    6. '(s' → logprob: -18.000024795532227
    7. ' ' → logprob: -18.000024795532227
    8. '100' → logprob: -18.125024795532227
    9. ''s' → logprob: -18.125024795532227
    10. '0' → logprob: -18.500024795532227

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.416665640543215e-05
    2. ']*' → logprob: -10.37503433227539
    3. ' ]' → logprob: -12.75003433227539
    4. '   ' → logprob: -18.00003433227539
    5. '*' → logprob: -18.25003433227539
    6. ' ' → logprob: -18.75003433227539
    7. '']' → logprob: -19.75003433227539
    8. '"]' → logprob: -20.50003433227539
    9. ']
' → logprob: -20.50003433227539
    10. ')' → logprob: -20.62503433227539

Token 309: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28208044171333313
    2. '*' → logprob: -1.4070804119110107
    3. '*k' → logprob: -7.90708065032959
    4. '+' → logprob: -8.28208065032959
    5. ' +' → logprob: -8.28208065032959
    6. '   ' → logprob: -11.15708065032959
    7. '[' → logprob: -11.53208065032959
    8. ' ' → logprob: -11.65708065032959
    9. ' [' → logprob: -11.65708065032959
    10. '    ' → logprob: -13.03208065032959

Token 310: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.493430894101039e-05
    2. ' k' → logprob: -9.500075340270996
    3. '	k' → logprob: -21.50007438659668
    4. '   ' → logprob: -23.12507438659668
    5. ' ' → logprob: -23.37507438659668
    6. '(k' → logprob: -23.75007438659668
    7. '{k' → logprob: -23.75007438659668
    8. ' к' → logprob: -24.37507438659668
    9. '```' → logprob: -24.62507438659668
    10. 'kx' → logprob: -25.00007438659668

Token 311: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06201036646962166
    2. '+' → logprob: -2.8120102882385254
    3. '+[' → logprob: -10.062010765075684
    4. '[' → logprob: -16.687009811401367
    5. ' [' → logprob: -17.312009811401367
    6. '   ' → logprob: -17.312009811401367
    7. ' ' → logprob: -17.687009811401367
    8. '       ' → logprob: -19.437009811401367
    9. '＋' → logprob: -19.437009811401367
    10. ' +
' → logprob: -19.562009811401367

Token 312: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007099286303855479
    2. ' [' → logprob: -7.2507100105285645
    3. '1' → logprob: -17.875709533691406
    4. '(' → logprob: -20.250709533691406
    5. '   ' → logprob: -20.500709533691406
    6. ' ' → logprob: -21.000709533691406
    7. '([' → logprob: -21.375709533691406
    8. ' ' → logprob: -21.875709533691406
    9. '```' → logprob: -22.875709533691406
    10. '{' → logprob: -23.000709533691406

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '  ' → logprob: -20.625003814697266
    5. '１' → logprob: -21.375003814697266
    6. '```' → logprob: -21.375003814697266
    7. '`' → logprob: -22.125003814697266
    8. '    ' → logprob: -22.250003814697266
    9. '۱' → logprob: -22.250003814697266
    10. '(' → logprob: -22.312503814697266

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.869017852295656e-06
    2. ' ]' → logprob: -12.000006675720215
    3. ']*' → logprob: -14.875006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '*' → logprob: -16.50000762939453
    6. ']*(' → logprob: -16.87500762939453
    7. ')' → logprob: -17.37500762939453
    8. '']' → logprob: -17.75000762939453
    9. ' *' → logprob: -17.87500762939453
    10. '"]' → logprob: -18.50000762939453

Token 315: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3181995153427124
    2. '*' → logprob: -1.3181995153427124
    3. '*(' → logprob: -5.318199634552002
    4. ' *(' → logprob: -12.443199157714844
    5. ' ' → logprob: -12.568199157714844
    6. '   ' → logprob: -12.568199157714844
    7. '*[' → logprob: -12.568199157714844
    8. ' ' → logprob: -13.068199157714844
    9. '*n' → logprob: -13.443199157714844
    10. '(n' → logprob: -13.568199157714844

Token 316: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20141655206680298
    2. ' (' → logprob: -1.7014164924621582
    3. '(' → logprob: -12.826416969299316
    4. '   ' → logprob: -14.701416969299316
    5. ' ' → logprob: -16.951416015625
    6. '  ' → logprob: -17.076416015625
    7. '((' → logprob: -17.701416015625
    8. '[n' → logprob: -17.951416015625
    9. '`' → logprob: -18.201416015625
    10. '(N' → logprob: -18.326416015625

Token 317: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07024584710597992
    2. '(n' → logprob: -2.6952457427978516
    3. ' n' → logprob: -8.570245742797852
    4. ' (' → logprob: -9.070245742797852
    5. '   ' → logprob: -12.695245742797852
    6. '(' → logprob: -14.195245742797852
    7. '[n' → logprob: -15.070245742797852
    8. '	n' → logprob: -15.570245742797852
    9. '
' → logprob: -16.44524574279785
    10. ')n' → logprob: -16.69524574279785

Token 318: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3004300594329834
    2. '-' → logprob: -1.5504300594329834
    3. '-k' → logprob: -3.0504300594329834
    4. '-n' → logprob: -12.925430297851562
    5. ' ' → logprob: -13.175430297851562
    6. 'k' → logprob: -15.675430297851562
    7. ' k' → logprob: -16.550430297851562
    8. '   ' → logprob: -16.675430297851562
    9. '-к' → logprob: -16.800430297851562
    10. '-kar' → logprob: -16.925430297851562

Token 319: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.157039049663581e-05
    2. ' k' → logprob: -9.875051498413086
    3. ' к' → logprob: -20.125051498413086
    4. '	k' → logprob: -20.500051498413086
    5. '<|end|>' → logprob: -20.750051498413086
    6. ' ' → logprob: -20.875051498413086
    7. '   ' → logprob: -21.250051498413086
    8. ')' → logprob: -21.250051498413086
    9. '_k' → logprob: -21.875051498413086
    10. 'к' → logprob: -22.375051498413086

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ')
' → logprob: -11.750009536743164
    3. ' )' → logprob: -14.125009536743164
    4. '   ' → logprob: -14.500009536743164
    5. ')return' → logprob: -16.750009536743164
    6. ')

' → logprob: -16.875009536743164
    7. '))' → logprob: -17.500009536743164
    8. '<|end|>' → logprob: -17.750009536743164
    9. ')}' → logprob: -18.625009536743164
    10. '```' → logprob: -18.750009536743164

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010548417922109365
    2. ' return' → logprob: -7.376054763793945
    3. 'return' → logprob: -7.876054763793945
    4. '
' → logprob: -10.251054763793945
    5. '    
' → logprob: -11.751054763793945
    6. '	return' → logprob: -12.251054763793945
    7. '```' → logprob: -14.876054763793945
    8. '   ' → logprob: -16.876054763793945
    9. ':return' → logprob: -17.126054763793945
    10. '       ' → logprob: -17.376054763793945

Token 322: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14744065701961517
    2. 'return' (adapté à ' return') → logprob: -2.1474406719207764
    3. ' return' → logprob: -3.8974406719207764
    4. '
' → logprob: -12.397440910339355
    5. '    
' → logprob: -12.522440910339355
    6. '	return' → logprob: -13.397440910339355
    7. '   ' → logprob: -16.14743995666504
    8. '```' → logprob: -16.39743995666504
    9. ':return' → logprob: -16.64743995666504
    10. 'eturn' → logprob: -16.89743995666504

Token 323: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.029757089912891388
    2. 'ans' → logprob: -3.529757022857666
    3. '(ans' → logprob: -12.029757499694824
    4. '	ans' → logprob: -14.779757499694824
    5. '_ans' → logprob: -16.654756546020508
    6. '[' → logprob: -17.404756546020508
    7. '[]' → logprob: -17.654756546020508
    8. ' ' → logprob: -17.654756546020508
    9. 'Ans' → logprob: -18.279756546020508
    10. '```' → logprob: -20.529756546020508

Token 324: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1423594355583191
    2. '[' → logprob: -2.642359495162964
    3. '<|end|>' → logprob: -3.392359495162964
    4. 'n' → logprob: -4.267359256744385
    5. '```' → logprob: -5.517359256744385
    6. '
' → logprob: -5.642359256744385
    7. '<|end|>' → logprob: -6.517359256744385
    8. 'def' → logprob: -6.642359256744385
    9. '\n' → logprob: -6.892359256744385
    10. '\' → logprob: -7.517359256744385

Token 327: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6071101427078247
    2. '(n' → logprob: -1.2321101427078247
    3. '(' → logprob: -2.482110023498535
    4. ' (' → logprob: -3.982110023498535
    5. ' n' → logprob: -4.107110023498535
    6. ' ' → logprob: -4.857110023498535
    7. ' =' → logprob: -5.107110023498535
    8. '<|end|>' → logprob: -5.232110023498535
    9. 'input' → logprob: -5.482110023498535
    10. 's' → logprob: -6.107110023498535

Token 328: ' données' (ID: 30580)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7867931723594666
    2. 'inputs' → logprob: -1.9117932319641113
    3. 'entr' → logprob: -2.4117932319641113
    4. 'entrée' → logprob: -2.6617932319641113
    5. 'n' → logprob: -3.0367932319641113
    6. 'val' → logprob: -3.1617932319641113
    7. 'import' → logprob: -3.1617932319641113
    8. ' input' → logprob: -3.7867932319641113
    9. ' inputs' → logprob: -4.161793231964111
    10. 'don' → logprob: -4.286793231964111

Token 329: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006776238325983286
    2. ' n' → logprob: -5.006776332855225
    3. '
' → logprob: -10.506775856018066
    4. ' 
' → logprob: -11.381775856018066
    5. '```' → logprob: -11.506775856018066
    6. '  
' → logprob: -12.756775856018066
    7. 'import' → logprob: -13.006775856018066
    8. '\n' → logprob: -13.756775856018066
    9. '    
' → logprob: -13.756775856018066
    10. 'input' → logprob: -13.756775856018066

Token 330: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.023830119520425797
    2. 'entrée' → logprob: -3.7738301753997803
    3. '’entrée' → logprob: -8.39883041381836
    4. 'e' → logprob: -9.02383041381836
    5. ''utilisateur' → logprob: -9.77383041381836
    6. 'input' → logprob: -10.02383041381836
    7. ''ent' → logprob: -10.39883041381836
    8. 'entr' → logprob: -10.64883041381836
    9. ' entrée' → logprob: -10.64883041381836
    10. 'es' → logprob: -11.39883041381836

Token 331: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00081963452976197
    2. ' n' → logprob: -7.125819683074951
    3. '```' → logprob: -11.875819206237793
    4. '
' → logprob: -12.000819206237793
    5. ' 
' → logprob: -14.000819206237793
    6. '\n' → logprob: -14.375819206237793
    7. '  
' → logprob: -15.625819206237793
    8. 'import' → logprob: -15.875819206237793
    9. '    
' → logprob: -15.875819206237793
    10. '\' → logprob: -16.37582015991211

Token 332: ' la' (ID: 557)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forme' → logprob: -1.148080825805664
    2. 'form' → logprob: -1.273080825805664
    3. 'stdin' → logprob: -2.148080825805664
    4. 'la' → logprob: -2.523080825805664
    5. 'format' → logprob: -3.148080825805664
    6. ' forme' → logprob: -3.523080825805664
    7. 'input' → logprob: -3.523080825805664
    8. 'import' → logprob: -3.648080825805664
    9. 'python' → logprob: -4.023080825805664
    10. '```' → logprob: -4.773080825805664

Token 333: ' forme' (ID: 27450)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03954910859465599
    2. '```' → logprob: -4.289548873901367
    3. 'form' → logprob: -4.789548873901367
    4. 'for' → logprob: -5.539548873901367
    5. 'input' → logprob: -6.164548873901367
    6. 'import' → logprob: -6.664548873901367
    7. '#' → logprob: -6.789548873901367
    8. 'car' → logprob: -7.164548873901367
    9. 'ligne' → logprob: -7.289548873901367
    10. 'n' → logprob: -7.289548873901367

Token 334: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23101118206977844
    2. ' n' → logprob: -1.731011152267456
    3. 'input' → logprob: -3.856011152267456
    4. ' input' → logprob: -5.606011390686035
    5. 't' → logprob: -6.481011390686035
    6. '```' → logprob: -7.231011390686035
    7. 'for' → logprob: -7.606011390686035
    8. 'x' → logprob: -8.356011390686035
    9. ' for' → logprob: -8.606011390686035
    10. '"' → logprob: -8.856011390686035

Token 335: ' trois' (ID: 25564)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.054084040224552155
    2. 'n' → logprob: -3.804084062576294
    3. ' input' → logprob: -3.929084062576294
    4. 'entrée' → logprob: -5.679083824157715
    5. '```' → logprob: -6.054083824157715
    6. 'int' → logprob: -6.429083824157715
    7. 'stdin' → logprob: -6.429083824157715
    8. 'import' → logprob: -7.929083824157715
    9. 'list' → logprob: -8.929083824157715
    10. ' n' → logprob: -8.929083824157715

Token 336: ' ent' (ID: 1121)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.945088267326355
    2. 'variables' → logprob: -1.320088267326355
    3. 'val' → logprob: -1.945088267326355
    4. 'ent' → logprob: -2.5700883865356445
    5. ' ent' → logprob: -3.1950883865356445
    6. 'n' → logprob: -3.8200883865356445
    7. 'tokens' → logprob: -3.9450883865356445
    8. ' nombres' → logprob: -4.5700883865356445
    9. ' integers' → logprob: -5.1950883865356445
    10. 'ints' → logprob: -5.5700883865356445

Token 337: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03206153213977814
    2. 'iers' → logprob: -4.157061576843262
    3. 'rees' → logprob: -4.782061576843262
    4. 'rée' → logprob: -5.032061576843262
    5. 'ières' → logprob: -7.907061576843262
    6. 'rés' → logprob: -8.657061576843262
    7. 't' → logprob: -8.907061576843262
    8. 'ries' → logprob: -9.282061576843262
    9. 'ées' → logprob: -9.407061576843262
    10. 'ri' → logprob: -10.282061576843262

Token 338: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012415809032972902
    2. ' n' → logprob: -9.125123977661133
    3. 'a' → logprob: -12.500123977661133
    4. 'for' → logprob: -12.625123977661133
    5. 'x' → logprob: -13.000123977661133
    6. '(n' → logprob: -13.250123977661133
    7. '
' → logprob: -13.625123977661133
    8. '```' → logprob: -14.000123977661133
    9. 'line' → logprob: -15.000123977661133
    10. '    
' → logprob: -15.375123977661133

Token 339: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.013090232387185097
    2. 'es' → logprob: -4.388090133666992
    3. 'é' → logprob: -7.763090133666992
    4. 'e' → logprob: -9.763090133666992
    5. 's' → logprob: -10.138090133666992
    6. 'ées' → logprob: -10.388090133666992
    7. 'ès' → logprob: -11.638090133666992
    8. 'rés' → logprob: -12.263090133666992
    9. 'ÉS' → logprob: -12.513090133666992
    10. 'par' → logprob: -13.138090133666992

Token 340: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.10273544490337372
    2. ' par' → logprob: -2.3527355194091797
    3. ',' → logprob: -6.85273551940918
    4. 'by' → logprob: -7.35273551940918
    5. '_par' → logprob: -8.47773551940918
    6. ' by' → logprob: -9.10273551940918
    7. 'input' → logprob: -9.60273551940918
    8. ' ' → logprob: -9.85273551940918
    9. '(par' → logprob: -9.85273551940918
    10. 's' → logprob: -9.97773551940918

Token 341: ' des' (ID: 731)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.7200116515159607
    2. 'es' → logprob: -1.5950117111206055
    3. 'un' → logprob: -1.5950117111206055
    4. 'input' → logprob: -3.5950117111206055
    5. 'des' → logprob: -3.7200117111206055
    6. ' espaces' → logprob: -3.7200117111206055
    7. ' espace' → logprob: -5.0950117111206055
    8. 'spaces' → logprob: -5.2200117111206055
    9. ''espace' → logprob: -5.3450117111206055
    10. ' un' → logprob: -5.9700117111206055

Token 342: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.03978707641363144
    2. ' espaces' → logprob: -3.5397870540618896
    3. 'es' → logprob: -5.039787292480469
    4. ''esp' → logprob: -5.914787292480469
    5. 'spaces' → logprob: -7.539787292480469
    6. 'sp' → logprob: -9.539787292480469
    7. 'input' → logprob: -9.789787292480469
    8. ''espace' → logprob: -10.039787292480469
    9. '’esp' → logprob: -10.164787292480469
    10. '_' → logprob: -10.789787292480469

Token 343: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005107457283884287
    2. 'input' → logprob: -5.505107402801514
    3. 'inputs' → logprob: -8.255107879638672
    4. ' n' → logprob: -8.505107879638672
    5. '
' → logprob: -8.755107879638672
    6. 'a' → logprob: -8.880107879638672
    7. 'data' → logprob: -9.380107879638672
    8. 'line' → logprob: -9.505107879638672
    9. 'x' → logprob: -10.005107879638672
    10. 'inp' → logprob: -11.130107879638672

Token 344: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010861169546842575
    2. 'input' → logprob: -5.010861396789551
    3. 'a' → logprob: -6.385861396789551
    4. ' n' → logprob: -7.135861396789551
    5. 'data' → logprob: -7.135861396789551
    6. 'inputs' → logprob: -7.510861396789551
    7. 'line' → logprob: -8.63586139678955
    8. '```' → logprob: -10.51086139678955
    9. 'inp' → logprob: -10.76086139678955
    10. ' input' → logprob: -11.01086139678955

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000104616025055293
    2. ',k' → logprob: -9.250104904174805
    3. ' ,' → logprob: -12.000104904174805
    4. ',n' → logprob: -13.625104904174805
    5. ',s' → logprob: -15.250104904174805
    6. ',user' → logprob: -15.875104904174805
    7. 's' → logprob: -16.250104904174805
    8. ',input' → logprob: -16.500104904174805
    9. ',b' → logprob: -17.125104904174805
    10. ',int' → logprob: -17.250104904174805

Token 346: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25192973017692566
    2. ' k' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.00192928314209
    4. ' 
' → logprob: -15.75192928314209
    5. ',k' → logprob: -16.501930236816406
    6. '	k' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '_k' → logprob: -17.876930236816406
    9. 'space' → logprob: -18.001930236816406
    10. ',' → logprob: -18.001930236816406

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002619318547658622
    2. ' ,' → logprob: -9.000262260437012
    3. '=' → logprob: -9.500262260437012
    4. ' =' → logprob: -9.875262260437012
    5. 's' → logprob: -12.500262260437012
    6. ',k' → logprob: -12.625262260437012
    7. ',s' → logprob: -12.625262260437012
    8. ',n' → logprob: -14.250262260437012
    9. '<|end|>' → logprob: -14.875262260437012
    10. ',input' → logprob: -15.250262260437012

Token 348: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0380416102707386
    2. ' s' → logprob: -3.288041591644287
    3. '_s' → logprob: -17.038042068481445
    4. ' ' → logprob: -17.163042068481445
    5. ' =' → logprob: -17.288042068481445
    6. '=' → logprob: -17.413042068481445
    7. '<|end|>' → logprob: -17.413042068481445
    8. '	s' → logprob: -18.413042068481445
    9. ' ' → logprob: -18.538042068481445
    10. '=s' → logprob: -19.913042068481445

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193315744400024
    2. ' =' → logprob: -1.5019330978393555
    3. '=input' → logprob: -13.001933097839355
    4. ',' → logprob: -13.376933097839355
    5. '=int' → logprob: -16.376934051513672
    6. '<|end|>' → logprob: -16.876934051513672
    7. '=
' → logprob: -17.376934051513672
    8. ')' → logprob: -17.876934051513672
    9. ' =
' → logprob: -18.001934051513672
    10. '=

' → logprob: -18.251934051513672

Token 350: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005234002135694027
    2. ' map' → logprob: -5.2552337646484375
    3. '	map' → logprob: -16.130233764648438
    4. 'list' → logprob: -17.380233764648438
    5. 'input' → logprob: -17.755233764648438
    6. '[' → logprob: -17.880233764648438
    7. '(map' → logprob: -17.880233764648438
    8. 'm' → logprob: -17.880233764648438
    9. ' ' → logprob: -18.255233764648438
    10. ' ' → logprob: -19.505233764648438

Token 351: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011395099572837353
    2. 'int' → logprob: -4.51139497756958
    3. '(input' → logprob: -8.886395454406738
    4. '(' → logprob: -9.136395454406738
    5. 'input' → logprob: -9.386395454406738
    6. '<int' → logprob: -11.511395454406738
    7. ' int' → logprob: -12.636395454406738
    8. '=int' → logprob: -13.511395454406738
    9. '[int' → logprob: -13.761395454406738
    10. '(
' → logprob: -14.261395454406738

Token 352: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.027467155829072
    2. ',input' → logprob: -3.7774672508239746
    3. ' input' → logprob: -6.402467250823975
    4. ',' → logprob: -6.527467250823975
    5. '(input' → logprob: -6.902467250823975
    6. '=input' → logprob: -9.902466773986816
    7. ')' → logprob: -10.527466773986816
    8. '	input' → logprob: -12.902466773986816
    9. '<input' → logprob: -12.902466773986816
    10. '[input' → logprob: -13.027466773986816

Token 353: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.2729995988775045e-06
    2. ' input' → logprob: -12.000006675720215
    3. '(input' → logprob: -20.1250057220459
    4. '=input' → logprob: -21.5000057220459
    5. '<input' → logprob: -21.8750057220459
    6. ')' → logprob: -22.3750057220459
    7. ',input' → logprob: -23.2500057220459
    8. '   ' → logprob: -23.3750057220459
    9. 'open' → logprob: -23.5000057220459
    10. '	input' → logprob: -23.8750057220459

Token 354: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -16.125001907348633
    4. '(' → logprob: -19.250001907348633
    5. '.split' → logprob: -19.625001907348633
    6. '()
' → logprob: -20.375001907348633
    7. '('').' → logprob: -20.625001907348633
    8. '("").' → logprob: -21.000001907348633
    9. '())' → logprob: -21.125001907348633
    10. ' .' → logprob: -21.125001907348633

Token 355: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020389800192788243
    2. 'strip' → logprob: -8.500204086303711
    3. 'rstrip' → logprob: -15.250204086303711
    4. '(split' → logprob: -16.37520408630371
    5. 'spl' → logprob: -17.00020408630371
    6. ' split' → logprob: -17.00020408630371
    7. '.split' → logprob: -18.87520408630371
    8. 'read' → logprob: -19.37520408630371
    9. '_split' → logprob: -19.50020408630371
    10. 's' → logprob: -19.87520408630371

Token 356: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012176429852843285
    2. ')' → logprob: -4.512176513671875
    3. '()' → logprob: -6.887176513671875
    4. '()))' → logprob: -9.387176513671875
    5. '))' → logprob: -11.512176513671875
    6. '(' → logprob: -12.262176513671875
    7. '('' → logprob: -12.512176513671875
    8. ' ())' → logprob: -12.762176513671875
    9. '());' → logprob: -14.512176513671875
    10. '();)' → logprob: -15.012176513671875

Token 357: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6074721813201904
    2. 'result' → logprob: -0.8574721813201904
    3. 'ans' → logprob: -4.1074724197387695
    4. 'seq' → logprob: -4.3574724197387695
    5. 'res' → logprob: -6.7324724197387695
    6. 'print' → logprob: -7.8574724197387695
    7. 'answer' → logprob: -8.73247241973877
    8. 'if' → logprob: -11.23247241973877
    9. ' sequence' → logprob: -11.98247241973877
    10. 'assert' → logprob: -12.35747241973877

Token 358: ' Gén' (ID: 71828)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.20683658123016357
    2. 'result' → logprob: -2.081836700439453
    3. 'seq' → logprob: -2.956836700439453
    4. 'res' → logprob: -4.956836700439453
    5. 'ans' → logprob: -6.081836700439453
    6. 'if' → logprob: -8.331836700439453
    7. '#' → logprob: -8.706836700439453
    8. 'print' → logprob: -9.081836700439453
    9. 'rés' → logprob: -9.081836700439453
    10. 'answer' → logprob: -9.331836700439453

Token 359: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01072012074291706
    2. 'érer' → logprob: -5.135720252990723
    3. 'rate' → logprob: -5.760720252990723
    4. 'ér' → logprob: -7.010720252990723
    5. 'enerate' → logprob: -7.510720252990723
    6. 'érateur' → logprob: -10.010720252990723
    7. 'ération' → logprob: -10.385720252990723
    8. 'sequence' → logprob: -10.635720252990723
    9. 'ar' → logprob: -11.010720252990723
    10. 'erar' → logprob: -11.260720252990723

Token 360: ' de' (ID: 334)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.42966458201408386
    2. '_sequence' → logprob: -1.1796646118164062
    3. '(sequence' → logprob: -3.5546646118164062
    4. 'de' → logprob: -4.679664611816406
    5. ' sequence' → logprob: -6.429664611816406
    6. 'result' → logprob: -7.054664611816406
    7. ' de' → logprob: -7.929664611816406
    8. '_' → logprob: -8.304664611816406
    9. 'print' → logprob: -8.679664611816406
    10. 'and' → logprob: -9.179664611816406

Token 361: ' la' (ID: 557)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.4315827488899231
    2. 'generate' → logprob: -1.0565826892852783
    3. ' sequence' → logprob: -6.806582927703857
    4. 'result' → logprob: -7.306582927703857
    5. 'la' → logprob: -7.806582927703857
    6. ' generate' → logprob: -7.931582927703857
    7. 'sé' → logprob: -9.0565824508667
    8. 'seq' → logprob: -9.1815824508667
    9. 'print' → logprob: -10.3065824508667
    10. 'generated' → logprob: -10.8065824508667

Token 362: ' sé' (ID: 7462)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.005811601877212524
    2. 'result' → logprob: -5.75581169128418
    3. 'sé' → logprob: -6.13081169128418
    4. 'seq' → logprob: -8.00581169128418
    5. 'print' → logprob: -9.25581169128418
    6. 'sequ' → logprob: -12.00581169128418
    7. ' sequence' → logprob: -12.13081169128418
    8. 'answer' → logprob: -12.50581169128418
    9. 'rés' → logprob: -12.63081169128418
    10. 'res' → logprob: -13.38081169128418

Token 363: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.0280383548888494e-06
    2. 'QUENCE' → logprob: -14.125000953674316
    3. 'q' → logprob: -15.625000953674316
    4. 'qu' → logprob: -17.250001907348633
    5. 'quences' → logprob: -17.875001907348633
    6. 'rence' → logprob: -18.000001907348633
    7. '#' → logprob: -18.500001907348633
    8. 'sequence' → logprob: -18.625001907348633
    9. 'ence' → logprob: -19.125001907348633
    10. '`' → logprob: -19.375001907348633

Token 364: ' selon' (ID: 27571)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.03225361183285713
    2. 'result' → logprob: -3.5322535037994385
    3. 'seq' → logprob: -6.782253742218018
    4. 'ans' → logprob: -7.407253742218018
    5. ' sequence' → logprob: -7.657253742218018
    6. 'answer' → logprob: -8.53225326538086
    7. 'print' → logprob: -9.90725326538086
    8. '(sequence' → logprob: -10.78225326538086
    9. 'res' → logprob: -11.53225326538086
    10. 'output' → logprob: -12.40725326538086

Token 365: ' les' (ID: 1341)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.016654040664434433
    2. 'n' → logprob: -4.516654014587402
    3. 'the' → logprob: -5.891654014587402
    4. 'la' → logprob: -6.266654014587402
    5. '(n' → logprob: -8.641654014587402
    6. 'le' → logprob: -8.641654014587402
    7. ' generate' → logprob: -8.766654014587402
    8. 'print' → logprob: -9.016654014587402
    9. '(generate' → logprob: -9.016654014587402
    10. ' la' → logprob: -10.516654014587402

Token 366: ' contraintes' (ID: 167366)
  Prédit: 'instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instructions' → logprob: -1.0723742246627808
    2. 'conditions' → logprob: -1.5723742246627808
    3. ' critères' → logprob: -2.4473743438720703
    4. 'constraints' → logprob: -2.5723743438720703
    5. 'criter' → logprob: -2.8223743438720703
    6. 'sp' → logprob: -3.0723743438720703
    7. ' spéc' → logprob: -3.3223743438720703
    8. ' contraintes' → logprob: -3.4473743438720703
    9. 'criteria' → logprob: -3.5723743438720703
    10. 'contra' → logprob: -3.8223743438720703

Token 367: '.
' (ID: 558)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.11096164584159851
    2. 'result' → logprob: -2.360961675643921
    3. 'ans' → logprob: -4.860961437225342
    4. 'print' → logprob: -6.360961437225342
    5. ' sequence' → logprob: -7.610961437225342
    6. 'answer' → logprob: -7.610961437225342
    7. 'seq' → logprob: -8.6109619140625
    8. 'output' → logprob: -10.9859619140625
    9. 'res' → logprob: -11.3609619140625
    10. '(sequence' → logprob: -11.4859619140625

Token 368: 'result' (ID: 2521)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.025328973308205605
    2. 'result' → logprob: -3.7753288745880127
    3. 'seq' → logprob: -6.525329113006592
    4. 'ans' → logprob: -7.525329113006592
    5. 'res' → logprob: -10.025328636169434
    6. 'answer' → logprob: -10.525328636169434
    7. 'print' → logprob: -13.025328636169434
    8. ' sequence' → logprob: -13.150328636169434
    9. 'arr' → logprob: -15.150328636169434
    10. '```' → logprob: -15.525328636169434

Token 369: '_sequence' (ID: 55606)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. 's' → logprob: -14.57594108581543
    4. '=create' → logprob: -15.07594108581543
    5. '=[]' → logprob: -15.32594108581543
    6. '_' → logprob: -15.45094108581543
    7. '＝' → logprob: -15.70094108581543
    8. '_=' → logprob: -16.07594108581543
    9. ')' → logprob: -16.32594108581543
    10. '=result' → logprob: -16.82594108581543

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ')' → logprob: -16.563262939453125
    4. '=create' → logprob: -16.563262939453125
    5. '＝' → logprob: -16.688262939453125
    6. 's' → logprob: -16.938262939453125
    7. '<|end|>' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.563262939453125
    9. ' ' → logprob: -17.688262939453125
    10. ',' → logprob: -17.813262939453125

Token 371: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -4.5491004129871726e-05
    2. ' generate' → logprob: -10.000045776367188
    3. '(generate' → logprob: -20.000045776367188
    4. '.generate' → logprob: -23.250045776367188
    5. 'gener' → logprob: -24.000045776367188
    6. 'generated' → logprob: -24.625045776367188
    7. '_generate' → logprob: -24.875045776367188
    8. 'Generate' → logprob: -25.375045776367188
    9. 'generator' → logprob: -25.625045776367188
    10. '   ' → logprob: -25.750045776367188

Token 372: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.128163257315464e-07
    2. 'sequence' → logprob: -15.25
    3. '_seq' → logprob: -19.75
    4. '_sequences' → logprob: -19.875
    5. '_SEQUENCE' → logprob: -20.75
    6. ' sequence' → logprob: -21.0
    7. '(sequence' → logprob: -22.125
    8. '_' → logprob: -22.125
    9. 'Sequence' → logprob: -22.25
    10. 's' → logprob: -22.375

Token 373: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.625005722045898
    3. ' (' → logprob: -13.125005722045898
    4. 'n' → logprob: -16.1250057220459
    5. '```' → logprob: -18.1250057220459
    6. '(
' → logprob: -18.2500057220459
    7. '(s' → logprob: -19.6250057220459
    8. '(int' → logprob: -20.2500057220459
    9. ' n' → logprob: -20.5000057220459
    10. '(N' → logprob: -20.7500057220459

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009246804984286427
    2. ',k' → logprob: -7.000924587249756
    3. ' ,' → logprob: -11.250925064086914
    4. ',n' → logprob: -15.625925064086914
    5. ',
' → logprob: -16.750925064086914
    6. 'k' → logprob: -17.875925064086914
    7. ')' → logprob: -18.125925064086914
    8. '   ' → logprob: -18.375925064086914
    9. ' k' → logprob: -18.750925064086914
    10. '=' → logprob: -19.125925064086914

Token 375: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004078401252627373
    2. ' k' → logprob: -5.504078388214111
    3. ')' → logprob: -17.379077911376953
    4. 's' → logprob: -17.879077911376953
    5. ' ' → logprob: -19.754077911376953
    6. ',k' → logprob: -20.254077911376953
    7. '	k' → logprob: -20.379077911376953
    8. ',' → logprob: -20.629077911376953
    9. ' s' → logprob: -21.754077911376953
    10. '   ' → logprob: -22.004077911376953

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ',s' → logprob: -11.000025749206543
    3. ' ,' → logprob: -11.750025749206543
    4. 's' → logprob: -13.750025749206543
    5. ',
' → logprob: -17.37502670288086
    6. ')' → logprob: -19.25002670288086
    7. '```' → logprob: -19.75002670288086
    8. ' s' → logprob: -20.00002670288086
    9. '1' → logprob: -20.50002670288086
    10. '   ' → logprob: -20.87502670288086

Token 377: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.7697225252486533e-06
    2. ' s' → logprob: -12.500003814697266
    3. ')' → logprob: -22.875003814697266
    4. '_s' → logprob: -24.375003814697266
    5. '   ' → logprob: -25.250003814697266
    6. ')s' → logprob: -25.625003814697266
    7. 'S' → logprob: -25.625003814697266
    8. '	s' → logprob: -25.750003814697266
    9. '`s' → logprob: -25.750003814697266
    10. '<|end|>' → logprob: -25.875003814697266

Token 378: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -10.875020027160645
    3. ')

' → logprob: -14.875020027160645
    4. ' )' → logprob: -15.375020027160645
    5. '()' → logprob: -16.750019073486328
    6. 'print' → logprob: -17.250019073486328
    7. '))' → logprob: -17.250019073486328
    8. '#' → logprob: -17.875019073486328
    9. ')#' → logprob: -18.000019073486328
    10. ')
' → logprob: -18.250019073486328

Token 379: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.6776029699249193e-05
    2. 'for' → logprob: -10.62502670288086
    3. ' print' → logprob: -13.25002670288086
    4. 'if' → logprob: -14.37502670288086
    5. 'prin' → logprob: -16.75002670288086
    6. 'pr' → logprob: -18.00002670288086
    7. '```' → logprob: -18.37502670288086
    8. '#' → logprob: -18.75002670288086
    9. 'pri' → logprob: -19.00002670288086
    10. '#print' → logprob: -19.37502670288086

Token 380: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017040544480551034
    2. 'for' → logprob: -8.875170707702637
    3. '#' → logprob: -10.625170707702637
    4. 'if' → logprob: -12.250170707702637
    5. ' print' → logprob: -14.250170707702637
    6. 'prin' → logprob: -15.750170707702637
    7. '#print' → logprob: -15.750170707702637
    8. '```' → logprob: -15.875170707702637
    9. 'pr' → logprob: -16.62516975402832
    10. 'try' → logprob: -16.87516975402832

Token 381: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.015355605632066727
    2. 'ich' → logprob: -4.765355587005615
    3. 'print' → logprob: -5.390355587005615
    4. 'iche' → logprob: -7.265355587005615
    5. 'ic' → logprob: -7.265355587005615
    6. ' print' → logprob: -8.515356063842773
    7. 'r' → logprob: -8.640356063842773
    8. 'icher' → logprob: -8.890356063842773
    9. 'for' → logprob: -9.390356063842773
    10. '```' → logprob: -9.890356063842773

Token 382: ' du' (ID: 1462)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.049746323376894
    2. '('' → logprob: -3.54974627494812
    3. '(' → logprob: -4.049746513366699
    4. '("' → logprob: -6.049746513366699
    5. 'print' → logprob: -12.1747465133667
    6. '(*)' → logprob: -12.2997465133667
    7. '(print' → logprob: -14.4247465133667
    8. '(*(' → logprob: -14.5497465133667
    9. '*' → logprob: -14.7997465133667
    10. ' (*' → logprob: -14.9247465133667

Token 383: ' résultat' (ID: 62556)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.056643228977918625
    2. '"' → logprob: -3.05664324760437
    3. '*' → logprob: -5.181643009185791
    4. 'result' → logprob: -6.056643009185791
    5. ''*' → logprob: -10.68164348602295
    6. ' '' → logprob: -11.55664348602295
    7. ' result' → logprob: -11.93164348602295
    8. ''s' → logprob: -12.43164348602295
    9. ''end' → logprob: -12.93164348602295
    10. '"*' → logprob: -13.05664348602295

Token 384: ' sous' (ID: 14487)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0043771942146122456
    2. '('' → logprob: -6.504377365112305
    3. 'for' → logprob: -7.004377365112305
    4. ',' → logprob: -7.629377365112305
    5. '(' → logprob: -7.754377365112305
    6. '(*' → logprob: -7.879377365112305
    7. '*' → logprob: -8.004377365112305
    8. ' print' → logprob: -8.754377365112305
    9. '(print' → logprob: -9.629377365112305
    10. '```' → logprob: -11.004377365112305

Token 385: ' forme' (ID: 27450)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01981007494032383
    2. 'form' → logprob: -4.769810199737549
    3. '"' → logprob: -5.894810199737549
    4. 'format' → logprob: -6.144810199737549
    5. 'forme' → logprob: -6.144810199737549
    6. 'print' → logprob: -6.519810199737549
    7. 'forma' → logprob: -7.019810199737549
    8. ''une' → logprob: -8.14480972290039
    9. 'la' → logprob: -8.14480972290039
    10. ''un' → logprob: -8.64480972290039

Token 386: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2790149748325348
    2. ' d' → logprob: -1.6540149450302124
    3. ''' → logprob: -3.154015064239502
    4. 'print' → logprob: -5.529015064239502
    5. 'de' → logprob: -6.154015064239502
    6. 'd' → logprob: -6.779015064239502
    7. ' print' → logprob: -6.904015064239502
    8. '*' → logprob: -7.904015064239502
    9. '   ' → logprob: -8.779014587402344
    10. '"' → logprob: -8.779014587402344

Token 387: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13687610626220703
    2. 'e' → logprob: -2.886876106262207
    3. ''un' → logprob: -3.386876106262207
    4. 'es' → logprob: -4.636876106262207
    5. '"' → logprob: -4.886876106262207
    6. ''espace' → logprob: -5.261876106262207
    7. ''une' → logprob: -5.386876106262207
    8. ''e' → logprob: -5.636876106262207
    9. ''esp' → logprob: -6.636876106262207
    10. ''a' → logprob: -7.136876106262207

Token 388: ' entre' (ID: 3853)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.014990816824138165
    2. '.' → logprob: -5.01499080657959
    3. 'join' → logprob: -5.26499080657959
    4. ''' → logprob: -7.01499080657959
    5. 'se' → logprob: -7.13999080657959
    6. 'joined' → logprob: -7.76499080657959
    7. 'print' → logprob: -8.01499080657959
    8. ' join' → logprob: -8.63999080657959
    9. ' .' → logprob: -9.01499080657959
    10. 's' → logprob: -9.26499080657959

Token 389: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023995868861675262
    2. '"' → logprob: -4.273995876312256
    3. 'str' → logprob: -5.398995876312256
    4. 'print' → logprob: -5.898995876312256
    5. '*' → logprob: -6.523995876312256
    6. ''s' → logprob: -8.648995399475098
    7. 'join' → logprob: -8.898995399475098
    8. 's' → logprob: -9.148995399475098
    9. 'result' → logprob: -9.273995399475098
    10. 'string' → logprob: -9.523995399475098

Token 390: ' éléments' (ID: 57375)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6610222458839417
    2. 'élé' → logprob: -1.1610221862792969
    3. 'result' → logprob: -3.161022186279297
    4. ''' → logprob: -3.286022186279297
    5. 'print' → logprob: -3.536022186279297
    6. 'car' → logprob: -4.036022186279297
    7. 'strings' → logprob: -4.786022186279297
    8. 'values' → logprob: -4.911022186279297
    9. '*' → logprob: -5.036022186279297
    10. 'str' → logprob: -5.411022186279297

Token 391: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.0629870858974755e-05
    2. ' print' → logprob: -9.87506103515625
    3. '.print' → logprob: -12.75006103515625
    4. '(print' → logprob: -13.12506103515625
    5. ',' → logprob: -13.37506103515625
    6. '(' → logprob: -13.87506103515625
    7. '.' → logprob: -14.62506103515625
    8. 'for' → logprob: -15.25006103515625
    9. 'prin' → logprob: -15.50006103515625
    10. ')' → logprob: -15.50006103515625

Token 392: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. 'for' → logprob: -24.875
    4. '```' → logprob: -25.125
    5. 'pr' → logprob: -26.125
    6. 'printf' → logprob: -27.0
    7. 'prin' → logprob: -27.625
    8. 'prints' → logprob: -28.125
    9. 'Print' → logprob: -28.125
    10. '`' → logprob: -29.5

Token 393: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.02525702491402626
    2. '(' → logprob: -4.275257110595703
    3. '('' → logprob: -4.525257110595703
    4. '("' → logprob: -8.525257110595703
    5. '(*)' → logprob: -13.650257110595703
    6. ' (*' → logprob: -15.400257110595703
    7. '(
' → logprob: -15.525257110595703
    8. '()' → logprob: -15.775257110595703
    9. '(*(' → logprob: -16.275257110595703
    10. '*' → logprob: -16.775257110595703

Token 394: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: 0.0
    2. ' result' → logprob: -18.75
    3. '(result' → logprob: -24.625
    4. '	result' → logprob: -26.125
    5. '[result' → logprob: -26.875
    6. '$result' → logprob: -27.25
    7. '=result' → logprob: -27.25
    8. ')' → logprob: -27.75
    9. 'res' → logprob: -27.875
    10. '```' → logprob: -28.75

Token 395: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -8.93579563125968e-05
    2. 'sequence' → logprob: -9.375089645385742
    3. 's' → logprob: -12.500089645385742
    4. 'Sequence' → logprob: -14.625089645385742
    5. ' sequence' → logprob: -16.375089645385742
    6. '_sequences' → logprob: -16.500089645385742
    7. 'quence' → logprob: -16.875089645385742
    8. 'result' → logprob: -17.250089645385742
    9. ')' → logprob: -18.000089645385742
    10. '_SEQUENCE' → logprob: -18.250089645385742

Token 396: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.75
    3. ')
' → logprob: -18.125
    4. ')`' → logprob: -18.5
    5. '))' → logprob: -19.125
    6. ')#' → logprob: -20.5
    7. '),' → logprob: -20.75
    8. ')**' → logprob: -21.125
    9. '`)' → logprob: -21.5
    10. ')}' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 394
Tokens correctement prédits (1ère position, stricte): 142
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 280
Précision stricte (1ère position): 36.04%
Précision adaptée (1ère position): 37.31%
Précision (top 10): 71.07%
================================================================================
