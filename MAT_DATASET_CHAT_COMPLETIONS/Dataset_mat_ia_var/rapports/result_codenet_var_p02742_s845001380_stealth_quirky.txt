================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ___(*_):return map(int,input().split())
h__,w__=___()
r=lambda H,W:-(-(H*W)//2)if H*W>=H+W else 1
print(r(h__,w__))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' ___' (ID: 14092)
  → Token d'amorce (pas de prédiction)

Token 2: '(*' (ID: 9000)
  → Token d'amorce (pas de prédiction)

Token 3: '_' (ID: 62)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.00034774013329297304
    2. '_' → logprob: -9.000348091125488
    3. '*' → logprob: -9.625348091125488
    4. ')' → logprob: -10.125348091125488
    5. '___' → logprob: -10.500348091125488
    6. '_args' → logprob: -10.625348091125488
    7. 'argv' → logprob: -10.750348091125488
    8. '__' → logprob: -11.000348091125488
    9. 'arg' → logprob: -11.250348091125488
    10. 'self' → logprob: -11.625348091125488

Token 4: '):' (ID: 3127)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16553613543510437
    2. 'args' → logprob: -1.9155361652374268
    3. '*' → logprob: -6.415535926818848
    4. 'a' → logprob: -6.915535926818848
    5. '___' → logprob: -7.165535926818848
    6. '_)' → logprob: -7.540535926818848
    7. ')' → logprob: -7.790535926818848
    8. '_args' → logprob: -8.290535926818848
    9. '__' → logprob: -8.790535926818848
    10. 'arg' → logprob: -8.915535926818848

Token 5: 'return' (ID: 1034)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9510951042175293
    2. '   ' → logprob: -1.2010951042175293
    3. ' ' → logprob: -1.8260951042175293
    4. ' pass' → logprob: -2.3260951042175293
    5. ' _' → logprob: -4.576095104217529
    6. '*' → logprob: -5.201095104217529
    7. 'pass' → logprob: -5.201095104217529
    8. '__' → logprob: -5.701095104217529
    9. ' return' → logprob: -5.826095104217529
    10. ' \' → logprob: -5.826095104217529

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2874656319618225
    2. '_' → logprob: -1.4124655723571777
    3. ' _' → logprob: -5.787465572357178
    4. ''' → logprob: -6.662465572357178
    5. '<|end|>' → logprob: -7.287465572357178
    6. '(' → logprob: -8.287466049194336
    7. ' True' → logprob: -8.912466049194336
    8. ' 
' → logprob: -8.912466049194336
    9. '0' → logprob: -9.287466049194336
    10. ' None' → logprob: -9.537466049194336

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6435419917106628
    2. '.' → logprob: -0.7685419917106628
    3. ' (' → logprob: -6.0185418128967285
    4. '_' → logprob: -6.3935418128967285
    5. '(lambda' → logprob: -6.8935418128967285
    6. '<|end|>' → logprob: -7.5185418128967285
    7. '.__' → logprob: -7.6435418128967285
    8. '._' → logprob: -7.6435418128967285
    9. 'space' → logprob: -7.7685418128967285
    10. ' ' → logprob: -7.7685418128967285

Token 8: ',input' (ID: 123014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.582046627998352
    2. ')' → logprob: -0.957046627998352
    3. ',' → logprob: -3.4570465087890625
    4. '<|end|>' → logprob: -4.4570465087890625
    5. ' (' → logprob: -5.8320465087890625
    6. '(open' → logprob: -5.9570465087890625
    7. '```' → logprob: -6.9570465087890625
    8. '('' → logprob: -7.4570465087890625
    9. '[' → logprob: -7.7070465087890625
    10. ' )' → logprob: -7.8320465087890625

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.637134850025177
    2. ')' → logprob: -1.5121347904205322
    3. '(' → logprob: -1.8871347904205322
    4. '()' → logprob: -3.0121347904205322
    5. '().' → logprob: -3.7621347904205322
    6. '<|end|>' → logprob: -5.012135028839111
    7. '```' → logprob: -5.387135028839111
    8. ' ())' → logprob: -5.637135028839111
    9. '(()' → logprob: -6.262135028839111
    10. '(""))' → logprob: -6.887135028839111

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003373694489710033
    2. 'strip' → logprob: -8.125337600708008
    3. 'rstrip' → logprob: -11.000337600708008
    4. ' split' → logprob: -11.250337600708008
    5. 'read' → logprob: -11.750337600708008
    6. '__' → logprob: -13.250337600708008
    7. 'spl' → logprob: -13.375337600708008
    8. '(split' → logprob: -15.750337600708008
    9. 'startswith' → logprob: -16.000337600708008
    10. 's' → logprob: -16.375337600708008

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01354793831706047
    2. ')' → logprob: -4.888547897338867
    3. '()))' → logprob: -5.513547897338867
    4. '()' → logprob: -7.013547897338867
    5. '))' → logprob: -7.263547897338867
    6. '(' → logprob: -8.513547897338867
    7. ' ())' → logprob: -9.763547897338867
    8. '()),' → logprob: -11.763547897338867
    9. '`)' → logprob: -12.263547897338867
    10. '())
' → logprob: -12.638547897338867

Token 12: 'h' (ID: 71)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3766435384750366
    2. '_' → logprob: -1.5016435384750366
    3. 'def' → logprob: -4.126643657684326
    4. '#' → logprob: -4.251643657684326
    5. ')' → logprob: -4.376643657684326
    6. '\' → logprob: -5.001643657684326
    7. ',' → logprob: -5.376643657684326
    8. '__' → logprob: -5.376643657684326
    9. 'newline' → logprob: -5.501643657684326
    10. '\n' → logprob: -5.751643657684326

Token 13: '__,' (ID: 23783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06697124987840652
    2. '=' → logprob: -3.4419713020324707
    3. '[' → logprob: -3.8169713020324707
    4. ' =' → logprob: -5.691971302032471
    5. ' ,' → logprob: -6.566971302032471
    6. 'e' → logprob: -6.691971302032471
    7. '[:]' → logprob: -7.441971302032471
    8. 'i' → logprob: -7.691971302032471
    9. ',e' → logprob: -7.816971302032471
    10. '_' → logprob: -7.816971302032471

Token 14: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.30247950553894043
    2. 'h' → logprob: -2.4274795055389404
    3. '=' → logprob: -3.3024795055389404
    4. '_=' → logprob: -3.5524795055389404
    5. '_' → logprob: -3.6774795055389404
    6. 'n' → logprob: -3.8024795055389404
    7. 'map' → logprob: -4.9274797439575195
    8. '___' → logprob: -4.9274797439575195
    9. 'm' → logprob: -5.3024797439575195
    10. 'l' → logprob: -5.5524797439575195

Token 15: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09175584465265274
    2. ' =' → logprob: -3.0917558670043945
    3. ',' → logprob: -3.2167558670043945
    4. '[' → logprob: -6.9667558670043945
    5. ')' → logprob: -7.8417558670043945
    6. ')=' → logprob: -8.841755867004395
    7. '_' → logprob: -9.091755867004395
    8. '_=' → logprob: -9.466755867004395
    9. '','=','' → logprob: -9.466755867004395
    10. '.' → logprob: -10.216755867004395

Token 16: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01901865564286709
    2. ' =' → logprob: -4.394018650054932
    3. ',' → logprob: -5.144018650054932
    4. '=input' → logprob: -7.769018650054932
    5. '=
' → logprob: -11.01901912689209
    6. ',h' → logprob: -11.14401912689209
    7. '=

' → logprob: -11.14401912689209
    8. ' ' → logprob: -11.26901912689209
    9. '=h' → logprob: -11.39401912689209
    10. '=[]' → logprob: -11.39401912689209

Token 17: '___' (ID: 11935)
  Prédit: '___'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.1035175770521164
    2. 'map' → logprob: -2.353517532348633
    3. ' map' → logprob: -6.853517532348633
    4. '__' → logprob: -6.978517532348633
    5. ' ___' → logprob: -6.978517532348633
    6. '*' → logprob: -8.978517532348633
    7. '____' → logprob: -9.478517532348633
    8. '[' → logprob: -10.853517532348633
    9. 'h' → logprob: -10.978517532348633
    10. '```' → logprob: -11.103517532348633

Token 18: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033476287499070168
    2. '(' → logprob: -5.878347396850586
    3. '();' → logprob: -8.878347396850586
    4. '()\' → logprob: -9.003347396850586
    5. '()
' → logprob: -9.253347396850586
    6. '(),' → logprob: -9.503347396850586
    7. '())' → logprob: -10.378347396850586
    8. '()[' → logprob: -11.253347396850586
    9. ')' → logprob: -11.753347396850586
    10. '()>' → logprob: -12.003347396850586

Token 19: 'r' (ID: 81)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.79266756772995
    2. '<|end|>' → logprob: -1.7926676273345947
    3. '
' → logprob: -2.0426676273345947
    4. ' for' → logprob: -2.4176676273345947
    5. '\n' → logprob: -2.6676676273345947
    6. '[' → logprob: -3.1676676273345947
    7. '' → logprob: -3.9176676273345947
    8. ',' → logprob: -5.542667388916016
    9. '<|end|>' → logprob: -5.917667388916016
    10. '\' → logprob: -6.292667388916016

Token 20: '=lambda' (ID: 64865)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.02223934978246689
    2. 'a' → logprob: -4.1472392082214355
    3. 'ang' → logprob: -6.5222392082214355
    4. 'e' → logprob: -6.5222392082214355
    5. '_' → logprob: -7.6472392082214355
    6. '=' → logprob: -7.8972392082214355
    7. '[' → logprob: -8.147239685058594
    8. 'an' → logprob: -8.147239685058594
    9. 'nge' → logprob: -8.397239685058594
    10. '__' → logprob: -8.522239685058594

Token 21: ' H' (ID: 487)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1521371304988861
    2. 'x' → logprob: -2.652137041091919
    3. ' lambda' → logprob: -3.152137041091919
    4. ' a' → logprob: -5.402137279510498
    5. ' abs' → logprob: -5.652137279510498
    6. 'lambda' → logprob: -5.652137279510498
    7. ' i' → logprob: -6.152137279510498
    8. 'a' → logprob: -6.152137279510498
    9. 'abs' → logprob: -6.402137279510498
    10. ' s' → logprob: -6.527137279510498

Token 22: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0790437459945679
    2. ':' → logprob: -1.4540437459945679
    3. ' :' → logprob: -2.3290438652038574
    4. '-' → logprob: -2.8290438652038574
    5. ' x' → logprob: -2.8290438652038574
    6. '+' → logprob: -3.5790438652038574
    7. ' in' → logprob: -3.8290438652038574
    8. '[' → logprob: -4.579043865203857
    9. '+:' → logprob: -4.829043865203857
    10. 'x' → logprob: -5.141543865203857

Token 23: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047938067466020584
    2. ':(' → logprob: -3.672938108444214
    3. ':h' → logprob: -4.922937870025635
    4. ':H' → logprob: -5.672937870025635
    5. ':,' → logprob: -6.047937870025635
    6. ' :' → logprob: -6.422937870025635
    7. ':min' → logprob: -7.172937870025635
    8. ',:' → logprob: -7.297937870025635
    9. ',' → logprob: -7.422937870025635
    10. ':r' → logprob: -7.547937870025635

Token 24: '(-(' (ID: 174232)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38686254620552063
    2. '(' → logprob: -2.2618625164031982
    3. 'W' → logprob: -2.8868625164031982
    4. '((' → logprob: -3.2618625164031982
    5. '(W' → logprob: -3.5118625164031982
    6. 'H' → logprob: -4.011862754821777
    7. '(min' → logprob: -4.511862754821777
    8. '(H' → logprob: -4.636862754821777
    9. '~' → logprob: -5.011862754821777
    10. 'min' → logprob: -5.011862754821777

Token 25: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0007685328018851578
    2. 'W' → logprob: -8.250768661499023
    3. ' H' → logprob: -8.250768661499023
    4. 'h' → logprob: -8.375768661499023
    5. 'w' → logprob: -12.500768661499023
    6. '(' → logprob: -12.750768661499023
    7. '(H' → logprob: -12.750768661499023
    8. ' ' → logprob: -13.875768661499023
    9. '   ' → logprob: -14.250768661499023
    10. ')' → logprob: -14.250768661499023

Token 26: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8937269449234009
    2. '//' → logprob: -1.3937269449234009
    3. '/w' → logprob: -1.8937269449234009
    4. ')/' → logprob: -2.7687268257141113
    5. ')//' → logprob: -3.3937268257141113
    6. '/' → logprob: -3.6437268257141113
    7. '/W' → logprob: -3.8937268257141113
    8. ' )' → logprob: -4.768726825714111
    9. '/__' → logprob: -4.768726825714111
    10. 'w' → logprob: -4.893726825714111

Token 27: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.004734376445412636
    2. ' W' → logprob: -5.379734516143799
    3. ' ' → logprob: -10.12973403930664
    4. '(' → logprob: -11.12973403930664
    5. '  ' → logprob: -11.25473403930664
    6. '(W' → logprob: -11.25473403930664
    7. 'w' → logprob: -11.75473403930664
    8. '   ' → logprob: -11.87973403930664
    9. '__' → logprob: -12.87973403930664
    10. ' (' → logprob: -13.50473403930664

Token 28: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.10167492926120758
    2. '//' → logprob: -3.101675033569336
    3. ' )' → logprob: -3.726675033569336
    4. ')' → logprob: -3.851675033569336
    5. ')/' → logprob: -5.226675033569336
    6. ' //' → logprob: -7.726675033569336
    7. ')>>' → logprob: -8.351675033569336
    8. ')/(' → logprob: -9.101675033569336
    9. '/' → logprob: -9.851675033569336
    10. '))' → logprob: -11.226675033569336

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31150731444358826
    2. '16' → logprob: -2.061507225036621
    3. '3' → logprob: -3.061507225036621
    4. 'h' → logprob: -3.436507225036621
    5. '4' → logprob: -4.061507225036621
    6. '9' → logprob: -4.061507225036621
    7. '8' → logprob: -5.311507225036621
    8. 'r' → logprob: -5.936507225036621
    9. 'w' → logprob: -6.186507225036621
    10. '32' → logprob: -6.186507225036621

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015205175441224128
    2. ')
' → logprob: -9.375151634216309
    3. '))' → logprob: -10.875151634216309
    4. '+' → logprob: -11.625151634216309
    5. '*' → logprob: -11.750151634216309
    6. ' )' → logprob: -12.000151634216309
    7. '*)' → logprob: -12.375151634216309
    8. ')*' → logprob: -12.500151634216309
    9. '),' → logprob: -13.125151634216309
    10. ')return' → logprob: -13.375151634216309

Token 31: 'if' (ID: 366)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5828401446342468
    2. ')' → logprob: -1.7078402042388916
    3. '
' → logprob: -2.7078402042388916
    4. '\n' → logprob: -3.0828402042388916
    5. '_' → logprob: -3.3328402042388916
    6. '<|end|>' → logprob: -3.3328402042388916
    7. '#' → logprob: -4.3328399658203125
    8. 'n' → logprob: -4.4578399658203125
    9. '*
' → logprob: -4.9578399658203125
    10. 'r' → logprob: -5.0828399658203125

Token 32: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0255711078643799
    2. ' H' → logprob: -1.1505711078643799
    3. '(H' → logprob: -2.02557110786438
    4. ' (' → logprob: -2.40057110786438
    5. '(' → logprob: -2.77557110786438
    6. ' not' → logprob: -4.775570869445801
    7. '_' → logprob: -5.150570869445801
    8. ' ' → logprob: -5.525570869445801
    9. ' h' → logprob: -5.650570869445801
    10. 'h' → logprob: -5.775570869445801

Token 33: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.626449465751648
    2. '*w' → logprob: -1.626449465751648
    3. '%' → logprob: -2.5014495849609375
    4. ' and' → logprob: -3.0014495849609375
    5. ' ' → logprob: -3.7514495849609375
    6. '>' → logprob: -3.7514495849609375
    7. 'and' → logprob: -4.0014495849609375
    8. 'w' → logprob: -4.1264495849609375
    9. '<' → logprob: -4.8764495849609375
    10. '==' → logprob: -5.3764495849609375

Token 34: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.022998414933681488
    2. ' W' → logprob: -4.022998332977295
    3. 'w' → logprob: -5.772998332977295
    4. '<|end|>' → logprob: -7.647998332977295
    5. ' ' → logprob: -7.897998332977295
    6. '*' → logprob: -8.272998809814453
    7. '<|end|>' → logprob: -8.897998809814453
    8. '__' → logprob: -9.147998809814453
    9. '2' → logprob: -10.022998809814453
    10. '...' → logprob: -10.210498809814453

Token 35: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.48053881525993347
    2. ' >' → logprob: -1.9805388450622559
    3. ' else' → logprob: -2.105538845062256
    4. 'else' → logprob: -3.230538845062256
    5. '==' → logprob: -3.480538845062256
    6. '%' → logprob: -3.980538845062256
    7. '<' → logprob: -4.355538845062256
    8. ' ' → logprob: -5.105538845062256
    9. ' ==' → logprob: -5.980538845062256
    10. '!=' → logprob: -6.230538845062256

Token 36: 'H' (ID: 39)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3412034213542938
    2. '2' → logprob: -2.091203451156616
    3. ' ' → logprob: -2.466203451156616
    4. '1' → logprob: -2.841203451156616
    5. '3' → logprob: -5.216203212738037
    6. '4' → logprob: -5.591203212738037
    7. '8' → logprob: -6.591203212738037
    8. '6' → logprob: -6.716203212738037
    9. '9' → logprob: -6.841203212738037
    10. '10' → logprob: -6.841203212738037

Token 37: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.043244559317827225
    2. 'W' → logprob: -3.9182446002960205
    3. '*w' → logprob: -4.793244361877441
    4. ' else' → logprob: -4.918244361877441
    5. 'else' → logprob: -5.793244361877441
    6. ' W' → logprob: -7.668244361877441
    7. ' *' → logprob: -7.793244361877441
    8. '>' → logprob: -7.918244361877441
    9. ' ' → logprob: -7.918244361877441
    10. '**' → logprob: -8.168244361877441

Token 38: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0001246348983841017
    2. ' W' → logprob: -9.12512493133545
    3. ' ' → logprob: -12.50012493133545
    4. '(' → logprob: -12.50012493133545
    5. 'w' → logprob: -13.25012493133545
    6. 'V' → logprob: -13.37512493133545
    7. '1' → logprob: -13.50012493133545
    8. '(W' → logprob: -14.12512493133545
    9. '...' → logprob: -14.25012493133545
    10. '2' → logprob: -15.12512493133545

Token 39: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22563980519771576
    2. 'else' → logprob: -1.600639820098877
    3. ' ' → logprob: -9.600639343261719
    4. '+' → logprob: -9.975639343261719
    5. '-' → logprob: -10.850639343261719
    6. '*' → logprob: -10.850639343261719
    7. '```' → logprob: -10.850639343261719
    8. '  ' → logprob: -11.475639343261719
    9. '0' → logprob: -12.288139343261719
    10. ' ' → logprob: -12.413139343261719

Token 40: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0043532848358154
    2. '0' → logprob: -1.3793532848358154
    3. '1' → logprob: -2.3793532848358154
    4. ' H' → logprob: -2.5043532848358154
    5. ' ' → logprob: -2.6293532848358154
    6. 'max' → logprob: -3.3793532848358154
    7. ' max' → logprob: -3.7543532848358154
    8. 'h' → logprob: -4.5043535232543945
    9. '-' → logprob: -4.5043535232543945
    10. ' (' → logprob: -4.6293535232543945

Token 41: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7910348176956177
    2. '0' → logprob: -1.0410348176956177
    3. '1' → logprob: -2.291034698486328
    4. 'max' → logprob: -3.791034698486328
    5. 'min' → logprob: -4.041034698486328
    6. '(H' → logprob: -4.166034698486328
    7. 'h' → logprob: -4.291034698486328
    8. '-' → logprob: -4.666034698486328
    9. '(' → logprob: -6.166034698486328
    10. '2' → logprob: -6.291034698486328

Token 42: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8784003853797913
    2. ' ' → logprob: -1.1284003257751465
    3. ')' → logprob: -2.7534003257751465
    4. '<|end|>' → logprob: -2.7534003257751465
    5. '
' → logprob: -3.2534003257751465
    6. 'r' → logprob: -3.8784003257751465
    7. '[' → logprob: -4.6284003257751465
    8. '*' → logprob: -4.7534003257751465
    9. '#' → logprob: -4.8784003257751465
    10. 'n' → logprob: -5.0034003257751465

Token 43: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7951214909553528
    2. 'p' → logprob: -1.420121431350708
    3. '#' → logprob: -2.670121431350708
    4. 'r' → logprob: -2.920121431350708
    5. '_' → logprob: -2.920121431350708
    6. 'n' → logprob: -3.420121431350708
    7. '
' → logprob: -4.295121669769287
    8. 'pr' → logprob: -4.545121669769287
    9. ' ' → logprob: -4.670121669769287
    10. ')' → logprob: -4.795121669769287

Token 44: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6937451958656311
    2. '(r' → logprob: -0.6937451958656311
    3. '((' → logprob: -7.943745136260986
    4. '(lambda' → logprob: -9.068745613098145
    5. '('' → logprob: -10.943745613098145
    6. '(*' → logprob: -11.068745613098145
    7. '(s' → logprob: -11.193745613098145
    8. '(()' → logprob: -11.443745613098145
    9. '()' → logprob: -11.568745613098145
    10. '(max' → logprob: -12.193745613098145

Token 45: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00016313401283696294
    2. '(' → logprob: -8.750163078308105
    3. ')' → logprob: -13.250163078308105
    4. 'h' → logprob: -13.750163078308105
    5. ')(' → logprob: -13.875163078308105
    6. '(H' → logprob: -14.875163078308105
    7. ',h' → logprob: -15.500163078308105
    8. ' (' → logprob: -16.500164031982422
    9. '(
' → logprob: -16.500164031982422
    10. '((' → logprob: -16.875164031982422

Token 46: '__,' (ID: 23783)
  Prédit: '__,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.014653843827545643
    2. '__' → logprob: -4.51465368270874
    3. ',w' → logprob: -5.88965368270874
    4. ',' → logprob: -7.63965368270874
    5. '__,
' → logprob: -8.889654159545898
    6. ',,' → logprob: -9.764654159545898
    7. ',__' → logprob: -9.889654159545898
    8. '_,' → logprob: -10.264654159545898
    9. 'w' → logprob: -10.514654159545898
    10. '__)' → logprob: -12.139654159545898

Token 47: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019313741941004992
    2. ' w' → logprob: -6.251931190490723
    3. ' ' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.376931190490723
    5. '    ' → logprob: -14.876931190490723
    6. '  ' → logprob: -15.376931190490723
    7. ''w' → logprob: -16.87693214416504
    8. '<w' → logprob: -17.12693214416504
    9. '<|end|>' → logprob: -17.12693214416504
    10. ')' → logprob: -17.37693214416504

Token 48: '__))' (ID: 168554)
  Prédit: '__))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__))' → logprob: -0.0014771291753277183
    2. '__' → logprob: -6.626477241516113
    3. '__)' → logprob: -9.001477241516113
    4. '__))
' → logprob: -11.001477241516113
    5. '))' → logprob: -12.126477241516113
    6. '__),' → logprob: -13.501477241516113
    7. '__).' → logprob: -13.501477241516113
    8. '__*/' → logprob: -13.626477241516113
    9. '__((' → logprob: -14.251477241516113
    10. '_' → logprob: -14.876477241516113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 27
Précision stricte (1ère position): 39.13%
Précision adaptée (1ère position): 39.13%
Précision (top 10): 58.70%
================================================================================
