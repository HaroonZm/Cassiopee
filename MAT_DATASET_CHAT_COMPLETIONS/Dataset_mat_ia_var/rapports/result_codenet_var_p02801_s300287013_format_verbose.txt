================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_character = input()

unicode_code_point = ord(user_input_character)

next_unicode_code_point = unicode_code_point + 1

next_character = chr(next_unicode_code_point)

print(next_character)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_character' (ID: 99888)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6389287114143372
    2. '_' → logprob: -1.5139286518096924
    3. ':' → logprob: -2.7639286518096924
    4. ' =' → logprob: -2.7639286518096924
    5. '.' → logprob: -3.1389286518096924
    6. ')' → logprob: -4.0139288902282715
    7. '[' → logprob: -4.1389288902282715
    8. 's' → logprob: -4.5139288902282715
    9. ''' → logprob: -4.6389288902282715
    10. ',' → logprob: -5.1389288902282715

Token 4: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02024824358522892
    2. ' '' → logprob: -4.5202484130859375
    3. '"' → logprob: -4.7702484130859375
    4. ''a' → logprob: -8.770248413085938
    5. ''user' → logprob: -9.395248413085938
    6. '''' → logprob: -9.520248413085938
    7. ' ' → logprob: -9.520248413085938
    8. ' "' → logprob: -10.020248413085938
    9. ''s' → logprob: -10.395248413085938
    10. ''e' → logprob: -10.520248413085938

Token 5: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0075170728377997875
    2. ''' → logprob: -5.257516860961914
    3. '"' → logprob: -7.257516860961914
    4. '```' → logprob: -7.257516860961914
    5. '`' → logprob: -8.257516860961914
    6. '('' → logprob: -8.632516860961914
    7. '_' → logprob: -9.382516860961914
    8. '(
' → logprob: -9.507516860961914
    9. '("("' → logprob: -9.757516860961914
    10. '[' → logprob: -10.132516860961914

Token 6: 'unicode' (ID: 107456)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0291289109736681
    2. 'if' → logprob: -3.9041290283203125
    3. ' if' → logprob: -6.2791290283203125
    4. '=' → logprob: -6.5291290283203125
    5. '.lower' → logprob: -6.7791290283203125
    6. '.strip' → logprob: -7.1541290283203125
    7. '_' → logprob: -7.2791290283203125
    8. 'i' → logprob: -7.4041290283203125
    9. '+' → logprob: -7.6541290283203125
    10. 's' → logprob: -8.404129028320312

Token 7: '_code' (ID: 8330)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019058536738157272
    2. '_code' → logprob: -4.894058704376221
    3. '(' → logprob: -5.019058704376221
    4. '_value' → logprob: -6.894058704376221
    5. ' =' → logprob: -7.394058704376221
    6. '_val' → logprob: -7.769058704376221
    7. '```' → logprob: -7.769058704376221
    8. '.' → logprob: -8.144058227539062
    9. 's' → logprob: -8.144058227539062
    10. '_char' → logprob: -8.144058227539062

Token 8: '_point' (ID: 15466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027964815497398376
    2. ' =' → logprob: -4.1529645919799805
    3. '=' → logprob: -4.7779645919799805
    4. '(' → logprob: -6.1529645919799805
    5. '_point' → logprob: -7.0279645919799805
    6. 's' → logprob: -8.52796459197998
    7. 'point' → logprob: -10.40296459197998
    8. '_=' → logprob: -10.40296459197998
    9. '_space' → logprob: -10.65296459197998
    10. ')' → logprob: -10.77796459197998

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13821755349636078
    2. '_' → logprob: -3.0132174491882324
    3. '=' → logprob: -3.0132174491882324
    4. ' =' → logprob: -3.5132174491882324
    5. 's' → logprob: -7.388217449188232
    6. '_space' → logprob: -9.76321792602539
    7. '(
' → logprob: -10.26321792602539
    8. 'space' → logprob: -10.63821792602539
    9. ' ' → logprob: -10.63821792602539
    10. '(ord' → logprob: -10.88821792602539

Token 10: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.38690343499183655
    2. 'ord' → logprob: -1.1369034051895142
    3. '(ord' → logprob: -11.011903762817383
    4. ' ' → logprob: -11.636903762817383
    5. 'user' → logprob: -12.761903762817383
    6. ' ' → logprob: -13.761903762817383
    7. ' user' → logprob: -13.761903762817383
    8. '   ' → logprob: -14.261903762817383
    9. 'hex' → logprob: -14.636903762817383
    10. ' hex' → logprob: -15.011903762817383

Token 11: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.04872963950037956
    2. '(' → logprob: -3.048729658126831
    3. 'user' → logprob: -9.04872989654541
    4. '("("' → logprob: -11.67372989654541
    5. '('' → logprob: -11.92372989654541
    6. '(u' → logprob: -13.04872989654541
    7. '(use' → logprob: -13.17372989654541
    8. '(us' → logprob: -13.54872989654541
    9. ' user' → logprob: -14.04872989654541
    10. '(
' → logprob: -14.67372989654541

Token 12: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0013404814526438713
    2. '_' → logprob: -6.751340389251709
    3. '_character' → logprob: -9.501340866088867
    4. 'put' → logprob: -11.126340866088867
    5. '_put' → logprob: -11.126340866088867
    6. '_user' → logprob: -11.251340866088867
    7. ' _' → logprob: -11.501340866088867
    8. '_output' → logprob: -11.751340866088867
    9. '_code' → logprob: -12.251340866088867
    10. '_i' → logprob: -12.376340866088867

Token 13: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -5.347765181795694e-05
    2. 'character' → logprob: -10.500053405761719
    3. '_char' → logprob: -11.000053405761719
    4. '_' → logprob: -11.750053405761719
    5. '_CHARACTER' → logprob: -14.375053405761719
    6. ')_' → logprob: -15.750053405761719
    7. ')' → logprob: -16.00005340576172
    8. '_code' → logprob: -16.12505340576172
    9. '_ch' → logprob: -16.87505340576172
    10. '_c' → logprob: -16.87505340576172

Token 14: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -13.375005722045898
    3. '))' → logprob: -13.375005722045898
    4. ')
' → logprob: -14.125005722045898
    5. ')`' → logprob: -15.125005722045898
    6. '')' → logprob: -15.250005722045898
    7. '`)' → logprob: -15.375005722045898
    8. '(' → logprob: -15.375005722045898
    9. ')

' → logprob: -15.875005722045898
    10. '()' → logprob: -16.3750057220459

Token 15: 'next' (ID: 7311)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00500852894037962
    2. '#' → logprob: -5.505008697509766
    3. 'if' → logprob: -7.755008697509766
    4. ')' → logprob: -8.755008697509766
    5. '+' → logprob: -8.880008697509766
    6. '```' → logprob: -9.755008697509766
    7. '#print' → logprob: -10.755008697509766
    8. '_' → logprob: -11.130008697509766
    9. 'newline' → logprob: -11.130008697509766
    10. ' print' → logprob: -11.505008697509766

Token 16: '_unicode' (ID: 151844)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32407885789871216
    2. '(' → logprob: -2.0740787982940674
    3. 'print' → logprob: -2.8240787982940674
    4. ')' → logprob: -3.4490787982940674
    5. '#' → logprob: -4.1990790367126465
    6. '_char' → logprob: -4.4490790367126465
    7. 'if' → logprob: -5.5740790367126465
    8. '_print' → logprob: -5.9490790367126465
    9. '```' → logprob: -5.9490790367126465
    10. '+' → logprob: -6.0740790367126465

Token 17: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.38953614234924316
    2. '_' → logprob: -1.1395361423492432
    3. '_char' → logprob: -7.389535903930664
    4. '_character' → logprob: -7.514535903930664
    5. '_value' → logprob: -7.639535903930664
    6. ' _' → logprob: -8.889535903930664
    7. '__' → logprob: -9.264535903930664
    8. '_byte' → logprob: -9.264535903930664
    9. '_point' → logprob: -9.514535903930664
    10. '```' → logprob: -9.764535903930664

Token 18: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.1679639220237732
    2. '_' → logprob: -1.917963981628418
    3. '=' → logprob: -5.417963981628418
    4. ' =' → logprob: -5.917963981628418
    5. '=_' → logprob: -8.792963981628418
    6. '_value' → logprob: -9.167963981628418
    7. '_points' → logprob: -9.417963981628418
    8. '_=' → logprob: -9.667963981628418
    9. '_space' → logprob: -10.292963981628418
    10. '_Point' → logprob: -10.417963981628418

Token 19: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9177358150482178
    2. '+' → logprob: -1.1677358150482178
    3. ' =' → logprob: -1.2927358150482178
    4. '=' → logprob: -4.292736053466797
    5. ' ' → logprob: -7.417736053466797
    6. ' +=' → logprob: -7.667736053466797
    7. '_' → logprob: -9.167736053466797
    8. '+=' → logprob: -9.667736053466797
    9. 'space' → logprob: -11.667736053466797
    10. ')' → logprob: -11.667736053466797

Token 20: ' unicode' (ID: 64420)
  Prédit: 'unicode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unicode' → logprob: -0.12693461775779724
    2. ' unicode' → logprob: -2.12693452835083
    3. ' ' → logprob: -12.626935005187988
    4. '   ' → logprob: -14.001935005187988
    5. 'unic' → logprob: -14.376935005187988
    6. '_unicode' → logprob: -14.376935005187988
    7. ' Unicode' → logprob: -15.251935005187988
    8. ' ' → logprob: -15.501935005187988
    9. '```' → logprob: -15.626935005187988
    10. '  ' → logprob: -15.876935005187988

Token 21: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -3.7697225252486533e-06
    2. '_CODE' → logprob: -13.625003814697266
    3. '```' → logprob: -14.250003814697266
    4. 'Code' → logprob: -14.375003814697266
    5. '_codes' → logprob: -14.875003814697266
    6. '_Code' → logprob: -15.125003814697266
    7. '_cod' → logprob: -15.375003814697266
    8. '_' → logprob: -15.625003814697266
    9. '95' → logprob: -16.000003814697266
    10. 'code' → logprob: -16.875003814697266

Token 22: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.03559432551264763
    2. '_' → logprob: -4.035594463348389
    3. '95' → logprob: -4.785594463348389
    4. '```' → logprob: -5.285594463348389
    5. '_code' → logprob: -6.160594463348389
    6. '_points' → logprob: -7.285594463348389
    7. 'underscore' → logprob: -8.66059398651123
    8. '__' → logprob: -8.78559398651123
    9. '`' → logprob: -8.78559398651123
    10. '_Point' → logprob: -9.66059398651123

Token 23: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759480595588684
    2. ' +' → logprob: -0.8259480595588684
    3. ' +
' → logprob: -12.825947761535645
    4. ' ' → logprob: -13.200947761535645
    5. '<|end|>' → logprob: -13.200947761535645
    6. ' plus' → logprob: -14.200947761535645
    7. '+
' → logprob: -14.450947761535645
    8. ')' → logprob: -15.575947761535645
    9. ' +=' → logprob: -16.32594871520996
    10. '++' → logprob: -16.57594871520996

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.252805709838867
    4. '```' → logprob: -17.252805709838867
    5. '   ' → logprob: -17.377805709838867
    6. '2' → logprob: -18.252805709838867
    7. ' one' → logprob: -18.377805709838867
    8. '`' → logprob: -18.690305709838867
    9. '  ' → logprob: -18.752805709838867
    10. '32' → logprob: -18.815305709838867

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -16.87502098083496
    4. '   ' → logprob: -17.75002098083496
    5. ' ' → logprob: -18.62502098083496
    6. '2' → logprob: -18.75002098083496
    7. '`' → logprob: -19.18752098083496
    8. '  ' → logprob: -19.18752098083496
    9. '１' → logprob: -19.37502098083496
    10. '' → logprob: -19.43752098083496

Token 26: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0035147799644619226
    2. 'print' → logprob: -6.628514766693115
    3. '
' → logprob: -7.003514766693115
    4. ' next' → logprob: -7.378514766693115
    5. '```' → logprob: -8.253515243530273
    6. 'new' → logprob: -8.878515243530273
    7. 'result' → logprob: -9.878515243530273
    8. '(next' → logprob: -10.628515243530273
    9. '[next' → logprob: -10.628515243530273
    10. 'Next' → logprob: -10.628515243530273

Token 28: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.01180291548371315
    2. '_unicode' → logprob: -4.511803150177002
    3. '_' → logprob: -8.386802673339844
    4. '_user' → logprob: -8.511802673339844
    5. 'character' → logprob: -8.636802673339844
    6. '_char' → logprob: -8.886802673339844
    7. 'unicode' → logprob: -12.261802673339844
    8. '```' → logprob: -13.261802673339844
    9. '_code' → logprob: -14.011802673339844
    10. '_input' → logprob: -14.261802673339844

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767931342124939
    2. '=' → logprob: -0.8267931342124939
    3. '_' → logprob: -7.451793193817139
    4. ')' → logprob: -9.32679271697998
    5. '[' → logprob: -9.32679271697998
    6. ' ' → logprob: -10.32679271697998
    7. '(' → logprob: -10.70179271697998
    8. ']' → logprob: -11.82679271697998
    9. 's' → logprob: -12.20179271697998
    10. '()' → logprob: -12.32679271697998

Token 30: ' chr' (ID: 42767)
  Prédit: ' chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.3132786154747009
    2. 'chr' → logprob: -1.3132786750793457
    3. '(chr' → logprob: -11.063278198242188
    4. '_chr' → logprob: -14.188278198242188
    5. ' ' → logprob: -14.563278198242188
    6. ' ' → logprob: -17.063278198242188
    7. ' Chr' → logprob: -18.063278198242188
    8. 'char' → logprob: -18.188278198242188
    9. '```' → logprob: -18.313278198242188
    10. '   ' → logprob: -18.438278198242188

Token 31: '(next' (ID: 28757)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25213783979415894
    2. '(next' → logprob: -1.5021378993988037
    3. '(user' → logprob: -8.627138137817383
    4. '(
' → logprob: -11.502138137817383
    5. ' (' → logprob: -12.377138137817383
    6. '(ord' → logprob: -12.877138137817383
    7. '(

' → logprob: -12.877138137817383
    8. '(n' → logprob: -13.127138137817383
    9. '("("' → logprob: -13.377138137817383
    10. '(open' → logprob: -14.002138137817383

Token 32: '_unicode' (ID: 151844)
  Prédit: '_unicode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unicode' → logprob: -0.00388795742765069
    2. '_character' → logprob: -5.628888130187988
    3. '_' → logprob: -8.753888130187988
    4. 'unicode' → logprob: -9.253888130187988
    5. 'Unicode' → logprob: -11.253888130187988
    6. '_un' → logprob: -11.878888130187988
    7. '_code' → logprob: -12.003888130187988
    8. '_char' → logprob: -13.003888130187988
    9. '_)' → logprob: -13.128888130187988
    10. '_(' → logprob: -13.878888130187988

Token 33: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.006722352933138609
    2. 'code' → logprob: -5.006722450256348
    3. 'o' → logprob: -13.131722450256348
    4. 'ocode' → logprob: -13.756722450256348
    5. 'ode' → logprob: -13.881722450256348
    6. '_CODE' → logprob: -14.256722450256348
    7. 'Code' → logprob: -14.381722450256348
    8. '```' → logprob: -14.756722450256348
    9. 'c' → logprob: -15.256722450256348
    10. '코' → logprob: -15.506722450256348

Token 34: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.008693988434970379
    2. '_code' → logprob: -4.758694171905518
    3. 'point' → logprob: -9.63369369506836
    4. 'code' → logprob: -12.13369369506836
    5. '_points' → logprob: -13.13369369506836
    6. '```' → logprob: -13.25869369506836
    7. ')' → logprob: -13.50869369506836
    8. '_p' → logprob: -14.13369369506836
    9. '_POINT' → logprob: -14.13369369506836
    10. '_pointer' → logprob: -14.75869369506836

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -15.5
    3. ' )' → logprob: -16.875
    4. ')`' → logprob: -17.75
    5. ')
' → logprob: -18.0
    6. ')))' → logprob: -19.75
    7. '')' → logprob: -19.875
    8. ')

' → logprob: -20.125
    9. '()' → logprob: -20.125
    10. ')}' → logprob: -20.25

Token 36: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '(print' → logprob: -14.375001907348633
    3. ' print' → logprob: -14.625001907348633
    4. 'next' → logprob: -14.875001907348633
    5. '#print' → logprob: -15.000001907348633
    6. '```' → logprob: -15.250001907348633
    7. '#' → logprob: -16.375001907348633
    8. 'prin' → logprob: -16.500001907348633
    9. '<|end|>' → logprob: -17.625001907348633
    10. ')' → logprob: -17.875001907348633

Token 37: '(next' (ID: 28757)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03853300213813782
    2. '(next' → logprob: -3.2885329723358154
    3. '("("' → logprob: -7.9135332107543945
    4. '('' → logprob: -9.038533210754395
    5. '((' → logprob: -13.038533210754395
    6. '()' → logprob: -13.538533210754395
    7. '(f' → logprob: -13.913533210754395
    8. '(

' → logprob: -14.163533210754395
    9. '(`' → logprob: -15.038533210754395
    10. '(open' → logprob: -15.163533210754395

Token 38: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.0280383548888494e-06
    2. '_char' → logprob: -14.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_CHARACTER' → logprob: -17.375001907348633
    5. 'character' → logprob: -17.500001907348633
    6. '_)' → logprob: -17.500001907348633
    7. '<Character' → logprob: -20.875001907348633
    8. 'Character' → logprob: -21.000001907348633
    9. '_variable' → logprob: -21.000001907348633
    10. ')' → logprob: -21.000001907348633

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.750001907348633
    4. '')' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.125001907348633
    6. '`)' → logprob: -17.625001907348633
    7. ')))' → logprob: -19.000001907348633
    8. ')
' → logprob: -19.125001907348633
    9. ')}' → logprob: -19.375001907348633
    10. '")' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 51.35%
Précision adaptée (1ère position): 51.35%
Précision (top 10): 83.78%
================================================================================
