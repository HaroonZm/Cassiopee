================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def graph_shortest_paths(adj_list, source_index):
    node_count = len(adj_list)
    min_distances = [float("inf")] * node_count
    min_distances[source_index] = 0
    priority_queue = [(0, source_index)]
    while priority_queue:
        curr_distance, curr_node = heapq.heappop(priority_queue)
        if min_distances[curr_node] < curr_distance:
            continue
        for neighbor_node, edge_weight in adj_list[curr_node]:
            if min_distances[neighbor_node] > curr_distance + edge_weight:
                min_distances[neighbor_node] = curr_distance + edge_weight
                heapq.heappush(priority_queue, (min_distances[neighbor_node], neighbor_node))
    return min_distances

input_reader = sys.stdin.readline
vertex_count, edge_count, start_state = map(int, input_reader().split())
adjacency = [[] for _ in range(vertex_count)]

if start_state >= 2500:
    for _ in range(edge_count):
        src_node, dst_node, edge_val_a, edge_val_b = map(int, input_reader().split())
        src_node -= 1
        dst_node -= 1
        adjacency[src_node].append((dst_node, edge_val_b))
        adjacency[dst_node].append((src_node, edge_val_b))
    min_paths = graph_shortest_paths(adjacency, 0)
else:
    for _ in range(edge_count):
        src_node, dst_node, val_a, val_b = map(int, input_reader().split())
        src_node -= 1
        dst_node -= 1
        adjacency[src_node].append((dst_node, val_a, val_b))
        adjacency[dst_node].append((src_node, val_a, val_b))
    node_charge_data = [list(map(int, input_reader().split())) for _ in range(vertex_count)]
    expanded_graph = [[] for _ in range(vertex_count * 2500)]
    for node_index in range(vertex_count):
        charge_increment, charge_cost = node_charge_data[node_index]
        for charge_level in range(2500):
            for neighbor_index, require_charge, travel_cost in adjacency[node_index]:
                if charge_level >= require_charge:
                    expanded_graph[2500 * node_index + charge_level].append(
                        (2500 * neighbor_index + (charge_level - require_charge), travel_cost)
                    )
            if charge_level + charge_increment < 2500:
                expanded_graph[2500 * node_index + charge_level].append(
                    (2500 * node_index + (charge_level + charge_increment), charge_cost)
                )
    expanded_distances = graph_shortest_paths(expanded_graph, start_state)
    min_paths = [0] * vertex_count
    for node_index in range(vertex_count):
        min_paths[node_index] = min(expanded_distances[2500 * node_index:2500 * (node_index + 1)])
print(*min_paths[1:], sep="\n")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. '#' → logprob: -13.625036239624023
    4. '_' → logprob: -14.375036239624023
    5. 'ify' → logprob: -14.750036239624023
    6. ')' → logprob: -15.250036239624023
    7. 's' → logprob: -15.250036239624023
    8. ',' → logprob: -15.250036239624023
    9. 'u' → logprob: -15.375036239624023
    10. '

' → logprob: -15.375036239624023

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.500823974609375
    2. '
' → logprob: -1.500823974609375
    3. '\n' → logprob: -2.500823974609375
    4. '\' → logprob: -3.375823974609375
    5. '

' → logprob: -3.625823974609375
    6. '<|end|>' → logprob: -5.000823974609375
    7. '' → logprob: -5.375823974609375
    8. 'import' → logprob: -5.500823974609375
    9. '.
' → logprob: -5.875823974609375
    10. '.

' → logprob: -6.125823974609375

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19796212017536163
    2. '\' → logprob: -3.1979620456695557
    3. '
' → logprob: -3.4479620456695557
    4. '\n' → logprob: -3.6979620456695557
    5. 'def' → logprob: -3.9479620456695557
    6. '```' → logprob: -4.197962284088135
    7. '' → logprob: -4.322962284088135
    8. 'import' → logprob: -4.447962284088135
    9. 'from' → logprob: -4.822962284088135
    10. ',' → logprob: -5.697962284088135

Token 8: ' graph' (ID: 7465)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: '_short' (ID: 40379)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3214145600795746
    2. '):' → logprob: -2.3214144706726074
    3. '():' → logprob: -3.0714144706726074
    4. '_' → logprob: -3.1964144706726074
    5. '.' → logprob: -3.3214144706726074
    6. ' (' → logprob: -3.9464144706726074
    7. '[' → logprob: -4.696414470672607
    8. ':' → logprob: -5.446414470672607
    9. '(node' → logprob: -6.571414470672607
    10. ' ():' → logprob: -6.696414470672607

Token 10: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00019424250058364123
    2. '_path' → logprob: -8.750194549560547
    3. 'path' → logprob: -10.750194549560547
    4. '_est' → logprob: -12.250194549560547
    5. '__' → logprob: -12.875194549560547
    6. '_' → logprob: -13.375194549560547
    7. 'e' → logprob: -14.000194549560547
    8. '```' → logprob: -14.625194549560547
    9. 'ed' → logprob: -14.875194549560547
    10. 'es' → logprob: -14.875194549560547

Token 11: '_paths' (ID: 56992)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0008542861323803663
    2. '_paths' → logprob: -7.1258544921875
    3. '_' → logprob: -10.0008544921875
    4. '_distance' → logprob: -13.6258544921875
    5. '_pat' → logprob: -14.1258544921875
    6. '_pa' → logprob: -14.2508544921875
    7. '_Path' → logprob: -14.3758544921875
    8. 'path' → logprob: -15.0008544921875
    9. '_p' → logprob: -15.1258544921875
    10. '_PATH' → logprob: -15.2508544921875

Token 12: '(adj' (ID: 141921)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009273606352508068
    2. '_' → logprob: -5.509273529052734
    3. '(_' → logprob: -6.509273529052734
    4. '(node' → logprob: -7.134273529052734
    5. '(_:' → logprob: -7.759273529052734
    6. '():' → logprob: -8.009273529052734
    7. '_to' → logprob: -8.384273529052734
    8. '(graph' → logprob: -8.634273529052734
    9. '```' → logprob: -8.634273529052734
    10. '_from' → logprob: -8.759273529052734

Token 13: '_list' (ID: 4162)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.05621430650353432
    2. '_list' → logprob: -3.8062143325805664
    3. '):' → logprob: -4.181214332580566
    4. ',' → logprob: -4.681214332580566
    5. 'acent' → logprob: -5.431214332580566
    6. '):
' → logprob: -6.556214332580566
    7. '):

' → logprob: -7.431214332580566
    8. '_,' → logprob: -8.056214332580566
    9. ')' → logprob: -8.806214332580566
    10. '_matrix' → logprob: -8.931214332580566

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037755006924271584
    2. '):' → logprob: -5.878775596618652
    3. ' ,' → logprob: -7.378775596618652
    4. ')' → logprob: -8.503775596618652
    5. '[' → logprob: -9.378775596618652
    6. ',node' → logprob: -11.003775596618652
    7. ',n' → logprob: -12.253775596618652
    8. ' ):' → logprob: -12.378775596618652
    9. '```' → logprob: -12.628775596618652
    10. '(' → logprob: -12.878775596618652

Token 15: ' source' (ID: 4256)
  Prédit: ' source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -1.0686020851135254
    2. ' start' → logprob: -1.1936020851135254
    3. 'start' → logprob: -1.6936020851135254
    4. 'source' → logprob: -1.8186020851135254
    5. 'src' → logprob: -6.068602085113525
    6. 'n' → logprob: -7.318602085113525
    7. ' n' → logprob: -7.318602085113525
    8. ' sources' → logprob: -7.568602085113525
    9. 'sources' → logprob: -7.568602085113525
    10. ' src' → logprob: -7.693602085113525

Token 16: '_index' (ID: 7748)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05596860125660896
    2. ',' → logprob: -2.9309685230255127
    3. ')' → logprob: -7.055968761444092
    4. ':' → logprob: -8.930968284606934
    5. ' ):' → logprob: -10.055968284606934
    6. '):
' → logprob: -10.680968284606934
    7. '```' → logprob: -12.555968284606934
    8. ' ,' → logprob: -12.680968284606934
    9. ''):' → logprob: -12.930968284606934
    10. ')):' → logprob: -13.430968284606934

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00573182525113225
    2. ',' → logprob: -5.38073205947876
    3. ')' → logprob: -6.88073205947876
    4. ':' → logprob: -10.005731582641602
    5. ' ):' → logprob: -10.630731582641602
    6. '):
' → logprob: -12.130731582641602
    7. ' ' → logprob: -13.380731582641602
    8. ''):' → logprob: -13.755731582641602
    9. ')):' → logprob: -13.755731582641602
    10. ' ,' → logprob: -14.255731582641602

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16539771854877472
    2. ':' → logprob: -1.9153977632522583
    3. ' :' → logprob: -5.665397644042969
    4. '```' → logprob: -7.290397644042969
    5. ':
' → logprob: -8.040397644042969
    6. ',' → logprob: -8.915397644042969
    7. '):' → logprob: -9.290397644042969
    8. ' ' → logprob: -9.415397644042969
    9. 'heap' → logprob: -9.915397644042969
    10. '    
' → logprob: -9.915397644042969

Token 19: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032824449241161346
    2. ' distances' → logprob: -4.282824516296387
    3. 'dist' → logprob: -4.657824516296387
    4. ' dist' → logprob: -5.782824516296387
    5. '```' → logprob: -6.157824516296387
    6. ' visited' → logprob: -7.407824516296387
    7. ' n' → logprob: -7.407824516296387
    8. ' ' → logprob: -7.657824516296387
    9. '    ' → logprob: -7.782824516296387
    10. 'distance' → logprob: -7.907824516296387

Token 20: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27781039476394653
    2. '_dist' → logprob: -1.6528103351593018
    3. '_' → logprob: -3.9028103351593018
    4. ' =' → logprob: -4.527810573577881
    5. '_queue' → logprob: -5.027810573577881
    6. '_to' → logprob: -5.527810573577881
    7. ' _' → logprob: -6.402810573577881
    8. '_s' → logprob: -6.527810573577881
    9. '_cost' → logprob: -7.277810573577881
    10. '_heap' → logprob: -7.277810573577881

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032983170822262764
    2. '=' → logprob: -5.753298282623291
    3. ' ' → logprob: -9.62829875946045
    4. '   ' → logprob: -10.62829875946045
    5. ')' → logprob: -12.12829875946045
    6. '  ' → logprob: -12.37829875946045
    7. '.' → logprob: -12.50329875946045
    8. ',' → logprob: -12.50329875946045
    9. '    ' → logprob: -12.62829875946045
    10. ' ==' → logprob: -12.87829875946045

Token 22: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.003180094063282013
    2. 'len' → logprob: -5.753180027008057
    3. '(len' → logprob: -13.503180503845215
    4. '=len' → logprob: -14.378180503845215
    5. ' ' → logprob: -15.878180503845215
    6. '[len' → logprob: -16.1281795501709
    7. '	len' → logprob: -16.3781795501709
    8. ',len' → logprob: -17.5031795501709
    9. ' int' → logprob: -18.6281795501709
    10. '   ' → logprob: -18.7531795501709

Token 23: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.008799755945801735
    2. '(' → logprob: -4.7587995529174805
    3. 'adj' → logprob: -8.63379955291748
    4. ' adj' → logprob: -12.50879955291748
    5. '(ad' → logprob: -13.25879955291748
    6. ' (' → logprob: -13.38379955291748
    7. 'Adj' → logprob: -16.008800506591797
    8. '(
' → logprob: -16.133800506591797
    9. '_adj' → logprob: -16.758800506591797
    10. '(

' → logprob: -17.383800506591797

Token 24: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -12.250008583068848
    3. ')_' → logprob: -12.875008583068848
    4. ')' → logprob: -14.750008583068848
    5. '(_' → logprob: -15.250008583068848
    6. ' _' → logprob: -15.625008583068848
    7. '_l' → logprob: -16.125009536743164
    8. '[_' → logprob: -16.750009536743164
    9. '_)' → logprob: -16.875009536743164
    10. '_lst' → logprob: -17.000009536743164

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. '   ' → logprob: -10.125061988830566
    3. ' )' → logprob: -11.500061988830566
    4. ')
' → logprob: -11.875061988830566
    5. '[' → logprob: -13.125061988830566
    6. ' ' → logprob: -13.875061988830566
    7. '[node' → logprob: -14.500061988830566
    8. '')' → logprob: -15.750061988830566
    9. '`)' → logprob: -15.750061988830566
    10. ']' → logprob: -16.37506103515625

Token 26: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4736919701099396
    2. ' distances' → logprob: -1.9736919403076172
    3. '
' → logprob: -2.223691940307617
    4. 'distance' → logprob: -2.223691940307617
    5. '    
' → logprob: -5.223691940307617
    6. '   ' → logprob: -5.723691940307617
    7. 'Distances' → logprob: -5.848691940307617
    8. ' 
' → logprob: -5.973691940307617
    9. '_dist' → logprob: -6.223691940307617
    10. ' dist' → logprob: -7.223691940307617

Token 27: ' min' (ID: 1349)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3436746299266815
    2. ' dist' → logprob: -1.843674659729004
    3. ' distances' → logprob: -2.093674659729004
    4. '   ' → logprob: -4.843674659729004
    5. 'distance' → logprob: -7.968674659729004
    6. ' distance' → logprob: -8.593674659729004
    7. 'import' → logprob: -8.718674659729004
    8. ' ' → logprob: -8.843674659729004
    9. ' d' → logprob: -9.218674659729004
    10. ' import' → logprob: -9.468674659729004

Token 28: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03570820763707161
    2. '_heap' → logprob: -3.53570818901062
    3. '_distance' → logprob: -5.535708427429199
    4. '_' → logprob: -6.910708427429199
    5. '_d' → logprob: -7.410708427429199
    6. 'dist' → logprob: -8.1607084274292
    7. ' distances' → logprob: -10.0357084274292
    8. '_cost' → logprob: -11.0357084274292
    9. 'imum' → logprob: -11.5357084274292
    10. '_dis' → logprob: -11.7857084274292

Token 29: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.4648225009441376
    2. ' =' → logprob: -1.46482253074646
    3. 'ance' → logprob: -2.83982253074646
    4. '=' → logprob: -2.96482253074646
    5. '[' → logprob: -3.58982253074646
    6. '   ' → logprob: -6.589822292327881
    7. ' ' → logprob: -7.464822292327881
    8. 'ANCES' → logprob: -8.339822769165039
    9. 's' → logprob: -9.089822769165039
    10. '  ' → logprob: -9.214822769165039

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012596650049090385
    2. '=' → logprob: -4.387596607208252
    3. '[' → logprob: -10.01259708404541
    4. ' ' → logprob: -10.63759708404541
    5. ',' → logprob: -12.26259708404541
    6. ' =[' → logprob: -12.51259708404541
    7. '[:]' → logprob: -12.76259708404541
    8. ')' → logprob: -13.51259708404541
    9. '=[' → logprob: -13.51259708404541
    10. '   ' → logprob: -13.51259708404541

Token 31: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.605542778968811
    2. ' [' → logprob: -0.855542778968811
    3. '[node' → logprob: -3.6055426597595215
    4. '{' → logprob: -7.2305426597595215
    5. '[min' → logprob: -7.7305426597595215
    6. '[n' → logprob: -8.48054313659668
    7. '[len' → logprob: -9.23054313659668
    8. '[int' → logprob: -9.35554313659668
    9. '[class' → logprob: -9.98054313659668
    10. '[num' → logprob: -10.23054313659668

Token 32: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005252372473478317
    2. ' float' → logprob: -5.255252361297607
    3. 'sys' → logprob: -11.130252838134766
    4. ' sys' → logprob: -13.380252838134766
    5. '   ' → logprob: -13.880252838134766
    6. '(float' → logprob: -14.880252838134766
    7. '	float' → logprob: -15.130252838134766
    8. '0' → logprob: -15.130252838134766
    9. ' ' → logprob: -15.505252838134766
    10. ',float' → logprob: -15.880252838134766

Token 33: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.750077247619629
    3. ''in' → logprob: -11.625077247619629
    4. '("' → logprob: -12.000077247619629
    5. '(in' → logprob: -13.500077247619629
    6. ''' → logprob: -13.500077247619629
    7. 'inf' → logprob: -14.125077247619629
    8. ']' → logprob: -15.625077247619629
    9. '('+' → logprob: -15.875077247619629
    10. '(\'' → logprob: -17.250078201293945

Token 34: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.896309739408025e-07
    2. 'in' → logprob: -14.750000953674316
    3. ' inf' → logprob: -16.125
    4. '_inf' → logprob: -16.5
    5. '∞' → logprob: -16.875
    6. 'Inf' → logprob: -17.375
    7. '.inf' → logprob: -17.875
    8. '"' → logprob: -18.125
    9. 'info' → logprob: -18.25
    10. ''in' → logprob: -18.25

Token 35: '")]' (ID: 71224)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27864083647727966
    2. '")]' → logprob: -1.778640866279602
    3. '")' → logprob: -2.7786407470703125
    4. ')]' → logprob: -4.9036407470703125
    5. ']' → logprob: -5.5286407470703125
    6. '"),' → logprob: -8.403640747070312
    7. ')")' → logprob: -8.778640747070312
    8. '),' → logprob: -9.153640747070312
    9. '()' → logprob: -9.153640747070312
    10. '("' → logprob: -9.778640747070312

Token 36: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32097363471984863
    2. ' for' → logprob: -1.4459736347198486
    3. ',' → logprob: -3.5709736347198486
    4. 'for' → logprob: -5.1959733963012695
    5. ']*' → logprob: -5.8209733963012695
    6. ' ]' → logprob: -7.3209733963012695
    7. ')' → logprob: -7.3209733963012695
    8. '   ' → logprob: -8.07097339630127
    9. ',
' → logprob: -8.69597339630127
    10. '<|end|>' → logprob: -8.82097339630127

Token 37: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.018328100442886353
    2. ' node' → logprob: -4.0183281898498535
    3. '(node' → logprob: -8.643327713012695
    4. '	node' → logprob: -13.393327713012695
    5. '[node' → logprob: -15.768327713012695
    6. '/node' → logprob: -16.518327713012695
    7. '=node' → logprob: -16.768327713012695
    8. ',node' → logprob: -17.643327713012695
    9. '   ' → logprob: -17.768327713012695
    10. '(' → logprob: -18.143327713012695

Token 38: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.000182921823579818
    2. '_' → logprob: -9.12518310546875
    3. 's' → logprob: -9.87518310546875
    4. 'count' → logprob: -12.00018310546875
    5. ' _' → logprob: -12.25018310546875
    6. '_counts' → logprob: -12.62518310546875
    7. '_c' → logprob: -13.12518310546875
    8. '_s' → logprob: -13.50018310546875
    9. ' ' → logprob: -14.00018310546875
    10. '_COUNT' → logprob: -14.12518310546875

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.896507740020752
    2. ')' → logprob: -1.771507740020752
    3. '[' → logprob: -2.021507740020752
    4. '   ' → logprob: -2.521507740020752
    5. '    
' → logprob: -3.021507740020752
    6. ' 
' → logprob: -3.771507740020752
    7. ']' → logprob: -4.271507740020752
    8. '```' → logprob: -4.396507740020752
    9. 'newline' → logprob: -4.521507740020752
    10. '  
' → logprob: -4.521507740020752

Token 40: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1528133898973465
    2. '   ' → logprob: -2.27781343460083
    3. ' min' → logprob: -3.90281343460083
    4. '[min' → logprob: -4.52781343460083
    5. '
' → logprob: -6.27781343460083
    6. ')' → logprob: -6.90281343460083
    7. '    
' → logprob: -6.90281343460083
    8. '[' → logprob: -7.02781343460083
    9. '	min' → logprob: -7.15281343460083
    10. '_min' → logprob: -7.15281343460083

Token 41: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.16087977588176727
    2. ' min' → logprob: -1.9108797311782837
    3. '   ' → logprob: -7.660879611968994
    4. '    
' → logprob: -10.410880088806152
    5. '	min' → logprob: -10.535880088806152
    6. '```' → logprob: -10.535880088806152
    7. '    ' → logprob: -10.785880088806152
    8. ' ' → logprob: -11.035880088806152
    9. '[min' → logprob: -11.035880088806152
    10. '_min' → logprob: -11.660880088806152

Token 42: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.839121826691553e-05
    2. '_' → logprob: -9.625078201293945
    3. '_distance' → logprob: -11.875078201293945
    4. 'Distances' → logprob: -13.125078201293945
    5. '_d' → logprob: -13.375078201293945
    6. '_DIST' → logprob: -14.500078201293945
    7. 'dist' → logprob: -15.375078201293945
    8. ' distances' → logprob: -15.375078201293945
    9. '_D' → logprob: -16.000078201293945
    10. ' _' → logprob: -16.000078201293945

Token 43: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00013655527436640114
    2. '_' → logprob: -9.625136375427246
    3. '_dist' → logprob: -10.375136375427246
    4. 'aces' → logprob: -11.875136375427246
    5. 'Distances' → logprob: -12.125136375427246
    6. 'es' → logprob: -12.500136375427246
    7. 'ist' → logprob: -12.625136375427246
    8. ' distances' → logprob: -12.625136375427246
    9. 'a' → logprob: -13.000136375427246
    10. 'ices' → logprob: -13.250136375427246

Token 44: '[source' (ID: 187359)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.632542913896032e-05
    2. '\[' → logprob: -11.625046730041504
    3. '[user' → logprob: -12.000046730041504
    4. '```' → logprob: -12.125046730041504
    5. '[token' → logprob: -12.250046730041504
    6. '[node' → logprob: -12.625046730041504
    7. '[source' → logprob: -12.750046730041504
    8. '[]' → logprob: -13.125046730041504
    9. '[...]' → logprob: -13.250046730041504
    10. '[current' → logprob: -13.750046730041504

Token 45: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.003009553998708725
    2. '_' → logprob: -6.12800931930542
    3. '_indices' → logprob: -8.003009796142578
    4. ' _' → logprob: -9.128009796142578
    5. '_indexes' → logprob: -9.628009796142578
    6. ')' → logprob: -9.753009796142578
    7. ']_' → logprob: -9.878009796142578
    8. ')_' → logprob: -9.878009796142578
    9. '_idx' → logprob: -10.378009796142578
    10. ']' → logprob: -10.753009796142578

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06214066222310066
    2. ' ]' → logprob: -2.812140703201294
    3. '=' → logprob: -8.937140464782715
    4. ']=' → logprob: -10.937140464782715
    5. ' =' → logprob: -11.062140464782715
    6. ')' → logprob: -12.812140464782715
    7. '`]' → logprob: -13.562140464782715
    8. ')]' → logprob: -13.687140464782715
    9. '[' → logprob: -13.937140464782715
    10. ' :]' → logprob: -14.187140464782715

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328627467155457
    2. '=' → logprob: -1.313286304473877
    3. '<|end|>' → logprob: -11.563285827636719
    4. ' ' → logprob: -12.563285827636719
    5. ' =
' → logprob: -13.063285827636719
    6. ' =)' → logprob: -13.188285827636719
    7. ']' → logprob: -13.313285827636719
    8. ')' → logprob: -13.313285827636719
    9. '[' → logprob: -14.438285827636719
    10. 'space' → logprob: -14.688285827636719

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.37747573852539
    4. '   ' → logprob: -19.00247573852539
    5. '۰' → logprob: -19.37747573852539
    6. '```' → logprob: -19.56497573852539
    7. '  ' → logprob: -19.87747573852539
    8. '1' → logprob: -20.81497573852539
    9. '00' → logprob: -20.93997573852539
    10. '`' → logprob: -21.12747573852539

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.0
    4. '۰' → logprob: -21.25
    5. '```' → logprob: -21.25
    6. '`' → logprob: -22.75
    7. '  ' → logprob: -23.125
    8. '00' → logprob: -23.375
    9. '０' → logprob: -23.5
    10. '٠' → logprob: -23.75

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003911457024514675
    2. '    
' → logprob: -6.25391149520874
    3. '\n' → logprob: -7.50391149520874
    4. '' → logprob: -7.75391149520874
    5. '   ' → logprob: -8.128911018371582
    6. '  
' → logprob: -8.128911018371582
    7. ' 
' → logprob: -8.378911018371582
    8. '
' → logprob: -9.753911018371582
    9. '   
' → logprob: -10.128911018371582
    10. 'n' → logprob: -10.753911018371582

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011783593334257603
    2. '    
' → logprob: -4.886783599853516
    3. '   ' → logprob: -6.386783599853516
    4. '\n' → logprob: -7.011783599853516
    5. '  
' → logprob: -7.636783599853516
    6. '```' → logprob: -7.761783599853516
    7. '' → logprob: -8.386783599853516
    8. '   
' → logprob: -8.886783599853516
    9. '
' → logprob: -9.261783599853516
    10. ' 
' → logprob: -9.511783599853516

Token 52: ' priority' (ID: 17621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6515892148017883
    2. 'heap' → logprob: -0.9015892148017883
    3. 'pq' → logprob: -3.2765891551971436
    4. 'priority' (adapté à ' priority') → logprob: -4.026589393615723
    5. 'queue' → logprob: -4.526589393615723
    6. ' heap' → logprob: -5.901589393615723
    7. '```' → logprob: -5.901589393615723
    8. '    
' → logprob: -8.151589393615723
    9. '
' → logprob: -8.901589393615723
    10. 'hq' → logprob: -9.276589393615723

Token 53: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.047866713255643845
    2. '_' → logprob: -3.5478668212890625
    3. 'q' → logprob: -4.7978668212890625
    4. ' _' → logprob: -5.5478668212890625
    5. 'queue' → logprob: -6.1728668212890625
    6. '_q' → logprob: -6.2978668212890625
    7. ' queue' → logprob: -7.1728668212890625
    8. '_heap' → logprob: -7.7978668212890625
    9. ' ' → logprob: -8.422866821289062
    10. '.queue' → logprob: -9.547866821289062

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15300755202770233
    2. '.' → logprob: -2.5280075073242188
    3. '=' → logprob: -3.5280075073242188
    4. '[' → logprob: -3.9030075073242188
    5. '<|end|>' → logprob: -5.528007507324219
    6. ' .' → logprob: -6.153007507324219
    7. '=[]' → logprob: -6.153007507324219
    8. '.append' → logprob: -6.403007507324219
    9. '[:]' → logprob: -7.153007507324219
    10. '.setdefault' → logprob: -8.028007507324219

Token 55: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3578106462955475
    2. ' [(' → logprob: -1.357810616493225
    3. '[]' → logprob: -3.6078107357025146
    4. ' []' → logprob: -4.1078104972839355
    5. '[' → logprob: -11.732810974121094
    6. ' [' → logprob: -11.982810974121094
    7. ' ' → logprob: -14.732810974121094
    8. '[((' → logprob: -15.107810974121094
    9. '([(' → logprob: -15.107810974121094
    10. '[]
' → logprob: -15.357810974121094

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.500006675720215
    4. ')' → logprob: -16.2500057220459
    5. '(' → logprob: -17.5000057220459
    6. '۰' → logprob: -18.2500057220459
    7. '```' → logprob: -18.3125057220459
    8. ',' → logprob: -18.3750057220459
    9. '  ' → logprob: -18.7500057220459
    10. '    ' → logprob: -19.1250057220459

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. '<|end|>' → logprob: -10.250066757202148
    3. ' ,' → logprob: -11.625066757202148
    4. ',user' → logprob: -12.500066757202148
    5. ',)' → logprob: -12.500066757202148
    6. ',None' → logprob: -12.750066757202148
    7. ',node' → logprob: -13.000066757202148
    8. ',index' → logprob: -13.875066757202148
    9. '<|end|>' → logprob: -14.000066757202148
    10. '‌,' → logprob: -14.125066757202148

Token 58: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.014164329506456852
    2. ' source' → logprob: -4.264164447784424
    3. '[source' → logprob: -14.639163970947266
    4. '(source' → logprob: -16.264163970947266
    5. '	source' → logprob: -16.514163970947266
    6. 'ource' → logprob: -17.014163970947266
    7. ' ' → logprob: -17.139163970947266
    8. '_source' → logprob: -17.514163970947266
    9. '0' → logprob: -17.764163970947266
    10. 'Source' → logprob: -17.889163970947266

Token 59: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.523948907968588e-05
    2. '_' → logprob: -10.875035285949707
    3. ')' → logprob: -11.750035285949707
    4. 'index' → logprob: -13.125035285949707
    5. '_)' → logprob: -13.375035285949707
    6. ')]' → logprob: -14.000035285949707
    7. '_INDEX' → logprob: -14.250035285949707
    8. '_source' → logprob: -14.250035285949707
    9. 'Index' → logprob: -14.875035285949707
    10. ' )' → logprob: -15.250035285949707

Token 60: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02064676396548748
    2. ')' → logprob: -3.895646810531616
    3. '),' → logprob: -10.145647048950195
    4. ')])' → logprob: -10.145647048950195
    5. '))' → logprob: -11.270647048950195
    6. ']' → logprob: -12.520647048950195
    7. ' )' → logprob: -12.895647048950195
    8. ')]
' → logprob: -13.395647048950195
    9. ')
' → logprob: -13.520647048950195
    10. '   ' → logprob: -13.770647048950195

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47602877020835876
    2. '
' → logprob: -1.6010288000106812
    3. 'while' → logprob: -2.1010286808013916
    4. '    
' → logprob: -3.6010286808013916
    5. ' while' → logprob: -4.226028919219971
    6. '```' → logprob: -4.976028919219971
    7. ')' → logprob: -5.976028919219971
    8. ',' → logprob: -7.101028919219971
    9. '  
' → logprob: -7.351028919219971
    10. '   
' → logprob: -7.601028919219971

Token 62: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3423708975315094
    2. '   ' → logprob: -2.0923709869384766
    3. 'while' (adapté à ' while') → logprob: -2.4673709869384766
    4. '    
' → logprob: -2.9673709869384766
    5. ' while' → logprob: -3.9673709869384766
    6. '  
' → logprob: -5.842370986938477
    7. ' 
' → logprob: -6.342370986938477
    8. '   
' → logprob: -6.467370986938477
    9. '\n' → logprob: -6.842370986938477
    10. '```' → logprob: -6.967370986938477

Token 63: ' priority' (ID: 17621)
  Prédit: ' priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priority' → logprob: -0.013167407363653183
    2. 'priority' → logprob: -4.388167381286621
    3. ' ' → logprob: -7.388167381286621
    4. ' len' → logprob: -11.013167381286621
    5. '(priority' → logprob: -11.138167381286621
    6. '  ' → logprob: -12.763167381286621
    7. ' not' → logprob: -13.263167381286621
    8. '_priority' → logprob: -13.888167381286621
    9. '.priority' → logprob: -14.513167381286621
    10. ' prioridade' → logprob: -14.638167381286621

Token 64: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.005455728620290756
    2. 'q' → logprob: -5.880455493927002
    3. '_' → logprob: -6.380455493927002
    4. '_q' → logprob: -7.130455493927002
    5. '-' → logprob: -10.50545597076416
    6. '_heap' → logprob: -10.50545597076416
    7. ' _' → logprob: -10.75545597076416
    8. '[' → logprob: -11.50545597076416
    9. '```' → logprob: -11.75545597076416
    10. '__' → logprob: -11.75545597076416

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023035754566080868
    2. '):' → logprob: -8.62523078918457
    3. ':**' → logprob: -11.25023078918457
    4. ',' → logprob: -11.62523078918457
    5. '>:' → logprob: -11.87523078918457
    6. '.pop' → logprob: -12.62523078918457
    7. 'and' → logprob: -13.00023078918457
    8. '<|end|>' → logprob: -13.00023078918457
    9. ':not' → logprob: -13.37523078918457
    10. '[' → logprob: -13.37523078918457

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6350927352905273
    2. ',' → logprob: -0.7600927352905273
    3. ' ,' → logprob: -7.260092735290527
    4. ',
' → logprob: -8.010092735290527
    5. ':' → logprob: -8.260092735290527
    6. '   ' → logprob: -8.635092735290527
    7. '`' → logprob: -8.885092735290527
    8. '```' → logprob: -9.135092735290527
    9. '        
' → logprob: -9.385092735290527
    10. '    ' → logprob: -9.510092735290527

Token 67: ' curr' (ID: 10495)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9054874181747437
    2. ',' → logprob: -2.155487537384033
    3. '   ' → logprob: -2.530487537384033
    4. 'distance' → logprob: -2.655487537384033
    5. '
' → logprob: -2.905487537384033
    6. ' ,' → logprob: -3.030487537384033
    7. 'heap' → logprob: -3.280487537384033
    8. ' dist' → logprob: -3.655487537384033
    9. '```' → logprob: -3.655487537384033
    10. 'd' → logprob: -3.905487537384033

Token 68: '_distance' (ID: 45537)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.4695437550544739
    2. '_distance' → logprob: -1.219543695449829
    3. '_' → logprob: -3.219543695449829
    4. '_cost' → logprob: -3.344543695449829
    5. '[' → logprob: -6.594543933868408
    6. 'dist' → logprob: -7.219543933868408
    7. '_,' → logprob: -7.344543933868408
    8. '_weight' → logprob: -8.21954345703125
    9. ',' → logprob: -8.21954345703125
    10. '_time' → logprob: -8.59454345703125

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.6087021473795176e-05
    2. ' ,' → logprob: -10.250045776367188
    3. '[' → logprob: -12.875045776367188
    4. ',
' → logprob: -13.500045776367188
    5. ',user' → logprob: -13.875045776367188
    6. ',current' → logprob: -13.875045776367188
    7. ',node' → logprob: -14.625045776367188
    8. ',)' → logprob: -14.875045776367188
    9. ',_' → logprob: -15.000045776367188
    10. ',c' → logprob: -15.375045776367188

Token 70: ' curr' (ID: 10495)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.1347848176956177
    2. ' curr' → logprob: -1.2597848176956177
    3. ' u' → logprob: -1.5097848176956177
    4. ' current' → logprob: -2.259784698486328
    5. 'curr' → logprob: -3.009784698486328
    6. 'node' → logprob: -4.884784698486328
    7. 'u' → logprob: -5.134784698486328
    8. 'current' → logprob: -5.259784698486328
    9. ' ' → logprob: -7.134784698486328
    10. '```' → logprob: -8.759784698486328

Token 71: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.09208466857671738
    2. '_' → logprob: -2.4670846462249756
    3. '_index' → logprob: -6.217084884643555
    4. '_nodes' → logprob: -8.092084884643555
    5. '<|end|>' → logprob: -8.217084884643555
    6. ')' → logprob: -8.717084884643555
    7. '_)' → logprob: -9.217084884643555
    8. ' _' → logprob: -9.467084884643555
    9. ')_' → logprob: -10.092084884643555
    10. '_vertex' → logprob: -10.592084884643555

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050512444227933884
    2. '=' → logprob: -3.0505125522613525
    3. ')' → logprob: -6.300512313842773
    4. ']' → logprob: -10.675512313842773
    5. ' ' → logprob: -10.675512313842773
    6. ',' → logprob: -11.175512313842773
    7. ' )' → logprob: -11.550512313842773
    8. '   ' → logprob: -11.800512313842773
    9. ')=' → logprob: -12.175512313842773
    10. '    ' → logprob: -13.675512313842773

Token 73: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.003727399278432131
    2. 'heap' → logprob: -6.253727436065674
    3. ' he' → logprob: -6.378727436065674
    4. ' ' → logprob: -9.503726959228516
    5. 'he' → logprob: -11.253726959228516
    6. '(heap' → logprob: -12.503726959228516
    7. '.heap' → logprob: -13.503726959228516
    8. ' priority' → logprob: -13.503726959228516
    9. ' h' → logprob: -14.191226959228516
    10. '   ' → logprob: -14.253726959228516

Token 74: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.8889261304575484e-06
    2. 'p' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. ')' → logprob: -15.750003814697266
    5. '	q' → logprob: -15.875003814697266
    6. ' ' → logprob: -16.250003814697266
    7. '

' → logprob: -16.500003814697266
    8. '[' → logprob: -16.625003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '[q' → logprob: -17.375003814697266

Token 75: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.009240536950528622
    2. '.' → logprob: -4.759240627288818
    3. '.pop' → logprob: -8.00924015045166
    4. '.heap' → logprob: -8.75924015045166
    5. '.p' → logprob: -9.75924015045166
    6. '.q' → logprob: -10.88424015045166
    7. '```' → logprob: -11.88424015045166
    8. '.poll' → logprob: -12.13424015045166
    9. ' .' → logprob: -12.13424015045166
    10. '.extract' → logprob: -12.13424015045166

Token 76: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.981667537620524e-06
    2. 'ap' → logprob: -13.750001907348633
    3. 'pp' → logprob: -14.250001907348633
    4. 'a' → logprob: -16.125001907348633
    5. 'q' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[' → logprob: -18.375001907348633
    8. 'appen' → logprob: -18.625001907348633
    9. 'appe' → logprob: -18.750001907348633
    10. 'ап' → logprob: -19.250001907348633

Token 77: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.25215792655944824
    2. 'ush' → logprob: -1.5021579265594482
    3. 'app' → logprob: -9.002158164978027
    4. 'pp' → logprob: -10.627158164978027
    5. 'le' → logprob: -10.752158164978027
    6. 'u' → logprob: -11.127158164978027
    7. 'o' → logprob: -12.002158164978027
    8. 'al' → logprob: -12.252158164978027
    9. 'push' → logprob: -12.502158164978027
    10. 'opleft' → logprob: -12.502158164978027

Token 78: '(priority' (ID: 142802)
  Prédit: '(priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(priority' → logprob: -0.1603214144706726
    2. '(' → logprob: -1.9103214740753174
    3. '(pr' → logprob: -10.285321235656738
    4. ' (' → logprob: -11.035321235656738
    5. '(heap' → logprob: -11.285321235656738
    6. 'priority' → logprob: -11.910321235656738
    7. ')' → logprob: -12.285321235656738
    8. '(
' → logprob: -12.535321235656738
    9. '(queue' → logprob: -12.660321235656738
    10. '(parent' → logprob: -12.660321235656738

Token 79: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.00012868782505393028
    2. 'queue' → logprob: -9.125128746032715
    3. 'q' → logprob: -11.125128746032715
    4. ')' → logprob: -13.875128746032715
    5. '_' → logprob: -14.125128746032715
    6. 'que' → logprob: -14.500128746032715
    7. '_QUEUE' → logprob: -14.500128746032715
    8. '-' → logprob: -14.625128746032715
    9. ' queue' → logprob: -15.000128746032715
    10. '_q' → logprob: -15.250128746032715

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.875015258789062
    3. '       ' → logprob: -11.875015258789062
    4. '   ' → logprob: -14.250015258789062
    5. ' )' → logprob: -14.750015258789062
    6. ')`' → logprob: -16.375015258789062
    7. ')

' → logprob: -16.875015258789062
    8. '))' → logprob: -16.875015258789062
    9. '):' → logprob: -17.875015258789062
    10. '`)' → logprob: -18.500015258789062

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8742427229881287
    2. '
' → logprob: -1.2492427825927734
    3. '<|end|>' → logprob: -1.7492427825927734
    4. '        
' → logprob: -2.3742427825927734
    5. '        ' → logprob: -4.749242782592773
    6. ' ' → logprob: -5.874242782592773
    7. '    
' → logprob: -5.999242782592773
    8. ' 
' → logprob: -6.124242782592773
    9. '   ' → logprob: -6.124242782592773
    10. '  
' → logprob: -6.374242782592773

Token 82: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3453066647052765
    2. '
' → logprob: -1.970306634902954
    3. '        
' → logprob: -2.345306634902954
    4. '\n' → logprob: -4.220306873321533
    5. ' 
' → logprob: -4.845306873321533
    6. '    
' → logprob: -4.845306873321533
    7. '<|end|>' → logprob: -4.970306873321533
    8. '        ' → logprob: -5.095306873321533
    9. '   ' → logprob: -5.720306873321533
    10. '  
' → logprob: -5.970306873321533

Token 83: ' min' (ID: 1349)
  Prédit: ' curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.006338387727737427
    2. ' min' → logprob: -5.131338596343994
    3. 'curr' → logprob: -7.881338596343994
    4. '	curr' → logprob: -11.131338119506836
    5. ' ' → logprob: -11.506338119506836
    6. 'min' → logprob: -13.506338119506836
    7. ' cur' → logprob: -13.631338119506836
    8. ' currents' → logprob: -13.756338119506836
    9. ' current' → logprob: -13.756338119506836
    10. '_curr' → logprob: -14.256338119506836

Token 84: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0019318510312587023
    2. '_distance' → logprob: -6.251931667327881
    3. '_' → logprob: -13.376932144165039
    4. '_d' → logprob: -13.626932144165039
    5. 'dist' → logprob: -15.501932144165039
    6. '_dis' → logprob: -16.50193214416504
    7. '_DIST' → logprob: -17.25193214416504
    8. ' distances' → logprob: -17.50193214416504
    9. '	dist' → logprob: -17.75193214416504
    10. '_depth' → logprob: -17.87693214416504

Token 85: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.4238657057285309
    2. '_dist' → logprob: -1.2988656759262085
    3. 'ist' → logprob: -3.173865795135498
    4. 'stances' → logprob: -4.923865795135498
    5. 'dist' → logprob: -5.173865795135498
    6. 'Distances' → logprob: -5.423865795135498
    7. 'aces' → logprob: -6.298865795135498
    8. '   ' → logprob: -6.298865795135498
    9. 'ces' → logprob: -6.423865795135498
    10. 'in' → logprob: -7.048865795135498

Token 86: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.0011765359668061137
    2. '[' → logprob: -6.751176357269287
    3. '[cur' → logprob: -12.251176834106445
    4. '[current' → logprob: -14.251176834106445
    5. ' [' → logprob: -14.626176834106445
    6. '[c' → logprob: -15.251176834106445
    7. '   ' → logprob: -16.751176834106445
    8. '[node' → logprob: -16.751176834106445
    9. '[src' → logprob: -17.126176834106445
    10. ' ' → logprob: -17.626176834106445

Token 87: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0009326597792096436
    2. '_distance' → logprob: -7.000932693481445
    3. '_' → logprob: -11.875932693481445
    4. '_nodes' → logprob: -12.625932693481445
    5. 'node' → logprob: -12.750932693481445
    6. 'ance' → logprob: -13.125932693481445
    7. '_Node' → logprob: -13.625932693481445
    8. 'ode' → logprob: -13.750932693481445
    9. 'istance' → logprob: -14.125932693481445
    10. '_NODE' → logprob: -14.250932693481445

Token 88: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0058819870464503765
    2. '<' → logprob: -6.0058817863464355
    3. ' !=' → logprob: -6.3808817863464355
    4. ' <=' → logprob: -6.5058817863464355
    5. ' ' → logprob: -9.255882263183594
    6. '!=' → logprob: -10.505882263183594
    7. ' >' → logprob: -10.755882263183594
    8. '<=' → logprob: -11.505882263183594
    9. ' ' → logprob: -11.630882263183594
    10. '  ' → logprob: -11.755882263183594

Token 89: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10154968500137329
    2. ' <=' → logprob: -2.4765496253967285
    3. '<' → logprob: -5.3515496253967285
    4. ' ' → logprob: -5.8515496253967285
    5. ' !=' → logprob: -6.1015496253967285
    6. ' >' → logprob: -6.4765496253967285
    7. '<=' → logprob: -7.6015496253967285
    8. '  ' → logprob: -8.476550102233887
    9. '>' → logprob: -8.976550102233887
    10. '   ' → logprob: -9.226550102233887

Token 90: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.5823363065719604
    2. 'curr' → logprob: -0.8323363065719604
    3. ' ' → logprob: -5.20733642578125
    4. '	curr' → logprob: -7.08233642578125
    5. '_curr' → logprob: -10.70733642578125
    6. 'Curr' → logprob: -12.08233642578125
    7. '(curr' → logprob: -12.20733642578125
    8. '=' → logprob: -12.20733642578125
    9. ' ' → logprob: -12.58233642578125
    10. 'c' → logprob: -12.70733642578125

Token 91: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -4.668304245569743e-05
    2. '_' → logprob: -10.250046730041504
    3. '_dist' → logprob: -11.875046730041504
    4. 'ance' → logprob: -13.375046730041504
    5. 'istance' → logprob: -13.500046730041504
    6. 'distance' → logprob: -14.375046730041504
    7. '_DISTANCE' → logprob: -14.875046730041504
    8. '_depth' → logprob: -16.500045776367188
    9. '_length' → logprob: -17.125045776367188
    10. '_difference' → logprob: -17.375045776367188

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005769634619355202
    2. '       ' → logprob: -5.255769729614258
    3. ':
' → logprob: -7.755769729614258
    4. ' continue' → logprob: -10.130769729614258
    5. 'continue' → logprob: -10.630769729614258
    6. '           ' → logprob: -10.755769729614258
    7. ' :' → logprob: -12.005769729614258
    8. '   ' → logprob: -12.630769729614258
    9. '	continue' → logprob: -12.755769729614258
    10. ' continues' → logprob: -12.880769729614258

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051576197147369385
    2. ' continue' → logprob: -5.755157470703125
    3. ':' → logprob: -7.255157470703125
    4. '           ' → logprob: -7.380157470703125
    5. 'continue' → logprob: -7.880157470703125
    6. '   ' → logprob: -8.755157470703125
    7. '	continue' → logprob: -10.130157470703125
    8. ':
' → logprob: -11.005157470703125
    9. ' continues' → logprob: -11.505157470703125
    10. '_continue' → logprob: -11.505157470703125

Token 94: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27358725666999817
    2. ' continue' → logprob: -1.5235872268676758
    3. 'continue' (adapté à ' continue') → logprob: -3.898587226867676
    4. '   ' → logprob: -7.898587226867676
    5. '           ' → logprob: -8.023587226867676
    6. '	continue' → logprob: -8.273587226867676
    7. '_continue' → logprob: -9.023587226867676
    8. '        
' → logprob: -11.023587226867676
    9. 'contin' → logprob: -11.648587226867676
    10. '```' → logprob: -12.148587226867676

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3988095819950104
    2. '
' → logprob: -1.398809552192688
    3. '        
' → logprob: -2.5238096714019775
    4. '<|end|>' → logprob: -7.773809432983398
    5. '\n' → logprob: -8.273809432983398
    6. '        ' → logprob: -8.398809432983398
    7. '' → logprob: -8.398809432983398
    8. '  
' → logprob: -9.273809432983398
    9. '            
' → logprob: -9.273809432983398
    10. '       
' → logprob: -9.523809432983398

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11976920813322067
    2. '
' → logprob: -2.6197690963745117
    3. '        
' → logprob: -3.2447690963745117
    4. '<|end|>' → logprob: -8.369769096374512
    5. '  
' → logprob: -8.994769096374512
    6. '' → logprob: -8.994769096374512
    7. '            
' → logprob: -9.119769096374512
    8. '        ' → logprob: -9.744769096374512
    9. '\n' → logprob: -9.869769096374512
    10. '       
' → logprob: -9.869769096374512

Token 97: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3040219843387604
    2. '
' → logprob: -1.554021954536438
    3. '        
' → logprob: -3.0540220737457275
    4. ' for' → logprob: -7.054021835327148
    5. ' 
' → logprob: -7.179021835327148
    6. '<|end|>' → logprob: -7.179021835327148
    7. 'for' (adapté à ' for') → logprob: -8.179021835327148
    8. '    
' → logprob: -8.304021835327148
    9. '  
' → logprob: -8.429021835327148
    10. '            
' → logprob: -9.179021835327148

Token 98: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.044125035405159
    2. 'neighbor' → logprob: -3.1691250801086426
    3. ' neighbour' → logprob: -7.794125080108643
    4. ' next' → logprob: -8.419124603271484
    5. ' node' → logprob: -8.919124603271484
    6. ' neigh' → logprob: -9.294124603271484
    7. ' adj' → logprob: -9.919124603271484
    8. ' nxt' → logprob: -10.294124603271484
    9. ' edge' → logprob: -10.419124603271484
    10. ' neighboring' → logprob: -10.544124603271484

Token 99: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003436872211750597
    2. ',_' → logprob: -8.125343322753906
    3. '_index' → logprob: -10.875343322753906
    4. ' ,' → logprob: -11.375343322753906
    5. '_,' → logprob: -12.000343322753906
    6. '_idx' → logprob: -13.125343322753906
    7. '_' → logprob: -13.250343322753906
    8. ',node' → logprob: -13.750343322753906
    9. '‌,' → logprob: -14.000343322753906
    10. 's' → logprob: -14.625343322753906

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ' ,' → logprob: -10.375035285949707
    3. '‌,' → logprob: -13.125035285949707
    4. ',d' → logprob: -15.000035285949707
    5. 's' → logprob: -15.125035285949707
    6. ',node' → logprob: -15.375035285949707
    7. '```' → logprob: -15.875035285949707
    8. '<|end|>' → logprob: -16.37503433227539
    9. ',value' → logprob: -16.75003433227539
    10. ',length' → logprob: -16.87503433227539

Token 101: ' edge' (ID: 11165)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.5059524774551392
    2. ' weight' → logprob: -1.0059524774551392
    3. ' edge' → logprob: -4.25595235824585
    4. 'edge' → logprob: -4.50595235824585
    5. 'neighbor' → logprob: -5.75595235824585
    6. 'distance' → logprob: -7.00595235824585
    7. ' neighbor' → logprob: -7.13095235824585
    8. ' curr' → logprob: -8.005952835083008
    9. 'curr' → logprob: -8.380952835083008
    10. ' distance' → logprob: -8.380952835083008

Token 102: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.012251212261617184
    2. '_cost' → logprob: -5.012251377105713
    3. '_length' → logprob: -6.012251377105713
    4. '_' → logprob: -6.512251377105713
    5. '_distance' → logprob: -6.637251377105713
    6. '_w' → logprob: -8.512250900268555
    7. ' _' → logprob: -10.387250900268555
    8. '_weights' → logprob: -11.887250900268555
    9. '_value' → logprob: -12.012250900268555
    10. 'weight' → logprob: -12.137250900268555

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003303785342723131
    2. 'in' → logprob: -5.7533040046691895
    3. ' ' → logprob: -9.628303527832031
    4. ',' → logprob: -11.003303527832031
    5. '   ' → logprob: -11.128303527832031
    6. '	in' → logprob: -12.128303527832031
    7. '  ' → logprob: -12.378303527832031
    8. '<|end|>' → logprob: -12.503303527832031
    9. '    ' → logprob: -12.628303527832031
    10. '<|end|>' → logprob: -12.628303527832031

Token 104: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.12693072855472565
    2. 'adj' → logprob: -2.1269307136535645
    3. '(adj' → logprob: -13.751931190490723
    4. ' adjacency' → logprob: -13.876931190490723
    5. ' ' → logprob: -15.001931190490723
    6. '_adj' → logprob: -15.001931190490723
    7. 'Adj' → logprob: -17.626930236816406
    8. ' adjacent' → logprob: -18.126930236816406
    9. '  ' → logprob: -18.376930236816406
    10. 'ad' → logprob: -18.751930236816406

Token 105: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.6087021473795176e-05
    2. '       ' → logprob: -11.000045776367188
    3. '[' → logprob: -11.750045776367188
    4. '_' → logprob: -12.375045776367188
    5. '           ' → logprob: -12.375045776367188
    6. '[_' → logprob: -12.750045776367188
    7. ')_' → logprob: -13.000045776367188
    8. '   ' → logprob: -13.250045776367188
    9. ' _' → logprob: -13.625045776367188
    10. ']_' → logprob: -13.750045776367188

Token 106: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.750001907348633
    3. '[cur' → logprob: -14.500001907348633
    4. '[current' → logprob: -15.375001907348633
    5. '   ' → logprob: -16.250001907348633
    6. ' [' → logprob: -16.375001907348633
    7. '[c' → logprob: -17.000001907348633
    8. '       ' → logprob: -17.000001907348633
    9. '(curr' → logprob: -17.125001907348633
    10. '	curr' → logprob: -17.500001907348633

Token 107: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00014942926645744592
    2. '_' → logprob: -9.125149726867676
    3. 'node' → logprob: -10.625149726867676
    4. '_neighbor' → logprob: -12.375149726867676
    5. '_)' → logprob: -12.750149726867676
    6. ')_' → logprob: -13.000149726867676
    7. ')' → logprob: -13.250149726867676
    8. '_nodes' → logprob: -13.250149726867676
    9. 'neighbor' → logprob: -14.000149726867676
    10. '_distance' → logprob: -15.125149726867676

Token 108: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002925518900156021
    2. ':' → logprob: -6.502925395965576
    3. ']:' → logprob: -7.377925395965576
    4. '):
' → logprob: -8.002925872802734
    5. '       ' → logprob: -8.627925872802734
    6. '   ' → logprob: -8.877925872802734
    7. ' ):' → logprob: -9.127925872802734
    8. ')' → logprob: -11.752925872802734
    9. '}:' → logprob: -11.877925872802734
    10. ',' → logprob: -12.377925872802734

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014777416363358498
    2. ':' → logprob: -4.514777183532715
    3. '       ' → logprob: -6.639777183532715
    4. ' :' → logprob: -7.014777183532715
    5. '):' → logprob: -7.514777183532715
    6. ',' → logprob: -8.264777183532715
    7. '               ' → logprob: -8.389777183532715
    8. '            ' → logprob: -9.264777183532715
    9. '            
' → logprob: -9.264777183532715
    10. '   ' → logprob: -10.014777183532715

Token 110: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1490305662155151
    2. ' 
' → logprob: -1.1490305662155151
    3. '               ' → logprob: -1.7740305662155151
    4. ' ' → logprob: -2.7740306854248047
    5. '                
' → logprob: -3.1490306854248047
    6. '            
' → logprob: -3.6490306854248047
    7. '             
' → logprob: -4.274030685424805
    8. '            ' → logprob: -4.274030685424805
    9. '                ' → logprob: -5.524030685424805
    10. '       ' → logprob: -5.524030685424805

Token 111: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3914030194282532
    2. ' curr' → logprob: -1.1414029598236084
    3. 'curr' → logprob: -6.1414031982421875
    4. 'min' → logprob: -6.2664031982421875
    5. ' ' → logprob: -8.391403198242188
    6. ' ' → logprob: -9.391403198242188
    7. '    ' → logprob: -10.391403198242188
    8. '_curr' → logprob: -10.391403198242188
    9. '	curr' → logprob: -11.141403198242188
    10. '	min' → logprob: -11.516403198242188

Token 112: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.3080716346157715e-05
    2. '_' → logprob: -11.000022888183594
    3. '_distance' → logprob: -13.500022888183594
    4. 'Distances' → logprob: -13.500022888183594
    5. '_d' → logprob: -13.750022888183594
    6. ' distances' → logprob: -14.125022888183594
    7. 'ances' → logprob: -14.750022888183594
    8. '_DIST' → logprob: -14.875022888183594
    9. 'ist' → logprob: -15.625022888183594
    10. 'dist' → logprob: -15.750022888183594

Token 113: 'ances' (ID: 3528)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.05635944381356239
    2. 'ances' → logprob: -2.9313595294952393
    3. 'dist' → logprob: -8.18135929107666
    4. 'ance' → logprob: -8.55635929107666
    5. '_' → logprob: -8.68135929107666
    6. '               ' → logprob: -8.93135929107666
    7. 'stances' → logprob: -8.93135929107666
    8. '           ' → logprob: -9.18135929107666
    9. '_distance' → logprob: -9.43135929107666
    10. 'ist' → logprob: -9.93135929107666

Token 114: '[' (ID: 58)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.003184363478794694
    2. '[' → logprob: -5.7531843185424805
    3. '[cur' → logprob: -12.75318431854248
    4. '[current' → logprob: -13.62818431854248
    5. '[node' → logprob: -14.00318431854248
    6. '[next' → logprob: -15.00318431854248
    7. ' [' → logprob: -15.12818431854248
    8. 'curr' → logprob: -15.12818431854248
    9. '(curr' → logprob: -15.50318431854248
    10. '	curr' → logprob: -15.75318431854248

Token 115: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0019589634612202644
    2. 'curr' → logprob: -6.501958847045898
    3. ' neighbor' → logprob: -7.751958847045898
    4. '_neighbor' → logprob: -11.751958847045898
    5. 'node' → logprob: -12.251958847045898
    6. '[curr' → logprob: -12.626958847045898
    7. ' curr' → logprob: -12.751958847045898
    8. 'cur' → logprob: -13.626958847045898
    9. '[' → logprob: -13.751958847045898
    10. '   ' → logprob: -14.001958847045898

Token 116: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.68153518543113e-05
    2. '           ' → logprob: -11.375057220458984
    3. '_nodes' → logprob: -11.500057220458984
    4. '_' → logprob: -12.000057220458984
    5. 'node' → logprob: -12.625057220458984
    6. ']_' → logprob: -12.750057220458984
    7. ']' → logprob: -13.000057220458984
    8. '+' → logprob: -13.125057220458984
    9. ' _' → logprob: -13.500057220458984
    10. '   ' → logprob: -13.500057220458984

Token 117: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0052966042421758175
    2. '>' → logprob: -5.25529670715332
    3. ' ' → logprob: -9.88029670715332
    4. ']' → logprob: -12.25529670715332
    5. '   ' → logprob: -12.50529670715332
    6. '[' → logprob: -14.38029670715332
    7. ']>' → logprob: -14.63029670715332
    8. '  ' → logprob: -15.13029670715332
    9. '">' → logprob: -15.13029670715332
    10. ' ]' → logprob: -15.38029670715332

Token 118: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07894377410411835
    2. '>' → logprob: -2.5789437294006348
    3. ' ' → logprob: -10.328944206237793
    4. '   ' → logprob: -11.828944206237793
    5. '[' → logprob: -12.453944206237793
    6. ' >
' → logprob: -13.703944206237793
    7. '">' → logprob: -13.828944206237793
    8. ' >
' → logprob: -14.203944206237793
    9. '```' → logprob: -14.203944206237793
    10. '  ' → logprob: -14.328944206237793

Token 119: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.04879378527402878
    2. 'curr' → logprob: -3.0487937927246094
    3. ' min' → logprob: -9.29879379272461
    4. '	curr' → logprob: -10.29879379272461
    5. ' ' → logprob: -10.79879379272461
    6. '(curr' → logprob: -11.17379379272461
    7. '_curr' → logprob: -11.17379379272461
    8. '[curr' → logprob: -11.67379379272461
    9. '    ' → logprob: -12.42379379272461
    10. ' cur' → logprob: -12.67379379272461

Token 120: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -2.236549335066229e-05
    2. '_dist' → logprob: -10.875021934509277
    3. '_' → logprob: -13.125021934509277
    4. 'distance' → logprob: -14.250021934509277
    5. '_DISTANCE' → logprob: -15.000021934509277
    6. ' _' → logprob: -15.250021934509277
    7. 'Distance' → logprob: -16.250022888183594
    8. '_d' → logprob: -17.375022888183594
    9. '+' → logprob: -17.750022888183594
    10. 'istance' → logprob: -18.250022888183594

Token 121: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008638797327876091
    2. '+' → logprob: -4.758638858795166
    3. ' plus' → logprob: -10.883638381958008
    4. ' ' → logprob: -12.508638381958008
    5. ' ' → logprob: -14.383638381958008
    6. ' +
' → logprob: -14.633638381958008
    7. '   ' → logprob: -16.008638381958008
    8. '<|end|>' → logprob: -16.008638381958008
    9. '    ' → logprob: -16.258638381958008
    10. ' +
' → logprob: -16.633638381958008

Token 122: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.126935675740242
    2. 'edge' → logprob: -2.1269357204437256
    3. ' ' → logprob: -12.876935958862305
    4. '(edge' → logprob: -13.001935958862305
    5. '=edge' → logprob: -13.251935958862305
    6. '    ' → logprob: -15.751935958862305
    7. '   ' → logprob: -16.001935958862305
    8. '_edge' → logprob: -16.126935958862305
    9. ' ' → logprob: -16.126935958862305
    10. '```' → logprob: -16.251935958862305

Token 123: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -3.1782583391759545e-05
    2. '_' → logprob: -11.125031471252441
    3. ' _' → logprob: -11.500031471252441
    4. '_w' → logprob: -12.625031471252441
    5. '_cost' → logprob: -14.000031471252441
    6. 'weight' → logprob: -14.000031471252441
    7. '_distance' → logprob: -14.625031471252441
    8. '_weights' → logprob: -14.750031471252441
    9. '_WEIGHT' → logprob: -15.125031471252441
    10. '_value' → logprob: -15.875031471252441

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002931106835603714
    2. ':
' → logprob: -6.127931118011475
    3. '):' → logprob: -7.377931118011475
    4. ' :' → logprob: -9.877930641174316
    5. '):
' → logprob: -10.377930641174316
    6. ']:' → logprob: -11.627930641174316
    7. '+' → logprob: -12.377930641174316
    8. '+:' → logprob: -12.377930641174316
    9. '           ' → logprob: -12.627930641174316
    10. '       ' → logprob: -12.877930641174316

Token 125: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5851753354072571
    2. '               ' → logprob: -0.8351753354072571
    3. '):' → logprob: -5.710175514221191
    4. '           ' → logprob: -5.835175514221191
    5. ':
' → logprob: -6.960175514221191
    6. '):
' → logprob: -7.960175514221191
    7. ')' → logprob: -7.960175514221191
    8. ' :' → logprob: -8.460175514221191
    9. '                ' → logprob: -8.585175514221191
    10. '            ' → logprob: -8.585175514221191

Token 126: ' min' (ID: 1349)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3948584794998169
    2. '               ' → logprob: -2.3948583602905273
    3. '                    ' → logprob: -2.5198583602905273
    4. '                ' → logprob: -2.8948583602905273
    5. '                    
' → logprob: -3.1448583602905273
    6. ' min' → logprob: -3.8948583602905273
    7. '                       ' → logprob: -4.894858360290527
    8. 'min' (adapté à ' min') → logprob: -5.644858360290527
    9. '                
' → logprob: -5.769858360290527
    10. '                        
' → logprob: -5.769858360290527

Token 127: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.1318875446449965e-05
    2. 'Distances' → logprob: -10.500041007995605
    3. '_' → logprob: -11.875041007995605
    4. '_DIST' → logprob: -13.250041007995605
    5. '_distance' → logprob: -13.750041007995605
    6. 'dist' → logprob: -13.750041007995605
    7. 'Dist' → logprob: -14.000041007995605
    8. '_d' → logprob: -14.500041007995605
    9. ' distances' → logprob: -15.125041007995605
    10. '_D' → logprob: -15.125041007995605

Token 128: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.05943376570940018
    2. '_dist' → logprob: -2.934433698654175
    3. '               ' → logprob: -6.184433937072754
    4. '           ' → logprob: -7.809433937072754
    5. 'dist' → logprob: -7.934433937072754
    6. '[' → logprob: -8.184433937072754
    7. '_' → logprob: -8.184433937072754
    8. '                   ' → logprob: -8.559433937072754
    9. 'stances' → logprob: -8.559433937072754
    10. '   ' → logprob: -9.184433937072754

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -13.500006675720215
    3. ' [' → logprob: -13.625006675720215
    4. '[node' → logprob: -14.250006675720215
    5. '<|end|>' → logprob: -14.500006675720215
    6. '               ' → logprob: -14.875006675720215
    7. '[
' → logprob: -14.875006675720215
    8. '[next' → logprob: -15.375006675720215
    9. '                   ' → logprob: -15.875006675720215
    10. '[current' → logprob: -16.1250057220459

Token 130: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.001176893594674766
    2. ' neighbor' → logprob: -6.751176834106445
    3. '[' → logprob: -12.876176834106445
    4. '_neighbor' → logprob: -13.501176834106445
    5. 'curr' → logprob: -14.001176834106445
    6. 'node' → logprob: -15.001176834106445
    7. 'neighbors' → logprob: -15.376176834106445
    8. ' ' → logprob: -15.501176834106445
    9. ']' → logprob: -15.626176834106445
    10. '               ' → logprob: -16.501176834106445

Token 131: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.005434270016849041
    2. 'ighbor' → logprob: -6.255434036254883
    3. '_neighbor' → logprob: -6.630434036254883
    4. 'or' → logprob: -7.005434036254883
    5. '_distance' → logprob: -8.380434036254883
    6. 'ance' → logprob: -8.880434036254883
    7. '[node' → logprob: -9.005434036254883
    8. '_' → logprob: -9.005434036254883
    9. '               ' → logprob: -9.380434036254883
    10. '_neighbors' → logprob: -9.505434036254883

Token 132: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15507745742797852
    2. ']' → logprob: -2.0300774574279785
    3. '=' → logprob: -4.5300774574279785
    4. ' ]' → logprob: -6.7800774574279785
    5. ']=' → logprob: -7.9050774574279785
    6. ')' → logprob: -10.65507698059082
    7. ' ' → logprob: -12.15507698059082
    8. ' =
' → logprob: -13.03007698059082
    9. '    ' → logprob: -13.65507698059082
    10. ',' → logprob: -13.65507698059082

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004086708649992943
    2. '=' → logprob: -5.504086494445801
    3. ' =
' → logprob: -12.2540864944458
    4. ' ' → logprob: -13.5040864944458
    5. '               ' → logprob: -14.6290864944458
    6. '[' → logprob: -14.8790864944458
    7. '                   ' → logprob: -15.0040864944458
    8. '                ' → logprob: -15.1290864944458
    9. '           ' → logprob: -16.129087448120117
    10. ']' → logprob: -16.254087448120117

Token 134: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.011060908436775208
    2. 'curr' → logprob: -4.51106071472168
    3. ' ' → logprob: -11.88606071472168
    4. '(curr' → logprob: -12.63606071472168
    5. ' ' → logprob: -14.01106071472168
    6. '	curr' → logprob: -14.26106071472168
    7. '_curr' → logprob: -14.26106071472168
    8. '[curr' → logprob: -15.01106071472168
    9. 'Curr' → logprob: -16.01106071472168
    10. '.curr' → logprob: -16.38606071472168

Token 135: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -6.869017852295656e-06
    2. '_dist' → logprob: -12.250006675720215
    3. 'distance' → logprob: -13.375006675720215
    4. '_' → logprob: -15.500006675720215
    5. '_DISTANCE' → logprob: -15.750006675720215
    6. ' _' → logprob: -16.37500762939453
    7. 't' → logprob: -17.25000762939453
    8. 'Distance' → logprob: -17.25000762939453
    9. ' distance' → logprob: -18.25000762939453
    10. 'istance' → logprob: -19.50000762939453

Token 136: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008618593215942383
    2. '+' → logprob: -4.758618354797363
    3. ' plus' → logprob: -13.258618354797363
    4. ' ' → logprob: -13.883618354797363
    5. ' ' → logprob: -14.383618354797363
    6. '[' → logprob: -14.508618354797363
    7. ' +
' → logprob: -16.38361930847168
    8. 'import' → logprob: -17.25861930847168
    9. '<|end|>' → logprob: -17.38361930847168
    10. ' +
' → logprob: -17.88361930847168

Token 137: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.04859157279133797
    2. 'edge' → logprob: -3.0485916137695312
    3. '(edge' → logprob: -13.548591613769531
    4. '_edge' → logprob: -14.048591613769531
    5. '=edge' → logprob: -14.298591613769531
    6. ' ' → logprob: -14.298591613769531
    7. ' space' → logprob: -15.673591613769531
    8. ' weight' → logprob: -15.673591613769531
    9. ' ' → logprob: -15.798591613769531
    10. ' 
' → logprob: -16.17359161376953

Token 138: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -5.049755782238208e-05
    2. '_' → logprob: -10.25005054473877
    3. 'weight' → logprob: -11.37505054473877
    4. ' _' → logprob: -14.00005054473877
    5. '_weights' → logprob: -14.00005054473877
    6. '_w' → logprob: -14.25005054473877
    7. '_we' → logprob: -15.75005054473877
    8. '_distance' → logprob: -15.87505054473877
    9. '_word' → logprob: -16.125049591064453
    10. '_WEIGHT' → logprob: -16.125049591064453

Token 139: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.171581091824919e-05
    2. '                
' → logprob: -11.00007152557373
    3. '              ' → logprob: -11.75007152557373
    4. '                   ' → logprob: -11.75007152557373
    5. '           ' → logprob: -11.87507152557373
    6. '                ' → logprob: -11.87507152557373
    7. 'heap' → logprob: -12.12507152557373
    8. ')' → logprob: -12.37507152557373
    9. '<|end|>' → logprob: -12.37507152557373
    10. ',' → logprob: -12.50007152557373

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005028736195527017
    2. ')' → logprob: -9.125502586364746
    3. '                
' → logprob: -9.125502586364746
    4. '                   ' → logprob: -9.250502586364746
    5. '                ' → logprob: -9.750502586364746
    6. '           ' → logprob: -10.250502586364746
    7. '              ' → logprob: -10.500502586364746
    8. ',' → logprob: -10.750502586364746
    9. '<|end|>' → logprob: -11.875502586364746
    10. '       ' → logprob: -12.000502586364746

Token 141: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.09189263731241226
    2. 'heap' (adapté à ' heap') → logprob: -2.466892719268799
    3. '               ' → logprob: -5.966892719268799
    4. '                   ' → logprob: -9.09189224243164
    5. ' he' → logprob: -9.34189224243164
    6. 'he' → logprob: -9.84189224243164
    7. '(heap' → logprob: -9.84189224243164
    8. '           ' → logprob: -9.96689224243164
    9. '                       ' → logprob: -11.84189224243164
    10. '   ' → logprob: -12.09189224243164

Token 142: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. 'p' → logprob: -15.375000953674316
    3. '.push' → logprob: -15.750000953674316
    4. '.he' → logprob: -16.25
    5. '               ' → logprob: -17.125
    6. 'push' → logprob: -17.5
    7. 'qp' → logprob: -17.875
    8. '.heap' → logprob: -18.125
    9. '```' → logprob: -18.25
    10. '.append' → logprob: -18.5

Token 143: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.9146995327901095e-05
    2. '.heap' → logprob: -11.625019073486328
    3. '.' → logprob: -12.000019073486328
    4. '.push' → logprob: -13.250019073486328
    5. ' he' → logprob: -14.125019073486328
    6. 'he' → logprob: -14.625019073486328
    7. 'q' → logprob: -14.625019073486328
    8. ' .' → logprob: -15.500019073486328
    9. '.py' → logprob: -16.625019073486328
    10. '.q' → logprob: -16.875019073486328

Token 144: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.910643762443215e-05
    2. 'ap' → logprob: -9.500079154968262
    3. 'pp' → logprob: -12.500079154968262
    4. '```' → logprob: -16.125078201293945
    5. 'a' → logprob: -16.250078201293945
    6. 'push' → logprob: -16.750078201293945
    7. 'appen' → logprob: -16.750078201293945
    8. 'appe' → logprob: -17.500078201293945
    9. 'ап' → logprob: -17.750078201293945
    10. 'append' → logprob: -17.750078201293945

Token 145: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00010092071170220152
    2. 'push' → logprob: -9.250101089477539
    3. 'app' → logprob: -13.125101089477539
    4. 'op' → logprob: -13.875101089477539
    5. 'pp' → logprob: -14.750101089477539
    6. 'p' → logprob: -15.000101089477539
    7. '```' → logprob: -15.000101089477539
    8. 'us' → logprob: -16.37510108947754
    9. 'u' → logprob: -16.50010108947754
    10. 'sh' → logprob: -16.75010108947754

Token 146: '(priority' (ID: 142802)
  Prédit: '(priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(priority' → logprob: -0.006007129326462746
    2. '(' → logprob: -5.131007194519043
    3. ' (' → logprob: -9.631007194519043
    4. '(
' → logprob: -12.881007194519043
    5. '(permission' → logprob: -12.881007194519043
    6. '(pr' → logprob: -13.131007194519043
    7. 'priority' → logprob: -13.381007194519043
    8. '(p' → logprob: -14.506007194519043
    9. '<|end|>' → logprob: -14.631007194519043
    10. '(policy' → logprob: -14.631007194519043

Token 147: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.00021962920436635613
    2. '_priority' → logprob: -8.750219345092773
    3. 'priority' → logprob: -10.375219345092773
    4. '(priority' → logprob: -11.375219345092773
    5. 'queue' → logprob: -11.750219345092773
    6. '_' → logprob: -12.875219345092773
    7. '```' → logprob: -13.000219345092773
    8. 's' → logprob: -13.875219345092773
    9. 'q' → logprob: -14.000219345092773
    10. '       ' → logprob: -14.250219345092773

Token 148: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7055650949478149
    2. ' (' → logprob: -1.455565094947815
    3. ',' → logprob: -1.705565094947815
    4. '((' → logprob: -2.9555649757385254
    5. '(priority' → logprob: -3.5805649757385254
    6. ')' → logprob: -5.330564975738525
    7. ',(' → logprob: -6.455564975738525
    8. '(heap' → logprob: -6.580564975738525
    9. ' ,' → logprob: -7.080564975738525
    10. ' ((' → logprob: -7.955564975738525

Token 149: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14815418422222137
    2. '(curr' → logprob: -2.1481542587280273
    3. '(' → logprob: -3.8981542587280273
    4. '(min' → logprob: -7.773154258728027
    5. '(c' → logprob: -8.648154258728027
    6. '(cur' → logprob: -9.648154258728027
    7. '(current' → logprob: -10.273154258728027
    8. '(cost' → logprob: -11.773154258728027
    9. '(distance' → logprob: -12.898154258728027
    10. ' ' → logprob: -13.023154258728027

Token 150: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5732994079589844
    2. 'curr' → logprob: -0.9482994079589844
    3. ' min' → logprob: -3.4482994079589844
    4. ' curr' → logprob: -4.073299407958984
    5. '(curr' → logprob: -10.323299407958984
    6. '(min' → logprob: -10.573299407958984
    7. 'dist' → logprob: -11.073299407958984
    8. '   ' → logprob: -12.073299407958984
    9. ' ' → logprob: -12.448299407958984
    10. '_curr' → logprob: -12.698299407958984

Token 151: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -9.686778503237292e-05
    2. '_distance' → logprob: -9.250097274780273
    3. 'Distances' → logprob: -15.375097274780273
    4. '_DIST' → logprob: -15.625097274780273
    5. 'dist' → logprob: -15.750097274780273
    6. '_d' → logprob: -16.375097274780273
    7. '_lengths' → logprob: -17.250097274780273
    8. '_' → logprob: -17.250097274780273
    9. ' distances' → logprob: -17.250097274780273
    10. '_dis' → logprob: -17.625097274780273

Token 152: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.017925506457686424
    2. '_dist' → logprob: -4.76792573928833
    3. '_distance' → logprob: -6.39292573928833
    4. ' distances' → logprob: -6.76792573928833
    5. '_' → logprob: -7.01792573928833
    6. 'aces' → logprob: -7.14292573928833
    7. 'Distances' → logprob: -7.14292573928833
    8. 'ist' → logprob: -7.14292573928833
    9. 'stances' → logprob: -7.51792573928833
    10. 'dist' → logprob: -7.76792573928833

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '<|end|>' → logprob: -14.750000953674316
    3. '[
' → logprob: -15.125000953674316
    4. '```' → logprob: -16.000001907348633
    5. '_neighbor' → logprob: -16.250001907348633
    6. ',' → logprob: -16.375001907348633
    7. ')' → logprob: -16.500001907348633
    8. '[node' → logprob: -16.875001907348633
    9. ' [' → logprob: -16.875001907348633
    10. ')[' → logprob: -17.000001907348633

Token 154: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -3.4881879400927573e-05
    2. ' neighbor' → logprob: -10.625035285949707
    3. '_neighbor' → logprob: -11.750035285949707
    4. '[' → logprob: -12.875035285949707
    5. 'ighbor' → logprob: -17.25003433227539
    6. '(ne' → logprob: -18.50003433227539
    7. 'neighbors' → logprob: -18.62503433227539
    8. 'Neighbor' → logprob: -19.25003433227539
    9. 'node' → logprob: -19.37503433227539
    10. '               ' → logprob: -19.37503433227539

Token 155: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0002831464516930282
    2. '[' → logprob: -9.500283241271973
    3. '[node' → logprob: -9.625283241271973
    4. '_neighbor' → logprob: -9.625283241271973
    5. '_dist' → logprob: -11.375283241271973
    6. '_index' → logprob: -11.500283241271973
    7. '_nodes' → logprob: -11.625283241271973
    8. 'node' → logprob: -11.875283241271973
    9. '_neighbors' → logprob: -11.875283241271973
    10. '_distance' → logprob: -11.875283241271973

Token 156: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001182607957161963
    2. ')' → logprob: -7.001182556152344
    3. '))' → logprob: -9.001182556152344
    4. '<|end|>' → logprob: -9.251182556152344
    5. ',)' → logprob: -10.501182556152344
    6. ' ,' → logprob: -11.751182556152344
    7. ',
' → logprob: -12.501182556152344
    8. '),' → logprob: -13.001182556152344
    9. '   ' → logprob: -13.501182556152344
    10. ')))' → logprob: -13.751182556152344

Token 157: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.1128268837928772
    2. 'neighbor' → logprob: -2.2378268241882324
    3. ' neighbour' → logprob: -13.86282730102539
    4. ' neighboring' → logprob: -14.11282730102539
    5. '_neighbor' → logprob: -14.48782730102539
    6. ')' → logprob: -14.61282730102539
    7. ' ' → logprob: -14.98782730102539
    8. 'Neighbor' → logprob: -15.23782730102539
    9. 'ighbor' → logprob: -15.23782730102539
    10. 'ne' → logprob: -15.48782730102539

Token 158: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.841743303695694e-05
    2. '_' → logprob: -9.75009822845459
    3. ')' → logprob: -11.87509822845459
    4. '_neighbor' → logprob: -11.87509822845459
    5. 'node' → logprob: -12.25009822845459
    6. '_n' → logprob: -12.75009822845459
    7. 'neighbor' → logprob: -12.87509822845459
    8. ')_' → logprob: -12.87509822845459
    9. '_nodes' → logprob: -13.62509822845459
    10. 'ighbor' → logprob: -13.75009822845459

Token 159: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16029570996761322
    2. ')' → logprob: -1.9102957248687744
    3. '))
' → logprob: -9.785295486450195
    4. ')
' → logprob: -12.035295486450195
    5. ')))' → logprob: -12.035295486450195
    6. ' ))' → logprob: -13.285295486450195
    7. '       ' → logprob: -14.535295486450195
    8. '   ' → logprob: -14.910295486450195
    9. ' )' → logprob: -14.910295486450195
    10. '           ' → logprob: -15.535295486450195

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295894145965576
    2. '
' → logprob: -0.9045894145965576
    3. 'return' → logprob: -5.779589653015137
    4. '    
' → logprob: -6.154589653015137
    5. ')' → logprob: -7.779589653015137
    6. ' return' → logprob: -8.279589653015137
    7. '<|end|>' → logprob: -8.404589653015137
    8. '```' → logprob: -9.779589653015137
    9. '\n' → logprob: -10.029589653015137
    10. ')
' → logprob: -10.154589653015137

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3390212953090668
    2. '   ' → logprob: -1.8390213251113892
    3. '
' → logprob: -2.0890212059020996
    4. ' return' → logprob: -5.5890212059021
    5. '    
' → logprob: -7.2140212059021
    6. '  
' → logprob: -9.714021682739258
    7. '	return' → logprob: -9.964021682739258
    8. ':return' → logprob: -10.214021682739258
    9. ' ' → logprob: -10.339021682739258
    10. '```' → logprob: -10.589021682739258

Token 162: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0007105246186256409
    2. 'min' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.000710487365723
    4. ' ' → logprob: -15.375710487365723
    5. '[min' → logprob: -16.25071144104004
    6. '	min' → logprob: -17.62571144104004
    7. '(min' → logprob: -19.12571144104004
    8. ' max' → logprob: -21.00071144104004
    9. '_min' → logprob: -21.00071144104004
    10. ' m' → logprob: -21.12571144104004

Token 163: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -10.750022888183594
    3. '_d' → logprob: -14.500022888183594
    4. '_dis' → logprob: -14.500022888183594
    5. '_distance' → logprob: -14.500022888183594
    6. 'dist' → logprob: -16.625022888183594
    7. 'Distances' → logprob: -17.500022888183594
    8. '_DIST' → logprob: -18.000022888183594
    9. '_

' → logprob: -18.375022888183594
    10. '_
' → logprob: -18.625022888183594

Token 164: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -4.644463479053229e-05
    2. 'ations' → logprob: -10.375046730041504
    3. ' distances' → logprob: -12.500046730041504
    4. 'Distances' → logprob: -12.750046730041504
    5. 'aces' → logprob: -13.000046730041504
    6. 'a' → logprob: -13.875046730041504
    7. 'stances' → logprob: -13.875046730041504
    8. '_' → logprob: -14.000046730041504
    9. 'es' → logprob: -14.125046730041504
    10. 'u' → logprob: -14.875046730041504

Token 165: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0684015080332756
    2. '<|end|>' → logprob: -3.318401575088501
    3. 'def' → logprob: -4.193401336669922
    4. '#' → logprob: -5.193401336669922
    5. '[' → logprob: -5.818401336669922
    6. '\n' → logprob: -6.193401336669922
    7. '```' → logprob: -6.443401336669922
    8. '

' → logprob: -6.818401336669922
    9. 'newline' → logprob: -7.818401336669922
    10. '[
' → logprob: -8.693401336669922

Token 166: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21991202235221863
    2. '
' → logprob: -2.094912052154541
    3. '#' → logprob: -2.844912052154541
    4. '\n' → logprob: -5.469912052154541
    5. '[' → logprob: -5.594912052154541
    6. '```' → logprob: -5.719912052154541
    7. '<|end|>' → logprob: -6.719912052154541
    8. '\' → logprob: -6.969912052154541
    9. 'n' → logprob: -7.719912052154541
    10. '

' → logprob: -7.969912052154541

Token 167: '_reader' (ID: 55777)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40873152017593384
    2. '_' → logprob: -1.533731460571289
    3. '_data' → logprob: -3.283731460571289
    4. '(' → logprob: -3.533731460571289
    5. '_line' → logprob: -3.658731460571289
    6. '_lines' → logprob: -3.908731460571289
    7. ' =' → logprob: -5.783731460571289
    8. '_list' → logprob: -7.033731460571289
    9. '=' → logprob: -7.533731460571289
    10. 's' → logprob: -7.533731460571289

Token 168: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026785893365740776
    2. '=' → logprob: -4.276785850524902
    3. ' =' → logprob: -5.026785850524902
    4. '.' → logprob: -6.026785850524902
    5. '()' → logprob: -6.401785850524902
    6. ':' → logprob: -6.901785850524902
    7. '[:]' → logprob: -8.401785850524902
    8. '[' → logprob: -8.651785850524902
    9. '.readline' → logprob: -8.776785850524902
    10. '_' → logprob: -9.151785850524902

Token 169: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08689716458320618
    2. ' sys' → logprob: -2.586897134780884
    3. '(sys' → logprob: -4.836897373199463
    4. 'iter' → logprob: -10.961896896362305
    5. '	sys' → logprob: -11.461896896362305
    6. '=sys' → logprob: -11.586896896362305
    7. ' iter' → logprob: -13.336896896362305
    8. ' (' → logprob: -13.336896896362305
    9. '(' → logprob: -13.711896896362305
    10. '(lambda' → logprob: -14.336896896362305

Token 170: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01423567347228527
    2. '.' → logprob: -4.264235496520996
    3. '.argv' → logprob: -9.889235496520996
    4. '.stdout' → logprob: -11.014235496520996
    5. '.std' → logprob: -12.764235496520996
    6. '.readline' → logprob: -13.889235496520996
    7. '.input' → logprob: -14.264235496520996
    8. ' .' → logprob: -15.639235496520996
    9. '.st' → logprob: -15.764235496520996
    10. 'stdin' → logprob: -17.014236450195312

Token 171: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.022461429238319397
    2. '.' → logprob: -3.897461414337158
    3. '.read' → logprob: -6.647461414337158
    4. '.readlines' → logprob: -7.397461414337158
    5. '.buffer' → logprob: -12.897461891174316
    6. ' .' → logprob: -13.897461891174316
    7. 'read' → logprob: -14.022461891174316
    8. '=' → logprob: -14.522461891174316
    9. '.write' → logprob: -14.522461891174316
    10. '```' → logprob: -14.772461891174316

Token 172: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028302724240347743
    2. '()
' → logprob: -8.375283241271973
    3. '(' → logprob: -10.500283241271973
    4. '()

' → logprob: -11.875283241271973
    5. 'def' → logprob: -12.250283241271973
    6. 'while' → logprob: -12.375283241271973
    7. '().' → logprob: -12.625283241271973
    8. '())' → logprob: -13.875283241271973
    9. 'for' → logprob: -14.250283241271973
    10. '(
' → logprob: -14.375283241271973

Token 173: 'vertex' (ID: 25298)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038543786853551865
    2. 'num' → logprob: -4.288543701171875
    3. 'for' → logprob: -4.913543701171875
    4. 'while' → logprob: -5.663543701171875
    5. 'def' → logprob: -5.788543701171875
    6. '
' → logprob: -6.663543701171875
    7. 'number' → logprob: -6.663543701171875
    8. '(n' → logprob: -6.913543701171875
    9. 'q' → logprob: -7.163543701171875
    10. 'N' → logprob: -7.288543701171875

Token 174: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1670844405889511
    2. 's' → logprob: -2.0420844554901123
    3. '_s' → logprob: -3.9170844554901123
    4. '_' → logprob: -5.542084217071533
    5. ' s' → logprob: -8.792084693908691
    6. '_counts' → logprob: -9.917084693908691
    7. ' _' → logprob: -10.167084693908691
    8. '_num' → logprob: -11.417084693908691
    9. '_cnt' → logprob: -11.417084693908691
    10. '_COUNT' → logprob: -11.667084693908691

Token 175: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6836066842079163
    2. ',' → logprob: -1.3086066246032715
    3. ' =' → logprob: -1.5586066246032715
    4. '=' → logprob: -4.4336066246032715
    5. ' ' → logprob: -6.0586066246032715
    6. ')' → logprob: -9.43360710144043
    7. ' )' → logprob: -10.18360710144043
    8. ' =
' → logprob: -10.18360710144043
    9. '   ' → logprob: -10.30860710144043
    10. '_' → logprob: -10.30860710144043

Token 176: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.5759975910186768
    2. 'edge' → logprob: -0.8259975910186768
    3. ' edges' → logprob: -10.825997352600098
    4. 'edges' → logprob: -10.825997352600098
    5. '_edge' → logprob: -12.075997352600098
    6. '=edge' → logprob: -12.450997352600098
    7. ' ' → logprob: -13.075997352600098
    8. ' graph' → logprob: -13.575997352600098
    9. 'vertex' → logprob: -13.950997352600098
    10. 'graph' → logprob: -14.200997352600098

Token 177: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1639077216386795
    2. '_' → logprob: -2.413907766342163
    3. 's' → logprob: -2.788907766342163
    4. '_s' → logprob: -8.788908004760742
    5. ' _' → logprob: -9.913908004760742
    6. '_counts' → logprob: -12.038908004760742
    7. '_c' → logprob: -12.788908004760742
    8. 'count' → logprob: -13.163908004760742
    9. '_COUNT' → logprob: -13.413908004760742
    10. '_counter' → logprob: -13.663908004760742

Token 178: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892746478319168
    2. '=' → logprob: -2.578927516937256
    3. ',' → logprob: -10.578927040100098
    4. ' ' → logprob: -11.828927040100098
    5. '=input' → logprob: -12.953927040100098
    6. ' ,' → logprob: -13.953927040100098
    7. ' =
' → logprob: -14.703927040100098
    8. ')' → logprob: -15.203927040100098
    9. '=line' → logprob: -15.578927040100098
    10. ' =[' → logprob: -16.078927993774414

Token 179: ' start' (ID: 1604)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.4901808798313141
    2. ' source' → logprob: -1.3651808500289917
    3. 'start' → logprob: -2.3651809692382812
    4. ' start' → logprob: -3.7401809692382812
    5. 'query' → logprob: -5.740180969238281
    6. 'target' → logprob: -5.990180969238281
    7. 'special' → logprob: -6.490180969238281
    8. ' query' → logprob: -6.740180969238281
    9. '_' → logprob: -7.365180969238281
    10. 's' → logprob: -7.490180969238281

Token 180: '_state' (ID: 9479)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01890343613922596
    2. '_node' → logprob: -4.7689032554626465
    3. '_vertex' → logprob: -5.0189032554626465
    4. '_index' → logprob: -5.7689032554626465
    5. ' =' → logprob: -8.768903732299805
    6. '_point' → logprob: -9.018903732299805
    7. '_=' → logprob: -9.643903732299805
    8. ' _' → logprob: -10.018903732299805
    9. '=' → logprob: -10.143903732299805
    10. '=_' → logprob: -10.893903732299805

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3893979787826538
    2. ' =' → logprob: -1.1393979787826538
    3. '_' → logprob: -6.014398097991943
    4. ',' → logprob: -10.389397621154785
    5. '_index' → logprob: -10.639397621154785
    6. '_idx' → logprob: -11.639397621154785
    7. ')' → logprob: -12.139397621154785
    8. ' ' → logprob: -12.514397621154785
    9. '_=' → logprob: -13.514397621154785
    10. '_id' → logprob: -13.764397621154785

Token 182: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.010461919009685516
    2. 'map' → logprob: -4.635461807250977
    3. ' input' → logprob: -7.385461807250977
    4. 'input' → logprob: -9.510461807250977
    5. ' list' → logprob: -12.260461807250977
    6. ' [' → logprob: -12.385461807250977
    7. '[' → logprob: -13.260461807250977
    8. ' ' → logprob: -15.385461807250977
    9. '(map' → logprob: -15.385461807250977
    10. 'list' → logprob: -16.010461807250977

Token 183: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17762310802936554
    2. '(' → logprob: -1.9276231527328491
    3. '(input' → logprob: -4.302623271942139
    4. '(str' → logprob: -6.052623271942139
    5. '(lambda' → logprob: -6.677623271942139
    6. '(
' → logprob: -10.67762279510498
    7. '<|end|>' → logprob: -11.05262279510498
    8. '(eval' → logprob: -11.42762279510498
    9. 'int' → logprob: -11.67762279510498
    10. '<int' → logprob: -12.42762279510498

Token 184: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15120406448841095
    2. ',input' → logprob: -2.1512041091918945
    3. 'input' → logprob: -4.4012041091918945
    4. '(' → logprob: -5.2762041091918945
    5. ')' → logprob: -5.7762041091918945
    6. ',' → logprob: -6.4012041091918945
    7. '(sys' → logprob: -6.7762041091918945
    8. '=input' → logprob: -8.026204109191895
    9. 'sys' → logprob: -8.401204109191895
    10. '()' → logprob: -10.901204109191895

Token 185: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197015196084976
    2. ' input' → logprob: -2.8119702339172363
    3. 'sys' → logprob: -13.436969757080078
    4. ')' → logprob: -14.561969757080078
    5. '(input' → logprob: -15.811969757080078
    6. ',input' → logprob: -15.811969757080078
    7. '=input' → logprob: -16.311969757080078
    8. ' sys' → logprob: -16.436969757080078
    9. '_input' → logprob: -16.936969757080078
    10. '	input' → logprob: -18.061969757080078

Token 186: '_reader' (ID: 55777)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.16128088533878326
    2. '_reader' → logprob: -1.911280870437622
    3. '.readline' → logprob: -7.411281108856201
    4. '()' → logprob: -7.911281108856201
    5. '())' → logprob: -10.411280632019043
    6. '_read' → logprob: -10.786280632019043
    7. 'Reader' → logprob: -11.161280632019043
    8. '()[' → logprob: -12.411280632019043
    9. ')' → logprob: -13.036280632019043
    10. '()
' → logprob: -13.161280632019043

Token 187: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011021859245374799
    2. '()' → logprob: -9.125110626220703
    3. ' ().' → logprob: -14.000110626220703
    4. '(' → logprob: -15.000110626220703
    5. '()
' → logprob: -16.375110626220703
    6. '.readline' → logprob: -17.500110626220703
    7. '()

' → logprob: -19.250110626220703
    8. ' ()' → logprob: -19.250110626220703
    9. ' ' → logprob: -19.375110626220703
    10. '())' → logprob: -19.500110626220703

Token 188: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38855504989624023
    2. 'split' → logprob: -1.1385550498962402
    3. 'rstrip' → logprob: -6.38855504989624
    4. ' split' → logprob: -14.263555526733398
    5. ' strip' → logprob: -14.388555526733398
    6. 's' → logprob: -15.138555526733398
    7. '().' → logprob: -15.638555526733398
    8. 'read' → logprob: -16.3885555267334
    9. '(split' → logprob: -16.7635555267334
    10. 'replace' → logprob: -17.2635555267334

Token 189: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11156298965215683
    2. ')' → logprob: -2.361562967300415
    3. '()' → logprob: -4.486563205718994
    4. '(' → logprob: -10.736562728881836
    5. '(),' → logprob: -12.361562728881836
    6. '())
' → logprob: -12.736562728881836
    7. ' )' → logprob: -13.736562728881836
    8. '))' → logprob: -14.861562728881836
    9. ' ())' → logprob: -14.986562728881836
    10. '()))' → logprob: -15.111562728881836

Token 190: 'adj' (ID: 57001)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22105763852596283
    2. 'adj' → logprob: -1.721057653427124
    3. '\n' → logprob: -5.221057415008545
    4. '_adj' → logprob: -5.471057415008545
    5. 'edges' → logprob: -6.221057415008545
    6. 'graph' → logprob: -6.346057415008545
    7. ' 
' → logprob: -6.596057415008545
    8. '
' → logprob: -7.346057415008545
    9. ' adj' → logprob: -7.346057415008545
    10. ')' → logprob: -7.346057415008545

Token 191: 'acency' (ID: 118557)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.368984107510187e-05
    2. '_' → logprob: -11.000033378601074
    3. '_lst' → logprob: -11.250033378601074
    4. '_lists' → logprob: -13.625033378601074
    5. '_lista' → logprob: -14.375033378601074
    6. '_array' → logprob: -14.750033378601074
    7. '_li' → logprob: -15.000033378601074
    8. '[_' → logprob: -15.625033378601074
    9. ')_' → logprob: -15.750033378601074
    10. '_LIST' → logprob: -15.750033378601074

Token 192: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.6776029699249193e-05
    2. '_lst' → logprob: -10.87502670288086
    3. '_lists' → logprob: -12.75002670288086
    4. '_' → logprob: -12.87502670288086
    5. ' _' → logprob: -14.25002670288086
    6. '_li' → logprob: -14.87502670288086
    7. '_l' → logprob: -15.25002670288086
    8. '_lista' → logprob: -15.50002670288086
    9. '_array' → logprob: -15.87502670288086
    10. '_adj' → logprob: -16.00002670288086

Token 193: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01110087800770998
    2. ' [[]' → logprob: -4.511100769042969
    3. '([' → logprob: -10.386100769042969
    4. '[]' → logprob: -11.261100769042969
    5. '(' → logprob: -13.136100769042969
    6. '[:]' → logprob: -13.261100769042969
    7. ' ' → logprob: -14.261100769042969
    8. ' [' → logprob: -14.386100769042969
    9. '[List' → logprob: -14.386100769042969
    10. '   ' → logprob: -14.511100769042969

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25198283791542053
    2. 'for' → logprob: -1.5019828081130981
    3. ')' → logprob: -10.001982688903809
    4. ']' → logprob: -12.126982688903809
    5. '(vertex' → logprob: -14.126982688903809
    6. ',' → logprob: -14.251982688903809
    7. '	for' → logprob: -14.751982688903809
    8. 'vertex' → logprob: -15.626982688903809
    9. ' ' → logprob: -15.626982688903809
    10. 'range' → logprob: -15.751982688903809

Token 195: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015825068578124046
    2. ' range' → logprob: -4.765825271606445
    3. 'range' → logprob: -5.265825271606445
    4. ' _' → logprob: -6.265825271606445
    5. '_range' → logprob: -9.265825271606445
    6. ' in' → logprob: -11.265825271606445
    7. 'in' → logprob: -12.640825271606445
    8. '(range' → logprob: -12.765825271606445
    9. ' ' → logprob: -13.265825271606445
    10. '_in' → logprob: -13.390825271606445

Token 196: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3176523447036743
    2. ' in' → logprob: -1.3176523447036743
    3. 'range' → logprob: -5.442652225494385
    4. ' ' → logprob: -10.317652702331543
    5. ' range' → logprob: -11.567652702331543
    6. 'vertex' → logprob: -12.317652702331543
    7. '  ' → logprob: -13.317652702331543
    8. 'i' → logprob: -13.567652702331543
    9. 'ange' → logprob: -13.567652702331543
    10. 'x' → logprob: -14.067652702331543

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079589620232582
    2. ' range' → logprob: -5.504079818725586
    3. ' ' → logprob: -14.629079818725586
    4. '   ' → logprob: -15.629079818725586
    5. '(range' → logprob: -15.754079818725586
    6. 'rang' → logprob: -16.004079818725586
    7. '	range' → logprob: -16.379079818725586
    8. '  ' → logprob: -16.629079818725586
    9. 'ran' → logprob: -16.629079818725586
    10. 'r' → logprob: -17.004079818725586

Token 198: '(vertex' (ID: 96471)
  Prédit: '(vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -6.869017852295656e-06
    2. 'vertex' → logprob: -12.000006675720215
    3. '(' → logprob: -14.625006675720215
    4. ' vertex' → logprob: -17.00000762939453
    5. ' (' → logprob: -17.12500762939453
    6. '(vertices' → logprob: -17.75000762939453
    7. '	vertex' → logprob: -18.12500762939453
    8. '(vehicle' → logprob: -19.25000762939453
    9. '(Vertex' → logprob: -19.37500762939453
    10. '_vertex' → logprob: -21.37500762939453

Token 199: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1756367712223437e-05
    2. 'count' → logprob: -11.500011444091797
    3. 's' → logprob: -13.625011444091797
    4. '_' → logprob: -15.750011444091797
    5. '_COUNT' → logprob: -16.750011444091797
    6. ' count' → logprob: -17.125011444091797
    7. '_counts' → logprob: -17.125011444091797
    8. ')' → logprob: -17.250011444091797
    9. '_c' → logprob: -17.250011444091797
    10. 'Count' → logprob: -17.375011444091797

Token 200: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.2729995988775045e-06
    2. ']' → logprob: -12.875006675720215
    3. ' )' → logprob: -13.250006675720215
    4. ')' → logprob: -13.500006675720215
    5. ')]
' → logprob: -15.500006675720215
    6. ' ]' → logprob: -15.750006675720215
    7. '+' → logprob: -17.2500057220459
    8. '>]' → logprob: -18.0000057220459
    9. '')]' → logprob: -18.1250057220459
    10. ')],' → logprob: -18.1250057220459

Token 201: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018815194489434361
    2. '
' → logprob: -6.6268815994262695
    3. ' for' → logprob: -7.5018815994262695
    4. 'n' → logprob: -14.25188159942627
    5. ' 
' → logprob: -14.37688159942627
    6. '\n' → logprob: -14.75188159942627
    7. '\
' → logprob: -15.50188159942627
    8. '	for' → logprob: -15.62688159942627
    9. 'range' → logprob: -15.62688159942627
    10. '' → logprob: -15.75188159942627

Token 202: ' start' (ID: 1604)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.04065335541963577
    2. ' vertex' → logprob: -4.415653228759766
    3. 'edge' → logprob: -4.415653228759766
    4. ' start' → logprob: -4.540653228759766
    5. ' __' → logprob: -6.415653228759766
    6. ' not' → logprob: -7.165653228759766
    7. 'vertex' → logprob: -7.290653228759766
    8. 'start' → logprob: -7.665653228759766
    9. '__' → logprob: -7.790653228759766
    10. ' ' → logprob: -7.790653228759766

Token 203: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.003173791104927659
    2. '_' → logprob: -6.253173828125
    3. '_states' → logprob: -7.128173828125
    4. ' _' → logprob: -8.628173828125
    5. '_stat' → logprob: -9.503173828125
    6. '_index' → logprob: -10.128173828125
    7. '_State' → logprob: -10.878173828125
    8. '>' → logprob: -11.003173828125
    9. '```' → logprob: -11.003173828125
    10. '_STATE' → logprob: -11.628173828125

Token 204: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2001393586397171
    2. '>' → logprob: -2.950139284133911
    3. ' ==' → logprob: -3.200139284133911
    4. ' !=' → logprob: -3.325139284133911
    5. ' >=' → logprob: -3.575139284133911
    6. '-' → logprob: -4.32513952255249
    7. ' <=' → logprob: -6.07513952255249
    8. '>=' → logprob: -6.07513952255249
    9. '==' → logprob: -6.20013952255249
    10. ' <' → logprob: -6.20013952255249

Token 205: ' ' (ID: 220)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.22408714890480042
    2. ' vertex' → logprob: -2.2240872383117676
    3. '1' → logprob: -2.5990872383117676
    4. '0' → logprob: -4.099087238311768
    5. ' ' → logprob: -6.474087238311768
    6. '	vertex' → logprob: -9.72408676147461
    7. '(vertex' → logprob: -10.22408676147461
    8. '2' → logprob: -12.72408676147461
    9. '   ' → logprob: -12.97408676147461
    10. '.vertex' → logprob: -13.09908676147461

Token 206: '250' (ID: 6911)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.022081248462200165
    2. '1' → logprob: -4.02208137512207
    3. '0' → logprob: -5.64708137512207
    4. ' vertex' → logprob: -7.89708137512207
    5. ' ' → logprob: -11.27208137512207
    6. '	vertex' → logprob: -12.39708137512207
    7. '(vertex' → logprob: -13.14708137512207
    8. 'node' → logprob: -13.39708137512207
    9. '2' → logprob: -14.14708137512207
    10. '   ' → logprob: -14.64708137512207

Token 207: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07000112533569336
    2. '0' → logprob: -2.9450011253356934
    3. ':
' → logprob: -4.570001125335693
    4. ' :' → logprob: -5.945001125335693
    5. ' and' → logprob: -6.570001125335693
    6. ' or' → logprob: -8.695001602172852
    7. 'and' → logprob: -8.945001602172852
    8. ' :
' → logprob: -9.070001602172852
    9. '6' → logprob: -9.820001602172852
    10. ' ' → logprob: -10.570001602172852

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01016211323440075
    2. ':
' → logprob: -5.260161876678467
    3. ' :' → logprob: -5.385161876678467
    4. ' :
' → logprob: -8.885162353515625
    5. ' and' → logprob: -9.385162353515625
    6. ' or' → logprob: -9.760162353515625
    7. ':return' → logprob: -10.760162353515625
    8. '+' → logprob: -12.010162353515625
    9. ' ' → logprob: -12.135162353515625
    10. '+:' → logprob: -12.510162353515625

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11190753430128098
    2. '
' → logprob: -3.111907482147217
    3. '    
' → logprob: -3.486907482147217
    4. ':' → logprob: -4.986907482147217
    5. ' 
' → logprob: -5.361907482147217
    6. '    ' → logprob: -5.611907482147217
    7. ' pass' → logprob: -6.236907482147217
    8. ' :' → logprob: -6.486907482147217
    9. ' ' → logprob: -6.736907482147217
    10. ':
' → logprob: -6.861907482147217

Token 210: ' for' (ID: 395)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7381607890129089
    2. ' for' → logprob: -1.3631608486175537
    3. ' print' → logprob: -2.2381608486175537
    4. ' start' → logprob: -2.9881608486175537
    5. 'for' (adapté à ' for') → logprob: -3.1131608486175537
    6. 'print' → logprob: -3.7381608486175537
    7. 'pass' → logprob: -4.488160610198975
    8. 'start' → logprob: -5.113160610198975
    9. ' exit' → logprob: -5.238160610198975
    10. '   ' → logprob: -5.613160610198975

Token 211: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.008197513408958912
    2. ' i' → logprob: -5.63319730758667
    3. '_' → logprob: -6.13319730758667
    4. ' edge' → logprob: -6.38319730758667
    5. ' ' → logprob: -7.50819730758667
    6. ' vertex' → logprob: -9.258197784423828
    7. 'edge' → logprob: -10.508197784423828
    8. '_edge' → logprob: -10.883197784423828
    9. ' line' → logprob: -11.633197784423828
    10. 'i' → logprob: -12.133197784423828

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02988586015999317
    2. 'in' → logprob: -3.529885768890381
    3. ' ' → logprob: -9.779886245727539
    4. 'import' → logprob: -10.529886245727539
    5. 'range' → logprob: -10.654886245727539
    6. 'i' → logprob: -12.029886245727539
    7. '  ' → logprob: -12.154886245727539
    8. 'n' → logprob: -12.654886245727539
    9. ' i' → logprob: -12.904886245727539
    10. ',' → logprob: -13.029886245727539

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031865055207163095
    2. ' range' → logprob: -5.7531867027282715
    3. '(range' → logprob: -13.128186225891113
    4. '	range' → logprob: -13.878186225891113
    5. 'ran' → logprob: -14.003186225891113
    6. '```' → logprob: -14.628186225891113
    7. 'rang' → logprob: -14.878186225891113
    8. '[' → logprob: -15.253186225891113
    9. 'input' → logprob: -15.253186225891113
    10. 'run' → logprob: -15.378186225891113

Token 214: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.002254695165902376
    2. ' edge' → logprob: -7.127254486083984
    3. 'edge' → logprob: -7.127254486083984
    4. ' (' → logprob: -7.627254486083984
    5. '(' → logprob: -8.877254486083984
    6. '(vertex' → logprob: -11.377254486083984
    7. '=edge' → logprob: -12.502254486083984
    8. ' ' → logprob: -13.502254486083984
    9. '(int' → logprob: -14.002254486083984
    10. '_edge' → logprob: -14.502254486083984

Token 215: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.539801688631997e-05
    2. 'count' → logprob: -10.125065803527832
    3. 's' → logprob: -11.375065803527832
    4. ')' → logprob: -12.750065803527832
    5. '_' → logprob: -13.000065803527832
    6. '   ' → logprob: -13.125065803527832
    7. '_edge' → logprob: -13.250065803527832
    8. '_COUNT' → logprob: -14.000065803527832
    9. '):
' → logprob: -14.250065803527832
    10. '_)' → logprob: -14.375065803527832

Token 216: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5818390846252441
    2. '):' → logprob: -0.8318390846252441
    3. ':' → logprob: -5.956839084625244
    4. '   ' → logprob: -5.956839084625244
    5. '():
' → logprob: -8.456838607788086
    6. '():' → logprob: -8.706838607788086
    7. ':
' → logprob: -9.206838607788086
    8. ')' → logprob: -9.331838607788086
    9. ' ):
' → logprob: -9.956838607788086
    10. ' ):' → logprob: -10.206838607788086

Token 217: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1441851109266281
    2. '       ' → logprob: -2.1441850662231445
    3. '    
' → logprob: -4.3941850662231445
    4. '	   ' → logprob: -6.7691850662231445
    5. ' input' → logprob: -7.1441850662231445
    6. '        
' → logprob: -7.3941850662231445
    7. 'input' → logprob: -7.5191850662231445
    8. '
' → logprob: -8.644185066223145
    9. '    ' → logprob: -8.644185066223145
    10. ' line' → logprob: -8.894185066223145

Token 218: ' src' (ID: 4537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1305493116378784
    2. 'input' → logprob: -1.2555493116378784
    3. ' input' → logprob: -1.6305493116378784
    4. '_' → logprob: -3.380549430847168
    5. ' sys' → logprob: -3.630549430847168
    6. ' line' → logprob: -3.880549430847168
    7. ' _' → logprob: -4.005549430847168
    8. ' node' → logprob: -4.380549430847168
    9. 'node' → logprob: -4.380549430847168
    10. 'line' → logprob: -4.505549430847168

Token 219: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016909711062908173
    2. ' ,' → logprob: -4.141909599304199
    3. '_,' → logprob: -7.141909599304199
    4. ' =' → logprob: -10.0169095993042
    5. '_' → logprob: -12.0169095993042
    6. 's' → logprob: -12.2669095993042
    7. ',node' → logprob: -12.5169095993042
    8. '‌,' → logprob: -12.7669095993042
    9. '<|end|>' → logprob: -12.8919095993042
    10. ',
' → logprob: -13.0169095993042

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11387303471565247
    2. ' ,' → logprob: -2.23887300491333
    3. ' =' → logprob: -7.86387300491333
    4. '=' → logprob: -8.613873481750488
    5. ' ' → logprob: -9.363873481750488
    6. '   ' → logprob: -9.488873481750488
    7. '       ' → logprob: -9.738873481750488
    8. ',input' → logprob: -10.113873481750488
    9. '<|end|>' → logprob: -10.238873481750488
    10. '_,' → logprob: -10.238873481750488

Token 221: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.703973650932312
    2. 'dest' → logprob: -0.953973650932312
    3. ' dst' → logprob: -2.7039737701416016
    4. ' dest' → logprob: -3.5789737701416016
    5. 't' → logprob: -4.203973770141602
    6. ' tgt' → logprob: -4.703973770141602
    7. ' trg' → logprob: -7.578973770141602
    8. 'end' → logprob: -8.078973770141602
    9. '	dst' → logprob: -9.453973770141602
    10. 'des' → logprob: -9.703973770141602

Token 222: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.002772189909592271
    2. ',' → logprob: -6.127772331237793
    3. '_,' → logprob: -8.127772331237793
    4. ',_' → logprob: -8.377772331237793
    5. ' ,' → logprob: -11.127772331237793
    6. ' _' → logprob: -11.502772331237793
    7. '_' → logprob: -11.502772331237793
    8. ',node' → logprob: -11.627772331237793
    9. '_nodes' → logprob: -12.377772331237793
    10. '_NODE' → logprob: -12.502772331237793

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001867326645879075
    2. ' ,' → logprob: -8.625186920166016
    3. '=' → logprob: -12.750186920166016
    4. ' =' → logprob: -13.125186920166016
    5. '<|end|>' → logprob: -14.875186920166016
    6. ',
' → logprob: -15.312686920166016
    7. ' ' → logprob: -15.375186920166016
    8. 'weight' → logprob: -15.437686920166016
    9. '‌,' → logprob: -15.562686920166016
    10. ',input' → logprob: -15.750186920166016

Token 224: ' edge' (ID: 11165)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.5824426412582397
    2. ' weight' → logprob: -1.0824426412582397
    3. ' edge' → logprob: -2.8324427604675293
    4. 'edge' → logprob: -3.3324427604675293
    5. 'w' → logprob: -5.457442760467529
    6. ' cost' → logprob: -6.582442760467529
    7. ' w' → logprob: -6.707442760467529
    8. 'cost' → logprob: -7.957442760467529
    9. 'wt' → logprob: -8.957442283630371
    10. 'distance' → logprob: -9.082442283630371

Token 225: '_val' (ID: 13694)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.002737947041168809
    2. '_' → logprob: -6.377737998962402
    3. '_w' → logprob: -7.127737998962402
    4. ' _' → logprob: -9.377737998962402
    5. '_cost' → logprob: -9.502737998962402
    6. 'weight' → logprob: -10.627737998962402
    7. '_weights' → logprob: -11.002737998962402
    8. '_value' → logprob: -12.377737998962402
    9. 'w' → logprob: -12.502737998962402
    10. '_length' → logprob: -12.627737998962402

Token 226: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25336283445358276
    2. '=' → logprob: -1.5033628940582275
    3. ',' → logprob: -6.628362655639648
    4. ')' → logprob: -10.253362655639648
    5. ' ' → logprob: -10.753362655639648
    6. '   ' → logprob: -11.378362655639648
    7. 't' → logprob: -12.003362655639648
    8. 'ue' → logprob: -12.253362655639648
    9. ')=' → logprob: -12.503362655639648
    10. '=int' → logprob: -12.503362655639648

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32763323187828064
    2. ' =' → logprob: -1.327633261680603
    3. '=' → logprob: -4.702633380889893
    4. ' ,' → logprob: -5.327633380889893
    5. ' ' → logprob: -8.452632904052734
    6. ',b' → logprob: -10.327632904052734
    7. 'b' → logprob: -10.952632904052734
    8. 'a' → logprob: -11.452632904052734
    9. 'l' → logprob: -11.577632904052734
    10. 'm' → logprob: -12.077632904052734

Token 228: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.06225660443305969
    2. 'edge' → logprob: -2.8122565746307373
    3. ' space' → logprob: -9.312256813049316
    4. 'space' → logprob: -9.562256813049316
    5. ' ' → logprob: -10.437256813049316
    6. '=edge' → logprob: -10.812256813049316
    7. '_edge' → logprob: -11.312256813049316
    8. '_' → logprob: -11.312256813049316
    9. ' 
' → logprob: -11.499756813049316
    10. '(edge' → logprob: -11.937256813049316

Token 229: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0018583188066259027
    2. '_weight' → logprob: -6.751858234405518
    3. '_' → logprob: -7.501858234405518
    4. 'val' → logprob: -10.751858711242676
    5. '_cost' → logprob: -11.001858711242676
    6. '_value' → logprob: -11.001858711242676
    7. '_type' → logprob: -11.626858711242676
    8. '_w' → logprob: -11.751858711242676
    9. 'Val' → logprob: -11.751858711242676
    10. ' _' → logprob: -12.001858711242676

Token 230: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.014291377738118172
    2. 'b' → logprob: -4.264291286468506
    3. '_val' → logprob: -10.264291763305664
    4. 'val' → logprob: -10.639291763305664
    5. 'B' → logprob: -10.764291763305664
    6. 'a' → logprob: -11.639291763305664
    7. '_' → logprob: -12.139291763305664
    8. '_a' → logprob: -12.389291763305664
    9. '```' → logprob: -12.639291763305664
    10. '_c' → logprob: -12.764291763305664

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365457430481911
    2. '=' → logprob: -3.4086546897888184
    3. ' ' → logprob: -12.28365421295166
    4. ',' → logprob: -13.28365421295166
    5. '   ' → logprob: -13.78365421295166
    6. '    ' → logprob: -15.03365421295166
    7. '=input' → logprob: -15.03365421295166
    8. '=sys' → logprob: -15.15865421295166
    9. '  ' → logprob: -15.78365421295166
    10. '=line' → logprob: -16.283655166625977

Token 232: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03805089741945267
    2. 'map' → logprob: -3.288050889968872
    3. '	map' → logprob: -12.538050651550293
    4. ' ' → logprob: -13.288050651550293
    5. '   ' → logprob: -13.413050651550293
    6. 'm' → logprob: -14.413050651550293
    7. '    ' → logprob: -14.663050651550293
    8. ' ' → logprob: -14.788050651550293
    9. '(map' → logprob: -15.413050651550293
    10. ' list' → logprob: -15.663050651550293

Token 233: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.4021237802808173e-05
    2. 'int' → logprob: -11.875014305114746
    3. '(' → logprob: -12.875014305114746
    4. '=int' → logprob: -13.500014305114746
    5. '<int' → logprob: -13.750014305114746
    6. '[int' → logprob: -14.000014305114746
    7. ',int' → logprob: -14.625014305114746
    8. ' int' → logprob: -15.000014305114746
    9. '(str' → logprob: -15.875014305114746
    10. ']int' → logprob: -16.87501335144043

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14356456696987152
    2. ',input' → logprob: -2.018564462661743
    3. '(input' → logprob: -7.268564701080322
    4. '(),' → logprob: -9.268564224243164
    5. '(' → logprob: -10.393564224243164
    6. ')' → logprob: -10.518564224243164
    7. 'input' → logprob: -10.643564224243164
    8. ' ,' → logprob: -11.893564224243164
    9. '=input' → logprob: -12.768564224243164
    10. ' input' → logprob: -13.518564224243164

Token 235: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1002068892121315
    2. 'input' → logprob: -2.3502068519592285
    3. '(input' → logprob: -17.10020637512207
    4. 'sys' → logprob: -17.72520637512207
    5. '_input' → logprob: -17.72520637512207
    6. ',input' → logprob: -17.72520637512207
    7. 'import' → logprob: -17.85020637512207
    8. 'Input' → logprob: -18.10020637512207
    9. '	input' → logprob: -18.10020637512207
    10. '=input' → logprob: -18.47520637512207

Token 236: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.03835209086537361
    2. '().' → logprob: -3.2883520126342773
    3. '.readline' → logprob: -9.163352012634277
    4. '())' → logprob: -9.288352012634277
    5. '()' → logprob: -9.413352012634277
    6. 'reader' → logprob: -11.163352012634277
    7. 'Reader' → logprob: -11.413352012634277
    8. ')' → logprob: -14.163352012634277
    9. '_writer' → logprob: -14.163352012634277
    10. ' reader' → logprob: -14.413352012634277

Token 237: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013418971793726087
    2. '()' → logprob: -6.876341819763184
    3. ')' → logprob: -8.251341819763184
    4. '())' → logprob: -10.126341819763184
    5. '(' → logprob: -12.751341819763184
    6. ' ' → logprob: -13.751341819763184
    7. ' ().' → logprob: -14.376341819763184
    8. '());' → logprob: -14.751341819763184
    9. ').' → logprob: -14.751341819763184
    10. '().__' → logprob: -14.876341819763184

Token 238: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. ' split' → logprob: -13.750001907348633
    3. 'strip' → logprob: -14.625001907348633
    4. ')' → logprob: -15.375001907348633
    5. '(split' → logprob: -15.500001907348633
    6. 'rstrip' → logprob: -17.000001907348633
    7. 'spl' → logprob: -17.500001907348633
    8. '.split' → logprob: -18.875001907348633
    9. ' ' → logprob: -18.875001907348633
    10. '().' → logprob: -19.250001907348633

Token 239: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16387464106082916
    2. ')' → logprob: -2.413874626159668
    3. '()' → logprob: -2.788874626159668
    4. '())
' → logprob: -9.038874626159668
    5. '(' → logprob: -9.913874626159668
    6. ' ())' → logprob: -12.413874626159668
    7. '(),' → logprob: -12.538874626159668
    8. '()
' → logprob: -12.663874626159668
    9. '());' → logprob: -12.663874626159668
    10. '();)' → logprob: -13.163874626159668

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15943989157676697
    2. '<|end|>' → logprob: -2.4094398021698
    3. '
' → logprob: -3.1594398021698
    4. '        
' → logprob: -5.034440040588379
    5. '   ' → logprob: -5.534440040588379
    6. ' ' → logprob: -6.659440040588379
    7. '<|end|>' → logprob: -7.534440040588379
    8. '	' → logprob: -8.034440040588379
    9. '    
' → logprob: -8.159440040588379
    10. ',' → logprob: -8.284440040588379

Token 241: ' src' (ID: 4537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01737855188548565
    2. ' if' → logprob: -4.517378330230713
    3. '   ' → logprob: -6.517378330230713
    4. '<|end|>' → logprob: -6.642378330230713
    5. '        
' → logprob: -7.142378330230713
    6. ' ' → logprob: -7.767378330230713
    7. '
' → logprob: -7.767378330230713
    8. 'if' → logprob: -8.142378807067871
    9. ')' → logprob: -8.142378807067871
    10. ',' → logprob: -8.829878807067871

Token 242: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0022458923049271107
    2. '_nodes' → logprob: -6.627245903015137
    3. '_' → logprob: -7.377245903015137
    4. ' _' → logprob: -9.627245903015137
    5. '_NODE' → logprob: -10.127245903015137
    6. '_Node' → logprob: -10.627245903015137
    7. '_state' → logprob: -11.002245903015137
    8. '[' → logprob: -11.127245903015137
    9. ')' → logprob: -11.252245903015137
    10. '   ' → logprob: -11.377245903015137

Token 243: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.07486886531114578
    2. '-=' → logprob: -3.32486891746521
    3. '-' → logprob: -3.69986891746521
    4. ' -' → logprob: -5.074868679046631
    5. ',' → logprob: -5.574868679046631
    6. ' ' → logprob: -7.949868679046631
    7. ' ,' → logprob: -8.324869155883789
    8. ' =' → logprob: -8.699869155883789
    9. '<|end|>' → logprob: -9.199869155883789
    10. '=' → logprob: -9.324869155883789

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054883409291505814
    2. ' ' → logprob: -2.9298834800720215
    3. '<|end|>' → logprob: -14.429883003234863
    4. ' ' → logprob: -16.42988395690918
    5. '   ' → logprob: -16.55488395690918
    6. '2' → logprob: -16.67988395690918
    7. '```' → logprob: -16.67988395690918
    8. '0' → logprob: -17.36738395690918
    9. '
' → logprob: -17.92988395690918
    10. '۱' → logprob: -18.17988395690918

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.6875057220459
    4. '0' → logprob: -17.2500057220459
    5. '<|end|>' → logprob: -17.6250057220459
    6. '2' → logprob: -17.6875057220459
    7. '   ' → logprob: -17.7500057220459
    8. '১' → logprob: -18.8125057220459
    9. '１' → logprob: -18.8750057220459
    10. '...' → logprob: -19.0000057220459

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023904841393232346
    2. '<|end|>' → logprob: -4.523904800415039
    3. ',' → logprob: -5.398904800415039
    4. '
' → logprob: -5.898904800415039
    5. 'dst' → logprob: -5.898904800415039
    6. '	dst' → logprob: -6.648904800415039
    7. ' dst' → logprob: -7.023904800415039
    8. '_dst' → logprob: -9.023904800415039
    9. '        
' → logprob: -9.523904800415039
    10. '<|end|>' → logprob: -9.898904800415039

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03329835087060928
    2. '<|end|>' → logprob: -4.533298492431641
    3. 'dst' → logprob: -5.033298492431641
    4. '	dst' → logprob: -5.533298492431641
    5. '
' → logprob: -5.908298492431641
    6. ',' → logprob: -5.908298492431641
    7. ' dst' → logprob: -6.408298492431641
    8. '        
' → logprob: -7.158298492431641
    9. ' ' → logprob: -7.158298492431641
    10. '	' → logprob: -7.158298492431641

Token 248: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' (adapté à ' dst') → logprob: -0.006761787459254265
    2. ' dst' → logprob: -5.00676155090332
    3. 'src' → logprob: -11.13176155090332
    4. '	dst' → logprob: -11.38176155090332
    5. '1' → logprob: -11.63176155090332
    6. '_dst' → logprob: -12.25676155090332
    7. '
' → logprob: -13.38176155090332
    8. 'dest' → logprob: -13.75676155090332
    9. '(dst' → logprob: -14.13176155090332
    10. '.dst' → logprob: -14.25676155090332

Token 249: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.4881879400927573e-05
    2. '_' → logprob: -11.125035285949707
    3. ' _' → logprob: -11.750035285949707
    4. '```' → logprob: -12.125035285949707
    5. '_nodes' → logprob: -13.625035285949707
    6. '_NODE' → logprob: -13.750035285949707
    7. '
' → logprob: -14.125035285949707
    8. ')_' → logprob: -14.125035285949707
    9. '_Node' → logprob: -14.250035285949707
    10. '_user' → logprob: -14.875035285949707

Token 250: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.02117222547531128
    2. '-=' → logprob: -3.896172285079956
    3. '-' → logprob: -7.521172046661377
    4. ' ' → logprob: -9.896172523498535
    5. ' -' → logprob: -11.146172523498535
    6. '   ' → logprob: -11.771172523498535
    7. ',' → logprob: -12.146172523498535
    8. ')' → logprob: -13.021172523498535
    9. '<|end|>' → logprob: -13.021172523498535
    10. '=' → logprob: -13.896172523498535

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01816023886203766
    2. ' ' → logprob: -4.018160343170166
    3. '<|end|>' → logprob: -12.018159866333008
    4. '0' → logprob: -13.955659866333008
    5. '```' → logprob: -14.143159866333008
    6. '   ' → logprob: -14.705659866333008
    7. '2' → logprob: -14.955659866333008
    8. '=' → logprob: -15.455659866333008
    9. '-' → logprob: -15.580659866333008
    10. '<|end|>' → logprob: -15.705659866333008

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014740281039848924
    2. ' ' → logprob: -8.875147819519043
    3. '2' → logprob: -12.812647819519043
    4. '<|end|>' → logprob: -13.062647819519043
    5. '```' → logprob: -14.250147819519043
    6. '   ' → logprob: -15.875147819519043
    7. '0' → logprob: -16.125146865844727
    8. '-' → logprob: -16.312646865844727
    9. '۱' → logprob: -16.375146865844727
    10. '11' → logprob: -16.437646865844727

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2028876394033432
    2. '
' → logprob: -1.8278876543045044
    3. '<|end|>' → logprob: -4.577887535095215
    4. '        
' → logprob: -4.702887535095215
    5. ',' → logprob: -6.952887535095215
    6. ' if' → logprob: -7.327887535095215
    7. ' ' → logprob: -8.202887535095215
    8. ',
' → logprob: -8.202887535095215
    9. ' 
' → logprob: -8.577887535095215
    10. '   ' → logprob: -8.577887535095215

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11808274686336517
    2. '
' → logprob: -2.4930827617645264
    3. '<|end|>' → logprob: -4.118082523345947
    4. '        
' → logprob: -4.743082523345947
    5. ' ' → logprob: -7.493082523345947
    6. '   ' → logprob: -7.493082523345947
    7. ' if' → logprob: -7.618082523345947
    8. ',' → logprob: -8.118083000183105
    9. '<|end|>' → logprob: -8.743083000183105
    10. 'if' → logprob: -8.805583000183105

Token 255: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.05798402801156044
    2. 'if' → logprob: -3.1829841136932373
    3. ' adjacency' → logprob: -4.807983875274658
    4. ' if' → logprob: -6.057983875274658
    5. 'weight' → logprob: -6.682983875274658
    6. 'edge' → logprob: -7.307983875274658
    7. 'continue' → logprob: -7.432983875274658
    8. ' adj' → logprob: -7.682983875274658
    9. '#' → logprob: -8.057984352111816
    10. '   ' → logprob: -8.682984352111816

Token 256: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.002196409972384572
    2. '[' → logprob: -6.127196311950684
    3. ' [' → logprob: -11.877196311950684
    4. '[s' → logprob: -14.002196311950684
    5. '[start' → logprob: -14.002196311950684
    6. 'src' → logprob: -14.752196311950684
    7. '[source' → logprob: -14.752196311950684
    8. '<src' → logprob: -15.002196311950684
    9. '```' → logprob: -15.377196311950684
    10. ')[' → logprob: -15.377196311950684

Token 257: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.8087270038668066e-05
    2. 'node' → logprob: -11.625027656555176
    3. '[node' → logprob: -12.375027656555176
    4. '_state' → logprob: -12.625027656555176
    5. '_' → logprob: -13.125027656555176
    6. '][' → logprob: -13.500027656555176
    7. ']' → logprob: -13.625027656555176
    8. ']_' → logprob: -13.750027656555176
    9. 'Node' → logprob: -14.375027656555176
    10. '_NODE' → logprob: -14.500027656555176

Token 258: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.20734401047229767
    2. '.append' → logprob: -1.7073440551757812
    3. '.' → logprob: -5.207344055175781
    4. ').' → logprob: -8.082344055175781
    5. '[' → logprob: -9.332344055175781
    6. 'append' → logprob: -11.707344055175781
    7. ']' → logprob: -11.957344055175781
    8. '[].' → logprob: -12.582344055175781
    9. '.extend' → logprob: -12.957344055175781
    10. ',' → logprob: -12.957344055175781

Token 259: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.319370302458992e-06
    2. '.append' → logprob: -12.250005722045898
    3. ' append' → logprob: -16.1250057220459
    4. 'extend' → logprob: -16.3750057220459
    5. 'app' → logprob: -16.5000057220459
    6. 'appen' → logprob: -16.7500057220459
    7. '_append' → logprob: -17.1250057220459
    8. 'insert' → logprob: -18.3750057220459
    9. 'Append' → logprob: -18.7500057220459
    10. '	append' → logprob: -19.0000057220459

Token 260: '((' (ID: 2054)
  Prédit: '(dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dst' → logprob: -0.21170547604560852
    2. '((' → logprob: -1.7117054462432861
    3. '(' → logprob: -4.586705684661865
    4. ' (' → logprob: -10.461705207824707
    5. '(
' → logprob: -11.836705207824707
    6. '(src' → logprob: -12.211705207824707
    7. '([' → logprob: -13.086705207824707
    8. '(dtype' → logprob: -13.211705207824707
    9. '(destination' → logprob: -13.586705207824707
    10. '(ds' → logprob: -13.711705207824707

Token 261: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.002217699773609638
    2. ' dst' → logprob: -6.127217769622803
    3. '(dst' → logprob: -11.002217292785645
    4. 'src' → logprob: -11.502217292785645
    5. '
' → logprob: -13.127217292785645
    6. '	dst' → logprob: -13.502217292785645
    7. '   ' → logprob: -14.127217292785645
    8. 'dest' → logprob: -15.252217292785645
    9. ' ' → logprob: -15.377217292785645
    10. '.dst' → logprob: -16.12721824645996

Token 262: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.2233183042553719e-05
    2. 'node' → logprob: -11.375012397766113
    3. '_' → logprob: -15.625012397766113
    4. 'Node' → logprob: -15.750012397766113
    5. 'ode' → logprob: -16.125011444091797
    6. '_nodes' → logprob: -16.750011444091797
    7. '_NODE' → logprob: -17.375011444091797
    8. '   ' → logprob: -17.500011444091797
    9. '
' → logprob: -17.625011444091797
    10. '-node' → logprob: -17.750011444091797

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026538874953985214
    2. ' ,' → logprob: -8.250265121459961
    3. ',
' → logprob: -13.125265121459961
    4. '‌,' → logprob: -15.375265121459961
    5. ',b' → logprob: -15.500265121459961
    6. ')' → logprob: -15.625265121459961
    7. '```' → logprob: -15.750265121459961
    8. ',int' → logprob: -16.06276512145996
    9. '),' → logprob: -16.18776512145996
    10. '<|end|>' → logprob: -16.25026512145996

Token 264: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5271776914596558
    2. ' edge' → logprob: -0.9021776914596558
    3. ' min' → logprob: -6.777177810668945
    4. 'min' → logprob: -7.277177810668945
    5. 'max' → logprob: -7.402177810668945
    6. ' max' → logprob: -7.652177810668945
    7. '0' → logprob: -8.027177810668945
    8. '1' → logprob: -8.152177810668945
    9. ' ' → logprob: -8.902177810668945
    10. '(edge' → logprob: -9.339677810668945

Token 265: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.463036435074173e-05
    2. '_weight' → logprob: -11.500024795532227
    3. '_' → logprob: -12.250024795532227
    4. 'val' → logprob: -12.250024795532227
    5. '_v' → logprob: -14.000024795532227
    6. '_va' → logprob: -14.000024795532227
    7. '_value' → logprob: -14.625024795532227
    8. 'Val' → logprob: -15.250024795532227
    9. '
' → logprob: -15.375024795532227
    10. ' _' → logprob: -15.750024795532227

Token 266: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.01925303414463997
    2. '_b' → logprob: -4.019253253936768
    3. 'a' → logprob: -7.144253253936768
    4. '_' → logprob: -8.26925277709961
    5. ' _' → logprob: -11.14425277709961
    6. '_
' → logprob: -11.26925277709961
    7. '_val' → logprob: -12.64425277709961
    8. ' ' → logprob: -12.76925277709961
    9. 'b' → logprob: -13.08175277709961
    10. ' a' → logprob: -13.14425277709961

Token 267: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007691917475312948
    2. '))
' → logprob: -4.882691860198975
    3. ' ))' → logprob: -10.257692337036133
    4. ')' → logprob: -10.632692337036133
    5. '))

' → logprob: -12.007692337036133
    6. '   ' → logprob: -12.132692337036133
    7. '       ' → logprob: -12.382692337036133
    8. ' ' → logprob: -12.632692337036133
    9. ',' → logprob: -13.257692337036133
    10. ')))' → logprob: -14.007692337036133

Token 268: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.12842658162117004
    2. ' adjacency' → logprob: -2.1284265518188477
    3. '   ' → logprob: -7.128426551818848
    4. '       ' → logprob: -7.503426551818848
    5. ' adj' → logprob: -9.753426551818848
    6. '           ' → logprob: -11.503426551818848
    7. ' ' → logprob: -11.503426551818848
    8. 'if' → logprob: -11.503426551818848
    9. ')' → logprob: -11.878426551818848
    10. '...' → logprob: -12.128426551818848

Token 270: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04311886057257652
    2. '[src' → logprob: -3.168118953704834
    3. '[start' → logprob: -9.293118476867676
    4. 'dst' → logprob: -12.418118476867676
    5. ' [' → logprob: -12.668118476867676
    6. 'src' → logprob: -13.043118476867676
    7. '[end' → logprob: -13.293118476867676
    8. '	dst' → logprob: -13.418118476867676
    9. '[d' → logprob: -13.543118476867676
    10. '(dst' → logprob: -13.668118476867676

Token 271: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.020650383085012436
    2. 'src' → logprob: -3.8956503868103027
    3. ' dst' → logprob: -9.395649909973145
    4. '(dst' → logprob: -12.770649909973145
    5. '	dst' → logprob: -12.770649909973145
    6. 'start' → logprob: -13.270649909973145
    7. '   ' → logprob: -13.395649909973145
    8. '
' → logprob: -13.395649909973145
    9. '```' → logprob: -13.395649909973145
    10. 'st' → logprob: -13.395649909973145

Token 272: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.676292231422849e-05
    2. 'Node' → logprob: -11.500017166137695
    3. 'node' → logprob: -12.250017166137695
    4. '_code' → logprob: -14.250017166137695
    5. 'adj' → logprob: -14.750017166137695
    6. '_NODE' → logprob: -15.250017166137695
    7. '_nodes' → logprob: -15.625017166137695
    8. '_graph' → logprob: -15.750017166137695
    9. '[node' → logprob: -16.375017166137695
    10. '-node' → logprob: -17.375017166137695

Token 273: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.20474863052368164
    2. '.append' → logprob: -1.9547486305236816
    3. ').' → logprob: -3.4547486305236816
    4. '.' → logprob: -4.579748630523682
    5. ',' → logprob: -7.079748630523682
    6. '       ' → logprob: -8.329748153686523
    7. '           ' → logprob: -8.454748153686523
    8. ' ].' → logprob: -8.954748153686523
    9. ' .' → logprob: -9.829748153686523
    10. '   ' → logprob: -10.079748153686523

Token 274: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.842555426876061e-06
    2. 'appen' → logprob: -12.875004768371582
    3. '.append' → logprob: -13.375004768371582
    4. ' append' → logprob: -14.875004768371582
    5. 'app' → logprob: -15.625004768371582
    6. '	append' → logprob: -15.750004768371582
    7. '_append' → logprob: -19.1250057220459
    8. 'appe' → logprob: -19.2500057220459
    9. 'add' → logprob: -19.2500057220459
    10. 'adj' → logprob: -19.3750057220459

Token 275: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00038479414070025086
    2. ' ((' → logprob: -7.87538480758667
    3. '(' → logprob: -12.750384330749512
    4. ' (' → logprob: -13.625384330749512
    5. '(
' → logprob: -16.500385284423828
    6. ')((' → logprob: -16.625385284423828
    7. '(src' → logprob: -16.750385284423828
    8. '>((' → logprob: -16.875385284423828
    9. '(('' → logprob: -16.875385284423828
    10. '<|end|>' → logprob: -17.000385284423828

Token 276: 'src' (ID: 7205)
  Prédit: '(src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -0.09322701394557953
    2. 'src' → logprob: -2.468226909637451
    3. '[src' → logprob: -6.093226909637451
    4. '(dst' → logprob: -6.968226909637451
    5. ' (' → logprob: -7.093226909637451
    6. ' src' → logprob: -8.71822738647461
    7. '<src' → logprob: -9.96822738647461
    8. 'dst' → logprob: -10.71822738647461
    9. '(sr' → logprob: -12.34322738647461
    10. ')' → logprob: -12.46822738647461

Token 277: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.869017852295656e-06
    2. '```' → logprob: -13.375006675720215
    3. ')_' → logprob: -13.500006675720215
    4. 'Node' → logprob: -14.000006675720215
    5. ']_' → logprob: -14.125006675720215
    6. 'node' → logprob: -14.500006675720215
    7. '_NODE' → logprob: -14.625006675720215
    8. '   ' → logprob: -15.250006675720215
    9. ' _' → logprob: -16.00000762939453
    10. '_Node' → logprob: -16.12500762939453

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.750012397766113
    4. '‌,' → logprob: -18.125011444091797
    5. '),' → logprob: -18.625011444091797
    6. '       ' → logprob: -18.750011444091797
    7. ',

' → logprob: -19.000011444091797
    8. '```' → logprob: -19.000011444091797
    9. '   ' → logprob: -19.375011444091797
    10. ',b' → logprob: -19.750011444091797

Token 279: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.1128825768828392
    2. 'edge' → logprob: -2.237882614135742
    3. '(edge' → logprob: -10.112882614135742
    4. '=edge' → logprob: -12.612882614135742
    5. ' ' → logprob: -12.862882614135742
    6. ',' → logprob: -13.237882614135742
    7. '0' → logprob: -13.300382614135742
    8. ' ' → logprob: -13.487882614135742
    9. ')' → logprob: -13.550382614135742
    10. 'weight' → logprob: -13.862882614135742

Token 280: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.7848862373502925e-05
    2. ',' → logprob: -11.875027656555176
    3. '_b' → logprob: -12.125027656555176
    4. 'val' → logprob: -12.875027656555176
    5. '_' → logprob: -13.000027656555176
    6. ',_' → logprob: -13.000027656555176
    7. ')_' → logprob: -13.375027656555176
    8. '_node' → logprob: -14.000027656555176
    9. '```' → logprob: -14.250027656555176
    10. 'Val' → logprob: -14.375027656555176

Token 281: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1523807942867279
    2. '_b' → logprob: -2.0273807048797607
    3. 'a' → logprob: -4.65238094329834
    4. 'b' → logprob: -9.40238094329834
    5. '_' → logprob: -11.77738094329834
    6. ')' → logprob: -12.27738094329834
    7. ' a' → logprob: -12.40238094329834
    8. 'val' → logprob: -12.40238094329834
    9. '_val' → logprob: -12.65238094329834
    10. ' ' → logprob: -12.90238094329834

Token 282: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.198043699143454e-05
    2. ')' → logprob: -9.500091552734375
    3. '))
' → logprob: -11.250091552734375
    4. '       ' → logprob: -13.000091552734375
    5. ' ))' → logprob: -13.625091552734375
    6. ')))' → logprob: -14.875091552734375
    7. '   ' → logprob: -15.875091552734375
    8. '));' → logprob: -16.375091552734375
    9. '),' → logprob: -17.375091552734375
    10. '()))' → logprob: -18.125091552734375

Token 283: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10111114382743835
    2. 'for' → logprob: -3.2261111736297607
    3. '```' → logprob: -4.101110935211182
    4. 'elif' → logprob: -4.226110935211182
    5. '<|end|>' → logprob: -4.726110935211182
    6. '   ' → logprob: -5.851110935211182
    7. '
' → logprob: -5.976110935211182
    8. ' else' → logprob: -6.226110935211182
    9. ')' → logprob: -6.476110935211182
    10. '    
' → logprob: -6.601110935211182

Token 284: ' min' (ID: 1349)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20697595179080963
    2. 'dist' → logprob: -2.2069759368896484
    3. 'min' (adapté à ' min') → logprob: -3.7069759368896484
    4. ' distances' → logprob: -4.331975936889648
    5. 'distance' → logprob: -4.456975936889648
    6. ' else' → logprob: -5.206975936889648
    7. 'result' → logprob: -5.206975936889648
    8. 'for' → logprob: -5.831975936889648
    9. 'd' → logprob: -6.206975936889648
    10. 'elif' → logprob: -6.206975936889648

Token 285: '_paths' (ID: 56992)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0002702760975807905
    2. 'dist' → logprob: -8.375269889831543
    3. '_' → logprob: -10.625269889831543
    4. '_distance' → logprob: -11.375269889831543
    5. '_d' → logprob: -12.750269889831543
    6. ' distances' → logprob: -14.875269889831543
    7. 'Distances' → logprob: -15.750269889831543
    8. '_results' → logprob: -16.62527084350586
    9. '_cost' → logprob: -16.75027084350586
    10. '_lengths' → logprob: -16.87527084350586

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25279009342193604
    2. ' =' → logprob: -1.502790093421936
    3. '_' → logprob: -7.6277899742126465
    4. ',' → logprob: -9.127790451049805
    5. '_=' → logprob: -9.752790451049805
    6. '_dist' → logprob: -10.252790451049805
    7. 'dist' → logprob: -10.377790451049805
    8. ')' → logprob: -10.627790451049805
    9. 's' → logprob: -10.877790451049805
    10. '   ' → logprob: -11.127790451049805

Token 287: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12696212530136108
    2. ' graph' → logprob: -2.126962184906006
    3. '(graph' → logprob: -10.626961708068848
    4. '	graph' → logprob: -11.751961708068848
    5. '[' → logprob: -14.501961708068848
    6. '   ' → logprob: -14.876961708068848
    7. ' ' → logprob: -15.001961708068848
    8. 'heap' → logprob: -15.376961708068848
    9. '[]' → logprob: -15.876961708068848
    10. 'raph' → logprob: -16.001962661743164

Token 288: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -3.6312321753939614e-05
    2. '_' → logprob: -10.875036239624023
    3. 'short' → logprob: -11.250036239624023
    4. 'graph' → logprob: -13.125036239624023
    5. '(graph' → logprob: -13.750036239624023
    6. '_graph' → logprob: -14.000036239624023
    7. '_distance' → logprob: -16.250036239624023
    8. 'Shortest' → logprob: -16.625036239624023
    9. '```' → logprob: -16.750036239624023
    10. '_dist' → logprob: -17.500036239624023

Token 289: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0019437457667663693
    2. '_paths' → logprob: -6.251943588256836
    3. 'test' → logprob: -12.126943588256836
    4. 'ests' → logprob: -12.376943588256836
    5. 'paths' → logprob: -13.626943588256836
    6. '_path' → logprob: -13.626943588256836
    7. 't' → logprob: -13.626943588256836
    8. '_dist' → logprob: -15.001943588256836
    9. 'st' → logprob: -15.126943588256836
    10. 'ort' → logprob: -15.501943588256836

Token 290: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -2.3557529857498594e-05
    2. '_dist' → logprob: -11.37502384185791
    3. 'paths' → logprob: -12.00002384185791
    4. 'dist' → logprob: -12.25002384185791
    5. '_path' → logprob: -14.12502384185791
    6. '_' → logprob: -15.87502384185791
    7. '_points' → logprob: -17.000022888183594
    8. 's' → logprob: -17.250022888183594
    9. 'path' → logprob: -17.500022888183594
    10. '_routes' → logprob: -17.875022888183594

Token 291: '(ad' (ID: 36787)
  Prédit: '(ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ad' → logprob: -9.794061770662665e-05
    2. '(adj' → logprob: -9.75009822845459
    3. '(' → logprob: -10.25009822845459
    4. ' adjacency' → logprob: -13.37509822845459
    5. '(
' → logprob: -13.75009822845459
    6. ' (' → logprob: -14.00009822845459
    7. 'adj' → logprob: -14.37509822845459
    8. '```' → logprob: -16.125097274780273
    9. '.ad' → logprob: -17.875097274780273
    10. ')' → logprob: -18.125097274780273

Token 292: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.004095497075468302
    2. 'acency' → logprob: -5.504095554351807
    3. 'j' → logprob: -11.004095077514648
    4. 'acy' → logprob: -15.879095077514648
    5. 'Jac' → logprob: -16.62909507751465
    6. ' adjacency' → logprob: -17.12909507751465
    7. 'ja' → logprob: -17.75409507751465
    8. 'adj' → logprob: -18.25409507751465
    9. 'ge' → logprob: -18.25409507751465
    10. '_j' → logprob: -18.37909507751465

Token 293: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.00010807292710524052
    2. 'y' → logprob: -9.875107765197754
    3. 'acy' → logprob: -10.000107765197754
    4. 'acency' → logprob: -12.250107765197754
    5. 'ancy' → logprob: -13.375107765197754
    6. 'cy' → logprob: -14.000107765197754
    7. 'ent' → logprob: -14.000107765197754
    8. 'ENCY' → logprob: -14.125107765197754
    9. '
' → logprob: -15.000107765197754
    10. 'e' → logprob: -15.000107765197754

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017302791820839047
    2. '(ad' → logprob: -9.12517261505127
    3. ',start' → logprob: -10.62517261505127
    4. '(adj' → logprob: -11.25017261505127
    5. '(' → logprob: -11.50017261505127
    6. 'adj' → logprob: -12.12517261505127
    7. '(start' → logprob: -12.25017261505127
    8. ')' → logprob: -12.75017261505127
    9. ' ,' → logprob: -13.00017261505127
    10. '(),' → logprob: -15.25017261505127

Token 295: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009537404985167086
    2. ' start' → logprob: -7.000953674316406
    3. '250' → logprob: -10.875953674316406
    4. '0' → logprob: -10.875953674316406
    5. '   ' → logprob: -13.125953674316406
    6. '[start' → logprob: -14.625953674316406
    7. '(start' → logprob: -14.875953674316406
    8. ')' → logprob: -15.125953674316406
    9. 'star' → logprob: -15.125953674316406
    10. '	start' → logprob: -15.250953674316406

Token 296: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009942257311195135
    2. '0' → logprob: -7.0009942054748535
    3. '250' → logprob: -9.750994682312012
    4. ' start' → logprob: -10.875994682312012
    5. 'vertex' → logprob: -13.250994682312012
    6. 'star' → logprob: -14.250994682312012
    7. '   ' → logprob: -14.625994682312012
    8. '(start' → logprob: -14.875994682312012
    9. '[start' → logprob: -15.250994682312012
    10. '25' → logprob: -15.500994682312012

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011605957115534693
    2. ')
' → logprob: -9.125116348266602
    3. ' )' → logprob: -12.500116348266602
    4. '   ' → logprob: -13.500116348266602
    5. ')

' → logprob: -14.375116348266602
    6. ' ' → logprob: -15.375116348266602
    7. '[' → logprob: -15.500116348266602
    8. ')[' → logprob: -15.500116348266602
    9. '))' → logprob: -16.0001163482666
    10. ')
' → logprob: -16.0001163482666

Token 298: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4127630591392517
    2. 'else' → logprob: -1.4127631187438965
    3. '<|end|>' → logprob: -3.4127631187438965
    4. 'for' → logprob: -4.1627631187438965
    5. '   ' → logprob: -4.6627631187438965
    6. 'elif' → logprob: -4.7877631187438965
    7. ')' → logprob: -4.9127631187438965
    8. '[' → logprob: -5.0377631187438965
    9. '.' → logprob: -5.7877631187438965
    10. ']' → logprob: -6.0377631187438965

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006052158772945404
    2. ':
' → logprob: -5.131052017211914
    3. '   ' → logprob: -9.131052017211914
    4. ' :' → logprob: -11.256052017211914
    5. ' :
' → logprob: -14.131052017211914
    6. '{' → logprob: -14.506052017211914
    7. ':

' → logprob: -14.881052017211914
    8. ':
' → logprob: -15.506052017211914
    9. '    ' → logprob: -16.256052017211914
    10. '<|end|>' → logprob: -16.506052017211914

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34072166681289673
    2. 'for' → logprob: -1.590721607208252
    3. ' for' → logprob: -2.465721607208252
    4. '	for' → logprob: -11.46572208404541
    5. '```' → logprob: -13.09072208404541
    6. ' ' → logprob: -13.96572208404541
    7. '   ' → logprob: -14.09072208404541
    8. '       ' → logprob: -14.46572208404541
    9. '    
' → logprob: -14.59072208404541
    10. 'print' → logprob: -14.59072208404541

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014555037952959538
    2. ' for' → logprob: -4.264554977416992
    3. '   ' → logprob: -9.014554977416992
    4. 'print' → logprob: -9.514554977416992
    5. 'from' → logprob: -10.389554977416992
    6. 'min' → logprob: -10.764554977416992
    7. 'pass' → logprob: -10.764554977416992
    8. 'import' → logprob: -11.139554977416992
    9. '#' → logprob: -11.264554977416992
    10. 'result' → logprob: -11.764554977416992

Token 302: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4740888178348541
    2. '_' → logprob: -0.9740887880325317
    3. ' ' → logprob: -11.849088668823242
    4. ' i' → logprob: -12.724088668823242
    5. ' ' → logprob: -13.974088668823242
    6. '_i' → logprob: -15.474088668823242
    7. ' range' → logprob: -15.724088668823242
    8. ' in' → logprob: -15.974088668823242
    9. ' _
' → logprob: -16.349088668823242
    10. '_range' → logprob: -16.599088668823242

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024737544357776642
    2. 'in' → logprob: -3.774737596511841
    3. '_' → logprob: -7.149737358093262
    4. 'range' → logprob: -7.649737358093262
    5. ' range' → logprob: -8.524737358093262
    6. ' ' → logprob: -11.274737358093262
    7. ' _' → logprob: -11.649737358093262
    8. 'n' → logprob: -12.024737358093262
    9. 's' → logprob: -13.524737358093262
    10. '_range' → logprob: -14.649737358093262

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1274162381887436
    2. ' range' → logprob: -2.1274161338806152
    3. '_' → logprob: -7.627416133880615
    4. '_range' → logprob: -14.627416610717773
    5. '(range' → logprob: -15.002416610717773
    6. '	range' → logprob: -15.377416610717773
    7. ' ' → logprob: -17.127416610717773
    8. ' in' → logprob: -17.252416610717773
    9. ' _' → logprob: -17.252416610717773
    10. 'ran' → logprob: -17.877416610717773

Token 305: '(edge' (ID: 84023)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3181349039077759
    2. '(edge' → logprob: -1.3181349039077759
    3. 'edge' → logprob: -5.443134784698486
    4. ' (' → logprob: -7.943134784698486
    5. '(' → logprob: -8.943135261535645
    6. ' range' → logprob: -10.318135261535645
    7. '=edge' → logprob: -11.568135261535645
    8. ' ' → logprob: -12.943135261535645
    9. '_edge' → logprob: -13.568135261535645
    10. 'range' → logprob: -13.693135261535645

Token 306: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.253090865968261e-06
    2. 'count' → logprob: -11.625009536743164
    3. '_' → logprob: -15.500009536743164
    4. ' ' → logprob: -17.500009536743164
    5. '_COUNT' → logprob: -17.750009536743164
    6. '_edge' → logprob: -17.750009536743164
    7. 'Count' → logprob: -18.000009536743164
    8. '_val' → logprob: -18.125009536743164
    9. '_state' → logprob: -18.375009536743164
    10. 'edge' → logprob: -18.625009536743164

Token 307: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6453533172607422
    2. '):' → logprob: -0.7703533172607422
    3. ':' → logprob: -4.520353317260742
    4. '   ' → logprob: -7.395353317260742
    5. ',' → logprob: -7.770353317260742
    6. '       ' → logprob: -8.395353317260742
    7. ':
' → logprob: -8.645353317260742
    8. '):
' → logprob: -8.645353317260742
    9. '():
' → logprob: -9.020353317260742
    10. '():' → logprob: -10.520353317260742

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10905978828668594
    2. ' src' → logprob: -2.3590598106384277
    3. 'src' → logprob: -4.859059810638428
    4. '   ' → logprob: -7.359059810638428
    5. '	src' → logprob: -8.48405933380127
    6. '[src' → logprob: -9.98405933380127
    7. ' ' → logprob: -10.85905933380127
    8. ' dst' → logprob: -10.98405933380127
    9. '	   ' → logprob: -11.10905933380127
    10. '(src' → logprob: -11.23405933380127

Token 309: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' (adapté à ' src') → logprob: -0.5349363684654236
    2. ' src' → logprob: -0.9099363684654236
    3. ' line' → logprob: -5.534936428070068
    4. ' u' → logprob: -6.409936428070068
    5. ' parts' → logprob: -6.409936428070068
    6. 'u' → logprob: -6.659936428070068
    7. 'line' → logprob: -7.409936428070068
    8. 's' → logprob: -7.909936428070068
    9. ' node' → logprob: -8.28493595123291
    10. '   ' → logprob: -8.28493595123291

Token 310: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.03085174225270748
    2. '_' → logprob: -3.5308518409729004
    3. '<|end|>' → logprob: -8.405851364135742
    4. ' _' → logprob: -8.530851364135742
    5. '_Node' → logprob: -9.155851364135742
    6. '_token' → logprob: -9.280851364135742
    7. '_user' → logprob: -9.405851364135742
    8. '_code' → logprob: -9.405851364135742
    9. '_nodes' → logprob: -9.530851364135742
    10. '_NODE' → logprob: -10.280851364135742

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',
' → logprob: -19.125003814697266
    4. '‌,' → logprob: -19.500003814697266
    5. 'src' → logprob: -19.875003814697266
    6. '=' → logprob: -20.375003814697266
    7. '_,' → logprob: -20.750003814697266
    8. ',\
' → logprob: -21.000003814697266
    9. ',int' → logprob: -21.250003814697266
    10. ',",' → logprob: -21.250003814697266

Token 312: ' dst' (ID: 23480)
  Prédit: ' dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -0.018160004168748856
    2. 'dst' → logprob: -4.018159866333008
    3. '_dst' → logprob: -12.643159866333008
    4. '	dst' → logprob: -12.768159866333008
    5. '(dst' → logprob: -13.018159866333008
    6. '.dst' → logprob: -14.143159866333008
    7. 'src' → logprob: -15.143159866333008
    8. ' src' → logprob: -15.268159866333008
    9. 'Dst' → logprob: -15.393159866333008
    10. '=' → logprob: -17.143159866333008

Token 313: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007542393868789077
    2. '_' → logprob: -7.250754356384277
    3. ' _' → logprob: -10.625754356384277
    4. '_code' → logprob: -12.625754356384277
    5. '_nodes' → logprob: -12.750754356384277
    6. '_user' → logprob: -13.125754356384277
    7. '_n' → logprob: -13.125754356384277
    8. '```' → logprob: -13.250754356384277
    9. '_Node' → logprob: -13.250754356384277
    10. '_NODE' → logprob: -13.500754356384277

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ' ,' → logprob: -10.375031471252441
    3. '=' → logprob: -14.375031471252441
    4. '_,' → logprob: -17.375032424926758
    5. ' =' → logprob: -18.000032424926758
    6. '‌,' → logprob: -19.375032424926758
    7. ',
' → logprob: -19.500032424926758
    8. ',val' → logprob: -19.625032424926758
    9. '،' → logprob: -19.875032424926758
    10. ' ' → logprob: -19.875032424926758

Token 315: ' val' (ID: 1459)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.16098462045192719
    2. 'edge' → logprob: -1.9109846353530884
    3. ' cost' → logprob: -8.910984992980957
    4. 'weight' → logprob: -9.035984992980957
    5. 'src' → logprob: -9.035984992980957
    6. ' src' → logprob: -9.160984992980957
    7. ' weight' → logprob: -9.410984992980957
    8. 'cost' → logprob: -9.785984992980957
    9. ' dst' → logprob: -11.035984992980957
    10. 'dst' → logprob: -11.285984992980957

Token 316: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0021788119338452816
    2. '_' → logprob: -6.62717866897583
    3. 'a' → logprob: -7.75217866897583
    4. '_val' → logprob: -7.87717866897583
    5. '1' → logprob: -11.002179145812988
    6. ' _' → logprob: -12.127179145812988
    7. '_edge' → logprob: -12.502179145812988
    8. ',' → logprob: -13.127179145812988
    9. '_code' → logprob: -13.377179145812988
    10. 's' → logprob: -13.502179145812988

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045120082795619965
    2. ' =' → logprob: -6.129511833190918
    3. '=' → logprob: -6.379511833190918
    4. ' ,' → logprob: -7.379511833190918
    5. ',val' → logprob: -12.629511833190918
    6. ' ' → logprob: -14.254511833190918
    7. '   ' → logprob: -16.254512786865234
    8. '_,' → logprob: -16.504512786865234
    9. '<|end|>' → logprob: -16.754512786865234
    10. 's' → logprob: -17.379512786865234

Token 318: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.28160786628723145
    2. ' val' → logprob: -1.4066078662872314
    3. 'src' → logprob: -8.406607627868652
    4. ' src' → logprob: -9.781607627868652
    5. 'dst' → logprob: -9.781607627868652
    6. ' dst' → logprob: -10.656607627868652
    7. 'edge' → logprob: -10.969107627868652
    8. '   ' → logprob: -10.969107627868652
    9. '	val' → logprob: -11.781607627868652
    10. ' ' → logprob: -11.844107627868652

Token 319: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006870240438729525
    2. '_a' → logprob: -5.006870269775391
    3. 'b' → logprob: -9.88187026977539
    4. '_node' → logprob: -9.88187026977539
    5. '_val' → logprob: -10.25687026977539
    6. 'a' → logprob: -11.63187026977539
    7. '_input' → logprob: -13.25687026977539
    8. '_' → logprob: -13.63187026977539
    9. '```' → logprob: -13.75687026977539
    10. 'val' → logprob: -13.88187026977539

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868725895881653
    2. '=' → logprob: -1.1368725299835205
    3. ' ' → logprob: -13.636872291564941
    4. '   ' → logprob: -15.511872291564941
    5. ',' → logprob: -16.261873245239258
    6. '  ' → logprob: -17.261873245239258
    7. '	' → logprob: -18.011873245239258
    8. ' ' → logprob: -18.886873245239258
    9. '    ' → logprob: -19.136873245239258
    10. ')' → logprob: -19.261873245239258

Token 321: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0040785204619169235
    2. 'map' → logprob: -5.504078388214111
    3. '	map' → logprob: -17.129077911376953
    4. ' list' → logprob: -18.004077911376953
    5. '(map' → logprob: -18.254077911376953
    6. ' ' → logprob: -18.879077911376953
    7. '    ' → logprob: -19.254077911376953
    8. '.map' → logprob: -19.379077911376953
    9. ',map' → logprob: -19.629077911376953
    10. ' mapa' → logprob: -20.629077911376953

Token 322: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.029831135645508766
    2. 'int' → logprob: -3.5298311710357666
    3. '=int' → logprob: -10.529830932617188
    4. ',int' → logprob: -11.154830932617188
    5. '<int' → logprob: -11.279830932617188
    6. '[int' → logprob: -11.404830932617188
    7. ']int' → logprob: -11.529830932617188
    8. ' int' → logprob: -12.404830932617188
    9. ':int' → logprob: -13.529830932617188
    10. '	int' → logprob: -15.904830932617188

Token 323: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08703780919313431
    2. ',input' → logprob: -2.7120378017425537
    3. ',' → logprob: -4.212038040161133
    4. '(' → logprob: -6.462038040161133
    5. '(int' → logprob: -7.962038040161133
    6. '=input' → logprob: -9.337038040161133
    7. ',int' → logprob: -9.712038040161133
    8. 'input' → logprob: -10.087038040161133
    9. '(),' → logprob: -11.087038040161133
    10. '[input' → logprob: -12.212038040161133

Token 324: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005538671393878758
    2. ' input' → logprob: -7.500554084777832
    3. 'int' → logprob: -14.000554084777832
    4. '(input' → logprob: -17.250553131103516
    5. ',input' → logprob: -19.250553131103516
    6. 'in' → logprob: -20.375553131103516
    7. '=input' → logprob: -21.250553131103516
    8. 'sys' → logprob: -22.125553131103516
    9. '[input' → logprob: -22.875553131103516
    10. 'inp' → logprob: -22.875553131103516

Token 325: '_reader' (ID: 55777)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001957894302904606
    2. '_reader' → logprob: -6.251957893371582
    3. '.readline' → logprob: -11.251957893371582
    4. 'reader' → logprob: -12.001957893371582
    5. '()' → logprob: -12.126957893371582
    6. 'Reader' → logprob: -12.626957893371582
    7. '.reader' → logprob: -14.251957893371582
    8. '-reader' → logprob: -15.376957893371582
    9. '.read' → logprob: -15.501957893371582
    10. '().__' → logprob: -15.626957893371582

Token 326: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -16.2500057220459
    4. '()[' → logprob: -18.2500057220459
    5. ')' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.7500057220459
    7. '.' → logprob: -18.7500057220459
    8. '.split' → logprob: -18.8750057220459
    9. '(' → logprob: -19.0000057220459
    10. ' ' → logprob: -19.2500057220459

Token 327: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'spl' → logprob: -16.375
    3. ' split' → logprob: -16.875
    4. '(split' → logprob: -17.25
    5. ')' → logprob: -17.875
    6. 's' → logprob: -19.375
    7. 'strip' → logprob: -19.5
    8. '.split' → logprob: -19.5
    9. '()' → logprob: -20.25
    10. 'skip' → logprob: -20.25

Token 328: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1699656993150711
    2. ')' → logprob: -1.9199657440185547
    3. '()' → logprob: -5.044965744018555
    4. '())
' → logprob: -5.794965744018555
    5. ')
' → logprob: -8.669965744018555
    6. '       ' → logprob: -11.044965744018555
    7. ' ())' → logprob: -11.794965744018555
    8. '()
' → logprob: -12.419965744018555
    9. '())
' → logprob: -12.919965744018555
    10. ' )' → logprob: -13.294965744018555

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07008437067270279
    2. '   ' → logprob: -2.8200843334198
    3. '<|end|>' → logprob: -5.695084571838379
    4. 'src' → logprob: -6.070084571838379
    5. '	src' → logprob: -6.945084571838379
    6. ',' → logprob: -7.695084571838379
    7. '[src' → logprob: -7.820084571838379
    8. ' src' → logprob: -8.195084571838379
    9. '        
' → logprob: -9.445084571838379
    10. ' ' → logprob: -9.445084571838379

Token 330: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' (adapté à ' src') → logprob: -0.47445783019065857
    2. ' src' → logprob: -0.974457859992981
    3. '	src' → logprob: -8.724457740783691
    4. '[src' → logprob: -9.599457740783691
    5. '   ' → logprob: -10.099457740783691
    6. '       ' → logprob: -10.474457740783691
    7. '_src' → logprob: -11.099457740783691
    8. '(src' → logprob: -11.474457740783691
    9. '/src' → logprob: -11.599457740783691
    10. '
' → logprob: -11.974457740783691

Token 331: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.5577775128767826e-06
    2. '_nodes' → logprob: -12.875005722045898
    3. '_NODE' → logprob: -14.125005722045898
    4. ')_' → logprob: -14.500005722045898
    5. '_' → logprob: -14.875005722045898
    6. '_code' → logprob: -15.000005722045898
    7. '_Node' → logprob: -15.500005722045898
    8. '_n' → logprob: -15.875005722045898
    9. 'Node' → logprob: -16.0000057220459
    10. '   ' → logprob: -16.1250057220459

Token 332: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.010958919301629066
    2. '-=' → logprob: -4.635959148406982
    3. '-' → logprob: -6.885959148406982
    4. ' -' → logprob: -9.260958671569824
    5. '   ' → logprob: -10.135958671569824
    6. '    ' → logprob: -11.010958671569824
    7. ' ' → logprob: -11.635958671569824
    8. ')' → logprob: -12.385958671569824
    9. '       ' → logprob: -12.760958671569824
    10. '        ' → logprob: -13.010958671569824

Token 333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06196858361363411
    2. ' ' → logprob: -2.8119685649871826
    3. '<|end|>' → logprob: -14.811968803405762
    4. '0' → logprob: -15.061968803405762
    5. ' ' → logprob: -16.686967849731445
    6. '```' → logprob: -18.061967849731445
    7. ')' → logprob: -18.186967849731445
    8. '2' → logprob: -18.561967849731445
    9. ',' → logprob: -18.936967849731445
    10. '=' → logprob: -18.936967849731445

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -18.875015258789062
    4. '```' → logprob: -19.062515258789062
    5. '۱' → logprob: -20.062515258789062
    6. '2' → logprob: -20.125015258789062
    7. '   ' → logprob: -20.187515258789062
    8. '0' → logprob: -20.250015258789062
    9. '１' → logprob: -20.437515258789062
    10. '১' → logprob: -20.625015258789062

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026083022356033325
    2. 'dst' → logprob: -4.151082992553711
    3. ' dst' → logprob: -4.776082992553711
    4. ',' → logprob: -7.151082992553711
    5. '	dst' → logprob: -7.401082992553711
    6. '(dst' → logprob: -10.026082992553711
    7. '.dst' → logprob: -10.401082992553711
    8. '_dst' → logprob: -10.401082992553711
    9. '   ' → logprob: -10.651082992553711
    10. '
' → logprob: -11.151082992553711

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17075930535793304
    2. ' dst' → logprob: -2.0457592010498047
    3. 'dst' → logprob: -3.6707592010498047
    4. '	dst' → logprob: -6.170759201049805
    5. '_dst' → logprob: -10.170759201049805
    6. '(dst' → logprob: -10.545759201049805
    7. '   ' → logprob: -10.670759201049805
    8. ',' → logprob: -10.670759201049805
    9. '.dst' → logprob: -11.295759201049805
    10. '      ' → logprob: -12.295759201049805

Token 337: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' (adapté à ' dst') → logprob: -0.012526480481028557
    2. ' dst' → logprob: -4.387526512145996
    3. '       ' → logprob: -11.637526512145996
    4. '	dst' → logprob: -12.637526512145996
    5. 'src' → logprob: -13.012526512145996
    6. '(dst' → logprob: -14.262526512145996
    7. '_dst' → logprob: -14.762526512145996
    8. '
' → logprob: -14.887526512145996
    9. 'dest' → logprob: -15.012526512145996
    10. '   ' → logprob: -15.387526512145996

Token 338: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.896309739408025e-07
    2. 'node' → logprob: -15.375000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_NODE' → logprob: -16.0
    5. '_nodes' → logprob: -16.25
    6. '_state' → logprob: -16.75
    7. 'Node' → logprob: -17.0
    8. '_code' → logprob: -17.125
    9. '_user' → logprob: -17.5
    10. '_Node' → logprob: -17.625

Token 339: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.00041875618626363575
    2. '-=' → logprob: -8.375418663024902
    3. ' -' → logprob: -9.875418663024902
    4. '<|end|>' → logprob: -10.000418663024902
    5. '-' → logprob: -10.125418663024902
    6. '       ' → logprob: -10.750418663024902
    7. '   ' → logprob: -11.250418663024902
    8. ' ' → logprob: -12.250418663024902
    9. '        ' → logprob: -12.750418663024902
    10. '    ' → logprob: -13.500418663024902

Token 340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022524237632751
    2. ' ' → logprob: -1.91022527217865
    3. '0' → logprob: -14.660224914550781
    4. '<|end|>' → logprob: -15.035224914550781
    5. '```' → logprob: -15.785224914550781
    6. '-' → logprob: -16.72272491455078
    7. ' -' → logprob: -17.66022491455078
    8. '   ' → logprob: -18.22272491455078
    9. 's' → logprob: -18.47272491455078
    10. '2' → logprob: -18.47272491455078

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -16.93752098083496
    4. '0' → logprob: -17.37502098083496
    5. '<|end|>' → logprob: -17.81252098083496
    6. '-' → logprob: -17.81252098083496
    7. '   ' → logprob: -18.31252098083496
    8. '2' → logprob: -18.75002098083496
    9. 's' → logprob: -19.37502098083496
    10. '۱' → logprob: -19.87502098083496

Token 342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05826690047979355
    2. ' adjacency' → logprob: -3.0582668781280518
    3. '   ' → logprob: -4.808267116546631
    4. 'adj' → logprob: -6.933267116546631
    5. '        
' → logprob: -9.183266639709473
    6. '<|end|>' → logprob: -9.183266639709473
    7. ',' → logprob: -9.433266639709473
    8. '```' → logprob: -10.058266639709473
    9. '
' → logprob: -10.558266639709473
    10. ' if' → logprob: -10.683266639709473

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19339968264102936
    2. ' adjacency' → logprob: -2.068399667739868
    3. '   ' → logprob: -3.193399667739868
    4. 'adj' → logprob: -4.818399906158447
    5. '<|end|>' → logprob: -9.693399429321289
    6. ' adj' → logprob: -9.693399429321289
    7. ' if' → logprob: -9.943399429321289
    8. '```' → logprob: -10.068399429321289
    9. ' ' → logprob: -10.818399429321289
    10. 'Adj' → logprob: -11.193399429321289

Token 344: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005156316328793764
    2. 'if' → logprob: -5.880156517028809
    3. ' adjacency' → logprob: -6.380156517028809
    4. '   ' → logprob: -8.255156517028809
    5. 'weight' → logprob: -9.505156517028809
    6. 'cost' → logprob: -9.755156517028809
    7. 'val' → logprob: -9.880156517028809
    8. ' if' → logprob: -10.255156517028809
    9. '       ' → logprob: -10.505156517028809
    10. 'a' → logprob: -10.505156517028809

Token 345: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.125009536743164
    3. 'src' → logprob: -13.125009536743164
    4. ' [' → logprob: -13.875009536743164
    5. '<src' → logprob: -14.625009536743164
    6. '[source' → logprob: -15.625009536743164
    7. '```' → logprob: -15.750009536743164
    8. ')[' → logprob: -16.500009536743164
    9. '   ' → logprob: -16.500009536743164
    10. '       ' → logprob: -17.125009536743164

Token 346: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.0564331205387134e-05
    2. 'node' → logprob: -11.87501049041748
    3. '[node' → logprob: -13.75001049041748
    4. '   ' → logprob: -14.00001049041748
    5. 'Node' → logprob: -14.75001049041748
    6. '_nodes' → logprob: -15.25001049041748
    7. '_code' → logprob: -15.62501049041748
    8. '[' → logprob: -15.62501049041748
    9. '_NODE' → logprob: -15.75001049041748
    10. ']' → logprob: -16.125011444091797

Token 347: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5571752190589905
    2. '.append' → logprob: -1.3071751594543457
    3. ').' → logprob: -2.0571751594543457
    4. '.' → logprob: -3.5571751594543457
    5. '       ' → logprob: -9.807175636291504
    6. ',' → logprob: -9.932175636291504
    7. '   ' → logprob: -10.057175636291504
    8. ')' → logprob: -10.307175636291504
    9. '}.' → logprob: -10.807175636291504
    10. '           ' → logprob: -11.182175636291504

Token 348: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. '.append' → logprob: -14.250000953674316
    3. ' append' → logprob: -14.625000953674316
    4. 'appen' → logprob: -18.625001907348633
    5. '	append' → logprob: -19.500001907348633
    6. 'app' → logprob: -20.125001907348633
    7. 'Append' → logprob: -20.375001907348633
    8. '_append' → logprob: -20.625001907348633
    9. 'insert' → logprob: -21.375001907348633
    10. '```' → logprob: -22.125001907348633

Token 349: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0036340425722301006
    2. ' ((' → logprob: -5.878633975982666
    3. '(dst' → logprob: -7.753633975982666
    4. ' (' → logprob: -8.003634452819824
    5. '(' → logprob: -9.878634452819824
    6. '(src' → logprob: -11.878634452819824
    7. '<|end|>' → logprob: -13.128634452819824
    8. '(
' → logprob: -13.628634452819824
    9. ',' → logprob: -13.878634452819824
    10. '```' → logprob: -14.003634452819824

Token 350: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0008781121578067541
    2. '(dst' → logprob: -7.75087833404541
    3. ' dst' → logprob: -7.75087833404541
    4. '
' → logprob: -12.62587833404541
    5. 'src' → logprob: -12.62587833404541
    6. '   ' → logprob: -12.87587833404541
    7. '	dst' → logprob: -13.00087833404541
    8. '(' → logprob: -13.25087833404541
    9. '(
' → logprob: -14.62587833404541
    10. 'd' → logprob: -15.12587833404541

Token 351: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.6240566083070007e-06
    2. 'node' → logprob: -13.750001907348633
    3. '_nodes' → logprob: -16.000001907348633
    4. '_state' → logprob: -16.625001907348633
    5. '
' → logprob: -16.750001907348633
    6. 'Node' → logprob: -16.875001907348633
    7. '_NODE' → logprob: -17.375001907348633
    8. '_' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '```' → logprob: -17.875001907348633

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ' ,' → logprob: -11.000041961669922
    3. ',val' → logprob: -11.000041961669922
    4. ',
' → logprob: -11.875041961669922
    5. ',(' → logprob: -15.250041961669922
    6. '),' → logprob: -15.625041961669922
    7. '```' → logprob: -15.875041961669922
    8. '<|end|>' → logprob: -16.500041961669922
    9. '   ' → logprob: -16.750041961669922
    10. ',value' → logprob: -16.750041961669922

Token 353: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4294123649597168
    2. ' val' → logprob: -1.0544123649597168
    3. '1' → logprob: -8.304412841796875
    4. '(val' → logprob: -9.304412841796875
    5. ' min' → logprob: -9.429412841796875
    6. ' ' → logprob: -10.116912841796875
    7. 'min' → logprob: -10.179412841796875
    8. '0' → logprob: -10.366912841796875
    9. '
' → logprob: -10.804412841796875
    10. 'max' → logprob: -10.991912841796875

Token 354: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.006743792910128832
    2. '_b' → logprob: -5.006743907928467
    3. 'a' → logprob: -10.881743431091309
    4. '_' → logprob: -12.506743431091309
    5. ' _' → logprob: -13.506743431091309
    6. '_val' → logprob: -14.006743431091309
    7. '_
' → logprob: -14.381743431091309
    8. ')' → logprob: -14.506743431091309
    9. ')_' → logprob: -15.006743431091309
    10. '
' → logprob: -15.256743431091309

Token 355: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20720380544662476
    2. '))
' → logprob: -1.7072038650512695
    3. ')' → logprob: -5.2072038650512695
    4. '       ' → logprob: -8.95720386505127
    5. ')
' → logprob: -8.95720386505127
    6. '   ' → logprob: -11.70720386505127
    7. '))
' → logprob: -11.95720386505127
    8. ',' → logprob: -12.08220386505127
    9. ' ))' → logprob: -12.33220386505127
    10. ')))' → logprob: -12.45720386505127

Token 356: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10061228275299072
    2. ' val' → logprob: -2.350612163543701
    3. '))' → logprob: -8.47561264038086
    4. ')' → logprob: -9.47561264038086
    5. '0' → logprob: -11.60061264038086
    6. ' )' → logprob: -11.60061264038086
    7. '(val' → logprob: -11.72561264038086
    8. ',val' → logprob: -11.85061264038086
    9. ' ' → logprob: -11.97561264038086
    10. '1' → logprob: -12.03811264038086

Token 357: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.029975062236189842
    2. '_a' → logprob: -3.529975175857544
    3. '))' → logprob: -9.154974937438965
    4. ')' → logprob: -10.404974937438965
    5. 'a' → logprob: -10.904974937438965
    6. '"_' → logprob: -11.154974937438965
    7. ')_' → logprob: -11.654974937438965
    8. ' _' → logprob: -11.654974937438965
    9. '_' → logprob: -11.904974937438965
    10. 'b' → logprob: -12.029974937438965

Token 358: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018249452114105225
    2. ')' → logprob: -4.01824951171875
    3. '))
' → logprob: -9.26824951171875
    4. ')
' → logprob: -13.14324951171875
    5. ')))' → logprob: -13.64324951171875
    6. ' ))' → logprob: -14.14324951171875
    7. '));' → logprob: -15.26824951171875
    8. '),' → logprob: -15.39324951171875
    9. ')}' → logprob: -15.64324951171875
    10. '))

' → logprob: -15.76824951171875

Token 359: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7157864570617676
    2. '<|end|>' → logprob: -0.8407864570617676
    3. '\n' → logprob: -3.5907864570617676
    4. ')' → logprob: -3.5907864570617676
    5. '   ' → logprob: -4.340786457061768
    6. 'newline' → logprob: -6.090786457061768
    7. '\' → logprob: -6.465786457061768
    8. ':' → logprob: -6.590786457061768
    9. '    
' → logprob: -6.965786457061768
    10. '       ' → logprob: -6.965786457061768

Token 360: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5491690039634705
    2. 'adj' → logprob: -1.2991690635681152
    3. '       ' → logprob: -1.9241690635681152
    4. '   ' → logprob: -5.674169063568115
    5. ' adj' → logprob: -8.674168586730957
    6. '           ' → logprob: -10.549168586730957
    7. 'ad' → logprob: -10.674168586730957
    8. ' ' → logprob: -10.674168586730957
    9. '#' → logprob: -11.049168586730957
    10. '<|end|>' → logprob: -11.299168586730957

Token 361: '[' (ID: 58)
  Prédit: '[src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.0067201098427176476
    2. '[' → logprob: -5.006720066070557
    3. 'src' → logprob: -12.631720542907715
    4. '<src' → logprob: -15.006720542907715
    5. '[curr' → logprob: -15.131720542907715
    6. 'dst' → logprob: -15.131720542907715
    7. '[s' → logprob: -16.2567195892334
    8. '[start' → logprob: -16.7567195892334
    9. '	dst' → logprob: -17.0067195892334
    10. '[d' → logprob: -17.0067195892334

Token 362: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0002997120900545269
    2. 'src' → logprob: -8.375299453735352
    3. '[' → logprob: -10.000299453735352
    4. ' dst' → logprob: -11.250299453735352
    5. '	dst' → logprob: -12.875299453735352
    6. '(dst' → logprob: -13.000299453735352
    7. '   ' → logprob: -13.625299453735352
    8. '[src' → logprob: -13.625299453735352
    9. '
' → logprob: -13.875299453735352
    10. '_dst' → logprob: -14.625299453735352

Token 363: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.538490950129926e-05
    2. '_nodes' → logprob: -10.250055313110352
    3. '_code' → logprob: -11.750055313110352
    4. 'Node' → logprob: -12.125055313110352
    5. 'adj' → logprob: -12.375055313110352
    6. 'node' → logprob: -14.125055313110352
    7. '_NODE' → logprob: -14.250055313110352
    8. '```' → logprob: -15.625055313110352
    9. '_state' → logprob: -15.875055313110352
    10. '   ' → logprob: -16.00005531311035

Token 364: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.056546010076999664
    2. '.' → logprob: -3.3065459728240967
    3. '].' → logprob: -4.681546211242676
    4. ').' → logprob: -4.806546211242676
    5. ' .' → logprob: -7.806546211242676
    6. '           ' → logprob: -8.056546211242676
    7. ',' → logprob: -9.556546211242676
    8. '       ' → logprob: -10.056546211242676
    9. '.app' → logprob: -11.681546211242676
    10. '   ' → logprob: -11.806546211242676

Token 365: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5107177862082608e-05
    2. ' append' → logprob: -10.625024795532227
    3. '.append' → logprob: -14.375024795532227
    4. 'appen' → logprob: -16.125024795532227
    5. '	append' → logprob: -17.750024795532227
    6. 'Append' → logprob: -19.750024795532227
    7. '```' → logprob: -20.125024795532227
    8. 'app' → logprob: -20.125024795532227
    9. 'prepend' → logprob: -20.500024795532227
    10. '_append' → logprob: -20.625024795532227

Token 366: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0021298027131706476
    2. '(' → logprob: -7.252130031585693
    3. '(src' → logprob: -7.377130031585693
    4. ' ((' → logprob: -7.877130031585693
    5. ' (' → logprob: -8.002129554748535
    6. '(dst' → logprob: -9.502129554748535
    7. '(
' → logprob: -12.627129554748535
    8. '(sr' → logprob: -15.127129554748535
    9. '   ' → logprob: -15.752129554748535
    10. '       ' → logprob: -15.752129554748535

Token 367: 'src' (ID: 7205)
  Prédit: 'src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.4806826710700989
    2. '(src' → logprob: -0.9806826710700989
    3. '(dst' → logprob: -5.980682849884033
    4. 'dst' → logprob: -6.355682849884033
    5. '[src' → logprob: -6.855682849884033
    6. ' src' → logprob: -6.855682849884033
    7. ' (' → logprob: -8.730682373046875
    8. '<src' → logprob: -10.855682373046875
    9. ' dst' → logprob: -11.480682373046875
    10. '/src' → logprob: -11.980682373046875

Token 368: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.438573680294212e-06
    2. 'Node' → logprob: -12.875005722045898
    3. '```' → logprob: -14.000005722045898
    4. 'node' → logprob: -14.500005722045898
    5. '_NODE' → logprob: -14.625005722045898
    6. '   ' → logprob: -16.0000057220459
    7. '-node' → logprob: -16.0000057220459
    8. '-' → logprob: -16.0000057220459
    9. '_state' → logprob: -16.7500057220459
    10. '
' → logprob: -16.7500057220459

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010454319417476654
    2. ' ,' → logprob: -6.876045227050781
    3. ',val' → logprob: -11.876045227050781
    4. '(' → logprob: -12.876045227050781
    5. ',(' → logprob: -14.501045227050781
    6. ' (' → logprob: -14.501045227050781
    7. ')' → logprob: -14.501045227050781
    8. ',
' → logprob: -14.626045227050781
    9. ' ' → logprob: -15.376045227050781
    10. '       ' → logprob: -15.876045227050781

Token 370: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.03022965043783188
    2. 'val' → logprob: -3.5302295684814453
    3. '(val' → logprob: -7.780229568481445
    4. ' (' → logprob: -9.905229568481445
    5. ',val' → logprob: -12.905229568481445
    6. '[val' → logprob: -13.280229568481445
    7. '(' → logprob: -13.405229568481445
    8. '	val' → logprob: -13.530229568481445
    9. '        ' → logprob: -14.280229568481445
    10. '_val' → logprob: -14.530229568481445

Token 371: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.12704308331012726
    2. '_b' → logprob: -2.1270430088043213
    3. 'a' → logprob: -9.252042770385742
    4. 'val' → logprob: -12.377042770385742
    5. 'b' → logprob: -12.752042770385742
    6. '_val' → logprob: -13.127042770385742
    7. '```' → logprob: -14.002042770385742
    8. '_' → logprob: -14.002042770385742
    9. ' _' → logprob: -14.252042770385742
    10. ')' → logprob: -14.252042770385742

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. ' ,' → logprob: -9.12514591217041
    3. ',val' → logprob: -10.25014591217041
    4. ',
' → logprob: -13.87514591217041
    5. '```' → logprob: -15.75014591217041
    6. '   ' → logprob: -15.87514591217041
    7. '       ' → logprob: -16.500146865844727
    8. '‌,' → logprob: -16.750146865844727
    9. ')' → logprob: -16.875146865844727
    10. ' ' → logprob: -16.875146865844727

Token 373: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1797478049993515
    2. ' val' → logprob: -1.8047478199005127
    3. ' ' → logprob: -14.429747581481934
    4. '	val' → logprob: -14.804747581481934
    5. ',val' → logprob: -15.179747581481934
    6. '[val' → logprob: -15.304747581481934
    7. '    ' → logprob: -15.304747581481934
    8. 'v' → logprob: -15.554747581481934
    9. '_val' → logprob: -15.679747581481934
    10. '(val' → logprob: -15.679747581481934

Token 374: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0028174780309200287
    2. 'b' → logprob: -5.877817630767822
    3. '_a' → logprob: -12.252817153930664
    4. 'B' → logprob: -12.752817153930664
    5. 'a' → logprob: -13.752817153930664
    6. ')' → logprob: -14.127817153930664
    7. ',' → logprob: -14.627817153930664
    8. '-b' → logprob: -14.752817153930664
    9. '```' → logprob: -15.252817153930664
    10. '   ' → logprob: -15.377817153930664

Token 375: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694060802459717
    2. '))' → logprob: -2.1269407272338867
    3. ')))' → logprob: -12.376940727233887
    4. ')
' → logprob: -12.626940727233887
    5. '))
' → logprob: -12.876940727233887
    6. '       ' → logprob: -13.626940727233887
    7. ' )' → logprob: -14.251940727233887
    8. ')}' → logprob: -14.876940727233887
    9. ' ))' → logprob: -16.12693977355957
    10. '   ' → logprob: -17.25193977355957

Token 376: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7269665598869324
    2. '   ' → logprob: -1.7269666194915771
    3. '<|end|>' → logprob: -1.8519666194915771
    4. 'def' → logprob: -2.351966619491577
    5. ')' → logprob: -3.226966619491577
    6. '```' → logprob: -4.476966381072998
    7. '#' → logprob: -4.726966381072998
    8. 'd' → logprob: -5.476966381072998
    9. 'n' → logprob: -5.726966381072998
    10. 'min' → logprob: -5.851966381072998

Token 377: ' node' (ID: 4596)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31128615140914917
    2. 'distance' → logprob: -2.186286211013794
    3. '   ' → logprob: -2.561286211013794
    4. 'dist' → logprob: -3.061286211013794
    5. '
' → logprob: -5.436285972595215
    6. 'import' → logprob: -5.811285972595215
    7. ')' → logprob: -5.936285972595215
    8. '#' → logprob: -5.936285972595215
    9. 'visited' → logprob: -5.936285972595215
    10. 'min' → logprob: -6.311285972595215

Token 378: '_charge' (ID: 110838)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7823946475982666
    2. '_count' → logprob: -1.2823946475982666
    3. '_' → logprob: -2.2823946475982666
    4. 's' → logprob: -3.0323946475982666
    5. '_queue' → logprob: -3.1573946475982666
    6. '_cost' → logprob: -3.9073946475982666
    7. ' _' → logprob: -5.1573944091796875
    8. 'dist' → logprob: -5.1573944091796875
    9. '_stack' → logprob: -5.4073944091796875
    10. '_states' → logprob: -5.4073944091796875

Token 379: '_data' (ID: 3537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06162768229842186
    2. ' =' → logprob: -2.9366276264190674
    3. '_cost' → logprob: -5.6866278648376465
    4. '=' → logprob: -6.0616278648376465
    5. ',' → logprob: -8.436627388000488
    6. '_s' → logprob: -9.186627388000488
    7. '_times' → logprob: -9.311627388000488
    8. 'cost' → logprob: -9.436627388000488
    9. '[' → logprob: -9.561627388000488
    10. 'd' → logprob: -9.686627388000488

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0043195029720664024
    2. '=' → logprob: -5.504319667816162
    3. ',' → logprob: -8.504319190979004
    4. '   ' → logprob: -11.254319190979004
    5. '[' → logprob: -12.629319190979004
    6. 'import' → logprob: -12.629319190979004
    7. '=[]' → logprob: -12.629319190979004
    8. '  ' → logprob: -12.879319190979004
    9. 's' → logprob: -12.879319190979004
    10. ')' → logprob: -13.129319190979004

Token 381: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09634069353342056
    2. '[node' → logprob: -3.4713406562805176
    3. '[min' → logprob: -3.8463406562805176
    4. '[(' → logprob: -4.221340656280518
    5. ' [' → logprob: -4.721340656280518
    6. '[int' → logprob: -6.096340656280518
    7. '[-' → logprob: -6.096340656280518
    8. '{}' → logprob: -6.346340656280518
    9. '[start' → logprob: -6.471340656280518
    10. '[[' → logprob: -6.721340656280518

Token 382: 'list' (ID: 2641)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0338817834854126
    2. '(' → logprob: -1.6588817834854126
    3. '0' → logprob: -2.033881664276123
    4. '(float' → logprob: -2.158881664276123
    5. '[' → logprob: -2.283881664276123
    6. '[]' → logprob: -2.908881664276123
    7. 'None' → logprob: -3.658881664276123
    8. '(-' → logprob: -5.783881664276123
    9. '(None' → logprob: -6.033881664276123
    10. '-' → logprob: -6.283881664276123

Token 383: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.19598592817783356
    2. '()' → logprob: -1.8209859132766724
    3. '()]' → logprob: -4.445985794067383
    4. '(input' → logprob: -6.070985794067383
    5. '(range' → logprob: -7.195985794067383
    6. '(' → logprob: -8.195985794067383
    7. 'map' → logprob: -8.445985794067383
    8. ']' → logprob: -8.445985794067383
    9. '(sys' → logprob: -8.820985794067383
    10. 'adj' → logprob: -9.070985794067383

Token 384: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5781190991401672
    2. 'int' → logprob: -0.8281190991401672
    3. ',int' → logprob: -6.453119277954102
    4. ')' → logprob: -8.453119277954102
    5. 'input' → logprob: -8.453119277954102
    6. ']int' → logprob: -9.828119277954102
    7. '[int' → logprob: -10.703119277954102
    8. 'tuple' → logprob: -10.953119277954102
    9. 'lambda' → logprob: -11.453119277954102
    10. ' int' → logprob: -11.453119277954102

Token 385: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19979922473430634
    2. ',input' → logprob: -1.8247991800308228
    3. ',' → logprob: -3.9497992992401123
    4. '(),' → logprob: -8.199799537658691
    5. '(' → logprob: -8.699799537658691
    6. 'input' → logprob: -9.574799537658691
    7. '(sys' → logprob: -10.074799537658691
    8. '=input' → logprob: -10.824799537658691
    9. '[input' → logprob: -12.199799537658691
    10. ')' → logprob: -12.324799537658691

Token 386: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.65101717156358e-05
    2. ' input' → logprob: -9.250096321105957
    3. 'sys' → logprob: -16.125097274780273
    4. ',input' → logprob: -16.500097274780273
    5. '(input' → logprob: -17.000097274780273
    6. '<input' → logprob: -17.250097274780273
    7. '[input' → logprob: -17.750097274780273
    8. '=input' → logprob: -17.875097274780273
    9. ')' → logprob: -18.250097274780273
    10. 'lambda' → logprob: -18.500097274780273

Token 387: '_reader' (ID: 55777)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02833964303135872
    2. '())' → logprob: -3.9033396244049072
    3. '.readline' → logprob: -5.153339862823486
    4. '()' → logprob: -6.528339862823486
    5. '().__' → logprob: -9.028339385986328
    6. ')' → logprob: -9.028339385986328
    7. '(input' → logprob: -9.653339385986328
    8. '()[' → logprob: -10.028339385986328
    9. 'input' → logprob: -10.403339385986328
    10. '()]' → logprob: -10.653339385986328

Token 388: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002787359117064625
    2. '())' → logprob: -8.37527847290039
    3. '()' → logprob: -10.37527847290039
    4. '()))' → logprob: -11.12527847290039
    5. '(' → logprob: -14.25027847290039
    6. ' ().' → logprob: -14.25027847290039
    7. '()[' → logprob: -15.25027847290039
    8. '()]' → logprob: -15.62527847290039
    9. '()
' → logprob: -15.75027847290039
    10. ')' → logprob: -16.00027847290039

Token 389: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005035852082073689
    2. 'read' → logprob: -8.000503540039062
    3. 'strip' → logprob: -9.000503540039062
    4. 'rstrip' → logprob: -10.500503540039062
    5. ')' → logprob: -11.500503540039062
    6. '.readline' → logprob: -12.500503540039062
    7. '().' → logprob: -13.375503540039062
    8. ' split' → logprob: -14.250503540039062
    9. 'next' → logprob: -15.500503540039062
    10. 'decode' → logprob: -15.625503540039062

Token 390: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0018019152339547873
    2. '()' → logprob: -6.87680196762085
    3. '))' → logprob: -7.75180196762085
    4. '())' → logprob: -8.251801490783691
    5. '()))
' → logprob: -10.376801490783691
    6. '(' → logprob: -11.001801490783691
    7. '()[' → logprob: -11.376801490783691
    8. '()),' → logprob: -11.626801490783691
    9. '(),' → logprob: -13.001801490783691
    10. '()
' → logprob: -13.001801490783691

Token 391: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20202375948429108
    2. ')' → logprob: -1.8270237445831299
    3. ' for' → logprob: -4.077023983001709
    4. 'for' → logprob: -5.452023983001709
    5. '   ' → logprob: -8.20202350616455
    6. '())' → logprob: -8.57702350616455
    7. ')]' → logprob: -9.32702350616455
    8. ']' → logprob: -9.45202350616455
    9. '()]' → logprob: -10.32702350616455
    10. ' ' → logprob: -10.45202350616455

Token 392: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01789787784218788
    2. ' range' → logprob: -4.642898082733154
    3. ' _' → logprob: -5.017898082733154
    4. ' in' → logprob: -7.017898082733154
    5. 'range' → logprob: -7.892898082733154
    6. '_range' → logprob: -8.642897605895996
    7. '_in' → logprob: -11.392897605895996
    8. '(range' → logprob: -11.517897605895996
    9. '(' → logprob: -11.892897605895996
    10. 'in' → logprob: -12.392897605895996

Token 393: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011943945428356528
    2. ' range' → logprob: -6.751194477081299
    3. 'in' → logprob: -11.12619400024414
    4. '(range' → logprob: -11.75119400024414
    5. ' in' → logprob: -13.75119400024414
    6. '	range' → logprob: -15.50119400024414
    7. '_range' → logprob: -16.00119400024414
    8. '_' → logprob: -16.25119400024414
    9. 'ange' → logprob: -17.37619400024414
    10. ' ' → logprob: -18.37619400024414

Token 394: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001954563893377781
    2. ' range' → logprob: -6.251954555511475
    3. '   ' → logprob: -11.001955032348633
    4. '(range' → logprob: -12.251955032348633
    5. '
' → logprob: -13.626955032348633
    6. '       ' → logprob: -14.251955032348633
    7. '[' → logprob: -14.376955032348633
    8. '	range' → logprob: -14.626955032348633
    9. '    ' → logprob: -15.251955032348633
    10. '  ' → logprob: -15.251955032348633

Token 395: '(vertex' (ID: 96471)
  Prédit: '(vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -0.17709797620773315
    2. 'vertex' → logprob: -1.927098035812378
    3. '(edge' → logprob: -4.927097797393799
    4. ' vertex' → logprob: -5.177097797393799
    5. 'edge' → logprob: -6.427097797393799
    6. '(' → logprob: -6.802097797393799
    7. 'start' → logprob: -8.177098274230957
    8. '(start' → logprob: -8.427098274230957
    9. '(node' → logprob: -8.427098274230957
    10. ' (' → logprob: -8.677098274230957

Token 396: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.081584716506768e-05
    2. 'count' → logprob: -11.750020980834961
    3. ')' → logprob: -12.500020980834961
    4. '_' → logprob: -13.125020980834961
    5. '0' → logprob: -13.875020980834961
    6. '_COUNT' → logprob: -14.000020980834961
    7. ')]' → logprob: -14.125020980834961
    8. '   ' → logprob: -14.250020980834961
    9. ')_' → logprob: -14.375020980834961
    10. '_counts' → logprob: -14.375020980834961

Token 397: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003183041699230671
    2. ']' → logprob: -8.50031852722168
    3. ')]
' → logprob: -9.12531852722168
    4. ')' → logprob: -13.12531852722168
    5. ']
' → logprob: -13.75031852722168
    6. '   ' → logprob: -14.00031852722168
    7. '])]' → logprob: -14.75031852722168
    8. '()]' → logprob: -15.00031852722168
    9. ')][' → logprob: -15.62531852722168
    10. '}]' → logprob: -15.62531852722168

Token 398: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10558047890663147
    2. 'def' → logprob: -2.3555805683135986
    3. '   ' → logprob: -6.2305803298950195
    4. '<|end|>' → logprob: -7.2305803298950195
    5. '```' → logprob: -7.2305803298950195
    6. '

' → logprob: -7.6055803298950195
    7. '    
' → logprob: -8.10558032989502
    8. ')' → logprob: -8.85558032989502
    9. ' 
' → logprob: -9.23058032989502
    10. 'for' → logprob: -9.23058032989502

Token 399: ' expanded' (ID: 28044)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08808395266532898
    2. 'import' → logprob: -3.7130839824676514
    3. 'max' → logprob: -3.8380839824676514
    4. 'distance' → logprob: -4.463083744049072
    5. 'current' → logprob: -4.838083744049072
    6. '#' → logprob: -6.088083744049072
    7. '
' → logprob: -6.213083744049072
    8. 'curr' → logprob: -6.338083744049072
    9. 'dp' → logprob: -6.463083744049072
    10. 'dist' → logprob: -6.463083744049072

Token 400: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.0096417665481567
    2. '_ad' → logprob: -1.6346417665481567
    3. '_adj' → logprob: -1.7596417665481567
    4. '_nodes' → logprob: -1.8846417665481567
    5. '_queue' → logprob: -3.009641647338867
    6. '_' → logprob: -3.134641647338867
    7. '_states' → logprob: -4.509641647338867
    8. '_state' → logprob: -5.884641647338867
    9. '_dist' → logprob: -5.884641647338867
    10. '_node' → logprob: -6.634641647338867

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016053136438131332
    2. '=' → logprob: -4.141053199768066
    3. '=[]' → logprob: -11.516053199768066
    4. ' ' → logprob: -12.766053199768066
    5. '   ' → logprob: -13.266053199768066
    6. '_' → logprob: -14.016053199768066
    7. ')' → logprob: -14.266053199768066
    8. '  ' → logprob: -14.766053199768066
    9. '<|end|>' → logprob: -14.891053199768066
    10. ']' → logprob: -15.016053199768066

Token 402: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.48111653327941895
    2. '[' → logprob: -0.981116533279419
    3. '[]' → logprob: -4.98111629486084
    4. '[[' → logprob: -9.23111629486084
    5. ' []' → logprob: -10.48111629486084
    6. ' [' → logprob: -11.85611629486084
    7. '{}' → logprob: -12.73111629486084
    8. '[:]' → logprob: -12.98111629486084
    9. '[][]' → logprob: -13.10611629486084
    10. '[]
' → logprob: -13.35611629486084

Token 403: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014167606830597
    2. 'for' → logprob: -1.7014167308807373
    3. ')' → logprob: -13.576416969299316
    4. '	for' → logprob: -14.201416969299316
    5. ' ' → logprob: -14.826416969299316
    6. ']' → logprob: -14.826416969299316
    7. '   ' → logprob: -15.076416969299316
    8. '
' → logprob: -15.701416969299316
    9. '                   ' → logprob: -16.951416015625
    10. ' 
' → logprob: -17.201416015625

Token 404: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028584346175193787
    2. ' _' → logprob: -4.5285844802856445
    3. ' range' → logprob: -4.6535844802856445
    4. ' in' → logprob: -5.0285844802856445
    5. 'range' → logprob: -7.6535844802856445
    6. '_range' → logprob: -7.6535844802856445
    7. 'in' → logprob: -8.028584480285645
    8. '_vertex' → logprob: -11.153584480285645
    9. '_
' → logprob: -12.153584480285645
    10. '_in' → logprob: -12.653584480285645

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.194882869720459
    2. 'range' → logprob: -1.194882869720459
    3. 'in' → logprob: -1.569882869720459
    4. ' range' → logprob: -1.694882869720459
    5. '_' → logprob: -6.694882869720459
    6. ' _' → logprob: -6.819882869720459
    7. '_range' → logprob: -7.694882869720459
    8. '(range' → logprob: -10.819883346557617
    9. ' ' → logprob: -11.194883346557617
    10. 'x' → logprob: -13.319883346557617

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020839422941208
    2. ' range' → logprob: -2.350208282470703
    3. '(range' → logprob: -13.850208282470703
    4. ' in' → logprob: -15.475208282470703
    5. '_range' → logprob: -15.850208282470703
    6. '	range' → logprob: -15.975208282470703
    7. 'in' → logprob: -16.600208282470703
    8. '_' → logprob: -16.600208282470703
    9. ' ' → logprob: -16.975208282470703
    10. '
' → logprob: -17.100208282470703

Token 407: '(vertex' (ID: 96471)
  Prédit: '(vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -0.009479807689785957
    2. '((' → logprob: -5.259479999542236
    3. '(range' → logprob: -5.884479999542236
    4. '(' → logprob: -6.634479999542236
    5. 'vertex' → logprob: -9.884479522705078
    6. '(node' → logprob: -10.384479522705078
    7. 'range' → logprob: -10.759479522705078
    8. ' (' → logprob: -11.134479522705078
    9. '(vehicle' → logprob: -11.884479522705078
    10. '(vertices' → logprob: -12.634479522705078

Token 408: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.709308167453855e-05
    2. 'count' → logprob: -9.375086784362793
    3. 'vertex' → logprob: -14.500086784362793
    4. 'Count' → logprob: -14.750086784362793
    5. ')' → logprob: -15.000086784362793
    6. '_state' → logprob: -15.000086784362793
    7. '_COUNT' → logprob: -16.00008773803711
    8. 'ount' → logprob: -16.25008773803711
    9. '   ' → logprob: -16.75008773803711
    10. 'unt' → logprob: -16.87508773803711

Token 409: ' *' (ID: 425)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.8602362871170044
    2. '*' → logprob: -1.2352362871170044
    3. ' *' → logprob: -1.7352362871170044
    4. ')' → logprob: -2.860236167907715
    5. ')]
' → logprob: -3.985236167907715
    6. ')][' → logprob: -4.235236167907715
    7. '   ' → logprob: -4.860236167907715
    8. '*(' → logprob: -5.985236167907715
    9. '+' → logprob: -6.485236167907715
    10. '][' → logprob: -6.610236167907715

Token 410: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.1885128915309906
    2. '100' → logprob: -2.8135128021240234
    3. '(' → logprob: -3.0635128021240234
    4. '201' → logprob: -4.563512802124023
    5. '51' → logprob: -4.563512802124023
    6. '251' → logprob: -4.688512802124023
    7. '501' → logprob: -4.938512802124023
    8. '200' → logprob: -5.563512802124023
    9. '(max' → logprob: -5.938512802124023
    10. '(start' → logprob: -6.063512802124023

Token 411: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.44222405552864075
    2. '100' → logprob: -2.3172240257263184
    3. '(' → logprob: -2.4422240257263184
    4. '51' → logprob: -3.1922240257263184
    5. '501' → logprob: -3.4422240257263184
    6. '201' → logprob: -3.8172240257263184
    7. '251' → logprob: -4.192224025726318
    8. '101' → logprob: -4.942224025726318
    9. '200' → logprob: -4.942224025726318
    10. '300' → logprob: -5.067224025726318

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01427704282104969
    2. '1' → logprob: -4.26427698135376
    3. ')]' → logprob: -9.764277458190918
    4. ')' → logprob: -10.639277458190918
    5. '2' → logprob: -11.764277458190918
    6. '5' → logprob: -12.014277458190918
    7. ')])' → logprob: -12.326777458190918
    8. '00' → logprob: -13.014277458190918
    9. ')]
' → logprob: -13.451777458190918
    10. '01' → logprob: -13.514277458190918

Token 413: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.624555291840807e-05
    2. ' )' → logprob: -9.875076293945312
    3. ')]
' → logprob: -12.000076293945312
    4. ')' → logprob: -12.250076293945312
    5. ' ]' → logprob: -12.375076293945312
    6. '+' → logprob: -12.375076293945312
    7. ']' → logprob: -12.500076293945312
    8. '*' → logprob: -14.875076293945312
    9. ')]

' → logprob: -15.125076293945312
    10. '   ' → logprob: -15.375076293945312

Token 414: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2574411928653717
    2. ' for' → logprob: -1.6324411630630493
    3. '   ' → logprob: -4.00744104385376
    4. '<|end|>' → logprob: -5.13244104385376
    5. '#' → logprob: -6.00744104385376
    6. ')' → logprob: -6.25744104385376
    7. '
' → logprob: -7.13244104385376
    8. 'def' → logprob: -7.63244104385376
    9. '       ' → logprob: -7.88244104385376
    10. '...' → logprob: -8.507441520690918

Token 416: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34009766578674316
    2. ' u' → logprob: -1.8400976657867432
    3. 'node' → logprob: -3.590097665786743
    4. ' node' → logprob: -3.840097665786743
    5. 'curr' → logprob: -3.840097665786743
    6. 'src' → logprob: -3.965097665786743
    7. 'v' → logprob: -4.340097427368164
    8. ' curr' → logprob: -4.965097427368164
    9. ' v' → logprob: -5.090097427368164
    10. ' src' → logprob: -5.340097427368164

Token 417: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16595733165740967
    2. '_' → logprob: -2.290957450866699
    3. '_index' → logprob: -4.165957450866699
    4. ' _' → logprob: -4.290957450866699
    5. '_idx' → logprob: -4.290957450866699
    6. '_id' → logprob: -5.415957450866699
    7. '_i' → logprob: -5.915957450866699
    8. ' ' → logprob: -6.915957450866699
    9. ' i' → logprob: -8.7909574508667
    10. ',' → logprob: -8.7909574508667

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003517518052831292
    2. 'in' → logprob: -6.0035176277160645
    3. ',' → logprob: -7.2535176277160645
    4. ' ' → logprob: -8.253517150878906
    5. ' ,' → logprob: -9.753517150878906
    6. ' i' → logprob: -12.003517150878906
    7. '_' → logprob: -12.628517150878906
    8. '	in' → logprob: -13.753517150878906
    9. '  ' → logprob: -13.878517150878906
    10. '<|end|>' → logprob: -14.378517150878906

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -17.751171112060547
    4. '	range' → logprob: -18.001171112060547
    5. '.range' → logprob: -19.626171112060547
    6. ' ' → logprob: -19.751171112060547
    7. '_range' → logprob: -20.376171112060547
    8. '   ' → logprob: -21.251171112060547
    9. ')' → logprob: -21.376171112060547
    10. '0' → logprob: -21.501171112060547

Token 420: '(vertex' (ID: 96471)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.011466635391116142
    2. ' vertex' → logprob: -4.5114665031433105
    3. '(vertex' → logprob: -7.8864665031433105
    4. '	vertex' → logprob: -10.261466979980469
    5. '   ' → logprob: -12.011466979980469
    6. 'node' → logprob: -13.886466979980469
    7. '.vertex' → logprob: -15.136466979980469
    8. '_vertex' → logprob: -15.761466979980469
    9. '
' → logprob: -15.761466979980469
    10. 'len' → logprob: -16.01146697998047

Token 421: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1756367712223437e-05
    2. '_index' → logprob: -11.500011444091797
    3. 'count' → logprob: -14.750011444091797
    4. '_COUNT' → logprob: -14.875011444091797
    5. ')' → logprob: -15.750011444091797
    6. 'Count' → logprob: -15.750011444091797
    7. '   ' → logprob: -16.250011444091797
    8. '```' → logprob: -16.500011444091797
    9. '_counts' → logprob: -16.875011444091797
    10. '_size' → logprob: -17.500011444091797

Token 422: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13008345663547516
    2. '):
' → logprob: -2.1300835609436035
    3. '   ' → logprob: -6.6300835609436035
    4. '+' → logprob: -7.1300835609436035
    5. ':' → logprob: -7.2550835609436035
    6. ')' → logprob: -9.255083084106445
    7. ' ):' → logprob: -9.755083084106445
    8. ' +' → logprob: -10.130083084106445
    9. '*' → logprob: -10.505083084106445
    10. ',' → logprob: -11.005083084106445

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053344275802373886
    2. ' for' → logprob: -3.178344249725342
    3. '   ' → logprob: -4.803344249725342
    4. '<|end|>' → logprob: -6.803344249725342
    5. '        
' → logprob: -8.3033447265625
    6. ' ' → logprob: -8.6783447265625
    7. ',' → logprob: -9.0533447265625
    8. 'for' → logprob: -9.0533447265625
    9. '    ' → logprob: -9.0533447265625
    10. '	for' → logprob: -10.4283447265625

Token 424: ' charge' (ID: 8363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28378525376319885
    2. ' for' → logprob: -1.6587852239608765
    3. '   ' → logprob: -2.908785343170166
    4. 'charge' (adapté à ' charge') → logprob: -7.158785343170166
    5. 'current' → logprob: -8.033784866333008
    6. ' current' → logprob: -8.533784866333008
    7. '    
' → logprob: -8.783784866333008
    8. ' ' → logprob: -9.033784866333008
    9. '       ' → logprob: -9.158784866333008
    10. 'max' → logprob: -9.283784866333008

Token 425: '_increment' (ID: 132160)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.6500961184501648
    2. '_data' → logprob: -2.0250961780548096
    3. '_limit' → logprob: -2.4000961780548096
    4. '_range' → logprob: -2.9000961780548096
    5. '_level' → logprob: -3.0250961780548096
    6. ' =' → logprob: -3.5250961780548096
    7. '_amount' → logprob: -3.9000961780548096
    8. '_capacity' → logprob: -4.1500959396362305
    9. '_limits' → logprob: -4.6500959396362305
    10. '=' → logprob: -4.6500959396362305

Token 426: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20015060901641846
    2. '=' → logprob: -2.200150489807129
    3. ',' → logprob: -2.700150489807129
    4. 's' → logprob: -6.575150489807129
    5. ' in' → logprob: -6.825150489807129
    6. ' ,' → logprob: -8.200150489807129
    7. '   ' → logprob: -9.075150489807129
    8. '_range' → logprob: -9.325150489807129
    9. ')' → logprob: -9.450150489807129
    10. ' ' → logprob: -9.700150489807129

Token 427: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.5764904022216797
    2. 'max' → logprob: -1.3264904022216797
    3. ' max' → logprob: -2.5764904022216797
    4. 'cost' → logprob: -3.7014904022216797
    5. 'initial' → logprob: -4.57649040222168
    6. ' charge' → logprob: -4.57649040222168
    7. 'capacity' → logprob: -4.70149040222168
    8. 'current' → logprob: -5.45149040222168
    9. 'base' → logprob: -5.70149040222168
    10. 'min' → logprob: -5.82649040222168

Token 428: '_cost' (ID: 36820)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -1.1356136798858643
    2. '_cost' → logprob: -1.5106136798858643
    3. '_limit' → logprob: -1.6356136798858643
    4. '_de' → logprob: -2.5106136798858643
    5. 'de' → logprob: -2.8856136798858643
    6. '_max' → logprob: -3.7606136798858643
    7. 'capacity' → logprob: -3.7606136798858643
    8. 'cost' → logprob: -4.010613441467285
    9. '_threshold' → logprob: -4.385613441467285
    10. 'limit' → logprob: -4.510613441467285

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.282667338848114
    2. '=' → logprob: -1.4076673984527588
    3. '   ' → logprob: -7.03266716003418
    4. ',' → logprob: -7.90766716003418
    5. ' ' → logprob: -8.78266716003418
    6. ')' → logprob: -9.78266716003418
    7. '  ' → logprob: -10.78266716003418
    8. '    ' → logprob: -11.15766716003418
    9. '	' → logprob: -11.65766716003418
    10. '       ' → logprob: -12.65766716003418

Token 430: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3484569787979126
    2. ' node' → logprob: -1.2234569787979126
    3. '   ' → logprob: -12.098457336425781
    4. '	node' → logprob: -13.348457336425781
    5. ' ' → logprob: -13.598457336425781
    6. '0' → logprob: -13.598457336425781
    7. '(node' → logprob: -14.098457336425781
    8. '[node' → logprob: -14.348457336425781
    9. '    ' → logprob: -14.973457336425781
    10. '
' → logprob: -15.598457336425781

Token 431: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.3541930317878723
    2. '_index' → logprob: -1.2291929721832275
    3. '_data' → logprob: -5.729193210601807
    4. '[node' → logprob: -6.354193210601807
    5. 'index' → logprob: -7.979193210601807
    6. 'charge' → logprob: -9.104192733764648
    7. 'Charge' → logprob: -9.354192733764648
    8. '_code' → logprob: -9.979192733764648
    9. '[index' → logprob: -10.479192733764648
    10. '_cost' → logprob: -10.854192733764648

Token 432: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0014141658321022987
    2. '[node' → logprob: -7.2514142990112305
    3. '_cost' → logprob: -7.7514142990112305
    4. 'data' → logprob: -8.50141429901123
    5. 'cost' → logprob: -10.50141429901123
    6. '   ' → logprob: -11.75141429901123
    7. '_usage' → logprob: -11.75141429901123
    8. 's' → logprob: -11.87641429901123
    9. '[' → logprob: -11.87641429901123
    10. 'node' → logprob: -12.37641429901123

Token 433: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.00010247035970678553
    2. ' =' → logprob: -9.375102043151855
    3. '=node' → logprob: -11.375102043151855
    4. ' [' → logprob: -13.500102043151855
    5. '(node' → logprob: -13.750102043151855
    6. '][' → logprob: -13.750102043151855
    7. ')[' → logprob: -14.375102043151855
    8. '=' → logprob: -15.000102043151855
    9. 'node' → logprob: -15.000102043151855
    10. '   ' → logprob: -15.250102043151855

Token 434: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001935661886818707
    2. 'index' → logprob: -6.2519354820251465
    3. 'nd' → logprob: -13.376935958862305
    4. '_' → logprob: -14.126935958862305
    5. '_INDEX' → logprob: -14.251935958862305
    6. 'Index' → logprob: -14.376935958862305
    7. 'ind' → logprob: -14.376935958862305
    8. ' _' → logprob: -14.751935958862305
    9. ' index' → logprob: -14.751935958862305
    10. ']' → logprob: -15.001935958862305

Token 435: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7891173362731934
    2. '):' → logprob: -1.0391173362731934
    3. '):
' → logprob: -2.1641173362731934
    4. ']' → logprob: -2.9141173362731934
    5. ')]' → logprob: -4.789117336273193
    6. '   ' → logprob: -4.914117336273193
    7. ']:' → logprob: -5.789117336273193
    8. '       ' → logprob: -6.914117336273193
    9. '[' → logprob: -7.289117336273193
    10. ']:
' → logprob: -7.414117336273193

Token 436: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18184292316436768
    2. '   ' → logprob: -2.681842803955078
    3. '<|end|>' → logprob: -3.681842803955078
    4. '    
' → logprob: -3.931842803955078
    5. '  
' → logprob: -4.056842803955078
    6. ' 
' → logprob: -4.181842803955078
    7. '\n' → logprob: -5.056842803955078
    8. '       ' → logprob: -5.556842803955078
    9. ' for' → logprob: -5.556842803955078
    10. '        
' → logprob: -6.056842803955078

Token 437: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05119292065501213
    2. 'for' (adapté à ' for') → logprob: -3.0511929988861084
    3. '   ' → logprob: -6.176192760467529
    4. ' current' → logprob: -8.676193237304688
    5. ' charge' → logprob: -9.801193237304688
    6. ' range' → logprob: -10.051193237304688
    7. 'charge' → logprob: -10.426193237304688
    8. '       ' → logprob: -10.676193237304688
    9. '	for' → logprob: -10.801193237304688
    10. '
' → logprob: -10.926193237304688

Token 438: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.3675123453140259
    2. ' charge' → logprob: -1.8675123453140259
    3. ' state' → logprob: -3.9925122261047363
    4. 'state' → logprob: -3.9925122261047363
    5. 'curr' → logprob: -3.9925122261047363
    6. ' current' → logprob: -4.242512226104736
    7. 'current' → logprob: -4.367512226104736
    8. ' curr' → logprob: -4.492512226104736
    9. ' energy' → logprob: -5.117512226104736
    10. 'cost' → logprob: -5.117512226104736

Token 439: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.1523217260837555
    2. ' in' → logprob: -2.2773218154907227
    3. '_in' → logprob: -3.7773218154907227
    4. '_amount' → logprob: -5.027321815490723
    5. 'in' → logprob: -5.777321815490723
    6. '_' → logprob: -6.402321815490723
    7. '_state' → logprob: -7.027321815490723
    8. '_lvl' → logprob: -7.152321815490723
    9. '_increment' → logprob: -7.277321815490723
    10. 'level' → logprob: -7.402321815490723

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028177164494991302
    2. 'in' → logprob: -5.877817630767822
    3. ' ' → logprob: -12.00281810760498
    4. '	in' → logprob: -13.37781810760498
    5. '_in' → logprob: -13.50281810760498
    6. '0' → logprob: -14.50281810760498
    7. ',' → logprob: -14.62781810760498
    8. '```' → logprob: -14.87781810760498
    9. '   ' → logprob: -15.00281810760498
    10. '<|end|>' → logprob: -15.37781810760498

Token 441: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759419202804565
    2. 'range' → logprob: -0.8259419202804565
    3. '(range' → logprob: -13.075942039489746
    4. '	range' → logprob: -14.825942039489746
    5. '_range' → logprob: -17.57594108581543
    6. '0' → logprob: -17.95094108581543
    7. ' ' → logprob: -18.07594108581543
    8. ' in' → logprob: -18.32594108581543
    9. '
' → logprob: -18.95094108581543
    10. 'in' → logprob: -19.70094108581543

Token 442: '(' (ID: 7)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.005499479826539755
    2. '249' → logprob: -5.630499362945557
    3. ' ' → logprob: -6.380499362945557
    4. '(' → logprob: -8.880499839782715
    5. '0' → logprob: -10.255499839782715
    6. '245' → logprob: -10.880499839782715
    7. '   ' → logprob: -12.130499839782715
    8. '  ' → logprob: -13.380499839782715
    9. '    ' → logprob: -14.505499839782715
    10. '1' → logprob: -14.505499839782715

Token 443: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.00032044618274085224
    2. '249' → logprob: -8.125320434570312
    3. ' ' → logprob: -11.125320434570312
    4. '0' → logprob: -12.250320434570312
    5. '245' → logprob: -12.625320434570312
    6. '1' → logprob: -14.750320434570312
    7. '   ' → logprob: -15.125320434570312
    8. '25' → logprob: -15.375320434570312
    9. '
' → logprob: -15.750320434570312
    10. '  ' → logprob: -16.500320434570312

Token 444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016611411410849541
    2. '1' → logprob: -8.750165939331055
    3. ' ' → logprob: -12.750165939331055
    4. ')' → logprob: -13.000165939331055
    5. '۰' → logprob: -14.750165939331055
    6. '
' → logprob: -15.187665939331055
    7. '   ' → logprob: -15.375165939331055
    8. '):
' → logprob: -15.750165939331055
    9. '{' → logprob: -15.937665939331055
    10. ' )' → logprob: -16.187665939331055

Token 445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19328276813030243
    2. '):
' → logprob: -1.9432827234268188
    3. '-' → logprob: -4.068282604217529
    4. ' -' → logprob: -4.318282604217529
    5. ' ):' → logprob: -6.818282604217529
    6. '+' → logprob: -7.318282604217529
    7. ' ):
' → logprob: -8.943283081054688
    8. '   ' → logprob: -9.193283081054688
    9. ' +' → logprob: -9.818283081054688
    10. ')' → logprob: -11.068283081054688

Token 446: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39817187190055847
    2. '           ' → logprob: -1.1481719017028809
    3. ' for' → logprob: -5.148171901702881
    4. '<|end|>' → logprob: -6.523171901702881
    5. '   ' → logprob: -6.648171901702881
    6. ' if' → logprob: -7.148171901702881
    7. ',' → logprob: -7.398171901702881
    8. '        
' → logprob: -8.398171424865723
    9. '               ' → logprob: -8.398171424865723
    10. '	       ' → logprob: -8.523171424865723

Token 447: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1165025234222412
    2. ' for' → logprob: -1.3665025234222412
    3. '           ' → logprob: -2.616502523422241
    4. 'expanded' → logprob: -2.741502523422241
    5. ' current' → logprob: -2.991502523422241
    6. '       ' → logprob: -2.991502523422241
    7. '   ' → logprob: -3.116502523422241
    8. ' expanded' → logprob: -3.366502523422241
    9. 'current' → logprob: -3.491502523422241
    10. 'for' (adapté à ' for') → logprob: -3.991502523422241

Token 448: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5269303321838379
    2. 'edge' → logprob: -1.776930332183838
    3. ' neighbor' → logprob: -2.651930332183838
    4. 'adj' → logprob: -3.401930332183838
    5. ' edge' → logprob: -3.526930332183838
    6. 'val' → logprob: -3.901930332183838
    7. 'cost' → logprob: -4.026930332183838
    8. 'next' → logprob: -4.276930332183838
    9. 'charge' → logprob: -4.401930332183838
    10. ' val' → logprob: -4.901930332183838

Token 449: '_index' (ID: 7748)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.04607705399394035
    2. '_index' → logprob: -3.546077013015747
    3. ',' → logprob: -5.171077251434326
    4. ' in' → logprob: -5.421077251434326
    5. '_nodes' → logprob: -6.296077251434326
    6. '_,' → logprob: -6.796077251434326
    7. ',_' → logprob: -7.046077251434326
    8. '_' → logprob: -7.796077251434326
    9. '_neighbors' → logprob: -7.796077251434326
    10. ' ,' → logprob: -8.171076774597168

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0344490148127079
    2. ' in' → logprob: -4.034449100494385
    3. ' ,' → logprob: -4.159449100494385
    4. 'in' → logprob: -8.284448623657227
    5. ',
' → logprob: -9.284448623657227
    6. '<|end|>' → logprob: -9.784448623657227
    7. ',_' → logprob: -10.409448623657227
    8. '_,' → logprob: -10.534448623657227
    9. ',(' → logprob: -10.534448623657227
    10. ',...' → logprob: -12.159448623657227

Token 451: ' require' (ID: 1841)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3974054455757141
    2. ' val' → logprob: -2.0224053859710693
    3. 'edge' → logprob: -2.5224053859710693
    4. ' edge' → logprob: -3.2724053859710693
    5. 'cost' → logprob: -3.3974053859710693
    6. 'a' → logprob: -4.397405624389648
    7. ' cost' → logprob: -4.522405624389648
    8. 'weight' → logprob: -4.772405624389648
    9. 'charge' → logprob: -6.272405624389648
    10. ' weight' → logprob: -6.522405624389648

Token 452: '_charge' (ID: 110838)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0049827974289655685
    2. '_charge' → logprob: -6.129982948303223
    3. 's' → logprob: -6.754982948303223
    4. '_d' → logprob: -7.129982948303223
    5. '_val' → logprob: -7.379982948303223
    6. 'charge' → logprob: -9.879982948303223
    7. 'ed' → logprob: -10.254982948303223
    8. ',' → logprob: -10.504982948303223
    9. '_' → logprob: -10.754982948303223
    10. 'val' → logprob: -10.754982948303223

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023141935467720032
    2. ' ,' → logprob: -3.898141860961914
    3. '_,' → logprob: -6.898141860961914
    4. '_level' → logprob: -7.023141860961914
    5. ',_' → logprob: -8.773141860961914
    6. '_amount' → logprob: -9.273141860961914
    7. '_val' → logprob: -9.398141860961914
    8. 'a' → logprob: -9.523141860961914
    9. 's' → logprob: -9.898141860961914
    10. '_levels' → logprob: -10.023141860961914

Token 454: ' travel' (ID: 6410)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -1.0135283470153809
    2. 'consume' → logprob: -1.8885283470153809
    3. 'cost' → logprob: -2.138528347015381
    4. 'extra' → logprob: -2.263528347015381
    5. 'additional' → logprob: -2.513528347015381
    6. 'charge' → logprob: -2.888528347015381
    7. 'edge' → logprob: -3.513528347015381
    8. 'use' → logprob: -4.263528347015381
    9. ' neighbor' → logprob: -4.388528347015381
    10. 'require' → logprob: -4.513528347015381

Token 455: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.053477395325899124
    2. '_time' → logprob: -3.0534772872924805
    3. '_weight' → logprob: -6.0534772872924805
    4. 'cost' → logprob: -6.9284772872924805
    5. '_charge' → logprob: -7.4284772872924805
    6. '_fee' → logprob: -7.6784772872924805
    7. 'time' → logprob: -8.80347728729248
    8. '_distance' → logprob: -9.05347728729248
    9. '_' → logprob: -10.17847728729248
    10. ' cost' → logprob: -10.55347728729248

Token 456: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07001001387834549
    2. 'in' → logprob: -2.69500994682312
    3. ' ' → logprob: -10.3200101852417
    4. ',' → logprob: -11.1950101852417
    5. '_in' → logprob: -11.8200101852417
    6. 's' → logprob: -12.4450101852417
    7. '	in' → logprob: -12.5700101852417
    8. '
' → logprob: -13.5700101852417
    9. '  ' → logprob: -13.6325101852417
    10. '   ' → logprob: -14.1950101852417

Token 457: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.038047004491090775
    2. ' adjacency' → logprob: -3.2880470752716064
    3. ' adj' → logprob: -12.288046836853027
    4. '   ' → logprob: -14.913046836853027
    5. '           ' → logprob: -15.663046836853027
    6. 'Adj' → logprob: -16.663047790527344
    7. '
' → logprob: -17.038047790527344
    8. '               ' → logprob: -17.163047790527344
    9. ' ' → logprob: -17.163047790527344
    10. '                   ' → logprob: -17.288047790527344

Token 458: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.1382104903459549
    2. '[curr' → logprob: -2.1382105350494385
    3. '[' → logprob: -4.513210296630859
    4. '[src' → logprob: -9.26321029663086
    5. '[current' → logprob: -10.01321029663086
    6. ' [' → logprob: -10.38821029663086
    7. '[next' → logprob: -10.51321029663086
    8. '[cur' → logprob: -10.63821029663086
    9. '[now' → logprob: -11.63821029663086
    10. 'neighbor' → logprob: -12.51321029663086

Token 459: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.016802458092570305
    2. '[node' → logprob: -4.3918023109436035
    3. '[' → logprob: -6.1418023109436035
    4. 'index' → logprob: -7.0168023109436035
    5. 'neighbor' → logprob: -8.141802787780762
    6. '_charge' → logprob: -8.266802787780762
    7. 'charge' → logprob: -8.641802787780762
    8. 'Index' → logprob: -9.391802787780762
    9. ')' → logprob: -9.766802787780762
    10. '][' → logprob: -10.141802787780762

Token 460: ']:
' (ID: 22152)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.010013531893491745
    2. '[' → logprob: -5.135013580322266
    3. '           ' → logprob: -6.385013580322266
    4. ']:' → logprob: -7.510013580322266
    5. '):' → logprob: -7.760013580322266
    6. ':' → logprob: -7.760013580322266
    7. '       ' → logprob: -8.135013580322266
    8. '(node' → logprob: -8.510013580322266
    9. '][' → logprob: -8.760013580322266
    10. '   ' → logprob: -9.635013580322266

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023157147224992514
    2. '                ' → logprob: -7.502315521240234
    3. '<|end|>' → logprob: -7.627315521240234
    4. ' if' → logprob: -8.002315521240234
    5. '           ' → logprob: -8.252315521240234
    6. '                
' → logprob: -8.877315521240234
    7. '                   ' → logprob: -9.002315521240234
    8. ' ' → logprob: -9.127315521240234
    9. '            ' → logprob: -9.377315521240234
    10. ' 
' → logprob: -10.502315521240234

Token 462: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46073994040489197
    2. ' if' → logprob: -1.7107399702072144
    3. ' ' → logprob: -2.960739850997925
    4. '               ' → logprob: -3.085739850997925
    5. '                ' → logprob: -3.210739850997925
    6. '<|end|>' → logprob: -4.335740089416504
    7. ' 
' → logprob: -4.960740089416504
    8. '                    ' → logprob: -4.960740089416504
    9. '                    
' → logprob: -5.085740089416504
    10. '    ' → logprob: -5.460740089416504

Token 463: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.3959132432937622
    2. 'require' → logprob: -1.2709132432937622
    3. ' charge' → logprob: -3.5209131240844727
    4. ' require' → logprob: -4.145913124084473
    5. '   ' → logprob: -7.645913124084473
    6. ' ' → logprob: -9.958413124084473
    7. '(require' → logprob: -10.645913124084473
    8. '               ' → logprob: -10.770913124084473
    9. 'req' → logprob: -10.770913124084473
    10. 'quire' → logprob: -10.770913124084473

Token 464: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.375019073486328
    3. '_levels' → logprob: -12.625019073486328
    4. ' _' → logprob: -14.250019073486328
    5. 'level' → logprob: -14.500019073486328
    6. '>' → logprob: -14.500019073486328
    7. '   ' → logprob: -14.625019073486328
    8. 'Level' → logprob: -15.000019073486328
    9. '[level' → logprob: -15.375019073486328
    10. '```' → logprob: -15.375019073486328

Token 465: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6976675987243652
    2. '>=' → logprob: -0.6976675987243652
    3. '+' → logprob: -5.697667598724365
    4. ' +' → logprob: -6.947667598724365
    5. '-' → logprob: -9.697668075561523
    6. ']>=' → logprob: -9.947668075561523
    7. ' -' → logprob: -10.447668075561523
    8. ')>=' → logprob: -11.197668075561523
    9. '>' → logprob: -11.447668075561523
    10. ' ' → logprob: -11.697668075561523

Token 466: ' require' (ID: 1841)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.0015529518714174628
    2. ' require' → logprob: -6.501553058624268
    3. 'travel' → logprob: -10.12655258178711
    4. '   ' → logprob: -12.75155258178711
    5. '(require' → logprob: -13.62655258178711
    6. '=require' → logprob: -13.62655258178711
    7. '	require' → logprob: -13.87655258178711
    8. '_require' → logprob: -14.00155258178711
    9. '
' → logprob: -14.62655258178711
    10. ' travel' → logprob: -14.87655258178711

Token 467: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.006134976167231798
    2. 'd' → logprob: -5.131134986877441
    3. '_' → logprob: -9.381134986877441
    4. 's' → logprob: -10.631134986877441
    5. '_ch' → logprob: -10.881134986877441
    6. '_d' → logprob: -11.756134986877441
    7. '_cost' → logprob: -11.881134986877441
    8. 'charge' → logprob: -11.881134986877441
    9. '_char' → logprob: -12.131134986877441
    10. 'e' → logprob: -12.256134986877441

Token 468: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2418416291475296
    2. ':' → logprob: -1.7418416738510132
    3. ':
' → logprob: -3.7418415546417236
    4. 'and' → logprob: -4.616841793060303
    5. '                   ' → logprob: -5.741841793060303
    6. '               ' → logprob: -6.866841793060303
    7. '                       ' → logprob: -7.116841793060303
    8. '                           ' → logprob: -7.991841793060303
    9. ' :' → logprob: -8.741841316223145
    10. '           ' → logprob: -9.616841316223145

Token 469: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0025169195141643286
    2. '               ' → logprob: -6.877516746520996
    3. '                    
' → logprob: -7.502516746520996
    4. '                       ' → logprob: -7.752516746520996
    5. '                    ' → logprob: -9.127516746520996
    6. '                           ' → logprob: -9.252516746520996
    7. '                ' → logprob: -9.627516746520996
    8. ':' → logprob: -9.627516746520996
    9. '                        
' → logprob: -10.752516746520996
    10. ',' → logprob: -10.752516746520996

Token 470: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' (adapté à ' expanded') → logprob: -0.4302824139595032
    2. ' expanded' → logprob: -1.3052823543548584
    3. ' new' → logprob: -3.3052823543548584
    4. 'new' → logprob: -4.5552825927734375
    5. ' next' → logprob: -4.6802825927734375
    6. '           ' → logprob: -5.1802825927734375
    7. '               ' → logprob: -5.3052825927734375
    8. 'next' → logprob: -5.3052825927734375
    9. ' if' → logprob: -6.3052825927734375
    10. '                   ' → logprob: -6.5552825927734375

Token 471: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -3.15441757265944e-05
    2. 'graph' → logprob: -10.500031471252441
    3. '
' → logprob: -13.625031471252441
    4. '_' → logprob: -14.250031471252441
    5. '[' → logprob: -14.500031471252441
    6. ' _' → logprob: -15.250031471252441
    7. '_g' → logprob: -15.500031471252441
    8. '_GRAPH' → logprob: -15.500031471252441
    9. '	graph' → logprob: -16.375032424926758
    10. '   ' → logprob: -16.375032424926758

Token 472: '[' (ID: 58)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.016577953472733498
    2. '[' → logprob: -4.14157772064209
    3. '[(' → logprob: -7.64157772064209
    4. '[[' → logprob: -11.01657772064209
    5. '[
' → logprob: -11.14157772064209
    6. '   ' → logprob: -11.89157772064209
    7. ' [' → logprob: -12.39157772064209
    8. '[num' → logprob: -12.51657772064209
    9. '[n' → logprob: -12.64157772064209
    10. '[((' → logprob: -13.01657772064209

Token 473: '250' (ID: 6911)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0070375241339206696
    2. ' node' → logprob: -5.00703763961792
    3. '[node' → logprob: -9.007037162780762
    4. '   ' → logprob: -9.632037162780762
    5. '(node' → logprob: -9.632037162780762
    6. '250' → logprob: -10.007037162780762
    7. 'charge' → logprob: -11.257037162780762
    8. '
' → logprob: -13.382037162780762
    9. '	node' → logprob: -13.507037162780762
    10. '                   ' → logprob: -13.632037162780762

Token 474: '0' (ID: 15)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3264695107936859
    2. '*' → logprob: -2.0764694213867188
    3. '[node' → logprob: -2.4514694213867188
    4. ' *' → logprob: -3.2014694213867188
    5. '_node' → logprob: -4.451469421386719
    6. ' node' → logprob: -5.826469421386719
    7. '0' → logprob: -6.201469421386719
    8. ' ' → logprob: -6.201469421386719
    9. 'token' → logprob: -6.451469421386719
    10. 'index' → logprob: -6.951469421386719

Token 475: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011047935113310814
    2. ' *' → logprob: -4.511047840118408
    3. '[node' → logprob: -15.761048316955566
    4. '*object' → logprob: -18.01104736328125
    5. '**' → logprob: -18.76104736328125
    6. 'node' → logprob: -18.88604736328125
    7. '
' → logprob: -19.13604736328125
    8. ' ' → logprob: -19.26104736328125
    9. '```' → logprob: -19.51104736328125
    10. '(node' → logprob: -19.51104736328125

Token 476: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.9795445849886164e-05
    2. ' node' → logprob: -9.750060081481934
    3. '[node' → logprob: -13.875060081481934
    4. '(node' → logprob: -15.125060081481934
    5. '	node' → logprob: -16.625059127807617
    6. '
' → logprob: -17.250059127807617
    7. 'user' → logprob: -17.750059127807617
    8. 'index' → logprob: -17.875059127807617
    9. 'neighbor' → logprob: -18.000059127807617
    10. '```' → logprob: -18.250059127807617

Token 477: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004106542561203241
    2. 'index' → logprob: -5.504106521606445
    3. '+' → logprob: -12.129106521606445
    4. '_' → logprob: -12.254106521606445
    5. 'Index' → logprob: -12.379106521606445
    6. '_INDEX' → logprob: -13.379106521606445
    7. 'ind' → logprob: -13.504106521606445
    8. ']' → logprob: -14.004106521606445
    9. '   ' → logprob: -14.129106521606445
    10. '```' → logprob: -14.129106521606445

Token 478: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1128709688782692
    2. ' +' → logprob: -2.237870931625366
    3. '[' → logprob: -10.862871170043945
    4. ' plus' → logprob: -11.612871170043945
    5. '+
' → logprob: -11.737871170043945
    6. ' +
' → logprob: -12.987871170043945
    7. '+[' → logprob: -12.987871170043945
    8. 'plus' → logprob: -13.112871170043945
    9. ' ' → logprob: -13.362871170043945
    10. '＋' → logprob: -13.862871170043945

Token 479: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.5765959620475769
    2. 'neighbor' → logprob: -0.8265959620475769
    3. ' neighbor' → logprob: -8.0765962600708
    4. ' charge' → logprob: -8.3265962600708
    5. '
' → logprob: -9.9515962600708
    6. '   ' → logprob: -11.0765962600708
    7. '(' → logprob: -11.5765962600708
    8. '(ne' → logprob: -11.9515962600708
    9. 'neighbors' → logprob: -12.8265962600708
    10. 'ne' → logprob: -12.9515962600708

Token 480: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0004413975402712822
    2. 'level' → logprob: -7.750441551208496
    3. 'Level' → logprob: -13.000441551208496
    4. '_' → logprob: -13.125441551208496
    5. '```' → logprob: -13.625441551208496
    6. ' _' → logprob: -13.875441551208496
    7. '_levels' → logprob: -14.375441551208496
    8. '   ' → logprob: -14.625441551208496
    9. '
' → logprob: -14.625441551208496
    10. '_LEVEL' → logprob: -15.500441551208496

Token 481: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003501242317724973
    2. ']' → logprob: -8.750349998474121
    3. '           ' → logprob: -9.500349998474121
    4. '.append' → logprob: -10.250349998474121
    5. ' ].' → logprob: -11.000349998474121
    6. '               ' → logprob: -11.000349998474121
    7. '   ' → logprob: -11.125349998474121
    8. '                   ' → logprob: -11.750349998474121
    9. '][' → logprob: -12.125349998474121
    10. '       ' → logprob: -12.125349998474121

Token 482: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. 'app' → logprob: -14.500000953674316
    3. 'appen' → logprob: -14.750000953674316
    4. '.append' → logprob: -15.500000953674316
    5. ' append' → logprob: -15.500000953674316
    6. '_append' → logprob: -17.500001907348633
    7. '	append' → logprob: -19.625001907348633
    8. 'Append' → logprob: -20.500001907348633
    9. 'ap' → logprob: -22.375001907348633
    10. 'extend' → logprob: -22.500001907348633

Token 483: '(
' (ID: 1607)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006743200588971376
    2. '(' → logprob: -5.006743431091309
    3. '(
' → logprob: -10.506743431091309
    4. '(((' → logprob: -15.131743431091309
    5. '(('' → logprob: -16.506742477416992
    6. '(("' → logprob: -16.756742477416992
    7. ' (' → logprob: -16.881742477416992
    8. '(

' → logprob: -17.381742477416992
    9. ' ((' → logprob: -17.631742477416992
    10. '(
' → logprob: -17.756742477416992

Token 484: '                       ' (ID: 968)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4750191271305084
    2. ' (' → logprob: -0.975019097328186
    3. '(
' → logprob: -7.2250189781188965
    4. '250' → logprob: -9.225019454956055
    5. ' (
' → logprob: -10.225019454956055
    6. '   ' → logprob: -10.350019454956055
    7. '((' → logprob: -10.475019454956055
    8. '               ' → logprob: -12.225019454956055
    9. ' ' → logprob: -12.600019454956055
    10. '                   ' → logprob: -13.100019454956055

Token 485: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -5.383526149671525e-05
    2. ' (' → logprob: -10.500053405761719
    3. '(
' → logprob: -10.750053405761719
    4. '250' → logprob: -12.375053405761719
    5. '   ' → logprob: -14.750053405761719
    6. '((' → logprob: -16.12505340576172
    7. '(

' → logprob: -16.87505340576172
    8. '(
' → logprob: -17.25005340576172
    9. '               ' → logprob: -17.50005340576172
    10. ' ' → logprob: -18.37505340576172

Token 486: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.00044163595885038376
    2. ' ' → logprob: -7.875441551208496
    3. '   ' → logprob: -10.875441551208496
    4. '(' → logprob: -11.625441551208496
    5. '                   ' → logprob: -12.000441551208496
    6. '                       ' → logprob: -12.250441551208496
    7. '               ' → logprob: -12.500441551208496
    8. '                           ' → logprob: -13.000441551208496
    9. '                        ' → logprob: -13.500441551208496
    10. '25' → logprob: -13.750441551208496

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '*' → logprob: -16.125
    3. '۰' → logprob: -17.25
    4. 'node' → logprob: -17.375
    5. ' ' → logprob: -17.5
    6. '<|end|>' → logprob: -17.75
    7. ')' → logprob: -18.0
    8. '০' → logprob: -18.375
    9. '```' → logprob: -18.5
    10. '०' → logprob: -19.0625

Token 488: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.281160444021225
    2. '*' → logprob: -1.4061604738235474
    3. '*object' → logprob: -12.531160354614258
    4. '**' → logprob: -12.656160354614258
    5. ')' → logprob: -13.906160354614258
    6. ' ' → logprob: -14.781160354614258
    7. '*num' → logprob: -14.906160354614258
    8. '```' → logprob: -15.406160354614258
    9. ' **' → logprob: -15.531160354614258
    10. '*(' → logprob: -15.656160354614258

Token 489: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00014334988372866064
    2. ' neighbor' → logprob: -8.875143051147461
    3. 'node' → logprob: -13.625143051147461
    4. '
' → logprob: -14.000143051147461
    5. '_neighbor' → logprob: -15.000143051147461
    6. 'adj' → logprob: -15.375143051147461
    7. '[' → logprob: -15.625143051147461
    8. '[
' → logprob: -16.37514305114746
    9. 'neighbors' → logprob: -16.50014305114746
    10. ')' → logprob: -16.62514305114746

Token 490: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.21283048391342163
    2. 'node' → logprob: -1.7128305435180664
    3. 'index' → logprob: -4.587830543518066
    4. '_node' → logprob: -7.462830543518066
    5. '
' → logprob: -8.337830543518066
    6. '[node' → logprob: -8.712830543518066
    7. '   ' → logprob: -10.087830543518066
    8. '+' → logprob: -10.087830543518066
    9. ' node' → logprob: -10.337830543518066
    10. '```' → logprob: -11.087830543518066

Token 491: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408226132392883
    2. ' +' → logprob: -0.9740822315216064
    3. '+
' → logprob: -13.224081993103027
    4. ' +
' → logprob: -13.974081993103027
    5. '+,' → logprob: -14.849081993103027
    6. '                           ' → logprob: -14.974081993103027
    7. '                               ' → logprob: -15.224081993103027
    8. '                        ' → logprob: -15.349081993103027
    9. ' plus' → logprob: -15.349081993103027
    10. '                       ' → logprob: -15.724081993103027

Token 492: ' (' (ID: 350)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.07347801327705383
    2. 'max' → logprob: -3.3234779834747314
    3. '(char' → logprob: -3.8234779834747314
    4. '(max' → logprob: -4.9484782218933105
    5. ' charge' → logprob: -6.4484782218933105
    6. '(' → logprob: -7.0734782218933105
    7. ' (' → logprob: -7.0734782218933105
    8. ' max' → logprob: -7.3234782218933105
    9. 'char' → logprob: -7.5734782218933105
    10. 'min' → logprob: -8.323477745056152

Token 493: 'charge' (ID: 16623)
  Prédit: 'charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -2.069664333248511e-05
    2. ' charge' → logprob: -10.875020980834961
    3. 'char' → logprob: -14.125020980834961
    4. '
' → logprob: -15.250020980834961
    5. '   ' → logprob: -15.250020980834961
    6. '           ' → logprob: -16.62502098083496
    7. 'charged' → logprob: -16.87502098083496
    8. '                   ' → logprob: -17.12502098083496
    9. '(char' → logprob: -17.25002098083496
    10. 'max' → logprob: -17.25002098083496

Token 494: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.06201182305812836
    2. 'level' → logprob: -2.81201171875
    3. 'charge' → logprob: -10.56201171875
    4. '
' → logprob: -13.06201171875
    5. 'Level' → logprob: -13.06201171875
    6. 'max' → logprob: -13.43701171875
    7. '-level' → logprob: -13.68701171875
    8. '_charge' → logprob: -13.68701171875
    9. '_LEVEL' → logprob: -14.31201171875
    10. 'leve' → logprob: -14.31201171875

Token 495: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0789719671010971
    2. ' -' → logprob: -2.5789718627929688
    3. '-remove' → logprob: -10.328971862792969
    4. '-
' → logprob: -10.703971862792969
    5. '-re' → logprob: -11.953971862792969
    6. '-request' → logprob: -12.828971862792969
    7. '-task' → logprob: -13.203971862792969
    8. '<|end|>' → logprob: -13.328971862792969
    9. '-min' → logprob: -13.578971862792969
    10. ' ' → logprob: -13.578971862792969

Token 496: ' require' (ID: 1841)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.0013266648165881634
    2. ' require' → logprob: -6.626326560974121
    3. '                   ' → logprob: -15.001326560974121
    4. '
' → logprob: -15.876326560974121
    5. '.require' → logprob: -16.751327514648438
    6. '	require' → logprob: -17.001327514648438
    7. ' ' → logprob: -17.001327514648438
    8. '               ' → logprob: -17.251327514648438
    9. '(require' → logprob: -17.376327514648438
    10. '                       ' → logprob: -17.751327514648438

Token 497: '_charge' (ID: 110838)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.018675191327929497
    2. 'quire' → logprob: -4.643675327301025
    3. 'charge' → logprob: -6.143675327301025
    4. '_charge' → logprob: -6.393675327301025
    5. '               ' → logprob: -6.893675327301025
    6. 'use' → logprob: -7.268675327301025
    7. '       ' → logprob: -7.518675327301025
    8. '   ' → logprob: -7.768675327301025
    9. '_require' → logprob: -7.768675327301025
    10. ' require' → logprob: -8.018674850463867

Token 498: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002219722606241703
    2. ')' → logprob: -6.8772196769714355
    3. ' ),' → logprob: -7.6272196769714355
    4. '+' → logprob: -8.127220153808594
    5. ',' → logprob: -8.377220153808594
    6. ' +' → logprob: -10.002220153808594
    7. '),
' → logprob: -10.127220153808594
    8. '))' → logprob: -11.502220153808594
    9. '           ' → logprob: -11.627220153808594
    10. '               ' → logprob: -11.627220153808594

Token 499: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.28559255599975586
    2. ' travel' → logprob: -1.4105925559997559
    3. '                           ' → logprob: -7.160592555999756
    4. '                               ' → logprob: -7.410592555999756
    5. '                       ' → logprob: -7.535592555999756
    6. 'charge' → logprob: -7.785592555999756
    7. '                                   ' → logprob: -8.160593032836914
    8. '                                ' → logprob: -8.410593032836914
    9. '                        ' → logprob: -8.785593032836914
    10. '                            ' → logprob: -8.785593032836914

Token 500: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.7848862373502925e-05
    2. 'cost' → logprob: -11.000027656555176
    3. ' _' → logprob: -12.375027656555176
    4. '_' → logprob: -12.750027656555176
    5. '_COST' → logprob: -14.000027656555176
    6. '
' → logprob: -14.500027656555176
    7. 'Cost' → logprob: -14.875027656555176
    8. '_
' → logprob: -14.875027656555176
    9. ' cost' → logprob: -15.000027656555176
    10. '                       ' → logprob: -15.250027656555176

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028587706387043
    2. ')
' → logprob: -3.778587818145752
    3. '))' → logprob: -5.903587818145752
    4. ' )' → logprob: -6.278587818145752
    5. '))
' → logprob: -8.403587341308594
    6. ' )
' → logprob: -8.903587341308594
    7. '                   ' → logprob: -9.403587341308594
    8. '                       ' → logprob: -9.528587341308594
    9. '               ' → logprob: -9.653587341308594
    10. '           ' → logprob: -9.903587341308594

Token 502: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002505982294678688
    2. ')
' → logprob: -7.002505779266357
    3. '                   ' → logprob: -7.127505779266357
    4. '               ' → logprob: -7.752505779266357
    5. '           ' → logprob: -8.627506256103516
    6. '                       ' → logprob: -9.252506256103516
    7. ' )' → logprob: -10.127506256103516
    8. '                           ' → logprob: -10.877506256103516
    9. '       ' → logprob: -11.502506256103516
    10. '                               ' → logprob: -12.877506256103516

Token 503: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029044896364212036
    2. '                   ' → logprob: -6.752904415130615
    3. '               ' → logprob: -7.127904415130615
    4. ')
' (adapté à ' )
') → logprob: -7.377904415130615
    5. '           ' → logprob: -8.377904891967773
    6. ' )' → logprob: -10.502904891967773
    7. '       ' → logprob: -10.627904891967773
    8. '                       ' → logprob: -12.002904891967773
    9. '   ' → logprob: -12.752904891967773
    10. '                ' → logprob: -12.877904891967773

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12452725321054459
    2. '<|end|>' → logprob: -3.1245272159576416
    3. '               ' → logprob: -3.3745272159576416
    4. 'for' → logprob: -4.624527454376221
    5. '            ' → logprob: -4.999527454376221
    6. ')' → logprob: -5.374527454376221
    7. '                   ' → logprob: -5.499527454376221
    8. '       ' → logprob: -5.999527454376221
    9. '
' → logprob: -6.749527454376221
    10. '                ' → logprob: -6.874527454376221

Token 505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5090813636779785
    2. '           ' → logprob: -1.2590813636779785
    3. 'expanded' → logprob: -2.3840813636779785
    4. 'for' → logprob: -4.6340813636779785
    5. ' if' → logprob: -5.1340813636779785
    6. '       ' → logprob: -5.6340813636779785
    7. ' expanded' → logprob: -6.7590813636779785
    8. 'expand' → logprob: -6.7590813636779785
    9. '   ' → logprob: -7.6340813636779785
    10. '#' → logprob: -9.00908088684082

Token 506: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.20144207775592804
    2. ' charge' → logprob: -1.7014421224594116
    3. '   ' → logprob: -11.076441764831543
    4. ' ' → logprob: -11.701441764831543
    5. 'charged' → logprob: -13.826441764831543
    6. '_charge' → logprob: -13.826441764831543
    7. '
' → logprob: -14.701441764831543
    8. '  ' → logprob: -14.951441764831543
    9. '    ' → logprob: -15.076441764831543
    10. '0' → logprob: -15.326441764831543

Token 507: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -4.60414821645827e-06
    2. '_levels' → logprob: -12.750004768371582
    3. 'level' → logprob: -14.000004768371582
    4. '_' → logprob: -15.875004768371582
    5. 'Level' → logprob: -16.000003814697266
    6. '```' → logprob: -16.250003814697266
    7. '_LEVEL' → logprob: -16.625003814697266
    8. '_increment' → logprob: -16.625003814697266
    9. '   ' → logprob: -16.875003814697266
    10. '[level' → logprob: -17.000003814697266

Token 508: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7055686116218567
    2. '<' → logprob: -1.080568552017212
    3. '+' → logprob: -1.955568552017212
    4. ' +' → logprob: -3.705568552017212
    5. '>' → logprob: -8.830568313598633
    6. '<len' → logprob: -9.080568313598633
    7. ' ' → logprob: -9.330568313598633
    8. ' >' → logprob: -9.455568313598633
    9. '   ' → logprob: -9.580568313598633
    10. '[' → logprob: -10.580568313598633

Token 509: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.002602172316983342
    2. '1' → logprob: -6.1276021003723145
    3. ' charge' → logprob: -7.8776021003723145
    4. ' ' → logprob: -11.127602577209473
    5. '   ' → logprob: -11.252602577209473
    6. '0' → logprob: -13.502602577209473
    7. 'cost' → logprob: -13.627602577209473
    8. '
' → logprob: -14.502602577209473
    9. 'change' → logprob: -14.502602577209473
    10. '       ' → logprob: -14.627602577209473

Token 510: '_increment' (ID: 132160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03974675014615059
    2. ' <=' → logprob: -4.4147467613220215
    3. '_cost' → logprob: -4.6647467613220215
    4. ' ' → logprob: -5.2897467613220215
    5. '<=' → logprob: -5.2897467613220215
    6. '   ' → logprob: -6.2897467613220215
    7. '_charge' → logprob: -6.7897467613220215
    8. '[' → logprob: -7.0397467613220215
    9. '[node' → logprob: -7.2897467613220215
    10. '_increment' → logprob: -8.289746284484863

Token 511: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6952158808708191
    2. ' <' → logprob: -0.6952158808708191
    3. ' <=' → logprob: -6.820215702056885
    4. '<=' → logprob: -6.945215702056885
    5. '<num' → logprob: -12.695216178894043
    6. '<len' → logprob: -12.945216178894043
    7. '<n' → logprob: -13.445216178894043
    8. '<size' → logprob: -13.695216178894043
    9. '[' → logprob: -13.820216178894043
    10. '<int' → logprob: -14.445216178894043

Token 512: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.126502990722656
    4. '  ' → logprob: -17.376502990722656
    5. '(' → logprob: -18.251502990722656
    6. '25' → logprob: -18.501502990722656
    7. '    ' → logprob: -18.751502990722656
    8. '
' → logprob: -19.126502990722656
    9. '                   ' → logprob: -19.126502990722656
    10. '```' → logprob: -19.376502990722656

Token 513: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '
' → logprob: -18.750001907348633
    5. '  ' → logprob: -20.500001907348633
    6. '25' → logprob: -20.625001907348633
    7. '(' → logprob: -21.250001907348633
    8. '

' → logprob: -21.375001907348633
    9. '249' → logprob: -21.750001907348633
    10. '```' → logprob: -21.750001907348633

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. 'o' → logprob: -14.750000953674316
    3. '۰' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.000001907348633
    5. '０' → logprob: -16.250001907348633
    6. ' ' → logprob: -16.250001907348633
    7. '```' → logprob: -16.375001907348633
    8. '०' → logprob: -16.500001907348633
    9. '০' → logprob: -16.625001907348633
    10. ')' → logprob: -17.375001907348633

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1666194349527359
    2. ':
' → logprob: -2.0416195392608643
    3. ' and' → logprob: -3.7916195392608643
    4. '               ' → logprob: -7.541619300842285
    5. '           ' → logprob: -8.666619300842285
    6. 'and' → logprob: -9.041619300842285
    7. ' :' → logprob: -9.541619300842285
    8. '   ' → logprob: -9.666619300842285
    9. '       ' → logprob: -9.791619300842285
    10. ' :
' → logprob: -10.666619300842285

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035105107817798853
    2. '       ' → logprob: -6.003510475158691
    3. '<|end|>' → logprob: -7.628510475158691
    4. ' expanded' → logprob: -8.503510475158691
    5. '           ' → logprob: -9.128510475158691
    6. 'expanded' → logprob: -9.753510475158691
    7. '   ' → logprob: -10.128510475158691
    8. '                
' → logprob: -10.628510475158691
    9. '                       ' → logprob: -10.878510475158691
    10. '                   ' → logprob: -11.378510475158691

Token 517: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' (adapté à ' expanded') → logprob: -0.4796867072582245
    2. ' expanded' → logprob: -0.9796867370605469
    3. '               ' → logprob: -5.479686737060547
    4. '                   ' → logprob: -6.604686737060547
    5. '           ' → logprob: -10.104686737060547
    6. '   ' → logprob: -11.729686737060547
    7. '                       ' → logprob: -11.854686737060547
    8. '                ' → logprob: -12.854686737060547
    9. 'expand' → logprob: -12.979686737060547
    10. ' ' → logprob: -13.354686737060547

Token 518: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00011749001714633778
    2. 'graph' → logprob: -9.125117301940918
    3. '_' → logprob: -13.000117301940918
    4. 'Graph' → logprob: -13.000117301940918
    5. '
' → logprob: -13.750117301940918
    6. '_GRAPH' → logprob: -14.500117301940918
    7. '	graph' → logprob: -15.000117301940918
    8. 'expanded' → logprob: -15.000117301940918
    9. '[' → logprob: -15.500117301940918
    10. '_g' → logprob: -15.625117301940918

Token 519: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.375
    3. '   ' → logprob: -16.125
    4. ' [' → logprob: -17.875
    5. '               ' → logprob: -19.0
    6. '           ' → logprob: -19.0
    7. '       ' → logprob: -19.5
    8. '[(' → logprob: -19.5
    9. '[node' → logprob: -19.875
    10. '                   ' → logprob: -20.75

Token 520: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -5.550411151489243e-05
    2. ' ' → logprob: -10.250055313110352
    3. '[' → logprob: -11.250055313110352
    4. '   ' → logprob: -12.875055313110352
    5. 'node' → logprob: -13.625055313110352
    6. '255' → logprob: -14.250055313110352
    7. '(' → logprob: -14.500055313110352
    8. '               ' → logprob: -15.125055313110352
    9. '
' → logprob: -15.125055313110352
    10. '25' → logprob: -15.250055313110352

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '                   ' → logprob: -15.875000953674316
    5. '               ' → logprob: -16.250001907348633
    6. '           ' → logprob: -16.375001907348633
    7. '۰' → logprob: -16.625001907348633
    8. 'level' → logprob: -17.125001907348633
    9. '       ' → logprob: -17.187501907348633
    10. '                       ' → logprob: -17.687501907348633

Token 522: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048590775579214096
    2. ' *' → logprob: -3.048590660095215
    3. '*object' → logprob: -13.423590660095215
    4. '[node' → logprob: -13.923590660095215
    5. '*n' → logprob: -15.173590660095215
    6. '*num' → logprob: -15.298590660095215
    7. '*[' → logprob: -16.17359161376953
    8. '**' → logprob: -16.29859161376953
    9. ' ' → logprob: -16.42359161376953
    10. '*out' → logprob: -16.92359161376953

Token 523: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.1875571544806007e-05
    2. ' node' → logprob: -11.375011444091797
    3. '[node' → logprob: -15.875011444091797
    4. '
' → logprob: -16.625011444091797
    5. '(node' → logprob: -17.625011444091797
    6. '	node' → logprob: -18.000011444091797
    7. 'index' → logprob: -18.625011444091797
    8. 'user' → logprob: -18.625011444091797
    9. 'vertex' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.375011444091797

Token 524: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.28956007957458496
    2. 'index' → logprob: -1.414560079574585
    3. 'node' → logprob: -4.789560317993164
    4. 'ind' → logprob: -10.664560317993164
    5. 'nd' → logprob: -11.414560317993164
    6. 'Index' → logprob: -11.789560317993164
    7. 'user' → logprob: -12.289560317993164
    8. ' index' → logprob: -12.789560317993164
    9. '   ' → logprob: -13.914560317993164
    10. ' node' → logprob: -14.039560317993164

Token 525: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048590436577796936
    2. ' +' → logprob: -3.0485904216766357
    3. '[' → logprob: -13.798590660095215
    4. '   ' → logprob: -14.173590660095215
    5. '+
' → logprob: -14.673590660095215
    6. ' ' → logprob: -15.548590660095215
    7. '       ' → logprob: -16.1735897064209
    8. '＋' → logprob: -16.1735897064209
    9. '+[' → logprob: -16.2985897064209
    10. '           ' → logprob: -16.6735897064209

Token 526: ' charge' (ID: 8363)
  Prédit: '(char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.022427279502153397
    2. 'charge' → logprob: -3.8974273204803467
    3. '(' → logprob: -6.772427082061768
    4. ' (' → logprob: -7.522427082061768
    5. 'char' → logprob: -9.147427558898926
    6. '(ch' → logprob: -10.272427558898926
    7. ' charge' → logprob: -11.022427558898926
    8. '(
' → logprob: -11.147427558898926
    9. '(c' → logprob: -11.272427558898926
    10. '   ' → logprob: -13.147427558898926

Token 527: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0005923516000621021
    2. 'level' → logprob: -7.500592231750488
    3. '_charge' → logprob: -10.625592231750488
    4. 'charge' → logprob: -11.750592231750488
    5. '_index' → logprob: -12.750592231750488
    6. '+' → logprob: -13.000592231750488
    7. '   ' → logprob: -14.375592231750488
    8. 'Level' → logprob: -15.375592231750488
    9. '-level' → logprob: -15.500592231750488
    10. '_LEVEL' → logprob: -15.875592231750488

Token 528: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.3557529857498594e-05
    2. '.append' → logprob: -11.12502384185791
    3. ']' → logprob: -12.00002384185791
    4. ').' → logprob: -13.50002384185791
    5. '.' → logprob: -14.50002384185791
    6. '           ' → logprob: -14.87502384185791
    7. ' ].' → logprob: -16.125022888183594
    8. '               ' → logprob: -17.250022888183594
    9. '+' → logprob: -17.375022888183594
    10. '       ' → logprob: -17.625022888183594

Token 529: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.500000953674316
    3. ' append' → logprob: -15.000000953674316
    4. 'appen' → logprob: -19.125
    5. 'app' → logprob: -19.75
    6. '	append' → logprob: -19.875
    7. '_append' → logprob: -20.0
    8. 'extend' → logprob: -22.25
    9. 'Append' → logprob: -23.375
    10. 'add' → logprob: -24.375

Token 530: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043108124285936356
    2. '(
' → logprob: -3.4181082248687744
    3. '((' → logprob: -4.668107986450195
    4. '(
' → logprob: -10.793107986450195
    5. '(

' → logprob: -12.043107986450195
    6. ' (' → logprob: -14.793107986450195
    7. '```' → logprob: -15.543107986450195
    8. '   ' → logprob: -15.793107986450195
    9. '(((' → logprob: -16.418107986450195
    10. '               ' → logprob: -16.793107986450195

Token 531: '                   ' (ID: 699)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014686379581689835
    2. ' (' → logprob: -4.264686584472656
    3. '(
' → logprob: -7.889686584472656
    4. '   ' → logprob: -8.889686584472656
    5. '((' → logprob: -12.264686584472656
    6. '               ' → logprob: -12.889686584472656
    7. '                   ' → logprob: -14.389686584472656
    8. ' ' → logprob: -14.514686584472656
    9. '           ' → logprob: -14.764686584472656
    10. '       ' → logprob: -14.889686584472656

Token 532: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -4.894790981779806e-05
    2. '(
' → logprob: -10.625048637390137
    3. ' (' → logprob: -10.625048637390137
    4. '   ' → logprob: -15.375048637390137
    5. '(
' → logprob: -19.000049591064453
    6. '((' → logprob: -19.375049591064453
    7. '(

' → logprob: -19.750049591064453
    8. ' ' → logprob: -19.750049591064453
    9. '(int' → logprob: -20.125049591064453
    10. '250' → logprob: -20.625049591064453

Token 533: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.625015258789062
    4. '(' → logprob: -16.375015258789062
    5. '               ' → logprob: -16.875015258789062
    6. '                   ' → logprob: -17.250015258789062
    7. '                ' → logprob: -17.625015258789062
    8. '[' → logprob: -18.375015258789062
    9. '`' → logprob: -18.500015258789062
    10. '252' → logprob: -18.500015258789062

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '*' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '۰' → logprob: -16.500001907348633
    5. ' *' → logprob: -17.500001907348633
    6. '০' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '०' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. '０' → logprob: -19.062501907348633

Token 535: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519374191761017
    2. '*' → logprob: -1.5019373893737793
    3. '[node' → logprob: -12.751937866210938
    4. '*object' → logprob: -13.001937866210938
    5. '*num' → logprob: -13.751937866210938
    6. '**' → logprob: -14.626937866210938
    7. ' ' → logprob: -14.876937866210938
    8. '*n' → logprob: -15.001937866210938
    9. '*[' → logprob: -15.251937866210938
    10. '```' → logprob: -15.751937866210938

Token 536: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0008087906171567738
    2. ' node' → logprob: -7.1258087158203125
    3. '(node' → logprob: -12.750808715820312
    4. '[node' → logprob: -13.500808715820312
    5. '	node' → logprob: -16.375808715820312
    6. ' ' → logprob: -18.000808715820312
    7. 'user' → logprob: -18.250808715820312
    8. '
' → logprob: -18.875808715820312
    9. '_node' → logprob: -19.000808715820312
    10. '   ' → logprob: -19.000808715820312

Token 537: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.032119020819664
    2. 'index' → logprob: -3.657119035720825
    3. 'node' → logprob: -5.157118797302246
    4. '_node' → logprob: -11.282118797302246
    5. 'ind' → logprob: -12.032118797302246
    6. '+' → logprob: -12.032118797302246
    7. 'nd' → logprob: -12.657118797302246
    8. '```' → logprob: -12.907118797302246
    9. 'Index' → logprob: -13.032118797302246
    10. '   ' → logprob: -13.532118797302246

Token 538: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022787988185883
    2. '+' → logprob: -1.91022789478302
    3. ' +
' → logprob: -12.91022777557373
    4. '+
' → logprob: -14.28522777557373
    5. '[' → logprob: -15.16022777557373
    6. ' ' → logprob: -15.78522777557373
    7. '   ' → logprob: -16.785228729248047
    8. ' ' → logprob: -17.285228729248047
    9. ' +
' → logprob: -17.410228729248047
    10. '+[' → logprob: -17.660228729248047

Token 539: ' (' (ID: 350)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.0021979559678584337
    2. ' charge' → logprob: -6.127197742462158
    3. '(' → logprob: -12.127198219299316
    4. '   ' → logprob: -13.127198219299316
    5. 'char' → logprob: -13.252198219299316
    6. ' (' → logprob: -13.377198219299316
    7. '(char' → logprob: -14.002198219299316
    8. 'charged' → logprob: -14.877198219299316
    9. 'charg' → logprob: -15.502198219299316
    10. ' ' → logprob: -15.627198219299316

Token 540: 'charge' (ID: 16623)
  Prédit: 'charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -5.512236498361744e-07
    2. ' charge' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.5
    4. 'charged' → logprob: -20.0
    5. 'char' → logprob: -20.5
    6. '(' → logprob: -20.75
    7. '
' → logprob: -21.625
    8. 'charg' → logprob: -22.25
    9. 'charges' → logprob: -22.375
    10. 'charger' → logprob: -22.875

Token 541: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.000888471957296133
    2. 'charge' → logprob: -7.875888347625732
    3. '_charge' → logprob: -8.00088882446289
    4. 'level' → logprob: -8.75088882446289
    5. '_code' → logprob: -12.00088882446289
    6. '_cost' → logprob: -12.87588882446289
    7. '1' → logprob: -13.37588882446289
    8. '   ' → logprob: -14.00088882446289
    9. '```' → logprob: -14.25088882446289
    10. '_limit' → logprob: -14.75088882446289

Token 542: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193315744400024
    2. ' +' → logprob: -1.5019330978393555
    3. ' +
' → logprob: -13.376933097839355
    4. '+
' → logprob: -13.751933097839355
    5. ' ' → logprob: -14.001933097839355
    6. '[' → logprob: -15.126933097839355
    7. '<|end|>' → logprob: -15.876933097839355
    8. '   ' → logprob: -16.001934051513672
    9. '＋' → logprob: -17.001934051513672
    10. '           ' → logprob: -17.501934051513672

Token 543: ' charge' (ID: 8363)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2020169347524643
    2. 'charge' → logprob: -1.7020169496536255
    3. ' ' → logprob: -7.577016830444336
    4. ' charge' → logprob: -9.452016830444336
    5. '
' → logprob: -12.452016830444336
    6. ')' → logprob: -13.077016830444336
    7. '   ' → logprob: -13.452016830444336
    8. '+' → logprob: -13.952016830444336
    9. '```' → logprob: -14.327016830444336
    10. 'cost' → logprob: -14.702016830444336

Token 544: '_increment' (ID: 132160)
  Prédit: '_increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_increment' → logprob: -0.008739846758544445
    2. 'increment' → logprob: -4.758739948272705
    3. 'Increment' → logprob: -9.008739471435547
    4. '_in' → logprob: -13.633739471435547
    5. '_INCREMENT' → logprob: -14.633739471435547
    6. ' increment' → logprob: -14.883739471435547
    7. ')' → logprob: -15.133739471435547
    8. '_' → logprob: -15.258739471435547
    9. '_level' → logprob: -16.383739471435547
    10. '
' → logprob: -16.883739471435547

Token 545: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005729287513531744
    2. ',' → logprob: -7.50057315826416
    3. ' ),' → logprob: -11.75057315826416
    4. '],' → logprob: -12.25057315826416
    5. ',),' → logprob: -13.12557315826416
    6. '),
' → logprob: -13.37557315826416
    7. '   ' → logprob: -14.12557315826416
    8. ')' → logprob: -14.25057315826416
    9. '```' → logprob: -14.37557315826416
    10. '           ' → logprob: -14.50057315826416

Token 546: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.28493407368659973
    2. ' charge' → logprob: -1.4099340438842773
    3. 'cost' → logprob: -6.034934043884277
    4. ' cost' → logprob: -7.159934043884277
    5. '                   ' → logprob: -9.034934043884277
    6. '   ' → logprob: -9.159934043884277
    7. '                    ' → logprob: -9.534934043884277
    8. '    ' → logprob: -10.284934043884277
    9. '                           ' → logprob: -10.534934043884277
    10. '                       ' → logprob: -10.784934043884277

Token 547: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0564331205387134e-05
    2. '_charge' → logprob: -11.62501049041748
    3. '_' → logprob: -13.75001049041748
    4. 'cost' → logprob: -15.37501049041748
    5. '_COST' → logprob: -16.125011444091797
    6. '_co' → logprob: -16.750011444091797
    7. '_code' → logprob: -17.375011444091797
    8. '_
' → logprob: -17.500011444091797
    9. ' _' → logprob: -17.750011444091797
    10. 'Cost' → logprob: -18.125011444091797

Token 548: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006027269177138805
    2. ')
' → logprob: -5.1310272216796875
    3. '       ' → logprob: -10.631027221679688
    4. '           ' → logprob: -10.756027221679688
    5. '               ' → logprob: -11.006027221679688
    6. '))' → logprob: -11.256027221679688
    7. ' )' → logprob: -11.506027221679688
    8. '   ' → logprob: -11.756027221679688
    9. '                   ' → logprob: -13.006027221679688
    10. ')
' → logprob: -13.256027221679688

Token 549: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002029277151450515
    2. '       ' → logprob: -7.0020294189453125
    3. ')
' → logprob: -7.3770294189453125
    4. '               ' → logprob: -8.377029418945312
    5. '           ' → logprob: -9.002029418945312
    6. '   ' → logprob: -9.127029418945312
    7. '                   ' → logprob: -10.877029418945312
    8. ' )' → logprob: -11.752029418945312
    9. '))' → logprob: -14.877029418945312
    10. '                       ' → logprob: -15.002029418945312

Token 550: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018498663557693362
    2. ')
' (adapté à ' )
') → logprob: -7.37684965133667
    3. '           ' → logprob: -7.62684965133667
    4. '       ' → logprob: -7.62684965133667
    5. '   ' → logprob: -9.001850128173828
    6. '               ' → logprob: -9.126850128173828
    7. ' )' → logprob: -11.501850128173828
    8. '                   ' → logprob: -12.626850128173828
    9. '```' → logprob: -14.126850128173828
    10. ')`' → logprob: -14.751850128173828

Token 551: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.255023956531659e-05
    2. 'start' → logprob: -10.375072479248047
    3. 'return' → logprob: -11.875072479248047
    4. '
' → logprob: -12.125072479248047
    5. ' min' → logprob: -12.125072479248047
    6. '```' → logprob: -12.375072479248047
    7. 'result' → logprob: -12.500072479248047
    8. '_min' → logprob: -12.625072479248047
    9. '(min' → logprob: -12.875072479248047
    10. '#' → logprob: -13.625072479248047

Token 552: ' expanded' (ID: 28044)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00038348292582668364
    2. 'result' → logprob: -8.500383377075195
    3. 'dist' → logprob: -9.875383377075195
    4. 'start' → logprob: -10.000383377075195
    5. '
' → logprob: -10.750383377075195
    6. ' min' → logprob: -10.750383377075195
    7. 'distance' → logprob: -11.750383377075195
    8. '   ' → logprob: -12.000383377075195
    9. 'minimal' → logprob: -12.250383377075195
    10. 'minimum' → logprob: -12.375383377075195

Token 553: '_dist' (ID: 37968)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.2653748691082001
    2. '_min' → logprob: -1.6403748989105225
    3. '_dist' → logprob: -3.3903748989105225
    4. '_paths' → logprob: -5.765374660491943
    5. '_' → logprob: -6.390374660491943
    6. '_short' → logprob: -8.640375137329102
    7. '_distance' → logprob: -8.890375137329102
    8. '_queue' → logprob: -9.515375137329102
    9. '_m' → logprob: -9.890375137329102
    10. '_path' → logprob: -10.140375137329102

Token 554: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -13.875003814697266
    3. 'ance' → logprob: -13.875003814697266
    4. ' =' → logprob: -14.000003814697266
    5. 's' → logprob: -15.000003814697266
    6. 'aces' → logprob: -15.375003814697266
    7. 'ences' → logprob: -15.750003814697266
    8. 'ANCES' → logprob: -16.000003814697266
    9. '```' → logprob: -16.125003814697266
    10. '=' → logprob: -16.125003814697266

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020549597218632698
    2. '=' → logprob: -3.8955495357513428
    3. ',' → logprob: -11.895549774169922
    4. ')' → logprob: -14.645549774169922
    5. '[' → logprob: -16.270549774169922
    6. '  ' → logprob: -16.645549774169922
    7. '   ' → logprob: -16.895549774169922
    8. '<|end|>' → logprob: -16.895549774169922
    9. ' ' → logprob: -17.020549774169922
    10. 's' → logprob: -17.520549774169922

Token 556: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.029751762747764587
    2. ' graph' → logprob: -3.529751777648926
    3. '	graph' → logprob: -13.654751777648926
    4. '(graph' → logprob: -15.779751777648926
    5. '   ' → logprob: -17.27975082397461
    6. ' ' → logprob: -18.90475082397461
    7. 'Graph' → logprob: -18.90475082397461
    8. '_graph' → logprob: -19.15475082397461
    9. '.graph' → logprob: -19.27975082397461
    10. 'heap' → logprob: -19.90475082397461

Token 557: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.00012511172099038959
    2. '_exp' → logprob: -9.00012493133545
    3. '_dist' → logprob: -14.25012493133545
    4. 'short' → logprob: -14.87512493133545
    5. '_' → logprob: -15.37512493133545
    6. '_expand' → logprob: -16.500125885009766
    7. '_extended' → logprob: -16.500125885009766
    8. '```' → logprob: -16.625125885009766
    9. '(exp' → logprob: -17.125125885009766
    10. 'exp' → logprob: -17.875125885009766

Token 558: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.007631469983607531
    2. '_paths' → logprob: -4.882631301879883
    3. 'paths' → logprob: -11.132631301879883
    4. 'test' → logprob: -12.757631301879883
    5. '_path' → logprob: -12.882631301879883
    6. 'ests' → logprob: -13.382631301879883
    7. '[' → logprob: -14.382631301879883
    8. '_dist' → logprob: -14.382631301879883
    9. 'st' → logprob: -14.632631301879883
    10. '```' → logprob: -15.507631301879883

Token 559: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -6.630610641877865e-06
    2. '_dist' → logprob: -12.625006675720215
    3. '```' → logprob: -14.375006675720215
    4. 'paths' → logprob: -14.750006675720215
    5. '_path' → logprob: -14.875006675720215
    6. '_positions' → logprob: -15.125006675720215
    7. 's' → logprob: -15.125006675720215
    8. '[(' → logprob: -15.500006675720215
    9. '_ranges' → logprob: -15.750006675720215
    10. '_edges' → logprob: -15.750006675720215

Token 560: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -4.60414821645827e-06
    2. '(
' → logprob: -13.000004768371582
    3. '(' → logprob: -13.125004768371582
    4. 'expanded' → logprob: -16.250003814697266
    5. ' (' → logprob: -16.750003814697266
    6. '(ad' → logprob: -17.375003814697266
    7. '(e' → logprob: -17.500003814697266
    8. '```' → logprob: -17.625003814697266
    9. '(existing' → logprob: -17.625003814697266
    10. '(ex' → logprob: -18.500003814697266

Token 561: 'anded' (ID: 17107)
  Prédit: 'anded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anded' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.625011444091797
    3. '[' → logprob: -13.125011444091797
    4. 'ended' → logprob: -16.250011444091797
    5. 'expanded' → logprob: -16.500011444091797
    6. ')' → logprob: -16.875011444091797
    7. 'and' → logprob: -16.875011444091797
    8. '(and' → logprob: -17.125011444091797
    9. '(
' → logprob: -17.250011444091797
    10. '`' → logprob: -17.375011444091797

Token 562: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00037073178100399673
    2. 'graph' → logprob: -8.000370979309082
    3. 'expanded' → logprob: -10.625370979309082
    4. '(graph' → logprob: -12.125370979309082
    5. '(exp' → logprob: -13.125370979309082
    6. 'dist' → logprob: -14.125370979309082
    7. '_dist' → logprob: -14.125370979309082
    8. 'exp' → logprob: -14.375370979309082
    9. '_exp' → logprob: -15.125370979309082
    10. 'raph' → logprob: -15.125370979309082

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -12.500007629394531
    3. '   ' → logprob: -13.000007629394531
    4. '(' → logprob: -13.250007629394531
    5. ',
' → logprob: -17.12500762939453
    6. '[' → logprob: -17.50000762939453
    7. '0' → logprob: -17.75000762939453
    8. '(),' → logprob: -17.87500762939453
    9. ' (' → logprob: -18.12500762939453
    10. ',start' → logprob: -18.12500762939453

Token 564: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7867084741592407
    2. '250' → logprob: -1.4117084741592407
    3. ' start' → logprob: -1.5367084741592407
    4. ' ' → logprob: -2.786708354949951
    5. '0' → logprob: -3.786708354949951
    6. ' (' → logprob: -7.411708354949951
    7. '(' → logprob: -7.411708354949951
    8. '(start' → logprob: -8.66170883178711
    9. '   ' → logprob: -10.03670883178711
    10. '[start' → logprob: -11.59920883178711

Token 565: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.027225754223764e-05
    2. '_states' → logprob: -10.250060081481934
    3. 'state' → logprob: -11.875060081481934
    4. '0' → logprob: -12.375060081481934
    5. '_' → logprob: -12.500060081481934
    6. '_STATE' → logprob: -12.875060081481934
    7. 'State' → logprob: -13.000060081481934
    8. '_State' → logprob: -13.375060081481934
    9. '_stat' → logprob: -13.875060081481934
    10. '[' → logprob: -14.500060081481934

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.082895273109898e-05
    2. ')
' → logprob: -11.125030517578125
    3. '   ' → logprob: -11.750030517578125
    4. ' )' → logprob: -12.000030517578125
    5. '+' → logprob: -14.375030517578125
    6. '[' → logprob: -15.125030517578125
    7. '))' → logprob: -15.375030517578125
    8. ')`' → logprob: -15.750030517578125
    9. '),' → logprob: -16.875030517578125
    10. ')}}' → logprob: -16.875030517578125

Token 567: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27765506505966187
    2. 'result' → logprob: -1.9026551246643066
    3. 'print' → logprob: -2.6526551246643066
    4. 'answer' → logprob: -5.152655124664307
    5. 'dist' → logprob: -5.277655124664307
    6. 'min' → logprob: -5.277655124664307
    7. 'results' → logprob: -5.652655124664307
    8. 'output' → logprob: -6.527655124664307
    9. '```' → logprob: -7.402655124664307
    10. 'next' → logprob: -8.402654647827148

Token 568: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06194370985031128
    2. 'result' → logprob: -3.436943769454956
    3. 'print' → logprob: -4.061943531036377
    4. 'answer' → logprob: -5.811943531036377
    5. 'results' → logprob: -5.936943531036377
    6. 'min' (adapté à ' min') → logprob: -5.936943531036377
    7. 'output' → logprob: -7.061943531036377
    8. 'dist' → logprob: -7.686943531036377
    9. 'start' → logprob: -7.811943531036377
    10. 'final' → logprob: -8.436944007873535

Token 569: '_paths' (ID: 56992)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.12094701826572418
    2. '_paths' → logprob: -2.6209471225738525
    3. '_' → logprob: -3.3709471225738525
    4. '_distance' → logprob: -6.120946884155273
    5. '_cost' → logprob: -6.495946884155273
    6. '_result' → logprob: -6.995946884155273
    7. '_path' → logprob: -7.120946884155273
    8. '_results' → logprob: -8.120946884155273
    9. '_output' → logprob: -8.370946884155273
    10. '_val' → logprob: -8.620946884155273

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7010071277618408
    2. ' =' → logprob: -0.7010071277618408
    3. '[' → logprob: -5.201006889343262
    4. '<|end|>' → logprob: -7.576006889343262
    5. '[start' → logprob: -8.201006889343262
    6. ',' → logprob: -8.201006889343262
    7. ')' → logprob: -8.326006889343262
    8. '[:]' → logprob: -8.451006889343262
    9. '=[' → logprob: -9.201006889343262
    10. '[min' → logprob: -9.451006889343262

Token 571: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6344514489173889
    2. '[min' → logprob: -1.2594513893127441
    3. 'expanded' → logprob: -1.8844513893127441
    4. '[
' → logprob: -3.759451389312744
    5. '[]
' → logprob: -5.384451389312744
    6. 'min' → logprob: -6.384451389312744
    7. ' [' → logprob: -6.509451389312744
    8. ' expanded' → logprob: -6.509451389312744
    9. '[]' → logprob: -7.634451389312744
    10. 'exp' → logprob: -8.509451866149902

Token 572: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47806596755981445
    2. 'float' → logprob: -1.6030659675598145
    3. 'expanded' → logprob: -1.7280659675598145
    4. ' min' → logprob: -7.9780659675598145
    5. '
' → logprob: -8.103065490722656
    6. '   ' → logprob: -9.228065490722656
    7. 'expand' → logprob: -9.728065490722656
    8. ' expanded' → logprob: -9.853065490722656
    9. 'exp' → logprob: -9.978065490722656
    10. 'inf' → logprob: -9.978065490722656

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.083248071372509
    2. ' if' → logprob: -3.5832481384277344
    3. 'if' → logprob: -3.8332481384277344
    4. 'for' → logprob: -4.083248138427734
    5. ']*' → logprob: -5.083248138427734
    6. ' for' → logprob: -5.458248138427734
    7. '   ' → logprob: -6.958248138427734
    8. ',' → logprob: -7.458248138427734
    9. ']+' → logprob: -7.708248138427734
    10. ']*(' → logprob: -8.333248138427734

Token 574: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07809385657310486
    2. ' for' → logprob: -2.7030937671661377
    3. ']' → logprob: -5.703094005584717
    4. '[' → logprob: -6.703094005584717
    5. '+' → logprob: -6.828094005584717
    6. '```' → logprob: -6.828094005584717
    7. '<|end|>' → logprob: -8.078093528747559
    8. '*' → logprob: -8.203093528747559
    9. ',' → logprob: -8.453093528747559
    10. ']+' → logprob: -9.203093528747559

Token 575: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -2.3199920178740285e-05
    2. '(vertex' → logprob: -10.875022888183594
    3. ' vertex' → logprob: -12.625022888183594
    4. '```' → logprob: -15.250022888183594
    5. 'node' → logprob: -15.375022888183594
    6. '	vertex' → logprob: -15.625022888183594
    7. '(' → logprob: -15.750022888183594
    8. 'len' → logprob: -16.750022888183594
    9. '   ' → logprob: -17.625022888183594
    10. 'vector' → logprob: -18.250022888183594

Token 576: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.339278580620885e-06
    2. '_vertex' → logprob: -14.000001907348633
    3. 'count' → logprob: -14.250001907348633
    4. '_counts' → logprob: -15.000001907348633
    5. '_' → logprob: -15.375001907348633
    6. '_COUNT' → logprob: -15.875001907348633
    7. '_
' → logprob: -16.625001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'Count' → logprob: -18.000001907348633
    10. 'vertex' → logprob: -18.125001907348633

Token 577: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29025810956954956
    2. 'for' → logprob: -1.4152581691741943
    3. ' for' → logprob: -4.915257930755615
    4. '\n' → logprob: -7.665257930755615
    5. '   ' → logprob: -7.790257930755615
    6. '  
' → logprob: -8.665258407592773
    7. '```' → logprob: -9.040258407592773
    8. ' 
' → logprob: -9.165258407592773
    9. '<|end|>' → logprob: -9.165258407592773
    10. '' → logprob: -9.415258407592773

Token 578: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019576070830225945
    2. '   ' → logprob: -4.644576072692871
    3. ' for' → logprob: -4.644576072692871
    4. '	for' → logprob: -9.144576072692871
    5. '
' → logprob: -10.769576072692871
    6. '<|end|>' → logprob: -11.394576072692871
    7. '```' → logprob: -12.019576072692871
    8. 'i' → logprob: -13.019576072692871
    9. '    
' → logprob: -13.144576072692871
    10. ' ' → logprob: -13.394576072692871

Token 579: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004440562799572945
    2. ' for' → logprob: -5.504440784454346
    3. '   ' → logprob: -8.379440307617188
    4. '```' → logprob: -9.379440307617188
    5. 'i' → logprob: -10.754440307617188
    6. '	for' → logprob: -11.504440307617188
    7. '
' → logprob: -11.754440307617188
    8. '_' → logprob: -12.254440307617188
    9. '' → logprob: -13.879440307617188
    10. 'range' → logprob: -14.504440307617188

Token 580: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.28164732456207275
    2. 'i' → logprob: -1.7816473245620728
    3. ' node' → logprob: -3.406647205352783
    4. 'v' → logprob: -3.531647205352783
    5. 'vertex' → logprob: -4.656647205352783
    6. ' i' → logprob: -5.906647205352783
    7. ' v' → logprob: -7.031647205352783
    8. 'idx' → logprob: -7.031647205352783
    9. ' vertex' → logprob: -8.156647682189941
    10. 'target' → logprob: -9.281647682189941

Token 581: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0044334400445222855
    2. '_idx' → logprob: -5.629433631896973
    3. '_i' → logprob: -8.129433631896973
    4. '_' → logprob: -8.254433631896973
    5. 'index' → logprob: -8.629433631896973
    6. '_id' → logprob: -10.004433631896973
    7. ' in' → logprob: -10.379433631896973
    8. 'i' → logprob: -12.129433631896973
    9. 'idx' → logprob: -12.254433631896973
    10. 'in' → logprob: -12.379433631896973

Token 582: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022293562069535255
    2. 'in' → logprob: -6.1272292137146
    3. ' ' → logprob: -11.252229690551758
    4. ',' → logprob: -11.627229690551758
    5. '   ' → logprob: -11.627229690551758
    6. '<|end|>' → logprob: -12.002229690551758
    7. '	in' → logprob: -12.627229690551758
    8. ' i' → logprob: -14.252229690551758
    9. '  ' → logprob: -14.502229690551758
    10. '    ' → logprob: -15.127229690551758

Token 583: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.65475082397461
    4. '	range' → logprob: -17.90475082397461
    5. ' ' → logprob: -18.52975082397461
    6. '
' → logprob: -20.15475082397461
    7. '```' → logprob: -21.27975082397461
    8. '_range' → logprob: -21.52975082397461
    9. '  ' → logprob: -21.65475082397461
    10. '0' → logprob: -21.77975082397461

Token 584: '(vertex' (ID: 96471)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.012594765052199364
    2. ' vertex' → logprob: -4.512594699859619
    3. '(vertex' → logprob: -6.512594699859619
    4. '1' → logprob: -10.512595176696777
    5. '	vertex' → logprob: -10.637595176696777
    6. 'range' → logprob: -12.012595176696777
    7. '0' → logprob: -13.887595176696777
    8. '.vertex' → logprob: -14.012595176696777
    9. '(' → logprob: -14.012595176696777
    10. '_vertex' → logprob: -14.887595176696777

Token 585: '_count' (ID: 7536)
  Prédit: '(vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -0.8238524794578552
    2. '_count' → logprob: -1.0738525390625
    3. 'vertex' → logprob: -1.6988525390625
    4. ' vertex' → logprob: -3.9488525390625
    5. '	vertex' → logprob: -5.0738525390625
    6. '_vertex' → logprob: -5.5738525390625
    7. '```' → logprob: -6.0738525390625
    8. '0' → logprob: -7.1988525390625
    9. '.vertex' → logprob: -7.1988525390625
    10. ')' → logprob: -7.3238525390625

Token 586: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.027848079800605774
    2. '):' → logprob: -3.9028480052948
    3. '+' → logprob: -5.652848243713379
    4. ':
' → logprob: -6.527848243713379
    5. ':' → logprob: -7.027848243713379
    6. '```' → logprob: -7.777848243713379
    7. '[' → logprob: -8.152848243713379
    8. '   ' → logprob: -8.152848243713379
    9. ',' → logprob: -9.027848243713379
    10. '():
' → logprob: -9.902848243713379

Token 587: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019809138029813766
    2. ' min' → logprob: -4.019809246063232
    3. '       ' → logprob: -7.019809246063232
    4. 'min' → logprob: -8.144808769226074
    5. '	min' → logprob: -8.894808769226074
    6. '```' → logprob: -8.894808769226074
    7. '[min' → logprob: -9.019808769226074
    8. ' for' → logprob: -10.769808769226074
    9. '[' → logprob: -11.394808769226074
    10. '   ' → logprob: -11.644808769226074

Token 588: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.1312972456216812
    2. ' min' → logprob: -2.5062973499298096
    3. 'best' → logprob: -3.7562973499298096
    4. '   ' → logprob: -4.8812971115112305
    5. 'possible' → logprob: -5.2562971115112305
    6. ' best' → logprob: -6.1312971115112305
    7. 'dist' → logprob: -7.5062971115112305
    8. 'current' → logprob: -7.8812971115112305
    9. '```' → logprob: -8.00629711151123
    10. ' minimal' → logprob: -8.13129711151123

Token 589: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.029652941972017288
    2. '_dist' → logprob: -4.279653072357178
    3. '_' → logprob: -4.904653072357178
    4. '_distance' → logprob: -6.279653072357178
    5. '_cost' → logprob: -6.904653072357178
    6. 'min' → logprob: -7.029653072357178
    7. '_val' → logprob: -7.154653072357178
    8. 'dist' → logprob: -7.404653072357178
    9. '[' → logprob: -7.529653072357178
    10. '_value' → logprob: -7.904653072357178

Token 590: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.1812642216682434
    2. '[' → logprob: -1.8062641620635986
    3. '=node' → logprob: -7.681264400482178
    4. '=' → logprob: -7.806264400482178
    5. ' =' → logprob: -8.30626392364502
    6. ' [' → logprob: -8.68126392364502
    7. '[
' → logprob: -9.18126392364502
    8. '[token' → logprob: -10.30626392364502
    9. '=[' → logprob: -10.80626392364502
    10. '```' → logprob: -11.05626392364502

Token 591: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.03810403496026993
    2. 'index' → logprob: -3.2881040573120117
    3. '_INDEX' → logprob: -11.038104057312012
    4. 'Index' → logprob: -11.413104057312012
    5. '   ' → logprob: -11.538104057312012
    6. '       ' → logprob: -12.288104057312012
    7. '```' → logprob: -12.788104057312012
    8. 'ind' → logprob: -13.163104057312012
    9. '_indices' → logprob: -13.163104057312012
    10. 'node' → logprob: -13.663104057312012

Token 592: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524930536746979
    2. '=' → logprob: -1.5024930238723755
    3. ']' → logprob: -8.502492904663086
    4. ']=' → logprob: -9.502492904663086
    5. ' =
' → logprob: -9.502492904663086
    6. ')' → logprob: -9.877492904663086
    7. ' ' → logprob: -10.252492904663086
    8. '=min' → logprob: -10.252492904663086
    9. ',' → logprob: -10.752492904663086
    10. '   ' → logprob: -11.002492904663086

Token 593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2817813456058502
    2. ' =' → logprob: -1.4067813158035278
    3. '=min' → logprob: -7.781781196594238
    4. '=
' → logprob: -8.781781196594238
    5. ' =
' → logprob: -11.031781196594238
    6. '[' → logprob: -11.406781196594238
    7. '=int' → logprob: -11.906781196594238
    8. '=max' → logprob: -12.031781196594238
    9. '=float' → logprob: -12.031781196594238
    10. '<|end|>' → logprob: -12.406781196594238

Token 594: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005545823951251805
    2. ' min' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.750555038452148
    4. '	min' → logprob: -15.375555038452148
    5. '```' → logprob: -16.87555503845215
    6. 'minimum' → logprob: -17.25055503845215
    7. '(min' → logprob: -17.62555503845215
    8. 'max' → logprob: -17.62555503845215
    9. '
' → logprob: -17.87555503845215
    10. 'float' → logprob: -18.25055503845215

Token 595: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.023456968367099762
    2. '(
' → logprob: -3.7734570503234863
    3. '(' → logprob: -9.273456573486328
    4. 'expanded' → logprob: -9.523456573486328
    5. '([' → logprob: -10.148456573486328
    6. '([
' → logprob: -13.523456573486328
    7. '((' → logprob: -13.523456573486328
    8. '(

' → logprob: -13.523456573486328
    9. 'exp' → logprob: -14.898456573486328
    10. '(min' → logprob: -15.273456573486328

Token 596: 'anded' (ID: 17107)
  Prédit: 'anded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anded' → logprob: -0.1715964823961258
    2. '(' → logprob: -2.0465965270996094
    3. '(
' → logprob: -4.296596527099609
    4. '([' → logprob: -5.421596527099609
    5. '(exp' → logprob: -5.421596527099609
    6. '(and' → logprob: -5.671596527099609
    7. '[' → logprob: -6.546596527099609
    8. '((' → logprob: -7.796596527099609
    9. 'and' → logprob: -8.92159652709961
    10. 'ended' → logprob: -9.29659652709961

Token 597: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.11985760927200317
    2. '(exp' → logprob: -2.7448575496673584
    3. '[' → logprob: -3.9948575496673584
    4. '_paths' → logprob: -4.4948577880859375
    5. '(
' → logprob: -4.8698577880859375
    6. 'expanded' → logprob: -5.2448577880859375
    7. '[
' → logprob: -5.8698577880859375
    8. 'dist' → logprob: -6.3698577880859375
    9. '(' → logprob: -7.1198577880859375
    10. '([' → logprob: -7.8698577880859375

Token 598: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.020621422678232193
    2. '[' → logprob: -4.770621299743652
    3. 'es' → logprob: -4.770621299743652
    4. 'expanded' → logprob: -6.895621299743652
    5. '_dist' → logprob: -7.270621299743652
    6. 'ces' → logprob: -8.020621299743652
    7. 'ed' → logprob: -8.270621299743652
    8. '[(' → logprob: -8.270621299743652
    9. 's' → logprob: -8.895621299743652
    10. '[s' → logprob: -9.020621299743652

Token 599: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011653638648567721
    2. '[
' → logprob: -9.125116348266602
    3. '[(' → logprob: -12.000116348266602
    4. '[i' → logprob: -14.875116348266602
    5. '[node' → logprob: -15.375116348266602
    6. '(' → logprob: -15.500116348266602
    7. '[start' → logprob: -16.2501163482666
    8. ' [' → logprob: -16.6251163482666
    9. '[n' → logprob: -17.1251163482666
    10. '
' → logprob: -17.2501163482666

Token 600: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.05507364869117737
    2. '[' → logprob: -3.0550737380981445
    3. 'node' → logprob: -5.4300737380981445
    4. '(' → logprob: -7.1800737380981445
    5. 'start' → logprob: -7.4300737380981445
    6. '[node' → logprob: -7.8050737380981445
    7. '[
' → logprob: -8.555073738098145
    8. '[start' → logprob: -9.930073738098145
    9. '
' → logprob: -11.055073738098145
    10. 'range' → logprob: -11.055073738098145

Token 601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. 'node' → logprob: -11.875007629394531
    3. '*' → logprob: -15.500007629394531
    4. '(node' → logprob: -16.00000762939453
    5. '[node' → logprob: -16.37500762939453
    6. '00' → logprob: -16.50000762939453
    7. '۰' → logprob: -16.50000762939453
    8. '500' → logprob: -16.62500762939453
    9. '٠' → logprob: -17.75000762939453
    10. '```' → logprob: -17.87500762939453

Token 602: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014167149551212788
    2. ' *' → logprob: -4.264167308807373
    3. '[node' → logprob: -12.889166831970215
    4. '*object' → logprob: -13.889166831970215
    5. '*num' → logprob: -16.26416778564453
    6. '**' → logprob: -16.88916778564453
    7. '(node' → logprob: -17.26416778564453
    8. '*(' → logprob: -17.76416778564453
    9. '*n' → logprob: -18.01416778564453
    10. '*[' → logprob: -18.38916778564453

Token 603: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00012368128227535635
    2. ' node' → logprob: -9.000123977661133
    3. '[node' → logprob: -15.750123977661133
    4. '(node' → logprob: -17.125123977661133
    5. '
' → logprob: -17.500123977661133
    6. '	node' → logprob: -18.750123977661133
    7. 'user' → logprob: -19.000123977661133
    8. '_node' → logprob: -20.125123977661133
    9. '```' → logprob: -20.375123977661133
    10. 'index' → logprob: -20.750123977661133

Token 604: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.4763566851615906
    2. 'index' → logprob: -0.9763566851615906
    3. 'node' → logprob: -6.101356506347656
    4. 'nd' → logprob: -11.476356506347656
    5. 'ind' → logprob: -11.726356506347656
    6. '```' → logprob: -12.226356506347656
    7. 'Index' → logprob: -12.351356506347656
    8. '
' → logprob: -12.726356506347656
    9. ' index' → logprob: -13.476356506347656
    10. '[node' → logprob: -13.851356506347656

Token 605: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006093862000852823
    2. '])' → logprob: -6.006093978881836
    3. '+' → logprob: -6.881093978881836
    4. ':])
' → logprob: -6.881093978881836
    5. ' :' → logprob: -8.006093978881836
    6. ':(' → logprob: -8.131093978881836
    7. ' +' → logprob: -8.256093978881836
    8. ':j' → logprob: -9.006093978881836
    9. ':],' → logprob: -9.131093978881836
    10. '+j' → logprob: -9.256093978881836

Token 606: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.01434060838073492
    2. '(' → logprob: -4.264340400695801
    3. ' ' → logprob: -8.7643404006958
    4. ' (' → logprob: -11.2643404006958
    5. '   ' → logprob: -12.5143404006958
    6. '
' → logprob: -13.6393404006958
    7. '((' → logprob: -15.0143404006958
    8. '  ' → logprob: -15.2643404006958
    9. '255' → logprob: -15.2643404006958
    10. '       ' → logprob: -15.7643404006958

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005874642520211637
    2. '250' → logprob: -7.750587463378906
    3. '(' → logprob: -9.625587463378906
    4. '500' → logprob: -10.250587463378906
    5. 'node' → logprob: -11.000587463378906
    6. '+' → logprob: -11.125587463378906
    7. '(node' → logprob: -11.750587463378906
    8. ' ' → logprob: -12.375587463378906
    9. '   ' → logprob: -13.500587463378906
    10. '00' → logprob: -13.500587463378906

Token 608: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.36704787611961365
    2. '(node' → logprob: -1.367047905921936
    3. '*' → logprob: -3.1170477867126465
    4. '(n' → logprob: -4.9920477867126465
    5. '(' → logprob: -6.7420477867126465
    6. '+' → logprob: -10.492048263549805
    7. ' *' → logprob: -10.617048263549805
    8. ' (' → logprob: -11.492048263549805
    9. '(next' → logprob: -11.867048263549805
    10. '(idx' → logprob: -12.117048263549805

Token 609: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -8.41866585687967e-06
    2. ' (' → logprob: -12.875008583068848
    3. '(n' → logprob: -13.000008583068848
    4. '(' → logprob: -13.000008583068848
    5. '((' → logprob: -14.375008583068848
    6. '(next' → logprob: -15.250008583068848
    7. '[node' → logprob: -15.625008583068848
    8. '(user' → logprob: -16.00000762939453
    9. '(
' → logprob: -16.12500762939453
    10. '   ' → logprob: -17.37500762939453

Token 610: 'node' (ID: 7005)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0004320996522437781
    2. 'node' → logprob: -7.750432014465332
    3. '[node' → logprob: -14.250432014465332
    4. ' (' → logprob: -14.750432014465332
    5. ' node' → logprob: -16.25043296813965
    6. '(' → logprob: -16.25043296813965
    7. '(
' → logprob: -16.75043296813965
    8. '   ' → logprob: -17.12543296813965
    9. '=node' → logprob: -17.75043296813965
    10. ',node' → logprob: -18.12543296813965

Token 611: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004450889769941568
    2. 'index' → logprob: -5.754450798034668
    3. 'node' → logprob: -6.879450798034668
    4. '+' → logprob: -8.379450798034668
    5. '1' → logprob: -12.379450798034668
    6. '_node' → logprob: -12.629450798034668
    7. 'nd' → logprob: -13.379450798034668
    8. '_' → logprob: -13.754450798034668
    9. '   ' → logprob: -14.379450798034668
    10. ' node' → logprob: -14.504450798034668

Token 612: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000340111117111519
    2. ' +' → logprob: -8.000340461730957
    3. '+
' → logprob: -12.500340461730957
    4. '   ' → logprob: -14.125340461730957
    5. '+(' → logprob: -16.25033950805664
    6. ' ' → logprob: -17.75033950805664
    7. '＋' → logprob: -17.87533950805664
    8. '```' → logprob: -18.12533950805664
    9. ' +
' → logprob: -18.37533950805664
    10. '+n' → logprob: -18.50033950805664

Token 613: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.875
    4. 'node' → logprob: -17.25
    5. '
' → logprob: -17.75
    6. '```' → logprob: -18.25
    7. '  ' → logprob: -20.0625
    8. '１' → logprob: -20.125
    9. '(' → logprob: -20.375
    10. '``' → logprob: -20.9375

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -19.0
    6. '１' → logprob: -20.6875
    7. ')' → logprob: -20.8125
    8. '0' → logprob: -20.875
    9. '``' → logprob: -21.5625
    10. '  ' → logprob: -21.5625

Token 615: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004002832865808159
    2. ')])' → logprob: -8.12540054321289
    3. ')' → logprob: -9.87540054321289
    4. ')]' → logprob: -10.75040054321289
    5. ']' → logprob: -11.25040054321289
    6. ' ])' → logprob: -11.75040054321289
    7. '])]' → logprob: -11.87540054321289
    8. '])
' → logprob: -13.50040054321289
    9. ']])' → logprob: -14.50040054321289
    10. ']))' → logprob: -14.62540054321289

Token 616: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3893551826477051
    2. 'print' → logprob: -1.139355182647705
    3. '
' → logprob: -6.389355182647705
    4. '<|end|>' → logprob: -8.014354705810547
    5. ' for' → logprob: -8.764354705810547
    6. '```' → logprob: -8.889354705810547
    7. 'return' → logprob: -9.639354705810547
    8. ')' → logprob: -9.764354705810547
    9. '   ' → logprob: -10.889354705810547
    10. '#' → logprob: -11.514354705810547

Token 617: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33528631925582886
    2. '(min' → logprob: -1.3352863788604736
    3. '(*' → logprob: -3.9602863788604736
    4. '('' → logprob: -6.5852861404418945
    5. '("' → logprob: -7.0852861404418945
    6. '(sum' → logprob: -7.9602861404418945
    7. '(
' → logprob: -9.710286140441895
    8. '()' → logprob: -10.085286140441895
    9. '(*)' → logprob: -10.585286140441895
    10. '(max' → logprob: -11.335286140441895

Token 618: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.088346359931165e-07
    2. '(min' → logprob: -14.750000953674316
    3. ' min' → logprob: -15.250000953674316
    4. '[min' → logprob: -15.500000953674316
    5. '	min' → logprob: -23.375
    6. '_min' → logprob: -23.75
    7. '.min' → logprob: -23.75
    8. 'max' → logprob: -23.75
    9. ',min' → logprob: -23.875
    10. ')' → logprob: -24.125

Token 619: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.1472419600977446e-06
    2. 'paths' → logprob: -13.750000953674316
    3. '_' → logprob: -17.250001907348633
    4. 'p' → logprob: -18.625001907348633
    5. '_path' → logprob: -18.875001907348633
    6. ' paths' → logprob: -19.875001907348633
    7. 'min' → logprob: -20.000001907348633
    8. 's' → logprob: -20.125001907348633
    9. '_dist' → logprob: -20.250001907348633
    10. 'Paths' → logprob: -20.250001907348633

Token 620: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5120287066092715e-05
    2. '())' → logprob: -10.625035285949707
    3. '()' → logprob: -11.500035285949707
    4. ' )' → logprob: -15.000035285949707
    5. ')
' → logprob: -16.37503433227539
    6. '(' → logprob: -16.37503433227539
    7. '),' → logprob: -17.37503433227539
    8. '))' → logprob: -17.62503433227539
    9. ',' → logprob: -17.75003433227539
    10. ')`' → logprob: -18.75003433227539

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018077615823131055
    2. ':' → logprob: -8.750181198120117
    3. 'start' → logprob: -12.500181198120117
    4. ':]' → logprob: -12.625181198120117
    5. '(' → logprob: -12.750181198120117
    6. ':-' → logprob: -13.000181198120117
    7. ':start' → logprob: -13.125181198120117
    8. 'range' → logprob: -13.250181198120117
    9. ':)' → logprob: -13.625181198120117
    10. ' ' → logprob: -13.625181198120117

Token 622: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009345670696347952
    2. ':],' → logprob: -7.000934600830078
    3. ':]' → logprob: -11.125934600830078
    4. ':)' → logprob: -12.000934600830078
    5. ':])
' → logprob: -13.500934600830078
    6. '])' → logprob: -14.625934600830078
    7. ')' → logprob: -15.625934600830078
    8. ':end' → logprob: -16.375934600830078
    9. ':].' → logprob: -16.625934600830078
    10. ',' → logprob: -17.000934600830078

Token 623: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.07260927557945251
    2. ')' → logprob: -2.6976091861724854
    3. 'end' → logprob: -6.1976094245910645
    4. ' sep' → logprob: -7.6976094245910645
    5. 'flush' → logprob: -9.447608947753906
    6. ' )' → logprob: -10.072608947753906
    7. ')
' → logprob: -10.697608947753906
    8. 'file' → logprob: -11.197608947753906
    9. 'se' → logprob: -11.822608947753906
    10. '```' → logprob: -12.697608947753906

Token 624: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.03830162435770035
    2. '=' → logprob: -3.288301706314087
    3. '="' → logprob: -8.288301467895508
    4. ''' → logprob: -11.913301467895508
    5. '='\' → logprob: -14.163301467895508
    6. '"' → logprob: -14.663301467895508
    7. ' ='' → logprob: -15.413301467895508
    8. '=
' → logprob: -15.538301467895508
    9. '=\' → logprob: -16.163301467895508
    10. '=''' → logprob: -16.663301467895508

Token 625: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5306333303451538
    2. ' ' → logprob: -1.2806333303451538
    3. '\n' → logprob: -2.6556334495544434
    4. 'space' → logprob: -3.6556334495544434
    5. ' )' → logprob: -4.405633449554443
    6. ''' → logprob: -4.530633449554443
    7. ' \' → logprob: -5.655633449554443
    8. '\' → logprob: -6.030633449554443
    9. '"' → logprob: -6.030633449554443
    10. ')' → logprob: -6.280633449554443

Token 626: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. '")' → logprob: -11.250014305114746
    3. ')
' → logprob: -14.625014305114746
    4. ' )' → logprob: -14.875014305114746
    5. '`)' → logprob: -16.00001335144043
    6. '')' → logprob: -16.12501335144043
    7. ')`' → logprob: -16.37501335144043
    8. '))' → logprob: -16.50001335144043
    9. ')")' → logprob: -17.62501335144043
    10. ');' → logprob: -18.50001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 624
Tokens correctement prédits (1ère position, stricte): 333
Tokens correctement prédits (1ère position, avec adaptation): 348
Tokens correctement prédits (top 10): 565
Précision stricte (1ère position): 53.37%
Précision adaptée (1ère position): 55.77%
Précision (top 10): 90.54%
================================================================================
