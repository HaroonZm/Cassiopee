================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import sub

a, b, k = map(int, input().split())

delta = reduce(sub, (a, k))
ans_t = max(delta, 0)
b = max(b - max(-delta, 0), 0)
print(*(lambda x: x)([ans_t, b]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. '`' → logprob: -8.895486831665039
    10. 'lambda' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029214249923825264
    2. '\' → logprob: -4.154214382171631
    3. 'def' → logprob: -5.029214382171631
    4. '(
' → logprob: -5.904214382171631
    5. '(lambda' → logprob: -6.529214382171631
    6. ',' → logprob: -7.529214382171631
    7. '\n' → logprob: -7.779214382171631
    8. '```' → logprob: -7.904214382171631
    9. '\(' → logprob: -8.404213905334473
    10. '`' → logprob: -9.154213905334473

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022775527089834213
    2. 'import' → logprob: -3.897775411605835
    3. ' ' → logprob: -6.522775650024414
    4. '.' → logprob: -7.397775650024414
    5. ' .' → logprob: -9.147775650024414
    6. '.import' → logprob: -10.647775650024414
    7. '	import' → logprob: -11.772775650024414
    8. '<|end|>' → logprob: -13.022775650024414
    9. '_import' → logprob: -13.397775650024414
    10. ' ' → logprob: -13.522775650024414

Token 8: ' sub' (ID: 1543)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2034524381160736
    2. ' import' → logprob: -2.5784523487091064
    3. ' ' → logprob: -2.7034523487091064
    4. ' mul' → logprob: -3.3284523487091064
    5. 'add' → logprob: -5.8284525871276855
    6. ' item' → logprob: -6.9534525871276855
    7. 'import' → logprob: -7.9534525871276855
    8. ' ad' → logprob: -8.203452110290527
    9. ' icon' → logprob: -8.453452110290527
    10. 'mul' → logprob: -8.578452110290527

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0437198132276535
    2. '\' → logprob: -3.66871976852417
    3. '(
' → logprob: -5.16871976852417
    4. '\n' → logprob: -5.16871976852417
    5. ',' → logprob: -5.91871976852417
    6. '\(' → logprob: -7.04371976852417
    7. ')' → logprob: -7.41871976852417
    8. '`' → logprob: -8.043720245361328
    9. '(

' → logprob: -8.668720245361328
    10. 'def' → logprob: -8.793720245361328

Token 10: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3817981779575348
    2. ',' → logprob: -1.7567981481552124
    3. '(lambda' → logprob: -2.256798267364502
    4. ')' → logprob: -4.881798267364502
    5. 'lambda' → logprob: -4.881798267364502
    6. '(
' → logprob: -5.256798267364502
    7. 'def' → logprob: -5.381798267364502
    8. '[' → logprob: -5.756798267364502
    9. 'a' → logprob: -6.381798267364502
    10. '#' → logprob: -6.381798267364502

Token 11: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0339515209197998
    2. ',' → logprob: -1.2839515209197998
    3. '(' → logprob: -2.0339515209198
    4. '=' → logprob: -2.1589515209198
    5. 'b' → logprob: -3.7839515209198
    6. '.' → logprob: -3.9089515209198
    7. ' =' → logprob: -4.033951759338379
    8. '_' → logprob: -4.408951759338379
    9. ' ' → logprob: -4.658951759338379
    10. 'r' → logprob: -4.908951759338379

Token 12: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.21425995230674744
    2. 'b' → logprob: -2.3392598628997803
    3. ' ' → logprob: -2.3392598628997803
    4. '_' → logprob: -10.96426010131836
    5. ' ,' → logprob: -11.71426010131836
    6. 'space' → logprob: -11.96426010131836
    7. ',b' → logprob: -12.21426010131836
    8. '_b' → logprob: -12.58926010131836
    9. ' ' → logprob: -12.71426010131836
    10. ',' → logprob: -12.96426010131836

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0068187350407242775
    2. '=' → logprob: -5.006818771362305
    3. ',' → logprob: -9.381818771362305
    4. ' ,' → logprob: -11.881818771362305
    5. '<|end|>' → logprob: -12.506818771362305
    6. ' ' → logprob: -12.631818771362305
    7. ')' → logprob: -13.631818771362305
    8. ' =
' → logprob: -13.756818771362305
    9. ' =)' → logprob: -14.006818771362305
    10. '  ' → logprob: -14.381818771362305

Token 14: ' k' (ID: 372)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06266088783740997
    2. 'c' → logprob: -2.9376609325408936
    3. ' ' → logprob: -5.8126606941223145
    4. ' =' → logprob: -5.9376606941223145
    5. '=' → logprob: -7.3126606941223145
    6. ' *' → logprob: -7.6876606941223145
    7. '*c' → logprob: -7.9376606941223145
    8. ',' → logprob: -8.312661170959473
    9. ',c' → logprob: -8.562661170959473
    10. '=c' → logprob: -10.062661170959473

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168561436235905
    2. '=' → logprob: -4.264168739318848
    3. ',' → logprob: -12.764168739318848
    4. ' ' → logprob: -14.014168739318848
    5. '  ' → logprob: -14.389168739318848
    6. ')' → logprob: -15.389168739318848
    7. ' =
' → logprob: -15.764168739318848
    8. ' ,' → logprob: -16.13916778564453
    9. '[' → logprob: -16.51416778564453
    10. '>' → logprob: -16.88916778564453

Token 16: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6864412426948547
    2. ' ' → logprob: -1.06144118309021
    3. '1' → logprob: -2.93644118309021
    4. '5' → logprob: -3.31144118309021
    5. 'map' → logprob: -3.68644118309021
    6. ' map' → logprob: -4.186441421508789
    7. '10' → logprob: -4.311441421508789
    8. '3' → logprob: -5.311441421508789
    9. '2' → logprob: -7.186441421508789
    10. ' (' → logprob: -7.811441421508789

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20321448147296906
    2. '(int' → logprob: -1.8282145261764526
    3. '(lambda' → logprob: -4.578214645385742
    4. '(str' → logprob: -4.703214645385742
    5. '<|end|>' → logprob: -6.078214645385742
    6. '(input' → logprob: -7.578214645385742
    7. 'int' → logprob: -8.953214645385742
    8. '(eval' → logprob: -9.203214645385742
    9. '(k' → logprob: -9.578214645385742
    10. '```' → logprob: -9.578214645385742

Token 18: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11818379163742065
    2. '(' → logprob: -3.2431838512420654
    3. '(input' → logprob: -3.7431838512420654
    4. ',' → logprob: -3.9931838512420654
    5. ')(' → logprob: -4.493183612823486
    6. '<|end|>' → logprob: -4.493183612823486
    7. '(token' → logprob: -6.368183612823486
    8. '```' → logprob: -7.243183612823486
    9. '<|end|>' → logprob: -7.243183612823486
    10. '),' → logprob: -7.493183612823486

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06199547275900841
    2. ' input' → logprob: -2.811995506286621
    3. ')' → logprob: -11.186995506286621
    4. '(input' → logprob: -11.561995506286621
    5. ',input' → logprob: -12.936995506286621
    6. '```' → logprob: -14.561995506286621
    7. '=input' → logprob: -14.686995506286621
    8. '	input' → logprob: -14.811995506286621
    9. '0' → logprob: -15.561995506286621
    10. ' ' → logprob: -15.561995506286621

Token 20: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1603662967681885
    2. '(' → logprob: -1.4103662967681885
    3. ')' → logprob: -1.6603662967681885
    4. '())' → logprob: -1.6603662967681885
    5. '('' → logprob: -3.5353662967681885
    6. '().' → logprob: -5.035366058349609
    7. '(()' → logprob: -5.035366058349609
    8. '(""))' → logprob: -5.410366058349609
    9. '("")' → logprob: -5.410366058349609
    10. '());' → logprob: -6.660366058349609

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020747410599142313
    2. 'strip' → logprob: -8.500207901000977
    3. ' split' → logprob: -13.000207901000977
    4. 'rstrip' → logprob: -13.625207901000977
    5. '(split' → logprob: -14.875207901000977
    6. 'spl' → logprob: -16.250207901000977
    7. 'read' → logprob: -17.000207901000977
    8. ')' → logprob: -17.625207901000977
    9. '```' → logprob: -18.500207901000977
    10. ' ' → logprob: -18.625207901000977

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016136890277266502
    2. '))' → logprob: -4.14113712310791
    3. '),' → logprob: -10.01613712310791
    4. '`)' → logprob: -11.01613712310791
    5. ')))' → logprob: -11.64113712310791
    6. '())' → logprob: -11.89113712310791
    7. ')`' → logprob: -11.89113712310791
    8. '(' → logprob: -12.26613712310791
    9. '')' → logprob: -13.01613712310791
    10. ')>' → logprob: -13.64113712310791

Token 23: 'delta' (ID: 42200)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.078505039215088
    2. 'print' → logprob: -1.203505039215088
    3. 'res' → logprob: -2.578505039215088
    4. 'numbers' → logprob: -2.578505039215088
    5. 'nums' → logprob: -2.953505039215088
    6. 'arr' → logprob: -3.328505039215088
    7. 'c' → logprob: -3.828505039215088
    8. 'lst' → logprob: -3.953505039215088
    9. 'for' → logprob: -4.078505039215088
    10. 'range' → logprob: -4.703505039215088

Token 24: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40468713641166687
    2. ' =' → logprob: -1.1546871662139893
    3. '=' → logprob: -4.15468692779541
    4. '_' → logprob: -6.40468692779541
    5. ' ' → logprob: -8.40468692779541
    6. '_s' → logprob: -10.40468692779541
    7. 'a' → logprob: -11.77968692779541
    8. ' s' → logprob: -11.77968692779541
    9. '_=' → logprob: -11.77968692779541
    10. ' _' → logprob: -12.15468692779541

Token 25: ' reduce' (ID: 10389)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8958159685134888
    2. ' b' → logprob: -2.395815849304199
    3. 'k' → logprob: -2.520815849304199
    4. 'abs' → logprob: -2.520815849304199
    5. ' k' → logprob: -2.645815849304199
    6. 'sub' → logprob: -2.770815849304199
    7. ' lambda' → logprob: -3.020815849304199
    8. 'lambda' → logprob: -3.145815849304199
    9. 'a' → logprob: -3.270815849304199
    10. ' abs' → logprob: -4.145815849304199

Token 26: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.11671438813209534
    2. '(lambda' → logprob: -2.3667144775390625
    3. '(' → logprob: -4.1167144775390625
    4. '(operator' → logprob: -10.116714477539062
    5. '(Sub' → logprob: -11.241714477539062
    6. 'sub' → logprob: -11.741714477539062
    7. '(
' → logprob: -12.241714477539062
    8. '(s' → logprob: -12.866714477539062
    9. '(substr' → logprob: -13.741714477539062
    10. ' (' → logprob: -13.741714477539062

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -10.125068664550781
    3. ',[' → logprob: -10.875068664550781
    4. ',
' → logprob: -13.250068664550781
    5. ')' → logprob: -13.375068664550781
    6. '(' → logprob: -13.750068664550781
    7. '[' → logprob: -14.375068664550781
    8. ',)' → logprob: -14.750068664550781
    9. ',(' → logprob: -14.875068664550781
    10. ',

' → logprob: -14.875068664550781

Token 28: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6508688926696777
    2. '[a' → logprob: -1.2758688926696777
    3. '[' → logprob: -2.2758688926696777
    4. '[k' → logprob: -3.6508688926696777
    5. '(range' → logprob: -3.9008688926696777
    6. 'range' → logprob: -4.025868892669678
    7. ' range' → logprob: -4.525868892669678
    8. '[b' → logprob: -5.150868892669678
    9. '[i' → logprob: -5.150868892669678
    10. ' (' → logprob: -5.650868892669678

Token 29: 'a' (ID: 64)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.878415584564209
    2. 'map' → logprob: -1.378415584564209
    3. '[i' → logprob: -1.878415584564209
    4. '[a' → logprob: -2.878415584564209
    5. 'range' → logprob: -3.753415584564209
    6. 'int' → logprob: -4.003415584564209
    7. '[k' → logprob: -4.128415584564209
    8. '[' → logprob: -4.378415584564209
    9. '(int' → logprob: -4.628415584564209
    10. 'a' → logprob: -5.128415584564209

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7601900696754456
    2. ' for' → logprob: -0.8851900696754456
    3. '**' → logprob: -3.635190010070801
    4. ' +' → logprob: -3.635190010070801
    5. ' -' → logprob: -4.635190010070801
    6. '+' → logprob: -4.635190010070801
    7. ' ' → logprob: -4.760190010070801
    8. 'for' → logprob: -4.760190010070801
    9. '-' → logprob: -4.885190010070801
    10. ' %' → logprob: -5.385190010070801

Token 31: ' k' (ID: 372)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16876690089702606
    2. 'b' → logprob: -1.9187668561935425
    3. ' k' → logprob: -5.418766975402832
    4. 'k' → logprob: -5.918766975402832
    5. ' ' → logprob: -7.543766975402832
    6. '1' → logprob: -8.043766975402832
    7. ' a' → logprob: -9.168766975402832
    8. 'a' → logprob: -9.793766975402832
    9. ')' → logprob: -10.043766975402832
    10. ' *' → logprob: -10.543766975402832

Token 32: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11681272834539413
    2. '))' → logprob: -2.2418127059936523
    3. ')' → logprob: -6.116812705993652
    4. '-' → logprob: -7.991812705993652
    5. '),' → logprob: -8.116812705993652
    6. ' ))' → logprob: -8.241812705993652
    7. ' ,' → logprob: -8.366812705993652
    8. ',b' → logprob: -8.491812705993652
    9. ' ' → logprob: -8.741812705993652
    10. '+' → logprob: -9.616812705993652

Token 33: 'ans' (ID: 616)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5160502791404724
    2. ')' → logprob: -1.0160503387451172
    3. ' ,' → logprob: -3.641050338745117
    4. ' )' → logprob: -4.516050338745117
    5. 'a' → logprob: -7.516050338745117
    6. ' -' → logprob: -7.516050338745117
    7. ' ' → logprob: -7.766050338745117
    8. '-' → logprob: -7.766050338745117
    9. '<|end|>' → logprob: -7.891050338745117
    10. ',
' → logprob: -8.016050338745117

Token 34: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43243107199668884
    2. '=' → logprob: -1.0574311017990112
    3. '_' → logprob: -6.807431221008301
    4. ',' → logprob: -6.807431221008301
    5. ' ' → logprob: -7.182431221008301
    6. ')' → logprob: -8.4324312210083
    7. '+' → logprob: -8.9324312210083
    8. ' +=' → logprob: -9.1824312210083
    9. '[' → logprob: -9.8074312210083
    10. 's' → logprob: -9.8074312210083

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37523072957992554
    2. 'o' → logprob: -2.1252307891845703
    3. 'ime' → logprob: -2.6252307891845703
    4. '=' → logprob: -3.3752307891845703
    5. 'mp' → logprob: -3.3752307891845703
    6. '_' → logprob: -4.87523078918457
    7. 'emp' → logprob: -5.00023078918457
    8. 'ext' → logprob: -5.37523078918457
    9. '_o' → logprob: -5.37523078918457
    10. 'ype' → logprob: -5.62523078918457

Token 36: ' max' (ID: 2999)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25420817732810974
    2. ' a' → logprob: -2.0042080879211426
    3. 'b' → logprob: -2.8792080879211426
    4. ' b' → logprob: -4.129208087921143
    5. ' max' → logprob: -5.629208087921143
    6. '0' → logprob: -6.004208087921143
    7. 'max' → logprob: -6.004208087921143
    8. ' delta' → logprob: -6.754208087921143
    9. 'delta' → logprob: -6.879208087921143
    10. '[a' → logprob: -6.879208087921143

Token 37: '(delta' (ID: 78789)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25349077582359314
    2. '(a' → logprob: -1.5034908056259155
    3. '((' → logprob: -7.253490924835205
    4. '(delta' → logprob: -8.128490447998047
    5. '(b' → logprob: -8.628490447998047
    6. '0' → logprob: -9.003490447998047
    7. '(abs' → logprob: -9.753490447998047
    8. '([' → logprob: -10.003490447998047
    9. '(ans' → logprob: -10.003490447998047
    10. ' (' → logprob: -11.003490447998047

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10017582774162292
    2. ')' → logprob: -2.8501758575439453
    3. ' -' → logprob: -4.100175857543945
    4. ' ,' → logprob: -4.975175857543945
    5. '0' → logprob: -5.475175857543945
    6. '(' → logprob: -6.100175857543945
    7. 'a' → logprob: -6.350175857543945
    8. '(a' → logprob: -6.350175857543945
    9. '-' → logprob: -6.725175857543945
    10. '))' → logprob: -6.975175857543945

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0381837859749794
    2. ' ' → logprob: -3.4131836891174316
    3. 'b' → logprob: -5.663183689117432
    4. ' b' → logprob: -6.913183689117432
    5. '1' → logprob: -10.91318416595459
    6. '   ' → logprob: -11.78818416595459
    7. 'a' → logprob: -11.78818416595459
    8. ')' → logprob: -12.03818416595459
    9. '-' → logprob: -12.28818416595459
    10. ' ' → logprob: -12.85068416595459

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07315089553594589
    2. 'b' → logprob: -2.698150873184204
    3. ' ' → logprob: -6.073151111602783
    4. ' b' → logprob: -7.823151111602783
    5. '1' → logprob: -8.323150634765625
    6. 'a' → logprob: -9.323150634765625
    7. '-' → logprob: -9.698150634765625
    8. '-b' → logprob: -9.698150634765625
    9. '(' → logprob: -11.635650634765625
    10. ' -' → logprob: -11.885650634765625

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027099132421426475
    2. '))' → logprob: -8.37527084350586
    3. ' )' → logprob: -11.25027084350586
    4. '-' → logprob: -11.50027084350586
    5. ')))' → logprob: -11.62527084350586
    6. ' -' → logprob: -13.00027084350586
    7. ',' → logprob: -13.37527084350586
    8. ')`' → logprob: -14.25027084350586
    9. ')
' → logprob: -14.37527084350586
    10. '-)' → logprob: -14.62527084350586

Token 42: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0661972165107727
    2. '<|end|>' → logprob: -2.816197156906128
    3. '+' → logprob: -6.441197395324707
    4. '<|end|>' → logprob: -7.316197395324707
    5. '
' → logprob: -7.441197395324707
    6. ' ' → logprob: -7.816197395324707
    7. ',' → logprob: -8.066197395324707
    8. '```' → logprob: -8.441197395324707
    9. ')
' → logprob: -8.941197395324707
    10. ' )' → logprob: -9.441197395324707

Token 43: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9593836069107056
    2. 'b' → logprob: -1.3343836069107056
    3. ' b' → logprob: -1.5843836069107056
    4. 'max' → logprob: -1.9593836069107056
    5. '0' → logprob: -5.834383487701416
    6. ' min' → logprob: -6.834383487701416
    7. 'sub' → logprob: -7.084383487701416
    8. ' ' → logprob: -7.084383487701416
    9. ' sub' → logprob: -7.084383487701416
    10. 'min' → logprob: -7.334383487701416

Token 45: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5233049392700195
    2. '(' → logprob: -0.8983049392700195
    3. ' (' → logprob: -10.39830493927002
    4. '((' → logprob: -10.39830493927002
    5. '(a' → logprob: -10.64830493927002
    6. '(sub' → logprob: -11.02330493927002
    7. '(max' → logprob: -11.02330493927002
    8. '(abs' → logprob: -11.27330493927002
    9. '(
' → logprob: -12.02330493927002
    10. 'b' → logprob: -12.14830493927002

Token 46: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4320892095565796
    2. '-' → logprob: -1.0570892095565796
    3. ',' → logprob: -5.932089328765869
    4. ')' → logprob: -7.932089328765869
    5. ' ' → logprob: -8.307088851928711
    6. ' ans' → logprob: -10.307088851928711
    7. '-k' → logprob: -11.057088851928711
    8. ' ,' → logprob: -11.307088851928711
    9. '-b' → logprob: -11.432088851928711
    10. ' ' → logprob: -11.432088851928711

Token 47: ' max' (ID: 2999)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.49696871638298035
    2. 'ans' → logprob: -0.9969687461853027
    3. ' ans' → logprob: -4.496968746185303
    4. ' k' → logprob: -4.496968746185303
    5. '(ans' → logprob: -8.996968269348145
    6. ' ' → logprob: -10.246968269348145
    7. '	ans' → logprob: -10.371968269348145
    8. 'a' → logprob: -10.496968269348145
    9. '1' → logprob: -10.496968269348145
    10. 'delta' → logprob: -10.621968269348145

Token 48: '(-' (ID: 8087)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.05351446196436882
    2. '(k' → logprob: -3.6785144805908203
    3. '(delta' → logprob: -3.9285144805908203
    4. '(' → logprob: -5.67851448059082
    5. 'ans' → logprob: -6.30351448059082
    6. '(a' → logprob: -6.67851448059082
    7. 'delta' → logprob: -7.67851448059082
    8. '0' → logprob: -10.30351448059082
    9. 'k' → logprob: -10.42851448059082
    10. '(t' → logprob: -10.55351448059082

Token 49: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.07442468404769897
    2. 'ans' → logprob: -3.3244247436523438
    3. ' delta' → logprob: -3.5744247436523438
    4. '(delta' → logprob: -5.324424743652344
    5. ' ans' → logprob: -6.324424743652344
    6. '(ans' → logprob: -7.449424743652344
    7. ' (' → logprob: -9.449424743652344
    8. ')' → logprob: -9.886924743652344
    9. 'k' → logprob: -9.949424743652344
    10. '  ' → logprob: -10.324424743652344

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012689243303611875
    2. ' ,' → logprob: -6.7512688636779785
    3. '),' → logprob: -9.626269340515137
    4. '0' → logprob: -11.001269340515137
    5. ' ' → logprob: -11.626269340515137
    6. '(),' → logprob: -12.626269340515137
    7. ')' → logprob: -13.626269340515137
    8. '  ' → logprob: -15.126269340515137
    9. 'b' → logprob: -15.251269340515137
    10. 'a' → logprob: -15.376269340515137

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7152230143547058
    2. 'k' → logprob: -0.8402230143547058
    3. ' k' → logprob: -2.8402230739593506
    4. ' ' → logprob: -4.2152228355407715
    5. ')' → logprob: -5.5902228355407715
    6. 'ans' → logprob: -6.8402228355407715
    7. ' ans' → logprob: -6.8402228355407715
    8. 'a' → logprob: -9.96522331237793
    9. '),' → logprob: -10.46522331237793
    10. '1' → logprob: -10.84022331237793

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03554047644138336
    2. 'k' → logprob: -3.5355405807495117
    3. ' ' → logprob: -5.535540580749512
    4. 'ans' → logprob: -6.785540580749512
    5. ' k' → logprob: -8.035540580749512
    6. ')' → logprob: -8.660540580749512
    7. ' ans' → logprob: -8.785540580749512
    8. 'a' → logprob: -10.910540580749512
    9. '),' → logprob: -12.035540580749512
    10. ',' → logprob: -12.848040580749512

Token 53: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.045574259012937546
    2. ',' → logprob: -3.545574188232422
    3. ')' → logprob: -4.170574188232422
    4. '))' → logprob: -8.420574188232422
    5. ' ),' → logprob: -10.920574188232422
    6. ' ,' → logprob: -12.295574188232422
    7. ')),' → logprob: -12.670574188232422
    8. ')))' → logprob: -12.795574188232422
    9. ')
' → logprob: -13.545574188232422
    10. ',),' → logprob: -13.670574188232422

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04305274412035942
    2. ' ' → logprob: -3.1680526733398438
    3. 'ans' → logprob: -10.543052673339844
    4. ' ans' → logprob: -11.043052673339844
    5. ')' → logprob: -12.043052673339844
    6. 'a' → logprob: -13.043052673339844
    7. 'b' → logprob: -14.293052673339844
    8. '  ' → logprob: -15.043052673339844
    9. ' b' → logprob: -15.168052673339844
    10. 'k' → logprob: -15.293052673339844

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00408160500228405
    2. ' ' → logprob: -5.504081726074219
    3. 'ans' → logprob: -13.629081726074219
    4. 'b' → logprob: -14.254081726074219
    5. ')' → logprob: -15.129081726074219
    6. '  ' → logprob: -15.254081726074219
    7. '1' → logprob: -15.254081726074219
    8. ' ans' → logprob: -15.754081726074219
    9. '   ' → logprob: -16.00408172607422
    10. ' ' → logprob: -16.37908172607422

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ' )' → logprob: -12.625006675720215
    3. ')
' → logprob: -12.875006675720215
    4. '))' → logprob: -14.750006675720215
    5. ')

' → logprob: -15.875006675720215
    6. ')b' → logprob: -16.25000762939453
    7. ')`' → logprob: -16.87500762939453
    8. '),' → logprob: -17.25000762939453
    9. '`)' → logprob: -17.25000762939453
    10. ')#' → logprob: -17.62500762939453

Token 57: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018813950940966606
    2. '<|end|>' → logprob: -4.0188140869140625
    3. '
' → logprob: -8.393814086914062
    4. '#' → logprob: -9.393814086914062
    5. '<|end|>' → logprob: -9.643814086914062
    6. '```' → logprob: -9.768814086914062
    7. ' ' → logprob: -10.143814086914062
    8. '=' → logprob: -10.143814086914062
    9. '\n' → logprob: -10.768814086914062
    10. ')
' → logprob: -10.893814086914062

Token 58: '(*(' (ID: 103513)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.009080483578145504
    2. '(' → logprob: -4.759080410003662
    3. '(a' → logprob: -7.884080410003662
    4. 'ans' → logprob: -9.63408088684082
    5. '(abs' → logprob: -11.25908088684082
    6. '(max' → logprob: -12.25908088684082
    7. '(ab' → logprob: -13.75908088684082
    8. '((' → logprob: -14.13408088684082
    9. ' (' → logprob: -14.25908088684082
    10. '(b' → logprob: -14.25908088684082

Token 59: 'lambda' (ID: 35280)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6462996602058411
    2. 'ans' → logprob: -0.7712996602058411
    3. '[a' → logprob: -4.396299839019775
    4. '(ans' → logprob: -7.521299839019775
    5. '[' → logprob: -8.271299362182617
    6. 'b' → logprob: -8.896299362182617
    7. ' ans' → logprob: -9.271299362182617
    8. '0' → logprob: -9.396299362182617
    9. '[b' → logprob: -10.146299362182617
    10. '(a' → logprob: -10.646299362182617

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6341618895530701
    2. ' x' → logprob: -1.5091619491577148
    3. 'a' → logprob: -2.134161949157715
    4. ' a' → logprob: -3.759161949157715
    5. 'lambda' → logprob: -4.009161949157715
    6. 'ans' → logprob: -4.134161949157715
    7. ' ans' → logprob: -4.259161949157715
    8. 'b' → logprob: -4.884161949157715
    9. ' lambda' → logprob: -5.009161949157715
    10. 'i' → logprob: -5.134161949157715

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07926297187805176
    2. ',' → logprob: -3.0792629718780518
    3. ' :' → logprob: -4.454262733459473
    4. 'x' → logprob: -4.954262733459473
    5. ' x' → logprob: -5.204262733459473
    6. ':x' → logprob: -6.954262733459473
    7. 'y' → logprob: -7.454262733459473
    8. ':[' → logprob: -7.579262733459473
    9. 's' → logprob: -7.579262733459473
    10. ' y' → logprob: -7.704262733459473

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1128212213516235
    2. '[x' → logprob: -1.3628212213516235
    3. '(x' → logprob: -1.4878212213516235
    4. '[a' → logprob: -2.987821102142334
    5. '(a' → logprob: -3.737821102142334
    6. '[' → logprob: -4.112821102142334
    7. ' (' → logprob: -4.237821102142334
    8. '[b' → logprob: -4.487821102142334
    9. 'a' → logprob: -4.737821102142334
    10. 'sorted' → logprob: -4.862821102142334

Token 63: ')(' (ID: 4898)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7350974082946777
    2. '(a' → logprob: -1.7350974082946777
    3. '(b' → logprob: -1.8600974082946777
    4. '(x' → logprob: -1.8600974082946777
    5. ')' → logprob: -2.1100974082946777
    6. '(ans' → logprob: -2.9850974082946777
    7. '(' → logprob: -3.7350974082946777
    8. '([' → logprob: -3.9850974082946777
    9. ')(' → logprob: -3.9850974082946777
    10. '[::-' → logprob: -4.110097408294678

Token 64: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.1679934561252594
    2. '(ans' → logprob: -3.0429935455322266
    3. 'ans' → logprob: -3.1679935455322266
    4. 'a' → logprob: -3.2929935455322266
    5. '(a' → logprob: -4.292993545532227
    6. '[' → logprob: -4.292993545532227
    7. '[b' → logprob: -8.792993545532227
    8. ' [' → logprob: -9.417993545532227
    9. ' ans' → logprob: -9.792993545532227
    10. ' (' → logprob: -10.917993545532227

Token 65: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003038558876141906
    2. 'a' → logprob: -6.50303840637207
    3. 'b' → logprob: -7.12803840637207
    4. ' ans' → logprob: -7.37803840637207
    5. '(ans' → logprob: -10.00303840637207
    6. '0' → logprob: -10.50303840637207
    7. '	ans' → logprob: -12.00303840637207
    8. '   ' → logprob: -12.12803840637207
    9. 'max' → logprob: -12.25303840637207
    10. ' ' → logprob: -13.12803840637207

Token 66: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.127333340875339e-06
    2. 't' → logprob: -12.625003814697266
    3. 'a' → logprob: -14.250003814697266
    4. '_' → logprob: -16.875003814697266
    5. ',' → logprob: -17.000003814697266
    6. '_a' → logprob: -17.250003814697266
    7. ' _' → logprob: -18.500003814697266
    8. '_b' → logprob: -18.625003814697266
    9. ' ' → logprob: -19.375003814697266
    10. 's' → logprob: -19.625003814697266

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019365737214684486
    2. ',b' → logprob: -4.0193657875061035
    3. ' ,' → logprob: -6.7693657875061035
    4. 'b' → logprob: -10.269365310668945
    5. ' b' → logprob: -10.769365310668945
    6. ',
' → logprob: -12.644365310668945
    7. '+' → logprob: -13.894365310668945
    8. '+b' → logprob: -14.144365310668945
    9. ',k' → logprob: -14.144365310668945
    10. ',a' → logprob: -14.269365310668945

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014363408088684
    2. ' b' → logprob: -1.7014362812042236
    3. ' ' → logprob: -10.951436042785645
    4. '   ' → logprob: -13.951436042785645
    5. '    ' → logprob: -14.076436042785645
    6. 'a' → logprob: -14.326436042785645
    7. '	b' → logprob: -14.451436042785645
    8. '  ' → logprob: -15.076436042785645
    9. ' ' → logprob: -15.201436042785645
    10. ')b' → logprob: -15.263936042785645

Token 69: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.06240769848227501
    2. '])' → logprob: -2.8124077320098877
    3. ')])' → logprob: -8.562407493591309
    4. ']' → logprob: -9.312407493591309
    5. '))' → logprob: -9.937407493591309
    6. ')]' → logprob: -10.062407493591309
    7. ']))
' → logprob: -10.437407493591309
    8. '])))' → logprob: -11.562407493591309
    9. '])]' → logprob: -11.937407493591309
    10. ')' → logprob: -12.062407493591309


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 35.82%
Précision adaptée (1ère position): 35.82%
Précision (top 10): 70.15%
================================================================================
