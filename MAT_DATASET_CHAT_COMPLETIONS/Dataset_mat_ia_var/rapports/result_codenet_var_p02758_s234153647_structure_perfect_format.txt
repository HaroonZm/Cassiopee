================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10 ** 7)
input = sys.stdin.readline
from bisect import bisect_left

N = int(input())
XD = [[int(i) for i in input().split()] for _ in range(N)]
XD.sort()
MOD = 998244353

def make():
    edge = [[] for _ in range(N)]
    parent = [-1] * N
    MAXIDX = N
    sorted_X = [X for X, _ in XD]
    for i in range(N - 1, -1, -1):
        idx = bisect_left(sorted_X, XD[i][0] + XD[i][1])
        for j in range(i + 1, min(idx, MAXIDX)):
            if parent[j] < 0:
                parent[j] = i
        if idx >= MAXIDX:
            MAXIDX = i + 1
    for i, par in enumerate(parent):
        if par < 0:
            continue
        edge[par].append(i)
    return parent, edge

parent, edge = make()

def cnt(node):
    if not edge[node]:
        return 2
    res = 1
    for v in edge[node]:
        res = (res * cnt(v)) % MOD
    res += 1
    return res % MOD

def main():
    ans = 1
    for i, par in enumerate(parent):
        if par < 0:
            ans = (ans * cnt(i)) % MOD
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.016818752512335777
    2. '_limit' → logprob: -4.266818523406982
    3. 'depth' → logprob: -6.516818523406982
    4. '_depth' → logprob: -7.391818523406982
    5. '(' → logprob: -8.26681900024414
    6. ' limit' → logprob: -9.14181900024414
    7. 'error' → logprob: -10.26681900024414
    8. '(limit' → logprob: -10.51681900024414
    9. 'lim' → logprob: -11.14181900024414
    10. '('' → logprob: -11.26681900024414

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4140441635390744e-05
    2. '(
' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.375014305114746
    5. '("("' → logprob: -15.250014305114746
    6. '((' → logprob: -15.375014305114746
    7. '('' → logprob: -15.500014305114746
    8. '(
' → logprob: -15.750014305114746
    9. '```' → logprob: -16.12501335144043
    10. '(.' → logprob: -16.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3134221136569977
    2. '100' → logprob: -1.3134220838546753
    3. '300' → logprob: -9.938422203063965
    4. '500' → logprob: -10.063422203063965
    5. ' ' → logprob: -10.688422203063965
    6. '150' → logprob: -11.063422203063965
    7. '999' → logprob: -11.188422203063965
    8. '200' → logprob: -11.563422203063965
    9. '1' → logprob: -12.938422203063965
    10. '   ' → logprob: -13.813422203063965

Token 10: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00595261761918664
    2. '9' → logprob: -5.505952835083008
    3. '6' → logprob: -6.505952835083008
    4. '8' → logprob: -7.880952835083008
    5. '```' → logprob: -17.255952835083008
    6. ' ' → logprob: -18.255952835083008
    7. '**' → logprob: -18.880952835083008
    8. '4' → logprob: -19.630952835083008
    9. '10' → logprob: -19.755952835083008
    10. '``' → logprob: -20.505952835083008

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.028117714449763298
    2. '6' → logprob: -3.7781176567077637
    3. '9' → logprob: -5.528117656707764
    4. '8' → logprob: -7.028117656707764
    5. '```' → logprob: -15.528118133544922
    6. '**' → logprob: -16.528118133544922
    7. ' ' → logprob: -17.528118133544922
    8. '5' → logprob: -17.778118133544922
    9. '}' → logprob: -18.903118133544922
    10. '``' → logprob: -19.028118133544922

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -12.250011444091797
    3. ')
' → logprob: -12.500011444091797
    4. '))' → logprob: -13.250011444091797
    5. ')
' → logprob: -15.875011444091797
    6. ')`' → logprob: -15.875011444091797
    7. '```' → logprob: -16.125011444091797
    8. ')

' → logprob: -17.000011444091797
    9. '`)' → logprob: -17.500011444091797
    10. ' ' → logprob: -17.625011444091797

Token 14: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0112468004226685
    2. 'def' → logprob: -1.1362468004226685
    3. '\' → logprob: -1.8862468004226685
    4. '(' → logprob: -3.386246681213379
    5. '' → logprob: -3.761246681213379
    6. '

' → logprob: -3.761246681213379
    7. '\n' → logprob: -3.761246681213379
    8. '
' → logprob: -3.886246681213379
    9. ')' → logprob: -4.636246681213379
    10. '```' → logprob: -4.636246681213379

Token 15: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002201047958806157
    2. '()' → logprob: -7.252201080322266
    3. '('' → logprob: -7.377201080322266
    4. '.' → logprob: -7.752201080322266
    5. ')' → logprob: -9.252201080322266
    6. '("("' → logprob: -9.752201080322266
    7. ''' → logprob: -10.002201080322266
    8. '(
' → logprob: -10.127201080322266
    9. '40' → logprob: -10.252201080322266
    10. '('.')' → logprob: -10.752201080322266

Token 16: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2514757812023163
    2. ' input' → logprob: -1.7514758110046387
    3. ' sys' → logprob: -3.5014758110046387
    4. 'sys' → logprob: -4.001475811004639
    5. ' lambda' → logprob: -9.12647533416748
    6. 'lambda' → logprob: -9.12647533416748
    7. '```' → logprob: -10.00147533416748
    8. '=input' → logprob: -10.12647533416748
    9. 'open' → logprob: -11.25147533416748
    10. '=sys' → logprob: -11.37647533416748

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0497177392244339
    2. '.' → logprob: -3.299717664718628
    3. '.readline' → logprob: -4.549717903137207
    4. '.stdout' → logprob: -7.549717903137207
    5. ' .' → logprob: -8.549717903137207
    6. '.std' → logprob: -9.299717903137207
    7. '.argv' → logprob: -9.549717903137207
    8. '.input' → logprob: -10.174717903137207
    9. '.stderr' → logprob: -10.924717903137207
    10. '.exit' → logprob: -10.924717903137207

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002879176288843155
    2. '.read' → logprob: -6.0028791427612305
    3. 'read' → logprob: -8.00287914276123
    4. '.' → logprob: -9.75287914276123
    5. '.Read' → logprob: -12.25287914276123
    6. '.readlines' → logprob: -13.00287914276123
    7. '.buffer' → logprob: -13.50287914276123
    8. 'buffer' → logprob: -13.75287914276123
    9. ' readline' → logprob: -14.62787914276123
    10. '_read' → logprob: -15.25287914276123

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6046270728111267
    2. 'def' → logprob: -1.3546271324157715
    3. '()

' → logprob: -3.2296271324157715
    4. '()
' → logprob: -3.3546271324157715
    5. '\n' → logprob: -3.4796271324157715
    6. '(' → logprob: -3.8546271324157715
    7. 'n' → logprob: -3.9796271324157715
    8. '(n' → logprob: -4.1046271324157715
    9. '
' → logprob: -4.4796271324157715
    10. '\' → logprob: -4.9796271324157715

Token 20: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5252842903137207
    2. 'def' → logprob: -0.9002842903137207
    3. '\' → logprob: -7.650284290313721
    4. '(n' → logprob: -7.775284290313721
    5. 'N' → logprob: -8.025283813476562
    6. 'd' → logprob: -8.150283813476562
    7. '\n' → logprob: -8.775283813476562
    8. 'class' → logprob: -8.775283813476562
    9. 't' → logprob: -8.900283813476562
    10. '
' → logprob: -9.775283813476562

Token 21: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.11485272645950317
    2. 'collections' → logprob: -2.8648526668548584
    3. ' math' → logprob: -2.9898526668548584
    4. 'math' → logprob: -7.1148529052734375
    5. ' typing' → logprob: -8.614852905273438
    6. ' functools' → logprob: -9.364852905273438
    7. ' itertools' → logprob: -9.864852905273438
    8. ' os' → logprob: -10.614852905273438
    9. ' sys' → logprob: -10.614852905273438
    10. ' threading' → logprob: -11.989852905273438

Token 22: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8908587662735954e-05
    2. 'e' → logprob: -11.875019073486328
    3. 'import' → logprob: -12.125019073486328
    4. 't' → logprob: -13.250019073486328
    5. 'ectl' → logprob: -13.750019073486328
    6. 'ected' → logprob: -13.875019073486328
    7. 'ector' → logprob: -14.000019073486328
    8. 'ec' → logprob: -15.125019073486328
    9. 'ection' → logprob: -15.375019073486328
    10. 'ections' → logprob: -15.375019073486328

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.007626973092556
    2. 'import' → logprob: -4.882627010345459
    3. '	import' → logprob: -11.3826265335083
    4. '_import' → logprob: -11.8826265335083
    5. ' ' → logprob: -13.3826265335083
    6. ' importar' → logprob: -15.0076265335083
    7. ' ' → logprob: -15.7576265335083
    8. ' im' → logprob: -15.8826265335083
    9. ' impor' → logprob: -16.507627487182617
    10. ' импорт' → logprob: -17.132627487182617

Token 24: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.47530028223991394
    2. 'bis' → logprob: -0.9753003120422363
    3. 'ins' → logprob: -6.850300312042236
    4. ' ins' → logprob: -8.725299835205078
    5. 'import' → logprob: -15.350299835205078
    6. 'b' → logprob: -15.600299835205078
    7. 'bl' → logprob: -15.850299835205078
    8. ' ' → logprob: -16.100299835205078
    9. '```' → logprob: -16.100299835205078
    10. 'in' → logprob: -16.850299835205078

Token 25: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.849109119386412e-06
    2. 'e' → logprob: -11.625009536743164
    3. 'ec' → logprob: -14.125009536743164
    4. 'ectl' → logprob: -17.000009536743164
    5. 'ected' → logprob: -17.625009536743164
    6. '```' → logprob: -18.750009536743164
    7. 'elect' → logprob: -18.875009536743164
    8. 'ecta' → logprob: -18.875009536743164
    9. 'ext' → logprob: -19.250009536743164
    10. 'earch' → logprob: -19.250009536743164

Token 26: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.12563084065914154
    2. '_' → logprob: -2.2506308555603027
    3. '_right' → logprob: -4.375630855560303
    4. 'left' → logprob: -10.250630378723145
    5. '```' → logprob: -10.625630378723145
    6. 'Left' → logprob: -11.125630378723145
    7. '_ins' → logprob: -11.500630378723145
    8. '_LEFT' → logprob: -12.000630378723145
    9. ')' → logprob: -12.000630378723145
    10. '(' → logprob: -12.375630378723145

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7231935858726501
    2. '

' → logprob: -0.8481935858726501
    3. 'def' → logprob: -2.723193645477295
    4. 'import' → logprob: -4.973193645477295
    5. '
' → logprob: -5.723193645477295
    6. '(' → logprob: -6.223193645477295
    7. '<|end|>' → logprob: -6.723193645477295
    8. ',' → logprob: -6.848193645477295
    9. '' → logprob: -6.848193645477295
    10. '```' → logprob: -6.973193645477295

Token 28: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7581475973129272
    2. 'def' → logprob: -0.7581475973129272
    3. 'N' → logprob: -3.133147716522217
    4. 'class' → logprob: -4.008147716522217
    5. 'a' → logprob: -7.508147716522217
    6. 'from' → logprob: -9.008147239685059
    7. 'A' → logprob: -9.258147239685059
    8. '#' → logprob: -9.383147239685059
    9. 'd' → logprob: -9.633147239685059
    10. 'Q' → logprob: -9.758147239685059

Token 29: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23379266262054443
    2. ' =' → logprob: -1.7337926626205444
    3. ' ,' → logprob: -4.108792781829834
    4. '=' → logprob: -4.608792781829834
    5. ' ' → logprob: -5.233792781829834
    6. ')' → logprob: -10.733792304992676
    7. '>' → logprob: -11.483792304992676
    8. '[' → logprob: -11.733792304992676
    9. '  ' → logprob: -11.733792304992676
    10. '=int' → logprob: -11.983792304992676

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029781386256217957
    2. 'int' → logprob: -3.5297813415527344
    3. ' ' → logprob: -10.529781341552734
    4. '[int' → logprob: -12.904781341552734
    5. '<int' → logprob: -14.404781341552734
    6. '10' → logprob: -15.279781341552734
    7. '=int' → logprob: -15.529781341552734
    8. '(int' → logprob: -16.154781341552734
    9. '	int' → logprob: -16.529781341552734
    10. ' list' → logprob: -16.654781341552734

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1002512127161026
    2. '(' → logprob: -2.3502511978149414
    3. 'input' → logprob: -10.600251197814941
    4. '('' → logprob: -11.850251197814941
    5. '(sys' → logprob: -12.100251197814941
    6. ' (' → logprob: -12.475251197814941
    7. '()' → logprob: -14.100251197814941
    8. '(
' → logprob: -14.225251197814941
    9. '(in' → logprob: -14.975251197814941
    10. '(`' → logprob: -15.350251197814941

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008683355525135994
    2. '()' → logprob: -4.758683204650879
    3. ')' → logprob: -10.633683204650879
    4. '())
' → logprob: -11.008683204650879
    5. '().' → logprob: -11.508683204650879
    6. '(' → logprob: -11.883683204650879
    7. ' ())' → logprob: -11.883683204650879
    8. '()))' → logprob: -13.258683204650879
    9. '())

' → logprob: -14.133683204650879
    10. '()
' → logprob: -14.258683204650879

Token 33: 'XD' (ID: 96737)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35712823271751404
    2. 'a' → logprob: -2.107128143310547
    3. 'data' → logprob: -2.732128143310547
    4. ' A' → logprob: -2.982128143310547
    5. 'arr' → logprob: -3.607128143310547
    6. 'lst' → logprob: -4.857128143310547
    7. 'S' → logprob: -5.107128143310547
    8. 'numbers' → logprob: -5.857128143310547
    9. ' data' → logprob: -5.982128143310547
    10. 'cards' → logprob: -5.982128143310547

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6623509526252747
    2. '[]' → logprob: -2.28735089302063
    3. 'S' → logprob: -2.91235089302063
    4. '_list' → logprob: -2.91235089302063
    5. '=[]' → logprob: -3.03735089302063
    6. ' ' → logprob: -3.16235089302063
    7. '=' → logprob: -3.28735089302063
    8. 'C' → logprob: -3.41235089302063
    9. 'E' → logprob: -3.78735089302063
    10. 'L' → logprob: -3.78735089302063

Token 35: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6918735504150391
    2. '[]' → logprob: -1.441873550415039
    3. '[int' → logprob: -1.941873550415039
    4. '[input' → logprob: -2.566873550415039
    5. '[list' → logprob: -3.316873550415039
    6. ' [' → logprob: -6.566873550415039
    7. '[x' → logprob: -6.816873550415039
    8. ' []' → logprob: -7.066873550415039
    9. '[str' → logprob: -7.566873550415039
    10. '[line' → logprob: -7.816873550415039

Token 36: 'int' (ID: 491)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6820513010025024
    2. 'int' → logprob: -0.8070513010025024
    3. '0' → logprob: -3.807051181793213
    4. 'tuple' → logprob: -4.057051181793213
    5. ']*' → logprob: -5.307051181793213
    6. ']' → logprob: -5.932051181793213
    7. 'list' → logprob: -8.057051658630371
    8. ']int' → logprob: -8.432051658630371
    9. '(int' → logprob: -8.682051658630371
    10. ' ]' → logprob: -9.432051658630371

Token 37: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0797886773943901
    2. '(' → logprob: -3.5797886848449707
    3. '(input' → logprob: -3.7047886848449707
    4. '()]' → logprob: -4.079788684844971
    5. '()' → logprob: -5.454788684844971
    6. '(i' → logprob: -6.579788684844971
    7. ']' → logprob: -8.204788208007812
    8. '(a' → logprob: -8.204788208007812
    9. '(),' → logprob: -8.329788208007812
    10. ',' → logprob: -8.829788208007812

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03846359997987747
    2. '())' → logprob: -3.288463592529297
    3. ')]' → logprob: -8.288463592529297
    4. 'input' → logprob: -10.163463592529297
    5. '),' → logprob: -10.413463592529297
    6. '()' → logprob: -10.788463592529297
    7. '))' → logprob: -11.538463592529297
    8. ')])' → logprob: -11.538463592529297
    9. '(x' → logprob: -11.663463592529297
    10. ',' → logprob: -12.163463592529297

Token 39: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1792462021112442
    2. ')' → logprob: -2.179246187210083
    3. '()]' → logprob: -4.054246425628662
    4. 'input' → logprob: -4.179246425628662
    5. '())' → logprob: -4.554246425628662
    6. '(x' → logprob: -6.304246425628662
    7. '().' → logprob: -6.554246425628662
    8. 'for' → logprob: -6.929246425628662
    9. ']' → logprob: -7.179246425628662
    10. '(' → logprob: -7.304246425628662

Token 40: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6357967853546143
    2. 'input' → logprob: -0.7607967853546143
    3. '_' → logprob: -5.885796546936035
    4. 'i' → logprob: -8.760796546936035
    5. ' _' → logprob: -9.135796546936035
    6. 'in' → logprob: -10.010796546936035
    7. '_input' → logprob: -10.260796546936035
    8. ' i' → logprob: -10.385796546936035
    9. ' in' → logprob: -11.135796546936035
    10. ' ' → logprob: -12.135796546936035

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06199580803513527
    2. 'in' → logprob: -2.8119957447052
    3. 'input' → logprob: -11.561995506286621
    4. '_' → logprob: -11.936995506286621
    5. ' ' → logprob: -12.186995506286621
    6. 'i' → logprob: -12.811995506286621
    7. ' input' → logprob: -13.311995506286621
    8. ' i' → logprob: -14.311995506286621
    9. '<|end|>' → logprob: -14.811995506286621
    10. '	in' → logprob: -15.686995506286621

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889232039451599
    2. ' input' → logprob: -2.578892230987549
    3. '(input' → logprob: -13.453892707824707
    4. ' ' → logprob: -15.203892707824707
    5. '
' → logprob: -15.828892707824707
    6. '<input' → logprob: -15.953892707824707
    7. 'in' → logprob: -16.07889175415039
    8. '=input' → logprob: -16.20389175415039
    9. '	input' → logprob: -16.32889175415039
    10. 'range' → logprob: -16.45389175415039

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.248469718324486e-05
    2. '()' → logprob: -10.750022888183594
    3. '(' → logprob: -14.625022888183594
    4. ' ().' → logprob: -15.500022888183594
    5. '()]' → logprob: -15.750022888183594
    6. '()].' → logprob: -16.000022888183594
    7. '.strip' → logprob: -17.125022888183594
    8. '.split' → logprob: -17.125022888183594
    9. '.rstrip' → logprob: -17.750022888183594
    10. '()
' → logprob: -18.125022888183594

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005647663492709398
    2. 'rstrip' → logprob: -5.755647659301758
    3. 'strip' → logprob: -6.005647659301758
    4. ' split' → logprob: -13.130647659301758
    5. '(split' → logprob: -16.880647659301758
    6. 'spl' → logprob: -17.380647659301758
    7. ' strip' → logprob: -18.130647659301758
    8. 'rs' → logprob: -18.255647659301758
    9. '.split' → logprob: -18.755647659301758
    10. 's' → logprob: -19.505647659301758

Token 45: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.038320306688547134
    2. '()' → logprob: -3.288320302963257
    3. '(' → logprob: -8.538320541381836
    4. '('' → logprob: -9.663320541381836
    5. '()],' → logprob: -11.163320541381836
    6. '()]
' → logprob: -13.163320541381836
    7. '("' → logprob: -14.163320541381836
    8. '())' → logprob: -14.538320541381836
    9. '()][' → logprob: -15.163320541381836
    10. '()].' → logprob: -15.163320541381836

Token 46: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05018427595496178
    2. ' for' → logprob: -3.1751842498779297
    3. 'for' → logprob: -5.05018424987793
    4. ' ]' → logprob: -7.42518424987793
    5. '()]' → logprob: -10.17518424987793
    6. ')]' → logprob: -10.42518424987793
    7. ',' → logprob: -10.92518424987793
    8. ')' → logprob: -11.42518424987793
    9. ' ' → logprob: -11.67518424987793
    10. ']]' → logprob: -11.92518424987793

Token 47: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2635854482650757
    2. ' range' → logprob: -1.5135854482650757
    3. 'range' → logprob: -4.513585567474365
    4. ' _' → logprob: -7.763585567474365
    5. '_range' → logprob: -8.513585090637207
    6. ' in' → logprob: -12.888585090637207
    7. '	range' → logprob: -14.763585090637207
    8. ' ' → logprob: -14.888585090637207
    9. 'in' → logprob: -15.388585090637207
    10. '(range' → logprob: -15.888585090637207

Token 48: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6343773603439331
    2. 'range' → logprob: -1.009377360343933
    3. ' in' → logprob: -2.2593774795532227
    4. ' range' → logprob: -7.134377479553223
    5. ' ' → logprob: -10.009377479553223
    6. '```' → logprob: -12.384377479553223
    7. 'N' → logprob: -12.509377479553223
    8. '  ' → logprob: -12.634377479553223
    9. ']' → logprob: -12.884377479553223
    10. '(range' → logprob: -13.134377479553223

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002338144404347986
    2. ' range' → logprob: -8.37523365020752
    3. '(range' → logprob: -13.62523365020752
    4. '[' → logprob: -14.50023365020752
    5. 'r' → logprob: -14.87523365020752
    6. 'rang' → logprob: -15.12523365020752
    7. 'ran' → logprob: -15.37523365020752
    8. '	range' → logprob: -16.125234603881836
    9. '```' → logprob: -16.375234603881836
    10. ' ' → logprob: -16.500234603881836

Token 50: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.138441237155348e-05
    2. '(' → logprob: -9.625091552734375
    3. 'N' → logprob: -10.625091552734375
    4. ' (' → logprob: -14.625091552734375
    5. '(n' → logprob: -15.375091552734375
    6. ' N' → logprob: -15.750091552734375
    7. '(
' → logprob: -17.000091552734375
    8. '(int' → logprob: -18.625091552734375
    9. '	N' → logprob: -18.625091552734375
    10. ' ' → logprob: -19.125091552734375

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00047833603457547724
    2. ')' → logprob: -8.125478744506836
    3. ']' → logprob: -8.625478744506836
    4. '])' → logprob: -13.750478744506836
    5. ')])' → logprob: -14.500478744506836
    6. ')],' → logprob: -14.875478744506836
    7. '])]' → logprob: -14.875478744506836
    8. '))' → logprob: -15.750478744506836
    9. ')]
' → logprob: -16.125478744506836
    10. ')}' → logprob: -16.750478744506836

Token 52: 'XD' (ID: 96737)
  Prédit: 'XD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.07634824514389038
    2. 'DP' → logprob: -3.701348304748535
    3. 'dp' → logprob: -4.201348304748535
    4. 'sorted' → logprob: -4.576348304748535
    5. 'D' → logprob: -4.951348304748535
    6. 'X' → logprob: -5.701348304748535
    7. 'dist' → logprob: -6.451348304748535
    8. 'def' → logprob: -7.076348304748535
    9. 'd' → logprob: -7.201348304748535
    10. 'from' → logprob: -7.326348304748535

Token 53: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5781695246696472
    2. '[' → logprob: -1.828169584274292
    3. '<|end|>' → logprob: -1.828169584274292
    4. '
' → logprob: -2.703169584274292
    5. '.' → logprob: -3.703169584274292
    6. ')' → logprob: -4.703169345855713
    7. '<|end|>' → logprob: -5.828169345855713
    8. ',' → logprob: -5.953169345855713
    9. '\n' → logprob: -6.703169345855713
    10. '#' → logprob: -6.703169345855713

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04027177765965462
    2. '(key' → logprob: -3.290271759033203
    3. '(' → logprob: -6.165271759033203
    4. '((' → logprob: -10.165271759033203
    5. 'key' → logprob: -10.540271759033203
    6. '(reverse' → logprob: -11.040271759033203
    7. '()]' → logprob: -11.165271759033203
    8. ' ()' → logprob: -12.040271759033203
    9. '(()' → logprob: -12.540271759033203
    10. '(lambda' → logprob: -12.540271759033203

Token 55: 'MOD' (ID: 52135)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08046360313892365
    2. 'dist' → logprob: -3.3304636478424072
    3. 'D' → logprob: -5.080463409423828
    4. 'd' → logprob: -5.205463409423828
    5. 'max' → logprob: -5.580463409423828
    6. 'from' → logprob: -5.705463409423828
    7. 'ans' → logprob: -5.705463409423828
    8. 'distance' → logprob: -5.955463409423828
    9. 'x' → logprob: -6.080463409423828
    10. 'DP' → logprob: -6.205463409423828

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195541977882385
    2. '=' → logprob: -1.5019553899765015
    3. ' ' → logprob: -11.126955032348633
    4. ' =
' → logprob: -12.876955032348633
    5. ' =)' → logprob: -13.001955032348633
    6. ',' → logprob: -13.501955032348633
    7. '_' → logprob: -13.626955032348633
    8. '<|end|>' → logprob: -13.751955032348633
    9. ')' → logprob: -14.501955032348633
    10. ' ==' → logprob: -15.126955032348633

Token 57: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0030961965676397085
    2. '100' → logprob: -6.003096103668213
    3. ' ' → logprob: -7.503096103668213
    4. '998' → logprob: -10.128096580505371
    5. '1' → logprob: -10.503096580505371
    6. '(' → logprob: -14.253096580505371
    7. 'pow' → logprob: -15.628096580505371
    8. '2' → logprob: -15.753096580505371
    9. '109' → logprob: -16.003095626831055
    10. '123' → logprob: -16.253095626831055

Token 58: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06352546066045761
    2. '100' → logprob: -3.313525438308716
    3. '998' → logprob: -3.688525438308716
    4. '1' → logprob: -9.188525199890137
    5. '(' → logprob: -10.313525199890137
    6. ' ' → logprob: -12.313525199890137
    7. '123' → logprob: -12.938525199890137
    8. '999' → logprob: -13.438525199890137
    9. 'pow' → logprob: -13.438525199890137
    10. '987' → logprob: -13.813525199890137

Token 59: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -6.749814019713085e-06
    2. '247' → logprob: -13.000006675720215
    3. '```' → logprob: -13.625006675720215
    4. '243' → logprob: -13.750006675720215
    5. '_' → logprob: -14.250006675720215
    6. '254' → logprob: -15.000006675720215
    7. '2' → logprob: -15.750006675720215
    8. '245' → logprob: -15.875006675720215
    9. '24' → logprob: -16.12500762939453
    10. ''' → logprob: -16.25000762939453

Token 60: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.2542395293712616
    2. '853' → logprob: -1.504239559173584
    3. '857' → logprob: -6.129239559173584
    4. '53' → logprob: -10.004239082336426
    5. '257' → logprob: -10.379239082336426
    6. '253' → logprob: -10.879239082336426
    7. '457' → logprob: -11.254239082336426
    8. '953' → logprob: -12.129239082336426
    9. '553' → logprob: -12.504239082336426
    10. '357' → logprob: -12.629239082336426

Token 61: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07103661447763443
    2. '
' → logprob: -2.9460365772247314
    3. 'DP' → logprob: -5.0710368156433105
    4. 'dist' → logprob: -6.0710368156433105
    5. '

' → logprob: -6.5710368156433105
    6. ' 
' → logprob: -6.6960368156433105
    7. ' dp' → logprob: -6.9460368156433105
    8. '
' → logprob: -7.4460368156433105
    9. '' → logprob: -7.9460368156433105
    10. 'd' → logprob: -7.9460368156433105

Token 62: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007990339770913124
    2. 'dist' → logprob: -5.75799036026001
    3. 'DP' → logprob: -6.50799036026001
    4. 'ans' → logprob: -7.13299036026001
    5. 'fact' → logprob: -7.25799036026001
    6. 'from' → logprob: -8.132989883422852
    7. 'D' → logprob: -8.257989883422852
    8. 'pow' → logprob: -8.632989883422852
    9. 'def' → logprob: -8.882989883422852
    10. 'INF' → logprob: -9.132989883422852

Token 63: ' make' (ID: 1520)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.7427669167518616
    2. ' main' → logprob: -1.8677668571472168
    3. ' dp' → logprob: -2.242766857147217
    4. ' solve' → logprob: -2.617766857147217
    5. ' ' → logprob: -2.742766857147217
    6. ' count' → logprob: -2.992766857147217
    7. ' factorial' → logprob: -3.617766857147217
    8. ' pow' → logprob: -3.867766857147217
    9. ' comb' → logprob: -5.117766857147217
    10. ' f' → logprob: -5.242766857147217

Token 64: '():
' (ID: 8595)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.48361706733703613
    2. '_factor' → logprob: -1.3586170673370361
    3. '_array' → logprob: -3.608617067337036
    4. '_comb' → logprob: -4.108616828918457
    5. '_' → logprob: -4.233616828918457
    6. '_arr' → logprob: -4.983616828918457
    7. '_fact' → logprob: -5.233616828918457
    8. '_table' → logprob: -5.358616828918457
    9. '_subset' → logprob: -5.358616828918457
    10. '_list' → logprob: -5.483616828918457

Token 65: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5680342316627502
    2. 'dp' → logprob: -1.5680341720581055
    3. '   ' → logprob: -2.3180341720581055
    4. ' pass' → logprob: -2.8180341720581055
    5. '    ' → logprob: -3.5680341720581055
    6. 'DP' → logprob: -4.5680341720581055
    7. ' DP' → logprob: -4.6930341720581055
    8. 'pass' → logprob: -5.4430341720581055
    9. '<|end|>' → logprob: -5.5680341720581055
    10. ' ' → logprob: -6.3180341720581055

Token 66: ' edge' (ID: 11165)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4979115426540375
    2. ' pass' → logprob: -1.7479115724563599
    3. 'dp' → logprob: -1.9979115724563599
    4. ' stack' → logprob: -4.49791145324707
    5. 'pass' → logprob: -4.74791145324707
    6. ' d' → logprob: -4.74791145324707
    7. ' n' → logprob: -4.74791145324707
    8. ' prev' → logprob: -5.37291145324707
    9. ' max' → logprob: -5.74791145324707
    10. ' x' → logprob: -5.87291145324707

Token 67: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003408263437449932
    2. ' =' → logprob: -8.500340461730957
    3. '[]' → logprob: -10.250340461730957
    4. '=' → logprob: -10.500340461730957
    5. '_list' → logprob: -10.500340461730957
    6. '=[]' → logprob: -10.625340461730957
    7. '[' → logprob: -12.625340461730957
    8. '_s' → logprob: -13.000340461730957
    9. ' s' → logprob: -13.125340461730957
    10. '[s' → logprob: -13.125340461730957

Token 68: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17257192730903625
    2. ' []' → logprob: -1.9225718975067139
    3. '{}' → logprob: -5.172572135925293
    4. '[' → logprob: -5.797572135925293
    5. ' [[]' → logprob: -6.547572135925293
    6. ' defaultdict' → logprob: -7.047572135925293
    7. ' {}' → logprob: -7.547572135925293
    8. 'default' → logprob: -8.672572135925293
    9. ' [' → logprob: -9.172572135925293
    10. 'set' → logprob: -9.297572135925293

Token 69: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49931806325912476
    2. 'for' → logprob: -0.9993180632591248
    3. ']' → logprob: -3.7493181228637695
    4. ')' → logprob: -7.2493181228637695
    5. ',' → logprob: -8.12431812286377
    6. '()' → logprob: -8.62431812286377
    7. ' ]' → logprob: -9.87431812286377
    8. '   ' → logprob: -9.87431812286377
    9. '	for' → logprob: -10.99931812286377
    10. ' ' → logprob: -11.37431812286377

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.422840416431427
    2. ' range' → logprob: -1.1728403568267822
    3. 'range' → logprob: -3.4228403568267822
    4. ' _' → logprob: -6.672840595245361
    5. ' in' → logprob: -6.922840595245361
    6. '_range' → logprob: -8.297840118408203
    7. 'in' → logprob: -8.547840118408203
    8. '(range' → logprob: -11.797840118408203
    9. ' ' → logprob: -12.172840118408203
    10. '_in' → logprob: -13.922840118408203

Token 71: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07646089792251587
    2. 'in' → logprob: -2.701460838317871
    3. ' range' → logprob: -5.201460838317871
    4. ' in' → logprob: -7.076460838317871
    5. '(range' → logprob: -8.951460838317871
    6. '	range' → logprob: -12.201460838317871
    7. ' xrange' → logprob: -12.451460838317871
    8. '_range' → logprob: -12.951460838317871
    9. '(N' → logprob: -13.451460838317871
    10. 'N' → logprob: -13.826460838317871

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.100211963057518
    2. ' range' → logprob: -2.3502118587493896
    3. '(range' → logprob: -12.975212097167969
    4. ' ' → logprob: -13.475212097167969
    5. '	range' → logprob: -14.350212097167969
    6. '   ' → logprob: -15.600212097167969
    7. ' xrange' → logprob: -15.725212097167969
    8. 'r' → logprob: -15.725212097167969
    9. '  ' → logprob: -15.850212097167969
    10. 'rang' → logprob: -15.975212097167969

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003851517685689032
    2. 'N' → logprob: -8.000385284423828
    3. '(' → logprob: -10.000385284423828
    4. ')(' → logprob: -13.750385284423828
    5. '](' → logprob: -13.875385284423828
    6. ')' → logprob: -14.250385284423828
    7. ' (' → logprob: -14.500385284423828
    8. '(n' → logprob: -15.000385284423828
    9. '[N' → logprob: -15.625385284423828
    10. '((' → logprob: -15.750385284423828

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.125210297293961e-05
    2. ')' → logprob: -10.625081062316895
    3. ')]
' → logprob: -10.750081062316895
    4. ' )' → logprob: -11.000081062316895
    5. ']' → logprob: -11.125081062316895
    6. '+' → logprob: -13.875081062316895
    7. ' ]' → logprob: -14.250081062316895
    8. ')]
' → logprob: -14.250081062316895
    9. ')]

' → logprob: -14.625081062316895
    10. '   ' → logprob: -15.500081062316895

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20543311536312103
    2. ' for' → logprob: -1.8304331302642822
    3. 'for' → logprob: -4.080432891845703
    4. '<|end|>' → logprob: -4.955432891845703
    5. '
' → logprob: -7.455432891845703
    6. ' ' → logprob: -8.080432891845703
    7. '    
' → logprob: -8.705432891845703
    8. '  ' → logprob: -10.080432891845703
    9. '	for' → logprob: -10.205432891845703
    10. '<|end|>' → logprob: -10.205432891845703

Token 76: ' parent' (ID: 5980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004236174281686544
    2. ' for' → logprob: -6.004236221313477
    3. 'dist' → logprob: -6.754236221313477
    4. 'd' → logprob: -8.754236221313477
    5. 'D' → logprob: -8.879236221313477
    6. 'distance' → logprob: -9.629236221313477
    7. '   ' → logprob: -10.004236221313477
    8. 'x' → logprob: -10.254236221313477
    9. 'dp' → logprob: -10.379236221313477
    10. 'stack' → logprob: -10.754236221313477

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03819962218403816
    2. '=' → logprob: -3.2881996631622314
    3. ',' → logprob: -9.288199424743652
    4. '[' → logprob: -10.038199424743652
    5. ']' → logprob: -11.913199424743652
    6. ' ' → logprob: -12.038199424743652
    7. 's' → logprob: -13.038199424743652
    8. ')' → logprob: -13.538199424743652
    9. ' ,' → logprob: -13.663199424743652
    10. ' =[' → logprob: -13.913199424743652

Token 78: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10201998800039291
    2. ' [-' → logprob: -2.727020025253296
    3. '[' → logprob: -4.102019786834717
    4. ' [' → logprob: -4.227019786834717
    5. '[N' → logprob: -7.852019786834717
    6. '[n' → logprob: -10.352020263671875
    7. '[node' → logprob: -12.227020263671875
    8. '   ' → logprob: -12.477020263671875
    9. '[i' → logprob: -12.852020263671875
    10. '[len' → logprob: -13.477020263671875

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. '2' → logprob: -11.500012397766113
    3. ' ' → logprob: -14.125012397766113
    4. '-' → logprob: -14.750012397766113
    5. '10' → logprob: -16.250011444091797
    6. 'i' → logprob: -16.687511444091797
    7. '   ' → logprob: -16.812511444091797
    8. 'sys' → logprob: -17.000011444091797
    9. '１' → logprob: -17.000011444091797
    10. ' -' → logprob: -17.437511444091797

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1930907517671585
    2. ' for' → logprob: -1.818090796470642
    3. 'for' → logprob: -4.818090915679932
    4. ' ]' → logprob: -5.568090915679932
    5. ']*' → logprob: -6.693090915679932
    6. ')' → logprob: -10.068090438842773
    7. ']*(' → logprob: -10.818090438842773
    8. '   ' → logprob: -11.568090438842773
    9. ',' → logprob: -11.693090438842773
    10. '1' → logprob: -11.818090438842773

Token 81: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16976583003997803
    2. 'for' → logprob: -2.0447659492492676
    3. '
' → logprob: -3.6697659492492676
    4. ']' → logprob: -7.919765949249268
    5. '	for' → logprob: -8.04476547241211
    6. '
' → logprob: -8.54476547241211
    7. '' → logprob: -9.41976547241211
    8. '+' → logprob: -10.04476547241211
    9. ' ' → logprob: -10.16976547241211
    10. ')' → logprob: -10.41976547241211

Token 82: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.438573680294212e-06
    2. ' N' → logprob: -12.625005722045898
    3. '(N' → logprob: -13.125005722045898
    4. '(' → logprob: -15.875005722045898
    5. '   ' → logprob: -18.1250057220459
    6. ' (' → logprob: -19.2500057220459
    7. '	N' → logprob: -19.8750057220459
    8. ' ' → logprob: -20.8750057220459
    9. 'Ｎ' → logprob: -20.8750057220459
    10. 'n' → logprob: -21.8750057220459

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05243316665291786
    2. '   ' → logprob: -3.1774332523345947
    3. '<|end|>' → logprob: -5.677433013916016
    4. '    
' → logprob: -6.177433013916016
    5. ' for' → logprob: -6.802433013916016
    6. 'for' → logprob: -7.052433013916016
    7. '
' → logprob: -7.677433013916016
    8. '  
' → logprob: -7.677433013916016
    9. ' 
' → logprob: -8.302433013916016
    10. 'def' → logprob: -8.552433013916016

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005243002902716398
    2. ' for' → logprob: -6.380242824554443
    3. '<|end|>' → logprob: -6.880242824554443
    4. 'for' → logprob: -7.380242824554443
    5. '    
' → logprob: -7.630242824554443
    6. 'stack' → logprob: -7.755242824554443
    7. 'def' → logprob: -8.255243301391602
    8. ' stack' → logprob: -8.755243301391602
    9. '
' → logprob: -8.755243301391602
    10. '    ' → logprob: -9.255243301391602

Token 85: ' MAX' (ID: 16960)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5378884673118591
    2. 'stack' → logprob: -1.037888526916504
    3. 'dist' → logprob: -3.412888526916504
    4. 'depth' → logprob: -4.412888526916504
    5. ' for' → logprob: -5.037888526916504
    6. ' stack' → logprob: -6.287888526916504
    7. 'distance' → logprob: -7.037888526916504
    8. 'd' → logprob: -7.037888526916504
    9. 'from' → logprob: -7.162888526916504
    10. 'import' → logprob: -7.412888526916504

Token 86: 'IDX' (ID: 107492)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4635019600391388
    2. '=' → logprob: -1.2135019302368164
    3. 'D' → logprob: -4.088501930236816
    4. 'LOG' → logprob: -4.588501930236816
    5. 'N' → logprob: -4.963501930236816
    6. '_LOG' → logprob: -4.963501930236816
    7. 'dist' → logprob: -5.213501930236816
    8. '_DEPTH' → logprob: -5.213501930236816
    9. '_DIST' → logprob: -5.713501930236816
    10. 'd' → logprob: -5.838501930236816

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22551575303077698
    2. '=' → logprob: -1.6005157232284546
    3. ',' → logprob: -10.225515365600586
    4. ' ' → logprob: -10.600515365600586
    5. ']' → logprob: -11.225515365600586
    6. '   ' → logprob: -11.475515365600586
    7. ')' → logprob: -12.100515365600586
    8. '[' → logprob: -12.600515365600586
    9. '  ' → logprob: -12.725515365600586
    10. '=int' → logprob: -14.100515365600586

Token 88: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13309650123119354
    2. '10' → logprob: -3.38309645652771
    3. '20' → logprob: -3.63309645652771
    4. '0' → logprob: -3.75809645652771
    5. '40' → logprob: -4.383096694946289
    6. '100' → logprob: -5.008096694946289
    7. 'float' → logprob: -6.133096694946289
    8. '1' → logprob: -6.383096694946289
    9. '2' → logprob: -6.383096694946289
    10. '30' → logprob: -6.383096694946289

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16650721430778503
    2. '-' → logprob: -3.2915072441101074
    3. '   ' → logprob: -3.4165072441101074
    4. '+' → logprob: -3.7915072441101074
    5. '    
' → logprob: -3.9165072441101074
    6. ' -' → logprob: -5.041507244110107
    7. ' 
' → logprob: -5.291507244110107
    8. 'def' → logprob: -5.291507244110107
    9. '  
' → logprob: -5.416507244110107
    10. '*' → logprob: -5.916507244110107

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7400622963905334
    2. '<|end|>' → logprob: -1.1150622367858887
    3. '
' → logprob: -1.8650622367858887
    4. '    
' → logprob: -4.615062236785889
    5. ' ' → logprob: -4.865062236785889
    6. ' for' → logprob: -5.240062236785889
    7. 'def' → logprob: -5.990062236785889
    8. ')' → logprob: -6.115062236785889
    9. '    ' → logprob: -6.115062236785889
    10. ' 
' → logprob: -6.365062236785889

Token 91: ' sorted' (ID: 20099)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2939395308494568
    2. 'for' → logprob: -1.5439395904541016
    3. '   ' → logprob: -3.6689395904541016
    4. 'stack' → logprob: -4.793939590454102
    5. ' stack' → logprob: -5.293939590454102
    6. '
' → logprob: -7.918939590454102
    7. 'def' → logprob: -8.293939590454102
    8. ' ' → logprob: -8.543939590454102
    9. 'distance' → logprob: -8.668939590454102
    10. ')' → logprob: -8.918939590454102

Token 92: '_X' (ID: 16245)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.8656885623931885
    2. '_idx' → logprob: -1.7406885623931885
    3. '_edges' → logprob: -2.3656885623931885
    4. '_idxs' → logprob: -2.8656885623931885
    5. '_indices' → logprob: -3.3656885623931885
    6. ' =' → logprob: -3.4906885623931885
    7. 'XD' → logprob: -3.4906885623931885
    8. '_x' → logprob: -3.7406885623931885
    9. 'idx' → logprob: -4.240688323974609
    10. 'X' → logprob: -4.365688323974609

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3672161102294922
    2. 'D' → logprob: -1.6172161102294922
    3. '=' → logprob: -2.242216110229492
    4. '=[]' → logprob: -7.367216110229492
    5. '=D' → logprob: -7.617216110229492
    6. 's' → logprob: -7.867216110229492
    7. ',' → logprob: -8.367216110229492
    8. '<|end|>' → logprob: -9.367216110229492
    9. 'indices' → logprob: -9.742216110229492
    10. '_indices' → logprob: -9.742216110229492

Token 94: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01926986500620842
    2. '[X' → logprob: -4.644269943237305
    3. 'sorted' → logprob: -5.269269943237305
    4. ' [' → logprob: -5.894269943237305
    5. '[]' → logprob: -7.894269943237305
    6. '[D' → logprob: -8.394269943237305
    7. '[list' → logprob: -8.394269943237305
    8. '[x' → logprob: -8.894269943237305
    9. '[s' → logprob: -9.144269943237305
    10. 'XD' → logprob: -9.144269943237305

Token 95: 'X' (ID: 55)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2622600495815277
    2. 'XD' → logprob: -1.63726007938385
    3. 'xd' → logprob: -3.6372599601745605
    4. 'i' → logprob: -5.0122599601745605
    5. '(x' → logprob: -7.2622599601745605
    6. 'd' → logprob: -7.8872599601745605
    7. 'X' → logprob: -8.387260437011719
    8. '0' → logprob: -8.512260437011719
    9. 'xi' → logprob: -8.512260437011719
    10. 'pos' → logprob: -8.637260437011719

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31196120381355286
    2. 'D' → logprob: -1.6869611740112305
    3. 'for' → logprob: -3.1869611740112305
    4. '[' → logprob: -3.1869611740112305
    5. 'd' → logprob: -9.68696117401123
    6. '
' → logprob: -9.81196117401123
    7. '[D' → logprob: -10.18696117401123
    8. ']' → logprob: -10.31196117401123
    9. '	for' → logprob: -10.43696117401123
    10. ' D' → logprob: -10.68696117401123

Token 97: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35366177558898926
    2. 'X' → logprob: -1.4786617755889893
    3. 'XD' → logprob: -2.8536617755889893
    4. ' x' → logprob: -5.47866153717041
    5. '_,' → logprob: -5.97866153717041
    6. 'i' → logprob: -6.60366153717041
    7. 'xd' → logprob: -7.35366153717041
    8. '_' → logprob: -7.47866153717041
    9. ' XD' → logprob: -7.47866153717041
    10. ',' → logprob: -7.60366153717041

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08476981520652771
    2. ',D' → logprob: -2.5847697257995605
    3. ',_' → logprob: -5.2097697257995605
    4. 'D' → logprob: -7.8347697257995605
    5. ' ,' → logprob: -13.584770202636719
    6. '_,' → logprob: -14.084770202636719
    7. ',d' → logprob: -14.584770202636719
    8. ' in' → logprob: -14.709770202636719
    9. ',Y' → logprob: -15.584770202636719
    10. ',
' → logprob: -15.584770202636719

Token 99: ' _' (ID: 1175)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.31923797726631165
    2. '_' → logprob: -1.3192379474639893
    3. '_D' → logprob: -5.319238185882568
    4. ' D' → logprob: -7.069238185882568
    5. ' _' → logprob: -8.56923770904541
    6. '_d' → logprob: -11.31923770904541
    7. 'Y' → logprob: -12.81923770904541
    8. '_,' → logprob: -13.44423770904541
    9. 'd' → logprob: -14.06923770904541
    10. '_=' → logprob: -14.19423770904541

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889782637357712
    2. 'in' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.078897476196289
    4. ',' → logprob: -14.703897476196289
    5. ']' → logprob: -14.703897476196289
    6. 'In' → logprob: -15.453897476196289
    7. 'd' → logprob: -15.578897476196289
    8. '  ' → logprob: -15.578897476196289
    9. 's' → logprob: -15.828897476196289
    10. 'ind' → logprob: -16.45389747619629

Token 101: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.0019288709154352546
    2. ' XD' → logprob: -6.251928806304932
    3. 'Xd' → logprob: -16.251928329467773
    4. 'X' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.001928329467773
    6. 'xd' → logprob: -18.751928329467773
    7. 'QD' → logprob: -19.751928329467773
    8. 'XT' → logprob: -20.251928329467773
    9. 'XF' → logprob: -20.376928329467773
    10. 'XC' → logprob: -20.626928329467773

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012843120843172073
    2. ']
' → logprob: -4.387843132019043
    3. ' ]' → logprob: -8.262843132019043
    4. ']

' → logprob: -9.762843132019043
    5. '   ' → logprob: -12.637843132019043
    6. ' ]
' → logprob: -12.887843132019043
    7. 'def' → logprob: -12.887843132019043
    8. '[' → logprob: -13.512843132019043
    9. ']
' → logprob: -13.512843132019043
    10. '()]' → logprob: -13.887843132019043

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05904987454414368
    2. '<|end|>' → logprob: -3.8090498447418213
    3. ' for' → logprob: -4.3090500831604
    4. 'for' → logprob: -4.4340500831604
    5. '    
' → logprob: -6.4340500831604
    6. 'max' → logprob: -7.0590500831604
    7. '    ' → logprob: -7.0590500831604
    8. ',' → logprob: -7.0590500831604
    9. '
' → logprob: -7.3090500831604
    10. '  ' → logprob: -7.4340500831604

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6397069692611694
    2. '   ' → logprob: -1.3897069692611694
    3. 'for' (adapté à ' for') → logprob: -1.6397069692611694
    4. 'Y' → logprob: -3.764707088470459
    5. 'def' → logprob: -6.639707088470459
    6. 'y' → logprob: -6.639707088470459
    7. ' Y' → logprob: -6.764707088470459
    8. 'D' → logprob: -8.1397066116333
    9. ' sorted' → logprob: -8.6397066116333
    10. 'max' → logprob: -8.6397066116333

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02991791069507599
    2. 'i' → logprob: -3.5299179553985596
    3. ' idx' → logprob: -9.52991771697998
    4. ' u' → logprob: -11.02991771697998
    5. ' j' → logprob: -11.15491771697998
    6. ' ' → logprob: -11.27991771697998
    7. 'idx' → logprob: -11.52991771697998
    8. ' v' → logprob: -12.02991771697998
    9. ' x' → logprob: -12.27991771697998
    10. '_i' → logprob: -12.40491771697998

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06246929243206978
    2. 'in' → logprob: -2.812469244003296
    3. ' ' → logprob: -8.312469482421875
    4. ',' → logprob: -8.562469482421875
    5. 'range' → logprob: -10.812469482421875
    6. 'n' → logprob: -11.062469482421875
    7. '   ' → logprob: -11.437469482421875
    8. '  ' → logprob: -12.562469482421875
    9. 'd' → logprob: -12.812469482421875
    10. '```' → logprob: -13.437469482421875

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048593729734420776
    2. 'range' → logprob: -3.048593759536743
    3. ' ' → logprob: -12.673593521118164
    4. '   ' → logprob: -13.923593521118164
    5. '  ' → logprob: -13.923593521118164
    6. '(range' → logprob: -14.673593521118164
    7. '	range' → logprob: -14.673593521118164
    8. ' xrange' → logprob: -15.673593521118164
    9. '    ' → logprob: -16.548593521118164
    10. '```' → logprob: -16.923593521118164

Token 108: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08901406079530716
    2. '(' → logprob: -2.4640140533447266
    3. '(n' → logprob: -10.589014053344727
    4. '(len' → logprob: -11.089014053344727
    5. '(M' → logprob: -11.839014053344727
    6. '(MAX' → logprob: -11.964014053344727
    7. ' (' → logprob: -12.089014053344727
    8. '(NUM' → logprob: -12.839014053344727
    9. 'N' → logprob: -13.089014053344727
    10. '1' → logprob: -13.089014053344727

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47959110140800476
    2. ' -' → logprob: -0.9795911312103271
    3. '):
' → logprob: -5.354590892791748
    4. '):' → logprob: -7.354590892791748
    5. '   ' → logprob: -9.854591369628906
    6. ' ' → logprob: -10.104591369628906
    7. ' ):
' → logprob: -11.229591369628906
    8. ')' → logprob: -11.854591369628906
    9. '1' → logprob: -12.104591369628906
    10. ' ):' → logprob: -12.479591369628906

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02056197077035904
    2. ' ' → logprob: -3.895561933517456
    3. '2' → logprob: -10.895562171936035
    4. '   ' → logprob: -14.520562171936035
    5. '3' → logprob: -15.395562171936035
    6. '-' → logprob: -15.645562171936035
    7. '  ' → logprob: -15.708062171936035
    8. '１' → logprob: -16.52056121826172
    9. '```' → logprob: -16.64556121826172
    10. '0' → logprob: -17.08306121826172

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.633853652398102e-05
    2. ' ' → logprob: -10.000056266784668
    3. '2' → logprob: -11.500056266784668
    4. '   ' → logprob: -15.562556266784668
    5. '-' → logprob: -15.937556266784668
    6. '3' → logprob: -17.062557220458984
    7. '

' → logprob: -17.062557220458984
    8. '```' → logprob: -17.125057220458984
    9. '
' → logprob: -17.500057220458984
    10. '  ' → logprob: -17.500057220458984

Token 112: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3172304928302765
    2. '):
' → logprob: -1.317230463027954
    3. ' ):' → logprob: -5.817230701446533
    4. ' ):
' → logprob: -7.442230701446533
    5. ')' → logprob: -8.567230224609375
    6. ':' → logprob: -8.942230224609375
    7. '):
' → logprob: -10.067230224609375
    8. '   ' → logprob: -11.567230224609375
    9. ',' → logprob: -11.567230224609375
    10. ' :' → logprob: -12.192230224609375

Token 113: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27794021368026733
    2. ' -' → logprob: -1.652940273284912
    3. '0' → logprob: -3.152940273284912
    4. ' ' → logprob: -4.777940273284912
    5. '   ' → logprob: -10.527939796447754
    6. '  ' → logprob: -13.277939796447754
    7. '1' → logprob: -13.277939796447754
    8. '    ' → logprob: -15.027939796447754
    9. '-i' → logprob: -15.027939796447754
    10. ',' → logprob: -15.402939796447754

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '2' → logprob: -14.000008583068848
    4. '   ' → logprob: -14.875008583068848
    5. '-' → logprob: -15.687508583068848
    6. ' -' → logprob: -15.812508583068848
    7. '```' → logprob: -16.06250762939453
    8. '0' → logprob: -16.56250762939453
    9. '
' → logprob: -16.87500762939453
    10. 'i' → logprob: -16.93750762939453

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015147916972637177
    2. '-' → logprob: -4.265147686004639
    3. ' -' → logprob: -7.515147686004639
    4. '1' → logprob: -8.515148162841797
    5. ' ,' → logprob: -9.015148162841797
    6. ',-' → logprob: -9.140148162841797
    7. '-,' → logprob: -13.140148162841797
    8. '):' → logprob: -13.515148162841797
    9. ' ,-' → logprob: -13.640148162841797
    10. ',
' → logprob: -13.640148162841797

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20145785808563232
    2. ' -' → logprob: -1.7014578580856323
    3. '0' → logprob: -10.576457977294922
    4. ' ' → logprob: -11.201457977294922
    5. '   ' → logprob: -13.076457977294922
    6. '1' → logprob: -13.326457977294922
    7. ')' → logprob: -14.201457977294922
    8. '  ' → logprob: -14.701457977294922
    9. '```' → logprob: -15.326457977294922
    10. '-i' → logprob: -15.951457977294922

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. ' ' → logprob: -10.00004768371582
    3. '2' → logprob: -13.75004768371582
    4. '   ' → logprob: -14.37504768371582
    5. ')' → logprob: -15.75004768371582
    6. '```' → logprob: -16.00004768371582
    7. '0' → logprob: -16.18754768371582
    8. '
' → logprob: -16.37504768371582
    9. '):
' → logprob: -17.06254768371582
    10. '  ' → logprob: -17.31254768371582

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4292393624782562
    2. '):
' → logprob: -1.0542393922805786
    3. ':' → logprob: -8.429239273071289
    4. ' ):' → logprob: -9.304239273071289
    5. ')' → logprob: -9.429239273071289
    6. '):
' → logprob: -9.679239273071289
    7. ' ):
' → logprob: -9.804239273071289
    8. '   ' → logprob: -11.679239273071289
    9. '1' → logprob: -11.929239273071289
    10. ' :' → logprob: -12.304239273071289

Token 119: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3173238933086395
    2. '       ' → logprob: -1.692323923110962
    3. '   ' → logprob: -2.817323923110962
    4. ',' → logprob: -4.692323684692383
    5. ':
' → logprob: -4.817323684692383
    6. ' ' → logprob: -5.692323684692383
    7. '    ' → logprob: -6.067323684692383
    8. '<|end|>' → logprob: -6.692323684692383
    9. ' :' → logprob: -7.317323684692383
    10. '):' → logprob: -7.442323684692383

Token 120: ' idx' (ID: 14016)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6379701495170593
    2. ' x' → logprob: -1.012970209121704
    3. '   ' → logprob: -3.012970209121704
    4. 'idx' (adapté à ' idx') → logprob: -4.387969970703125
    5. ' idx' → logprob: -4.887969970703125
    6. '       ' → logprob: -5.012969970703125
    7. ' pos' → logprob: -5.137969970703125
    8. ' j' → logprob: -5.262969970703125
    9. 'pos' → logprob: -5.387969970703125
    10. 'j' → logprob: -5.387969970703125

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687410950660706
    2. ' =' → logprob: -1.1368740797042847
    3. ')' → logprob: -13.386874198913574
    4. ' ' → logprob: -14.386874198913574
    5. ',' → logprob: -15.011874198913574
    6. ']' → logprob: -15.261874198913574
    7. '=b' → logprob: -16.386873245239258
    8. '>' → logprob: -16.511873245239258
    9. ' ' → logprob: -16.761873245239258
    10. '＝' → logprob: -16.886873245239258

Token 122: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.006717974785715342
    2. ' bis' → logprob: -5.006718158721924
    3. 'binary' → logprob: -14.881717681884766
    4. 'N' → logprob: -15.006717681884766
    5. 'max' → logprob: -15.006717681884766
    6. 'b' → logprob: -15.131717681884766
    7. 'MAX' → logprob: -15.256717681884766
    8. ' ' → logprob: -15.506717681884766
    9. '   ' → logprob: -15.631717681884766
    10. 'i' → logprob: -16.006717681884766

Token 123: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6974017024040222
    2. 'ect' → logprob: -0.6974017024040222
    3. '_left' → logprob: -5.697401523590088
    4. 'sect' → logprob: -7.572401523590088
    5. 't' → logprob: -9.197402000427246
    6. 'pt' → logprob: -10.072402000427246
    7. '```' → logprob: -10.197402000427246
    8. 'left' → logprob: -10.322402000427246
    9. '_ct' → logprob: -10.447402000427246
    10. 'pect' → logprob: -10.697402000427246

Token 124: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.173704271830502e-06
    2. '_right' → logprob: -12.87500286102295
    3. 'left' → logprob: -15.25000286102295
    4. '_LEFT' → logprob: -16.000003814697266
    5. '_le' → logprob: -16.750003814697266
    6. '_' → logprob: -17.125003814697266
    7. '_low' → logprob: -17.875003814697266
    8. '_Left' → logprob: -18.000003814697266
    9. '_lower' → logprob: -18.375003814697266
    10. 'Left' → logprob: -18.875003814697266

Token 125: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -6.704273118884885e-07
    2. 'sorted' → logprob: -14.500000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(sort' → logprob: -18.75
    5. '(edge' → logprob: -19.0
    6. ' (' → logprob: -19.25
    7. '(s' → logprob: -19.75
    8. ' sorted' → logprob: -19.75
    9. '(saved' → logprob: -20.375
    10. '(
' → logprob: -20.625

Token 126: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -3.7697225252486533e-06
    2. 'X' → logprob: -13.250003814697266
    3. ')' → logprob: -13.875003814697266
    4. '(X' → logprob: -14.875003814697266
    5. '```' → logprob: -15.250003814697266
    6. '(_' → logprob: -16.250003814697266
    7. '(sorted' → logprob: -16.625003814697266
    8. ')_' → logprob: -17.000003814697266
    9. '(' → logprob: -17.250003814697266
    10. '[X' → logprob: -17.375003814697266

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06306300312280655
    2. '(X' → logprob: -3.063062906265259
    3. '(' → logprob: -5.313063144683838
    4. '([' → logprob: -5.438063144683838
    5. ',X' → logprob: -6.438063144683838
    6. ' ,' → logprob: -6.813063144683838
    7. ',[' → logprob: -7.063063144683838
    8. ',(' → logprob: -7.688063144683838
    9. '(sorted' → logprob: -7.688063144683838
    10. ' (' → logprob: -8.31306266784668

Token 128: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.01971750147640705
    2. ' XD' → logprob: -4.019717693328857
    3. 'X' → logprob: -7.644717693328857
    4. 'sorted' → logprob: -7.894717693328857
    5. '(X' → logprob: -8.2697172164917
    6. ')' → logprob: -8.7697172164917
    7. 'Xd' → logprob: -9.0197172164917
    8. '0' → logprob: -9.7697172164917
    9. ' ' → logprob: -10.5197172164917
    10. ' sorted' → logprob: -10.8947172164917

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001564586127642542
    2. '[N' → logprob: -9.37515640258789
    3. '[' → logprob: -9.62515640258789
    4. ')' → logprob: -13.25015640258789
    5. '[D' → logprob: -14.50015640258789
    6. '[idx' → logprob: -14.62515640258789
    7. '[I' → logprob: -14.62515640258789
    8. '```' → logprob: -14.75015640258789
    9. '[min' → logprob: -15.00015640258789
    10. '[max' → logprob: -15.37515640258789

Token 130: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0701279416680336
    2. '[' → logprob: -2.6951279640197754
    3. '][' → logprob: -8.695127487182617
    4. 'i' → logprob: -11.820127487182617
    5. '0' → logprob: -12.195127487182617
    6. '[j' → logprob: -13.195127487182617
    7. ']' → logprob: -13.445127487182617
    8. ' [' → logprob: -13.570127487182617
    9. '[N' → logprob: -14.445127487182617
    10. '[I' → logprob: -14.445127487182617

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.333223139634356e-05
    2. '1' → logprob: -11.125033378601074
    3. ' ' → logprob: -12.062533378601074
    4. '   ' → logprob: -12.687533378601074
    5. 'i' → logprob: -13.500033378601074
    6. 'X' → logprob: -14.250033378601074
    7. '[' → logprob: -14.250033378601074
    8. ']' → logprob: -14.250033378601074
    9. '
' → logprob: -14.312533378601074
    10. '```' → logprob: -14.625033378601074

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.576995313167572
    2. '])' → logprob: -0.951995313167572
    3. ']+' → logprob: -3.326995372772217
    4. '+' → logprob: -5.326995372772217
    5. ')' → logprob: -5.701995372772217
    6. ']-' → logprob: -5.701995372772217
    7. '],' → logprob: -6.326995372772217
    8. '-' → logprob: -7.451995372772217
    9. '[' → logprob: -7.576995372772217
    10. '])
' → logprob: -7.951995372772217

Token 133: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2539470195770264
    2. '+' → logprob: -1.2539470195770264
    3. ' +' → logprob: -1.6289470195770264
    4. ' -' → logprob: -1.8789470195770264
    5. '-' → logprob: -2.6289470195770264
    6. ',' → logprob: -5.7539472579956055
    7. '+i' → logprob: -6.2539472579956055
    8. ' )' → logprob: -6.6289472579956055
    9. ')
' → logprob: -7.6289472579956055
    10. '[i' → logprob: -8.253947257995605

Token 134: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.029572049155831337
    2. '1' → logprob: -4.279572010040283
    3. ' XD' → logprob: -4.654572010040283
    4. 'D' → logprob: -6.279572010040283
    5. '2' → logprob: -7.154572010040283
    6. ' ' → logprob: -7.154572010040283
    7. '10' → logprob: -7.654572010040283
    8. '5' → logprob: -8.154572486877441
    9. '3' → logprob: -8.654572486877441
    10. 'X' → logprob: -8.654572486877441

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.500011444091797
    3. '[I' → logprob: -14.500011444091797
    4. '```' → logprob: -15.500011444091797
    5. '[D' → logprob: -15.750011444091797
    6. '[idx' → logprob: -16.375011444091797
    7. 'i' → logprob: -17.375011444091797
    8. '[j' → logprob: -17.625011444091797
    9. ' [' → logprob: -17.625011444091797
    10. ')[' → logprob: -17.625011444091797

Token 136: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0722162052989006
    2. '][' → logprob: -2.697216272354126
    3. '[' → logprob: -6.447216033935547
    4. 'i' → logprob: -7.447216033935547
    5. '1' → logprob: -10.697216033935547
    6. ' ][' → logprob: -11.322216033935547
    7. '```' → logprob: -11.572216033935547
    8. '"][' → logprob: -11.822216033935547
    9. '   ' → logprob: -11.947216033935547
    10. '2' → logprob: -12.572216033935547

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004366294015198946
    2. 'i' → logprob: -8.000436782836914
    3. '2' → logprob: -9.500436782836914
    4. '-' → logprob: -12.375436782836914
    5. ' ' → logprob: -12.375436782836914
    6. '```' → logprob: -12.750436782836914
    7. '(i' → logprob: -12.875436782836914
    8. '0' → logprob: -13.250436782836914
    9. ' i' → logprob: -13.625436782836914
    10. '[i' → logprob: -13.750436782836914

Token 138: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023724300786852837
    2. ')
' → logprob: -3.898724317550659
    3. ',' → logprob: -6.64872407913208
    4. ' )' → logprob: -6.77372407913208
    5. '   ' → logprob: -8.523724555969238
    6. '))' → logprob: -8.523724555969238
    7. '[i' → logprob: -9.523724555969238
    8. ' )
' → logprob: -9.898724555969238
    9. ')`' → logprob: -10.023724555969238
    10. '])' → logprob: -11.148724555969238

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010363764129579067
    2. ' if' → logprob: -5.385363578796387
    3. '
' → logprob: -6.135363578796387
    4. ')' → logprob: -6.135363578796387
    5. ')
' → logprob: -7.260363578796387
    6. '   ' → logprob: -8.135363578796387
    7. 'if' → logprob: -8.385363578796387
    8. ' ' → logprob: -10.510363578796387
    9. '        
' → logprob: -10.760363578796387
    10. ' for' → logprob: -10.885363578796387

Token 140: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.600382387638092
    2. ' if' → logprob: -0.850382387638092
    3. '       ' → logprob: -4.600382328033447
    4. '   ' → logprob: -5.975382328033447
    5. ' for' → logprob: -6.100382328033447
    6. 'for' (adapté à ' for') → logprob: -6.100382328033447
    7. ' edge' → logprob: -6.225382328033447
    8. 'parent' → logprob: -6.350382328033447
    9. ' parent' → logprob: -6.475382328033447
    10. 'edge' → logprob: -6.600382328033447

Token 141: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07021651417016983
    2. 'j' → logprob: -2.695216417312622
    3. ' k' → logprob: -9.445216178894043
    4. 'k' → logprob: -10.195216178894043
    5. ' nxt' → logprob: -10.445216178894043
    6. ' v' → logprob: -10.695216178894043
    7. ' x' → logprob: -11.320216178894043
    8. '	j' → logprob: -11.820216178894043
    9. 'x' → logprob: -11.882716178894043
    10. '_j' → logprob: -11.945216178894043

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10030198842287064
    2. 'in' → logprob: -2.35030198097229
    3. ' ' → logprob: -9.975301742553711
    4. 'range' → logprob: -10.975301742553711
    5. '   ' → logprob: -11.725301742553711
    6. ')' → logprob: -11.975301742553711
    7. '	in' → logprob: -12.100301742553711
    8. '  ' → logprob: -12.975301742553711
    9. '    ' → logprob: -13.225301742553711
    10. ',' → logprob: -13.350301742553711

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25195613503456116
    2. ' range' → logprob: -1.5019561052322388
    3. 'edge' → logprob: -11.25195598602295
    4. '	range' → logprob: -12.62695598602295
    5. '(range' → logprob: -12.75195598602295
    6. ' ' → logprob: -13.00195598602295
    7. ' edge' → logprob: -13.25195598602295
    8. '   ' → logprob: -13.37695598602295
    9. '[' → logprob: -14.25195598602295
    10. '  ' → logprob: -15.12695598602295

Token 144: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007930849678814411
    2. '(idx' → logprob: -5.382930755615234
    3. 'i' → logprob: -5.882930755615234
    4. 'idx' → logprob: -8.007930755615234
    5. '   ' → logprob: -9.632930755615234
    6. '(' → logprob: -10.007930755615234
    7. ' (' → logprob: -10.132930755615234
    8. ' i' → logprob: -11.632930755615234
    9. '(max' → logprob: -11.632930755615234
    10. '(j' → logprob: -12.632930755615234

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.632736086845398
    2. '+' → logprob: -0.757736086845398
    3. ',' → logprob: -9.257736206054688
    4. ' ,' → logprob: -10.757736206054688
    5. '   ' → logprob: -11.382736206054688
    6. ' ' → logprob: -13.507736206054688
    7. ' -' → logprob: -13.632736206054688
    8. '+i' → logprob: -13.882736206054688
    9. '-' → logprob: -14.007736206054688
    10. ')' → logprob: -14.507736206054688

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013305948814377189
    2. ' ' → logprob: -6.626330375671387
    3. '   ' → logprob: -12.626330375671387
    4. '0' → logprob: -15.001330375671387
    5. ',' → logprob: -15.126330375671387
    6. '```' → logprob: -16.126331329345703
    7. '  ' → logprob: -16.251331329345703
    8. '    ' → logprob: -16.251331329345703
    9. '       ' → logprob: -16.376331329345703
    10. '2' → logprob: -17.001331329345703

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.550411151489243e-05
    2. ' ' → logprob: -9.875055313110352
    3. '2' → logprob: -13.250055313110352
    4. '0' → logprob: -14.125055313110352
    5. '   ' → logprob: -14.750055313110352
    6. '
' → logprob: -15.250055313110352
    7. 'idx' → logprob: -15.875055313110352
    8. 'j' → logprob: -16.12505531311035
    9. 'N' → logprob: -16.37505531311035
    10. 'i' → logprob: -16.37505531311035

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004702822305262089
    2. ' ,' → logprob: -5.379703044891357
    3. ',j' → logprob: -10.6297025680542
    4. 'idx' → logprob: -11.0047025680542
    5. ',index' → logprob: -11.0047025680542
    6. ',N' → logprob: -12.1297025680542
    7. ',len' → logprob: -12.3797025680542
    8. ' idx' → logprob: -12.3797025680542
    9. ',n' → logprob: -12.8797025680542
    10. '   ' → logprob: -13.2547025680542

Token 149: ' min' (ID: 1349)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0029055625200271606
    2. ' idx' → logprob: -5.877905368804932
    3. 'min' → logprob: -9.75290584564209
    4. ' min' → logprob: -10.75290584564209
    5. 'max' → logprob: -11.37790584564209
    6. 'MAX' → logprob: -12.37790584564209
    7. '   ' → logprob: -13.50290584564209
    8. 'MIN' → logprob: -13.75290584564209
    9. 'IDX' → logprob: -14.37790584564209
    10. ' max' → logprob: -14.75290584564209

Token 150: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.20886385440826416
    2. '(MAX' → logprob: -1.8338638544082642
    3. '(' → logprob: -3.5838637351989746
    4. '(N' → logprob: -8.458864212036133
    5. '(max' → logprob: -8.583864212036133
    6. '(M' → logprob: -8.833864212036133
    7. ' (' → logprob: -8.958864212036133
    8. '(len' → logprob: -9.583864212036133
    9. '(Max' → logprob: -9.833864212036133
    10. '(i' → logprob: -10.208864212036133

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.175423264503479
    2. '):' → logprob: -1.425423264503479
    3. '(' → logprob: -1.800423264503479
    4. '()' → logprob: -1.925423264503479
    5. '(),' → logprob: -3.4254231452941895
    6. '(N' → logprob: -3.8004231452941895
    7. '(i' → logprob: -4.0504231452941895
    8. ')):' → logprob: -4.0504231452941895
    9. '):
' → logprob: -4.4254231452941895
    10. '():' → logprob: -4.8004231452941895

Token 152: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.03392898663878441
    2. 'N' → logprob: -3.408928871154785
    3. '   ' → logprob: -9.033928871154785
    4. ' MAX' → logprob: -9.283928871154785
    5. 'max' → logprob: -10.033928871154785
    6. 'i' → logprob: -11.158928871154785
    7. ' N' → logprob: -12.033928871154785
    8. 'MIN' → logprob: -12.783928871154785
    9. 'Max' → logprob: -13.908928871154785
    10. '       ' → logprob: -14.408928871154785

Token 153: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.0011782010551542044
    2. 'idx' → logprob: -6.75117826461792
    3. ')' → logprob: -12.251177787780762
    4. 'INDEX' → logprob: -14.126177787780762
    5. '_IDX' → logprob: -14.126177787780762
    6. ' IDX' → logprob: -14.251177787780762
    7. '))' → logprob: -14.876177787780762
    8. '   ' → logprob: -15.126177787780762
    9. '(idx' → logprob: -15.876177787780762
    10. '	idx' → logprob: -16.001178741455078

Token 154: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6123355031013489
    2. ')):' → logprob: -1.362335443496704
    3. '):
' → logprob: -2.237335443496704
    4. ')):
' → logprob: -2.362335443496704
    5. '))' → logprob: -7.862335681915283
    6. ')' → logprob: -8.112335205078125
    7. ')):
' → logprob: -9.362335205078125
    8. ']):' → logprob: -10.362335205078125
    9. ' ):' → logprob: -10.737335205078125
    10. ' ' → logprob: -11.362335205078125

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1367368847131729
    2. ' if' → logprob: -2.8867368698120117
    3. ':' → logprob: -3.6367368698120117
    4. ':
' → logprob: -3.8867368698120117
    5. '       ' → logprob: -4.386736869812012
    6. '):
' → logprob: -5.261736869812012
    7. 'if' → logprob: -6.011736869812012
    8. ',' → logprob: -6.761736869812012
    9. '):' → logprob: -6.761736869812012
    10. ' edge' → logprob: -7.011736869812012

Token 156: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5059905052185059
    2. 'if' (adapté à ' if') → logprob: -1.3809905052185059
    3. ' edge' → logprob: -2.630990505218506
    4. 'edge' → logprob: -3.005990505218506
    5. '           ' → logprob: -4.005990505218506
    6. '   ' → logprob: -5.755990505218506
    7. '       ' → logprob: -7.380990505218506
    8. ' x' → logprob: -7.505990505218506
    9. 'x' → logprob: -8.005990982055664
    10. '               ' → logprob: -8.130990982055664

Token 157: ' parent' (ID: 5980)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.07420754432678223
    2. ' XD' → logprob: -2.6992075443267822
    3. '           ' → logprob: -6.199207305908203
    4. 'abs' → logprob: -7.324207305908203
    5. 'sorted' → logprob: -8.074207305908203
    6. '               ' → logprob: -8.324207305908203
    7. 'X' → logprob: -8.324207305908203
    8. '   ' → logprob: -8.449207305908203
    9. ' abs' → logprob: -9.824207305908203
    10. 'Xd' → logprob: -9.949207305908203

Token 158: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015157493180595338
    2. '[' → logprob: -8.875151634216309
    3. '[i' → logprob: -11.750151634216309
    4. ' [' → logprob: -13.875151634216309
    5. '][' → logprob: -14.000151634216309
    6. '[js' → logprob: -14.500151634216309
    7. '[parent' → logprob: -14.500151634216309
    8. '[
' → logprob: -15.875151634216309
    9. '```' → logprob: -15.875151634216309
    10. ']' → logprob: -15.875151634216309

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25321587920188904
    2. ']==' → logprob: -1.5032159090042114
    3. '==' → logprob: -7.253215789794922
    4. ' ==' → logprob: -8.503215789794922
    5. ' ]' → logprob: -8.628215789794922
    6. '==-' → logprob: -9.753215789794922
    7. '[' → logprob: -9.878215789794922
    8. ']!=' → logprob: -10.003215789794922
    9. '[j' → logprob: -10.753215789794922
    10. ']<' → logprob: -11.878215789794922

Token 160: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20346498489379883
    2. '==' → logprob: -1.7034649848937988
    3. '==-' → logprob: -6.703464984893799
    4. ']==' → logprob: -8.32846450805664
    5. '<' → logprob: -8.57846450805664
    6. ' !=' → logprob: -9.20346450805664
    7. ' <' → logprob: -9.20346450805664
    8. ' ' → logprob: -9.45346450805664
    9. '!=' → logprob: -9.82846450805664
    10. ')' → logprob: -11.07846450805664

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013143636286258698
    2. 'i' → logprob: -4.388143539428711
    3. ' ' → logprob: -7.763143539428711
    4. ' i' → logprob: -8.513143539428711
    5. '   ' → logprob: -13.138143539428711
    6. '>' → logprob: -13.513143539428711
    7. 'j' → logprob: -13.763143539428711
    8. '```' → logprob: -14.263143539428711
    9. '  ' → logprob: -14.513143539428711
    10. '	i' → logprob: -14.638143539428711

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048766765743494034
    2. 'i' → logprob: -3.048766851425171
    3. ' ' → logprob: -8.79876708984375
    4. ' i' → logprob: -10.54876708984375
    5. 'j' → logprob: -14.29876708984375
    6. '   ' → logprob: -15.17376708984375
    7. '  ' → logprob: -15.17376708984375
    8. '>' → logprob: -15.54876708984375
    9. 'idx' → logprob: -15.67376708984375
    10. '	i' → logprob: -15.67376708984375

Token 163: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01700464077293873
    2. ':
' → logprob: -4.767004489898682
    3. '               ' → logprob: -5.767004489898682
    4. ':' → logprob: -5.767004489898682
    5. 'and' → logprob: -7.017004489898682
    6. ' or' → logprob: -7.267004489898682
    7. '           ' → logprob: -8.26700496673584
    8. ' :
' → logprob: -9.26700496673584
    9. ' :' → logprob: -9.89200496673584
    10. ' ' → logprob: -11.14200496673584

Token 164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001755383680574596
    2. ' parent' → logprob: -7.001755237579346
    3. 'parent' → logprob: -7.251755237579346
    4. ' and' → logprob: -10.376755714416504
    5. '[parent' → logprob: -10.626755714416504
    6. '<|end|>' → logprob: -10.751755714416504
    7. ',parent' → logprob: -11.126755714416504
    8. '           ' → logprob: -11.251755714416504
    9. '```' → logprob: -11.751755714416504
    10. '(parent' → logprob: -12.501755714416504

Token 165: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.11470797657966614
    2. ' parent' → logprob: -2.2397079467773438
    3. '                   ' → logprob: -6.739707946777344
    4. '               ' → logprob: -7.364707946777344
    5. '[parent' → logprob: -10.989707946777344
    6. ',parent' → logprob: -11.239707946777344
    7. '	parent' → logprob: -11.364707946777344
    8. '           ' → logprob: -11.489707946777344
    9. '(parent' → logprob: -12.614707946777344
    10. '   ' → logprob: -12.739707946777344

Token 166: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -11.625020027160645
    3. '][' → logprob: -12.250020027160645
    4. '[i' → logprob: -13.000020027160645
    5. '[
' → logprob: -14.250020027160645
    6. '[js' → logprob: -14.625020027160645
    7. '```' → logprob: -14.625020027160645
    8. ' [' → logprob: -14.750020027160645
    9. 'j' → logprob: -15.500020027160645
    10. '=j' → logprob: -15.625020027160645

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023113114293664694
    2. ']=' → logprob: -6.3773112297058105
    3. ' =' → logprob: -7.8773112297058105
    4. '=' → logprob: -8.502311706542969
    5. ' ]' → logprob: -11.502311706542969
    6. ')' → logprob: -11.627311706542969
    7. ']==' → logprob: -13.252311706542969
    8. '=i' → logprob: -13.877311706542969
    9. '[' → logprob: -14.002311706542969
    10. 'j' → logprob: -14.377311706542969

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '=i' → logprob: -15.798587799072266
    4. '＝' → logprob: -16.548587799072266
    5. ']=' → logprob: -17.048587799072266
    6. ',' → logprob: -17.298587799072266
    7. '=j' → logprob: -17.798587799072266
    8. '.=' → logprob: -17.923587799072266
    9. ')=' → logprob: -18.048587799072266
    10. ' ' → logprob: -18.173587799072266

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.505351095460355e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -17.00007438659668
    4. '   ' → logprob: -17.87507438659668
    5. 'idx' → logprob: -20.00007438659668
    6. '[i' → logprob: -20.12507438659668
    7. '<|end|>' → logprob: -20.12507438659668
    8. ' ' → logprob: -20.62507438659668
    9. '{i' → logprob: -20.62507438659668
    10. ')i' → logprob: -21.12507438659668

Token 170: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012068667449057102
    2. '<|end|>' → logprob: -4.887068748474121
    3. '           ' → logprob: -6.262068748474121
    4. '
' → logprob: -7.012068748474121
    5. 'edge' → logprob: -7.637068748474121
    6. '       ' → logprob: -8.387068748474121
    7. ',' → logprob: -8.762068748474121
    8. ')' → logprob: -9.262068748474121
    9. '<|end|>' → logprob: -9.262068748474121
    10. '                   ' → logprob: -9.387068748474121

Token 171: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03840658813714981
    2. '           ' → logprob: -3.4134066104888916
    3. '<|end|>' → logprob: -5.7884063720703125
    4. '       ' → logprob: -7.1634063720703125
    5. 'edge' → logprob: -8.538406372070312
    6. ')' → logprob: -9.038406372070312
    7. '
' → logprob: -9.288406372070312
    8. '   ' → logprob: -9.413406372070312
    9. '                   ' → logprob: -9.538406372070312
    10. ' edge' → logprob: -9.663406372070312

Token 172: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3184643983840942
    2. '   ' → logprob: -1.5684643983840942
    3. '<|end|>' → logprob: -1.9434643983840942
    4. 'return' → logprob: -2.4434642791748047
    5. 'MAX' → logprob: -2.8184642791748047
    6. 'if' (adapté à ' if') → logprob: -2.8184642791748047
    7. ' if' → logprob: -2.9434642791748047
    8. '           ' → logprob: -3.1934642791748047
    9. 'max' → logprob: -3.6934642791748047
    10. ')' → logprob: -4.068464279174805

Token 173: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4454309642314911
    2. 'idx' → logprob: -1.1954309940338135
    3. ' parent' → logprob: -4.070430755615234
    4. 'parent' → logprob: -4.445430755615234
    5. ' MAX' → logprob: -4.695430755615234
    6. 'MAX' → logprob: -4.820430755615234
    7. ' i' → logprob: -6.570430755615234
    8. ' XD' → logprob: -6.570430755615234
    9. ' max' → logprob: -6.695430755615234
    10. 'max' → logprob: -6.820430755615234

Token 174: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5065402984619141
    2. ' >' → logprob: -1.131540298461914
    3. ' <' → logprob: -3.131540298461914
    4. '<' → logprob: -3.506540298461914
    5. ' ' → logprob: -7.256540298461914
    6. ' <=' → logprob: -8.756540298461914
    7. '<=' → logprob: -9.131540298461914
    8. '   ' → logprob: -9.381540298461914
    9. '=' → logprob: -10.256540298461914
    10. '==' → logprob: -10.631540298461914

Token 175: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.028218543156981468
    2. 'N' → logprob: -3.9032185077667236
    3. '0' → logprob: -4.903218746185303
    4. 'max' → logprob: -9.528218269348145
    5. ' MAX' → logprob: -9.903218269348145
    6. 'i' → logprob: -9.903218269348145
    7. 'len' → logprob: -10.653218269348145
    8. '1' → logprob: -11.403218269348145
    9. ' ' → logprob: -11.653218269348145
    10. 'Max' → logprob: -12.278218269348145

Token 176: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -1.0280383548888494e-06
    2. 'idx' → logprob: -14.000000953674316
    3. ' IDX' → logprob: -16.000001907348633
    4. 'ID' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '_IDX' → logprob: -21.500001907348633
    7. 'MAX' → logprob: -21.625001907348633
    8. 'X' → logprob: -21.750001907348633
    9. '  ' → logprob: -21.875001907348633
    10. 'INDEX' → logprob: -22.125001907348633

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16046732664108276
    2. ':
' → logprob: -1.9104673862457275
    3. ' and' → logprob: -9.660467147827148
    4. '       ' → logprob: -10.035467147827148
    5. ')' → logprob: -10.660467147827148
    6. '):
' → logprob: -10.910467147827148
    7. '):' → logprob: -11.035467147827148
    8. '   ' → logprob: -11.285467147827148
    9. '=' → logprob: -11.410467147827148
    10. '           ' → logprob: -11.410467147827148

Token 178: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06989675015211105
    2. '           ' → logprob: -2.819896697998047
    3. 'MAX' → logprob: -5.319896697998047
    4. '   ' → logprob: -5.944896697998047
    5. ' MAX' → logprob: -8.069896697998047
    6. '
' → logprob: -10.444896697998047
    7. '               ' → logprob: -11.444896697998047
    8. '	   ' → logprob: -12.069896697998047
    9. '_MAX' → logprob: -12.319896697998047
    10. ' for' → logprob: -13.069896697998047

Token 179: ' MAX' (ID: 16960)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6200084090232849
    2. '           ' → logprob: -2.1200084686279297
    3. '       ' → logprob: -2.3700084686279297
    4. 'MAX' (adapté à ' MAX') → logprob: -2.6200084686279297
    5. ' MAX' → logprob: -2.6200084686279297
    6. 'break' → logprob: -3.2450084686279297
    7. ' parent' → logprob: -3.4950084686279297
    8. '   ' → logprob: -4.87000846862793
    9. ' return' → logprob: -5.12000846862793
    10. 'parent' → logprob: -5.37000846862793

Token 180: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -2.176947600673884e-05
    2. 'idx' → logprob: -10.750021934509277
    3. 'INDEX' → logprob: -15.625021934509277
    4. ' IDX' → logprob: -17.00002098083496
    5. '_IDX' → logprob: -17.12502098083496
    6. '=' → logprob: -17.75002098083496
    7. 'IND' → logprob: -19.75002098083496
    8. 'ID' → logprob: -20.50002098083496
    9. '   ' → logprob: -20.50002098083496
    10. '	idx' → logprob: -21.62502098083496

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519317865371704
    2. ' =' → logprob: -1.5019317865371704
    3. '-=' → logprob: -13.626932144165039
    4. '+=' → logprob: -14.251932144165039
    5. ' -=' → logprob: -14.876932144165039
    6. ' +=' → logprob: -16.37693214416504
    7. '   ' → logprob: -16.37693214416504
    8. '=max' → logprob: -16.37693214416504
    9. '＝' → logprob: -16.50193214416504
    10. '=int' → logprob: -16.50193214416504

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033121041487902403
    2. 'idx' → logprob: -5.878312110900879
    3. ' i' → logprob: -8.003312110900879
    4. 'N' → logprob: -8.753312110900879
    5. 'bis' → logprob: -12.628312110900879
    6. ' idx' → logprob: -12.878312110900879
    7. '   ' → logprob: -13.003312110900879
    8. 'min' → logprob: -13.003312110900879
    9. 'IDX' → logprob: -13.878312110900879
    10. 'max' → logprob: -14.128312110900879

Token 183: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5929002165794373
    2. '
' → logprob: -1.842900276184082
    3. '<|end|>' → logprob: -1.967900276184082
    4. 'return' → logprob: -2.467900276184082
    5. '    
' → logprob: -3.967900276184082
    6. 'make' → logprob: -4.092900276184082
    7. ' return' → logprob: -4.592900276184082
    8. '	return' → logprob: -5.592900276184082
    9. ')' → logprob: -5.717900276184082
    10. '       ' → logprob: -6.217900276184082

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.553032628493384e-05
    2. '0' → logprob: -9.625075340270996
    3. ' ' → logprob: -11.625075340270996
    4. '2' → logprob: -15.750075340270996
    5. '100' → logprob: -16.125076293945312
    6. '           ' → logprob: -16.937576293945312
    7. '
' → logprob: -17.062576293945312
    8. '+' → logprob: -17.375076293945312
    9. '   ' → logprob: -17.562576293945312
    10. '10' → logprob: -17.875076293945312

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.019237768370658e-05
    2. '0' → logprob: -9.375090599060059
    3. ' ' → logprob: -12.250090599060059
    4. '2' → logprob: -15.500090599060059
    5. '   ' → logprob: -16.625089645385742
    6. '100' → logprob: -16.625089645385742
    7. '  ' → logprob: -17.062589645385742
    8. '
' → logprob: -17.250089645385742
    9. '```' → logprob: -17.750089645385742
    10. '10' → logprob: -18.250089645385742

Token 186: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11497653275728226
    2. '<|end|>' → logprob: -2.989976644515991
    3. 'return' → logprob: -3.114976644515991
    4. ')' → logprob: -4.989976406097412
    5. ' return' → logprob: -6.114976406097412
    6. '	return' → logprob: -6.739976406097412
    7. ' ' → logprob: -6.864976406097412
    8. '\n' → logprob: -7.739976406097412
    9. '    
' → logprob: -7.864976406097412
    10. '
' → logprob: -7.864976406097412

Token 189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006405550520867109
    2. ' i' → logprob: -5.631405353546143
    3. 'u' → logprob: -6.006405353546143
    4. 'v' → logprob: -8.1314058303833
    5. ' u' → logprob: -10.8814058303833
    6. 'p' → logprob: -11.2564058303833
    7. 'node' → logprob: -12.6314058303833
    8. ' v' → logprob: -12.8814058303833
    9. 'x' → logprob: -13.0064058303833
    10. 'child' → logprob: -13.1314058303833

Token 190: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008648018352687359
    2. 'in' → logprob: -4.758647918701172
    3. ' ' → logprob: -11.008647918701172
    4. ',' → logprob: -11.258647918701172
    5. '	in' → logprob: -13.008647918701172
    6. '  ' → logprob: -15.383647918701172
    7. ' ,' → logprob: -15.508647918701172
    8. '   ' → logprob: -15.633647918701172
    9. 'range' → logprob: -15.758647918701172
    10. '1' → logprob: -15.883647918701172

Token 191: ' par' (ID: 686)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002141932025551796
    2. 'par' → logprob: -6.252141952514648
    3. 'children' → logprob: -10.002141952514648
    4. ' p' → logprob: -10.252141952514648
    5. 'pi' → logprob: -10.752141952514648
    6. 'pa' → logprob: -10.752141952514648
    7. 'pr' → logprob: -10.877141952514648
    8. 'v' → logprob: -11.002141952514648
    9. 'ch' → logprob: -11.502141952514648
    10. 'pp' → logprob: -11.877141952514648

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14609818160533905
    2. ',' → logprob: -2.1460981369018555
    3. 'in' → logprob: -4.0210981369018555
    4. 't' → logprob: -7.0210981369018555
    5. 'x' → logprob: -10.271098136901855
    6. 'd' → logprob: -10.396098136901855
    7. 'nt' → logprob: -10.521098136901855
    8. 'n' → logprob: -10.896098136901855
    9. ' ' → logprob: -11.521098136901855
    10. 's' → logprob: -11.771098136901855

Token 193: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015023599844425917
    2. ' enumerate' → logprob: -6.501502513885498
    3. 'enum' → logprob: -18.126502990722656
    4. 'en' → logprob: -18.626502990722656
    5. 'Enumer' → logprob: -20.626502990722656
    6. '```' → logprob: -21.876502990722656
    7. 'range' → logprob: -22.626502990722656
    8. '.enumer' → logprob: -23.001502990722656
    9. 'enqueue' → logprob: -23.001502990722656
    10. '
' → logprob: -23.126502990722656

Token 194: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.07900424301624298
    2. 'parent' → logprob: -2.5790042877197266
    3. 'enumer' → logprob: -9.454004287719727
    4. '(en' → logprob: -11.454004287719727
    5. '(range' → logprob: -11.954004287719727
    6. ' parent' → logprob: -11.954004287719727
    7. ',parent' → logprob: -11.954004287719727
    8. 'range' → logprob: -12.204004287719727
    9. '(' → logprob: -14.954004287719727
    10. ' (' → logprob: -15.079004287719727

Token 195: '):
' (ID: 1883)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43005210161209106
    2. ' in' → logprob: -1.4300520420074463
    3. '):
' → logprob: -2.4300520420074463
    4. ',' → logprob: -4.930052280426025
    5. '):' → logprob: -5.555052280426025
    6. ':' → logprob: -5.680052280426025
    7. ')' → logprob: -5.930052280426025
    8. ':
' → logprob: -6.055052280426025
    9. ' if' → logprob: -6.930052280426025
    10. 'if' → logprob: -7.555052280426025

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6834335327148438
    2. 'if' → logprob: -1.0584335327148438
    3. ' if' → logprob: -2.4334335327148438
    4. '   ' → logprob: -2.8084335327148438
    5. '<|end|>' → logprob: -10.558433532714844
    6. '	if' → logprob: -10.683433532714844
    7. ',' → logprob: -11.308433532714844
    8. '```' → logprob: -11.433433532714844
    9. '	   ' → logprob: -12.308433532714844
    10. ' ' → logprob: -13.183433532714844

Token 197: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012098820880055428
    2. '       ' → logprob: -4.762098789215088
    3. ' if' → logprob: -5.762098789215088
    4. '   ' → logprob: -8.012099266052246
    5. '	if' → logprob: -13.137099266052246
    6. ' ' → logprob: -16.26209831237793
    7. '```' → logprob: -16.63709831237793
    8. 'edge' → logprob: -17.01209831237793
    9. '           ' → logprob: -17.13709831237793
    10. 'If' → logprob: -17.76209831237793

Token 198: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.10022241622209549
    2. 'par' → logprob: -2.35022234916687
    3. '	par' → logprob: -11.85022258758545
    4. '   ' → logprob: -12.22522258758545
    5. '(par' → logprob: -13.72522258758545
    6. ' ' → logprob: -13.72522258758545
    7. ' not' → logprob: -14.85022258758545
    8. ' ' → logprob: -15.22522258758545
    9. 'paren' → logprob: -15.72522258758545
    10. '    ' → logprob: -15.85022258758545

Token 199: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.518654465675354
    2. '!=' → logprob: -1.393654465675354
    3. ' !=' → logprob: -2.7686543464660645
    4. '>' → logprob: -3.0186543464660645
    5. ' >=' → logprob: -3.6436543464660645
    6. '==' → logprob: -4.8936543464660645
    7. '!=-' → logprob: -5.2686543464660645
    8. '0' → logprob: -5.8936543464660645
    9. ')' → logprob: -6.2686543464660645
    10. ' >' → logprob: -7.7686543464660645

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002186307217925787
    2. ' ' → logprob: -6.127186298370361
    3. 'i' → logprob: -14.87718677520752
    4. '=' → logprob: -14.87718677520752
    5. '>' → logprob: -15.12718677520752
    6. '1' → logprob: -16.002185821533203
    7. ' i' → logprob: -17.127185821533203
    8. '   ' → logprob: -17.127185821533203
    9. '
' → logprob: -18.127185821533203
    10. ' =' → logprob: -19.002185821533203

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -8.875141143798828
    3. 'i' → logprob: -13.750141143798828
    4. ' i' → logprob: -17.250141143798828
    5. '>' → logprob: -17.375141143798828
    6. '   ' → logprob: -18.375141143798828
    7. '=' → logprob: -19.750141143798828
    8. ':' → logprob: -20.125141143798828
    9. '  ' → logprob: -20.250141143798828
    10. '1' → logprob: -20.750141143798828

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3234514892101288
    2. ':
' → logprob: -1.3234515190124512
    3. '       ' → logprob: -4.698451519012451
    4. '           ' → logprob: -7.573451519012451
    5. ':return' → logprob: -8.573451042175293
    6. ' continue' → logprob: -8.823451042175293
    7. 'continue' → logprob: -9.698451042175293
    8. '   ' → logprob: -10.073451042175293
    9. ' or' → logprob: -10.448451042175293
    10. ':
' → logprob: -10.948451042175293

Token 203: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1717059314250946
    2. '           ' → logprob: -2.421705961227417
    3. 'continue' → logprob: -3.546705961227417
    4. ' continue' → logprob: -3.671705961227417
    5. 'edge' → logprob: -4.671705722808838
    6. ' edge' → logprob: -5.296705722808838
    7. '   ' → logprob: -8.046706199645996
    8. '	continue' → logprob: -11.171706199645996
    9. '	   ' → logprob: -11.296706199645996
    10. ':' → logprob: -11.546706199645996

Token 204: ' continue' (ID: 4901)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.36911171674728394
    2. 'edge' → logprob: -1.2441117763519287
    3. ' continue' → logprob: -4.61911153793335
    4. 'continue' (adapté à ' continue') → logprob: -4.86911153793335
    5. '       ' → logprob: -6.74411153793335
    6. '   ' → logprob: -7.74411153793335
    7. '           ' → logprob: -7.86911153793335
    8. ' pass' → logprob: -8.119112014770508
    9. ' root' → logprob: -8.619112014770508
    10. 'pass' → logprob: -8.619112014770508

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026785105001181364
    2. ' edge' → logprob: -6.627678394317627
    3. 'edge' → logprob: -6.752678394317627
    4. '           ' → logprob: -8.877678871154785
    5. '   ' → logprob: -10.627678871154785
    6. ',' → logprob: -11.752678871154785
    7. '```' → logprob: -12.377678871154785
    8. '
' → logprob: -12.752678871154785
    9. '	   ' → logprob: -13.752678871154785
    10. ' for' → logprob: -14.502678871154785

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22142931818962097
    2. 'edge' → logprob: -2.3464293479919434
    3. ' edge' → logprob: -2.5964293479919434
    4. '   ' → logprob: -3.5964293479919434
    5. '```' → logprob: -7.221429347991943
    6. '           ' → logprob: -9.471428871154785
    7. '
' → logprob: -9.971428871154785
    8. '	   ' → logprob: -11.346428871154785
    9. '``' → logprob: -11.471428871154785
    10. ',' → logprob: -11.971428871154785

Token 207: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.006742135155946016
    2. ' edge' → logprob: -5.506742000579834
    3. '       ' → logprob: -6.131742000579834
    4. '   ' → logprob: -7.631742000579834
    5. 'edges' → logprob: -14.631742477416992
    6. '(edge' → logprob: -14.756742477416992
    7. '=edge' → logprob: -14.756742477416992
    8. '           ' → logprob: -15.131742477416992
    9. '.edge' → logprob: -15.381742477416992
    10. '```' → logprob: -15.756742477416992

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7252845029579476e-05
    2. '[parent' → logprob: -10.750027656555176
    3. '[i' → logprob: -12.125027656555176
    4. ' [' → logprob: -16.25002670288086
    5. 'par' → logprob: -16.87502670288086
    6. '```' → logprob: -17.12502670288086
    7. '][' → logprob: -17.87502670288086
    8. '[pos' → logprob: -17.87502670288086
    9. '[j' → logprob: -18.25002670288086
    10. '[param' → logprob: -18.62502670288086

Token 209: 'par' (ID: 796)
  Prédit: 'par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -2.2246291337069124e-05
    2. ' par' → logprob: -10.750021934509277
    3. 'i' → logprob: -15.250021934509277
    4. '	par' → logprob: -15.625021934509277
    5. 'paren' → logprob: -16.250022888183594
    6. '
' → logprob: -16.625022888183594
    7. '   ' → logprob: -16.875022888183594
    8. 'per' → logprob: -17.375022888183594
    9. '(par' → logprob: -17.750022888183594
    10. '           ' → logprob: -17.875022888183594

Token 210: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -9.610702363715973e-06
    2. ' ].' → logprob: -12.125009536743164
    3. '.append' → logprob: -12.875009536743164
    4. ']' → logprob: -14.000009536743164
    5. '[i' → logprob: -15.000009536743164
    6. '.' → logprob: -15.750009536743164
    7. '[' → logprob: -16.500009536743164
    8. ').' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.375009536743164
    10. '}.' → logprob: -18.500009536743164

Token 211: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9027791495318525e-05
    2. '.append' → logprob: -11.000019073486328
    3. ' append' → logprob: -13.125019073486328
    4. 'app' → logprob: -15.625019073486328
    5. 'appen' → logprob: -17.000019073486328
    6. '_append' → logprob: -17.125019073486328
    7. '	append' → logprob: -17.375019073486328
    8. 'add' → logprob: -18.250019073486328
    9. 'Append' → logprob: -18.250019073486328
    10. 'insert' → logprob: -18.625019073486328

Token 212: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. '(
' → logprob: -18.500001907348633
    5. ' (' → logprob: -20.250001907348633
    6. ' i' → logprob: -20.750001907348633
    7. '(j' → logprob: -21.625001907348633
    8. ',i' → logprob: -22.375001907348633
    9. '[i' → logprob: -23.250001907348633
    10. ')i' → logprob: -24.125001907348633

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -14.250018119812012
    4. ')return' → logprob: -16.125017166137695
    5. '   ' → logprob: -16.750017166137695
    6. ')`' → logprob: -18.375017166137695
    7. '())' → logprob: -18.500017166137695
    8. ')

' → logprob: -18.500017166137695
    9. '),' → logprob: -18.625017166137695
    10. ')}' → logprob: -19.000017166137695

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7943814992904663
    2. 'def' → logprob: -1.2943814992904663
    3. '
' → logprob: -1.7943814992904663
    4. '    
' → logprob: -2.669381618499756
    5. 'return' → logprob: -3.669381618499756
    6. ')' → logprob: -5.419381618499756
    7. '<|end|>' → logprob: -5.669381618499756
    8. '```' → logprob: -5.794381618499756
    9. '  
' → logprob: -7.419381618499756
    10. ' 
' → logprob: -8.044381141662598

Token 215: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21538576483726501
    2. 'return' (adapté à ' return') → logprob: -2.715385675430298
    3. 'dp' → logprob: -2.715385675430298
    4. '   ' → logprob: -2.840385675430298
    5. '    
' → logprob: -6.840385913848877
    6. 'depth' → logprob: -7.715385913848877
    7. 'DP' → logprob: -8.090385437011719
    8. 'stack' → logprob: -8.465385437011719
    9. 'visited' → logprob: -8.590385437011719
    10. ')' → logprob: -9.090385437011719

Token 216: ' parent' (ID: 5980)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.023264233022928238
    2. ' edge' → logprob: -3.773264169692993
    3. '(edge' → logprob: -11.023263931274414
    4. '   ' → logprob: -14.273263931274414
    5. ' (' → logprob: -14.523263931274414
    6. 'parent' → logprob: -15.148263931274414
    7. 'edges' → logprob: -15.523263931274414
    8. 'N' → logprob: -15.523263931274414
    9. ' ' → logprob: -15.773263931274414
    10. ' N' → logprob: -16.273263931274414

Token 217: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.313263863325119
    2. ' edge' → logprob: -1.3132638931274414
    3. '(edge' → logprob: -14.438263893127441
    4. 'edges' → logprob: -14.813263893127441
    5. '   ' → logprob: -15.688263893127441
    6. 'def' → logprob: -15.938263893127441
    7. ' ' → logprob: -15.938263893127441
    8. 'N' → logprob: -16.188262939453125
    9. '```' → logprob: -16.313262939453125
    10. '    ' → logprob: -16.688262939453125

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: 'parent' (ID: 4903)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3254730701446533
    2. 'def' → logprob: -1.3254730701446533
    3. 'DP' → logprob: -5.075472831726074
    4. 'from' → logprob: -5.950472831726074
    5. 'import' → logprob: -6.450472831726074
    6. 'depth' → logprob: -7.700472831726074
    7. 'visited' → logprob: -7.825472831726074
    8. 'dist' → logprob: -8.325472831726074
    9. 'sys' → logprob: -8.700472831726074
    10. 'stack' → logprob: -9.200472831726074

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026872646412812173
    2. '<|end|>' → logprob: -8.625268936157227
    3. ',parent' → logprob: -10.250268936157227
    4. ' ,' → logprob: -11.125268936157227
    5. ',
' → logprob: -11.625268936157227
    6. ')' → logprob: -11.750268936157227
    7. '[' → logprob: -12.250268936157227
    8. '<|end|>' → logprob: -12.375268936157227
    9. '[:]' → logprob: -12.875268936157227
    10. ',node' → logprob: -13.750268936157227

Token 222: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.029753267765045166
    2. ' edge' → logprob: -3.5297532081604004
    3. 'edges' → logprob: -13.904753684997559
    4. '=edge' → logprob: -13.904753684997559
    5. '_edge' → logprob: -14.279753684997559
    6. '(edge' → logprob: -15.404753684997559
    7. '<|end|>' → logprob: -16.904752731323242
    8. '.edge' → logprob: -17.029752731323242
    9. 'egde' → logprob: -17.404752731323242
    10. ' edges' → logprob: -17.404752731323242

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42946937680244446
    2. ' =' → logprob: -1.054469347000122
    3. ',' → logprob: -7.804469585418701
    4. '<|end|>' → logprob: -8.179469108581543
    5. ')' → logprob: -10.304469108581543
    6. '(' → logprob: -11.304469108581543
    7. '<|end|>' → logprob: -12.304469108581543
    8. '()' → logprob: -12.429469108581543
    9. ' ' → logprob: -12.554469108581543
    10. '=create' → logprob: -12.554469108581543

Token 224: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0024756586644798517
    2. ' make' → logprob: -6.002475738525391
    3. '(make' → logprob: -17.75247573852539
    4. '	make' → logprob: -20.00247573852539
    5. '.make' → logprob: -22.75247573852539
    6. '_make' → logprob: -23.25247573852539
    7. '   ' → logprob: -24.25247573852539
    8. ' ' → logprob: -24.87747573852539
    9. 'Make' → logprob: -25.25247573852539
    10. '```' → logprob: -25.25247573852539

Token 225: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00025657136575318873
    2. '()
' → logprob: -8.375256538391113
    3. '()

' → logprob: -10.750256538391113
    4. '()`' → logprob: -14.000256538391113
    5. '()\' → logprob: -14.125256538391113
    6. '(' → logprob: -14.125256538391113
    7. 'def' → logprob: -14.250256538391113
    8. '()]' → logprob: -14.375256538391113
    9. ' ()' → logprob: -15.125256538391113
    10. '()
' → logprob: -15.500256538391113

Token 226: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017390737310051918
    2. 'sys' → logprob: -4.767390727996826
    3. 'def' → logprob: -5.142390727996826
    4. 'DP' → logprob: -6.142390727996826
    5. 'depth' → logprob: -7.892390727996826
    6. 'from' → logprob: -9.142391204833984
    7. 'ans' → logprob: -9.642391204833984
    8. 'dist' → logprob: -9.767391204833984
    9. 'res' → logprob: -10.142391204833984
    10. 'import' → logprob: -10.392391204833984

Token 227: ' cnt' (ID: 27340)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.013194468803703785
    2. 'dfs' → logprob: -4.513194561004639
    3. ' dp' → logprob: -6.263194561004639
    4. 'dp' → logprob: -8.38819408416748
    5. ' solve' → logprob: -11.63819408416748
    6. ' rec' → logprob: -14.26319408416748
    7. ' f' → logprob: -14.51319408416748
    8. ' count' → logprob: -14.88819408416748
    9. 'solve' → logprob: -15.63819408416748
    10. 'DFS' → logprob: -15.88819408416748

Token 228: '(node' (ID: 13356)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.7908943295478821
    2. '(' → logprob: -1.5408942699432373
    3. '(node' → logprob: -2.0408942699432373
    4. '(v' → logprob: -2.9158942699432373
    5. '_dp' → logprob: -3.4158942699432373
    6. '(x' → logprob: -3.9158942699432373
    7. '(i' → logprob: -4.290894508361816
    8. '(_' → logprob: -4.540894508361816
    9. '_size' → logprob: -4.665894508361816
    10. '_cnt' → logprob: -5.040894508361816

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12413899600505829
    2. ',' → logprob: -2.6241390705108643
    3. '):
' → logprob: -3.1241390705108643
    4. ')' → logprob: -9.124138832092285
    5. ':' → logprob: -9.499138832092285
    6. '   ' → logprob: -10.249138832092285
    7. '):
' → logprob: -11.249138832092285
    8. ' ):' → logprob: -11.249138832092285
    9. ',node' → logprob: -11.999138832092285
    10. '=' → logprob: -12.624138832092285

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07504094392061234
    2. ' if' → logprob: -3.0750410556793213
    3. ' res' → logprob: -4.075040817260742
    4. ' ans' → logprob: -5.825040817260742
    5. ' s' → logprob: -6.575040817260742
    6. ' cnt' → logprob: -6.575040817260742
    7. ' total' → logprob: -6.825040817260742
    8. ' count' → logprob: -7.700040817260742
    9. 'cnt' → logprob: -7.825040817260742
    10. 'if' → logprob: -8.075040817260742

Token 231: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14969828724861145
    2. ' res' → logprob: -2.774698257446289
    3. 'if' (adapté à ' if') → logprob: -3.524698257446289
    4. 'dp' → logprob: -3.774698257446289
    5. ' if' → logprob: -5.274698257446289
    6. 'total' → logprob: -5.524698257446289
    7. '   ' → logprob: -5.524698257446289
    8. '0' → logprob: -5.649698257446289
    9. 'ans' → logprob: -6.274698257446289
    10. 'ret' → logprob: -6.649698257446289

Token 232: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6016131043434143
    2. 'not' → logprob: -1.1016130447387695
    3. 'len' → logprob: -2.7266130447387695
    4. 'node' → logprob: -3.4766130447387695
    5. ' len' → logprob: -4.3516130447387695
    6. 'parent' → logprob: -4.8516130447387695
    7. ' node' → logprob: -6.1016130447387695
    8. ' parent' → logprob: -7.9766130447387695
    9. 'edge' → logprob: -9.72661304473877
    10. ' ' → logprob: -11.72661304473877

Token 233: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3868836760520935
    2. ' edge' → logprob: -1.1368837356567383
    3. '(edge' → logprob: -11.636883735656738
    4. 'node' → logprob: -13.761883735656738
    5. 'len' → logprob: -14.261883735656738
    6. ' ' → logprob: -14.886883735656738
    7. '=edge' → logprob: -15.011883735656738
    8. ' node' → logprob: -15.011883735656738
    9. '.edge' → logprob: -15.511883735656738
    10. 'Edge' → logprob: -15.636883735656738

Token 234: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -7.896309739408025e-07
    2. 'node' → logprob: -14.875000953674316
    3. '[' → logprob: -15.125000953674316
    4. '(node' → logprob: -16.625
    5. '\[' → logprob: -18.25
    6. '```' → logprob: -18.75
    7. '[
' → logprob: -19.25
    8. ' [' → logprob: -19.375
    9. '=node' → logprob: -19.625
    10. '[token' → logprob: -19.625

Token 235: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2344748079776764
    2. ':' → logprob: -1.609474778175354
    3. ']:' → logprob: -5.1094746589660645
    4. '):
' → logprob: -6.2344746589660645
    5. ':
' → logprob: -7.2344746589660645
    6. '   ' → logprob: -8.984475135803223
    7. '[node' → logprob: -9.109475135803223
    8. ')' → logprob: -11.109475135803223
    9. '}:' → logprob: -11.359475135803223
    10. '[' → logprob: -11.484475135803223

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05116415396332741
    2. '   ' → logprob: -3.426164150238037
    3. '
' → logprob: -4.801164150238037
    4. ' return' → logprob: -5.176164150238037
    5. 'return' → logprob: -6.051164150238037
    6. '0' → logprob: -7.801164150238037
    7. '1' → logprob: -8.926164627075195
    8. ',' → logprob: -9.676164627075195
    9. '\n' → logprob: -9.801164627075195
    10. ' ' → logprob: -9.926164627075195

Token 237: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.489541232585907
    2. ' return' → logprob: -1.1145412921905518
    3. '   ' → logprob: -3.3645412921905518
    4. '1' → logprob: -3.7395412921905518
    5. ' ' → logprob: -8.239541053771973
    6. '
' → logprob: -8.489541053771973
    7. '       ' → logprob: -8.989541053771973
    8. '0' → logprob: -10.614541053771973
    9. '2' → logprob: -11.114541053771973
    10. '	return' → logprob: -11.114541053771973

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0231946911662817
    2. '(' → logprob: -3.8981947898864746
    3. '[' → logprob: -6.898194789886475
    4. ' ' → logprob: -6.898194789886475
    5. '2' → logprob: -7.648194789886475
    6. ' (' → logprob: -9.273194313049316
    7. '0' → logprob: -11.148194313049316
    8. '([' → logprob: -11.398194313049316
    9. 'pow' → logprob: -11.648194313049316
    10. ' [' → logprob: -11.773194313049316

Token 239: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01277226209640503
    2. '(' → logprob: -4.762772083282471
    3. '2' → logprob: -5.762772083282471
    4. '[' → logprob: -7.012772083282471
    5. '0' → logprob: -9.887772560119629
    6. '([' → logprob: -11.137772560119629
    7. ' ' → logprob: -11.637772560119629
    8. 'pow' → logprob: -11.887772560119629
    9. '{' → logprob: -12.262772560119629
    10. '(pow' → logprob: -13.137772560119629

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6559723615646362
    2. '
' → logprob: -1.1559723615646362
    3. '**' → logprob: -2.405972480773926
    4. '  
' → logprob: -3.780972480773926
    5. ' ' → logprob: -4.030972480773926
    6. '    
' → logprob: -4.655972480773926
    7. '\n' → logprob: -5.155972480773926
    8. ' **' → logprob: -5.155972480773926
    9. '<|end|>' → logprob: -6.030972480773926
    10. ' *' → logprob: -6.030972480773926

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17831207811832428
    2. '
' → logprob: -2.553312063217163
    3. '    
' → logprob: -3.303312063217163
    4. '  
' → logprob: -4.053312301635742
    5. ' 
' → logprob: -4.053312301635742
    6. '\n' → logprob: -4.678312301635742
    7. '   
' → logprob: -6.553312301635742
    8. '```' → logprob: -7.053312301635742
    9. '<|end|>' → logprob: -7.303312301635742
    10. ' ' → logprob: -7.428312301635742

Token 242: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.026210304349660873
    2. 'ret' → logprob: -4.026210308074951
    3. 'total' → logprob: -5.651210308074951
    4. ' res' → logprob: -6.276210308074951
    5. 'r' → logprob: -6.901210308074951
    6. 's' → logprob: -7.401210308074951
    7. '   ' → logprob: -7.901210308074951
    8. 'result' → logprob: -8.151209831237793
    9. 'ans' → logprob: -8.776209831237793
    10. ' ret' → logprob: -10.026209831237793

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020915418863297
    2. '=' → logprob: -2.3502092361450195
    3. '   ' → logprob: -13.22520923614502
    4. ' ' → logprob: -14.85020923614502
    5. ' *=' → logprob: -16.350208282470703
    6. 'def' → logprob: -16.475208282470703
    7. '    ' → logprob: -16.975208282470703
    8. ' =
' → logprob: -17.100208282470703
    9. ',' → logprob: -17.350208282470703
    10. ' ' → logprob: -18.225208282470703

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4278138279914856
    2. '0' → logprob: -1.1778137683868408
    3. '2' → logprob: -3.552813768386841
    4. ' ' → logprob: -4.55281400680542
    5. '(' → logprob: -8.552813529968262
    6. 'cnt' → logprob: -8.552813529968262
    7. 'sum' → logprob: -8.802813529968262
    8. '   ' → logprob: -9.177813529968262
    9. '3' → logprob: -9.302813529968262
    10. 'pow' → logprob: -10.177813529968262

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12974418699741364
    2. '0' → logprob: -2.129744291305542
    3. '2' → logprob: -6.254744052886963
    4. 'cnt' → logprob: -7.879744052886963
    5. '(' → logprob: -8.629744529724121
    6. 'sum' → logprob: -9.129744529724121
    7. '(cnt' → logprob: -9.129744529724121
    8. ' ' → logprob: -10.629744529724121
    9. 'pow' → logprob: -11.004744529724121
    10. '
' → logprob: -11.004744529724121

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014195355586707592
    2. '   ' → logprob: -4.639195442199707
    3. '+' → logprob: -6.014195442199707
    4. 'for' → logprob: -7.764195442199707
    5. ' +' → logprob: -7.889195442199707
    6. '    
' → logprob: -8.014195442199707
    7. '+
' → logprob: -8.139195442199707
    8. ' for' → logprob: -8.264195442199707
    9. ' 
' → logprob: -9.389195442199707
    10. '  
' → logprob: -9.889195442199707

Token 247: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6123438477516174
    2. '   ' → logprob: -0.8623438477516174
    3. ' for' → logprob: -4.237343788146973
    4. 'for' → logprob: -4.612343788146973
    5. '    
' → logprob: -5.862343788146973
    6. '+' → logprob: -5.862343788146973
    7. '\t' → logprob: -6.112343788146973
    8. '	for' → logprob: -6.737343788146973
    9. ' +' → logprob: -6.862343788146973
    10. ' ' → logprob: -8.487343788146973

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011745095252990723
    2. ' for' → logprob: -6.751174449920654
    3. '   ' → logprob: -12.501174926757812
    4. '	for' → logprob: -15.501174926757812
    5. '
' → logprob: -15.626174926757812
    6. '```' → logprob: -16.626174926757812
    7. ' ' → logprob: -17.251174926757812
    8. '0' → logprob: -19.501174926757812
    9. '+' → logprob: -19.626174926757812
    10. '``' → logprob: -20.251174926757812

Token 249: ' v' (ID: 323)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.057237811386585236
    2. ' child' → logprob: -3.3072378635406494
    3. 'c' → logprob: -4.80723762512207
    4. 'ch' → logprob: -4.80723762512207
    5. 'v' → logprob: -6.43223762512207
    6. ' nxt' → logprob: -7.30723762512207
    7. ' ch' → logprob: -8.68223762512207
    8. 'e' → logprob: -9.43223762512207
    9. ' c' → logprob: -9.68223762512207
    10. ' v' → logprob: -9.80723762512207

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17975476384162903
    2. 'in' → logprob: -1.8047547340393066
    3. '	in' → logprob: -12.429755210876465
    4. ' ' → logprob: -13.179755210876465
    5. 'v' → logprob: -13.804755210876465
    6. '   ' → logprob: -14.179755210876465
    7. 'n' → logprob: -14.429755210876465
    8. ',' → logprob: -14.804755210876465
    9. 's' → logprob: -14.929755210876465
    10. '_in' → logprob: -15.554755210876465

Token 251: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07889529317617416
    2. ' edge' → logprob: -2.578895330429077
    3. '(edge' → logprob: -13.078895568847656
    4. '=edge' → logprob: -13.453895568847656
    5. ' ' → logprob: -13.578895568847656
    6. '   ' → logprob: -14.953895568847656
    7. '
' → logprob: -15.953895568847656
    8. '.edge' → logprob: -15.953895568847656
    9. 'range' → logprob: -17.078895568847656
    10. 'child' → logprob: -17.328895568847656

Token 252: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.869017852295656e-06
    2. 'node' → logprob: -12.000006675720215
    3. '(node' → logprob: -15.875006675720215
    4. '[' → logprob: -16.00000762939453
    5. 'v' → logprob: -16.62500762939453
    6. '[v' → logprob: -16.75000762939453
    7. ' node' → logprob: -16.87500762939453
    8. ',node' → logprob: -16.87500762939453
    9. '[
' → logprob: -18.00000762939453
    10. '```' → logprob: -18.12500762939453

Token 253: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0501021146774292
    2. '):
' → logprob: -1.4251021146774292
    3. '):' → logprob: -2.0501022338867188
    4. ']:' → logprob: -2.3001022338867188
    5. ':
' → logprob: -2.4251022338867188
    6. ']:
' → logprob: -2.6751022338867188
    7. '[node' → logprob: -3.9251022338867188
    8. '   ' → logprob: -5.800102233886719
    9. '       ' → logprob: -8.925102233886719
    10. ']):' → logprob: -10.175102233886719

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012556859292089939
    2. 'res' → logprob: -4.512557029724121
    3. ' res' → logprob: -6.512557029724121
    4. ',' → logprob: -11.762557029724121
    5. '
' → logprob: -12.762557029724121
    6. '```' → logprob: -12.762557029724121
    7. '   ' → logprob: -12.887557029724121
    8. ',res' → logprob: -13.262557029724121
    9. ':
' → logprob: -13.387557029724121
    10. '(res' → logprob: -13.887557029724121

Token 255: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4802466034889221
    2. 'res' (adapté à ' res') → logprob: -1.1052465438842773
    3. '       ' → logprob: -3.1052465438842773
    4. '           ' → logprob: -5.355246543884277
    5. '   ' → logprob: -7.480246543884277
    6. '```' → logprob: -9.980246543884277
    7. '	res' → logprob: -10.480246543884277
    8. '
' → logprob: -10.980246543884277
    9. 'r' → logprob: -12.230246543884277
    10. '        ' → logprob: -12.730246543884277

Token 256: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.010633671656250954
    2. ' *=' → logprob: -4.76063346862793
    3. '=' → logprob: -6.26063346862793
    4. ' =' → logprob: -9.26063346862793
    5. '*' → logprob: -11.76063346862793
    6. '   ' → logprob: -12.63563346862793
    7. '```' → logprob: -14.88563346862793
    8. '+=' → logprob: -15.76063346862793
    9. '	' → logprob: -16.13563346862793
    10. ' ' → logprob: -16.51063346862793

Token 257: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.22757449746131897
    2. ' (' → logprob: -1.7275744676589966
    3. ' res' → logprob: -4.352574348449707
    4. 'res' → logprob: -4.352574348449707
    5. '(' → logprob: -10.102574348449707
    6. '   ' → logprob: -10.727574348449707
    7. ' ' → logprob: -13.352574348449707
    8. ',res' → logprob: -13.477574348449707
    9. '
' → logprob: -13.852574348449707
    10. '	res' → logprob: -13.977574348449707

Token 258: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -6.670925358776003e-05
    2. ' res' → logprob: -9.625066757202148
    3. '(res' → logprob: -14.375066757202148
    4. '	res' → logprob: -17.87506675720215
    5. 'resc' → logprob: -18.12506675720215
    6. '   ' → logprob: -18.37506675720215
    7. '$res' → logprob: -18.87506675720215
    8. '
' → logprob: -18.87506675720215
    9. '_res' → logprob: -19.12506675720215
    10. 'ress' → logprob: -19.37506675720215

Token 259: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.251930296421051
    2. '*' → logprob: -1.5019302368164062
    3. 'res' → logprob: -14.251930236816406
    4. ' ' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.126930236816406
    6. '**' → logprob: -16.501930236816406
    7. ' res' → logprob: -16.751930236816406
    8. '```' → logprob: -16.876930236816406
    9. '   ' → logprob: -17.251930236816406
    10. '*(' → logprob: -17.501930236816406

Token 260: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0006583464564755559
    2. '(cnt' → logprob: -7.5006585121154785
    3. ' cnt' → logprob: -9.25065803527832
    4. '(' → logprob: -12.37565803527832
    5. '   ' → logprob: -13.25065803527832
    6. ' (' → logprob: -13.87565803527832
    7. '[cnt' → logprob: -14.75065803527832
    8. '	cnt' → logprob: -15.00065803527832
    9. 'pow' → logprob: -15.25065803527832
    10. 'cn' → logprob: -15.37565803527832

Token 261: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.375004768371582
    3. ')' → logprob: -15.000004768371582
    4. ' (' → logprob: -15.125004768371582
    5. 'v' → logprob: -15.500004768371582
    6. '(
' → logprob: -16.5000057220459
    7. ')v' → logprob: -16.7500057220459
    8. ')(' → logprob: -17.6250057220459
    9. '[v' → logprob: -20.1250057220459
    10. ',v' → logprob: -20.2500057220459

Token 262: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31341680884361267
    2. ')' → logprob: -1.313416838645935
    3. '())' → logprob: -9.813416481018066
    4. ')%' → logprob: -10.438416481018066
    5. ')+' → logprob: -10.563416481018066
    6. '()))' → logprob: -10.563416481018066
    7. ' ))' → logprob: -12.563416481018066
    8. '   ' → logprob: -12.563416481018066
    9. ' )' → logprob: -12.813416481018066
    10. 'v' → logprob: -12.813416481018066

Token 263: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19502444565296173
    2. '(res' → logprob: -2.5700244903564453
    3. ' %' → logprob: -3.1950244903564453
    4. 'res' → logprob: -3.3200244903564453
    5. '(' → logprob: -4.070024490356445
    6. ')%' → logprob: -6.070024490356445
    7. ')' → logprob: -6.195024490356445
    8. '   ' → logprob: -7.320024490356445
    9. 'def' → logprob: -7.445024490356445
    10. '```' → logprob: -8.195024490356445

Token 264: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.941850526549388e-06
    2. ' MOD' → logprob: -11.750007629394531
    3. '998' → logprob: -21.50000762939453
    4. '_MOD' → logprob: -21.50000762939453
    5. '.MOD' → logprob: -22.50000762939453
    6. 'MODULE' → logprob: -23.00000762939453
    7. 'MO' → logprob: -23.12500762939453
    8. 'MD' → logprob: -23.12500762939453
    9. ' ' → logprob: -23.25000762939453
    10. '   ' → logprob: -23.62500762939453

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21724453568458557
    2. '
' → logprob: -1.7172445058822632
    3. ' +' → logprob: -4.842244625091553
    4. '```' → logprob: -5.842244625091553
    5. '       ' → logprob: -6.592244625091553
    6. 'res' → logprob: -7.342244625091553
    7. '    
' → logprob: -7.467244625091553
    8. '+' → logprob: -7.717244625091553
    9. 'return' → logprob: -8.092244148254395
    10. ' *' → logprob: -8.092244148254395

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002286926144734025
    2. 'res' → logprob: -7.127286911010742
    3. '```' → logprob: -7.627286911010742
    4. 'return' → logprob: -7.752286911010742
    5. '    
' → logprob: -8.252286911010742
    6. '
' → logprob: -8.252286911010742
    7. '  
' → logprob: -11.377286911010742
    8. ' res' → logprob: -11.627286911010742
    9. ' 
' → logprob: -12.127286911010742
    10. ' return' → logprob: -12.377286911010742

Token 267: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4768834114074707
    2. 'res' (adapté à ' res') → logprob: -0.9768834114074707
    3. ' return' → logprob: -6.601883411407471
    4. '   ' → logprob: -7.226883411407471
    5. ' res' → logprob: -7.351883411407471
    6. '```' → logprob: -9.976882934570312
    7. '
' → logprob: -11.101882934570312
    8. '    
' → logprob: -12.101882934570312
    9. '(res' → logprob: -13.101882934570312
    10. ' ' → logprob: -13.101882934570312

Token 268: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002204378368332982
    2. '+=' → logprob: -6.502204418182373
    3. '*=' → logprob: -7.377204418182373
    4. ' =' → logprob: -9.502203941345215
    5. '```' → logprob: -14.127203941345215
    6. ' +=' → logprob: -15.377203941345215
    7. ' *=' → logprob: -15.627203941345215
    8. '%=' → logprob: -16.00220489501953
    9. '*' → logprob: -16.12720489501953
    10. '   ' → logprob: -16.37720489501953

Token 269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031011851970106363
    2. 'res' → logprob: -5.878101348876953
    3. ' ' → logprob: -8.503101348876953
    4. '2' → logprob: -10.503101348876953
    5. 'cnt' → logprob: -10.628101348876953
    6. ' res' → logprob: -11.378101348876953
    7. '(' → logprob: -11.378101348876953
    8. '(res' → logprob: -11.503101348876953
    9. ' (' → logprob: -12.503101348876953
    10. 'pow' → logprob: -14.003101348876953

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002486715093255043
    2. 'res' → logprob: -6.127486705780029
    3. 'cnt' → logprob: -8.752487182617188
    4. '2' → logprob: -9.627487182617188
    5. ' ' → logprob: -10.627487182617188
    6. 'sum' → logprob: -11.127487182617188
    7. '(res' → logprob: -11.127487182617188
    8. '(' → logprob: -11.252487182617188
    9. '(cnt' → logprob: -12.877487182617188
    10. 'len' → logprob: -13.627487182617188

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015043651685118675
    2. '
' → logprob: -4.64004373550415
    3. ' return' → logprob: -5.51504373550415
    4. 'return' → logprob: -7.14004373550415
    5. '	return' → logprob: -9.265043258666992
    6. '<|end|>' → logprob: -9.265043258666992
    7. '%' → logprob: -10.140043258666992
    8. '```' → logprob: -10.265043258666992
    9. '    
' → logprob: -10.515043258666992
    10. ' ' → logprob: -10.515043258666992

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0384039469063282
    2. 'return' → logprob: -3.5384039878845215
    3. ' return' → logprob: -4.7884039878845215
    4. '
' → logprob: -9.038403511047363
    5. '	return' → logprob: -9.538403511047363
    6. '```' → logprob: -9.788403511047363
    7. '%' → logprob: -11.288403511047363
    8. '    
' → logprob: -11.663403511047363
    9. '\' → logprob: -11.913403511047363
    10. ':return' → logprob: -12.038403511047363

Token 273: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23268021643161774
    2. 'return' (adapté à ' return') → logprob: -1.7326802015304565
    3. ' return' → logprob: -3.482680320739746
    4. '```' → logprob: -10.482680320739746
    5. '
' → logprob: -11.107680320739746
    6. '	return' → logprob: -11.982680320739746
    7. 'res' → logprob: -12.482680320739746
    8. '\' → logprob: -13.982680320739746
    9. ' res' → logprob: -13.982680320739746
    10. '    
' → logprob: -13.982680320739746

Token 274: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5759395360946655
    2. ' res' → logprob: -0.8259395360946655
    3. '(res' → logprob: -15.825939178466797
    4. '	res' → logprob: -18.075939178466797
    5. ' ' → logprob: -18.825939178466797
    6. '$res' → logprob: -20.575939178466797
    7. ' ' → logprob: -20.825939178466797
    8. '_res' → logprob: -20.825939178466797
    9. '   ' → logprob: -21.575939178466797
    10. ',res' → logprob: -22.325939178466797

Token 275: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3060767650604248
    2. '<|end|>' → logprob: -1.4310767650604248
    3. '%' → logprob: -5.806077003479004
    4. 'for' → logprob: -5.931077003479004
    5. 'def' → logprob: -6.306077003479004
    6. '\n' → logprob: -6.431077003479004
    7. '

' → logprob: -6.431077003479004
    8. '*' → logprob: -6.556077003479004
    9. '```' → logprob: -6.556077003479004
    10. '[root' → logprob: -6.556077003479004

Token 276: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.981667537620524e-06
    2. ' MOD' → logprob: -13.250001907348633
    3. '998' → logprob: -16.500001907348633
    4. '_MOD' → logprob: -19.000001907348633
    5. '(M' → logprob: -19.125001907348633
    6. '```' → logprob: -19.750001907348633
    7. '.MOD' → logprob: -21.500001907348633
    8. 'MO' → logprob: -21.875001907348633
    9. '`' → logprob: -22.375001907348633
    10. '999' → logprob: -22.500001907348633

Token 277: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5562635660171509
    2. 'answer' → logprob: -1.5562635660171509
    3. 'result' → logprob: -1.6812635660171509
    4. 'res' → logprob: -1.9312635660171509
    5. 'for' → logprob: -2.4312634468078613
    6. 'def' → logprob: -2.5562634468078613
    7. 'root' → logprob: -3.9312634468078613
    8. '<|end|>' → logprob: -4.306263446807861
    9. 'total' → logprob: -4.431263446807861
    10. 'answers' → logprob: -4.681263446807861

Token 278: 'def' (ID: 1314)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.582334578037262
    2. 'ans' → logprob: -1.3323345184326172
    3. 'result' → logprob: -2.082334518432617
    4. 'total' → logprob: -3.582334518432617
    5. 'answer' → logprob: -3.832334518432617
    6. 'root' → logprob: -6.457334518432617
    7. 'print' → logprob: -6.582334518432617
    8. 'ret' → logprob: -8.457334518432617
    9. 'for' → logprob: -8.957334518432617
    10. 'dp' → logprob: -10.332334518432617

Token 279: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.049843523651361465
    2. 'main' → logprob: -3.0498435497283936
    3. ' solve' → logprob: -6.9248433113098145
    4. 'solve' → logprob: -8.674843788146973
    5. ' dfs' → logprob: -10.049843788146973
    6. 'dfs' → logprob: -10.174843788146973
    7. ' root' → logprob: -12.549843788146973
    8. 'root' → logprob: -12.799843788146973
    9. ' sum' → logprob: -12.924843788146973
    10. '_main' → logprob: -13.549843788146973

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00039647609810344875
    2. '():
' → logprob: -7.875396251678467
    3. ' ():' → logprob: -11.125396728515625
    4. '()' → logprob: -13.625396728515625
    5. '():
' → logprob: -14.875396728515625
    6. '(' → logprob: -17.250396728515625
    7. '_' → logprob: -18.375396728515625
    8. '():

' → logprob: -18.625396728515625
    9. '().' → logprob: -19.875396728515625
    10. '()>' → logprob: -20.500396728515625

Token 281: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3560981750488281
    2. '   ' → logprob: -1.4810981750488281
    3. 'res' → logprob: -1.7310981750488281
    4. 'result' → logprob: -1.8560981750488281
    5. 'root' → logprob: -2.856098175048828
    6. 'total' → logprob: -3.231098175048828
    7. ' ans' → logprob: -3.481098175048828
    8. 'answer' → logprob: -4.231098175048828
    9. 'roots' → logprob: -4.231098175048828
    10. 'ret' → logprob: -4.856098175048828

Token 282: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.44461482763290405
    2. 'ans' (adapté à ' ans') → logprob: -1.8196148872375488
    3. 'root' → logprob: -2.194614887237549
    4. 'roots' → logprob: -3.444614887237549
    5. 'dp' → logprob: -4.194614887237549
    6. ' res' → logprob: -4.694614887237549
    7. 'result' → logprob: -4.694614887237549
    8. '   ' → logprob: -4.819614887237549
    9. 'total' → logprob: -5.194614887237549
    10. 'answer' → logprob: -5.694614887237549

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144228637218475
    2. '=' → logprob: -1.7014422416687012
    3. ' ' → logprob: -11.07644271850586
    4. ',' → logprob: -11.57644271850586
    5. '   ' → logprob: -13.70144271850586
    6. '_' → logprob: -14.82644271850586
    7. ':' → logprob: -14.95144271850586
    8. ')' → logprob: -15.07644271850586
    9. ' =
' → logprob: -15.07644271850586
    10. 'def' → logprob: -15.45144271850586

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7008153200149536
    2. '1' → logprob: -0.7008153200149536
    3. ' ' → logprob: -5.325815200805664
    4. 'cnt' → logprob: -6.200815200805664
    5. '(cnt' → logprob: -7.575815200805664
    6. ' cnt' → logprob: -9.200815200805664
    7. '(' → logprob: -9.825815200805664
    8. ' (' → logprob: -10.950815200805664
    9. '(ans' → logprob: -11.450815200805664
    10. '   ' → logprob: -11.638315200805664

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23850426077842712
    2. '0' → logprob: -1.6135042905807495
    3. 'cnt' → logprob: -4.363504409790039
    4. '(cnt' → logprob: -8.738504409790039
    5. '(' → logprob: -9.988504409790039
    6. 'pow' → logprob: -11.363504409790039
    7. 'ans' → logprob: -11.863504409790039
    8. 'sum' → logprob: -11.863504409790039
    9. '[cnt' → logprob: -12.238504409790039
    10. 'res' → logprob: -12.238504409790039

Token 286: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3414670526981354
    2. '   ' → logprob: -1.341467022895813
    3. 'for' → logprob: -4.216466903686523
    4. ' for' → logprob: -4.466466903686523
    5. '```' → logprob: -7.216466903686523
    6. '    
' → logprob: -8.341466903686523
    7. '  
' → logprob: -8.466466903686523
    8. '	for' → logprob: -10.091466903686523
    9. '
' → logprob: -10.216466903686523
    10. 'def' → logprob: -10.216466903686523

Token 287: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5010502934455872
    2. '   ' → logprob: -1.1260502338409424
    3. ' for' → logprob: -3.2510502338409424
    4. 'for' → logprob: -3.8760502338409424
    5. '```' → logprob: -4.6260504722595215
    6. '	for' → logprob: -8.626049995422363
    7. '    
' → logprob: -8.626049995422363
    8. ',' → logprob: -10.126049995422363
    9. '  
' → logprob: -10.501049995422363
    10. '
' → logprob: -10.626049995422363

Token 288: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005195511621423066
    2. ' for' → logprob: -7.750519752502441
    3. '   ' → logprob: -9.375519752502441
    4. 'root' → logprob: -12.625519752502441
    5. '
' → logprob: -14.625519752502441
    6. 'import' → logprob: -16.000518798828125
    7. 'stack' → logprob: -16.000518798828125
    8. '	for' → logprob: -16.750518798828125
    9. '    
' → logprob: -16.750518798828125
    10. 'roots' → logprob: -16.750518798828125

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3146965503692627
    2. ' i' → logprob: -1.3146965503692627
    3. ' v' → logprob: -7.439696311950684
    4. 'v' → logprob: -7.564696311950684
    5. ' root' → logprob: -9.439696311950684
    6. ' node' → logprob: -9.564696311950684
    7. ' in' → logprob: -9.814696311950684
    8. 'root' → logprob: -10.189696311950684
    9. 'range' → logprob: -10.689696311950684
    10. ' range' → logprob: -10.689696311950684

Token 290: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026386450976133347
    2. 'in' → logprob: -3.6513864994049072
    3. ',' → logprob: -9.526386260986328
    4. '   ' → logprob: -12.026386260986328
    5. ' ' → logprob: -13.026386260986328
    6. 'range' → logprob: -13.526386260986328
    7. ' ,' → logprob: -13.901386260986328
    8. '(' → logprob: -14.401386260986328
    9. '  ' → logprob: -14.776386260986328
    10. '_in' → logprob: -15.401386260986328

Token 291: ' par' (ID: 686)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17074483633041382
    2. 'par' → logprob: -2.4207448959350586
    3. 'in' → logprob: -3.9207448959350586
    4. ' in' → logprob: -4.420744895935059
    5. ' p' → logprob: -4.545744895935059
    6. '_' → logprob: -4.920744895935059
    7. '(p' → logprob: -4.920744895935059
    8. 'parent' → logprob: -5.920744895935059
    9. ' par' → logprob: -6.170744895935059
    10. '(' → logprob: -6.420744895935059

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2527763843536377
    2. 'in' → logprob: -1.5027763843536377
    3. ',' → logprob: -7.127776145935059
    4. ' ' → logprob: -10.502776145935059
    5. '   ' → logprob: -11.627776145935059
    6. 'n' → logprob: -13.127776145935059
    7. ' ,' → logprob: -13.502776145935059
    8. '  ' → logprob: -13.877776145935059
    9. '```' → logprob: -14.252776145935059
    10. ')' → logprob: -14.377776145935059

Token 293: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.018166566267609596
    2. ' enumerate' → logprob: -4.018166542053223
    3. 'in' → logprob: -11.143166542053223
    4. ' in' → logprob: -13.768166542053223
    5. 'en' → logprob: -14.393166542053223
    6. 'enum' → logprob: -15.018166542053223
    7. ',' → logprob: -16.51816749572754
    8. 'import' → logprob: -17.01816749572754
    9. '(en' → logprob: -17.64316749572754
    10. '.enumer' → logprob: -17.64316749572754

Token 294: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.3879070281982422
    2. 'parent' → logprob: -1.1379070281982422
    3. 'enumer' → logprob: -7.262907028198242
    4. ' parent' → logprob: -8.762907028198242
    5. ',parent' → logprob: -9.387907028198242
    6. ')' → logprob: -10.012907028198242
    7. '   ' → logprob: -11.012907028198242
    8. ' (' → logprob: -11.637907028198242
    9. 'range' → logprob: -12.012907028198242
    10. ',' → logprob: -12.262907028198242

Token 295: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4138156771659851
    2. '):' → logprob: -1.6638157367706299
    3. ' in' → logprob: -2.91381573677063
    4. '():
' → logprob: -3.41381573677063
    5. ',' → logprob: -3.78881573677063
    6. ':' → logprob: -4.163815498352051
    7. 'in' → logprob: -5.413815498352051
    8. '   ' → logprob: -5.663815498352051
    9. '<|end|>' → logprob: -5.788815498352051
    10. ')' → logprob: -5.913815498352051

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12328744679689407
    2. '```' → logprob: -2.3732874393463135
    3. '<|end|>' → logprob: -4.623287677764893
    4. ' if' → logprob: -4.998287677764893
    5. '   ' → logprob: -5.623287677764893
    6. 'if' → logprob: -7.373287677764893
    7. ':' → logprob: -7.873287677764893
    8. '``' → logprob: -8.248287200927734
    9. 'If' → logprob: -8.498287200927734
    10. '<|end|>' → logprob: -8.623287200927734

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04308722913265228
    2. ' if' → logprob: -3.2930872440338135
    3. '       ' → logprob: -5.293087005615234
    4. '   ' → logprob: -12.418087005615234
    5. '	if' → logprob: -12.918087005615234
    6. ' ' → logprob: -15.543087005615234
    7. 'If' → logprob: -16.543087005615234
    8. '```' → logprob: -17.168087005615234
    9. 'import' → logprob: -17.293087005615234
    10. '﻿' → logprob: -17.543087005615234

Token 298: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06995832920074463
    2. 'par' → logprob: -2.694958209991455
    3. '	par' → logprob: -12.069958686828613
    4. 'parent' → logprob: -12.194958686828613
    5. '   ' → logprob: -12.444958686828613
    6. '(par' → logprob: -12.819958686828613
    7. '       ' → logprob: -13.194958686828613
    8. ' parent' → logprob: -13.194958686828613
    9. 'paren' → logprob: -15.069958686828613
    10. '    ' → logprob: -15.319958686828613

Token 299: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6335879564285278
    2. '<' → logprob: -0.7585879564285278
    3. ' ==' → logprob: -7.008587837219238
    4. '==' → logprob: -10.258587837219238
    5. ' ' → logprob: -11.008587837219238
    6. ')' → logprob: -12.008587837219238
    7. '<|end|>' → logprob: -12.133587837219238
    8. '<int' → logprob: -12.633587837219238
    9. '==-' → logprob: -12.633587837219238
    10. ')<' → logprob: -12.883587837219238

Token 300: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016061818227171898
    2. ' ' → logprob: -4.141061782836914
    3. '=' → logprob: -11.266061782836914
    4. '1' → logprob: -11.766061782836914
    5. '   ' → logprob: -12.766061782836914
    6. 'i' → logprob: -13.141061782836914
    7. ' i' → logprob: -14.891061782836914
    8. ' =' → logprob: -14.953561782836914
    9. '  ' → logprob: -15.141061782836914
    10. '-' → logprob: -15.516061782836914

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.375045776367188
    3. 'i' → logprob: -11.250045776367188
    4. '   ' → logprob: -14.375045776367188
    5. '1' → logprob: -15.250045776367188
    6. '-' → logprob: -15.500045776367188
    7. '=' → logprob: -15.750045776367188
    8. 'import' → logprob: -16.000045776367188
    9. ' i' → logprob: -16.500045776367188
    10. '  ' → logprob: -16.812545776367188

Token 302: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20335108041763306
    2. ':' → logprob: -1.7033510208129883
    3. '       ' → logprob: -6.953351020812988
    4. ' and' → logprob: -7.203351020812988
    5. '):
' → logprob: -9.828351020812988
    6. 'and' → logprob: -9.828351020812988
    7. ' :
' → logprob: -10.078351020812988
    8. '():
' → logprob: -10.328351020812988
    9. ' or' → logprob: -11.203351020812988
    10. '=' → logprob: -11.703351020812988

Token 303: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015020412392914295
    2. '           ' → logprob: -5.140020370483398
    3. ' ans' → logprob: -5.765020370483398
    4. '```' → logprob: -6.140020370483398
    5. '(ans' → logprob: -6.515020370483398
    6. 'ans' → logprob: -6.515020370483398
    7. '   ' → logprob: -9.265020370483398
    8. ',' → logprob: -9.265020370483398
    9. '<|end|>' → logprob: -9.390020370483398
    10. ':' → logprob: -9.765020370483398

Token 304: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.38743552565574646
    2. ' ans' → logprob: -1.1374355554580688
    3. '	ans' → logprob: -8.387435913085938
    4. '   ' → logprob: -8.762435913085938
    5. '(ans' → logprob: -9.262435913085938
    6. '       ' → logprob: -9.637435913085938
    7. '           ' → logprob: -12.262435913085938
    8. '```' → logprob: -12.387435913085938
    9. '_ans' → logprob: -12.637435913085938
    10. '
' → logprob: -13.262435913085938

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5417578220367432
    2. ' =' → logprob: -1.2917578220367432
    3. '*=' → logprob: -2.291757822036743
    4. ' *=' → logprob: -3.166757822036743
    5. '   ' → logprob: -8.666757583618164
    6. '*' → logprob: -10.291757583618164
    7. '```' → logprob: -10.416757583618164
    8. ' ' → logprob: -11.916757583618164
    9. '+=' → logprob: -12.416757583618164
    10. ')' → logprob: -12.916757583618164

Token 306: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0013584480620920658
    2. ' (' → logprob: -6.626358509063721
    3. '(' → logprob: -10.876358032226562
    4. 'ans' → logprob: -12.126358032226562
    5. ' ans' → logprob: -12.501358032226562
    6. '(cnt' → logprob: -14.001358032226562
    7. '   ' → logprob: -14.126358032226562
    8. '(res' → logprob: -14.251358032226562
    9. '(arr' → logprob: -15.001358032226562
    10. '(err' → logprob: -15.376358032226562

Token 307: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26060980558395386
    2. '(ans' → logprob: -1.5106098651885986
    3. ' ans' → logprob: -4.7606096267700195
    4. ' (' → logprob: -10.38560962677002
    5. 'cnt' → logprob: -10.88560962677002
    6. '	ans' → logprob: -11.13560962677002
    7. '(cnt' → logprob: -12.01060962677002
    8. '_ans' → logprob: -12.13560962677002
    9. '(' → logprob: -12.88560962677002
    10. '```' → logprob: -14.26060962677002

Token 308: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519383430480957
    2. '*' → logprob: -1.5019383430480957
    3. '(ans' → logprob: -11.876937866210938
    4. '*(' → logprob: -13.751937866210938
    5. ' ' → logprob: -15.126937866210938
    6. ' ' → logprob: -15.251937866210938
    7. ' ans' → logprob: -15.501937866210938
    8. '**' → logprob: -16.001937866210938
    9. '   ' → logprob: -16.376937866210938
    10. 'ans' → logprob: -16.376937866210938

Token 309: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0005271765403449535
    2. ' cnt' → logprob: -7.750527381896973
    3. '(cnt' → logprob: -9.250527381896973
    4. '   ' → logprob: -16.000526428222656
    5. '	cnt' → logprob: -16.375526428222656
    6. '[cnt' → logprob: -16.500526428222656
    7. 'count' → logprob: -17.000526428222656
    8. '(' → logprob: -17.375526428222656
    9. 'cn' → logprob: -17.750526428222656
    10. ' ' → logprob: -18.500526428222656

Token 310: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.2200749754119897e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -14.625001907348633
    4. ')' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.125001907348633
    6. '[i' → logprob: -17.750001907348633
    7. ')(' → logprob: -18.375001907348633
    8. ')i' → logprob: -18.625001907348633
    9. '(ii' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.875001907348633

Token 311: '))' (ID: 915)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5888585448265076
    2. '))' → logprob: -0.8388585448265076
    3. '())' → logprob: -4.713858604431152
    4. ')' → logprob: -5.588858604431152
    5. ' ))' → logprob: -9.963858604431152
    6. '   ' → logprob: -10.338858604431152
    7. '()' → logprob: -10.588858604431152
    8. '(' → logprob: -11.963858604431152
    9. '       ' → logprob: -12.463858604431152
    10. '())
' → logprob: -12.713858604431152

Token 312: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3144996762275696
    2. '%' → logprob: -1.3144996166229248
    3. ')' → logprob: -6.939499855041504
    4. ')%' → logprob: -8.314499855041504
    5. '   ' → logprob: -11.939499855041504
    6. '%s' → logprob: -12.439499855041504
    7. '```' → logprob: -12.814499855041504
    8. '
' → logprob: -13.439499855041504
    9. ' %=' → logprob: -13.564499855041504
    10. '       ' → logprob: -13.689499855041504

Token 313: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.547789674485102e-05
    2. ' MOD' → logprob: -10.250035285949707
    3. '_MOD' → logprob: -19.375036239624023
    4. '.MOD' → logprob: -20.625036239624023
    5. '(M' → logprob: -21.000036239624023
    6. '998' → logprob: -22.750036239624023
    7. 'MO' → logprob: -23.125036239624023
    8. 'MODULE' → logprob: -23.625036239624023
    9. '```' → logprob: -23.875036239624023
    10. '(Mod' → logprob: -24.500036239624023

Token 314: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09099587798118591
    2. '
' → logprob: -2.4659957885742188
    3. 'print' → logprob: -6.465995788574219
    4. ' print' → logprob: -8.340995788574219
    5. '    
' → logprob: -8.590995788574219
    6. '```' → logprob: -10.215995788574219
    7. '
' → logprob: -11.715995788574219
    8. '  
' → logprob: -12.090995788574219
    9. ' 
' → logprob: -12.215995788574219
    10. '   
' → logprob: -12.590995788574219

Token 315: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6105011105537415
    2. '   ' → logprob: -0.8605011105537415
    3. ' print' → logprob: -4.235501289367676
    4. '
' → logprob: -4.985501289367676
    5. '```' → logprob: -5.235501289367676
    6. 'return' → logprob: -5.360501289367676
    7. ' return' → logprob: -5.985501289367676
    8. '    
' → logprob: -10.235501289367676
    9. '``' → logprob: -10.360501289367676
    10. '	print' → logprob: -10.485501289367676

Token 316: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003134168218821287
    2. '   ' → logprob: -8.750313758850098
    3. ' print' → logprob: -9.000313758850098
    4. '```' → logprob: -10.625313758850098
    5. 'return' → logprob: -11.875313758850098
    6. '``' → logprob: -15.875313758850098
    7. '
' → logprob: -16.37531280517578
    8. '	print' → logprob: -16.75031280517578
    9. ' return' → logprob: -18.25031280517578
    10. '#print' → logprob: -18.75031280517578

Token 317: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004081009421497583
    2. 'ans' → logprob: -5.504080772399902
    3. '(' → logprob: -13.254080772399902
    4. ' ans' → logprob: -14.879080772399902
    5. ' (' → logprob: -15.504080772399902
    6. '	ans' → logprob: -15.754080772399902
    7. '(
' → logprob: -17.50408172607422
    8. '(answer' → logprob: -18.25408172607422
    9. '_ans' → logprob: -18.37908172607422
    10. 'ANS' → logprob: -18.62908172607422

Token 318: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.87500286102295
    3. '()' → logprob: -14.12500286102295
    4. ')`' → logprob: -14.50000286102295
    5. '())' → logprob: -14.87500286102295
    6. ')
' → logprob: -15.37500286102295
    7. '))' → logprob: -15.62500286102295
    8. '`)' → logprob: -17.125003814697266
    9. '**' → logprob: -17.375003814697266
    10. '）' → logprob: -17.750003814697266

Token 319: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03808658942580223
    2. 'if' → logprob: -3.2880866527557373
    3. '
' → logprob: -10.038086891174316
    4. ' main' → logprob: -14.413086891174316
    5. '(main' → logprob: -14.913086891174316
    6. '```' → logprob: -14.913086891174316
    7. '    
' → logprob: -16.4130859375
    8. '\n' → logprob: -16.7880859375
    9. '  
' → logprob: -17.2880859375
    10. '\
' → logprob: -17.5380859375

Token 320: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0486491397023201
    2. '__' → logprob: -3.0486490726470947
    3. '_name' → logprob: -10.298648834228516
    4. 'name' → logprob: -10.673648834228516
    5. ' name' → logprob: -12.798648834228516
    6. ' ' → logprob: -14.298648834228516
    7. 'Name' → logprob: -14.423648834228516
    8. ' True' → logprob: -14.673648834228516
    9. 'True' → logprob: -16.173648834228516
    10. '___' → logprob: -16.173648834228516

Token 321: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0715923085808754
    2. ' ==' → logprob: -2.946592330932617
    3. '==' → logprob: -4.321592330932617
    4. 'name' → logprob: -6.321592330932617
    5. ' __' → logprob: -6.696592330932617
    6. '.__' → logprob: -9.571592330932617
    7. '=="' → logprob: -9.696592330932617
    8. 'if' → logprob: -10.446592330932617
    9. '__.' → logprob: -10.946592330932617
    10. '=='' → logprob: -11.321592330932617

Token 322: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010890735575230792
    2. '==' → logprob: -9.25010871887207
    3. ' ==' → logprob: -12.00010871887207
    4. '__.__' → logprob: -12.87510871887207
    5. '=="' → logprob: -13.12510871887207
    6. '___' → logprob: -14.62510871887207
    7. '____' → logprob: -14.75010871887207
    8. '__
' → logprob: -15.50010871887207
    9. '__('' → logprob: -15.50010871887207
    10. '__":
' → logprob: -15.62510871887207

Token 323: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7469043135643005
    2. ' ==' → logprob: -0.7469043135643005
    3. '__' → logprob: -3.1219043731689453
    4. '=="' → logprob: -4.871904373168945
    5. '=='' → logprob: -7.496904373168945
    6. '===' → logprob: -11.496904373168945
    7. '=' → logprob: -11.496904373168945
    8. '==
' → logprob: -11.621904373168945
    9. '___' → logprob: -12.746904373168945
    10. '"' → logprob: -12.746904373168945

Token 324: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018160710111260414
    2. ''' → logprob: -4.018160820007324
    3. '__' → logprob: -11.893160820007324
    4. ' "__' → logprob: -12.518160820007324
    5. '"name' → logprob: -16.018159866333008
    6. '"user' → logprob: -16.768159866333008
    7. ' '__' → logprob: -16.893159866333008
    8. ' ' → logprob: -17.768159866333008
    9. '   ' → logprob: -18.143159866333008
    10. '"class' → logprob: -18.268159866333008

Token 325: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007232757634483278
    2. '__' → logprob: -7.625723361968994
    3. 'name' → logprob: -8.375722885131836
    4. '"' → logprob: -12.750722885131836
    5. ''' → logprob: -15.000722885131836
    6. 'built' → logprob: -15.000722885131836
    7. ' main' → logprob: -15.375722885131836
    8. '_main' → logprob: -15.750722885131836
    9. 'python' → logprob: -16.000722885131836
    10. 'file' → logprob: -16.125722885131836

Token 326: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0005234848940744996
    2. '__' → logprob: -8.250523567199707
    3. '__':
' → logprob: -8.250523567199707
    4. '():
' → logprob: -13.875523567199707
    5. '__()
' → logprob: -16.00052261352539
    6. '__["' → logprob: -17.37552261352539
    7. '__
' → logprob: -17.50052261352539
    8. '_' → logprob: -18.12552261352539
    9. '()' → logprob: -18.37552261352539
    10. '__.' → logprob: -18.75052261352539

Token 327: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008620839565992355
    2. ' main' → logprob: -4.758620738983154
    3. '	main' → logprob: -12.008621215820312
    4. '   ' → logprob: -15.508621215820312
    5. '_main' → logprob: -16.633621215820312
    6. '(main' → logprob: -19.258621215820312
    7. '.main' → logprob: -20.133621215820312
    8. '
' → logprob: -20.508621215820312
    9. 'Main' → logprob: -21.008621215820312
    10. '    
' → logprob: -21.633621215820312

Token 328: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -23.25
    5. '_main' → logprob: -25.375
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -25.875
    8. '
' → logprob: -27.375
    9. 'Main' → logprob: -28.375
    10. '    
' → logprob: -28.625

Token 329: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 327
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 146
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 41.28%
Précision adaptée (1ère position): 44.65%
Précision (top 10): 86.54%
================================================================================
