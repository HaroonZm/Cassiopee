================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_k = input().split()
n = int(n_k[0])
k = int(n_k[1])

if k == 1:
    print(0)
else:
    print(n - k + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_k' (ID: 11637)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21551845967769623
    2. '10' → logprob: -2.2155184745788574
    3. '32' → logprob: -3.3405184745788574
    4. '0' → logprob: -3.8405184745788574
    5. '5' → logprob: -4.090518474578857
    6. '1' → logprob: -5.465518474578857
    7. '20' → logprob: -5.840518474578857
    8. '4' → logprob: -6.965518474578857
    9. '"' → logprob: -7.465518474578857
    10. '100' → logprob: -7.840518474578857

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037980206310749054
    2. ''' → logprob: -3.787980318069458
    3. '"' → logprob: -5.162980079650879
    4. '_' → logprob: -5.537980079650879
    5. '[' → logprob: -6.037980079650879
    6. '.' → logprob: -7.037980079650879
    7. '('' → logprob: -7.662980079650879
    8. '(
' → logprob: -8.162980079650879
    9. '("("' → logprob: -9.037980079650879
    10. '```' → logprob: -9.037980079650879

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22753433883190155
    2. '+' → logprob: -1.977534294128418
    3. '.strip' → logprob: -3.727534294128418
    4. ')' → logprob: -4.477534294128418
    5. '*' → logprob: -5.227534294128418
    6. '_' → logprob: -5.477534294128418
    7. ' ' → logprob: -5.477534294128418
    8. '=' → logprob: -5.602534294128418
    9. '#' → logprob: -6.102534294128418
    10. '.split' → logprob: -6.352534294128418

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000462366413557902
    2. '()' → logprob: -8.000462532043457
    3. '(
' → logprob: -10.375462532043457
    4. '('' → logprob: -10.500462532043457
    5. '"' → logprob: -11.250462532043457
    6. '`' → logprob: -11.375462532043457
    7. '("("' → logprob: -11.500462532043457
    8. '(

' → logprob: -11.875462532043457
    9. '```' → logprob: -12.375462532043457
    10. ''' → logprob: -12.375462532043457

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4538390338420868
    2. 'n' → logprob: -1.3288390636444092
    3. '[n' → logprob: -2.828839063644409
    4. '=' → logprob: -4.07883882522583
    5. '_' → logprob: -4.95383882522583
    6. '[:]' → logprob: -5.70383882522583
    7. '_n' → logprob: -5.95383882522583
    8. ' =' → logprob: -6.57883882522583
    9. '[i' → logprob: -6.70383882522583
    10. 'for' → logprob: -6.70383882522583

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023596934974193573
    2. '_k' → logprob: -4.02359676361084
    3. '[' → logprob: -5.27359676361084
    4. '_n' → logprob: -8.89859676361084
    5. '[_' → logprob: -9.77359676361084
    6. '_[' → logprob: -10.14859676361084
    7. ' _' → logprob: -12.02359676361084
    8. '[]' → logprob: -12.27359676361084
    9. '_)' → logprob: -12.39859676361084
    10. '\[' → logprob: -12.39859676361084

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5778648853302002
    2. ' int' → logprob: -0.8278648853302002
    3. ' n' → logprob: -6.952864646911621
    4. '[int' → logprob: -7.702864646911621
    5. 'n' → logprob: -7.952864646911621
    6. 'len' → logprob: -9.827864646911621
    7. 'list' → logprob: -10.702864646911621
    8. ' len' → logprob: -10.827864646911621
    9. ' map' → logprob: -11.202864646911621
    10. 'map' → logprob: -11.327864646911621

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018314406275749207
    2. '(n' → logprob: -4.018314361572266
    3. '('' → logprob: -9.268314361572266
    4. '("("' → logprob: -10.143314361572266
    5. 'n' → logprob: -11.518314361572266
    6. '(
' → logprob: -12.518314361572266
    7. ''' → logprob: -12.893314361572266
    8. '()' → logprob: -12.893314361572266
    9. '```' → logprob: -13.643314361572266
    10. '_' → logprob: -13.643314361572266

Token 11: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.006213408894836903
    2. '[' → logprob: -5.131213188171387
    3. '_n' → logprob: -9.506213188171387
    4. '_' → logprob: -9.506213188171387
    5. ')' → logprob: -10.381213188171387
    6. ')_' → logprob: -10.506213188171387
    7. '_[' → logprob: -10.881213188171387
    8. '_tokens' → logprob: -11.506213188171387
    9. '_)' → logprob: -11.631213188171387
    10. '[_' → logprob: -11.881213188171387

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[n' → logprob: -13.625001907348633
    3. ')' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.500001907348633
    5. '\[' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.875001907348633
    7. '```' → logprob: -17.875001907348633
    8. '[k' → logprob: -18.625001907348633
    9. ')[' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.250001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002346488763578236
    2. '1' → logprob: -8.375234603881836
    3. ' ' → logprob: -12.500234603881836
    4. ')' → logprob: -15.375234603881836
    5. '])' → logprob: -16.000234603881836
    6. ']' → logprob: -17.625234603881836
    7. '-' → logprob: -18.125234603881836
    8. '```' → logprob: -18.250234603881836
    9. '   ' → logprob: -18.375234603881836
    10. '`' → logprob: -18.937734603881836

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6976085901260376
    2. '])' → logprob: -0.6976085901260376
    3. ']' → logprob: -5.447608470916748
    4. ')]' → logprob: -10.322608947753906
    5. '[' → logprob: -10.447608947753906
    6. ''])' → logprob: -10.697608947753906
    7. ')])' → logprob: -11.072608947753906
    8. ')
' → logprob: -11.197608947753906
    9. ' ])' → logprob: -12.322608947753906
    10. ')n' → logprob: -12.322608947753906

Token 15: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007591230678372085
    2. 'm' → logprob: -7.250759124755859
    3. ')' → logprob: -11.12575912475586
    4. 'n' → logprob: -11.50075912475586
    5. ' k' → logprob: -11.50075912475586
    6. '_k' → logprob: -12.00075912475586
    7. '```' → logprob: -12.37575912475586
    8. '_' → logprob: -14.12575912475586
    9. '`' → logprob: -14.25075912475586
    10. ',' → logprob: -14.62575912475586

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7057604789733887
    2. ' =' → logprob: -0.9557604789733887
    3. '_' → logprob: -2.7057604789733887
    4. ')' → logprob: -3.5807604789733887
    5. ' ' → logprob: -4.080760478973389
    6. ''' → logprob: -5.830760478973389
    7. '<|end|>' → logprob: -6.080760478973389
    8. '[' → logprob: -6.205760478973389
    9. '_space' → logprob: -7.955760478973389
    10. '  ' → logprob: -8.080760955810547

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132624924182892
    2. ' int' → logprob: -1.3132624626159668
    3. ' n' → logprob: -14.438262939453125
    4. ' ' → logprob: -16.563262939453125
    5. '=int' → logprob: -16.688262939453125
    6. '(int' → logprob: -17.063262939453125
    7. 'n' → logprob: -17.313262939453125
    8. '[int' → logprob: -18.438262939453125
    9. '	int' → logprob: -18.688262939453125
    10. '<int' → logprob: -18.938262939453125

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6970628499984741
    2. '(n' → logprob: -0.6970628499984741
    3. '(k' → logprob: -5.572062969207764
    4. ' (' → logprob: -9.947062492370605
    5. '()' → logprob: -11.572062492370605
    6. '((' → logprob: -11.822062492370605
    7. '("("' → logprob: -11.822062492370605
    8. '('' → logprob: -12.322062492370605
    9. '(s' → logprob: -12.697062492370605
    10. '(
' → logprob: -12.822062492370605

Token 19: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -2.9875325708417222e-05
    2. '_' → logprob: -11.125029563903809
    3. '[' → logprob: -12.125029563903809
    4. ')' → logprob: -12.500029563903809
    5. ')_' → logprob: -13.500029563903809
    6. '_)' → logprob: -13.875029563903809
    7. '[_' → logprob: -14.500029563903809
    8. '[k' → logprob: -14.625029563903809
    9. '_j' → logprob: -14.750029563903809
    10. ' _' → logprob: -14.750029563903809

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.625000953674316
    3. ')[' → logprob: -15.750000953674316
    4. ')' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '[
' → logprob: -17.25
    7. '1' → logprob: -17.5
    8. '   ' → logprob: -17.75
    9. '][' → logprob: -18.5
    10. '\[' → logprob: -18.75

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. '])' → logprob: -10.625025749206543
    3. '0' → logprob: -13.750025749206543
    4. '```' → logprob: -16.750024795532227
    5. ']' → logprob: -17.000024795532227
    6. ')' → logprob: -17.625024795532227
    7. ' ' → logprob: -17.750024795532227
    8. '2' → logprob: -18.375024795532227
    9. '])
' → logprob: -18.625024795532227
    10. '   ' → logprob: -19.375024795532227

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. '])' → logprob: -13.375005722045898
    3. '`)' → logprob: -13.625005722045898
    4. '）' → logprob: -13.875005722045898
    5. '')' → logprob: -14.125005722045898
    6. '))' → logprob: -14.250005722045898
    7. ']' → logprob: -14.750005722045898
    8. ' )' → logprob: -16.1250057220459
    9. ')]' → logprob: -16.1250057220459
    10. '[' → logprob: -16.6250057220459

Token 23: 'if' (ID: 366)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7704244256019592
    2. 'a' → logprob: -2.0204243659973145
    3. 'if' → logprob: -2.5204243659973145
    4. 'for' → logprob: -2.8954243659973145
    5. 'r' → logprob: -3.1454243659973145
    6. 'n' → logprob: -3.1454243659973145
    7. 's' → logprob: -3.3954243659973145
    8. 'x' → logprob: -3.5204243659973145
    9. 'f' → logprob: -3.6454243659973145
    10. '#' → logprob: -4.3954243659973145

Token 24: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5298611521720886
    2. ' k' → logprob: -0.9048611521720886
    3. 'n' → logprob: -5.904860973358154
    4. ' ' → logprob: -5.904860973358154
    5. 'k' → logprob: -7.029860973358154
    6. ' ' → logprob: -8.029861450195312
    7. ' (' → logprob: -11.279861450195312
    8. ' '' → logprob: -12.154861450195312
    9. ' a' → logprob: -12.404861450195312
    10. '(' → logprob: -12.404861450195312

Token 25: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6787149310112
    2. ' ==' → logprob: -1.5537149906158447
    3. ' <' → logprob: -2.0537149906158447
    4. ' <=' → logprob: -2.1787149906158447
    5. ' ' → logprob: -3.6787149906158447
    6. '>' → logprob: -5.428714752197266
    7. ' >=' → logprob: -5.428714752197266
    8. '<' → logprob: -6.428714752197266
    9. '==' → logprob: -6.678714752197266
    10. ' !=' → logprob: -6.803714752197266

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2025226354598999
    2. '0' → logprob: -1.7025226354599
    3. '1' → logprob: -7.0775227546691895
    4. ' n' → logprob: -8.452522277832031
    5. 'n' → logprob: -10.077522277832031
    6. '2' → logprob: -12.202522277832031
    7. '=' → logprob: -13.702522277832031
    8. '  ' → logprob: -14.327522277832031
    9. '3' → logprob: -15.265022277832031
    10. '-' → logprob: -15.577522277832031

Token 27: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814560778439045
    2. '1' → logprob: -4.393145561218262
    3. ' ' → logprob: -5.393145561218262
    4. 'n' → logprob: -6.893145561218262
    5. '2' → logprob: -10.268145561218262
    6. ' n' → logprob: -11.518145561218262
    7. '3' → logprob: -12.393145561218262
    8. '=' → logprob: -13.830645561218262
    9. '4' → logprob: -14.268145561218262
    10. '%' → logprob: -14.393145561218262

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.054500666621607e-06
    2. ' :' → logprob: -13.25000286102295
    3. ':
' → logprob: -14.50000286102295
    4. ':**' → logprob: -14.62500286102295
    5. ',' → logprob: -16.875003814697266
    6. '>' → logprob: -17.250003814697266
    7. '.' → logprob: -17.375003814697266
    8. ':return' → logprob: -17.500003814697266
    9. '=' → logprob: -17.875003814697266
    10. ':def' → logprob: -18.000003814697266

Token 29: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49795252084732056
    2. ':' → logprob: -1.6229524612426758
    3. ' print' → logprob: -1.8729524612426758
    4. '\n' → logprob: -3.747952461242676
    5. '   ' → logprob: -4.872952461242676
    6. ':
' → logprob: -4.997952461242676
    7. '\' → logprob: -7.247952461242676
    8. '
' → logprob: -7.247952461242676
    9. '.' → logprob: -7.747952461242676
    10. 'n' → logprob: -8.372952461242676

Token 30: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009661303483881056
    2. 'for' → logprob: -7.8759660720825195
    3. 'n' → logprob: -8.50096607208252
    4. '1' → logprob: -9.25096607208252
    5. ' print' → logprob: -9.25096607208252
    6. '0' → logprob: -9.37596607208252
    7. '   ' → logprob: -9.50096607208252
    8. 'pass' → logprob: -12.50096607208252
    9. 'if' → logprob: -12.62596607208252
    10. 'pr' → logprob: -12.75096607208252

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05687503144145012
    2. '(n' → logprob: -3.556874990463257
    3. '("' → logprob: -4.306875228881836
    4. '('' → logprob: -4.806875228881836
    5. '()' → logprob: -6.056875228881836
    6. '("("' → logprob: -6.306875228881836
    7. '(k' → logprob: -7.806875228881836
    8. '((' → logprob: -8.681875228881836
    9. '(
' → logprob: -9.181875228881836
    10. '(-' → logprob: -9.556875228881836

Token 32: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10218509286642075
    2. '0' → logprob: -2.977185010910034
    3. '1' → logprob: -3.227185010910034
    4. '"' → logprob: -5.352185249328613
    5. ''n' → logprob: -7.852185249328613
    6. ''' → logprob: -8.477185249328613
    7. '2' → logprob: -8.602185249328613
    8. '(n' → logprob: -8.727185249328613
    9. '-' → logprob: -8.852185249328613
    10. 'pow' → logprob: -8.852185249328613

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -15.250003814697266
    4. '')' → logprob: -15.375003814697266
    5. '")' → logprob: -16.375003814697266
    6. '))' → logprob: -16.625003814697266
    7. '`)' → logprob: -17.125003814697266
    8. ')

' → logprob: -17.250003814697266
    9. '}' → logprob: -17.625003814697266
    10. '）' → logprob: -17.875003814697266

Token 34: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0135191073641181
    2. 'elif' → logprob: -4.763519287109375
    3. ' else' → logprob: -5.513519287109375
    4. '
' → logprob: -8.013519287109375
    5. ')' → logprob: -8.138519287109375
    6. '<|end|>' → logprob: -8.888519287109375
    7. '```' → logprob: -11.013519287109375
    8. '\n' → logprob: -11.138519287109375
    9. ' elif' → logprob: -11.388519287109375
    10. ']' → logprob: -11.763519287109375

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.584239938296378e-06
    2. ' :' → logprob: -12.500007629394531
    3. ':
' → logprob: -12.875007629394531
    4. '   ' → logprob: -14.125007629394531
    5. ':def' → logprob: -16.00000762939453
    6. ',' → logprob: -16.62500762939453
    7. ':**' → logprob: -17.00000762939453
    8. ':return' → logprob: -17.12500762939453
    9. '.' → logprob: -17.25000762939453
    10. ':

' → logprob: -17.37500762939453

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3265738785266876
    2. 'print' → logprob: -1.7015738487243652
    3. 'for' → logprob: -3.2015738487243652
    4. ' print' → logprob: -3.5765738487243652
    5. ' for' → logprob: -4.576573848724365
    6. 'n' → logprob: -6.326573848724365
    7. '    ' → logprob: -6.451573848724365
    8. 'result' → logprob: -6.451573848724365
    9. 'i' → logprob: -6.576573848724365
    10. 'count' → logprob: -6.826573848724365

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6293462514877319
    2. 'count' → logprob: -1.879346251487732
    3. 'for' → logprob: -2.1293463706970215
    4. 'result' → logprob: -3.5043463706970215
    5. 'a' → logprob: -4.1293463706970215
    6. 'max' → logprob: -4.1293463706970215
    7. 'p' → logprob: -4.2543463706970215
    8. 'c' → logprob: -4.3793463706970215
    9. 'cnt' → logprob: -4.3793463706970215
    10. 'i' → logprob: -4.7543463706970215

Token 38: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9137135744094849
    2. '((' → logprob: -1.4137135744094849
    3. '(n' → logprob: -1.4137135744094849
    4. '(k' → logprob: -2.2887134552001953
    5. '(pow' → logprob: -5.288713455200195
    6. '(min' → logprob: -6.538713455200195
    7. '(max' → logprob: -6.663713455200195
    8. '(((' → logprob: -6.913713455200195
    9. '('' → logprob: -7.288713455200195
    10. '(int' → logprob: -7.663713455200195

Token 39: ' -' (ID: 533)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8904532194137573
    2. '%' → logprob: -1.2654532194137573
    3. ' //' → logprob: -1.3904532194137573
    4. '-' → logprob: -3.640453338623047
    5. ' %' → logprob: -3.890453338623047
    6. ')' → logprob: -5.140453338623047
    7. ' -' → logprob: -6.015453338623047
    8. '/k' → logprob: -6.890453338623047
    9. '-k' → logprob: -7.515453338623047
    10. '*' → logprob: -7.890453338623047

Token 40: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29451343417167664
    2. '1' → logprob: -1.419513463973999
    3. '2' → logprob: -5.04451322555542
    4. ' k' → logprob: -5.29451322555542
    5. ' ' → logprob: -6.54451322555542
    6. '(k' → logprob: -8.544513702392578
    7. '(' → logprob: -10.044513702392578
    8. 'n' → logprob: -10.294513702392578
    9. ' (' → logprob: -10.544513702392578
    10. '	k' → logprob: -11.294513702392578

Token 41: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006194814573973417
    2. '+' → logprob: -5.256194591522217
    3. '-' → logprob: -7.131194591522217
    4. ' )' → logprob: -9.756195068359375
    5. '))' → logprob: -10.506195068359375
    6. '*' → logprob: -10.506195068359375
    7. ' +' → logprob: -11.381195068359375
    8. '-)' → logprob: -11.756195068359375
    9. '+)' → logprob: -12.256195068359375
    10. ')
' → logprob: -12.506195068359375

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002541872672736645
    2. ' ' → logprob: -8.37525463104248
    3. '2' → logprob: -10.75025463104248
    4. ')' → logprob: -14.12525463104248
    5. '0' → logprob: -14.12525463104248
    6. '3' → logprob: -15.87525463104248
    7. ' k' → logprob: -16.937753677368164
    8. '(' → logprob: -17.000253677368164
    9. 'k' → logprob: -17.000253677368164
    10. 'n' → logprob: -17.125253677368164

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '2' → logprob: -10.750022888183594
    3. ' ' → logprob: -13.750022888183594
    4. ')' → logprob: -16.562522888183594
    5. '0' → logprob: -16.687522888183594
    6. '3' → logprob: -16.875022888183594
    7. 'k' → logprob: -16.937522888183594
    8. 'n' → logprob: -17.187522888183594
    9. '+' → logprob: -17.875022888183594
    10. '(' → logprob: -17.875022888183594

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -15.125000953674316
    4. '')' → logprob: -15.375000953674316
    5. ')
' → logprob: -16.000001907348633
    6. '`)' → logprob: -16.000001907348633
    7. ')`' → logprob: -16.625001907348633
    8. '*' → logprob: -17.750001907348633
    9. '(' → logprob: -18.625001907348633
    10. '#' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 35.71%
Précision (top 10): 83.33%
================================================================================
