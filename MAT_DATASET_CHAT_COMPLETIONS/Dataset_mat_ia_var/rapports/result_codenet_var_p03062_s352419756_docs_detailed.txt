================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_special_sum():
    """
    Lit un entier N et une liste de N entiers depuis l'entrée standard.
    Calcule une somme spéciale comme suit :
      - Si le produit de tous les éléments est positif ou nul, affiche la somme de leurs valeurs absolues.
      - Si le produit est négatif, affiche la somme des valeurs absolues diminuée de deux fois la plus petite valeur absolue.
    """
    # Lecture du nombre d'éléments à traiter
    N = int(input())
    
    # Lecture de la liste des entiers depuis l'entrée standard
    A = list(map(int, input().split()))
    
    # Initialisation du signe du produit (1 pour positif, -1 pour négatif)
    s = 1
    for i in A:
        # Inverser le signe si l'élément est négatif
        if i < 0:
            s *= -1
    
    # Calcul de la liste des valeurs absolues
    Aabs = list(map(abs, A))
    
    # Si le produit global est positif ou nul, on affiche la somme directe
    if s == 1:
        print(sum(Aabs))
    # Sinon, il faut soustraire deux fois la plus petite valeur absolue
    else:
        print(sum(Aabs) - 2 * min(Aabs))

# Appel de la fonction principale si ce script est exécuté
if __name__ == "__main__":
    calculate_special_sum()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_special' (ID: 100315)
  → Token d'amorce (pas de prédiction)

Token 3: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008101018611341715
    2. '_special' → logprob: -8.000809669494629
    3. '```' → logprob: -8.750809669494629
    4. '(' → logprob: -9.000809669494629
    5. '_factor' → logprob: -10.000809669494629
    6. ' _' → logprob: -10.125809669494629
    7. '(_' → logprob: -10.875809669494629
    8. '_(' → logprob: -11.125809669494629
    9. '_function' → logprob: -11.750809669494629
    10. '_char' → logprob: -12.000809669494629

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00232712528668344
    2. '_' → logprob: -6.377326965332031
    3. '```' → logprob: -7.877326965332031
    4. ' (' → logprob: -9.377326965332031
    5. '("("' → logprob: -10.127326965332031
    6. '(_' → logprob: -10.752326965332031
    7. '('' → logprob: -11.127326965332031
    8. '(
' → logprob: -11.252326965332031
    9. '<|end|>' → logprob: -11.377326965332031
    10. ''' → logprob: -12.127326965332031

Token 5: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1084997653961182
    2. '```' → logprob: -1.1084997653961182
    3. '   ' → logprob: -1.6084997653961182
    4. '\' → logprob: -2.233499765396118
    5. ':' → logprob: -4.483499526977539
    6. '    
' → logprob: -5.733499526977539
    7. '(' → logprob: -6.108499526977539
    8. '
' → logprob: -6.108499526977539
    9. '``' → logprob: -6.108499526977539
    10. '    ' → logprob: -6.608499526977539

Token 6: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5909304022789001
    2. ' ' → logprob: -2.090930461883545
    3. 'n' → logprob: -2.340930461883545
    4. '    ' → logprob: -2.715930461883545
    5. 'r' → logprob: -3.465930461883545
    6. 'a' → logprob: -3.590930461883545
    7. '\' → logprob: -3.715930461883545
    8. 'x' → logprob: -4.340930461883545
    9. '```' → logprob: -4.465930461883545
    10. 'return' → logprob: -4.715930461883545

Token 7: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.5208958387374878
    2. '   ' → logprob: -1.2708958387374878
    3. '"""' → logprob: -2.7708959579467773
    4. 'Calcul' → logprob: -3.2708959579467773
    5. 'Returns' → logprob: -4.895895957946777
    6. 'Return' → logprob: -5.395895957946777
    7. ' Calculates' → logprob: -5.895895957946777
    8. 'This' → logprob: -6.020895957946777
    9. '    ' → logprob: -6.520895957946777
    10. ' Calculate' → logprob: -7.020895957946777

Token 8: ' Lit' (ID: 45595)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.403300404548645
    2. 'Calcul' → logprob: -1.153300404548645
    3. 'Returns' → logprob: -5.4033002853393555
    4. 'Return' → logprob: -5.6533002853393555
    5. '   ' → logprob: -5.7783002853393555
    6. 'Sum' → logprob: -7.2783002853393555
    7. 'S' → logprob: -7.2783002853393555
    8. 'R' → logprob: -7.2783002853393555
    9. 'This' → logprob: -7.4033002853393555
    10. 'C' → logprob: -7.4033002853393555

Token 9: ' un' (ID: 537)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10177086293697357
    2. 'ral' → logprob: -3.7267708778381348
    3. 'tle' → logprob: -3.7267708778381348
    4. '   ' → logprob: -3.9767708778381348
    5. 'eral' → logprob: -4.226770877838135
    6. '```' → logprob: -5.976770877838135
    7. '  ' → logprob: -6.101770877838135
    8. 'def' → logprob: -6.351770877838135
    9. 'e' → logprob: -6.351770877838135
    10. 'mus' → logprob: -6.851770877838135

Token 10: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0076786731369793415
    2. ' e' → logprob: -5.757678508758545
    3. 'é' → logprob: -6.882678508758545
    4. ' ' → logprob: -7.382678508758545
    5. 'n' → logprob: -7.632678508758545
    6. 'a' → logprob: -7.757678508758545
    7. 'es' → logprob: -7.882678508758545
    8. 's' → logprob: -7.882678508758545
    9. ' espace' → logprob: -8.132678985595703
    10. '   ' → logprob: -9.382678985595703

Token 11: ' N' (ID: 478)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6800428628921509
    2. ' ' → logprob: -1.1800428628921509
    3. '\' → logprob: -2.6800427436828613
    4. ' \' → logprob: -4.055042743682861
    5. 'e' → logprob: -4.305042743682861
    6. 'n' → logprob: -4.305042743682861
    7. ' en' → logprob: -4.555042743682861
    8. ',' → logprob: -5.305042743682861
    9. ' et' → logprob: -5.555042743682861
    10. ' (' → logprob: -5.555042743682861

Token 12: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2694873511791229
    2. '\n' → logprob: -1.6444873809814453
    3. ',' → logprob: -4.644487380981445
    4. ' ' → logprob: -4.894487380981445
    5. ')' → logprob: -5.144487380981445
    6. '\' → logprob: -5.144487380981445
    7. '
' → logprob: -6.019487380981445
    8. ' et' → logprob: -6.144487380981445
    9. '.' → logprob: -6.644487380981445
    10. 'n' → logprob: -7.019487380981445

Token 13: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.4900473356246948
    2. ' une' → logprob: -2.1150474548339844
    3. 'ens' → logprob: -2.3650474548339844
    4. ' calc' → logprob: -2.6150474548339844
    5. ' la' → logprob: -2.9900474548339844
    6. '   ' → logprob: -2.9900474548339844
    7. 's' → logprob: -2.9900474548339844
    8. 'une' → logprob: -3.2400474548339844
    9. ' ensuite' → logprob: -3.6150474548339844
    10. 'n' → logprob: -3.9900474548339844

Token 14: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.9335283637046814
    2. ' suite' → logprob: -1.3085284233093262
    3. ' ' → logprob: -2.558528423309326
    4. ' chaîne' → logprob: -2.558528423309326
    5. 'suite' → logprob: -2.808528423309326
    6. 'liste' → logprob: -3.433528423309326
    7. ' sé' → logprob: -3.683528423309326
    8. 's' → logprob: -3.683528423309326
    9. '   ' → logprob: -4.433528423309326
    10. 'sé' → logprob: -4.808528423309326

Token 15: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.422868013381958
    2. ' de' → logprob: -1.547868013381958
    3. '   ' → logprob: -2.672868013381958
    4. 'de' → logprob: -3.922868013381958
    5. ' des' → logprob: -5.172867774963379
    6. '```' → logprob: -5.172867774963379
    7. '_' → logprob: -5.422867774963379
    8. '`' → logprob: -5.797867774963379
    9. 'e' → logprob: -5.922867774963379
    10. '[' → logprob: -5.922867774963379

Token 16: ' N' (ID: 478)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.10631754249334335
    2. ' ent' → logprob: -2.3563175201416016
    3. 'n' → logprob: -5.981317520141602
    4. 'ent' → logprob: -6.231317520141602
    5. ' nombre' → logprob: -7.731317520141602
    6. ' N' → logprob: -8.231317520141602
    7. ' n' → logprob: -8.606317520141602
    8. 'nombre' → logprob: -8.731317520141602
    9. ' valeurs' → logprob: -8.731317520141602
    10. ' entier' → logprob: -9.606317520141602

Token 17: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.09068150818347931
    2. 'ent' → logprob: -2.465681552886963
    3. ' nombres' → logprob: -7.090681552886963
    4. 'val' → logprob: -8.465681076049805
    5. 'élé' → logprob: -8.840681076049805
    6. ' integers' → logprob: -9.090681076049805
    7. ' entier' → logprob: -9.465681076049805
    8. 'int' → logprob: -9.590681076049805
    9. 'n' → logprob: -9.715681076049805
    10. ''ent' → logprob: -9.965681076049805

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.128151535987854
    2. 'i' → logprob: -2.1281514167785645
    3. 'ié' → logprob: -7.1281514167785645
    4. 'ières' → logprob: -7.8781514167785645
    5. '```' → logprob: -11.503151893615723
    6. 'ier' → logprob: -12.128151893615723
    7. 'í' → logprob: -12.128151893615723
    8. 'ités' → logprob: -12.253151893615723
    9. '   ' → logprob: -13.128151893615723
    10. 'riers' → logprob: -13.128151893615723

Token 19: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03982614725828171
    2. '\n' → logprob: -4.164825916290283
    3. '    
' → logprob: -4.664825916290283
    4. '.' → logprob: -5.164825916290283
    5. '
' → logprob: -5.914825916290283
    6. '\' → logprob: -6.039825916290283
    7. ',' → logprob: -7.039825916290283
    8. '    ' → logprob: -7.914825916290283
    9. '.
' → logprob: -8.289826393127441
    10. ',
' → logprob: -8.414826393127441

Token 20: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.678874671459198
    2. ' input' → logprob: -1.0538747310638428
    3. 'input' → logprob: -2.6788747310638428
    4. ' l' → logprob: -3.1788747310638428
    5. '   ' → logprob: -4.678874492645264
    6. ' stdin' → logprob: -4.803874492645264
    7. ' la' → logprob: -5.303874492645264
    8. 'la' → logprob: -5.928874492645264
    9. ' ' → logprob: -6.053874492645264
    10. 'le' → logprob: -6.803874492645264

Token 21: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.659363865852356
    2. 'entrée' → logprob: -0.784363865852356
    3. 'a' → logprob: -4.409363746643066
    4. 'input' → logprob: -4.534363746643066
    5. 'stdin' → logprob: -7.034363746643066
    6. 'e' → logprob: -7.159363746643066
    7. ''' → logprob: -7.409363746643066
    8. 'ent' → logprob: -8.284363746643066
    9. '’entrée' → logprob: -8.909363746643066
    10. 'import' → logprob: -8.909363746643066

Token 22: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18542179465293884
    2. '\n' → logprob: -1.9354218244552612
    3. '\' → logprob: -4.810421943664551
    4. '    
' → logprob: -4.935421943664551
    5. '.' → logprob: -5.560421943664551
    6. ',' → logprob: -5.685421943664551
    7. '    ' → logprob: -8.06042194366455
    8. 'n' → logprob: -8.43542194366455
    9. 'def' → logprob: -8.43542194366455
    10. '\r' → logprob: -8.68542194366455

Token 23: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07515230029821396
    2. '\n' → logprob: -2.9501523971557617
    3. '    
' → logprob: -4.325152397155762
    4. '\' → logprob: -5.825152397155762
    5. '
' → logprob: -6.075152397155762
    6. '    ' → logprob: -7.575152397155762
    7. '   
' → logprob: -8.825152397155762
    8. '  
' → logprob: -8.950152397155762
    9. ',' → logprob: -9.075152397155762
    10. 'n' → logprob: -9.200152397155762

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0848793312907219
    2. '    
' → logprob: -3.0848793983459473
    3. '\n' → logprob: -3.9598793983459473
    4. '
' → logprob: -5.459879398345947
    5. '\' → logprob: -6.209879398345947
    6. '     
' → logprob: -6.459879398345947
    7. '    ' → logprob: -6.459879398345947
    8. '   
' → logprob: -6.584879398345947
    9. '```' → logprob: -6.584879398345947
    10. 'n' → logprob: -6.709879398345947

Token 25: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026210537180304527
    2. '\n' → logprob: -3.9012105464935303
    3. '    
' → logprob: -6.276210308074951
    4. '```' → logprob: -6.276210308074951
    5. '\' → logprob: -7.276210308074951
    6. '    ' → logprob: -8.27621078491211
    7. '
' → logprob: -8.65121078491211
    8. '   
' → logprob: -9.02621078491211
    9. '"""' → logprob: -9.15121078491211
    10. 'n' → logprob: -9.15121078491211

Token 26: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.6736546754837036
    2. 'c' → logprob: -1.2986546754837036
    3. 'cul' → logprob: -1.5486546754837036
    4. 'culate' → logprob: -6.423654556274414
    5. '```' → logprob: -6.548654556274414
    6. 'cules' → logprob: -7.798654556274414
    7. 'cula' → logprob: -7.798654556274414
    8. '``' → logprob: -8.798654556274414
    9. '\' → logprob: -9.298654556274414
    10. '#' → logprob: -9.923654556274414

Token 27: ' une' (ID: 2463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4805278778076172
    2. ' et' → logprob: -2.105527877807617
    3. ' l' → logprob: -2.355527877807617
    4. ' ' → logprob: -2.355527877807617
    5. ' s' → logprob: -4.230527877807617
    6. ' la' → logprob: -4.355527877807617
    7. '  ' → logprob: -4.480527877807617
    8. '    ' → logprob: -4.605527877807617
    9. '   ' → logprob: -4.730527877807617
    10. ' le' → logprob: -5.480527877807617

Token 28: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03897279128432274
    2. ' somme' → logprob: -3.288972854614258
    3. 's' → logprob: -8.038972854614258
    4. '_' → logprob: -8.163972854614258
    5. ' _' → logprob: -9.163972854614258
    6. ' valeur' → logprob: -9.413972854614258
    7. '_s' → logprob: -9.913972854614258
    8. '  ' → logprob: -10.788972854614258
    9. ' space' → logprob: -11.163972854614258
    10. ' sum' → logprob: -11.538972854614258

Token 29: ' spéciale' (ID: 142408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.783942699432373
    2. '   ' → logprob: -0.783942699432373
    3. ' des' → logprob: -3.533942699432373
    4. '_special' → logprob: -4.158942699432373
    5. ' spéciale' → logprob: -4.658942699432373
    6. ' _' → logprob: -4.658942699432373
    7. '    ' → logprob: -5.283942699432373
    8. '()' → logprob: -6.408942699432373
    9. ',' → logprob: -6.658942699432373
    10. ' de' → logprob: -6.908942699432373

Token 30: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08302658796310425
    2. '    
' → logprob: -3.708026647567749
    3. '    ' → logprob: -4.33302640914917
    4. ',' → logprob: -4.45802640914917
    5. ' ' → logprob: -4.58302640914917
    6. '_' → logprob: -5.83302640914917
    7. '.' → logprob: -5.83302640914917
    8. '     
' → logprob: -6.20802640914917
    9. '  ' → logprob: -6.70802640914917
    10. ' et' → logprob: -6.70802640914917

Token 31: ' suit' (ID: 15170)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.3492398262023926
    2. ' décrit' → logprob: -1.5992398262023926
    3. ' suit' → logprob: -1.8492398262023926
    4. ' spéc' → logprob: -2.2242398262023926
    5. ' décr' → logprob: -2.4742398262023926
    6. ' ceci' → logprob: -2.7242398262023926
    7. 's' → logprob: -3.3492398262023926
    8. ' indiqué' → logprob: -3.8492398262023926
    9. ' défin' → logprob: -4.474239826202393
    10. ' demandé' → logprob: -4.724239826202393

Token 32: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13602086901664734
    2. ':' → logprob: -2.3860208988189697
    3. ' :' → logprob: -3.7610208988189697
    4. ',' → logprob: -5.886020660400391
    5. '    ' → logprob: -6.011020660400391
    6. '    
' → logprob: -6.261020660400391
    7. '.' → logprob: -6.761020660400391
    8. ' ' → logprob: -7.636020660400391
    9. '```' → logprob: -7.636020660400391
    10. '\n' → logprob: -7.886020660400391

Token 33: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04611189290881157
    2. '    ' → logprob: -3.171111822128296
    3. ' ' → logprob: -7.171112060546875
    4. '     
' → logprob: -7.296112060546875
    5. '```' → logprob: -7.921112060546875
    6. '    
' → logprob: -8.171112060546875
    7. ' 
' → logprob: -8.421112060546875
    8. '\' → logprob: -8.546112060546875
    9. '  ' → logprob: -9.046112060546875
    10. '       ' → logprob: -9.546112060546875

Token 34: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2748660743236542
    2. '    ' → logprob: -2.5248661041259766
    3. '    
' → logprob: -3.8998661041259766
    4. '     ' → logprob: -4.024866104125977
    5. '  
' → logprob: -4.274866104125977
    6. '     
' → logprob: -4.274866104125977
    7. '      
' → logprob: -4.399866104125977
    8. ' ' → logprob: -4.899866104125977
    9. 'Chaque' → logprob: -4.899866104125977
    10. ' Chaque' → logprob: -5.149866104125977

Token 35: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5673842430114746
    2. 's' → logprob: -2.0673842430114746
    3. ' for' → logprob: -2.1923842430114746
    4. ' La' → logprob: -2.6923842430114746
    5. 'La' → logprob: -2.9423842430114746
    6. 'for' → logprob: -3.3173842430114746
    7. ' ' → logprob: -3.4423842430114746
    8. 'def' → logprob: -3.5673842430114746
    9. 'l' → logprob: -3.6923842430114746
    10. 'L' → logprob: -3.6923842430114746

Token 36: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.14920273423194885
    2. ' i' → logprob: -3.399202823638916
    3. 'l' → logprob: -3.524202823638916
    4. ' ' → logprob: -4.024202823638916
    5. ' le' → logprob: -4.024202823638916
    6. ' la' → logprob: -4.274202823638916
    7. ' len' → logprob: -4.524202823638916
    8. 'i' → logprob: -5.774202823638916
    9. ' n' → logprob: -6.024202823638916
    10. ' ' → logprob: -6.524202823638916

Token 37: ' produit' (ID: 29429)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6793953776359558
    2. ' nombre' → logprob: -2.4293954372406006
    3. 'i' → logprob: -2.5543954372406006
    4. 'nombre' → logprob: -2.5543954372406006
    5. ' prochain' → logprob: -3.0543954372406006
    6. ' ' → logprob: -3.1793954372406006
    7. 'n' → logprob: -3.4293954372406006
    8. ' i' → logprob: -3.5543954372406006
    9. ' élément' → logprob: -4.4293951988220215
    10. 's' → logprob: -4.5543951988220215

Token 38: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.30924949049949646
    2. ' ' → logprob: -1.9342495203018188
    3. ' de' → logprob: -2.5592494010925293
    4. 'des' → logprob: -4.184249401092529
    5. 'de' → logprob: -5.184249401092529
    6. ' of' → logprob: -5.309249401092529
    7. '<|end|>' → logprob: -5.434249401092529
    8. 's' → logprob: -5.809249401092529
    9. ' est' → logprob: -5.809249401092529
    10. ' du' → logprob: -6.184249401092529

Token 39: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.541642963886261
    2. ' ' → logprob: -2.541642904281616
    3. 'l' → logprob: -2.666642904281616
    4. 't' → logprob: -2.791642904281616
    5. ' l' → logprob: -2.916642904281616
    6. ' deux' → logprob: -3.541642904281616
    7. 'les' → logprob: -3.541642904281616
    8. ' les' → logprob: -3.791642904281616
    9. ' la' → logprob: -3.916642904281616
    10. 's' → logprob: -4.791643142700195

Token 40: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.37294304370880127
    2. 'les' → logprob: -1.4979430437088013
    3. ' ' → logprob: -2.9979429244995117
    4. '<|end|>' → logprob: -4.497942924499512
    5. 's' → logprob: -4.747942924499512
    6. ' des' → logprob: -5.622942924499512
    7. 'tokens' → logprob: -6.122942924499512
    8. 'l' → logprob: -6.372942924499512
    9. ' l' → logprob: -6.622942924499512
    10. '```' → logprob: -6.747942924499512

Token 41: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.819092869758606
    2. ' nombres' → logprob: -1.194092869758606
    3. ' ' → logprob: -2.0690927505493164
    4. ' éléments' → logprob: -2.3190927505493164
    5. 'ent' → logprob: -4.444092750549316
    6. 'nombre' → logprob: -5.319092750549316
    7. ' ent' → logprob: -5.819092750549316
    8. ' nombre' → logprob: -6.069092750549316
    9. 'n' → logprob: -6.069092750549316
    10. ' é' → logprob: -6.944092750549316

Token 42: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12303344905376434
    2. ' est' → logprob: -2.8730335235595703
    3. ' de' → logprob: -4.12303352355957
    4. 's' → logprob: -4.74803352355957
    5. ' n' → logprob: -5.12303352355957
    6. ' des' → logprob: -5.24803352355957
    7. ' du' → logprob: -5.99803352355957
    8. ' s' → logprob: -6.12303352355957
    9. '*' → logprob: -6.24803352355957
    10. '<|end|>' → logprob: -6.37303352355957

Token 43: ' positif' (ID: 89008)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.6993519067764282
    2. '0' → logprob: -1.8243519067764282
    3. ' positif' → logprob: -1.8243519067764282
    4. ' nul' → logprob: -2.8243517875671387
    5. ' ' → logprob: -2.9493517875671387
    6. ' divisible' → logprob: -4.199351787567139
    7. ' zéro' → logprob: -4.449351787567139
    8. '   ' → logprob: -5.199351787567139
    9. ' negatif' → logprob: -5.324351787567139
    10. ' strict' → logprob: -5.449351787567139

Token 44: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012452436611056328
    2. ' ,' → logprob: -4.637452602386475
    3. ',
' → logprob: -6.512452602386475
    4. '   ' → logprob: -7.387452602386475
    5. ' et' → logprob: -8.512452125549316
    6. ' ' → logprob: -8.512452125549316
    7. ':' → logprob: -9.887452125549316
    8. ' (' → logprob: -10.137452125549316
    9. '  ' → logprob: -10.637452125549316
    10. 'et' → logprob: -10.887452125549316

Token 45: ' nul' (ID: 64435)
  Prédit: ' nul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nul' → logprob: -0.2666284143924713
    2. 'nul' → logprob: -1.516628384590149
    3. 'n' → logprob: -5.391628265380859
    4. ' zéro' → logprob: -5.766628265380859
    5. ' égal' → logprob: -6.016628265380859
    6. 'égal' → logprob: -6.516628265380859
    7. ' n' → logprob: -7.141628265380859
    8. ' zero' → logprob: -7.641628265380859
    9. '0' → logprob: -8.01662826538086
    10. '<|end|>' → logprob: -8.14162826538086

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040627144277095795
    2. ' ,' → logprob: -3.2906272411346436
    3. '   ' → logprob: -7.1656270027160645
    4. ':' → logprob: -7.1656270027160645
    5. ',
' → logprob: -7.7906270027160645
    6. ' ' → logprob: -8.040627479553223
    7. ' :' → logprob: -8.415627479553223
    8. '  ' → logprob: -10.915627479553223
    9. '    ' → logprob: -11.415627479553223
    10. ' ,
' → logprob: -11.540627479553223

Token 47: ' affiche' (ID: 127479)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2986423671245575
    2. '   ' → logprob: -1.6736423969268799
    3. '\n' → logprob: -4.423642158508301
    4. '     
' → logprob: -4.548642158508301
    5. '     ' → logprob: -4.798642158508301
    6. '\' → logprob: -5.173642158508301
    7. ' ' → logprob: -5.173642158508301
    8. '       ' → logprob: -5.298642158508301
    9. ' ' → logprob: -5.298642158508301
    10. ' 
' → logprob: -5.673642158508301

Token 48: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12436441332101822
    2. '"' → logprob: -3.1243643760681152
    3. ' "' → logprob: -3.7493643760681152
    4. ''' → logprob: -4.499364376068115
    5. '0' → logprob: -4.999364376068115
    6. ' '' → logprob: -5.374364376068115
    7. '   ' → logprob: -5.624364376068115
    8. 'r' → logprob: -5.624364376068115
    9. ' ```' → logprob: -5.749364376068115
    10. ' `' → logprob: -6.124364376068115

Token 49: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11907894164323807
    2. ' somme' → logprob: -2.7440788745880127
    3. 's' → logprob: -3.6190788745880127
    4. ' plus' → logprob: -4.744079113006592
    5. '   ' → logprob: -6.369079113006592
    6. ' 
' → logprob: -6.681579113006592
    7. '  ' → logprob: -6.869079113006592
    8. ''' → logprob: -6.994079113006592
    9. ' maximum' → logprob: -7.181579113006592
    10. ' \' → logprob: -7.244079113006592

Token 50: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5848812460899353
    2. '_' → logprob: -1.58488130569458
    3. ' des' → logprob: -2.70988130569458
    4. '\' → logprob: -3.33488130569458
    5. ' \' → logprob: -3.33488130569458
    6. '   ' → logprob: -4.20988130569458
    7. 'des' → logprob: -4.33488130569458
    8. '    ' → logprob: -4.83488130569458
    9. ' _' → logprob: -5.20988130569458
    10. ' )' → logprob: -5.20988130569458

Token 51: ' leurs' (ID: 16348)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.8485267162322998
    2. ' la' → logprob: -1.2235267162322998
    3. 't' → logprob: -1.9735267162322998
    4. ' ' → logprob: -2.8485267162323
    5. ' all' → logprob: -4.098526954650879
    6. 'l' → logprob: -4.098526954650879
    7. ' l' → logprob: -4.223526954650879
    8. ' t' → logprob: -5.098526954650879
    9. 's' → logprob: -5.223526954650879
    10. 'la' → logprob: -5.848526954650879

Token 52: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.6880195140838623
    2. 'élé' → logprob: -1.8130195140838623
    3. 'val' → logprob: -2.0630195140838623
    4. ' ' → logprob: -2.5630195140838623
    5. ' val' → logprob: -3.5630195140838623
    6. 's' → logprob: -3.6880195140838623
    7. ' éléments' → logprob: -4.188019752502441
    8. '<|end|>' → logprob: -4.438019752502441
    9. '+' → logprob: -4.938019752502441
    10. ' absolute' → logprob: -5.063019752502441

Token 53: ' absol' (ID: 7374)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9367685317993164
    2. '\n' → logprob: -1.6867685317993164
    3. '.' → logprob: -2.1867685317993164
    4. '   ' → logprob: -2.5617685317993164
    5. '
' → logprob: -2.8117685317993164
    6. 's' → logprob: -3.6867685317993164
    7. '.
' → logprob: -3.8117685317993164
    8. '  
' → logprob: -3.9367685317993164
    9. '    
' → logprob: -4.061768531799316
    10. ' ' → logprob: -4.311768531799316

Token 54: 'ues' (ID: 1406)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04409606382250786
    2. 'ues' → logprob: -3.294095993041992
    3. 'ue' → logprob: -5.919095993041992
    4. 'l' → logprob: -7.044095993041992
    5. 'es' → logprob: -7.169095993041992
    6. 's' → logprob: -7.669095993041992
    7. 'ol' → logprob: -8.419095993041992
    8. 'e' → logprob: -8.544095993041992
    9. '```' → logprob: -9.169095993041992
    10. 'utes' → logprob: -9.731595993041992

Token 55: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1372461318969727
    2. '\' → logprob: -1.2622461318969727
    3. '\n' → logprob: -1.6372461318969727
    4. '.' → logprob: -2.0122461318969727
    5. '
' → logprob: -4.262246131896973
    6. ',' → logprob: -4.387246131896973
    7. '    
' → logprob: -5.262246131896973
    8. ' ' → logprob: -5.387246131896973
    9. 'def' → logprob: -5.637246131896973
    10. '```' → logprob: -5.637246131896973

Token 56: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18461552262306213
    2. '\n' → logprob: -2.4346156120300293
    3. '\' → logprob: -3.3096156120300293
    4. ' ' → logprob: -4.684615612030029
    5. '  
' → logprob: -4.684615612030029
    6. '"""
' → logprob: -5.309615612030029
    7. '```' → logprob: -5.309615612030029
    8. '    
' → logprob: -5.559615612030029
    9. '
' → logprob: -5.684615612030029
    10. '    ' → logprob: -6.309615612030029

Token 57: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30821987986564636
    2. '   ' → logprob: -1.5582199096679688
    3. '     ' → logprob: -2.9332199096679688
    4. '  ' → logprob: -7.683219909667969
    5. '    ' → logprob: -7.933219909667969
    6. '       ' → logprob: -8.933219909667969
    7. '  
' → logprob: -9.183219909667969
    8. 'def' → logprob: -9.558219909667969
    9. ' ' → logprob: -9.808219909667969
    10. '"""
' → logprob: -10.308219909667969

Token 58: ' Si' (ID: 7832)
  Prédit: 'Sinon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sinon' → logprob: -0.8389842510223389
    2. ' ' → logprob: -1.8389842510223389
    3. 'Si' → logprob: -1.8389842510223389
    4. ' Sinon' → logprob: -1.9639842510223389
    5. ' Si' → logprob: -2.588984251022339
    6. '   ' → logprob: -3.838984251022339
    7. ' S' → logprob: -5.963984489440918
    8. 'S' → logprob: -5.963984489440918
    9. ' sinon' → logprob: -6.338984489440918
    10. 'sin' → logprob: -6.713984489440918

Token 59: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.19782881438732147
    2. ' ' → logprob: -2.322828769683838
    3. 'le' → logprob: -2.572828769683838
    4. 'l' → logprob: -6.697828769683838
    5. ' au' → logprob: -7.197828769683838
    6. ' la' → logprob: -7.447828769683838
    7. '  ' → logprob: -7.822828769683838
    8. ' ' → logprob: -7.947828769683838
    9. ' l' → logprob: -8.072829246520996
    10. ' un' → logprob: -8.572829246520996

Token 60: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.035512059926986694
    2. 'produ' → logprob: -3.7855119705200195
    3. ' product' → logprob: -4.5355119705200195
    4. 'product' → logprob: -8.03551197052002
    5. ' produ' → logprob: -8.28551197052002
    6. 'prod' → logprob: -8.41051197052002
    7. ' ' → logprob: -8.66051197052002
    8. ' prod' → logprob: -8.78551197052002
    9. ' produits' → logprob: -10.28551197052002
    10. 'n' → logprob: -10.66051197052002

Token 61: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19078975915908813
    2. ' des' → logprob: -2.1907896995544434
    3. 'de' → logprob: -3.9407896995544434
    4. ' est' → logprob: -3.9407896995544434
    5. '   ' → logprob: -4.690789699554443
    6. ' ' → logprob: -5.315789699554443
    7. 'des' → logprob: -6.190789699554443
    8. '    ' → logprob: -6.190789699554443
    9. '  ' → logprob: -6.940789699554443
    10. ' of' → logprob: -7.065789699554443

Token 62: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.007552678231149912
    2. 'neg' → logprob: -5.632552623748779
    3. 'n' → logprob: -6.757552623748779
    4. ' negatif' → logprob: -7.007552623748779
    5. ' strict' → logprob: -7.132552623748779
    6. 'strict' → logprob: -7.757552623748779
    7. ' ' → logprob: -8.507553100585938
    8. ' negative' → logprob: -9.382553100585938
    9. ' strictly' → logprob: -9.882553100585938
    10. ' n' → logprob: -10.007553100585938

Token 63: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.030061233788728714
    2. 'ative' → logprob: -3.7800612449645996
    3. 'a' → logprob: -5.5300612449646
    4. '   ' → logprob: -6.7800612449646
    5. 'e' → logprob: -7.7800612449646
    6. 'at' → logprob: -8.155060768127441
    7. ' at' → logprob: -8.405060768127441
    8. '       ' → logprob: -9.280060768127441
    9. ')' → logprob: -10.155060768127441
    10. '-' → logprob: -10.155060768127441

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008996364660561085
    2. ' ,' → logprob: -4.758996486663818
    3. ' ' → logprob: -8.50899600982666
    4. '   ' → logprob: -9.25899600982666
    5. ',
' → logprob: -10.13399600982666
    6. '  ' → logprob: -10.63399600982666
    7. ':' → logprob: -12.63399600982666
    8. 's' → logprob: -13.50899600982666
    9. ',

' → logprob: -13.75899600982666
    10. '<|end|>' → logprob: -13.75899600982666

Token 65: ' affiche' (ID: 127479)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05523158609867096
    2. '    ' → logprob: -3.4302315711975098
    3. ' ' → logprob: -4.30523157119751
    4. ' affiche' → logprob: -6.43023157119751
    5. '  ' → logprob: -6.55523157119751
    6. '   ' → logprob: -6.93023157119751
    7. ' afficher' → logprob: -7.43023157119751
    8. ' retourne' → logprob: -7.55523157119751
    9. '  ' → logprob: -7.80523157119751
    10. ' 
' → logprob: -8.430232048034668

Token 66: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.552750825881958
    2. ' ' → logprob: -1.427750825881958
    3. ' l' → logprob: -2.427750825881958
    4. ' ' → logprob: -3.677750825881958
    5. '-' → logprob: -4.177750587463379
    6. ' le' → logprob: -4.677750587463379
    7. ' -' → logprob: -4.927750587463379
    8. ' the' → logprob: -5.177750587463379
    9. ' leur' → logprob: -5.677750587463379
    10. 'leur' → logprob: -5.677750587463379

Token 67: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.3038749098777771
    2. 's' → logprob: -1.5538749694824219
    3. ' plus' → logprob: -4.053874969482422
    4. ' sum' → logprob: -4.803874969482422
    5. ' ' → logprob: -6.053874969482422
    6. ' produit' → logprob: -6.053874969482422
    7. '-' → logprob: -6.053874969482422
    8. ' difference' → logprob: -6.178874969482422
    9. ' différence' → logprob: -6.178874969482422
    10. ' som' → logprob: -6.303874969482422

Token 68: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.529474675655365
    2. ' des' → logprob: -1.1544747352600098
    3. '   ' → logprob: -3.4044747352600098
    4. '    ' → logprob: -4.15447473526001
    5. ' of' → logprob: -4.15447473526001
    6. 'de' → logprob: -4.65447473526001
    7. 'des' → logprob: -5.02947473526001
    8. ' ' → logprob: -5.40447473526001
    9. '  ' → logprob: -6.77947473526001
    10. 'def' → logprob: -6.90447473526001

Token 69: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.27471208572387695
    2. 'val' → logprob: -2.524712085723877
    3. ' val' → logprob: -3.149712085723877
    4. 'élé' → logprob: -3.774712085723877
    5. ' abs' → logprob: -3.899712085723877
    6. ' éléments' → logprob: -4.524712085723877
    7. ' ' → logprob: -4.774712085723877
    8. ' nombres' → logprob: -4.899712085723877
    9. ' ent' → logprob: -5.212212085723877
    10. ' valeur' → logprob: -5.712212085723877

Token 70: ' absol' (ID: 7374)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5003434419631958
    2. ' absol' → logprob: -1.8753434419631958
    3. ' ' → logprob: -2.7503433227539062
    4. 'abs' → logprob: -2.8753433227539062
    5. 'ab' → logprob: -3.1253433227539062
    6. ' ab' → logprob: -3.3753433227539062
    7. '   ' → logprob: -4.000343322753906
    8. ' absolut' → logprob: -5.250343322753906
    9. ' absolute' → logprob: -5.625343322753906
    10. '  ' → logprob: -5.875343322753906

Token 71: 'ues' (ID: 1406)
  Prédit: 'utes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utes' → logprob: -0.18656931817531586
    2. 'ues' → logprob: -1.811569333076477
    3. 'u' → logprob: -5.8115692138671875
    4. 'ut' → logprob: -6.3115692138671875
    5. 'tes' → logprob: -6.8115692138671875
    6. 'ites' → logprob: -8.561569213867188
    7. 'l' → logprob: -8.686569213867188
    8. 's' → logprob: -9.061569213867188
    9. 'es' → logprob: -9.061569213867188
    10. 'ute' → logprob: -10.436569213867188

Token 72: ' diminu' (ID: 80939)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1973539590835571
    2. '(' → logprob: -1.6973539590835571
    3. '_' → logprob: -2.4473538398742676
    4. ' _' → logprob: -2.5723538398742676
    5. ' -' → logprob: -2.9473538398742676
    6. ' ' → logprob: -3.1973538398742676
    7. ' +' → logprob: -3.6973538398742676
    8. '+' → logprob: -3.9473538398742676
    9. '   ' → logprob: -4.072353839874268
    10. ' de' → logprob: -4.072353839874268

Token 73: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.17676009237766266
    2. 'ée' → logprob: -1.9267600774765015
    3. 'e' → logprob: -4.301760196685791
    4. 'ant' → logprob: -6.176760196685791
    5. 'ées' → logprob: -7.551760196685791
    6. 'ee' → logprob: -9.051759719848633
    7. 't' → logprob: -10.551759719848633
    8. 'è' → logprob: -10.926759719848633
    9. 'es' → logprob: -11.176759719848633
    10. 'd' → logprob: -11.676759719848633

Token 74: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3205369710922241
    2. ' d' → logprob: -1.3205369710922241
    3. ' ' → logprob: -5.570537090301514
    4. 'de' → logprob: -6.445537090301514
    5. ' of' → logprob: -7.570537090301514
    6. ' du' → logprob: -7.820537090301514
    7. 'd' → logprob: -7.945537090301514
    8. ' des' → logprob: -8.695536613464355
    9. '```' → logprob: -9.195536613464355
    10. 'e' → logprob: -9.820536613464355

Token 75: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5299497246742249
    2. '1' → logprob: -1.27994966506958
    3. ' ' → logprob: -2.02994966506958
    4. '```' → logprob: -7.65494966506958
    5. ' la' → logprob: -8.154950141906738
    6. '   ' → logprob: -8.279950141906738
    7. 'min' → logprob: -8.779950141906738
    8. ' l' → logprob: -8.779950141906738
    9. ' min' → logprob: -9.029950141906738
    10. 'l' → logprob: -9.279950141906738

Token 76: ' fois' (ID: 14697)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.227724552154541
    2. ' ' → logprob: -1.352724552154541
    3. '.' → logprob: -2.227724552154541
    4. '*' → logprob: -2.477724552154541
    5. ' \' → logprob: -3.102724552154541
    6. ' *' → logprob: -3.477724552154541
    7. ':' → logprob: -3.602724552154541
    8. '   ' → logprob: -3.727724552154541
    9. 'def' → logprob: -3.977724552154541
    10. '\n' → logprob: -4.102724552154541

Token 77: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10224094986915588
    2. ' la' → logprob: -2.602241039276123
    3. 'le' → logprob: -5.102241039276123
    4. ' the' → logprob: -5.102241039276123
    5. 'l' → logprob: -5.602241039276123
    6. ' ' → logprob: -6.227241039276123
    7. 'la' → logprob: -6.852241039276123
    8. ' min' → logprob: -6.977241039276123
    9. '   ' → logprob: -7.602241039276123
    10. ' le' → logprob: -7.727241039276123

Token 78: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8345301747322083
    2. ' minimum' → logprob: -0.9595301747322083
    3. 'minimum' → logprob: -2.4595301151275635
    4. ' minimal' → logprob: -3.5845301151275635
    5. 'plus' → logprob: -4.084530353546143
    6. 'min' → logprob: -4.084530353546143
    7. ' moindre' → logprob: -4.709530353546143
    8. ' min' → logprob: -5.584530353546143
    9. ' minimale' → logprob: -5.709530353546143
    10. ' *' → logprob: -5.834530353546143

Token 79: ' petite' (ID: 28119)
  Prédit: ' petite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petite' → logprob: -0.2444782704114914
    2. 'pet' → logprob: -1.7444782257080078
    3. ' petit' → logprob: -3.994478225708008
    4. ' grande' → logprob: -4.869478225708008
    5. ' pet' → logprob: -5.744478225708008
    6. ' petites' → logprob: -6.244478225708008
    7. '```' → logprob: -6.369478225708008
    8. ' ' → logprob: -6.619478225708008
    9. '-' → logprob: -6.744478225708008
    10. ' small' → logprob: -6.994478225708008

Token 80: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.07703949511051178
    2. ' val' → logprob: -3.2020394802093506
    3. 'val' → logprob: -4.20203971862793
    4. ' abs' → logprob: -4.70203971862793
    5. ' ' → logprob: -5.57703971862793
    6. '_val' → logprob: -6.07703971862793
    7. '_abs' → logprob: -6.70203971862793
    8. ' des' → logprob: -7.45203971862793
    9. 'abs' → logprob: -7.57703971862793
    10. ' absolute' → logprob: -8.70203971862793

Token 81: ' absol' (ID: 7374)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09454984962940216
    2. ' ' → logprob: -2.9695498943328857
    3. ' _' → logprob: -3.5945498943328857
    4. '_abs' → logprob: -4.594549655914307
    5. ')' → logprob: -8.469550132751465
    6. 's' → logprob: -8.844550132751465
    7. '_absolute' → logprob: -8.969550132751465
    8. ' abs' → logprob: -9.094550132751465
    9. '\' → logprob: -9.344550132751465
    10. 'abs' → logprob: -9.469550132751465

Token 82: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.08023236691951752
    2. 'ute' → logprob: -3.4552323818206787
    3. 'u' → logprob: -3.7052323818206787
    4. 'ol' → logprob: -4.0802321434021
    5. 'utte' → logprob: -7.0802321434021
    6. 'ut' → logprob: -7.3302321434021
    7. 'oute' → logprob: -7.4552321434021
    8. 'ur' → logprob: -7.8302321434021
    9. 'ule' → logprob: -8.330232620239258
    10. 'ale' → logprob: -8.705232620239258

Token 83: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.29655274748802185
    2. '\n' → logprob: -1.7965527772903442
    3. '   ' → logprob: -3.2965526580810547
    4. ' 
' → logprob: -4.546552658081055
    5. '
' → logprob: -5.046552658081055
    6. ' ' → logprob: -5.046552658081055
    7. 'n' → logprob: -5.296552658081055
    8. ':' → logprob: -5.421552658081055
    9. '"' → logprob: -5.671552658081055
    10. '```' → logprob: -5.671552658081055

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9610433578491211
    2. '"""' → logprob: -1.086043357849121
    3. '"' → logprob: -1.336043357849121
    4. ' """' → logprob: -4.961043357849121
    5. '"""
' → logprob: -5.961043357849121
    6. ' ' → logprob: -6.461043357849121
    7. ' """
' → logprob: -6.586043357849121
    8. '\n' → logprob: -7.086043357849121
    9. '""' → logprob: -7.211043357849121
    10. 'n' → logprob: -7.461043357849121

Token 85: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27051877975463867
    2. '"""' → logprob: -2.2705187797546387
    3. '"' → logprob: -2.6455187797546387
    4. '\' → logprob: -3.3955187797546387
    5. '\n' → logprob: -4.020518779754639
    6. ' ' → logprob: -6.145518779754639
    7. '```' → logprob: -6.270518779754639
    8. '"""
' (adapté à ' """
') → logprob: -6.520518779754639
    9. '"\' → logprob: -6.895518779754639
    10. '""' → logprob: -6.895518779754639

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37234658002853394
    2. '\n' → logprob: -1.9973466396331787
    3. '
' → logprob: -2.6223466396331787
    4. '\' → logprob: -3.2473466396331787
    5. 'n' → logprob: -3.6223466396331787
    6. '    
' → logprob: -3.8723466396331787
    7. ' 
' → logprob: -4.9973464012146
    8. '    ' → logprob: -5.7473464012146
    9. ' \' → logprob: -6.1223464012146
    10. ' ' → logprob: -7.2473464012146

Token 87: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3642539978027344
    2. '\n' → logprob: -1.8642539978027344
    3. '   ' → logprob: -2.2392539978027344
    4. '
' → logprob: -4.239253997802734
    5. '\' → logprob: -4.364253997802734
    6. '    
' → logprob: -4.739253997802734
    7. ' 
' → logprob: -6.489253997802734
    8. '    ' → logprob: -6.614253997802734
    9. 'N' → logprob: -7.239253997802734
    10. 'def' → logprob: -7.364253997802734

Token 88: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.507638692855835
    2. ' n' → logprob: -1.257638692855835
    3. '   ' → logprob: -3.132638692855835
    4. ' N' → logprob: -3.382638692855835
    5. 'N' → logprob: -4.007638931274414
    6. ' input' → logprob: -5.382638931274414
    7. '#' → logprob: -5.507638931274414
    8. 'input' → logprob: -5.632638931274414
    9. ' #' → logprob: -6.382638931274414
    10. ' product' → logprob: -7.257638931274414

Token 89: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02388412319123745
    2. 'n' → logprob: -4.023884296417236
    3. '    ' → logprob: -6.398884296417236
    4. ' ' → logprob: -6.648884296417236
    5. ' N' → logprob: -7.148884296417236
    6. ' n' → logprob: -7.398884296417236
    7. '  ' → logprob: -8.023883819580078
    8. '    
' → logprob: -8.023883819580078
    9. 's' → logprob: -8.523883819580078
    10. '```' → logprob: -9.773883819580078

Token 90: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034929968416690826
    2. 'N' → logprob: -3.7849299907684326
    3. ' N' → logprob: -5.1599297523498535
    4. ' n' → logprob: -6.2849297523498535
    5. 'input' → logprob: -6.6599297523498535
    6. ' input' → logprob: -6.6599297523498535
    7. 'nombre' → logprob: -7.2849297523498535
    8. 'int' → logprob: -8.159930229187012
    9. ' ' → logprob: -8.784930229187012
    10. 's' → logprob: -9.159930229187012

Token 91: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.028537392616272
    2. ' N' → logprob: -1.403537392616272
    3. 'n' → logprob: -1.778537392616272
    4. ' n' → logprob: -2.1535372734069824
    5. '   ' → logprob: -2.9035372734069824
    6. '    ' → logprob: -4.028537273406982
    7. 'N' → logprob: -4.153537273406982
    8. '  ' → logprob: -4.903537273406982
    9. ' )' → logprob: -5.278537273406982
    10. ' d' → logprob: -5.653537273406982

Token 92: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05907448008656502
    2. 'élé' → logprob: -3.1840744018554688
    3. 'l' → logprob: -5.059074401855469
    4. 'e' → logprob: -6.059074401855469
    5. '  ' → logprob: -6.559074401855469
    6. '_' → logprob: -6.934074401855469
    7. ' l' → logprob: -7.059074401855469
    8. 's' → logprob: -7.059074401855469
    9. 'é' → logprob: -7.184074401855469
    10. ')' → logprob: -7.809074401855469

Token 93: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.041784606873989105
    2. 'é' → logprob: -3.4167845249176025
    3. ' ' → logprob: -6.041784763336182
    4. 'e' → logprob: -6.166784763336182
    5. ' éléments' → logprob: -7.291784763336182
    6. 'él' → logprob: -7.541784763336182
    7. 'n' → logprob: -7.666784763336182
    8. 'è' → logprob: -7.666784763336182
    9. 'ent' → logprob: -7.791784763336182
    10. '_' → logprob: -8.666784286499023

Token 94: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0005200279993005097
    2. 'ment' → logprob: -7.6255202293396
    3. 'ents' → logprob: -11.625519752502441
    4. 'phants' → logprob: -11.875519752502441
    5. 'm' → logprob: -12.000519752502441
    6. 'nts' → logprob: -12.625519752502441
    7. 'ements' → logprob: -13.375519752502441
    8. 'v' → logprob: -13.500519752502441
    9. 'e' → logprob: -14.375519752502441
    10. 'MENTS' → logprob: -14.500519752502441

Token 95: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4017815589904785
    2. '   ' → logprob: -1.1517815589904785
    3. '    
' → logprob: -4.5267815589904785
    4. ' n' → logprob: -6.4017815589904785
    5. ' 
' → logprob: -7.1517815589904785
    6. '\n' → logprob: -7.2767815589904785
    7. 'N' → logprob: -7.9017815589904785
    8. '
' → logprob: -8.65178108215332
    9. '    ' → logprob: -9.52678108215332
    10. '   
' → logprob: -9.65178108215332

Token 96: ' traiter' (ID: 105852)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03580804914236069
    2. ' lire' → logprob: -3.4108080863952637
    3. 'entr' → logprob: -7.535808086395264
    4. ' l' → logprob: -7.660808086395264
    5. '   ' → logprob: -9.035807609558105
    6. 'aj' → logprob: -9.160807609558105
    7. ' ' → logprob: -9.160807609558105
    8. 'r' → logprob: -9.410807609558105
    9. ' traiter' → logprob: -9.410807609558105
    10. 'input' → logprob: -9.535807609558105

Token 97: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1909572184085846
    2. '   ' → logprob: -2.0659573078155518
    3. '    
' → logprob: -3.6909573078155518
    4. ' 
' → logprob: -4.690957069396973
    5. '\n' → logprob: -5.565957069396973
    6. 'N' → logprob: -5.690957069396973
    7. '
' → logprob: -5.940957069396973
    8. ' n' → logprob: -6.190957069396973
    9. ' N' → logprob: -7.440957069396973
    10. '     
' → logprob: -9.190957069396973

Token 98: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0998634621500969
    2. '   ' → logprob: -2.5998635292053223
    3. '    
' → logprob: -4.599863529205322
    4. ' 
' → logprob: -4.974863529205322
    5. ' n' → logprob: -6.349863529205322
    6. '\n' → logprob: -6.974863529205322
    7. '
' → logprob: -7.974863529205322
    8. 'N' → logprob: -8.099863052368164
    9. '     
' → logprob: -9.474863052368164
    10. '    ' → logprob: -9.474863052368164

Token 99: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10824493318796158
    2. ' n' → logprob: -2.4832448959350586
    3. 'N' (adapté à ' N') → logprob: -4.733244895935059
    4. ' N' → logprob: -5.108244895935059
    5. '   ' → logprob: -5.483244895935059
    6. '    ' → logprob: -10.358244895935059
    7. '	n' → logprob: -10.358244895935059
    8. '    
' → logprob: -10.733244895935059
    9. '\n' → logprob: -11.483244895935059
    10. ' 
' → logprob: -11.858244895935059

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001936485292389989
    2. '=' → logprob: -6.251936435699463
    3. '=int' → logprob: -12.876936912536621
    4. ',' → logprob: -13.001936912536621
    5. '=input' → logprob: -13.626936912536621
    6. ' ' → logprob: -13.876936912536621
    7. ' ,' → logprob: -14.876936912536621
    8. ' =
' → logprob: -15.376936912536621
    9. ' ' → logprob: -16.251935958862305
    10. '   ' → logprob: -16.376935958862305

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003178071230649948
    2. 'int' → logprob: -5.753178119659424
    3. ' ' → logprob: -14.878177642822266
    4. '=int' → logprob: -17.128177642822266
    5. '	int' → logprob: -18.253177642822266
    6. '(int' → logprob: -19.003177642822266
    7. '[int' → logprob: -19.003177642822266
    8. ' ' → logprob: -19.128177642822266
    9. '<int' → logprob: -19.503177642822266
    10. '   ' → logprob: -20.003177642822266

Token 102: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006388116744346917
    2. '(' → logprob: -7.500638961791992
    3. 'input' → logprob: -9.375638961791992
    4. ' (' → logprob: -14.250638961791992
    5. ' input' → logprob: -15.250638961791992
    6. '=input' → logprob: -16.250638961791992
    7. '()' → logprob: -18.000638961791992
    8. '	input' → logprob: -18.750638961791992
    9. '(int' → logprob: -19.000638961791992
    10. ' ' → logprob: -19.000638961791992

Token 103: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002837918931618333
    2. '()' → logprob: -5.877838134765625
    3. ')' → logprob: -10.877838134765625
    4. ' ())' → logprob: -12.002838134765625
    5. '()))' → logprob: -12.377838134765625
    6. '().' → logprob: -13.377838134765625
    7. '())
' → logprob: -14.502838134765625
    8. '(' → logprob: -14.502838134765625
    9. '();)' → logprob: -14.627838134765625
    10. '());' → logprob: -15.627838134765625

Token 104: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016297345981001854
    2. 's' → logprob: -5.266297340393066
    3. '    ' → logprob: -5.391297340393066
    4. '    
' → logprob: -6.141297340393066
    5. 'n' → logprob: -7.141297340393066
    6. '<|end|>' → logprob: -7.266297340393066
    7. ' ' → logprob: -7.391297340393066
    8. 'values' → logprob: -7.891297340393066
    9. 'elements' → logprob: -8.016297340393066
    10. '
' → logprob: -8.141297340393066

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012812166474759579
    2. ' lst' → logprob: -5.76281213760376
    3. 'lst' → logprob: -6.01281213760376
    4. ' values' → logprob: -6.51281213760376
    5. ' numbers' → logprob: -6.51281213760376
    6. 'values' → logprob: -6.63781213760376
    7. 'numbers' → logprob: -7.13781213760376
    8. '    
' → logprob: -7.63781213760376
    9. 'elements' → logprob: -8.387812614440918
    10. ' elements' → logprob: -8.512812614440918

Token 106: ' #' (ID: 1069)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2844049036502838
    2. 'numbers' → logprob: -1.7844048738479614
    3. 'lst' → logprob: -3.784404993057251
    4. 'nums' → logprob: -3.909404993057251
    5. 'elements' → logprob: -4.284404754638672
    6. 'arr' → logprob: -4.534404754638672
    7. 'vals' → logprob: -4.784404754638672
    8. 'val' → logprob: -5.909404754638672
    9. '#' (adapté à ' #') → logprob: -8.034404754638672
    10. 'ent' → logprob: -8.534404754638672

Token 107: ' Lecture' (ID: 106534)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.8763056397438049
    2. 'elements' → logprob: -1.7513055801391602
    3. ' values' → logprob: -1.8763055801391602
    4. 'lst' → logprob: -2.87630558013916
    5. ' elements' → logprob: -3.00130558013916
    6. ' numbers' → logprob: -3.12630558013916
    7. 'numbers' → logprob: -3.12630558013916
    8. 'arr' → logprob: -4.12630558013916
    9. 'val' → logprob: -4.37630558013916
    10. ' lst' → logprob: -4.62630558013916

Token 108: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6827422976493835
    2. ' des' → logprob: -0.8077422976493835
    3. '   ' → logprob: -3.5577423572540283
    4. ' de' → logprob: -4.307742118835449
    5. 'des' → logprob: -6.307742118835449
    6. ' la' → logprob: -6.557742118835449
    7. 's' → logprob: -6.807742118835449
    8. '[]' → logprob: -7.432742118835449
    9. '(' → logprob: -7.932742118835449
    10. '    ' → logprob: -8.05774211883545

Token 109: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0026169205084443092
    2. ' les' → logprob: -7.002616882324219
    3. ' lst' → logprob: -7.252616882324219
    4. 's' → logprob: -8.002616882324219
    5. 'la' → logprob: -8.877616882324219
    6. ' ' → logprob: -9.252616882324219
    7. ' l' → logprob: -9.502616882324219
    8. ' list' → logprob: -9.502616882324219
    9. ' liste' → logprob: -10.002616882324219
    10. 'lst' → logprob: -10.252616882324219

Token 110: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.15456168353557587
    2. 'liste' → logprob: -2.029561758041382
    3. ' list' → logprob: -5.904561519622803
    4. 'list' → logprob: -6.404561519622803
    5. ' lst' → logprob: -6.654561519622803
    6. 'lst' → logprob: -6.654561519622803
    7. 's' → logprob: -7.029561519622803
    8. 'values' → logprob: -7.279561519622803
    9. ' valeurs' → logprob: -7.654561519622803
    10. ' listes' → logprob: -7.654561519622803

Token 111: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7454506158828735
    2. ' numbers' → logprob: -1.6204506158828735
    3. ' lst' → logprob: -1.9954506158828735
    4. 'numbers' → logprob: -3.245450496673584
    5. ' integers' → logprob: -3.495450496673584
    6. ' values' → logprob: -3.495450496673584
    7. 'values' → logprob: -4.120450496673584
    8. ' elements' → logprob: -4.620450496673584
    9. 'lst' → logprob: -4.870450496673584
    10. ' a' → logprob: -5.120450496673584

Token 112: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.8191690444946289
    2. ' valeurs' → logprob: -1.569169044494629
    3. ' ent' → logprob: -1.694169044494629
    4. 'val' → logprob: -2.194169044494629
    5. 'ent' → logprob: -4.194169044494629
    6. 'n' → logprob: -4.319169044494629
    7. ' numbers' → logprob: -5.069169044494629
    8. 'values' → logprob: -5.444169044494629
    9. 'numbers' → logprob: -5.569169044494629
    10. ' val' → logprob: -5.819169044494629

Token 113: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5295606255531311
    2. 't' → logprob: -0.9045606255531311
    3. 'tiers' → logprob: -6.154560565948486
    4. 'ti' → logprob: -6.654560565948486
    5. '   ' → logprob: -7.404560565948486
    6. 'tr' → logprob: -7.529560565948486
    7. 'ts' → logprob: -8.279561042785645
    8. 'tre' → logprob: -8.654561042785645
    9. 'ents' → logprob: -8.779561042785645
    10. 'teurs' → logprob: -9.029561042785645

Token 114: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11687371879816055
    2. '    
' → logprob: -3.4918737411499023
    3. ' lst' → logprob: -3.6168737411499023
    4. ' numbers' → logprob: -3.9918737411499023
    5. 'numbers' → logprob: -4.741873741149902
    6. 'lst' → logprob: -5.366873741149902
    7. ' values' → logprob: -5.491873741149902
    8. ' a' → logprob: -5.991873741149902
    9. ' elements' → logprob: -6.241873741149902
    10. 'values' → logprob: -6.366873741149902

Token 115: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09270941466093063
    2. 'input' → logprob: -2.4677093029022217
    3. ' la' → logprob: -6.217709541320801
    4. ' l' → logprob: -7.217709541320801
    5. '(input' → logprob: -7.842709541320801
    6. ' ' → logprob: -8.5927095413208
    7. 'l' → logprob: -8.9677095413208
    8. '   ' → logprob: -8.9677095413208
    9. '=input' → logprob: -9.8427095413208
    10. ' une' → logprob: -10.0927095413208

Token 116: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.058024413883686066
    2. ' input' → logprob: -3.0580244064331055
    3. '   ' → logprob: -5.1830244064331055
    4. ''entrée' → logprob: -6.1830244064331055
    5. 'entrée' → logprob: -8.058024406433105
    6. '```' → logprob: -8.058024406433105
    7. 'a' → logprob: -8.058024406433105
    8. 'e' → logprob: -8.433024406433105
    9. 'put' → logprob: -8.933024406433105
    10. '=input' → logprob: -9.058024406433105

Token 117: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014288433827459812
    2. ' standard' → logprob: -5.014288425445557
    3. '   ' → logprob: -5.764288425445557
    4. 'standard' → logprob: -6.639288425445557
    5. '().' → logprob: -6.889288425445557
    6. '()
' → logprob: -7.014288425445557
    7. '    
' → logprob: -8.264288902282715
    8. '())' → logprob: -8.764288902282715
    9. ' ' → logprob: -9.014288902282715
    10. ')' → logprob: -9.014288902282715

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011141903698444366
    2. ' lst' → logprob: -6.011141777038574
    3. '    
' → logprob: -6.636141777038574
    4. 'lst' → logprob: -7.011141777038574
    5. 'elements' → logprob: -7.136141777038574
    6. 'liste' → logprob: -7.511141777038574
    7. 'values' → logprob: -7.511141777038574
    8. ' elements' → logprob: -7.511141777038574
    9. 'numbers' → logprob: -7.636141777038574
    10. 's' → logprob: -7.636141777038574

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010087528266012669
    2. 'lst' → logprob: -5.885087490081787
    3. ' lst' → logprob: -6.135087490081787
    4. 'numbers' → logprob: -6.885087490081787
    5. '    
' → logprob: -7.135087490081787
    6. ' numbers' → logprob: -7.510087490081787
    7. 'values' → logprob: -7.635087490081787
    8. 'liste' → logprob: -7.635087490081787
    9. 'elements' → logprob: -8.135087966918945
    10. ' values' → logprob: -8.385087966918945

Token 120: ' A' (ID: 355)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.32935887575149536
    2. 'numbers' → logprob: -2.2043588161468506
    3. ' values' → logprob: -2.7043588161468506
    4. ' arr' → logprob: -3.8293588161468506
    5. 'values' → logprob: -3.8293588161468506
    6. ' lst' → logprob: -3.8293588161468506
    7. 'lst' → logprob: -4.45435905456543
    8. 'arr' → logprob: -4.45435905456543
    9. 'nums' → logprob: -5.45435905456543
    10. ' elements' → logprob: -5.57935905456543

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975349873304367
    2. '=' → logprob: -3.5297534465789795
    3. 's' → logprob: -13.529753684997559
    4. '[' → logprob: -15.279753684997559
    5. ' ' → logprob: -15.529753684997559
    6. '_' → logprob: -15.529753684997559
    7. ' ' → logprob: -15.779753684997559
    8. ')' → logprob: -15.904753684997559
    9. '[]' → logprob: -15.904753684997559
    10. ' =[' → logprob: -16.029752731323242

Token 122: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07986373454332352
    2. 'list' → logprob: -2.5798637866973877
    3. ' [' → logprob: -7.579863548278809
    4. '[list' → logprob: -8.204863548278809
    5. '[' → logprob: -8.579863548278809
    6. '[input' → logprob: -14.329863548278809
    7. '=list' → logprob: -15.579863548278809
    8. ' ' → logprob: -15.579863548278809
    9. '[]' → logprob: -15.704863548278809
    10. '[List' → logprob: -15.829863548278809

Token 123: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14889711141586304
    2. '(input' → logprob: -2.648897171020508
    3. '(map' → logprob: -2.898897171020508
    4. '(int' → logprob: -4.398897171020508
    5. '(eval' → logprob: -9.648897171020508
    6. '()' → logprob: -9.773897171020508
    7. '(
' → logprob: -10.148897171020508
    8. 'map' → logprob: -10.898897171020508
    9. '(

' → logprob: -11.273897171020508
    10. ' (' → logprob: -11.523897171020508

Token 124: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0023958671372383833
    2. '(' → logprob: -6.2523956298828125
    3. 'int' → logprob: -8.127395629882812
    4. '(input' → logprob: -9.252395629882812
    5. ' int' → logprob: -10.502395629882812
    6. '<int' → logprob: -11.127395629882812
    7. '(
' → logprob: -11.627395629882812
    8. ' (' → logprob: -11.877395629882812
    9. '=int' → logprob: -12.127395629882812
    10. '(lambda' → logprob: -12.252395629882812

Token 125: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3472929298877716
    2. ',input' → logprob: -1.4722929000854492
    3. ',' → logprob: -2.972292900085449
    4. 'input' → logprob: -4.472292900085449
    5. '(' → logprob: -7.222292900085449
    6. ' input' → logprob: -7.847292900085449
    7. ' ,' → logprob: -9.09729290008545
    8. ' (' → logprob: -9.22229290008545
    9. '   ' → logprob: -10.22229290008545
    10. '=input' → logprob: -11.47229290008545

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02325211651623249
    2. ' input' → logprob: -3.773252010345459
    3. '(input' → logprob: -12.398252487182617
    4. ',input' → logprob: -13.398252487182617
    5. ' ' → logprob: -14.648252487182617
    6. '   ' → logprob: -15.273252487182617
    7. '	input' → logprob: -16.023252487182617
    8. '=input' → logprob: -16.398252487182617
    9. '<input' → logprob: -17.398252487182617
    10. '```' → logprob: -17.648252487182617

Token 127: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014084660506341606
    2. '()' → logprob: -8.875141143798828
    3. '()
' → logprob: -15.250141143798828
    4. ' ().' → logprob: -15.250141143798828
    5. ')' → logprob: -15.750141143798828
    6. '(' → logprob: -16.375141143798828
    7. '()))' → logprob: -16.500141143798828
    8. '.' → logprob: -17.000141143798828
    9. '())' → logprob: -17.125141143798828
    10. '.split' → logprob: -17.625141143798828

Token 128: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004080897197127342
    2. 'strip' → logprob: -5.504080772399902
    3. 'rstrip' → logprob: -13.004080772399902
    4. ' split' → logprob: -16.00408172607422
    5. '(split' → logprob: -16.75408172607422
    6. 'spl' → logprob: -17.37908172607422
    7. 'read' → logprob: -20.50408172607422
    8. ' strip' → logprob: -21.00408172607422
    9. '_split' → logprob: -21.75408172607422
    10. 's' → logprob: -22.12908172607422

Token 129: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.321699857711792
    2. '()' → logprob: -1.321699857711792
    3. '))' → logprob: -5.321700096130371
    4. '())' → logprob: -5.821700096130371
    5. '())))' → logprob: -7.946700096130371
    6. ')' → logprob: -9.446700096130371
    7. '(' → logprob: -9.696700096130371
    8. ')))' → logprob: -10.071700096130371
    9. '()))
' → logprob: -12.196700096130371
    10. '()));' → logprob: -12.321700096130371

Token 130: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2668518126010895
    2. '    
' → logprob: -1.641851782798767
    3. '
' → logprob: -3.6418519020080566
    4. 'product' → logprob: -4.891851902008057
    5. '   
' → logprob: -6.516851902008057
    6. ' 
' → logprob: -6.766851902008057
    7. ' product' → logprob: -7.141851902008057
    8. '  
' → logprob: -7.391851902008057
    9. '    ' → logprob: -7.641851902008057
    10. '     
' → logprob: -7.641851902008057

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12370572984218597
    2. 'product' → logprob: -2.2487056255340576
    3. 'prod' → logprob: -5.373705863952637
    4. ' product' → logprob: -6.123705863952637
    5. 'produ' → logprob: -6.623705863952637
    6. ' produit' → logprob: -7.123705863952637
    7. '    
' → logprob: -8.248705863952637
    8. 'result' → logprob: -8.373705863952637
    9. 'posit' → logprob: -8.498705863952637
    10. 'p' → logprob: -8.498705863952637

Token 132: ' #' (ID: 1069)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.1520257294178009
    2. 'prod' → logprob: -2.0270256996154785
    3. 'produ' → logprob: -4.7770256996154785
    4. 'if' → logprob: -8.152026176452637
    5. 'sign' → logprob: -8.902026176452637
    6. '#' (adapté à ' #') → logprob: -9.277026176452637
    7. '   ' → logprob: -9.527026176452637
    8. 'posit' → logprob: -10.027026176452637
    9. 'pro' → logprob: -10.277026176452637
    10. 'p' → logprob: -10.777026176452637

Token 133: ' Initial' (ID: 9209)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.09028132259845734
    2. 'prod' → logprob: -2.9652812480926514
    3. 'produ' → logprob: -4.0902814865112305
    4. ' product' → logprob: -4.4652814865112305
    5. ' produit' → logprob: -5.9652814865112305
    6. '#' → logprob: -6.7152814865112305
    7. ' prod' → logprob: -6.8402814865112305
    8. 'sign' → logprob: -7.4652814865112305
    9. 'if' → logprob: -8.34028148651123
    10. 'from' → logprob: -8.84028148651123

Token 134: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.7768983840942383
    2. 'isation' → logprob: -1.4018983840942383
    3. 'iser' → logprob: -2.1518983840942383
    4. 'ize' → logprob: -2.4018983840942383
    5. 'izing' → logprob: -4.026898384094238
    6. '_' → logprob: -4.151898384094238
    7. '_product' → logprob: -4.651898384094238
    8. 'izer' → logprob: -4.651898384094238
    9. 'product' → logprob: -5.276898384094238
    10. '   ' → logprob: -5.401898384094238

Token 135: ' du' (ID: 1462)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.20046475529670715
    2. '   ' → logprob: -2.5754647254943848
    3. 'prod' → logprob: -3.0754647254943848
    4. ' product' → logprob: -3.2004647254943848
    5. 'total' → logprob: -5.700464725494385
    6. ' prod' → logprob: -5.825464725494385
    7. ' de' → logprob: -6.325464725494385
    8. ' du' → logprob: -6.450464725494385
    9. 'sum' → logprob: -6.450464725494385
    10. ' produit' → logprob: -6.575464725494385

Token 136: ' signe' (ID: 87345)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.10703478753566742
    2. 'produ' → logprob: -2.607034683227539
    3. 'prod' → logprob: -3.607034683227539
    4. 'pro' → logprob: -8.857034683227539
    5. ' produit' → logprob: -9.232034683227539
    6. 's' → logprob: -9.732034683227539
    7. 'producto' → logprob: -10.232034683227539
    8. 'result' → logprob: -10.357034683227539
    9. 'produce' → logprob: -10.357034683227539
    10. 'produto' → logprob: -10.482034683227539

Token 137: ' du' (ID: 1462)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.9724260568618774
    2. 'product' → logprob: -0.9724260568618774
    3. 'sign' → logprob: -1.8474260568618774
    4. ' sign' → logprob: -3.222425937652588
    5. 'prod' → logprob: -4.097425937652588
    6. '_sign' → logprob: -4.722425937652588
    7. '_product' → logprob: -4.847425937652588
    8. 's' → logprob: -5.722425937652588
    9. ' signe' → logprob: -5.722425937652588
    10. ' =' → logprob: -6.597425937652588

Token 138: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.4172779619693756
    2. 'product' → logprob: -1.2922779321670532
    3. ' produit' → logprob: -2.9172780513763428
    4. 'prod' → logprob: -4.542277812957764
    5. ' product' → logprob: -7.042277812957764
    6. 'pro' → logprob: -7.542277812957764
    7. 'produkt' → logprob: -9.542278289794922
    8. 'produto' → logprob: -9.667278289794922
    9. 'producto' → logprob: -9.917278289794922
    10. 'p' → logprob: -10.042278289794922

Token 139: ' (' (ID: 350)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.08571650087833405
    2. 'product' → logprob: -2.710716485977173
    3. 'prod' → logprob: -5.210716724395752
    4. ' sign' → logprob: -5.460716724395752
    5. '   ' → logprob: -5.585716724395752
    6. 's' → logprob: -7.210716724395752
    7. ' product' → logprob: -7.335716724395752
    8. ' signe' → logprob: -8.085716247558594
    9. 'produ' → logprob: -8.960716247558594
    10. '_sign' → logprob: -9.085716247558594

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27784866094589233
    2. 'sign' → logprob: -1.902848720550537
    3. 'product' → logprob: -2.902848720550537
    4. ' product' → logprob: -4.652848720550537
    5. ' ' → logprob: -4.777848720550537
    6. 'positive' → logprob: -5.152848720550537
    7. 'prod' → logprob: -5.402848720550537
    8. ')' → logprob: -5.652848720550537
    9. ' sign' → logprob: -6.277848720550537
    10. 's' → logprob: -6.402848720550537

Token 141: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00222780997864902
    2. ' )' → logprob: -6.252227783203125
    3. '   ' → logprob: -8.627227783203125
    4. ',' → logprob: -9.627227783203125
    5. ')
' → logprob: -10.877227783203125
    6. '),' → logprob: -11.752227783203125
    7. 'def' → logprob: -12.002227783203125
    8. 'for' → logprob: -12.627227783203125
    9. '*' → logprob: -13.127227783203125
    10. ' ' → logprob: -13.252227783203125

Token 142: ' positif' (ID: 89008)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.20306991040706635
    2. 'positive' → logprob: -2.4530699253082275
    3. ' positif' → logprob: -2.5780699253082275
    4. 'pos' → logprob: -4.578069686889648
    5. 'positivo' → logprob: -5.828069686889648
    6. '+' → logprob: -5.953069686889648
    7. 'le' → logprob: -6.453069686889648
    8. '1' → logprob: -6.703069686889648
    9. ' positive' → logprob: -6.953069686889648
    10. ' le' → logprob: -7.578069686889648

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006151681300252676
    2. ' ou' → logprob: -5.7561516761779785
    3. ' ,' → logprob: -6.5061516761779785
    4. ')' → logprob: -7.5061516761779785
    5. 'ou' → logprob: -7.6311516761779785
    6. ',
' → logprob: -8.631152153015137
    7. '),' → logprob: -8.881152153015137
    8. ' or' → logprob: -9.756152153015137
    9. 'or' → logprob: -10.881152153015137
    10. ',)' → logprob: -11.506152153015137

Token 144: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13378696143627167
    2. ' -' → logprob: -2.633786916732788
    3. '0' → logprob: -3.758786916732788
    4. '1' → logprob: -4.008787155151367
    5. ')' → logprob: -5.633787155151367
    6. '   ' → logprob: -5.758787155151367
    7. ' ' → logprob: -6.508787155151367
    8. 'prod' → logprob: -7.008787155151367
    9. 'product' → logprob: -7.883787155151367
    10. '  ' → logprob: -8.258787155151367

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '=' → logprob: -14.625018119812012
    4. ')' → logprob: -15.125018119812012
    5. '0' → logprob: -16.250017166137695
    6. '+' → logprob: -16.500017166137695
    7. 'def' → logprob: -16.875017166137695
    8. '   ' → logprob: -17.000017166137695
    9. '<|end|>' → logprob: -17.000017166137695
    10. '```' → logprob: -17.500017166137695

Token 146: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6360765099525452
    2. ' pour' → logprob: -1.3860764503479004
    3. 'pour' → logprob: -1.7610764503479004
    4. ' for' → logprob: -3.7610764503479004
    5. 'for' → logprob: -4.0110764503479
    6. ',' → logprob: -5.5110764503479
    7. ' )' → logprob: -6.2610764503479
    8. ' ou' → logprob: -7.6360764503479
    9. '<|end|>' → logprob: -8.386076927185059
    10. ' ' → logprob: -8.511076927185059

Token 147: ' nég' (ID: 55805)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011999527923762798
    2. 'negative' → logprob: -5.386999607086182
    3. 'neg' → logprob: -5.511999607086182
    4. ' nég' → logprob: -6.386999607086182
    5. '-' → logprob: -7.511999607086182
    6. ' ' → logprob: -7.636999607086182
    7. ' negatif' → logprob: -8.136999130249023
    8. ' negative' → logprob: -9.386999130249023
    9. 'posit' → logprob: -10.261999130249023
    10. '0' → logprob: -10.261999130249023

Token 148: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.01213815063238144
    2. 'ative' → logprob: -4.512138366699219
    3. ')' → logprob: -7.262138366699219
    4. '1' → logprob: -8.387138366699219
    5. 'itif' → logprob: -9.262138366699219
    6. '   ' → logprob: -11.387138366699219
    7. '```' → logprob: -11.637138366699219
    8. 'def' → logprob: -11.762138366699219
    9. '`)' → logprob: -12.262138366699219
    10. 'ativ' → logprob: -12.387138366699219

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001118903630413115
    2. ',' → logprob: -7.376119136810303
    3. ' )' → logprob: -7.751119136810303
    4. '),' → logprob: -10.626118659973145
    5. 'product' → logprob: -11.751118659973145
    6. 's' → logprob: -12.501118659973145
    7. 'prod' → logprob: -12.501118659973145
    8. '*)' → logprob: -13.001118659973145
    9. 'multip' → logprob: -13.126118659973145
    10. 'sign' → logprob: -13.376118659973145

Token 150: '   ' (ID: 271)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.19454360008239746
    2. 'product' → logprob: -2.3195436000823975
    3. 's' → logprob: -3.8195436000823975
    4. ' sign' → logprob: -3.9445436000823975
    5. ' signe' → logprob: -4.069543838500977
    6. ' product' → logprob: -4.819543838500977
    7. '   ' → logprob: -5.069543838500977
    8. 'prod' → logprob: -5.569543838500977
    9. ' prod' → logprob: -8.319543838500977
    10. ' signo' → logprob: -8.569543838500977

Token 151: ' s' (ID: 265)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.07558190822601318
    2. 'product' → logprob: -2.8255820274353027
    3. ' sign' → logprob: -4.700582027435303
    4. ' product' → logprob: -6.450582027435303
    5. ' signe' → logprob: -6.575582027435303
    6. 'prod' → logprob: -6.825582027435303
    7. 's' (adapté à ' s') → logprob: -8.450581550598145
    8. 'sg' → logprob: -9.325581550598145
    9. ' prod' → logprob: -11.575581550598145
    10. '   ' → logprob: -11.575581550598145

Token 152: ' =' (ID: 314)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.10476043820381165
    2. 'ign' → logprob: -2.3547604084014893
    3. 'gn' → logprob: -5.854760646820068
    4. 'i' → logprob: -8.10476016998291
    5. '_sign' → logprob: -8.22976016998291
    6. 'ig' → logprob: -8.35476016998291
    7. 'sign' → logprob: -8.60476016998291
    8. ' =' → logprob: -8.72976016998291
    9. 's' → logprob: -9.10476016998291
    10. '=' → logprob: -9.60476016998291

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.125261306762695
    4. '  ' → logprob: -18.125261306762695
    5. '```' → logprob: -19.875261306762695
    6. '+' → logprob: -20.250261306762695
    7. '۱' → logprob: -21.375261306762695
    8. '=' → logprob: -21.375261306762695
    9. '`' → logprob: -21.500261306762695
    10. '<|end|>' → logprob: -21.750261306762695

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.75
    4. '   ' → logprob: -21.125
    5. '۱' → logprob: -21.25
    6. '`' → logprob: -21.25
    7. '１' → logprob: -21.375
    8. '-' → logprob: -21.75
    9. '=' → logprob: -22.1875
    10. '१' → logprob: -22.1875

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4984686076641083
    2. '    
' → logprob: -1.4984686374664307
    3. 'for' → logprob: -2.3734686374664307
    4. ' for' → logprob: -3.9984686374664307
    5. ' 
' → logprob: -4.123468399047852
    6. '   ' → logprob: -4.498468399047852
    7. '   
' → logprob: -4.748468399047852
    8. '  
' → logprob: -4.998468399047852
    9. '<|end|>' → logprob: -4.998468399047852
    10. '\n' → logprob: -6.248468399047852

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8222554326057434
    2. ' for' → logprob: -1.3222553730010986
    3. '    
' → logprob: -2.4472553730010986
    4. '
' → logprob: -2.5722553730010986
    5. 'for' → logprob: -2.8222553730010986
    6. ' 
' → logprob: -3.5722553730010986
    7. ' ' → logprob: -4.322255611419678
    8. '<|end|>' → logprob: -4.572255611419678
    9. '  
' → logprob: -4.697255611419678
    10. '    ' → logprob: -5.947255611419678

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7349074482917786
    2. 'for' (adapté à ' for') → logprob: -0.8599074482917786
    3. 'abs' → logprob: -3.109907388687134
    4. '   ' → logprob: -3.734907388687134
    5. 'sum' → logprob: -4.109907627105713
    6. 'total' → logprob: -5.109907627105713
    7. ' abs' → logprob: -6.734907627105713
    8. ' total' → logprob: -6.859907627105713
    9. 'min' → logprob: -6.859907627105713
    10. ' sum' → logprob: -7.359907627105713

Token 158: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5146716833114624
    2. 'a' → logprob: -1.2646716833114624
    3. ' x' → logprob: -2.264671802520752
    4. ' a' → logprob: -4.139671802520752
    5. 'v' → logprob: -9.639671325683594
    6. 'num' → logprob: -10.264671325683594
    7. 'val' → logprob: -10.639671325683594
    8. 'value' → logprob: -11.264671325683594
    9. ' v' → logprob: -11.389671325683594
    10. ' val' → logprob: -11.639671325683594

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013310110196471214
    2. 'in' → logprob: -4.388309955596924
    3. ' ' → logprob: -7.513309955596924
    4. 'A' → logprob: -9.138310432434082
    5. 'n' → logprob: -9.513310432434082
    6. 's' → logprob: -10.763310432434082
    7. ',' → logprob: -11.138310432434082
    8. '   ' → logprob: -12.013310432434082
    9. ' A' → logprob: -12.388310432434082
    10. '_' → logprob: -12.388310432434082

Token 160: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.027547188103199005
    2. 'range' → logprob: -3.7775471210479736
    3. ' range' → logprob: -6.027547359466553
    4. ' A' → logprob: -6.277547359466553
    5. ' ' → logprob: -14.277546882629395
    6. '   ' → logprob: -14.527546882629395
    7. 'a' → logprob: -15.152546882629395
    8. '  ' → logprob: -15.402546882629395
    9. 'Range' → logprob: -15.527546882629395
    10. ')' → logprob: -15.840046882629395

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043829824426211417
    2. ':
' → logprob: -8.375438690185547
    3. '):' → logprob: -9.000438690185547
    4. ' :' → logprob: -9.500438690185547
    5. ':**' → logprob: -12.750438690185547
    6. 's' → logprob: -13.875438690185547
    7. ')' → logprob: -14.000438690185547
    8. '<|end|>' → logprob: -14.125438690185547
    9. '):
' → logprob: -14.500438690185547
    10. '():' → logprob: -14.500438690185547

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003264338243752718
    2. ' if' → logprob: -6.003264427185059
    3. '<|end|>' → logprob: -7.878264427185059
    4. 'if' → logprob: -8.878264427185059
    5. '   ' → logprob: -9.378264427185059
    6. '
' → logprob: -9.753264427185059
    7. '        
' → logprob: -10.378264427185059
    8. '    
' → logprob: -11.253264427185059
    9. '    ' → logprob: -11.253264427185059
    10. ' 
' → logprob: -11.378264427185059

Token 163: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1337844580411911
    2. 'if' → logprob: -2.633784532546997
    3. ' s' → logprob: -3.508784532546997
    4. '       ' → logprob: -4.008784294128418
    5. 's' → logprob: -5.258784294128418
    6. '   ' → logprob: -9.883784294128418
    7. '        ' → logprob: -10.883784294128418
    8. '           ' → logprob: -10.883784294128418
    9. '    ' → logprob: -11.133784294128418
    10. ' ' → logprob: -12.133784294128418

Token 164: ' In' (ID: 730)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3875364363193512
    2. ' if' → logprob: -1.1375364065170288
    3. '   ' → logprob: -8.38753604888916
    4. 's' → logprob: -8.88753604888916
    5. ' s' → logprob: -8.88753604888916
    6. '       ' → logprob: -9.01253604888916
    7. '    ' → logprob: -11.76253604888916
    8. 'If' → logprob: -11.76253604888916
    9. ' ' → logprob: -12.38753604888916
    10. '
' → logprob: -12.51253604888916

Token 165: 'vers' (ID: 3674)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5276048183441162
    2. 'f' → logprob: -1.4026048183441162
    3. 'if' → logprob: -2.027604818344116
    4. ' if' → logprob: -4.652605056762695
    5. '    ' → logprob: -4.902605056762695
    6. 's' → logprob: -5.902605056762695
    7. '  ' → logprob: -5.902605056762695
    8. '       ' → logprob: -6.277605056762695
    9. '     ' → logprob: -7.152605056762695
    10. 'def' → logprob: -7.152605056762695

Token 166: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03195519372820854
    2. '   ' → logprob: -3.7819552421569824
    3. 'e' → logprob: -5.281955242156982
    4. 'if' → logprob: -5.906955242156982
    5. '       ' → logprob: -8.531954765319824
    6. 's' → logprob: -9.156954765319824
    7. 'ter' → logprob: -9.281954765319824
    8. 'ection' → logprob: -9.281954765319824
    9. 'ect' → logprob: -9.781954765319824
    10. 't' → logprob: -10.656954765319824

Token 167: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3545264005661011
    2. ' if' → logprob: -1.604526400566101
    3. 's' → logprob: -2.8545265197753906
    4. 'if' → logprob: -4.104526519775391
    5. ' si' → logprob: -4.229526519775391
    6. '   ' → logprob: -5.729526519775391
    7. ' le' → logprob: -6.354526519775391
    8. '    ' → logprob: -6.604526519775391
    9. ' ' → logprob: -7.229526519775391
    10. '       ' → logprob: -7.729526519775391

Token 168: ' signe' (ID: 87345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038268573582172394
    2. 'sign' → logprob: -3.663268566131592
    3. 'if' → logprob: -4.788268566131592
    4. ' signe' → logprob: -6.788268566131592
    5. 'si' → logprob: -6.913268566131592
    6. '   ' → logprob: -7.038268566131592
    7. ' s' → logprob: -8.41326904296875
    8. ' if' → logprob: -8.66326904296875
    9. '       ' → logprob: -10.78826904296875
    10. '1' → logprob: -10.78826904296875

Token 169: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3639931380748749
    2. 'if' → logprob: -1.4889931678771973
    3. 's' → logprob: -2.8639931678771973
    4. ' s' → logprob: -4.113993167877197
    5. '   ' → logprob: -5.863993167877197
    6. '       ' → logprob: -6.363993167877197
    7. ' si' → logprob: -7.238993167877197
    8. 'si' → logprob: -8.238992691040039
    9. '           ' → logprob: -8.488992691040039
    10. '*' → logprob: -8.863992691040039

Token 170: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741104245185852
    2. ' i' → logprob: -0.9741104245185852
    3. '(i' → logprob: -10.84911060333252
    4. '   ' → logprob: -12.47411060333252
    5. '	i' → logprob: -12.59911060333252
    6. ' (' → logprob: -12.72411060333252
    7. ' ' → logprob: -13.72411060333252
    8. '(' → logprob: -14.22411060333252
    9. ' ' → logprob: -14.84911060333252
    10. 's' → logprob: -15.16161060333252

Token 171: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011116675101220608
    2. ' i' → logprob: -4.5111165046691895
    3. ''i' → logprob: -10.511116981506348
    4. '   ' → logprob: -10.761116981506348
    5. '`' → logprob: -12.636116981506348
    6. 'a' → logprob: -13.136116981506348
    7. '<' → logprob: -13.136116981506348
    8. ' ' → logprob: -13.636116981506348
    9. '     ' → logprob: -13.761116981506348
    10. '       ' → logprob: -13.761116981506348

Token 172: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009810160845518112
    2. ' i' → logprob: -4.634809970855713
    3. '   ' → logprob: -10.384810447692871
    4. '(i' → logprob: -11.634810447692871
    5. ' ' → logprob: -12.384810447692871
    6. 'a' → logprob: -13.259810447692871
    7. '[i' → logprob: -14.009810447692871
    8. '  ' → logprob: -14.134810447692871
    9. '       ' → logprob: -14.509810447692871
    10. ''i' → logprob: -14.509810447692871

Token 173: 'ment' (ID: 508)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3922615051269531
    2. 'ment' → logprob: -1.1422615051269531
    3. ' i' → logprob: -5.517261505126953
    4. 'me' → logprob: -8.642261505126953
    5. 'ement' → logprob: -8.767261505126953
    6. 'm' → logprob: -9.017261505126953
    7. '   ' → logprob: -9.017261505126953
    8. 'v' → logprob: -9.267261505126953
    9. '(i' → logprob: -9.267261505126953
    10. 'if' → logprob: -9.392261505126953

Token 174: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03375323861837387
    2. ' <' → logprob: -3.4087531566619873
    3. 'i' → logprob: -10.033753395080566
    4. '   ' → logprob: -11.408753395080566
    5. '<int' → logprob: -11.533753395080566
    6. ' ' → logprob: -11.658753395080566
    7. ' est' → logprob: -11.783753395080566
    8. '[i' → logprob: -12.033753395080566
    9. ' i' → logprob: -12.283753395080566
    10. ' *' → logprob: -13.033753395080566

Token 175: ' nég' (ID: 55805)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11940333992242813
    2. ' nég' → logprob: -2.36940336227417
    3. ' <' → logprob: -4.36940336227417
    4. ' negatif' → logprob: -6.11940336227417
    5. 'neg' → logprob: -6.49440336227417
    6. '0' → logprob: -6.49440336227417
    7. ' negative' → logprob: -8.119402885437012
    8. ' inférieur' → logprob: -8.244402885437012
    9. 'negative' → logprob: -8.494402885437012
    10. 'moins' → logprob: -8.994402885437012

Token 176: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.00018899753922596574
    2. 'a' → logprob: -9.500188827514648
    3. '   ' → logprob: -9.625188827514648
    4. 'ative' → logprob: -11.375188827514648
    5. 't' → logprob: -11.875188827514648
    6. '<' → logprob: -12.375188827514648
    7. 'if' → logprob: -12.375188827514648
    8. '#' → logprob: -12.875188827514648
    9. '

' → logprob: -13.250188827514648
    10. '       ' → logprob: -13.500188827514648

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02642766945064068
    2. ' if' → logprob: -3.901427745819092
    3. '   ' → logprob: -5.776427745819092
    4. ' s' → logprob: -7.026427745819092
    5. 'if' → logprob: -7.151427745819092
    6. '<|end|>' → logprob: -7.651427745819092
    7. 's' → logprob: -7.776427745819092
    8. '           ' → logprob: -9.526427268981934
    9. '	if' → logprob: -10.526427268981934
    10. '<|end|>' → logprob: -10.901427268981934

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00332802627235651
    2. ' if' → logprob: -5.7533278465271
    3. 'if' → logprob: -10.128328323364258
    4. '   ' → logprob: -10.128328323364258
    5. ' s' → logprob: -11.003328323364258
    6. ',' → logprob: -11.128328323364258
    7. '<|end|>' → logprob: -11.128328323364258
    8. '           ' → logprob: -11.628328323364258
    9. 's' → logprob: -11.878328323364258
    10. ':' → logprob: -13.753328323364258

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7150940299034119
    2. ' if' → logprob: -0.7150940299034119
    3. '       ' → logprob: -3.8400940895080566
    4. 's' → logprob: -9.215093612670898
    5. '   ' → logprob: -9.465093612670898
    6. ' s' → logprob: -10.465093612670898
    7. '	if' → logprob: -12.215093612670898
    8. '           ' → logprob: -13.215093612670898
    9. '    ' → logprob: -13.340093612670898
    10. ' ' → logprob: -13.965093612670898

Token 180: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17974840104579926
    2. 'i' → logprob: -1.8047484159469604
    3. '	i' → logprob: -13.67974853515625
    4. ' ' → logprob: -13.67974853515625
    5. '(i' → logprob: -14.55474853515625
    6. '   ' → logprob: -14.55474853515625
    7. '    ' → logprob: -15.92974853515625
    8. ' ' → logprob: -16.17974853515625
    9. '  ' → logprob: -16.30474853515625
    10. '```' → logprob: -16.92974853515625

Token 181: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026340942829847336
    2. '<' → logprob: -3.651340961456299
    3. ' ' → logprob: -10.27634048461914
    4. '  ' → logprob: -13.52634048461914
    5. '<|end|>' → logprob: -13.52634048461914
    6. '   ' → logprob: -14.27634048461914
    7. '[' → logprob: -14.65134048461914
    8. ' ' → logprob: -14.77634048461914
    9. 's' → logprob: -14.90134048461914
    10. ' *' → logprob: -14.90134048461914

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31326186656951904
    2. ' ' → logprob: -1.313261866569519
    3. '  ' → logprob: -16.688261032104492
    4. '   ' → logprob: -17.313261032104492
    5. '<|end|>' → logprob: -17.313261032104492
    6. '۰' → logprob: -17.688261032104492
    7. '=' → logprob: -18.438261032104492
    8. ' ' → logprob: -18.938261032104492
    9. '    ' → logprob: -19.500761032104492
    10. '  
' → logprob: -19.750761032104492

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -19.125085830688477
    4. '  ' → logprob: -20.750085830688477
    5. '<|end|>' → logprob: -21.000085830688477
    6. 's' → logprob: -21.125085830688477
    7. '=' → logprob: -21.375085830688477
    8. '   ' → logprob: -21.625085830688477
    9. '０' → logprob: -21.750085830688477
    10. '```' → logprob: -21.875085830688477

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2522066533565521
    2. ':
' → logprob: -1.5022066831588745
    3. '       ' → logprob: -9.002206802368164
    4. ' s' → logprob: -10.002206802368164
    5. ':s' → logprob: -10.627206802368164
    6. 's' → logprob: -10.752206802368164
    7. '):
' → logprob: -10.877206802368164
    8. '):' → logprob: -11.002206802368164
    9. '           ' → logprob: -11.877206802368164
    10. '   ' → logprob: -12.252206802368164

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09917332977056503
    2. ' s' → logprob: -2.4741733074188232
    3. '       ' → logprob: -4.724173545837402
    4. '	       ' → logprob: -7.224173545837402
    5. 's' → logprob: -7.599173545837402
    6. '               ' → logprob: -11.474173545837402
    7. '<|end|>' → logprob: -11.474173545837402
    8. '            
' → logprob: -11.474173545837402
    9. '    	   ' → logprob: -12.099173545837402
    10. '
' → logprob: -12.224173545837402

Token 186: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0486217737197876
    2. 's' (adapté à ' s') → logprob: -3.048621654510498
    3. '           ' → logprob: -10.548622131347656
    4. '       ' → logprob: -12.298622131347656
    5. '               ' → logprob: -13.798622131347656
    6. '   ' → logprob: -13.798622131347656
    7. '	s' → logprob: -14.423622131347656
    8. '    ' → logprob: -15.048622131347656
    9. ' ' → logprob: -15.298622131347656
    10. '            ' → logprob: -15.798622131347656

Token 187: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.059455227106809616
    2. '=' → logprob: -3.309455156326294
    3. '*' → logprob: -4.059455394744873
    4. ' *=' → logprob: -5.559455394744873
    5. ' =' → logprob: -9.684454917907715
    6. '   ' → logprob: -11.309454917907715
    7. '	' → logprob: -14.184454917907715
    8. '=-' → logprob: -14.809454917907715
    9. '  ' → logprob: -14.934454917907715
    10. ' ' → logprob: -15.184454917907715

Token 188: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017958412354346365
    2. ' -' → logprob: -8.625179290771484
    3. '```' → logprob: -17.875179290771484
    4. '(-' → logprob: -18.000179290771484
    5. ' ' → logprob: -18.500179290771484
    6. '1' → logprob: -18.625179290771484
    7. '   ' → logprob: -19.125179290771484
    8. '−' → logprob: -19.125179290771484
    9. '  ' → logprob: -19.500179290771484
    10. '\-' → logprob: -19.625179290771484

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '<|end|>' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -18.875
    6. '<|end|>' → logprob: -19.625
    7. '  ' → logprob: -19.625
    8. '.' → logprob: -20.125
    9. '۱' → logprob: -20.3125
    10. '2' → logprob: -20.375

Token 190: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8111513257026672
    2. '
' → logprob: -1.1861512660980225
    3. '    
' → logprob: -1.9361512660980225
    4. '<|end|>' → logprob: -4.061151504516602
    5. 'sum' → logprob: -4.061151504516602
    6. '  
' → logprob: -4.311151504516602
    7. '    ' → logprob: -4.436151504516602
    8. ' 
' → logprob: -4.686151504516602
    9. 's' → logprob: -4.936151504516602
    10. ' sum' → logprob: -5.311151504516602

Token 191: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5801591873168945
    2. 'abs' → logprob: -1.5801591873168945
    3. '   ' → logprob: -2.0801591873168945
    4. 's' → logprob: -2.8301591873168945
    5. 'total' → logprob: -3.4551591873168945
    6. 'som' → logprob: -4.4551591873168945
    7. 'result' → logprob: -6.2051591873168945
    8. '    
' → logprob: -6.4551591873168945
    9. 'val' → logprob: -6.8301591873168945
    10. 'absolute' → logprob: -7.2051591873168945

Token 192: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.30947399139404297
    2. 'sum' → logprob: -2.059473991394043
    3. 'total' → logprob: -2.309473991394043
    4. 's' → logprob: -3.559473991394043
    5. 'som' → logprob: -5.559473991394043
    6. '   ' → logprob: -6.059473991394043
    7. 'absolute' → logprob: -6.309473991394043
    8. 'val' → logprob: -6.684473991394043
    9. 'summ' → logprob: -8.059473991394043
    10. 'S' → logprob: -8.309473991394043

Token 193: ' Calcul' (ID: 57243)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.539561927318573
    2. 'sum' → logprob: -1.6645619869232178
    3. 'total' → logprob: -2.0395619869232178
    4. 's' → logprob: -2.5395619869232178
    5. 'val' → logprob: -5.039561748504639
    6. 'som' → logprob: -5.289561748504639
    7. 'absolute' → logprob: -6.039561748504639
    8. 'summ' → logprob: -7.164561748504639
    9. 'S' → logprob: -7.289561748504639
    10. '#' → logprob: -7.289561748504639

Token 194: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1554920673370361
    2. 'sum' → logprob: -1.5304920673370361
    3. ' de' → logprob: -2.030492067337036
    4. 'de' → logprob: -2.280492067337036
    5. 'total' → logprob: -2.280492067337036
    6. 'abs' → logprob: -2.655492067337036
    7. 's' → logprob: -3.780492067337036
    8. ' total' → logprob: -3.780492067337036
    9. ' sum' → logprob: -4.905491828918457
    10. ' abs' → logprob: -5.780491828918457

Token 195: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5000219345092773
    2. 'sum' → logprob: -2.0000219345092773
    3. 'abs' → logprob: -2.1250219345092773
    4. ' la' → logprob: -2.3750219345092773
    5. 'total' → logprob: -3.7500219345092773
    6. 's' → logprob: -5.000021934509277
    7. ' abs' → logprob: -5.250021934509277
    8. ' sum' → logprob: -5.875021934509277
    9. 'l' → logprob: -6.375021934509277
    10. 'som' → logprob: -6.750021934509277

Token 196: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8456889390945435
    2. 'total' → logprob: -1.3456889390945435
    3. 'sum' → logprob: -1.5956889390945435
    4. 'abs' → logprob: -2.345688819885254
    5. 'som' → logprob: -4.720688819885254
    6. 'val' → logprob: -6.970688819885254
    7. 'summ' → logprob: -7.220688819885254
    8. 'absolute' → logprob: -7.720688819885254
    9. 'import' → logprob: -8.970688819885254
    10. 'result' → logprob: -9.095688819885254

Token 197: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.32803645730018616
    2. 'des' → logprob: -1.9530364274978638
    3. 'abs' → logprob: -2.8280365467071533
    4. '_abs' → logprob: -3.9530365467071533
    5. ' abs' → logprob: -4.078036308288574
    6. ' absol' → logprob: -4.453036308288574
    7. '   ' → logprob: -4.953036308288574
    8. 's' → logprob: -5.203036308288574
    9. 'val' → logprob: -5.328036308288574
    10. '_des' → logprob: -6.078036308288574

Token 198: ' valeurs' (ID: 73668)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.19059981405735016
    2. 'val' → logprob: -2.1905999183654785
    3. '[val' → logprob: -3.4405999183654785
    4. '[' → logprob: -3.6905999183654785
    5. ' abs' → logprob: -5.8155999183654785
    6. 'vals' → logprob: -8.06559944152832
    7. '(abs' → logprob: -8.44059944152832
    8. 'values' → logprob: -8.56559944152832
    9. '[value' → logprob: -9.06559944152832
    10. ' valeurs' → logprob: -9.19059944152832

Token 199: ' absol' (ID: 7374)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -1.1474567651748657
    2. '_abs' → logprob: -1.5224567651748657
    3. '_ab' → logprob: -1.7724567651748657
    4. 'abs' → logprob: -1.8974567651748657
    5. ' absol' → logprob: -2.022456645965576
    6. '   ' → logprob: -5.647456645965576
    7. '(abs' → logprob: -6.272456645965576
    8. ' abs' → logprob: -6.397456645965576
    9. 'abus' → logprob: -6.522456645965576
    10. '_absolute' → logprob: -6.647456645965576

Token 200: 'ues' (ID: 1406)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.05812811478972435
    2. '   ' → logprob: -3.8081281185150146
    3. '(' → logprob: -4.5581278800964355
    4. '(
' → logprob: -5.5581278800964355
    5. 'val' → logprob: -5.8081278800964355
    6. 'values' → logprob: -6.0581278800964355
    7. 'A' → logprob: -6.0581278800964355
    8. '[A' → logprob: -6.1831278800964355
    9. '(i' → logprob: -6.9331278800964355
    10. '[i' → logprob: -7.1831278800964355

Token 201: '
' (ID: 198)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5563737154006958
    2. '   ' → logprob: -0.9313737154006958
    3. ' abs' → logprob: -3.5563735961914062
    4. '_abs' → logprob: -6.806373596191406
    5. 'A' → logprob: -7.431373596191406
    6. '    
' → logprob: -7.806373596191406
    7. 'vals' → logprob: -7.931373596191406
    8. 'val' → logprob: -8.056373596191406
    9. '
' → logprob: -8.056373596191406
    10. '(abs' → logprob: -8.806373596191406

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4398826062679291
    2. 'abs' → logprob: -1.0648826360702515
    3. ' abs' → logprob: -4.564882755279541
    4. 'val' → logprob: -8.939882278442383
    5. 'vals' → logprob: -8.939882278442383
    6. 'A' → logprob: -9.064882278442383
    7. '_abs' → logprob: -9.439882278442383
    8. 'ab' → logprob: -9.689882278442383
    9. 'a' → logprob: -10.314882278442383
    10. '(abs' → logprob: -10.314882278442383

Token 203: ' A' (ID: 355)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0005905635771341622
    2. ' abs' → logprob: -8.500590324401855
    3. 'ab' → logprob: -9.125590324401855
    4. 'vals' → logprob: -9.750590324401855
    5. 'A' (adapté à ' A') → logprob: -10.000590324401855
    6. 'a' → logprob: -10.625590324401855
    7. 'val' → logprob: -10.625590324401855
    8. 'B' → logprob: -10.875590324401855
    9. 'absolute' → logprob: -11.250590324401855
    10. 'b' → logprob: -11.250590324401855

Token 204: 'abs' (ID: 6071)
  Prédit: '_abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.03708139806985855
    2. '_' → logprob: -3.662081480026245
    3. ' =' → logprob: -4.787081241607666
    4. '=' → logprob: -6.412081241607666
    5. '_ab' → logprob: -7.662081241607666
    6. '_absolute' → logprob: -8.537081718444824
    7. 'abs' → logprob: -10.162081718444824
    8. '_val' → logprob: -11.037081718444824
    9. '_=' → logprob: -11.287081718444824
    10. '_vals' → logprob: -12.912081718444824

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889298349618912
    2. ' =' → logprob: -2.578892946243286
    3. '=[' → logprob: -13.578892707824707
    4. '[' → logprob: -14.203892707824707
    5. '=[]' → logprob: -14.453892707824707
    6. '_' → logprob: -15.703892707824707
    7. '   ' → logprob: -15.828892707824707
    8. '＝' → logprob: -15.953892707824707
    9. '[:]' → logprob: -15.953892707824707
    10. 's' → logprob: -16.578893661499023

Token 206: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2791615128517151
    2. ' [' → logprob: -1.7791614532470703
    3. '[' → logprob: -2.7791614532470703
    4. ' list' → logprob: -4.52916145324707
    5. 'list' → logprob: -6.27916145324707
    6. '[List' → logprob: -10.65416145324707
    7. '[len' → logprob: -11.77916145324707
    8. '[i' → logprob: -12.15416145324707
    9. '[a' → logprob: -13.15416145324707
    10. '[int' → logprob: -13.27916145324707

Token 207: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000504062045365572
    2. 'map' → logprob: -7.750504016876221
    3. '(abs' → logprob: -9.750504493713379
    4. '(' → logprob: -11.750504493713379
    5. 'abs' → logprob: -11.875504493713379
    6. '	map' → logprob: -16.750503540039062
    7. ' map' → logprob: -17.625503540039062
    8. ',map' → logprob: -17.625503540039062
    9. '(
' → logprob: -17.875503540039062
    10. ' (' → logprob: -18.000503540039062

Token 208: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.014446130953729153
    2. 'abs' → logprob: -4.264446258544922
    3. '(' → logprob: -8.639446258544922
    4. '   ' → logprob: -10.014446258544922
    5. ' abs' → logprob: -10.139446258544922
    6. '(lambda' → logprob: -11.014446258544922
    7. ' (' → logprob: -13.514446258544922
    8. '```' → logprob: -13.639446258544922
    9. ')' → logprob: -13.889446258544922
    10. '_abs' → logprob: -14.514446258544922

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004651080351322889
    2. ',A' → logprob: -5.379651069641113
    3. ' ,' → logprob: -10.879651069641113
    4. 'A' → logprob: -11.504651069641113
    5. ',
' → logprob: -14.129651069641113
    6. '(A' → logprob: -14.254651069641113
    7. '   ' → logprob: -15.504651069641113
    8. '
' → logprob: -15.754651069641113
    9. ' A' → logprob: -16.00465202331543
    10. 's' → logprob: -17.00465202331543

Token 210: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889463007450104
    2. ' A' → logprob: -2.57889461517334
    3. '   ' → logprob: -12.45389461517334
    4. ' ' → logprob: -14.45389461517334
    5. '(A' → logprob: -15.70389461517334
    6. '	A' → logprob: -15.95389461517334
    7. ',A' → logprob: -16.703895568847656
    8. '  ' → logprob: -16.953895568847656
    9. '[A' → logprob: -17.578895568847656
    10. '       ' → logprob: -18.453895568847656

Token 211: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.315936429426074e-05
    2. '))
' → logprob: -9.500082969665527
    3. '   ' → logprob: -12.375082969665527
    4. ' ))' → logprob: -13.500082969665527
    5. '()))' → logprob: -13.875082969665527
    6. ')))' → logprob: -14.250082969665527
    7. ')' → logprob: -14.500082969665527
    8. '))

' → logprob: -15.750082969665527
    9. '));' → logprob: -16.000083923339844
    10. ' ' → logprob: -16.875083923339844

Token 212: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10403824597597122
    2. '    
' → logprob: -2.4790382385253906
    3. 'sum' → logprob: -5.104038238525391
    4. 's' → logprob: -5.479038238525391
    5. '
' → logprob: -5.729038238525391
    6. 'total' → logprob: -7.854038238525391
    7. '    ' → logprob: -8.22903823852539
    8. ' sum' → logprob: -8.35403823852539
    9. ' 
' → logprob: -8.85403823852539
    10. '   
' → logprob: -9.47903823852539

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3772733211517334
    2. 'sum' → logprob: -1.8772733211517334
    3. 'total' → logprob: -2.6272733211517334
    4. 's' → logprob: -2.6272733211517334
    5. 'result' → logprob: -5.1272735595703125
    6. ' total' → logprob: -5.6272735595703125
    7. ' sum' → logprob: -5.7522735595703125
    8. ' somme' → logprob: -7.1272735595703125
    9. '    
' → logprob: -7.2522735595703125
    10. ' s' → logprob: -7.3772735595703125

Token 214: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8875444531440735
    2. 'sum' → logprob: -0.8875444531440735
    3. 's' → logprob: -2.1375443935394287
    4. 'som' → logprob: -3.3875443935394287
    5. 'S' → logprob: -4.512544631958008
    6. '   ' → logprob: -5.012544631958008
    7. ' total' → logprob: -6.387544631958008
    8. 'abs' → logprob: -7.137544631958008
    9. ' somme' → logprob: -7.262544631958008
    10. 'summ' → logprob: -7.512544631958008

Token 215: ' Si' (ID: 7832)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7280542254447937
    2. 'sum' → logprob: -1.2280542850494385
    3. 's' → logprob: -1.7280542850494385
    4. ' total' → logprob: -4.353054046630859
    5. 'som' → logprob: -4.353054046630859
    6. 'S' → logprob: -5.478054046630859
    7. 'sm' → logprob: -5.728054046630859
    8. 'abs' → logprob: -5.853054046630859
    9. ' somme' → logprob: -6.603054046630859
    10. ' sum' → logprob: -6.603054046630859

Token 216: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00672804145142436
    2. 's' → logprob: -5.006728172302246
    3. ' ' → logprob: -11.881728172302246
    4. ' len' → logprob: -12.756728172302246
    5. '   ' → logprob: -14.381728172302246
    6. '(s' → logprob: -14.756728172302246
    7. 'len' → logprob: -15.006728172302246
    8. ' le' → logprob: -15.194228172302246
    9. ' ' → logprob: -15.194228172302246
    10. '  ' → logprob: -15.819228172302246

Token 217: ' produit' (ID: 29429)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04000105708837509
    2. ' s' → logprob: -3.290001153945923
    3. 'product' → logprob: -7.290000915527344
    4. ' produit' → logprob: -7.415000915527344
    5. 'produ' → logprob: -7.540000915527344
    6. 'prod' → logprob: -9.290000915527344
    7. ' product' → logprob: -10.415000915527344
    8. 'Produit' → logprob: -12.790000915527344
    9. '   ' → logprob: -12.915000915527344
    10. 'pro' → logprob: -13.415000915527344

Token 218: ' global' (ID: 5466)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.32344672083854675
    2. '>=' → logprob: -1.9484467506408691
    3. ' >=' → logprob: -2.323446750640869
    4. 'est' → logprob: -3.823446750640869
    5. 's' → logprob: -4.698446750640869
    6. ' s' → logprob: -6.323446750640869
    7. ' is' → logprob: -7.073446750640869
    8. '   ' → logprob: -7.448446750640869
    9. '>' → logprob: -7.948446750640869
    10. ' ' → logprob: -8.448446273803711

Token 219: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3848295509815216
    2. '>=' → logprob: -2.134829521179199
    3. ' >=' → logprob: -2.259829521179199
    4. 'est' → logprob: -2.384829521179199
    5. 's' → logprob: -5.759829521179199
    6. '>' → logprob: -7.634829521179199
    7. '   ' → logprob: -8.0098295211792
    8. ' ' → logprob: -8.8848295211792
    9. ' is' → logprob: -9.3848295211792
    10. ' s' → logprob: -9.3848295211792

Token 220: ' positif' (ID: 89008)
  Prédit: ' positif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.3318249583244324
    2. 'posit' → logprob: -1.3318250179290771
    3. '>=' → logprob: -4.706824779510498
    4. 'positive' → logprob: -6.081824779510498
    5. '   ' → logprob: -6.456824779510498
    6. ' positive' → logprob: -6.706824779510498
    7. 'non' → logprob: -7.081824779510498
    8. ' >=' → logprob: -7.081824779510498
    9. 'pos' → logprob: -7.706824779510498
    10. ' non' → logprob: -7.831824779510498

Token 221: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.5308123826980591
    2. ' or' → logprob: -1.905812382698059
    3. ':' → logprob: -2.1558122634887695
    4. 'ou' → logprob: -2.2808122634887695
    5. '   ' → logprob: -3.5308122634887695
    6. 'or' → logprob: -5.2808122634887695
    7. 's' → logprob: -5.4058122634887695
    8. ' ' → logprob: -5.7808122634887695
    9. '  ' → logprob: -6.4058122634887695
    10. ',' → logprob: -7.5308122634887695

Token 222: ' nul' (ID: 64435)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.3180505335330963
    2. ' nul' → logprob: -1.318050503730774
    3. 'égal' → logprob: -5.943050384521484
    4. 'n' → logprob: -6.443050384521484
    5. ' égal' → logprob: -8.318050384521484
    6. '0' → logprob: -8.693050384521484
    7. '=' → logprob: -9.943050384521484
    8. 'ég' → logprob: -10.818050384521484
    9. ' ' → logprob: -10.943050384521484
    10. 'null' → logprob: -11.068050384521484

Token 223: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017306297086179256
    2. '   ' → logprob: -6.876730442047119
    3. ',' → logprob: -8.126730918884277
    4. ':
' → logprob: -8.126730918884277
    5. ' :' → logprob: -9.751730918884277
    6. ' or' → logprob: -10.126730918884277
    7. 'or' → logprob: -12.876730918884277
    8. '):' → logprob: -13.751730918884277
    9. '():' → logprob: -14.626730918884277
    10. ':return' → logprob: -14.626730918884277

Token 224: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6070824265480042
    2. ' print' → logprob: -0.8570824265480042
    3. '   ' → logprob: -3.6070823669433594
    4. 'result' → logprob: -6.107082366943359
    5. ' result' → logprob: -6.857082366943359
    6. 'sum' → logprob: -9.60708236694336
    7. '    ' → logprob: -10.23208236694336
    8. ' somme' → logprob: -10.60708236694336
    9. ' sum' → logprob: -10.85708236694336
    10. 's' → logprob: -10.98208236694336

Token 225: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21396450698375702
    2. '   ' → logprob: -1.8389644622802734
    3. 'aff' → logprob: -4.088964462280273
    4. ' print' → logprob: -4.213964462280273
    5. ' affiche' → logprob: -6.963964462280273
    6. '       ' → logprob: -8.338964462280273
    7. '    ' → logprob: -8.463964462280273
    8. 'cal' → logprob: -8.838964462280273
    9. 'return' → logprob: -9.213964462280273
    10. 's' → logprob: -9.463964462280273

Token 226: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.038342684507369995
    2. ' sum' → logprob: -3.2883427143096924
    3. '(sum' → logprob: -8.163342475891113
    4. '   ' → logprob: -11.913342475891113
    5. 'print' → logprob: -12.038342475891113
    6. '(' → logprob: -13.538342475891113
    7. ' ' → logprob: -14.413342475891113
    8. ' print' → logprob: -15.288342475891113
    9. '=sum' → logprob: -15.288342475891113
    10. ' the' → logprob: -15.413342475891113

Token 227: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005114684347063303
    2. ' sum' → logprob: -5.505114555358887
    3. 's' → logprob: -7.630114555358887
    4. '(sum' → logprob: -7.630114555358887
    5. 'abs' → logprob: -11.255114555358887
    6. 'space' → logprob: -11.380114555358887
    7. '(' → logprob: -11.755114555358887
    8. ''' → logprob: -12.380114555358887
    9. 'max' → logprob: -12.505114555358887
    10. '"' → logprob: -12.505114555358887

Token 228: ' directe' (ID: 80071)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0516071543097496
    2. '(A' → logprob: -3.426607131958008
    3. '(sum' → logprob: -4.926607131958008
    4. '   ' → logprob: -5.176607131958008
    5. 'sum' → logprob: -5.801607131958008
    6. '(abs' → logprob: -7.801607131958008
    7. '(
' → logprob: -7.801607131958008
    8. '()' → logprob: -8.051607131958008
    9. ' (' → logprob: -8.551607131958008
    10. 'A' → logprob: -9.051607131958008

Token 229: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7292891144752502
    2. '   ' → logprob: -0.7292891144752502
    3. '(A' → logprob: -4.1042890548706055
    4. '()' → logprob: -4.7292890548706055
    5. 'print' → logprob: -5.3542890548706055
    6. '(
' → logprob: -5.7292890548706055
    7. ':' → logprob: -7.2292890548706055
    8. 'A' → logprob: -8.479289054870605
    9. '(sum' → logprob: -8.854289054870605
    10. '    ' → logprob: -8.979289054870605

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028862981707789004
    2. 'print' → logprob: -8.875288963317871
    3. 'if' → logprob: -9.000288963317871
    4. 'return' → logprob: -11.625288963317871
    5. '    
' → logprob: -11.875288963317871
    6. ' if' → logprob: -11.875288963317871
    7. '       ' → logprob: -13.750288963317871
    8. '```' → logprob: -14.625288963317871
    9. ' print' → logprob: -15.375288963317871
    10. 's' → logprob: -16.000288009643555

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5168496966362
    2. 'print' → logprob: -1.2668497562408447
    3. 'result' → logprob: -3.1418497562408447
    4. '   ' → logprob: -3.3918497562408447
    5. 's' → logprob: -4.016849517822266
    6. 'total' → logprob: -4.266849517822266
    7. ' if' → logprob: -5.391849517822266
    8. 'return' → logprob: -5.641849517822266
    9. 'sum' → logprob: -5.641849517822266
    10. 'res' → logprob: -7.141849517822266

Token 232: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.043007753789424896
    2. 's' → logprob: -3.1680078506469727
    3. '(s' → logprob: -12.668007850646973
    4. ' ' → logprob: -13.418007850646973
    5. '   ' → logprob: -13.668007850646973
    6. ' len' → logprob: -13.793007850646973
    7. '    ' → logprob: -15.043007850646973
    8. 'len' → logprob: -15.293007850646973
    9. '_s' → logprob: -15.418007850646973
    10. ' (' → logprob: -15.418007850646973

Token 233: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6380378007888794
    2. ' >=' → logprob: -1.1380378007888794
    3. '>=' → logprob: -2.51303768157959
    4. '==' → logprob: -2.76303768157959
    5. ' >' → logprob: -5.63803768157959
    6. '>' → logprob: -5.76303768157959
    7. '   ' → logprob: -8.01303768157959
    8. '=' → logprob: -10.76303768157959
    9. ' <=' → logprob: -11.38803768157959
    10. ' ' → logprob: -12.26303768157959

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01105170976370573
    2. ' ' → logprob: -4.511051654815674
    3. '-' → logprob: -13.636052131652832
    4. '  ' → logprob: -13.761052131652832
    5. '   ' → logprob: -14.011052131652832
    6. '>' → logprob: -15.386052131652832
    7. ' -' → logprob: -15.636052131652832
    8. '0' → logprob: -16.261051177978516
    9. '">' → logprob: -16.386051177978516
    10. '    ' → logprob: -16.511051177978516

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '-' → logprob: -15.375296592712402
    4. '   ' → logprob: -16.12529754638672
    5. '  ' → logprob: -16.12529754638672
    6. '>' → logprob: -16.50029754638672
    7. ')' → logprob: -17.31279754638672
    8. '=' → logprob: -17.50029754638672
    9. '">' → logprob: -17.50029754638672
    10. '+' → logprob: -17.68779754638672

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025382055900990963
    2. ':
' → logprob: -6.002538204193115
    3. '       ' → logprob: -9.877538681030273
    4. '   ' → logprob: -12.127538681030273
    5. ' :' → logprob: -13.002538681030273
    6. ':return' → logprob: -13.127538681030273
    7. '):' → logprob: -14.127538681030273
    8. ':
' → logprob: -15.627538681030273
    9. '):
' → logprob: -16.127538681030273
    10. ',' → logprob: -16.252538681030273

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020970876794308424
    2. 'print' → logprob: -6.377097129821777
    3. ' print' → logprob: -8.002097129821777
    4. '   ' → logprob: -9.752097129821777
    5. '      ' → logprob: -14.752097129821777
    6. '           ' → logprob: -15.502097129821777
    7. 'return' → logprob: -15.627097129821777
    8. '```' → logprob: -15.627097129821777
    9. '    ' → logprob: -15.752097129821777
    10. ':' → logprob: -15.877097129821777

Token 238: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09113290160894394
    2. '       ' → logprob: -2.966132879257202
    3. ' print' → logprob: -3.341132879257202
    4. '   ' → logprob: -8.966133117675781
    5. 'return' → logprob: -9.591133117675781
    6. ' return' → logprob: -12.216133117675781
    7. '	print' → logprob: -13.716133117675781
    8. '           ' → logprob: -14.341133117675781
    9. '```' → logprob: -14.841133117675781
    10. '    ' → logprob: -14.966133117675781

Token 239: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.03833258897066116
    2. '(' → logprob: -3.28833270072937
    3. 'sum' → logprob: -8.16333293914795
    4. ' (' → logprob: -12.78833293914795
    5. '(
' → logprob: -13.66333293914795
    6. ' sum' → logprob: -14.41333293914795
    7. '(s' → logprob: -14.53833293914795
    8. '(abs' → logprob: -14.53833293914795
    9. '(

' → logprob: -15.41333293914795
    10. '('' → logprob: -15.91333293914795

Token 240: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.011067155748605728
    2. '(' → logprob: -4.5110673904418945
    3. ' (' → logprob: -11.011067390441895
    4. ')' → logprob: -13.511067390441895
    5. '(
' → logprob: -14.511067390441895
    6. 'A' → logprob: -14.761067390441895
    7. '(

' → logprob: -15.886067390441895
    8. '(abs' → logprob: -16.011066436767578
    9. ' )' → logprob: -16.386066436767578
    10. '()' → logprob: -16.386066436767578

Token 241: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.5048530030981055e-06
    2. 'A' → logprob: -14.375001907348633
    3. ' abs' → logprob: -14.625001907348633
    4. ')' → logprob: -15.750001907348633
    5. '(abs' → logprob: -16.125001907348633
    6. '_abs' → logprob: -16.250001907348633
    7. 'Abs' → logprob: -17.625001907348633
    8. '))' → logprob: -18.000001907348633
    9. 'ab' → logprob: -18.250001907348633
    10. 'a' → logprob: -18.375001907348633

Token 242: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008342855726368725
    2. ')' → logprob: -7.2508344650268555
    3. '))
' → logprob: -9.625834465026855
    4. '()))' → logprob: -9.875834465026855
    5. ' ))' → logprob: -12.750834465026855
    6. ')))' → logprob: -13.125834465026855
    7. '   ' → logprob: -13.875834465026855
    8. '()' → logprob: -15.000834465026855
    9. '())' → logprob: -15.125834465026855
    10. '       ' → logprob: -15.375834465026855

Token 243: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5766897201538086
    2. '   ' → logprob: -0.8266897201538086
    3. ' else' → logprob: -7.201689720153809
    4. '	else' → logprob: -13.076689720153809
    5. 'elif' → logprob: -13.451689720153809
    6. '    
' → logprob: -14.326689720153809
    7. '```' → logprob: -15.701689720153809
    8. '_else' → logprob: -15.951689720153809
    9. ')' → logprob: -16.326690673828125
    10. 'elses' → logprob: -17.826690673828125

Token 244: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0001593195047462359
    2. '   ' → logprob: -9.00015926361084
    3. ' else' → logprob: -10.25015926361084
    4. 'elif' → logprob: -14.75015926361084
    5. '	else' → logprob: -17.750160217285156
    6. '_else' → logprob: -18.125160217285156
    7. '    
' → logprob: -19.375160217285156
    8. '```' → logprob: -19.625160217285156
    9. 'elses' → logprob: -19.875160217285156
    10. 'elser' → logprob: -20.375160217285156

Token 245: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008651564829051495
    2. ' else' → logprob: -4.7586517333984375
    3. 'elif' → logprob: -10.258651733398438
    4. '   ' → logprob: -13.383651733398438
    5. ' elif' → logprob: -15.633651733398438
    6. '_else' → logprob: -17.133651733398438
    7. '	else' → logprob: -17.508651733398438
    8. 'aut' → logprob: -17.758651733398438
    9. 'elser' → logprob: -17.758651733398438
    10. ' sinon' → logprob: -17.758651733398438

Token 246: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011150871403515339
    2. ':
' → logprob: -4.51115083694458
    3. '   ' → logprob: -9.886151313781738
    4. 'else' → logprob: -10.386151313781738
    5. ' :' → logprob: -11.386151313781738
    6. '       ' → logprob: -12.136151313781738
    7. ' else' → logprob: -13.386151313781738
    8. ':

' → logprob: -14.261151313781738
    9. 'elif' → logprob: -14.386151313781738
    10. 'print' → logprob: -14.511151313781738

Token 247: ' il' (ID: 1793)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2803030014038086
    2. 'print' → logprob: -1.6553030014038086
    3. '   ' → logprob: -3.4053030014038086
    4. ' else' → logprob: -4.780303001403809
    5. 'else' → logprob: -5.030303001403809
    6. '       ' → logprob: -5.280303001403809
    7. '    ' → logprob: -8.905303001403809
    8. '	print' → logprob: -11.530303001403809
    9. '```' → logprob: -12.030303001403809
    10. ' ' → logprob: -12.280303001403809

Token 248: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5614988803863525
    2. ' print' → logprob: -1.5614988803863525
    3. 'print' → logprob: -2.0614988803863525
    4. ' faut' → logprob: -2.4364988803863525
    5. '       ' → logprob: -6.311498641967773
    6. 'f' → logprob: -6.686498641967773
    7. '    ' → logprob: -7.311498641967773
    8. ' faudrait' → logprob: -7.561498641967773
    9. 's' → logprob: -8.311498641967773
    10. ' y' → logprob: -8.811498641967773

Token 249: ' sou' (ID: 4069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03814384713768959
    2. '   ' → logprob: -3.5381438732147217
    3. ' print' → logprob: -5.413143634796143
    4. 'else' → logprob: -5.913143634796143
    5. ':' → logprob: -7.288143634796143
    6. 'aff' → logprob: -8.4131441116333
    7. ' afficher' → logprob: -9.6631441116333
    8. '#' → logprob: -10.0381441116333
    9. ' impr' → logprob: -10.1631441116333
    10. ' else' → logprob: -10.4131441116333

Token 250: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0012953581754118204
    2. 'str' → logprob: -7.001295566558838
    3. 'stract' → logprob: -8.12629508972168
    4. 'straction' → logprob: -10.00129508972168
    5. 'st' → logprob: -10.25129508972168
    6. 'r' → logprob: -13.25129508972168
    7. 's' → logprob: -13.50129508972168
    8. 'strap' → logprob: -14.50129508972168
    9. 'mettre' → logprob: -14.50129508972168
    10. 'stre' → logprob: -14.75129508972168

Token 251: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.00043567578541114926
    2. 'ct' → logprob: -8.750435829162598
    3. 'ir' → logprob: -8.875435829162598
    4. 're' → logprob: -10.375435829162598
    5. 'ction' → logprob: -10.750435829162598
    6. 'it' → logprob: -10.875435829162598
    7. 'er' → logprob: -11.375435829162598
    8. 'uire' → logprob: -12.000435829162598
    9. 'is' → logprob: -12.250435829162598
    10. 'i' → logprob: -12.375435829162598

Token 252: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010110665112733841
    2. ' ' → logprob: -4.760110855102539
    3. 'de' → logprob: -6.760110855102539
    4. '   ' → logprob: -9.010110855102539
    5. ' two' → logprob: -9.385110855102539
    6. ' deux' → logprob: -10.010110855102539
    7. '(' → logprob: -10.135110855102539
    8. ' de' → logprob: -11.135110855102539
    9. 'print' → logprob: -12.010110855102539
    10. '  ' → logprob: -12.010110855102539

Token 253: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0029769872780889273
    2. ' fois' → logprob: -6.627976894378662
    3. ' *' → logprob: -7.002976894378662
    4. 'fois' → logprob: -7.252976894378662
    5. '**' → logprob: -11.37797737121582
    6. 'times' → logprob: -11.62797737121582
    7. ' ' → logprob: -12.00297737121582
    8. ' times' → logprob: -12.37797737121582
    9. '```' → logprob: -13.87797737121582
    10. ' ' → logprob: -15.50297737121582

Token 254: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0026999011170119047
    2. 'la' → logprob: -6.252699851989746
    3. ' min' → logprob: -7.252699851989746
    4. 'le' → logprob: -10.627699851989746
    5. '(min' → logprob: -11.252699851989746
    6. ' la' → logprob: -11.377699851989746
    7. 'minimum' → logprob: -12.002699851989746
    8. 'the' → logprob: -12.127699851989746
    9. 'minimal' → logprob: -13.877699851989746
    10. '	min' → logprob: -14.627699851989746

Token 255: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.848420551046729e-05
    2. ' min' → logprob: -10.0000581741333
    3. 'minimum' → logprob: -11.5000581741333
    4. '(min' → logprob: -12.8750581741333
    5. 'minimal' → logprob: -15.6250581741333
    6. '[min' → logprob: -17.125059127807617
    7. '	min' → logprob: -17.625059127807617
    8. 'mini' → logprob: -18.625059127807617
    9. '.min' → logprob: -18.875059127807617
    10. '-min' → logprob: -19.375059127807617

Token 256: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.2064230591058731
    2. 'min' → logprob: -1.706423044204712
    3. ' petite' → logprob: -5.706423282623291
    4. 'small' → logprob: -6.456423282623291
    5. '```' → logprob: -10.081422805786133
    6. ' minimale' → logprob: -11.331422805786133
    7. '小' → logprob: -11.831422805786133
    8. 'mini' → logprob: -11.956422805786133
    9. '   ' → logprob: -12.081422805786133
    10. 'minimal' → logprob: -12.456422805786133

Token 257: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4467301070690155
    2. 'val' → logprob: -1.571730136871338
    3. '(abs' → logprob: -2.071730136871338
    4. '(A' → logprob: -4.321730136871338
    5. 'A' → logprob: -4.821730136871338
    6. 'min' → logprob: -6.321730136871338
    7. ' abs' → logprob: -6.446730136871338
    8. '_abs' → logprob: -7.321730136871338
    9. 'value' → logprob: -7.446730136871338
    10. ' valeur' → logprob: -8.44672966003418

Token 258: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05253259465098381
    2. '(abs' → logprob: -3.55253267288208
    3. 'min' → logprob: -3.92753267288208
    4. '_abs' → logprob: -6.55253267288208
    5. ' abs' → logprob: -7.42753267288208
    6. '   ' → logprob: -7.80253267288208
    7. '(min' → logprob: -8.552532196044922
    8. 'ab' → logprob: -9.552532196044922
    9. '(A' → logprob: -10.302532196044922
    10. 'absolute' → logprob: -10.802532196044922

Token 259: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.015754899010062218
    2. 'ol' → logprob: -4.390754699707031
    3. 'value' → logprob: -7.140754699707031
    4. 'oul' → logprob: -7.640754699707031
    5. 'alue' → logprob: -7.890754699707031
    6. 'ente' → logprob: -8.390754699707031
    7. 'abs' → logprob: -8.515754699707031
    8. 'oue' → logprob: -8.515754699707031
    9. 'oute' → logprob: -8.640754699707031
    10. 'ule' → logprob: -8.890754699707031

Token 260: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11326701939105988
    2. 'else' → logprob: -2.488266944885254
    3. '       ' → logprob: -3.863266944885254
    4. ':' → logprob: -6.363266944885254
    5. ' else' → logprob: -6.738266944885254
    6. 'print' → logprob: -10.113266944885254
    7. ':
' → logprob: -10.738266944885254
    8. '(' → logprob: -11.238266944885254
    9. '()' → logprob: -11.613266944885254
    10. '	else' → logprob: -11.738266944885254

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12328524142503738
    2. 'else' → logprob: -2.2482852935791016
    3. ' else' → logprob: -5.248285293579102
    4. '       ' → logprob: -5.623285293579102
    5. ':' → logprob: -6.498285293579102
    6. 'print' → logprob: -11.748285293579102
    7. '	else' → logprob: -11.998285293579102
    8. 'elif' → logprob: -11.998285293579102
    9. '```' → logprob: -12.998285293579102
    10. ':
' → logprob: -13.123285293579102

Token 262: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15016056597232819
    2. '   ' → logprob: -2.025160551071167
    3. ' else' → logprob: -4.900160789489746
    4. 'elif' → logprob: -11.900160789489746
    5. '	else' → logprob: -13.025160789489746
    6. ':' → logprob: -14.025160789489746
    7. 'print' → logprob: -14.650160789489746
    8. '       ' → logprob: -15.025160789489746
    9. '```' → logprob: -15.275160789489746
    10. '_else' → logprob: -15.400160789489746

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07711609452962875
    2. ':
' → logprob: -2.827116012573242
    3. '       ' → logprob: -4.202116012573242
    4. '   ' → logprob: -10.202116012573242
    5. ' :' → logprob: -11.077116012573242
    6. ' :
' → logprob: -11.452116012573242
    7. '):
' → logprob: -13.202116012573242
    8. ':
' → logprob: -14.077116012573242
    9. '():
' → logprob: -14.077116012573242
    10. ':

' → logprob: -14.077116012573242

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03056141547858715
    2. ' print' → logprob: -4.280561447143555
    3. 'print' → logprob: -4.280561447143555
    4. '   ' → logprob: -6.030561447143555
    5. '    ' → logprob: -11.405561447143555
    6. '           ' → logprob: -12.530561447143555
    7. '     ' → logprob: -12.905561447143555
    8. '      ' → logprob: -13.155561447143555
    9. '```' → logprob: -13.405561447143555
    10. ' s' → logprob: -13.780561447143555

Token 265: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04028277471661568
    2. ' print' → logprob: -3.415282726287842
    3. '       ' → logprob: -5.040282726287842
    4. '   ' → logprob: -9.415283203125
    5. 'val' → logprob: -10.415283203125
    6. 'min' → logprob: -11.915283203125
    7. 'v' → logprob: -12.165283203125
    8. 'small' → logprob: -12.790283203125
    9. '	print' → logprob: -12.915283203125
    10. 's' → logprob: -13.415283203125

Token 266: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.0003024537581950426
    2. '(' → logprob: -8.6253023147583
    3. 'sum' → logprob: -9.1253023147583
    4. ' (' → logprob: -11.3753023147583
    5. ' sum' → logprob: -13.2503023147583
    6. '(s' → logprob: -14.5003023147583
    7. '((' → logprob: -15.1253023147583
    8. '(abs' → logprob: -17.625303268432617
    9. ',sum' → logprob: -18.000303268432617
    10. '=sum' → logprob: -18.000303268432617

Token 267: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. ' (' → logprob: -18.0
    4. ')' → logprob: -19.125
    5. '(abs' → logprob: -19.625
    6. '(sum' → logprob: -20.125
    7. 'A' → logprob: -20.375
    8. '(
' → logprob: -20.625
    9. '(a' → logprob: -20.75
    10. '((' → logprob: -20.875

Token 268: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.008800933137536049
    2. 'A' → logprob: -4.758800983428955
    3. '(A' → logprob: -9.133800506591797
    4. '_abs' → logprob: -10.633800506591797
    5. 'Abs' → logprob: -10.883800506591797
    6. '(abs' → logprob: -11.383800506591797
    7. ' abs' → logprob: -11.508800506591797
    8. ' A' → logprob: -12.633800506591797
    9. '_A' → logprob: -12.883800506591797
    10. '[A' → logprob: -13.133800506591797

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.591176450252533
    2. ' -' → logprob: -0.841176450252533
    3. '-' → logprob: -4.216176509857178
    4. ' )' → logprob: -8.59117603302002
    5. ')-' → logprob: -8.71617603302002
    6. ' ' → logprob: -12.09117603302002
    7. '   ' → logprob: -12.71617603302002
    8. '()' → logprob: -12.96617603302002
    9. ' ' → logprob: -13.34117603302002
    10. '-)' → logprob: -13.71617603302002

Token 270: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0380525141954422
    2. '-' → logprob: -3.288052558898926
    3. ' ' → logprob: -12.163052558898926
    4. ')' → logprob: -12.538052558898926
    5. '   ' → logprob: -13.288052558898926
    6. ' ' → logprob: -15.288052558898926
    7. '  ' → logprob: -16.03805160522461
    8. '    ' → logprob: -17.03805160522461
    9. '"' → logprob: -17.03805160522461
    10. '```' → logprob: -17.16305160522461

Token 271: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. '  ' → logprob: -18.250335693359375
    5. '```' → logprob: -18.625335693359375
    6. '２' → logprob: -18.875335693359375
    7. ' two' → logprob: -19.000335693359375
    8. '       ' → logprob: -19.125335693359375
    9. 'two' → logprob: -19.750335693359375
    10. '    ' → logprob: -19.875335693359375

Token 272: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.3750057220459
    4. '(' → logprob: -17.6250057220459
    5. '```' → logprob: -18.6250057220459
    6. 'two' → logprob: -18.8750057220459
    7. '２' → logprob: -19.3750057220459
    8. '  ' → logprob: -20.0000057220459
    9. '3' → logprob: -20.3125057220459
    10. '       ' → logprob: -20.5625057220459

Token 273: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3132776618003845
    2. ' *' → logprob: -1.3132777214050293
    3. '*A' → logprob: -11.188277244567871
    4. ' ' → logprob: -13.938277244567871
    5. '*object' → logprob: -14.938277244567871
    6. '**' → logprob: -15.063277244567871
    7. ' ' → logprob: -15.438277244567871
    8. '*(' → logprob: -15.813277244567871
    9. '*out' → logprob: -16.938278198242188
    10. 'min' → logprob: -17.063278198242188

Token 274: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00012487331696320325
    2. ' min' → logprob: -9.00012493133545
    3. '(min' → logprob: -13.50012493133545
    4. '[min' → logprob: -18.375123977661133
    5. '	min' → logprob: -19.375123977661133
    6. '.min' → logprob: -21.125123977661133
    7. 'minimum' → logprob: -21.125123977661133
    8. 'mini' → logprob: -21.750123977661133
    9. '=min' → logprob: -22.375123977661133
    10. '   ' → logprob: -22.500123977661133

Token 275: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'A' → logprob: -17.125001907348633
    4. '(
' → logprob: -18.500001907348633
    5. ' (' → logprob: -18.875001907348633
    6. ')' → logprob: -19.000001907348633
    7. '((' → logprob: -20.125001907348633
    8. '(abs' → logprob: -20.250001907348633
    9. '(a' → logprob: -20.250001907348633
    10. '[A' → logprob: -21.375001907348633

Token 276: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.008619185537099838
    2. 'A' → logprob: -4.75861930847168
    3. '(abs' → logprob: -13.38361930847168
    4. 'ab' → logprob: -14.00861930847168
    5. ' A' → logprob: -14.50861930847168
    6. ' abs' → logprob: -14.75861930847168
    7. 'Abs' → logprob: -14.75861930847168
    8. ')' → logprob: -14.88361930847168
    9. 'ABS' → logprob: -15.00861930847168
    10. '(A' → logprob: -15.88361930847168

Token 277: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028928478714078665
    2. ')' → logprob: -5.877892971038818
    3. ')))' → logprob: -9.75289249420166
    4. '()))' → logprob: -11.37789249420166
    5. '[' → logprob: -12.00289249420166
    6. '))
' → logprob: -12.12789249420166
    7. '])' → logprob: -13.25289249420166
    8. ' ))' → logprob: -13.37789249420166
    9. ']))' → logprob: -14.00289249420166
    10. '   ' → logprob: -14.12789249420166

Token 278: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' App' (ID: 2583)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.4907984137535095
    2. '(' → logprob: -1.6157984733581543
    3. '<|end|>' → logprob: -2.8657984733581543
    4. '#' → logprob: -2.9907984733581543
    5. '\n' → logprob: -3.7407984733581543
    6. '
' → logprob: -4.115798473358154
    7. ' calculate' → logprob: -4.240798473358154
    8. ')' → logprob: -4.990798473358154
    9. '(
' → logprob: -5.740798473358154
    10. '\' → logprob: -5.865798473358154

Token 280: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.003651860635727644
    2. 'eler' → logprob: -5.628652095794678
    3. 'elé' → logprob: -10.25365161895752
    4. '()' → logprob: -13.37865161895752
    5. 'elar' → logprob: -13.50365161895752
    6. '#' → logprob: -13.50365161895752
    7. 'l' → logprob: -13.62865161895752
    8. 'elf' → logprob: -13.62865161895752
    9. 'ar' → logprob: -13.75365161895752
    10. '```' → logprob: -13.87865161895752

Token 281: ' de' (ID: 334)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.06237756833434105
    2. 'def' → logprob: -3.187377452850342
    3. '()' → logprob: -4.437377452850342
    4. '(' → logprob: -5.812377452850342
    5. '(c' → logprob: -6.312377452850342
    6. ' calculate' → logprob: -6.562377452850342
    7. 'alculate' → logprob: -7.937377452850342
    8. 'c' → logprob: -7.937377452850342
    9. '();' → logprob: -9.3123779296875
    10. '(
' → logprob: -9.5623779296875

Token 282: ' la' (ID: 557)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5759414434432983
    2. 'calculate' → logprob: -0.8259414434432983
    3. 'alculate' → logprob: -13.82594108581543
    4. '.calculate' → logprob: -15.45094108581543
    5. '()' → logprob: -15.70094108581543
    6. ' compute' → logprob: -16.32594108581543
    7. 'c' → logprob: -16.32594108581543
    8. ' calcul' → logprob: -16.57594108581543
    9. ' ' → logprob: -16.82594108581543
    10. '(c' → logprob: -16.95094108581543

Token 283: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -2.6537622034084052e-05
    2. 'def' → logprob: -10.62502670288086
    3. ' calculate' → logprob: -13.25002670288086
    4. 'define' → logprob: -15.87502670288086
    5. 'function' → logprob: -16.25002670288086
    6. 'main' → logprob: -16.37502670288086
    7. '```' → logprob: -16.50002670288086
    8. 'alculate' → logprob: -16.75002670288086
    9. 'if' → logprob: -17.50002670288086
    10. 'compute' → logprob: -17.87502670288086

Token 284: ' principale' (ID: 68926)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.00012511172099038959
    2. '
' → logprob: -9.00012493133545
    3. ' calculate' → logprob: -14.25012493133545
    4. 'def' → logprob: -14.62512493133545
    5. '```' → logprob: -15.25012493133545
    6. '\' → logprob: -16.125125885009766
    7. '.calculate' → logprob: -16.250125885009766
    8. 'Calculate' → logprob: -17.875125885009766
    9. '  
' → logprob: -18.000125885009766
    10. '

' → logprob: -18.000125885009766

Token 285: ' si' (ID: 1784)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.259079363080673e-05
    2. '
' → logprob: -11.750012397766113
    3. ' calculate' → logprob: -12.500012397766113
    4. '```' → logprob: -15.000012397766113
    5. '.calculate' → logprob: -15.500012397766113
    6. 'if' → logprob: -15.750012397766113
    7. 'def' → logprob: -15.875012397766113
    8. 'Calculate' → logprob: -17.25001335144043
    9. 'alculate' → logprob: -17.25001335144043
    10. '\' → logprob: -17.87501335144043

Token 286: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16022463142871857
    2. ' __' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.285224914550781
    4. 'name' → logprob: -16.03522491455078
    5. '___' → logprob: -17.03522491455078
    6. '```' → logprob: -17.91022491455078
    7. ' ' → logprob: -18.03522491455078
    8. ' name' → logprob: -18.41022491455078
    9. '/__' → logprob: -18.41022491455078
    10. '_name' → logprob: -18.41022491455078

Token 287: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005665206350386143
    2. ' __' → logprob: -5.255665302276611
    3. ' ==' → logprob: -8.255664825439453
    4. '==' → logprob: -9.505664825439453
    5. 'if' → logprob: -9.880664825439453
    6. 'name' → logprob: -11.130664825439453
    7. '_' → logprob: -12.005664825439453
    8. '```' → logprob: -12.005664825439453
    9. '_name' → logprob: -12.380664825439453
    10. '=' → logprob: -12.755664825439453

Token 288: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9139664769172668
    2. ' ==' → logprob: -0.9139664769172668
    3. '==' → logprob: -1.788966417312622
    4. ' __' → logprob: -4.538966655731201
    5. ' is' → logprob: -5.038966655731201
    6. 'est' → logprob: -5.163966655731201
    7. ' est' → logprob: -6.038966655731201
    8. 'if' → logprob: -6.163966655731201
    9. 'is' → logprob: -6.413966655731201
    10. '```' → logprob: -7.413966655731201

Token 289: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018207652494311333
    2. ' __' → logprob: -4.018207550048828
    3. 'name' → logprob: -10.393207550048828
    4. '_name' → logprob: -11.768207550048828
    5. '___' → logprob: -12.393207550048828
    6. ' "__' → logprob: -13.018207550048828
    7. 'le' → logprob: -13.393207550048828
    8. '"' → logprob: -13.643207550048828
    9. ' exécut' → logprob: -13.643207550048828
    10. '/__' → logprob: -13.643207550048828

Token 290: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.16424968838691711
    2. '__' → logprob: -2.1642496585845947
    3. ' en' → logprob: -4.164249897003174
    4. 'if' → logprob: -4.789249897003174
    5. 'direct' → logprob: -5.664249897003174
    6. 'e' → logprob: -5.914249897003174
    7. ' directement' → logprob: -6.289249897003174
    8. '   ' → logprob: -7.039249897003174
    9. 'ed' → logprob: -7.164249897003174
    10. ' directly' → logprob: -7.164249897003174

Token 291: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07672180980443954
    2. '```' → logprob: -3.4517219066619873
    3. ' en' → logprob: -4.201721668243408
    4. 'en' → logprob: -4.326721668243408
    5. ' if' → logprob: -4.826721668243408
    6. '__' → logprob: -6.076721668243408
    7. ' sous' → logprob: -7.326721668243408
    8. ' under' → logprob: -7.576721668243408
    9. '_en' → logprob: -8.076722145080566
    10. 'under' → logprob: -8.826722145080566

Token 292: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9862216504407115e-05
    2. '
' → logprob: -11.375020027160645
    3. ' if' → logprob: -12.125020027160645
    4. '```' → logprob: -12.750020027160645
    5. '__' → logprob: -18.625019073486328
    6. '``' → logprob: -18.875019073486328
    7. 'i' → logprob: -19.000019073486328
    8. '

' → logprob: -19.125019073486328
    9. '\n' → logprob: -19.250019073486328
    10. '\
' → logprob: -19.375019073486328

Token 293: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004243061877787113
    2. '__' → logprob: -5.504242897033691
    3. ' ' → logprob: -8.754242897033691
    4. ' ' → logprob: -12.504242897033691
    5. '_' → logprob: -13.754242897033691
    6. ' ' → logprob: -14.129242897033691
    7. ' _' → logprob: -14.629242897033691
    8. ' name' → logprob: -15.879242897033691
    9. '_name' → logprob: -15.879242897033691
    10. ' ‌' → logprob: -16.004243850708008

Token 294: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5336512923240662
    2. ' ==' → logprob: -1.408651351928711
    3. '==' → logprob: -1.783651351928711
    4. 'name' → logprob: -7.408651351928711
    5. ' __' → logprob: -8.283651351928711
    6. '=="' → logprob: -9.158651351928711
    7. '_' → logprob: -10.533651351928711
    8. '=='' → logprob: -11.158651351928711
    9. '=' → logprob: -11.658651351928711
    10. ' =="' → logprob: -11.908651351928711

Token 295: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.438573680294212e-06
    2. '==' → logprob: -12.250005722045898
    3. ' ==' → logprob: -15.375005722045898
    4. '__.__' → logprob: -15.875005722045898
    5. '___' → logprob: -16.7500057220459
    6. '_' → logprob: -16.7500057220459
    7. '____' → logprob: -17.3750057220459
    8. '__
' → logprob: -17.7500057220459
    9. 'name' → logprob: -18.2500057220459
    10. ' __' → logprob: -18.2500057220459

Token 296: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008801406249403954
    2. '==' → logprob: -4.758801460266113
    3. ' ==' → logprob: -8.758801460266113
    4. '=="' → logprob: -10.883801460266113
    5. '___' → logprob: -12.133801460266113
    6. '=' → logprob: -13.258801460266113
    7. '_' → logprob: -13.258801460266113
    8. '____' → logprob: -14.133801460266113
    9. '=='' → logprob: -14.758801460266113
    10. '===' → logprob: -15.383801460266113

Token 297: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014465052634477615
    2. ''' → logprob: -4.264464855194092
    3. ' "__' → logprob: -8.13946533203125
    4. '__' → logprob: -12.13946533203125
    5. ' '__' → logprob: -12.51446533203125
    6. ' "' → logprob: -15.76446533203125
    7. '"user' → logprob: -16.38946533203125
    8. '"_' → logprob: -16.76446533203125
    9. '("__' → logprob: -16.76446533203125
    10. '"name' → logprob: -17.01446533203125

Token 298: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. 'name' → logprob: -14.500000953674316
    3. ' main' → logprob: -18.5
    4. 'ma' → logprob: -20.375
    5. 'mai' → logprob: -20.875
    6. '_main' → logprob: -22.0
    7. '	main' → logprob: -22.25
    8. 'm' → logprob: -22.75
    9. '__' → logprob: -22.875
    10. 'maine' → logprob: -23.25

Token 299: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023255378007888794
    2. '__' → logprob: -3.7732553482055664
    3. '__':
' → logprob: -11.523255348205566
    4. '__:' → logprob: -17.898256301879883
    5. '__["' → logprob: -18.773256301879883
    6. '__
' → logprob: -19.773256301879883
    7. '_' → logprob: -19.898256301879883
    8. '__",' → logprob: -20.273256301879883
    9. '___' → logprob: -20.648256301879883
    10. '"' → logprob: -20.648256301879883

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01721334643661976
    2. 'calculate' → logprob: -4.517213344573975
    3. ' calculate' → logprob: -5.142213344573975
    4. '    
' → logprob: -8.892213821411133
    5. ':' → logprob: -10.392213821411133
    6. ':
' → logprob: -10.517213821411133
    7. '```' → logprob: -10.767213821411133
    8. '.calculate' → logprob: -10.892213821411133
    9. 'alculate' → logprob: -11.017213821411133
    10. '<|end|>' → logprob: -11.767213821411133

Token 301: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' (adapté à ' calculate') → logprob: -5.860340752406046e-05
    2. ' calculate' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.2500581741333
    4. 'calc' → logprob: -18.875059127807617
    5. 'cal' → logprob: -19.375059127807617
    6. 'calculator' → logprob: -20.250059127807617
    7. '.calculate' → logprob: -20.625059127807617
    8. 'calcul' → logprob: -20.625059127807617
    9. 'compute' → logprob: -22.750059127807617
    10. 'Calculate' → logprob: -23.625059127807617

Token 302: '_special' (ID: 100315)
  Prédit: '_special'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_special' → logprob: -0.0003908735525328666
    2. '_' → logprob: -7.875391006469727
    3. '_spec' → logprob: -12.000391006469727
    4. '_SPECIAL' → logprob: -13.125391006469727
    5. '_s' → logprob: -13.875391006469727
    6. 'special' → logprob: -14.375391006469727
    7. '_specific' → logprob: -15.000391006469727
    8. ' _' → logprob: -15.875391006469727
    9. '(' → logprob: -16.500391006469727
    10. '("_' → logprob: -17.125391006469727

Token 303: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -12.875003814697266
    3. '_s' → logprob: -14.250003814697266
    4. ' _' → logprob: -14.750003814697266
    5. 'sum' → logprob: -17.500003814697266
    6. '_special' → logprob: -17.625003814697266
    7. '"_' → logprob: -18.750003814697266
    8. '_suffix' → logprob: -18.750003814697266
    9. '_score' → logprob: -18.750003814697266
    10. '_SUM' → logprob: -19.250003814697266

Token 304: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.700132997939363e-05
    2. '()
' → logprob: -11.875017166137695
    3. '(' → logprob: -12.125017166137695
    4. ' ()' → logprob: -13.125017166137695
    5. '()`' → logprob: -14.875017166137695
    6. '()

' → logprob: -15.125017166137695
    7. '();' → logprob: -15.125017166137695
    8. '()">' → logprob: -15.125017166137695
    9. '()<' → logprob: -15.125017166137695
    10. '()]' → logprob: -15.875017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 302
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 214
Précision stricte (1ère position): 34.11%
Précision adaptée (1ère position): 36.09%
Précision (top 10): 70.86%
================================================================================
