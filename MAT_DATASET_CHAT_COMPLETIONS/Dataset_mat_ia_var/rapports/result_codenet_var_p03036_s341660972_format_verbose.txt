================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
ratio, decrement, initial_value = map(int, input().split())

current_value = initial_value

for iteration_index in range(10):

    current_value = ratio * current_value - decrement

    print(current_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'ratio' (ID: 81339)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' decrement' (ID: 121877)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10333279520273209
    2. ' =' → logprob: -2.478332757949829
    3. '_' → logprob: -4.603332996368408
    4. ',' → logprob: -6.478332996368408
    5. '-' → logprob: -6.478332996368408
    6. ':' → logprob: -7.978332996368408
    7. ')' → logprob: -8.10333251953125
    8. ' ' → logprob: -8.35333251953125
    9. '.' → logprob: -9.10333251953125
    10. '*' → logprob: -9.97833251953125

Token 4: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10220080614089966
    2. ' =' → logprob: -2.727200746536255
    3. '_' → logprob: -4.102200984954834
    4. ')' → logprob: -4.977200984954834
    5. ',' → logprob: -5.727200984954834
    6. '(' → logprob: -6.227200984954834
    7. '*' → logprob: -6.352200984954834
    8. ' ' → logprob: -7.602200984954834
    9. '-' → logprob: -7.977200984954834
    10. '.' → logprob: -8.977200508117676

Token 5: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04888460785150528
    2. ' =' → logprob: -3.173884630203247
    3. '_' → logprob: -5.173884391784668
    4. ',' → logprob: -9.048884391784668
    5. ')' → logprob: -10.423884391784668
    6. ':' → logprob: -11.173884391784668
    7. ' ' → logprob: -11.298884391784668
    8. '_=' → logprob: -11.548884391784668
    9. '```' → logprob: -12.048884391784668
    10. '.' → logprob: -12.298884391784668

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056623637676239014
    2. ' =' → logprob: -2.931623697280884
    3. '_' → logprob: -6.431623458862305
    4. '*' → logprob: -10.056623458862305
    5. ',' → logprob: -10.806623458862305
    6. ')' → logprob: -10.931623458862305
    7. '-' → logprob: -11.056623458862305
    8. '```' → logprob: -11.431623458862305
    9. ' ' → logprob: -11.806623458862305
    10. '(' → logprob: -12.931623458862305

Token 7: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6833207607269287
    2. ' ' → logprob: -1.1833207607269287
    3. '1' → logprob: -1.6833207607269287
    4. '10' → logprob: -6.183320999145508
    5. '5' → logprob: -7.933320999145508
    6. '100' → logprob: -8.558320999145508
    7. '[' → logprob: -9.183320999145508
    8. '```' → logprob: -9.558320999145508
    9. ' [' → logprob: -9.808320999145508
    10. ' (' → logprob: -9.933320999145508

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35903772711753845
    2. '```' → logprob: -2.2340376377105713
    3. '(lambda' → logprob: -2.3590376377105713
    4. '(int' → logprob: -3.3590376377105713
    5. '<|end|>' → logprob: -3.7340376377105713
    6. '[int' → logprob: -4.48403787612915
    7. '<int' → logprob: -5.23403787612915
    8. '(token' → logprob: -5.85903787612915
    9. '(str' → logprob: -5.98403787612915
    10. ' (' → logprob: -6.23403787612915

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1957298368215561
    2. ')' → logprob: -1.9457298517227173
    3. '(' → logprob: -4.070729732513428
    4. '<|end|>' → logprob: -4.570729732513428
    5. 'input' → logprob: -6.195729732513428
    6. '(int' → logprob: -6.570729732513428
    7. '(user' → logprob: -6.945729732513428
    8. '(range' → logprob: -7.445729732513428
    9. '[input' → logprob: -7.695729732513428
    10. '(raw' → logprob: -8.445730209350586

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031784253660589457
    2. ' input' → logprob: -5.753178596496582
    3. '(input' → logprob: -14.253178596496582
    4. '```' → logprob: -17.253177642822266
    5. '[input' → logprob: -17.628177642822266
    6. ',input' → logprob: -17.878177642822266
    7. '=input' → logprob: -18.128177642822266
    8. 'range' → logprob: -18.128177642822266
    9. '<input' → logprob: -18.378177642822266
    10. 'user' → logprob: -18.378177642822266

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9313876628875732
    2. '().' → logprob: -2.3063876628875732
    3. '```' → logprob: -2.4313876628875732
    4. '()' → logprob: -2.6813876628875732
    5. '())' → logprob: -2.6813876628875732
    6. ')' → logprob: -2.9313876628875732
    7. '<|end|>' → logprob: -3.5563876628875732
    8. '.readline' → logprob: -4.181387901306152
    9. '<|end|>' → logprob: -4.431387901306152
    10. '(token' → logprob: -4.681387901306152

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.458980300929397e-05
    2. 'strip' → logprob: -9.50008487701416
    3. 'rstrip' → logprob: -12.00008487701416
    4. ' split' → logprob: -13.62508487701416
    5. '(split' → logprob: -13.87508487701416
    6. 'spl' → logprob: -14.62508487701416
    7. 'startswith' → logprob: -15.25008487701416
    8. '```' → logprob: -15.50008487701416
    9. ')' → logprob: -15.62508487701416
    10. 'read' → logprob: -16.250083923339844

Token 13: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08392813056707382
    2. '())' → logprob: -2.583928108215332
    3. '))' → logprob: -5.833928108215332
    4. '()' → logprob: -6.583928108215332
    5. '`)' → logprob: -8.458928108215332
    6. '```' → logprob: -8.958928108215332
    7. '(' → logprob: -9.208928108215332
    8. '()))' → logprob: -9.458928108215332
    9. ')`' → logprob: -10.958928108215332
    10. '<|end|>' → logprob: -11.083928108215332

Token 14: 'current' (ID: 5804)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14761294424533844
    2. 'value' → logprob: -2.522613048553467
    3. 'for' → logprob: -3.147613048553467
    4. 'n' → logprob: -5.522613048553467
    5. '```' → logprob: -6.022613048553467
    6. 'current' → logprob: -6.022613048553467
    7. 'result' → logprob: -7.022613048553467
    8. 'total' → logprob: -7.272613048553467
    9. 'x' → logprob: -7.522613048553467
    10. '`' → logprob: -7.522613048553467

Token 15: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.5727830529212952
    2. '_ratio' → logprob: -0.9477830529212952
    3. '_' → logprob: -3.0727829933166504
    4. ' _' → logprob: -7.19778299331665
    5. '_val' → logprob: -7.69778299331665
    6. '_space' → logprob: -7.82278299331665
    7. '_r' → logprob: -9.072783470153809
    8. '_rate' → logprob: -9.197783470153809
    9. '_amount' → logprob: -10.447783470153809
    10. '_rat' → logprob: -10.572783470153809

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5276516079902649
    2. '=' → logprob: -2.15265154838562
    3. ' *=' → logprob: -2.40265154838562
    4. ' +=' → logprob: -2.77765154838562
    5. ' ' → logprob: -3.02765154838562
    6. ' -=' → logprob: -3.27765154838562
    7. '<|end|>' → logprob: -3.40265154838562
    8. '```' → logprob: -5.402651786804199
    9. ')' → logprob: -5.652651786804199
    10. '*' → logprob: -6.027651786804199

Token 17: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.43561726808547974
    2. ' initial' → logprob: -1.060617208480835
    3. 'ratio' → logprob: -5.560617446899414
    4. ' ratio' → logprob: -5.935617446899414
    5. ' current' → logprob: -8.935617446899414
    6. 'current' → logprob: -9.060617446899414
    7. 'int' → logprob: -9.435617446899414
    8. ' int' → logprob: -10.685617446899414
    9. '(initial' → logprob: -10.685617446899414
    10. ' ' → logprob: -11.685617446899414

Token 18: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.023807533085346222
    2. '_' → logprob: -3.7738075256347656
    3. '_val' → logprob: -7.898807525634766
    4. '_v' → logprob: -8.648807525634766
    5. ' _' → logprob: -12.273807525634766
    6. '```' → logprob: -13.148807525634766
    7. '_
' → logprob: -13.398807525634766
    8. '_Value' → logprob: -13.648807525634766
    9. '_values' → logprob: -13.898807525634766
    10. '_va' → logprob: -14.023807525634766

Token 19: '

' (ID: 279)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0312483310699463
    2. '<|end|>' → logprob: -1.0312483310699463
    3. '>' → logprob: -2.2812483310699463
    4. '*' → logprob: -2.5312483310699463
    5. '-' → logprob: -3.0312483310699463
    6. ')' → logprob: -4.281248092651367
    7. ',' → logprob: -4.781248092651367
    8. '```' → logprob: -5.031248092651367
    9. '<|end|>' → logprob: -5.031248092651367
    10. ' ' → logprob: -6.031248092651367

Token 20: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01723209023475647
    2. ' while' → logprob: -4.1422319412231445
    3. '```' → logprob: -7.1422319412231445
    4. 'for' → logprob: -8.017231941223145
    5. ':' → logprob: -10.517231941223145
    6. '>' → logprob: -10.892231941223145
    7. ')' → logprob: -11.892231941223145
    8. '``' → logprob: -12.392231941223145
    9. 'While' → logprob: -12.642231941223145
    10. ' for' → logprob: -12.767231941223145

Token 21: ' iteration' (ID: 43155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3846948742866516
    2. ' i' → logprob: -1.3846948146820068
    3. ' _' → logprob: -2.759694814682007
    4. '_' → logprob: -5.384695053100586
    5. '  ' → logprob: -7.384695053100586
    6. ' range' → logprob: -9.134695053100586
    7. ' current' → logprob: -9.509695053100586
    8. ' in' → logprob: -9.759695053100586
    9. ' item' → logprob: -10.009695053100586
    10. ' I' → logprob: -10.259695053100586

Token 22: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17276962101459503
    2. 'in' → logprob: -1.9227696657180786
    3. '_' → logprob: -4.672769546508789
    4. '_in' → logprob: -6.547769546508789
    5. ' ' → logprob: -6.797769546508789
    6. '  ' → logprob: -9.797769546508789
    7. 's' → logprob: -9.922769546508789
    8. ',' → logprob: -9.922769546508789
    9. '<|end|>' → logprob: -9.922769546508789
    10. ' _' → logprob: -10.047769546508789

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055302537977695465
    2. 'in' → logprob: -2.930302619934082
    3. ' ' → logprob: -7.930302619934082
    4. '<|end|>' → logprob: -10.805302619934082
    5. '```' → logprob: -11.930302619934082
    6. 'In' → logprob: -12.180302619934082
    7. '	in' → logprob: -12.305302619934082
    8. ',' → logprob: -12.430302619934082
    9. '  ' → logprob: -12.555302619934082
    10. ')' → logprob: -12.805302619934082

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02325526252388954
    2. 'range' → logprob: -3.7732553482055664
    3. '	range' → logprob: -12.273255348205566
    4. ' ' → logprob: -12.398255348205566
    5. '(range' → logprob: -14.273255348205566
    6. ' xrange' → logprob: -16.52325439453125
    7. '  ' → logprob: -16.64825439453125
    8. '```' → logprob: -16.89825439453125
    9. '   ' → logprob: -17.27325439453125
    10. 'Range' → logprob: -17.27325439453125

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006273355334997177
    2. '(current' → logprob: -5.13127326965332
    3. '(len' → logprob: -8.63127326965332
    4. ' (' → logprob: -9.00627326965332
    5. '(initial' → logprob: -11.50627326965332
    6. '(n' → logprob: -12.00627326965332
    7. '(range' → logprob: -12.13127326965332
    8. '(int' → logprob: -12.38127326965332
    9. '(`' → logprob: -12.75627326965332
    10. '(length' → logprob: -13.13127326965332

Token 26: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2804869413375854
    2. '100' → logprob: -1.2804869413375854
    3. '10' → logprob: -1.4054869413375854
    4. 'initial' → logprob: -1.9054869413375854
    5. 'de' → logprob: -4.155487060546875
    6. '0' → logprob: -4.780487060546875
    7. 'ratio' → logprob: -4.780487060546875
    8. 'int' → logprob: -5.155487060546875
    9. ' ' → logprob: -5.405487060546875
    10. ' initial' → logprob: -6.405487060546875

Token 27: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025452205445617437
    2. ')' → logprob: -6.502545356750488
    3. '):
' → logprob: -7.752545356750488
    4. '**' → logprob: -8.377545356750488
    5. ' ):' → logprob: -8.627545356750488
    6. '+' → logprob: -9.252545356750488
    7. ':' → logprob: -10.002545356750488
    8. '   ' → logprob: -10.752545356750488
    9. ',' → logprob: -11.127545356750488
    10. ')**' → logprob: -12.002545356750488

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.559800922870636
    2. ':' → logprob: -1.4348008632659912
    3. ' current' → logprob: -2.059800863265991
    4. 'current' → logprob: -3.684800863265991
    5. '    ' → logprob: -4.43480110168457
    6. '    
' → logprob: -5.05980110168457
    7. '
' → logprob: -5.43480110168457
    8. ':
' → logprob: -5.93480110168457
    9. '     
' → logprob: -6.05980110168457
    10. '```' → logprob: -6.05980110168457

Token 29: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.25357118248939514
    2. 'current' (adapté à ' current') → logprob: -1.8785711526870728
    3. '   ' → logprob: -3.3785712718963623
    4. 'print' → logprob: -4.003571033477783
    5. ' print' → logprob: -4.003571033477783
    6. ' if' → logprob: -8.253571510314941
    7. '    ' → logprob: -9.628571510314941
    8. ' ' → logprob: -10.003571510314941
    9. '```' → logprob: -10.253571510314941
    10. 'if' → logprob: -10.753571510314941

Token 30: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.12697094678878784
    2. '_' → logprob: -2.1269710063934326
    3. ' _' → logprob: -11.501971244812012
    4. '_val' → logprob: -11.501971244812012
    5. '_Value' → logprob: -12.376971244812012
    6. '_values' → logprob: -12.626971244812012
    7. '_space' → logprob: -12.751971244812012
    8. '<|end|>' → logprob: -12.876971244812012
    9. '_VALUE' → logprob: -13.376971244812012
    10. 'value' → logprob: -13.376971244812012

Token 31: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.2980489134788513
    2. '=' → logprob: -1.798048973083496
    3. ' *=' → logprob: -2.423048973083496
    4. ' =' → logprob: -6.423048973083496
    5. '-=' → logprob: -7.173048973083496
    6. '*' → logprob: -8.048048973083496
    7. '//=' → logprob: -8.048048973083496
    8. ' -=' → logprob: -8.423048973083496
    9. ' ' → logprob: -10.298048973083496
    10. '   ' → logprob: -10.298048973083496

Token 32: ' ratio' (ID: 18051)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3007052540779114
    2. 'current' → logprob: -1.4257051944732666
    3. 'int' → logprob: -4.550705432891846
    4. ' int' → logprob: -4.925705432891846
    5. '(current' → logprob: -7.300705432891846
    6. ' (' → logprob: -8.050704956054688
    7. ' max' → logprob: -8.300704956054688
    8. '(int' → logprob: -9.050704956054688
    9. 'max' → logprob: -9.300704956054688
    10. '(' → logprob: -10.925704956054688

Token 33: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03874678909778595
    2. '*' → logprob: -3.2887468338012695
    3. ' ' → logprob: -7.2887468338012695
    4. '-' → logprob: -12.28874683380127
    5. '  ' → logprob: -12.53874683380127
    6. '   ' → logprob: -12.66374683380127
    7. '**' → logprob: -12.78874683380127
    8. ' -' → logprob: -13.16374683380127
    9. ' **' → logprob: -13.78874683380127
    10. ' /' → logprob: -14.16374683380127

Token 34: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023260388523340225
    2. ' current' → logprob: -3.7732603549957275
    3. '(current' → logprob: -12.523260116577148
    4. 'urrent' → logprob: -12.773260116577148
    5. ' ' → logprob: -12.898260116577148
    6. '   ' → logprob: -13.023260116577148
    7. 'cur' → logprob: -14.023260116577148
    8. 'previous' → logprob: -14.523260116577148
    9. '	current' → logprob: -14.898260116577148
    10. '$current' → logprob: -14.898260116577148

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5928495486150496e-05
    2. 'value' → logprob: -11.500016212463379
    3. '_val' → logprob: -12.750016212463379
    4. '_' → logprob: -13.625016212463379
    5. '_values' → logprob: -14.375016212463379
    6. '_Value' → logprob: -14.625016212463379
    7. '_VALUE' → logprob: -15.750016212463379
    8. 'alue' → logprob: -16.000015258789062
    9. 'Value' → logprob: -16.250015258789062
    10. 'valu' → logprob: -16.750015258789062

Token 36: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08914110064506531
    2. '-' → logprob: -2.4641411304473877
    3. ' ' → logprob: -8.839140892028809
    4. ' //' → logprob: -10.839140892028809
    5. '<|end|>' → logprob: -11.214140892028809
    6. ' -=' → logprob: -12.214140892028809
    7. ' ' → logprob: -12.339140892028809
    8. '*' → logprob: -13.339140892028809
    9. '//' → logprob: -13.339140892028809
    10. '#' → logprob: -13.464140892028809

Token 37: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0030587539076805115
    2. ' decrement' → logprob: -6.128058910369873
    3. '   ' → logprob: -7.128058910369873
    4. '(de' → logprob: -11.003058433532715
    5. ' ' → logprob: -11.378058433532715
    6. 'ratio' → logprob: -12.003058433532715
    7. '	de' → logprob: -12.003058433532715
    8. '=' → logprob: -12.128058433532715
    9. '  ' → logprob: -12.378058433532715
    10. '1' → logprob: -12.878058433532715

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7311034798622131
    2. '<|end|>' → logprob: -0.7311034798622131
    3. 'print' → logprob: -4.356103420257568
    4. '   ' → logprob: -5.356103420257568
    5. '```' → logprob: -5.606103420257568
    6. '<|end|>' → logprob: -6.106103420257568
    7. 'current' → logprob: -6.231103420257568
    8. '#' → logprob: -6.231103420257568
    9. ' current' → logprob: -6.856103420257568
    10. '    
' → logprob: -6.856103420257568

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8567449450492859
    2. '   ' → logprob: -1.8567450046539307
    3. 'print' → logprob: -1.9817450046539307
    4. '\n' → logprob: -2.2317450046539307
    5. '<|end|>' → logprob: -2.2317450046539307
    6. ' ' → logprob: -3.6067450046539307
    7. '    
' → logprob: -4.231744766235352
    8. '  
' → logprob: -4.731744766235352
    9. ' print' → logprob: -5.731744766235352
    10. ' 
' → logprob: -6.106744766235352

Token 40: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6690323352813721
    2. 'print' (adapté à ' print') → logprob: -1.169032335281372
    3. '\n' → logprob: -3.169032335281372
    4. ' print' → logprob: -3.169032335281372
    5. ' if' → logprob: -3.919032335281372
    6. '    
' → logprob: -4.294032096862793
    7. '
' → logprob: -4.294032096862793
    8. ' ' → logprob: -4.544032096862793
    9. ' 
' → logprob: -4.794032096862793
    10. '\' → logprob: -5.044032096862793

Token 41: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12711866199970245
    2. '(current' → logprob: -2.1271185874938965
    3. '()' → logprob: -9.377119064331055
    4. '('' → logprob: -9.752119064331055
    5. '("("' → logprob: -10.752119064331055
    6. '(f' → logprob: -12.002119064331055
    7. 'current' → logprob: -12.252119064331055
    8. '((' → logprob: -12.627119064331055
    9. '(cur' → logprob: -12.752119064331055
    10. '(`' → logprob: -13.127119064331055

Token 42: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.684157026233152e-05
    2. '_val' → logprob: -9.875077247619629
    3. '_' → logprob: -10.750077247619629
    4. ')_' → logprob: -13.500077247619629
    5. ')' → logprob: -14.000077247619629
    6. '_)' → logprob: -14.750077247619629
    7. ' _' → logprob: -14.875077247619629
    8. '_Value' → logprob: -15.000077247619629
    9. '_values' → logprob: -15.250077247619629
    10. '_v' → logprob: -15.375077247619629

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')`' → logprob: -15.625001907348633
    4. '`)' → logprob: -15.875001907348633
    5. '))' → logprob: -16.250001907348633
    6. ')
' → logprob: -16.750001907348633
    7. '')' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.625001907348633
    9. ')**' → logprob: -17.750001907348633
    10. '**' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 36.59%
Précision adaptée (1ère position): 36.59%
Précision (top 10): 73.17%
================================================================================
