================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
plus_count = s.count('+')
minus_count = s.count('-')
result = plus_count - minus_count
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013527349568903446
    2. '('' → logprob: -5.1385273933410645
    3. ''' → logprob: -5.3885273933410645
    4. '"' → logprob: -7.1385273933410645
    5. '()' → logprob: -7.1385273933410645
    6. '`' → logprob: -7.2635273933410645
    7. '("("' → logprob: -8.013526916503906
    8. '```' → logprob: -9.013526916503906
    9. '(
' → logprob: -9.138526916503906
    10. ' (' → logprob: -10.388526916503906

Token 4: 'plus' (ID: 11601)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016635870561003685
    2. '+' → logprob: -5.141635894775391
    3. '=' → logprob: -5.891635894775391
    4. 'if' → logprob: -6.141635894775391
    5. '.strip' → logprob: -6.391635894775391
    6. '[' → logprob: -6.391635894775391
    7. 'print' → logprob: -7.016635894775391
    8. ''' → logprob: -8.14163589477539
    9. '_' → logprob: -8.51663589477539
    10. '#' → logprob: -8.89163589477539

Token 5: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.2135578989982605
    2. ' =' → logprob: -2.5885579586029053
    3. '=' → logprob: -2.9635579586029053
    4. '_' → logprob: -3.8385579586029053
    5. 's' → logprob: -3.9635579586029053
    6. '_s' → logprob: -4.338557720184326
    7. 'count' → logprob: -5.838557720184326
    8. '_index' → logprob: -6.213557720184326
    9. '_sum' → logprob: -6.713557720184326
    10. '()' → logprob: -6.963557720184326

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7956923246383667
    2. ' =' → logprob: -1.1706923246383667
    3. '_' → logprob: -1.6706923246383667
    4. 's' → logprob: -3.7956924438476562
    5. ' ' → logprob: -4.420692443847656
    6. ')' → logprob: -5.170692443847656
    7. ' +=' → logprob: -5.295692443847656
    8. '+' → logprob: -6.170692443847656
    9. '+=' → logprob: -7.045692443847656
    10. '[' → logprob: -7.670692443847656

Token 7: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0211162567138672
    2. ' ' → logprob: -1.1461162567138672
    3. ' s' → logprob: -1.5211162567138672
    4. 's' → logprob: -2.271116256713867
    5. '1' → logprob: -9.146116256713867
    6. '+' → logprob: -11.146116256713867
    7. ' ' → logprob: -11.146116256713867
    8. '"' → logprob: -11.271116256713867
    9. ''s' → logprob: -11.396116256713867
    10. ')' → logprob: -11.521116256713867

Token 8: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.22994790971279144
    2. '.' → logprob: -1.6049479246139526
    3. '.split' → logprob: -6.229948043823242
    4. '.replace' → logprob: -6.229948043823242
    5. '+' → logprob: -8.979948043823242
    6. '.strip' → logprob: -9.354948043823242
    7. ' .' → logprob: -9.979948043823242
    8. ''.' → logprob: -9.979948043823242
    9. '.Count' → logprob: -10.104948043823242
    10. '.startswith' → logprob: -10.229948043823242

Token 9: '('+' (ID: 108514)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2181549072265625
    2. '("("' → logprob: -2.0931549072265625
    3. '(' → logprob: -2.8431549072265625
    4. '('+' → logprob: -4.3431549072265625
    5. '("+' → logprob: -6.8431549072265625
    6. '("' → logprob: -9.093154907226562
    7. '('(' → logprob: -9.218154907226562
    8. '("(' → logprob: -9.343154907226562
    9. ''' → logprob: -9.968154907226562
    10. ''(' → logprob: -10.968154907226562

Token 10: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.020481275394558907
    2. '+')' → logprob: -4.645481109619141
    3. '+' → logprob: -5.270481109619141
    4. ')' → logprob: -5.770481109619141
    5. ''' → logprob: -6.395481109619141
    6. '")' → logprob: -8.14548110961914
    7. '1' → logprob: -8.39548110961914
    8. ''+' → logprob: -9.64548110961914
    9. '')
' → logprob: -9.64548110961914
    10. '"' → logprob: -10.14548110961914

Token 11: 'minus' (ID: 80991)
  Prédit: 'minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.6711435317993164
    2. 'if' → logprob: -1.0461435317993164
    3. '-' → logprob: -2.7961435317993164
    4. 'print' → logprob: -3.0461435317993164
    5. 'min' → logprob: -3.6711435317993164
    6. ' minus' → logprob: -7.421143531799316
    7. '```' → logprob: -7.921143531799316
    8. '#' → logprob: -8.171143531799316
    9. 'total' → logprob: -8.171143531799316
    10. 'equal' → logprob: -8.296143531799316

Token 12: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0015136697329580784
    2. '_' → logprob: -7.001513481140137
    3. '_s' → logprob: -7.876513481140137
    4. 's' → logprob: -9.376513481140137
    5. '_counts' → logprob: -9.751513481140137
    6. '_c' → logprob: -10.501513481140137
    7. ''_' → logprob: -11.251513481140137
    8. ' _' → logprob: -11.751513481140137
    9. '_counter' → logprob: -12.126513481140137
    10. '_cnt' → logprob: -12.751513481140137

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0610973946750164
    2. '=' → logprob: -3.3110973834991455
    3. 's' → logprob: -4.186097621917725
    4. '(s' → logprob: -5.936097621917725
    5. '_' → logprob: -6.561097621917725
    6. '(' → logprob: -6.561097621917725
    7. ' ' → logprob: -7.061097621917725
    8. ')' → logprob: -7.436097621917725
    9. '<|end|>' → logprob: -7.936097621917725
    10. ' s' → logprob: -8.936097145080566

Token 14: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5236909985542297
    2. 's' → logprob: -0.8986909985542297
    3. '-' → logprob: -8.398691177368164
    4. ' ' → logprob: -8.898691177368164
    5. 'minus' → logprob: -10.273691177368164
    6. ''s' → logprob: -10.523691177368164
    7. ' minus' → logprob: -10.648691177368164
    8. ' -' → logprob: -10.648691177368164
    9. '0' → logprob: -10.773691177368164
    10. '(s' → logprob: -11.023691177368164

Token 15: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.03570739924907684
    2. '.' → logprob: -3.410707473754883
    3. '.replace' → logprob: -6.410707473754883
    4. '.find' → logprob: -8.285707473754883
    5. '.startswith' → logprob: -10.035707473754883
    6. '.endswith' → logprob: -10.035707473754883
    7. '.split' → logprob: -10.285707473754883
    8. '.index' → logprob: -10.910707473754883
    9. ' .' → logprob: -12.035707473754883
    10. '.rstrip' → logprob: -12.535707473754883

Token 16: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06267175078392029
    2. '('-' → logprob: -2.812671661376953
    3. '(' → logprob: -7.437671661376953
    4. '('-',' → logprob: -10.812671661376953
    5. '('.')' → logprob: -11.062671661376953
    6. '('_' → logprob: -11.062671661376953
    7. '('--' → logprob: -11.687671661376953
    8. '("("' → logprob: -11.812671661376953
    9. ''' → logprob: -12.062671661376953
    10. '('+' → logprob: -12.062671661376953

Token 17: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12723717093467712
    2. '')' → logprob: -2.12723708152771
    3. '()' → logprob: -9.377237319946289
    4. ')
' → logprob: -9.502237319946289
    5. ''' → logprob: -9.752237319946289
    6. '")' → logprob: -10.627237319946289
    7. '+' → logprob: -11.502237319946289
    8. ' )' → logprob: -11.627237319946289
    9. '`)' → logprob: -11.752237319946289
    10. '')
' → logprob: -11.877237319946289

Token 18: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3176078200340271
    2. 'print' → logprob: -1.4426078796386719
    3. '
' → logprob: -3.817607879638672
    4. '\n' → logprob: -5.317607879638672
    5. '```' → logprob: -5.692607879638672
    6. 'result' → logprob: -6.317607879638672
    7. ' if' → logprob: -6.942607879638672
    8. '+
' → logprob: -7.067607879638672
    9. '\' → logprob: -7.692607879638672
    10. '``' → logprob: -8.192607879638672

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06245630979537964
    2. '=' → logprob: -2.8124563694000244
    3. '_' → logprob: -7.687456130981445
    4. ' +=' → logprob: -11.687456130981445
    5. ' ' → logprob: -11.687456130981445
    6. 'space' → logprob: -12.562456130981445
    7. 's' → logprob: -12.687456130981445
    8. ')' → logprob: -13.187456130981445
    9. '_space' → logprob: -13.312456130981445
    10. '_=' → logprob: -14.687456130981445

Token 20: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.386992871761322
    2. 'plus' → logprob: -1.1369929313659668
    3. ''' → logprob: -10.261992454528809
    4. 's' → logprob: -11.636992454528809
    5. ' s' → logprob: -11.761992454528809
    6. ' ' → logprob: -11.886992454528809
    7. ' str' → logprob: -12.011992454528809
    8. '0' → logprob: -12.136992454528809
    9. ' max' → logprob: -12.136992454528809
    10. ' '' → logprob: -12.386992454528809

Token 21: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.8074162653647363e-05
    2. '_' → logprob: -11.375018119812012
    3. '_c' → logprob: -13.000018119812012
    4. '_co' → logprob: -13.500018119812012
    5. '_counts' → logprob: -13.500018119812012
    6. ' _' → logprob: -14.750018119812012
    7. '_sum' → logprob: -15.375018119812012
    8. 'count' → logprob: -15.500018119812012
    9. '_counter' → logprob: -15.875018119812012
    10. 's' → logprob: -16.125017166137695

Token 22: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1427980214357376
    2. ' -' → logprob: -2.1427979469299316
    3. ' minus' → logprob: -4.392797946929932
    4. 'minus' → logprob: -5.892797946929932
    5. '-min' → logprob: -8.64279842376709
    6. '```' → logprob: -9.14279842376709
    7. '-minus' → logprob: -9.64279842376709
    8. '_' → logprob: -10.14279842376709
    9. '+' → logprob: -10.26779842376709
    10. '>' → logprob: -10.64279842376709

Token 23: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.1602286994457245
    2. ' minus' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.035228729248047
    4. 'plus' → logprob: -14.160228729248047
    5. '_minus' → logprob: -14.785228729248047
    6. '```' → logprob: -14.785228729248047
    7. '   ' → logprob: -15.410228729248047
    8. '1' → logprob: -15.410228729248047
    9. ' plus' → logprob: -15.910228729248047
    10. '-minus' → logprob: -16.035228729248047

Token 24: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.539801688631997e-05
    2. '_' → logprob: -10.375065803527832
    3. '```' → logprob: -11.250065803527832
    4. ' _' → logprob: -11.625065803527832
    5. ''_' → logprob: -12.250065803527832
    6. '_counts' → logprob: -13.125065803527832
    7. '_c' → logprob: -13.625065803527832
    8. '"_' → logprob: -14.000065803527832
    9. '_counter' → logprob: -14.250065803527832
    10. 's' → logprob: -15.000065803527832

Token 25: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007522981148213148
    2. '
' → logprob: -5.757523059844971
    3. '\n' → logprob: -5.882523059844971
    4. ' print' → logprob: -7.632523059844971
    5. '<|end|>' → logprob: -8.132522583007812
    6. '#' → logprob: -8.757522583007812
    7. '\' → logprob: -9.007522583007812
    8. '```' → logprob: -9.007522583007812
    9. ' ' → logprob: -9.507522583007812
    10. '+' → logprob: -9.757522583007812

Token 26: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00038419815246015787
    2. '
' → logprob: -8.000384330749512
    3. ' print' → logprob: -10.375384330749512
    4. '\n' → logprob: -11.750384330749512
    5. '```' → logprob: -12.375384330749512
    6. '#' → logprob: -13.500384330749512
    7. '<|end|>' → logprob: -13.625384330749512
    8. '#print' → logprob: -14.750384330749512
    9. '(print' → logprob: -14.875384330749512
    10. '\' → logprob: -15.000384330749512

Token 27: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10022662580013275
    2. '(result' → logprob: -2.350226640701294
    3. '('' → logprob: -11.975226402282715
    4. '("("' → logprob: -12.350226402282715
    5. '(s' → logprob: -13.100226402282715
    6. '()' → logprob: -13.225226402282715
    7. '(res' → logprob: -13.350226402282715
    8. '(`' → logprob: -13.850226402282715
    9. '((' → logprob: -14.350226402282715
    10. '(f' → logprob: -14.725226402282715

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')`' → logprob: -16.375
    5. '`)' → logprob: -17.625
    6. '')' → logprob: -18.0
    7. ')
' → logprob: -18.875
    8. '）' → logprob: -19.5
    9. '()' → logprob: -20.0
    10. ')**' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 92.31%
================================================================================
