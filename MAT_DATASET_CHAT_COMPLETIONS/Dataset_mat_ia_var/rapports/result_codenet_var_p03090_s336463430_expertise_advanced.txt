================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import combinations

def main():
    n = int(stdin.readline())
    parity = n % 2
    offset = n - 2 + (parity ^ 1)
    print((n * (n - 2) // 2) if parity == 0 else (((n - 1) * (n - 2) + (n - 1)) // 2))
    forbidden = {frozenset({i, offset - i}) for i in range(n) if i < (offset - i) < n}
    for i, j in combinations(range(n), 2):
        if frozenset({i, j}) not in forbidden:
            print(i + 1, j + 1)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05728183686733246
    2. '\n' → logprob: -3.807281732559204
    3. '.readline' → logprob: -3.807281732559204
    4. '
' → logprob: -5.432281970977783
    5. '```' → logprob: -6.057281970977783
    6. '.read' → logprob: -6.932281970977783
    7. 'import' → logprob: -6.932281970977783
    8. 'newline' → logprob: -7.557281970977783
    9. '\' → logprob: -7.682281970977783
    10. '' → logprob: -8.307281494140625

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19526337087154388
    2. '.readline' → logprob: -2.320263385772705
    3. '\n' → logprob: -3.195263385772705
    4. 'newline' → logprob: -4.570263385772705
    5. '
' → logprob: -4.695263385772705
    6. 'import' → logprob: -5.695263385772705
    7. '.read' → logprob: -5.820263385772705
    8. 'print' → logprob: -5.945263385772705
    9. '```' → logprob: -5.945263385772705
    10. '\' → logprob: -6.570263385772705

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.033909738063812256
    2. ' sys' → logprob: -3.783909797668457
    3. ' io' → logprob: -4.783909797668457
    4. ' math' → logprob: -7.283909797668457
    5. ' typing' → logprob: -7.658909797668457
    6. 'os' → logprob: -7.908909797668457
    7. ' stdout' → logprob: -9.033909797668457
    8. ' itertools' → logprob: -9.033909797668457
    9. ' subprocess' → logprob: -9.283909797668457
    10. ' space' → logprob: -9.408909797668457

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020580431446433067
    2. 'import' → logprob: -3.895580530166626
    3. ' ' → logprob: -11.020580291748047
    4. '	import' → logprob: -11.770580291748047
    5. '.' → logprob: -12.395580291748047
    6. '_import' → logprob: -12.770580291748047
    7. ' im' → logprob: -13.645580291748047
    8. ' itertools' → logprob: -13.770580291748047
    9. '.import' → logprob: -13.770580291748047
    10. ' .' → logprob: -14.145580291748047

Token 8: ' combinations' (ID: 43835)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6071425676345825
    2. 'per' → logprob: -1.9821425676345825
    3. 'count' → logprob: -1.9821425676345825
    4. 'product' → logprob: -3.107142448425293
    5. 'group' → logprob: -3.357142448425293
    6. ' permutations' → logprob: -3.607142448425293
    7. 'chain' → logprob: -3.857142448425293
    8. 'import' → logprob: -4.357142448425293
    9. 'cycle' → logprob: -4.357142448425293
    10. 'com' → logprob: -4.482142448425293

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2558516263961792
    2. '(' → logprob: -2.8808517456054688
    3. 'for' → logprob: -3.1308517456054688
    4. '\' → logprob: -3.1308517456054688
    5. 'import' → logprob: -3.2558517456054688
    6. '
' → logprob: -4.380851745605469
    7. 'newline' → logprob: -5.130851745605469
    8. '(
' → logprob: -5.255851745605469
    9. 'print' → logprob: -5.755851745605469
    10. 'a' → logprob: -5.880851745605469

Token 10: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40914076566696167
    2. '\' → logprob: -2.4091408252716064
    3. 'def' → logprob: -2.5341408252716064
    4. '\n' → logprob: -2.9091408252716064
    5. 'import' → logprob: -3.4091408252716064
    6. 'data' → logprob: -4.034140586853027
    7. '(' → logprob: -4.534140586853027
    8. 'd' → logprob: -5.034140586853027
    9. 'n' → logprob: -5.034140586853027
    10. 'a' → logprob: -5.159140586853027

Token 11: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06569132208824158
    2. ' factorial' → logprob: -4.0656914710998535
    3. ' process' → logprob: -4.3156914710998535
    4. '_' → logprob: -5.3156914710998535
    5. ' calculate' → logprob: -5.4406914710998535
    6. ' read' → logprob: -5.4406914710998535
    7. ' _' → logprob: -5.9406914710998535
    8. ' f' → logprob: -6.1906914710998535
    9. ' find' → logprob: -6.3156914710998535
    10. ' factor' → logprob: -6.5656914710998535

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031020134687423706
    2. '():' → logprob: -3.656020164489746
    3. ':' → logprob: -5.781020164489746
    4. '(:' → logprob: -6.781020164489746
    5. '):' → logprob: -9.281020164489746
    6. '```' → logprob: -9.281020164489746
    7. ' (' → logprob: -9.406020164489746
    8. '(":' → logprob: -10.531020164489746
    9. '(
' → logprob: -11.031020164489746
    10. ')' → logprob: -11.031020164489746

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024368107318878174
    2. ' ' → logprob: -4.7743682861328125
    3. ' for' → logprob: -5.5243682861328125
    4. '    
' → logprob: -5.8993682861328125
    5. '    ' → logprob: -6.6493682861328125
    6. 'n' → logprob: -6.6493682861328125
    7. '<|end|>' → logprob: -6.8993682861328125
    8. 'input' → logprob: -7.0243682861328125
    9. 'for' → logprob: -7.0243682861328125
    10. '```' → logprob: -7.6493682861328125

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6058915257453918
    2. 'n' (adapté à ' n') → logprob: -1.605891466140747
    3. ' data' → logprob: -2.105891466140747
    4. ' for' → logprob: -3.105891466140747
    5. ' input' → logprob: -3.105891466140747
    6. ' lines' → logprob: -4.230891704559326
    7. 'data' → logprob: -4.855891704559326
    8. 'for' → logprob: -5.355891704559326
    9. ' numbers' → logprob: -5.480891704559326
    10. ' inputs' → logprob: -5.730891704559326

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047117460519075394
    2. ' ' → logprob: -3.1721174716949463
    3. '=' → logprob: -5.672117233276367
    4. ',' → logprob: -7.922117233276367
    5. ' ,' → logprob: -8.672117233276367
    6. '  ' → logprob: -9.797117233276367
    7. ' )' → logprob: -10.922117233276367
    8. ' space' → logprob: -11.672117233276367
    9. ' =)' → logprob: -11.797117233276367
    10. '=int' → logprob: -12.047117233276367

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007846636697649956
    2. 'int' → logprob: -4.882846832275391
    3. ' ' → logprob: -8.38284683227539
    4. ' len' → logprob: -12.25784683227539
    5. '10' → logprob: -13.13284683227539
    6. ' map' → logprob: -13.75784683227539
    7. '20' → logprob: -14.25784683227539
    8. '  ' → logprob: -14.50784683227539
    9. '=int' → logprob: -14.50784683227539
    10. '5' → logprob: -14.63284683227539

Token 17: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.2899557650089264
    2. '(' → logprob: -1.539955735206604
    3. '(input' → logprob: -3.2899558544158936
    4. '(st' → logprob: -10.414956092834473
    5. ' (' → logprob: -10.914956092834473
    6. 'stdin' → logprob: -12.664956092834473
    7. '()' → logprob: -13.539956092834473
    8. 'input' → logprob: -13.539956092834473
    9. '(
' → logprob: -14.414956092834473
    10. ' stdin' → logprob: -14.539956092834473

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002540109446272254
    2. '.read' → logprob: -6.502540111541748
    3. '().' → logprob: -7.127540111541748
    4. '.' → logprob: -8.37753963470459
    5. '()' → logprob: -13.37753963470459
    6. 'read' → logprob: -14.00253963470459
    7. ')' → logprob: -14.25253963470459
    8. '())' → logprob: -14.37753963470459
    9. '.readlines' → logprob: -14.87753963470459
    10. '.Read' → logprob: -15.50253963470459

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03926168009638786
    2. '()' → logprob: -3.28926157951355
    3. '().' → logprob: -6.789261817932129
    4. '()))' → logprob: -9.789261817932129
    5. ' ())' → logprob: -10.789261817932129
    6. '(' → logprob: -11.914261817932129
    7. ')' → logprob: -12.539261817932129
    8. '();)' → logprob: -13.039261817932129
    9. '()]' → logprob: -13.914261817932129
    10. '()),' → logprob: -14.414261817932129

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26298144459724426
    2. '    
' → logprob: -1.8879814147949219
    3. ' for' → logprob: -4.262981414794922
    4. 'for' → logprob: -4.387981414794922
    5. 'data' → logprob: -5.137981414794922
    6. ')' → logprob: -5.262981414794922
    7. ' 
' → logprob: -5.387981414794922
    8. ' ' → logprob: -5.512981414794922
    9. ')
' → logprob: -5.637981414794922
    10. '\' → logprob: -5.762981414794922

Token 21: ' parity' (ID: 113181)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.277945637702942
    2. ' ' → logprob: -2.1529455184936523
    3. ' for' → logprob: -2.5279455184936523
    4. ')' → logprob: -2.6529455184936523
    5. '    
' → logprob: -2.9029455184936523
    6. 'data' → logprob: -2.9029455184936523
    7. ' 
' → logprob: -3.1529455184936523
    8. 'for' → logprob: -3.2779455184936523
    9. '\' → logprob: -3.4029455184936523
    10. 'c' → logprob: -3.6529455184936523

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4292978346347809
    2. ' =' → logprob: -1.1792978048324585
    3. '=' → logprob: -3.304297924041748
    4. 's' → logprob: -6.054297924041748
    5. ' ' → logprob: -6.304297924041748
    6. ')' → logprob: -8.55429744720459
    7. '(' → logprob: -9.17929744720459
    8. '_=' → logprob: -9.17929744720459
    9. '_counts' → logprob: -9.42929744720459
    10. '_count' → logprob: -9.80429744720459

Token 23: ' n' (ID: 297)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7746224403381348
    2. ' n' → logprob: -1.1496224403381348
    3. 'n' → logprob: -2.3996224403381348
    4. '[n' → logprob: -2.6496224403381348
    5. '[' → logprob: -3.7746224403381348
    6. ' []' → logprob: -4.149622440338135
    7. ' ' → logprob: -4.774622440338135
    8. '[]' → logprob: -5.899622440338135
    9. ' '' → logprob: -6.024622440338135
    10. ' "' → logprob: -6.399622440338135

Token 24: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01197561901062727
    2. '%' → logprob: -4.7619757652282715
    3. ' ' → logprob: -5.8869757652282715
    4. ' &' → logprob: -7.5119757652282715
    5. ')' → logprob: -11.636975288391113
    6. ' ' → logprob: -12.386975288391113
    7. ' %
' → logprob: -13.011975288391113
    8. '  ' → logprob: -13.261975288391113
    9. ' ^' → logprob: -13.386975288391113
    10. ' ==' → logprob: -13.511975288391113

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023246755823493004
    2. ' ' → logprob: -3.7732467651367188
    3. '4' → logprob: -14.523246765136719
    4. '  ' → logprob: -15.648246765136719
    5. '   ' → logprob: -15.898246765136719
    6. '```' → logprob: -16.02324676513672
    7. '3' → logprob: -16.14824676513672
    8. '10' → logprob: -16.27324676513672
    9. '6' → logprob: -16.77324676513672
    10. ' ' → logprob: -17.71074676513672

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.000019073486328
    3. '10' → logprob: -14.000019073486328
    4. '4' → logprob: -15.125019073486328
    5. '   ' → logprob: -15.500019073486328
    6. '  ' → logprob: -15.625019073486328
    7. '```' → logprob: -15.750019073486328
    8. '3' → logprob: -16.250019073486328
    9. '6' → logprob: -16.250019073486328
    10. '

' → logprob: -18.375019073486328

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' offset' (ID: 8985)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15637779235839844
    2. ' for' → logprob: -3.4063777923583984
    3. '    
' → logprob: -3.5313777923583984
    4. ')' → logprob: -4.031377792358398
    5. ' 
' → logprob: -4.281377792358398
    6. '\n' → logprob: -4.531377792358398
    7. '
' → logprob: -5.031377792358398
    8. ' ' → logprob: -5.281377792358398
    9. 'for' → logprob: -5.281377792358398
    10. '\' → logprob: -5.406377792358398

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007635139394551516
    2. '=' → logprob: -4.882635116577148
    3. 's' → logprob: -10.757635116577148
    4. ' ' → logprob: -12.257635116577148
    5. ')' → logprob: -13.507635116577148
    6. '_' → logprob: -13.882635116577148
    7. ' =)' → logprob: -15.757635116577148
    8. ' ' → logprob: -16.13263511657715
    9. ' +=' → logprob: -16.63263511657715
    10. ',' → logprob: -16.75763511657715

Token 31: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7697569727897644
    2. ' n' → logprob: -1.1447570323944092
    3. '0' → logprob: -2.519757032394409
    4. '1' → logprob: -2.894757032394409
    5. ' (' → logprob: -3.019757032394409
    6. ' parity' → logprob: -4.26975679397583
    7. 'n' → logprob: -4.76975679397583
    8. ' -' → logprob: -5.89475679397583
    9. '2' → logprob: -6.26975679397583
    10. '(' → logprob: -6.26975679397583

Token 32: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10943876206874847
    2. '//' → logprob: -2.85943865776062
    3. ' -' → logprob: -3.85943865776062
    4. '-' → logprob: -4.859438896179199
    5. ' +' → logprob: -5.109438896179199
    6. ' ' → logprob: -5.109438896179199
    7. ' %' → logprob: -6.359438896179199
    8. '+' → logprob: -6.484438896179199
    9. '%' → logprob: -6.859438896179199
    10. '
' → logprob: -8.1094388961792

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5168310403823853
    2. ' ' → logprob: -1.2668310403823853
    3. '2' → logprob: -2.6418309211730957
    4. ' parity' → logprob: -3.5168309211730957
    5. ' (' → logprob: -4.641830921173096
    6. 'par' → logprob: -4.891830921173096
    7. '3' → logprob: -6.891830921173096
    8. '4' → logprob: -7.391830921173096
    9. '(' → logprob: -7.391830921173096
    10. '   ' → logprob: -7.766830921173096

Token 34: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8918346166610718
    2. 'par' → logprob: -1.0168346166610718
    3. '2' → logprob: -1.6418346166610718
    4. '(' → logprob: -4.766834735870361
    5. '(par' → logprob: -4.766834735870361
    6. '3' → logprob: -4.891834735870361
    7. ' ' → logprob: -5.891834735870361
    8. '4' → logprob: -6.141834735870361
    9. '(n' → logprob: -6.641834735870361
    10. ' (' → logprob: -7.141834735870361

Token 35: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04331282526254654
    2. ')' → logprob: -4.793313026428223
    3. '+' → logprob: -4.918313026428223
    4. '*' → logprob: -5.168313026428223
    5. '<|end|>' → logprob: -5.418313026428223
    6. ' ' → logprob: -5.668313026428223
    7. '   ' → logprob: -5.793313026428223
    8. '*n' → logprob: -6.293313026428223
    9. ' 
' → logprob: -6.668313026428223
    10. '<|end|>' → logprob: -7.418313026428223

Token 36: ' (' (ID: 350)
  Prédit: ' parity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.055219512432813644
    2. 'par' → logprob: -3.0552194118499756
    3. '1' → logprob: -6.180219650268555
    4. ' (' → logprob: -6.430219650268555
    5. ' ' → logprob: -6.555219650268555
    6. ' offset' → logprob: -7.555219650268555
    7. '(par' → logprob: -8.055219650268555
    8. ' par' → logprob: -8.930219650268555
    9. '(' → logprob: -8.930219650268555
    10. 'offset' → logprob: -9.180219650268555

Token 37: 'par' (ID: 796)
  Prédit: ' parity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.10420754551887512
    2. 'par' → logprob: -2.3542075157165527
    3. ' ' → logprob: -6.479207515716553
    4. '(par' → logprob: -7.104207515716553
    5. ' (' → logprob: -7.354207515716553
    6. '1' → logprob: -7.354207515716553
    7. ' par' → logprob: -9.729207992553711
    8. ' n' → logprob: -9.979207992553711
    9. '2' → logprob: -10.104207992553711
    10. '   ' → logprob: -10.104207992553711

Token 38: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.00011224505578866228
    2. 'it' → logprob: -9.250112533569336
    3. 'i' → logprob: -12.125112533569336
    4. ' ity' → logprob: -13.250112533569336
    5. '   ' → logprob: -13.750112533569336
    6. ')' → logprob: -13.750112533569336
    7. '-' → logprob: -14.000112533569336
    8. '`' → logprob: -14.625112533569336
    9. 's' → logprob: -14.875112533569336
    10. 'ty' → logprob: -15.000112533569336

Token 39: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024691836908459663
    2. ' )' → logprob: -3.7746918201446533
    3. '))' → logprob: -6.774692058563232
    4. '*' → logprob: -10.149691581726074
    5. '   ' → logprob: -10.149691581726074
    6. ')
' → logprob: -10.274691581726074
    7. ')*' → logprob: -10.524691581726074
    8. ')))' → logprob: -10.524691581726074
    9. ' *' → logprob: -10.649691581726074
    10. ')%' → logprob: -10.774691581726074

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2814953029155731
    2. '1' → logprob: -1.4064953327178955
    3. ' n' → logprob: -9.281495094299316
    4. ')' → logprob: -9.531495094299316
    5. ' (' → logprob: -9.906495094299316
    6. ' )' → logprob: -10.406495094299316
    7. '0' → logprob: -10.406495094299316
    8. '2' → logprob: -10.781495094299316
    9. '   ' → logprob: -11.968995094299316
    10. ' offset' → logprob: -12.343995094299316

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07354667782783508
    2. ' ' → logprob: -2.6985466480255127
    3. '2' → logprob: -6.073546886444092
    4. '0' → logprob: -7.073546886444092
    5. ' n' → logprob: -9.448546409606934
    6. 'offset' → logprob: -9.698546409606934
    7. ' (' → logprob: -9.948546409606934
    8. 'n' → logprob: -9.948546409606934
    9. '3' → logprob: -10.198546409606934
    10. '   ' → logprob: -10.323546409606934

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003782416461035609
    2. '))' → logprob: -8.750378608703613
    3. ' )' → logprob: -8.750378608703613
    4. ')))' → logprob: -10.125378608703613
    5. ')
' → logprob: -11.125378608703613
    6. '   ' → logprob: -13.375378608703613
    7. ' ' → logprob: -13.875378608703613
    8. ')>>' → logprob: -14.750378608703613
    9. ')])' → logprob: -14.875378608703613
    10. '`)' → logprob: -15.000378608703613

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05559463053941727
    2. '    
' → logprob: -3.8055946826934814
    3. ')' → logprob: -4.805594444274902
    4. ' 
' → logprob: -4.930594444274902
    5. '
' → logprob: -5.180594444274902
    6. ' ' → logprob: -5.930594444274902
    7. '\n' → logprob: -6.430594444274902
    8. '   
' → logprob: -6.680594444274902
    9. '  
' → logprob: -6.805594444274902
    10. ')
' → logprob: -7.555594444274902

Token 44: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10324915498495102
    2. ')' → logprob: -2.9782490730285645
    3. ' 
' → logprob: -3.7282490730285645
    4. '\n' → logprob: -5.4782490730285645
    5. '   ' → logprob: -5.6032490730285645
    6. ' ' → logprob: -5.7282490730285645
    7. '    
' → logprob: -6.1032490730285645
    8. '<|end|>' → logprob: -6.6032490730285645
    9. '  
' → logprob: -6.6032490730285645
    10. ')
' → logprob: -6.7282490730285645

Token 45: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17151133716106415
    2. '(offset' → logprob: -1.9215112924575806
    3. '('' → logprob: -5.546511173248291
    4. '((' → logprob: -5.921511173248291
    5. '(n' → logprob: -6.671511173248291
    6. '()' → logprob: -6.921511173248291
    7. ' (' → logprob: -7.546511173248291
    8. '(sum' → logprob: -7.796511173248291
    9. '("' → logprob: -7.921511173248291
    10. '("("' → logprob: -8.04651165008545

Token 46: 'n' (ID: 77)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.49462947249412537
    2. 'n' → logprob: -2.244629383087158
    3. '2' → logprob: -2.369629383087158
    4. ' offset' → logprob: -2.619629383087158
    5. ' n' → logprob: -3.619629383087158
    6. '1' → logprob: -3.869629383087158
    7. ' (' → logprob: -3.994629383087158
    8. '(' → logprob: -4.244629383087158
    9. '(offset' → logprob: -4.494629383087158
    10. '(n' → logprob: -4.744629383087158

Token 47: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7293269038200378
    2. '-' → logprob: -1.3543269634246826
    3. ' *' → logprob: -2.4793269634246826
    4. ' +' → logprob: -2.7293269634246826
    5. '+' → logprob: -3.2293269634246826
    6. '*' → logprob: -3.7293269634246826
    7. ' //' → logprob: -3.9793269634246826
    8. '*(' → logprob: -4.9793267250061035
    9. ' ' → logprob: -5.2293267250061035
    10. '-offset' → logprob: -5.6043267250061035

Token 48: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17337942123413086
    2. '(n' → logprob: -2.173379421234131
    3. 'offset' → logprob: -4.048379421234131
    4. ' offset' → logprob: -4.673379421234131
    5. '(offset' → logprob: -5.798379421234131
    6. 'n' → logprob: -5.798379421234131
    7. ' ' → logprob: -5.923379421234131
    8. '2' → logprob: -6.173379421234131
    9. ' n' → logprob: -6.298379421234131
    10. ')' → logprob: -6.423379421234131

Token 49: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04983729124069214
    2. 'offset' → logprob: -3.299837350845337
    3. '(n' → logprob: -4.799837112426758
    4. ' n' → logprob: -6.299837112426758
    5. ' offset' → logprob: -7.299837112426758
    6. '(offset' → logprob: -7.924837112426758
    7. ' (' → logprob: -8.674837112426758
    8. '2' → logprob: -9.424837112426758
    9. '   ' → logprob: -9.424837112426758
    10. '1' → logprob: -9.424837112426758

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.565270721912384
    2. '-' → logprob: -1.0652706623077393
    3. '+' → logprob: -3.0652706623077393
    4. ' +' → logprob: -3.3152706623077393
    5. ' ' → logprob: -5.940270900726318
    6. ')' → logprob: -6.940270900726318
    7. ' )' → logprob: -8.56527042388916
    8. '-offset' → logprob: -9.19027042388916
    9. '1' → logprob: -9.44027042388916
    10. ' offset' → logprob: -10.19027042388916

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05605831742286682
    2. ' ' → logprob: -2.931058406829834
    3. ' offset' → logprob: -7.056058406829834
    4. 'offset' → logprob: -8.431057929992676
    5. ')' → logprob: -10.306057929992676
    6. '2' → logprob: -11.181057929992676
    7. ' )' → logprob: -11.618557929992676
    8. '3' → logprob: -11.743557929992676
    9. '   ' → logprob: -11.743557929992676
    10. '  ' → logprob: -12.993557929992676

Token 52: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038506705313920975
    2. 'offset' → logprob: -5.87885046005249
    3. ' offset' → logprob: -7.50385046005249
    4. '2' → logprob: -8.503850936889648
    5. ' ' → logprob: -8.753850936889648
    6. ')' → logprob: -10.253850936889648
    7. '   ' → logprob: -10.628850936889648
    8. '3' → logprob: -10.753850936889648
    9. '(offset' → logprob: -10.878850936889648
    10. '	offset' → logprob: -11.878850936889648

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22777195274829865
    2. ' )' → logprob: -2.4777719974517822
    3. ' +' → logprob: -3.3527719974517822
    4. ' -' → logprob: -3.7277719974517822
    5. '))' → logprob: -3.7277719974517822
    6. '+' → logprob: -3.9777719974517822
    7. ' ' → logprob: -4.727771759033203
    8. ')))' → logprob: -5.602771759033203
    9. '-' → logprob: -6.102771759033203
    10. ' ))' → logprob: -6.352771759033203

Token 54: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6547532081604004
    2. ' +' → logprob: -1.4047532081604004
    3. ' -' → logprob: -2.0297532081604004
    4. '+' → logprob: -3.1547532081604004
    5. ' )' → logprob: -3.4047532081604004
    6. '))' → logprob: -4.7797532081604
    7. ' ' → logprob: -4.7797532081604
    8. '-' → logprob: -5.0297532081604
    9. ')//' → logprob: -6.5297532081604
    10. ' ))' → logprob: -7.4047532081604

Token 55: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010224477155134082
    2. '4' → logprob: -7.6260223388671875
    3. ' ' → logprob: -7.6260223388671875
    4. '1' → logprob: -10.501022338867188
    5. '3' → logprob: -12.001022338867188
    6. '   ' → logprob: -12.376022338867188
    7. ')' → logprob: -12.501022338867188
    8. '```' → logprob: -13.751022338867188
    9. '8' → logprob: -14.126022338867188
    10. '  ' → logprob: -14.501022338867188

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018542143516242504
    2. '4' → logprob: -9.000185012817383
    3. ' ' → logprob: -10.125185012817383
    4. '1' → logprob: -11.000185012817383
    5. ')' → logprob: -12.875185012817383
    6. '3' → logprob: -13.500185012817383
    7. '```' → logprob: -15.250185012817383
    8. '   ' → logprob: -15.375185012817383
    9. '6' → logprob: -15.937685012817383
    10. '(' → logprob: -16.062685012817383

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08487430214881897
    2. '))' → logprob: -3.084874391555786
    3. ' )' → logprob: -4.209874153137207
    4. ' +' → logprob: -4.834874153137207
    5. '+' → logprob: -5.209874153137207
    6. ' -' → logprob: -5.584874153137207
    7. ' ))' → logprob: -6.959874153137207
    8. ')+' → logprob: -7.084874153137207
    9. '-' → logprob: -7.709874153137207
    10. ')))' → logprob: -7.709874153137207

Token 58: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007339565083384514
    2. '*' → logprob: -5.8823394775390625
    3. ' )' → logprob: -6.3823394775390625
    4. '-' → logprob: -6.5073394775390625
    5. '+' → logprob: -7.6323394775390625
    6. '))' → logprob: -8.382339477539062
    7. ' ' → logprob: -8.507339477539062
    8. ' -' → logprob: -8.757339477539062
    9. '-)' → logprob: -10.132339477539062
    10. ')))' → logprob: -10.382339477539062

Token 59: ' parity' (ID: 113181)
  Prédit: ' parity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.06861434131860733
    2. ' offset' → logprob: -3.6936142444610596
    3. ' n' → logprob: -4.193614482879639
    4. 'par' → logprob: -4.318614482879639
    5. ' not' → logprob: -5.068614482879639
    6. '(par' → logprob: -6.068614482879639
    7. 'n' → logprob: -6.818614482879639
    8. ' (' → logprob: -6.943614482879639
    9. ' ' → logprob: -7.318614482879639
    10. 'offset' → logprob: -7.693614482879639

Token 60: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6919282674789429
    2. ' ==' → logprob: -1.0669282674789429
    3. '==' → logprob: -1.9419282674789429
    4. ' ' → logprob: -5.066928386688232
    5. 'else' → logprob: -5.566928386688232
    6. ')' → logprob: -6.941928386688232
    7. ' )' → logprob: -7.566928386688232
    8. ' !=' → logprob: -8.816927909851074
    9. '!=' → logprob: -10.191927909851074
    10. ' ' → logprob: -10.691927909851074

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16287101805210114
    2. '0' → logprob: -2.0378711223602295
    3. '1' → logprob: -3.9128711223602295
    4. ' ' → logprob: -12.350371360778809
    5. ' (' → logprob: -13.787871360778809
    6. ' parity' → logprob: -13.850371360778809
    7. '(' → logprob: -14.100371360778809
    8. 'par' → logprob: -14.725371360778809
    9. ')' → logprob: -14.787871360778809
    10. '=' → logprob: -14.850371360778809

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14107200503349304
    2. '1' → logprob: -2.1410720348358154
    3. ' ' → logprob: -4.266071796417236
    4. ' ' → logprob: -13.141072273254395
    5. 'else' → logprob: -14.016072273254395
    6. ')' → logprob: -14.328572273254395
    7. ' else' → logprob: -14.453572273254395
    8. '   ' → logprob: -14.766072273254395
    9. '(' → logprob: -15.078572273254395
    10. '```' → logprob: -15.203572273254395

Token 63: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0025176347699016333
    2. 'else' → logprob: -6.0025177001953125
    3. ' ' → logprob: -11.002517700195312
    4. ' )' → logprob: -11.252517700195312
    5. ')' → logprob: -11.877517700195312
    6. '    ' → logprob: -12.627517700195312
    7. '	else' → logprob: -13.752517700195312
    8. '   ' → logprob: -15.377517700195312
    9. ' and' → logprob: -15.502517700195312
    10. ' ' → logprob: -15.752517700195312

Token 64: ' (((' (ID: 25584)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.280236840248108
    2. ' n' → logprob: -1.655236840248108
    3. ' offset' → logprob: -1.780236840248108
    4. ' ' → logprob: -1.905236840248108
    5. ' f' → logprob: -1.905236840248108
    6. ' ((' → logprob: -3.9052367210388184
    7. 'offset' → logprob: -4.780236721038818
    8. 'f' → logprob: -5.155236721038818
    9. '    ' → logprob: -5.280236721038818
    10. '(' → logprob: -5.655236721038818

Token 65: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04707128927111626
    2. 'offset' → logprob: -3.2970712184906006
    3. '(n' → logprob: -5.54707145690918
    4. ' n' → logprob: -5.92207145690918
    5. '(offset' → logprob: -6.67207145690918
    6. ' offset' → logprob: -7.54707145690918
    7. '((' → logprob: -8.79707145690918
    8. ' (' → logprob: -8.79707145690918
    9. '(' → logprob: -9.17207145690918
    10. '2' → logprob: -9.79707145690918

Token 66: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4287537634372711
    2. '*' → logprob: -2.0537538528442383
    3. ' -' → logprob: -2.3037538528442383
    4. '-' → logprob: -2.4287538528442383
    5. ' +' → logprob: -4.178753852844238
    6. '+' → logprob: -4.428753852844238
    7. ' ' → logprob: -5.678753852844238
    8. ')' → logprob: -7.053753852844238
    9. ' //' → logprob: -8.428753852844238
    10. ' )' → logprob: -8.803753852844238

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022748488932847977
    2. '2' → logprob: -4.5227484703063965
    3. '3' → logprob: -4.8977484703063965
    4. ' ' → logprob: -5.6477484703063965
    5. 'offset' → logprob: -7.5227484703063965
    6. ' offset' → logprob: -9.897748947143555
    7. '   ' → logprob: -11.272748947143555
    8. '  ' → logprob: -11.647748947143555
    9. '(offset' → logprob: -12.272748947143555
    10. '(' → logprob: -12.460248947143555

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05935098975896835
    2. '3' → logprob: -3.4343509674072266
    3. '2' → logprob: -3.6843509674072266
    4. 'offset' → logprob: -8.559350967407227
    5. ' ' → logprob: -9.934350967407227
    6. '5' → logprob: -12.371850967407227
    7. '   ' → logprob: -12.746850967407227
    8. '4' → logprob: -13.121850967407227
    9. ' offset' → logprob: -13.121850967407227
    10. ')' → logprob: -13.246850967407227

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038551125675439835
    2. ' *' → logprob: -4.163551330566406
    3. ' )' → logprob: -4.538551330566406
    4. '*' → logprob: -4.913551330566406
    5. ' ' → logprob: -6.163551330566406
    6. ')*' → logprob: -7.163551330566406
    7. ' //' → logprob: -7.538551330566406
    8. '//' → logprob: -8.413551330566406
    9. ')//' → logprob: -9.163551330566406
    10. ' -' → logprob: -9.288551330566406

Token 70: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14391487836837769
    2. '*' → logprob: -2.1439149379730225
    3. ')' → logprob: -4.643914699554443
    4. ' ' → logprob: -5.393914699554443
    5. ' //' → logprob: -6.893914699554443
    6. ' -' → logprob: -7.518914699554443
    7. ' )' → logprob: -8.018915176391602
    8. '//' → logprob: -8.393915176391602
    9. '-' → logprob: -8.518915176391602
    10. ' +' → logprob: -9.393915176391602

Token 71: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.465751975774765
    2. '(n' → logprob: -1.5907520055770874
    3. ' n' → logprob: -2.090751886367798
    4. 'n' → logprob: -3.965751886367798
    5. ' offset' → logprob: -4.090752124786377
    6. 'offset' → logprob: -5.340752124786377
    7. ' ((' → logprob: -6.715752124786377
    8. '(' → logprob: -7.090752124786377
    9. '(offset' → logprob: -7.215752124786377
    10. ' ' → logprob: -7.340752124786377

Token 72: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21287652850151062
    2. '(n' → logprob: -2.212876558303833
    3. ' n' → logprob: -2.837876558303833
    4. ' (' → logprob: -4.087876319885254
    5. 'offset' → logprob: -5.337876319885254
    6. ' offset' → logprob: -6.837876319885254
    7. ' ' → logprob: -8.212876319885254
    8. '   ' → logprob: -8.587876319885254
    9. '2' → logprob: -8.712876319885254
    10. '(offset' → logprob: -9.212876319885254

Token 73: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03961556404829025
    2. '-' → logprob: -3.2896156311035156
    3. ')' → logprob: -7.039615631103516
    4. ' ' → logprob: -7.914615631103516
    5. '   ' → logprob: -9.039615631103516
    6. ' )' → logprob: -10.289615631103516
    7. ' //' → logprob: -10.289615631103516
    8. '    ' → logprob: -10.289615631103516
    9. '<|end|>' → logprob: -10.914615631103516
    10. '```' → logprob: -11.039615631103516

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4599555432796478
    2. '1' → logprob: -1.0849555730819702
    3. '3' → logprob: -3.5849554538726807
    4. ' ' → logprob: -6.45995569229126
    5. ')' → logprob: -6.83495569229126
    6. '4' → logprob: -8.334955215454102
    7. ' )' → logprob: -10.209955215454102
    8. '   ' → logprob: -10.959955215454102
    9. 'offset' → logprob: -11.022455215454102
    10. '  ' → logprob: -11.272455215454102

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13082484900951385
    2. '1' → logprob: -2.1308248043060303
    3. '3' → logprob: -5.880825042724609
    4. ' ' → logprob: -7.130825042724609
    5. '4' → logprob: -9.38082504272461
    6. '0' → logprob: -9.38082504272461
    7. ')' → logprob: -9.50582504272461
    8. '  ' → logprob: -11.38082504272461
    9. '   ' → logprob: -11.38082504272461
    10. 'offset' → logprob: -11.69332504272461

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04129595309495926
    2. ' )' → logprob: -3.2912960052490234
    3. ')//' → logprob: -6.541296005249023
    4. '))' → logprob: -7.041296005249023
    5. '   ' → logprob: -8.291296005249023
    6. ' ' → logprob: -8.791296005249023
    7. '()' → logprob: -8.916296005249023
    8. '())' → logprob: -9.166296005249023
    9. ' //' → logprob: -9.541296005249023
    10. ')))' → logprob: -9.541296005249023

Token 77: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15037381649017334
    2. ' )' → logprob: -2.525373935699463
    3. ' //' → logprob: -3.400373935699463
    4. ')//' → logprob: -4.025373935699463
    5. '//' → logprob: -5.025373935699463
    6. '()' → logprob: -7.275373935699463
    7. '))' → logprob: -7.650373935699463
    8. ' ' → logprob: -8.525373458862305
    9. '())' → logprob: -9.025373458862305
    10. '   ' → logprob: -9.150373458862305

Token 78: ' (' (ID: 350)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.15815618634223938
    2. 'offset' → logprob: -2.033156156539917
    3. ' (' → logprob: -5.033156394958496
    4. '1' → logprob: -5.283156394958496
    5. ' ' → logprob: -6.158156394958496
    6. '(offset' → logprob: -7.408156394958496
    7. ' n' → logprob: -8.283156394958496
    8. '2' → logprob: -8.408156394958496
    9. ')' → logprob: -8.908156394958496
    10. '(' → logprob: -9.033156394958496

Token 79: 'n' (ID: 77)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.4302419424057007
    2. ' offset' → logprob: -1.6802419424057007
    3. ' (' → logprob: -2.9302420616149902
    4. '1' → logprob: -3.0552420616149902
    5. '(n' → logprob: -4.30524206161499
    6. '(offset' → logprob: -4.30524206161499
    7. ' n' → logprob: -4.43024206161499
    8. ' ' → logprob: -4.68024206161499
    9. 'n' → logprob: -5.05524206161499
    10. '(' → logprob: -6.18024206161499

Token 80: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21979641914367676
    2. '-' → logprob: -2.5947964191436768
    3. ' *' → logprob: -2.7197964191436768
    4. ')' → logprob: -3.3447964191436768
    5. ' )' → logprob: -5.094796180725098
    6. ' ' → logprob: -5.469796180725098
    7. ' +' → logprob: -5.594796180725098
    8. '*' → logprob: -6.344796180725098
    9. '))' → logprob: -6.344796180725098
    10. '   ' → logprob: -7.094796180725098

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04764169082045555
    2. '3' → logprob: -3.1726417541503906
    3. '2' → logprob: -5.797641754150391
    4. 'offset' → logprob: -7.047641754150391
    5. ' ' → logprob: -8.04764175415039
    6. '4' → logprob: -8.54764175415039
    7. '5' → logprob: -9.54764175415039
    8. 'par' → logprob: -10.42264175415039
    9. ' offset' → logprob: -10.42264175415039
    10. ')' → logprob: -11.17264175415039

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014392076060175896
    2. '3' → logprob: -4.389391899108887
    3. 'offset' → logprob: -6.764391899108887
    4. '2' → logprob: -7.514391899108887
    5. ' ' → logprob: -9.764391899108887
    6. '0' → logprob: -10.014391899108887
    7. '4' → logprob: -10.514391899108887
    8. '5' → logprob: -11.514391899108887
    9. 'par' → logprob: -11.639391899108887
    10. ')' → logprob: -11.889391899108887

Token 83: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053106922656297684
    2. ' )' → logprob: -3.1781070232391357
    3. '))' → logprob: -5.178106784820557
    4. ' -' → logprob: -6.053106784820557
    5. ')))' → logprob: -7.803106784820557
    6. '-' → logprob: -7.803106784820557
    7. ' *' → logprob: -8.053107261657715
    8. ' ))' → logprob: -8.303107261657715
    9. '*' → logprob: -8.553107261657715
    10. ' ' → logprob: -8.553107261657715

Token 84: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04983626678586006
    2. ' )' → logprob: -3.6748361587524414
    3. '))' → logprob: -4.049836158752441
    4. ')))' → logprob: -5.549836158752441
    5. ')//' → logprob: -7.049836158752441
    6. ' ))' → logprob: -7.924836158752441
    7. ')>>' → logprob: -8.424836158752441
    8. '   ' → logprob: -8.799836158752441
    9. ' ' → logprob: -8.924836158752441
    10. '//' → logprob: -10.299836158752441

Token 85: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012618894688785076
    2. ' ' → logprob: -4.3876190185546875
    3. '3' → logprob: -9.262619018554688
    4. '4' → logprob: -11.762619018554688
    5. '1' → logprob: -12.637619018554688
    6. 'n' → logprob: -14.262619018554688
    7. '6' → logprob: -14.575119018554688
    8. ')' → logprob: -14.637619018554688
    9. '(' → logprob: -15.262619018554688
    10. ' n' → logprob: -15.262619018554688

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.135819760151207e-05
    2. ' ' → logprob: -9.62507152557373
    3. '1' → logprob: -12.75007152557373
    4. '3' → logprob: -13.37507152557373
    5. ')' → logprob: -14.62507152557373
    6. '4' → logprob: -15.25007152557373
    7. '   ' → logprob: -17.000070571899414
    8. '6' → logprob: -17.812570571899414
    9. '  ' → logprob: -17.812570571899414
    10. '```' → logprob: -18.000070571899414

Token 87: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007797783240675926
    2. '))' → logprob: -4.882797718048096
    3. ')))' → logprob: -8.632798194885254
    4. ' )' → logprob: -11.632798194885254
    5. ')
' → logprob: -13.132798194885254
    6. ')n' → logprob: -14.757798194885254
    7. '))))' → logprob: -14.882798194885254
    8. '   ' → logprob: -15.132798194885254
    9. ' ' → logprob: -15.382798194885254
    10. ')#' → logprob: -15.632798194885254

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2572690546512604
    2. ')' → logprob: -2.1322691440582275
    3. '<|end|>' → logprob: -3.0072691440582275
    4. '\n' → logprob: -3.8822691440582275
    5. '#' → logprob: -4.132268905639648
    6. ':' → logprob: -5.257268905639648
    7. '```' → logprob: -6.007268905639648
    8. 'n' → logprob: -6.257268905639648
    9. ' ' → logprob: -6.382268905639648
    10. '\' → logprob: -6.507268905639648

Token 89: ' forbidden' (ID: 74435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1243820190429688
    2. 'for' → logprob: -1.4993820190429688
    3. '\n' → logprob: -2.4993820190429688
    4. '    
' → logprob: -2.6243820190429688
    5. ' 
' → logprob: -2.7493820190429688
    6. ' for' → logprob: -2.9993820190429688
    7. ' ' → logprob: -3.1243820190429688
    8. '
' → logprob: -3.7493820190429688
    9. '<|end|>' → logprob: -3.8743820190429688
    10. '  
' → logprob: -4.124382019042969

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30103835463523865
    2. '=' → logprob: -1.551038384437561
    3. '_pairs' → logprob: -4.5510382652282715
    4. '_sets' → logprob: -4.9260382652282715
    5. '_' → logprob: -5.1760382652282715
    6. '_edges' → logprob: -5.8010382652282715
    7. '_indices' → logprob: -5.8010382652282715
    8. '_set' → logprob: -6.0510382652282715
    9. '_positions' → logprob: -6.1760382652282715
    10. '_lines' → logprob: -6.1760382652282715

Token 91: ' {' (ID: 354)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7360398769378662
    2. 'set' → logprob: -0.8610398769378662
    3. '{' → logprob: -3.611039876937866
    4. '[]' → logprob: -3.736039876937866
    5. ' {' → logprob: -4.486040115356445
    6. ' []' → logprob: -5.111040115356445
    7. ' [' → logprob: -5.361040115356445
    8. ' list' → logprob: -5.486040115356445
    9. 'list' → logprob: -5.611040115356445
    10. '[' → logprob: -5.736040115356445

Token 92: 'fro' (ID: 143163)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8517779111862183
    2. 'tuple' → logprob: -1.9767779111862183
    3. '()}' → logprob: -2.101778030395508
    4. '(' → logprob: -2.476778030395508
    5. '()' → logprob: -2.976778030395508
    6. '}' → logprob: -3.226778030395508
    7. 'offset' → logprob: -3.726778030395508
    8. 'i' → logprob: -3.976778030395508
    9. '0' → logprob: -4.226778030395508
    10. ' (' → logprob: -4.476778030395508

Token 93: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.001892341417260468
    2. 'zen' → logprob: -6.376892566680908
    3. 'zent' → logprob: -9.00189208984375
    4. 'zes' → logprob: -10.00189208984375
    5. 'ze' → logprob: -11.87689208984375
    6. '```' → logprob: -12.50189208984375
    7. 'zend' → logprob: -12.50189208984375
    8. 'zon' → logprob: -13.87689208984375
    9. 'set' → logprob: -14.00189208984375
    10. 'z' → logprob: -14.00189208984375

Token 94: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.20163387060165405
    2. 't' → logprob: -1.7016339302062988
    3. 'set' → logprob: -9.20163345336914
    4. 'ap' → logprob: -10.70163345336914
    5. 'ets' → logprob: -10.95163345336914
    6. 'e' → logprob: -11.07663345336914
    7. 'at' → logprob: -11.45163345336914
    8. 'ze' → logprob: -11.57663345336914
    9. '_set' → logprob: -11.57663345336914
    10. '=set' → logprob: -12.32663345336914

Token 95: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.22439123690128326
    2. '((' → logprob: -1.724391222000122
    3. '([' → logprob: -4.474391460418701
    4. '(({' → logprob: -5.099391460418701
    5. '()' → logprob: -5.849391460418701
    6. '{' → logprob: -7.099391460418701
    7. '(range' → logprob: -7.224391460418701
    8. '(([' → logprob: -8.599390983581543
    9. '()}' → logprob: -8.724390983581543
    10. '(' → logprob: -8.974390983581543

Token 96: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4394882023334503
    2. 'offset' → logprob: -1.439488172531128
    3. 'i' → logprob: -2.564488172531128
    4. '1' → logprob: -4.064488410949707
    5. ' offset' → logprob: -4.814488410949707
    6. ' ' → logprob: -5.189488410949707
    7. 'n' → logprob: -5.814488410949707
    8. 'a' → logprob: -6.689488410949707
    9. ' i' → logprob: -6.814488410949707
    10. 'x' → logprob: -7.314488410949707

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01556396484375
    2. '-' → logprob: -4.64056396484375
    3. ' ,' → logprob: -5.76556396484375
    4. ' -' → logprob: -6.64056396484375
    5. ',i' → logprob: -6.89056396484375
    6. 'for' → logprob: -9.64056396484375
    7. '})' → logprob: -9.76556396484375
    8. '+' → logprob: -10.14056396484375
    9. ',
' → logprob: -10.14056396484375
    10. ',n' → logprob: -10.39056396484375

Token 98: ' offset' (ID: 8985)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.37483543157577515
    2. ' j' → logprob: -1.24983549118042
    3. 'i' → logprob: -4.12483549118042
    4. ' i' → logprob: -4.99983549118042
    5. ' offset' → logprob: -6.87483549118042
    6. 'offset' → logprob: -6.99983549118042
    7. ' (' → logprob: -7.49983549118042
    8. '(i' → logprob: -8.374835014343262
    9. ' ' → logprob: -9.124835014343262
    10. '   ' → logprob: -9.874835014343262

Token 99: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.985437273979187
    2. '})' → logprob: -0.985437273979187
    3. '+' → logprob: -1.610437273979187
    4. '+i' → logprob: -3.7354373931884766
    5. ' })' → logprob: -4.610437393188477
    6. ' -' → logprob: -4.610437393188477
    7. '-' → logprob: -5.110437393188477
    8. ' ' → logprob: -6.110437393188477
    9. '}))' → logprob: -7.610437393188477
    10. '  ' → logprob: -8.735437393188477

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08981264382600784
    2. ' i' → logprob: -2.464812755584717
    3. '1' → logprob: -7.214812755584717
    4. ' ' → logprob: -9.339812278747559
    5. '	i' → logprob: -10.714812278747559
    6. '2' → logprob: -11.839812278747559
    7. '   ' → logprob: -12.589812278747559
    8. '  ' → logprob: -12.839812278747559
    9. '(i' → logprob: -13.527312278747559
    10. '0' → logprob: -13.902312278747559

Token 101: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0240069180727005
    2. ' })' → logprob: -3.7740068435668945
    3. ')' → logprob: -7.8990068435668945
    4. ' ' → logprob: -8.149006843566895
    5. '}' → logprob: -10.524006843566895
    6. '})
' → logprob: -11.149006843566895
    7. ')}' → logprob: -11.399006843566895
    8. '   ' → logprob: -11.649006843566895
    9. ' )' → logprob: -11.899006843566895
    10. ' for' → logprob: -12.024006843566895

Token 102: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023448118939995766
    2. 'for' → logprob: -4.0234479904174805
    3. '   ' → logprob: -5.6484479904174805
    4. '}' → logprob: -7.1484479904174805
    5. ' ' → logprob: -7.6484479904174805
    6. '    ' → logprob: -8.27344799041748
    7. '	for' → logprob: -9.14844799041748
    8. ')' → logprob: -9.52344799041748
    9. ' }' → logprob: -10.52344799041748
    10. '  ' → logprob: -10.64844799041748

Token 103: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14559200406074524
    2. ' i' → logprob: -2.020591974258423
    3. 'range' → logprob: -6.270592212677002
    4. 'i' → logprob: -6.895592212677002
    5. ' ' → logprob: -12.270591735839844
    6. '(range' → logprob: -13.770591735839844
    7. '	range' → logprob: -14.145591735839844
    8. ' xrange' → logprob: -14.395591735839844
    9. 'Range' → logprob: -14.520591735839844
    10. '	i' → logprob: -14.770591735839844

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014182187616825104
    2. 'in' → logprob: -4.264182090759277
    3. ' ' → logprob: -11.639182090759277
    4. 'range' → logprob: -12.389182090759277
    5. '	in' → logprob: -13.014182090759277
    6. ' range' → logprob: -13.264182090759277
    7. '<|end|>' → logprob: -14.139182090759277
    8. '   ' → logprob: -15.889182090759277
    9. '  ' → logprob: -15.889182090759277
    10. '0' → logprob: -16.139183044433594

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021001845598221
    2. 'range' → logprob: -2.350209951400757
    3. '(range' → logprob: -13.350210189819336
    4. '	range' → logprob: -13.600210189819336
    5. ' ' → logprob: -15.600210189819336
    6. ' xrange' → logprob: -16.475210189819336
    7. 'Range' → logprob: -17.600210189819336
    8. '_range' → logprob: -17.725210189819336
    9. '.range' → logprob: -17.850210189819336
    10. '   ' → logprob: -17.912710189819336

Token 106: '(n' (ID: 2406)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.006180594675242901
    2. '(' → logprob: -5.381180763244629
    3. '(n' → logprob: -6.506180763244629
    4. 'offset' → logprob: -10.506180763244629
    5. '((' → logprob: -11.131180763244629
    6. ' (' → logprob: -11.506180763244629
    7. ' offset' → logprob: -12.381180763244629
    8. '	offset' → logprob: -12.881180763244629
    9. ' ' → logprob: -13.006180763244629
    10. '[offset' → logprob: -13.756180763244629

Token 107: ')' (ID: 8)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00130559504032135
    2. ')' → logprob: -7.00130558013916
    3. '//' → logprob: -8.37630558013916
    4. ' )' → logprob: -9.62630558013916
    5. '-' → logprob: -10.00130558013916
    6. '))' → logprob: -11.00130558013916
    7. ')}}' → logprob: -11.87630558013916
    8. ' ' → logprob: -12.37630558013916
    9. '+' → logprob: -12.37630558013916
    10. '})' → logprob: -12.75130558013916

Token 108: ' if' (ID: 538)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.010476546362042427
    2. ')' → logprob: -4.635476589202881
    3. ')}' → logprob: -7.885476589202881
    4. ' }' → logprob: -8.260476112365723
    5. '})' → logprob: -9.760476112365723
    6. ',' → logprob: -11.260476112365723
    7. '   ' → logprob: -11.885476112365723
    8. ' )' → logprob: -12.885476112365723
    9. '}
' → logprob: -13.010476112365723
    10. ' ' → logprob: -13.385476112365723

Token 109: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.982649028301239
    2. ' i' → logprob: -1.3576490879058838
    3. '0' → logprob: -1.6076490879058838
    4. ' ' → logprob: -2.982649087905884
    5. '(i' → logprob: -3.482649087905884
    6. ' (' → logprob: -3.732649087905884
    7. ' offset' → logprob: -3.732649087905884
    8. 'offset' → logprob: -3.857649087905884
    9. ' abs' → logprob: -5.232648849487305
    10. 'abs' → logprob: -5.607648849487305

Token 110: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12863045930862427
    2. ' <=' → logprob: -2.6286303997039795
    3. '<' → logprob: -3.1286303997039795
    4. ' ' → logprob: -6.253630638122559
    5. '<=' → logprob: -6.378630638122559
    6. ' !=' → logprob: -7.503630638122559
    7. '<|end|>' → logprob: -7.878630638122559
    8. '<n' → logprob: -10.503630638122559
    9. '!=' → logprob: -11.003630638122559
    10. ' *' → logprob: -11.253630638122559

Token 111: ' (' (ID: 350)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.010060039348900318
    2. ' offset' → logprob: -4.635059833526611
    3. '(offset' → logprob: -8.26006031036377
    4. '(' → logprob: -10.88506031036377
    5. '	offset' → logprob: -12.01006031036377
    6. ' (' → logprob: -12.13506031036377
    7. 'n' → logprob: -12.13506031036377
    8. '0' → logprob: -12.88506031036377
    9. ' ' → logprob: -13.26006031036377
    10. ' n' → logprob: -13.76006031036377

Token 112: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.01282570231705904
    2. ' offset' → logprob: -4.3878254890441895
    3. '(offset' → logprob: -8.262825965881348
    4. 'n' → logprob: -10.387825965881348
    5. '	offset' → logprob: -11.762825965881348
    6. '[offset' → logprob: -12.387825965881348
    7. ' n' → logprob: -12.762825965881348
    8. '(' → logprob: -12.762825965881348
    9. ' (' → logprob: -12.887825965881348
    10. ' ' → logprob: -13.262825965881348

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06145113706588745
    2. '-' → logprob: -3.0614511966705322
    3. '-i' → logprob: -5.061450958251953
    4. ')' → logprob: -5.686450958251953
    5. ' ' → logprob: -5.936450958251953
    6. '//' → logprob: -8.811450958251953
    7. ' //' → logprob: -9.811450958251953
    8. '>>' → logprob: -10.061450958251953
    9. '   ' → logprob: -10.936450958251953
    10. '/' → logprob: -10.936450958251953

Token 114: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006296366918832064
    2. ' i' → logprob: -7.375629425048828
    3. ')' → logprob: -13.375629425048828
    4. ' ' → logprob: -14.375629425048828
    5. ')i' → logprob: -14.625629425048828
    6. '	i' → logprob: -16.375629425048828
    7. '<|end|>' → logprob: -16.375629425048828
    8. '   ' → logprob: -16.375629425048828
    9. '1' → logprob: -17.000629425048828
    10. '  ' → logprob: -17.125629425048828

Token 115: ')' (ID: 8)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0039565786719322205
    2. ')' → logprob: -5.6289567947387695
    3. ' )' → logprob: -8.12895679473877
    4. '}' → logprob: -10.75395679473877
    5. ');}' → logprob: -11.00395679473877
    6. ')}
' → logprob: -12.00395679473877
    7. '})' → logprob: -12.50395679473877
    8. ')}}' → logprob: -12.62895679473877
    9. '))' → logprob: -12.87895679473877
    10. ')}

' → logprob: -13.12895679473877

Token 116: ' <' (ID: 464)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6518965363502502
    2. ')}' → logprob: -1.0268964767456055
    3. ')' → logprob: -2.1518964767456055
    4. '})' → logprob: -5.5268964767456055
    5. ' }' → logprob: -8.026896476745605
    6. ' )' → logprob: -9.026896476745605
    7. ');}' → logprob: -10.526896476745605
    8. '   ' → logprob: -10.901896476745605
    9. ' ' → logprob: -11.026896476745605
    10. ',' → logprob: -11.526896476745605

Token 117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026333395391702652
    2. ' n' → logprob: -3.6513333320617676
    3. '0' → logprob: -11.026333808898926
    4. ' ' → logprob: -11.776333808898926
    5. '	n' → logprob: -13.151333808898926
    6. 'offset' → logprob: -13.401333808898926
    7. '2' → logprob: -13.401333808898926
    8. '(n' → logprob: -13.901333808898926
    9. '
' → logprob: -14.026333808898926
    10. '   ' → logprob: -14.651333808898926

Token 118: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.49886661767959595
    2. ')}' → logprob: -1.1238665580749512
    3. ')' → logprob: -3.123866558074951
    4. '})' → logprob: -3.748866558074951
    5. ' }' → logprob: -8.87386703491211
    6. ' )' → logprob: -10.24886703491211
    7. ' })' → logprob: -11.12386703491211
    8. '))' → logprob: -11.87386703491211
    9. ');}' → logprob: -12.37386703491211
    10. ')}}' → logprob: -12.49886703491211

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012895957566797733
    2. '<|end|>' → logprob: -5.3878960609436035
    3. '    
' → logprob: -5.5128960609436035
    4. 'for' → logprob: -5.8878960609436035
    5. ' for' → logprob: -6.8878960609436035
    6. '
' → logprob: -8.637895584106445
    7. ')' → logprob: -9.637895584106445
    8. '<|end|>' → logprob: -10.012895584106445
    9. '	for' → logprob: -11.012895584106445
    10. '    
    
' → logprob: -11.012895584106445

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13572272658348083
    2. '   ' → logprob: -2.5107226371765137
    3. 'pairs' → logprob: -4.135722637176514
    4. ' for' → logprob: -5.010722637176514
    5. 'edges' → logprob: -5.260722637176514
    6. 'valid' → logprob: -5.885722637176514
    7. 'allowed' → logprob: -6.135722637176514
    8. 'rest' → logprob: -6.635722637176514
    9. 'used' → logprob: -7.010722637176514
    10. 'possible' → logprob: -7.135722637176514

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5529110431671143
    2. 'i' → logprob: -1.1779110431671143
    3. ' subset' → logprob: -3.6779110431671143
    4. 'a' → logprob: -4.427910804748535
    5. ' pair' → logprob: -4.677910804748535
    6. ' a' → logprob: -4.677910804748535
    7. ' size' → logprob: -4.802910804748535
    8. ' combo' → logprob: -5.177910804748535
    9. ' comb' → logprob: -5.302910804748535
    10. ' length' → logprob: -5.302910804748535

Token 122: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08458032459020615
    2. ',' → logprob: -3.084580421447754
    3. 'in' → logprob: -3.459580421447754
    4. ' ,' → logprob: -5.709580421447754
    5. ' ' → logprob: -7.584580421447754
    6. '<|end|>' → logprob: -10.834580421447754
    7. ',n' → logprob: -10.959580421447754
    8. '  ' → logprob: -11.834580421447754
    9. '	in' → logprob: -12.084580421447754
    10. 'n' → logprob: -12.209580421447754

Token 123: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03361400216817856
    2. ' j' → logprob: -5.158614158630371
    3. 'line' → logprob: -5.408614158630371
    4. 'a' → logprob: -5.658614158630371
    5. 'comb' → logprob: -5.908614158630371
    6. 'subset' → logprob: -6.408614158630371
    7. 's' → logprob: -6.533614158630371
    8. 'combo' → logprob: -6.783614158630371
    9. 'x' → logprob: -7.033614158630371
    10. 'indices' → logprob: -7.033614158630371

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38692381978034973
    2. 'in' → logprob: -1.1369237899780273
    3. '	in' → logprob: -10.511923789978027
    4. ' ' → logprob: -11.886923789978027
    5. ')' → logprob: -12.761923789978027
    6. 'n' → logprob: -13.011923789978027
    7. '<|end|>' → logprob: -13.261923789978027
    8. ',' → logprob: -13.261923789978027
    9. '   ' → logprob: -13.761923789978027
    10. 'inth' → logprob: -13.761923789978027

Token 125: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.07918223738670349
    2. 'com' → logprob: -2.5791821479797363
    3. '(com' → logprob: -8.579182624816895
    4. ' range' → logprob: -11.079182624816895
    5. 'enumer' → logprob: -11.079182624816895
    6. 'range' → logprob: -11.204182624816895
    7. 'comb' → logprob: -11.454182624816895
    8. '_com' → logprob: -11.579182624816895
    9. '(' → logprob: -12.329182624816895
    10. 'Com' → logprob: -12.454182624816895

Token 126: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.704273118884885e-07
    2. 'range' → logprob: -15.250000953674316
    3. ' range' → logprob: -15.625000953674316
    4. '(' → logprob: -16.625
    5. ' (' → logprob: -17.75
    6. '<|end|>' → logprob: -18.125
    7. '(r' → logprob: -18.75
    8. '	range' → logprob: -19.75
    9. '((' → logprob: -20.75
    10. '(list' → logprob: -20.875

Token 127: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.371605948312208e-05
    2. '(' → logprob: -10.000053405761719
    3. 'n' → logprob: -11.750053405761719
    4. ')n' → logprob: -16.00005340576172
    5. ' n' → logprob: -16.25005340576172
    6. ',n' → logprob: -16.87505340576172
    7. ')' → logprob: -17.00005340576172
    8. ' (' → logprob: -17.12505340576172
    9. '(
' → logprob: -17.37505340576172
    10. '	n' → logprob: -18.00005340576172

Token 128: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005703099304810166
    2. ',' → logprob: -7.500570297241211
    3. ' ),' → logprob: -12.000570297241211
    4. ',),' → logprob: -12.250570297241211
    5. '()),' → logprob: -13.250570297241211
    6. ')' → logprob: -13.875570297241211
    7. '(),' → logprob: -13.875570297241211
    8. '(n' → logprob: -14.500570297241211
    9. '},' → logprob: -14.625570297241211
    10. '2' → logprob: -14.750570297241211

Token 129: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06993754208087921
    2. ' ' → logprob: -2.6949374675750732
    3. '   ' → logprob: -14.194937705993652
    4. '  ' → logprob: -14.819937705993652
    5. '    ' → logprob: -16.569936752319336
    6. ' ' → logprob: -16.819936752319336
    7. ')' → logprob: -17.319936752319336
    8. '       ' → logprob: -18.069936752319336
    9. '           ' → logprob: -18.194936752319336
    10. '２' → logprob: -18.319936752319336

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.750431060791016
    4. '  ' → logprob: -17.125431060791016
    5. '           ' → logprob: -17.750431060791016
    6. ')' → logprob: -18.187931060791016
    7. '       ' → logprob: -18.250431060791016
    8. '２' → logprob: -18.250431060791016
    9. '    ' → logprob: -18.375431060791016
    10. ' ' → logprob: -18.437931060791016

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010857630521059036
    2. '):
' → logprob: -4.635857582092285
    3. ':' → logprob: -6.885857582092285
    4. ')' → logprob: -9.885857582092285
    5. ' ):' → logprob: -11.385857582092285
    6. '():' → logprob: -11.635857582092285
    7. '):
' → logprob: -12.760857582092285
    8. '   ' → logprob: -13.010857582092285
    9. '}:' → logprob: -14.510857582092285
    10. '():
' → logprob: -15.010857582092285

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15089093148708344
    2. '<|end|>' → logprob: -2.650890827178955
    3. '   ' → logprob: -3.275890827178955
    4. ' ' → logprob: -3.900890827178955
    5. ' if' → logprob: -5.525890827178955
    6. '    ' → logprob: -5.525890827178955
    7. '        ' → logprob: -7.150890827178955
    8. ' 
' → logprob: -7.150890827178955
    9. '    
' → logprob: -7.400890827178955
    10. ':' → logprob: -8.275891304016113

Token 133: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2775184214115143
    2. ' ' → logprob: -1.777518391609192
    3. '       ' → logprob: -3.4025185108184814
    4. '<|end|>' → logprob: -3.4025185108184814
    5. 'if' (adapté à ' if') → logprob: -6.027518272399902
    6. '        ' → logprob: -6.027518272399902
    7. ' 
' → logprob: -7.527518272399902
    8. '   ' → logprob: -8.152518272399902
    9. '    ' → logprob: -8.527518272399902
    10. ')' → logprob: -9.027518272399902

Token 134: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.20315884053707123
    2. ' fro' → logprob: -1.7031588554382324
    3. '{i' → logprob: -7.328158855438232
    4. '{' → logprob: -7.703158855438232
    5. ' not' → logprob: -8.828158378601074
    6. '(i' → logprob: -8.953158378601074
    7. '   ' → logprob: -9.453158378601074
    8. '(f' → logprob: -10.078158378601074
    9. ' (' → logprob: -10.078158378601074
    10. ' {' → logprob: -10.078158378601074

Token 135: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -1.9385402993066236e-05
    2. 'zes' → logprob: -10.875019073486328
    3. 'zen' → logprob: -14.750019073486328
    4. 'z' → logprob: -18.375019073486328
    5. 'sz' → logprob: -18.375019073486328
    6. 'sets' → logprob: -18.375019073486328
    7. 'zent' → logprob: -18.500019073486328
    8. 'zs' → logprob: -20.750019073486328
    9. 'zend' → logprob: -20.875019073486328
    10. 'zet' → logprob: -21.250019073486328

Token 136: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0735434740781784
    2. 'set' → logprob: -2.6985435485839844
    3. 't' → logprob: -5.823543548583984
    4. 'st' → logprob: -7.573543548583984
    5. '{' → logprob: -10.573543548583984
    6. 'zet' → logprob: -10.948543548583984
    7. 'ets' → logprob: -11.448543548583984
    8. '_set' → logprob: -11.448543548583984
    9. 'zen' → logprob: -11.698543548583984
    10. 'Set' → logprob: -11.698543548583984

Token 137: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.006282356102019548
    2. '{' → logprob: -5.131282329559326
    3. '{i' → logprob: -8.131282806396484
    4. '([' → logprob: -9.756282806396484
    5. '((' → logprob: -14.506282806396484
    6. '{{' → logprob: -15.256282806396484
    7. '(({' → logprob: -15.631282806396484
    8. '[{' → logprob: -15.631282806396484
    9. '(' → logprob: -15.881282806396484
    10. ' {' → logprob: -16.506282806396484

Token 138: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12719979882240295
    2. '{i' → logprob: -2.12719988822937
    3. '(i' → logprob: -8.37720012664795
    4. '{' → logprob: -10.87720012664795
    5. ' i' → logprob: -11.00220012664795
    6. '[i' → logprob: -13.00220012664795
    7. ' {' → logprob: -13.25220012664795
    8. '   ' → logprob: -14.12720012664795
    9. '({' → logprob: -14.62720012664795
    10. ''i' → logprob: -15.00220012664795

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047242953442037106
    2. ',j' → logprob: -5.629724502563477
    3. ' ,' → logprob: -7.754724502563477
    4. '{' → logprob: -8.129724502563477
    5. ',i' → logprob: -8.129724502563477
    6. '{i' → logprob: -9.629724502563477
    7. 'i' → logprob: -10.879724502563477
    8. ',
' → logprob: -12.254724502563477
    9. 'j' → logprob: -12.379724502563477
    10. ',{' → logprob: -12.504724502563477

Token 140: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11285297572612762
    2. ' j' → logprob: -2.2378530502319336
    3. '   ' → logprob: -11.362853050231934
    4. ' ' → logprob: -11.487853050231934
    5. '    ' → logprob: -13.112853050231934
    6. '	j' → logprob: -13.362853050231934
    7. '{' → logprob: -13.362853050231934
    8. '  ' → logprob: -14.112853050231934
    9. ',j' → logprob: -14.737853050231934
    10. '$j' → logprob: -15.362853050231934

Token 141: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0013863088097423315
    2. ' })' → logprob: -6.6263861656188965
    3. ')' → logprob: -10.126386642456055
    4. ' not' → logprob: -12.001386642456055
    5. '   ' → logprob: -12.501386642456055
    6. 'not' → logprob: -12.626386642456055
    7. ' ' → logprob: -13.751386642456055
    8. '])' → logprob: -14.001386642456055
    9. '"})' → logprob: -14.126386642456055
    10. ' )' → logprob: -14.251386642456055

Token 142: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11464546620845795
    2. ' in' → logprob: -2.239645481109619
    3. 'not' → logprob: -6.489645481109619
    4. 'in' → logprob: -8.114645004272461
    5. '	not' → logprob: -13.114645004272461
    6. ')' → logprob: -14.989645004272461
    7. '   ' → logprob: -15.114645004272461
    8. ' ' → logprob: -15.114645004272461
    9. '<|end|>' → logprob: -15.114645004272461
    10. '<|end|>' → logprob: -17.61464500427246

Token 143: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.056630056351423264
    2. ' in' → logprob: -2.9316301345825195
    3. '<|end|>' → logprob: -6.9316301345825195
    4. 'for' → logprob: -7.8066301345825195
    5. ')' → logprob: -8.68163013458252
    6. 'to' → logprob: -10.18163013458252
    7. '.' → logprob: -10.30663013458252
    8. 'of' → logprob: -10.43163013458252
    9. '<|end|>' → logprob: -10.68163013458252
    10. 'from' → logprob: -11.80663013458252

Token 144: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0060554747469723225
    2. ' forbidden' → logprob: -5.1310553550720215
    3. ' for' → logprob: -9.00605583190918
    4. 'Forbidden' → logprob: -13.75605583190918
    5. '   ' → logprob: -14.50605583190918
    6. ' forb' → logprob: -14.63105583190918
    7. '(for' → logprob: -14.63105583190918
    8. ' forbid' → logprob: -14.88105583190918
    9. 'forced' → logprob: -15.63105583190918
    10. '.for' → logprob: -15.63105583190918

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00816038716584444
    2. ':
' → logprob: -5.008160591125488
    3. '):' → logprob: -7.258160591125488
    4. '       ' → logprob: -8.258160591125488
    5. ' and' → logprob: -8.508160591125488
    6. '):
' → logprob: -8.758160591125488
    7. '           ' → logprob: -9.508160591125488
    8. ',' → logprob: -10.758160591125488
    9. ')' → logprob: -11.508160591125488
    10. '<|end|>' → logprob: -12.508160591125488

Token 146: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.589181125164032
    2. ':' → logprob: -1.0891811847686768
    3. '           ' → logprob: -2.7141811847686768
    4. ':
' → logprob: -3.2141811847686768
    5. '):
' → logprob: -7.839180946350098
    6. ' :' → logprob: -8.339180946350098
    7. '():
' → logprob: -8.464180946350098
    8. ',' → logprob: -8.464180946350098
    9. 'print' → logprob: -8.589180946350098
    10. '        
' → logprob: -8.839180946350098

Token 147: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.658963143825531
    2. ' print' → logprob: -0.783963143825531
    3. '           ' → logprob: -3.658963203430176
    4. '               ' → logprob: -8.408963203430176
    5. '       ' → logprob: -11.908963203430176
    6. '
' → logprob: -12.033963203430176
    7. ' ' → logprob: -12.408963203430176
    8. '	print' → logprob: -12.658963203430176
    9. ',' → logprob: -12.783963203430176
    10. '            
' → logprob: -12.908963203430176

Token 148: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004095735494047403
    2. '(f' → logprob: -5.504095554351807
    3. '(' → logprob: -11.004096031188965
    4. 'i' → logprob: -15.379096031188965
    5. '()' → logprob: -15.629096031188965
    6. '((' → logprob: -15.629096031188965
    7. 'f' → logprob: -16.25409507751465
    8. '(a' → logprob: -17.12909507751465
    9. '(n' → logprob: -17.12909507751465
    10. '(j' → logprob: -17.62909507751465

Token 149: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19822828471660614
    2. ' ,' → logprob: -1.8232282400131226
    3. ' j' → logprob: -4.448228359222412
    4. ',j' → logprob: -5.073228359222412
    5. ' ' → logprob: -8.448227882385254
    6. ')' → logprob: -10.823227882385254
    7. ' ,
' → logprob: -10.948227882385254
    8. ' f' → logprob: -11.073227882385254
    9. ',end' → logprob: -11.073227882385254
    10. '   ' → logprob: -11.323227882385254

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008049834286794066
    2. ' ' → logprob: -7.125804901123047
    3. '2' → logprob: -16.375804901123047
    4. ')' → logprob: -16.375804901123047
    5. ' ' → logprob: -16.875804901123047
    6. '```' → logprob: -17.063304901123047
    7. '+' → logprob: -17.625804901123047
    8. '<|end|>' → logprob: -17.750804901123047
    9. ',' → logprob: -17.875804901123047
    10. '`' → logprob: -18.250804901123047

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -19.000015258789062
    4. '<|end|>' → logprob: -19.000015258789062
    5. '   ' → logprob: -19.250015258789062
    6. ')' → logprob: -19.312515258789062
    7. '+' → logprob: -19.437515258789062
    8. ',' → logprob: -19.625015258789062
    9. '１' → logprob: -20.500015258789062
    10. '`' → logprob: -20.500015258789062

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011291255243122578
    2. ' ,' → logprob: -4.636291027069092
    3. ',j' → logprob: -6.511291027069092
    4. ',
' → logprob: -11.13629150390625
    5. ' j' → logprob: -11.38629150390625
    6. ',end' → logprob: -11.76129150390625
    7. ',i' → logprob: -12.26129150390625
    8. '           ' → logprob: -12.51129150390625
    9. ' ,
' → logprob: -13.13629150390625
    10. '   ' → logprob: -13.63629150390625

Token 153: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02324652671813965
    2. ' j' → logprob: -3.7732465267181396
    3. '   ' → logprob: -14.023246765136719
    4. '    ' → logprob: -15.773246765136719
    5. '	j' → logprob: -16.77324676513672
    6. ')' → logprob: -17.64824676513672
    7. ' ' → logprob: -17.89824676513672
    8. '           ' → logprob: -18.39824676513672
    9. ' ' → logprob: -18.39824676513672
    10. '  ' → logprob: -18.64824676513672

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25199079513549805
    2. ' +' → logprob: -1.501990795135498
    3. '1' → logprob: -10.001991271972656
    4. ')' → logprob: -12.126991271972656
    5. ' ' → logprob: -12.751991271972656
    6. '+
' → logprob: -12.876991271972656
    7. '<|end|>' → logprob: -13.376991271972656
    8. ' +
' → logprob: -13.626991271972656
    9. '+)' → logprob: -13.876991271972656
    10. ')+' → logprob: -14.251991271972656

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -14.250066757202148
    4. ')' → logprob: -16.50006675720215
    5. '```' → logprob: -17.12506675720215
    6. '   ' → logprob: -17.25006675720215
    7. '0' → logprob: -17.87506675720215
    8. '<|end|>' → logprob: -18.31256675720215
    9. '.' → logprob: -18.43756675720215
    10. '۱' → logprob: -18.50006675720215

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -16.375001907348633
    4. ')' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.812501907348633
    6. '۱' → logprob: -18.812501907348633
    7. '0' → logprob: -18.875001907348633
    8. '```' → logprob: -19.375001907348633
    9. '১' → logprob: -19.562501907348633
    10. '  ' → logprob: -19.687501907348633

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.500003814697266
    4. ')}' → logprob: -16.250003814697266
    5. ');' → logprob: -16.250003814697266
    6. '<|end|>' → logprob: -16.375003814697266
    7. ')#' → logprob: -16.500003814697266
    8. '),' → logprob: -17.125003814697266
    9. '))' → logprob: -17.750003814697266
    10. ')}}' → logprob: -18.000003814697266

Token 158: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759603977203369
    2. '__' → logprob: -0.8259603977203369
    3. '_' → logprob: -11.450960159301758
    4. 'name' → logprob: -12.450960159301758
    5. '_name' → logprob: -12.700960159301758
    6. ' ' → logprob: -13.575960159301758
    7. '___' → logprob: -13.825960159301758
    8. ' ' → logprob: -14.825960159301758
    9. '/__' → logprob: -15.575960159301758
    10. '  ' → logprob: -16.075960159301758

Token 160: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.739039421081543
    2. '__' → logprob: -0.864039421081543
    3. '==' → logprob: -2.364039421081543
    4. 'name' → logprob: -5.239039421081543
    5. ' __' → logprob: -6.864039421081543
    6. '=="' → logprob: -7.989039421081543
    7. '.name' → logprob: -9.614039421081543
    8. '.__' → logprob: -9.739039421081543
    9. '=='' → logprob: -10.364039421081543
    10. ' =="' → logprob: -11.114039421081543

Token 161: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008118899422697723
    2. '==' → logprob: -7.12581205368042
    3. ' ==' → logprob: -12.750811576843262
    4. '__.__' → logprob: -13.750811576843262
    5. '=="' → logprob: -13.875811576843262
    6. '_' → logprob: -13.875811576843262
    7. '___' → logprob: -14.000811576843262
    8. '=='' → logprob: -15.000811576843262
    9. '____' → logprob: -16.000812530517578
    10. '__('' → logprob: -16.500812530517578

Token 162: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05820291489362717
    2. ' ==' → logprob: -3.0582029819488525
    3. '__' → logprob: -4.808202743530273
    4. '=="' → logprob: -6.683202743530273
    5. '=='' → logprob: -9.933202743530273
    6. '=' → logprob: -9.933202743530273
    7. '===' → logprob: -10.683202743530273
    8. '==
' → logprob: -10.808202743530273
    9. '<|end|>' → logprob: -12.308202743530273
    10. '```' → logprob: -13.308202743530273

Token 163: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02343728393316269
    2. ''' → logprob: -3.773437261581421
    3. ' "__' → logprob: -8.6484375
    4. '__' → logprob: -11.2734375
    5. ' '__' → logprob: -12.6484375
    6. '   ' → logprob: -16.1484375
    7. '"_' → logprob: -16.3984375
    8. '"name' → logprob: -16.3984375
    9. '("__' → logprob: -16.5234375
    10. ''"' → logprob: -16.5234375

Token 164: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.500108141452074e-05
    2. '"' → logprob: -10.375035285949707
    3. '__' → logprob: -13.250035285949707
    4. 'name' → logprob: -13.875035285949707
    5. ' main' → logprob: -14.375035285949707
    6. ''' → logprob: -15.250035285949707
    7. '_main' → logprob: -16.00003433227539
    8. 'ma' → logprob: -18.12503433227539
    9. '	main' → logprob: -18.12503433227539
    10. '-main' → logprob: -18.75003433227539

Token 165: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.024266069754958153
    2. '__' → logprob: -3.774266004562378
    3. '__':
' → logprob: -6.899266242980957
    4. '__.' → logprob: -11.899266242980957
    5. '__["' → logprob: -13.274266242980957
    6. '__.__' → logprob: -13.774266242980957
    7. '__
' → logprob: -14.274266242980957
    8. '__:' → logprob: -14.524266242980957
    9. '__
' → logprob: -15.399266242980957
    10. '__",' → logprob: -15.899266242980957

Token 166: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09214674681425095
    2. '   ' → logprob: -2.842146635055542
    3. ' main' → logprob: -4.092146873474121
    4. '	main' → logprob: -4.342146873474121
    5. '_main' → logprob: -12.467146873474121
    6. ' ' → logprob: -12.592146873474121
    7. '  ' → logprob: -12.717146873474121
    8. '(main' → logprob: -13.092146873474121
    9. '   ' → logprob: -13.092146873474121
    10. '    
' → logprob: -13.967146873474121

Token 167: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -16.5
    4. '   ' → logprob: -17.25
    5. '(main' → logprob: -21.5
    6. '.main' → logprob: -22.0
    7. '_main' → logprob: -22.25
    8. 'mainwindow' → logprob: -23.5
    9. 'import' → logprob: -23.625
    10. '    
' → logprob: -24.0

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017684244085103273
    2. '()
' → logprob: -9.375176429748535
    3. '(' → logprob: -9.500176429748535
    4. '```' → logprob: -12.375176429748535
    5. '()

' → logprob: -13.375176429748535
    6. ')' → logprob: -13.375176429748535
    7. '())' → logprob: -13.500176429748535
    8. '()\' → logprob: -13.625176429748535
    9. '#' → logprob: -14.000176429748535
    10. '();' → logprob: -14.000176429748535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 45.18%
Précision adaptée (1ère position): 46.99%
Précision (top 10): 82.53%
================================================================================
