================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de deux entiers à partir de l'entrée standard, séparés par un espace.
# Ces deux entiers sont respectivement stockés dans les variables n et m.
# n représente généralement le nombre de listes à lire, m le nombre d'éléments à sélectionner ultérieurement.
n, m = map(int, input().split())

# Création d'une liste appelée "cake" qui va contenir n éléments.
# Chaque élément de cette liste est lui-même une liste de trois entiers, obtenue en lisant une ligne de l'entrée standard,
# en la découpant avec split(), en convertissant chaque morceau en entier (map(int, ...)), puis en fabriquant une liste.
cake = [list(map(int, input().split())) for _ in range(n)]

# Création d'une liste nommée "cakes" qui va contenir 8 sous-listes vides.
# L'opération [[] for _ in range(8)] utilise une compréhension de liste pour créer 8 listes vides distinctes,
# une pour chaque combinaison de signes +/- dans les calculs qui suivent (2^3 = 8).
cakes = [[] for _ in range(8)]

# Boucle sur chaque élément "c" de la liste cake.
# Chaque "c" est une liste de 3 entiers : c[0], c[1], c[2].
for c in cake:
    # Pour chaque combinaison de signes possible sur les 3 éléments, on calcule la somme correspondante :
    # Par exemple, c[0]+c[1]+c[2], c[0]+c[1]-c[2], etc.
    # On ajoute le résultat à la sous-liste appropriée de la liste "cakes".
    cakes[0].append(c[0] + c[1] + c[2])       # Cas où tous les éléments sont additionnés positivement.
    cakes[1].append(c[0] + c[1] - c[2])       # Cas où le troisième élément est soustrait.
    cakes[2].append(c[0] - c[1] + c[2])       # Cas où le deuxième élément est soustrait.
    cakes[3].append(c[0] - c[1] - c[2])       # Cas où le deuxième et le troisième éléments sont soustraits.
    cakes[4].append(-c[0] + c[1] + c[2])      # Cas où le premier élément est soustrait.
    cakes[5].append(-c[0] + c[1] - c[2])      # Cas où le premier et le troisième éléments sont soustraits.
    cakes[6].append(-c[0] - c[1] + c[2])      # Cas où le premier et le deuxième éléments sont soustraits.
    cakes[7].append(-c[0] - c[1] - c[2])      # Cas où tous les éléments sont soustraits.

# Pour chaque sous-liste de "cakes" (il y en a 8), on trie les éléments dans l'ordre décroissant (reverse=True).
# Cela permettra d'accéder facilement aux m plus grands éléments par la suite.
for c in cakes:
    c.sort(reverse=True)

# Initialisation de la variable "ans" à 0.
# Cette variable servira à enregistrer la somme maximale trouvée.
ans = 0

# Parcours des 8 combinaisons (0 à 7) :
for i in range(8):
    # Pour chaque sous-liste cakes[i], on prend les m premiers éléments (grâce au tri).
    # sum(cakes[i][:m]) calcule la somme des m plus grands éléments.
    # On utilise max() pour conserver la plus grande somme rencontrée dans "ans".
    ans = max(ans, sum(cakes[i][:m]))

# Affichage de la valeur finale trouvée, c'est-à-dire la somme maximale possible.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7483025789260864
    2. ' fichier' → logprob: -0.8733025789260864
    3. 'f' → logprob: -2.498302459716797
    4. ' fichiers' → logprob: -4.373302459716797
    5. 's' → logprob: -4.748302459716797
    6. ' f' → logprob: -5.748302459716797
    7. 'l' → logprob: -6.998302459716797
    8. 'd' → logprob: -7.873302459716797
    9. ' données' → logprob: -7.998302459716797
    10. ' fich' → logprob: -9.123302459716797

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9600086808204651
    2. 'l' → logprob: -1.5850086212158203
    3. '_' → logprob: -1.8350086212158203
    4. '_l' → logprob: -2.8350086212158203
    5. '\' → logprob: -3.3350086212158203
    6. '_f' → logprob: -3.5850086212158203
    7. '_n' → logprob: -4.08500862121582
    8. '\n' → logprob: -4.58500862121582
    9. ' _' → logprob: -4.71000862121582
    10. 'n' → logprob: -4.71000862121582

Token 5: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.24150322377681732
    2. 'r' → logprob: -1.8665032386779785
    3. 'ités' → logprob: -4.1165032386779785
    4. 'ri' → logprob: -4.2415032386779785
    5. 'ières' → logprob: -4.4915032386779785
    6. 'i' → logprob: -4.6165032386779785
    7. 'êtes' → logprob: -6.1165032386779785
    8. 'ité' → logprob: -6.8665032386779785
    9. '```' → logprob: -7.1165032386779785
    10. '#' → logprob: -7.4915032386779785

Token 6: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04747151583433151
    2. 'n' → logprob: -3.547471523284912
    3. 'x' → logprob: -4.172471523284912
    4. 'i' → logprob: -6.922471523284912
    5. 'e' → logprob: -7.297471523284912
    6. '#' → logprob: -8.547471046447754
    7. '\n' → logprob: -9.047471046447754
    8. 'v' → logprob: -9.672471046447754
    9. '```' → logprob: -9.672471046447754
    10. '\' → logprob: -10.797471046447754

Token 7: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2289849817752838
    2. 'part' → logprob: -2.228985071182251
    3. ' partir' → logprob: -3.353985071182251
    4. '```' → logprob: -3.603985071182251
    5. 'la' → logprob: -4.103984832763672
    6. ' l' → logprob: -5.103984832763672
    7. 's' → logprob: -5.228984832763672
    8. 'cl' → logprob: -6.853984832763672
    9. '#' → logprob: -6.978984832763672
    10. ' ' → logprob: -7.228984832763672

Token 8: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02320517599582672
    2. 'd' → logprob: -4.773205280303955
    3. ' ' → logprob: -5.148205280303955
    4. ' du' → logprob: -5.523205280303955
    5. ' de' → logprob: -5.648205280303955
    6. 's' → logprob: -7.773205280303955
    7. '_' → logprob: -8.523204803466797
    8. ' des' → logprob: -8.773204803466797
    9. 'de' → logprob: -9.648204803466797
    10. 'du' → logprob: -10.398204803466797

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010297461412847042
    2. ' l' → logprob: -5.5102972984313965
    3. 'input' → logprob: -6.1352972984313965
    4. 'la' → logprob: -6.7602972984313965
    5. 'une' → logprob: -7.1352972984313965
    6. '```' → logprob: -7.3852972984313965
    7. 'cl' → logprob: -8.510297775268555
    8. ' ' → logprob: -8.885297775268555
    9. '_' → logprob: -8.885297775268555
    10. 's' → logprob: -9.135297775268555

Token 10: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31999480724334717
    2. 'a' → logprob: -2.5699949264526367
    3. ''' → logprob: -2.6949949264526367
    4. 'i' → logprob: -3.1949949264526367
    5. 'input' → logprob: -4.069994926452637
    6. 'u' → logprob: -4.444994926452637
    7. '`' → logprob: -4.944994926452637
    8. 'igne' → logprob: -4.944994926452637
    9. 'ignes' → logprob: -5.319994926452637
    10. ''entrée' → logprob: -5.319994926452637

Token 11: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05733293294906616
    2. 'x' → logprob: -3.057332992553711
    3. 'n' → logprob: -4.807332992553711
    4. '```' → logprob: -7.932332992553711
    5. '`' → logprob: -9.932332992553711
    6. 'i' → logprob: -10.057332992553711
    7. '``' → logprob: -10.557332992553711
    8. 'e' → logprob: -10.557332992553711
    9. 'int' → logprob: -11.807332992553711
    10. 'ent' → logprob: -11.807332992553711

Token 12: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022386128082871437
    2. 'x' → logprob: -4.397386074066162
    3. 'n' → logprob: -4.647386074066162
    4. 'e' → logprob: -9.02238655090332
    5. '```' → logprob: -10.14738655090332
    6. 'ent' → logprob: -10.52238655090332
    7. ',' → logprob: -10.89738655090332
    8. 'i' → logprob: -11.39738655090332
    9. '`' → logprob: -11.64738655090332
    10. ' a' → logprob: -12.39738655090332

Token 13: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35341325402259827
    2. 'x' → logprob: -1.6034132242202759
    3. 'n' → logprob: -2.9784133434295654
    4. ' a' → logprob: -3.2284133434295654
    5. ' x' → logprob: -5.603413105010986
    6. ' n' → logprob: -6.728413105010986
    7. 'val' → logprob: -8.353413581848145
    8. 'num' → logprob: -8.603413581848145
    9. 'v' → logprob: -8.978413581848145
    10. 's' → logprob: -9.228413581848145

Token 14: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02391415275633335
    2. 's' → logprob: -4.148914337158203
    3. 'é' → logprob: -4.898914337158203
    4. 'es' → logprob: -9.023914337158203
    5. ''s' → logprob: -9.023914337158203
    6. '```' → logprob: -10.523914337158203
    7. ''' → logprob: -10.773914337158203
    8. 'ès' → logprob: -10.773914337158203
    9. '#' → logprob: -11.398914337158203
    10. ',' → logprob: -11.648914337158203

Token 15: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5543211102485657
    2. 'par' → logprob: -0.9293211102485657
    3. ',' → logprob: -4.5543212890625
    4. '_par' → logprob: -4.6793212890625
    5. 's' → logprob: -6.1793212890625
    6. ' ' → logprob: -6.3043212890625
    7. 'es' → logprob: -6.4293212890625
    8. ')' → logprob: -6.8043212890625
    9. '=' → logprob: -7.4293212890625
    10. 'e' → logprob: -8.0543212890625

Token 16: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.11531852930784225
    2. 'un' → logprob: -2.865318536758423
    3. ''' → logprob: -3.865318536758423
    4. ' un' → logprob: -4.115318298339844
    5. ''une' → logprob: -4.615318298339844
    6. 'une' → logprob: -6.365318298339844
    7. ''espace' → logprob: -6.615318298339844
    8. ''esp' → logprob: -8.240318298339844
    9. '"' → logprob: -8.615318298339844
    10. ' ' → logprob: -8.740318298339844

Token 17: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.08513008058071136
    2. ' espace' → logprob: -3.085129976272583
    3. 'esp' → logprob: -3.585129976272583
    4. ''espace' → logprob: -5.210130214691162
    5. 'space' → logprob: -6.585130214691162
    6. ''' → logprob: -7.835130214691162
    7. ' ' → logprob: -8.335129737854004
    8. '```' → logprob: -8.460129737854004
    9. ''esp' → logprob: -9.210129737854004
    10. '’espace' → logprob: -9.960129737854004

Token 18: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06809619069099426
    2. 'x' → logprob: -2.818096160888672
    3. 'n' → logprob: -5.318096160888672
    4. 'e' → logprob: -7.443096160888672
    5. 'i' → logprob: -7.693096160888672
    6. '```' → logprob: -9.318096160888672
    7. '`' → logprob: -10.693096160888672
    8. 'ent' → logprob: -11.193096160888672
    9. 'b' → logprob: -11.693096160888672
    10. 'v' → logprob: -11.943096160888672

Token 19: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.053953591734170914
    2. 'n' → logprob: -3.6789536476135254
    3. 'x' → logprob: -3.6789536476135254
    4. 'i' → logprob: -6.678953647613525
    5. 'e' → logprob: -7.428953647613525
    6. '```' → logprob: -9.803953170776367
    7. 'v' → logprob: -9.928953170776367
    8. '#' → logprob: -10.428953170776367
    9. 'b' → logprob: -11.303953170776367
    10. '`' → logprob: -11.928953170776367

Token 20: ' Ces' (ID: 35720)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007590895052999258
    2. 'x' → logprob: -5.0075907707214355
    3. 'n' → logprob: -7.6325907707214355
    4. 'ent' → logprob: -8.132591247558594
    5. ' a' → logprob: -9.632591247558594
    6. '#' → logprob: -11.507591247558594
    7. '```' → logprob: -12.257591247558594
    8. 'e' → logprob: -12.507591247558594
    9. 'num' → logprob: -12.757591247558594
    10. 'i' → logprob: -13.507591247558594

Token 21: ' deux' (ID: 10301)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2861769497394562
    2. 'de' → logprob: -1.9111769199371338
    3. 'n' → logprob: -2.786176919937134
    4. ' =' → logprob: -4.286177158355713
    5. ' ent' → logprob: -5.036177158355713
    6. '=' → logprob: -5.661177158355713
    7. 'a' → logprob: -5.661177158355713
    8. 'val' → logprob: -6.036177158355713
    9. 's' → logprob: -6.286177158355713
    10. ' deux' → logprob: -6.536177158355713

Token 22: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7223907113075256
    2. ' ent' → logprob: -0.7223907113075256
    3. '_ent' → logprob: -4.097390651702881
    4. '_' → logprob: -5.972390651702881
    5. ' nombres' → logprob: -6.222390651702881
    6. ' =' → logprob: -6.347390651702881
    7. 'n' → logprob: -6.347390651702881
    8. 's' → logprob: -7.347390651702881
    9. 'a' → logprob: -7.472390651702881
    10. ' entier' → logprob: -7.972390651702881

Token 23: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002017144113779068
    2. 'i' → logprob: -6.377017021179199
    3. 'ier' → logprob: -8.3770170211792
    4. 'ières' → logprob: -10.8770170211792
    5. '```' → logprob: -11.0020170211792
    6. 'ers' → logprob: -11.3770170211792
    7. '#' → logprob: -11.8770170211792
    8. 's' → logprob: -12.3770170211792
    9. 'ié' → logprob: -12.6270170211792
    10. 'ires' → logprob: -12.7520170211792

Token 24: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49455684423446655
    2. ' ' → logprob: -1.1195569038391113
    3. ' sont' → logprob: -2.8695569038391113
    4. ' seront' → logprob: -5.994556903839111
    5. ',' → logprob: -7.119556903839111
    6. ' a' → logprob: -7.244556903839111
    7. 'a' → logprob: -7.494556903839111
    8. ' ,' → logprob: -7.744556903839111
    9. ' s' → logprob: -7.869556903839111
    10. ' =' → logprob: -7.869556903839111

Token 25: ' respect' (ID: 5618)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.07623017579317093
    2. ' ensuite' → logprob: -4.201230049133301
    3. ' utilisés' → logprob: -4.326230049133301
    4. 'stock' → logprob: -4.826230049133301
    5. ' lus' → logprob: -4.826230049133301
    6. ' plac' → logprob: -5.076230049133301
    7. ' affect' → logprob: -5.576230049133301
    8. 's' → logprob: -5.826230049133301
    9. ' assign' → logprob: -6.201230049133301
    10. ' récup' → logprob: -6.451230049133301

Token 26: 'ivement' (ID: 37978)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0026636465918272734
    2. 'é' → logprob: -6.502663612365723
    3. '#' → logprob: -7.502663612365723
    4. 's' → logprob: -8.502663612365723
    5. 'u' → logprob: -9.002663612365723
    6. 'ées' → logprob: -9.627663612365723
    7. '```' → logprob: -10.002663612365723
    8. 'ant' → logprob: -10.627663612365723
    9. 'ent' → logprob: -10.877663612365723
    10. 'us' → logprob: -11.377663612365723

Token 27: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5037394165992737
    2. ' récup' → logprob: -2.253739356994629
    3. ' lus' → logprob: -2.378739356994629
    4. 'l' → logprob: -3.003739356994629
    5. 'a' → logprob: -3.753739356994629
    6. 'stock' → logprob: -3.753739356994629
    7. ' les' → logprob: -4.003739356994629
    8. 's' → logprob: -4.503739356994629
    9. 'les' → logprob: -4.628739356994629
    10. ' assign' → logprob: -4.878739356994629

Token 28: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01105170976370573
    2. 'é' → logprob: -4.511051654815674
    3. 'ès' → logprob: -13.511052131652832
    4. 'es' → logprob: -13.761052131652832
    5. 'ées' → logprob: -14.261052131652832
    6. 'ée' → logprob: -14.886052131652832
    7. 's' → logprob: -16.011051177978516
    8. 'ÉS' → logprob: -16.636051177978516
    9. 'e' → logprob: -16.761051177978516
    10. 'er' → logprob: -17.136051177978516

Token 29: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4170057773590088
    2. ' ' → logprob: -1.4170057773590088
    3. 'dans' → logprob: -2.417005777359009
    4. 's' → logprob: -5.04200553894043
    5. ' a' → logprob: -6.91700553894043
    6. ' à' → logprob: -8.16700553894043
    7. ' au' → logprob: -8.41700553894043
    8. 'au' → logprob: -8.79200553894043
    9. 'e' → logprob: -8.79200553894043
    10. '_' → logprob: -9.16700553894043

Token 30: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3627399802207947
    2. ' a' → logprob: -1.7377400398254395
    3. 'de' → logprob: -2.9877400398254395
    4. ' la' → logprob: -3.9877400398254395
    5. ' deux' → logprob: -4.1127400398254395
    6. 'la' → logprob: -4.3627400398254395
    7. ' des' → logprob: -4.7377400398254395
    8. ' variables' → logprob: -5.6127400398254395
    9. ' les' → logprob: -5.8627400398254395
    10. '`' → logprob: -5.9877400398254395

Token 31: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.4507492184638977
    2. 'de' → logprob: -1.700749158859253
    3. 'variables' → logprob: -1.825749158859253
    4. ' deux' → logprob: -5.200749397277832
    5. ' ' → logprob: -5.450749397277832
    6. 'a' → logprob: -5.950749397277832
    7. 'ent' → logprob: -6.700749397277832
    8. 'n' → logprob: -6.950749397277832
    9. ' nombres' → logprob: -6.950749397277832
    10. ' a' → logprob: -7.825749397277832

Token 32: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32586318254470825
    2. ' a' → logprob: -1.3258631229400635
    3. 'x' → logprob: -4.825863361358643
    4. ' x' → logprob: -5.575863361358643
    5. '`' → logprob: -8.700862884521484
    6. 'ent' → logprob: -9.075862884521484
    7. ' `' → logprob: -9.075862884521484
    8. ' ent' → logprob: -9.450862884521484
    9. ' entier' → logprob: -9.450862884521484
    10. ' nombre' → logprob: -10.200862884521484

Token 33: ' et' (ID: 859)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25761693716049194
    2. ',' → logprob: -2.0076169967651367
    3. '1' → logprob: -3.1326169967651367
    4. '_' → logprob: -4.007616996765137
    5. 'u' → logprob: -4.882616996765137
    6. 'umber' → logprob: -4.882616996765137
    7. 'ombre' → logprob: -5.007616996765137
    8. 'um' → logprob: -5.632616996765137
    9. 'ombres' → logprob: -6.257616996765137
    10. ' =' → logprob: -6.882616996765137

Token 34: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.23078888654708862
    2. 'm' → logprob: -2.4807889461517334
    3. ' ' → logprob: -2.6057889461517334
    4. ' p' → logprob: -3.1057889461517334
    5. 'p' → logprob: -7.230788707733154
    6. ' a' → logprob: -7.605788707733154
    7. ' k' → logprob: -7.730788707733154
    8. ' t' → logprob: -7.980788707733154
    9. ' i' → logprob: -7.980788707733154
    10. ' r' → logprob: -8.230789184570312

Token 35: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.574251918005757e-05
    2. ',' → logprob: -10.750055313110352
    3. '=' → logprob: -11.250055313110352
    4. ':' → logprob: -12.375055313110352
    5. ' n' → logprob: -13.000055313110352
    6. '#' → logprob: -13.000055313110352
    7. ',n' → logprob: -13.250055313110352
    8. ' =' → logprob: -13.375055313110352
    9. '```' → logprob: -13.375055313110352
    10. 'i' → logprob: -13.500055313110352

Token 36: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.625001907348633
    3. ' n' → logprob: -14.625001907348633
    4. '#' → logprob: -15.750001907348633
    5. '`' → logprob: -16.250001907348633
    6. 'input' → logprob: -17.000001907348633
    7. 'import' → logprob: -17.125001907348633
    8. 'x' → logprob: -17.250001907348633
    9. '

' → logprob: -17.375001907348633
    10. '\n' → logprob: -17.500001907348633

Token 37: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.278864359250292e-05
    2. ' ' → logprob: -10.875072479248047
    3. ' n' → logprob: -11.125072479248047
    4. '#' → logprob: -11.375072479248047
    5. 'i' → logprob: -11.500072479248047
    6. '```' → logprob: -12.250072479248047
    7. ',' → logprob: -13.375072479248047
    8. '

' → logprob: -13.375072479248047
    9. 'input' → logprob: -13.875072479248047
    10. 'l' → logprob: -14.125072479248047

Token 38: ' représente' (ID: 88912)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009317061631008983
    2. ' ,' → logprob: -7.500931739807129
    3. ',m' → logprob: -8.000931739807129
    4. ' =' → logprob: -11.000931739807129
    5. 'm' → logprob: -11.125931739807129
    6. '=' → logprob: -12.250931739807129
    7. ' m' → logprob: -12.375931739807129
    8. 's' → logprob: -13.625931739807129
    9. ',n' → logprob: -14.500931739807129
    10. ' ' → logprob: -15.375931739807129

Token 39: ' généralement' (ID: 67075)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2087179720401764
    2. ' ' → logprob: -3.0837180614471436
    3. ' l' → logprob: -3.2087180614471436
    4. ' nombre' → logprob: -3.2087180614471436
    5. ' la' → logprob: -3.4587180614471436
    6. 'le' → logprob: -4.0837178230285645
    7. 'l' → logprob: -4.9587178230285645
    8. ' the' → logprob: -5.9587178230285645
    9. 'nombre' → logprob: -6.0837178230285645
    10. '  ' → logprob: -8.083718299865723

Token 40: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.14054636657238007
    2. ' la' → logprob: -2.6405463218688965
    3. 'le' → logprob: -3.1405463218688965
    4. ' l' → logprob: -5.1405463218688965
    5. 'l' → logprob: -5.5155463218688965
    6. ' ' → logprob: -5.7655463218688965
    7. ' the' → logprob: -6.7655463218688965
    8. 'la' → logprob: -7.5155463218688965
    9. ' nombre' → logprob: -7.5155463218688965
    10. 'nombre' → logprob: -7.7655463218688965

Token 41: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.40515491366386414
    2. 'nombre' → logprob: -1.1551549434661865
    3. ' ' → logprob: -4.780154705047607
    4. 'n' → logprob: -5.280154705047607
    5. '   ' → logprob: -6.905154705047607
    6. ' nombres' → logprob: -7.405154705047607
    7. 's' → logprob: -7.780154705047607
    8. '  ' → logprob: -7.780154705047607
    9. ' n' → logprob: -7.905154705047607
    10. 'u' → logprob: -7.905154705047607

Token 42: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1391691416501999
    2. ' ' → logprob: -2.139169216156006
    3. 's' → logprob: -5.389169216156006
    4. '_d' → logprob: -5.889169216156006
    5. ' de' → logprob: -6.639169216156006
    6. '_de' → logprob: -6.639169216156006
    7. ' =' → logprob: -7.389169216156006
    8. '=' → logprob: -8.389168739318848
    9. 'd' → logprob: -8.514168739318848
    10. ' _' → logprob: -8.639168739318848

Token 43: ' listes' (ID: 179198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003743429435417056
    2. '_' → logprob: -6.503743648529053
    3. 'élé' → logprob: -6.628743648529053
    4. 'é' → logprob: -9.003743171691895
    5. ' éléments' → logprob: -9.128743171691895
    6. 's' → logprob: -9.378743171691895
    7. ' espaces' → logprob: -9.378743171691895
    8. ')' → logprob: -9.628743171691895
    9. 'l' → logprob: -10.003743171691895
    10. ',' → logprob: -10.378743171691895

Token 44: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40215548872947693
    2. ' =' → logprob: -1.9021555185317993
    3. 'n' → logprob: -2.1521553993225098
    4. '=' → logprob: -2.9021553993225098
    5. ')' → logprob: -6.27715539932251
    6. ' n' → logprob: -6.27715539932251
    7. 's' → logprob: -6.65215539932251
    8. ' ,' → logprob: -6.77715539932251
    9. ' ' → logprob: -7.02715539932251
    10. 'm' → logprob: -7.27715539932251

Token 45: ' lire' (ID: 46082)
  Prédit: ' traiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -0.38659724593162537
    2. ' créer' → logprob: -1.6365972757339478
    3. ' lire' → logprob: -2.636597156524658
    4. ' gérer' → logprob: -4.761597156524658
    5. ' génér' → logprob: -5.011597156524658
    6. 'tr' → logprob: -5.386597156524658
    7. 'cr' → logprob: -5.636597156524658
    8. ' manip' → logprob: -5.761597156524658
    9. 'l' → logprob: -5.886597156524658
    10. 'cré' → logprob: -6.011597156524658

Token 46: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01210164837539196
    2. ',' → logprob: -4.512101650238037
    3. ' n' → logprob: -7.887101650238037
    4. ' ' → logprob: -8.887101173400879
    5. ',n' → logprob: -9.262101173400879
    6. 's' → logprob: -9.262101173400879
    7. '=' → logprob: -9.512101173400879
    8. ' =' → logprob: -9.762101173400879
    9. ' ,' → logprob: -9.887101173400879
    10. '_' → logprob: -10.637101173400879

Token 47: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5332677364349365
    2. ' m' → logprob: -1.7832677364349365
    3. 'n' → logprob: -2.1582677364349365
    4. ' ' → logprob: -2.2832677364349365
    5. ',' → logprob: -4.533267974853516
    6. ' n' → logprob: -5.033267974853516
    7. ' =' → logprob: -6.033267974853516
    8. ' ,' → logprob: -6.283267974853516
    9. 's' → logprob: -6.658267974853516
    10. 'i' → logprob: -7.408267974853516

Token 48: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3984120786190033
    2. '=' → logprob: -1.2734121084213257
    3. ' ' → logprob: -3.648411989212036
    4. ')' → logprob: -5.273412227630615
    5. '_' → logprob: -5.273412227630615
    6. ',' → logprob: -5.273412227630615
    7. '.' → logprob: -6.648412227630615
    8. ' représente' → logprob: -6.773412227630615
    9. '#' → logprob: -7.398412227630615
    10. '=int' → logprob: -7.773412227630615

Token 49: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.06780249625444412
    2. 'nombre' → logprob: -2.9428024291992188
    3. ' ' → logprob: -4.567802429199219
    4. ' maximum' → logprob: -7.317802429199219
    5. ' nombres' → logprob: -7.317802429199219
    6. 'n' → logprob: -8.442802429199219
    7. ' n' → logprob: -8.942802429199219
    8. '  ' → logprob: -9.192802429199219
    9. ' espace' → logprob: -9.442802429199219
    10. 'u' → logprob: -9.817802429199219

Token 50: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7569023370742798
    2. ' de' → logprob: -1.2569023370742798
    3. ' ' → logprob: -1.7569023370742798
    4. 'd' → logprob: -3.7569022178649902
    5. '_' → logprob: -4.13190221786499
    6. 'de' → logprob: -4.50690221786499
    7. '_d' → logprob: -5.13190221786499
    8. '  ' → logprob: -5.13190221786499
    9. '<|end|>' → logprob: -5.75690221786499
    10. ')' → logprob: -6.00690221786499

Token 51: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.48398029804229736
    2. ''' → logprob: -1.3589802980422974
    3. ''é' → logprob: -3.233980178833008
    4. ''e' → logprob: -3.358980178833008
    5. 'u' → logprob: -4.483980178833008
    6. ''ent' → logprob: -4.733980178833008
    7. ''esp' → logprob: -4.858980178833008
    8. ''espace' → logprob: -4.858980178833008
    9. 'é' → logprob: -6.108980178833008
    10. '_' → logprob: -6.108980178833008

Token 52: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02606397308409214
    2. 'é' → logprob: -4.151063919067383
    3. 'él' → logprob: -5.401063919067383
    4. 'ent' → logprob: -6.401063919067383
    5. 'el' → logprob: -7.026063919067383
    6. 'l' → logprob: -7.901063919067383
    7. 'elements' → logprob: -8.151063919067383
    8. 'éc' → logprob: -8.526063919067383
    9. 'lé' → logprob: -8.526063919067383
    10. 'elem' → logprob: -8.651063919067383

Token 53: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.012586642988026142
    2. 'm' → logprob: -4.51258659362793
    3. 'ment' → logprob: -6.63758659362793
    4. 'me' → logprob: -9.88758659362793
    5. 'nts' → logprob: -10.01258659362793
    6. 'e' → logprob: -10.88758659362793
    7. 'v' → logprob: -11.13758659362793
    8. 'men' → logprob: -11.13758659362793
    9. '```' → logprob: -11.13758659362793
    10. 'ts' → logprob: -11.13758659362793

Token 54: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9276135563850403
    2. ' =' → logprob: -1.4276134967803955
    3. '=' → logprob: -2.1776134967803955
    4. 's' → logprob: -2.5526134967803955
    5. '.' → logprob: -2.9276134967803955
    6. ',' → logprob: -3.0526134967803955
    7. 'n' → logprob: -3.1776134967803955
    8. '_' → logprob: -4.427613735198975
    9. ')' → logprob: -4.927613735198975
    10. ' n' → logprob: -5.552613735198975

Token 55: ' sélectionner' (ID: 188432)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.4948556125164032
    2. 'l' → logprob: -1.1198556423187256
    3. ' traiter' → logprob: -3.9948556423187256
    4. 'trait' → logprob: -4.7448554039001465
    5. 'prendre' → logprob: -5.3698554039001465
    6. 'aff' → logprob: -5.4948554039001465
    7. ' l' → logprob: -5.4948554039001465
    8. 'Lire' → logprob: -6.1198554039001465
    9. 'tr' → logprob: -6.2448554039001465
    10. ' afficher' → logprob: -6.2448554039001465

Token 56: ' ult' (ID: 11619)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000241085872403346
    2. ',' → logprob: -9.50024127960205
    3. '=' → logprob: -10.37524127960205
    4. '#' → logprob: -10.62524127960205
    5. ':' → logprob: -10.75024127960205
    6. '\n' → logprob: -11.00024127960205
    7. '-' → logprob: -11.25024127960205
    8. '\' → logprob: -12.12524127960205
    9. 's' → logprob: -12.25024127960205
    10. '.' → logprob: -12.25024127960205

Token 57: 'érieure' (ID: 45836)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41554689407348633
    2. 'n' → logprob: -2.2905468940734863
    3. 'i' → logprob: -2.7905468940734863
    4. 'r' → logprob: -2.9155468940734863
    5. 'è' → logprob: -3.6655468940734863
    6. '```' → logprob: -3.9155468940734863
    7. '#' → logprob: -4.665546894073486
    8. ')' → logprob: -4.665546894073486
    9. 'u' → logprob: -5.040546894073486
    10. '`' → logprob: -5.040546894073486

Token 58: 'ment' (ID: 508)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8772686123847961
    2. '_' → logprob: -1.7522685527801514
    3. 'e' → logprob: -2.2522685527801514
    4. ' ' → logprob: -2.6272685527801514
    5. 'u' → logprob: -3.2522685527801514
    6. 's' → logprob: -3.2522685527801514
    7. '=' → logprob: -3.5022685527801514
    8. ',' → logprob: -3.6272685527801514
    9. 'r' → logprob: -3.6272685527801514
    10. '.' → logprob: -4.2522687911987305

Token 59: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00028302724240347743
    2. ',' → logprob: -9.750283241271973
    3. '#' → logprob: -9.875283241271973
    4. '\' → logprob: -10.375283241271973
    5. '\n' → logprob: -10.500283241271973
    6. '```' → logprob: -10.875283241271973
    7. '-' → logprob: -11.125283241271973
    8. 'i' → logprob: -11.250283241271973
    9. ':' → logprob: -11.625283241271973
    10. '=' → logprob: -11.625283241271973

Token 60: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.8126592193730175e-05
    2. '#' → logprob: -11.2500581741333
    3. '```' → logprob: -11.2500581741333
    4. '\' → logprob: -11.7500581741333
    5. '\n' → logprob: -12.1250581741333
    6. 'i' → logprob: -12.1250581741333
    7. '-' → logprob: -12.7500581741333
    8. ',' → logprob: -13.1250581741333
    9. '

' → logprob: -13.2500581741333
    10. '' → logprob: -14.2500581741333

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000546122610103339
    2. ',m' → logprob: -7.750545978546143
    3. ' ,' → logprob: -9.1255464553833
    4. ',n' → logprob: -12.8755464553833
    5. ',s' → logprob: -14.0005464553833
    6. 'm' → logprob: -14.0005464553833
    7. 's' → logprob: -15.0005464553833
    8. '=' → logprob: -15.2505464553833
    9. ' =' → logprob: -15.7505464553833
    10. ',int' → logprob: -15.8755464553833

Token 62: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5768944621086121
    2. 'm' → logprob: -0.8268944621086121
    3. ' ' → logprob: -7.326894283294678
    4. ' =' → logprob: -8.826894760131836
    5. '=' → logprob: -8.951894760131836
    6. '  ' → logprob: -12.201894760131836
    7. ' ' → logprob: -12.326894760131836
    8. '	m' → logprob: -13.326894760131836
    9. '<|end|>' → logprob: -13.576894760131836
    10. '   ' → logprob: -13.826894760131836

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201467826962471
    2. '=' → logprob: -1.7014678716659546
    3. ',' → logprob: -9.951467514038086
    4. '=input' → logprob: -12.451467514038086
    5. '=int' → logprob: -13.576467514038086
    6. ')' → logprob: -14.951467514038086
    7. 's' → logprob: -15.076467514038086
    8. ' ' → logprob: -15.701467514038086
    9. ' ' → logprob: -16.138967514038086
    10. '.' → logprob: -16.451467514038086

Token 64: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03366287425160408
    2. 'map' → logprob: -3.408662796020508
    3. ' input' → logprob: -11.658662796020508
    4. ' list' → logprob: -12.783662796020508
    5. 'input' → logprob: -12.783662796020508
    6. '	map' → logprob: -14.158662796020508
    7. ' ' → logprob: -14.783662796020508
    8. ' [' → logprob: -15.158662796020508
    9. ' ' → logprob: -15.158662796020508
    10. 'int' → logprob: -15.158662796020508

Token 65: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.31372594833374023
    2. '(' → logprob: -1.3137259483337402
    3. '(
' → logprob: -8.563726425170898
    4. '(str' → logprob: -8.688726425170898
    5. '(input' → logprob: -9.563726425170898
    6. '<int' → logprob: -11.688726425170898
    7. 'int' → logprob: -11.938726425170898
    8. '[int' → logprob: -12.063726425170898
    9. '(lambda' → logprob: -12.563726425170898
    10. '(list' → logprob: -12.813726425170898

Token 66: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0316949263215065
    2. 'input' → logprob: -3.7816948890686035
    3. '(' → logprob: -4.9066948890686035
    4. ')' → logprob: -7.6566948890686035
    5. ',input' → logprob: -8.281695365905762
    6. ' input' → logprob: -8.406695365905762
    7. ' (' → logprob: -10.281695365905762
    8. '=input' → logprob: -11.406695365905762
    9. '[input' → logprob: -11.781695365905762
    10. '<input' → logprob: -12.906695365905762

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889595627784729
    2. ' input' → logprob: -2.5788960456848145
    3. '(input' → logprob: -12.578895568847656
    4. ')' → logprob: -13.828895568847656
    5. '	input' → logprob: -14.703895568847656
    6. ' ' → logprob: -14.828895568847656
    7. '=input' → logprob: -14.953895568847656
    8. ',input' → logprob: -15.203895568847656
    9. '<input' → logprob: -15.328895568847656
    10. '   ' → logprob: -16.203895568847656

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003424850758165121
    2. '()' → logprob: -5.753424644470215
    3. '())' → logprob: -8.378424644470215
    4. ')' → logprob: -11.378424644470215
    5. ' ().' → logprob: -12.628424644470215
    6. '(' → logprob: -14.003424644470215
    7. '()).' → logprob: -14.378424644470215
    8. ' ()' → logprob: -15.253424644470215
    9. '('').' → logprob: -16.12842559814453
    10. '()`' → logprob: -16.37842559814453

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005235767923295498
    2. 'strip' → logprob: -5.25523567199707
    3. 'rstrip' → logprob: -13.63023567199707
    4. ' split' → logprob: -14.38023567199707
    5. 'spl' → logprob: -15.75523567199707
    6. 'read' → logprob: -17.13023567199707
    7. '(split' → logprob: -17.38023567199707
    8. 's' → logprob: -18.25523567199707
    9. ')' → logprob: -19.38023567199707
    10. ' strip' → logprob: -19.75523567199707

Token 70: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010593217797577381
    2. '()' → logprob: -5.260593414306641
    3. ')' → logprob: -5.760593414306641
    4. '()))' → logprob: -6.260593414306641
    5. '(' → logprob: -9.01059341430664
    6. '))' → logprob: -9.26059341430664
    7. '('' → logprob: -9.88559341430664
    8. ' ())' → logprob: -11.51059341430664
    9. '())
' → logprob: -13.26059341430664
    10. '());' → logprob: -14.38559341430664

Token 71: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7427396178245544
    2. 'for' → logprob: -1.3677396774291992
    3. '
' → logprob: -2.367739677429199
    4. '\n' → logprob: -2.992739677429199
    5. '[' → logprob: -3.617739677429199
    6. '#' → logprob: -3.617739677429199
    7. '' → logprob: -3.867739677429199
    8. '\' → logprob: -3.992739677429199
    9. ',' → logprob: -4.617739677429199
    10. ' for' → logprob: -5.742739677429199

Token 72: ' Cré' (ID: 109203)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.44012966752052307
    2. 'lists' → logprob: -1.9401296377182007
    3. ' n' → logprob: -2.1901297569274902
    4. 'n' → logprob: -2.9401297569274902
    5. ' listes' → logprob: -4.69012975692749
    6. 'list' → logprob: -5.44012975692749
    7. ' for' → logprob: -5.56512975692749
    8. 'range' → logprob: -5.56512975692749
    9. ' result' → logprob: -5.56512975692749
    10. 'result' → logprob: -5.81512975692749

Token 73: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.001002324279397726
    2. 'er' → logprob: -7.126002311706543
    3. '#' → logprob: -9.251002311706543
    4. 'a' → logprob: -10.376002311706543
    5. 'at' → logprob: -11.126002311706543
    6. 'paration' → logprob: -11.251002311706543
    7. 'al' → logprob: -12.251002311706543
    8. 'lation' → logprob: -12.626002311706543
    9. 'action' → logprob: -12.626002311706543
    10. 'd' → logprob: -12.751002311706543

Token 74: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22256910800933838
    2. '()' → logprob: -2.597568988800049
    3. '[]' → logprob: -3.222568988800049
    4. '[' → logprob: -3.722568988800049
    5. 's' → logprob: -4.222568988800049
    6. ' d' → logprob: -4.847568988800049
    7. '(n' → logprob: -5.097568988800049
    8. 'd' → logprob: -5.222568988800049
    9. 'n' → logprob: -5.347568988800049
    10. 'des' → logprob: -5.472568988800049

Token 75: ''une' (ID: 13337)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2414068579673767
    2. '[' → logprob: -2.7414069175720215
    3. 'a' → logprob: -2.8664069175720215
    4. 'e' → logprob: -3.4914069175720215
    5. ''une' → logprob: -4.3664069175720215
    6. 'une' → logprob: -4.6164069175720215
    7. ' []' → logprob: -4.8664069175720215
    8. 'es' → logprob: -4.8664069175720215
    9. '_' → logprob: -4.9914069175720215
    10. ''' → logprob: -5.3664069175720215

Token 76: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6276284456253052
    2. '[]' → logprob: -1.6276284456253052
    3. ' []' → logprob: -2.1276283264160156
    4. ' liste' → logprob: -2.5026283264160156
    5. '[' → logprob: -3.6276283264160156
    6. 'l' → logprob: -4.127628326416016
    7. '_' → logprob: -5.252628326416016
    8. 's' → logprob: -5.377628326416016
    9. 'list' → logprob: -5.502628326416016
    10. ' [' → logprob: -6.252628326416016

Token 77: ' appelée' (ID: 179130)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.1223243474960327
    2. '_list' → logprob: -1.9973243474960327
    3. '[' → logprob: -2.3723244667053223
    4. '[]' → logprob: -2.4973244667053223
    5. '_' → logprob: -2.6223244667053223
    6. 's' → logprob: -3.1223244667053223
    7. ' listes' → logprob: -3.1223244667053223
    8. 'lists' → logprob: -3.4973244667053223
    9. 'des' → logprob: -3.8723244667053223
    10. ' =' → logprob: -3.8723244667053223

Token 78: ' "' (ID: 392)
  Prédit: ' listes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.27159345149993896
    2. ' lists' → logprob: -1.771593451499939
    3. 'lists' → logprob: -3.8965935707092285
    4. ' data' → logprob: -4.7715935707092285
    5. 'list' → logprob: -4.7715935707092285
    6. ' list' → logprob: -5.0215935707092285
    7. ' liste' → logprob: -5.1465935707092285
    8. 'liste' → logprob: -5.5215935707092285
    9. ' result' → logprob: -6.0215935707092285
    10. ' lst' → logprob: -6.1465935707092285

Token 79: 'cake' (ID: 103487)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.6819021105766296
    2. 'list' → logprob: -1.5569021701812744
    3. ' listes' → logprob: -1.6819021701812744
    4. ' lists' → logprob: -3.1819021701812744
    5. 'liste' → logprob: -4.306901931762695
    6. 'data' → logprob: -4.306901931762695
    7. 'lst' → logprob: -5.181901931762695
    8. ' data' → logprob: -5.556901931762695
    9. '```' → logprob: -5.681901931762695
    10. 'l' → logprob: -5.806901931762695

Token 80: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014152578078210354
    2. '_lists' → logprob: -4.639152526855469
    3. '_s' → logprob: -6.139152526855469
    4. '_layers' → logprob: -7.139152526855469
    5. '_list' → logprob: -7.639152526855469
    6. '_' → logprob: -7.764152526855469
    7. '_l' → logprob: -8.889152526855469
    8. 'es' → logprob: -9.389152526855469
    9. 'lists' → logprob: -9.764152526855469
    10. '"' → logprob: -10.014152526855469

Token 81: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.458525151014328
    2. 's' → logprob: -1.5835251808166504
    3. '=[]' → logprob: -2.4585251808166504
    4. '[]' → logprob: -3.4585251808166504
    5. '=' → logprob: -3.9585251808166504
    6. 'cake' → logprob: -4.58352518081665
    7. '[' → logprob: -5.08352518081665
    8. 'cakes' → logprob: -6.08352518081665
    9. ' cake' → logprob: -6.83352518081665
    10. ' []' → logprob: -6.95852518081665

Token 82: ' va' (ID: 3423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1925854682922363
    2. ' =' → logprob: -1.3175854682922363
    3. '_cont' → logprob: -2.0675854682922363
    4. ' cont' → logprob: -2.8175854682922363
    5. '=' → logprob: -2.8175854682922363
    6. ' va' → logprob: -3.1925854682922363
    7. 'cont' → logprob: -3.3175854682922363
    8. '=[]' → logprob: -3.3175854682922363
    9. ' contient' → logprob: -3.5675854682922363
    10. '_' → logprob: -4.067585468292236

Token 83: ' conten' (ID: 23523)
  Prédit: ' accueillir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accueillir' → logprob: -1.0177321434020996
    2. ' conten' → logprob: -1.3927321434020996
    3. '[]' → logprob: -2.2677321434020996
    4. '=[]' → logprob: -2.3927321434020996
    5. ' stock' → logprob: -3.1427321434020996
    6. 'conten' → logprob: -3.3927321434020996
    7. ' recevoir' → logprob: -3.6427321434020996
    8. 's' → logprob: -3.7677321434020996
    9. ' []' → logprob: -4.0177321434021
    10. 'stock' → logprob: -4.3927321434021

Token 84: 'ir' (ID: 380)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6965017914772034
    2. 't' → logprob: -0.6965017914772034
    3. 'u' → logprob: -6.071501731872559
    4. 'er' → logprob: -8.321501731872559
    5. 'd' → logprob: -8.571501731872559
    6. '```' → logprob: -8.821501731872559
    7. 'ir' → logprob: -9.446501731872559
    8. '   ' → logprob: -9.821501731872559
    9. '`' → logprob: -10.196501731872559
    10. 'ter' → logprob: -10.696501731872559

Token 85: ' n' (ID: 297)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05183298513293266
    2. ' []' → logprob: -3.801832914352417
    3. '[' → logprob: -4.301833152770996
    4. '[n' → logprob: -4.926833152770996
    5. 's' → logprob: -5.801833152770996
    6. '=[]' → logprob: -6.176833152770996
    7. 'des' → logprob: -7.551833152770996
    8. 'n' → logprob: -8.051833152770996
    9. ' des' → logprob: -8.051833152770996
    10. '_' → logprob: -8.551833152770996

Token 86: ' éléments' (ID: 57375)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8975967168807983
    2. '_lists' → logprob: -1.1475967168807983
    3. ' =' → logprob: -2.647596836090088
    4. '_' → logprob: -2.772596836090088
    5. '[' → logprob: -3.272596836090088
    6. '[]' → logprob: -3.897596836090088
    7. '=[]' → logprob: -3.897596836090088
    8. '_s' → logprob: -4.147596836090088
    9. 'es' → logprob: -4.397596836090088
    10. '_list' → logprob: -5.272596836090088

Token 87: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40139779448509216
    2. '[' → logprob: -2.276397705078125
    3. '=' → logprob: -2.401397705078125
    4. '[]' → logprob: -3.151397705078125
    5. 'cake' → logprob: -3.401397705078125
    6. '=[]' → logprob: -3.901397705078125
    7. 's' → logprob: -3.901397705078125
    8. 'cakes' → logprob: -5.276397705078125
    9. '_' → logprob: -5.776397705078125
    10. '=[' → logprob: -6.276397705078125

Token 88: '#' (ID: 2)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.07669045776128769
    2. ' cake' → logprob: -3.201690435409546
    3. 'c' → logprob: -4.576690673828125
    4. '[' → logprob: -4.826690673828125
    5. 'cakes' → logprob: -4.826690673828125
    6. '[]' → logprob: -5.826690673828125
    7. ' =' → logprob: -6.701690673828125
    8. 's' → logprob: -7.826690673828125
    9. '_c' → logprob: -8.076690673828125
    10. ' ' → logprob: -8.201690673828125

Token 89: ' Chaque' (ID: 94758)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.07982774823904037
    2. ' cake' → logprob: -2.5798277854919434
    3. 'c' → logprob: -7.829827785491943
    4. 'cakes' → logprob: -8.079827308654785
    5. 'cak' → logprob: -8.704827308654785
    6. '[' → logprob: -10.829827308654785
    7. 'ca' → logprob: -11.329827308654785
    8. '[]' → logprob: -11.329827308654785
    9. ' cak' → logprob: -12.204827308654785
    10. ' cakes' → logprob: -12.704827308654785

Token 90: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4527267217636108
    2. ' []' → logprob: -1.8277267217636108
    3. '_' → logprob: -2.3277268409729004
    4. ' élément' → logprob: -2.3277268409729004
    5. ' cake' → logprob: -2.4527268409729004
    6. ' [' → logprob: -2.5777268409729004
    7. '[' → logprob: -2.7027268409729004
    8. ' _' → logprob: -2.8277268409729004
    9. 'cake' → logprob: -3.8277268409729004
    10. ' =' → logprob: -3.9527268409729004

Token 91: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3269253373146057
    2. '_' → logprob: -2.076925277709961
    3. '=' → logprob: -2.451925277709961
    4. ' ' → logprob: -3.326925277709961
    5. '[' → logprob: -5.201925277709961
    6. '[]' → logprob: -5.326925277709961
    7. ' est' → logprob: -5.451925277709961
    8. ' de' → logprob: -5.951925277709961
    9. ' []' → logprob: -6.326925277709961
    10. '=[]' → logprob: -6.576925277709961

Token 92: ' cette' (ID: 7696)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7669440507888794
    2. ' cake' → logprob: -1.5169440507888794
    3. 'range' → logprob: -1.7669440507888794
    4. 'cake' → logprob: -2.76694393157959
    5. '[' → logprob: -3.39194393157959
    6. ' [' → logprob: -3.89194393157959
    7. '[]' → logprob: -5.39194393157959
    8. ' ' → logprob: -5.51694393157959
    9. ' la' → logprob: -5.76694393157959
    10. '['' → logprob: -5.76694393157959

Token 93: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9275174736976624
    2. ' range' → logprob: -2.0525174140930176
    3. ' liste' → logprob: -2.3025174140930176
    4. '[' → logprob: -2.4275174140930176
    5. 'range' → logprob: -2.8025174140930176
    6. ' cake' → logprob: -3.4275174140930176
    7. '_' → logprob: -3.6775174140930176
    8. 'liste' → logprob: -4.177517414093018
    9. '"' → logprob: -4.427517414093018
    10. ' list' → logprob: -4.427517414093018

Token 94: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7250564098358154
    2. ' ' → logprob: -0.9750564098358154
    3. '=' → logprob: -3.1000564098358154
    4. '[' → logprob: -3.4750564098358154
    5. '_' → logprob: -4.2250566482543945
    6. '[]' → logprob: -4.8500566482543945
    7. ',' → logprob: -4.9750566482543945
    8. ' est' → logprob: -5.2250566482543945
    9. 's' → logprob: -5.3500566482543945
    10. '.append' → logprob: -5.4750566482543945

Token 95: ' lui' (ID: 10623)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8448701500892639
    2. '[]' → logprob: -0.9698701500892639
    3. ' une' → logprob: -1.8448700904846191
    4. '[' → logprob: -4.219870090484619
    5. ' [' → logprob: -4.469870090484619
    6. '=[]' → logprob: -6.469870090484619
    7. 'une' → logprob: -6.594870090484619
    8. ',' → logprob: -6.969870090484619
    9. ' [
' → logprob: -7.219870090484619
    10. 'a' → logprob: -7.969870090484619

Token 96: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.1182672455906868
    2. '-' → logprob: -2.243267297744751
    3. '=' → logprob: -5.993267059326172
    4. '-m' → logprob: -7.368267059326172
    5. '-mêmes' → logprob: -7.368267059326172
    6. '#' → logprob: -7.868267059326172
    7. 'm' → logprob: -8.118267059326172
    8. '[' → logprob: -8.243267059326172
    9. '[]' → logprob: -8.743267059326172
    10. 'a' → logprob: -8.868267059326172

Token 97: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.497089147567749
    2. ' une' → logprob: -1.247089147567749
    3. ' []' → logprob: -2.622089147567749
    4. '[' → logprob: -4.247089385986328
    5. 'une' → logprob: -4.247089385986328
    6. ' [' → logprob: -6.872089385986328
    7. '=[]' → logprob: -7.747089385986328
    8. 'a' → logprob: -7.997089385986328
    9. ''une' → logprob: -8.247089385986328
    10. ' un' → logprob: -8.622089385986328

Token 98: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.08926354348659515
    2. 'liste' → logprob: -2.589263439178467
    3. ' []' → logprob: -5.464263439178467
    4. 'list' → logprob: -6.214263439178467
    5. ' list' → logprob: -6.464263439178467
    6. '[]' → logprob: -7.089263439178467
    7. ' [' → logprob: -7.464263439178467
    8. ' ' → logprob: -7.839263439178467
    9. '[' → logprob: -7.964263439178467
    10. 'l' → logprob: -9.089263916015625

Token 99: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12116944789886475
    2. '[]' → logprob: -2.3711695671081543
    3. ',' → logprob: -4.996169567108154
    4. '[
' → logprob: -5.621169567108154
    5. '[:]' → logprob: -5.996169567108154
    6. ' [' → logprob: -6.746169567108154
    7. ' []' → logprob: -6.746169567108154
    8. '[n' → logprob: -6.871169567108154
    9. '=[]' → logprob: -7.246169567108154
    10. '.append' → logprob: -7.246169567108154

Token 100: ' trois' (ID: 25564)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6515616774559021
    2. 'int' → logprob: -1.6515617370605469
    3. 'm' → logprob: -1.9015617370605469
    4. 'ent' → logprob: -3.026561737060547
    5. 'inte' → logprob: -3.776561737060547
    6. '[n' → logprob: -4.401561737060547
    7. '[int' → logprob: -4.401561737060547
    8. ' n' → logprob: -4.651561737060547
    9. '[]' → logprob: -5.151561737060547
    10. 'ints' → logprob: -5.151561737060547

Token 101: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.24894438683986664
    2. ' éléments' → logprob: -1.8739444017410278
    3. '_' → logprob: -3.3739442825317383
    4. ' ' → logprob: -4.248944282531738
    5. '[' → logprob: -5.498944282531738
    6. ' espaces' → logprob: -5.998944282531738
    7. 'ent' → logprob: -6.373944282531738
    8. ' _' → logprob: -6.873944282531738
    9. ' ent' → logprob: -7.248944282531738
    10. ' [' → logprob: -7.248944282531738

Token 102: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.1239975690841675
    2. 't' → logprob: -1.2489975690841675
    3. 'ières' → logprob: -1.9989975690841675
    4. 'ères' → logprob: -2.373997688293457
    5. 'er' → logprob: -3.123997688293457
    6. 'êtes' → logprob: -3.873997688293457
    7. 'r' → logprob: -3.998997688293457
    8. 'è' → logprob: -4.123997688293457
    9. 'ers' → logprob: -4.498997688293457
    10. '```' → logprob: -4.623997688293457

Token 103: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6132870316505432
    2. 's' → logprob: -1.6132869720458984
    3. ',' → logprob: -1.8632869720458984
    4. '[]' → logprob: -2.7382869720458984
    5. '[
' → logprob: -4.488286972045898
    6. '.' → logprob: -4.613286972045898
    7. '[n' → logprob: -5.738286972045898
    8. '[:]' → logprob: -5.863286972045898
    9. '.append' → logprob: -6.738286972045898
    10. '(' → logprob: -6.738286972045898

Token 104: ' obten' (ID: 28150)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9946185946464539
    2. '[]' → logprob: -0.9946185946464539
    3. ' []' → logprob: -2.1196186542510986
    4. ' [' → logprob: -2.2446186542510986
    5. ' [
' → logprob: -4.8696184158325195
    6. 'cake' → logprob: -5.2446184158325195
    7. '[
' → logprob: -5.4946184158325195
    8. ' cake' → logprob: -5.6196184158325195
    9. '[n' → logprob: -5.8696184158325195
    10. 'n' → logprob: -6.1196184158325195

Token 105: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5018147826194763
    2. 'us' → logprob: -1.501814842224121
    3. 'ue' → logprob: -1.876814842224121
    4. 'ues' → logprob: -4.251814842224121
    5. 'ant' → logprob: -6.126814842224121
    6. '```' → logprob: -7.126814842224121
    7. 'is' → logprob: -7.751814842224121
    8. 'a' → logprob: -8.876814842224121
    9. 'e' → logprob: -9.001814842224121
    10. 'ient' → logprob: -9.126814842224121

Token 106: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6122547388076782
    2. '(' → logprob: -1.3622547388076782
    3. ')' → logprob: -2.7372546195983887
    4. ' à' → logprob: -3.9872546195983887
    5. '(
' → logprob: -4.112254619598389
    6. ',' → logprob: -4.112254619598389
    7. '<|end|>' → logprob: -4.487254619598389
    8. ' ' → logprob: -4.862254619598389
    9. 'from' → logprob: -5.362254619598389
    10. ' (' → logprob: -5.362254619598389

Token 107: ' lis' (ID: 20784)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13687516748905182
    2. '[n' → logprob: -2.2618751525878906
    3. ' [' → logprob: -4.261875152587891
    4. '[int' → logprob: -6.136875152587891
    5. '[
' → logprob: -6.386875152587891
    6. 'for' → logprob: -7.011875152587891
    7. 'range' → logprob: -7.511875152587891
    8. '[]' → logprob: -7.636875152587891
    9. '[num' → logprob: -7.636875152587891
    10. '[input' → logprob: -7.636875152587891

Token 108: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.24049194157123566
    2. 'st' → logprob: -2.9904918670654297
    3. 't' → logprob: -3.4904918670654297
    4. 'stant' → logprob: -3.6154918670654297
    5. 'nt' → logprob: -3.7404918670654297
    6. 'tant' → logprob: -3.7404918670654297
    7. 'vant' → logprob: -3.9904918670654297
    8. 'a' → logprob: -4.74049186706543
    9. 'nant' → logprob: -5.11549186706543
    10. 'quant' → logprob: -5.74049186706543

Token 109: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41620945930480957
    2. 'n' → logprob: -1.2912094593048096
    3. '(n' → logprob: -3.0412094593048096
    4. '(' → logprob: -5.5412092208862305
    5. '[n' → logprob: -5.5412092208862305
    6. ' n' → logprob: -5.7912092208862305
    7. ')' → logprob: -6.5412092208862305
    8. '(
' → logprob: -6.9162092208862305
    9. '
' → logprob: -7.0412092208862305
    10. '[' → logprob: -7.1662092208862305

Token 110: ' ligne' (ID: 19583)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7059129476547241
    2. 'for' → logprob: -1.2059129476547241
    3. '()' → logprob: -3.0809130668640137
    4. ' ' → logprob: -3.2059130668640137
    5. ' for' → logprob: -3.7059130668640137
    6. 'n' → logprob: -4.080913066864014
    7. ' ligne' → logprob: -4.705913066864014
    8. 'entrée' → logprob: -4.830913066864014
    9. ' )' → logprob: -5.330913066864014
    10. '  
' → logprob: -5.580913066864014

Token 111: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19683299958705902
    2. ' for' → logprob: -3.0718328952789307
    3. ' suivante' → logprob: -3.4468328952789307
    4. 'n' → logprob: -3.8218328952789307
    5. '[' → logprob: -4.32183313369751
    6. ')' → logprob: -4.44683313369751
    7. ' de' → logprob: -5.32183313369751
    8. ' pour' → logprob: -5.32183313369751
    9. 'pour' → logprob: -5.57183313369751
    10. ' ' → logprob: -5.57183313369751

Token 112: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11402099579572678
    2. ' code' → logprob: -3.364021062850952
    3. 'input' → logprob: -3.364021062850952
    4. 'n' → logprob: -4.739020824432373
    5. 's' → logprob: -5.239020824432373
    6. ' ' → logprob: -5.364020824432373
    7. ' l' → logprob: -5.614020824432373
    8. 'code' → logprob: -5.739020824432373
    9. 'entrée' → logprob: -5.864020824432373
    10. 'l' → logprob: -5.989020824432373

Token 113: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.624180018901825
    2. 'entrée' → logprob: -0.874180018901825
    3. 'input' → logprob: -3.3741800785064697
    4. ''ent' → logprob: -5.874179840087891
    5. 'n' → logprob: -5.999179840087891
    6. '#' → logprob: -6.624179840087891
    7. ''' → logprob: -6.874179840087891
    8. 'a' → logprob: -7.124179840087891
    9. 'e' → logprob: -7.499179840087891
    10. '')' → logprob: -7.874179840087891

Token 114: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5488836765289307
    2. ')' → logprob: -1.2988836765289307
    3. ' standard' → logprob: -3.2988836765289307
    4. '()
' → logprob: -3.5488836765289307
    5. 'for' → logprob: -3.6738836765289307
    6. 'standard' → logprob: -3.6738836765289307
    7. '().' → logprob: -4.423883438110352
    8. 'n' → logprob: -5.798883438110352
    9. '())' → logprob: -6.298883438110352
    10. '.' → logprob: -6.298883438110352

Token 115: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4060284197330475
    2. 'for' → logprob: -1.656028389930725
    3. '[
' → logprob: -2.5310285091400146
    4. '[' → logprob: -3.0310285091400146
    5. '[n' → logprob: -5.0310282707214355
    6. ' for' → logprob: -5.7810282707214355
    7. '
' → logprob: -7.0310282707214355
    8. '[c' → logprob: -7.1560282707214355
    9. ' 
' → logprob: -7.5310282707214355
    10. 'cake' → logprob: -7.6560282707214355

Token 116: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7550150752067566
    2. '[' → logprob: -1.2550151348114014
    3. ' for' → logprob: -2.3800151348114014
    4. 'n' → logprob: -3.1300151348114014
    5. '[
' → logprob: -3.7550151348114014
    6. '[n' → logprob: -3.8800151348114014
    7. ' [' → logprob: -4.130014896392822
    8. '[]' → logprob: -5.005014896392822
    9. '
' → logprob: -5.255014896392822
    10. ' [
' → logprob: -5.755014896392822

Token 117: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09574832022190094
    2. ' for' → logprob: -2.4707484245300293
    3. '[' → logprob: -5.845748424530029
    4. ' pour' → logprob: -6.970748424530029
    5. '[
' → logprob: -7.970748424530029
    6. 'cake' → logprob: -8.095747947692871
    7. 'pour' → logprob: -8.095747947692871
    8. ' cake' → logprob: -8.470747947692871
    9. ' puis' → logprob: -8.470747947692871
    10. 'n' → logprob: -8.845747947692871

Token 118: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6354947090148926
    2. ' range' → logprob: -1.5104947090148926
    3. ' for' → logprob: -2.0104947090148926
    4. 'range' → logprob: -3.1354947090148926
    5. 'com' → logprob: -3.3854947090148926
    6. ' utilisant' → logprob: -4.885494709014893
    7. '[' → logprob: -5.010494709014893
    8. ' a' → logprob: -5.635494709014893
    9. ' suivant' → logprob: -5.635494709014893
    10. ' [' → logprob: -5.885494709014893

Token 119: ' déc' (ID: 8498)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6014729738235474
    2. ' for' → logprob: -1.2264729738235474
    3. 'split' → logprob: -2.226472854614258
    4. 'com' → logprob: -4.101472854614258
    5. 'spl' → logprob: -4.976472854614258
    6. '.split' → logprob: -5.226472854614258
    7. ')' → logprob: -5.226472854614258
    8. 'compr' → logprob: -5.726472854614258
    9. 'range' → logprob: -6.226472854614258
    10. ' split' → logprob: -6.226472854614258

Token 120: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.005620635114610195
    2. 'ou' → logprob: -5.63062047958374
    3. 'omp' → logprob: -6.75562047958374
    4. 'up' → logprob: -7.75562047958374
    5. 'oupe' → logprob: -8.755620956420898
    6. 'om' → logprob: -9.755620956420898
    7. 'od' → logprob: -10.255620956420898
    8. 'ont' → logprob: -10.505620956420898
    9. '```' → logprob: -10.505620956420898
    10. 'ouvr' → logprob: -11.255620956420898

Token 121: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.008367054164409637
    2. 'e' → logprob: -5.75836706161499
    3. 'ée' → logprob: -5.75836706161499
    4. 'é' → logprob: -6.63336706161499
    5. 'a' → logprob: -8.008366584777832
    6. 'er' → logprob: -8.258366584777832
    7. '#' → logprob: -10.383366584777832
    8. ' ant' → logprob: -11.258366584777832
    9. 'an' → logprob: -11.758366584777832
    10. '```' → logprob: -11.883366584777832

Token 122: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.977446436882019
    2. '()' → logprob: -1.602446436882019
    3. ' en' → logprob: -1.852446436882019
    4. ' )' → logprob: -2.6024465560913086
    5. ' ' → logprob: -2.7274465560913086
    6. ' par' → logprob: -3.3524465560913086
    7. ',' → logprob: -3.8524465560913086
    8. '[' → logprob: -4.227446556091309
    9. '.' → logprob: -4.727446556091309
    10. ' sur' → logprob: -5.102446556091309

Token 123: ' split' (ID: 12648)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42685508728027344
    2. ' input' → logprob: -1.3018550872802734
    3. 'split' → logprob: -2.6768550872802734
    4. ' split' → logprob: -5.801855087280273
    5. ' l' → logprob: -6.801855087280273
    6. 'l' → logprob: -6.926855087280273
    7. 'map' → logprob: -7.801855087280273
    8. '.split' → logprob: -8.551855087280273
    9. ' map' → logprob: -8.676855087280273
    10. '=input' → logprob: -8.926855087280273

Token 124: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013299050740897655
    2. '(' → logprob: -5.513298988342285
    3. '('' → logprob: -5.638298988342285
    4. '().' → logprob: -5.888298988342285
    5. '("("' → logprob: -6.638298988342285
    6. '(),' → logprob: -7.638298988342285
    7. '()[' → logprob: -7.888298988342285
    8. '()
' → logprob: -9.013298988342285
    9. '())' → logprob: -9.138298988342285
    10. '("' → logprob: -9.388298988342285

Token 125: ' en' (ID: 469)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.024265259504318237
    2. ' et' → logprob: -4.774265289306641
    3. ' map' → logprob: -5.399265289306641
    4. ' and' → logprob: -5.649265289306641
    5. ')' → logprob: -6.149265289306641
    6. 'map' → logprob: -6.524265289306641
    7. 'et' → logprob: -6.774265289306641
    8. ',' → logprob: -7.399265289306641
    9. '()' → logprob: -8.27426528930664
    10. ' then' → logprob: -8.39926528930664

Token 126: ' convert' (ID: 8452)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.632373034954071
    2. 'map' → logprob: -1.1323730945587158
    3. ' utilisant' → logprob: -3.007373094558716
    4. ' convert' → logprob: -3.632373094558716
    5. ' prenant' → logprob: -3.757373094558716
    6. ' les' → logprob: -4.757372856140137
    7. 'convert' → logprob: -5.007372856140137
    8. ' appli' → logprob: -5.132372856140137
    9. ' passant' → logprob: -5.257372856140137
    10. '[' → logprob: -6.257372856140137

Token 127: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.005884591024369001
    2. 'isant' → logprob: -6.005884647369385
    3. 'is' → logprob: -7.005884647369385
    4. 'i' → logprob: -7.380884647369385
    5. '()' → logprob: -7.630884647369385
    6. ')' → logprob: -7.880884647369385
    7. 't' → logprob: -8.380884170532227
    8. 'issent' → logprob: -9.130884170532227
    9. '```' → logprob: -9.255884170532227
    10. 'ir' → logprob: -9.380884170532227

Token 128: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35760587453842163
    2. ' chaque' → logprob: -1.6076059341430664
    3. ' les' → logprob: -3.2326059341430664
    4. '()' → logprob: -3.7326059341430664
    5. '(int' → logprob: -4.482605934143066
    6. ' chacun' → logprob: -5.107605934143066
    7. '(
' → logprob: -5.857605934143066
    8. 'each' → logprob: -5.982605934143066
    9. ')' → logprob: -6.107605934143066
    10. ' chacune' → logprob: -6.607605934143066

Token 129: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4704270362854004
    2. 'int' → logprob: -1.0954270362854004
    3. '()' → logprob: -4.9704270362854
    4. '(' → logprob: -4.9704270362854
    5. 'element' → logprob: -5.0954270362854
    6. 'part' → logprob: -5.4704270362854
    7. 'token' → logprob: -5.8454270362854
    8. ' élément' → logprob: -5.8454270362854
    9. 'ent' → logprob: -6.2204270362854
    10. '(int' → logprob: -6.5954270362854

Token 130: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0689430832862854
    2. '(' → logprob: -3.4439430236816406
    3. 'en' → logprob: -3.9439430236816406
    4. ')' → logprob: -4.818943023681641
    5. '(int' → logprob: -5.443943023681641
    6. 'int' → logprob: -7.318943023681641
    7. '()' → logprob: -7.443943023681641
    8. ' ' → logprob: -7.568943023681641
    9. 's' → logprob: -8.31894302368164
    10. ',' → logprob: -8.31894302368164

Token 131: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2262611985206604
    2. ' int' → logprob: -1.6012611389160156
    3. 'ent' → logprob: -7.226261138916016
    4. ' ent' → logprob: -10.601261138916016
    5. ' entier' → logprob: -11.101261138916016
    6. ' un' → logprob: -11.351261138916016
    7. 'ints' → logprob: -11.351261138916016
    8. '<int' → logprob: -11.601261138916016
    9. '=int' → logprob: -11.726261138916016
    10. 'inte' → logprob: -11.726261138916016

Token 132: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.65342777967453
    2. ')' → logprob: -1.1534278392791748
    3. ',' → logprob: -2.403427839279175
    4. '()' → logprob: -3.653427839279175
    5. '(
' → logprob: -4.028427600860596
    6. 's' → logprob: -4.153427600860596
    7. '[' → logprob: -4.778427600860596
    8. '.' → logprob: -7.278427600860596
    9. ' )' → logprob: -7.653427600860596
    10. '   ' → logprob: -7.653427600860596

Token 133: 'map' (ID: 3726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26117631793022156
    2. '),' → logprob: -1.511176347732544
    3. ' )' → logprob: -6.261176109313965
    4. ',' → logprob: -6.511176109313965
    5. ' ),' → logprob: -6.761176109313965
    6. '()' → logprob: -6.886176109313965
    7. '   ' → logprob: -7.261176109313965
    8. 'n' → logprob: -7.511176109313965
    9. 'map' → logprob: -7.886176109313965
    10. '(' → logprob: -7.886176109313965

Token 134: '(int' (ID: 2742)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3667072355747223
    2. '(int' → logprob: -1.7417072057724
    3. '),' → logprob: -2.1167073249816895
    4. ',' → logprob: -5.7417073249816895
    5. ',int' → logprob: -5.8667073249816895
    6. '=int' → logprob: -6.4917073249816895
    7. '))' → logprob: -6.4917073249816895
    8. 'int' → logprob: -7.3667073249816895
    9. '<int' → logprob: -7.3667073249816895
    10. ')),' → logprob: -7.7417073249816895

Token 135: ',' (ID: 11)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.4917899966239929
    2. '))' → logprob: -1.1167900562286377
    3. '),' → logprob: -3.2417900562286377
    4. ')' → logprob: -3.9917900562286377
    5. ',' → logprob: -6.116789817810059
    6. '))),' → logprob: -7.116789817810059
    7. ')))' → logprob: -8.116789817810059
    8. ')),
' → logprob: -9.866789817810059
    9. '(' → logprob: -10.741789817810059
    10. '()' → logprob: -10.866789817810059

Token 136: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7532209753990173
    2. ' input' → logprob: -1.378221035003662
    3. ')' → logprob: -2.003221035003662
    4. ' ' → logprob: -2.878221035003662
    5. '))' → logprob: -3.128221035003662
    6. ')))' → logprob: -4.878221035003662
    7. ' ))' → logprob: -5.003221035003662
    8. ')),' → logprob: -5.003221035003662
    9. ' )' → logprob: -5.253221035003662
    10. '```' → logprob: -5.878221035003662

Token 137: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1680794060230255
    2. ')),' → logprob: -2.418079376220703
    3. ')' → logprob: -2.793079376220703
    4. ')))' → logprob: -5.918079376220703
    5. '),' → logprob: -7.168079376220703
    6. '))),' → logprob: -7.918079376220703
    7. '))
' → logprob: -8.918079376220703
    8. ',' → logprob: -9.668079376220703
    9. '()' → logprob: -9.793079376220703
    10. ' ' → logprob: -9.793079376220703

Token 138: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.775903046131134
    2. ' puis' → logprob: -1.5259029865264893
    3. '[' → logprob: -1.7759029865264893
    4. ' and' → logprob: -3.4009029865264893
    5. ' [' → logprob: -3.5259029865264893
    6. 'list' → logprob: -3.9009029865264893
    7. ' et' → logprob: -4.775903224945068
    8. '[]' → logprob: -4.900903224945068
    9. ' n' → logprob: -4.900903224945068
    10. 'n' → logprob: -5.150903224945068

Token 139: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1759258210659027
    2. 'en' → logprob: -2.3009257316589355
    3. 'list' → logprob: -3.3009257316589355
    4. 'convert' → logprob: -5.3009257316589355
    5. 'transform' → logprob: -5.3009257316589355
    6. ' stock' → logprob: -5.4259257316589355
    7. ' list' → logprob: -6.1759257316589355
    8. 'aj' → logprob: -6.3009257316589355
    9. 'stock' → logprob: -6.6759257316589355
    10. 'append' → logprob: -7.0509257316589355

Token 140: ' fabri' (ID: 73434)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12989367544651031
    2. 'append' → logprob: -3.1298937797546387
    3. '[' → logprob: -3.7548937797546387
    4. ' list' → logprob: -4.004893779754639
    5. 'app' → logprob: -4.004893779754639
    6. 'aj' → logprob: -6.004893779754639
    7. '```' → logprob: -6.254893779754639
    8. 'appel' → logprob: -6.504893779754639
    9. 'collect' → logprob: -6.504893779754639
    10. ' append' → logprob: -6.629893779754639

Token 141: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.03723197802901268
    2. 'cant' → logprob: -4.412231922149658
    3. '#' → logprob: -4.912231922149658
    4. 'q' → logprob: -5.037231922149658
    5. 'qu' → logprob: -5.912231922149658
    6. 'ant' → logprob: -6.037231922149658
    7. 's' → logprob: -7.037231922149658
    8. '```' → logprob: -7.287231922149658
    9. 'rant' → logprob: -7.412231922149658
    10. 'quer' → logprob: -7.537231922149658

Token 142: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05726258084177971
    2. '[' → logprob: -3.057262659072876
    3. 'une' → logprob: -5.932262420654297
    4. ' list' → logprob: -6.807262420654297
    5. 'liste' → logprob: -6.807262420654297
    6. ')' → logprob: -6.932262420654297
    7. '[list' → logprob: -7.307262420654297
    8. 'la' → logprob: -7.307262420654297
    9. ' une' → logprob: -7.807262420654297
    10. 'l' → logprob: -8.182262420654297

Token 143: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5765488147735596
    2. 'liste' → logprob: -0.8265488147735596
    3. ' liste' → logprob: -7.9515485763549805
    4. '[' → logprob: -8.82654857635498
    5. ' list' → logprob: -10.32654857635498
    6. '[list' → logprob: -10.95154857635498
    7. '```' → logprob: -11.32654857635498
    8. 'l' → logprob: -11.57654857635498
    9. '[]' → logprob: -11.70154857635498
    10. 'lista' → logprob: -12.20154857635498

Token 144: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4716581702232361
    2. '([' → logprob: -1.5966582298278809
    3. '(' → logprob: -2.221658229827881
    4. '(
' → logprob: -3.846658229827881
    5. '[n' → logprob: -3.971658229827881
    6. '([
' → logprob: -5.471658229827881
    7. '[int' → logprob: -5.596658229827881
    8. '[
' → logprob: -5.846658229827881
    9. '()' → logprob: -5.971658229827881
    10. '```' → logprob: -6.096658229827881

Token 145: 'cake' (ID: 103487)
  Prédit: 'cake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.0005542247672565281
    2. ' cake' → logprob: -7.750554084777832
    3. 'c' → logprob: -10.125554084777832
    4. 'cakes' → logprob: -10.875554084777832
    5. '[
' → logprob: -11.000554084777832
    6. '[c' → logprob: -11.000554084777832
    7. '[' → logprob: -11.125554084777832
    8. '
' → logprob: -11.625554084777832
    9. '[]
' → logprob: -13.250554084777832
    10. 'for' → logprob: -13.500554084777832

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018476616591215134
    2. '=' → logprob: -4.018476486206055
    3. 's' → logprob: -9.018476486206055
    4. '=[]' → logprob: -9.643476486206055
    5. '.append' → logprob: -9.768476486206055
    6. '[]' → logprob: -10.643476486206055
    7. ' =[' → logprob: -10.893476486206055
    8. '[' → logprob: -11.268476486206055
    9. '[:]' → logprob: -11.268476486206055
    10. '=[' → logprob: -12.518476486206055

Token 147: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02319585718214512
    2. '[c' → logprob: -4.023195743560791
    3. ' [' → logprob: -6.023195743560791
    4. '[n' → logprob: -6.273195743560791
    5. '[list' → logprob: -7.523195743560791
    6. '[int' → logprob: -9.39819622039795
    7. '[np' → logprob: -10.39819622039795
    8. '[input' → logprob: -10.89819622039795
    9. '[List' → logprob: -11.52319622039795
    10. '[array' → logprob: -12.14819622039795

Token 148: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.742448022123426e-05
    2. '[list' → logprob: -10.000067710876465
    3. ' list' → logprob: -11.125067710876465
    4. 'map' → logprob: -12.000067710876465
    5. '[' → logprob: -14.375067710876465
    6. '(list' → logprob: -15.375067710876465
    7. '	list' → logprob: -16.37506675720215
    8. 'int' → logprob: -17.25006675720215
    9. '```' → logprob: -17.25006675720215
    10. '=list' → logprob: -17.37506675720215

Token 149: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -10.625025749206543
    3. 'map' → logprob: -14.750025749206543
    4. '(m' → logprob: -15.500025749206543
    5. '(int' → logprob: -15.750025749206543
    6. '(
' → logprob: -16.750024795532227
    7. '(ma' → logprob: -16.875024795532227
    8. ',map' → logprob: -17.000024795532227
    9. '	map' → logprob: -17.875024795532227
    10. ' (' → logprob: -18.625024795532227

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004013934172689915
    2. '(' → logprob: -6.129014015197754
    3. '<int' → logprob: -7.129014015197754
    4. 'int' → logprob: -7.754014015197754
    5. ']int' → logprob: -8.004014015197754
    6. ',int' → logprob: -9.254014015197754
    7. '<|end|>' → logprob: -9.504014015197754
    8. '=int' → logprob: -10.629014015197754
    9. '[int' → logprob: -10.754014015197754
    10. '(
' → logprob: -11.129014015197754

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38693830370903015
    2. ',input' → logprob: -1.1369383335113525
    3. '(input' → logprob: -10.261938095092773
    4. ' ,' → logprob: -11.011938095092773
    5. 'input' → logprob: -11.261938095092773
    6. '(),' → logprob: -13.886938095092773
    7. '(' → logprob: -14.261938095092773
    8. ',int' → logprob: -15.261938095092773
    9. '```' → logprob: -15.761938095092773
    10. ',line' → logprob: -15.761938095092773

Token 152: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002228287048637867
    2. ' input' → logprob: -6.127228260040283
    3. '(input' → logprob: -10.377228736877441
    4. ',input' → logprob: -12.252228736877441
    5. ')' → logprob: -12.377228736877441
    6. '=input' → logprob: -13.877228736877441
    7. '
' → logprob: -14.627228736877441
    8. '	input' → logprob: -14.752228736877441
    9. '<input' → logprob: -14.752228736877441
    10. ' ' → logprob: -15.377228736877441

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008339279447682202
    2. '()' → logprob: -7.125833988189697
    3. ' ().' → logprob: -10.875833511352539
    4. '.' → logprob: -12.500833511352539
    5. '()
' → logprob: -12.875833511352539
    6. ')' → logprob: -12.875833511352539
    7. '(' → logprob: -14.625833511352539
    8. ' ()' → logprob: -14.875833511352539
    9. ' .' → logprob: -15.625833511352539
    10. '()))' → logprob: -15.750833511352539

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. ')' → logprob: -13.500003814697266
    3. ' split' → logprob: -13.750003814697266
    4. 'strip' → logprob: -14.375003814697266
    5. 'spl' → logprob: -15.375003814697266
    6. '(split' → logprob: -16.125003814697266
    7. 'rstrip' → logprob: -16.750003814697266
    8. 'plit' → logprob: -17.125003814697266
    9. 's' → logprob: -17.250003814697266
    10. '.split' → logprob: -18.750003814697266

Token 155: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002449138555675745
    2. '()' → logprob: -6.252449035644531
    3. '))' → logprob: -7.877449035644531
    4. '())' → logprob: -9.502449035644531
    5. '()))
' → logprob: -10.627449035644531
    6. '(' → logprob: -10.752449035644531
    7. '())))' → logprob: -11.252449035644531
    8. '()));' → logprob: -12.502449035644531
    9. '()
' → logprob: -13.627449035644531
    10. '())).' → logprob: -13.627449035644531

Token 156: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04546855017542839
    2. '())' → logprob: -3.29546856880188
    3. ')' → logprob: -4.920468330383301
    4. '(' → logprob: -9.6704683303833
    5. 'for' → logprob: -10.2954683303833
    6. '()]' → logprob: -13.1704683303833
    7. ' ()' → logprob: -13.5454683303833
    8. '(n' → logprob: -13.7954683303833
    9. '()
' → logprob: -14.6704683303833
    10. ' )' → logprob: -14.6704683303833

Token 157: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5678260922431946
    2. ' range' → logprob: -1.4428260326385498
    3. ' ' → logprob: -1.6928260326385498
    4. '_' → logprob: -4.442826271057129
    5. 'range' → logprob: -7.067826271057129
    6. ' i' → logprob: -8.567826271057129
    7. '(range' → logprob: -10.192826271057129
    8. '_range' → logprob: -10.317826271057129
    9. ' in' → logprob: -10.442826271057129
    10. ' ▁' → logprob: -10.567826271057129

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005349028389900923
    2. 'in' → logprob: -5.255349159240723
    3. ' ' → logprob: -10.380349159240723
    4. ' _' → logprob: -10.755349159240723
    5. 'range' → logprob: -10.755349159240723
    6. '_' → logprob: -11.255349159240723
    7. 'n' → logprob: -11.630349159240723
    8. ' i' → logprob: -11.880349159240723
    9. ' n' → logprob: -12.630349159240723
    10. ' range' → logprob: -13.005349159240723

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740777015686035
    2. ' range' → logprob: -0.9740777015686035
    3. '	range' → logprob: -15.349077224731445
    4. '(range' → logprob: -15.974077224731445
    5. 'rang' → logprob: -15.974077224731445
    6. ' ran' → logprob: -16.599077224731445
    7. 'n' → logprob: -16.849077224731445
    8. 'ran' → logprob: -17.099077224731445
    9. ' xrange' → logprob: -17.599077224731445
    10. ' ' → logprob: -17.849077224731445

Token 160: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043126524542458355
    2. '(' → logprob: -7.750431060791016
    3. 'n' → logprob: -15.000431060791016
    4. '(
' → logprob: -15.875431060791016
    5. ' (' → logprob: -16.750431060791016
    6. ' n' → logprob: -17.000431060791016
    7. ')n' → logprob: -19.375431060791016
    8. '()' → logprob: -21.000431060791016
    9. '(N' → logprob: -21.250431060791016
    10. '	n' → logprob: -21.375431060791016

Token 161: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007143391412682831
    2. ')' → logprob: -7.250714302062988
    3. ']' → logprob: -13.125714302062988
    4. ' )' → logprob: -13.375714302062988
    5. '))' → logprob: -15.375714302062988
    6. ')]
' → logprob: -15.500714302062988
    7. '):' → logprob: -15.750714302062988
    8. ')])' → logprob: -16.875715255737305
    9. ')].' → logprob: -17.000715255737305
    10. ')
' → logprob: -17.250715255737305

Token 162: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17009200155735016
    2. 'cake' → logprob: -2.7950921058654785
    3. 's' → logprob: -3.7950921058654785
    4. 'result' → logprob: -4.1700921058654785
    5. '
' → logprob: -4.4200921058654785
    6. 'c' → logprob: -4.7950921058654785
    7. 'cakes' → logprob: -4.9200921058654785
    8. 'sorted' → logprob: -5.2950921058654785
    9. 't' → logprob: -5.4200921058654785
    10. 'a' → logprob: -6.2950921058654785

Token 163: ' Cré' (ID: 109203)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6101543307304382
    2. 'cake' → logprob: -1.985154390335083
    3. 'result' → logprob: -2.360154390335083
    4. 'dp' → logprob: -3.235154390335083
    5. 'sorted' → logprob: -3.360154390335083
    6. 'selected' → logprob: -3.485154390335083
    7. 'from' → logprob: -3.735154390335083
    8. 's' → logprob: -4.235154151916504
    9. 'tri' → logprob: -4.485154151916504
    10. 'total' → logprob: -5.360154151916504

Token 164: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6585031747817993
    2. '#' → logprob: -0.9085031747817993
    3. 'def' → logprob: -3.5335030555725098
    4. 'é' → logprob: -3.6585030555725098
    5. 'd' → logprob: -5.03350305557251
    6. 'up' → logprob: -5.53350305557251
    7. 'tion' → logprob: -6.15850305557251
    8. 'ess' → logprob: -6.78350305557251
    9. 'atement' → logprob: -7.15850305557251
    10. 'er' → logprob: -7.28350305557251

Token 165: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034741517156362534
    2. '_' → logprob: -7.128474235534668
    3. ' (' → logprob: -7.503474235534668
    4. '(
' → logprob: -7.753474235534668
    5. 's' → logprob: -7.878474235534668
    6. '[' → logprob: -8.003474235534668
    7. ' ' → logprob: -8.128474235534668
    8. ' d' → logprob: -9.128474235534668
    9. '[]' → logprob: -9.503474235534668
    10. '()' → logprob: -9.878474235534668

Token 166: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8593146204948425
    2. 'a' → logprob: -1.7343146800994873
    3. 'e' → logprob: -1.9843146800994873
    4. ''une' → logprob: -2.1093146800994873
    5. '(' → logprob: -2.3593146800994873
    6. ' une' → logprob: -4.359314441680908
    7. '_' → logprob: -4.609314441680908
    8. '[' → logprob: -5.109314441680908
    9. '[]' → logprob: -5.109314441680908
    10. 'es' → logprob: -6.109314441680908

Token 167: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.1555051803588867
    2. 'list' → logprob: -1.5305051803588867
    3. 'result' → logprob: -1.6555051803588867
    4. 'import' → logprob: -3.0305051803588867
    5. 'from' → logprob: -3.4055051803588867
    6. 'dict' → logprob: -3.9055051803588867
    7. 'default' → logprob: -4.030505180358887
    8. 'new' → logprob: -4.030505180358887
    9. 'sorted' → logprob: -4.030505180358887
    10. 'set' → logprob: -4.155505180358887

Token 168: ' nom' (ID: 8080)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.44277501106262207
    2. 'selected' → logprob: -2.442775011062622
    3. 'des' → logprob: -2.692775011062622
    4. 'de' → logprob: -3.442775011062622
    5. 'called' → logprob: -3.692775011062622
    6. ' result' → logprob: -3.942775011062622
    7. ' called' → logprob: -4.067774772644043
    8. 'results' → logprob: -4.192774772644043
    9. 'indices' → logprob: -4.442774772644043
    10. ' appelée' → logprob: -4.567774772644043

Token 169: 'm' (ID: 76)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7776274085044861
    2. 'ée' → logprob: -1.0276274681091309
    3. ' =' → logprob: -2.527627468109131
    4. 'e' → logprob: -3.402627468109131
    5. ' appelée' → logprob: -3.527627468109131
    6. 'é' → logprob: -4.527627468109131
    7. '=[]' → logprob: -5.027627468109131
    8. '="' → logprob: -5.902627468109131
    9. 'm' → logprob: -6.402627468109131
    10. '.append' → logprob: -7.152627468109131

Token 170: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.015678508207201958
    2. 'e' → logprob: -4.515678405761719
    3. 'é' → logprob: -5.640678405761719
    4. 'm' → logprob: -8.265678405761719
    5. 'urée' → logprob: -8.640678405761719
    6. 'uée' → logprob: -9.265678405761719
    7. 'rée' → logprob: -9.515678405761719
    8. '_e' → logprob: -9.640678405761719
    9. '_' → logprob: -9.765678405761719
    10. '=' → logprob: -9.765678405761719

Token 171: ' "' (ID: 392)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -1.4619190692901611
    2. 'result' → logprob: -1.7119190692901611
    3. 'results' → logprob: -2.586919069290161
    4. ' result' → logprob: -2.711919069290161
    5. 'scores' → logprob: -2.836919069290161
    6. ' selected' → logprob: -2.961919069290161
    7. 'indices' → logprob: -3.086919069290161
    8. 'indexes' → logprob: -3.461919069290161
    9. 'res' → logprob: -3.711919069290161
    10. '"' → logprob: -3.836919069290161

Token 172: 'cakes' (ID: 165133)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -1.3359497785568237
    2. 'dp' → logprob: -2.0859498977661133
    3. 'result' → logprob: -2.2109498977661133
    4. 'score' → logprob: -2.5859498977661133
    5. 'indices' → logprob: -2.7109498977661133
    6. 'res' → logprob: -3.2109498977661133
    7. 'scores' → logprob: -3.3359498977661133
    8. 'ans' → logprob: -3.7109498977661133
    9. 'cake' → logprob: -3.8359498977661133
    10. 'indexes' → logprob: -3.9609498977661133

Token 173: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1167713403701782
    2. '_selected' → logprob: -1.1167713403701782
    3. '_s' → logprob: -2.4917712211608887
    4. '_' → logprob: -3.1167712211608887
    5. '_selection' → logprob: -3.2417712211608887
    6. '_a' → logprob: -3.3667712211608887
    7. '_sel' → logprob: -4.116771221160889
    8. '_se' → logprob: -4.241771221160889
    9. '_select' → logprob: -4.241771221160889
    10. '_tr' → logprob: -4.491771221160889

Token 174: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.578331470489502
    2. '=' → logprob: -0.828331470489502
    3. '=[]' → logprob: -6.203331470489502
    4. 'cakes' → logprob: -8.578330993652344
    5. 's' → logprob: -9.703330993652344
    6. '[]' → logprob: -10.203330993652344
    7. ' cakes' → logprob: -11.203330993652344
    8. 'cake' → logprob: -11.453330993652344
    9. '[:]' → logprob: -11.578330993652344
    10. ',' → logprob: -11.828330993652344

Token 175: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05741139128804207
    2. '=' → logprob: -2.9324114322662354
    3. '.append' → logprob: -6.807411193847656
    4. '=[]' → logprob: -7.307411193847656
    5. '.sort' → logprob: -8.807411193847656
    6. '.' → logprob: -9.057411193847656
    7. '<|end|>' → logprob: -9.182411193847656
    8. '.setdefault' → logprob: -9.682411193847656
    9. '.extend' → logprob: -10.057411193847656
    10. 's' → logprob: -10.057411193847656

Token 176: ' conten' (ID: 23523)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6717710494995117
    2. 'conten' → logprob: -1.9217710494995117
    3. '=[]' → logprob: -2.1717710494995117
    4. ' []' → logprob: -2.7967710494995117
    5. 'con' → logprob: -2.9217710494995117
    6. ' conten' → logprob: -3.9217710494995117
    7. 'cont' → logprob: -3.9217710494995117
    8. '[' → logprob: -4.296771049499512
    9. 'contain' → logprob: -4.671771049499512
    10. 'sorted' → logprob: -4.921771049499512

Token 177: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00023107275774236768
    2. 'enir' → logprob: -9.00023078918457
    3. 'er' → logprob: -9.25023078918457
    4. 'r' → logprob: -12.87523078918457
    5. 'ent' → logprob: -13.00023078918457
    6. 'nir' → logprob: -13.75023078918457
    7. 'pir' → logprob: -14.12523078918457
    8. 'eur' → logprob: -14.12523078918457
    9. 'oir' → logprob: -14.25023078918457
    10. 'vir' → logprob: -14.25023078918457

Token 178: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05106617882847786
    2. ' []' → logprob: -3.6760661602020264
    3. '[n' → logprob: -4.4260663986206055
    4. 'sorted' → logprob: -5.3010663986206055
    5. 'n' → logprob: -5.5510663986206055
    6. '[' → logprob: -7.0510663986206055
    7. ' sorted' → logprob: -7.1760663986206055
    8. ' n' → logprob: -7.5510663986206055
    9. '[]
' → logprob: -7.9260663986206055
    10. 'cake' → logprob: -8.426066398620605

Token 179: '8' (ID: 23)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16120845079421997
    2. 'sorted' → logprob: -2.161208391189575
    3. '[n' → logprob: -3.786208391189575
    4. 'n' → logprob: -5.286208629608154
    5. 'cake' → logprob: -6.161208629608154
    6. '[' → logprob: -6.911208629608154
    7. '[m' → logprob: -7.286208629608154
    8. 'list' → logprob: -7.911208629608154
    9. '[c' → logprob: -8.036208152770996
    10. '[]

' → logprob: -8.286208152770996

Token 180: ' sous' (ID: 14487)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7865477800369263
    2. '[' → logprob: -1.1615477800369263
    3. ' lists' → logprob: -3.2865476608276367
    4. '[n' → logprob: -3.4115476608276367
    5. '*' → logprob: -3.5365476608276367
    6. ' []' → logprob: -4.161547660827637
    7. ' elements' → logprob: -4.411547660827637
    8. ' *' → logprob: -4.661547660827637
    9. ' éléments' → logprob: -4.661547660827637
    10. '[]' → logprob: -4.786547660827637

Token 181: '-list' (ID: 18463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.469669371843338
    2. '-list' → logprob: -1.9696693420410156
    3. '-l' → logprob: -2.5946693420410156
    4. 'lists' → logprob: -2.7196693420410156
    5. '-' → logprob: -3.5946693420410156
    6. '_list' → logprob: -3.9696693420410156
    7. 'l' → logprob: -4.219669342041016
    8. '-c' → logprob: -4.844669342041016
    9. 'liste' → logprob: -5.219669342041016
    10. 'listas' → logprob: -5.469669342041016

Token 182: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.04215622693300247
    2. 'stes' → logprob: -3.667156219482422
    3. 'es' → logprob: -5.167156219482422
    4. '```' → logprob: -6.417156219482422
    5. 'ists' → logprob: -6.667156219482422
    6. 'êtes' → logprob: -6.792156219482422
    7. 'tes' → logprob: -6.917156219482422
    8. 'etes' → logprob: -7.167156219482422
    9. 'iste' → logprob: -7.292156219482422
    10. 'ettes' → logprob: -7.417156219482422

Token 183: ' v' (ID: 323)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.10448150336742401
    2. ' =' → logprob: -2.7294814586639404
    3. '=' → logprob: -3.6044814586639404
    4. ' cakes' → logprob: -5.2294816970825195
    5. '=[]' → logprob: -7.4794816970825195
    6. 's' → logprob: -8.47948169708252
    7. '=c' → logprob: -8.47948169708252
    8. '=[]
' → logprob: -9.35448169708252
    9. 'c' → logprob: -9.35448169708252
    10. '=[' → logprob: -9.85448169708252

Token 184: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.3464418947696686
    2. 'ide' → logprob: -1.9714418649673462
    3. 'al' → logprob: -2.8464419841766357
    4. 'a' → logprob: -3.2214419841766357
    5. 'id' → logprob: -3.2214419841766357
    6. 'idé' → logprob: -5.471441745758057
    7. 'oid' → logprob: -5.846441745758057
    8. 'i' → logprob: -6.471441745758057
    9. 'ar' → logprob: -7.096441745758057
    10. 'ideo' → logprob: -7.096441745758057

Token 185: '.
' (ID: 558)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.00017863049288280308
    2. 's' → logprob: -8.875178337097168
    3. ' cakes' → logprob: -10.875178337097168
    4. ' =' → logprob: -12.250178337097168
    5. 'c' → logprob: -12.250178337097168
    6. '=' → logprob: -12.500178337097168
    7. '
' → logprob: -12.750178337097168
    8. 'cake' → logprob: -14.250178337097168
    9. ',' → logprob: -14.375178337097168
    10. 'cak' → logprob: -14.375178337097168

Token 186: '#' (ID: 2)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -1.1472419600977446e-06
    2. ' cakes' → logprob: -14.875000953674316
    3. 'cake' → logprob: -15.375000953674316
    4. '
' → logprob: -15.375000953674316
    5. 'cak' → logprob: -15.625000953674316
    6. 'c' → logprob: -16.750001907348633
    7. '

' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. '[]' → logprob: -18.625001907348633
    10. '[' → logprob: -18.875001907348633

Token 187: ' L' (ID: 451)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -1.7432603272027336e-06
    2. ' cakes' → logprob: -13.625001907348633
    3. 'cake' → logprob: -15.250001907348633
    4. 'cak' → logprob: -16.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. '#' → logprob: -18.125001907348633
    7. 'c' → logprob: -18.250001907348633
    8. 'cups' → logprob: -18.875001907348633
    9. 'ca' → logprob: -19.125001907348633
    10. 'C' → logprob: -19.125001907348633

Token 188: ''op' (ID: 70747)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.06454890966415405
    2. ' cakes' → logprob: -2.814548969268799
    3. 'c' → logprob: -6.064548969268799
    4. 'cake' → logprob: -9.06454849243164
    5. 'a' → logprob: -9.31454849243164
    6. 'for' → logprob: -11.68954849243164
    7. '#' → logprob: -11.93954849243164
    8. 'cak' → logprob: -12.06454849243164
    9. 's' → logprob: -12.68954849243164
    10. '=' → logprob: -12.81454849243164

Token 189: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.43477463722229
    2. 'ti' → logprob: -2.05977463722229
    3. 'ération' → logprob: -2.18477463722229
    4. 'op' → logprob: -2.43477463722229
    5. 'code' → logprob: -2.68477463722229
    6. 't' → logprob: -3.05977463722229
    7. 'ér' → logprob: -3.55977463722229
    8. 'p' → logprob: -3.68477463722229
    9. 'tion' → logprob: -3.80977463722229
    10. 'c' → logprob: -4.059774398803711

Token 190: ' [[]' (ID: 182908)
  Prédit: ' cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -0.14277322590351105
    2. 'cakes' → logprob: -2.017773151397705
    3. ' =' → logprob: -11.142773628234863
    4. ' ' → logprob: -11.267773628234863
    5. 's' → logprob: -11.267773628234863
    6. ' cake' → logprob: -11.392773628234863
    7. 'c' → logprob: -11.767773628234863
    8. 'cake' → logprob: -12.267773628234863
    9. '[]' → logprob: -12.267773628234863
    10. ' cubes' → logprob: -12.267773628234863

Token 191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6327952146530151
    2. ' for' → logprob: -0.7577952146530151
    3. ']' → logprob: -8.882795333862305
    4. '*' → logprob: -11.382795333862305
    5. '
' → logprob: -11.632795333862305
    6. ' ' → logprob: -11.757795333862305
    7. ']*' → logprob: -11.882795333862305
    8. ',' → logprob: -12.132795333862305
    9. '	for' → logprob: -13.007795333862305
    10. '[]' → logprob: -13.007795333862305

Token 192: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029795728623867035
    2. ' _' → logprob: -3.5297956466674805
    3. '_i' → logprob: -10.52979564666748
    4. ' i' → logprob: -11.27979564666748
    5. 'i' → logprob: -13.15479564666748
    6. '_range' → logprob: -13.65479564666748
    7. '_j' → logprob: -14.27979564666748
    8. '_in' → logprob: -14.77979564666748
    9. '_x' → logprob: -15.15479564666748
    10. ' ' → logprob: -15.27979564666748

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026315970346331596
    2. 'in' → logprob: -3.651315927505493
    3. ' ' → logprob: -11.651315689086914
    4. 'range' → logprob: -12.776315689086914
    5. ' i' → logprob: -14.151315689086914
    6. ']' → logprob: -14.276315689086914
    7. 'import' → logprob: -14.526315689086914
    8. 'i' → logprob: -15.026315689086914
    9. 'n' → logprob: -15.026315689086914
    10. ' ' → logprob: -15.276315689086914

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021055489778519
    2. ' range' → logprob: -2.350210666656494
    3. '_' → logprob: -13.475210189819336
    4. 'rang' → logprob: -14.350210189819336
    5. '_range' → logprob: -14.600210189819336
    6. '	range' → logprob: -14.725210189819336
    7. 'ra' → logprob: -15.350210189819336
    8. '(range' → logprob: -15.475210189819336
    9. ' rang' → logprob: -15.725210189819336
    10. ' ' → logprob: -15.850210189819336

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1637164789135568e-05
    2. '8' → logprob: -11.375011444091797
    3. ' (' → logprob: -15.750011444091797
    4. '(
' → logprob: -19.375011444091797
    5. '((' → logprob: -20.625011444091797
    6. ']' → logprob: -20.875011444091797
    7. '（' → logprob: -20.875011444091797
    8. '
' → logprob: -21.375011444091797
    9. 's' → logprob: -21.500011444091797
    10. '7' → logprob: -21.500011444091797

Token 196: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '(' → logprob: -13.875008583068848
    4. ')' → logprob: -14.937508583068848
    5. '7' → logprob: -16.43750762939453
    6. '
' → logprob: -16.93750762939453
    7. '4' → logprob: -17.31250762939453
    8. ']' → logprob: -17.31250762939453
    9. '```' → logprob: -17.37500762939453
    10. '８' → logprob: -17.37500762939453

Token 197: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015951994573697448
    2. ')]' → logprob: -6.5015950202941895
    3. '()]' → logprob: -9.876595497131348
    4. ' ]' → logprob: -10.251595497131348
    5. ']]' → logprob: -12.751595497131348
    6. ']()' → logprob: -13.876595497131348
    7. '])' → logprob: -14.001595497131348
    8. ']

' → logprob: -15.251595497131348
    9. '>]' → logprob: -15.376595497131348
    10. ']
' → logprob: -15.376595497131348

Token 198: ' utilise' (ID: 70283)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.9902105927467346
    2. '[]' → logprob: -1.3652105331420898
    3. '[' → logprob: -2.11521053314209
    4. '[:]' → logprob: -2.61521053314209
    5. ']' → logprob: -2.74021053314209
    6. '=' → logprob: -2.86521053314209
    7. 'creates' → logprob: -4.11521053314209
    8. ' creates' → logprob: -5.24021053314209
    9. ':' → logprob: -5.36521053314209
    10. '.' → logprob: -5.49021053314209

Token 199: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0305107831954956
    2. '[]' → logprob: -1.0305107831954956
    3. ' une' → logprob: -1.9055107831954956
    4. ' la' → logprob: -2.530510902404785
    5. 'list' → logprob: -3.780510902404785
    6. 'range' → logprob: -4.530510902404785
    7. ' list' → logprob: -4.905510902404785
    8. ' [[]' → logprob: -5.655510902404785
    9. ' []' → logprob: -6.405510902404785
    10. ' a' → logprob: -6.405510902404785

Token 200: ' compréhension' (ID: 142333)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10171961039304733
    2. 'liste' → logprob: -3.226719617843628
    3. 'compr' → logprob: -3.476719617843628
    4. 'com' → logprob: -4.226719379425049
    5. ' compréhension' → logprob: -5.476719379425049
    6. ' list' → logprob: -6.726719379425049
    7. ' liste' → logprob: -6.851719379425049
    8. '[' → logprob: -6.851719379425049
    9. 'expression' → logprob: -7.101719379425049
    10. ' comprehension' → logprob: -7.351719379425049

Token 201: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1327184438705444
    2. ' de' → logprob: -1.3827184438705444
    3. 'de' → logprob: -1.5077184438705444
    4. 'list' → logprob: -2.382718563079834
    5. ' pour' → logprob: -3.632718563079834
    6. 'pour' → logprob: -3.757718563079834
    7. '[list' → logprob: -3.757718563079834
    8. ' list' → logprob: -4.882718563079834
    9. ']' → logprob: -5.132718563079834
    10. '[]' → logprob: -5.257718563079834

Token 202: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16386917233467102
    2. 'liste' → logprob: -2.0388691425323486
    3. 'lists' → logprob: -4.288869380950928
    4. 'range' → logprob: -6.038869380950928
    5. 'l' → logprob: -6.288869380950928
    6. ' liste' → logprob: -6.913869380950928
    7. 'listas' → logprob: -7.413869380950928
    8. 'la' → logprob: -8.28886890411377
    9. ' list' → logprob: -8.53886890411377
    10. 'lis' → logprob: -8.91386890411377

Token 203: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2738511562347412
    2. '[]' → logprob: -2.273851156234741
    3. '(' → logprob: -2.648851156234741
    4. '([]' → logprob: -3.773851156234741
    5. '[' → logprob: -4.77385139465332
    6. ' pour' → logprob: -5.02385139465332
    7. '[:]' → logprob: -5.02385139465332
    8. ']' → logprob: -5.39885139465332
    9. ' ' → logprob: -5.52385139465332
    10. ' ()' → logprob: -5.64885139465332

Token 204: ' créer' (ID: 40938)
  Prédit: ' créer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.030272675678133965
    2. 'cr' → logprob: -4.405272483825684
    3. '[' → logprob: -4.780272483825684
    4. 'cré' → logprob: -5.905272483825684
    5. 'create' → logprob: -6.280272483825684
    6. ' crée' → logprob: -6.780272483825684
    7. 'Créer' → logprob: -6.905272483825684
    8. '[]' → logprob: -7.155272483825684
    9. ' [[]' → logprob: -8.030272483825684
    10. '[:]' → logprob: -8.405272483825684

Token 205: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1441592127084732
    2. ' [[]' → logprob: -2.1441593170166016
    3. '[]' → logprob: -4.269159317016602
    4. ' ' → logprob: -6.519159317016602
    5. '8' → logprob: -7.019159317016602
    6. ' [' → logprob: -7.769159317016602
    7. ' []' → logprob: -8.894159317016602
    8. ' eight' → logprob: -10.269159317016602
    9. 'eight' → logprob: -10.519159317016602
    10. '[['' → logprob: -10.644159317016602

Token 206: '8' (ID: 23)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00587747897952795
    2. '[]' → logprob: -5.630877494812012
    3. '8' → logprob: -6.130877494812012
    4. ' [[]' → logprob: -9.880877494812012
    5. '[[' → logprob: -11.130877494812012
    6. ' ' → logprob: -11.380877494812012
    7. '[][' → logprob: -12.380877494812012
    8. 'eight' → logprob: -12.505877494812012
    9. 'des' → logprob: -12.880877494812012
    10. '7' → logprob: -13.130877494812012

Token 207: ' listes' (ID: 179198)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0683559700846672
    2. ' []' → logprob: -2.8183560371398926
    3. '[' → logprob: -5.943356037139893
    4. '[:]' → logprob: -6.443356037139893
    5. 'lists' → logprob: -7.193356037139893
    6. 'c' → logprob: -8.068355560302734
    7. ' listes' → logprob: -8.443355560302734
    8. ' lists' → logprob: -8.443355560302734
    9. ' [[]' → logprob: -9.318355560302734
    10. '[][]' → logprob: -9.943355560302734

Token 208: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.036176495254039764
    2. 'vide' → logprob: -3.5361764430999756
    3. 'v' → logprob: -5.536176681518555
    4. '[]' → logprob: -6.536176681518555
    5. 'distinct' → logprob: -7.786176681518555
    6. '[' → logprob: -8.411176681518555
    7. ' v' → logprob: -9.411176681518555
    8. '[v' → logprob: -9.661176681518555
    9. ' ' → logprob: -10.286176681518555
    10. '_vid' → logprob: -10.286176681518555

Token 209: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.005359213799238205
    2. 'ide' → logprob: -5.755359172821045
    3. '[' → logprob: -6.755359172821045
    4. 'id' → logprob: -7.630359172821045
    5. '[]' → logprob: -9.005359649658203
    6. '```' → logprob: -9.130359649658203
    7. 'i' → logprob: -9.755359649658203
    8. 'des' → logprob: -9.880359649658203
    9. 'ïdes' → logprob: -9.880359649658203
    10. 'a' → logprob: -11.505359649658203

Token 210: ' distinct' (ID: 16913)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06085256114602089
    2. 'cakes' → logprob: -3.435852527618408
    3. '[]' → logprob: -4.810852527618408
    4. 's' → logprob: -5.435852527618408
    5. 'c' → logprob: -5.685852527618408
    6. '.' → logprob: -5.685852527618408
    7. '[' → logprob: -6.060852527618408
    8. ' cakes' → logprob: -6.435852527618408
    9. ',' → logprob: -7.060852527618408
    10. '].' → logprob: -7.185852527618408

Token 211: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5041702389717102
    2. '[]' → logprob: -1.2541701793670654
    3. 'e' → logprob: -2.8791701793670654
    4. ']' → logprob: -3.2541701793670654
    5. 's' → logprob: -5.1291704177856445
    6. '()' → logprob: -5.3791704177856445
    7. '[' → logprob: -5.6291704177856445
    8. '()]' → logprob: -7.6291704177856445
    9. '([]' → logprob: -7.8791704177856445
    10. '[:]' → logprob: -8.254170417785645

Token 212: ',
' (ID: 412)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.19573022425174713
    2. ']' → logprob: -1.820730209350586
    3. ' cakes' → logprob: -4.695730209350586
    4. '[]' → logprob: -6.070730209350586
    5. 'c' → logprob: -6.195730209350586
    6. 's' → logprob: -6.820730209350586
    7. '[' → logprob: -7.820730209350586
    8. '[c' → logprob: -8.945730209350586
    9. ' ]' → logprob: -8.945730209350586
    10. 'for' → logprob: -9.070730209350586

Token 213: '#' (ID: 2)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.33910632133483887
    2. ' cakes' → logprob: -1.5891063213348389
    3. '[]' → logprob: -2.589106321334839
    4. ' [[]' → logprob: -5.714106559753418
    5. '[' → logprob: -5.964106559753418
    6. ' []' → logprob: -6.714106559753418
    7. ']' → logprob: -7.589106559753418
    8. 'c' → logprob: -8.464106559753418
    9. ' ' → logprob: -8.839106559753418
    10. '[[' → logprob: -9.589106559753418

Token 214: ' une' (ID: 2463)
  Prédit: ' cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -0.42899784445762634
    2. 'cakes' → logprob: -1.0539978742599487
    3. ' Cakes' → logprob: -9.428997993469238
    4. 'cake' → logprob: -10.303997993469238
    5. ' cubes' → logprob: -10.303997993469238
    6. '[]' → logprob: -10.428997993469238
    7. ' [[]' → logprob: -10.553997993469238
    8. '[' → logprob: -11.053997993469238
    9. ' car' → logprob: -11.428997993469238
    10. ' cake' → logprob: -11.428997993469238

Token 215: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.679664134979248
    2. ' par' → logprob: -1.554664134979248
    3. ' for' → logprob: -2.179664134979248
    4. 'pour' → logprob: -2.929664134979248
    5. 'par' → logprob: -3.304664134979248
    6. ' fois' → logprob: -3.554664134979248
    7. 'for' → logprob: -4.054664134979248
    8. 's' → logprob: -5.179664134979248
    9. ' liste' → logprob: -5.429664134979248
    10. '[' → logprob: -5.679664134979248

Token 216: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011075885966420174
    2. ' _' → logprob: -4.511075973510742
    3. '[]' → logprob: -11.636075973510742
    4. ' chaque' → logprob: -11.636075973510742
    5. ' each' → logprob: -13.386075973510742
    6. '_=' → logprob: -13.511075973510742
    7. 'l' → logprob: -13.761075973510742
    8. 'each' → logprob: -14.011075973510742
    9. '[' → logprob: -14.136075973510742
    10. ' chacune' → logprob: -14.386075973510742

Token 217: ' combinaison' (ID: 165933)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.281434178352356
    2. '_' → logprob: -1.906434178352356
    3. 's' → logprob: -2.6564340591430664
    4. ' face' → logprob: -2.9064340591430664
    5. 'bit' → logprob: -3.6564340591430664
    6. 'case' → logprob: -3.6564340591430664
    7. 'orientation' → logprob: -3.9064340591430664
    8. 'i' → logprob: -3.9689340591430664
    9. 'angle' → logprob: -3.9689340591430664
    10. 'sign' → logprob: -4.031434059143066

Token 218: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.44428369402885437
    2. 'de' → logprob: -1.5692837238311768
    3. '[' → logprob: -3.1942837238311768
    4. 'b' → logprob: -3.5692837238311768
    5. 'des' → logprob: -3.6942837238311768
    6. ' des' → logprob: -3.8192837238311768
    7. 'possible' → logprob: -4.819283485412598
    8. '[]' → logprob: -5.319283485412598
    9. ' possible' → logprob: -5.819283485412598
    10. 's' → logprob: -5.819283485412598

Token 219: ' signes' (ID: 133923)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3711004853248596
    2. '3' → logprob: -2.121100425720215
    3. ' ' → logprob: -3.121100425720215
    4. '(' → logprob: -3.246100425720215
    5. ' [' → logprob: -3.496100425720215
    6. ' signes' → logprob: -4.121100425720215
    7. 'sign' → logprob: -4.871100425720215
    8. 'range' → logprob: -4.871100425720215
    9. ' (' → logprob: -5.121100425720215
    10. 'bits' → logprob: -5.371100425720215

Token 220: ' +/-' (ID: 89971)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.014749695546925068
    2. 's' → logprob: -4.639749526977539
    3. ' cakes' → logprob: -6.014749526977539
    4. 'c' → logprob: -6.764749526977539
    5. ']' → logprob: -6.889749526977539
    6. '[]' → logprob: -9.389749526977539
    7. 'sign' → logprob: -9.514749526977539
    8. ' =' → logprob: -9.639749526977539
    9. '[' → logprob: -10.639749526977539
    10. 'cake' → logprob: -10.889749526977539

Token 221: ' dans' (ID: 2671)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.000672043883241713
    2. ' cakes' → logprob: -7.375671863555908
    3. 'c' → logprob: -10.500672340393066
    4. '
' → logprob: -11.500672340393066
    5. 's' → logprob: -12.625672340393066
    6. ']' → logprob: -14.250672340393066
    7. 'cake' → logprob: -14.375672340393066
    8. '[]' → logprob: -14.750672340393066
    9. 'C' → logprob: -15.000672340393066
    10. 'cak' → logprob: -15.000672340393066

Token 222: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6254028677940369
    2. ' range' → logprob: -1.3754029273986816
    3. 'range' → logprob: -2.1254029273986816
    4. ' [' → logprob: -3.1254029273986816
    5. '[
' → logprob: -4.625402927398682
    6. '[-' → logprob: -5.000402927398682
    7. '[[' → logprob: -5.375402927398682
    8. '[(' → logprob: -5.625402927398682
    9. '["' → logprob: -5.625402927398682
    10. 'cake' → logprob: -5.750402927398682

Token 223: ' calcul' (ID: 7559)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.23571127653121948
    2. ' cake' → logprob: -1.8607113361358643
    3. 'c' → logprob: -3.4857113361358643
    4. 'cakes' → logprob: -4.485711097717285
    5. '[' → logprob: -5.235711097717285
    6. ' cakes' → logprob: -6.360711097717285
    7. 'cube' → logprob: -6.485711097717285
    8. '[c' → logprob: -7.735711097717285
    9. 'range' → logprob: -7.735711097717285
    10. 'coeff' → logprob: -8.110711097717285

Token 224: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.177281141281128
    2. 'ais' → logprob: -1.927281141281128
    3. '[' → logprob: -2.177281141281128
    4. 's' → logprob: -2.302281141281128
    5. 'us' → logprob: -2.427281141281128
    6. 'atrices' → logprob: -3.802281141281128
    7. 'aises' → logprob: -4.177281379699707
    8. 'c' → logprob: -4.302281379699707
    9. 'ateur' → logprob: -4.302281379699707
    10. 'liste' → logprob: -4.427281379699707

Token 225: ' qui' (ID: 2780)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.006598963867872953
    2. ' cakes' → logprob: -5.131598949432373
    3. 's' → logprob: -7.631598949432373
    4. ',' → logprob: -9.756599426269531
    5. 'c' → logprob: -10.506599426269531
    6. ']' → logprob: -11.006599426269531
    7. '_c' → logprob: -11.381599426269531
    8. '[' → logprob: -11.631599426269531
    9. 'cake' → logprob: -11.756599426269531
    10. 'dess' → logprob: -12.006599426269531

Token 226: ' suivent' (ID: 185529)
  Prédit: ' suivent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivent' → logprob: -0.6480908989906311
    2. 'su' → logprob: -1.0230908393859863
    3. 'inter' → logprob: -3.1480908393859863
    4. ' vont' → logprob: -3.8980908393859863
    5. 's' → logprob: -4.148090839385986
    6. ' interv' → logprob: -4.648090839385986
    7. ' suiv' → logprob: -5.273090839385986
    8. 'in' → logprob: -5.398090839385986
    9. 'v' → logprob: -6.273090839385986
    10. ' impli' → logprob: -6.398090839385986

Token 227: ' (' (ID: 350)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.00031627772841602564
    2. ' cakes' → logprob: -8.875316619873047
    3. ']' → logprob: -9.375316619873047
    4. '
' → logprob: -9.875316619873047
    5. ']
' → logprob: -10.750316619873047
    6. 's' → logprob: -12.375316619873047
    7. 'c' → logprob: -12.750316619873047
    8. 'cake' → logprob: -13.000316619873047
    9. 'cak' → logprob: -13.500316619873047
    10. ',' → logprob: -13.625316619873047

Token 228: '2' (ID: 17)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012127088382840157
    2. ')' → logprob: -4.512126922607422
    3. ')].' → logprob: -7.762126922607422
    4. ']' → logprob: -8.137126922607422
    5. ' )' → logprob: -8.887126922607422
    6. ').' → logprob: -9.637126922607422
    7. ')]
' → logprob: -10.637126922607422
    8. 'cakes' → logprob: -10.887126922607422
    9. ')])' → logprob: -11.012126922607422
    10. ')]

' → logprob: -11.262126922607422

Token 229: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07165476679801941
    2. ' **' → logprob: -2.696654796600342
    3. '*' → logprob: -6.571654796600342
    4. ' *' → logprob: -8.821654319763184
    5. '
' → logprob: -10.321654319763184
    6. '8' → logprob: -10.571654319763184
    7. ']' → logprob: -11.071654319763184
    8. '**)' → logprob: -11.321654319763184
    9. '**
' → logprob: -11.446654319763184
    10. '#' → logprob: -11.571654319763184

Token 230: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '8' → logprob: -14.125001907348633
    4. '```' → logprob: -17.000001907348633
    5. '³' → logprob: -17.500001907348633
    6. '
' → logprob: -18.000001907348633
    7. '(' → logprob: -19.375001907348633
    8. '

' → logprob: -19.750001907348633
    9. '4' → logprob: -20.000001907348633
    10. '5' → logprob: -20.250001907348633

Token 231: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01122087799012661
    2. ')]' → logprob: -4.636220932006836
    3. ' )' → logprob: -7.761220932006836
    4. ']' → logprob: -7.886220932006836
    5. ').' → logprob: -8.136220932006836
    6. ')])' → logprob: -9.511220932006836
    7. '])' → logprob: -9.761220932006836
    8. ')],' → logprob: -10.386220932006836
    9. ')].' → logprob: -10.511220932006836
    10. '=' → logprob: -10.511220932006836

Token 232: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0002714681322686374
    2. '3' → logprob: -8.375271797180176
    3. ' ' → logprob: -10.125271797180176
    4. ')' → logprob: -14.750271797180176
    5. '```' → logprob: -15.125271797180176
    6. '7' → logprob: -17.18777084350586
    7. '   ' → logprob: -17.81277084350586
    8. ' ' → logprob: -18.12527084350586
    9. '۸' → logprob: -18.31277084350586
    10. '1' → logprob: -18.37527084350586

Token 233: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4287324845790863
    2. '8' → logprob: -1.0537325143814087
    3. ' ' → logprob: -10.428732872009277
    4. '```' → logprob: -13.678732872009277
    5. ')' → logprob: -14.428732872009277
    6. '³' → logprob: -16.74123191833496
    7. '' → logprob: -17.17873191833496
    8. '7' → logprob: -17.24123191833496
    9. '1' → logprob: -17.24123191833496
    10. '23' → logprob: -17.36623191833496

Token 234: ').
' (ID: 6294)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3174552917480469
    2. ')' → logprob: -1.3174552917480469
    3. ']' → logprob: -6.192455291748047
    4. ')].' → logprob: -7.067455291748047
    5. ').' → logprob: -7.317455291748047
    6. ')]
' → logprob: -7.942455291748047
    7. ')]
' → logprob: -9.692455291748047
    8. ' )' → logprob: -9.817455291748047
    9. ')])' → logprob: -10.442455291748047
    10. ')],' → logprob: -10.817455291748047

Token 235: 'cakes' (ID: 165133)
  Prédit: 'cakes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -9.968312951968983e-06
    2. '
' → logprob: -12.000009536743164
    3. ' cakes' → logprob: -12.625009536743164
    4. 'c' → logprob: -15.250009536743164
    5. 'cak' → logprob: -17.000009536743164
    6. '

' → logprob: -17.250009536743164
    7. '```' → logprob: -17.625009536743164
    8. 'cups' → logprob: -17.625009536743164
    9. 'cake' → logprob: -17.750009536743164
    10. 's' → logprob: -17.750009536743164

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22546200454235077
    2. '=' → logprob: -1.6004619598388672
    3. '=[' → logprob: -10.600461959838867
    4. '=[]' → logprob: -11.725461959838867
    5. ' =[' → logprob: -12.225461959838867
    6. '[' → logprob: -12.475461959838867
    7. '=[[' → logprob: -12.725461959838867
    8. 's' → logprob: -13.725461959838867
    9. '=[
' → logprob: -14.350461959838867
    10. ' ' → logprob: -14.350461959838867

Token 237: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005235291086137295
    2. ' [[]' → logprob: -5.255235195159912
    3. '[[' → logprob: -14.00523567199707
    4. '[['' → logprob: -14.38023567199707
    5. ' ' → logprob: -16.75523567199707
    6. ' [' → logprob: -17.88023567199707
    7. '[][' → logprob: -19.00523567199707
    8. ' `[' → logprob: -19.13023567199707
    9. '   ' → logprob: -19.75523567199707
    10. ' [[' → logprob: -19.88023567199707

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2014198750257492
    2. ' for' → logprob: -1.7014198303222656
    3. ' ' → logprob: -12.326419830322266
    4. ')' → logprob: -14.826419830322266
    5. '   ' → logprob: -14.826419830322266
    6. ']' → logprob: -14.951419830322266
    7. '	for' → logprob: -15.201419830322266
    8. '
' → logprob: -15.826419830322266
    9. 'f' → logprob: -16.076419830322266
    10. '()' → logprob: -16.326419830322266

Token 239: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38188496232032776
    2. ' _' → logprob: -1.6318849325180054
    3. ' range' → logprob: -2.131885051727295
    4. 'range' → logprob: -6.256885051727295
    5. '_range' → logprob: -6.631885051727295
    6. ' ' → logprob: -11.006884574890137
    7. '(range' → logprob: -15.131884574890137
    8. ' i' → logprob: -15.881884574890137
    9. '	range' → logprob: -15.881884574890137
    10. ' xrange' → logprob: -16.881885528564453

Token 240: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079112783074379
    2. ' range' → logprob: -5.504079341888428
    3. '(range' → logprob: -14.75407886505127
    4. 'rang' → logprob: -16.254079818725586
    5. 'in' → logprob: -16.379079818725586
    6. '	range' → logprob: -17.004079818725586
    7. '_range' → logprob: -17.129079818725586
    8. 'ran' → logprob: -17.379079818725586
    9. ' in' → logprob: -17.504079818725586
    10. 'ange' → logprob: -18.379079818725586

Token 241: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00029625516617670655
    2. ' range' → logprob: -8.125296592712402
    3. 'rang' → logprob: -16.250295639038086
    4. '8' → logprob: -16.375295639038086
    5. '(range' → logprob: -16.875295639038086
    6. '(' → logprob: -17.125295639038086
    7. ' ' → logprob: -18.000295639038086
    8. 'ran' → logprob: -18.250295639038086
    9. '	range' → logprob: -19.375295639038086
    10. 'r' → logprob: -19.750295639038086

Token 242: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006715967319905758
    2. '8' → logprob: -5.006715774536133
    3. ' (' → logprob: -14.881715774536133
    4. ' ' → logprob: -16.631715774536133
    5. '(
' → logprob: -16.631715774536133
    6. '7' → logprob: -19.131715774536133
    7. '   ' → logprob: -21.381715774536133
    8. '
' → logprob: -21.506715774536133
    9. 'eight' → logprob: -22.006715774536133
    10. '(n' → logprob: -22.381715774536133

Token 243: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. 'eight' → logprob: -19.875
    4. '7' → logprob: -20.0
    5. '８' → logprob: -20.125
    6. '   ' → logprob: -20.625
    7. '3' → logprob: -20.875
    8. '۸' → logprob: -21.25
    9. ')' → logprob: -21.25
    10. '9' → logprob: -21.3125

Token 244: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.017927029868588e-05
    2. ']' → logprob: -9.500080108642578
    3. ')' → logprob: -12.250080108642578
    4. ')]
' → logprob: -15.875080108642578
    5. ')],' → logprob: -16.125080108642578
    6. ')].' → logprob: -16.500080108642578
    7. ')]

' → logprob: -17.125080108642578
    8. '])]' → logprob: -17.125080108642578
    9. '])' → logprob: -17.500080108642578
    10. ')]
' → logprob: -17.625080108642578

Token 245: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.4849443838757e-06
    2. ' for' → logprob: -12.625004768371582
    3. '#' → logprob: -13.875004768371582
    4. '```' → logprob: -17.125003814697266
    5. 'i' → logprob: -17.375003814697266
    6. ')' → logprob: -18.000003814697266
    7. 'from' → logprob: -18.000003814697266
    8. '
' → logprob: -18.250003814697266
    9. '	for' → logprob: -18.625003814697266
    10. ']' → logprob: -18.625003814697266

Token 246: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7968066206085496e-05
    2. 'def' → logprob: -11.000027656555176
    3. '#' → logprob: -11.750027656555176
    4. ' for' → logprob: -13.500027656555176
    5. 'from' → logprob: -14.250027656555176
    6. 'For' → logprob: -14.750027656555176
    7. 'i' → logprob: -14.875027656555176
    8. 'fo' → logprob: -16.250028610229492
    9. 'sign' → logprob: -16.250028610229492
    10. 'import' → logprob: -16.750028610229492

Token 247: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01708807796239853
    2. 'r' → logprob: -4.267087936401367
    3. ' for' → logprob: -6.267087936401367
    4. 'c' → logprob: -8.017087936401367
    5. '#' → logprob: -8.142087936401367
    6. 'f' → logprob: -8.517087936401367
    7. 'cle' → logprob: -10.142087936401367
    8. 'i' → logprob: -10.517087936401367
    9. 'k' → logprob: -10.642087936401367
    10. 'x' → logprob: -11.267087936401367

Token 248: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012880181893706322
    2. ' for' → logprob: -4.512880325317383
    3. 'i' → logprob: -6.387880325317383
    4. '_' → logprob: -9.512880325317383
    5. ' i' → logprob: -9.512880325317383
    6. 'pour' → logprob: -14.512880325317383
    7. '_for' → logprob: -15.637880325317383
    8. '_i' → logprob: -16.012880325317383
    9. ' _' → logprob: -16.137880325317383
    10. 'in' → logprob: -16.762880325317383

Token 249: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4381241798400879
    2. ' i' → logprob: -1.313124179840088
    3. ' range' → logprob: -2.938124179840088
    4. 'range' → logprob: -3.438124179840088
    5. '_i' → logprob: -8.43812370300293
    6. '_' → logprob: -9.18812370300293
    7. 'r' → logprob: -9.56312370300293
    8. ' _' → logprob: -10.06312370300293
    9. ' cake' → logprob: -10.56312370300293
    10. 'k' → logprob: -10.68812370300293

Token 250: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3240180015563965
    2. 'c' → logprob: -2.0740180015563965
    3. 'cake' → logprob: -2.6990180015563965
    4. ' i' → logprob: -3.4490180015563965
    5. ' cake' → logprob: -4.3240180015563965
    6. 'x' → logprob: -4.3240180015563965
    7. 'idx' → logprob: -4.9490180015563965
    8. ' c' → logprob: -5.8240180015563965
    9. 'a' → logprob: -6.3240180015563965
    10. 'v' → logprob: -6.5740180015563965

Token 251: ' "' (ID: 392)
  Prédit: ' cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cake' → logprob: -0.6116536259651184
    2. ' i' → logprob: -1.4866535663604736
    3. 'cake' → logprob: -2.4866535663604736
    4. ' de' → logprob: -3.2366535663604736
    5. ' du' → logprob: -3.6116535663604736
    6. 'i' → logprob: -4.111653804779053
    7. ' in' → logprob: -4.611653804779053
    8. ' dans' → logprob: -4.861653804779053
    9. ' of' → logprob: -4.986653804779053
    10. ' for' → logprob: -4.986653804779053

Token 252: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.49181801080703735
    2. 'cake' → logprob: -1.2418179512023926
    3. 'i' → logprob: -3.1168179512023926
    4. 'x' → logprob: -3.8668179512023926
    5. ' cake' → logprob: -4.741817951202393
    6. 'idx' → logprob: -4.991817951202393
    7. ' c' → logprob: -5.991817951202393
    8. 'a' → logprob: -6.116817951202393
    9. 'ca' → logprob: -6.116817951202393
    10. 'v' → logprob: -6.241817951202393

Token 253: '"' (ID: 1)
  Prédit: 'ake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.04953691363334656
    2. 'a' → logprob: -3.299536943435669
    3. 'ak' → logprob: -5.92453670501709
    4. 'cake' → logprob: -6.42453670501709
    5. '_' → logprob: -6.54953670501709
    6. ' in' → logprob: -7.54953670501709
    7. 'k' → logprob: -7.79953670501709
    8. 'aké' → logprob: -8.17453670501709
    9. '`' → logprob: -8.23703670501709
    10. 'i' → logprob: -8.29953670501709

Token 254: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18570280075073242
    2. 'in' → logprob: -1.8107028007507324
    3. ' ' → logprob: -5.685702800750732
    4. ' de' → logprob: -7.560702800750732
    5. ' dans' → logprob: -7.810702800750732
    6. ',' → logprob: -8.31070327758789
    7. 's' → logprob: -8.43570327758789
    8. '_' → logprob: -8.43570327758789
    9. ' i' → logprob: -8.93570327758789
    10. ')' → logprob: -8.93570327758789

Token 255: ' la' (ID: 557)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.07891479134559631
    2. ' cake' → logprob: -2.5789148807525635
    3. 'c' → logprob: -11.203914642333984
    4. 'cakes' → logprob: -11.453914642333984
    5. 'cak' → logprob: -15.578914642333984
    6. 'cube' → logprob: -15.953914642333984
    7. 'Cake' → logprob: -16.453914642333984
    8. 'cade' → logprob: -16.703914642333984
    9. 'range' → logprob: -16.703914642333984
    10. ' cakes' → logprob: -16.703914642333984

Token 256: ' liste' (ID: 31719)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.0031996930483728647
    2. ' cake' → logprob: -5.753199577331543
    3. 'cakes' → logprob: -11.003199577331543
    4. 'c' → logprob: -12.753199577331543
    5. 'cak' → logprob: -13.503199577331543
    6. 'cade' → logprob: -14.753199577331543
    7. 'cook' → logprob: -16.12820053100586
    8. 'car' → logprob: -16.25320053100586
    9. 'Cake' → logprob: -16.75320053100586
    10. 'range' → logprob: -16.87820053100586

Token 257: ' cake' (ID: 22162)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.4293847978115082
    2. ' cake' → logprob: -1.0543848276138306
    3. 'cakes' → logprob: -7.679384708404541
    4. 'c' → logprob: -8.9293851852417
    5. ' cakes' → logprob: -10.6793851852417
    6. 'for' → logprob: -10.9293851852417
    7. '(c' → logprob: -12.3043851852417
    8. ' for' → logprob: -12.4293851852417
    9. 'de' → logprob: -12.5543851852417
    10. ' ' → logprob: -12.6168851852417

Token 258: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023729538545012474
    2. ':
' → logprob: -4.02372932434082
    3. 'for' → logprob: -5.39872932434082
    4. ':c' → logprob: -7.77372932434082
    5. ' for' → logprob: -8.39872932434082
    6. 'c' → logprob: -8.52372932434082
    7. ',' → logprob: -9.64872932434082
    8. 's' → logprob: -10.39872932434082
    9. 'n' → logprob: -10.52372932434082
    10. 'in' → logprob: -11.27372932434082

Token 259: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016092435689643025
    2. ' for' → logprob: -7.1266093254089355
    3. ':' → logprob: -7.2516093254089355
    4. 'c' → logprob: -10.126608848571777
    5. ':
' → logprob: -10.251608848571777
    6. '
' → logprob: -11.251608848571777
    7. ':c' → logprob: -13.001608848571777
    8. 'pour' → logprob: -13.501608848571777
    9. '   ' → logprob: -14.126608848571777
    10. '```' → logprob: -14.126608848571777

Token 260: ' Chaque' (ID: 94758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. ' for' → logprob: -12.625003814697266
    3. 'c' → logprob: -16.875003814697266
    4. '
' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '```' → logprob: -19.250003814697266
    7. 'f' → logprob: -19.625003814697266
    8. '	for' → logprob: -20.125003814697266
    9. 'from' → logprob: -20.250003814697266
    10. 'fo' → logprob: -20.750003814697266

Token 261: ' "' (ID: 392)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3146320581436157
    2. 'c' → logprob: -1.3146320581436157
    3. '_' → logprob: -7.189631938934326
    4. '_c' → logprob: -8.564632415771484
    5. ' _' → logprob: -9.064632415771484
    6. ' ' → logprob: -9.314632415771484
    7. ' cake' → logprob: -10.689632415771484
    8. '	c' → logprob: -11.064632415771484
    9. ' ' → logprob: -11.064632415771484
    10. 'cake' → logprob: -11.127132415771484

Token 262: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006396461394615471
    2. ' c' → logprob: -7.37563943862915
    3. 'cake' → logprob: -12.875639915466309
    4. 'for' → logprob: -13.125639915466309
    5. 'i' → logprob: -13.500639915466309
    6. ')' → logprob: -13.938139915466309
    7. ' for' → logprob: -14.250639915466309
    8. '(' → logprob: -14.688139915466309
    9. ')c' → logprob: -14.688139915466309
    10. '_' → logprob: -14.938139915466309

Token 263: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06345498561859131
    2. '=' → logprob: -3.563455104827881
    3. '"' → logprob: -4.188455104827881
    4. ' "' → logprob: -4.563455104827881
    5. ' in' → logprob: -5.188455104827881
    6. ' ="' → logprob: -7.188455104827881
    7. '="' → logprob: -8.063454627990723
    8. ')' → logprob: -9.313454627990723
    9. ' est' → logprob: -9.313454627990723
    10. ' ' → logprob: -9.313454627990723

Token 264: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5004886984825134
    2. ' =' → logprob: -1.6254887580871582
    3. '=' → logprob: -2.125488758087158
    4. 'in' → logprob: -3.125488758087158
    5. ':' → logprob: -5.125488758087158
    6. ' for' → logprob: -5.125488758087158
    7. ' est' → logprob: -5.375488758087158
    8. 'for' → logprob: -5.625488758087158
    9. ')' → logprob: -6.000488758087158
    10. '[' → logprob: -6.375488758087158

Token 265: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9236236214637756
    2. ' cake' → logprob: -1.0486235618591309
    3. 'c' → logprob: -2.298623561859131
    4. ' c' → logprob: -2.923623561859131
    5. 'cake' → logprob: -3.423623561859131
    6. '[' → logprob: -4.048623561859131
    7. 'une' → logprob: -4.548623561859131
    8. ' in' → logprob: -4.673623561859131
    9. ' [' → logprob: -4.923623561859131
    10. ' un' → logprob: -5.423623561859131

Token 266: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3857688903808594
    2. ' trip' → logprob: -1.3857688903808594
    3. ' c' → logprob: -2.1357688903808594
    4. ' liste' → logprob: -2.3857688903808594
    5. ' triple' → logprob: -2.8857688903808594
    6. 'c' → logprob: -3.0107688903808594
    7. 'trip' → logprob: -3.2607688903808594
    8. ' [' → logprob: -3.7607688903808594
    9. '   ' → logprob: -3.8857688903808594
    10. 'liste' → logprob: -3.8857688903808594

Token 267: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32677704095840454
    2. 'in' → logprob: -1.9517769813537598
    3. 'de' → logprob: -2.8267769813537598
    4. ' de' → logprob: -3.5767769813537598
    5. ' en' → logprob: -4.20177698135376
    6. 'en' → logprob: -4.20177698135376
    7. 'dans' → logprob: -5.07677698135376
    8. ' dans' → logprob: -6.07677698135376
    9. 'c' → logprob: -6.57677698135376
    10. 'for' → logprob: -6.70177698135376

Token 268: ' ' (ID: 220)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.7712744474411011
    2. '3' → logprob: -1.271274447441101
    3. 'tro' → logprob: -1.396274447441101
    4. '[' → logprob: -5.646274566650391
    5. 'c' → logprob: -5.771274566650391
    6. ' three' → logprob: -7.146274566650391
    7. ' ' → logprob: -7.396274566650391
    8. 'three' → logprob: -7.396274566650391
    9. 'length' → logprob: -8.64627456665039
    10. 't' → logprob: -8.89627456665039

Token 269: '3' (ID: 18)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.47562897205352783
    2. '3' → logprob: -0.9756289720535278
    3. ' trois' → logprob: -6.725628852844238
    4. '[' → logprob: -8.975628852844238
    5. 'three' → logprob: -8.975628852844238
    6. 'int' → logprob: -10.225628852844238
    7. ' ' → logprob: -10.850628852844238
    8. 'c' → logprob: -11.350628852844238
    9. 'long' → logprob: -11.850628852844238
    10. 'trip' → logprob: -12.600628852844238

Token 270: ' ent' (ID: 1121)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -1.4809011220932007
    2. 'ent' → logprob: -1.9809011220932007
    3. ' ent' → logprob: -2.3559012413024902
    4. '[' → logprob: -2.3559012413024902
    5. 'élé' → logprob: -2.6059012413024902
    6. ',' → logprob: -2.6059012413024902
    7. 'for' → logprob: -2.8559012413024902
    8. '_' → logprob: -2.9809012413024902
    9. 'int' → logprob: -3.3559012413024902
    10. '=' → logprob: -4.10590124130249

Token 271: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.6165036559104919
    2. 'er' → logprob: -1.3665037155151367
    3. 'iers' → logprob: -2.4915037155151367
    4. 'ière' → logprob: -2.8665037155151367
    5. 're' → logprob: -4.241503715515137
    6. 'ières' → logprob: -4.741503715515137
    7. 'rée' → logprob: -5.241503715515137
    8. '=' → logprob: -5.616503715515137
    9. '```' → logprob: -5.741503715515137
    10. 'r' → logprob: -5.741503715515137

Token 272: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10141795128583908
    2. 'for' → logprob: -2.9764180183410645
    3. ':
' → logprob: -3.7264180183410645
    4. ' for' → logprob: -3.9764180183410645
    5. ',' → logprob: -6.2264180183410645
    6. ' :' → logprob: -8.851417541503906
    7. ')' → logprob: -8.976417541503906
    8. '   ' → logprob: -8.976417541503906
    9. 'in' → logprob: -9.601417541503906
    10. ':c' → logprob: -10.476417541503906

Token 273: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5772061944007874
    2. ' for' → logprob: -0.8272061944007874
    3. 'c' → logprob: -7.952206134796143
    4. '   ' → logprob: -7.952206134796143
    5. ' c' → logprob: -8.4522066116333
    6. ':' → logprob: -8.8272066116333
    7. ')' → logprob: -9.7022066116333
    8. ' ' → logprob: -10.8272066116333
    9. 'range' → logprob: -10.9522066116333
    10. ' range' → logprob: -11.3272066116333

Token 274: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2764468193054199
    2. ' =' → logprob: -1.90144681930542
    3. '=' → logprob: -2.90144681930542
    4. '_' → logprob: -4.65144681930542
    5. '0' → logprob: -4.90144681930542
    6. '_x' → logprob: -5.02644681930542
    7. 'x' → logprob: -5.27644681930542
    8. '1' → logprob: -5.90144681930542
    9. 's' → logprob: -6.52644681930542
    10. ')' → logprob: -6.65144681930542

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013345632702112198
    2. ']' → logprob: -4.763345718383789
    3. '[' → logprob: -5.388345718383789
    4. ']
' → logprob: -9.638345718383789
    5. '][' → logprob: -10.763345718383789
    6. ' ' → logprob: -10.888345718383789
    7. '
' → logprob: -11.513345718383789
    8. '])' → logprob: -12.138345718383789
    9. '3' → logprob: -12.263345718383789
    10. ' ]' → logprob: -12.388345718383789

Token 276: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11310426145792007
    2. '],' → logprob: -2.3631043434143066
    3. ',' → logprob: -4.613104343414307
    4. ']+' → logprob: -7.738104343414307
    5. ' ]' → logprob: -7.738104343414307
    6. '+' → logprob: -8.113103866577148
    7. 'for' → logprob: -8.363103866577148
    8. '#' → logprob: -8.613103866577148
    9. ' ,' → logprob: -8.863103866577148
    10. ']
' → logprob: -8.863103866577148

Token 277: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5791181921958923
    2. 'c' → logprob: -0.8291181921958923
    3. ',' → logprob: -6.704118251800537
    4. ' ,' → logprob: -6.954118251800537
    5. ' ' → logprob: -7.079118251800537
    6. ',c' → logprob: -9.829117774963379
    7. ' ' → logprob: -10.079117774963379
    8. '0' → logprob: -10.829117774963379
    9. '  ' → logprob: -11.329117774963379
    10. '	c' → logprob: -11.829117774963379

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02595839835703373
    2. ',' → logprob: -3.775958299636841
    3. ']' → logprob: -6.65095853805542
    4. '1' → logprob: -7.15095853805542
    5. '0' → logprob: -8.150958061218262
    6. '],' → logprob: -8.650958061218262
    7. '[
' → logprob: -9.525958061218262
    8. ' ,' → logprob: -10.150958061218262
    9. '```' → logprob: -11.400958061218262
    10. 'c' → logprob: -11.900958061218262

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10146589577198029
    2. '0' → logprob: -2.351465940475464
    3. ']' → logprob: -6.726465702056885
    4. '],' → logprob: -10.351466178894043
    5. ' ]' → logprob: -12.101466178894043
    6. ' ' → logprob: -12.226466178894043
    7. '2' → logprob: -12.726466178894043
    8. '```' → logprob: -13.101466178894043
    9. '[' → logprob: -13.226466178894043
    10. ',' → logprob: -13.351466178894043

Token 280: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.05375930294394493
    2. ']' → logprob: -3.0537593364715576
    3. ',' → logprob: -5.3037590980529785
    4. '),' → logprob: -10.303759574890137
    5. ' ],' → logprob: -10.428759574890137
    6. '],
' → logprob: -10.678759574890137
    7. ']+' → logprob: -10.803759574890137
    8. 'c' → logprob: -11.303759574890137
    9. ']
' → logprob: -11.303759574890137
    10. ' ,' → logprob: -11.303759574890137

Token 281: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5762515068054199
    2. ' c' → logprob: -0.8262515068054199
    3. ' ,' → logprob: -8.951251983642578
    4. ',' → logprob: -9.076251983642578
    5. ' ' → logprob: -10.201251983642578
    6. ',c' → logprob: -11.076251983642578
    7. ' ' → logprob: -11.701251983642578
    8. ' 
' → logprob: -13.076251983642578
    9. '	c' → logprob: -13.201251983642578
    10. '   ' → logprob: -14.576251983642578

Token 282: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3156917691230774
    2. ']' → logprob: -1.8156917095184326
    3. ')' → logprob: -3.1906917095184326
    4. 'for' → logprob: -3.1906917095184326
    5. ',' → logprob: -4.315691947937012
    6. '0' → logprob: -5.190691947937012
    7. '])' → logprob: -7.190691947937012
    8. ' =' → logprob: -7.440691947937012
    9. 's' → logprob: -7.690691947937012
    10. '3' → logprob: -7.690691947937012

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12981359660625458
    2. '0' → logprob: -2.1298136711120605
    3. ']' → logprob: -6.5048136711120605
    4. '1' → logprob: -7.0048136711120605
    5. '])' → logprob: -8.504813194274902
    6. '],' → logprob: -9.629813194274902
    7. '
' → logprob: -10.004813194274902
    8. '[' → logprob: -10.129813194274902
    9. ' ' → logprob: -10.254813194274902
    10. ',' → logprob: -11.379813194274902

Token 284: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011245520785450935
    2. ']:' → logprob: -5.2612457275390625
    3. ']
' → logprob: -5.6362457275390625
    4. ')' → logprob: -7.3862457275390625
    5. '])' → logprob: -7.5112457275390625
    6. ' ]' → logprob: -7.6362457275390625
    7. ']:
' → logprob: -8.636245727539062
    8. '],' → logprob: -9.261245727539062
    9. ')]' → logprob: -9.386245727539062
    10. '):' → logprob: -9.886245727539062

Token 285: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.625
    3. '```' → logprob: -18.125
    4. '
' → logprob: -18.75
    5. '   ' → logprob: -21.0
    6. 'pour' → logprob: -21.5
    7. '	for' → logprob: -22.0
    8. ']' → logprob: -22.0
    9. ':' → logprob: -22.25
    10. ')' → logprob: -22.25

Token 286: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3869033455848694
    2. 'c' → logprob: -1.1369032859802246
    3. '	c' → logprob: -11.636903762817383
    4. ' ' → logprob: -11.636903762817383
    5. ' ' → logprob: -11.886903762817383
    6. '_' → logprob: -12.511903762817383
    7. '_c' → logprob: -13.511903762817383
    8. 'i' → logprob: -14.511903762817383
    9. ' _' → logprob: -14.511903762817383
    10. ' i' → logprob: -14.636903762817383

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1431894302368164
    2. 'in' → logprob: -2.0181894302368164
    3. ' ' → logprob: -8.143189430236816
    4. '[' → logprob: -9.643189430236816
    5. ',' → logprob: -9.893189430236816
    6. 's' → logprob: -10.393189430236816
    7. '  ' → logprob: -11.143189430236816
    8. ')' → logprob: -11.518189430236816
    9. 'i' → logprob: -11.768189430236816
    10. ' i' → logprob: -11.893189430236816

Token 288: ' cake' (ID: 22162)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.25194743275642395
    2. ' cake' → logprob: -1.5019474029541016
    3. 'c' → logprob: -11.001947402954102
    4. 'cakes' → logprob: -13.501947402954102
    5. 'cak' → logprob: -16.5019474029541
    6. '	c' → logprob: -16.7519474029541
    7. 'cube' → logprob: -16.7519474029541
    8. 'Cake' → logprob: -17.3769474029541
    9. 'car' → logprob: -17.6269474029541
    10. ' cakes' → logprob: -17.8769474029541

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008146316395141184
    2. ':
' → logprob: -7.125814437866211
    3. ' :' → logprob: -12.000814437866211
    4. ',' → logprob: -13.625814437866211
    5. '):' → logprob: -14.000814437866211
    6. ':
' → logprob: -14.375814437866211
    7. ')' → logprob: -15.375814437866211
    8. ':list' → logprob: -15.375814437866211
    9. '[' → logprob: -15.750814437866211
    10. '   ' → logprob: -15.875814437866211

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018207652494311333
    2. ':' → logprob: -4.393207550048828
    3. '    
' → logprob: -6.018207550048828
    4. ' for' → logprob: -6.518207550048828
    5. ' ' → logprob: -7.143207550048828
    6. '  ' → logprob: -8.643207550048828
    7. '[' → logprob: -9.393207550048828
    8. ',' → logprob: -9.393207550048828
    9. '
' → logprob: -9.768207550048828
    10. ' 
' → logprob: -9.768207550048828

Token 291: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44147664308547974
    2. '   ' → logprob: -1.441476583480835
    3. ' for' → logprob: -2.191476583480835
    4. 's' → logprob: -5.691476821899414
    5. 'values' → logprob: -6.691476821899414
    6. 'vals' → logprob: -7.316476821899414
    7. ' s' → logprob: -7.691476821899414
    8. 'v' → logprob: -7.816476821899414
    9. '    
' → logprob: -7.816476821899414
    10. 'val' → logprob: -8.066476821899414

Token 292: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0816788449883461
    2. 'values' → logprob: -3.581678867340088
    3. 'vals' → logprob: -3.956678867340088
    4. 'x' → logprob: -4.206678867340088
    5. 's' → logprob: -5.081678867340088
    6. 'scores' → logprob: -6.081678867340088
    7. ' for' → logprob: -6.206678867340088
    8. 'coords' → logprob: -6.206678867340088
    9. 'val' → logprob: -6.331678867340088
    10. '   ' → logprob: -7.081678867340088

Token 293: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15828664600849152
    2. ' i' → logprob: -2.1582865715026855
    3. 's' → logprob: -4.2832865715026855
    4. 'sign' → logprob: -5.2832865715026855
    5. ' s' → logprob: -5.2832865715026855
    6. 'mask' → logprob: -6.6582865715026855
    7. 'j' → logprob: -6.9082865715026855
    8. ' mask' → logprob: -7.4082865715026855
    9. ' sign' → logprob: -7.4082865715026855
    10. ' signs' → logprob: -7.5332865715026855

Token 294: ' combinaison' (ID: 165933)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0417209193110466
    2. 's' → logprob: -3.6667208671569824
    3. 'sign' → logprob: -4.666720867156982
    4. 'mask' → logprob: -5.916720867156982
    5. ' i' → logprob: -6.666720867156982
    6. 'j' → logprob: -7.666720867156982
    7. 'k' → logprob: -7.791720867156982
    8. ' s' → logprob: -8.79172134399414
    9. 'x' → logprob: -9.41672134399414
    10. 'idx' → logprob: -9.41672134399414

Token 295: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09431230276823044
    2. ' i' → logprob: -3.2193121910095215
    3. '   ' → logprob: -4.3443121910095215
    4. ' in' → logprob: -4.9693121910095215
    5. ' of' → logprob: -5.3443121910095215
    6. '    ' → logprob: -5.4693121910095215
    7. 's' → logprob: -5.7193121910095215
    8. 'de' → logprob: -5.7193121910095215
    9. ' des' → logprob: -5.8443121910095215
    10. ' s' → logprob: -5.8443121910095215

Token 296: ' signes' (ID: 133923)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.8876473307609558
    2. 's' → logprob: -1.1376473903656006
    3. 'i' → logprob: -1.7626473903656006
    4. ' signs' → logprob: -3.2626473903656006
    5. ' signes' → logprob: -4.1376471519470215
    6. 'range' → logprob: -4.6376471519470215
    7. '[' → logprob: -4.8876471519470215
    8. ' s' → logprob: -5.5126471519470215
    9. ' signe' → logprob: -5.7626471519470215
    10. 'k' → logprob: -6.3876471519470215

Token 297: ' possible' (ID: 4149)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9825855493545532
    2. '   ' → logprob: -1.3575855493545532
    3. ' i' → logprob: -1.4825855493545532
    4. 'sign' → logprob: -3.7325854301452637
    5. ' s' → logprob: -3.8575854301452637
    6. ' for' → logprob: -4.107585430145264
    7. 'in' → logprob: -4.232585430145264
    8. ' (' → logprob: -4.357585430145264
    9. 's' → logprob: -4.607585430145264
    10. ',' → logprob: -5.107585430145264

Token 298: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32143470644950867
    2. ':' → logprob: -2.071434736251831
    3. ' for' → logprob: -3.321434736251831
    4. ' in' → logprob: -3.821434736251831
    5. 'sign' → logprob: -3.821434736251831
    6. ' s' → logprob: -4.571434497833252
    7. ' i' → logprob: -4.571434497833252
    8. 'for' → logprob: -4.946434497833252
    9. ' :' → logprob: -4.946434497833252
    10. ' (' → logprob: -5.196434497833252

Token 299: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5721627473831177
    2. ' range' → logprob: -1.0721627473831177
    3. '[' → logprob: -2.822162628173828
    4. 'i' → logprob: -4.197162628173828
    5. ' i' → logprob: -5.072162628173828
    6. '(' → logprob: -5.572162628173828
    7. '(range' → logprob: -5.697162628173828
    8. '[i' → logprob: -5.822162628173828
    9. ' [' → logprob: -6.822162628173828
    10. '[-' → logprob: -7.947162628173828

Token 300: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41660943627357483
    2. '[' → logprob: -1.7916094064712524
    3. ' range' → logprob: -1.9166094064712524
    4. '(' → logprob: -4.541609287261963
    5. '[-' → logprob: -5.041609287261963
    6. ' [' → logprob: -6.166609287261963
    7. '3' → logprob: -6.541609287261963
    8. 'i' → logprob: -6.541609287261963
    9. '(range' → logprob: -6.541609287261963
    10. '[i' → logprob: -7.041609287261963

Token 301: '3' (ID: 18)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7065361738204956
    2. '[' → logprob: -0.8315361738204956
    3. '(' → logprob: -3.331536293029785
    4. '3' → logprob: -4.706536293029785
    5. 'c' → logprob: -4.706536293029785
    6. '[-' → logprob: -4.956536293029785
    7. ' range' → logprob: -5.831536293029785
    8. '(range' → logprob: -5.831536293029785
    9. '(+' → logprob: -7.206536293029785
    10. '[c' → logprob: -7.581536293029785

Token 302: ' éléments' (ID: 57375)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.7950550317764282
    2. ' axes' → logprob: -1.7950550317764282
    3. 'indices' → logprob: -2.1700549125671387
    4. 'i' → logprob: -2.5450549125671387
    5. ' c' → logprob: -2.7950549125671387
    6. ' signes' → logprob: -2.7950549125671387
    7. 'c' → logprob: -2.9200549125671387
    8. 'axes' → logprob: -3.0450549125671387
    9. ' range' → logprob: -3.0450549125671387
    10. ' i' → logprob: -3.0450549125671387

Token 303: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.267278254032135
    2. ':' → logprob: -1.6422781944274902
    3. ' :' → logprob: -4.64227819442749
    4. ' (' → logprob: -5.01727819442749
    5. ' for' → logprob: -5.01727819442749
    6. '    ' → logprob: -5.76727819442749
    7. '(' → logprob: -6.01727819442749
    8. '       ' → logprob: -6.01727819442749
    9. 'for' → logprob: -6.14227819442749
    10. ',' → logprob: -6.39227819442749

Token 304: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07387678325176239
    2. ' for' → logprob: -3.0738768577575684
    3. 'for' → logprob: -3.6988768577575684
    4. '       ' → logprob: -9.19887638092041
    5. '    ' → logprob: -9.94887638092041
    6. '	for' → logprob: -10.07387638092041
    7. '  ' → logprob: -11.57387638092041
    8. ' ' → logprob: -12.07387638092041
    9. ' s' → logprob: -12.94887638092041
    10. '   ' → logprob: -13.32387638092041

Token 305: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991435706615448
    2. 'for' → logprob: -1.2491436004638672
    3. ' for' → logprob: -2.374143600463867
    4. '    ' → logprob: -4.499143600463867
    5. 'range' → logprob: -7.749143600463867
    6. '       ' → logprob: -8.249143600463867
    7. 's' → logprob: -8.374143600463867
    8. ' range' → logprob: -8.624143600463867
    9. ' va' → logprob: -8.999143600463867
    10. '  ' → logprob: -9.624143600463867

Token 306: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0020173825323581696
    2. 'ul' → logprob: -6.377017498016357
    3. 'cule' → logprob: -8.3770170211792
    4. 'ulte' → logprob: -10.2520170211792
    5. 'u' → logprob: -10.8770170211792
    6. 'ue' → logprob: -12.1270170211792
    7. 'ute' → logprob: -12.2520170211792
    8. 'ulé' → logprob: -12.2520170211792
    9. 'ulate' → logprob: -12.3770170211792
    10. 'uler' → logprob: -13.0020170211792

Token 307: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6023460626602173
    2. 's' → logprob: -2.1023459434509277
    3. ' val' → logprob: -2.1023459434509277
    4. '   ' → logprob: -2.9773459434509277
    5. 'val' → logprob: -2.9773459434509277
    6. 'sum' → logprob: -3.7273459434509277
    7. ' sum' → logprob: -3.8523459434509277
    8. '[' → logprob: -5.477345943450928
    9. 'x' → logprob: -5.477345943450928
    10. ' sums' → logprob: -5.977345943450928

Token 308: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7513237595558167
    2. 'val' → logprob: -1.1263236999511719
    3. 'x' → logprob: -2.876323699951172
    4. 'for' → logprob: -3.626323699951172
    5. 'vals' → logprob: -3.626323699951172
    6. 'values' → logprob: -3.751323699951172
    7. 'v' → logprob: -3.876323699951172
    8. 'sum' → logprob: -4.501323699951172
    9. 'value' → logprob: -4.626323699951172
    10. 'scores' → logprob: -4.876323699951172

Token 309: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05303467810153961
    2. '    ' → logprob: -4.053034782409668
    3. 'for' → logprob: -4.678034782409668
    4. '(' → logprob: -4.678034782409668
    5. ' for' → logprob: -5.428034782409668
    6. 'sign' → logprob: -5.928034782409668
    7. '       ' → logprob: -6.053034782409668
    8. ',' → logprob: -6.678034782409668
    9. '(sign' → logprob: -6.928034782409668
    10. 's' → logprob: -7.553034782409668

Token 310: 'ante' (ID: 2116)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5932594537734985
    2. '   ' → logprob: -1.3432594537734985
    3. 'for' → logprob: -2.593259334564209
    4. ' =' → logprob: -3.093259334564209
    5. 'u' → logprob: -4.218259334564209
    6. 'ue' → logprob: -4.593259334564209
    7. '       ' → logprob: -5.468259334564209
    8. ' for' → logprob: -5.468259334564209
    9. 'ut' → logprob: -5.468259334564209
    10. '=sum' → logprob: -5.593259334564209

Token 311: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06919718533754349
    2. ':' → logprob: -2.944197177886963
    3. '       ' → logprob: -5.069197177886963
    4. ' for' → logprob: -6.069197177886963
    5. ' :' → logprob: -6.569197177886963
    6. 'for' → logprob: -6.694197177886963
    7. ',' → logprob: -6.819197177886963
    8. '    ' → logprob: -6.944197177886963
    9. '(' → logprob: -7.569197177886963
    10. '[' → logprob: -9.069197654724121

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045549530535936356
    2. ' for' → logprob: -3.2955496311187744
    3. 'for' → logprob: -4.920549392700195
    4. '	for' → logprob: -9.045549392700195
    5. '   ' → logprob: -10.545549392700195
    6. '    ' → logprob: -10.920549392700195
    7. '       ' → logprob: -11.670549392700195
    8. ' ' → logprob: -12.795549392700195
    9. ' s' → logprob: -12.920549392700195
    10. 's' → logprob: -13.420549392700195

Token 313: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1055857315659523
    2. '   ' → logprob: -2.480585813522339
    3. ' for' → logprob: -4.10558557510376
    4. 's' → logprob: -11.230586051940918
    5. '	for' → logprob: -12.480586051940918
    6. 'sign' → logprob: -12.730586051940918
    7. '    
' → logprob: -13.230586051940918
    8. ' s' → logprob: -14.105586051940918
    9. '  ' → logprob: -14.105586051940918
    10. '    ' → logprob: -14.230586051940918

Token 314: ' Par' (ID: 3371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5092340111732483
    2. 'for' → logprob: -1.0092339515686035
    3. '   ' → logprob: -3.3842339515686035
    4. ' s' → logprob: -8.259234428405762
    5. 's' → logprob: -8.884234428405762
    6. '    ' → logprob: -9.759234428405762
    7. ' signs' → logprob: -10.634234428405762
    8. '	for' → logprob: -11.009234428405762
    9. ' sums' → logprob: -11.009234428405762
    10. '    
' → logprob: -11.009234428405762

Token 315: ' exemple' (ID: 26320)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22253111004829407
    2. 'for' → logprob: -2.5975310802459717
    3. 'ity' → logprob: -3.0975310802459717
    4. 'sign' → logprob: -3.8475310802459717
    5. 's' → logprob: -3.9725310802459717
    6. ' i' → logprob: -4.097531318664551
    7. 'a' → logprob: -5.597531318664551
    8. 'k' → logprob: -5.722531318664551
    9. ' s' → logprob: -6.347531318664551
    10. 't' → logprob: -6.472531318664551

Token 316: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3408606946468353
    2. ' for' → logprob: -1.5908607244491577
    3. 'for' → logprob: -2.715860605239868
    4. '       ' → logprob: -4.090860843658447
    5. '    ' → logprob: -7.090860843658447
    6. ' s' → logprob: -8.215860366821289
    7. '
' → logprob: -8.465860366821289
    8. ',' → logprob: -9.215860366821289
    9. 'sum' → logprob: -9.215860366821289
    10. '    
' → logprob: -9.465860366821289

Token 317: ' c' (ID: 274)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.5282052159309387
    2. 'for' → logprob: -2.278205156326294
    3. 's' → logprob: -2.653205156326294
    4. ' cakes' → logprob: -2.778205156326294
    5. 'sign' → logprob: -3.403205156326294
    6. 'vals' → logprob: -3.403205156326294
    7. ' signs' → logprob: -3.403205156326294
    8. '   ' → logprob: -3.403205156326294
    9. 'values' → logprob: -4.153205394744873
    10. ' for' → logprob: -4.903205394744873

Token 318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2442810833454132
    2. 'sum' → logprob: -2.619281053543091
    3. '_sum' → logprob: -3.369281053543091
    4. '0' → logprob: -3.744281053543091
    5. 's' → logprob: -3.994281053543091
    6. '_val' → logprob: -4.11928129196167
    7. '_sign' → logprob: -5.24428129196167
    8. 'for' → logprob: -5.36928129196167
    9. 'sign' → logprob: -5.36928129196167
    10. '_' → logprob: -5.61928129196167

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012026121839880943
    2. '[' → logprob: -6.876202583312988
    3. ' ' → logprob: -8.751202583312988
    4. ']' → logprob: -13.251202583312988
    5. '3' → logprob: -13.501202583312988
    6. '][' → logprob: -13.751202583312988
    7. '   ' → logprob: -14.126202583312988
    8. '#' → logprob: -14.188702583312988
    9. ' [' → logprob: -14.313702583312988
    10. '
' → logprob: -14.313702583312988

Token 320: ']+' (ID: 15344)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1048673614859581
    2. '+' → logprob: -2.979867458343506
    3. '+c' → logprob: -3.354867458343506
    4. ',' → logprob: -5.604867458343506
    5. ']' → logprob: -5.854867458343506
    6. ']+' → logprob: -6.354867458343506
    7. '[' → logprob: -6.854867458343506
    8. '   ' → logprob: -6.979867458343506
    9. ' ' → logprob: -7.354867458343506
    10. ' -' → logprob: -7.479867458343506

Token 321: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016122112050652504
    2. ' c' → logprob: -4.141122341156006
    3. '+c' → logprob: -9.516121864318848
    4. '+' → logprob: -12.016121864318848
    5. ' +' → logprob: -12.516121864318848
    6. '   ' → logprob: -13.266121864318848
    7. ' ' → logprob: -13.891121864318848
    8. '	c' → logprob: -14.141121864318848
    9. '-c' → logprob: -15.141121864318848
    10. '  ' → logprob: -15.516121864318848

Token 322: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '0' → logprob: -12.250006675720215
    3. ']' → logprob: -14.750006675720215
    4. '[
' → logprob: -15.000006675720215
    5. '```' → logprob: -16.1250057220459
    6. '[i' → logprob: -16.2500057220459
    7. '][' → logprob: -16.3750057220459
    8. 'import' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.8750057220459
    10. '+' → logprob: -17.0000057220459

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023298701271414757
    2. '0' → logprob: -3.773298740386963
    3. '[' → logprob: -9.898298263549805
    4. ' ' → logprob: -13.648298263549805
    5. ']' → logprob: -13.648298263549805
    6. ']+' → logprob: -15.398298263549805
    7. '
' → logprob: -16.023298263549805
    8. '   ' → logprob: -16.523298263549805
    9. '(' → logprob: -16.648298263549805
    10. '+' → logprob: -16.898298263549805

Token 324: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7160773873329163
    2. '+c' → logprob: -1.0910773277282715
    3. ']+' → logprob: -2.0910773277282715
    4. ' +' → logprob: -3.3410773277282715
    5. ')+' → logprob: -4.5910773277282715
    6. ']' → logprob: -5.4660773277282715
    7. ')' → logprob: -7.2160773277282715
    8. '   ' → logprob: -7.4660773277282715
    9. '+
' → logprob: -9.34107780456543
    10. ',' → logprob: -9.34107780456543

Token 325: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000915039679966867
    2. ' c' → logprob: -7.000915050506592
    3. '+c' → logprob: -12.875914573669434
    4. '+' → logprob: -14.625914573669434
    5. ' +' → logprob: -15.375914573669434
    6. ')c' → logprob: -16.12591552734375
    7. ' ' → logprob: -16.62591552734375
    8. '-c' → logprob: -16.87591552734375
    9. '	c' → logprob: -17.25091552734375
    10. '_c' → logprob: -17.37591552734375

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4391956685576588e-05
    2. ']' → logprob: -10.875024795532227
    3. '0' → logprob: -13.000024795532227
    4. '[
' → logprob: -13.750024795532227
    5. '2' → logprob: -14.250024795532227
    6. '][' → logprob: -14.875024795532227
    7. '[]' → logprob: -15.375024795532227
    8. '+' → logprob: -15.875024795532227
    9. ']+' → logprob: -16.000024795532227
    10. ')' → logprob: -16.000024795532227

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002960585057735443
    2. '0' → logprob: -6.252960681915283
    3. '[' → logprob: -6.877960681915283
    4. ' ' → logprob: -14.252960205078125
    5. ']' → logprob: -15.252960205078125
    6. '```' → logprob: -15.752960205078125
    7. '   ' → logprob: -16.502960205078125
    8. '(' → logprob: -16.877960205078125
    9. '1' → logprob: -17.002960205078125
    10. '۲' → logprob: -18.002960205078125

Token 328: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7025518417358398
    2. '),' → logprob: -1.2025518417358398
    3. ',' → logprob: -1.9525518417358398
    4. ')+' → logprob: -4.32755184173584
    5. '),
' → logprob: -4.45255184173584
    6. '   ' → logprob: -4.70255184173584
    7. ' )' → logprob: -4.95255184173584
    8. ',
' → logprob: -5.20255184173584
    9. ' ),' → logprob: -5.70255184173584
    10. ']' → logprob: -5.82755184173584

Token 329: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014489218592643738
    2. '    ' → logprob: -7.251449108123779
    3. 'for' → logprob: -8.501448631286621
    4. '       ' → logprob: -8.751448631286621
    5. ' for' → logprob: -8.876448631286621
    6. 'c' → logprob: -9.626448631286621
    7. ' ' → logprob: -10.251448631286621
    8. '#' → logprob: -10.251448631286621
    9. '  ' → logprob: -10.626448631286621
    10. ' c' → logprob: -10.876448631286621

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.941161776310764e-05
    2. '#' → logprob: -11.250039100646973
    3. '[-' → logprob: -11.750039100646973
    4. '[
' → logprob: -12.125039100646973
    5. '0' → logprob: -12.250039100646973
    6. '   ' → logprob: -13.625039100646973
    7. 'for' → logprob: -14.250039100646973
    8. ']' → logprob: -14.250039100646973
    9. '```' → logprob: -14.250039100646973
    10. 'def' → logprob: -14.875039100646973

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033652037382125854
    2. '[' → logprob: -3.4086520671844482
    3. '#' → logprob: -12.533652305603027
    4. '-' → logprob: -14.283652305603027
    5. '```' → logprob: -14.658652305603027
    6. '
' → logprob: -14.783652305603027
    7. ' ' → logprob: -14.908652305603027
    8. '1' → logprob: -15.783652305603027
    9. ']' → logprob: -16.22115135192871
    10. '[
' → logprob: -16.28365135192871

Token 332: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3969568908214569
    2. ']+' → logprob: -1.2719569206237793
    3. '+c' → logprob: -3.1469569206237793
    4. ']' → logprob: -6.396956920623779
    5. ')+' → logprob: -6.896956920623779
    6. '-' → logprob: -7.146956920623779
    7. '}+' → logprob: -8.646956443786621
    8. '+m' → logprob: -8.771956443786621
    9. ' +' → logprob: -8.896956443786621
    10. ']-' → logprob: -9.271956443786621

Token 333: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001784894848242402
    2. ' c' → logprob: -6.501784801483154
    3. '+c' → logprob: -8.626785278320312
    4. '-c' → logprob: -9.251785278320312
    5. '+' → logprob: -12.126785278320312
    6. ' +' → logprob: -14.126785278320312
    7. '-' → logprob: -14.626785278320312
    8. '_c' → logprob: -15.501785278320312
    9. '(c' → logprob: -15.626785278320312
    10. ')c' → logprob: -16.126785278320312

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4617256056226324e-05
    2. '1' → logprob: -11.375014305114746
    3. '+' → logprob: -13.875014305114746
    4. '-' → logprob: -14.500014305114746
    5. '[
' → logprob: -14.500014305114746
    6. '[-' → logprob: -14.875014305114746
    7. '0' → logprob: -15.875014305114746
    8. ' ' → logprob: -16.500015258789062
    9. '][' → logprob: -16.625015258789062
    10. ' [' → logprob: -16.750015258789062

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020697296131402254
    2. '[' → logprob: -6.25206995010376
    3. '-' → logprob: -9.627069473266602
    4. ' ' → logprob: -10.127069473266602
    5. '0' → logprob: -10.877069473266602
    6. '2' → logprob: -12.377069473266602
    7. '(' → logprob: -12.627069473266602
    8. '
' → logprob: -13.502069473266602
    9. '+' → logprob: -13.752069473266602
    10. ']' → logprob: -13.752069473266602

Token 336: ']-' (ID: 27107)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.32797712087631226
    2. '+' → logprob: -1.327977180480957
    3. '+c' → logprob: -4.452977180480957
    4. ')+' → logprob: -6.077977180480957
    5. ']' → logprob: -7.702977180480957
    6. '}+' → logprob: -9.327977180480957
    7. '[' → logprob: -10.077977180480957
    8. ']+=' → logprob: -11.077977180480957
    9. ' +' → logprob: -11.202977180480957
    10. '+]' → logprob: -11.702977180480957

Token 337: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02324594371020794
    2. ' c' → logprob: -3.7732460498809814
    3. ' ' → logprob: -16.02324676513672
    4. '<|end|>' → logprob: -16.14824676513672
    5. '	c' → logprob: -16.52324676513672
    6. ')c' → logprob: -17.02324676513672
    7. '+c' → logprob: -17.39824676513672
    8. '_c' → logprob: -19.14824676513672
    9. '+' → logprob: -19.14824676513672
    10. '(c' → logprob: -19.27324676513672

Token 338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.5
    3. 'c' → logprob: -17.125
    4. '3' → logprob: -17.25
    5. ']' → logprob: -18.0
    6. '2' → logprob: -18.25
    7. '

' → logprob: -18.625
    8. ' [' → logprob: -18.875
    9. '[]' → logprob: -18.875
    10. '[i' → logprob: -19.0

Token 339: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0722858102526516e-05
    2. '[' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.500041007995605
    4. '   ' → logprob: -16.00004005432129
    5. '２' → logprob: -17.25004005432129
    6. '۲' → logprob: -17.75004005432129
    7. '```' → logprob: -18.50004005432129
    8. 'c' → logprob: -18.62504005432129
    9. '₂' → logprob: -19.37504005432129
    10. ']' → logprob: -19.50004005432129

Token 340: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3000654876232147
    2. '),' → logprob: -2.175065517425537
    3. ']' → logprob: -2.550065517425537
    4. ']+' → logprob: -3.675065517425537
    5. ')' → logprob: -3.800065517425537
    6. ',' → logprob: -4.425065517425537
    7. ')+' → logprob: -5.300065517425537
    8. '+' → logprob: -6.425065517425537
    9. ')]' → logprob: -8.300065040588379
    10. ')],' → logprob: -8.550065040588379

Token 341: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14609591662883759
    2. 'c' → logprob: -2.5210959911346436
    3. ' c' → logprob: -3.1460959911346436
    4. '    ' → logprob: -5.8960957527160645
    5. 'for' → logprob: -6.2710957527160645
    6. '	c' → logprob: -6.5210957527160645
    7. '#' → logprob: -6.7710957527160645
    8. ',' → logprob: -6.7710957527160645
    9. ' ' → logprob: -6.8960957527160645
    10. ' for' → logprob: -7.2710957527160645

Token 342: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.317247167928144e-05
    2. ' for' → logprob: -10.375093460083008
    3. 'for' → logprob: -10.625093460083008
    4. '   ' → logprob: -11.375093460083008
    5. '       ' → logprob: -11.875093460083008
    6. '	for' → logprob: -11.875093460083008
    7. '    
' → logprob: -12.375093460083008
    8. ',' → logprob: -13.000093460083008
    9. '
' → logprob: -13.000093460083008
    10. '    ' → logprob: -13.875093460083008

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006568772252649069
    2. 'for' → logprob: -5.256568908691406
    3. ' for' → logprob: -6.631568908691406
    4. '	for' → logprob: -11.881568908691406
    5. '   ' → logprob: -12.256568908691406
    6. '       ' → logprob: -13.256568908691406
    7. '
' → logprob: -14.381568908691406
    8. ' ' → logprob: -14.631568908691406
    9. '    
' → logprob: -14.881568908691406
    10. '  ' → logprob: -14.881568908691406

Token 344: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20476260781288147
    2. '   ' → logprob: -1.704762578010559
    3. ' for' → logprob: -5.7047624588012695
    4. '	for' → logprob: -11.82976245880127
    5. '    
' → logprob: -13.57976245880127
    6. 'sign' → logprob: -13.70476245880127
    7. '  ' → logprob: -14.32976245880127
    8. 's' → logprob: -14.32976245880127
    9. ' ' → logprob: -14.45476245880127
    10. 'i' → logprob: -14.57976245880127

Token 345: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018552233232185245
    2. '   ' → logprob: -6.376855373382568
    3. ' for' → logprob: -8.87685489654541
    4. 's' → logprob: -11.87685489654541
    5. 'sign' → logprob: -12.50185489654541
    6. 'from' → logprob: -14.75185489654541
    7. 'indices' → logprob: -15.00185489654541
    8. '	for' → logprob: -15.12685489654541
    9. '  ' → logprob: -15.12685489654541
    10. 'i' → logprob: -15.25185489654541

Token 346: ' ajoute' (ID: 91611)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47526443004608154
    2. 'for' → logprob: -0.9752644300460815
    3. '   ' → logprob: -6.850264549255371
    4. ' ' → logprob: -9.600264549255371
    5. 's' → logprob: -10.475264549255371
    6. 'or' → logprob: -11.850264549255371
    7. 'r' → logprob: -12.725264549255371
    8. '    ' → logprob: -12.725264549255371
    9. '  ' → logprob: -12.725264549255371
    10. 'f' → logprob: -13.600264549255371

Token 347: ' le' (ID: 505)
  Prédit: ' cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -0.41829341650009155
    2. 'cakes' → logprob: -1.1682934761047363
    3. '   ' → logprob: -4.168293476104736
    4. 'sum' → logprob: -6.418293476104736
    5. ' sum' → logprob: -6.418293476104736
    6. 'c' → logprob: -6.668293476104736
    7. ' cake' → logprob: -6.668293476104736
    8. ' (' → logprob: -6.918293476104736
    9. ' c' → logprob: -6.918293476104736
    10. 'scores' → logprob: -7.418293476104736

Token 348: ' résultat' (ID: 62556)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0225149393081665
    2. 'score' → logprob: -1.3975149393081665
    3. 'c' → logprob: -2.022514820098877
    4. 's' → logprob: -2.272514820098877
    5. ' sum' → logprob: -3.397514820098877
    6. 'result' → logprob: -3.647514820098877
    7. 'for' → logprob: -4.022514820098877
    8. 'val' → logprob: -4.522514820098877
    9. ' score' → logprob: -4.522514820098877
    10. 'total' → logprob: -4.897514820098877

Token 349: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9477676153182983
    2. ',' → logprob: -1.6977676153182983
    3. 's' → logprob: -2.572767734527588
    4. 'dans' → logprob: -2.697767734527588
    5. ' dans' → logprob: -2.947767734527588
    6. '.append' → logprob: -3.072767734527588
    7. 'for' → logprob: -3.197767734527588
    8. '(' → logprob: -3.947767734527588
    9. 'sum' → logprob: -4.197767734527588
    10. 'e' → logprob: -4.447767734527588

Token 350: ' la' (ID: 557)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.005997528787702322
    2. ' cakes' → logprob: -5.130997657775879
    3. 'cake' → logprob: -10.505997657775879
    4. 'cak' → logprob: -11.005997657775879
    5. '   ' → logprob: -12.380997657775879
    6. 'ca' → logprob: -12.755997657775879
    7. ')' → logprob: -12.880997657775879
    8. ' ' → logprob: -13.380997657775879
    9. '
' → logprob: -13.380997657775879
    10. 'cups' → logprob: -13.755997657775879

Token 351: ' sous' (ID: 14487)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.19933591783046722
    2. 'for' → logprob: -1.9493359327316284
    3. 'range' → logprob: -3.949335813522339
    4. ' cakes' → logprob: -4.574336051940918
    5. ' for' → logprob: -5.699336051940918
    6. ' range' → logprob: -6.699336051940918
    7. 'cake' → logprob: -6.949336051940918
    8. 'c' → logprob: -7.699336051940918
    9. 's' → logprob: -7.824336051940918
    10. '   ' → logprob: -8.949336051940918

Token 352: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -1.2046462297439575
    2. 'liste' → logprob: -1.2046462297439575
    3. '_c' → logprob: -2.329646110534668
    4. 'c' → logprob: -2.704646110534668
    5. 's' → logprob: -2.829646110534668
    6. '_list' → logprob: -3.204646110534668
    7. 'list' → logprob: -3.954646110534668
    8. '-c' → logprob: -4.079646110534668
    9. 'es' → logprob: -4.204646110534668
    10. 'for' → logprob: -4.329646110534668

Token 353: 'iste' (ID: 4872)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.1258467435836792
    2. 'iste' → logprob: -1.1258467435836792
    3. 'ine' → logprob: -1.8758467435836792
    4. 'e' → logprob: -3.0008468627929688
    5. 'range' → logprob: -3.0008468627929688
    6. 'en' → logprob: -3.6258468627929688
    7. 'ines' → logprob: -4.000846862792969
    8. 'istes' → logprob: -4.375846862792969
    9. 'ists' → logprob: -5.250846862792969
    10. 'a' → logprob: -5.625846862792969

Token 354: ' appropri' (ID: 71769)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.059790000319480896
    2. ' cakes' → logprob: -4.059790134429932
    3. 's' → logprob: -4.559790134429932
    4. '[c' → logprob: -4.559790134429932
    5. '[i' → logprob: -4.809790134429932
    6. '[' → logprob: -4.809790134429932
    7. 'for' → logprob: -7.309790134429932
    8. '   ' → logprob: -7.684790134429932
    9. 'i' → logprob: -7.809790134429932
    10. '[s' → logprob: -8.059789657592773

Token 355: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.0760157108306885
    2. 'e' → logprob: -2.2010157108306885
    3. 'c' → logprob: -2.4510157108306885
    4. 'é' → logprob: -2.5760157108306885
    5. 'cée' → logprob: -3.2010157108306885
    6. 'es' → logprob: -3.4510157108306885
    7. '.append' → logprob: -3.5760157108306885
    8. ']' → logprob: -3.7010157108306885
    9. 'és' → logprob: -3.7010157108306885
    10. 'érée' → logprob: -3.8260157108306885

Token 356: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2010539323091507
    2. 'for' → logprob: -2.2010538578033447
    3. ' for' → logprob: -2.7010538578033447
    4. ' in' → logprob: -6.701054096221924
    5. ',' → logprob: -7.576054096221924
    6. 'range' → logprob: -7.701054096221924
    7. 'cakes' → logprob: -8.076053619384766
    8. '[' → logprob: -8.201053619384766
    9. '[i' → logprob: -8.451053619384766
    10. 'in' → logprob: -8.576053619384766

Token 357: ' la' (ID: 557)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.0008058178937062621
    2. ' cakes' → logprob: -7.125805854797363
    3. 'cake' → logprob: -13.875805854797363
    4. 'cak' → logprob: -16.000804901123047
    5. '
' → logprob: -16.375804901123047
    6. 'cups' → logprob: -16.875804901123047
    7. 'c' → logprob: -17.250804901123047
    8. '```' → logprob: -17.750804901123047
    9. 'cars' → logprob: -18.250804901123047
    10. 'cookies' → logprob: -18.250804901123047

Token 358: ' liste' (ID: 31719)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -4.6087021473795176e-05
    2. ' cakes' → logprob: -10.750045776367188
    3. 'for' → logprob: -11.250045776367188
    4. 'cake' → logprob: -11.500045776367188
    5. 'cak' → logprob: -14.375045776367188
    6. '
' → logprob: -15.125045776367188
    7. '```' → logprob: -15.500045776367188
    8. 'ca' → logprob: -16.500045776367188
    9. 'cups' → logprob: -16.875045776367188
    10. 'cars' → logprob: -17.125045776367188

Token 359: ' "' (ID: 392)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.0013414350105449557
    2. ' cakes' → logprob: -6.626341342926025
    3. 'cake' → logprob: -11.751341819763184
    4. '   ' → logprob: -13.876341819763184
    5. '"' → logprob: -14.126341819763184
    6. 'for' → logprob: -14.251341819763184
    7. 'cak' → logprob: -14.251341819763184
    8. 'cars' → logprob: -14.626341819763184
    9. 'cups' → logprob: -14.626341819763184
    10. '`' → logprob: -14.876341819763184

Token 360: 'cakes' (ID: 165133)
  Prédit: 'cakes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -3.650518920039758e-06
    2. ' cakes' → logprob: -12.750003814697266
    3. 'cake' → logprob: -14.375003814697266
    4. 'cak' → logprob: -16.250003814697266
    5. 'ca' → logprob: -18.375003814697266
    6. '```' → logprob: -18.750003814697266
    7. 'c' → logprob: -19.000003814697266
    8. 'cups' → logprob: -19.000003814697266
    9. 'cookies' → logprob: -19.125003814697266
    10. '
' → logprob: -19.375003814697266

Token 361: '".
' (ID: 26880)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6369801163673401
    2. '[' → logprob: -1.2619800567626953
    3. '   ' → logprob: -2.3869800567626953
    4. 'for' → logprob: -2.7619800567626953
    5. '[c' → logprob: -4.261980056762695
    6. '][' → logprob: -5.261980056762695
    7. ' for' → logprob: -6.011980056762695
    8. 's' → logprob: -6.136980056762695
    9. '[j' → logprob: -6.636980056762695
    10. ']' → logprob: -6.761980056762695

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11967423558235168
    2. 'for' → logprob: -2.2446742057800293
    3. ' for' → logprob: -4.994674205780029
    4. '	for' → logprob: -10.119674682617188
    5. '   ' → logprob: -12.369674682617188
    6. '    
' → logprob: -12.494674682617188
    7. '
' → logprob: -13.619674682617188
    8. '  ' → logprob: -13.994674682617188
    9. '       ' → logprob: -13.994674682617188
    10. '    ' → logprob: -14.369674682617188

Token 363: ' cakes' (ID: 61222)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3830316364765167
    2. 'for' → logprob: -1.2580316066741943
    3. ' for' → logprob: -3.3830316066741943
    4. '	for' → logprob: -10.383031845092773
    5. '    
' → logprob: -11.633031845092773
    6. '   ' → logprob: -12.258031845092773
    7. ' ' → logprob: -13.258031845092773
    8. '  ' → logprob: -14.008031845092773
    9. '
' → logprob: -14.258031845092773
    10. '    ' → logprob: -14.383031845092773

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02332153171300888
    2. '[c' → logprob: -4.523321628570557
    3. '.append' → logprob: -4.898321628570557
    4. 'for' → logprob: -6.898321628570557
    5. '[i' → logprob: -6.898321628570557
    6. '[-' → logprob: -7.648321628570557
    7. '[
' → logprob: -8.398321151733398
    8. '][' → logprob: -8.523321151733398
    9. 's' → logprob: -8.648321151733398
    10. '[int' → logprob: -8.773321151733398

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000317231344524771
    2. 'i' → logprob: -8.375317573547363
    3. '7' → logprob: -10.125317573547363
    4. ' ' → logprob: -10.375317573547363
    5. 'j' → logprob: -12.625317573547363
    6. ' i' → logprob: -13.000317573547363
    7. 'int' → logprob: -13.500317573547363
    8. 's' → logprob: -13.750317573547363
    9. 'sum' → logprob: -13.875317573547363
    10. '
' → logprob: -13.875317573547363

Token 366: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00010783452307805419
    2. ']' → logprob: -9.500107765197754
    3. ' ].' → logprob: -10.625107765197754
    4. '.append' → logprob: -12.000107765197754
    5. '.' → logprob: -14.000107765197754
    6. '   ' → logprob: -14.625107765197754
    7. '[' → logprob: -14.875107765197754
    8. ']].' → logprob: -15.875107765197754
    9. '][' → logprob: -16.00010871887207
    10. 'append' → logprob: -16.12510871887207

Token 367: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.75
    3. ' append' → logprob: -17.25
    4. 'appen' → logprob: -19.375
    5. 'app' → logprob: -19.75
    6. '_append' → logprob: -21.5
    7. '	append' → logprob: -22.5
    8. 'appe' → logprob: -22.625
    9. 'Append' → logprob: -22.625
    10. ' ' → logprob: -23.125

Token 368: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.010757035575807095
    2. 'c' → logprob: -4.635756969451904
    3. '(' → logprob: -7.010756969451904
    4. ' c' → logprob: -9.385757446289062
    5. '((' → logprob: -12.135757446289062
    6. ' (' → logprob: -12.635757446289062
    7. '+c' → logprob: -12.760757446289062
    8. '(sum' → logprob: -13.760757446289062
    9. '(+' → logprob: -14.260757446289062
    10. '(
' → logprob: -15.260757446289062

Token 369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.179569077678025e-05
    2. '0' → logprob: -10.125041961669922
    3. 'sum' → logprob: -14.625041961669922
    4. '[
' → logprob: -15.625041961669922
    5. 'c' → logprob: -15.750041961669922
    6. '3' → logprob: -15.750041961669922
    7. '1' → logprob: -16.000041961669922
    8. '][' → logprob: -16.375041961669922
    9. ')' → logprob: -16.500041961669922
    10. ' [' → logprob: -16.625041961669922

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '[' → logprob: -15.750003814697266
    4. '2' → logprob: -16.687503814697266
    5. '1' → logprob: -16.812503814697266
    6. '
' → logprob: -16.875003814697266
    7. ']' → logprob: -17.250003814697266
    8. '00' → logprob: -18.062503814697266
    9. '000' → logprob: -18.187503814697266
    10. '][' → logprob: -18.500003814697266

Token 371: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32548797130584717
    2. ' +' → logprob: -1.9504879713058472
    3. ']+' → logprob: -2.8254880905151367
    4. ']' → logprob: -2.9504880905151367
    5. '+c' → logprob: -3.8254880905151367
    6. '+]' → logprob: -7.200488090515137
    7. ')' → logprob: -7.825488090515137
    8. ')+' → logprob: -7.950488090515137
    9. ' ]' → logprob: -8.325488090515137
    10. '+
' → logprob: -9.075488090515137

Token 372: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2018246352672577
    2. ' +' → logprob: -1.95182466506958
    3. '+c' → logprob: -3.20182466506958
    4. '+)' → logprob: -10.326824188232422
    5. '+
' → logprob: -11.451824188232422
    6. ')' → logprob: -11.951824188232422
    7. '   ' → logprob: -13.076824188232422
    8. ')+' → logprob: -13.576824188232422
    9. ' ' → logprob: -13.701824188232422
    10. '+

' → logprob: -13.951824188232422

Token 373: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '+c' → logprob: -18.001171112060547
    4. '   ' → logprob: -18.501171112060547
    5. ')c' → logprob: -18.626171112060547
    6. '+' → logprob: -18.876171112060547
    7. '	c' → logprob: -19.376171112060547
    8. ' +' → logprob: -20.501171112060547
    9. ' ' → logprob: -20.626171112060547
    10. '  ' → logprob: -21.001171112060547

Token 374: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. '1' → logprob: -11.000018119812012
    3. '[
' → logprob: -14.125018119812012
    4. ' [' → logprob: -15.750018119812012
    5. '][' → logprob: -16.250017166137695
    6. 'c' → logprob: -17.000017166137695
    7. 'import' → logprob: -17.750017166137695
    8. ']' → logprob: -17.875017166137695
    9. '+' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.500017166137695

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.452426608419046e-05
    2. '0' → logprob: -11.12503433227539
    3. '[' → logprob: -11.50003433227539
    4. ' ' → logprob: -11.62503433227539
    5. ']' → logprob: -15.12503433227539
    6. '(' → logprob: -15.75003433227539
    7. 'c' → logprob: -16.00003433227539
    8. ' c' → logprob: -16.75003433227539
    9. '   ' → logprob: -17.50003433227539
    10. ')' → logprob: -17.56253433227539

Token 376: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28118354082107544
    2. '+' → logprob: -1.4061834812164307
    3. '+c' → logprob: -11.406183242797852
    4. ']+' → logprob: -12.031183242797852
    5. ')' → logprob: -12.406183242797852
    6. ']' → logprob: -12.656183242797852
    7. '<|end|>' → logprob: -12.781183242797852
    8. '[' → logprob: -13.281183242797852
    9. ')+' → logprob: -13.281183242797852
    10. ' +
' → logprob: -14.156183242797852

Token 377: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25207066535949707
    2. '+' → logprob: -1.502070665359497
    3. '+c' → logprob: -8.877070426940918
    4. ' +
' → logprob: -15.002070426940918
    5. '[' → logprob: -15.127070426940918
    6. '+
' → logprob: -15.127070426940918
    7. ')' → logprob: -15.127070426940918
    8. ' ' → logprob: -15.252070426940918
    9. ')+' → logprob: -16.377071380615234
    10. '   ' → logprob: -16.627071380615234

Token 378: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692894041538239
    2. ' c' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.50192928314209
    4. '   ' → logprob: -15.75192928314209
    5. '  ' → logprob: -16.626928329467773
    6. '	c' → logprob: -16.876928329467773
    7. ')c' → logprob: -17.001928329467773
    8. ' +' → logprob: -18.376928329467773
    9. '
' → logprob: -18.501928329467773
    10. '```' → logprob: -18.626928329467773

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '[
' → logprob: -12.750006675720215
    3. '2' → logprob: -13.125006675720215
    4. '][' → logprob: -13.500006675720215
    5. '0' → logprob: -15.750006675720215
    6. '3' → logprob: -16.12500762939453
    7. ']' → logprob: -16.75000762939453
    8. ' [' → logprob: -16.75000762939453
    9. '<|end|>' → logprob: -17.00000762939453
    10. 'import' → logprob: -17.12500762939453

Token 380: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '[' → logprob: -14.75000286102295
    4. '0' → logprob: -15.12500286102295
    5. ']' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '۲' → logprob: -18.625001907348633
    8. ')' → logprob: -18.875001907348633
    9. '  ' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 381: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02066030167043209
    2. '])' → logprob: -3.895660400390625
    3. ' )' → logprob: -10.395660400390625
    4. ']' → logprob: -10.395660400390625
    5. ')
' → logprob: -11.020660400390625
    6. '))' → logprob: -11.020660400390625
    7. ')])' → logprob: -11.645660400390625
    8. ')]' → logprob: -12.270660400390625
    9. ' ])' → logprob: -12.520660400390625
    10. '   ' → logprob: -13.020660400390625

Token 382: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005977261811494827
    2. 'cakes' → logprob: -5.630977153778076
    3. ' cakes' → logprob: -7.380977153778076
    4. ')' → logprob: -7.505977153778076
    5. 'for' → logprob: -8.005977630615234
    6. ' for' → logprob: -8.755977630615234
    7. '    
' → logprob: -9.130977630615234
    8. '<|end|>' → logprob: -9.130977630615234
    9. 'c' → logprob: -9.505977630615234
    10. ' ' → logprob: -9.630977630615234

Token 383: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7226867079734802
    2. 'cakes' → logprob: -0.7226867079734802
    3. ' cakes' → logprob: -3.597686767578125
    4. ')' → logprob: -6.847686767578125
    5. 'c' → logprob: -8.722686767578125
    6. '    
' → logprob: -9.472686767578125
    7. ' ' → logprob: -9.597686767578125
    8. 'cake' → logprob: -9.722686767578125
    9. ')
' → logprob: -9.847686767578125
    10. '
' → logprob: -9.847686767578125

Token 384: ' Cas' (ID: 8066)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.9903104901313782
    2. 'for' → logprob: -1.4903104305267334
    3. '   ' → logprob: -1.7403104305267334
    4. ')' → logprob: -2.3653104305267334
    5. 'c' → logprob: -2.9903104305267334
    6. ' cakes' → logprob: -3.4903104305267334
    7. '0' → logprob: -3.7403104305267334
    8. ' for' → logprob: -4.1153106689453125
    9. ' ' → logprob: -4.9903106689453125
    10. '  ' → logprob: -7.2403106689453125

Token 385: ' où' (ID: 15113)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5815461277961731
    2. ' ' → logprob: -0.9565461277961731
    3. '[' → logprob: -3.7065460681915283
    4. 's' → logprob: -3.8315460681915283
    5. ' #' → logprob: -5.831546306610107
    6. '1' → logprob: -5.956546306610107
    7. '#' → logprob: -6.081546306610107
    8. ' cakes' → logprob: -7.456546306610107
    9. 'e' → logprob: -7.831546306610107
    10. 'es' → logprob: -7.956546306610107

Token 386: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1146754026412964
    2. 'tout' → logprob: -1.8646754026412964
    3. ' tous' → logprob: -2.114675521850586
    4. 'c' → logprob: -2.114675521850586
    5. 't' → logprob: -2.364675521850586
    6. '+' → logprob: -2.614675521850586
    7. 'on' → logprob: -3.239675521850586
    8. ' les' → logprob: -4.114675521850586
    9. 'l' → logprob: -4.614675521850586
    10. ' on' → logprob: -4.739675521850586

Token 387: ' les' (ID: 1341)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08324061334133148
    2. 's' → logprob: -3.333240509033203
    3. ' +' → logprob: -4.083240509033203
    4. 'les' → logprob: -4.708240509033203
    5. ' les' → logprob: -4.833240509033203
    6. ' signes' → logprob: -5.458240509033203
    7. '+++' → logprob: -6.333240509033203
    8. '<|end|>' → logprob: -6.708240509033203
    9. 'sign' → logprob: -7.083240509033203
    10. 'des' → logprob: -8.208240509033203

Token 388: ' éléments' (ID: 57375)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008499100804328918
    2. 'sign' → logprob: -5.1334991455078125
    3. 's' → logprob: -6.3834991455078125
    4. '+++' → logprob: -7.8834991455078125
    5. ' signes' → logprob: -8.383499145507812
    6. 'plus' → logprob: -9.508499145507812
    7. ' +' → logprob: -9.883499145507812
    8. '+</' → logprob: -10.258499145507812
    9. '++' → logprob: -10.758499145507812
    10. 'c' → logprob: -11.258499145507812

Token 389: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4076699912548065
    2. '+' → logprob: -1.657670021057129
    3. ' sont' → logprob: -2.032670021057129
    4. 'ont' → logprob: -4.657670021057129
    5. ' are' → logprob: -6.782670021057129
    6. 'plus' → logprob: -7.532670021057129
    7. ' ont' → logprob: -7.657670021057129
    8. ' +' → logprob: -8.282670021057129
    9. '+s' → logprob: -8.282670021057129
    10. 'are' → logprob: -8.657670021057129

Token 390: ' addition' (ID: 5856)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07527017593383789
    2. 'posit' → logprob: -2.700270175933838
    3. 'plus' → logprob: -5.700270175933838
    4. 'positive' → logprob: -7.075270175933838
    5. 'pos' → logprob: -8.20026969909668
    6. ' +' → logprob: -8.32526969909668
    7. '+)' → logprob: -9.32526969909668
    8. 's' → logprob: -9.82526969909668
    9. ' positivos' → logprob: -9.95026969909668
    10. '+'' → logprob: -10.07526969909668

Token 391: 'nés' (ID: 72145)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6729916334152222
    2. '+' → logprob: -1.1729916334152222
    3. ')' → logprob: -2.9229917526245117
    4. 'nés' → logprob: -3.0479917526245117
    5. 's' → logprob: -3.4229917526245117
    6. 'és' → logprob: -4.547991752624512
    7. 'n' → logprob: -4.797991752624512
    8. 'nées' → logprob: -4.922991752624512
    9. 'ner' → logprob: -5.047991752624512
    10. '   ' → logprob: -6.047991752624512

Token 392: ' posit' (ID: 13047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012380964122712612
    2. ')' → logprob: -5.387381076812744
    3. 'cakes' → logprob: -5.512381076812744
    4. '
' → logprob: -7.012381076812744
    5. ' cakes' → logprob: -7.012381076812744
    6. 'for' → logprob: -7.637381076812744
    7. '    
' → logprob: -7.887381076812744
    8. ')
' → logprob: -8.512380599975586
    9. '<|end|>' → logprob: -9.012380599975586
    10. ' for' → logprob: -9.137380599975586

Token 393: 'ivement' (ID: 37978)
  Prédit: 'ifs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.007877037860453129
    2. 'if' → logprob: -4.882876873016357
    3. 'i' → logprob: -9.007877349853516
    4. 'ivement' → logprob: -9.132877349853516
    5. 'ivs' → logprob: -11.757877349853516
    6. 'es' → logprob: -11.882877349853516
    7. '```' → logprob: -12.132877349853516
    8. 'ive' → logprob: -12.382877349853516
    9. 's' → logprob: -12.632877349853516
    10. 'e' → logprob: -12.757877349853516

Token 394: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08255898952484131
    2. 'cakes' → logprob: -2.582559108734131
    3. ' cakes' → logprob: -5.707559108734131
    4. ')' → logprob: -9.707558631896973
    5. 'c' → logprob: -9.832558631896973
    6. '  ' → logprob: -10.082558631896973
    7. ' ' → logprob: -10.707558631896973
    8. '
' → logprob: -10.832558631896973
    9. ' cages' → logprob: -10.957558631896973
    10. 'cake' → logprob: -10.957558631896973

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04960101470351219
    2. 'cakes' → logprob: -3.1746010780334473
    3. ' cakes' → logprob: -5.299601078033447
    4. '	c' → logprob: -7.674601078033447
    5. ' ' → logprob: -7.924601078033447
    6. '  ' → logprob: -8.549600601196289
    7. '    
' → logprob: -9.799600601196289
    8. '\t' → logprob: -9.924600601196289
    9. '
' → logprob: -10.049600601196289
    10. '       ' → logprob: -10.174600601196289

Token 396: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' (adapté à ' cakes') → logprob: -0.004461570177227259
    2. '   ' → logprob: -5.629461765289307
    3. ' cakes' → logprob: -7.129461765289307
    4. 'cake' → logprob: -10.254461288452148
    5. 'for' → logprob: -11.879461288452148
    6. ' ' → logprob: -12.754461288452148
    7. 'cars' → logprob: -12.879461288452148
    8. '    
' → logprob: -13.004461288452148
    9. 'cak' → logprob: -13.379461288452148
    10. ' for' → logprob: -13.629461288452148

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -16.0
    3. '[
' → logprob: -16.0
    4. ' [' → logprob: -16.25
    5. 's' → logprob: -17.25
    6. '[...]' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. ')[' → logprob: -19.5
    9. '.' → logprob: -19.875
    10. '}[' → logprob: -20.125

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011272187111899257
    2. '0' → logprob: -9.125112533569336
    3. ' ' → logprob: -12.625112533569336
    4. '   ' → logprob: -15.750112533569336
    5. '[' → logprob: -16.187612533569336
    6. '```' → logprob: -16.937612533569336
    7. '2' → logprob: -17.187612533569336
    8. 'for' → logprob: -17.375112533569336
    9. '
' → logprob: -17.625112533569336
    10. '3' → logprob: -17.750112533569336

Token 399: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.016331002116203308
    2. '.' → logprob: -4.641331195831299
    3. '.append' → logprob: -5.391331195831299
    4. ').' → logprob: -6.266331195831299
    5. ' .' → logprob: -10.01633071899414
    6. ']' → logprob: -10.64133071899414
    7. '}.' → logprob: -11.51633071899414
    8. '[' → logprob: -11.76633071899414
    9. ' ].' → logprob: -12.01633071899414
    10. '   ' → logprob: -13.14133071899414

Token 400: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.292907877039397e-06
    2. '.append' → logprob: -12.75000286102295
    3. ' append' → logprob: -15.00000286102295
    4. '	append' → logprob: -18.000003814697266
    5. 'appen' → logprob: -18.375003814697266
    6. 'Append' → logprob: -20.625003814697266
    7. '_append' → logprob: -20.625003814697266
    8. 'app' → logprob: -20.750003814697266
    9. ' ' → logprob: -22.000003814697266
    10. '```' → logprob: -22.125003814697266

Token 401: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.7372048862162046e-05
    2. '(' → logprob: -10.625027656555176
    3. 'c' → logprob: -12.750027656555176
    4. ' (' → logprob: -16.25002670288086
    5. ' c' → logprob: -16.87502670288086
    6. '(
' → logprob: -18.87502670288086
    7. '((' → logprob: -19.12502670288086
    8. '	c' → logprob: -19.87502670288086
    9. '(-' → logprob: -20.75002670288086
    10. '(C' → logprob: -20.87502670288086

Token 402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875571544806007e-05
    2. '0' → logprob: -11.375011444091797
    3. '[
' → logprob: -15.375011444091797
    4. '(' → logprob: -16.500011444091797
    5. '#' → logprob: -17.375011444091797
    6. ' [' → logprob: -17.625011444091797
    7. 'c' → logprob: -17.750011444091797
    8. ']' → logprob: -18.125011444091797
    9. '```' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.375011444091797

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '1' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '-' → logprob: -17.437503814697266
    7. '  ' → logprob: -17.562503814697266
    8. '```' → logprob: -17.875003814697266
    9. '۰' → logprob: -18.000003814697266
    10. '
' → logprob: -18.187503814697266

Token 404: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008649910800158978
    2. '+' → logprob: -4.758649826049805
    3. '[' → logprob: -11.633649826049805
    4. ' ' → logprob: -11.633649826049805
    5. ']' → logprob: -12.008649826049805
    6. ')' → logprob: -12.133649826049805
    7. ']+' → logprob: -13.383649826049805
    8. ' +
' → logprob: -13.758649826049805
    9. ' ' → logprob: -13.758649826049805
    10. ')+' → logprob: -14.508649826049805

Token 405: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11282677948474884
    2. '+' → logprob: -2.2378268241882324
    3. ' ' → logprob: -13.737826347351074
    4. '[' → logprob: -13.862826347351074
    5. ' ' → logprob: -14.112826347351074
    6. ')' → logprob: -14.487826347351074
    7. ' +
' → logprob: -15.112826347351074
    8. '+c' → logprob: -15.112826347351074
    9. ')+' → logprob: -15.987826347351074
    10. '+
' → logprob: -16.11282730102539

Token 406: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022484004497528
    2. ' c' → logprob: -1.9102247953414917
    3. '+c' → logprob: -15.160224914550781
    4. '(c' → logprob: -16.16022491455078
    5. ')c' → logprob: -16.41022491455078
    6. '	c' → logprob: -16.53522491455078
    7. '-c' → logprob: -17.16022491455078
    8. '_c' → logprob: -17.16022491455078
    9. '   ' → logprob: -17.28522491455078
    10. ' ' → logprob: -18.16022491455078

Token 407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. ' [' → logprob: -13.250004768371582
    3. '[
' → logprob: -14.125004768371582
    4. 'c' → logprob: -14.250004768371582
    5. '1' → logprob: -14.250004768371582
    6. ' ' → logprob: -15.625004768371582
    7. ']' → logprob: -15.750004768371582
    8. '][' → logprob: -16.000003814697266
    9. ' c' → logprob: -16.375003814697266
    10. '.' → logprob: -16.875003814697266

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004690949339419603
    2. '[' → logprob: -5.629691123962402
    3. ' ' → logprob: -6.879691123962402
    4. 'c' → logprob: -10.879691123962402
    5. '-' → logprob: -11.004691123962402
    6. '   ' → logprob: -11.754691123962402
    7. '  ' → logprob: -12.379691123962402
    8. '+' → logprob: -12.879691123962402
    9. ' c' → logprob: -13.004691123962402
    10. '(' → logprob: -13.379691123962402

Token 409: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5163922905921936
    2. '+' → logprob: -1.0163922309875488
    3. ' -' → logprob: -3.516392230987549
    4. '-' → logprob: -4.516392230987549
    5. ')' → logprob: -8.141392707824707
    6. ']' → logprob: -8.266392707824707
    7. ' ' → logprob: -8.641392707824707
    8. '[' → logprob: -10.266392707824707
    9. ']+' → logprob: -11.141392707824707
    10. '   ' → logprob: -12.266392707824707

Token 410: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4754106402397156
    2. '-' → logprob: -0.9754106402397156
    3. '+' → logprob: -6.725410461425781
    4. ' +' → logprob: -8.975410461425781
    5. ' ' → logprob: -12.225410461425781
    6. ')' → logprob: -14.225410461425781
    7. ' -
' → logprob: -16.41291046142578
    8. '-
' → logprob: -16.47541046142578
    9. '_' → logprob: -16.91291046142578
    10. '*' → logprob: -16.97541046142578

Token 411: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019287518225610256
    2. ' c' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -16.501928329467773
    4. '	c' → logprob: -16.876928329467773
    5. ')c' → logprob: -17.251928329467773
    6. '   ' → logprob: -18.876928329467773
    7. '_c' → logprob: -19.376928329467773
    8. ' ' → logprob: -19.501928329467773
    9. '(c' → logprob: -20.001928329467773
    10. '0' → logprob: -20.251928329467773

Token 412: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001333455671556294
    2. 'c' → logprob: -6.626333236694336
    3. '2' → logprob: -11.876333236694336
    4. '[
' → logprob: -14.876333236694336
    5. ' c' → logprob: -16.251333236694336
    6. '[c' → logprob: -16.876333236694336
    7. 's' → logprob: -17.751333236694336
    8. '_c' → logprob: -17.876333236694336
    9. '(' → logprob: -17.876333236694336
    10. ' [' → logprob: -18.001333236694336

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. 'c' → logprob: -15.250000953674316
    4. '[' → logprob: -16.875001907348633
    5. '
' → logprob: -17.375001907348633
    6. '۲' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '２' → logprob: -18.687501907348633
    9. '```' → logprob: -18.750001907348633
    10. '২' → logprob: -18.875001907348633

Token 414: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1433352828025818
    2. ')' → logprob: -2.0183353424072266
    3. ']' → logprob: -8.018335342407227
    4. ')]' → logprob: -9.393335342407227
    5. ')])' → logprob: -9.768335342407227
    6. '   ' → logprob: -9.893335342407227
    7. ' ])' → logprob: -9.893335342407227
    8. '])
' → logprob: -10.018335342407227
    9. '[' → logprob: -11.268335342407227
    10. ' )' → logprob: -11.768335342407227

Token 415: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06501136720180511
    2. '<|end|>' → logprob: -3.0650112628936768
    3. ')' → logprob: -4.190011501312256
    4. '    
' → logprob: -7.690011501312256
    5. '
' → logprob: -8.690011024475098
    6. ' ' → logprob: -8.940011024475098
    7. '  ' → logprob: -9.190011024475098
    8. '    ' → logprob: -9.440011024475098
    9. '<|end|>' → logprob: -9.940011024475098
    10. 'c' → logprob: -10.440011024475098

Token 416: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230991065502167
    2. ')' → logprob: -1.323099136352539
    3. '<|end|>' → logprob: -5.323099136352539
    4. 'cakes' → logprob: -6.448099136352539
    5. ')c' → logprob: -7.073099136352539
    6. ')
' → logprob: -7.323099136352539
    7. '    
' → logprob: -7.573099136352539
    8. 'c' → logprob: -7.948099136352539
    9. ' cakes' → logprob: -8.323099136352539
    10. '  ' → logprob: -8.448099136352539

Token 417: ' Cas' (ID: 8066)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.46299853920936584
    2. '   ' → logprob: -1.0879985094070435
    3. ' cakes' → logprob: -3.462998628616333
    4. 'c' → logprob: -6.212998390197754
    5. 'cake' → logprob: -9.212998390197754
    6. '  ' → logprob: -9.837998390197754
    7. '    ' → logprob: -10.087998390197754
    8. ' ' → logprob: -10.212998390197754
    9. ' c' → logprob: -10.212998390197754
    10. 'cars' → logprob: -10.712998390197754

Token 418: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02775544673204422
    2. '[' → logprob: -4.652755260467529
    3. 'c' → logprob: -4.777755260467529
    4. 'cakes' → logprob: -5.027755260467529
    5. ' cakes' → logprob: -6.902755260467529
    6. ')' → logprob: -7.152755260467529
    7. '	c' → logprob: -8.652755737304688
    8. ' ' → logprob: -8.902755737304688
    9. '.' → logprob: -8.902755737304688
    10. '  ' → logprob: -9.277755737304688

Token 419: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04863131046295166
    2. ' c' → logprob: -3.048631191253662
    3. '(c' → logprob: -10.42363166809082
    4. 'cakes' → logprob: -12.67363166809082
    5. '	c' → logprob: -12.79863166809082
    6. ')c' → logprob: -13.29863166809082
    7. '   ' → logprob: -13.67363166809082
    8. ' ' → logprob: -13.79863166809082
    9. '-c' → logprob: -14.17363166809082
    10. '+c' → logprob: -14.42363166809082

Token 420: ' troisième' (ID: 75373)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5937009453773499
    2. '0' → logprob: -1.093700885772705
    3. '[' → logprob: -2.218700885772705
    4. '+' → logprob: -5.843700885772705
    5. ']' → logprob: -7.718700885772705
    6. '-' → logprob: -8.718701362609863
    7. '[
' → logprob: -9.343701362609863
    8. '```' → logprob: -9.343701362609863
    9. '...' → logprob: -9.593701362609863
    10. '-c' → logprob: -9.843701362609863

Token 421: ' élément' (ID: 99627)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.014126014895737171
    2. 's' → logprob: -4.514125823974609
    3. 'sub' → logprob: -6.264125823974609
    4. ' sou' → logprob: -7.139125823974609
    5. 'moins' → logprob: -9.01412582397461
    6. '```' → logprob: -9.63912582397461
    7. ' ' → logprob: -9.76412582397461
    8. '-' → logprob: -9.76412582397461
    9. '   ' → logprob: -11.76412582397461
    10. 'subtract' → logprob: -11.88912582397461

Token 424: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.009198847226798534
    2. 'stract' → logprob: -5.0091986656188965
    3. 'str' → logprob: -6.0091986656188965
    4. 'straction' → logprob: -11.009199142456055
    5. 'st' → logprob: -13.009199142456055
    6. 'tr' → logprob: -13.384199142456055
    7. 'tract' → logprob: -13.509199142456055
    8. 'istr' → logprob: -14.634199142456055
    9. 'stri' → logprob: -15.009199142456055
    10. 'tra' → logprob: -15.259199142456055

Token 425: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3142549693584442
    2. 'ct' → logprob: -1.3142549991607666
    3. 'ict' → logprob: -7.4392547607421875
    4. 't' → logprob: -9.064254760742188
    5. '(' → logprob: -9.939254760742188
    6. 'ction' → logprob: -10.314254760742188
    7. '
' → logprob: -10.689254760742188
    8. 'ît' → logprob: -10.814254760742188
    9. 'ité' → logprob: -11.064254760742188
    10. '   ' → logprob: -11.189254760742188

Token 426: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47590047121047974
    2. '   ' → logprob: -0.9759004712104797
    3. '<|end|>' → logprob: -6.975900650024414
    4. 'c' → logprob: -8.225900650024414
    5. ')c' → logprob: -8.225900650024414
    6. '    
' → logprob: -9.725900650024414
    7. '  ' → logprob: -9.850900650024414
    8. ')
' → logprob: -10.475900650024414
    9. '[' → logprob: -10.475900650024414
    10. '(c' → logprob: -10.600900650024414

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019740730058401823
    2. 'cakes' → logprob: -6.251974105834961
    3. '```' → logprob: -11.126974105834961
    4. 'c' → logprob: -11.126974105834961
    5. ' cakes' → logprob: -11.626974105834961
    6. '	c' → logprob: -13.251974105834961
    7. '    
' → logprob: -13.376974105834961
    8. '   ' → logprob: -14.501974105834961
    9. '  ' → logprob: -14.626974105834961
    10. ')' → logprob: -14.751974105834961

Token 428: ' cakes' (ID: 61222)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28128793835639954
    2. 'cakes' (adapté à ' cakes') → logprob: -1.4062879085540771
    3. ' cakes' → logprob: -9.906288146972656
    4. '  ' → logprob: -10.781288146972656
    5. 'cars' → logprob: -11.281288146972656
    6. 'cake' → logprob: -11.281288146972656
    7. '    
' → logprob: -11.531288146972656
    8. '```' → logprob: -11.656288146972656
    9. 'c' → logprob: -12.406288146972656
    10. 'cups' → logprob: -12.656288146972656

Token 429: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. '2' → logprob: -12.250005722045898
    3. '.' → logprob: -14.125005722045898
    4. '[
' → logprob: -16.1250057220459
    5. 's' → logprob: -16.2500057220459
    6. '```' → logprob: -16.5000057220459
    7. '#' → logprob: -16.7500057220459
    8. 'for' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.1250057220459
    10. 'c' → logprob: -17.5000057220459

Token 430: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.93448489275761e-05
    2. '1' → logprob: -9.625079154968262
    3. '[' → logprob: -12.500079154968262
    4. ' ' → logprob: -12.625079154968262
    5. '0' → logprob: -13.000079154968262
    6. '3' → logprob: -13.375079154968262
    7. '   ' → logprob: -13.500079154968262
    8. 'for' → logprob: -15.312579154968262
    9. '  ' → logprob: -15.812579154968262
    10. '
' → logprob: -16.125080108642578

Token 431: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.91213458776474
    2. '.append' → logprob: -1.1621346473693848
    3. '.' → logprob: -1.2871346473693848
    4. ').' → logprob: -5.162134647369385
    5. '[' → logprob: -6.162134647369385
    6. ' .' → logprob: -6.912134647369385
    7. '.c' → logprob: -8.287134170532227
    8. '}.' → logprob: -8.662134170532227
    9. ']' → logprob: -9.912134170532227
    10. '   ' → logprob: -10.037134170532227

Token 432: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.265633419388905e-05
    2. '.append' → logprob: -9.750062942504883
    3. ' append' → logprob: -12.625062942504883
    4. 'c' → logprob: -14.875062942504883
    5. 'appen' → logprob: -15.125062942504883
    6. '	append' → logprob: -16.250062942504883
    7. '[]' → logprob: -16.500062942504883
    8. 'cakes' → logprob: -16.875062942504883
    9. 'app' → logprob: -17.375062942504883
    10. '[' → logprob: -17.500062942504883

Token 433: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.7372048862162046e-05
    2. 'c' → logprob: -10.875027656555176
    3. '(' → logprob: -11.750027656555176
    4. ' (' → logprob: -15.500027656555176
    5. '(
' → logprob: -15.875027656555176
    6. '((' → logprob: -16.12502670288086
    7. ' c' → logprob: -16.25002670288086
    8. '[c' → logprob: -17.62502670288086
    9. '(C' → logprob: -18.25002670288086
    10. '	c' → logprob: -18.75002670288086

Token 434: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010080150241265073
    2. '0' → logprob: -9.250101089477539
    3. 'c' → logprob: -13.625101089477539
    4. '[
' → logprob: -14.500101089477539
    5. '][' → logprob: -14.500101089477539
    6. '```' → logprob: -14.625101089477539
    7. '#' → logprob: -15.000101089477539
    8. ' [' → logprob: -15.250101089477539
    9. '(' → logprob: -15.375101089477539
    10. ']' → logprob: -15.750101089477539

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.225939872208983e-05
    2. '[' → logprob: -10.500032424926758
    3. ' ' → logprob: -12.625032424926758
    4. 'c' → logprob: -14.500032424926758
    5. '(' → logprob: -14.875032424926758
    6. '   ' → logprob: -15.250032424926758
    7. '```' → logprob: -16.250032424926758
    8. '  ' → logprob: -17.062532424926758
    9. '{' → logprob: -18.000032424926758
    10. '-' → logprob: -18.000032424926758

Token 436: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012707293964922428
    2. ']+' → logprob: -4.887707233428955
    3. '+' → logprob: -6.137707233428955
    4. '[' → logprob: -6.262707233428955
    5. ' +' → logprob: -7.262707233428955
    6. ')' → logprob: -8.387707710266113
    7. '][' → logprob: -10.512707710266113
    8. ' ]' → logprob: -11.012707710266113
    9. '[
' → logprob: -12.262707710266113
    10. ')+' → logprob: -12.325207710266113

Token 437: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22556151449680328
    2. '+' → logprob: -1.600561499595642
    3. '[' → logprob: -9.225561141967773
    4. '+c' → logprob: -10.350561141967773
    5. ')' → logprob: -11.850561141967773
    6. ']' → logprob: -12.225561141967773
    7. ' ' → logprob: -13.350561141967773
    8. ' ' → logprob: -13.850561141967773
    9. ']+' → logprob: -13.975561141967773
    10. ')+' → logprob: -14.225561141967773

Token 438: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07890289276838303
    2. ' c' → logprob: -2.5789029598236084
    3. '(c' → logprob: -11.453903198242188
    4. ')c' → logprob: -14.078903198242188
    5. ' (' → logprob: -14.453903198242188
    6. '<|end|>' → logprob: -14.703903198242188
    7. '	c' → logprob: -15.078903198242188
    8. '_c' → logprob: -15.953903198242188
    9. '1' → logprob: -16.078903198242188
    10. '(' → logprob: -16.453903198242188

Token 439: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.75000286102295
    3. '[
' → logprob: -14.50000286102295
    4. '][' → logprob: -15.12500286102295
    5. ']' → logprob: -15.62500286102295
    6. 'c' → logprob: -15.62500286102295
    7. '(' → logprob: -16.000001907348633
    8. 'import' → logprob: -16.750001907348633
    9. '2' → logprob: -17.500001907348633
    10. '0' → logprob: -17.625001907348633

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006152204005047679
    2. '[' → logprob: -7.500615119934082
    3. 'c' → logprob: -9.875615119934082
    4. ' ' → logprob: -12.125615119934082
    5. '+' → logprob: -13.250615119934082
    6. '   ' → logprob: -13.875615119934082
    7. 'm' → logprob: -14.625615119934082
    8. '2' → logprob: -14.875615119934082
    9. 's' → logprob: -15.375615119934082
    10. '(' → logprob: -15.625615119934082

Token 441: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6912550330162048
    2. '+' → logprob: -0.8162550330162048
    3. ']' → logprob: -3.3162550926208496
    4. '[' → logprob: -4.56625509262085
    5. ')' → logprob: -4.94125509262085
    6. ' -' → logprob: -6.56625509262085
    7. ']+' → logprob: -7.31625509262085
    8. '-' → logprob: -7.81625509262085
    9. ' ' → logprob: -7.94125509262085
    10. '<|end|>' → logprob: -9.566254615783691

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3602563142776489
    2. ' +' → logprob: -1.235256314277649
    3. ' -' → logprob: -4.860256195068359
    4. '-' → logprob: -5.610256195068359
    5. '[' → logprob: -8.48525619506836
    6. ' ' → logprob: -9.36025619506836
    7. ')' → logprob: -10.73525619506836
    8. '+c' → logprob: -11.73525619506836
    9. ']' → logprob: -13.11025619506836
    10. ')+' → logprob: -13.36025619506836

Token 443: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002476135268807411
    2. ' c' → logprob: -6.002476215362549
    3. '<|end|>' → logprob: -14.75247573852539
    4. ')c' → logprob: -17.62747573852539
    5. ' ' → logprob: -18.00247573852539
    6. '	c' → logprob: -18.50247573852539
    7. '   ' → logprob: -19.87747573852539
    8. '```' → logprob: -20.62747573852539
    9. '_c' → logprob: -20.87747573852539
    10. ')' → logprob: -21.00247573852539

Token 444: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029819458723068237
    2. '2' → logprob: -3.5298194885253906
    3. '
' → logprob: -10.27981948852539
    4. ' ' → logprob: -11.52981948852539
    5. '(' → logprob: -12.27981948852539
    6. ']' → logprob: -12.40481948852539
    7. ' [' → logprob: -12.77981948852539
    8. '   ' → logprob: -13.02981948852539
    9. '[
' → logprob: -13.02981948852539
    10. ')' → logprob: -13.27981948852539

Token 445: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '[' → logprob: -15.375000953674316
    4. '۲' → logprob: -16.750001907348633
    5. '
' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '২' → logprob: -18.437501907348633
    9. '２' → logprob: -18.875001907348633
    10. '२' → logprob: -19.500001907348633

Token 446: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20233559608459473
    2. '])' → logprob: -1.7023355960845947
    3. ')]' → logprob: -7.702335357666016
    4. ']' → logprob: -8.327335357666016
    5. '   ' → logprob: -9.452335357666016
    6. ' )' → logprob: -9.952335357666016
    7. ')])' → logprob: -10.077335357666016
    8. ')
' → logprob: -11.202335357666016
    9. '])
' → logprob: -11.452335357666016
    10. '))' → logprob: -11.952335357666016

Token 447: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04922295734286308
    2. ')' → logprob: -3.049222946166992
    3. ')
' → logprob: -8.799222946166992
    4. ')c' → logprob: -9.049222946166992
    5. 'cakes' → logprob: -9.549222946166992
    6. '[' → logprob: -9.924222946166992
    7. '    
' → logprob: -10.049222946166992
    8. ' cakes' → logprob: -10.174222946166992
    9. '(c' → logprob: -10.549222946166992
    10. ' )' → logprob: -10.549222946166992

Token 448: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12396862357854843
    2. '   ' → logprob: -2.2489686012268066
    3. ')
' → logprob: -5.373968601226807
    4. 'cakes' → logprob: -5.498968601226807
    5. ')c' → logprob: -6.373968601226807
    6. ' cakes' → logprob: -7.998968601226807
    7. 'c' → logprob: -8.998969078063965
    8. '(c' → logprob: -9.498969078063965
    9. '  ' → logprob: -10.123969078063965
    10. ' )' → logprob: -10.873969078063965

Token 449: ' Cas' (ID: 8066)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -6.372916686814278e-05
    2. ' cakes' → logprob: -10.5000638961792
    3. '   ' → logprob: -10.6250638961792
    4. 'cake' → logprob: -11.3750638961792
    5. 'cak' → logprob: -15.8750638961792
    6. '
' → logprob: -16.250062942504883
    7. '    
' → logprob: -17.125062942504883
    8. 'cups' → logprob: -17.250062942504883
    9. '```' → logprob: -17.375062942504883
    10. 'ca' → logprob: -17.500062942504883

Token 450: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011746956966817379
    2. '   ' → logprob: -4.511746883392334
    3. 'cakes' → logprob: -7.761746883392334
    4. 'for' → logprob: -9.011747360229492
    5. '[c' → logprob: -9.761747360229492
    6. ')' → logprob: -10.761747360229492
    7. '[
' → logprob: -10.886747360229492
    8. ']' → logprob: -11.011747360229492
    9. 'c' → logprob: -11.386747360229492
    10. ' cakes' → logprob: -11.761747360229492

Token 451: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008840994909405708
    2. ' c' → logprob: -4.883841037750244
    3. 'cakes' → logprob: -7.258841037750244
    4. 'cake' → logprob: -8.133840560913086
    5. '(c' → logprob: -9.633840560913086
    6. ' cakes' → logprob: -10.258840560913086
    7. '   ' → logprob: -10.508840560913086
    8. ' cake' → logprob: -10.633840560913086
    9. '0' → logprob: -10.758840560913086
    10. '-c' → logprob: -10.758840560913086

Token 452: ' deuxième' (ID: 51664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08802905678749084
    2. '[' → logprob: -2.588029146194458
    3. 'c' → logprob: -4.838028907775879
    4. '1' → logprob: -6.963028907775879
    5. '(' → logprob: -9.713028907775879
    6. ' ' → logprob: -10.088028907775879
    7. ']' → logprob: -11.088028907775879
    8. '```' → logprob: -11.213028907775879
    9. 'cake' → logprob: -11.338028907775879
    10. '#' → logprob: -11.463028907775879

Token 453: ' élément' (ID: 99627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6469866037368774
    2. '.' → logprob: -1.7719866037368774
    3. '-' → logprob: -1.8969866037368774
    4. ']' → logprob: -2.646986484527588
    5. 'c' → logprob: -3.396986484527588
    6. '-c' → logprob: -4.396986484527588
    7. '].' → logprob: -4.396986484527588
    8. '.append' → logprob: -4.646986484527588
    9. '[c' → logprob: -4.646986484527588
    10. '```' → logprob: -6.521986484527588

Token 454: ' est' (ID: 893)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.036558933556079865
    2. '.' → logprob: -4.161559104919434
    3. '   ' → logprob: -4.411559104919434
    4. ' .' → logprob: -6.286559104919434
    5. ').' → logprob: -6.411559104919434
    6. 'cakes' → logprob: -6.536559104919434
    7. ')' → logprob: -7.036559104919434
    8. '.c' → logprob: -7.286559104919434
    9. '-' → logprob: -7.661559104919434
    10. '[' → logprob: -7.911559104919434

Token 455: ' sou' (ID: 4069)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.763250470161438
    2. '-' → logprob: -1.138250470161438
    3. '-s' → logprob: -2.3882503509521484
    4. 'c' → logprob: -2.3882503509521484
    5. ' -' → logprob: -4.013250350952148
    6. ' c' → logprob: -4.888250350952148
    7. '-sub' → logprob: -7.138250350952148
    8. '+' → logprob: -7.263250350952148
    9. '   ' → logprob: -7.513250350952148
    10. 'sou' → logprob: -7.763250350952148

Token 456: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5199074745178223
    2. 'r' → logprob: -1.6449074745178223
    3. 'pt' → logprob: -2.3949074745178223
    4. 'tracted' → logprob: -3.7699074745178223
    5. 'p' → logprob: -3.8949074745178223
    6. '[' → logprob: -4.019907474517822
    7. 'pr' → logprob: -4.894907474517822
    8. 'c' → logprob: -4.894907474517822
    9. 'st' → logprob: -5.019907474517822
    10. 'tr' → logprob: -5.269907474517822

Token 457: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.12130006402730942
    2. 'ct' → logprob: -2.496299982070923
    3. 'ict' → logprob: -4.121300220489502
    4. 'int' → logprob: -5.121300220489502
    5. 'ité' → logprob: -5.371300220489502
    6. 'ît' → logprob: -5.746300220489502
    7. 'pt' → logprob: -7.871300220489502
    8. 'ut' → logprob: -8.371299743652344
    9. 'ït' → logprob: -8.621299743652344
    10. 't' → logprob: -8.621299743652344

Token 458: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002837087959051132
    2. ')' → logprob: -6.252837181091309
    3. 'cakes' → logprob: -8.127837181091309
    4. '<|end|>' → logprob: -8.627837181091309
    5. 'c' → logprob: -9.002837181091309
    6. 'for' → logprob: -9.252837181091309
    7. '[' → logprob: -10.252837181091309
    8. '[]' → logprob: -10.252837181091309
    9. '.' → logprob: -10.752837181091309
    10. '    
' → logprob: -10.877837181091309

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009842146188020706
    2. 'cakes' → logprob: -4.6348419189453125
    3. 'c' → logprob: -10.134841918945312
    4. ' cakes' → logprob: -11.134841918945312
    5. '```' → logprob: -11.259841918945312
    6. 'for' → logprob: -12.384841918945312
    7. '    
' → logprob: -13.009841918945312
    8. 'cake' → logprob: -13.259841918945312
    9. '  ' → logprob: -13.384841918945312
    10. '	c' → logprob: -13.509841918945312

Token 460: ' cakes' (ID: 61222)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25210949778556824
    2. 'cakes' (adapté à ' cakes') → logprob: -1.5021095275878906
    3. ' cakes' → logprob: -9.62710952758789
    4. 'c' → logprob: -10.12710952758789
    5. '  ' → logprob: -10.62710952758789
    6. 'cake' → logprob: -11.12710952758789
    7. ' ' → logprob: -12.12710952758789
    8. '```' → logprob: -12.25210952758789
    9. 'cars' → logprob: -12.62710952758789
    10. 'cups' → logprob: -13.00210952758789

Token 461: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. '3' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.125006675720215
    4. '.' → logprob: -14.250006675720215
    5. '[
' → logprob: -14.250006675720215
    6. ' [' → logprob: -16.8750057220459
    7. '```' → logprob: -17.3750057220459
    8. '][' → logprob: -17.3750057220459
    9. ')[' → logprob: -17.5000057220459
    10. '<|end|>' → logprob: -17.7500057220459

Token 462: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.491498531133402e-06
    2. '2' → logprob: -11.625009536743164
    3. '[' → logprob: -15.375009536743164
    4. '
' → logprob: -15.375009536743164
    5. '   ' → logprob: -17.250009536743164
    6. '0' → logprob: -17.875009536743164
    7. ' ' → logprob: -18.000009536743164
    8. '(' → logprob: -18.250009536743164
    9. '4' → logprob: -18.375009536743164
    10. '1' → logprob: -18.750009536743164

Token 463: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0025587803684175014
    2. '.' → logprob: -6.627558708190918
    3. '[' → logprob: -7.377558708190918
    4. ']' → logprob: -7.502558708190918
    5. ').' → logprob: -10.627558708190918
    6. '.append' → logprob: -11.252558708190918
    7. '   ' → logprob: -11.377558708190918
    8. ' .' → logprob: -13.502558708190918
    9. ' ].' → logprob: -13.627558708190918
    10. '}.' → logprob: -13.752558708190918

Token 464: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.3458322731312364e-06
    2. '.append' → logprob: -11.875007629394531
    3. ' append' → logprob: -15.375007629394531
    4. 'cakes' → logprob: -16.75000762939453
    5. 'appen' → logprob: -17.87500762939453
    6. '	append' → logprob: -18.00000762939453
    7. 'c' → logprob: -19.37500762939453
    8. 'for' → logprob: -19.37500762939453
    9. '```' → logprob: -19.62500762939453
    10. 'Append' → logprob: -19.87500762939453

Token 465: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.750009536743164
    3. 'c' → logprob: -13.875009536743164
    4. '(
' → logprob: -16.250009536743164
    5. '   ' → logprob: -16.750009536743164
    6. ' (' → logprob: -16.750009536743164
    7. '((' → logprob: -17.250009536743164
    8. '(C' → logprob: -17.625009536743164
    9. '	c' → logprob: -18.500009536743164
    10. ' c' → logprob: -18.875009536743164

Token 466: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0206720617134124e-05
    2. 'c' → logprob: -12.12501049041748
    3. '0' → logprob: -12.75001049041748
    4. '(' → logprob: -13.75001049041748
    5. '[c' → logprob: -14.87501049041748
    6. '[
' → logprob: -16.125009536743164
    7. '(c' → logprob: -16.625009536743164
    8. '```' → logprob: -16.875009536743164
    9. ')' → logprob: -17.125009536743164
    10. ']' → logprob: -17.500009536743164

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.386147626675665e-05
    2. '[' → logprob: -9.625073432922363
    3. 'c' → logprob: -12.500073432922363
    4. ' ' → logprob: -12.625073432922363
    5. '(' → logprob: -14.875073432922363
    6. '   ' → logprob: -15.875073432922363
    7. '```' → logprob: -16.25007438659668
    8. '1' → logprob: -17.00007438659668
    9. '{' → logprob: -17.56257438659668
    10. '`' → logprob: -17.62507438659668

Token 468: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6968415379524231
    2. ' +' → logprob: -0.8218415379524231
    3. '+' → logprob: -3.1968414783477783
    4. '-' → logprob: -3.9468414783477783
    5. '[' → logprob: -6.696841716766357
    6. ' ' → logprob: -7.946841716766357
    7. ')' → logprob: -8.1968412399292
    8. '   ' → logprob: -10.1968412399292
    9. ']' → logprob: -10.6968412399292
    10. '_' → logprob: -10.9468412399292

Token 469: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04066719487309456
    2. '-' → logprob: -3.4156672954559326
    3. ' +' → logprob: -5.1656670570373535
    4. '+' → logprob: -6.9156670570373535
    5. '[' → logprob: -8.665667533874512
    6. ' ' → logprob: -9.665667533874512
    7. '   ' → logprob: -10.665667533874512
    8. ')' → logprob: -11.165667533874512
    9. ' -
' → logprob: -12.290667533874512
    10. ' [' → logprob: -12.728167533874512

Token 470: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132627606391907
    2. ' c' → logprob: -1.313262701034546
    3. '_c' → logprob: -14.813262939453125
    4. '	c' → logprob: -15.438262939453125
    5. ' ' → logprob: -16.188262939453125
    6. ')c' → logprob: -16.188262939453125
    7. '<|end|>' → logprob: -16.688262939453125
    8. '.c' → logprob: -16.938262939453125
    9. '(c' → logprob: -17.438262939453125
    10. '   ' → logprob: -17.438262939453125

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0131254056468606
    2. 'c' → logprob: -4.388125419616699
    3. 'm' → logprob: -7.763125419616699
    4. '1' → logprob: -8.7631254196167
    5. ']' → logprob: -11.1381254196167
    6. ' c' → logprob: -11.6381254196167
    7. '][' → logprob: -12.5131254196167
    8. 's' → logprob: -13.3881254196167
    9. ' ' → logprob: -13.5131254196167
    10. ' m' → logprob: -14.3881254196167

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004192330234218389
    2. 'm' → logprob: -8.750419616699219
    3. 'c' → logprob: -8.875419616699219
    4. '[' → logprob: -9.125419616699219
    5. ' ' → logprob: -12.000419616699219
    6. '   ' → logprob: -12.875419616699219
    7. '_' → logprob: -13.875419616699219
    8. '_c' → logprob: -14.750419616699219
    9. 's' → logprob: -15.125419616699219
    10. ']' → logprob: -15.375419616699219

Token 473: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10545980930328369
    2. '-' → logprob: -2.355459690093994
    3. '+' → logprob: -5.980459690093994
    4. ' +' → logprob: -6.355459690093994
    5. '[' → logprob: -7.855459690093994
    6. ']' → logprob: -7.980459690093994
    7. ' ' → logprob: -8.980460166931152
    8. ')' → logprob: -9.480460166931152
    9. '>' → logprob: -11.230460166931152
    10. '<|end|>' → logprob: -11.730460166931152

Token 474: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07901812344789505
    2. ' -' → logprob: -2.5790181159973145
    3. '+' → logprob: -9.079018592834473
    4. '[' → logprob: -12.454018592834473
    5. ' ' → logprob: -12.579018592834473
    6. ')' → logprob: -12.579018592834473
    7. ' +' → logprob: -13.204018592834473
    8. '_' → logprob: -14.329018592834473
    9. ',' → logprob: -15.454018592834473
    10. '```' → logprob: -15.454018592834473

Token 475: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005533903022296727
    2. ' c' → logprob: -7.500553607940674
    3. '<|end|>' → logprob: -15.375553131103516
    4. ')c' → logprob: -15.875553131103516
    5. '	c' → logprob: -17.250553131103516
    6. '_c' → logprob: -17.375553131103516
    7. '(c' → logprob: -18.500553131103516
    8. '.c' → logprob: -18.875553131103516
    9. '+c' → logprob: -19.375553131103516
    10. '```' → logprob: -20.000553131103516

Token 476: '[' (ID: 58)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519724369049072
    2. '[' → logprob: -1.5019724369049072
    3. '[c' → logprob: -10.876972198486328
    4. '2' → logprob: -11.876972198486328
    5. ' c' → logprob: -12.126972198486328
    6. '(c' → logprob: -12.376972198486328
    7. '(' → logprob: -12.501972198486328
    8. '[
' → logprob: -13.251972198486328
    9. '_c' → logprob: -14.376972198486328
    10. '0' → logprob: -15.001972198486328

Token 477: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012570773833431304
    2. 'c' → logprob: -9.125125885009766
    3. '[' → logprob: -11.125125885009766
    4. ' ' → logprob: -13.375125885009766
    5. '   ' → logprob: -15.500125885009766
    6. '۲' → logprob: -16.375125885009766
    7. '
' → logprob: -16.625125885009766
    8. '２' → logprob: -18.125125885009766
    9. ' c' → logprob: -18.125125885009766
    10. '```' → logprob: -18.250125885009766

Token 478: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17540769279003143
    2. ')' → logprob: -2.425407648086548
    3. ']' → logprob: -2.675407648086548
    4. '].' → logprob: -6.425407886505127
    5. ']).' → logprob: -6.800407886505127
    6. ')]' → logprob: -7.925407886505127
    7. ').' → logprob: -8.050407409667969
    8. ')])' → logprob: -10.050407409667969
    9. '   ' → logprob: -10.800407409667969
    10. ' ])' → logprob: -11.175407409667969

Token 479: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1637888252735138
    2. ')' → logprob: -2.1637887954711914
    3. '<|end|>' → logprob: -3.4137887954711914
    4. ')c' → logprob: -7.038788795471191
    5. '
' → logprob: -7.663788795471191
    6. 'for' → logprob: -7.788788795471191
    7. '    
' → logprob: -8.163788795471191
    8. ')
' → logprob: -8.163788795471191
    9. '  ' → logprob: -8.663788795471191
    10. ' ' → logprob: -8.913788795471191

Token 480: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04097951203584671
    2. '   ' → logprob: -3.5409796237945557
    3. '<|end|>' → logprob: -5.040979385375977
    4. ')c' → logprob: -6.040979385375977
    5. '(c' → logprob: -7.540979385375977
    6. 'for' → logprob: -7.665979385375977
    7. 'cakes' → logprob: -7.790979385375977
    8. 'c' → logprob: -8.415979385375977
    9. '[' → logprob: -8.665979385375977
    10. ')
' → logprob: -8.665979385375977

Token 481: ' Cas' (ID: 8066)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.0017545493319630623
    2. ' cakes' → logprob: -6.3767547607421875
    3. 'cake' → logprob: -10.501754760742188
    4. '   ' → logprob: -10.876754760742188
    5. 'c' → logprob: -12.751754760742188
    6. 'cak' → logprob: -13.751754760742188
    7. 'ca' → logprob: -14.876754760742188
    8. ' cake' → logprob: -15.126754760742188
    9. 'cups' → logprob: -15.501754760742188
    10. 'cookies' → logprob: -15.626754760742188

Token 482: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011760921915993094
    2. '(' → logprob: -9.875117301940918
    3. '[c' → logprob: -10.750117301940918
    4. ')' → logprob: -11.875117301940918
    5. '0' → logprob: -11.875117301940918
    6. 'c' → logprob: -12.000117301940918
    7. ']' → logprob: -12.125117301940918
    8. '[
' → logprob: -12.250117301940918
    9. '   ' → logprob: -12.500117301940918
    10. '#' → logprob: -12.625117301940918

Token 483: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006952645722776651
    2. ' c' → logprob: -5.13195276260376
    3. 'cakes' → logprob: -7.00695276260376
    4. 'cake' → logprob: -9.756952285766602
    5. ' cakes' → logprob: -11.131952285766602
    6. '(c' → logprob: -11.631952285766602
    7. ')c' → logprob: -11.881952285766602
    8. '   ' → logprob: -12.256952285766602
    9. '	c' → logprob: -12.381952285766602
    10. '(' → logprob: -12.381952285766602

Token 484: ' deuxième' (ID: 51664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.056208848953247
    2. '[' → logprob: -1.056208848953247
    3. '1' → logprob: -1.431208848953247
    4. 'c' → logprob: -3.056208848953247
    5. '2' → logprob: -4.556208610534668
    6. ']' → logprob: -5.306208610534668
    7. '3' → logprob: -7.181208610534668
    8. 'de' → logprob: -8.306208610534668
    9. 'cake' → logprob: -8.306208610534668
    10. '```' → logprob: -8.431208610534668

Token 485: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11523663252592087
    2. '].' → logprob: -3.115236520767212
    3. '.append' → logprob: -3.615236520767212
    4. '[' → logprob: -4.240236759185791
    5. ').' → logprob: -4.365236759185791
    6. ' .' → logprob: -5.240236759185791
    7. '   ' → logprob: -6.615236759185791
    8. '.c' → logprob: -6.865236759185791
    9. ']' → logprob: -7.240236759185791
    10. 'c' → logprob: -7.865236759185791

Token 486: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0448620468378067
    2. ' c' → logprob: -3.1698620319366455
    3. '   ' → logprob: -6.794862270355225
    4. '[' → logprob: -7.419862270355225
    5. '  ' → logprob: -9.294861793518066
    6. ' ' → logprob: -10.294861793518066
    7. '	c' → logprob: -12.419861793518066
    8. '    ' → logprob: -13.044861793518066
    9. 'third' → logprob: -13.169861793518066
    10. '#' → logprob: -13.669861793518066

Token 487: ' troisième' (ID: 75373)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08102704584598541
    2. '1' → logprob: -2.581027030944824
    3. 'c' → logprob: -6.206027030944824
    4. '2' → logprob: -9.706027030944824
    5. ']' → logprob: -10.831027030944824
    6. ' ' → logprob: -11.456027030944824
    7. '[
' → logprob: -11.831027030944824
    8. '0' → logprob: -12.456027030944824
    9. '```' → logprob: -12.956027030944824
    10. ' c' → logprob: -13.081027030944824

Token 488: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10493110865354538
    2. ' élément' → logprob: -2.729931116104126
    3. ' éléments' → logprob: -3.479931116104126
    4. ' elements' → logprob: -6.479930877685547
    5. 'element' → logprob: -7.229930877685547
    6. 'elements' → logprob: -7.479930877685547
    7. '[' → logprob: -8.479930877685547
    8. ' element' → logprob: -8.729930877685547
    9. '.' → logprob: -9.354930877685547
    10. '_elements' → logprob: -9.979930877685547

Token 489: ' sont' (ID: 5242)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008779428899288177
    2. '.' → logprob: -5.508779525756836
    3. ' .' → logprob: -5.758779525756836
    4. ')' → logprob: -7.508779525756836
    5. ').' → logprob: -7.633779525756836
    6. 'append' → logprob: -8.508779525756836
    7. ' sont' → logprob: -8.758779525756836
    8. ' are' → logprob: -9.883779525756836
    9. 's' → logprob: -10.258779525756836
    10. '   ' → logprob: -11.008779525756836

Token 490: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.009568724781274796
    2. ' sou' → logprob: -4.884568691253662
    3. 's' → logprob: -6.259568691253662
    4. '-' → logprob: -11.00956916809082
    5. ')' → logprob: -11.38456916809082
    6. ' ' → logprob: -11.75956916809082
    7. 'subtract' → logprob: -12.50956916809082
    8. 'sub' → logprob: -12.63456916809082
    9. ']' → logprob: -14.13456916809082
    10. ' soumis' → logprob: -14.63456916809082

Token 491: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.2508977949619293
    2. 'tr' → logprob: -2.2508978843688965
    3. 'tra' → logprob: -3.5008978843688965
    4. 'tracted' → logprob: -4.1258978843688965
    5. 'str' → logprob: -4.3758978843688965
    6. 'b' → logprob: -4.5008978843688965
    7. 'tract' → logprob: -4.7508978843688965
    8. 'stract' → logprob: -5.0008978843688965
    9. '[' → logprob: -5.0008978843688965
    10. '-' → logprob: -5.5008978843688965

Token 492: 'its' (ID: 1348)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.036704082041978836
    2. 'it' → logprob: -3.5367040634155273
    3. 'ict' → logprob: -5.286704063415527
    4. 'cts' → logprob: -7.161704063415527
    5. 'its' → logprob: -8.411704063415527
    6. 't' → logprob: -8.536704063415527
    7. '#' → logprob: -9.036704063415527
    8. 'ît' → logprob: -9.786704063415527
    9. 'pt' → logprob: -10.036704063415527
    10. '   ' → logprob: -10.161704063415527

Token 493: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014740334590896964
    2. ')' → logprob: -6.626473903656006
    3. '    
' → logprob: -9.626474380493164
    4. '<|end|>' → logprob: -10.501474380493164
    5. '
' → logprob: -10.876474380493164
    6. ')
' → logprob: -12.376474380493164
    7. ')c' → logprob: -12.376474380493164
    8. 'c' → logprob: -12.501474380493164
    9. ',' → logprob: -12.876474380493164
    10. 'cakes' → logprob: -13.001474380493164

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09080670028924942
    2. 'cakes' → logprob: -2.465806722640991
    3. '```' → logprob: -6.340806484222412
    4. '``' → logprob: -10.46580696105957
    5. 'for' → logprob: -10.46580696105957
    6. ' cakes' → logprob: -11.09080696105957
    7. 'cake' → logprob: -11.71580696105957
    8. '  ' → logprob: -12.96580696105957
    9. 'cars' → logprob: -12.96580696105957
    10. 'cups' → logprob: -13.09080696105957

Token 495: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' (adapté à ' cakes') → logprob: -0.006764040794223547
    2. '   ' → logprob: -5.006763935089111
    3. 'cake' → logprob: -10.63176441192627
    4. ' cakes' → logprob: -10.88176441192627
    5. '```' → logprob: -13.38176441192627
    6. 'for' → logprob: -14.00676441192627
    7. '  ' → logprob: -14.38176441192627
    8. 'cak' → logprob: -14.38176441192627
    9. 'ca' → logprob: -14.38176441192627
    10. 'cookies' → logprob: -15.13176441192627

Token 496: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014358828775584698
    2. '4' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.000144004821777
    4. '.' → logprob: -14.375144004821777
    5. '[
' → logprob: -15.000144004821777
    6. ' [' → logprob: -15.250144004821777
    7. '```' → logprob: -16.62514305114746
    8. 'c' → logprob: -16.75014305114746
    9. '  ' → logprob: -17.12514305114746
    10. '5' → logprob: -17.50014305114746

Token 497: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '
' → logprob: -17.125
    3. '４' → logprob: -17.75
    4. '0' → logprob: -18.375
    5. '۴' → logprob: -19.125
    6. '[' → logprob: -19.25
    7. '৪' → logprob: -20.125
    8. ' ' → logprob: -20.3125
    9. '४' → logprob: -20.3125
    10. '٤' → logprob: -20.4375

Token 498: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09117121249437332
    2. '.' → logprob: -2.4661712646484375
    3. '].' → logprob: -6.9661712646484375
    4. ').' → logprob: -7.2161712646484375
    5. '   ' → logprob: -8.216171264648438
    6. ' .' → logprob: -8.591171264648438
    7. '[' → logprob: -9.841171264648438
    8. '.c' → logprob: -10.466171264648438
    9. '[c' → logprob: -13.341171264648438
    10. '.app' → logprob: -13.341171264648438

Token 499: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00023357603640761226
    2. '.append' → logprob: -8.37523365020752
    3. ' append' → logprob: -13.37523365020752
    4. 'c' → logprob: -13.75023365020752
    5. '	append' → logprob: -16.500232696533203
    6. 'appen' → logprob: -16.750232696533203
    7. '_append' → logprob: -16.875232696533203
    8. 'Append' → logprob: -17.375232696533203
    9. '[' → logprob: -17.375232696533203
    10. '0' → logprob: -18.000232696533203

Token 500: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.20433393120765686
    2. '(c' → logprob: -1.7043339014053345
    3. '(' → logprob: -5.954333782196045
    4. '-c' → logprob: -8.954334259033203
    5. '((-' → logprob: -9.829334259033203
    6. '(+' → logprob: -9.954334259033203
    7. 'c' → logprob: -10.329334259033203
    8. '((' → logprob: -10.829334259033203
    9. '(
' → logprob: -11.704334259033203
    10. '(-(' → logprob: -12.204334259033203

Token 501: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0921942703134846e-05
    2. ' c' → logprob: -11.87501049041748
    3. '(c' → logprob: -12.50001049041748
    4. ')c' → logprob: -15.62501049041748
    5. '(' → logprob: -17.125011444091797
    6. '   ' → logprob: -17.875011444091797
    7. '	c' → logprob: -18.250011444091797
    8. '_c' → logprob: -19.125011444091797
    9. '```' → logprob: -19.125011444091797
    10. ')' → logprob: -19.250011444091797

Token 502: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008329743286594748
    2. 'c' → logprob: -7.625833034515381
    3. '0' → logprob: -8.000832557678223
    4. '[
' → logprob: -12.750832557678223
    5. '[c' → logprob: -13.000832557678223
    6. '```' → logprob: -13.375832557678223
    7. '(' → logprob: -13.375832557678223
    8. ' [' → logprob: -14.875832557678223
    9. '1' → logprob: -15.500832557678223
    10. ' c' → logprob: -15.750832557678223

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017133781220763922
    2. '[' → logprob: -6.376713275909424
    3. 'c' → logprob: -12.001713752746582
    4. ' ' → logprob: -13.001713752746582
    5. '1' → logprob: -13.876713752746582
    6. '   ' → logprob: -14.251713752746582
    7. '(' → logprob: -14.376713752746582
    8. '```' → logprob: -15.251713752746582
    9. '][' → logprob: -16.001712799072266
    10. ' [' → logprob: -17.001712799072266

Token 504: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018727846443653107
    2. '+' → logprob: -4.018727779388428
    3. '[' → logprob: -7.643727779388428
    4. ')' → logprob: -9.643728256225586
    5. ' ' → logprob: -11.393728256225586
    6. ']' → logprob: -11.768728256225586
    7. ' -' → logprob: -12.518728256225586
    8. ')+' → logprob: -12.518728256225586
    9. ']+' → logprob: -13.518728256225586
    10. '+c' → logprob: -13.643728256225586

Token 505: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029826855286955833
    2. '+' → logprob: -3.5298268795013428
    3. ' -' → logprob: -10.279827117919922
    4. '[' → logprob: -11.029827117919922
    5. '+c' → logprob: -11.029827117919922
    6. ' ' → logprob: -12.279827117919922
    7. '-' → logprob: -13.029827117919922
    8. ')' → logprob: -14.279827117919922
    9. ' ' → logprob: -14.779827117919922
    10. ' plus' → logprob: -15.279827117919922

Token 506: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005236598663032055
    2. ' c' → logprob: -5.255236625671387
    3. '-c' → logprob: -13.380236625671387
    4. '+c' → logprob: -13.755236625671387
    5. '_c' → logprob: -15.880236625671387
    6. '	c' → logprob: -16.75523567199707
    7. '+' → logprob: -17.75523567199707
    8. ')c' → logprob: -17.88023567199707
    9. ' ' → logprob: -18.75523567199707
    10. '-' → logprob: -19.50523567199707

Token 507: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.994086627149954e-05
    2. '1' → logprob: -9.500080108642578
    3. '[
' → logprob: -12.250080108642578
    4. '(' → logprob: -16.250080108642578
    5. ' [' → logprob: -16.375080108642578
    6. '{' → logprob: -17.375080108642578
    7. '```' → logprob: -18.000080108642578
    8. '
' → logprob: -18.125080108642578
    9. '   ' → logprob: -18.250080108642578
    10. ' ' → logprob: -18.500080108642578

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '-' → logprob: -17.375001907348633
    5. '<|end|>' → logprob: -18.000001907348633
    6. '0' → logprob: -18.375001907348633
    7. ']' → logprob: -18.375001907348633
    8. '(' → logprob: -18.500001907348633
    9. '۱' → logprob: -18.750001907348633
    10. '2' → logprob: -19.062501907348633

Token 509: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17991751432418823
    2. '+' → logprob: -1.804917573928833
    3. ')' → logprob: -9.679917335510254
    4. '[' → logprob: -9.804917335510254
    5. ']' → logprob: -10.554917335510254
    6. ' ' → logprob: -11.804917335510254
    7. ']+' → logprob: -12.054917335510254
    8. '+c' → logprob: -12.179917335510254
    9. ')+' → logprob: -12.304917335510254
    10. ' +
' → logprob: -13.679917335510254

Token 510: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741189181804657
    2. '+' → logprob: -0.9741189479827881
    3. '+c' → logprob: -10.224119186401367
    4. '[' → logprob: -12.474119186401367
    5. ' ' → logprob: -14.349119186401367
    6. '+
' → logprob: -14.599119186401367
    7. ' +
' → logprob: -14.974119186401367
    8. ')+' → logprob: -16.599119186401367
    9. '<|end|>' → logprob: -16.599119186401367
    10. ')' → logprob: -16.974119186401367

Token 511: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005241583567112684
    2. ' c' → logprob: -5.255241394042969
    3. '+c' → logprob: -12.255241394042969
    4. '-c' → logprob: -13.005241394042969
    5. '+' → logprob: -15.505241394042969
    6. '	c' → logprob: -15.630241394042969
    7. ')c' → logprob: -16.25524139404297
    8. '   ' → logprob: -16.38024139404297
    9. ' ' → logprob: -16.63024139404297
    10. '_c' → logprob: -17.13024139404297

Token 512: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017163898795843124
    2. 'c' → logprob: -4.5171637535095215
    3. '2' → logprob: -5.1421637535095215
    4. '-' → logprob: -9.14216423034668
    5. '[-' → logprob: -10.26716423034668
    6. '[
' → logprob: -10.26716423034668
    7. '-c' → logprob: -10.39216423034668
    8. '(' → logprob: -11.39216423034668
    9. '[c' → logprob: -11.39216423034668
    10. '   ' → logprob: -11.89216423034668

Token 513: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001640069531276822
    2. 'c' → logprob: -6.6266398429870605
    3. '[' → logprob: -8.126640319824219
    4. ' ' → logprob: -11.251640319824219
    5. ' c' → logprob: -13.126640319824219
    6. '-c' → logprob: -14.501640319824219
    7. '   ' → logprob: -14.501640319824219
    8. '```' → logprob: -14.751640319824219
    9. '۲' → logprob: -14.876640319824219
    10. '-' → logprob: -15.251640319824219

Token 514: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004481512121856213
    2. '])' → logprob: -5.504481315612793
    3. ']' → logprob: -8.754481315612793
    4. ')c' → logprob: -9.629481315612793
    5. ' )' → logprob: -10.004481315612793
    6. ')
' → logprob: -10.129481315612793
    7. '   ' → logprob: -10.504481315612793
    8. '[])' → logprob: -10.754481315612793
    9. '[' → logprob: -11.004481315612793
    10. ')]' → logprob: -12.129481315612793

Token 515: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6920728087425232
    2. '   ' → logprob: -0.8170728087425232
    3. 'cakes' → logprob: -2.942072868347168
    4. ')c' → logprob: -6.067072868347168
    5. ' cakes' → logprob: -6.942072868347168
    6. 'c' → logprob: -7.442072868347168
    7. ')
' → logprob: -7.817072868347168
    8. ' )' → logprob: -8.317072868347168
    9. '#' → logprob: -9.567072868347168
    10. '    
' → logprob: -9.817072868347168

Token 516: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12340821325778961
    2. ')' → logprob: -2.748408317565918
    3. 'cakes' → logprob: -3.123408317565918
    4. ')
' → logprob: -5.373408317565918
    5. ' cakes' → logprob: -6.248408317565918
    6. 'c' → logprob: -7.373408317565918
    7. ')c' → logprob: -7.498408317565918
    8. '#' (adapté à ' #') → logprob: -8.873408317565918
    9. '  ' → logprob: -9.623408317565918
    10. '
' → logprob: -10.748408317565918

Token 517: ' Cas' (ID: 8066)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.003388502635061741
    2. ' -' → logprob: -6.003388404846191
    3. '(-' → logprob: -8.003388404846191
    4. 'cakes' → logprob: -8.253388404846191
    5. '-' → logprob: -8.503388404846191
    6. '   ' → logprob: -9.628388404846191
    7. ' cakes' → logprob: -10.628388404846191
    8. '
' → logprob: -12.503388404846191
    9. '[-' → logprob: -12.503388404846191
    10. '-ca' → logprob: -13.128388404846191

Token 518: ' où' (ID: 15113)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.8632944822311401
    2. '-c' → logprob: -1.3632944822311401
    3. '(-' → logprob: -1.9882944822311401
    4. '[' → logprob: -2.8632946014404297
    5. '   ' → logprob: -2.9882946014404297
    6. 'c' → logprob: -3.9882946014404297
    7. '[c' → logprob: -4.48829460144043
    8. '#' → logprob: -4.86329460144043
    9. 'cakes' → logprob: -4.98829460144043
    10. ' -' → logprob: -5.23829460144043

Token 519: ' le' (ID: 505)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.021609578281641006
    2. ' -' → logprob: -4.146609783172607
    3. '(-' → logprob: -5.271609783172607
    4. '-' → logprob: -8.14660930633545
    5. '-s' → logprob: -10.27160930633545
    6. '-ce' → logprob: -10.52160930633545
    7. ' (-' → logprob: -10.77160930633545
    8. '   ' → logprob: -11.39660930633545
    9. '
' → logprob: -11.39660930633545
    10. '-ci' → logprob: -11.64660930633545

Token 520: ' premier' (ID: 15506)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.006654149852693081
    2. '(-' → logprob: -5.631654262542725
    3. ' -' → logprob: -6.256654262542725
    4. '-' → logprob: -6.881654262542725
    5. '-ce' → logprob: -10.631653785705566
    6. ' (-' → logprob: -11.006653785705566
    7. '
' → logprob: -11.506653785705566
    8. '-cu' → logprob: -11.631653785705566
    9. 'c' → logprob: -12.006653785705566
    10. '   ' → logprob: -12.006653785705566

Token 521: ' élément' (ID: 99627)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.58091139793396
    2. 'c' → logprob: -0.95591139793396
    3. 'élé' → logprob: -3.58091139793396
    4. ']' → logprob: -4.080911636352539
    5. '-element' → logprob: -6.080911636352539
    6. 'element' → logprob: -6.205911636352539
    7. '[' → logprob: -6.455911636352539
    8. 'cakes' → logprob: -7.080911636352539
    9. '-' → logprob: -7.205911636352539
    10. 'cake' → logprob: -7.330911636352539

Token 522: ' est' (ID: 893)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.07585886120796204
    2. '.append' → logprob: -3.9508588314056396
    3. '   ' → logprob: -3.9508588314056396
    4. '].' → logprob: -4.825859069824219
    5. '.' → logprob: -5.450859069824219
    6. 'cakes' → logprob: -5.450859069824219
    7. '+c' → logprob: -5.575859069824219
    8. '.c' → logprob: -5.575859069824219
    9. ')' → logprob: -5.825859069824219
    10. 'c' → logprob: -6.450859069824219

Token 523: ' sou' (ID: 4069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7105634212493896
    2. '-c' → logprob: -0.7105634212493896
    3. 'sou' → logprob: -4.710563659667969
    4. '-s' → logprob: -5.710563659667969
    5. 'c' → logprob: -6.710563659667969
    6. 'neg' → logprob: -6.835563659667969
    7. ' nég' → logprob: -7.335563659667969
    8. 's' → logprob: -7.960563659667969
    9. ' ajouté' → logprob: -7.960563659667969
    10. '-neg' → logprob: -7.960563659667969

Token 524: 'stra' (ID: 14867)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.7132042646408081
    2. '0' → logprob: -1.588204264640808
    3. '[' → logprob: -1.713204264640808
    4. 'tracted' → logprob: -3.7132043838500977
    5. 'stra' → logprob: -4.338204383850098
    6. 'c' → logprob: -4.338204383850098
    7. '[c' → logprob: -4.338204383850098
    8. 'stract' → logprob: -4.463204383850098
    9. '-' → logprob: -4.713204383850098
    10. 't' → logprob: -4.838204383850098

Token 525: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04443887621164322
    2. 'ct' → logprob: -3.1694388389587402
    3. 'ict' → logprob: -7.41943883895874
    4. 't' → logprob: -7.91943883895874
    5. '   ' → logprob: -9.669439315795898
    6. 'ît' → logprob: -9.794439315795898
    7. 'ité' → logprob: -10.169439315795898
    8. '
' → logprob: -10.419439315795898
    9. '...' → logprob: -10.544439315795898
    10. 'c' → logprob: -10.794439315795898

Token 526: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003599952207878232
    2. ',' → logprob: -7.503600120544434
    3. 'c' → logprob: -7.503600120544434
    4. '-c' → logprob: -7.628600120544434
    5. ')' → logprob: -7.753600120544434
    6. '(-' → logprob: -8.003600120544434
    7. '[-' → logprob: -8.628600120544434
    8. '+c' → logprob: -8.628600120544434
    9. '[' → logprob: -8.753600120544434
    10. ' (-' → logprob: -9.003600120544434

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12748046219348907
    2. 'cakes' → logprob: -2.1274805068969727
    3. ' cakes' → logprob: -7.627480506896973
    4. 'cake' → logprob: -11.252480506896973
    5. 'c' → logprob: -11.377480506896973
    6. '```' → logprob: -11.752480506896973
    7. '    
' → logprob: -12.002480506896973
    8. '  ' → logprob: -12.252480506896973
    9. 'cak' → logprob: -12.502480506896973
    10. 'cars' → logprob: -12.627480506896973

Token 528: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' (adapté à ' cakes') → logprob: -0.007871478796005249
    2. '   ' → logprob: -4.882871627807617
    3. ' cakes' → logprob: -8.382871627807617
    4. 'cake' → logprob: -10.382871627807617
    5. 'cak' → logprob: -13.882871627807617
    6. 'cars' → logprob: -13.882871627807617
    7. '  ' → logprob: -14.007871627807617
    8. '    
' → logprob: -14.382871627807617
    9. ' ' → logprob: -14.632871627807617
    10. '
' → logprob: -15.132871627807617

Token 529: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -13.875003814697266
    3. '.' → logprob: -14.125003814697266
    4. '4' → logprob: -14.500003814697266
    5. '[
' → logprob: -14.625003814697266
    6. '5' → logprob: -14.875003814697266
    7. '   ' → logprob: -15.000003814697266
    8. '[c' → logprob: -15.500003814697266
    9. ' [' → logprob: -15.875003814697266
    10. '\[' → logprob: -16.250003814697266

Token 530: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. '４' → logprob: -17.25
    3. '۴' → logprob: -17.625
    4. '
' → logprob: -17.75
    5. '৪' → logprob: -18.25
    6. '[' → logprob: -18.375
    7. ' ' → logprob: -18.375
    8. '' → logprob: -18.5625
    9. '४' → logprob: -18.875
    10. '٤' → logprob: -19.1875

Token 531: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0322323739528656
    2. '[' → logprob: -4.282232284545898
    3. '.append' → logprob: -4.657232284545898
    4. '.' → logprob: -5.657232284545898
    5. '[c' → logprob: -5.907232284545898
    6. ').' → logprob: -6.907232284545898
    7. '   ' → logprob: -7.032232284545898
    8. ']' → logprob: -9.532232284545898
    9. '}.' → logprob: -9.657232284545898
    10. '][' → logprob: -10.032232284545898

Token 532: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.002478273818269372
    2. '.append' → logprob: -6.002478122711182
    3. ' append' → logprob: -13.37747859954834
    4. '	append' → logprob: -15.00247859954834
    5. 'appen' → logprob: -15.12747859954834
    6. 'cakes' → logprob: -15.37747859954834
    7. 'c' → logprob: -16.752477645874023
    8. '[]' → logprob: -17.127477645874023
    9. '_append' → logprob: -17.252477645874023
    10. '.' → logprob: -17.627477645874023

Token 533: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.875003814697266
    3. '-c' → logprob: -14.125003814697266
    4. ' (-' → logprob: -16.750003814697266
    5. '[-' → logprob: -18.000003814697266
    6. '-k' → logprob: -19.000003814697266
    7. '-p' → logprob: -19.500003814697266
    8. '-s' → logprob: -19.500003814697266
    9. '   ' → logprob: -19.750003814697266
    10. '```' → logprob: -20.000003814697266

Token 534: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -14.875
    3. '(c' → logprob: -17.375
    4. ')c' → logprob: -17.75
    5. 'cake' → logprob: -18.125
    6. 'cakes' → logprob: -18.5
    7. '_c' → logprob: -19.375
    8. '	c' → logprob: -20.0
    9. '-c' → logprob: -20.25
    10. '0' → logprob: -21.25

Token 535: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00534867076203227
    2. 'c' → logprob: -5.2553486824035645
    3. '0' → logprob: -9.130348205566406
    4. '[c' → logprob: -12.130348205566406
    5. '[
' → logprob: -14.880348205566406
    6. ' c' → logprob: -15.755348205566406
    7. ' [' → logprob: -16.005348205566406
    8. 'o' → logprob: -16.255348205566406
    9. '```' → logprob: -16.630348205566406
    10. '`' → logprob: -17.130348205566406

Token 536: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10026911646127701
    2. 'c' → logprob: -2.350269079208374
    3. '[' → logprob: -9.725269317626953
    4. ' c' → logprob: -13.475269317626953
    5. ' ' → logprob: -14.350269317626953
    6. 'o' → logprob: -14.975269317626953
    7. '   ' → logprob: -16.350269317626953
    8. 'n' → logprob: -16.475269317626953
    9. '```' → logprob: -16.475269317626953
    10. ')c' → logprob: -16.600269317626953

Token 537: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04870261996984482
    2. '+' → logprob: -3.0487027168273926
    3. '[' → logprob: -9.298702239990234
    4. ']' → logprob: -11.298702239990234
    5. ')' → logprob: -12.298702239990234
    6. ' ' → logprob: -12.673702239990234
    7. ']+' → logprob: -13.798702239990234
    8. '>' → logprob: -14.048702239990234
    9. ' [' → logprob: -14.173702239990234
    10. ')+' → logprob: -15.423702239990234

Token 538: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.033654917031526566
    2. '+' → logprob: -3.4086549282073975
    3. '[' → logprob: -12.033655166625977
    4. ' ' → logprob: -13.408655166625977
    5. '+c' → logprob: -13.408655166625977
    6. ' +
' → logprob: -16.783655166625977
    7. ' [' → logprob: -16.783655166625977
    8. ')' → logprob: -17.283655166625977
    9. ' ' → logprob: -17.783655166625977
    10. '   ' → logprob: -18.158655166625977

Token 539: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. 'cakes' → logprob: -18.508615493774414
    4. ')c' → logprob: -18.633615493774414
    5. '	c' → logprob: -18.758615493774414
    6. '+c' → logprob: -19.008615493774414
    7. 'cake' → logprob: -19.758615493774414
    8. ' ' → logprob: -19.758615493774414
    9. '$c' → logprob: -20.383615493774414
    10. ' cakes' → logprob: -20.383615493774414

Token 540: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14273643493652344
    2. '1' → logprob: -2.0177364349365234
    3. 'm' → logprob: -11.017736434936523
    4. ' ' → logprob: -11.267736434936523
    5. '[
' → logprob: -11.517736434936523
    6. '-' → logprob: -11.892736434936523
    7. ']' → logprob: -12.267736434936523
    8. '(' → logprob: -12.892736434936523
    9. '][' → logprob: -13.767736434936523
    10. ' [' → logprob: -13.892736434936523

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. 'm' → logprob: -10.875024795532227
    3. '-' → logprob: -12.875024795532227
    4. '[' → logprob: -13.000024795532227
    5. ' ' → logprob: -14.125024795532227
    6. '2' → logprob: -17.000024795532227
    7. '
' → logprob: -17.625024795532227
    8. ']' → logprob: -17.750024795532227
    9. '   ' → logprob: -17.750024795532227
    10. '(' → logprob: -17.750024795532227

Token 542: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.393598347902298
    2. '-' → logprob: -1.6435983180999756
    3. ']' → logprob: -2.1435983180999756
    4. ')' → logprob: -4.893598556518555
    5. '[' → logprob: -5.393598556518555
    6. ' ' → logprob: -6.768598556518555
    7. '+' → logprob: -7.518598556518555
    8. ']-' → logprob: -7.518598556518555
    9. ' ]' → logprob: -9.518598556518555
    10. ' +' → logprob: -9.518598556518555

Token 543: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.062003977596759796
    2. ' -' → logprob: -2.8120040893554688
    3. '-c' → logprob: -10.312004089355469
    4. '-
' → logprob: -13.937004089355469
    5. ')' → logprob: -14.062004089355469
    6. '[' → logprob: -14.187004089355469
    7. ' ' → logprob: -15.187004089355469
    8. ']' → logprob: -16.43700408935547
    9. '+' → logprob: -16.81200408935547
    10. '-k' → logprob: -16.93700408935547

Token 544: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006716555915772915
    2. ' c' → logprob: -5.006716728210449
    3. '-c' → logprob: -13.75671672821045
    4. '_c' → logprob: -16.506715774536133
    5. ')c' → logprob: -17.131715774536133
    6. '	c' → logprob: -17.256715774536133
    7. 'cakes' → logprob: -17.256715774536133
    8. '-' → logprob: -18.131715774536133
    9. 'cake' → logprob: -18.881715774536133
    10. ' ' → logprob: -19.631715774536133

Token 545: '[' (ID: 58)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2530865967273712
    2. '[' → logprob: -1.5030865669250488
    3. '[c' → logprob: -7.128086566925049
    4. ' c' → logprob: -8.753087043762207
    5. '-c' → logprob: -9.253087043762207
    6. ')c' → logprob: -10.503087043762207
    7. '(c' → logprob: -10.753087043762207
    8. '_c' → logprob: -11.503087043762207
    9. ']' → logprob: -11.628087043762207
    10. '	c' → logprob: -11.753087043762207

Token 546: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.718606891809031e-05
    2. ' c' → logprob: -9.750066757202148
    3. '[' → logprob: -11.750066757202148
    4. '-c' → logprob: -14.750066757202148
    5. ')c' → logprob: -15.000066757202148
    6. '2' → logprob: -15.125066757202148
    7. '	c' → logprob: -16.75006675720215
    8. '_c' → logprob: -16.87506675720215
    9. '.c' → logprob: -17.87506675720215
    10. '0' → logprob: -18.00006675720215

Token 547: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004473540757317096
    2. '])
' → logprob: -8.125447273254395
    3. ')' → logprob: -9.375447273254395
    4. ']' → logprob: -9.875447273254395
    5. '])

' → logprob: -12.250447273254395
    6. ')]' → logprob: -12.625447273254395
    7. ''])' → logprob: -13.625447273254395
    8. ' ])' → logprob: -13.750447273254395
    9. '])
' → logprob: -13.875447273254395
    10. '))' → logprob: -14.625447273254395

Token 548: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016868332400918007
    2. ')' → logprob: -4.2668681144714355
    3. 'cakes' → logprob: -6.8918681144714355
    4. '(c' → logprob: -7.5168681144714355
    5. ')c' → logprob: -7.5168681144714355
    6. ' cakes' → logprob: -8.391868591308594
    7. 'c' → logprob: -8.641868591308594
    8. '    
' → logprob: -10.266868591308594
    9. '(' → logprob: -10.391868591308594
    10. '    ' → logprob: -11.141868591308594

Token 549: ' #' (ID: 1069)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.20416726171970367
    2. 'c' → logprob: -2.454167366027832
    3. ')' → logprob: -3.579167366027832
    4. '#' (adapté à ' #') → logprob: -3.954167366027832
    5. '(c' → logprob: -3.954167366027832
    6. ')c' → logprob: -4.079167366027832
    7. ' cakes' → logprob: -4.704167366027832
    8. '   ' → logprob: -6.454167366027832
    9. '(' → logprob: -6.579167366027832
    10. '-c' → logprob: -7.329167366027832

Token 550: ' Cas' (ID: 8066)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.14538824558258057
    2. '(-' → logprob: -2.145388126373291
    3. ' -' → logprob: -4.020388126373291
    4. ' (-' → logprob: -8.02038860321045
    5. '[-' → logprob: -11.89538860321045
    6. '-' → logprob: -12.39538860321045
    7. '-C' → logprob: -13.64538860321045
    8. '-ca' → logprob: -14.27038860321045
    9. '(' → logprob: -14.77038860321045
    10. '-ce' → logprob: -14.89538860321045

Token 551: ' où' (ID: 15113)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.30004632472991943
    2. '-c' → logprob: -1.6750463247299194
    3. '[-' → logprob: -2.675046443939209
    4. '[' → logprob: -6.800046443939209
    5. '[c' → logprob: -7.300046443939209
    6. ' -' → logprob: -7.800046443939209
    7. '-' → logprob: -8.05004596710205
    8. '-s' → logprob: -9.30004596710205
    9. ' (-' → logprob: -9.30004596710205
    10. '(' → logprob: -9.55004596710205

Token 552: ' le' (ID: 505)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.007913108915090561
    2. ' -' → logprob: -4.882913112640381
    3. '(-' → logprob: -8.257912635803223
    4. '-' → logprob: -10.132912635803223
    5. '-ci' → logprob: -12.507912635803223
    6. '   ' → logprob: -13.757912635803223
    7. ' (-' → logprob: -14.507912635803223
    8. '-ce' → logprob: -14.882912635803223
    9. '
' → logprob: -15.132912635803223
    10. '    ' → logprob: -15.507912635803223

Token 553: ' premier' (ID: 15506)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.005745929665863514
    2. '-' → logprob: -5.505745887756348
    3. ' -' → logprob: -7.005745887756348
    4. '(-' → logprob: -7.255745887756348
    5. '[-' → logprob: -10.755745887756348
    6. '[' → logprob: -10.880745887756348
    7. '
' → logprob: -12.755745887756348
    8. '(' → logprob: -12.880745887756348
    9. '1' → logprob: -13.630745887756348
    10. '-k' → logprob: -13.755745887756348

Token 554: ' et' (ID: 859)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.15374955534934998
    2. '-element' → logprob: -2.278749465942383
    3. '-' → logprob: -3.778749465942383
    4. ' element' → logprob: -5.403749465942383
    5. ' -' → logprob: -5.403749465942383
    6. '[' → logprob: -5.903749465942383
    7. 'élé' → logprob: -6.653749465942383
    8. 'element' → logprob: -6.778749465942383
    9. ' élément' → logprob: -6.903749465942383
    10. '_element' → logprob: -7.028749465942383

Token 555: ' le' (ID: 505)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.1800096184015274
    2. ' -' → logprob: -1.8050096035003662
    3. '-' → logprob: -8.680009841918945
    4. '(-' → logprob: -10.055009841918945
    5. 'c' → logprob: -10.180009841918945
    6. '
' → logprob: -12.430009841918945
    7. ' c' → logprob: -12.680009841918945
    8. ' (-' → logprob: -13.180009841918945
    9. '-ci' → logprob: -14.055009841918945
    10. '_c' → logprob: -14.180009841918945

Token 556: ' troisième' (ID: 75373)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07491840422153473
    2. 'c' → logprob: -3.449918508529663
    3. '1' → logprob: -3.574918508529663
    4. '-c' → logprob: -5.574918270111084
    5. ']' → logprob: -5.699918270111084
    6. '[c' → logprob: -5.949918270111084
    7. '-' → logprob: -6.574918270111084
    8. '2' → logprob: -7.699918270111084
    9. '[
' → logprob: -8.824918746948242
    10. '][' → logprob: -9.074918746948242

Token 557: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.069127656519413
    2. '-' → logprob: -4.194127559661865
    3. 'elements' → logprob: -4.194127559661865
    4. ' éléments' → logprob: -4.819127559661865
    5. 'element' → logprob: -5.194127559661865
    6. '-c' → logprob: -5.194127559661865
    7. ' elements' → logprob: -5.319127559661865
    8. ' élément' → logprob: -5.444127559661865
    9. '-element' → logprob: -6.444127559661865
    10. 'c' → logprob: -6.444127559661865

Token 558: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3926820158958435
    2. '.append' → logprob: -1.8926820755004883
    3. ' are' → logprob: -2.7676820755004883
    4. '])' → logprob: -3.5176820755004883
    5. ']' → logprob: -3.7676820755004883
    6. 's' → logprob: -4.017682075500488
    7. 'are' → logprob: -4.642682075500488
    8. '<|end|>' → logprob: -4.767682075500488
    9. ' sont' → logprob: -5.142682075500488
    10. ')]' → logprob: -5.392682075500488

Token 559: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.4396214783191681
    2. 's' → logprob: -1.5646214485168457
    3. ' sou' → logprob: -1.9396214485168457
    4. '-' → logprob: -6.064621448516846
    5. 'sub' → logprob: -8.064621925354004
    6. '-s' → logprob: -10.064621925354004
    7. ' soumis' → logprob: -10.689621925354004
    8. ' ' → logprob: -11.189621925354004
    9. ' -' → logprob: -11.189621925354004
    10. ' sub' → logprob: -11.439621925354004

Token 560: 'stra' (ID: 14867)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8408263921737671
    2. 'stra' → logprob: -1.840826392173767
    3. '-' → logprob: -2.2158265113830566
    4. '[-' → logprob: -2.5908265113830566
    5. '[c' → logprob: -2.7158265113830566
    6. '-c' → logprob: -3.5908265113830566
    7. '(' → logprob: -3.8408265113830566
    8. 'tras' → logprob: -3.9658265113830566
    9. 'tra' → logprob: -3.9658265113830566
    10. '(c' → logprob: -4.090826511383057

Token 561: 'its' (ID: 1348)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7843323349952698
    2. 'ct' → logprob: -0.7843323349952698
    3. 'its' → logprob: -2.659332275390625
    4. 'ict' → logprob: -4.534332275390625
    5. 'cts' → logprob: -6.284332275390625
    6. 't' → logprob: -7.534332275390625
    7. '```' → logprob: -7.909332275390625
    8. '
' → logprob: -8.284332275390625
    9. '   ' → logprob: -8.284332275390625
    10. 'ient' → logprob: -8.409332275390625

Token 562: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012582694762386382
    2. ')' → logprob: -9.750125885009766
    3. 'c' → logprob: -10.750125885009766
    4. ' ' → logprob: -11.500125885009766
    5. 'cakes' → logprob: -11.500125885009766
    6. '  ' → logprob: -12.250125885009766
    7. '<|end|>' → logprob: -12.875125885009766
    8. '(c' → logprob: -12.875125885009766
    9. '	c' → logprob: -13.000125885009766
    10. '    ' → logprob: -13.125125885009766

Token 563: '   ' (ID: 271)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.5237246155738831
    2. '   ' → logprob: -0.8987246155738831
    3. ' cakes' → logprob: -7.648724555969238
    4. 'cake' → logprob: -9.898724555969238
    5. '```' → logprob: -10.773724555969238
    6. '    
' → logprob: -12.023724555969238
    7. ' ' → logprob: -12.148724555969238
    8. 'cars' → logprob: -12.398724555969238
    9. '
' → logprob: -12.523724555969238
    10. 'cak' → logprob: -12.648724555969238

Token 564: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' (adapté à ' cakes') → logprob: -0.04165003448724747
    2. '   ' → logprob: -3.2916500568389893
    3. ' cakes' → logprob: -5.66664981842041
    4. 'cake' → logprob: -9.91664981842041
    5. '-c' → logprob: -10.29164981842041
    6. 'c' → logprob: -10.41664981842041
    7. '-' → logprob: -12.54164981842041
    8. '7' → logprob: -12.54164981842041
    9. '```' → logprob: -13.04164981842041
    10. 'cups' → logprob: -13.04164981842041

Token 565: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '6' → logprob: -12.375005722045898
    3. '[
' → logprob: -14.625005722045898
    4. '```' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.250005722045898
    6. 's' → logprob: -15.625005722045898
    7. ' [' → logprob: -16.0000057220459
    8. 'c' → logprob: -16.6250057220459
    9. '5' → logprob: -17.3750057220459
    10. '7' → logprob: -17.3750057220459

Token 566: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.003929625730961561
    2. '4' → logprob: -5.628929615020752
    3. '6' → logprob: -8.12893009185791
    4. '[' → logprob: -10.50393009185791
    5. ' ' → logprob: -13.00393009185791
    6. '-' → logprob: -13.25393009185791
    7. '
' → logprob: -13.87893009185791
    8. '```' → logprob: -15.06643009185791
    9. '(' → logprob: -15.12893009185791
    10. '   ' → logprob: -15.25393009185791

Token 567: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5939779877662659
    2. '.append' → logprob: -0.8439779877662659
    3. '.' → logprob: -4.343977928161621
    4. '[' → logprob: -6.093977928161621
    5. ').' → logprob: -6.968977928161621
    6. '.c' → logprob: -7.218977928161621
    7. '[].' → logprob: -8.718977928161621
    8. '}.' → logprob: -8.843977928161621
    9. '[c' → logprob: -8.968977928161621
    10. '[-' → logprob: -9.093977928161621

Token 568: 'append' (ID: 9132)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.39633357524871826
    2. '[-' → logprob: -1.2713335752487183
    3. 'append' → logprob: -3.896333694458008
    4. '-' → logprob: -4.021333694458008
    5. '.append' → logprob: -5.396333694458008
    6. '-c' → logprob: -5.896333694458008
    7. '[' → logprob: -8.271333694458008
    8. ' (-' → logprob: -8.396333694458008
    9. ' -' → logprob: -8.646333694458008
    10. '-app' → logprob: -8.896333694458008

Token 569: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -4.1318875446449965e-05
    2. '(' → logprob: -10.125041007995605
    3. '[-' → logprob: -14.125041007995605
    4. '(
' → logprob: -14.875041007995605
    5. '([-' → logprob: -16.000041961669922
    6. ' (-' → logprob: -16.625041961669922
    7. '-' → logprob: -18.875041961669922
    8. '(+' → logprob: -18.875041961669922
    9. '((-' → logprob: -18.875041961669922
    10. '[' → logprob: -19.500041961669922

Token 570: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.704273118884885e-07
    2. ' c' → logprob: -15.125000953674316
    3. ')c' → logprob: -15.375000953674316
    4. '(c' → logprob: -15.875000953674316
    5. '0' → logprob: -17.375
    6. '_c' → logprob: -18.0
    7. '-c' → logprob: -18.25
    8. 'cake' → logprob: -18.75
    9. 'cakes' → logprob: -19.0
    10. '	c' → logprob: -19.375

Token 571: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005574395763687789
    2. '0' → logprob: -7.5005574226379395
    3. 'c' → logprob: -12.375557899475098
    4. '[
' → logprob: -16.12555694580078
    5. ' [' → logprob: -16.75055694580078
    6. '```' → logprob: -16.87555694580078
    7. '(' → logprob: -17.87555694580078
    8. '[c' → logprob: -18.37555694580078
    9. ' ' → logprob: -18.75055694580078
    10. '()[' → logprob: -19.00055694580078

Token 572: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005672106635756791
    2. 'c' → logprob: -7.500567436218262
    3. '[' → logprob: -11.250567436218262
    4. ' ' → logprob: -14.125567436218262
    5. '```' → logprob: -15.750567436218262
    6. ' c' → logprob: -16.250566482543945
    7. 'int' → logprob: -16.375566482543945
    8. 'o' → logprob: -16.875566482543945
    9. '   ' → logprob: -17.000566482543945
    10. '#' → logprob: -17.125566482543945

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4434419870376587
    2. ' +' → logprob: -1.1934419870376587
    3. '+' → logprob: -3.193441867828369
    4. '[' → logprob: -5.193441867828369
    5. ')' → logprob: -5.568441867828369
    6. ']+' → logprob: -5.693441867828369
    7. ' ' → logprob: -7.318441867828369
    8. ' -' → logprob: -8.443442344665527
    9. ' ]' → logprob: -9.568442344665527
    10. '>' → logprob: -9.818442344665527

Token 574: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10269544273614883
    2. '+' → logprob: -2.9776954650878906
    3. ' -' → logprob: -3.1026954650878906
    4. '-' → logprob: -6.477695465087891
    5. ' ' → logprob: -8.72769546508789
    6. '[' → logprob: -10.85269546508789
    7. ')' → logprob: -11.10269546508789
    8. '+c' → logprob: -11.22769546508789
    9. '   ' → logprob: -12.97769546508789
    10. '  ' → logprob: -13.35269546508789

Token 575: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048589304089546204
    2. ' c' → logprob: -3.0485892295837402
    3. ')c' → logprob: -14.173589706420898
    4. '_c' → logprob: -14.673589706420898
    5. '<|end|>' → logprob: -14.798589706420898
    6. '(c' → logprob: -15.173589706420898
    7. '	c' → logprob: -16.0485897064209
    8. '.c' → logprob: -16.9235897064209
    9. '[' → logprob: -17.0485897064209
    10. '1' → logprob: -17.4235897064209

Token 576: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7120533811976202e-05
    2. '1' → logprob: -11.375017166137695
    3. 'c' → logprob: -12.250017166137695
    4. '[
' → logprob: -14.750017166137695
    5. '(' → logprob: -16.625017166137695
    6. ']' → logprob: -17.250017166137695
    7. 'import' → logprob: -17.250017166137695
    8. '][' → logprob: -17.375017166137695
    9. '   ' → logprob: -17.625017166137695
    10. 's' → logprob: -17.875017166137695

Token 577: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013267839094623923
    2. '[' → logprob: -6.626326560974121
    3. ' ' → logprob: -14.501326560974121
    4. ']' → logprob: -16.126327514648438
    5. '[
' → logprob: -16.126327514648438
    6. '   ' → logprob: -16.876327514648438
    7. '```' → logprob: -17.501327514648438
    8. '#' → logprob: -17.876327514648438
    9. '][' → logprob: -18.001327514648438
    10. 'c' → logprob: -18.376327514648438

Token 578: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6360905170440674
    2. ' +' → logprob: -0.7610905170440674
    3. ']' → logprob: -6.386090278625488
    4. '[' → logprob: -6.511090278625488
    5. ')' → logprob: -8.761090278625488
    6. ' ' → logprob: -10.386090278625488
    7. ']+' → logprob: -10.386090278625488
    8. ' -' → logprob: -10.511090278625488
    9. '-' → logprob: -10.636090278625488
    10. '+c' → logprob: -12.386090278625488

Token 579: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740978181362152
    2. ' +' → logprob: -0.9740978479385376
    3. '[' → logprob: -11.349098205566406
    4. ')' → logprob: -12.849098205566406
    5. ']' → logprob: -13.474098205566406
    6. ' ' → logprob: -13.599098205566406
    7. '+c' → logprob: -13.974098205566406
    8. '+
' → logprob: -14.349098205566406
    9. ']+' → logprob: -14.974098205566406
    10. ')+' → logprob: -15.099098205566406

Token 580: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750484973192215
    2. ' c' → logprob: -3.5297505855560303
    3. '+c' → logprob: -17.52975082397461
    4. '	c' → logprob: -17.77975082397461
    5. ')c' → logprob: -18.27975082397461
    6. '_c' → logprob: -18.90475082397461
    7. ' ' → logprob: -19.52975082397461
    8. '+' → logprob: -19.77975082397461
    9. ' ' → logprob: -20.02975082397461
    10. '(c' → logprob: -20.52975082397461

Token 581: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004587903094943613
    2. '2' → logprob: -7.750458717346191
    3. 'c' → logprob: -11.375458717346191
    4. '(' → logprob: -12.125458717346191
    5. '
' → logprob: -12.125458717346191
    6. '[
' → logprob: -12.750458717346191
    7. '[c' → logprob: -14.125458717346191
    8. '   ' → logprob: -15.375458717346191
    9. '

' → logprob: -15.625458717346191
    10. '`' → logprob: -15.625458717346191

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055012498050928116
    2. '[' → logprob: -2.9300124645233154
    3. 'c' → logprob: -9.180012702941895
    4. ' ' → logprob: -11.055012702941895
    5. '(' → logprob: -12.055012702941895
    6. '   ' → logprob: -13.680012702941895
    7. ']' → logprob: -13.930012702941895
    8. '
' → logprob: -13.930012702941895
    9. ' c' → logprob: -14.555012702941895
    10. '```' → logprob: -14.930012702941895

Token 583: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31390562653541565
    2. ')' → logprob: -1.3139055967330933
    3. ']' → logprob: -7.938905715942383
    4. ')]' → logprob: -8.563905715942383
    5. ').' → logprob: -10.813905715942383
    6. '])
' → logprob: -10.938905715942383
    7. ')c' → logprob: -11.063905715942383
    8. '))' → logprob: -11.438905715942383
    9. ')])' → logprob: -12.063905715942383
    10. '].' → logprob: -12.313905715942383

Token 584: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23047055304050446
    2. ')' → logprob: -2.355470657348633
    3. '(c' → logprob: -2.480470657348633
    4. ')c' → logprob: -3.980470657348633
    5. '(-' → logprob: -6.105470657348633
    6. '(' → logprob: -6.355470657348633
    7. 'cakes' → logprob: -6.605470657348633
    8. 'c' → logprob: -6.605470657348633
    9. '.append' → logprob: -7.855470657348633
    10. '#' → logprob: -8.605470657348633

Token 585: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5618386268615723
    2. ')' → logprob: -1.4368386268615723
    3. 'cakes' → logprob: -2.3118386268615723
    4. '#' (adapté à ' #') → logprob: -2.8118386268615723
    5. ' cakes' → logprob: -4.186838626861572
    6. ')c' → logprob: -4.686838626861572
    7. 'c' → logprob: -5.311838626861572
    8. ')#' → logprob: -6.311838626861572
    9. '(c' → logprob: -8.311838150024414
    10. ' ' → logprob: -8.311838150024414

Token 586: ' Cas' (ID: 8066)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.041175149381160736
    2. '(-' → logprob: -3.291175127029419
    3. ' -' → logprob: -5.791175365447998
    4. '-k' → logprob: -10.54117488861084
    5. '-' → logprob: -10.91617488861084
    6. ' (-' → logprob: -11.41617488861084
    7. '-ce' → logprob: -12.16617488861084
    8. '-s' → logprob: -12.66617488861084
    9. '-ci' → logprob: -13.54117488861084
    10. '[-' → logprob: -13.66617488861084

Token 587: ' où' (ID: 15113)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.02588718943297863
    2. '(-' → logprob: -4.6508870124816895
    3. '[-' → logprob: -5.0258870124816895
    4. ' -' → logprob: -5.4008870124816895
    5. '-' → logprob: -5.6508870124816895
    6. '[' → logprob: -7.1508870124816895
    7. '   ' → logprob: -8.775887489318848
    8. '[c' → logprob: -9.275887489318848
    9. '-k' → logprob: -9.525887489318848
    10. '0' → logprob: -9.900887489318848

Token 588: ' le' (ID: 505)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.010471240617334843
    2. ' -' → logprob: -5.510471343994141
    3. '(-' → logprob: -5.635471343994141
    4. '-' → logprob: -5.885471343994141
    5. '-ce' → logprob: -12.01047134399414
    6. '-k' → logprob: -12.26047134399414
    7. '-ci' → logprob: -12.26047134399414
    8. ' (-' → logprob: -13.88547134399414
    9. '-p' → logprob: -14.01047134399414
    10. '-n' → logprob: -14.26047134399414

Token 589: ' premier' (ID: 15506)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7465671300888062
    2. '-c' → logprob: -0.7465671300888062
    3. ' premier' → logprob: -3.7465672492980957
    4. 'prem' → logprob: -4.121567249298096
    5. '-prem' → logprob: -4.996567249298096
    6. '[' → logprob: -6.121567249298096
    7. '0' → logprob: -7.246567249298096
    8. 'c' → logprob: -7.496567249298096
    9. ' -' → logprob: -7.871567249298096
    10. 'first' → logprob: -7.996567249298096

Token 590: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.035054974257946014
    2. '[' → logprob: -4.035055160522461
    3. '-' → logprob: -4.285055160522461
    4. '-c' → logprob: -6.910055160522461
    5. ' and' → logprob: -7.410055160522461
    6. ' ' → logprob: -7.785055160522461
    7. ']' → logprob: -8.535055160522461
    8. ',' → logprob: -8.535055160522461
    9. ')' → logprob: -9.160055160522461
    10. ' [' → logprob: -9.410055160522461

Token 591: ' le' (ID: 505)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.07483722269535065
    2. ' -' → logprob: -2.6998372077941895
    3. '-' → logprob: -5.3248372077941895
    4. '-n' → logprob: -12.324837684631348
    5. 'c' → logprob: -12.574837684631348
    6. ' ' → logprob: -12.699837684631348
    7. '
' → logprob: -13.199837684631348
    8. '-ci' → logprob: -13.199837684631348
    9. '-
' → logprob: -13.449837684631348
    10. ' c' → logprob: -13.699837684631348

Token 592: ' deuxième' (ID: 51664)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5859647393226624
    2. '[' → logprob: -1.4609646797180176
    3. '-c' → logprob: -2.2109646797180176
    4. 'c' → logprob: -2.9609646797180176
    5. '[c' → logprob: -3.5859646797180176
    6. '1' → logprob: -4.710964679718018
    7. ']' → logprob: -5.210964679718018
    8. ' -' → logprob: -5.960964679718018
    9. '[
' → logprob: -6.085964679718018
    10. '[-' → logprob: -6.085964679718018

Token 593: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6961527466773987
    2. ' éléments' → logprob: -0.6961527466773987
    3. 'elements' → logprob: -6.571152687072754
    4. ' elements' → logprob: -7.696152687072754
    5. ' élément' → logprob: -7.696152687072754
    6. '-' → logprob: -7.946152687072754
    7. '-c' → logprob: -9.446152687072754
    8. ' él' → logprob: -9.571152687072754
    9. 'c' → logprob: -9.821152687072754
    10. 'é' → logprob: -10.821152687072754

Token 594: ' sont' (ID: 5242)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.09930136054754257
    2. 'are' → logprob: -2.974301338195801
    3. 's' → logprob: -4.224301338195801
    4. ' sont' → logprob: -4.974301338195801
    5. ']' → logprob: -5.349301338195801
    6. '.append' → logprob: -5.474301338195801
    7. ')' → logprob: -5.849301338195801
    8. '-' → logprob: -5.974301338195801
    9. '+' → logprob: -6.099301338195801
    10. 'c' → logprob: -6.474301338195801

Token 595: ' sou' (ID: 4069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8139230608940125
    2. 'sou' → logprob: -0.9389230608940125
    3. ' sou' → logprob: -2.0639231204986572
    4. 's' → logprob: -3.3139231204986572
    5. '-s' → logprob: -6.188922882080078
    6. 'sub' → logprob: -8.813922882080078
    7. ' ' → logprob: -9.063922882080078
    8. ' -' → logprob: -9.813922882080078
    9. ' soumis' → logprob: -9.813922882080078
    10. ' sú' → logprob: -10.938922882080078

Token 596: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.70383620262146
    2. 'tr' → logprob: -1.45383620262146
    3. 'tra' → logprob: -1.95383620262146
    4. 'str' → logprob: -2.70383620262146
    5. 'tracted' → logprob: -3.45383620262146
    6. 'tract' → logprob: -4.828836441040039
    7. 'tras' → logprob: -4.953836441040039
    8. '-' → logprob: -5.328836441040039
    9. 'trait' → logprob: -6.078836441040039
    10. 'stract' → logprob: -6.828836441040039

Token 597: 'its' (ID: 1348)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.053009022027254105
    2. 'it' → logprob: -3.053009033203125
    3. 'ict' → logprob: -6.428009033203125
    4. 't' → logprob: -6.553009033203125
    5. 'its' → logprob: -7.553009033203125
    6. 'cts' → logprob: -8.428009033203125
    7. 'is' → logprob: -9.428009033203125
    8. 'c' → logprob: -9.428009033203125
    9. 'pt' → logprob: -10.303009033203125
    10. '(ct' → logprob: -10.428009033203125

Token 598: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10160104930400848
    2. ')' → logprob: -2.3516011238098145
    3. ')c' → logprob: -7.2266011238098145
    4. 'cakes' → logprob: -8.476600646972656
    5. '  ' → logprob: -9.351600646972656
    6. 'c' → logprob: -9.351600646972656
    7. ')
' → logprob: -9.976600646972656
    8. '[]' → logprob: -10.351600646972656
    9. ' )' → logprob: -10.351600646972656
    10. ' ' → logprob: -10.476600646972656

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38696885108947754
    2. 'cakes' → logprob: -1.1369688510894775
    3. ' cakes' → logprob: -9.761968612670898
    4. '```' → logprob: -11.636968612670898
    5. '7' → logprob: -12.011968612670898
    6. 'cars' → logprob: -12.136968612670898
    7. 'c' → logprob: -12.261968612670898
    8. 'cake' → logprob: -12.761968612670898
    9. '	c' → logprob: -13.386968612670898
    10. 'ca' → logprob: -13.511968612670898

Token 600: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' (adapté à ' cakes') → logprob: -2.8087270038668066e-05
    2. ' cakes' → logprob: -10.625027656555176
    3. '   ' → logprob: -12.750027656555176
    4. 'cake' → logprob: -14.000027656555176
    5. '7' → logprob: -18.000028610229492
    6. 'cak' → logprob: -19.250028610229492
    7. 'for' → logprob: -19.375028610229492
    8. '```' → logprob: -19.500028610229492
    9. '
' → logprob: -19.875028610229492
    10. '       ' → logprob: -20.125028610229492

Token 601: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. '7' → logprob: -11.750009536743164
    3. '[-' → logprob: -13.750009536743164
    4. '[
' → logprob: -16.000009536743164
    5. '```' → logprob: -17.000009536743164
    6. '[].' → logprob: -17.500009536743164
    7. '.' → logprob: -17.750009536743164
    8. '\[' → logprob: -18.500009536743164
    9. '#' → logprob: -19.000009536743164
    10. '
' → logprob: -19.000009536743164

Token 602: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.664371848164592e-05
    2. '7' → logprob: -11.125016212463379
    3. '-' → logprob: -13.375016212463379
    4. ' ' → logprob: -16.375017166137695
    5. '[' → logprob: -16.500017166137695
    6. '
' → logprob: -17.125017166137695
    7. '```' → logprob: -18.375017166137695
    8. ' -' → logprob: -18.500017166137695
    9. '۶' → logprob: -18.500017166137695
    10. '６' → logprob: -19.000017166137695

Token 603: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000817369669675827
    2. ']' → logprob: -7.25081729888916
    3. '.' → logprob: -9.75081729888916
    4. ').' → logprob: -10.75081729888916
    5. '[' → logprob: -11.25081729888916
    6. '.append' → logprob: -11.62581729888916
    7. ' ].' → logprob: -13.12581729888916
    8. '   ' → logprob: -14.00081729888916
    9. ']
' → logprob: -14.12581729888916
    10. '}.' → logprob: -14.75081729888916

Token 604: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.8193366486229934e-05
    2. '.append' → logprob: -11.125018119812012
    3. 'appen' → logprob: -13.125018119812012
    4. ' append' → logprob: -13.750018119812012
    5. '	append' → logprob: -15.375018119812012
    6. 'appe' → logprob: -17.500019073486328
    7. '_append' → logprob: -18.000019073486328
    8. 'Append' → logprob: -18.250019073486328
    9. '```' → logprob: -18.250019073486328
    10. 'add' → logprob: -18.500019073486328

Token 605: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '(
' → logprob: -16.500003814697266
    4. ' (-' → logprob: -18.625003814697266
    5. '((-' → logprob: -18.750003814697266
    6. '-' → logprob: -20.375003814697266
    7. '[-' → logprob: -20.875003814697266
    8. '(-(' → logprob: -21.125003814697266
    9. '```' → logprob: -21.375003814697266
    10. '(c' → logprob: -21.500003814697266

Token 606: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.226628895296017e-06
    2. ' c' → logprob: -11.875007629394531
    3. '-c' → logprob: -15.500007629394531
    4. '_c' → logprob: -17.12500762939453
    5. ')c' → logprob: -17.62500762939453
    6. '	c' → logprob: -19.12500762939453
    7. '(c' → logprob: -20.50000762939453
    8. '-' → logprob: -21.37500762939453
    9. '+c' → logprob: -21.62500762939453
    10. 'cake' → logprob: -21.62500762939453

Token 607: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011822503292933106
    2. '0' → logprob: -6.7511820793151855
    3. 'c' → logprob: -11.501182556152344
    4. '(' → logprob: -15.251182556152344
    5. '[
' → logprob: -15.376182556152344
    6. '{' → logprob: -15.626182556152344
    7. ' ' → logprob: -15.751182556152344
    8. ' [' → logprob: -15.751182556152344
    9. '[c' → logprob: -15.876182556152344
    10. 'def' → logprob: -15.876182556152344

Token 608: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. ' ' → logprob: -16.250001907348633
    4. 'c' → logprob: -16.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '1' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. '۰' → logprob: -18.687501907348633
    10. '

' → logprob: -19.250001907348633

Token 609: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009061221033334732
    2. '-' → logprob: -5.384061336517334
    3. ')' → logprob: -5.884061336517334
    4. '[' → logprob: -6.634061336517334
    5. ']' → logprob: -8.759060859680176
    6. ' ' → logprob: -9.009060859680176
    7. '[-' → logprob: -11.134060859680176
    8. ' ' → logprob: -11.884060859680176
    9. ')-' → logprob: -12.259060859680176
    10. ',' → logprob: -12.259060859680176

Token 610: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008623674511909485
    2. '-' → logprob: -4.7586236000061035
    3. ' ' → logprob: -12.383624076843262
    4. ' ' → logprob: -12.883624076843262
    5. '[' → logprob: -13.633624076843262
    6. ')' → logprob: -14.258624076843262
    7. '-c' → logprob: -15.883624076843262
    8. ',' → logprob: -16.633623123168945
    9. '_' → logprob: -16.758623123168945
    10. '[-' → logprob: -16.758623123168945

Token 611: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858953505754471
    2. ' c' → logprob: -3.0485894680023193
    3. '_c' → logprob: -13.423589706420898
    4. '	c' → logprob: -15.173589706420898
    5. ')c' → logprob: -15.298589706420898
    6. ' ' → logprob: -16.5485897064209
    7. '-c' → logprob: -16.6735897064209
    8. '1' → logprob: -16.7985897064209
    9. '<|end|>' → logprob: -16.7985897064209
    10. ')' → logprob: -18.2985897064209

Token 612: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007429223624058068
    2. '1' → logprob: -7.3757429122924805
    3. 'c' → logprob: -9.12574291229248
    4. 'm' → logprob: -12.75074291229248
    5. ']' → logprob: -14.00074291229248
    6. '[
' → logprob: -14.00074291229248
    7. '   ' → logprob: -14.25074291229248
    8. ' [' → logprob: -15.25074291229248
    9. 'def' → logprob: -15.25074291229248
    10. ')' → logprob: -15.25074291229248

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006519131129607558
    2. 'c' → logprob: -7.625651836395264
    3. '[' → logprob: -8.750652313232422
    4. ' ' → logprob: -13.250652313232422
    5. 'm' → logprob: -13.750652313232422
    6. ']' → logprob: -14.125652313232422
    7. '2' → logprob: -15.000652313232422
    8. '   ' → logprob: -15.500652313232422
    9. '_' → logprob: -15.625652313232422
    10. '\' → logprob: -15.875652313232422

Token 614: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43320542573928833
    2. ' -' → logprob: -1.0582053661346436
    3. ']' → logprob: -5.808205604553223
    4. '[' → logprob: -7.058205604553223
    5. ')' → logprob: -7.558205604553223
    6. ' ' → logprob: -9.933205604553223
    7. '>' → logprob: -11.558205604553223
    8. '[-' → logprob: -11.558205604553223
    9. ']-' → logprob: -11.683205604553223
    10. '+' → logprob: -11.683205604553223

Token 615: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.386875182390213
    2. ' -' → logprob: -1.1368751525878906
    3. ')' → logprob: -13.38687515258789
    4. ' ' → logprob: -13.51187515258789
    5. '[' → logprob: -14.63687515258789
    6. '-
' → logprob: -15.51187515258789
    7. ' ' → logprob: -15.76187515258789
    8. '+' → logprob: -16.13687515258789
    9. ']' → logprob: -16.51187515258789
    10. '-c' → logprob: -17.01187515258789

Token 616: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048587486147880554
    2. ' c' → logprob: -3.0485875606536865
    3. '	c' → logprob: -17.173587799072266
    4. '_c' → logprob: -17.298587799072266
    5. ')c' → logprob: -17.423587799072266
    6. '+c' → logprob: -18.423587799072266
    7. '-c' → logprob: -19.423587799072266
    8. ' ' → logprob: -20.923587799072266
    9. '*c' → logprob: -20.923587799072266
    10. '1' → logprob: -21.423587799072266

Token 617: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4743880033493042
    2. 'c' → logprob: -0.9743880033493042
    3. '_c' → logprob: -9.224388122558594
    4. '[c' → logprob: -9.224388122558594
    5. ']' → logprob: -10.099388122558594
    6. ' c' → logprob: -10.349388122558594
    7. '[
' → logprob: -11.474388122558594
    8. '	c' → logprob: -12.099388122558594
    9. '-c' → logprob: -12.224388122558594
    10. ')' → logprob: -12.349388122558594

Token 618: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0020194053649902344
    2. '[' → logprob: -6.62701940536499
    3. '2' → logprob: -7.37701940536499
    4. ' c' → logprob: -9.752019882202148
    5. ')c' → logprob: -12.627019882202148
    6. '	c' → logprob: -13.502019882202148
    7. '_c' → logprob: -13.627019882202148
    8. '-c' → logprob: -13.752019882202148
    9. ')' → logprob: -14.252019882202148
    10. ']' → logprob: -14.252019882202148

Token 619: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00010509284038562328
    2. ')' → logprob: -9.875104904174805
    3. '])
' → logprob: -10.375104904174805
    4. ']' → logprob: -11.625104904174805
    5. ')])' → logprob: -12.500104904174805
    6. ')]' → logprob: -12.750104904174805
    7. '))' → logprob: -13.500104904174805
    8. '])
' → logprob: -13.500104904174805
    9. '[' → logprob: -13.625104904174805
    10. ']))' → logprob: -14.250104904174805

Token 620: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041983057744801044
    2. '.append' → logprob: -5.75419807434082
    3. '(' → logprob: -7.12919807434082
    4. '   ' → logprob: -9.75419807434082
    5. '()' → logprob: -10.37919807434082
    6. ')c' → logprob: -10.62919807434082
    7. '.' → logprob: -10.87919807434082
    8. '[' → logprob: -11.25419807434082
    9. ' )' → logprob: -11.37919807434082
    10. ').' → logprob: -11.62919807434082

Token 621: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.555654105497524e-05
    2. ')c' → logprob: -10.37509536743164
    3. '   ' → logprob: -10.62509536743164
    4. ']' → logprob: -11.62509536743164
    5. '<|end|>' → logprob: -11.87509536743164
    6. '#' (adapté à ' #') → logprob: -12.12509536743164
    7. ' )' → logprob: -12.37509536743164
    8. 'c' → logprob: -12.87509536743164
    9. ')
' → logprob: -12.87509536743164
    10. '(' → logprob: -13.00009536743164

Token 622: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7598915696144104
    2. 'c' → logprob: -1.1348915100097656
    3. ')' → logprob: -2.6348915100097656
    4. 'cakes' → logprob: -2.7598915100097656
    5. 'for' → logprob: -3.8848915100097656
    6. ' cakes' → logprob: -4.009891510009766
    7. '-' → logprob: -4.884891510009766
    8. ' for' → logprob: -5.259891510009766
    9. ']' → logprob: -5.634891510009766
    10. ' c' → logprob: -5.759891510009766

Token 623: ' où' (ID: 15113)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22078409790992737
    2. '[' → logprob: -2.3457841873168945
    3. ']' → logprob: -3.5957841873168945
    4. '<|end|>' → logprob: -3.7207841873168945
    5. '#' → logprob: -4.0957841873168945
    6. ' à' → logprob: -5.3457841873168945
    7. 'for' → logprob: -5.3457841873168945
    8. ' )' → logprob: -5.4707841873168945
    9. ' for' → logprob: -5.5957841873168945
    10. '.' → logprob: -6.7207841873168945

Token 624: ' tous' (ID: 10688)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0101670753210783
    2. ' le' → logprob: -5.635167121887207
    3. '-c' → logprob: -5.760167121887207
    4. ' c' → logprob: -6.260167121887207
    5. 'le' → logprob: -6.760167121887207
    6. '-' → logprob: -8.510167121887207
    7. '   ' → logprob: -10.385167121887207
    8. ' -' → logprob: -10.635167121887207
    9. '	c' → logprob: -11.635167121887207
    10. '_c' → logprob: -11.635167121887207

Token 625: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6385944485664368
    2. 'les' → logprob: -1.138594388961792
    3. '-' → logprob: -2.263594388961792
    4. '-c' → logprob: -3.888594388961792
    5. 'c' → logprob: -4.388594627380371
    6. 'le' → logprob: -5.263594627380371
    7. ' ' → logprob: -6.013594627380371
    8. ' -' → logprob: -6.513594627380371
    9. '   ' → logprob: -7.013594627380371
    10. '-les' → logprob: -7.138594627380371

Token 626: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.004825611598789692
    2. ' éléments' → logprob: -6.129825592041016
    3. '-' → logprob: -6.629825592041016
    4. 'elements' → logprob: -7.379825592041016
    5. 'c' → logprob: -7.629825592041016
    6. 'é' → logprob: -9.379825592041016
    7. 'él' → logprob: -10.379825592041016
    8. 'element' → logprob: -11.004825592041016
    9. '-c' → logprob: -11.129825592041016
    10. 'elem' → logprob: -11.254825592041016

Token 627: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.5617427825927734
    2. ' are' → logprob: -1.3117427825927734
    3. 's' → logprob: -2.0617427825927734
    4. 'are' → logprob: -3.4367427825927734
    5. '-' → logprob: -7.686742782592773
    6. ')' → logprob: -8.311742782592773
    7. '-s' → logprob: -8.561742782592773
    8. ' -' → logprob: -10.311742782592773
    9. 'ont' → logprob: -10.936742782592773
    10. ' są' → logprob: -11.561742782592773

Token 628: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.08331191539764404
    2. ' sou' → logprob: -3.2083120346069336
    3. 's' → logprob: -3.7083120346069336
    4. '-' → logprob: -4.208312034606934
    5. ' ' → logprob: -10.083312034606934
    6. ' -' → logprob: -10.333312034606934
    7. 'sub' → logprob: -11.833312034606934
    8. ' soumis' → logprob: -12.083312034606934
    9. '-s' → logprob: -12.333312034606934
    10. 'subtract' → logprob: -12.458312034606934

Token 629: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.11113884299993515
    2. 'b' → logprob: -3.6111388206481934
    3. 'tr' → logprob: -3.9861388206481934
    4. 'str' → logprob: -3.9861388206481934
    5. 'tra' → logprob: -4.111138820648193
    6. '[' → logprob: -5.361138820648193
    7. '-' → logprob: -5.361138820648193
    8. '[-' → logprob: -6.236138820648193
    9. 'stract' → logprob: -6.486138820648193
    10. '1' → logprob: -6.861138820648193

Token 630: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.024476308375597
    2. 'ct' → logprob: -4.274476528167725
    3. 'cts' → logprob: -4.899476528167725
    4. 'it' → logprob: -6.524476528167725
    5. 'is' → logprob: -7.899476528167725
    6. 'icts' → logprob: -8.024476051330566
    7. 'ts' → logprob: -8.399476051330566
    8. 'ict' → logprob: -9.024476051330566
    9. 'aits' → logprob: -9.399476051330566
    10. 't' → logprob: -10.399476051330566

Token 631: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021606307476758957
    2. '()' → logprob: -4.0216064453125
    3. '   ' → logprob: -6.5216064453125
    4. '(' → logprob: -7.6466064453125
    5. '())' → logprob: -7.7716064453125
    6. ']' → logprob: -8.1466064453125
    7. '(c' → logprob: -8.5216064453125
    8. '[' → logprob: -9.2716064453125
    9. '<|end|>' → logprob: -9.2716064453125
    10. ' )' → logprob: -9.5216064453125

Token 632: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11763491481542587
    2. 'result' → logprob: -2.8676350116729736
    3. 'ans' → logprob: -4.1176347732543945
    4. 'results' → logprob: -4.4926347732543945
    5. '#' → logprob: -4.8676347732543945
    6. 'answer' → logprob: -5.2426347732543945
    7. 'res' → logprob: -5.3676347732543945
    8. 'scores' → logprob: -5.8676347732543945
    9. 'score' → logprob: -6.4926347732543945
    10. 'answers' → logprob: -6.4926347732543945

Token 633: ' Pour' (ID: 13931)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7291378378868103
    2. 'for' → logprob: -0.8541378378868103
    3. 'res' → logprob: -3.229137897491455
    4. 'results' → logprob: -4.104137897491455
    5. 'ans' → logprob: -4.354137897491455
    6. 'scores' → logprob: -5.229137897491455
    7. 'score' → logprob: -5.354137897491455
    8. 'answer' → logprob: -5.479137897491455
    9. 'max' → logprob: -6.104137897491455
    10. 's' → logprob: -6.229137897491455

Token 634: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8355600237846375
    2. ' res' → logprob: -1.9605600833892822
    3. 'res' → logprob: -2.0855600833892822
    4. ' i' → logprob: -2.2105600833892822
    5. 'result' → logprob: -2.8355600833892822
    6. 's' → logprob: -3.8355600833892822
    7. '_' → logprob: -4.335559844970703
    8. 'score' → logprob: -4.585559844970703
    9. 'results' → logprob: -4.585559844970703
    10. ' s' → logprob: -4.710559844970703

Token 635: ' sous' (ID: 14487)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07593774795532227
    2. 'lst' → logprob: -4.575937747955322
    3. 'case' → logprob: -4.700937747955322
    4. 's' → logprob: -4.825937747955322
    5. 'sign' → logprob: -4.825937747955322
    6. 'cake' → logprob: -4.950937747955322
    7. ' i' → logprob: -5.200937747955322
    8. 'idx' → logprob: -5.450937747955322
    9. 'liste' → logprob: -5.950937747955322
    10. 'sub' → logprob: -5.950937747955322

Token 636: '-l' (ID: 2887)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.070431187748909
    2. 'cake' → logprob: -4.195431232452393
    3. 'lst' → logprob: -4.445431232452393
    4. 'in' → logprob: -4.570431232452393
    5. 'i' → logprob: -4.695431232452393
    6. 'liste' → logprob: -4.945431232452393
    7. 'for' → logprob: -5.695431232452393
    8. ' cakes' → logprob: -5.820431232452393
    9. 'c' → logprob: -6.070431232452393
    10. 'range' → logprob: -6.570431232452393

Token 637: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.21048705279827118
    2. '#' → logprob: -3.460487127304077
    3. 'i' → logprob: -3.460487127304077
    4. 'ist' → logprob: -3.960487127304077
    5. 'a' → logprob: -4.210486888885498
    6. 'c' → logprob: -4.335486888885498
    7. 'liste' → logprob: -4.710486888885498
    8. 'is' → logprob: -4.835486888885498
    9. ']' → logprob: -4.835486888885498
    10. ' in' → logprob: -4.960486888885498

Token 638: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47036969661712646
    2. 'in' → logprob: -1.0953696966171265
    3. 'for' → logprob: -4.470369815826416
    4. ' cakes' → logprob: -5.095369815826416
    5. 'cakes' → logprob: -5.220369815826416
    6. ' de' → logprob: -5.220369815826416
    7. 'dans' → logprob: -5.845369815826416
    8. ' for' → logprob: -6.345369815826416
    9. ' of' → logprob: -6.345369815826416
    10. ' dans' → logprob: -6.720369815826416

Token 639: ' "' (ID: 392)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.0004141072859056294
    2. 'range' → logprob: -8.00041389465332
    3. ' cakes' → logprob: -9.62541389465332
    4. 'cake' → logprob: -11.50041389465332
    5. 'cars' → logprob: -14.12541389465332
    6. 'cups' → logprob: -14.87541389465332
    7. 'cak' → logprob: -15.00041389465332
    8. ' range' → logprob: -15.12541389465332
    9. 'c' → logprob: -16.00041389465332
    10. 'cookies' → logprob: -16.12541389465332

Token 640: 'cakes' (ID: 165133)
  Prédit: 'cakes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -6.704273118884885e-07
    2. ' cakes' → logprob: -14.750000953674316
    3. 'cake' → logprob: -16.25
    4. 'range' → logprob: -16.25
    5. 'cups' → logprob: -18.75
    6. 'cak' → logprob: -18.875
    7. 'cars' → logprob: -19.375
    8. '```' → logprob: -19.375
    9. 'cases' → logprob: -20.75
    10. 'ca' → logprob: -20.875

Token 641: '"' (ID: 1)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24126900732517242
    2. ':' → logprob: -1.6162689924240112
    3. 'for' → logprob: -4.866269111633301
    4. '):' → logprob: -5.866269111633301
    5. '):
' → logprob: -6.491269111633301
    6. '.sort' → logprob: -6.491269111633301
    7. ']:' → logprob: -7.241269111633301
    8. 'cakes' → logprob: -8.3662691116333
    9. ':c' → logprob: -8.6162691116333
    10. ']:
' → logprob: -8.8662691116333

Token 642: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5463551878929138
    2. ':
' → logprob: -1.1713552474975586
    3. 'for' → logprob: -2.2963552474975586
    4. 'cakes' → logprob: -4.921355247497559
    5. 's' → logprob: -7.046355247497559
    6. 'sorted' → logprob: -7.171355247497559
    7. 'c' → logprob: -7.671355247497559
    8. '):' → logprob: -8.671355247497559
    9. 'sort' → logprob: -9.171355247497559
    10. ':c' → logprob: -9.171355247497559

Token 643: 'il' (ID: 311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18092763423919678
    2. 'range' → logprob: -2.3059277534484863
    3. 'cakes' → logprob: -2.9309277534484863
    4. ' for' → logprob: -4.930927753448486
    5. ' range' → logprob: -6.180927753448486
    6. ' cakes' → logprob: -6.430927753448486
    7. 'sorted' → logprob: -7.430927753448486
    8. 'ranges' → logprob: -8.305927276611328
    9. 'c' → logprob: -8.805927276611328
    10. 's' → logprob: -9.055927276611328

Token 644: ' y' (ID: 342)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3440803289413452
    2. 'in' → logprob: -2.2190804481506348
    3. 'range' → logprob: -2.4690804481506348
    4. 'for' → logprob: -3.0940804481506348
    5. ' range' → logprob: -3.8440804481506348
    6. 'y' → logprob: -4.719080448150635
    7. ' for' → logprob: -5.219080448150635
    8. ' y' → logprob: -5.219080448150635
    9. 's' → logprob: -5.844080448150635
    10. 'n' → logprob: -6.344080448150635

Token 645: ' en' (ID: 469)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5445513725280762
    2. 'in' → logprob: -0.9195513725280762
    3. 'for' → logprob: -4.669551372528076
    4. 'range' → logprob: -5.169551372528076
    5. 'dans' → logprob: -5.544551372528076
    6. 'en' → logprob: -7.794551372528076
    7. ' range' → logprob: -8.044551849365234
    8. ',' → logprob: -8.169551849365234
    9. ')' → logprob: -8.794551849365234
    10. '#' → logprob: -9.169551849365234

Token 646: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6715387105941772
    2. 'range' → logprob: -0.9215387105941772
    3. ' a' → logprob: -3.296538829803467
    4. 'a' → logprob: -3.671538829803467
    5. ' range' → logprob: -4.421538829803467
    6. 'in' → logprob: -4.796538829803467
    7. 'dans' → logprob: -6.171538829803467
    8. ' in' → logprob: -6.546538829803467
    9. ' for' → logprob: -7.171538829803467
    10. '8' → logprob: -7.421538829803467

Token 647: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.03859631344676018
    2. ' in' → logprob: -3.9135963916778564
    3. 'in' → logprob: -4.288596153259277
    4. 'range' → logprob: -6.163596153259277
    5. 'en' → logprob: -7.163596153259277
    6. ')' → logprob: -8.038596153259277
    7. ' en' → logprob: -8.663596153259277
    8. 'dans' → logprob: -8.663596153259277
    9. ' range' → logprob: -8.913596153259277
    10. '7' → logprob: -8.913596153259277

Token 648: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0324460044503212
    2. 'in' → logprob: -3.6574459075927734
    3. 'range' → logprob: -5.782445907592773
    4. 'en' → logprob: -6.407445907592773
    5. 'for' → logprob: -7.532445907592773
    6. ' in' → logprob: -7.907445907592773
    7. '7' → logprob: -8.907445907592773
    8. 'h' → logprob: -9.032445907592773
    9. 'enumer' → logprob: -9.782445907592773
    10. 'dans' → logprob: -10.407445907592773

Token 649: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12229182571172714
    2. '):
' → logprob: -2.2472918033599854
    3. ':' → logprob: -5.2472920417785645
    4. ')' → logprob: -6.3722920417785645
    5. 'for' → logprob: -6.6222920417785645
    6. '),' → logprob: -7.6222920417785645
    7. ':
' → logprob: -8.622291564941406
    8. 'c' → logprob: -9.372291564941406
    9. ')c' → logprob: -9.622291564941406
    10. 'sorted' → logprob: -9.747291564941406

Token 650: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13374295830726624
    2. 'cakes' → logprob: -2.1337430477142334
    3. '   ' → logprob: -5.383742809295654
    4. ' for' → logprob: -6.883742809295654
    5. ' cakes' → logprob: -7.633742809295654
    6. '
' → logprob: -8.008743286132812
    7. '#' → logprob: -9.383743286132812
    8. 's' → logprob: -9.383743286132812
    9. 'c' → logprob: -9.758743286132812
    10. '    
' → logprob: -10.383743286132812

Token 651: ' trie' (ID: 139428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028680728748440742
    2. '.sort' → logprob: -3.6536808013916016
    3. ' for' → logprob: -6.903680801391602
    4. '.for' → logprob: -7.528680801391602
    5. 'pour' → logprob: -8.028680801391602
    6. '#' → logprob: -8.903680801391602
    7. 'sort' → logprob: -8.903680801391602
    8. 's' → logprob: -9.278680801391602
    9. 'sorted' → logprob: -10.778680801391602
    10. '.s' → logprob: -11.153680801391602

Token 652: ' les' (ID: 1341)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.019791612401604652
    2. 'for' → logprob: -4.769791603088379
    3. '   ' → logprob: -5.144791603088379
    4. ' cakes' → logprob: -5.894791603088379
    5. 'les' → logprob: -7.519791603088379
    6. 'la' → logprob: -7.644791603088379
    7. 'pour' → logprob: -8.269791603088379
    8. '(c' → logprob: -8.644791603088379
    9. 'ch' → logprob: -8.894791603088379
    10. 'each' → logprob: -9.019791603088379

Token 653: ' éléments' (ID: 57375)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7708864808082581
    2. 'sub' → logprob: -1.2708864212036133
    3. 'cakes' → logprob: -2.1458864212036133
    4. 'liste' → logprob: -3.0208864212036133
    5. 'lst' → logprob: -3.1458864212036133
    6. 'c' → logprob: -4.895886421203613
    7. ' cakes' → logprob: -4.895886421203613
    8. '.' → logprob: -5.020886421203613
    9. 'l' → logprob: -5.270886421203613
    10. '-' → logprob: -5.270886421203613

Token 654: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009747706353664398
    2. '   ' → logprob: -4.759747505187988
    3. ' for' → logprob: -7.509747505187988
    4. 'pour' → logprob: -8.259747505187988
    5. 'cakes' → logprob: -8.384747505187988
    6. 'c' → logprob: -10.509747505187988
    7. '
' → logprob: -10.759747505187988
    8. ',' → logprob: -12.134747505187988
    9. 'dans' → logprob: -12.259747505187988
    10. '    
' → logprob: -12.634747505187988

Token 655: ' l' (ID: 305)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0012622561771422625
    2. 're' → logprob: -8.126262664794922
    3. 'descending' → logprob: -8.501262664794922
    4. '```' → logprob: -8.876262664794922
    5. '.reverse' → logprob: -9.126262664794922
    6. ')' → logprob: -9.376262664794922
    7. 'de' → logprob: -9.501262664794922
    8. 'desc' → logprob: -9.626262664794922
    9. 'range' → logprob: -9.876262664794922
    10. 'd' → logprob: -10.251262664794922

Token 656: ''ordre' (ID: 124753)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.1912611871957779
    2. '.reverse' → logprob: -1.8162611722946167
    3. 'c' → logprob: -6.066261291503906
    4. ' reverse' → logprob: -6.316261291503906
    5. 'place' → logprob: -6.566261291503906
    6. '#' → logprob: -6.566261291503906
    7. 'descending' → logprob: -7.191261291503906
    8. '```' → logprob: -7.316261291503906
    9. 'for' → logprob: -7.816261291503906
    10. '[::-' → logprob: -7.941261291503906

Token 657: ' décro' (ID: 176854)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3609843850135803
    2. '.reverse' → logprob: -1.3609843254089355
    3. 'desc' → logprob: -4.1109843254089355
    4. 'dec' → logprob: -4.2359843254089355
    5. 'descending' → logprob: -4.6109843254089355
    6. 'de' → logprob: -5.6109843254089355
    7. 'cakes' → logprob: -7.4859843254089355
    8. 'dess' → logprob: -8.360984802246094
    9. '(reverse' → logprob: -8.360984802246094
    10. ' reverse' → logprob: -8.360984802246094

Token 658: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.3707912862300873
    2. 'dent' → logprob: -1.6207913160324097
    3. 'nant' → logprob: -3.49579119682312
    4. 'rant' → logprob: -3.74579119682312
    5. 'endant' → logprob: -4.620791435241699
    6. 'rent' → logprob: -4.745791435241699
    7. 'ant' → logprob: -4.745791435241699
    8. 'ent' → logprob: -4.745791435241699
    9. 'tant' → logprob: -5.120791435241699
    10. 'nt' → logprob: -5.870791435241699

Token 659: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0039601437747478485
    2. '   ' → logprob: -5.878960132598877
    3. ' for' → logprob: -7.003960132598877
    4. '
' → logprob: -8.378960609436035
    5. 'pour' → logprob: -12.628960609436035
    6. 'cakes' → logprob: -12.878960609436035
    7. '.
' → logprob: -13.128960609436035
    8. ':
' → logprob: -13.128960609436035
    9. ':' → logprob: -13.628960609436035
    10. ',' → logprob: -13.753960609436035

Token 660: 'reverse' (ID: 53832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1896275132894516
    2. '   ' → logprob: -2.1896274089813232
    3. ' for' → logprob: -2.8146274089813232
    4. ')' → logprob: -7.689627647399902
    5. '):
' → logprob: -9.314627647399902
    6. ')
' → logprob: -9.314627647399902
    7. '
' → logprob: -10.064627647399902
    8. '       ' → logprob: -10.564627647399902
    9. 'range' → logprob: -10.564627647399902
    10. ' ' → logprob: -11.064627647399902

Token 661: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.011083307676017284
    2. '=' → logprob: -4.511083126068115
    3. ' =' → logprob: -10.386083602905273
    4. 'de' → logprob: -13.386083602905273
    5. ')' → logprob: -13.761083602905273
    6. 'True' → logprob: -14.761083602905273
    7. 'd' → logprob: -14.761083602905273
    8. '   ' → logprob: -15.886083602905273
    9. '```' → logprob: -15.886083602905273
    10. '=T' → logprob: -16.136083602905273

Token 662: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1654229760169983
    2. ')
' → logprob: -1.9154229164123535
    3. 'for' → logprob: -5.7904229164123535
    4. ').' → logprob: -6.9154229164123535
    5. ')c' → logprob: -7.2904229164123535
    6. '):' → logprob: -8.915423393249512
    7. ')
' → logprob: -9.290423393249512
    8. ' )' → logprob: -10.415423393249512
    9. ').
' → logprob: -10.415423393249512
    10. ')

' → logprob: -10.540423393249512

Token 663: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.625000953674316
    3. ' for' → logprob: -17.375
    4. '
' → logprob: -18.625
    5. '   ' → logprob: -19.375
    6. '``' → logprob: -20.75
    7. '	for' → logprob: -22.0
    8. 'from' → logprob: -23.625
    9. '#' → logprob: -23.75
    10. '    
' → logprob: -24.25

Token 664: ' Cela' (ID: 44403)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '
' → logprob: -17.125
    3. ' for' → logprob: -18.375
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -20.125
    6. 'fo' → logprob: -22.5
    7. '

' → logprob: -23.25
    8. 'from' → logprob: -23.25
    9. '
' → logprob: -23.875
    10. '    
' → logprob: -24.0

Token 665: ' permettra' (ID: 77259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003615870140492916
    2. ' for' → logprob: -5.628615856170654
    3. '
' → logprob: -11.128616333007812
    4. '#' → logprob: -14.628616333007812
    5. 'pour' → logprob: -15.378616333007812
    6. ' pour' → logprob: -16.253616333007812
    7. ':' → logprob: -16.753616333007812
    8. '   ' → logprob: -16.753616333007812
    9. '```' → logprob: -16.878616333007812
    10. ':
' → logprob: -17.003616333007812

Token 666: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021974841365590692
    2. 'de' → logprob: -9.375219345092773
    3. ' for' → logprob: -9.875219345092773
    4. 'd' → logprob: -10.000219345092773
    5. 'pour' → logprob: -10.250219345092773
    6. 'range' → logprob: -14.125219345092773
    7. '   ' → logprob: -14.375219345092773
    8. ' de' → logprob: -14.500219345092773
    9. '#' → logprob: -15.250219345092773
    10. '[' → logprob: -15.500219345092773

Token 667: ''acc' (ID: 46331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001502636878285557
    2. ' for' → logprob: -9.000150680541992
    3. 'or' → logprob: -10.625150680541992
    4. 'pour' → logprob: -14.125150680541992
    5. '```' → logprob: -14.375150680541992
    6. '
' → logprob: -14.625150680541992
    7. 'range' → logprob: -15.250150680541992
    8. 'r' → logprob: -15.250150680541992
    9. '#' → logprob: -15.625150680541992
    10. 'forcer' → logprob: -18.125150680541992

Token 668: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.3755991458892822
    2. 'order' → logprob: -2.0005991458892822
    3. 'ès' → logprob: -3.5005991458892822
    4. 'e' → logprob: -3.5005991458892822
    5. 'om' → logprob: -3.7505991458892822
    6. 'h' → logprob: -3.8755991458892822
    7. 'é' → logprob: -4.000598907470703
    8. 'acher' → logprob: -4.125598907470703
    9. 'ue' → logprob: -5.250598907470703
    10. 'es' → logprob: -5.375598907470703

Token 669: ' facilement' (ID: 54086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34874022006988525
    2. '   ' → logprob: -1.9737402200698853
    3. 'à' → logprob: -2.9737401008605957
    4. ' à' → logprob: -3.0987401008605957
    5. 'aux' → logprob: -4.098740100860596
    6. 'to' → logprob: -4.598740100860596
    7. ' for' → logprob: -5.348740100860596
    8. 'range' → logprob: -5.348740100860596
    9. ' aux' → logprob: -5.473740100860596
    10. '#' → logprob: -5.598740100860596

Token 670: ' aux' (ID: 5850)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018686638213694096
    2. ' for' → logprob: -7.126868724822998
    3. '   ' → logprob: -8.00186824798584
    4. 'pour' → logprob: -8.12686824798584
    5. 'à' → logprob: -8.25186824798584
    6. 'to' → logprob: -9.62686824798584
    7. 'aux' → logprob: -10.37686824798584
    8. ' à' → logprob: -10.75186824798584
    9. 'range' → logprob: -11.12686824798584
    10. '       ' → logprob: -11.62686824798584

Token 671: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7209295034408569
    2. 'cakes' → logprob: -0.7209295034408569
    3. 'scores' → logprob: -5.2209296226501465
    4. 'top' → logprob: -5.4709296226501465
    5. 'cake' → logprob: -5.7209296226501465
    6. ' for' → logprob: -5.9709296226501465
    7. 's' → logprob: -6.0959296226501465
    8. 'elements' → logprob: -6.4709296226501465
    9. 'sorted' → logprob: -6.5959296226501465
    10. ' cakes' → logprob: -6.8459296226501465

Token 672: ' plus' (ID: 2932)
  Prédit: ' premiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.6136026978492737
    2. ']' → logprob: -2.488602638244629
    3. ' éléments' → logprob: -2.613602638244629
    4. 'cakes' → logprob: -2.863602638244629
    5. 'elements' → logprob: -3.113602638244629
    6. 'élé' → logprob: -3.488602638244629
    7. 'prem' → logprob: -3.738602638244629
    8. ' elements' → logprob: -3.863602638244629
    9. '[' → logprob: -3.988602638244629
    10. '[:' → logprob: -4.113602638244629

Token 673: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.20524722337722778
    2. 'large' → logprob: -2.080247163772583
    3. ' grandes' → logprob: -3.205247163772583
    4. 'grand' → logprob: -4.955247402191162
    5. ' grands' → logprob: -5.080247402191162
    6. 'larg' → logprob: -5.580247402191162
    7. 'sorted' → logprob: -7.705247402191162
    8. 'tr' → logprob: -7.705247402191162
    9. ' grans' → logprob: -8.080246925354004
    10. 'values' → logprob: -8.580246925354004

Token 674: ' éléments' (ID: 57375)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.2899746894836426
    2. 'cakes' → logprob: -2.0399746894836426
    3. 'élé' → logprob: -2.4149746894836426
    4. 'values' → logprob: -4.289974689483643
    5. 'val' → logprob: -4.664974689483643
    6. 'ele' → logprob: -6.164974689483643
    7. ' éléments' → logprob: -6.289974689483643
    8. 'vals' → logprob: -6.664974689483643
    9. ' elements' → logprob: -6.789974689483643
    10. '#' → logprob: -7.664974689483643

Token 675: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008635803242214024
    2. '   ' → logprob: -7.375863552093506
    3. ' for' → logprob: -8.500864028930664
    4. 'pour' → logprob: -10.500864028930664
    5. '
' → logprob: -12.500864028930664
    6. '```' → logprob: -13.625864028930664
    7. ' pour' → logprob: -15.375864028930664
    8. '	for' → logprob: -15.500864028930664
    9. '#' → logprob: -15.625864028930664
    10. ',' → logprob: -16.000864028930664

Token 676: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3119174838066101
    2. 'cakes' → logprob: -2.936917543411255
    3. 'liste' → logprob: -3.061917543411255
    4. ' la' → logprob: -3.311917543411255
    5. 'indice' → logprob: -4.061917304992676
    6. 'c' → logprob: -4.186917304992676
    7. 'reverse' → logprob: -4.311917304992676
    8. 'index' → logprob: -4.561917304992676
    9. 'cake' → logprob: -4.811917304992676
    10. ' cakes' → logprob: -4.936917304992676

Token 677: ' suite' (ID: 13800)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5734142065048218
    2. 'sorted' → logprob: -2.3234143257141113
    3. 'sub' → logprob: -2.4484143257141113
    4. 'cakes' → logprob: -2.6984143257141113
    5. 'suite' → logprob: -2.9484143257141113
    6. 'liste' → logprob: -3.4484143257141113
    7. '.sort' → logprob: -4.323414325714111
    8. 'for' → logprob: -4.573414325714111
    9. 'slice' → logprob: -4.698414325714111
    10. '   ' → logprob: -4.823414325714111

Token 678: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009804966859519482
    2. '
' → logprob: -4.634805202484131
    3. ' for' → logprob: -10.009804725646973
    4. '

' → logprob: -13.259804725646973
    5. '   ' → logprob: -13.884804725646973
    6. '
' → logprob: -14.759804725646973
    7. '```' → logprob: -14.884804725646973
    8. '#' → logprob: -16.13480567932129
    9. '    
' → logprob: -16.38480567932129
    10. ' 
' → logprob: -16.38480567932129

Token 679: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9623810658231378e-05
    2. '
' → logprob: -10.875020027160645
    3. '```' → logprob: -14.500020027160645
    4. ' for' → logprob: -16.750019073486328
    5. '   ' → logprob: -17.125019073486328
    6. '
' → logprob: -17.375019073486328
    7. '

' → logprob: -17.875019073486328
    8. '    
' → logprob: -19.125019073486328
    9. '``' → logprob: -19.125019073486328
    10. '  
' → logprob: -20.375019073486328

Token 680: ' c' (ID: 274)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.9736841917037964
    2. 'i' → logprob: -2.098684310913086
    3. ' cake' → logprob: -2.223684310913086
    4. ' lst' → logprob: -2.348684310913086
    5. ' sub' → logprob: -2.598684310913086
    6. 'c' → logprob: -2.848684310913086
    7. 'sub' → logprob: -3.223684310913086
    8. 'cake' → logprob: -3.348684310913086
    9. ' i' → logprob: -3.598684310913086
    10. ' c' → logprob: -3.848684310913086

Token 681: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1476977914571762
    2. 'in' → logprob: -2.022697687149048
    3. '_' → logprob: -6.522697925567627
    4. 's' → logprob: -6.647697925567627
    5. ' ' → logprob: -7.272697925567627
    6. 'i' → logprob: -7.647697925567627
    7. 'cakes' → logprob: -7.647697925567627
    8. 'n' → logprob: -8.647697448730469
    9. ' i' → logprob: -9.147697448730469
    10. '_in' → logprob: -9.647697448730469

Token 682: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.007796837016940117
    2. ' cakes' → logprob: -4.882796764373779
    3. 'c' → logprob: -9.382797241210938
    4. 'cake' → logprob: -10.007797241210938
    5. 'range' → logprob: -10.507797241210938
    6. 'akes' → logprob: -10.757797241210938
    7. ' range' → logprob: -12.132797241210938
    8. 'cak' → logprob: -12.632797241210938
    9. ' cake' → logprob: -14.257797241210938
    10. 'cups' → logprob: -14.382797241210938

Token 683: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5451681974809617e-05
    2. ':
' → logprob: -11.750015258789062
    3. ' :' → logprob: -12.000015258789062
    4. '.sort' → logprob: -14.375015258789062
    5. '[:]' → logprob: -15.375015258789062
    6. '   ' → logprob: -16.125015258789062
    7. '):' → logprob: -16.875015258789062
    8. '.' → logprob: -17.000015258789062
    9. ':list' → logprob: -17.000015258789062
    10. ':c' → logprob: -17.500015258789062

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004031441640108824
    2. ' c' → logprob: -8.25040340423584
    3. 'c' → logprob: -8.87540340423584
    4. '   ' → logprob: -13.75040340423584
    5. '	c' → logprob: -13.87540340423584
    6. '    
' → logprob: -18.000402450561523
    7. '       ' → logprob: -18.250402450561523
    8. '```' → logprob: -18.625402450561523
    9. '  ' → logprob: -19.375402450561523
    10. ' ' → logprob: -19.500402450561523

Token 685: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.75
    3. ' c' → logprob: -16.125
    4. '	c' → logprob: -19.375
    5. '
' → logprob: -20.0
    6. '    
' → logprob: -21.625
    7. ' ' → logprob: -22.125
    8. 'с' → logprob: -22.75
    9. '```' → logprob: -22.875
    10. '  ' → logprob: -23.125

Token 686: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0019374389667063951
    2. '.' → logprob: -6.251937389373779
    3. 'sort' → logprob: -12.126937866210938
    4. '.reverse' → logprob: -12.751937866210938
    5. ' .' → logprob: -15.001937866210938
    6. '.s' → logprob: -16.251937866210938
    7. '	sort' → logprob: -17.001937866210938
    8. '.Sort' → logprob: -17.126937866210938
    9. ' sort' → logprob: -17.376937866210938
    10. '.sorted' → logprob: -17.626937866210938

Token 687: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00044425477972254157
    2. 'reverse' → logprob: -7.750444412231445
    3. '(' → logprob: -11.250444412231445
    4. ' reverse' → logprob: -15.250444412231445
    5. '()' → logprob: -15.375444412231445
    6. '(
' → logprob: -17.000444412231445
    7. '(re' → logprob: -17.125444412231445
    8. '.reverse' → logprob: -17.375444412231445
    9. '_reverse' → logprob: -17.625444412231445
    10. 'Reverse' → logprob: -17.750444412231445

Token 688: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00408053956925869
    2. '=' → logprob: -5.504080772399902
    3. ')' → logprob: -13.629080772399902
    4. 'True' → logprob: -14.879080772399902
    5. '(True' → logprob: -15.004080772399902
    6. '=T' → logprob: -16.129079818725586
    7. ')=' → logprob: -16.504079818725586
    8. ' =' → logprob: -16.629079818725586
    9. '=
' → logprob: -17.754079818725586
    10. ' True' → logprob: -18.879079818725586

Token 689: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ')c' → logprob: -17.75
    5. '   ' → logprob: -19.125
    6. '))' → logprob: -19.25
    7. ')

' → logprob: -19.625
    8. '),' → logprob: -20.375
    9. ')`' → logprob: -20.375
    10. ')#' → logprob: -20.625

Token 690: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08132601529359818
    2. 'res' → logprob: -3.4563260078430176
    3. 'score' → logprob: -3.9563260078430176
    4. 'answer' → logprob: -4.331326007843018
    5. 'ans' → logprob: -5.331326007843018
    6. 'best' → logprob: -5.831326007843018
    7. 'max' → logprob: -5.956326007843018
    8. 'total' → logprob: -6.581326007843018
    9. '#' → logprob: -6.706326007843018
    10. 'sum' → logprob: -8.081326484680176

Token 691: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7990010380744934
    2. 'res' → logprob: -1.5490009784698486
    3. 'answer' → logprob: -1.7990009784698486
    4. 'ans' → logprob: -1.9240009784698486
    5. 'max' → logprob: -4.174001216888428
    6. 'best' → logprob: -5.299001216888428
    7. 'score' → logprob: -5.424001216888428
    8. 'total' → logprob: -7.174001216888428
    9. 'rés' → logprob: -8.29900074005127
    10. 'results' → logprob: -9.29900074005127

Token 692: 'isation' (ID: 6993)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8744251728057861
    2. 'max' → logprob: -1.1244251728057861
    3. 'result' → logprob: -1.8744251728057861
    4. 'res' → logprob: -2.999425172805786
    5. 'ans' → logprob: -4.124424934387207
    6. 'answer' → logprob: -4.249424934387207
    7. 'score' → logprob: -4.749424934387207
    8. '#' → logprob: -5.249424934387207
    9. 'imax' → logprob: -6.124424934387207
    10. '_best' → logprob: -6.749424934387207

Token 693: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7961279153823853
    2. 'max' → logprob: -1.1711279153823853
    3. 'best' → logprob: -2.2961277961730957
    4. 'result' → logprob: -2.6711277961730957
    5. 'answer' → logprob: -3.2961277961730957
    6. 'res' → logprob: -4.046127796173096
    7. 'score' → logprob: -4.296127796173096
    8. 'total' → logprob: -7.796127796173096
    9. ' ans' → logprob: -8.796128273010254
    10. 'maximum' → logprob: -9.046128273010254

Token 694: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8423555493354797
    2. 'ans' → logprob: -0.8423555493354797
    3. 'result' → logprob: -2.842355489730835
    4. 'best' → logprob: -3.342355489730835
    5. 'answer' → logprob: -3.717355489730835
    6. 'max' → logprob: -4.217355728149414
    7. 'score' → logprob: -5.217355728149414
    8. 'maximum' → logprob: -8.342355728149414
    9. 'ret' → logprob: -9.092355728149414
    10. 'rés' → logprob: -10.592355728149414

Token 695: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7942898273468018
    2. 'res' → logprob: -1.2942898273468018
    3. 'answer' → logprob: -2.0442898273468018
    4. 'ans' → logprob: -2.5442898273468018
    5. 'max' → logprob: -3.1692898273468018
    6. 'best' → logprob: -4.294289588928223
    7. 'rés' → logprob: -5.544289588928223
    8. 'me' → logprob: -5.669289588928223
    9. 'maximum' → logprob: -6.544289588928223
    10. 'score' → logprob: -6.919289588928223

Token 696: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.227983832359314
    2. 'result' → logprob: -1.227983832359314
    3. 'answer' → logprob: -1.227983832359314
    4. 'res' → logprob: -2.3529839515686035
    5. 'max' → logprob: -3.9779839515686035
    6. 'best' → logprob: -5.1029839515686035
    7. 'score' → logprob: -7.4779839515686035
    8. 'maximum' → logprob: -7.6029839515686035
    9. 'rés' → logprob: -8.102983474731445
    10. 's' → logprob: -11.352983474731445

Token 697: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.965065598487854
    2. 'result' → logprob: -1.465065598487854
    3. 'answer' → logprob: -1.590065598487854
    4. 'res' → logprob: -1.715065598487854
    5. 'max' → logprob: -5.8400654792785645
    6. 'best' → logprob: -7.5900654792785645
    7. 'score' → logprob: -7.9650654792785645
    8. 'rés' → logprob: -9.215065956115723
    9. 'maximum' → logprob: -9.340065956115723
    10. 'ret' → logprob: -9.590065956115723

Token 698: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023253049701452255
    2. '=' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.023253440856934
    4. ',' → logprob: -14.898253440856934
    5. ')' → logprob: -14.898253440856934
    6. ' =
' → logprob: -15.023253440856934
    7. ' ' → logprob: -15.273253440856934
    8. ' ="' → logprob: -15.648253440856934
    9. 's' → logprob: -16.398252487182617
    10. '   ' → logprob: -17.023252487182617

Token 699: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019438649760559201
    2. ' =' → logprob: -6.251944065093994
    3. 'ans' → logprob: -11.126943588256836
    4. ' ans' → logprob: -15.251943588256836
    5. '=
' → logprob: -16.001943588256836
    6. '=-' → logprob: -16.251943588256836
    7. '_ans' → logprob: -18.126943588256836
    8. ',' → logprob: -18.251943588256836
    9. '(ans' → logprob: -18.626943588256836
    10. '=

' → logprob: -19.126943588256836

Token 700: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. '-' → logprob: -10.125065803527832
    3. ' ' → logprob: -11.125065803527832
    4. 'float' → logprob: -11.625065803527832
    5. '-s' → logprob: -13.500065803527832
    6. '-(' → logprob: -15.500065803527832
    7. '-c' → logprob: -16.12506675720215
    8. '-m' → logprob: -16.25006675720215
    9. ' -' → logprob: -16.50006675720215
    10. '-max' → logprob: -16.50006675720215

Token 701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.625
    3. 'float' → logprob: -16.25
    4. ' ' → logprob: -16.875
    5. '-s' → logprob: -19.875
    6. 'int' → logprob: -20.375
    7. '-(' → logprob: -20.5
    8. '０' → logprob: -22.0
    9. '-c' → logprob: -22.25
    10. '-m' → logprob: -22.5

Token 702: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00012368128227535635
    2. '
' → logprob: -9.000123977661133
    3. ' ans' → logprob: -15.875123977661133
    4. '(ans' → logprob: -16.875123977661133
    5. 'answer' → logprob: -17.125123977661133
    6. '	ans' → logprob: -17.250123977661133
    7. 'a' → logprob: -18.125123977661133
    8. '
' → logprob: -18.250123977661133
    9. '```' → logprob: -18.750123977661133
    10. '_ans' → logprob: -19.250123977661133

Token 703: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -18.25
    3. '	ans' → logprob: -20.125
    4. 'ann' → logprob: -20.625
    5. 'answer' → logprob: -20.75
    6. '(ans' → logprob: -20.75
    7. 'a' → logprob: -20.75
    8. 'anst' → logprob: -21.5
    9. '_ans' → logprob: -21.875
    10. 'anse' → logprob: -22.5

Token 704: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.625
    3. '	ans' → logprob: -19.375
    4. 'ann' → logprob: -19.75
    5. '(ans' → logprob: -20.5
    6. 'answer' → logprob: -20.5
    7. '#' → logprob: -21.625
    8. '_ans' → logprob: -21.875
    9. 'Ans' → logprob: -22.375
    10. 'anst' → logprob: -22.5

Token 705: ' variable' (ID: 11076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20505736768245697
    2. 'ans' → logprob: -1.7050573825836182
    3. ' =' → logprob: -6.080057144165039
    4. '=
' → logprob: -6.955057144165039
    5. ' ans' → logprob: -8.455057144165039
    6. 'a' → logprob: -10.205057144165039
    7. '#' → logprob: -10.455057144165039
    8. 'for' → logprob: -10.455057144165039
    9. '
' → logprob: -10.955057144165039
    10. '=

' → logprob: -10.955057144165039

Token 706: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2255222201347351
    2. ' =' → logprob: -1.6005222797393799
    3. ' ' → logprob: -9.4755220413208
    4. ' +=' → logprob: -10.8505220413208
    5. '_' → logprob: -12.4755220413208
    6. '+=' → logprob: -12.7255220413208
    7. ',' → logprob: -13.1005220413208
    8. ' =
' → logprob: -14.3505220413208
    9. 's' → logprob: -14.4755220413208
    10. 'space' → logprob: -14.4755220413208

Token 707: 'ira' (ID: 2633)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.501689612865448
    2. 'ira' → logprob: -1.1266896724700928
    3. 'a' → logprob: -2.7516896724700928
    4. 'era' → logprob: -6.126689434051514
    5. '#' → logprob: -6.751689434051514
    6. 'ans' → logprob: -7.001689434051514
    7. 'r' → logprob: -7.251689434051514
    8. 'ant' → logprob: -7.626689434051514
    9. 'e' → logprob: -7.876689434051514
    10. '=' → logprob: -8.876689910888672

Token 708: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2029060572385788
    2. ' =' → logprob: -1.7029060125350952
    3. ' à' → logprob: -7.327906131744385
    4. ' ' → logprob: -7.577906131744385
    5. 'à' → logprob: -9.827905654907227
    6. ' +=' → logprob: -9.952905654907227
    7. ' a' → logprob: -10.077905654907227
    8. 'a' → logprob: -10.327905654907227
    9. 'ans' → logprob: -10.577905654907227
    10. '+=' → logprob: -10.827905654907227

Token 709: ' enregistr' (ID: 76845)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5598059296607971
    2. 'ans' → logprob: -0.9348059296607971
    3. '0' → logprob: -3.5598058700561523
    4. 'sum' → logprob: -6.059805870056152
    5. 'calcul' → logprob: -6.559805870056152
    6. 'stock' → logprob: -7.184805870056152
    7. 'answer' → logprob: -7.684805870056152
    8. 'store' → logprob: -7.809805870056152
    9. 'acc' → logprob: -7.809805870056152
    10. '=' → logprob: -8.309805870056152

Token 710: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006003098096698523
    2. '=' → logprob: -5.881002902984619
    3. ' =' → logprob: -6.881002902984619
    4. 'e' → logprob: -7.256002902984619
    5. 'ans' → logprob: -7.506002902984619
    6. 'ent' → logprob: -8.006003379821777
    7. '   ' → logprob: -9.256003379821777
    8. ' ans' → logprob: -9.381003379821777
    9. 'es' → logprob: -9.881003379821777
    10. 'eur' → logprob: -10.381003379821777

Token 711: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.022505372762680054
    2. '0' → logprob: -4.022505283355713
    3. 'max' → logprob: -5.522505283355713
    4. ' ans' → logprob: -8.147505760192871
    5. 'answer' → logprob: -10.522505760192871
    6. ' max' → logprob: -12.022505760192871
    7. '	ans' → logprob: -12.022505760192871
    8. '(ans' → logprob: -12.397505760192871
    9. '-' → logprob: -12.647505760192871
    10. '=' → logprob: -12.772505760192871

Token 712: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006085803732275963
    2. 'max' → logprob: -5.2560858726501465
    3. ' ans' → logprob: -7.5060858726501465
    4. 'answer' → logprob: -8.506085395812988
    5. ' max' → logprob: -10.881085395812988
    6. '0' → logprob: -11.131085395812988
    7. 'maximum' → logprob: -11.131085395812988
    8. '(ans' → logprob: -11.631085395812988
    9. '=' → logprob: -11.756085395812988
    10. 'sum' → logprob: -11.881085395812988

Token 713: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6995011568069458
    2. 'ans' → logprob: -0.8245011568069458
    3. '(ans' → logprob: -3.8245010375976562
    4. ' maximale' → logprob: -3.8245010375976562
    5. '=' → logprob: -5.199501037597656
    6. 'final' → logprob: -5.324501037597656
    7. '(
' → logprob: -5.449501037597656
    8. 'maximum' → logprob: -6.824501037597656
    9. '   ' → logprob: -7.199501037597656
    10. '_max' → logprob: -7.324501037597656

Token 714: ' trouv' (ID: 40254)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.639488160610199
    2. '=' → logprob: -1.1394882202148438
    3. ' =' → logprob: -2.1394882202148438
    4. '(ans' → logprob: -4.389488220214844
    5. ' ans' → logprob: -4.889488220214844
    6. '_ans' → logprob: -5.514488220214844
    7. 'max' → logprob: -6.139488220214844
    8. '_' → logprob: -6.264488220214844
    9. ')' → logprob: -6.514488220214844
    10. '	ans' → logprob: -7.014488220214844

Token 715: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05748004466295242
    2. '=' → logprob: -3.4324800968170166
    3. 'ée' → logprob: -5.1824798583984375
    4. 'ue' → logprob: -5.4324798583984375
    5. 'ans' → logprob: -5.6824798583984375
    6. ' =' → logprob: -5.9324798583984375
    7. 'e' → logprob: -6.0574798583984375
    8. 'is' → logprob: -6.5574798583984375
    9. 'ant' → logprob: -6.9324798583984375
    10. 'ante' → logprob: -7.8074798583984375

Token 716: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00018268341955263168
    2. '=' → logprob: -9.00018310546875
    3. ' ans' → logprob: -10.37518310546875
    4. '(ans' → logprob: -10.87518310546875
    5. '
' → logprob: -12.75018310546875
    6. '_ans' → logprob: -13.12518310546875
    7. ' =' → logprob: -13.37518310546875
    8. '=
' → logprob: -13.50018310546875
    9. '	ans' → logprob: -14.37518310546875
    10. 'answer' → logprob: -15.00018310546875

Token 717: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.25
    3. '	ans' → logprob: -19.0
    4. '(ans' → logprob: -19.75
    5. '```' → logprob: -19.875
    6. 'answer' → logprob: -20.25
    7. 'ann' → logprob: -21.125
    8. 'a' → logprob: -21.375
    9. '_ans' → logprob: -21.375
    10. 'anst' → logprob: -21.875

Token 718: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020741820335388
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.600207328796387
    4. ' +=' → logprob: -16.350208282470703
    5. ' =
' → logprob: -16.725208282470703
    6. ' =)' → logprob: -17.225208282470703
    7. ',' → logprob: -17.725208282470703
    8. ' ="' → logprob: -17.850208282470703
    9. '＝' → logprob: -18.350208282470703
    10. ' ='' → logprob: -18.350208282470703

Token 719: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. 'float' → logprob: -17.125553131103516
    4. '-' → logprob: -18.875553131103516
    5. '   ' → logprob: -19.250553131103516
    6. '  ' → logprob: -19.875553131103516
    7. ' ' → logprob: -19.875553131103516
    8. ' -' → logprob: -20.125553131103516
    9. '０' → logprob: -20.125553131103516
    10. ' float' → logprob: -20.313053131103516

Token 720: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.75
    3. 'float' → logprob: -15.875
    4. ' ' → logprob: -17.375
    5. '０' → logprob: -20.5
    6. '-(' → logprob: -20.5
    7. ' -' → logprob: -21.875
    8. '000' → logprob: -22.0
    9. '-s' → logprob: -22.0
    10. '۰' → logprob: -22.25

Token 721: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.625
    3. '#' → logprob: -16.875
    4. '
' → logprob: -17.625
    5. 'from' → logprob: -19.75
    6. '	for' → logprob: -20.625
    7. '```' → logprob: -20.625
    8. 'import' → logprob: -20.875
    9. '   ' → logprob: -21.5
    10. 'fo' → logprob: -21.75

Token 722: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.5
    3. '#' → logprob: -19.875
    4. 'from' → logprob: -22.25
    5. '	for' → logprob: -22.375
    6. '   ' → logprob: -22.625
    7. 'import' → logprob: -23.0
    8. '
' → logprob: -23.125
    9. '```' → logprob: -23.875
    10. 'range' → logprob: -24.625

Token 723: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -19.375
    3. 'from' → logprob: -20.75
    4. 'fo' → logprob: -21.375
    5. '
' → logprob: -22.375
    6. '#' → logprob: -22.375
    7. '```' → logprob: -23.0
    8. '	for' → logprob: -23.625
    9. 'f' → logprob: -24.0
    10. 'import' → logprob: -24.375

Token 724: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.1219937801361084
    2. 'ours' → logprob: -2.4969937801361084
    3. 'for' → logprob: -3.6219937801361084
    4. 'ourt' → logprob: -5.6219940185546875
    5. 'u' → logprob: -7.7469940185546875
    6. 'ourse' → logprob: -8.121994018554688
    7. '#' → logprob: -8.121994018554688
    8. 'or' → logprob: -8.246994018554688
    9. 'o' → logprob: -8.246994018554688
    10. 'ou' → logprob: -8.496994018554688

Token 725: ' des' (ID: 731)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1414019763469696
    2. ' for' → logprob: -2.891402006149292
    3. 'for' → logprob: -3.641402006149292
    4. '_' → logprob: -4.516401767730713
    5. 'i' → logprob: -4.641401767730713
    6. ' in' → logprob: -4.766401767730713
    7. ' range' → logprob: -4.891401767730713
    8. ' _' → logprob: -4.891401767730713
    9. 'range' → logprob: -5.266401767730713
    10. ' of' → logprob: -8.391402244567871

Token 726: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02137412317097187
    2. 'cakes' → logprob: -3.896374225616455
    3. ' range' → logprob: -7.271374225616455
    4. 'rang' → logprob: -10.271373748779297
    5. ' cakes' → logprob: -10.521373748779297
    6. 'cake' → logprob: -10.646373748779297
    7. 'c' → logprob: -10.771373748779297
    8. 'ranges' → logprob: -11.771373748779297
    9. 'ran' → logprob: -12.271373748779297
    10. 'r' → logprob: -12.771373748779297

Token 727: '8' (ID: 23)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012777911499142647
    2. 'cakes' → logprob: -4.387777805328369
    3. ' range' → logprob: -9.262778282165527
    4. 'rang' → logprob: -9.637778282165527
    5. 'c' → logprob: -10.262778282165527
    6. 'cake' → logprob: -10.637778282165527
    7. 'ranges' → logprob: -11.137778282165527
    8. ' cakes' → logprob: -12.137778282165527
    9. 'ra' → logprob: -12.262778282165527
    10. 'ran' → logprob: -12.387778282165527

Token 728: ' comb' (ID: 4134)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00035965684219263494
    2. ' range' → logprob: -8.500359535217285
    3. 'for' → logprob: -9.125359535217285
    4. 'c' → logprob: -10.875359535217285
    5. 'ranges' → logprob: -10.875359535217285
    6. 'cakes' → logprob: -12.000359535217285
    7. '```' → logprob: -14.000359535217285
    8. 'i' → logprob: -14.125359535217285
    9. '
' → logprob: -15.000359535217285
    10. 'rang' → logprob: -15.125359535217285

Token 729: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.24169035255908966
    2. 'in' → logprob: -2.3666903972625732
    3. 'inations' → logprob: -2.3666903972625732
    4. 'ina' → logprob: -3.8666903972625732
    5. 'ination' → logprob: -5.741690158843994
    6. 'for' → logprob: -7.116690158843994
    7. 'i' → logprob: -7.366690158843994
    8. 'inas' → logprob: -7.741690158843994
    9. '[i' → logprob: -8.366690635681152
    10. ' in' → logprob: -8.616690635681152

Token 730: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0005101414280943573
    2. 'ais' → logprob: -7.625510215759277
    3. 'on' → logprob: -11.750510215759277
    4. 'sons' → logprob: -12.000510215759277
    5. 'a' → logprob: -12.125510215759277
    6. 'asons' → logprob: -13.125510215759277
    7. 's' → logprob: -15.500510215759277
    8. '[' → logprob: -15.750510215759277
    9. '#' → logprob: -16.00050926208496
    10. 'isons' → logprob: -17.12550926208496

Token 731: ' (' (ID: 350)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.19292552769184113
    2. ' in' → logprob: -1.8179255723953247
    3. 'for' → logprob: -4.692925453186035
    4. ':' → logprob: -5.817925453186035
    5. 'range' → logprob: -7.817925453186035
    6. ' for' → logprob: -8.442925453186035
    7. 'i' → logprob: -9.067925453186035
    8. 'of' → logprob: -10.192925453186035
    9. ' range' → logprob: -10.192925453186035
    10. ' i' → logprob: -10.317925453186035

Token 732: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009001562371850014
    2. 'i' → logprob: -4.759001731872559
    3. ' range' → logprob: -7.884001731872559
    4. ' i' → logprob: -12.634001731872559
    5. 'for' → logprob: -13.759001731872559
    6. 'r' → logprob: -13.884001731872559
    7. 'rang' → logprob: -14.259001731872559
    8. 'k' → logprob: -14.384001731872559
    9. '```' → logprob: -14.634001731872559
    10. ')' → logprob: -14.634001731872559

Token 733: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6772246956825256
    2. 'in' → logprob: -0.8022246956825256
    3. ',' → logprob: -3.802224636077881
    4. ')' → logprob: -4.552224636077881
    5. 'range' → logprob: -5.677224636077881
    6. '..' → logprob: -6.677224636077881
    7. 'to' → logprob: -6.802224636077881
    8. ' range' → logprob: -7.052224636077881
    9. 'for' → logprob: -7.302224636077881
    10. ' ' → logprob: -7.427224636077881

Token 734: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -20.625
    4. '8' → logprob: -21.0
    5. '07' → logprob: -22.875
    6. '
' → logprob: -23.375
    7. '７' → logprob: -23.75
    8. '1' → logprob: -23.875
    9. '=' → logprob: -24.625
    10. '6' → logprob: -24.75

Token 735: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '8' → logprob: -15.875
    3. '```' → logprob: -19.25
    4. ' ' → logprob: -19.375
    5. '07' → logprob: -21.0
    6. '
' → logprob: -21.875
    7. '７' → logprob: -22.0
    8. '``' → logprob: -22.5
    9. '' → logprob: -22.625
    10. 'seven' → logprob: -22.75

Token 736: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06362145394086838
    2. '):' → logprob: -3.9386215209960938
    3. ':
' → logprob: -4.063621520996094
    4. ')' → logprob: -4.188621520996094
    5. 'for' → logprob: -4.813621520996094
    6. '):
' → logprob: -7.563621520996094
    7. 'range' → logprob: -7.563621520996094
    8. 'in' → logprob: -8.188621520996094
    9. ' :' → logprob: -9.063621520996094
    10. ' for' → logprob: -9.188621520996094

Token 737: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043496055877767503
    2. ':' → logprob: -8.000434875488281
    3. ' for' → logprob: -9.625434875488281
    4. 'range' → logprob: -10.750434875488281
    5. ':
' → logprob: -11.375434875488281
    6. 'in' → logprob: -15.000434875488281
    7. '
' → logprob: -16.25043487548828
    8. ',' → logprob: -17.50043487548828
    9. ' range' → logprob: -17.62543487548828
    10. '   ' → logprob: -17.62543487548828

Token 738: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. 'range' → logprob: -21.375
    3. ' for' → logprob: -21.75
    4. '   ' → logprob: -24.25
    5. '
' → logprob: -24.75
    6. 'from' → logprob: -24.875
    7. '```' → logprob: -25.25
    8. '	for' → logprob: -26.0
    9. 'fo' → logprob: -27.125
    10. 'import' → logprob: -27.625

Token 739: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040572634898126125
    2. ' i' → logprob: -6.25405740737915
    3. 'c' → logprob: -7.00405740737915
    4. 'mask' → logprob: -8.379056930541992
    5. 'cake' → logprob: -8.629056930541992
    6. 'x' → logprob: -8.754056930541992
    7. 'bit' → logprob: -9.004056930541992
    8. 'comb' → logprob: -9.004056930541992
    9. 'k' → logprob: -9.379056930541992
    10. 'bits' → logprob: -9.754056930541992

Token 740: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05489955097436905
    2. 'in' → logprob: -2.9298994541168213
    3. ' ' → logprob: -11.304899215698242
    4. '	in' → logprob: -13.804899215698242
    5. 'range' → logprob: -14.554899215698242
    6. 'n' → logprob: -14.554899215698242
    7. ',' → logprob: -14.804899215698242
    8. 'import' → logprob: -14.929899215698242
    9. '   ' → logprob: -15.054899215698242
    10. '0' → logprob: -15.179899215698242

Token 741: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023178798437584192
    2. ' range' → logprob: -8.375231742858887
    3. 'rang' → logprob: -14.875231742858887
    4. 'in' → logprob: -15.500231742858887
    5. '8' → logprob: -15.625231742858887
    6. '(range' → logprob: -16.125232696533203
    7. 'c' → logprob: -16.125232696533203
    8. 'ran' → logprob: -16.375232696533203
    9. ' ' → logprob: -17.125232696533203
    10. '   ' → logprob: -17.500232696533203

Token 742: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '8' → logprob: -13.750000953674316
    3. '(
' → logprob: -19.375001907348633
    4. '(len' → logprob: -20.500001907348633
    5. ' (' → logprob: -21.125001907348633
    6. 'eight' → logprob: -22.875001907348633
    7. '((' → logprob: -23.625001907348633
    8. '   ' → logprob: -25.250001907348633
    9. '(
' → logprob: -25.625001907348633
    10. '```' → logprob: -26.000001907348633

Token 743: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. 'eight' → logprob: -21.75
    4. '   ' → logprob: -22.375
    5. 'len' → logprob: -22.5
    6. '7' → logprob: -22.625
    7. '(' → logprob: -22.75
    8. '
' → logprob: -23.0
    9. '８' → logprob: -23.125
    10. '```' → logprob: -23.75

Token 744: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011892046313732862
    2. '):
' → logprob: -9.12511920928955
    3. ' ):' → logprob: -12.50011920928955
    4. ':' → logprob: -12.62511920928955
    5. ')' → logprob: -12.87511920928955
    6. '):
' → logprob: -15.87511920928955
    7. ']:' → logprob: -16.750118255615234
    8. '}:' → logprob: -16.750118255615234
    9. '   ' → logprob: -17.500118255615234
    10. '():' → logprob: -17.750118255615234

Token 745: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6405357718467712
    2. '   ' → logprob: -0.7655357718467712
    3. ' ans' → logprob: -4.890535831451416
    4. '	ans' → logprob: -8.515535354614258
    5. '    
' → logprob: -9.640535354614258
    6. 'sum' → logprob: -10.140535354614258
    7. '
' → logprob: -10.140535354614258
    8. '(ans' → logprob: -11.140535354614258
    9. 'answer' → logprob: -12.265535354614258
    10. '```' → logprob: -12.515535354614258

Token 746: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15101957321166992
    2. 'total' → logprob: -2.77601957321167
    3. 's' → logprob: -3.15101957321167
    4. 'temp' → logprob: -4.27601957321167
    5. 'tmp' → logprob: -4.65101957321167
    6. 'current' → logprob: -5.27601957321167
    7. '   ' → logprob: -5.90101957321167
    8. 'sum' → logprob: -6.15101957321167
    9. 'val' → logprob: -7.15101957321167
    10. 'score' → logprob: -8.276020050048828

Token 747: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2520008087158203
    2. 's' → logprob: -2.2520008087158203
    3. 'total' → logprob: -2.7520008087158203
    4. 'tmp' → logprob: -3.8770008087158203
    5. 'temp' → logprob: -4.25200080871582
    6. 'current' → logprob: -4.75200080871582
    7. 'val' → logprob: -5.75200080871582
    8. 'score' → logprob: -5.75200080871582
    9. 'sum' → logprob: -6.12700080871582
    10. 'cur' → logprob: -7.87700080871582

Token 748: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010376033373177052
    2. 'val' → logprob: -5.8853759765625
    3. '_j' → logprob: -6.5103759765625
    4. ' j' → logprob: -7.0103759765625
    5. 's' → logprob: -7.1353759765625
    6. 'x' → logprob: -7.2603759765625
    7. 'c' → logprob: -7.5103759765625
    8. 'i' → logprob: -7.7603759765625
    9. 'sum' → logprob: -7.7603759765625
    10. 'ans' → logprob: -7.8853759765625

Token 749: ' sous' (ID: 14487)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01787773333489895
    2. 'tmp' → logprob: -5.517877578735352
    3. 'temp' → logprob: -5.642877578735352
    4. 's' → logprob: -5.642877578735352
    5. ' ans' → logprob: -6.017877578735352
    6. 'total' → logprob: -6.642877578735352
    7. 'sum' → logprob: -7.017877578735352
    8. '   ' → logprob: -7.767877578735352
    9. 'subset' → logprob: -7.892877578735352
    10. 'val' → logprob: -8.142877578735352

Token 750: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7731510400772095
    2. '_l' → logprob: -1.6481510400772095
    3. '_c' → logprob: -1.7731510400772095
    4. 'c' → logprob: -2.39815092086792
    5. 'list' → logprob: -3.39815092086792
    6. '_list' → logprob: -4.14815092086792
    7. '-l' → logprob: -4.52315092086792
    8. 'Liste' → logprob: -5.52315092086792
    9. 's' → logprob: -5.64815092086792
    10. ']' → logprob: -5.77315092086792

Token 751: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.6352903842926025
    2. '   ' → logprob: -1.6352903842926025
    3. 'liste' → logprob: -2.6352903842926025
    4. 'istes' → logprob: -2.8852903842926025
    5. '#' → logprob: -3.1352903842926025
    6. 'ist' → logprob: -3.7602903842926025
    7. 'ists' → logprob: -4.635290145874023
    8. 'c' → logprob: -5.010290145874023
    9. 'st' → logprob: -5.010290145874023
    10. 'cakes' → logprob: -5.260290145874023

Token 752: ' cakes' (ID: 61222)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23543764650821686
    2. 'ans' → logprob: -1.9854376316070557
    3. ':' → logprob: -3.6104376316070557
    4. ',' → logprob: -4.235437870025635
    5. ':
' → logprob: -4.735437870025635
    6. 'cakes' → logprob: -5.485437870025635
    7. ' ans' → logprob: -5.860437870025635
    8. 'temp' → logprob: -6.110437870025635
    9. 's' → logprob: -6.360437870025635
    10. 'tmp' → logprob: -6.485437870025635

Token 753: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018213391304016113
    2. '   ' → logprob: -4.643213272094727
    3. 'ans' → logprob: -5.893213272094727
    4. '[:' → logprob: -6.393213272094727
    5. '[' → logprob: -6.518213272094727
    6. ',' → logprob: -7.018213272094727
    7. ':' → logprob: -7.893213272094727
    8. ' =' → logprob: -9.143213272094727
    9. ',i' → logprob: -9.393213272094727
    10. '):' → logprob: -9.518213272094727

Token 754: '],' (ID: 2155)
  Prédit: '][:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.5963407158851624
    2. '],' → logprob: -2.2213406562805176
    3. ']):' → logprob: -2.4713406562805176
    4. ']' → logprob: -2.4713406562805176
    5. ']):
' → logprob: -2.8463406562805176
    6. ']:' → logprob: -3.0963406562805176
    7. ']:
' → logprob: -3.9713406562805176
    8. ']),' → logprob: -4.346340656280518
    9. '   ' → logprob: -4.346340656280518
    10. '])' → logprob: -4.596340656280518

Token 755: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12108030915260315
    2. '   ' → logprob: -3.3710803985595703
    3. 's' → logprob: -3.9960803985595703
    4. 'total' → logprob: -3.9960803985595703
    5. 'temp' → logprob: -4.24608039855957
    6. 'tmp' → logprob: -4.37108039855957
    7. 'val' → logprob: -4.99608039855957
    8. 'sum' → logprob: -5.49608039855957
    9. 'current' → logprob: -6.37108039855957
    10. ' ans' → logprob: -6.87108039855957

Token 756: ' prend' (ID: 37463)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008610556833446026
    2. '   ' → logprob: -5.383610725402832
    3. ' ans' → logprob: -6.008610725402832
    4. '
' → logprob: -7.258610725402832
    5. 'temp' → logprob: -8.508610725402832
    6. 'tmp' → logprob: -8.633610725402832
    7. 's' → logprob: -8.883610725402832
    8. 'sum' → logprob: -9.508610725402832
    9. '#' → logprob: -10.008610725402832
    10. '    
' → logprob: -10.258610725402832

Token 757: ' les' (ID: 1341)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012260387651622295
    2. ' sum' → logprob: -4.637260437011719
    3. '   ' → logprob: -6.012260437011719
    4. 'la' → logprob: -11.262260437011719
    5. ' la' → logprob: -11.762260437011719
    6. 'm' → logprob: -11.762260437011719
    7. '=sum' → logprob: -12.262260437011719
    8. 'the' → logprob: -12.637260437011719
    9. '(sum' → logprob: -13.137260437011719
    10. '	sum' → logprob: -13.137260437011719

Token 758: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2939445972442627
    2. 'sum' → logprob: -1.4189445972442627
    3. ' sum' → logprob: -4.668944358825684
    4. ' m' → logprob: -5.793944358825684
    5. '   ' → logprob: -9.293944358825684
    6. 'cakes' → logprob: -10.043944358825684
    7. ' ' → logprob: -10.543944358825684
    8. ' first' → logprob: -10.668944358825684
    9. 'first' → logprob: -11.293944358825684
    10. ':' → logprob: -11.293944358825684

Token 759: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.7660548090934753
    2. 'prem' → logprob: -1.0160548686981201
    3. 'first' → logprob: -2.39105486869812
    4. ']' → logprob: -3.39105486869812
    5. ' premières' → logprob: -4.266054630279541
    6. ')' → logprob: -4.391054630279541
    7. ' first' → logprob: -4.641054630279541
    8. ':first' → logprob: -5.141054630279541
    9. ' premier' → logprob: -6.516054630279541
    10. ' primeiros' → logprob: -6.891054630279541

Token 760: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5060223937034607
    2. 'elements' → logprob: -1.6310224533081055
    3. ' éléments' → logprob: -2.1310224533081055
    4. ']' → logprob: -2.8810224533081055
    5. 'c' → logprob: -4.3810224533081055
    6. ' elements' → logprob: -5.1310224533081055
    7. 'tokens' → logprob: -6.2560224533081055
    8. 's' → logprob: -6.5060224533081055
    9. 'indices' → logprob: -6.7560224533081055
    10. 'items' → logprob: -7.2560224533081055

Token 761: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038109082728624344
    2. ',' → logprob: -3.413109064102173
    3. 'sum' → logprob: -6.413109302520752
    4. ':' → logprob: -7.663109302520752
    5. ')' → logprob: -7.663109302520752
    6. '),' → logprob: -8.038108825683594
    7. '       ' → logprob: -8.038108825683594
    8. 'ans' → logprob: -8.163108825683594
    9. '[:' → logprob: -8.663108825683594
    10. '=' → logprob: -8.663108825683594

Token 762: 'gr' (ID: 896)
  Prédit: ':c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':c' → logprob: -0.3808797299861908
    2. ':' → logprob: -1.2558797597885132
    3. 'cakes' → logprob: -5.005879878997803
    4. ':s' → logprob: -5.255879878997803
    5. '0' → logprob: -5.255879878997803
    6. '   ' → logprob: -5.505879878997803
    7. ' :' → logprob: -5.755879878997803
    8. 'c' → logprob: -6.255879878997803
    9. ' cakes' → logprob: -6.630879878997803
    10. ':i' → logprob: -6.880879878997803

Token 763: 'âce' (ID: 26121)
  Prédit: 'ades'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ades' → logprob: -0.0334649495780468
    2. 'and' → logprob: -4.1584649085998535
    3. '=' → logprob: -5.6584649085998535
    4. '   ' → logprob: -5.6584649085998535
    5. ':' → logprob: -5.9084649085998535
    6. '[:' → logprob: -7.0334649085998535
    7. 'andes' → logprob: -7.1584649085998535
    8. 'ade' → logprob: -7.4084649085998535
    9. 'an' → logprob: -7.6584649085998535
    10. '#' → logprob: -7.6584649085998535

Token 764: ' au' (ID: 2791)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2593526244163513
    2. ' à' → logprob: -2.259352684020996
    3. '=c' → logprob: -2.509352684020996
    4. 'à' → logprob: -4.259352684020996
    5. 'c' → logprob: -4.509352684020996
    6. '   ' → logprob: -5.259352684020996
    7. ' =' → logprob: -6.009352684020996
    8. '[' → logprob: -6.259352684020996
    9. '[:]' → logprob: -6.509352684020996
    10. ')' → logprob: -6.634352684020996

Token 765: ' tri' (ID: 12665)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.8661400079727173
    2. ':' → logprob: -2.1161398887634277
    3. ':c' → logprob: -2.1161398887634277
    4. 'cakes' → logprob: -2.1161398887634277
    5. 'slice' → logprob: -2.2411398887634277
    6. 'sum' → logprob: -3.4911398887634277
    7. 'c' → logprob: -3.9911398887634277
    8. 'm' → logprob: -4.491139888763428
    9. ':s' → logprob: -4.616139888763428
    10. '][:' → logprob: -4.741139888763428

Token 766: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8461783528327942
    2. '=' → logprob: -1.4711782932281494
    3. '[:' → logprob: -1.5961782932281494
    4. 'c' → logprob: -2.8461782932281494
    5. '=c' → logprob: -3.4711782932281494
    6. '][:' → logprob: -3.5961782932281494
    7. '[c' → logprob: -5.9711785316467285
    8. '       ' → logprob: -6.0961785316467285
    9. 's' → logprob: -6.0961785316467285
    10. ' =' → logprob: -6.5961785316467285

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15879479050636292
    2. 'ans' → logprob: -2.03379487991333
    3. ' ans' → logprob: -4.78379487991333
    4. 'sum' → logprob: -5.28379487991333
    5. 'tmp' → logprob: -7.53379487991333
    6. 's' → logprob: -7.65879487991333
    7. 'temp' → logprob: -8.033794403076172
    8. '    
' → logprob: -8.158794403076172
    9. 'val' → logprob: -8.908794403076172
    10. ' sum' → logprob: -9.033794403076172

Token 768: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.922065019607544
    2. 'temp' → logprob: -1.422065019607544
    3. 'total' → logprob: -1.797065019607544
    4. 's' → logprob: -2.922065019607544
    5. 'ans' → logprob: -3.172065019607544
    6. '   ' → logprob: -3.422065019607544
    7. 'val' → logprob: -3.922065019607544
    8. 'sum' → logprob: -4.047064781188965
    9. 'current' → logprob: -4.172064781188965
    10. 'score' → logprob: -4.797064781188965

Token 769: ' sum' (ID: 4215)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.2328780889511108
    2. 'temp' → logprob: -1.4828780889511108
    3. 'total' → logprob: -1.6078780889511108
    4. 's' → logprob: -2.2328782081604004
    5. 'ans' → logprob: -2.9828782081604004
    6. 'current' → logprob: -3.2328782081604004
    7. 'val' → logprob: -3.3578782081604004
    8. 'sum' → logprob: -3.7328782081604004
    9. 'score' → logprob: -4.2328782081604
    10. '   ' → logprob: -5.9828782081604

Token 770: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8200318217277527
    2. '_' → logprob: -1.1950318813323975
    3. '(c' → logprob: -1.5700318813323975
    4. '=' → logprob: -3.9450318813323975
    5. '_c' → logprob: -4.320031642913818
    6. '_result' → logprob: -5.320031642913818
    7. '(
' → logprob: -6.070031642913818
    8. 'cakes' → logprob: -6.445031642913818
    9. ' =' → logprob: -6.695031642913818
    10. 's' → logprob: -6.820031642913818

Token 771: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.05461650714278221
    2. 'cakes' → logprob: -3.8046164512634277
    3. '(c' → logprob: -4.304616451263428
    4. '[i' → logprob: -5.179616451263428
    5. 's' → logprob: -5.679616451263428
    6. '(' → logprob: -6.054616451263428
    7. '[:' → logprob: -6.429616451263428
    8. '(i' → logprob: -6.554616451263428
    9. '[c' → logprob: -6.929616451263428
    10. '[' → logprob: -7.179616451263428

Token 772: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -9.375089645385742
    3. ')[' → logprob: -13.375089645385742
    4. ' [' → logprob: -13.500089645385742
    5. 's' → logprob: -13.750089645385742
    6. '[c' → logprob: -15.250089645385742
    7. 'i' → logprob: -16.000089645385742
    8. '
' → logprob: -16.000089645385742
    9. '[
' → logprob: -16.000089645385742
    10. '[I' → logprob: -16.000089645385742

Token 773: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.3135152757167816
    2. '[:' → logprob: -1.313515305519104
    3. '][' → logprob: -9.063515663146973
    4. '[' → logprob: -9.313515663146973
    5. '[i' → logprob: -10.938515663146973
    6. ']' → logprob: -11.313515663146973
    7. '])' → logprob: -12.063515663146973
    8. ' [:' → logprob: -12.438515663146973
    9. '   ' → logprob: -13.063515663146973
    10. ')' → logprob: -13.188515663146973

Token 774: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.45848218582978e-06
    2. ' m' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. ')m' → logprob: -18.375001907348633
    5. ')' → logprob: -19.250001907348633
    6. '])' → logprob: -19.625001907348633
    7. '```' → logprob: -20.375001907348633
    8. '	m' → logprob: -20.375001907348633
    9. '    ' → logprob: -20.500001907348633
    10. '
' → logprob: -20.500001907348633

Token 775: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3875376284122467
    2. '])' → logprob: -1.1375375986099243
    3. '))' → logprob: -7.637537479400635
    4. ' )' → logprob: -9.637537956237793
    5. ')])' → logprob: -10.012537956237793
    6. ')
' → logprob: -10.387537956237793
    7. ' ])' → logprob: -11.762537956237793
    8. '})' → logprob: -11.887537956237793
    9. '>)' → logprob: -12.137537956237793
    10. ']))' → logprob: -12.637537956237793

Token 776: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8147256374359131
    2. ')' → logprob: -0.9397256374359131
    3. '>' → logprob: -2.314725637435913
    4. ')>' → logprob: -3.064725637435913
    5. ' >' → logprob: -5.314725875854492
    6. ')
' → logprob: -5.439725875854492
    7. '    
' → logprob: -5.814725875854492
    8. '
' → logprob: -5.814725875854492
    9. ',' → logprob: -6.689725875854492
    10. ').' → logprob: -6.939725875854492

Token 777: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0011200957233086228
    2. 'cule' → logprob: -6.876120090484619
    3. 'ul' → logprob: -10.626120567321777
    4. '#' → logprob: -10.876120567321777
    5. '=' → logprob: -11.126120567321777
    6. '   ' → logprob: -12.376120567321777
    7. '```' → logprob: -12.376120567321777
    8. 'ulte' → logprob: -13.001120567321777
    9. '       ' → logprob: -13.251120567321777
    10. 'ulé' → logprob: -13.376120567321777

Token 778: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3201635777950287
    2. 'sum' → logprob: -1.445163607597351
    3. ' la' → logprob: -3.3201634883880615
    4. '(sum' → logprob: -6.570163726806641
    5. ' sum' → logprob: -8.57016372680664
    6. 'the' → logprob: -8.94516372680664
    7. 'les' → logprob: -9.57016372680664
    8. '   ' → logprob: -9.57016372680664
    9. 'le' → logprob: -9.57016372680664
    10. ')' → logprob: -9.94516372680664

Token 779: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.017211003229022026
    2. 's' → logprob: -4.142210960388184
    3. 'som' → logprob: -7.017210960388184
    4. ' sum' → logprob: -8.517210960388184
    5. ' somme' → logprob: -9.517210960388184
    6. ')' → logprob: -13.267210960388184
    7. 'summ' → logprob: -13.642210960388184
    8. '(sum' → logprob: -14.517210960388184
    9. '=sum' → logprob: -14.642210960388184
    10. ' som' → logprob: -14.892210960388184

Token 780: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3702569305896759
    2. ')' → logprob: -1.9952569007873535
    3. '(
' → logprob: -2.1202569007873535
    4. '   ' → logprob: -4.6202569007873535
    5. '(c' → logprob: -4.6202569007873535
    6. 'max' → logprob: -4.7452569007873535
    7. '#' → logprob: -4.7452569007873535
    8. ',' → logprob: -5.8702569007873535
    9. 'des' → logprob: -6.3702569007873535
    10. '<|end|>' → logprob: -6.4952569007873535

Token 781: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5033959746360779
    2. 'cakes' → logprob: -1.0033960342407227
    3. ' m' → logprob: -3.8783960342407227
    4. ' cakes' → logprob: -5.128396034240723
    5. ' meilleurs' → logprob: -7.503396034240723
    6. 'me' → logprob: -7.753396034240723
    7. ' premiers' → logprob: -8.253396034240723
    8. '```' → logprob: -8.628396034240723
    9. ' ' → logprob: -8.878396034240723
    10. 'prem' → logprob: -9.003396034240723

Token 782: ' plus' (ID: 2932)
  Prédit: ' premiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.08004378527402878
    2. 'prem' → logprob: -2.9550437927246094
    3. ' premières' → logprob: -5.080043792724609
    4. ' premier' → logprob: -5.080043792724609
    5. ']' → logprob: -5.705043792724609
    6. ')' → logprob: -5.830043792724609
    7. ' first' → logprob: -6.330043792724609
    8. 'first' → logprob: -6.330043792724609
    9. ' primeiros' → logprob: -7.955043792724609
    10. ' meilleurs' → logprob: -7.955043792724609

Token 783: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.1804955005645752
    2. 'cakes' → logprob: -1.3054955005645752
    3. ' grands' → logprob: -2.180495500564575
    4. ' grandes' → logprob: -2.305495500564575
    5. 'grand' → logprob: -3.305495500564575
    6. 'large' → logprob: -3.305495500564575
    7. '```' → logprob: -3.305495500564575
    8. 'c' → logprob: -3.430495500564575
    9. 'prem' → logprob: -3.930495500564575
    10. '=' → logprob: -4.305495262145996

Token 784: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.691214919090271
    2. ')' → logprob: -1.441214919090271
    3. ' elements' → logprob: -1.816214919090271
    4. 'elements' → logprob: -2.9412150382995605
    5. 'élé' → logprob: -4.4412150382995605
    6. 'cakes' → logprob: -4.4412150382995605
    7. 'tokens' → logprob: -4.9412150382995605
    8. ' cakes' → logprob: -5.5662150382995605
    9. '<|end|>' → logprob: -6.0662150382995605
    10. ' )' → logprob: -6.0662150382995605

Token 785: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049511972814798355
    2. ')' → logprob: -3.0495119094848633
    3. ',' → logprob: -7.799511909484863
    4. ')
' → logprob: -9.049511909484863
    5. ').' → logprob: -9.299511909484863
    6. '),' → logprob: -9.299511909484863
    7. '
' → logprob: -10.049511909484863
    8. '    
' → logprob: -10.549511909484863
    9. ' )' → logprob: -10.674511909484863
    10. '=' → logprob: -11.049511909484863

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013275171630084515
    2. 's' → logprob: -5.388275146484375
    3. 'sum' → logprob: -6.013275146484375
    4. 'ans' → logprob: -6.263275146484375
    5. 'val' → logprob: -6.513275146484375
    6. ' s' → logprob: -7.388275146484375
    7. 'temp' → logprob: -7.388275146484375
    8. 'result' → logprob: -7.763275146484375
    9. 'tmp' → logprob: -8.263275146484375
    10. ' ans' → logprob: -8.888275146484375

Token 787: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9146918654441833
    2. 's' → logprob: -2.164691925048828
    3. 'tmp' → logprob: -2.164691925048828
    4. 'temp' → logprob: -2.664691925048828
    5. 'total' → logprob: -2.664691925048828
    6. 'score' → logprob: -2.664691925048828
    7. 'current' → logprob: -2.789691925048828
    8. 'res' → logprob: -3.289691925048828
    9. 'value' → logprob: -3.789691925048828
    10. '   ' → logprob: -4.039691925048828

Token 788: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0311333816498518
    2. 'if' → logprob: -4.53113317489624
    3. 'val' → logprob: -4.65613317489624
    4. 'total' → logprob: -5.78113317489624
    5. 'temp' → logprob: -6.28113317489624
    6. 'current' → logprob: -6.53113317489624
    7. 'tmp' → logprob: -6.65613317489624
    8. 's' → logprob: -6.78113317489624
    9. 'value' → logprob: -7.53113317489624
    10. 'res' → logprob: -7.78113317489624

Token 789: ' utilise' (ID: 70283)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009177581407129765
    2. ' ans' → logprob: -4.8841776847839355
    3. '   ' → logprob: -7.0091776847839355
    4. '=' → logprob: -7.5091776847839355
    5. '
' → logprob: -10.134177207946777
    6. ' =' → logprob: -10.509177207946777
    7. '	ans' → logprob: -11.134177207946777
    8. '_ans' → logprob: -11.884177207946777
    9. '(ans' → logprob: -12.009177207946777
    10. '       ' → logprob: -12.134177207946777

Token 790: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1709507405757904
    2. 'ans' → logprob: -1.9209507703781128
    3. ' max' → logprob: -5.045950889587402
    4. '   ' → logprob: -5.920950889587402
    5. ' ans' → logprob: -7.045950889587402
    6. 'if' → logprob: -7.420950889587402
    7. '(ans' → logprob: -10.920950889587402
    8. '=max' → logprob: -10.920950889587402
    9. '	ans' → logprob: -11.295950889587402
    10. '
' → logprob: -11.295950889587402

Token 791: '()' (ID: 416)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02987857349216938
    2. 'ans' → logprob: -3.654878616333008
    3. '(' → logprob: -5.779878616333008
    4. '(
' → logprob: -8.404878616333008
    5. '()' → logprob: -9.029878616333008
    6. '_ans' → logprob: -9.529878616333008
    7. '	ans' → logprob: -11.029878616333008
    8. '   ' → logprob: -11.029878616333008
    9. ')' → logprob: -11.404878616333008
    10. ' (' → logprob: -12.404878616333008

Token 792: ' pour' (ID: 1930)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.07876386493444443
    2. '(' → logprob: -3.578763961791992
    3. 'ans' → logprob: -3.578763961791992
    4. '   ' → logprob: -4.203763961791992
    5. '(
' → logprob: -5.453763961791992
    6. '=' → logprob: -8.953763961791992
    7. '	ans' → logprob: -8.953763961791992
    8. ' ans' → logprob: -9.078763961791992
    9. ')' → logprob: -9.203763961791992
    10. '_ans' → logprob: -9.703763961791992

Token 793: ' conserver' (ID: 116877)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03836849704384804
    2. '   ' → logprob: -3.2883684635162354
    3. ' ans' → logprob: -8.788368225097656
    4. ' ' → logprob: -10.038368225097656
    5. 'assign' → logprob: -10.038368225097656
    6. 'mettre' → logprob: -10.538368225097656
    7. '  ' → logprob: -10.913368225097656
    8. '       ' → logprob: -11.538368225097656
    9. 'answer' → logprob: -12.163368225097656
    10. 'max' → logprob: -12.538368225097656

Token 794: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4742584824562073
    2. 'ans' → logprob: -0.9742584824562073
    3. '   ' → logprob: -9.099258422851562
    4. '	ans' → logprob: -10.474258422851562
    5. 'max' → logprob: -10.849258422851562
    6. ' ans' → logprob: -11.349258422851562
    7. '(' → logprob: -12.724258422851562
    8. '(max' → logprob: -13.724258422851562
    9. '(
' → logprob: -13.724258422851562
    10. '_ans' → logprob: -14.099258422851562

Token 795: ' plus' (ID: 2932)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06244387850165367
    2. 'max' → logprob: -2.812443971633911
    3. ' max' → logprob: -8.812443733215332
    4. ' ans' → logprob: -8.812443733215332
    5. 'maximum' → logprob: -9.187443733215332
    6. 'answer' → logprob: -9.812443733215332
    7. '(ans' → logprob: -11.312443733215332
    8. '   ' → logprob: -12.437443733215332
    9. '
' → logprob: -13.812443733215332
    10. ' maximum' → logprob: -14.187443733215332

Token 796: ' grande' (ID: 10094)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06623448431491852
    2. ' ans' → logprob: -3.691234588623047
    3. 'max' → logprob: -4.316234588623047
    4. '(ans' → logprob: -4.441234588623047
    5. ' grande' → logprob: -5.566234588623047
    6. '```' → logprob: -5.816234588623047
    7. ' ' → logprob: -6.441234588623047
    8. '   ' → logprob: -7.191234588623047
    9. ')' → logprob: -7.191234588623047
    10. 's' → logprob: -7.441234588623047

Token 797: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07117661833763123
    2. '(ans' → logprob: -2.821176528930664
    3. 'val' → logprob: -4.946176528930664
    4. 'value' → logprob: -7.196176528930664
    5. 'answer' → logprob: -7.821176528930664
    6. '(' → logprob: -8.446176528930664
    7. '(
' → logprob: -8.446176528930664
    8. 'result' → logprob: -8.696176528930664
    9. 'max' → logprob: -9.571176528930664
    10. ' ans' → logprob: -9.821176528930664

Token 798: ' rencontr' (ID: 49751)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7991064190864563
    2. 'ans' → logprob: -1.1741063594818115
    3. '   ' → logprob: -1.5491063594818115
    4. '(' → logprob: -4.549106597900391
    5. '(
' → logprob: -5.299106597900391
    6. 'entre' → logprob: -5.924106597900391
    7. ' entre' → logprob: -6.049106597900391
    8. 'possible' → logprob: -6.424106597900391
    9. ',' → logprob: -7.299106597900391
    10. '
' → logprob: -7.424106597900391

Token 799: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5261843800544739
    2. 'er' → logprob: -1.401184320449829
    3. 'e' → logprob: -2.651184320449829
    4. '   ' → logprob: -3.776184320449829
    5. 'é' → logprob: -4.151184558868408
    6. '(max' → logprob: -4.401184558868408
    7. 'ed' → logprob: -5.151184558868408
    8. 'ante' → logprob: -5.151184558868408
    9. 'max' → logprob: -5.151184558868408
    10. '(' → logprob: -5.276184558868408

Token 800: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24839097261428833
    2. '(ans' → logprob: -1.7483909130096436
    3. 'ans' → logprob: -3.4983909130096436
    4. ',' → logprob: -5.248391151428223
    5. '(
' → logprob: -5.498391151428223
    6. '(' → logprob: -5.498391151428223
    7. ')' → logprob: -7.373391151428223
    8. ' ans' → logprob: -7.873391151428223
    9. '       ' → logprob: -8.248391151428223
    10. '	ans' → logprob: -8.623391151428223

Token 801: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011248346709180623
    2. ' ans' → logprob: -9.125112533569336
    3. '(ans' → logprob: -13.125112533569336
    4. '
' → logprob: -14.250112533569336
    5. '   ' → logprob: -14.625112533569336
    6. 'answer' → logprob: -15.750112533569336
    7. '	ans' → logprob: -15.750112533569336
    8. ' ' → logprob: -18.000112533569336
    9. '_ans' → logprob: -18.000112533569336
    10. 'ann' → logprob: -18.375112533569336

Token 802: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.546478935983032e-05
    2. ' ans' → logprob: -10.625025749206543
    3. '
' → logprob: -14.375025749206543
    4. '(ans' → logprob: -15.375025749206543
    5. '   ' → logprob: -15.625025749206543
    6. '	ans' → logprob: -16.125024795532227
    7. 'answer' → logprob: -17.000024795532227
    8. ' ' → logprob: -18.125024795532227
    9. '_ans' → logprob: -18.750024795532227
    10. '```' → logprob: -18.750024795532227

Token 803: '".
' (ID: 26880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44550371170043945
    2. '   ' → logprob: -2.0705037117004395
    3. '(ans' → logprob: -2.1955037117004395
    4. ',' → logprob: -2.5705037117004395
    5. ')
' → logprob: -3.4455037117004395
    6. 'ans' → logprob: -5.6955037117004395
    7. '")' → logprob: -5.9455037117004395
    8. ').' → logprob: -6.1955037117004395
    9. '(' → logprob: -6.3205037117004395
    10. '(
' → logprob: -6.4455037117004395

Token 804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016673507168889046
    2. 'ans' → logprob: -4.266673564910889
    3. ' ans' → logprob: -6.016673564910889
    4. '	ans' → logprob: -10.39167308807373
    5. '(ans' → logprob: -10.76667308807373
    6. '
' → logprob: -11.26667308807373
    7. '       ' → logprob: -12.89167308807373
    8. '  ' → logprob: -14.64167308807373
    9. '    
' → logprob: -14.89167308807373
    10. '   ' → logprob: -15.14167308807373

Token 805: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.022684751078486443
    2. '   ' → logprob: -4.147684574127197
    3. ' ans' → logprob: -5.022684574127197
    4. '	ans' → logprob: -10.522685050964355
    5. '(ans' → logprob: -11.772685050964355
    6. ' ' → logprob: -13.022685050964355
    7. '
' → logprob: -13.897685050964355
    8. 'anst' → logprob: -14.022685050964355
    9. 'answer' → logprob: -14.022685050964355
    10. '  ' → logprob: -14.897685050964355

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327590346336365
    2. ' =' → logprob: -1.313275933265686
    3. '=max' → logprob: -11.188276290893555
    4. 'max' → logprob: -16.063276290893555
    5. '+=' → logprob: -16.313276290893555
    6. ' +=' → logprob: -16.438276290893555
    7. ' ' → logprob: -17.438276290893555
    8. ' max' → logprob: -18.063276290893555
    9. '   ' → logprob: -18.188276290893555
    10. '＝' → logprob: -18.438276290893555

Token 807: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692853808403015
    2. ' max' → logprob: -2.1269285678863525
    3. '	max' → logprob: -15.501928329467773
    4. '(max' → logprob: -16.251928329467773
    5. '=max' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.876928329467773
    8. '_max' → logprob: -18.376928329467773
    9. 'm' → logprob: -18.626928329467773
    10. '0' → logprob: -18.626928329467773

Token 808: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.927930654550437e-05
    2. '(' → logprob: -10.500029563903809
    3. 'ans' → logprob: -13.375029563903809
    4. '(
' → logprob: -16.625028610229492
    5. '	ans' → logprob: -18.250028610229492
    6. '(answer' → logprob: -19.000028610229492
    7. '(max' → logprob: -19.000028610229492
    8. ' ans' → logprob: -19.125028610229492
    9. ' (' → logprob: -19.125028610229492
    10. '(an' → logprob: -19.375028610229492

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007868755492381752
    2. ',sum' → logprob: -7.500786781311035
    3. ' ,' → logprob: -8.375786781311035
    4. 'sum' → logprob: -13.750786781311035
    5. ',
' → logprob: -13.875786781311035
    6. ',s' → logprob: -14.875786781311035
    7. '(sum' → logprob: -14.875786781311035
    8. 'ans' → logprob: -14.875786781311035
    9. ',c' → logprob: -15.875786781311035
    10. ',max' → logprob: -15.875786781311035

Token 810: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25193333625793457
    2. ' sum' → logprob: -1.5019333362579346
    3. '   ' → logprob: -12.751933097839355
    4. '    ' → logprob: -14.876933097839355
    5. ' ' → logprob: -15.126933097839355
    6. '(sum' → logprob: -15.126933097839355
    7. '	sum' → logprob: -15.376933097839355
    8. '  ' → logprob: -16.251934051513672
    9. ',sum' → logprob: -16.876934051513672
    10. '.sum' → logprob: -17.001934051513672

Token 811: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006723183207213879
    2. '(' → logprob: -5.006723403930664
    3. '(
' → logprob: -12.131723403930664
    4. ' (' → logprob: -13.506723403930664
    5. '(C' → logprob: -15.256723403930664
    6. ')c' → logprob: -15.256723403930664
    7. ')' → logprob: -16.006723403930664
    8. '(s' → logprob: -16.131723403930664
    9. '(

' → logprob: -16.506723403930664
    10. '(k' → logprob: -16.631723403930664

Token 812: 'akes' (ID: 6861)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.009468600153923035
    2. '(c' → logprob: -5.1344685554504395
    3. '[' → logprob: -6.1344685554504395
    4. 'cakes' → logprob: -7.0094685554504395
    5. 'akes' → logprob: -8.009469032287598
    6. '[i' → logprob: -10.509469032287598
    7. ' cakes' → logprob: -11.259469032287598
    8. '(' → logprob: -11.259469032287598
    9. '[
' → logprob: -11.384469032287598
    10. '[k' → logprob: -11.634469032287598

Token 813: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015054593095555902
    2. '[' → logprob: -6.501505374908447
    3. ' [' → logprob: -13.626505851745605
    4. ')[' → logprob: -14.251505851745605
    5. '   ' → logprob: -14.376505851745605
    6. '[
' → logprob: -15.251505851745605
    7. '[I' → logprob: -15.751505851745605
    8. ' ' → logprob: -16.50150489807129
    9. '```' → logprob: -16.50150489807129
    10. '[c' → logprob: -16.62650489807129

Token 814: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.5760116577148438
    2. '[:' → logprob: -0.8260116577148438
    3. '   ' → logprob: -10.201011657714844
    4. ' [:' → logprob: -10.576011657714844
    5. ']' → logprob: -12.701011657714844
    6. '[' → logprob: -13.201011657714844
    7. ' ' → logprob: -13.576011657714844
    8. '[:]' → logprob: -14.076011657714844
    9. ')' → logprob: -14.201011657714844
    10. '][' → logprob: -14.326011657714844

Token 815: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -14.75
    3. '   ' → logprob: -17.875
    4. ')m' → logprob: -20.0
    5. '```' → logprob: -20.875
    6. ')' → logprob: -21.625
    7. '	m' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. ' ' → logprob: -22.25
    10. 'м' → logprob: -22.375

Token 816: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0010974763426929712
    2. '])' → logprob: -7.001097679138184
    3. '))' → logprob: -9.376097679138184
    4. ']))
' → logprob: -9.626097679138184
    5. ']' → logprob: -10.876097679138184
    6. ')))' → logprob: -12.626097679138184
    7. '   ' → logprob: -12.751097679138184
    8. ']))

' → logprob: -13.126097679138184
    9. ')])' → logprob: -13.251097679138184
    10. '])))' → logprob: -13.501097679138184

Token 817: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.375
    3. 'prin' → logprob: -17.25
    4. '```' → logprob: -18.0
    5. '#print' → logprob: -18.25
    6. 'pr' → logprob: -18.625
    7. '
' → logprob: -18.875
    8. '#' → logprob: -20.0
    9. '-print' → logprob: -20.0
    10. '(print' → logprob: -20.5

Token 818: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'pr' → logprob: -18.0
    3. ' print' → logprob: -18.5
    4. 'prin' → logprob: -19.25
    5. '#print' → logprob: -20.375
    6. '#' → logprob: -21.0
    7. 'Print' → logprob: -22.375
    8. 'pri' → logprob: -22.625
    9. 'prit' → logprob: -22.75
    10. '
' → logprob: -22.75

Token 819: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.4513534903526306
    2. '#' → logprob: -1.3263535499572754
    3. 'ichage' → logprob: -2.7013535499572754
    4. 'f' → logprob: -3.5763535499572754
    5. 'iche' → logprob: -6.951353549957275
    6. 'ich' → logprob: -7.201353549957275
    7. 'cher' → logprob: -8.326353073120117
    8. '=' → logprob: -8.951353073120117
    9. 'ichier' → logprob: -9.576353073120117
    10. '   ' → logprob: -9.576353073120117

Token 820: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.012735432013869286
    2. 'print' → logprob: -4.512735366821289
    3. '(' → logprob: -7.012735366821289
    4. '(print' → logprob: -7.262735366821289
    5. 'ans' → logprob: -9.387735366821289
    6. '(answer' → logprob: -14.512735366821289
    7. '(
' → logprob: -16.63773536682129
    8. '()' → logprob: -16.63773536682129
    9. '(an' → logprob: -16.76273536682129
    10. '(abs' → logprob: -17.13773536682129

Token 821: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4740773141384125
    2. '(ans' → logprob: -0.9740773439407349
    3. ' ans' → logprob: -14.974077224731445
    4. '	ans' → logprob: -17.599077224731445
    5. '(' → logprob: -17.974077224731445
    6. 'answer' → logprob: -18.099077224731445
    7. '_ans' → logprob: -19.349077224731445
    8. 'ANS' → logprob: -19.599077224731445
    9. '(
' → logprob: -19.599077224731445
    10. 'anst' → logprob: -19.849077224731445

Token 822: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004115442745387554
    2. '(ans' → logprob: -5.504115581512451
    3. 'print' → logprob: -10.254115104675293
    4. 'answer' → logprob: -13.504115104675293
    5. ' ans' → logprob: -15.629115104675293
    6. 'result' → logprob: -16.00411605834961
    7. '	ans' → logprob: -17.75411605834961
    8. 'ANS' → logprob: -19.12911605834961
    9. 'anst' → logprob: -19.50411605834961
    10. '_ans' → logprob: -19.62911605834961

Token 823: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0052605606615543365
    2. 'print' → logprob: -5.505260467529297
    3. 'ans' → logprob: -7.005260467529297
    4. '(' → logprob: -8.255260467529297
    5. '(
' → logprob: -11.380260467529297
    6. '(print' → logprob: -12.880260467529297
    7. '(answer' → logprob: -15.130260467529297
    8. '
' → logprob: -17.005260467529297
    9. '```' → logprob: -17.130260467529297
    10. '(

' → logprob: -17.505260467529297

Token 824: ' trouv' (ID: 40254)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10112053155899048
    2. '(ans' → logprob: -2.3511204719543457
    3. '(print' → logprob: -7.351120471954346
    4. 'ans' → logprob: -8.601120948791504
    5. '(' → logprob: -9.351120948791504
    6. '(
' → logprob: -14.976120948791504
    7. ' print' → logprob: -15.476120948791504
    8. '(answer' → logprob: -16.601119995117188
    9. '(pr' → logprob: -16.726119995117188
    10. '(an' → logprob: -17.851119995117188

Token 825: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.006384822074323893
    2. 'ée' → logprob: -5.13138484954834
    3. 'ue' → logprob: -8.13138484954834
    4. 'e' → logprob: -9.00638484954834
    5. 'ee' → logprob: -10.38138484954834
    6. 'print' → logprob: -12.50638484954834
    7. 'er' → logprob: -13.63138484954834
    8. 'ite' → logprob: -14.63138484954834
    9. 'antie' → logprob: -14.88138484954834
    10. 'enue' → logprob: -15.13138484954834

Token 826: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '(print' → logprob: -16.0
    3. ' print' → logprob: -17.5
    4. '```' → logprob: -17.75
    5. '
' → logprob: -19.5
    6. '(' → logprob: -19.75
    7. 'pr' → logprob: -20.25
    8. '#print' → logprob: -20.625
    9. 'prin' → logprob: -21.5
    10. 'ans' → logprob: -21.625

Token 827: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023339582607150078
    2. 'ans' → logprob: -3.7733395099639893
    3. '(ans' → logprob: -9.27333927154541
    4. ' print' → logprob: -16.273340225219727
    5. ' ans' → logprob: -16.898340225219727
    6. 'answer' → logprob: -18.523340225219727
    7. '   ' → logprob: -18.773340225219727
    8. '
' → logprob: -18.898340225219727
    9. '(print' → logprob: -19.273340225219727
    10. 'ANS' → logprob: -19.773340225219727

Token 828: ''est' (ID: 6616)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.4637333154678345
    2. 'ans' → logprob: -1.8387333154678345
    3. 'ons' → logprob: -2.588733196258545
    4. 'e' → logprob: -2.588733196258545
    5. 'om' → logprob: -2.838733196258545
    6. 'print' → logprob: -3.088733196258545
    7. 'omme' → logprob: -3.213733196258545
    8. 'ont' → logprob: -3.338733196258545
    9. 'ar' → logprob: -3.588733196258545
    10. 'ode' → logprob: -3.838733196258545

Token 829: '-à' (ID: 56297)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.009390528313815594
    2. 'ans' → logprob: -4.759390354156494
    3. '(' → logprob: -7.384390354156494
    4. '(
' → logprob: -9.509390830993652
    5. 'print' → logprob: -9.884390830993652
    6. '()' → logprob: -11.259390830993652
    7. '   ' → logprob: -12.509390830993652
    8. 'la' → logprob: -13.009390830993652
    9. '()
' → logprob: -13.384390830993652
    10. '	ans' → logprob: -13.634390830993652

Token 830: '-dire' (ID: 76064)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0857948064804077
    2. 'la' → logprob: -1.0857948064804077
    3. 'max' → logprob: -1.8357948064804077
    4. 'l' → logprob: -3.2107949256896973
    5. 'ans' → logprob: -3.5857949256896973
    6. 'val' → logprob: -4.460794925689697
    7. 'à' → logprob: -4.835794925689697
    8. 'faire' → logprob: -4.960794925689697
    9. 'tout' → logprob: -5.460794925689697
    10. 'x' → logprob: -5.585794925689697

Token 831: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.474077433347702
    2. '(ans' → logprob: -0.9740774631500244
    3. ' ans' → logprob: -14.849077224731445
    4. '	ans' → logprob: -16.474077224731445
    5. '_ans' → logprob: -19.599077224731445
    6. 'answer' → logprob: -19.724077224731445
    7. 'ANS' → logprob: -19.974077224731445
    8. 'print' → logprob: -20.099077224731445
    9. 'Ans' → logprob: -20.599077224731445
    10. 'a' → logprob: -21.224077224731445

Token 832: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048747468739748
    2. 'print' → logprob: -3.0487475395202637
    3. '(ans' → logprob: -8.798747062683105
    4. 'answer' → logprob: -11.673747062683105
    5. ' ans' → logprob: -14.548747062683105
    6. 'result' → logprob: -16.298748016357422
    7. '	ans' → logprob: -16.798748016357422
    8. ' print' → logprob: -17.673748016357422
    9. 'max' → logprob: -17.923748016357422
    10. '_ans' → logprob: -18.423748016357422

Token 833: ' maximale' (ID: 76380)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002233401872217655
    2. 'ans' → logprob: -6.752233505249023
    3. 'print' → logprob: -7.002233505249023
    4. '(' → logprob: -8.877233505249023
    5. '(
' → logprob: -11.502233505249023
    6. '(print' → logprob: -13.752233505249023
    7. '(answer' → logprob: -14.002233505249023
    8. '(abs' → logprob: -14.627233505249023
    9. '(max' → logprob: -14.627233505249023
    10. 'max' → logprob: -15.877233505249023

Token 834: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5798187851905823
    2. '(ans' → logprob: -0.8298187851905823
    3. '(print' → logprob: -5.7048187255859375
    4. '(' → logprob: -7.7048187255859375
    5. 'ans' → logprob: -9.454818725585938
    6. '```' → logprob: -12.579818725585938
    7. '(answer' → logprob: -12.704818725585938
    8. '(
' → logprob: -12.704818725585938
    9. ' print' → logprob: -13.829818725585938
    10. '(pr' → logprob: -13.954818725585938

Token 835: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006816957029514015
    2. '(print' → logprob: -8.00068187713623
    3. '(' → logprob: -8.62568187713623
    4. '(ans' → logprob: -8.75068187713623
    5. '(
' → logprob: -13.12568187713623
    6. '
' → logprob: -13.25068187713623
    7. ' print' → logprob: -13.50068187713623
    8. 'ans' → logprob: -13.62568187713623
    9. '()
' → logprob: -14.62568187713623
    10. ')' → logprob: -14.75068187713623

Token 836: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '```' → logprob: -19.25
    4. '
' → logprob: -22.375
    5. 'pr' → logprob: -25.125
    6. '``' → logprob: -26.375
    7. '`' → logprob: -26.625
    8. '#print' → logprob: -26.75
    9. 'prin' → logprob: -27.0
    10. 'printf' → logprob: -29.0

Token 837: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. 'ans' → logprob: -15.375336647033691
    4. ' (' → logprob: -15.625336647033691
    5. '(max' → logprob: -15.875336647033691
    6. '(
' → logprob: -16.000335693359375
    7. '()' → logprob: -16.125335693359375
    8. '(abs' → logprob: -17.375335693359375
    9. '(answer' → logprob: -17.625335693359375
    10. '(an' → logprob: -18.500335693359375

Token 838: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '())' → logprob: -16.0
    3. ')`' → logprob: -16.0
    4. ' )' → logprob: -16.125
    5. '))' → logprob: -16.375
    6. '()' → logprob: -16.5
    7. '(' → logprob: -20.125
    8. ')
' → logprob: -20.375
    9. ')}' → logprob: -20.375
    10. '`)' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 836
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 276
Tokens correctement prédits (top 10): 517
Précision stricte (1ère position): 32.18%
Précision adaptée (1ère position): 33.01%
Précision (top 10): 61.84%
================================================================================
