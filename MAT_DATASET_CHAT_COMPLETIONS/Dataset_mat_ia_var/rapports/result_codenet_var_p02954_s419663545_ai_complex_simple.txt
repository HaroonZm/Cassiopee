================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import groupby, accumulate, chain, islice
from operator import itemgetter
from math import ceil, floor

S = list(input())
groups = [(k, sum(1 for _ in g)) for k, g in groupby(S)]
lengths = list(map(itemgetter(1), groups))
partitions = list(accumulate(chain([0], lengths)))
res = [0] * len(S)
pairs = list(zip(islice(partitions, None, -2), islice(partitions, 1, None), islice(partitions, 2, None)))

for idx, (l, m, r) in enumerate(pairs):
    if idx % 2 == 0:
        continue
    left_count = m - l
    right_count = r - m
    res[m-1] = ceil(left_count/2) + floor(right_count/2)
    res[m] = floor(left_count/2) + ceil(right_count/2)

print(*res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' group' (ID: 3566)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.858132541179657
    2. 'per' → logprob: -1.6081326007843018
    3. 'com' → logprob: -1.8581326007843018
    4. 'count' → logprob: -2.2331326007843018
    5. 'cycle' → logprob: -3.1081326007843018
    6. 'group' → logprob: -3.2331326007843018
    7. 'chain' → logprob: -4.233132362365723
    8. ' permutations' → logprob: -5.358132362365723
    9. ' product' → logprob: -5.483132362365723
    10. ' cycle' → logprob: -6.608132362365723

Token 4: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.002207593061029911
    2. 's' → logprob: -6.2522077560424805
    3. 'y' → logprob: -8.62720775604248
    4. 'b' → logprob: -9.62720775604248
    5. 'bys' → logprob: -11.00220775604248
    6. 'by's' → logprob: -11.12720775604248
    7. 'tools' → logprob: -13.87720775604248
    8. 'ers' → logprob: -14.87720775604248
    9. 'ys' → logprob: -15.25220775604248
    10. 'z' → logprob: -15.62720775604248

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006121210753917694
    2. '.' → logprob: -7.875612258911133
    3. '\(' → logprob: -9.125612258911133
    4. '(
' → logprob: -9.375612258911133
    5. ',' → logprob: -11.500612258911133
    6. ' (' → logprob: -11.875612258911133
    7. '\' → logprob: -12.375612258911133
    8. ''' → logprob: -12.625612258911133
    9. '\n' → logprob: -12.750612258911133
    10. '```' → logprob: -13.500612258911133

Token 6: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4623303711414337
    2. 'com' → logprob: -2.3373303413391113
    3. 'count' → logprob: -2.9623303413391113
    4. 'filter' → logprob: -3.0873303413391113
    5. 'product' → logprob: -3.3373303413391113
    6. ' accumulate' → logprob: -3.4623303413391113
    7. 'tee' → logprob: -3.7123303413391113
    8. 'chain' → logprob: -4.087330341339111
    9. 'per' → logprob: -4.337330341339111
    10. ' tee' → logprob: -4.587330341339111

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0043999748304486275
    2. '(
' → logprob: -5.62939977645874
    3. '\n' → logprob: -8.254400253295898
    4. '.' → logprob: -8.629400253295898
    5. '\(' → logprob: -9.004400253295898
    6. '\' → logprob: -9.629400253295898
    7. ',' → logprob: -9.879400253295898
    8. '`' → logprob: -11.004400253295898
    9. '```' → logprob: -11.004400253295898
    10. ' (' → logprob: -11.004400253295898

Token 8: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.33672502636909485
    2. ' product' → logprob: -2.2117249965667725
    3. 'chain' → logprob: -3.4617249965667725
    4. 'product' → logprob: -3.7117249965667725
    5. 'com' → logprob: -3.8367249965667725
    6. ' permutations' → logprob: -3.8367249965667725
    7. ' filter' → logprob: -4.086725234985352
    8. 'count' → logprob: -4.336725234985352
    9. 'filter' → logprob: -4.586725234985352
    10. ' cycle' → logprob: -5.086725234985352

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027926696464419365
    2. '.' → logprob: -3.7779266834259033
    3. '(
' → logprob: -5.902926921844482
    4. ',' → logprob: -6.902926921844482
    5. '[' → logprob: -8.777926445007324
    6. 'def' → logprob: -9.027926445007324
    7. '\' → logprob: -9.277926445007324
    8. '```' → logprob: -9.527926445007324
    9. '\(' → logprob: -9.527926445007324
    10. '#' → logprob: -9.777926445007324

Token 10: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.24876220524311066
    2. 'product' → logprob: -2.8737621307373047
    3. 'compress' → logprob: -2.9987621307373047
    4. ' product' → logprob: -3.3737621307373047
    5. 'count' → logprob: -4.248762130737305
    6. 'cycle' → logprob: -4.373762130737305
    7. ' compress' → logprob: -4.373762130737305
    8. 'filter' → logprob: -4.748762130737305
    9. 'drop' → logprob: -5.373762130737305
    10. ' cycle' → logprob: -5.373762130737305

Token 11: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -3.774276774493046e-05
    2. 'n' → logprob: -11.125038146972656
    3. 'lic' → logprob: -11.625038146972656
    4. 'licing' → logprob: -12.750038146972656
    5. 'in' → logprob: -13.250038146972656
    6. 'liced' → logprob: -13.625038146972656
    7. 'instance' → logprob: -13.750038146972656
    8. '```' → logprob: -13.750038146972656
    9. 'l' → logprob: -13.875038146972656
    10. 'nt' → logprob: -14.125038146972656

Token 12: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09822536259889603
    2. '.' → logprob: -2.5982253551483154
    3. '(
' → logprob: -4.8482255935668945
    4. ',' → logprob: -5.3482255935668945
    5. '\' → logprob: -6.2232255935668945
    6. '[' → logprob: -7.3482255935668945
    7. '\(' → logprob: -7.3482255935668945
    8. 'def' → logprob: -7.4732255935668945
    9. '```' → logprob: -7.7232255935668945
    10. '\n' → logprob: -7.9732255935668945

Token 13: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.030653715133667
    2. '.' → logprob: -1.405653715133667
    3. '\n' → logprob: -1.905653715133667
    4. '\' → logprob: -2.280653715133667
    5. ',' → logprob: -3.155653715133667
    6. '
' → logprob: -3.780653715133667
    7. '(
' → logprob: -4.030653953552246
    8. '' → logprob: -4.030653953552246
    9. '```' → logprob: -4.780653953552246
    10. 'def' → logprob: -4.905653953552246

Token 14: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.36123496294021606
    2. 'operator' → logprob: -2.3612349033355713
    3. ' functools' → logprob: -2.6112349033355713
    4. 'collections' → logprob: -2.7362349033355713
    5. ' collections' → logprob: -3.1112349033355713
    6. 'fun' → logprob: -4.48623514175415
    7. ' math' → logprob: -5.11123514175415
    8. 'math' → logprob: -5.61123514175415
    9. ' typing' → logprob: -6.11123514175415
    10. 'typing' → logprob: -6.98623514175415

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026507195085287094
    2. 'import' → logprob: -3.6515071392059326
    3. ' ' → logprob: -8.651507377624512
    4. '.' → logprob: -10.776507377624512
    5. '	import' → logprob: -12.151507377624512
    6. ' .' → logprob: -13.651507377624512
    7. '<|end|>' → logprob: -13.776507377624512
    8. '_import' → logprob: -14.026507377624512
    9. ' as' → logprob: -14.526507377624512
    10. ' ' → logprob: -15.151507377624512

Token 16: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.740273118019104
    2. 'item' → logprob: -0.865273118019104
    3. 'add' → logprob: -3.1152729988098145
    4. ' add' → logprob: -3.1152729988098145
    5. 'import' → logprob: -5.2402729988098145
    6. ' import' → logprob: -5.7402729988098145
    7. ' ' → logprob: -6.3652729988098145
    8. 'getitem' → logprob: -6.4902729988098145
    9. '	item' → logprob: -7.3652729988098145
    10. '=item' → logprob: -8.865273475646973

Token 17: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0011833232128992677
    2. 'get' → logprob: -6.75118350982666
    3. 'gett' → logprob: -11.62618350982666
    4. 'getitem' → logprob: -12.75118350982666
    5. 'g' → logprob: -15.12618350982666
    6. '_get' → logprob: -15.25118350982666
    7. ' getter' → logprob: -15.87618350982666
    8. '|get' → logprob: -16.251182556152344
    9. 'Getter' → logprob: -16.376182556152344
    10. '.get' → logprob: -16.876182556152344

Token 18: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17945724725723267
    2. '(
' → logprob: -2.679457187652588
    3. '.' → logprob: -3.554457187652588
    4. '\' → logprob: -3.804457187652588
    5. ',' → logprob: -3.804457187652588
    6. '\n' → logprob: -4.679457187652588
    7. '`' → logprob: -5.929457187652588
    8. '```' → logprob: -5.929457187652588
    9. '[' → logprob: -6.554457187652588
    10. '\(' → logprob: -6.679457187652588

Token 19: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2869207859039307
    2. ',' → logprob: -1.6619207859039307
    3. '(' → logprob: -2.0369207859039307
    4. '\' → logprob: -2.9119207859039307
    5. 'import' → logprob: -2.9119207859039307
    6. '\n' → logprob: -3.1619207859039307
    7. 'def' → logprob: -3.2869207859039307
    8. '

' → logprob: -3.2869207859039307
    9. '[' → logprob: -3.5369207859039307
    10. '#' → logprob: -3.9119207859039307

Token 20: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.2730168402194977
    2. ' collections' → logprob: -1.6480168104171753
    3. ' math' → logprob: -3.273016929626465
    4. ' itertools' → logprob: -5.398016929626465
    5. 'collections' → logprob: -6.398016929626465
    6. ' os' → logprob: -6.523016929626465
    7. ' typing' → logprob: -7.648016929626465
    8. 'math' → logprob: -8.898016929626465
    9. 'fun' → logprob: -10.023016929626465
    10. ' operator' → logprob: -10.023016929626465

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2554066479206085
    2. 'import' → logprob: -1.5054066181182861
    3. ' ' → logprob: -5.755406856536865
    4. '	import' → logprob: -9.130406379699707
    5. '<|end|>' → logprob: -10.005406379699707
    6. '_import' → logprob: -10.380406379699707
    7. '.' → logprob: -10.380406379699707
    8. '```' → logprob: -10.880406379699707
    9. ' im' → logprob: -12.005406379699707
    10. '<|end|>' → logprob: -12.005406379699707

Token 22: ' ceil' (ID: 35964)
  Prédit: ' ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -1.0635879039764404
    2. ' inf' → logprob: -1.3135879039764404
    3. 'sqrt' → logprob: -2.3135879039764404
    4. 'ceil' → logprob: -2.3135879039764404
    5. ' sqrt' → logprob: -2.6885879039764404
    6. ' factorial' → logprob: -3.3135879039764404
    7. ' gcd' → logprob: -3.8135879039764404
    8. 'inf' → logprob: -3.8135879039764404
    9. 'log' → logprob: -4.3135881423950195
    10. ' comb' → logprob: -4.8135881423950195

Token 23: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2758946418762207
    2. 'def' → logprob: -1.2758946418762207
    3. ',' → logprob: -2.2758946418762207
    4. '(' → logprob: -2.4008946418762207
    5. '(
' → logprob: -3.1508946418762207
    6. '```' → logprob: -3.1508946418762207
    7. '`' → logprob: -3.2758946418762207
    8. '
' → logprob: -3.4008946418762207
    9. '\n' → logprob: -4.025894641876221
    10. '#' → logprob: -4.150894641876221

Token 24: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.4513220489025116
    2. 'log' → logprob: -1.326322078704834
    3. 'sqrt' → logprob: -2.451322078704834
    4. 'inf' → logprob: -5.201322078704834
    5. ' floor' → logprob: -6.076322078704834
    6. 'prod' → logprob: -6.326322078704834
    7. 'fabs' → logprob: -7.701322078704834
    8. 'pow' → logprob: -8.201321601867676
    9. ' sqrt' → logprob: -8.326321601867676
    10. 'sin' → logprob: -8.451321601867676

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9671602845191956
    2. '\n' → logprob: -1.9671602249145508
    3. ',' → logprob: -2.217160224914551
    4. '#' → logprob: -2.217160224914551
    5. '\' → logprob: -3.217160224914551
    6. '(' → logprob: -3.467160224914551
    7. '

' → logprob: -3.592160224914551
    8. '_' → logprob: -3.842160224914551
    9. '[' → logprob: -3.842160224914551
    10. 'def' → logprob: -4.092160224914551

Token 26: 'S' (ID: 50)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26524797081947327
    2. '#' → logprob: -2.1402480602264404
    3. '\' → logprob: -3.5152480602264404
    4. 'def' → logprob: -3.8902480602264404
    5. '_' → logprob: -4.140247821807861
    6. '`' → logprob: -4.390247821807861
    7. '(' → logprob: -5.015247821807861
    8. 'n' → logprob: -5.390247821807861
    9. '```' → logprob: -5.765247821807861
    10. ',' → logprob: -5.765247821807861

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8536220192909241
    2. '=' → logprob: -2.2286219596862793
    3. 'et' → logprob: -2.4786219596862793
    4. 'E' → logprob: -2.6036219596862793
    5. 'ET' → logprob: -2.6036219596862793
    6. '_' → logprob: -2.7286219596862793
    7. 'e' → logprob: -3.8536219596862793
    8. 'um' → logprob: -3.8536219596862793
    9. ')' → logprob: -4.228621959686279
    10. ' ' → logprob: -4.728621959686279

Token 28: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8555375933647156
    2. ' "' → logprob: -1.4805376529693604
    3. '[' → logprob: -2.4805376529693604
    4. ' '' → logprob: -2.4805376529693604
    5. ' []' → logprob: -2.7305376529693604
    6. '"' → logprob: -3.7305376529693604
    7. ''' → logprob: -3.8555376529693604
    8. ' ' → logprob: -3.8555376529693604
    9. ' ''' → logprob: -4.230537414550781
    10. ' ""' → logprob: -4.855537414550781

Token 29: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06266222894191742
    2. '(range' → logprob: -3.312662124633789
    3. '(chain' → logprob: -3.812662124633789
    4. '(map' → logprob: -7.437662124633789
    5. '(filter' → logprob: -7.937662124633789
    6. '<|end|>' → logprob: -8.312662124633789
    7. '(
' → logprob: -9.187662124633789
    8. '(is' → logprob: -9.312662124633789
    9. '(s' → logprob: -9.312662124633789
    10. '(S' → logprob: -9.562662124633789

Token 30: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5881977081298828
    2. '())' → logprob: -0.8381977081298828
    3. '(' → logprob: -4.463197708129883
    4. ')' → logprob: -8.088197708129883
    5. '().' → logprob: -9.463197708129883
    6. '());' → logprob: -9.588197708129883
    7. '();)' → logprob: -9.713197708129883
    8. '()))' → logprob: -10.338197708129883
    9. '(()' → logprob: -10.838197708129883
    10. '(),' → logprob: -10.963197708129883

Token 31: 'groups' (ID: 38127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6580396294593811
    2. '[' → logprob: -1.4080395698547363
    3. ':' → logprob: -2.9080395698547363
    4. '#' → logprob: -3.4080395698547363
    5. '.' → logprob: -3.5330395698547363
    6. '=' → logprob: -3.7830395698547363
    7. '(' → logprob: -4.033039569854736
    8. '_' → logprob: -4.283039569854736
    9. 's' → logprob: -4.408039569854736
    10. ' ' → logprob: -4.533039569854736

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02409944124519825
    2. '(' → logprob: -4.024099349975586
    3. ' =' → logprob: -5.149099349975586
    4. ')' → logprob: -9.899099349975586
    5. '_' → logprob: -10.774099349975586
    6. '=[]' → logprob: -11.274099349975586
    7. ',' → logprob: -12.024099349975586
    8. ')=' → logprob: -12.399099349975586
    9. '(group' → logprob: -12.399099349975586
    10. '=(' → logprob: -12.649099349975586

Token 33: ' [(' (ID: 43900)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.004816718865185976
    2. ' group' → logprob: -5.62981653213501
    3. '[group' → logprob: -7.37981653213501
    4. '(group' → logprob: -8.004817008972168
    5. '[(' → logprob: -8.379817008972168
    6. '.groupby' → logprob: -11.504817008972168
    7. '[' → logprob: -12.379817008972168
    8. 'chain' → logprob: -12.504817008972168
    9. '"group' → logprob: -12.879817008972168
    10. '[key' → logprob: -13.004817008972168

Token 34: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04893546923995018
    2. 'key' → logprob: -3.2989354133605957
    3. 'char' → logprob: -4.673935413360596
    4. 'c' → logprob: -7.548935413360596
    5. 'ch' → logprob: -7.673935413360596
    6. 'label' → logprob: -8.173935890197754
    7. ' k' → logprob: -10.298935890197754
    8. 'len' → logprob: -10.548935890197754
    9. 'x' → logprob: -10.673935890197754
    10. '_,' → logprob: -11.298935890197754

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021364595741033554
    2. ',len' → logprob: -6.25213623046875
    3. ',list' → logprob: -9.25213623046875
    4. 'len' → logprob: -9.87713623046875
    5. ' ,' → logprob: -10.25213623046875
    6. ',sum' → logprob: -11.62713623046875
    7. 'list' → logprob: -11.75213623046875
    8. ',g' → logprob: -13.25213623046875
    9. 'sum' → logprob: -13.37713623046875
    10. ',l' → logprob: -14.00213623046875

Token 36: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5841843485832214
    2. 'len' → logprob: -1.3341844081878662
    3. ' sum' → logprob: -2.459184408187866
    4. ' len' → logprob: -2.709184408187866
    5. 'list' → logprob: -3.709184408187866
    6. ' list' → logprob: -6.084184169769287
    7. 'g' → logprob: -9.334184646606445
    8. ' ' → logprob: -10.334184646606445
    9. ' g' → logprob: -10.959184646606445
    10. '(len' → logprob: -11.584184646606445

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002485050121322274
    2. '(v' → logprob: -6.627485275268555
    3. '(g' → logprob: -7.627485275268555
    4. '(map' → logprob: -7.877485275268555
    5. '1' → logprob: -9.002485275268555
    6. '(c' → logprob: -9.752485275268555
    7. 'v' → logprob: -10.627485275268555
    8. ')' → logprob: -10.752485275268555
    9. '(b' → logprob: -11.627485275268555
    10. '(x' → logprob: -11.627485275268555

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03564436361193657
    2. 'map' → logprob: -3.410644292831421
    3. 'int' → logprob: -6.78564453125
    4. 'v' → logprob: -8.16064453125
    5. '(' → logprob: -8.16064453125
    6. 'g' → logprob: -9.66064453125
    7. 'item' → logprob: -10.16064453125
    8. 'c' → logprob: -10.16064453125
    9. ' ' → logprob: -10.16064453125
    10. 'sum' → logprob: -10.78564453125

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38704192638397217
    2. 'for' → logprob: -1.1370419263839722
    3. ' ' → logprob: -9.512042045593262
    4. '1' → logprob: -9.637042045593262
    5. '==' → logprob: -10.887042045593262
    6. 'if' → logprob: -12.637042045593262
    7. 'v' → logprob: -12.762042045593262
    8. '	for' → logprob: -13.387042045593262
    9. '```' → logprob: -13.762042045593262
    10. 'g' → logprob: -14.262042045593262

Token 40: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009789974428713322
    2. ' _' → logprob: -4.634789943695068
    3. '_i' → logprob: -11.384790420532227
    4. '_g' → logprob: -11.509790420532227
    5. '_s' → logprob: -12.634790420532227
    6. '_v' → logprob: -12.759790420532227
    7. '_k' → logprob: -12.759790420532227
    8. '_)' → logprob: -13.884790420532227
    9. '_t' → logprob: -14.509790420532227
    10. '_b' → logprob: -14.759790420532227

Token 41: ' in' (ID: 306)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14937083423137665
    2. '_' → logprob: -2.3993709087371826
    3. ' in' → logprob: -3.2743709087371826
    4. ' g' → logprob: -5.3993706703186035
    5. '_g' → logprob: -5.5243706703186035
    6. ',_' → logprob: -6.8993706703186035
    7. ' ' → logprob: -8.899371147155762
    8. '_i' → logprob: -9.149371147155762
    9. 'g' → logprob: -9.649371147155762
    10. ' group' → logprob: -9.899371147155762

Token 42: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0027838386595249176
    2. 'v' → logprob: -6.25278377532959
    3. ' g' → logprob: -7.12778377532959
    4. 'group' → logprob: -10.75278377532959
    5. 'grp' → logprob: -11.12778377532959
    6. '_g' → logprob: -12.37778377532959
    7. '_' → logprob: -12.50278377532959
    8. ' v' → logprob: -13.12778377532959
    9. 'j' → logprob: -13.62778377532959
    10. ' ' → logprob: -13.62778377532959

Token 43: '))' (ID: 915)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048955101519823074
    2. 'in' → logprob: -3.423955202102661
    3. '))' → logprob: -4.298954963684082
    4. ')' → logprob: -6.798954963684082
    5. ' ' → logprob: -8.673954963684082
    6. '_' → logprob: -9.923954963684082
    7. 'group' → logprob: -10.298954963684082
    8. 'g' → logprob: -10.548954963684082
    9. ' ))' → logprob: -10.548954963684082
    10. 'k' → logprob: -10.548954963684082

Token 44: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7553805708885193
    2. ' for' → logprob: -0.7553805708885193
    3. 'for' → logprob: -3.005380630493164
    4. ')' → logprob: -4.755380630493164
    5. 'in' → logprob: -6.505380630493164
    6. ' ' → logprob: -8.255380630493164
    7. 'group' → logprob: -9.005380630493164
    8. '(group' → logprob: -9.505380630493164
    9. ' group' → logprob: -10.130380630493164
    10. ' )' → logprob: -10.380380630493164

Token 45: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15145337581634521
    2. ' k' → logprob: -2.2764534950256348
    3. '_,' → logprob: -4.151453495025635
    4. '_' → logprob: -4.151453495025635
    5. '_k' → logprob: -5.276453495025635
    6. ' _,' → logprob: -7.651453495025635
    7. ' _' → logprob: -7.651453495025635
    8. '	k' → logprob: -9.151453018188477
    9. '```' → logprob: -10.026453018188477
    10. ',' → logprob: -10.026453018188477

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019601555541157722
    2. ',g' → logprob: -6.251960277557373
    3. ',k' → logprob: -11.376959800720215
    4. ' ,' → logprob: -12.001959800720215
    5. 'g' → logprob: -12.126959800720215
    6. ' in' → logprob: -12.876959800720215
    7. ',_' → logprob: -13.376959800720215
    8. ',v' → logprob: -13.501959800720215
    9. ',is' → logprob: -14.501959800720215
    10. ' g' → logprob: -15.126959800720215

Token 47: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04859429597854614
    2. ' g' → logprob: -3.0485942363739014
    3. '_g' → logprob: -12.79859447479248
    4. '	g' → logprob: -13.92359447479248
    5. 'group' → logprob: -14.04859447479248
    6. ' ' → logprob: -14.29859447479248
    7. '_' → logprob: -14.54859447479248
    8. ' group' → logprob: -14.79859447479248
    9. ' ' → logprob: -15.54859447479248
    10. '```' → logprob: -15.54859447479248

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128605380654335
    2. 'in' → logprob: -2.2378604412078857
    3. 'group' → logprob: -11.362860679626465
    4. '<|end|>' → logprob: -11.362860679626465
    5. '.groupby' → logprob: -12.487860679626465
    6. ')' → logprob: -12.737860679626465
    7. ' ' → logprob: -12.737860679626465
    8. '<|end|>' → logprob: -13.987860679626465
    9. ' group' → logprob: -14.112860679626465
    10. 'ingroup' → logprob: -14.487860679626465

Token 49: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.048587825149297714
    2. ' group' → logprob: -3.0485877990722656
    3. '"group' → logprob: -15.173587799072266
    4. '.groupby' → logprob: -16.173587799072266
    5. '	group' → logprob: -16.423587799072266
    6. '(group' → logprob: -16.923587799072266
    7. ' ' → logprob: -17.673587799072266
    8. 'roup' → logprob: -18.798587799072266
    9. '```' → logprob: -19.298587799072266
    10. 'g' → logprob: -19.298587799072266

Token 50: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.9266199160483666e-05
    2. 's' → logprob: -11.625019073486328
    3. 'y' → logprob: -12.000019073486328
    4. 'b' → logprob: -13.625019073486328
    5. 'ing' → logprob: -14.500019073486328
    6. ')' → logprob: -14.750019073486328
    7. ' ' → logprob: -15.125019073486328
    8. 'py' → logprob: -15.125019073486328
    9. '```' → logprob: -15.750019073486328
    10. '(S' → logprob: -15.750019073486328

Token 51: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -4.394135612528771e-05
    2. '(' → logprob: -10.125043869018555
    3. '(s' → logprob: -13.250043869018555
    4. 'S' → logprob: -14.000043869018555
    5. ' (' → logprob: -14.500043869018555
    6. ')' → logprob: -15.375043869018555
    7. ')(' → logprob: -16.000043869018555
    8. '((' → logprob: -16.125043869018555
    9. '(iter' → logprob: -17.125043869018555
    10. '(
' → logprob: -17.500043869018555

Token 52: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009938115254044533
    2. ')' → logprob: -5.1349382400512695
    3. ')])' → logprob: -5.7599382400512695
    4. ')]
' → logprob: -7.3849382400512695
    5. '(S' → logprob: -9.75993824005127
    6. ')]

' → logprob: -10.13493824005127
    7. ',' → logprob: -10.50993824005127
    8. ',S' → logprob: -10.63493824005127
    9. '))' → logprob: -11.00993824005127
    10. ']' → logprob: -11.50993824005127

Token 53: 'length' (ID: 7914)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.897884726524353
    2. '(' → logprob: -2.1478848457336426
    3. ',' → logprob: -2.2728848457336426
    4. '\n' → logprob: -2.8978848457336426
    5. ',
' → logprob: -3.0228848457336426
    6. ')' → logprob: -3.1478848457336426
    7. '(
' → logprob: -3.7728848457336426
    8. 'if' → logprob: -3.7728848457336426
    9. 's' → logprob: -3.7728848457336426
    10. '[' → logprob: -3.8978848457336426

Token 54: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.042015984654426575
    2. '_' → logprob: -4.04201602935791
    3. '=' → logprob: -4.54201602935791
    4. ' =' → logprob: -4.54201602935791
    5. '_s' → logprob: -7.04201602935791
    6. 'S' → logprob: -7.16701602935791
    7. '(' → logprob: -8.04201602935791
    8. '_sum' → logprob: -9.66701602935791
    9. '_counts' → logprob: -10.66701602935791
    10. '_of' → logprob: -10.79201602935791

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5984565019607544
    2. ' =' → logprob: -0.8484565019607544
    3. '(' → logprob: -3.848456382751465
    4. ',' → logprob: -7.598456382751465
    5. '=[]' → logprob: -8.473456382751465
    6. 's' → logprob: -9.473456382751465
    7. ')' → logprob: -10.473456382751465
    8. '[' → logprob: -10.723456382751465
    9. ' ' → logprob: -11.098456382751465
    10. '=[' → logprob: -11.223456382751465

Token 56: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -1.0179051160812378
    2. ' [' → logprob: -1.2679051160812378
    3. '[item' → logprob: -1.5179051160812378
    4. '[' → logprob: -2.1429052352905273
    5. ' list' → logprob: -4.392905235290527
    6. 'list' → logprob: -5.642905235290527
    7. '(list' → logprob: -6.267905235290527
    8. '[i' → logprob: -7.392905235290527
    9. '[len' → logprob: -7.767905235290527
    10. '([' → logprob: -7.767905235290527

Token 57: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.03247427940368652
    2. '(chain' → logprob: -3.5324742794036865
    3. '(ac' → logprob: -6.657474517822266
    4. '(' → logprob: -6.657474517822266
    5. '(map' → logprob: -8.907474517822266
    6. '(item' → logprob: -12.782474517822266
    7. '(it' → logprob: -12.907474517822266
    8. '()' → logprob: -13.157474517822266
    9. '(is' → logprob: -13.282474517822266
    10. 'acc' → logprob: -13.282474517822266

Token 58: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.033065520226955414
    2. '(lambda' → logprob: -4.283065319061279
    3. '(len' → logprob: -4.908065319061279
    4. '(operator' → logprob: -4.908065319061279
    5. '(' → logprob: -5.658065319061279
    6. 'item' → logprob: -8.283065795898438
    7. ')item' → logprob: -9.158065795898438
    8. ' item' → logprob: -10.533065795898438
    9. 'operator' → logprob: -11.283065795898438
    10. ',item' → logprob: -11.283065795898438

Token 59: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -6.992775888647884e-05
    2. 'get' → logprob: -9.625069618225098
    3. 'gett' → logprob: -12.750069618225098
    4. 'getitem' → logprob: -15.750069618225098
    5. 'giver' → logprob: -16.000070571899414
    6. 'setter' → logprob: -16.250070571899414
    7. 'Getter' → logprob: -16.375070571899414
    8. 'generator' → logprob: -16.750070571899414
    9. '@Getter' → logprob: -16.875070571899414
    10. 'holder' → logprob: -17.000070571899414

Token 60: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018220659694634378
    2. '(
' → logprob: -8.625182151794434
    3. '1' → logprob: -13.125182151794434
    4. '(

' → logprob: -15.250182151794434
    5. '('' → logprob: -15.875182151794434
    6. '(-' → logprob: -16.75018310546875
    7. ' (' → logprob: -16.87518310546875
    8. '(
' → logprob: -16.87518310546875
    9. '```' → logprob: -17.62518310546875
    10. '
' → logprob: -18.00018310546875

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016468366084154695
    2. ' ' → logprob: -8.750164985656738
    3. '0' → logprob: -13.250164985656738
    4. '   ' → logprob: -13.625164985656738
    5. '```' → logprob: -14.000164985656738
    6. ',' → logprob: -15.000164985656738
    7. ')' → logprob: -15.312664985656738
    8. '  ' → logprob: -15.500164985656738
    9. '
' → logprob: -15.625164985656738
    10. '-' → logprob: -15.625164985656738

Token 62: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12758739292621613
    2. '),' → logprob: -2.12758731842041
    3. ')' → logprob: -8.12758731842041
    4. ',length' → logprob: -8.12758731842041
    5. ')))' → logprob: -11.12758731842041
    6. ',g' → logprob: -11.37758731842041
    7. ' ,' → logprob: -11.75258731842041
    8. ',),' → logprob: -11.87758731842041
    9. ',len' → logprob: -12.12758731842041
    10. ')),' → logprob: -12.25258731842041

Token 63: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.4741264283657074
    2. ' groups' → logprob: -0.9741264581680298
    3. '(groups' → logprob: -10.349126815795898
    4. '.groups' → logprob: -11.349126815795898
    5. ' groupes' → logprob: -14.224126815795898
    6. 'group' → logprob: -14.224126815795898
    7. ')' → logprob: -14.224126815795898
    8. '/groups' → logprob: -14.474126815795898
    9. 'roups' → logprob: -14.599126815795898
    10. ' ' → logprob: -14.849126815795898

Token 64: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.3080716346157715e-05
    2. ')' → logprob: -11.000022888183594
    3. '))
' → logprob: -12.500022888183594
    4. ')))' → logprob: -13.125022888183594
    5. ' ))' → logprob: -15.250022888183594
    6. '()))' → logprob: -15.875022888183594
    7. '),' → logprob: -16.500022888183594
    8. '))

' → logprob: -16.500022888183594
    9. ')),' → logprob: -17.000022888183594
    10. '[' → logprob: -17.500022888183594

Token 65: 'part' (ID: 5815)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2638931274414062
    2. 'n' → logprob: -1.7638931274414062
    3. 'diff' → logprob: -2.3888931274414062
    4. ')
' → logprob: -3.1388931274414062
    5. 'total' → logprob: -3.2638931274414062
    6. '_
' → logprob: -3.3888931274414062
    7. 'd' → logprob: -3.6388931274414062
    8. 'acc' → logprob: -3.7638931274414062
    9. 'counts' → logprob: -3.8888931274414062
    10. 'idx' → logprob: -4.013893127441406

Token 66: 'itions' (ID: 5500)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09947706013917923
    2. 'itions' → logprob: -3.4744770526885986
    3. '_len' → logprob: -4.099477291107178
    4. '_lengths' → logprob: -4.099477291107178
    5. 'ition' → logprob: -4.974477291107178
    6. '_sizes' → logprob: -5.224477291107178
    7. 'ial' → logprob: -5.474477291107178
    8. '_size' → logprob: -5.974477291107178
    9. '_l' → logprob: -6.724477291107178
    10. '_sum' → logprob: -6.849477291107178

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011173023842275143
    2. '=' → logprob: -4.636173248291016
    3. '(' → logprob: -7.136173248291016
    4. '_' → logprob: -8.136173248291016
    5. 's' → logprob: -8.386173248291016
    6. '=[]' → logprob: -11.011173248291016
    7. ')' → logprob: -11.386173248291016
    8. ' ' → logprob: -11.636173248291016
    9. '_sizes' → logprob: -11.761173248291016
    10. ',' → logprob: -11.886173248291016

Token 68: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8371636867523193
    2. ' list' → logprob: -1.8371636867523193
    3. 'list' → logprob: -1.9621636867523193
    4. ' [' → logprob: -2.0871636867523193
    5. '[list' → logprob: -2.7121636867523193
    6. '[]' → logprob: -3.7121636867523193
    7. 'acc' → logprob: -4.212163925170898
    8. '[(' → logprob: -4.587163925170898
    9. '(acc' → logprob: -5.587163925170898
    10. '[]
' → logprob: -5.837163925170898

Token 69: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.05755477398633957
    2. '(chain' → logprob: -3.1825547218322754
    3. '(is' → logprob: -4.932554721832275
    4. '(' → logprob: -5.057554721832275
    5. '(part' → logprob: -8.182555198669434
    6. '(t' → logprob: -8.807555198669434
    7. '(ac' → logprob: -8.807555198669434
    8. '(filter' → logprob: -8.807555198669434
    9. '(map' → logprob: -10.307555198669434
    10. '(chunk' → logprob: -10.807555198669434

Token 70: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -8.983476436696947e-05
    2. 'um' → logprob: -9.750089645385742
    3. 'om' → logprob: -10.625089645385742
    4. 'ulate' → logprob: -13.000089645385742
    5. 'umul' → logprob: -13.625089645385742
    6. 'umu' → logprob: -14.125089645385742
    7. '```' → logprob: -14.625089645385742
    8. 'ount' → logprob: -14.625089645385742
    9. 'umal' → logprob: -14.750089645385742
    10. 'umulative' → logprob: -15.375089645385742

Token 71: '(chain' (ID: 124348)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.001242847996763885
    2. '(lambda' → logprob: -6.751242637634277
    3. '(' → logprob: -10.126242637634277
    4. ')(' → logprob: -11.376242637634277
    5. ')' → logprob: -11.626242637634277
    6. '(len' → logprob: -11.751242637634277
    7. 'length' → logprob: -13.501242637634277
    8. ',length' → logprob: -14.501242637634277
    9. '(depth' → logprob: -14.626242637634277
    10. ' (' → logprob: -15.001242637634277

Token 72: '([' (ID: 5194)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.023270171135663986
    2. '([' → logprob: -4.273270130157471
    3. '((' → logprob: -5.023270130157471
    4. '(' → logprob: -6.648270130157471
    5. 'from' → logprob: -7.523270130157471
    6. 'length' → logprob: -8.523270606994629
    7. '(([' → logprob: -9.273270606994629
    8. '.from' → logprob: -9.898270606994629
    9. ',length' → logprob: -10.023270606994629
    10. '(map' → logprob: -10.523270606994629

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6239754557609558
    2. 'length' → logprob: -0.8739754557609558
    3. '1' → logprob: -4.1239752769470215
    4. '(length' → logprob: -4.2489752769470215
    5. '(' → logprob: -5.2489752769470215
    6. '[length' → logprob: -5.8739752769470215
    7. 'floor' → logprob: -5.8739752769470215
    8. '[' → logprob: -6.1239752769470215
    9. 'ceil' → logprob: -6.3739752769470215
    10. '2' → logprob: -8.74897575378418

Token 74: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01550163235515356
    2. ',' → logprob: -4.265501499176025
    3. 'length' → logprob: -7.390501499176025
    4. ',length' → logprob: -7.640501499176025
    5. '),' → logprob: -8.890501976013184
    6. '()],' → logprob: -11.015501976013184
    7. '],[' → logprob: -11.265501976013184
    8. ' lengths' → logprob: -11.265501976013184
    9. ' ],' → logprob: -11.640501976013184
    10. ''],' → logprob: -12.015501976013184

Token 75: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.31357136368751526
    2. ' lengths' → logprob: -1.3135713338851929
    3. ' length' → logprob: -8.688570976257324
    4. '(length' → logprob: -9.438570976257324
    5. '[length' → logprob: -10.063570976257324
    6. '_lengths' → logprob: -11.938570976257324
    7. '	length' → logprob: -13.063570976257324
    8. '-length' → logprob: -13.438570976257324
    9. ',length' → logprob: -13.813570976257324
    10. ' lenght' → logprob: -13.938570976257324

Token 76: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.035513557493686676
    2. '))' → logprob: -3.6605136394500732
    3. ',' → logprob: -4.910513401031494
    4. '),' → logprob: -6.660513401031494
    5. ')))
' → logprob: -8.660513877868652
    6. '))))' → logprob: -9.285513877868652
    7. ' ' → logprob: -9.285513877868652
    8. '[:-' → logprob: -10.285513877868652
    9. ')));' → logprob: -10.285513877868652
    10. ' ))' → logprob: -11.035513877868652

Token 77: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0653212070465088
    2. 'n' → logprob: -1.5653212070465088
    3. 'i' → logprob: -2.065321207046509
    4. ')' → logprob: -3.440321207046509
    5. 'idx' → logprob: -3.440321207046509
    6. 'result' → logprob: -3.565321207046509
    7. '#' → logprob: -3.690321207046509
    8. 'def' → logprob: -3.815321207046509
    9. 'res' → logprob: -4.06532096862793
    10. 'max' → logprob: -4.31532096862793

Token 78: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.8446555733680725
    2. ' =' → logprob: -1.0946555137634277
    3. 'u' → logprob: -1.7196555137634277
    4. 'ults' → logprob: -3.4696555137634277
    5. '=' → logprob: -3.8446555137634277
    6. 'ul' → logprob: -6.469655513763428
    7. ' ' → logprob: -7.219655513763428
    8. 'ultat' → logprob: -7.969655513763428
    9. 'ULT' → logprob: -8.094655990600586
    10. 'olt' → logprob: -8.844655990600586

Token 79: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4899799823760986
    2. ' [' → logprob: -1.7399799823760986
    3. ' []' → logprob: -1.7399799823760986
    4. '[' → logprob: -1.9899799823760986
    5. ' max' → logprob: -2.6149799823760986
    6. '0' → logprob: -2.6149799823760986
    7. ' floor' → logprob: -3.7399799823760986
    8. 'max' → logprob: -3.9899799823760986
    9. 'floor' → logprob: -4.1149797439575195
    10. '[max' → logprob: -4.1149797439575195

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0506525039672852
    2. 'max' → logprob: -2.050652503967285
    3. 'part' → logprob: -2.175652503967285
    4. 'length' → logprob: -2.300652503967285
    5. 'floor' → logprob: -2.800652503967285
    6. 'ceil' → logprob: -3.425652503967285
    7. '1' → logprob: -3.800652503967285
    8. '(i' → logprob: -3.800652503967285
    9. '(part' → logprob: -3.925652503967285
    10. '(' → logprob: -4.050652503967285

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004151056986302137
    2. ',' → logprob: -6.129150867462158
    3. ')]' → logprob: -6.504150867462158
    4. ' ]' → logprob: -8.379151344299316
    5. ')' → logprob: -9.254151344299316
    6. ']*' → logprob: -10.004151344299316
    7. '])' → logprob: -10.254151344299316
    8. ' for' → logprob: -10.879151344299316
    9. 'for' → logprob: -11.629151344299316
    10. '])]' → logprob: -11.879151344299316

Token 82: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41853660345077515
    2. 'for' → logprob: -1.29353666305542
    3. ' for' → logprob: -3.16853666305542
    4. '\n' → logprob: -4.29353666305542
    5. '' → logprob: -5.66853666305542
    6. ' 
' → logprob: -6.04353666305542
    7. '\' → logprob: -6.16853666305542
    8. ',' → logprob: -7.16853666305542
    9. '
' → logprob: -7.29353666305542
    10. '[' → logprob: -7.29353666305542

Token 83: ' len' (ID: 4631)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4348512291908264
    2. 'len' → logprob: -1.0598511695861816
    3. '(' → logprob: -5.684851169586182
    4. ' len' → logprob: -6.809851169586182
    5. '(f' → logprob: -8.55985164642334
    6. 'ceil' → logprob: -8.68485164642334
    7. ' (' → logprob: -9.05985164642334
    8. '4' → logprob: -9.05985164642334
    9. '(n' → logprob: -9.18485164642334
    10. '(part' → logprob: -9.18485164642334

Token 84: '(S' (ID: 6181)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.18650659918785095
    2. '(S' → logprob: -2.561506509780884
    3. '(part' → logprob: -2.686506509780884
    4. 'length' → logprob: -5.061506748199463
    5. '(parts' → logprob: -5.061506748199463
    6. '(groups' → logprob: -5.061506748199463
    7. '(res' → logprob: -5.436506748199463
    8. 'res' → logprob: -7.811506748199463
    9. '(' → logprob: -7.936506748199463
    10. 'S' → logprob: -8.061506271362305

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. ')
' → logprob: -10.750033378601074
    3. ' )' → logprob: -12.000033378601074
    4. ')

' → logprob: -12.875033378601074
    5. ']' → logprob: -14.125033378601074
    6. ')`' → logprob: -15.125033378601074
    7. '`)' → logprob: -15.250033378601074
    8. '))' → logprob: -15.250033378601074
    9. ')]' → logprob: -15.375033378601074
    10. '[' → logprob: -15.625033378601074

Token 86: 'pairs' (ID: 175838)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010892652906477451
    2. ' for' → logprob: -5.010892868041992
    3. 'i' → logprob: -6.260892868041992
    4. 'prev' → logprob: -7.510892868041992
    5. 'n' → logprob: -7.885892868041992
    6. 'idx' → logprob: -8.385892868041992
    7. '
' → logprob: -8.635892868041992
    8. 'def' → logprob: -9.010892868041992
    9. 'offset' → logprob: -9.385892868041992
    10. 'cur' → logprob: -9.510892868041992

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0347864106297493
    2. '=' → logprob: -3.4097864627838135
    3. '(' → logprob: -6.909786224365234
    4. 's' → logprob: -10.284786224365234
    5. '=[]' → logprob: -10.409786224365234
    6. ',' → logprob: -10.534786224365234
    7. ' ' → logprob: -10.659786224365234
    8. '()' → logprob: -12.284786224365234
    9. ' (' → logprob: -12.284786224365234
    10. '_pairs' → logprob: -13.159786224365234

Token 88: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4971877336502075
    2. 'list' → logprob: -1.7471877336502075
    3. '[]' → logprob: -1.9971877336502075
    4. ' list' → logprob: -3.247187614440918
    5. ' [(' → logprob: -4.122187614440918
    6. ' []' → logprob: -4.747187614440918
    7. '[' → logprob: -5.497187614440918
    8. '[((' → logprob: -5.747187614440918
    9. '[list' → logprob: -6.622187614440918
    10. 'zip' → logprob: -6.872187614440918

Token 89: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.10900291800498962
    2. '(en' → logprob: -2.4840028285980225
    3. '(com' → logprob: -5.234003067016602
    4. '(filter' → logprob: -5.734003067016602
    5. '(chain' → logprob: -5.984003067016602
    6. '(group' → logprob: -6.109003067016602
    7. '(' → logprob: -6.109003067016602
    8. '(is' → logprob: -6.234003067016602
    9. '(pair' → logprob: -7.234003067016602
    10. '(p' → logprob: -7.734003067016602

Token 90: '(is' (ID: 16171)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.5329533219337463
    2. '(length' → logprob: -0.9079533219337463
    3. '(groups' → logprob: -5.407953262329102
    4. '(p' → logprob: -6.032953262329102
    5. '(parts' → logprob: -7.032953262329102
    6. 'length' → logprob: -7.157953262329102
    7. '(range' → logprob: -7.532953262329102
    8. '(' → logprob: -8.032953262329102
    9. '(group' → logprob: -8.782953262329102
    10. '(r' → logprob: -9.282953262329102

Token 91: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0012566609075292945
    2. 'slice' → logprob: -6.751256465911865
    3. 'ce' → logprob: -10.001256942749023
    4. '_slice' → logprob: -11.001256942749023
    5. 'lices' → logprob: -12.126256942749023
    6. 'ice' → logprob: -12.251256942749023
    7. 'le' → logprob: -12.751256942749023
    8. 'list' → logprob: -13.251256942749023
    9. '```' → logprob: -13.376256942749023
    10. 'lace' → logprob: -13.626256942749023

Token 92: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.17526763677597046
    2. '(length' → logprob: -1.9252676963806152
    3. '(p' → logprob: -4.425267696380615
    4. '(' → logprob: -6.675267696380615
    5. '(parts' → logprob: -6.800267696380615
    6. 'length' → logprob: -8.175267219543457
    7. '(groups' → logprob: -9.300267219543457
    8. ' (' → logprob: -9.925267219543457
    9. '(S' → logprob: -10.300267219543457
    10. '(res' → logprob: -10.550267219543457

Token 93: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.026200314983725548
    2. 's' → logprob: -3.776200294494629
    3. 'ions' → logprob: -6.651200294494629
    4. 'ations' → logprob: -7.401200294494629
    5. 'length' → logprob: -7.401200294494629
    6. 'utions' → logprob: -9.276200294494629
    7. 'entions' → logprob: -9.651200294494629
    8. 'ctions' → logprob: -10.526200294494629
    9. 'ections' → logprob: -10.526200294494629
    10. 't' → logprob: -10.901200294494629

Token 94: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13700750470161438
    2. ',' → logprob: -2.137007474899292
    3. '(len' → logprob: -5.512007713317871
    4. ' (' → logprob: -5.887007713317871
    5. ' ,' → logprob: -6.512007713317871
    6. '(None' → logprob: -6.762007713317871
    7. ',(' → logprob: -8.887007713317871
    8. '(-' → logprob: -9.137007713317871
    9. ',len' → logprob: -9.387007713317871
    10. '   ' → logprob: -9.637007713317871

Token 95: ' None' (ID: 4662)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9163035154342651
    2. '0' → logprob: -1.4163035154342651
    3. ' None' → logprob: -1.6663035154342651
    4. 'None' → logprob: -2.6663036346435547
    5. ' ' → logprob: -2.7913036346435547
    6. 'len' → logprob: -3.4163036346435547
    7. ' len' → logprob: -5.916303634643555
    8. '   ' → logprob: -7.666303634643555
    9. ' ' → logprob: -7.666303634643555
    10. '2' → logprob: -7.791303634643555

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036787090357393026
    2. ' ,' → logprob: -8.000368118286133
    3. '1' → logprob: -11.500368118286133
    4. ' ' → logprob: -11.500368118286133
    5. ',None' → logprob: -13.000368118286133
    6. '  ' → logprob: -13.125368118286133
    7. '   ' → logprob: -13.375368118286133
    8. ')' → logprob: -13.375368118286133
    9. ',-' → logprob: -13.750368118286133
    10. '),' → logprob: -13.750368118286133

Token 97: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011993973748758435
    2. ' -' → logprob: -6.876199245452881
    3. 'None' → logprob: -8.876199722290039
    4. ' None' → logprob: -11.251199722290039
    5. ' ' → logprob: -12.001199722290039
    6. '   ' → logprob: -12.751199722290039
    7. '  ' → logprob: -13.251199722290039
    8. '1' → logprob: -14.126199722290039
    9. ',None' → logprob: -14.251199722290039
    10. 'len' → logprob: -14.376199722290039

Token 98: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005268384236842394
    2. '2' → logprob: -5.255268573760986
    3. ' ' → logprob: -10.380268096923828
    4. '  ' → logprob: -13.880268096923828
    5. '   ' → logprob: -14.255268096923828
    6. '
' → logprob: -14.380268096923828
    7. '```' → logprob: -14.505268096923828
    8. '１' → logprob: -15.630268096923828
    9. '-' → logprob: -15.692768096923828
    10. '

' → logprob: -16.130268096923828

Token 99: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000647029432002455
    2. '),' → logprob: -7.875647068023682
    3. ' ,' → logprob: -8.500646591186523
    4. ',p' → logprob: -10.000646591186523
    5. ',is' → logprob: -12.750646591186523
    6. 'pairs' → logprob: -13.125646591186523
    7. ',),' → logprob: -13.125646591186523
    8. ' pairs' → logprob: -13.625646591186523
    9. ',None' → logprob: -13.750646591186523
    10. ',length' → logprob: -13.875646591186523

Token 100: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04334661737084389
    2. ' is' → logprob: -3.168346643447876
    3. ' ' → logprob: -8.543346405029297
    4. ' partitions' → logprob: -10.168346405029297
    5. '    ' → logprob: -10.293346405029297
    6. '   ' → logprob: -10.418346405029297
    7. '  ' → logprob: -10.668346405029297
    8. '	is' → logprob: -11.543346405029297
    9. 'part' → logprob: -12.293346405029297
    10. '
' → logprob: -14.043346405029297

Token 101: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0008064138819463551
    2. 'ice' → logprob: -7.6258063316345215
    3. 'ce' → logprob: -8.50080680847168
    4. 'slice' → logprob: -9.37580680847168
    5. 's' → logprob: -11.50080680847168
    6. 'lices' → logprob: -11.50080680847168
    7. 'ise' → logprob: -12.75080680847168
    8. 'is' → logprob: -13.50080680847168
    9. '(' → logprob: -13.50080680847168
    10. 'list' → logprob: -13.62580680847168

Token 102: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.0067534977570176125
    2. 'part' → logprob: -5.006753444671631
    3. ' partitions' → logprob: -10.881753921508789
    4. ' (' → logprob: -11.631753921508789
    5. ' part' → logprob: -12.506753921508789
    6. '(p' → logprob: -12.881753921508789
    7. 'partition' → logprob: -13.881753921508789
    8. '	part' → logprob: -14.131753921508789
    9. ' ' → logprob: -14.256753921508789
    10. '(parts' → logprob: -14.756753921508789

Token 103: 'itions' (ID: 5500)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.025392668321728706
    2. 'part' → logprob: -3.900392770767212
    3. 'itions' → logprob: -5.525392532348633
    4. '(part' → logprob: -7.275392532348633
    5. 'arts' → logprob: -9.525392532348633
    6. 'ort' → logprob: -9.900392532348633
    7. 'utations' → logprob: -11.900392532348633
    8. 'utions' → logprob: -12.025392532348633
    9. 's' → logprob: -12.900392532348633
    10. 'par' → logprob: -13.025392532348633

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008644821122288704
    2. '(' → logprob: -5.258645057678223
    3. ' ,' → logprob: -6.633645057678223
    4. '(),' → logprob: -7.258645057678223
    5. '(None' → logprob: -7.383645057678223
    6. ',None' → logprob: -8.008645057678223
    7. '1' → logprob: -9.008645057678223
    8. '2' → logprob: -9.008645057678223
    9. 'None' → logprob: -9.133645057678223
    10. 's' → logprob: -10.633645057678223

Token 105: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07720095664262772
    2. '1' → logprob: -2.9522008895874023
    3. ' ' → logprob: -3.8272008895874023
    4. 'None' → logprob: -8.702200889587402
    5. '   ' → logprob: -9.952200889587402
    6. '  ' → logprob: -10.702200889587402
    7. ' None' → logprob: -10.827200889587402
    8. '    ' → logprob: -11.514700889587402
    9. '3' → logprob: -12.077200889587402
    10. '```' → logprob: -12.452200889587402

Token 106: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023811493068933487
    2. '1' → logprob: -3.7738115787506104
    3. 'None' → logprob: -7.773811340332031
    4. ' ' → logprob: -9.523811340332031
    5. '   ' → logprob: -10.398811340332031
    6. '  ' → logprob: -11.773811340332031
    7. '```' → logprob: -11.898811340332031
    8. '    ' → logprob: -12.023811340332031
    9. '-' → logprob: -12.398811340332031
    10. '3' → logprob: -12.898811340332031

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03489290177822113
    2. ',None' → logprob: -3.4098927974700928
    3. 'None' → logprob: -6.784893035888672
    4. '(None' → logprob: -9.534893035888672
    5. '(),' → logprob: -10.784893035888672
    6. ' ,' → logprob: -12.034893035888672
    7. '),' → logprob: -12.659893035888672
    8. ',
' → logprob: -12.909893035888672
    9. ',

' → logprob: -13.534893035888672
    10. ',nil' → logprob: -13.784893035888672

Token 108: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20540322363376617
    2. ' None' → logprob: -1.705403208732605
    3. ' ' → logprob: -5.7054033279418945
    4. ',None' → logprob: -7.9554033279418945
    5. '  ' → logprob: -8.455403327941895
    6. '   ' → logprob: -9.580403327941895
    7. ',' → logprob: -11.955403327941895
    8. '_None' → logprob: -12.205403327941895
    9. '(None' → logprob: -12.580403327941895
    10. '    ' → logprob: -12.705403327941895

Token 109: '),' (ID: 936)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00276410230435431
    2. '))' → logprob: -6.1277642250061035
    3. ',' → logprob: -8.377763748168945
    4. ')))
' → logprob: -8.502763748168945
    5. '),' → logprob: -9.627763748168945
    6. ')' → logprob: -10.877763748168945
    7. ')));' → logprob: -10.877763748168945
    8. ')))

' → logprob: -11.127763748168945
    9. ' ' → logprob: -11.627763748168945
    10. '2' → logprob: -12.002763748168945

Token 110: ' is' (ID: 382)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5545452833175659
    2. 'is' → logprob: -1.304545283317566
    3. ' lengths' → logprob: -2.5545454025268555
    4. ' is' → logprob: -3.0545454025268555
    5. 'pairs' → logprob: -4.9295454025268555
    6. ' pairs' → logprob: -4.9295454025268555
    7. 'part' → logprob: -5.1795454025268555
    8. ' length' → logprob: -5.6795454025268555
    9. ' partitions' → logprob: -6.4295454025268555
    10. 'range' → logprob: -7.1795454025268555

Token 111: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00043496055877767503
    2. 'slice' → logprob: -8.750434875488281
    3. 'ice' → logprob: -9.250434875488281
    4. 'lices' → logprob: -9.500434875488281
    5. 'ce' → logprob: -10.000434875488281
    6. 'lace' → logprob: -11.125434875488281
    7. '(slice' → logprob: -11.250434875488281
    8. 'dex' → logprob: -12.000434875488281
    9. 'length' → logprob: -12.375434875488281
    10. 'ize' → logprob: -12.625434875488281

Token 112: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.0029031820595264435
    2. 'part' → logprob: -6.002902984619141
    3. ' (' → logprob: -8.50290298461914
    4. '(' → logprob: -9.50290298461914
    5. '(p' → logprob: -9.50290298461914
    6. ' partitions' → logprob: -10.12790298461914
    7. ' part' → logprob: -11.62790298461914
    8. '(parts' → logprob: -12.12790298461914
    9. ' partit' → logprob: -12.50290298461914
    10. ' ' → logprob: -12.62790298461914

Token 113: 'itions' (ID: 5500)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.4061671197414398
    2. 'itions' → logprob: -1.7811671495437622
    3. '(part' → logprob: -2.0311670303344727
    4. 'part' → logprob: -3.5311670303344727
    5. 'it' → logprob: -6.531167030334473
    6. '(p' → logprob: -6.906167030334473
    7. '(' → logprob: -7.656167030334473
    8. '_part' → logprob: -8.031167030334473
    9. 'ort' → logprob: -8.156167030334473
    10. 'par' → logprob: -8.656167030334473

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006474252324551344
    2. '2' → logprob: -5.756474018096924
    3. '(' → logprob: -6.256474018096924
    4. ' ,' → logprob: -7.006474018096924
    5. '(None' → logprob: -8.256474494934082
    6. 'None' → logprob: -9.256474494934082
    7. ',None' → logprob: -10.256474494934082
    8. '(),' → logprob: -10.631474494934082
    9. '1' → logprob: -11.006474494934082
    10. 's' → logprob: -11.756474494934082

Token 115: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2394600212574005
    2. '2' → logprob: -1.6144599914550781
    3. ' None' → logprob: -4.614459991455078
    4. ' ' → logprob: -5.989459991455078
    5. '   ' → logprob: -6.989459991455078
    6. '  ' → logprob: -8.489459991455078
    7. ',None' → logprob: -8.864459991455078
    8. ',' → logprob: -9.614459991455078
    9. '```' → logprob: -9.989459991455078
    10. '1' → logprob: -10.364459991455078

Token 116: '2' (ID: 17)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3532387316226959
    2. '2' → logprob: -1.2282387018203735
    3. ' ' → logprob: -6.228238582611084
    4. ' None' → logprob: -6.353238582611084
    5. '   ' → logprob: -7.603238582611084
    6. '  ' → logprob: -8.478239059448242
    7. '3' → logprob: -8.603239059448242
    8. '    ' → logprob: -9.728239059448242
    9. '      ' → logprob: -11.228239059448242
    10. '```' → logprob: -11.228239059448242

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1696116030216217
    2. '))' → logprob: -2.169611692428589
    3. ',None' → logprob: -3.544611692428589
    4. '(None' → logprob: -4.91961145401001
    5. 'None' → logprob: -5.29461145401001
    6. '))
' → logprob: -8.669611930847168
    7. ')))' → logprob: -8.669611930847168
    8. '()))' → logprob: -8.919611930847168
    9. '(' → logprob: -10.419611930847168
    10. ' None' → logprob: -11.669611930847168

Token 118: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0036234736908227205
    2. ' None' → logprob: -5.6286234855651855
    3. ' ' → logprob: -11.128623008728027
    4. '  ' → logprob: -12.253623008728027
    5. '   ' → logprob: -13.628623008728027
    6. '```' → logprob: -14.253623008728027
    7. ',None' → logprob: -14.378623008728027
    8. '=None' → logprob: -14.503623008728027
    9. '_None' → logprob: -15.003623008728027
    10. '(None' → logprob: -15.253623008728027

Token 119: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -2.9875325708417222e-05
    2. '))
' → logprob: -11.125029563903809
    3. ')))' → logprob: -11.875029563903809
    4. ')' → logprob: -12.500029563903809
    5. ')):' → logprob: -13.000029563903809
    6. ' ))' → logprob: -13.875029563903809
    7. ',' → logprob: -14.500029563903809
    8. ' ' → logprob: -15.875029563903809
    9. '()))' → logprob: -16.125030517578125
    10. '),' → logprob: -16.500030517578125

Token 120: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2132413536310196
    2. ' for' → logprob: -1.8382413387298584
    3. ':' → logprob: -3.5882413387298584
    4. '<|end|>' → logprob: -6.0882415771484375
    5. ':
' → logprob: -6.5882415771484375
    6. ')' → logprob: -7.2132415771484375
    7. '
' → logprob: -7.5882415771484375
    8. ' ' → logprob: -9.338241577148438
    9. '[' → logprob: -9.713241577148438
    10. ',' → logprob: -9.838241577148438

Token 121: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3424438536167145
    2. ' k' → logprob: -1.717443823814392
    3. ' idx' → logprob: -3.4674439430236816
    4. ' (' → logprob: -4.217443943023682
    5. ' start' → logprob: -4.592443943023682
    6. 'i' → logprob: -4.592443943023682
    7. ' pair' → logprob: -4.967443943023682
    8. 'k' → logprob: -4.967443943023682
    9. ' g' → logprob: -5.592443943023682
    10. '(k' → logprob: -5.717443943023682

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007456130348145962
    2. ' ,' → logprob: -5.507456302642822
    3. ' in' → logprob: -5.757456302642822
    4. 'in' → logprob: -9.132455825805664
    5. ',value' → logprob: -10.132455825805664
    6. ',(' → logprob: -11.882455825805664
    7. ',k' → logprob: -12.007455825805664
    8. '‌,' → logprob: -12.132455825805664
    9. ' ' → logprob: -12.382455825805664
    10. ',p' → logprob: -12.507455825805664

Token 123: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.34065958857536316
    2. '(p' → logprob: -1.8406596183776855
    3. '(pair' → logprob: -2.7156596183776855
    4. '(' → logprob: -3.9656596183776855
    5. '((' → logprob: -4.7156596183776855
    6. '(part' → logprob: -5.2156596183776855
    7. '(g' → logprob: -5.4656596183776855
    8. '(group' → logprob: -5.5906596183776855
    9. ' (' → logprob: -5.8406596183776855
    10. '(_,' → logprob: -5.9656596183776855

Token 124: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1066957712173462
    2. 'start' → logprob: -1.3566957712173462
    3. 'left' → logprob: -2.1066956520080566
    4. 'a' → logprob: -2.3566956520080566
    5. 'i' → logprob: -2.4816956520080566
    6. 'prev' → logprob: -3.7316956520080566
    7. 'p' → logprob: -4.231695652008057
    8. 'L' → logprob: -4.481695652008057
    9. 'b' → logprob: -4.606695652008057
    10. 'lo' → logprob: -4.981695652008057

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013752338709309697
    2. ' ,' → logprob: -7.001375198364258
    3. '_idx' → logprob: -9.001375198364258
    4. '_,' → logprob: -9.251375198364258
    5. '_pairs' → logprob: -9.626375198364258
    6. ',_' → logprob: -9.876375198364258
    7. 'ex' → logprob: -10.376375198364258
    8. 's' → logprob: -11.126375198364258
    9. '_start' → logprob: -11.626375198364258
    10. ',start' → logprob: -11.876375198364258

Token 126: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06021065264940262
    2. 'r' → logprob: -3.810210704803467
    3. 'mid' → logprob: -3.810210704803467
    4. 'c' → logprob: -5.060210704803467
    5. ' m' → logprob: -6.060210704803467
    6. '_,' → logprob: -6.810210704803467
    7. 'p' → logprob: -7.310210704803467
    8. '_m' → logprob: -7.685210704803467
    9. 's' → logprob: -8.185210227966309
    10. 'i' → logprob: -8.185210227966309

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',r' → logprob: -14.625015258789062
    4. ',n' → logprob: -14.875015258789062
    5. 'r' → logprob: -15.875015258789062
    6. ')' → logprob: -16.125015258789062
    7. 'a' → logprob: -16.500015258789062
    8. 's' → logprob: -16.500015258789062
    9. 'c' → logprob: -16.750015258789062
    10. 'n' → logprob: -16.750015258789062

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00645470479503274
    2. ' r' → logprob: -5.1314544677734375
    3. 'u' → logprob: -8.131454467773438
    4. 'h' → logprob: -9.006454467773438
    5. 'n' → logprob: -9.506454467773438
    6. ')' → logprob: -10.506454467773438
    7. ' u' → logprob: -13.006454467773438
    8. ' h' → logprob: -13.756454467773438
    9. ' n' → logprob: -13.756454467773438
    10. 's' → logprob: -14.506454467773438

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -12.875003814697266
    3. 'in' → logprob: -14.875003814697266
    4. ' in' → logprob: -15.125003814697266
    5. ')
' → logprob: -16.500003814697266
    6. '))' → logprob: -16.500003814697266
    7. '_)' → logprob: -16.750003814697266
    8. '):' → logprob: -17.375003814697266
    9. '),' → logprob: -17.500003814697266
    10. 's' → logprob: -17.500003814697266

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02981286123394966
    2. 'in' → logprob: -3.529812812805176
    3. ',' → logprob: -10.779812812805176
    4. ')' → logprob: -11.279812812805176
    5. 's' → logprob: -11.404812812805176
    6. '<|end|>' → logprob: -11.779812812805176
    7. ' ' → logprob: -12.529812812805176
    8. 'enumer' → logprob: -13.779812812805176
    9. ':' → logprob: -14.029812812805176
    10. '	in' → logprob: -14.154812812805176

Token 131: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0043251956813037395
    2. ' pairs' → logprob: -5.8793253898620605
    3. 'enumer' → logprob: -6.5043253898620605
    4. 'pairs' → logprob: -10.754324913024902
    5. ' ipairs' → logprob: -15.129324913024902
    6. '```' → logprob: -15.504324913024902
    7. ' enumer' → logprob: -15.754324913024902
    8. ' en' → logprob: -16.25432586669922
    9. '(en' → logprob: -16.50432586669922
    10. '_pairs' → logprob: -17.12932586669922

Token 132: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.01728001795709133
    2. ' pairs' → logprob: -4.767280101776123
    3. 'pairs' → logprob: -4.767280101776123
    4. ' (' → logprob: -9.892279624938965
    5. '(' → logprob: -10.142279624938965
    6. ')' → logprob: -11.142279624938965
    7. ' p' → logprob: -12.142279624938965
    8. 'p' → logprob: -12.517279624938965
    9. '_pairs' → logprob: -12.642279624938965
    10. 'Pairs' → logprob: -13.267279624938965

Token 133: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0013377433642745018
    2. 'pairs' → logprob: -6.75133752822876
    3. 'air' → logprob: -9.251338005065918
    4. 'art' → logprob: -10.376338005065918
    5. 'arts' → logprob: -10.876338005065918
    6. ')' → logprob: -11.751338005065918
    7. 'a' → logprob: -12.876338005065918
    8. 'irs' → logprob: -13.876338005065918
    9. '_pairs' → logprob: -13.876338005065918
    10. 'r' → logprob: -13.876338005065918

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034237600630149245
    2. ':' → logprob: -8.25034236907959
    3. '):
' → logprob: -9.87534236907959
    4. ')' → logprob: -10.75034236907959
    5. ' ):' → logprob: -11.87534236907959
    6. ',' → logprob: -14.50034236907959
    7. '   ' → logprob: -16.000343322753906
    8. ']:' → logprob: -16.125343322753906
    9. ':)' → logprob: -16.250343322753906
    10. '():' → logprob: -16.375343322753906

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030921781435608864
    2. ' ' → logprob: -4.030921936035156
    3. ' res' → logprob: -5.155921936035156
    4. '<|end|>' → logprob: -6.030921936035156
    5. '    ' → logprob: -6.655921936035156
    6. '    
' → logprob: -6.780921936035156
    7. ' 
' → logprob: -7.530921936035156
    8. '       ' → logprob: -7.655921936035156
    9. '
' → logprob: -8.530921936035156
    10. '  ' → logprob: -8.530921936035156

Token 136: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19798246026039124
    2. ' if' → logprob: -2.9479825496673584
    3. '   ' → logprob: -3.4479825496673584
    4. 'count' → logprob: -3.8229825496673584
    5. 'for' → logprob: -4.447982311248779
    6. 'res' → logprob: -4.822982311248779
    7. 'left' → logprob: -5.072982311248779
    8. 'x' → logprob: -5.197982311248779
    9. 'c' → logprob: -5.322982311248779
    10. 'length' → logprob: -5.322982311248779

Token 137: ' idx' (ID: 14016)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.28808704018592834
    2. ' groups' → logprob: -1.913087010383606
    3. 'l' → logprob: -3.2880871295928955
    4. 'length' → logprob: -3.9130871295928955
    5. ' lengths' → logprob: -4.538086891174316
    6. 'S' → logprob: -4.663086891174316
    7. 'idx' → logprob: -5.163086891174316
    8. 'm' → logprob: -5.538086891174316
    9. ' l' → logprob: -5.788086891174316
    10. 'res' → logprob: -6.038086891174316

Token 138: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08282974362373352
    2. '==' → logprob: -3.082829713821411
    3. ' <' → logprob: -4.45782995223999
    4. ' >' → logprob: -4.95782995223999
    5. ' ' → logprob: -5.45782995223999
    6. '+' → logprob: -5.58282995223999
    7. ' !=' → logprob: -6.20782995223999
    8. ' +' → logprob: -6.70782995223999
    9. ' <=' → logprob: -6.70782995223999
    10. ' >=' → logprob: -6.83282995223999

Token 139: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0035280867014080286
    2. ' ' → logprob: -6.128528118133545
    3. '3' → logprob: -6.628528118133545
    4. '4' → logprob: -11.503527641296387
    5. '   ' → logprob: -13.628527641296387
    6. '  ' → logprob: -13.628527641296387
    7. '```' → logprob: -13.753527641296387
    8. ')' → logprob: -14.503527641296387
    9. '20' → logprob: -14.753527641296387
    10. '1' → logprob: -14.753527641296387

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017932282062247396
    2. '3' → logprob: -6.376793384552002
    3. ' ' → logprob: -9.751792907714844
    4. '4' → logprob: -11.001792907714844
    5. '1' → logprob: -12.376792907714844
    6. '```' → logprob: -13.376792907714844
    7. ')' → logprob: -13.876792907714844
    8. '   ' → logprob: -14.126792907714844
    9. '  ' → logprob: -14.501792907714844
    10. '5' → logprob: -14.626792907714844

Token 141: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10035590827465057
    2. ' ==' → logprob: -2.350355863571167
    3. ':' → logprob: -9.725356101989746
    4. '=' → logprob: -10.475356101989746
    5. '!=' → logprob: -10.725356101989746
    6. '0' → logprob: -11.600356101989746
    7. ' !=' → logprob: -11.725356101989746
    8. '==
' → logprob: -11.725356101989746
    9. ')==' → logprob: -12.350356101989746
    10. ')' → logprob: -13.350356101989746

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03551367297768593
    2. '1' → logprob: -3.5355136394500732
    3. ' ' → logprob: -5.160513877868652
    4. '2' → logprob: -12.910513877868652
    5. '```' → logprob: -14.285513877868652
    6. '   ' → logprob: -14.535513877868652
    7. 's' → logprob: -14.785513877868652
    8. '  ' → logprob: -14.848013877868652
    9. '۰' → logprob: -14.910513877868652
    10. '01' → logprob: -14.910513877868652

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007719844579696655
    2. '1' → logprob: -4.882719993591309
    3. '2' → logprob: -9.382719993591309
    4. ' ' → logprob: -10.507719993591309
    5. '```' → logprob: -13.945219993591309
    6. '۰' → logprob: -15.695219993591309
    7. ')' → logprob: -16.070219039916992
    8. '   ' → logprob: -16.695219039916992
    9. '...' → logprob: -16.820219039916992
    10. '01' → logprob: -16.882719039916992

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012929851189255714
    2. ':
' → logprob: -4.387929916381836
    3. ' and' → logprob: -7.887929916381836
    4. '       ' → logprob: -10.762929916381836
    5. '   ' → logprob: -11.762929916381836
    6. ',' → logprob: -12.262929916381836
    7. 'and' → logprob: -12.887929916381836
    8. ' :' → logprob: -12.887929916381836
    9. ':

' → logprob: -13.137929916381836
    10. '):' → logprob: -13.637929916381836

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1322057843208313
    2. ':' → logprob: -2.1322057247161865
    3. ' res' → logprob: -6.382205963134766
    4. 'res' → logprob: -6.507205963134766
    5. ':
' → logprob: -7.257205963134766
    6. ' :' → logprob: -7.507205963134766
    7. '   ' → logprob: -8.882205963134766
    8. '[' → logprob: -9.382205963134766
    9. ',' → logprob: -9.757205963134766
    10. '<|end|>' → logprob: -9.757205963134766

Token 146: ' continue' (ID: 4901)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2682301998138428
    2. 'left' → logprob: -1.7682301998138428
    3. 'x' → logprob: -2.3932301998138428
    4. 'half' → logprob: -2.3932301998138428
    5. 'cnt' → logprob: -2.8932301998138428
    6. '   ' → logprob: -2.8932301998138428
    7. 'a' → logprob: -3.0182301998138428
    8. 'l' → logprob: -3.2682301998138428
    9. 'count' → logprob: -3.3932301998138428
    10. 'if' → logprob: -3.6432301998138428

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0675385519862175
    2. '
' → logprob: -3.3175384998321533
    3. '    
' → logprob: -4.317538738250732
    4. 'res' → logprob: -4.817538738250732
    5. ' res' → logprob: -5.692538738250732
    6. '<|end|>' → logprob: -7.067538738250732
    7. '  ' → logprob: -7.442538738250732
    8. '       ' → logprob: -7.567538738250732
    9. '  
' → logprob: -7.692538738250732
    10. '   
' → logprob: -8.192538261413574

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10262367874383926
    2. '    
' → logprob: -3.102623701095581
    3. 'res' → logprob: -3.727623701095581
    4. ' res' → logprob: -4.102623462677002
    5. '
' → logprob: -4.852623462677002
    6. '   
' → logprob: -6.977623462677002
    7. '  ' → logprob: -7.227623462677002
    8. '  
' → logprob: -7.727623462677002
    9. '    ' → logprob: -7.727623462677002
    10. ' 
' → logprob: -8.22762393951416

Token 149: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -1.3777161836624146
    2. 'l' → logprob: -1.6277161836624146
    3. 'if' → logprob: -1.8777161836624146
    4. 'count' → logprob: -3.127716064453125
    5. 'cnt' → logprob: -3.127716064453125
    6. 'mid' → logprob: -3.252716064453125
    7. 'x' → logprob: -3.627716064453125
    8. '   ' → logprob: -3.627716064453125
    9. 'm' → logprob: -3.752716064453125
    10. 'a' → logprob: -3.877716064453125

Token 150: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4162711203098297
    2. '_len' → logprob: -1.4162710905075073
    3. '_cnt' → logprob: -3.666271209716797
    4. '_size' → logprob: -4.416271209716797
    5. ',' → logprob: -4.916271209716797
    6. '_length' → logprob: -5.041271209716797
    7. ' =' → logprob: -5.166271209716797
    8. '_' → logprob: -5.416271209716797
    9. '_block' → logprob: -5.416271209716797
    10. 'count' → logprob: -5.541271209716797

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16334496438503265
    2. '=' → logprob: -1.9133449792861938
    3. ',' → logprob: -5.788344860076904
    4. ' ' → logprob: -11.538345336914062
    5. ' ,' → logprob: -11.913345336914062
    6. '   ' → logprob: -12.038345336914062
    7. ' +=' → logprob: -12.538345336914062
    8. '=len' → logprob: -12.538345336914062
    9. '=count' → logprob: -13.163345336914062
    10. 's' → logprob: -13.225845336914062

Token 152: ' m' (ID: 284)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.7414488792419434
    2. 'm' → logprob: -0.9914488792419434
    3. 'length' → logprob: -2.2414488792419434
    4. ' partitions' → logprob: -3.7414488792419434
    5. ' m' → logprob: -4.366448879241943
    6. 'groups' → logprob: -5.866448879241943
    7. 'partition' → logprob: -6.116448879241943
    8. ' lengths' → logprob: -6.616448879241943
    9. ' part' → logprob: -7.491448879241943
    10. '(part' → logprob: -7.741448879241943

Token 153: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43082982301712036
    2. '-' → logprob: -1.0558297634124756
    3. '-l' → logprob: -6.180830001831055
    4. '[' → logprob: -10.555830001831055
    5. ' ' → logprob: -12.305830001831055
    6. ')' → logprob: -12.555830001831055
    7. '+' → logprob: -12.680830001831055
    8. '   ' → logprob: -12.930830001831055
    9. '-left' → logprob: -13.055830001831055
    10. '
' → logprob: -13.493330001831055

Token 154: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.8444881536415778e-05
    2. ' l' → logprob: -10.500028610229492
    3. 'floor' → logprob: -14.500028610229492
    4. '1' → logprob: -16.250028610229492
    5. '   ' → logprob: -16.625028610229492
    6. 'm' → logprob: -17.125028610229492
    7. '  ' → logprob: -17.625028610229492
    8. 'loor' → logprob: -17.625028610229492
    9. '	l' → logprob: -17.625028610229492
    10. '    ' → logprob: -17.875028610229492

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024640312418341637
    2. '<|end|>' → logprob: -4.399640083312988
    3. 'right' → logprob: -5.274640083312988
    4. 'res' → logprob: -5.774640083312988
    5. '+' → logprob: -6.274640083312988
    6. '<|end|>' → logprob: -7.024640083312988
    7. ' 
' → logprob: -8.899640083312988
    8. 'left' → logprob: -9.149640083312988
    9. ' right' → logprob: -9.399640083312988
    10. '
' → logprob: -9.524640083312988

Token 156: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016154488548636436
    2. ' right' → logprob: -4.8911542892456055
    3. '
' → logprob: -5.2661542892456055
    4. '   ' → logprob: -6.3911542892456055
    5. 'middle' → logprob: -8.266154289245605
    6. '+' → logprob: -8.516154289245605
    7. '<|end|>' → logprob: -8.891154289245605
    8. 'mid' → logprob: -9.016154289245605
    9. '	right' → logprob: -9.266154289245605
    10. '[right' → logprob: -9.391154289245605

Token 157: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.001408805139362812
    2. ' right' → logprob: -6.626408576965332
    3. 'mid' → logprob: -9.751408576965332
    4. 'r' → logprob: -12.001408576965332
    5. 'middle' → logprob: -12.251408576965332
    6. '   ' → logprob: -13.251408576965332
    7. 'next' → logprob: -13.376408576965332
    8. '	right' → logprob: -13.376408576965332
    9. 'center' → logprob: -13.751408576965332
    10. 'left' → logprob: -13.876408576965332

Token 158: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0015425959136337042
    2. '=' → logprob: -7.001542568206787
    3. ' =' → logprob: -7.751542568206787
    4. '_' → logprob: -10.126543045043945
    5. 'count' → logprob: -10.126543045043945
    6. 'r' → logprob: -11.001543045043945
    7. '>' → logprob: -11.251543045043945
    8. '```' → logprob: -11.501543045043945
    9. ' _' → logprob: -11.626543045043945
    10. '_r' → logprob: -11.751543045043945

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ')' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '>' → logprob: -16.076414108276367
    6. ',' → logprob: -18.201414108276367
    7. '<' → logprob: -18.326414108276367
    8. ' >' → logprob: -18.576414108276367
    9. ' ==' → logprob: -19.013914108276367
    10. ' ' → logprob: -19.326414108276367

Token 160: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20143039524555206
    2. ' r' → logprob: -1.7014304399490356
    3. '   ' → logprob: -12.076430320739746
    4. '    ' → logprob: -12.326430320739746
    5. ' ' → logprob: -12.701430320739746
    6. '	r' → logprob: -13.326430320739746
    7. '  ' → logprob: -13.576430320739746
    8. '2' → logprob: -15.451430320739746
    9. 'n' → logprob: -15.701430320739746
    10. '`' → logprob: -16.201431274414062

Token 161: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141908526420593
    2. '-' → logprob: -1.7014191150665283
    3. ' ' → logprob: -12.20141887664795
    4. '-m' → logprob: -14.70141887664795
    5. '`' → logprob: -16.326419830322266
    6. ' ' → logprob: -16.576419830322266
    7. 'm' → logprob: -16.826419830322266
    8. '```' → logprob: -17.451419830322266
    9. '[' → logprob: -17.826419830322266
    10. '   ' → logprob: -18.451419830322266

Token 162: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015059324214234948
    2. ' m' → logprob: -6.5015058517456055
    3. '	m' → logprob: -13.751505851745605
    4. '1' → logprob: -14.626505851745605
    5. ' ' → logprob: -15.001505851745605
    6. '<|end|>' → logprob: -15.126505851745605
    7. 'M' → logprob: -15.251505851745605
    8. '   ' → logprob: -15.751505851745605
    9. 'user' → logprob: -15.751505851745605
    10. '<|end|>' → logprob: -16.126506805419922

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21036477386951447
    2. '   ' → logprob: -2.460364818572998
    3. 'res' → logprob: -2.585364818572998
    4. 'if' → logprob: -4.460364818572998
    5. '    
' → logprob: -4.460364818572998
    6. ' if' → logprob: -6.460364818572998
    7. ' res' → logprob: -6.710364818572998
    8. 'count' → logprob: -7.710364818572998
    9. '<|end|>' → logprob: -7.960364818572998
    10. ' 
' → logprob: -8.58536434173584

Token 164: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7406691312789917
    2. 'if' → logprob: -1.1156691312789917
    3. 'count' → logprob: -2.9906692504882812
    4. '   ' → logprob: -3.2406692504882812
    5. 'space' → logprob: -4.115669250488281
    6. 'split' → logprob: -4.490669250488281
    7. 'cnt' → logprob: -4.740669250488281
    8. 'c' → logprob: -4.740669250488281
    9. ' if' → logprob: -4.990669250488281
    10. 'diff' → logprob: -5.115669250488281

Token 165: ' res' (ID: 694)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -1.116121530532837
    2. 'total' → logprob: -1.741121530532837
    3. 'if' → logprob: -1.991121530532837
    4. 'res' (adapté à ' res') → logprob: -2.241121530532837
    5. 'even' → logprob: -2.491121530532837
    6. 'min' → logprob: -3.241121530532837
    7. 'equal' → logprob: -3.741121530532837
    8. 'both' → logprob: -3.866121530532837
    9. 'left' → logprob: -4.241121292114258
    10. 'common' → logprob: -4.741121292114258

Token 166: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.1647031456232071
    2. '[left' → logprob: -2.539703130722046
    3. '[min' → logprob: -3.164703130722046
    4. '[l' → logprob: -3.789703130722046
    5. '[max' → logprob: -5.289703369140625
    6. '[' → logprob: -6.039703369140625
    7. '[right' → logprob: -8.539703369140625
    8. '[mid' → logprob: -9.039703369140625
    9. '[r' → logprob: -9.289703369140625
    10. 'left' → logprob: -10.039703369140625

Token 167: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05595191940665245
    2. ' -' → logprob: -2.9309518337249756
    3. ']' → logprob: -6.930952072143555
    4. ' ' → logprob: -10.180952072143555
    5. '1' → logprob: -11.555952072143555
    6. '   ' → logprob: -11.805952072143555
    7. ')' → logprob: -12.055952072143555
    8. ':' → logprob: -12.305952072143555
    9. '  ' → logprob: -12.430952072143555
    10. ']-' → logprob: -13.055952072143555

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009479098953306675
    2. 'left' → logprob: -4.75947904586792
    3. '2' → logprob: -7.75947904586792
    4. ' ' → logprob: -8.259479522705078
    5. ' left' → logprob: -9.259479522705078
    6. 'right' → logprob: -10.384479522705078
    7. '   ' → logprob: -11.259479522705078
    8. 'min' → logprob: -11.759479522705078
    9. '(left' → logprob: -12.134479522705078
    10. '-' → logprob: -12.884479522705078

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040595315396785736
    2. ']+=' → logprob: -3.790595293045044
    3. ']=' → logprob: -4.415595531463623
    4. ']+' → logprob: -6.540595531463623
    5. '],' → logprob: -7.040595531463623
    6. ' ]' → logprob: -7.540595531463623
    7. ':' → logprob: -7.540595531463623
    8. ':]' → logprob: -7.665595531463623
    9. '-' → logprob: -8.165595054626465
    10. 'if' → logprob: -8.165595054626465

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4571658968925476
    2. ' =' → logprob: -1.8321659564971924
    3. '+=' → logprob: -1.8321659564971924
    4. ' +=' → logprob: -3.0821659564971924
    5. ',' → logprob: -7.207165718078613
    6. ' ' → logprob: -10.207165718078613
    7. ']+=' → logprob: -10.207165718078613
    8. ')' → logprob: -10.832165718078613
    9. '-=' → logprob: -11.082165718078613
    10. ' ,' → logprob: -11.457165718078613

Token 171: ' ceil' (ID: 35964)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.8029273748397827
    2. 'floor' → logprob: -1.9279273748397827
    3. 'left' → logprob: -2.1779274940490723
    4. '(' → logprob: -2.6779274940490723
    5. '(min' → logprob: -2.6779274940490723
    6. 'ceil' → logprob: -3.3029274940490723
    7. ''' → logprob: -3.5529274940490723
    8. '(f' → logprob: -3.8029274940490723
    9. '(str' → logprob: -4.052927494049072
    10. '(max' → logprob: -4.302927494049072

Token 172: '(left' (ID: 32958)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.021185416728258133
    2. '(left' → logprob: -3.8961853981018066
    3. '(' → logprob: -7.521185398101807
    4. '(right' → logprob: -10.271185874938965
    5. 'left' → logprob: -10.396185874938965
    6. '(((' → logprob: -11.021185874938965
    7. '(
' → logprob: -12.771185874938965
    8. '(min' → logprob: -12.896185874938965
    9. '(max' → logprob: -13.021185874938965
    10. ' ((' → logprob: -13.021185874938965

Token 173: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0006607305258512497
    2. 'count' → logprob: -7.5006608963012695
    3. 'left' → logprob: -10.12566089630127
    4. '(left' → logprob: -11.25066089630127
    5. '/' → logprob: -11.75066089630127
    6. ')' → logprob: -12.00066089630127
    7. '_left' → logprob: -12.25066089630127
    8. '   ' → logprob: -12.50066089630127
    9. 'Count' → logprob: -12.75066089630127
    10. ' /' → logprob: -12.75066089630127

Token 174: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5809988975524902
    2. ' /' → logprob: -0.8309988975524902
    3. ')' → logprob: -6.20599889755249
    4. '()/' → logprob: -6.83099889755249
    5. ')/' → logprob: -7.45599889755249
    6. '2' → logprob: -8.205999374389648
    7. '    ' → logprob: -8.330999374389648
    8. '   ' → logprob: -8.330999374389648
    9. '()' → logprob: -8.580999374389648
    10. ' ' → logprob: -9.705999374389648

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010187433508690447
    2. ' ' → logprob: -9.250102043151855
    3. '
' → logprob: -13.500102043151855
    4. '3' → logprob: -13.750102043151855
    5. '   ' → logprob: -14.125102043151855
    6. '  ' → logprob: -14.812602043151855
    7. '

' → logprob: -15.000102043151855
    8. '22' → logprob: -15.437602043151855
    9. ')' → logprob: -15.937602043151855
    10. '۲' → logprob: -16.00010108947754

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005479318089783192
    2. ')
' → logprob: -5.255479335784912
    3. ')+' → logprob: -8.755478858947754
    4. ')*' → logprob: -10.380478858947754
    5. ' )' → logprob: -10.505478858947754
    6. ')

' → logprob: -11.755478858947754
    7. ')
' → logprob: -11.880478858947754
    8. '+' → logprob: -12.880478858947754
    9. '),' → logprob: -13.380478858947754
    10. '<|end|>' → logprob: -13.380478858947754

Token 177: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.0845426470041275
    2. ' floor' → logprob: -2.584542751312256
    3. 'right' → logprob: -5.959542751312256
    4. '1' → logprob: -6.834542751312256
    5. ' right' → logprob: -6.834542751312256
    6. 'ceil' → logprob: -8.084542274475098
    7. 'f' → logprob: -9.084542274475098
    8. '0' → logprob: -9.209542274475098
    9. '   ' → logprob: -9.334542274475098
    10. 'left' → logprob: -9.459542274475098

Token 179: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.750016212463379
    3. 'right' → logprob: -12.000016212463379
    4. '(rhs' → logprob: -13.625016212463379
    5. '[right' → logprob: -15.000016212463379
    6. '(left' → logprob: -15.500016212463379
    7. '(r' → logprob: -15.625016212463379
    8. '((' → logprob: -15.750016212463379
    9. '	right' → logprob: -16.375017166137695
    10. ':right' → logprob: -16.500017166137695

Token 180: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0006525091012008488
    2. 'count' → logprob: -8.125652313232422
    3. 'right' → logprob: -8.875652313232422
    4. 'ight' → logprob: -9.000652313232422
    5. 'left' → logprob: -10.750652313232422
    6. 't' → logprob: -10.750652313232422
    7. 'ght' → logprob: -11.000652313232422
    8. 'ount' → logprob: -11.250652313232422
    9. '(right' → logprob: -12.750652313232422
    10. '_right' → logprob: -13.125652313232422

Token 181: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0011378349736332893
    2. ' /' → logprob: -6.876137733459473
    3. '(' → logprob: -9.501137733459473
    4. '()/' → logprob: -11.126137733459473
    5. ')' → logprob: -12.001137733459473
    6. ')/' → logprob: -12.126137733459473
    7. '2' → logprob: -14.001137733459473
    8. '```' → logprob: -14.501137733459473
    9. '   ' → logprob: -14.751137733459473
    10. '(/' → logprob: -14.751137733459473

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. ')' → logprob: -17.375009536743164
    4. '1' → logprob: -17.750009536743164
    5. '<|end|>' → logprob: -18.125009536743164
    6. '۲' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.250009536743164
    8. '3' → logprob: -19.750009536743164
    9. '```' → logprob: -20.312509536743164
    10. '  ' → logprob: -20.437509536743164

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019407729851081967
    2. ')
' → logprob: -6.251940727233887
    3. ' )' → logprob: -12.251940727233887
    4. '))' → logprob: -13.501940727233887
    5. ')}' → logprob: -14.001940727233887
    6. ')}}' → logprob: -14.001940727233887
    7. ')return' → logprob: -14.126940727233887
    8. ')+' → logprob: -14.376940727233887
    9. '   ' → logprob: -14.501940727233887
    10. ')*' → logprob: -15.001940727233887

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008054602658376098
    2. 'res' → logprob: -7.250805377960205
    3. 'print' → logprob: -10.750805854797363
    4. ' res' → logprob: -11.000805854797363
    5. '```' → logprob: -11.250805854797363
    6. '[' → logprob: -11.500805854797363
    7. '  ' → logprob: -11.750805854797363
    8. '<|end|>' → logprob: -12.000805854797363
    9. '    
' → logprob: -12.375805854797363
    10. '   ' → logprob: -12.500805854797363

Token 185: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933866143226624
    2. 'res' (adapté à ' res') → logprob: -0.6933866143226624
    3. '  ' → logprob: -8.693387031555176
    4. ' res' → logprob: -10.693387031555176
    5. '
' → logprob: -10.818387031555176
    6. '    
' → logprob: -11.318387031555176
    7. ' ' → logprob: -11.693387031555176
    8. '	res' → logprob: -13.568387031555176
    9. '    ' → logprob: -13.693387031555176
    10. 'r' → logprob: -14.068387031555176

Token 186: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -2.3080716346157715e-05
    2. 'm' → logprob: -10.875022888183594
    3. '[' → logprob: -13.375022888183594
    4. '[r' → logprob: -13.500022888183594
    5. '[l' → logprob: -14.875022888183594
    6. '(m' → logprob: -16.125022888183594
    7. '```' → logprob: -16.625022888183594
    8. '[n' → logprob: -17.000022888183594
    9. '][' → logprob: -17.000022888183594
    10. '   ' → logprob: -17.125022888183594

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43752288818359375
    2. '-' → logprob: -1.0625228881835938
    3. ']=' → logprob: -4.937522888183594
    4. '   ' → logprob: -7.687522888183594
    5. ' ]' → logprob: -8.062522888183594
    6. '[' → logprob: -8.437522888183594
    7. ' -' → logprob: -8.937522888183594
    8. '=' → logprob: -9.187522888183594
    9. 'm' → logprob: -9.312522888183594
    10. ']==' → logprob: -9.312522888183594

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.754077911376953
    4. '=}' → logprob: -16.879077911376953
    5. '=
' → logprob: -17.004077911376953
    6. '=

' → logprob: -17.254077911376953
    7. '＝' → logprob: -17.379077911376953
    8. '+=' → logprob: -17.379077911376953
    9. ')=' → logprob: -18.004077911376953
    10. '.=' → logprob: -18.004077911376953

Token 189: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.09800242632627487
    2. 'ceil' → logprob: -2.4730024337768555
    3. ' floor' → logprob: -4.9730024337768555
    4. 'left' → logprob: -6.5980024337768555
    5. ' ceil' → logprob: -7.4730024337768555
    6. ' ' → logprob: -10.098002433776855
    7. ' left' → logprob: -10.473002433776855
    8. '   ' → logprob: -10.723002433776855
    9. '  ' → logprob: -11.223002433776855
    10. 'f' → logprob: -11.473002433776855

Token 190: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.07068091630935669
    2. '(right' → logprob: -2.695680856704712
    3. 'left' → logprob: -7.445681095123291
    4. 'right' → logprob: -9.445680618286133
    5. '(' → logprob: -9.945680618286133
    6. '((' → logprob: -10.695680618286133
    7. ' left' → logprob: -12.945680618286133
    8. '   ' → logprob: -13.320680618286133
    9. ' (' → logprob: -13.695680618286133
    10. '	left' → logprob: -13.820680618286133

Token 191: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.005755526013672352
    2. 'right' → logprob: -6.005755424499512
    3. '(right' → logprob: -6.505755424499512
    4. 'left' → logprob: -6.880755424499512
    5. '(left' → logprob: -7.630755424499512
    6. 'count' → logprob: -8.755755424499512
    7. '_right' → logprob: -10.130755424499512
    8. '[right' → logprob: -10.880755424499512
    9. ' right' → logprob: -11.505755424499512
    10. 'Count' → logprob: -12.130755424499512

Token 192: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0010822329204529524
    2. ' /' → logprob: -6.876082420349121
    3. '(' → logprob: -10.876082420349121
    4. '2' → logprob: -11.001082420349121
    5. '()/' → logprob: -11.876082420349121
    6. '   ' → logprob: -13.251082420349121
    7. '[' → logprob: -13.501082420349121
    8. '```' → logprob: -13.876082420349121
    9. '(/' → logprob: -14.001082420349121
    10. '1' → logprob: -14.251082420349121

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '/' → logprob: -16.000028610229492
    4. ')' → logprob: -16.375028610229492
    5. '   ' → logprob: -16.500028610229492
    6. '1' → logprob: -17.125028610229492
    7. '(' → logprob: -17.250028610229492
    8. '۲' → logprob: -17.312528610229492
    9. '```' → logprob: -17.812528610229492
    10. '  ' → logprob: -18.125028610229492

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019492254359647632
    2. ')+' → logprob: -6.251949310302734
    3. ' )' → logprob: -11.126949310302734
    4. '+)' → logprob: -12.876949310302734
    5. '+' → logprob: -13.501949310302734
    6. '   ' → logprob: -14.626949310302734
    7. ')
' → logprob: -14.626949310302734
    8. ')+(' → logprob: -15.001949310302734
    9. '1' → logprob: -15.501949310302734
    10. '`)' → logprob: -16.251949310302734

Token 195: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1574612557888031
    2. ' +' → logprob: -2.032461166381836
    3. ')' → logprob: -4.532461166381836
    4. ')+' → logprob: -5.907461166381836
    5. 'right' → logprob: -7.032461166381836
    6. ')+(' → logprob: -9.282461166381836
    7. ' right' → logprob: -9.657461166381836
    8. '<|end|>' → logprob: -10.157461166381836
    9. '+)' → logprob: -10.782461166381836
    10. '(right' → logprob: -10.782461166381836

Token 196: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.08895070850849152
    2. ' ceil' → logprob: -2.4639506340026855
    3. '.ceil' → logprob: -11.713951110839844
    4. '   ' → logprob: -13.963951110839844
    5. 'ce' → logprob: -14.338951110839844
    6. ' ' → logprob: -14.338951110839844
    7. '  ' → logprob: -15.463951110839844
    8. '(' → logprob: -15.588951110839844
    9. 'floor' → logprob: -15.838951110839844
    10. 'cel' → logprob: -16.338951110839844

Token 197: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -6.630610641877865e-06
    2. 'right' → logprob: -12.000006675720215
    3. '(' → logprob: -15.625006675720215
    4. '[right' → logprob: -16.0000057220459
    5. '(rhs' → logprob: -17.6250057220459
    6. ' right' → logprob: -17.8750057220459
    7. '	right' → logprob: -18.0000057220459
    8. '(r' → logprob: -18.6250057220459
    9. ' (' → logprob: -18.8750057220459
    10. ':right' → logprob: -19.0000057220459

Token 198: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.020198944956064224
    2. 'right' → logprob: -4.020198822021484
    3. 'ight' → logprob: -6.395198822021484
    4. '(right' → logprob: -8.395198822021484
    5. 'ght' → logprob: -10.020198822021484
    6. '[right' → logprob: -10.145198822021484
    7. 'count' → logprob: -11.145198822021484
    8. ' right' → logprob: -11.270198822021484
    9. 'ount' → logprob: -11.395198822021484
    10. 'unt' → logprob: -11.770198822021484

Token 199: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -2.3080716346157715e-05
    2. ' /' → logprob: -10.750022888183594
    3. '()/' → logprob: -14.375022888183594
    4. '(' → logprob: -14.625022888183594
    5. ')/' → logprob: -16.125022888183594
    6. '[' → logprob: -16.250022888183594
    7. '/count' → logprob: -16.750022888183594
    8. ')' → logprob: -17.000022888183594
    9. '<|end|>' → logprob: -17.750022888183594
    10. '```' → logprob: -17.875022888183594

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. '1' → logprob: -12.000011444091797
    3. '(' → logprob: -12.500011444091797
    4. '/' → logprob: -14.375011444091797
    5. ' ' → logprob: -14.625011444091797
    6. ')' → logprob: -14.875011444091797
    7. 'count' → logprob: -16.500011444091797
    8. '0' → logprob: -18.500011444091797
    9. '   ' → logprob: -18.875011444091797
    10. ')/' → logprob: -19.000011444091797

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')
' → logprob: -12.000009536743164
    3. '   ' → logprob: -13.875009536743164
    4. '))' → logprob: -14.250009536743164
    5. '())' → logprob: -14.500009536743164
    6. ')}' → logprob: -15.125009536743164
    7. ' )' → logprob: -15.125009536743164
    8. '()' → logprob: -15.250009536743164
    9. ')`' → logprob: -16.875009536743164
    10. ')}}' → logprob: -17.250009536743164

Token 202: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: '(*' (ID: 9000)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.05448431894183159
    2. '(*' → logprob: -3.6794843673706055
    3. '("' → logprob: -3.9294843673706055
    4. '(' → logprob: -5.4294843673706055
    5. '(res' → logprob: -5.9294843673706055
    6. '(tuple' → logprob: -7.1794843673706055
    7. '("("' → logprob: -8.679484367370605
    8. '(sum' → logprob: -9.679484367370605
    9. 'res' → logprob: -10.179484367370605
    10. '("")' → logprob: -11.179484367370605

Token 204: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -15.75
    3. '(res' → logprob: -19.75
    4. ')' → logprob: -22.125
    5. '$res' → logprob: -23.75
    6. '	res' → logprob: -24.25
    7. 'result' → logprob: -25.5
    8. 're' → logprob: -25.75
    9. 'resi' → logprob: -25.75
    10. 'resc' → logprob: -25.875

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '()' → logprob: -12.000014305114746
    3. '())' → logprob: -12.625014305114746
    4. '))' → logprob: -12.750014305114746
    5. ')`' → logprob: -14.250014305114746
    6. ',' → logprob: -14.375014305114746
    7. ' )' → logprob: -15.000014305114746
    8. ')**' → logprob: -15.875014305114746
    9. ')
' → logprob: -16.125015258789062
    10. '(' → logprob: -16.250015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 203
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 46.31%
Précision adaptée (1ère position): 47.78%
Précision (top 10): 87.19%
================================================================================
