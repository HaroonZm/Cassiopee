================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module 'sys' qui fournit l'accès à certaines variables et fonctions système

# Augmente la limite de récursion maximale autorisée dans Python à un million (10 puissance 6)
# Cela permet de gérer des appels récursifs profonds qui pourraient dépasser la limite par défaut (~1000)
sys.setrecursionlimit(10**6)

# Affecte à 'readline' la méthode 'sys.stdin.readline', utilisée pour lire une ligne de l'entrée standard (clavier ou redirection de fichier)
readline = sys.stdin.readline
# Affecte à 'read' la méthode 'sys.stdin.read', utilisée pour lire tout le flux de l'entrée standard en une seule chaîne de caractères
read = sys.stdin.read

# Lecture des entiers à partir de l'entrée standard et conversion en liste d'entiers
# La première valeur correspond à 'n', les suivantes forment la liste 'c'
n, *c = [int(i) for i in read().split()]
# Trie la liste 'c' dans l'ordre décroissant (du plus grand au plus petit)
c.sort(reverse=True)

# Définit une constante 'MOD' pour effectuer des opérations modulo 10^9+7, un grand nombre premier utilisé pour éviter les dépassements d'entiers
MOD = 10**9 + 7

# Initialise la variable 'ans' à 0. Cette variable va accumuler la somme finale selon une formule donnée
ans = 0

# Parcourt chaque élément de la liste 'c' ainsi que son indice correspondant
for i, ci in enumerate(c):
    # Pour chaque élément, calcule (indice+2) fois la valeur correspondante, puis applique le modulo MOD
    # Cette opération empêche la valeur de dépasser une certaine limite fixée par MOD et empêche les débordements d'entiers
    ans += (i + 2) * ci % MOD
    # Applique à nouveau le modulo après l'addition pour garantir que 'ans' reste dans la plage correcte
    ans %= MOD

# Calcule la puissance de 2 à l'exposant (2*n-2) modulo MOD avec la fonction intégrée 'pow' qui supporte le modulo en troisième argument
# Multiplie ce résultat par 'ans', applique le modulo à nouveau pour la dernière fois afin d'obtenir le résultat final
resultat = ans * pow(2, 2 * n - 2, MOD) % MOD

# Affiche le résultat sur la sortie standard (habituellement l'écran du terminal)
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017001720843836665
    2. '<|end|>' → logprob: -7.626700401306152
    3. '\n' → logprob: -7.876700401306152
    4. '\' → logprob: -7.876700401306152
    5. 'import' → logprob: -9.126700401306152
    6. '.readline' → logprob: -9.626700401306152
    7. '[' → logprob: -9.751700401306152
    8. ',' → logprob: -10.501700401306152
    9. '```' → logprob: -10.501700401306152
    10. 'newline' → logprob: -10.501700401306152

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.260842889547348
    2. '<|end|>' → logprob: -2.135842800140381
    3. '<|end|>' → logprob: -3.010842800140381
    4. '.' → logprob: -4.135842800140381
    5. '  ' → logprob: -4.510842800140381
    6. 'import' → logprob: -4.885842800140381
    7. 'space' → logprob: -5.635842800140381
    8. ' import' → logprob: -6.135842800140381
    9. '#' → logprob: -6.510842800140381
    10. ' space' → logprob: -6.510842800140381

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -6.051066520740278e-05
    2. 'p' → logprob: -9.750060081481934
    3. 'ported' → logprob: -14.000060081481934
    4. 'por' → logprob: -14.625060081481934
    5. 'ports' → logprob: -14.875060081481934
    6. 'porter' → logprob: -15.500060081481934
    7. 'import' → logprob: -16.37506103515625
    8. '```' → logprob: -16.62506103515625
    9. ' port' → logprob: -16.87506103515625
    10. 'ort' → logprob: -17.00006103515625

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0404893159866333
    2. 'rt' → logprob: -3.2904891967773438
    3. ' r' → logprob: -6.415489196777344
    4. ' ' → logprob: -7.415489196777344
    5. ' rt' → logprob: -10.290489196777344
    6. 'nt' → logprob: -10.540489196777344
    7. 'n' → logprob: -11.040489196777344
    8. 'ort' → logprob: -11.165489196777344
    9. 'port' → logprob: -11.415489196777344
    10. 't' → logprob: -11.665489196777344

Token 7: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26953426003456116
    2. 'r' → logprob: -2.3945343494415283
    3. 's' → logprob: -3.3945343494415283
    4. ' module' → logprob: -3.3945343494415283
    5. ' sys' → logprob: -3.7695343494415283
    6. 'space' → logprob: -4.144534111022949
    7. ' space' → logprob: -4.519534111022949
    8. ' r' → logprob: -5.144534111022949
    9. ' ' → logprob: -5.894534111022949
    10. ' os' → logprob: -5.894534111022949

Token 8: ' '' (ID: 461)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20216499269008636
    2. ' ' → logprob: -2.202164888381958
    3. '' → logprob: -4.452165126800537
    4. ',' → logprob: -4.452165126800537
    5. 'import' → logprob: -4.702165126800537
    6. '\' → logprob: -4.827165126800537
    7. ' .' → logprob: -5.452165126800537
    8. '[' → logprob: -5.452165126800537
    9. '<|end|>' → logprob: -5.452165126800537
    10. '\n' → logprob: -5.702165126800537

Token 9: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03470119833946228
    2. ' sys' → logprob: -3.409701108932495
    3. 'os' → logprob: -7.159701347351074
    4. 'system' → logprob: -9.284701347351074
    5. 'import' → logprob: -9.659701347351074
    6. ' os' → logprob: -10.034701347351074
    7. ' ' → logprob: -11.034701347351074
    8. 'sy' → logprob: -11.284701347351074
    9. ' ' → logprob: -11.534701347351074
    10. '_sys' → logprob: -11.784701347351074

Token 10: ''' (ID: 6)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008813462220132351
    2. ')' → logprob: -5.133813381195068
    3. ' .' → logprob: -7.133813381195068
    4. '```' → logprob: -7.133813381195068
    5. 'import' → logprob: -7.758813381195068
    6. '' → logprob: -9.133813858032227
    7. '.import' → logprob: -9.133813858032227
    8. 'space' → logprob: -9.383813858032227
    9. ''' → logprob: -9.633813858032227
    10. 'a' → logprob: -9.883813858032227

Token 11: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013544522225856781
    2. '\n' → logprob: -5.76354455947876
    3. 'import' → logprob: -6.01354455947876
    4. ' ' → logprob: -6.13854455947876
    5. '' → logprob: -6.51354455947876
    6. '
' → logprob: -6.63854455947876
    7. '\' → logprob: -6.88854455947876
    8. '.import' → logprob: -7.51354455947876
    9. '<|end|>' → logprob: -7.88854455947876
    10. 'newline' → logprob: -9.013544082641602

Token 12: ' fournit' (ID: 123615)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.09407166391611099
    2. ' fournit' → logprob: -2.844071626663208
    3. ' est' → logprob: -4.469071865081787
    4. ' contient' → logprob: -5.094071865081787
    5. ' ' → logprob: -5.219071865081787
    6. ' ' → logprob: -6.219071865081787
    7. 'per' → logprob: -6.594071865081787
    8. ' permettra' → logprob: -6.969071865081787
    9. 'est' → logprob: -7.719071865081787
    10. ' met' → logprob: -8.094071388244629

Token 13: ' l' (ID: 305)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1286560446023941
    2. ' .' → logprob: -2.6286561489105225
    3. ' ' → logprob: -3.1286561489105225
    4. '  ' → logprob: -6.378655910491943
    5. ',' → logprob: -7.503655910491943
    6. '<|end|>' → logprob: -8.003656387329102
    7. '```' → logprob: -8.253656387329102
    8. '[' → logprob: -8.628656387329102
    9. 'import' → logprob: -8.628656387329102
    10. ')' → logprob: -9.003656387329102

Token 14: ''accès' (ID: 116356)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7804495692253113
    2. 'es' → logprob: -1.780449628829956
    3. ''' → logprob: -2.030449628829956
    4. ''accès' → logprob: -2.280449628829956
    5. 'a' → logprob: -2.780449628829956
    6. ''espace' → logprob: -3.280449628829956
    7. ''environnement' → logprob: -4.405449390411377
    8. '_' → logprob: -5.780449390411377
    9. ''utilisateur' → logprob: -5.905449390411377
    10. ''s' → logprob: -6.155449390411377

Token 15: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1452673375606537
    2. ' ' → logprob: -2.6452672481536865
    3. ' .' → logprob: -3.7702672481536865
    4. ' à' → logprob: -4.020267486572266
    5. ' aux' → logprob: -4.895267486572266
    6. ' a' → logprob: -5.270267486572266
    7. ' au' → logprob: -5.645267486572266
    8. '  ' → logprob: -6.395267486572266
    9. '<|end|>' → logprob: -6.520267486572266
    10. ',' → logprob: -7.395267486572266

Token 16: ' certaines' (ID: 46662)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11839962750673294
    2. ' sys' → logprob: -3.3683996200561523
    3. ' ' → logprob: -3.4933996200561523
    4. 'l' → logprob: -3.8683996200561523
    5. ' system' → logprob: -4.493399620056152
    6. ' des' → logprob: -5.618399620056152
    7. 'sys' → logprob: -5.743399620056152
    8. ' la' → logprob: -6.368399620056152
    9. 'system' → logprob: -7.118399620056152
    10. ' ' → logprob: -7.118399620056152

Token 17: ' variables' (ID: 13955)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004413975402712822
    2. ' .' → logprob: -7.875441551208496
    3. '[' → logprob: -12.000441551208496
    4. ' ' → logprob: -12.250441551208496
    5. '.sys' → logprob: -12.375441551208496
    6. '.system' → logprob: -12.375441551208496
    7. ',' → logprob: -12.375441551208496
    8. ''s' → logprob: -12.500441551208496
    9. 'import' → logprob: -12.500441551208496
    10. '.token' → logprob: -12.625441551208496

Token 18: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020797735080122948
    2. ',' → logprob: -5.0207977294921875
    3. 'import' → logprob: -5.2707977294921875
    4. '<|end|>' → logprob: -5.2707977294921875
    5. ' ' → logprob: -6.5207977294921875
    6. '
' → logprob: -8.145797729492188
    7. '' → logprob: -8.145797729492188
    8. '.import' → logprob: -8.395797729492188
    9. '#' → logprob: -8.520797729492188
    10. '\' → logprob: -8.645797729492188

Token 19: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.06673453003168106
    2. 'fon' → logprob: -2.941734552383423
    3. 'fonction' → logprob: -5.316734313964844
    4. ' functions' → logprob: -5.691734313964844
    5. '```' → logprob: -7.191734313964844
    6. ' ' → logprob: -7.316734313964844
    7. ' fon' → logprob: -7.941734313964844
    8. 'functions' → logprob: -7.941734313964844
    9. ' fonctionnalités' → logprob: -8.191734313964844
    10. ' des' → logprob: -8.566734313964844

Token 20: ' système' (ID: 30034)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15117649734020233
    2. '\n' → logprob: -3.1511764526367188
    3. '
' → logprob: -3.5261764526367188
    4. '\' → logprob: -4.026176452636719
    5. '<|end|>' → logprob: -4.026176452636719
    6. 'import' → logprob: -4.151176452636719
    7. ',' → logprob: -5.651176452636719
    8. ' ' → logprob: -5.776176452636719
    9. '' → logprob: -6.151176452636719
    10. 'newline' → logprob: -6.401176452636719

Token 21: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29472020268440247
    2. '
' → logprob: -2.54472017288208
    3. '\n' → logprob: -2.54472017288208
    4. ' ' → logprob: -3.66972017288208
    5. 'import' → logprob: -3.79472017288208
    6. '' → logprob: -4.41972017288208
    7. 'newline' → logprob: -4.41972017288208
    8. '\' → logprob: -4.91972017288208
    9. ',' → logprob: -5.29472017288208
    10. '<|end|>' → logprob: -5.41972017288208

Token 22: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7004500031471252
    2. 'import' → logprob: -1.8254499435424805
    3. '\n' → logprob: -2.4504499435424805
    4. '.' → logprob: -2.7004499435424805
    5. '

' → logprob: -2.7004499435424805
    6. ' ' → logprob: -3.3254499435424805
    7. '' → logprob: -3.4504499435424805
    8. '<|end|>' → logprob: -4.0754499435424805
    9. ',' → logprob: -4.3254499435424805
    10. '#' → logprob: -5.0754499435424805

Token 23: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5758309960365295
    2. '#' → logprob: -1.4508309364318848
    3. 'def' → logprob: -2.0758309364318848
    4. '\' → logprob: -3.2008309364318848
    5. ' #' → logprob: -4.200830936431885
    6. 'd' → logprob: -4.825830936431885
    7. 'import' → logprob: -5.575830936431885
    8. '\n' → logprob: -5.950830936431885
    9. ' def' → logprob: -6.075830936431885
    10. ' \' → logprob: -7.575830936431885

Token 24: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.10575981438159943
    2. 'mentation' → logprob: -2.355759859085083
    3. 'mente' → logprob: -5.230759620666504
    4. 'm' → logprob: -9.730759620666504
    5. 'mented' → logprob: -10.355759620666504
    6. ' ment' → logprob: -10.605759620666504
    7. 'mentor' → logprob: -10.605759620666504
    8. 'mentar' → logprob: -11.105759620666504
    9. 'men' → logprob: -11.605759620666504
    10. 'ments' → logprob: -11.980759620666504

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.006702184677124
    2. '_' → logprob: -1.256702184677124
    3. ' ' → logprob: -1.631702184677124
    4. 's' → logprob: -3.506702184677124
    5. ' l' → logprob: -3.631702184677124
    6. 'r' → logprob: -4.006702423095703
    7. 'le' → logprob: -4.006702423095703
    8. ' le' → logprob: -4.381702423095703
    9. ' sys' → logprob: -4.506702423095703
    10. 'la' → logprob: -4.631702423095703

Token 26: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.3359909653663635
    2. 'tail' → logprob: -1.8359909057617188
    3. 'r' → logprob: -3.7109909057617188
    4. ' limite' → logprob: -4.335990905761719
    5. 't' → logprob: -4.460990905761719
    6. 'rec' → logprob: -4.585990905761719
    7. 'import' → logprob: -4.710990905761719
    8. 'stack' → logprob: -4.710990905761719
    9. 'sys' → logprob: -4.835990905761719
    10. 'limit' → logprob: -5.210990905761719

Token 27: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4234569072723389
    2. 'sys' → logprob: -1.4234569072723389
    3. 'import' → logprob: -1.6734569072723389
    4. ' d' → logprob: -2.423456907272339
    5. 'e' → logprob: -2.798456907272339
    6. '_' → logprob: -3.173456907272339
    7. '=sys' → logprob: -3.548456907272339
    8. ' de' → logprob: -3.798456907272339
    9. '_sys' → logprob: -3.923456907272339
    10. 's' → logprob: -4.048457145690918

Token 28: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.7879156470298767
    2. ' réc' → logprob: -1.1629157066345215
    3. 'r' → logprob: -1.5379157066345215
    4. ' recursion' → logprob: -4.2879157066345215
    5. 'la' → logprob: -7.0379157066345215
    6. 'ré' → logprob: -7.0379157066345215
    7. ' la' → logprob: -7.1629157066345215
    8. 're' → logprob: -7.4129157066345215
    9. ' r' → logprob: -8.662915229797363
    10. '_rec' → logprob: -8.912915229797363

Token 29: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.016492942348122597
    2. 'urs' → logprob: -4.51649284362793
    3. 'ur' → logprob: -5.26649284362793
    4. 'u' → logprob: -9.39149284362793
    5. 'ursive' → logprob: -9.64149284362793
    6. 'c' → logprob: -9.64149284362793
    7. 'urrence' → logprob: -10.89149284362793
    8. 'urse' → logprob: -12.14149284362793
    9. '```' → logprob: -12.26649284362793
    10. 'up' → logprob: -12.64149284362793

Token 30: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6372928619384766
    2. 'sys' → logprob: -1.0122928619384766
    3. '_sys' → logprob: -2.5122928619384766
    4. ' sys' → logprob: -4.762292861938477
    5. 'import' → logprob: -4.762292861938477
    6. '_s' → logprob: -5.762292861938477
    7. ' _' → logprob: -6.262292861938477
    8. ' ' → logprob: -7.012292861938477
    9. '_rec' → logprob: -7.262292861938477
    10. '_recursive' → logprob: -7.387292861938477

Token 31: ' autor' (ID: 13432)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10755027085542679
    2. 'import' → logprob: -3.4825503826141357
    3. '_' → logprob: -3.8575503826141357
    4. ' sys' → logprob: -4.232550144195557
    5. '_sys' → logprob: -4.482550144195557
    6. '\' → logprob: -4.482550144195557
    7. '\n' → logprob: -6.232550144195557
    8. '' → logprob: -6.357550144195557
    9. '```' → logprob: -6.607550144195557
    10. '
' → logprob: -6.857550144195557

Token 32: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.430927038192749
    2. 'ée' → logprob: -1.055927038192749
    3. 'ee' → logprob: -7.305927276611328
    4. 'lée' → logprob: -7.805927276611328
    5. 'e' → logprob: -8.180927276611328
    6. 'é' → logprob: -8.430927276611328
    7. 'née' → logprob: -8.680927276611328
    8. 'isee' → logprob: -9.055927276611328
    9. '#' → logprob: -9.555927276611328
    10. 'isé' → logprob: -9.805927276611328

Token 33: ' dans' (ID: 2671)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.061696384102106094
    2. 'import' → logprob: -3.4366962909698486
    3. '\' → logprob: -4.561696529388428
    4. ',' → logprob: -5.186696529388428
    5. ' sys' → logprob: -5.186696529388428
    6. ':' → logprob: -6.686696529388428
    7. '=sys' → logprob: -6.686696529388428
    8. '_sys' → logprob: -7.061696529388428
    9. '(sys' → logprob: -7.561696529388428
    10. '_' → logprob: -7.686696529388428

Token 34: ' Python' (ID: 26534)
  Prédit: ' Python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.018333133310079575
    2. 'Python' → logprob: -4.8933329582214355
    3. ' python' → logprob: -5.6433329582214355
    4. ' l' → logprob: -6.0183329582214355
    5. ' sys' → logprob: -6.0183329582214355
    6. ' le' → logprob: -6.5183329582214355
    7. 'python' → logprob: -7.6433329582214355
    8. 'le' → logprob: -8.893333435058594
    9. 'l' → logprob: -9.893333435058594
    10. '  ' → logprob: -10.393333435058594

Token 35: ' à' (ID: 1221)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005294357892125845
    2. 'import' → logprob: -6.130294322967529
    3. '\' → logprob: -7.005294322967529
    4. ' sys' → logprob: -7.130294322967529
    5. '_' → logprob: -7.755294322967529
    6. '_sys' → logprob: -7.880294322967529
    7. '\n' → logprob: -9.255294799804688
    8. '
' → logprob: -9.380294799804688
    9. '=sys' → logprob: -9.505294799804688
    10. '.sys' → logprob: -9.755294799804688

Token 36: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06571308523416519
    2. '100' → logprob: -2.8157131671905518
    3. '10' → logprob: -5.690712928771973
    4. ' sys' → logprob: -9.190712928771973
    5. '300' → logprob: -9.315712928771973
    6. '500' → logprob: -9.690712928771973
    7. '250' → logprob: -10.565712928771973
    8. 'sys' → logprob: -10.815712928771973
    9. ' ' → logprob: -11.315712928771973
    10. '200' → logprob: -11.690712928771973

Token 37: ' million' (ID: 5749)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9422029852867126
    2. ' million' → logprob: -1.8172030448913574
    3. '100' → logprob: -1.9422030448913574
    4. ' nombre' → logprob: -2.1922030448913574
    5. 'e' → logprob: -2.5672030448913574
    6. '   ' → logprob: -3.9422030448913574
    7. 'nombre' → logprob: -4.567203044891357
    8. ' entier' → logprob: -4.942203044891357
    9. '  ' → logprob: -5.192203044891357
    10. 'int' → logprob: -5.442203044891357

Token 38: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2416735142469406
    2. '_' → logprob: -2.241673469543457
    3. '
' → logprob: -3.116673469543457
    4. '\' → logprob: -3.616673469543457
    5. ' sys' → logprob: -4.866673469543457
    6. 'import' → logprob: -5.116673469543457
    7. '' → logprob: -5.741673469543457
    8. '\n' → logprob: -5.741673469543457
    9. '_sys' → logprob: -5.741673469543457
    10. ' ' → logprob: -5.741673469543457

Token 39: '10' (ID: 702)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.556879460811615
    2. ')' → logprob: -1.1818795204162598
    3. '100' → logprob: -3.1818795204162598
    4. ' ' → logprob: -3.8068795204162598
    5. ' sys' → logprob: -3.8068795204162598
    6. 'sys' → logprob: -3.8068795204162598
    7. '1' → logprob: -5.30687952041626
    8. ' )
' → logprob: -6.80687952041626
    9. '```' → logprob: -6.80687952041626
    10. '000' → logprob: -7.30687952041626

Token 40: ' puissance' (ID: 63494)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03768601268529892
    2. '000' → logprob: -3.4126861095428467
    3. '6' → logprob: -6.287685871124268
    4. ' **' → logprob: -6.412685871124268
    5. '0' → logprob: -7.912685871124268
    6. '```' → logprob: -9.162686347961426
    7. '^' → logprob: -10.162686347961426
    8. '00' → logprob: -12.287686347961426
    9. '*' → logprob: -12.787686347961426
    10. '**)' → logprob: -13.162686347961426

Token 41: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00048751471331343055
    2. '7' → logprob: -7.750487327575684
    3. ' ' → logprob: -10.000487327575684
    4. ')' → logprob: -12.250487327575684
    5. '**' → logprob: -12.875487327575684
    6. ' )' → logprob: -13.000487327575684
    7. '9' → logprob: -14.500487327575684
    8. '^' → logprob: -14.500487327575684
    9. '```' → logprob: -14.625487327575684
    10. ' ' → logprob: -15.250487327575684

Token 42: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.963691804325208e-05
    2. '7' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.500029563903809
    4. '```' → logprob: -14.375029563903809
    5. '9' → logprob: -17.125030517578125
    6. '06' → logprob: -18.375030517578125
    7. '``' → logprob: -18.750030517578125
    8. ')' → logprob: -19.125030517578125
    9. '0' → logprob: -19.625030517578125
    10. '=' → logprob: -20.250030517578125

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002555926563218236
    2. ' )' → logprob: -6.377555847167969
    3. ').' → logprob: -8.252555847167969
    4. '0' → logprob: -8.752555847167969
    5. ',' → logprob: -8.877555847167969
    6. ')
' → logprob: -9.752555847167969
    7. '),' → logprob: -9.752555847167969
    8. '.' → logprob: -10.377555847167969
    9. ')\' → logprob: -10.502555847167969
    10. '_' → logprob: -10.752555847167969

Token 44: '#' (ID: 2)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011428799480199814
    2. ' sys' → logprob: -4.6364288330078125
    3. 'import' → logprob: -7.3864288330078125
    4. '(sys' → logprob: -8.011428833007812
    5. '
' → logprob: -8.636428833007812
    6. '.sys' → logprob: -8.886428833007812
    7. '=sys' → logprob: -9.511428833007812
    8. '_sys' → logprob: -9.636428833007812
    9. '
' → logprob: -10.011428833007812
    10. '

' → logprob: -10.136428833007812

Token 45: ' Cela' (ID: 44403)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005604196921922266
    2. ' sys' → logprob: -7.750560283660889
    3. 'import' → logprob: -9.250560760498047
    4. '
' → logprob: -10.750560760498047
    5. '(sys' → logprob: -12.500560760498047
    6. '
' → logprob: -13.500560760498047
    7. '_sys' → logprob: -13.625560760498047
    8. '.sys' → logprob: -13.625560760498047
    9. '=sys' → logprob: -13.750560760498047
    10. '	sys' → logprob: -14.125560760498047

Token 46: ' permet' (ID: 11798)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.138279527425766
    2. 'sys' → logprob: -2.138279438018799
    3. 'import' → logprob: -6.013279438018799
    4. ' n' → logprob: -6.763279438018799
    5. ' peut' → logprob: -7.013279438018799
    6. ' permet' → logprob: -7.013279438018799
    7. 'n' → logprob: -7.138279438018799
    8. '=sys' → logprob: -7.138279438018799
    9. ' import' → logprob: -7.263279438018799
    10. ' afin' → logprob: -7.888279438018799

Token 47: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.052447639405727386
    2. ' de' → logprob: -3.427447557449341
    3. ' ' → logprob: -4.30244779586792
    4. 'd' → logprob: -6.05244779586792
    5. ' à' → logprob: -6.67744779586792
    6. '   ' → logprob: -7.67744779586792
    7. '  ' → logprob: -7.92744779586792
    8. ' ' → logprob: -8.677447319030762
    9. '	d' → logprob: -9.302447319030762
    10. ' une' → logprob: -9.927447319030762

Token 48: ' gérer' (ID: 86786)
  Prédit: ' gérer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.11193855106830597
    2. ' traiter' → logprob: -3.4869384765625
    3. 'trait' → logprob: -3.9869384765625
    4. ' éviter' → logprob: -3.9869384765625
    5. ' prévenir' → logprob: -4.8619384765625
    6. ' augmenter' → logprob: -5.1119384765625
    7. 'g' → logprob: -5.1119384765625
    8. 'augment' → logprob: -5.3619384765625
    9. 'év' → logprob: -6.4869384765625
    10. 'man' → logprob: -7.1119384765625

Token 49: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5913021564483643
    2. ' les' → logprob: -0.9663021564483643
    3. ' ' → logprob: -3.0913021564483643
    4. 'les' → logprob: -5.341301918029785
    5. ' mieux' → logprob: -5.466301918029785
    6. ' de' → logprob: -6.091301918029785
    7. ' davantage' → logprob: -6.091301918029785
    8. ' efficacement' → logprob: -6.216301918029785
    9. 'des' → logprob: -6.716301918029785
    10. '  ' → logprob: -7.466301918029785

Token 50: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.643513023853302
    2. ' cas' → logprob: -1.7685129642486572
    3. ' réc' → logprob: -2.5185129642486572
    4. ' niveaux' → logprob: -2.6435129642486572
    5. ' problèmes' → logprob: -3.0185129642486572
    6. ' rec' → logprob: -4.018513202667236
    7. ' situations' → logprob: -4.143513202667236
    8. ' ' → logprob: -4.518513202667236
    9. '   ' → logprob: -4.768513202667236
    10. ' fonctions' → logprob: -5.018513202667236

Token 51: ' réc' (ID: 36254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27170050144195557
    2. ' de' → logprob: -2.021700382232666
    3. ' _' → logprob: -2.896700382232666
    4. ' réc' → logprob: -4.146700382232666
    5. ' ' → logprob: -4.521700382232666
    6. '  ' → logprob: -4.771700382232666
    7. '_de' → logprob: -5.521700382232666
    8. 's' → logprob: -6.021700382232666
    9. '_recursive' → logprob: -6.146700382232666
    10. '   ' → logprob: -6.521700382232666

Token 52: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.6050729751586914
    2. 'ursion' → logprob: -1.2300729751586914
    3. 'ur' → logprob: -1.9800729751586914
    4. 'ursive' → logprob: -3.9800729751586914
    5. 'u' → logprob: -6.355072975158691
    6. 'urrent' → logprob: -6.480072975158691
    7. '_' → logprob: -7.730072975158691
    8. 'urr' → logprob: -7.730072975158691
    9. 'urse' → logprob: -9.105072975158691
    10. '-' → logprob: -9.605072975158691

Token 53: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.7996833324432373
    2. 's' → logprob: -1.0496833324432373
    3. 'es' → logprob: -2.4246833324432373
    4. 'is' → logprob: -3.9246833324432373
    5. 'ens' → logprob: -4.174683570861816
    6. 'urs' → logprob: -4.174683570861816
    7. 'ents' → logprob: -4.299683570861816
    8. '##' → logprob: -4.799683570861816
    9. 'if' → logprob: -5.424683570861816
    10. 'ive' → logprob: -5.549683570861816

Token 54: ' prof' (ID: 1915)
  Prédit: ' très'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' très' → logprob: -0.2285769134759903
    2. ' plus' → logprob: -1.978576898574829
    3. ' extrêmement' → logprob: -4.228577136993408
    4. ' profond' → logprob: -4.353577136993408
    5. 'import' → logprob: -4.603577136993408
    6. ' jusqu' → logprob: -4.728577136993408
    7. ' de' → logprob: -5.728577136993408
    8. ' d' → logprob: -5.853577136993408
    9. 'tr' → logprob: -6.353577136993408
    10. 's' → logprob: -6.978577136993408

Token 55: 'onds' (ID: 20754)
  Prédit: 'onde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onde' → logprob: -0.7981168031692505
    2. 'onds' → logprob: -0.9231168031692505
    3. 'ondes' → logprob: -1.9231168031692505
    4. 'ond' → logprob: -5.548116683959961
    5. 'on' → logprob: -7.298116683959961
    6. '_' → logprob: -7.923116683959961
    7. 'ons' → logprob: -9.048116683959961
    8. '=' → logprob: -9.298116683959961
    9. 'o' → logprob: -9.423116683959961
    10. '```' → logprob: -9.673116683959961

Token 56: ' qui' (ID: 2780)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03691631183028221
    2. '
' → logprob: -3.6619162559509277
    3. ' sys' → logprob: -5.036916255950928
    4. 'import' → logprob: -5.911916255950928
    5. '
' → logprob: -7.911916255950928
    6. '.' → logprob: -8.161916732788086
    7. '(sys' → logprob: -8.661916732788086
    8. '

' → logprob: -9.036916732788086
    9. '' → logprob: -9.411916732788086
    10. '_sys' → logprob: -9.411916732788086

Token 57: ' pourraient' (ID: 95216)
  Prédit: ' dépass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.09324872493743896
    2. ' pourraient' → logprob: -2.5932488441467285
    3. ' peuvent' → logprob: -4.8432488441467285
    4. ' ne' → logprob: -6.3432488441467285
    5. ' seraient' → logprob: -6.4682488441467285
    6. ' dépasser' → logprob: -6.7182488441467285
    7. ' dépasse' → logprob: -7.5932488441467285
    8. ' surpass' → logprob: -7.7182488441467285
    9. ' sont' → logprob: -8.34324836730957
    10. ' exceed' → logprob: -9.34324836730957

Token 58: ' dépasser' (ID: 187375)
  Prédit: ' provoquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provoquer' → logprob: -0.7197983860969543
    2. ' ca' → logprob: -1.8447983264923096
    3. ' entraîner' → logprob: -2.3447983264923096
    4. 'ca' → logprob: -2.5947983264923096
    5. ' dépasser' → logprob: -2.8447983264923096
    6. ' autrement' → logprob: -2.9697983264923096
    7. ' sur' → logprob: -4.219798564910889
    8. ' poser' → logprob: -4.219798564910889
    9. 'sur' → logprob: -4.344798564910889
    10. ' otherwise' → logprob: -4.969798564910889

Token 59: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05522007867693901
    2. ' sys' → logprob: -3.305220127105713
    3. 'la' → logprob: -4.805220127105713
    4. ' ' → logprob: -5.305220127105713
    5. ' ' → logprob: -6.305220127105713
    6. 'sys' → logprob: -6.930220127105713
    7. ' les' → logprob: -7.930220127105713
    8. ' l' → logprob: -8.555219650268555
    9. '100' → logprob: -8.555219650268555
    10. '  ' → logprob: -9.680219650268555

Token 60: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.1915232539176941
    2. 'val' → logprob: -2.691523313522339
    3. ' limite' → logprob: -2.941523313522339
    4. 'sys' → logprob: -3.441523313522339
    5. 'default' → logprob: -5.06652307510376
    6. ' sys' → logprob: -5.69152307510376
    7. 'rec' → logprob: -5.81652307510376
    8. 'stack' → logprob: -6.56652307510376
    9. 'maximum' → logprob: -6.81652307510376
    10. 'limit' → logprob: -6.81652307510376

Token 61: ' par' (ID: 686)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6907358169555664
    2. '_sys' → logprob: -1.8157358169555664
    3. 'import' → logprob: -2.5657358169555664
    4. ' sys' → logprob: -2.6907358169555664
    5. '_max' → logprob: -3.0657358169555664
    6. ' de' → logprob: -3.9407358169555664
    7. ' maximale' → logprob: -3.9407358169555664
    8. '_' → logprob: -4.065735816955566
    9. '=sys' → logprob: -4.065735816955566
    10. ' par' → logprob: -4.690735816955566

Token 62: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.6736656427383423
    2. 'dé' → logprob: -0.7986656427383423
    3. 'default' → logprob: -3.4236655235290527
    4. 'def' → logprob: -5.173665523529053
    5. 'd' → logprob: -7.173665523529053
    6. ' default' → logprob: -7.548665523529053
    7. ' ' → logprob: -8.423666000366211
    8. '#' → logprob: -9.423666000366211
    9. ' déf' → logprob: -9.548666000366211
    10. ' def' → logprob: -10.298666000366211

Token 63: ' (~' (ID: 65176)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.028904497623443604
    2. ' sys' → logprob: -4.278904438018799
    3. '
' → logprob: -4.778904438018799
    4. '
' → logprob: -6.278904438018799
    5. '

' → logprob: -7.278904438018799
    6. 'import' → logprob: -7.278904438018799
    7. '\' → logprob: -7.528904438018799
    8. '' → logprob: -7.778904438018799
    9. '=sys' → logprob: -7.778904438018799
    10. '.' → logprob: -7.903904438018799

Token 64: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.19126905500888824
    2. ' ' → logprob: -1.816269040107727
    3. '1' → logprob: -4.8162689208984375
    4. '10' → logprob: -6.3162689208984375
    5. '900' → logprob: -6.6912689208984375
    6. '999' → logprob: -9.441268920898438
    7. '300' → logprob: -9.566268920898438
    8. '  ' → logprob: -9.691268920898438
    9. '9' → logprob: -10.691268920898438
    10. '996' → logprob: -11.066268920898438

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.492120155598968e-05
    2. '00' → logprob: -9.875064849853516
    3. '000' → logprob: -11.250064849853516
    4. ' ' → logprob: -15.250064849853516
    5. '۰' → logprob: -16.125064849853516
    6. '```' → logprob: -16.937564849853516
    7. '050' → logprob: -17.562564849853516
    8. '٠' → logprob: -17.625064849853516
    9. '０' → logprob: -18.000064849853516
    10. '_' → logprob: -18.750064849853516

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08861060440540314
    2. ' )' → logprob: -2.5886106491088867
    3. ',' → logprob: -5.713610649108887
    4. ').' → logprob: -6.088610649108887
    5. ' ' → logprob: -7.213610649108887
    6. '000' → logprob: -7.213610649108887
    7. ' ,' → logprob: -7.338610649108887
    8. ')
' → logprob: -7.838610649108887
    9. '0' → logprob: -8.213610649108887
    10. '),' → logprob: -8.463610649108887

Token 67: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004699022509157658
    2. '
' → logprob: -5.504699230194092
    3. '
' → logprob: -7.879699230194092
    4. ' sys' → logprob: -9.129698753356934
    5. 'import' → logprob: -10.504698753356934
    6. '' → logprob: -11.004698753356934
    7. '(sys' → logprob: -11.254698753356934
    8. '

' → logprob: -11.379698753356934
    9. '_sys' → logprob: -11.379698753356934
    10. '\' → logprob: -11.379698753356934

Token 68: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.021943749859929085
    2. '.' → logprob: -3.8969438076019287
    3. ' .' → logprob: -7.02194356918335
    4. '.setdefault' → logprob: -7.64694356918335
    5. '.stdout' → logprob: -11.771944046020508
    6. '.argv' → logprob: -12.146944046020508
    7. '.stdin' → logprob: -12.271944046020508
    8. '.get' → logprob: -12.396944046020508
    9. '.exit' → logprob: -13.271944046020508
    10. '.max' → logprob: -13.521944046020508

Token 69: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00045914790825918317
    2. '_rec' → logprob: -8.375458717346191
    3. 're' → logprob: -9.000458717346191
    4. 'limit' → logprob: -10.000458717346191
    5. '_' → logprob: -10.625458717346191
    6. 'ref' → logprob: -11.250458717346191
    7. ' recursion' → logprob: -11.875458717346191
    8. 's' → logprob: -13.375458717346191
    9. 'e' → logprob: -13.500458717346191
    10. ' _' → logprob: -13.750458717346191

Token 70: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -5.5577775128767826e-06
    2. 'urs' → logprob: -13.000005722045898
    3. 'ur' → logprob: -13.375005722045898
    4. 'limit' → logprob: -14.625005722045898
    5. 'usion' → logprob: -14.750005722045898
    6. 'ursor' → logprob: -15.375005722045898
    7. 'ursive' → logprob: -15.375005722045898
    8. '_' → logprob: -16.0000057220459
    9. 'urse' → logprob: -16.7500057220459
    10. '_limit' → logprob: -17.0000057220459

Token 71: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00020532844064291567
    2. 'lim' → logprob: -8.500205039978027
    3. 'ault' → logprob: -14.500205039978027
    4. 'depth' → logprob: -14.625205039978027
    5. 'al' → logprob: -15.625205039978027
    6. 'l' → logprob: -15.875205039978027
    7. 'el' → logprob: -15.875205039978027
    8. ' limit' → logprob: -16.000205993652344
    9. '_limit' → logprob: -16.250205993652344
    10. 'rl' → logprob: -16.625205993652344

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. ' (' → logprob: -12.500003814697266
    3. '((' → logprob: -17.500003814697266
    4. '(

' → logprob: -17.500003814697266
    5. '(
' → logprob: -18.500003814697266
    6. '(int' → logprob: -18.750003814697266
    7. '()' → logprob: -19.000003814697266
    8. '100' → logprob: -19.125003814697266
    9. '(sys' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.000003814697266

Token 73: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1605282425880432
    2. '10' → logprob: -1.9105281829833984
    3. ' ' → logprob: -8.160528182983398
    4. '1' → logprob: -10.910528182983398
    5. 'int' → logprob: -16.9105281829834
    6. '  ' → logprob: -18.4105281829834
    7. ')' → logprob: -19.6605281829834
    8. '(' → logprob: -19.7855281829834
    9. '   ' → logprob: -19.7855281829834
    10. ' ' → logprob: -20.7855281829834

Token 74: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0007121934904716909
    2. '**' → logprob: -7.2507123947143555
    3. '06' → logprob: -14.125712394714355
    4. ' ' → logprob: -14.250712394714355
    5. ' **' → logprob: -15.250712394714355
    6. '```' → logprob: -15.500712394714355
    7. '000' → logprob: -15.750712394714355
    8. '^' → logprob: -16.12571144104004
    9. ')' → logprob: -16.75071144104004
    10. '006' → logprob: -16.87571144104004

Token 75: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '7' → logprob: -17.25
    4. '06' → logprob: -21.375
    5. '٦' → logprob: -21.375
    6. '' → logprob: -21.75
    7. '```' → logprob: -22.0
    8. '６' → logprob: -22.25
    9. '۶' → logprob: -22.25
    10. '600' → logprob: -22.375

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -16.875
    4. ')
' → logprob: -17.0
    5. ')`' → logprob: -20.0
    6. ')

' → logprob: -20.125
    7. '),' → logprob: -20.5
    8. ')
' → logprob: -20.625
    9. ')#' → logprob: -20.75
    10. '）' → logprob: -20.875

Token 77: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.327439546585083
    2. '

' → logprob: -1.952439546585083
    3. '#' → logprob: -2.202439546585083
    4. '' → logprob: -4.577439308166504
    5. '\' → logprob: -5.702439308166504
    6. ' ' → logprob: -5.827439308166504
    7. '
' → logprob: -6.077439308166504
    8. '\n' → logprob: -6.327439308166504
    9. 'def' → logprob: -6.452439308166504
    10. ' 

' → logprob: -7.077439308166504

Token 78: ' Affect' (ID: 190087)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30787426233291626
    2. 'def' → logprob: -1.4328742027282715
    3. '#' → logprob: -3.6828742027282715
    4. '\' → logprob: -8.30787467956543
    5. ' ' → logprob: -8.43287467956543
    6. 'de' → logprob: -8.43287467956543
    7. ' def' → logprob: -8.68287467956543
    8. ' 
' → logprob: -9.68287467956543
    9. '
' → logprob: -9.93287467956543
    10. ' 

' → logprob: -10.30787467956543

Token 79: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8534006476402283
    2. 'ation' → logprob: -1.103400707244873
    3. ' =' → logprob: -1.978400707244873
    4. 'er' → logprob: -3.228400707244873
    5. 'n' → logprob: -3.603400707244873
    6. 'r' → logprob: -4.103400707244873
    7. 'a' → logprob: -4.603400707244873
    8. 'm' → logprob: -6.353400707244873
    9. '   ' → logprob: -6.978400707244873
    10. 'ration' → logprob: -6.978400707244873

Token 80: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09561486542224884
    2. ' a' → logprob: -3.5956149101257324
    3. ' =' → logprob: -4.095614910125732
    4. 'a' → logprob: -4.220614910125732
    5. '  ' → logprob: -4.845614910125732
    6. '_' → logprob: -5.095614910125732
    7. 'n' → logprob: -5.470614910125732
    8. ' une' → logprob: -6.095614910125732
    9. ' la' → logprob: -6.845614910125732
    10. 'def' → logprob: -7.095614910125732

Token 81: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.19840973615646362
    2. 'n' → logprob: -2.1984097957611084
    3. ' a' → logprob: -3.4484097957611084
    4. ' ' → logprob: -4.698409557342529
    5. ' une' → logprob: -5.073409557342529
    6. 'a' → logprob: -5.448409557342529
    7. ' ma' → logprob: -5.573409557342529
    8. ' max' → logprob: -6.073409557342529
    9. ' variable' → logprob: -6.573409557342529
    10. ' result' → logprob: -6.698409557342529

Token 82: 'read' (ID: 1293)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8194189071655273
    2. 'sys' → logprob: -1.3194189071655273
    3. 'def' → logprob: -1.4444189071655273
    4. 'input' → logprob: -4.069418907165527
    5. 'max' → logprob: -4.319418907165527
    6. 'a' → logprob: -5.069418907165527
    7. 'rec' → logprob: -5.569418907165527
    8. 'data' → logprob: -5.944418907165527
    9. ' sys' → logprob: -6.444418907165527
    10. 'x' → logprob: -6.444418907165527

Token 83: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.18178746104240417
    2. ' =' → logprob: -2.4317874908447266
    3. '_line' → logprob: -3.5567874908447266
    4. '_input' → logprob: -4.306787490844727
    5. '=' → logprob: -4.306787490844727
    6. '=sys' → logprob: -4.931787490844727
    7. ''' → logprob: -5.306787490844727
    8. '_data' → logprob: -6.181787490844727
    9. 'er' → logprob: -6.556787490844727
    10. 'l' → logprob: -6.556787490844727

Token 84: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042281363159418106
    2. '=' → logprob: -3.41728138923645
    3. ' ' → logprob: -5.292281150817871
    4. '=sys' → logprob: -6.042281150817871
    5. '()' → logprob: -7.917281150817871
    6. '(' → logprob: -8.042281150817871
    7. ''' → logprob: -8.667281150817871
    8. ')' → logprob: -9.167281150817871
    9. '(sys' → logprob: -10.042281150817871
    10. '  ' → logprob: -10.667281150817871

Token 85: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10319121181964874
    2. '=' → logprob: -2.3531911373138428
    3. '=sys' → logprob: -5.853191375732422
    4. ' ' → logprob: -9.603191375732422
    5. '(sys' → logprob: -10.853191375732422
    6. '(' → logprob: -11.478191375732422
    7. 'sys' → logprob: -11.853191375732422
    8. ' sys' → logprob: -13.853191375732422
    9. '	' → logprob: -14.728191375732422
    10. ' =
' → logprob: -14.978191375732422

Token 86: ' méthode' (ID: 71490)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.402468740940094
    2. 'sys' → logprob: -1.1524686813354492
    3. '=sys' → logprob: -4.527468681335449
    4. '(sys' → logprob: -6.527468681335449
    5. ' ' → logprob: -6.652468681335449
    6. ' =' → logprob: -7.027468681335449
    7. 'input' → logprob: -8.27746868133545
    8. '=' → logprob: -8.52746868133545
    9. ' input' → logprob: -8.77746868133545
    10. ' getattr' → logprob: -9.02746868133545

Token 87: ' '' (ID: 461)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.633741021156311
    2. 'sys' → logprob: -1.508741021156311
    3. '(sys' → logprob: -1.883741021156311
    4. ' =' → logprob: -3.3837409019470215
    5. ' ' → logprob: -3.6337409019470215
    6. ' sys' → logprob: -4.3837409019470215
    7. '=' → logprob: -4.7587409019470215
    8. '(' → logprob: -5.3837409019470215
    9. '<|end|>' → logprob: -5.8837409019470215
    10. '	sys' → logprob: -6.6337409019470215

Token 88: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006520325783640146
    2. 'stdin' → logprob: -5.2565202713012695
    3. 'read' → logprob: -7.0065202713012695
    4. ' sys' → logprob: -8.50652027130127
    5. '.readline' → logprob: -9.25652027130127
    6. ' readline' → logprob: -10.25652027130127
    7. 'input' → logprob: -10.50652027130127
    8. '=sys' → logprob: -12.00652027130127
    9. '(sys' → logprob: -12.25652027130127
    10. 'buffer' → logprob: -12.50652027130127

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.3596853831550106e-05
    2. '.' → logprob: -10.125053405761719
    3. '.stdout' → logprob: -12.000053405761719
    4. '.readline' → logprob: -12.000053405761719
    5. '.std' → logprob: -14.500053405761719
    6. '.stderr' → logprob: -15.250053405761719
    7. '.argv' → logprob: -15.625053405761719
    8. '.input' → logprob: -16.00005340576172
    9. '.st' → logprob: -16.75005340576172
    10. '.__' → logprob: -17.87505340576172

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005541055579669774
    2. '.' → logprob: -7.500554084777832
    3. '.read' → logprob: -13.875554084777832
    4. '.buffer' → logprob: -16.75055503845215
    5. '.readlines' → logprob: -17.00055503845215
    6. ' readline' → logprob: -17.00055503845215
    7. '.')' → logprob: -17.37555503845215
    8. ' .' → logprob: -18.25055503845215
    9. '.)' → logprob: -19.25055503845215
    10. '.re' → logprob: -19.87555503845215

Token 91: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10747222602367401
    2. '()' → logprob: -2.7324721813201904
    3. '<|end|>' → logprob: -3.6074721813201904
    4. ' )' → logprob: -6.1074724197387695
    5. '(' → logprob: -6.1074724197387695
    6. '```' → logprob: -6.4824724197387695
    7. '<|end|>' → logprob: -6.4824724197387695
    8. ' ' → logprob: -6.9824724197387695
    9. '#' → logprob: -8.85747241973877
    10. '  ' → logprob: -8.85747241973877

Token 92: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13103504478931427
    2. ' readline' → logprob: -2.131035089492798
    3. ' sys' → logprob: -7.131034851074219
    4. ' )' → logprob: -7.256034851074219
    5. '()' → logprob: -7.506034851074219
    6. ')' → logprob: -7.631034851074219
    7. '  ' → logprob: -8.381034851074219
    8. 'read' → logprob: -8.381034851074219
    9. ' 
' → logprob: -8.756034851074219
    10. 'sys' → logprob: -8.756034851074219

Token 93: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6774603128433228
    2. '()' → logprob: -1.1774603128433228
    3. ' ' → logprob: -2.052460193634033
    4. ' =' → logprob: -3.802460193634033
    5. ')' → logprob: -4.927460193634033
    6. '=' → logprob: -5.177460193634033
    7. ' (' → logprob: -5.302460193634033
    8. '_' → logprob: -6.177460193634033
    9. '(
' → logprob: -6.302460193634033
    10. '\' → logprob: -6.427460193634033

Token 94: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.06320121139287949
    2. 'l' → logprob: -3.4382011890411377
    3. ' la' → logprob: -4.938201427459717
    4. 'import' → logprob: -5.563201427459717
    5. 'la' → logprob: -5.813201427459717
    6. ' readline' → logprob: -6.313201427459717
    7. ' l' → logprob: -6.438201427459717
    8. '()' → logprob: -6.688201427459717
    9. 'input' → logprob: -6.938201427459717
    10. '.readline' → logprob: -6.938201427459717

Token 95: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9913861751556396
    2. '()' → logprob: -1.2413861751556396
    3. '(' → logprob: -1.3663861751556396
    4. ')' → logprob: -3.1163861751556396
    5. ' )' → logprob: -5.616386413574219
    6. '  
' → logprob: -5.616386413574219
    7. '<|end|>' → logprob: -5.616386413574219
    8. '  ' → logprob: -5.741386413574219
    9. 'input' → logprob: -5.741386413574219
    10. ' ()' → logprob: -5.741386413574219

Token 96: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.40006014704704285
    2. ' ' → logprob: -1.7750601768493652
    3. 'ligne' → logprob: -2.6500601768493652
    4. '()' → logprob: -3.9000601768493652
    5. 'n' → logprob: -3.9000601768493652
    6. 'l' → logprob: -4.275060176849365
    7. ' seule' → logprob: -4.775060176849365
    8. ' line' → logprob: -4.900060176849365
    9. 'line' → logprob: -6.025060176849365
    10. ' input' → logprob: -6.275060176849365

Token 97: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10042307525873184
    2. '(' → logprob: -3.1004230976104736
    3. '(
' → logprob: -4.6004228591918945
    4. '\' → logprob: -4.8504228591918945
    5. ')' → logprob: -5.1004228591918945
    6. '\n' → logprob: -5.3504228591918945
    7. '
' → logprob: -5.4754228591918945
    8. '()
' → logprob: -5.9754228591918945
    9. 'import' → logprob: -6.1004228591918945
    10. ' ' → logprob: -6.3504228591918945

Token 98: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.33576881885528564
    2. 'input' → logprob: -2.085768699645996
    3. ' sys' → logprob: -2.960768699645996
    4. ' l' → logprob: -3.335768699645996
    5. 'sys' → logprob: -3.460768699645996
    6. 'l' → logprob: -4.210768699645996
    7. ' ' → logprob: -4.585768699645996
    8. 'entrée' → logprob: -5.335768699645996
    9. '=sys' → logprob: -5.585768699645996
    10. 'stdin' → logprob: -6.085768699645996

Token 99: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43515893816947937
    2. 'input' → logprob: -1.9351589679718018
    3. 'e' → logprob: -2.1851589679718018
    4. ''entrée' → logprob: -3.5601589679718018
    5. 'import' → logprob: -3.5601589679718018
    6. 'stdin' → logprob: -4.810158729553223
    7. 'es' → logprob: -5.060158729553223
    8. ''' → logprob: -5.685158729553223
    9. ' input' → logprob: -5.810158729553223
    10. 'entrée' → logprob: -6.060158729553223

Token 100: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.360032320022583
    2. '_' → logprob: -1.610032320022583
    3. '(' → logprob: -2.235032320022583
    4. '\' → logprob: -2.610032320022583
    5. '\n' → logprob: -2.735032320022583
    6. ')' → logprob: -2.985032320022583
    7. '
' → logprob: -2.985032320022583
    8. ' ' → logprob: -3.110032320022583
    9. '.' → logprob: -3.735032320022583
    10. '(
' → logprob: -4.110032081604004

Token 101: ' (' (ID: 350)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.3446674644947052
    2. 'read' → logprob: -2.469667434692383
    3. '
' → logprob: -2.594667434692383
    4. '.readline' → logprob: -2.844667434692383
    5. 'newline' → logprob: -3.719667434692383
    6. ')' → logprob: -4.344667434692383
    7. ' ' → logprob: -4.844667434692383
    8. '=' → logprob: -5.094667434692383
    9. '<|end|>' → logprob: -5.094667434692383
    10. '\n' → logprob: -5.219667434692383

Token 102: 'cl' (ID: 565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01632760651409626
    2. ' )' → logprob: -4.141327381134033
    3. '()' → logprob: -8.516327857971191
    4. 'sys' → logprob: -10.516327857971191
    5. '())' → logprob: -10.891327857971191
    6. '')' → logprob: -11.016327857971191
    7. ' ' → logprob: -11.266327857971191
    8. ')
' → logprob: -12.266327857971191
    9. '")' → logprob: -12.391327857971191
    10. 'input' → logprob: -13.766327857971191

Token 103: 'avier' (ID: 37096)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1930677592754364
    2. 'ient' → logprob: -2.193067789077759
    3. 'ass' → logprob: -4.19306755065918
    4. 'avier' → logprob: -4.31806755065918
    5. 'a' → logprob: -4.44306755065918
    6. 'e' → logprob: -5.94306755065918
    7. 'ai' → logprob: -5.94306755065918
    8. 'ie' → logprob: -5.94306755065918
    9. ')' → logprob: -6.19306755065918
    10. 'avi' → logprob: -6.19306755065918

Token 104: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015383612480945885
    2. ' )' → logprob: -8.875153541564941
    3. '')' → logprob: -11.875153541564941
    4. ')
' → logprob: -12.750153541564941
    5. '()' → logprob: -13.250153541564941
    6. '")' → logprob: -14.500153541564941
    7. '())' → logprob: -15.000153541564941
    8. '`)' → logprob: -15.000153541564941
    9. ').' → logprob: -15.125153541564941
    10. ' ' → logprob: -15.375153541564941

Token 105: ' red' (ID: 3592)
  Prédit: ' fichier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichier' → logprob: -0.4237644076347351
    2. ')' → logprob: -2.17376446723938
    3. 'f' → logprob: -3.04876446723938
    4. ' sys' → logprob: -3.17376446723938
    5. ' file' → logprob: -3.42376446723938
    6. ' )' → logprob: -3.42376446723938
    7. ' f' → logprob: -4.048764228820801
    8. 'sys' → logprob: -4.173764228820801
    9. ' ' → logprob: -4.548764228820801
    10. ' fichiers' → logprob: -4.673764228820801

Token 106: 'irection' (ID: 7746)
  Prédit: 'irection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irection' → logprob: -0.5771147012710571
    2. 'ir' → logprob: -0.9521147012710571
    3. 'i' → logprob: -3.9521145820617676
    4. 'irect' → logprob: -3.9521145820617676
    5. 'é' → logprob: -5.077114582061768
    6. 'irected' → logprob: -5.202114582061768
    7. 'ire' → logprob: -7.077114582061768
    8. 'irections' → logprob: -7.577114582061768
    9. '_' → logprob: -8.327115058898926
    10. 'imension' → logprob: -9.577115058898926

Token 107: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009832708165049553
    2. ' )' → logprob: -4.759832859039307
    3. '')' → logprob: -7.009832859039307
    4. '")' → logprob: -9.634832382202148
    5. ' de' → logprob: -9.759832382202148
    6. ').' → logprob: -10.259832382202148
    7. '`)' → logprob: -10.384832382202148
    8. ')
' → logprob: -11.009832382202148
    9. 'de' → logprob: -11.134832382202148
    10. ' ' → logprob: -11.384832382202148

Token 108: ' fichier' (ID: 69637)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.34569400548934937
    2. ' fichier' → logprob: -1.7206940650939941
    3. 'flux' → logprob: -2.470694065093994
    4. ' flux' → logprob: -4.220694065093994
    5. ')' → logprob: -5.970694065093994
    6. 'sys' → logprob: -6.095694065093994
    7. ' fichiers' → logprob: -6.220694065093994
    8. 'l' → logprob: -6.595694065093994
    9. 'file' → logprob: -6.595694065093994
    10. ' file' → logprob: -6.970694065093994

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004618896055035293
    2. ' )' → logprob: -7.750462055206299
    3. ')
' → logprob: -10.62546157836914
    4. '')' → logprob: -12.50046157836914
    5. '")' → logprob: -14.50046157836914
    6. ')

' → logprob: -14.87546157836914
    7. '))' → logprob: -15.12546157836914
    8. ')
' → logprob: -15.37546157836914
    9. ' ' → logprob: -15.50046157836914
    10. '`)' → logprob: -15.62546157836914

Token 110: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011246228590607643
    2. ' readline' → logprob: -4.511246204376221
    3. '
' → logprob: -9.511246681213379
    4. ' read' → logprob: -10.386246681213379
    5. '.readline' → logprob: -10.386246681213379
    6. ' 
' → logprob: -10.636246681213379
    7. 'newline' → logprob: -11.386246681213379
    8. '_read' → logprob: -11.886246681213379
    9. ' =' → logprob: -12.386246681213379
    10. 'r' → logprob: -13.011246681213379

Token 111: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001249925117008388
    2. 'l' → logprob: -9.37512493133545
    3. 'lin' → logprob: -10.25012493133545
    4. 'li' → logprob: -12.50012493133545
    5. '_line' → logprob: -14.25012493133545
    6. 'lime' → logprob: -15.50012493133545
    7. 'lines' → logprob: -17.250125885009766
    8. 'ine' → logprob: -17.375125885009766
    9. ' line' → logprob: -17.375125885009766
    10. 'lib' → logprob: -17.875125885009766

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693262100219727
    2. '=' → logprob: -2.1269326210021973
    3. ' ' → logprob: -13.751932144165039
    4. '.' → logprob: -13.876932144165039
    5. '=sys' → logprob: -14.001932144165039
    6. ' =
' → logprob: -14.876932144165039
    7. '.=' → logprob: -15.376932144165039
    8. ')' → logprob: -15.376932144165039
    9. '  ' → logprob: -15.626932144165039
    10. ' ' → logprob: -16.25193214416504

Token 113: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.061980459839105606
    2. 'sys' → logprob: -2.8119804859161377
    3. '	sys' → logprob: -11.436980247497559
    4. '=sys' → logprob: -14.061980247497559
    5. ' ' → logprob: -14.311980247497559
    6. '(sys' → logprob: -14.436980247497559
    7. ' ' → logprob: -16.811981201171875
    8. '/sys' → logprob: -17.686981201171875
    9. '_sys' → logprob: -18.061981201171875
    10. '.sys' → logprob: -18.061981201171875

Token 114: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0023379470221698284
    2. '.' → logprob: -6.25233793258667
    3. '.stdout' → logprob: -8.002338409423828
    4. '.readline' → logprob: -10.002338409423828
    5. ' .' → logprob: -11.127338409423828
    6. '.std' → logprob: -12.002338409423828
    7. '.stderr' → logprob: -12.377338409423828
    8. '.argv' → logprob: -13.627338409423828
    9. '.setdefault' → logprob: -14.127338409423828
    10. '.st' → logprob: -14.127338409423828

Token 115: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009410003549419343
    2. '.' → logprob: -7.000940799713135
    3. '.read' → logprob: -10.500941276550293
    4. '.readlines' → logprob: -13.625941276550293
    5. ' .' → logprob: -14.375941276550293
    6. ' readline' → logprob: -17.125940322875977
    7. '.stdin' → logprob: -17.500940322875977
    8. '.write' → logprob: -17.750940322875977
    9. '.
' → logprob: -18.625940322875977
    10. '.reader' → logprob: -19.250940322875977

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014010473154485226
    2. '\n' → logprob: -5.139010429382324
    3. '

' → logprob: -5.389010429382324
    4. '
' → logprob: -6.264010429382324
    5. '()' → logprob: -8.014010429382324
    6. '


' → logprob: -8.264010429382324
    7. ' 
' → logprob: -8.389010429382324
    8. '' → logprob: -8.764010429382324
    9. ' ' → logprob: -9.389010429382324
    10. '(
' → logprob: -9.389010429382324

Token 117: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10771973431110382
    2. '

' → logprob: -2.357719659805298
    3. 'def' → logprob: -6.357719898223877
    4. '
' → logprob: -6.607719898223877
    5. '\n' → logprob: -6.732719898223877
    6. '#' → logprob: -6.982719898223877
    7. '


' → logprob: -7.607719898223877
    8. '' → logprob: -7.732719898223877
    9. 'n' → logprob: -8.232719421386719
    10. '<|end|>' → logprob: -8.232719421386719

Token 118: ' Affect' (ID: 190087)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06666739284992218
    2. 'n' → logprob: -2.816667318344116
    3. '#' → logprob: -5.691667556762695
    4. 'class' → logprob: -7.691667556762695
    5. 'for' → logprob: -8.816667556762695
    6. 't' → logprob: -9.066667556762695
    7. 'input' → logprob: -9.316667556762695
    8. ' def' → logprob: -9.566667556762695
    9. ' n' → logprob: -9.691667556762695
    10. 'N' → logprob: -9.816667556762695

Token 119: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08209206908941269
    2. 'ue' → logprob: -2.582092046737671
    3. 'er' → logprob: -5.95709228515625
    4. 'ion' → logprob: -7.70709228515625
    5. '#' → logprob: -10.08209228515625
    6. 'ation' → logprob: -10.70709228515625
    7. 'te' → logprob: -11.45709228515625
    8. 'era' → logprob: -11.58209228515625
    9. 're' → logprob: -11.70709228515625
    10. 'eur' → logprob: -11.70709228515625

Token 120: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7338883876800537
    2. ' ' → logprob: -0.8588883876800537
    3. ' readline' → logprob: -4.233888626098633
    4. '()' → logprob: -4.358888626098633
    5. '=' → logprob: -4.858888626098633
    6. '_' → logprob: -5.108888626098633
    7. 'read' → logprob: -5.108888626098633
    8. ' sys' → logprob: -5.108888626098633
    9. 's' → logprob: -5.358888626098633
    10. ' une' → logprob: -5.358888626098633

Token 121: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43088498711586
    2. ' input' → logprob: -1.1808849573135376
    3. 'print' → logprob: -4.305884838104248
    4. ' sys' → logprob: -4.680884838104248
    5. 'sys' → logprob: -4.930884838104248
    6. 'int' → logprob: -5.680884838104248
    7. ' print' → logprob: -5.930884838104248
    8. 'range' → logprob: -6.180884838104248
    9. 'write' → logprob: -6.305884838104248
    10. 'read' → logprob: -7.430884838104248

Token 122: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07491043955087662
    2. 'sys' → logprob: -4.074910640716553
    3. 'write' → logprob: -4.199910640716553
    4. 'int' → logprob: -4.449910640716553
    5. 'print' → logprob: -4.949910640716553
    6. 'read' → logprob: -4.949910640716553
    7. ' input' → logprob: -5.449910640716553
    8. 'stdout' → logprob: -5.574910640716553
    9. 'range' → logprob: -5.699910640716553
    10. 'stdin' → logprob: -7.324910640716553

Token 123: ''' (ID: 6)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004951290902681649
    2. '_line' → logprob: -8.125494956970215
    3. '=' → logprob: -9.375494956970215
    4. ' =' → logprob: -9.375494956970215
    5. 'ligne' → logprob: -12.000494956970215
    6. '_' → logprob: -12.250494956970215
    7. 'le' → logprob: -12.375494956970215
    8. 'lin' → logprob: -12.375494956970215
    9. 'ine' → logprob: -12.625494956970215
    10. 'l' → logprob: -13.625494956970215

Token 124: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058608390390872955
    2. '=' → logprob: -3.308608293533325
    3. ' ' → logprob: -3.933608293533325
    4. '=sys' → logprob: -8.183608055114746
    5. '(' → logprob: -8.683608055114746
    6. '<|end|>' → logprob: -9.058608055114746
    7. 'read' → logprob: -9.308608055114746
    8. '  ' → logprob: -10.808608055114746
    9. ' (' → logprob: -11.058608055114746
    10. '(sys' → logprob: -11.058608055114746

Token 125: ' méthode' (ID: 71490)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2312697321176529
    2. 'sys' → logprob: -1.6062697172164917
    3. 'read' → logprob: -5.856269836425781
    4. '=sys' → logprob: -6.731269836425781
    5. ' readline' → logprob: -7.356269836425781
    6. ' read' → logprob: -7.356269836425781
    7. ' ' → logprob: -8.106269836425781
    8. ' stdin' → logprob: -10.856269836425781
    9. 's' → logprob: -10.856269836425781
    10. '(sys' → logprob: -10.981269836425781

Token 126: ' '' (ID: 461)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11399675160646439
    2. 'sys' → logprob: -2.238996744155884
    3. '=sys' → logprob: -7.238996982574463
    4. '(sys' → logprob: -8.488996505737305
    5. 'read' → logprob: -9.238996505737305
    6. '	sys' → logprob: -10.113996505737305
    7. ' readline' → logprob: -10.113996505737305
    8. ' ' → logprob: -10.363996505737305
    9. ' =' → logprob: -11.613996505737305
    10. '=' → logprob: -12.238996505737305

Token 127: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.038282688707113266
    2. ' sys' → logprob: -3.288282632827759
    3. 'read' → logprob: -9.53828239440918
    4. 'stdin' → logprob: -9.66328239440918
    5. 'open' → logprob: -10.28828239440918
    6. '=sys' → logprob: -10.66328239440918
    7. '	sys' → logprob: -10.78828239440918
    8. '(sys' → logprob: -11.41328239440918
    9. 'input' → logprob: -11.78828239440918
    10. ' open' → logprob: -12.91328239440918

Token 128: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.747814349073451e-05
    2. '.stdout' → logprob: -11.500017166137695
    3. 'stdin' → logprob: -11.875017166137695
    4. ' stdin' → logprob: -14.750017166137695
    5. '.std' → logprob: -18.000017166137695
    6. '.' → logprob: -18.250017166137695
    7. '.stderr' → logprob: -18.375017166137695
    8. ' .' → logprob: -20.000017166137695
    9. '(stdin' → logprob: -20.375017166137695
    10. '.argv' → logprob: -21.125017166137695

Token 129: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.008889438584446907
    2. '.readline' → logprob: -4.758889675140381
    3. 'read' → logprob: -8.383889198303223
    4. '.' → logprob: -10.133889198303223
    5. '.readlines' → logprob: -12.133889198303223
    6. ' .' → logprob: -14.383889198303223
    7. ' read' → logprob: -15.008889198303223
    8. '.write' → logprob: -16.25889015197754
    9. '	read' → logprob: -16.25889015197754
    10. '.Read' → logprob: -16.63389015197754

Token 130: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07009204477071762
    2. '.readline' → logprob: -2.820091962814331
    3. 'line' → logprob: -5.44509220123291
    4. '.read' → logprob: -6.44509220123291
    5. 'read' → logprob: -7.44509220123291
    6. '')' → logprob: -7.69509220123291
    7. ')'' → logprob: -7.94509220123291
    8. ''''' → logprob: -8.32009220123291
    9. '()' → logprob: -8.44509220123291
    10. ')' → logprob: -9.69509220123291

Token 131: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.262481689453125
    2. '<|end|>' → logprob: -1.762481689453125
    3. ' used' → logprob: -3.637481689453125
    4. ' =' → logprob: -4.762481689453125
    5. '<|end|>' → logprob: -5.012481689453125
    6. ' utilisée' → logprob: -5.637481689453125
    7. '=sys' → logprob: -5.637481689453125
    8. '=' → logprob: -6.012481689453125
    9. ' 
' → logprob: -6.387481689453125
    10. 'used' → logprob: -6.762481689453125

Token 132: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.0007675791857764125
    2. 'l' → logprob: -7.875767707824707
    3. ' read' → logprob: -8.375767707824707
    4. 'read' → logprob: -9.375767707824707
    5. 'sys' → logprob: -11.375767707824707
    6. 'Lire' → logprob: -11.625767707824707
    7. 're' → logprob: -11.625767707824707
    8. 'import' → logprob: -12.250767707824707
    9. ' l' → logprob: -12.375767707824707
    10. ' récupérer' → logprob: -12.375767707824707

Token 134: ' tout' (ID: 5501)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5889073610305786
    2. '(sys' → logprob: -2.088907241821289
    3. 'sys' → logprob: -2.088907241821289
    4. ' sys' → logprob: -2.338907241821289
    5. '(' → logprob: -3.088907241821289
    6. '<|end|>' → logprob: -3.838907241821289
    7. 'l' → logprob: -4.463907241821289
    8. 's' → logprob: -5.713907241821289
    9. '=sys' → logprob: -5.838907241821289
    10. ' ' → logprob: -5.838907241821289

Token 135: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004660572856664658
    2. 'l' → logprob: -6.754660606384277
    3. '<|end|>' → logprob: -6.879660606384277
    4. ' l' → logprob: -7.754660606384277
    5. '(' → logprob: -7.754660606384277
    6. ' ' → logprob: -7.879660606384277
    7. ' ()' → logprob: -8.379660606384277
    8. 'a' → logprob: -8.504660606384277
    9. '_' → logprob: -8.754660606384277
    10. '(sys' → logprob: -9.004660606384277

Token 136: ' flux' (ID: 36547)
  Prédit: ' contenu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contenu' → logprob: -0.3873525857925415
    2. ' input' → logprob: -2.512352466583252
    3. ' sys' → logprob: -2.762352466583252
    4. 'conten' → logprob: -3.012352466583252
    5. 'ent' → logprob: -3.512352466583252
    6. ' code' → logprob: -3.762352466583252
    7. 'input' → logprob: -4.137352466583252
    8. 'sys' → logprob: -4.637352466583252
    9. ' data' → logprob: -4.762352466583252
    10. ' texte' → logprob: -5.012352466583252

Token 137: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.225317120552063
    2. '_' → logprob: -1.850317120552063
    3. ' complet' → logprob: -1.850317120552063
    4. '<|end|>' → logprob: -2.1003170013427734
    5. '(' → logprob: -2.2253170013427734
    6. ' ' → logprob: -2.7253170013427734
    7. '(sys' → logprob: -4.225317001342773
    8. ' complète' → logprob: -4.225317001342773
    9. ' (' → logprob: -5.100317001342773
    10. ' de' → logprob: -5.100317001342773

Token 138: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1274994611740112
    2. 'l' → logprob: -1.2524994611740112
    3. ' sys' → logprob: -1.3774994611740112
    4. ' l' → logprob: -2.127499580383301
    5. '=sys' → logprob: -4.502499580383301
    6. '(sys' → logprob: -6.127499580383301
    7. 'stdin' → logprob: -6.377499580383301
    8. ' stdin' → logprob: -6.752499580383301
    9. 's' → logprob: -7.502499580383301
    10. 'input' → logprob: -7.877499580383301

Token 139: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6630255579948425
    2. 'entrée' → logprob: -1.1630256175994873
    3. 'stdin' → logprob: -2.6630256175994873
    4. 'e' → logprob: -3.1630256175994873
    5. 'input' → logprob: -3.5380256175994873
    6. 'flux' → logprob: -4.788025379180908
    7. '’entrée' → logprob: -5.163025379180908
    8. 'a' → logprob: -5.663025379180908
    9. ' stdin' → logprob: -5.788025379180908
    10. 'ent' → logprob: -5.913025379180908

Token 140: ' standard' (ID: 7024)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6881986856460571
    2. ' =' → logprob: -0.8131986856460571
    3. 'read' → logprob: -2.9381985664367676
    4. ' read' → logprob: -7.688198566436768
    5. '_read' → logprob: -8.688199043273926
    6. '<|end|>' → logprob: -8.688199043273926
    7. '(read' → logprob: -9.688199043273926
    8. ',' → logprob: -10.188199043273926
    9. ' ' → logprob: -10.188199043273926
    10. '.read' → logprob: -10.188199043273926

Token 142: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8232371211051941
    2. 'une' → logprob: -1.0732371807098389
    3. ' bloc' → logprob: -2.823237180709839
    4. 'ent' → logprob: -3.198237180709839
    5. ' entier' → logprob: -3.573237180709839
    6. 'bloc' → logprob: -3.573237180709839
    7. ' totalité' → logprob: -3.948237180709839
    8. 'un' → logprob: -4.32323694229126
    9. ' un' → logprob: -5.07323694229126
    10. '```' → logprob: -5.07323694229126

Token 143: ' seule' (ID: 41983)
  Prédit: ' fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -1.0740540027618408
    2. 'fois' → logprob: -1.1990540027618408
    3. ' seule' → logprob: -2.199054002761841
    4. 'se' → logprob: -2.574054002761841
    5. ' bloc' → logprob: -2.949054002761841
    6. 'bloc' → logprob: -3.324054002761841
    7. '```' → logprob: -3.449054002761841
    8. ' seul' → logprob: -4.074053764343262
    9. ' ' → logprob: -4.574053764343262
    10. 'une' → logprob: -5.324053764343262

Token 144: ' chaîne' (ID: 89288)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fois' → logprob: -1.0241622924804688
    2. ' ' → logprob: -1.1491622924804688
    3. ' fois' → logprob: -1.2741622924804688
    4. ' ligne' → logprob: -4.149162292480469
    5. 'ligne' → logprob: -4.649162292480469
    6. 'lecture' → logprob: -4.899162292480469
    7. ' lecture' → logprob: -5.649162292480469
    8. '()' → logprob: -6.399162292480469
    9. 'entrée' → logprob: -7.274162292480469
    10. '```' → logprob: -7.399162292480469

Token 145: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9406481385231018
    2. 'read' → logprob: -1.065648078918457
    3. ' =' → logprob: -1.815648078918457
    4. '<|end|>' → logprob: -2.690648078918457
    5. '()' → logprob: -4.815648078918457
    6. '(' → logprob: -5.440648078918457
    7. '(read' → logprob: -5.565648078918457
    8. '_' → logprob: -5.815648078918457
    9. '
' → logprob: -5.815648078918457
    10. '_read' → logprob: -6.065648078918457

Token 146: ' caractères' (ID: 183106)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7284898161888123
    2. 'une' → logprob: -1.978489875793457
    3. 'once' → logprob: -2.478489875793457
    4. '```' → logprob: -2.728489875793457
    5. 'texte' → logprob: -2.978489875793457
    6. ' once' → logprob: -2.978489875793457
    7. ' une' → logprob: -3.603489875793457
    8. ' ' → logprob: -3.603489875793457
    9. 'car' → logprob: -4.603489875793457
    10. ' caractères' → logprob: -4.853489875793457

Token 147: '
' (ID: 198)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.16388262808322906
    2. '=' → logprob: -2.5388827323913574
    3. ' =' → logprob: -3.0388827323913574
    4. '<|end|>' → logprob: -4.163882732391357
    5. ' ' → logprob: -5.913882732391357
    6. '
' → logprob: -6.163882732391357
    7. ' read' → logprob: -6.913882732391357
    8. '  
' → logprob: -7.163882732391357
    9. ' 
' → logprob: -7.538882732391357
    10. '_read' → logprob: -7.913882732391357

Token 148: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01114355307072401
    2. ' read' → logprob: -4.511143684387207
    3. ' ' → logprob: -10.386143684387207
    4. '<|end|>' → logprob: -11.136143684387207
    5. 'rea' → logprob: -11.261143684387207
    6. ' 
' → logprob: -11.511143684387207
    7. '	read' → logprob: -12.136143684387207
    8. '_read' → logprob: -12.136143684387207
    9. 'r' → logprob: -12.511143684387207
    10. '
' → logprob: -12.636143684387207

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3189030885696411
    2. ' =' → logprob: -1.3189030885696411
    3. 'line' → logprob: -5.193902969360352
    4. '=line' → logprob: -10.318902969360352
    5. '=sys' → logprob: -10.568902969360352
    6. '_' → logprob: -12.943902969360352
    7. '_line' → logprob: -13.193902969360352
    8. ' ' → logprob: -13.693902969360352
    9. 'ad' → logprob: -13.818902969360352
    10. 'lin' → logprob: -13.818902969360352

Token 150: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04858850687742233
    2. 'sys' → logprob: -3.048588514328003
    3. '=sys' → logprob: -14.298588752746582
    4. '	sys' → logprob: -14.923588752746582
    5. '(sys' → logprob: -15.548588752746582
    6. ' ' → logprob: -17.423587799072266
    7. '.sys' → logprob: -17.923587799072266
    8. '_sys' → logprob: -18.423587799072266
    9. '/sys' → logprob: -18.923587799072266
    10. 'Sys' → logprob: -20.298587799072266

Token 151: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00021879478299524635
    2. '.stdout' → logprob: -8.875218391418457
    3. '.' → logprob: -9.500218391418457
    4. '.stderr' → logprob: -13.375218391418457
    5. '.std' → logprob: -13.500218391418457
    6. 'stdin' → logprob: -14.250218391418457
    7. '.readline' → logprob: -15.375218391418457
    8. '.argv' → logprob: -16.250219345092773
    9. ' stdin' → logprob: -16.500219345092773
    10. ' .' → logprob: -16.500219345092773

Token 152: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.017302516847848892
    2. '.' → logprob: -4.267302513122559
    3. '.readline' → logprob: -5.767302513122559
    4. '.readlines' → logprob: -12.767302513122559
    5. '.write' → logprob: -14.142302513122559
    6. 'read' → logprob: -14.267302513122559
    7. ' .' → logprob: -14.392302513122559
    8. '.Read' → logprob: -14.642302513122559
    9. '.stdin' → logprob: -14.767302513122559
    10. '.
' → logprob: -16.392303466796875

Token 153: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03342794254422188
    2. '

' → logprob: -4.658427715301514
    3. '\n' → logprob: -5.033427715301514
    4. '<|end|>' → logprob: -5.033427715301514
    5. ' ' → logprob: -6.033427715301514
    6. '()' → logprob: -6.158427715301514
    7. 'newline' → logprob: -6.908427715301514
    8. '#' → logprob: -7.283427715301514
    9. '' → logprob: -7.283427715301514
    10. ')' → logprob: -7.408427715301514

Token 154: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08989261835813522
    2. '

' → logprob: -3.089892625808716
    3. '#' → logprob: -3.714892625808716
    4. '\n' → logprob: -4.714892387390137
    5. 'def' → logprob: -5.839892387390137
    6. 'import' → logprob: -7.089892387390137
    7. '


' → logprob: -7.589892387390137
    8. '' → logprob: -7.589892387390137
    9. '<|end|>' → logprob: -7.839892387390137
    10. '\' → logprob: -7.964892387390137

Token 155: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010620933957397938
    2. '#' → logprob: -5.010621070861816
    3. 'n' → logprob: -6.260621070861816
    4. 'class' → logprob: -7.010621070861816
    5. 'import' → logprob: -7.385621070861816
    6. 'from' → logprob: -8.885621070861816
    7. ' def' → logprob: -9.010621070861816
    8. 'data' → logprob: -10.010621070861816
    9. 'input' → logprob: -10.260621070861816
    10. 'd' → logprob: -10.385621070861816

Token 156: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6907952427864075
    2. '(' → logprob: -1.0657951831817627
    3. '=' → logprob: -3.0657951831817627
    4. '_' → logprob: -3.0657951831817627
    5. ' =' → logprob: -3.0657951831817627
    6. 's' → logprob: -5.190795421600342
    7. '_line' → logprob: -5.315795421600342
    8. 'line' → logprob: -6.190795421600342
    9. ',' → logprob: -7.815795421600342
    10. '_input' → logprob: -8.190794944763184

Token 157: ' ent' (ID: 1121)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.8025895357131958
    2. ' =' → logprob: -2.0525894165039062
    3. ' données' → logprob: -2.0525894165039062
    4. 'input' → logprob: -2.5525894165039062
    5. ' lignes' → logprob: -2.6775894165039062
    6. ' inputs' → logprob: -2.8025894165039062
    7. 'data' → logprob: -3.1775894165039062
    8. ' data' → logprob: -3.1775894165039062
    9. ' nombres' → logprob: -3.3025894165039062
    10. '()' → logprob: -3.4275894165039062

Token 158: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.14891353249549866
    2. 'ières' → logprob: -2.273913621902466
    3. 'r' → logprob: -4.148913383483887
    4. 'ier' → logprob: -5.398913383483887
    5. 'rée' → logprob: -5.523913383483887
    6. '#' → logprob: -6.023913383483887
    7. 'rees' → logprob: -6.148913383483887
    8. 'ires' → logprob: -6.148913383483887
    9. 'ière' → logprob: -6.398913383483887
    10. 'i' → logprob: -7.023913383483887

Token 159: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6374561190605164
    2. '(' → logprob: -0.7624561190605164
    3. '(
' → logprob: -6.137455940246582
    4. 's' → logprob: -7.137455940246582
    5. '_' → logprob: -7.512455940246582
    6. 'n' → logprob: -7.637455940246582
    7. ',' → logprob: -8.387455940246582
    8. '()
' → logprob: -9.387455940246582
    9. ' ()' → logprob: -9.387455940246582
    10. '#' → logprob: -9.762455940246582

Token 160: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.5489015579223633
    2. 'part' → logprob: -0.9239015579223633
    3. 'su' → logprob: -5.423901557922363
    4. 'n' → logprob: -5.673901557922363
    5. '()' → logprob: -5.798901557922363
    6. 'la' → logprob: -6.048901557922363
    7. 'l' → logprob: -6.048901557922363
    8. 'p' → logprob: -7.173901557922363
    9. 'venir' → logprob: -7.298901557922363
    10. 'sup' → logprob: -7.548901557922363

Token 161: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20927616953849792
    2. ' de' → logprob: -2.4592761993408203
    3. ' d' → logprob: -3.3342761993408203
    4. ' des' → logprob: -3.4592761993408203
    5. '()' → logprob: -4.08427619934082
    6. ' la' → logprob: -5.83427619934082
    7. '_' → logprob: -6.08427619934082
    8. 'de' → logprob: -6.20927619934082
    9. ' l' → logprob: -6.45927619934082
    10. ' sys' → logprob: -6.45927619934082

Token 162: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08532176166772842
    2. ' l' → logprob: -3.3353216648101807
    3. 'la' → logprob: -4.46032190322876
    4. 'sys' → logprob: -4.58532190322876
    5. 'stdin' → logprob: -5.08532190322876
    6. 'input' → logprob: -5.21032190322876
    7. ' la' → logprob: -5.83532190322876
    8. ' stdin' → logprob: -5.96032190322876
    9. ' input' → logprob: -5.96032190322876
    10. ' sys' → logprob: -6.33532190322876

Token 163: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.35044580698013306
    2. ' stdin' → logprob: -2.7254457473754883
    3. 'entrée' → logprob: -2.8504457473754883
    4. 'input' → logprob: -2.9754457473754883
    5. ' input' → logprob: -2.9754457473754883
    6. ''entrée' → logprob: -3.8504457473754883
    7. 'sys' → logprob: -4.475445747375488
    8. 'e' → logprob: -4.725445747375488
    9. 'l' → logprob: -5.100445747375488
    10. ' sys' → logprob: -5.475445747375488

Token 164: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5860452055931091
    2. '()' → logprob: -0.8360452055931091
    3. ' =' → logprob: -6.086045265197754
    4. '(
' → logprob: -6.461045265197754
    5. 's' → logprob: -6.961045265197754
    6. '=' → logprob: -6.961045265197754
    7. ',' → logprob: -7.211045265197754
    8. '_' → logprob: -7.711045265197754
    9. 'import' → logprob: -7.711045265197754
    10. ' (' → logprob: -7.711045265197754

Token 165: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7182708978652954
    2. '()' → logprob: -0.7182708978652954
    3. '(
' → logprob: -4.843270778656006
    4. 'n' → logprob: -4.968270778656006
    5. ',' → logprob: -6.718270778656006
    6. 'import' → logprob: -6.843270778656006
    7. 'def' → logprob: -6.968270778656006
    8. '()
' → logprob: -6.968270778656006
    9. '#' → logprob: -6.968270778656006
    10. '
' → logprob: -7.218270778656006

Token 166: ' conversion' (ID: 22165)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5449562668800354
    2. ' split' → logprob: -2.5449562072753906
    3. 'split' → logprob: -2.7949562072753906
    4. ' =' → logprob: -3.4199562072753906
    5. ' conversion' → logprob: -3.6699562072753906
    6. ' l' → logprob: -3.7949562072753906
    7. '#' → logprob: -3.7949562072753906
    8. '_' → logprob: -3.7949562072753906
    9. ' traitement' → logprob: -3.7949562072753906
    10. ' ' → logprob: -4.419956207275391

Token 167: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004275938495993614
    2. '_' → logprob: -6.629275798797607
    3. ' (' → logprob: -6.879275798797607
    4. ' ' → logprob: -7.879275798797607
    5. '()' → logprob: -8.004276275634766
    6. ' =' → logprob: -8.254276275634766
    7. ',' → logprob: -8.629276275634766
    8. '[' → logprob: -8.754276275634766
    9. 's' → logprob: -8.879276275634766
    10. '('' → logprob: -8.879276275634766

Token 168: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9765767455101013
    2. 'list' → logprob: -1.226576805114746
    3. '[]' → logprob: -2.351576805114746
    4. ' liste' → logprob: -2.351576805114746
    5. ' list' → logprob: -2.851576805114746
    6. ' une' → logprob: -3.476576805114746
    7. ' la' → logprob: -4.851576805114746
    8. '_list' → logprob: -4.851576805114746
    9. 'lst' → logprob: -4.976576805114746
    10. 'l' → logprob: -5.101576805114746

Token 169: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.509506344795227
    2. '[' → logprob: -2.3845062255859375
    3. 's' → logprob: -2.6345062255859375
    4. ' =' → logprob: -3.1345062255859375
    5. '_' → logprob: -3.2595062255859375
    6. 'import' → logprob: -3.6345062255859375
    7. 'data' → logprob: -3.8845062255859375
    8. '()' → logprob: -4.2595062255859375
    9. ' (' → logprob: -4.6345062255859375
    10. 'lines' → logprob: -4.6345062255859375

Token 170: ''ent' (ID: 53422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8098617196083069
    2. 'int' → logprob: -1.434861660003662
    3. 'ent' → logprob: -2.434861660003662
    4. 'ints' → logprob: -2.809861660003662
    5. ' integers' → logprob: -2.934861660003662
    6. '_ent' → logprob: -3.434861660003662
    7. 'inte' → logprob: -3.684861660003662
    8. '_int' → logprob: -3.934861660003662
    9. 'e' → logprob: -4.934861660003662
    10. ' int' → logprob: -5.184861660003662

Token 171: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.07162602990865707
    2. 'ières' → logprob: -2.8216259479522705
    3. 'i' → logprob: -4.82162618637085
    4. 't' → logprob: -7.07162618637085
    5. '```' → logprob: -8.321625709533691
    6. 'ière' → logprob: -9.321625709533691
    7. 'ires' → logprob: -9.571625709533691
    8. 'ié' → logprob: -10.196625709533691
    9. 'ti' → logprob: -10.446625709533691
    10. '#' → logprob: -10.821625709533691

Token 172: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7898480892181396
    2. '(' → logprob: -1.1648480892181396
    3. 's' → logprob: -1.9148480892181396
    4. 'data' → logprob: -4.164848327636719
    5. '(
' → logprob: -4.539848327636719
    6. ' =' → logprob: -4.789848327636719
    7. '_' → logprob: -5.164848327636719
    8. ' ' → logprob: -5.414848327636719
    9. '[
' → logprob: -5.539848327636719
    10. ' (' → logprob: -5.664848327636719

Token 173: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5777736902236938
    2. 'data' → logprob: -1.0777736902236938
    3. 'nums' → logprob: -3.0777735710144043
    4. 'n' → logprob: -3.2027735710144043
    5. 'ints' → logprob: -5.327773571014404
    6. 'lst' → logprob: -6.327773571014404
    7. 'ent' → logprob: -6.577773571014404
    8. 'a' → logprob: -7.077773571014404
    9. 'arr' → logprob: -7.577773571014404
    10. 'def' → logprob: -8.327774047851562

Token 174: ' La' (ID: 3038)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.815831184387207
    2. 'numbers' → logprob: -1.315831184387207
    3. 'n' → logprob: -2.190831184387207
    4. ' data' → logprob: -3.190831184387207
    5. 'nums' → logprob: -3.315831184387207
    6. ' numbers' → logprob: -3.690831184387207
    7. 'lst' → logprob: -3.940831184387207
    8. 'ent' → logprob: -4.065831184387207
    9. 'l' → logprob: -5.440831184387207
    10. 'a' → logprob: -5.440831184387207

Token 175: ' première' (ID: 23423)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.5355516076087952
    2. 'n' → logprob: -2.1605515480041504
    3. 'data' → logprob: -2.4105515480041504
    4. ' n' → logprob: -3.1605515480041504
    5. ' nombres' → logprob: -3.4105515480041504
    6. ' line' → logprob: -3.5355515480041504
    7. 'ent' → logprob: -4.16055154800415
    8. ' numbers' → logprob: -4.53555154800415
    9. ' lst' → logprob: -4.91055154800415
    10. ' input' → logprob: -5.03555154800415

Token 176: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12709639966487885
    2. '_l' → logprob: -2.25209641456604
    3. '_line' → logprob: -5.127096176147461
    4. ' _' → logprob: -6.002096176147461
    5. 'ligne' → logprob: -6.377096176147461
    6. 'l' → logprob: -7.002096176147461
    7. ' =' → logprob: -7.127096176147461
    8. ' ligne' → logprob: -7.252096176147461
    9. '_li' → logprob: -7.627096176147461
    10. '_ent' → logprob: -8.252096176147461

Token 177: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0642630010843277
    2. '=' → logprob: -3.189263105392456
    3. '_' → logprob: -4.689262866973877
    4. ' ' → logprob: -5.439262866973877
    5. '=input' → logprob: -6.189262866973877
    6. '_input' → logprob: -6.439262866973877
    7. '_line' → logprob: -6.564262866973877
    8. ',' → logprob: -7.689262866973877
    9. '_l' → logprob: -8.189263343811035
    10. 'input' → logprob: -8.564263343811035

Token 178: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4575951397418976
    2. ' au' → logprob: -1.0825951099395752
    3. 'au' → logprob: -4.582595348358154
    4. ' a' → logprob: -5.082595348358154
    5. ' aux' → logprob: -5.082595348358154
    6. ' ' → logprob: -6.082595348358154
    7. 'à' → logprob: -6.332595348358154
    8. ' =' → logprob: -6.957595348358154
    9. '=' → logprob: -7.832595348358154
    10. ' to' → logprob: -8.707594871520996

Token 179: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7689608335494995
    2. ' la' → logprob: -1.3939608335494995
    3. 'n' → logprob: -2.018960952758789
    4. ' le' → logprob: -3.268960952758789
    5. 'la' → logprob: -3.643960952758789
    6. 'len' → logprob: -3.643960952758789
    7. 'int' → logprob: -4.018960952758789
    8. 'le' → logprob: -4.518960952758789
    9. 'nombre' → logprob: -4.893960952758789
    10. 'l' → logprob: -5.143960952758789

Token 180: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1109299585223198
    2. 'int' → logprob: -2.7359299659729004
    3. ' n' → logprob: -3.4859299659729004
    4. 'l' → logprob: -6.1109299659729
    5. 'nombre' → logprob: -6.2359299659729
    6. 'input' → logprob: -6.7359299659729
    7. 'len' → logprob: -7.4859299659729
    8. 'la' → logprob: -7.4859299659729
    9. 'read' → logprob: -7.6109299659729
    10. 'le' → logprob: -7.7359299659729

Token 181: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9749928712844849
    2. ' =' → logprob: -1.0999928712844849
    3. ')' → logprob: -1.4749928712844849
    4. ' ,' → logprob: -3.8499927520751953
    5. '=' → logprob: -4.349992752075195
    6. ' ' → logprob: -4.349992752075195
    7. ' )' → logprob: -4.599992752075195
    8. '_' → logprob: -7.349992752075195
    9. ',n' → logprob: -7.849992752075195
    10. '  ' → logprob: -8.224992752075195

Token 182: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9450393319129944
    2. ' n' → logprob: -0.9450393319129944
    3. ' ' → logprob: -2.3200392723083496
    4. ' =' → logprob: -2.5700392723083496
    5. '_' → logprob: -4.19503927230835
    6. ' la' → logprob: -4.44503927230835
    7. '=' → logprob: -5.32003927230835
    8. ' _' → logprob: -5.44503927230835
    9. ' *' → logprob: -6.19503927230835
    10. '*' → logprob: -6.57003927230835

Token 183: ' suivantes' (ID: 106173)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -1.0744882822036743
    2. ' suivantes' → logprob: -1.1994882822036743
    3. ' suivant' → logprob: -2.4494881629943848
    4. ' ' → logprob: -2.6994881629943848
    5. ' nombres' → logprob: -2.6994881629943848
    6. ' suivante' → logprob: -3.3244881629943848
    7. ' autres' → logprob: -3.5744881629943848
    8. ' éléments' → logprob: -3.9494881629943848
    9. ' valeurs' → logprob: -4.324488162994385
    10. 'n' → logprob: -4.699488162994385

Token 184: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38824060559272766
    2. ' =' → logprob: -1.1382405757904053
    3. 's' → logprob: -7.263240814208984
    4. ',' → logprob: -8.013240814208984
    5. ' ' → logprob: -9.388240814208984
    6. '_' → logprob: -10.138240814208984
    7. 'ont' → logprob: -10.263240814208984
    8. ' sont' → logprob: -10.513240814208984
    9. ' ' → logprob: -10.763240814208984
    10. '.' → logprob: -10.888240814208984

Token 185: 'ment' (ID: 508)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4210367798805237
    2. ' i' → logprob: -2.546036720275879
    3. 's' → logprob: -2.671036720275879
    4. 'ont' → logprob: -3.171036720275879
    5. 't' → logprob: -3.296036720275879
    6. ' ' → logprob: -3.796036720275879
    7. '=' → logprob: -4.546036720275879
    8. ' m' → logprob: -4.546036720275879
    9. 'mes' → logprob: -4.546036720275879
    10. 'mat' → logprob: -4.546036720275879

Token 186: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.003221802646294236
    2. 'la' → logprob: -6.0032219886779785
    3. ' le' → logprob: -7.8782219886779785
    4. ' une' → logprob: -9.25322151184082
    5. ' ' → logprob: -9.37822151184082
    6. ' the' → logprob: -10.00322151184082
    7. ' l' → logprob: -10.37822151184082
    8. ' les' → logprob: -10.37822151184082
    9. 'le' → logprob: -10.50322151184082
    10. ' a' → logprob: -11.25322151184082

Token 187: ' liste' (ID: 31719)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.8309949040412903
    2. ' tableaux' → logprob: -2.4559948444366455
    3. 'liste' → logprob: -2.4559948444366455
    4. 'd' → logprob: -2.5809948444366455
    5. ' tableau' → logprob: -2.7059948444366455
    6. 'rest' → logprob: -3.0809948444366455
    7. 'table' → logprob: -3.5809948444366455
    8. 'data' → logprob: -3.5809948444366455
    9. 'n' → logprob: -3.8309948444366455
    10. ' liste' → logprob: -3.9559948444366455

Token 188: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4366334676742554
    2. 's' → logprob: -1.8116334676742554
    3. '[' → logprob: -1.9366334676742554
    4. ' ' → logprob: -2.686633586883545
    5. ',' → logprob: -2.936633586883545
    6. ' of' → logprob: -2.936633586883545
    7. ' n' → logprob: -3.436633586883545
    8. '[]' → logprob: -3.436633586883545
    9. '_' → logprob: -3.561633586883545
    10. '=' → logprob: -3.686633586883545

Token 189: 'c' (ID: 66)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.010191559791565
    2. 'a' → logprob: -1.260191559791565
    3. 'data' → logprob: -1.635191559791565
    4. 'lst' → logprob: -2.3851914405822754
    5. ' data' → logprob: -3.7601914405822754
    6. 'numbers' → logprob: -4.260191440582275
    7. 'values' → logprob: -4.760191440582275
    8. ' a' → logprob: -5.385191440582275
    9. 'l' → logprob: -6.010191440582275
    10. ' lst' → logprob: -6.010191440582275

Token 190: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4832197427749634
    2. 's' → logprob: -1.4832197427749634
    3. ')'' → logprob: -1.7332197427749634
    4. ' =' → logprob: -2.233219623565674
    5. '')' → logprob: -2.608219623565674
    6. ']' → logprob: -3.358219623565674
    7. ''' → logprob: -3.733219623565674
    8. '_' → logprob: -4.108219623565674
    9. ']'' → logprob: -4.108219623565674
    10. '']' → logprob: -4.483219623565674

Token 191: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.284988671541214
    2. 'data' → logprob: -1.4099886417388916
    3. '
' → logprob: -6.909988880157471
    4. ' n' → logprob: -7.409988880157471
    5. '\n' → logprob: -8.159988403320312
    6. ' 
' → logprob: -8.159988403320312
    7. 'c' → logprob: -8.284988403320312
    8. 'values' → logprob: -8.534988403320312
    9. 'inputs' → logprob: -8.784988403320312
    10. 'input' → logprob: -8.909988403320312

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002096197713399306
    2. ',c' → logprob: -8.62520980834961
    3. ' ,' → logprob: -10.75020980834961
    4. ' =' → logprob: -12.87520980834961
    5. '=' → logprob: -13.00020980834961
    6. 'c' → logprob: -14.37520980834961
    7. ',a' → logprob: -14.75020980834961
    8. ',n' → logprob: -14.75020980834961
    9. 's' → logprob: -15.00020980834961
    10. ',data' → logprob: -15.00020980834961

Token 193: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2546486258506775
    2. '*c' → logprob: -1.5046486854553223
    3. ' *' → logprob: -6.504648685455322
    4. '*p' → logprob: -8.129648208618164
    5. '*n' → logprob: -8.504648208618164
    6. '*l' → logprob: -9.004648208618164
    7. '*self' → logprob: -9.504648208618164
    8. '*t' → logprob: -9.754648208618164
    9. '*s' → logprob: -9.754648208618164
    10. '*k' → logprob: -9.879648208618164

Token 194: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1756367712223437e-05
    2. ' c' → logprob: -11.375011444091797
    3. 'data' → logprob: -16.500011444091797
    4. 'arr' → logprob: -17.750011444091797
    5. '_c' → logprob: -17.875011444091797
    6. 'rest' → logprob: -17.875011444091797
    7. 'values' → logprob: -18.125011444091797
    8. '```' → logprob: -18.375011444091797
    9. '	c' → logprob: -18.750011444091797
    10. 'numbers' → logprob: -18.875011444091797

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -16.26104736328125
    4. ',' → logprob: -16.88604736328125
    5. ' ' → logprob: -17.51104736328125
    6. '=[' → logprob: -18.63604736328125
    7. ')=' → logprob: -19.01104736328125
    8. '=list' → logprob: -19.01104736328125
    9. '=sys' → logprob: -19.01104736328125
    10. '=int' → logprob: -19.13604736328125

Token 196: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0006278486107476056
    2. ' map' → logprob: -7.3756279945373535
    3. 'list' → logprob: -14.875627517700195
    4. '	map' → logprob: -15.250627517700195
    5. '   ' → logprob: -15.375627517700195
    6. ' ' → logprob: -15.500627517700195
    7. 'ma' → logprob: -16.250627517700195
    8. '  ' → logprob: -16.750627517700195
    9. '(map' → logprob: -17.000627517700195
    10. 'm' → logprob: -17.375627517700195

Token 197: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.004892873577773571
    2. 'int' → logprob: -5.754892826080322
    3. ' map' → logprob: -6.379892826080322
    4. 'm' → logprob: -12.37989330291748
    5. ' ' → logprob: -12.62989330291748
    6. '   ' → logprob: -13.12989330291748
    7. ' int' → logprob: -13.25489330291748
    8. 'ma' → logprob: -13.25489330291748
    9. '```' → logprob: -13.25489330291748
    10. '  ' → logprob: -13.62989330291748

Token 198: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05655311048030853
    2. '(i' → logprob: -3.9315531253814697
    3. ']' → logprob: -4.056552886962891
    4. '(read' → logprob: -4.306552886962891
    5. '()]' → logprob: -5.681552886962891
    6. '(' → logprob: -7.681552886962891
    7. 'read' → logprob: -8.68155288696289
    8. '(s' → logprob: -8.93155288696289
    9. ']()' → logprob: -8.93155288696289
    10. '](' → logprob: -10.43155288696289

Token 199: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27049094438552856
    2. ')' → logprob: -2.270490884780884
    3. 'for' → logprob: -2.520490884780884
    4. '(read' → logprob: -3.770490884780884
    5. ' for' → logprob: -4.020491123199463
    6. 'read' → logprob: -5.020491123199463
    7. '(x' → logprob: -5.645491123199463
    8. '.readline' → logprob: -7.645491123199463
    9. ' readline' → logprob: -7.770491123199463
    10. '(line' → logprob: -8.395490646362305

Token 200: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3392716646194458
    2. ' for' → logprob: -1.4642716646194458
    3. '()' → logprob: -2.9642715454101562
    4. 'read' → logprob: -6.089271545410156
    5. ')' → logprob: -6.339271545410156
    6. ' read' → logprob: -8.339271545410156
    7. ' ' → logprob: -8.839271545410156
    8. ']' → logprob: -9.089271545410156
    9. '(read' → logprob: -9.214271545410156
    10. '
' → logprob: -10.214271545410156

Token 201: ' i' (ID: 575)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.10129161179065704
    2. 'read' → logprob: -2.3512916564941406
    3. ' readline' → logprob: -6.851291656494141
    4. '(read' → logprob: -10.72629165649414
    5. '	read' → logprob: -12.97629165649414
    6. ' ' → logprob: -13.60129165649414
    7. ' ' → logprob: -15.47629165649414
    8. '_read' → logprob: -16.10129165649414
    9. '  ' → logprob: -16.35129165649414
    10. '.read' → logprob: -16.47629165649414

Token 202: ' in' (ID: 306)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.7941933870315552
    2. ' in' → logprob: -1.0441933870315552
    3. 'read' → logprob: -1.9191933870315552
    4. ' read' → logprob: -3.9191932678222656
    5. 'in' → logprob: -4.294193267822266
    6. '(' → logprob: -4.794193267822266
    7. ' (' → logprob: -5.669193267822266
    8. ' readline' → logprob: -6.294193267822266
    9. ' ' → logprob: -7.419193267822266
    10. ',' → logprob: -7.544193267822266

Token 203: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.012247559614479542
    2. ' readline' → logprob: -4.637247562408447
    3. ' read' → logprob: -6.012247562408447
    4. '(read' → logprob: -10.637247085571289
    5. ' ' → logprob: -12.637247085571289
    6. '	read' → logprob: -12.887247085571289
    7. '.readline' → logprob: -13.012247085571289
    8. 'range' → logprob: -13.637247085571289
    9. '/read' → logprob: -14.512247085571289
    10. 'readonly' → logprob: -14.512247085571289

Token 204: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00162662158254534
    2. '()' → logprob: -6.626626491546631
    3. '()]' → logprob: -8.126626968383789
    4. '())' → logprob: -13.376626968383789
    5. '()
' → logprob: -13.876626968383789
    6. ' ().' → logprob: -13.876626968383789
    7. '()].' → logprob: -14.626626968383789
    8. 'split' → logprob: -14.751626968383789
    9. '(' → logprob: -15.751626968383789
    10. '()[' → logprob: -16.00162696838379

Token 205: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018161294981837273
    2. 'strip' → logprob: -4.018161296844482
    3. 'rstrip' → logprob: -11.518160820007324
    4. ' split' → logprob: -13.893160820007324
    5. '(split' → logprob: -15.268160820007324
    6. 'spl' → logprob: -15.393160820007324
    7. ' strip' → logprob: -17.39316177368164
    8. '```' → logprob: -18.64316177368164
    9. '()' → logprob: -18.76816177368164
    10. 'replace' → logprob: -19.01816177368164

Token 206: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0006143859936855733
    2. '()' → logprob: -7.625614166259766
    3. '(' → logprob: -9.500614166259766
    4. '())' → logprob: -10.375614166259766
    5. ']' → logprob: -11.000614166259766
    6. '()]
' → logprob: -13.875614166259766
    7. '('' → logprob: -14.250614166259766
    8. ']()' → logprob: -14.375614166259766
    9. ')]' → logprob: -14.625614166259766
    10. '()][' → logprob: -14.875614166259766

Token 207: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45888131856918335
    2. '<|end|>' → logprob: -1.0838813781738281
    3. '\n' → logprob: -3.708881378173828
    4. '#' → logprob: -6.333881378173828
    5. ' 
' → logprob: -6.958881378173828
    6. ' ' → logprob: -7.458881378173828
    7. '  
' → logprob: -7.458881378173828
    8. '[' → logprob: -7.708881378173828
    9. '<|end|>' → logprob: -8.458881378173828
    10. '

' → logprob: -9.083881378173828

Token 208: ' Trie' (ID: 131955)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6562584638595581
    2. 'def' → logprob: -1.031258463859558
    3. 'c' → logprob: -2.5312585830688477
    4. 'dp' → logprob: -4.281258583068848
    5. 'd' → logprob: -5.156258583068848
    6. 'max' → logprob: -5.906258583068848
    7. 's' → logprob: -6.031258583068848
    8. 'count' → logprob: -6.031258583068848
    9. 'if' → logprob: -6.156258583068848
    10. 'n' → logprob: -6.281258583068848

Token 209: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.182281032204628
    2. ' c' → logprob: -1.9322810173034668
    3. '()' → logprob: -3.932281017303467
    4. '(c' → logprob: -6.682281017303467
    5. '(' → logprob: -7.932281017303467
    6. '()
' → logprob: -8.557281494140625
    7. '(
' → logprob: -9.057281494140625
    8. '	c' → logprob: -9.557281494140625
    9. ' (' → logprob: -9.932281494140625
    10. ')c' → logprob: -10.432281494140625

Token 210: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0072789802215993404
    2. 'liste' → logprob: -5.632278919219971
    3. ' c' → logprob: -5.757278919219971
    4. ' liste' → logprob: -7.632278919219971
    5. 'list' → logprob: -10.882279396057129
    6. ' list' → logprob: -12.507279396057129
    7. 'l' → logprob: -13.382279396057129
    8. 'lista' → logprob: -13.882279396057129
    9. 'Liste' → logprob: -13.882279396057129
    10. ' Liste' → logprob: -14.132279396057129

Token 211: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010700009443098679
    2. ' c' → logprob: -9.375106811523438
    3. '(c' → logprob: -10.875106811523438
    4. '(' → logprob: -13.000106811523438
    5. '_c' → logprob: -15.125106811523438
    6. '	c' → logprob: -15.375106811523438
    7. ')c' → logprob: -15.875106811523438
    8. '(
' → logprob: -16.375106811523438
    9. 's' → logprob: -17.000106811523438
    10. 'с' → logprob: -17.250106811523438

Token 212: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001236656797118485
    2. ' c' → logprob: -7.251236438751221
    3. '(c' → logprob: -7.626236438751221
    4. '(' → logprob: -10.376236915588379
    5. ')c' → logprob: -12.501236915588379
    6. '_c' → logprob: -13.876236915588379
    7. '(
' → logprob: -14.126236915588379
    8. '	c' → logprob: -14.126236915588379
    9. ' (' → logprob: -14.626236915588379
    10. 'с' → logprob: -14.876236915588379

Token 213: ''' (ID: 6)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.007490445859730244
    2. '.' → logprob: -5.007490634918213
    3. ')' → logprob: -7.257490634918213
    4. ' .' → logprob: -10.257490158081055
    5. '.c' → logprob: -11.132490158081055
    6. '.sorted' → logprob: -12.257490158081055
    7. '.reverse' → logprob: -12.882490158081055
    8. '().' → logprob: -13.007490158081055
    9. '.s' → logprob: -13.257490158081055
    10. '.Sort' → logprob: -13.882490158081055

Token 214: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5199053883552551
    2. '.sort' → logprob: -1.0199053287506104
    3. 'c' → logprob: -3.7699053287506104
    4. '.c' → logprob: -3.8949053287506104
    5. '()' → logprob: -7.7699055671691895
    6. ')' → logprob: -8.644905090332031
    7. '().' → logprob: -8.769905090332031
    8. ' .' → logprob: -9.144905090332031
    9. '(' → logprob: -9.144905090332031
    10. '(c' → logprob: -9.394905090332031

Token 215: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7088010907173157
    2. 'c' → logprob: -2.333801031112671
    3. '-place' → logprob: -2.333801031112671
    4. 'l' → logprob: -2.458801031112671
    5. ' place' → logprob: -2.458801031112671
    6. ' c' → logprob: -2.708801031112671
    7. ' ascending' → logprob: -3.458801031112671
    8. ' reverse' → logprob: -4.08380126953125
    9. 'place' → logprob: -4.58380126953125
    10. '_place' → logprob: -5.33380126953125

Token 216: ''ordre' (ID: 124753)
  Prédit: '-place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-place' → logprob: -0.11017855256795883
    2. 'c' → logprob: -3.7351784706115723
    3. '_place' → logprob: -4.110178470611572
    4. ' place' → logprob: -4.485178470611572
    5. 'place' → logprob: -4.485178470611572
    6. ''ordre' → logprob: -4.735178470611572
    7. 'e' → logprob: -5.235178470611572
    8. 'a' → logprob: -5.860178470611572
    9. '[]' → logprob: -6.110178470611572
    10. 's' → logprob: -6.360178470611572

Token 217: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.05712782219052315
    2. 'c' → logprob: -3.1821277141571045
    3. 'asc' → logprob: -5.057127952575684
    4. ' cro' → logprob: -5.307127952575684
    5. '<|end|>' → logprob: -7.307127952575684
    6. '.reverse' → logprob: -8.432127952575684
    7. 'ascending' → logprob: -8.432127952575684
    8. ' crescente' → logprob: -8.557127952575684
    9. '.sort' → logprob: -8.557127952575684
    10. '()' → logprob: -8.682127952575684

Token 218: 'issant' (ID: 31359)
  Prédit: 'endant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endant' → logprob: -0.24190819263458252
    2. 'dent' → logprob: -1.9919081926345825
    3. 'issant' → logprob: -3.866908073425293
    4. 'endent' → logprob: -4.241908073425293
    5. 'd' → logprob: -4.616908073425293
    6. 'desc' → logprob: -4.991908073425293
    7. 'ent' → logprob: -5.616908073425293
    8. 'sent' → logprob: -5.741908073425293
    9. 'de' → logprob: -5.866908073425293
    10. 'rent' → logprob: -6.366908073425293

Token 219: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014251544780563563
    2. ')c' → logprob: -10.375142097473145
    3. ' c' → logprob: -10.750142097473145
    4. ',' → logprob: -11.000142097473145
    5. ':' → logprob: -11.000142097473145
    6. ')' → logprob: -11.375142097473145
    7. ':
' → logprob: -11.625142097473145
    8. 's' → logprob: -12.000142097473145
    9. ',
' → logprob: -12.125142097473145
    10. '.c' → logprob: -12.500142097473145

Token 220: 'du' (ID: 698)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.03038322739303112
    2. ' reverse' → logprob: -3.5303831100463867
    3. '(reverse' → logprob: -7.655383110046387
    4. ')' → logprob: -9.405383110046387
    5. 'c' → logprob: -9.780383110046387
    6. '.reverse' → logprob: -11.655383110046387
    7. 'rev' → logprob: -12.405383110046387
    8. 'r' → logprob: -13.030383110046387
    9. 're' → logprob: -13.905383110046387
    10. 'descending' → logprob: -14.280383110046387

Token 221: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0220297574996948
    2. ' plus' → logprob: -1.5220297574996948
    3. 'reverse' → logprob: -1.6470297574996948
    4. ')' → logprob: -2.7720298767089844
    5. ' reverse' → logprob: -2.7720298767089844
    6. 'c' → logprob: -3.2720298767089844
    7. 'largest' → logprob: -3.3970298767089844
    8. '```' → logprob: -4.772029876708984
    9. ',' → logprob: -5.147029876708984
    10. ' largest' → logprob: -6.022029876708984

Token 222: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.003065533936023712
    2. ' grand' → logprob: -6.003065586090088
    3. 'gr' → logprob: -8.00306510925293
    4. '```' → logprob: -9.75306510925293
    5. 'large' → logprob: -9.87806510925293
    6. 'Grand' → logprob: -10.50306510925293
    7. 'é' → logprob: -10.50306510925293
    8. ',' → logprob: -10.62806510925293
    9. 'c' → logprob: -10.87806510925293
    10. 'g' → logprob: -11.75306510925293

Token 223: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133071959018707
    2. ',' → logprob: -1.8133071660995483
    3. 'au' → logprob: -2.688307285308838
    4. ' au' → logprob: -4.063307285308838
    5. 'à' → logprob: -5.313307285308838
    6. ' à' → logprob: -5.438307285308838
    7. ' )' → logprob: -6.063307285308838
    8. 'c' → logprob: -6.188307285308838
    9. ',)' → logprob: -6.438307285308838
    10. 'aux' → logprob: -6.563307285308838

Token 224: ' plus' (ID: 2932)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.025602076202630997
    2. ' grand' → logprob: -4.525601863861084
    3. 'plus' → logprob: -4.525601863861084
    4. '```' → logprob: -6.525601863861084
    5. 'é' → logprob: -7.150601863861084
    6. 'c' → logprob: -8.025602340698242
    7. ' plus' → logprob: -8.400602340698242
    8. 'gr' → logprob: -8.525602340698242
    9. 'élé' → logprob: -9.525602340698242
    10. ' élevé' → logprob: -9.650602340698242

Token 225: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0745803564786911
    2. 'grand' → logprob: -2.824580430984497
    3. '```' → logprob: -5.074580192565918
    4. 'prem' → logprob: -5.449580192565918
    5. 'pu' → logprob: -7.824580192565918
    6. ' petit' → logprob: -7.824580192565918
    7. 'pt' → logprob: -8.449580192565918
    8. 'v' → logprob: -8.574580192565918
    9. 'p' → logprob: -9.449580192565918
    10. ')' → logprob: -9.449580192565918

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04375678673386574
    2. 'c' → logprob: -4.04375696182251
    3. ')
' → logprob: -4.79375696182251
    4. ')]' → logprob: -4.91875696182251
    5. ')c' → logprob: -5.29375696182251
    6. ']' → logprob: -5.79375696182251
    7. ' )' → logprob: -7.54375696182251
    8. ')]
' → logprob: -8.293756484985352
    9. ',' → logprob: -8.543756484985352
    10. '])' → logprob: -8.543756484985352

Token 227: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '```' → logprob: -17.25002098083496
    4. '
' → logprob: -17.37502098083496
    5. ')c' → logprob: -17.87502098083496
    6. '	c' → logprob: -18.87502098083496
    7. 'sorted' → logprob: -19.62502098083496
    8. 'с' → logprob: -20.12502098083496
    9. ',' → logprob: -20.12502098083496
    10. '_c' → logprob: -20.12502098083496

Token 228: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.009371990337967873
    2. '.' → logprob: -4.759371757507324
    3. '=' → logprob: -7.259371757507324
    4. 'sort' → logprob: -10.509371757507324
    5. '.=' → logprob: -11.259371757507324
    6. '.c' → logprob: -12.009371757507324
    7. ' =' → logprob: -13.259371757507324
    8. '.sorted' → logprob: -13.634371757507324
    9. '.s' → logprob: -13.759371757507324
    10. 'sorted' → logprob: -14.384371757507324

Token 229: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0002072357019642368
    2. '(' → logprob: -9.12520694732666
    3. 'reverse' → logprob: -9.25020694732666
    4. '.reverse' → logprob: -13.50020694732666
    5. '(re' → logprob: -15.37520694732666
    6. '()' → logprob: -15.75020694732666
    7. ' reverse' → logprob: -15.87520694732666
    8. '_reverse' → logprob: -15.87520694732666
    9. 'Reverse' → logprob: -16.625207901000977
    10. '(c' → logprob: -17.625207901000977

Token 230: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.10489226877689362
    2. '())' → logprob: -2.7298922538757324
    3. ')' → logprob: -3.6048922538757324
    4. '()' → logprob: -5.354892253875732
    5. '=' → logprob: -6.229892253875732
    6. '(True' → logprob: -7.854892253875732
    7. '(' → logprob: -10.47989273071289
    8. '(),' → logprob: -10.85489273071289
    9. '=False' → logprob: -11.47989273071289
    10. 'True' → logprob: -11.97989273071289

Token 231: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -13.375003814697266
    4. ')c' → logprob: -16.750003814697266
    5. '))' → logprob: -17.250003814697266
    6. ')

' → logprob: -17.375003814697266
    7. ')#' → logprob: -17.500003814697266
    8. '),' → logprob: -18.125003814697266
    9. ')`' → logprob: -18.500003814697266
    10. ' ' → logprob: -19.500003814697266

Token 232: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2958929538726807
    2. 'for' → logprob: -1.6708929538726807
    3. 'max' → logprob: -2.1708929538726807
    4. '<|end|>' → logprob: -2.1708929538726807
    5. '#' → logprob: -2.7958929538726807
    6. 'i' → logprob: -2.7958929538726807
    7. 'c' → logprob: -3.9208929538726807
    8. 'k' → logprob: -3.9208929538726807
    9. 'd' → logprob: -4.295892715454102
    10. 'n' → logprob: -4.420892715454102

Token 233: ' Déf' (ID: 180635)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8979002237319946
    2. 'result' → logprob: -2.147900104522705
    3. 'total' → logprob: -2.147900104522705
    4. 'if' → logprob: -2.522900104522705
    5. 'max' → logprob: -3.022900104522705
    6. 'def' → logprob: -3.147900104522705
    7. 'for' → logprob: -3.272900104522705
    8. 'res' → logprob: -3.522900104522705
    9. '#' → logprob: -3.647900104522705
    10. 'count' → logprob: -3.772900104522705

Token 234: 'init' (ID: 3287)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12492701411247253
    2. '#' → logprob: -2.749927043914795
    3. 'inition' → logprob: -3.249927043914795
    4. 'def' → logprob: -5.499927043914795
    5. '```' → logprob: -5.874927043914795
    6. 'ine' → logprob: -6.124927043914795
    7. 'c' → logprob: -6.249927043914795
    8. 'ini' → logprob: -6.874927043914795
    9. 'init' → logprob: -7.124927043914795
    10. 'inie' → logprob: -7.374927043914795

Token 235: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05587662011384964
    2. ' def' → logprob: -3.4308767318725586
    3. ' a' → logprob: -4.430876731872559
    4. ' une' → logprob: -5.680876731872559
    5. 'a' → logprob: -5.805876731872559
    6. ' la' → logprob: -6.180876731872559
    7. 'c' → logprob: -8.180876731872559
    8. ' c' → logprob: -8.430876731872559
    9. 's' → logprob: -8.930876731872559
    10. '<|end|>' → logprob: -9.055876731872559

Token 236: ' constante' (ID: 49652)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021772999316453934
    2. 'fonction' → logprob: -4.146772861480713
    3. 'function' → logprob: -6.521772861480713
    4. 'f' → logprob: -6.771772861480713
    5. 'd' → logprob: -7.396772861480713
    6. 'fun' → logprob: -7.646772861480713
    7. 'dé' → logprob: -8.271773338317871
    8. '
' → logprob: -8.396773338317871
    9. 'fon' → logprob: -8.521773338317871
    10. 'variable' → logprob: -8.521773338317871

Token 237: ' '' (ID: 461)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.43476393818855286
    2. 'INF' → logprob: -1.8097639083862305
    3. 'K' → logprob: -2.0597639083862305
    4. 'MOD' → logprob: -4.4347639083862305
    5. '=' → logprob: -4.5597639083862305
    6. ' =' → logprob: -4.6847639083862305
    7. 'N' → logprob: -4.8097639083862305
    8. 'LIMIT' → logprob: -5.8097639083862305
    9. 'k' → logprob: -5.9347639083862305
    10. 'C' → logprob: -5.9347639083862305

Token 238: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.7101952433586121
    2. 'INF' → logprob: -0.8351952433586121
    3. 'MAX' → logprob: -2.960195302963257
    4. 'M' → logprob: -4.835195064544678
    5. 'K' → logprob: -5.085195064544678
    6. 'LIMIT' → logprob: -6.210195064544678
    7. 'k' → logprob: -6.335195064544678
    8. 'inf' → logprob: -7.085195064544678
    9. 'mod' → logprob: -7.085195064544678
    10. 'N' → logprob: -7.335195064544678

Token 239: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023450681939721107
    2. '=' → logprob: -3.7734506130218506
    3. ' ' → logprob: -9.77345085144043
    4. ')' → logprob: -9.89845085144043
    5. ',' → logprob: -10.02345085144043
    6. '_' → logprob: -10.77345085144043
    7. ' =
' → logprob: -11.64845085144043
    8. '  ' → logprob: -11.89845085144043
    9. '```' → logprob: -12.02345085144043
    10. ' )' → logprob: -13.39845085144043

Token 240: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28138449788093567
    2. '=' → logprob: -1.4063844680786133
    3. ' ' → logprob: -8.781384468078613
    4. ' =
' → logprob: -10.156384468078613
    5. ',' → logprob: -10.781384468078613
    6. 'MOD' → logprob: -11.156384468078613
    7. '=
' → logprob: -13.531384468078613
    8. ' MOD' → logprob: -13.906384468078613
    9. ' ' → logprob: -14.156384468078613
    10. ' ,' → logprob: -14.406384468078613

Token 241: ' effectuer' (ID: 98625)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12695667147636414
    2. ' ' → logprob: -2.1269567012786865
    3. '100' → logprob: -10.626956939697266
    4. '1' → logprob: -12.751956939697266
    5. 'int' → logprob: -14.501956939697266
    6. ' ' → logprob: -14.876956939697266
    7. '```' → logprob: -15.501956939697266
    8. '998' → logprob: -16.001956939697266
    9. '​' → logprob: -17.001956939697266
    10. '2' → logprob: -17.126956939697266

Token 242: ' des' (ID: 731)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11315706372261047
    2. ' ' → logprob: -2.238157033920288
    3. '100' → logprob: -8.488157272338867
    4. ' MOD' → logprob: -9.988157272338867
    5. '```' → logprob: -10.738157272338867
    6. 'MOD' → logprob: -10.863157272338867
    7. ' =' → logprob: -11.238157272338867
    8. '=' → logprob: -11.988157272338867
    9. '1' → logprob: -12.363157272338867
    10. '998' → logprob: -12.363157272338867

Token 243: ' opérations' (ID: 102793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36759471893310547
    2. '10' → logprob: -1.2425947189331055
    3. '100' → logprob: -5.3675947189331055
    4. ' ' → logprob: -5.8675947189331055
    5. 'pow' → logprob: -6.4925947189331055
    6. ' =' → logprob: -6.4925947189331055
    7. '_' → logprob: -6.9925947189331055
    8. ' calculations' → logprob: -7.1175947189331055
    9. '  ' → logprob: -7.4925947189331055
    10. 'calcul' → logprob: -7.4925947189331055

Token 244: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23173154890537262
    2. '=' → logprob: -1.6067315340042114
    3. ' ' → logprob: -5.606731414794922
    4. '_' → logprob: -6.231731414794922
    5. '<|end|>' → logprob: -8.481731414794922
    6. ',' → logprob: -9.606731414794922
    7. 'MOD' → logprob: -9.731731414794922
    8. '_=' → logprob: -9.856731414794922
    9. ' MOD' → logprob: -10.481731414794922
    10. ' de' → logprob: -10.481731414794922

Token 245: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08308309316635132
    2. 'MOD' → logprob: -3.208083152770996
    3. '=' → logprob: -3.333083152770996
    4. '_MOD' → logprob: -6.208083152770996
    5. ' MOD' → logprob: -6.958083152770996
    6. ' ' → logprob: -7.833083152770996
    7. '_' → logprob: -9.083083152770996
    8. ' =
' → logprob: -9.708083152770996
    9. ',' → logprob: -10.083083152770996
    10. '_mod' → logprob: -12.458083152770996

Token 246: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03484109044075012
    2. ' =' → logprob: -4.034841060638428
    3. '=' → logprob: -5.409841060638428
    4. ' ' → logprob: -5.534841060638428
    5. '100' → logprob: -5.909841060638428
    6. 'MOD' → logprob: -6.034841060638428
    7. '(' → logprob: -6.534841060638428
    8. ' (' → logprob: -6.909841060638428
    9. ' MOD' → logprob: -7.909841060638428
    10. '1' → logprob: -9.409841537475586

Token 247: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.029918953776359558
    2. '9' → logprob: -3.529918909072876
    3. '7' → logprob: -9.029918670654297
    4. '```' → logprob: -11.029918670654297
    5. '^' → logprob: -11.529918670654297
    6. '000' → logprob: -11.654918670654297
    7. '*' → logprob: -12.404918670654297
    8. '**
' → logprob: -13.029918670654297
    9. '6' → logprob: -13.279918670654297
    10. '09' → logprob: -13.654918670654297

Token 248: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '09' → logprob: -15.625001907348633
    5. '6' → logprob: -17.875001907348633
    6. '``' → logprob: -18.125001907348633
    7. '=' → logprob: -18.500001907348633
    8. '7' → logprob: -19.125001907348633
    9. '10' → logprob: -19.625001907348633
    10. '
' → logprob: -20.500001907348633

Token 249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006479830481112003
    2. ' +' → logprob: -7.500648021697998
    3. '+
' → logprob: -10.00064754486084
    4. '=' → logprob: -10.25064754486084
    5. '7' → logprob: -11.87564754486084
    6. '9' → logprob: -12.62564754486084
    7. '+=' → logprob: -13.25064754486084
    8. ' +
' → logprob: -14.37564754486084
    9. '+

' → logprob: -14.62564754486084
    10. ' =' → logprob: -15.50064754486084

Token 250: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003237243974581361
    2. '9' → logprob: -5.878237247467041
    3. '+' → logprob: -7.753237247467041
    4. '```' → logprob: -12.878236770629883
    5. ' ' → logprob: -15.128236770629883
    6. ' +' → logprob: -16.253236770629883
    7. '``' → logprob: -16.753236770629883
    8. '=' → logprob: -18.253236770629883
    9. '+=' → logprob: -18.878236770629883
    10. '1' → logprob: -19.003236770629883

Token 251: ',' (ID: 11)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08715177327394485
    2. ' =' → logprob: -2.5871517658233643
    3. '=' → logprob: -5.212152004241943
    4. '_MOD' → logprob: -6.587152004241943
    5. ' MOD' → logprob: -6.837152004241943
    6. ' =
' → logprob: -8.462151527404785
    7. '
' → logprob: -9.962151527404785
    8. '=
' → logprob: -10.962151527404785
    9. ' 
' → logprob: -11.087151527404785
    10. ' ' → logprob: -11.837151527404785

Token 252: ' un' (ID: 537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6606482863426208
    2. '=' → logprob: -0.9106482863426208
    3. ' ' → logprob: -2.9106483459472656
    4. ' MOD' → logprob: -4.410648345947266
    5. 'MOD' → logprob: -4.785648345947266
    6. ' 
' → logprob: -6.035648345947266
    7. '10' → logprob: -6.285648345947266
    8. '  
' → logprob: -7.660648345947266
    9. ')' → logprob: -7.660648345947266
    10. ' )' → logprob: -7.785648345947266

Token 253: ' grand' (ID: 6363)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7861169576644897
    2. '<|end|>' → logprob: -2.0361170768737793
    3. 'space' → logprob: -2.5361170768737793
    4. ' space' → logprob: -2.7861170768737793
    5. ' 
' → logprob: -2.7861170768737793
    6. ' ' → logprob: -2.9111170768737793
    7. ' espace' → logprob: -3.2861170768737793
    8. ' =' → logprob: -3.6611170768737793
    9. ':' → logprob: -4.161117076873779
    10. '=' → logprob: -4.661117076873779

Token 254: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19334682822227478
    2. '_' → logprob: -1.9433468580245972
    3. '```' → logprob: -5.318346977233887
    4. ' 
' → logprob: -5.818346977233887
    5. ' space' → logprob: -5.818346977233887
    6. '  ' → logprob: -5.943346977233887
    7. '<|end|>' → logprob: -5.943346977233887
    8. ' )' → logprob: -6.193346977233887
    9. 'space' → logprob: -6.318346977233887
    10. ' ' → logprob: -6.443346977233887

Token 255: ' premier' (ID: 15506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4262002408504486
    2. '=' → logprob: -1.301200270652771
    3. ' (' → logprob: -3.5512001514434814
    4. ' ' → logprob: -3.8012001514434814
    5. '(' → logprob: -4.5512003898620605
    6. 'MOD' → logprob: -5.4262003898620605
    7. ' MOD' → logprob: -5.8012003898620605
    8. '_' → logprob: -6.5512003898620605
    9. ',' → logprob: -6.6762003898620605
    10. '```' → logprob: -6.8012003898620605

Token 256: ' utilisé' (ID: 53138)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2126820832490921
    2. 'MOD' → logprob: -2.212682008743286
    3. '=' → logprob: -2.587682008743286
    4. ' MOD' → logprob: -6.087682247161865
    5. ' =
' → logprob: -6.212682247161865
    6. '_MOD' → logprob: -6.962682247161865
    7. ' ' → logprob: -7.337682247161865
    8. '(' → logprob: -8.337681770324707
    9. ',' → logprob: -8.337681770324707
    10. '=
' → logprob: -8.462681770324707

Token 257: ' pour' (ID: 1930)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.9407703876495361
    2. '=' → logprob: -1.1907703876495361
    3. ' =' → logprob: -1.6907703876495361
    4. ' MOD' → logprob: -2.440770387649536
    5. 'mod' → logprob: -4.440770149230957
    6. ',' → logprob: -4.940770149230957
    7. ')' → logprob: -5.940770149230957
    8. ' ' → logprob: -6.065770149230957
    9. '```' → logprob: -6.315770149230957
    10. '_MOD' → logprob: -6.565770149230957

Token 258: ' éviter' (ID: 64013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6591218709945679
    2. '10' → logprob: -1.1591218709945679
    3. '100' → logprob: -1.9091218709945679
    4. '998' → logprob: -4.409121990203857
    5. ' le' → logprob: -5.784121990203857
    6. ' l' → logprob: -6.784121990203857
    7. ' mod' → logprob: -6.784121990203857
    8. '1' → logprob: -7.284121990203857
    9. '```' → logprob: -7.409121990203857
    10. ' la' → logprob: -7.784121990203857

Token 259: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3736155331134796
    2. ' ' → logprob: -1.2486155033111572
    3. ')' → logprob: -5.498615741729736
    4. '_' → logprob: -5.498615741729736
    5. ' (' → logprob: -5.498615741729736
    6. ' )' → logprob: -5.748615741729736
    7. '100' → logprob: -6.123615741729736
    8. ' MOD' → logprob: -6.373615741729736
    9. '(' → logprob: -6.873615741729736
    10. '  ' → logprob: -6.998615741729736

Token 260: ' dépasse' (ID: 165701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.051322828978300095
    2. '_' → logprob: -3.9263229370117188
    3. '10' → logprob: -4.801322937011719
    4. '=' → logprob: -4.926322937011719
    5. ' =' → logprob: -5.551322937011719
    6. '  
' → logprob: -6.301322937011719
    7. ',' → logprob: -6.676322937011719
    8. ' 
' → logprob: -6.676322937011719
    9. '  ' → logprob: -6.926322937011719
    10. ' space' → logprob: -7.426322937011719

Token 261: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.7236824631690979
    2. 's' → logprob: -2.848682403564453
    3. ')' → logprob: -3.098682403564453
    4. 'mentation' → logprob: -3.098682403564453
    5. 'f' → logprob: -3.223682403564453
    6. '```' → logprob: -3.598682403564453
    7. '<|end|>' → logprob: -3.598682403564453
    8. 'u' → logprob: -3.848682403564453
    9. '=' → logprob: -3.973682403564453
    10. 'fl' → logprob: -4.098682403564453

Token 262: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.562109649181366
    2. '=' → logprob: -0.937109649181366
    3. 'MOD' → logprob: -4.062109470367432
    4. ' (' → logprob: -4.562109470367432
    5. '(' → logprob: -5.687109470367432
    6. '_' → logprob: -5.812109470367432
    7. ' MOD' → logprob: -6.062109470367432
    8. '_MOD' → logprob: -7.187109470367432
    9. ' ' → logprob: -8.06210994720459
    10. '```' → logprob: -9.18710994720459

Token 263: ''ent' (ID: 53422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.359370231628418
    2. '2' → logprob: -1.609370231628418
    3. ' ' → logprob: -1.984370231628418
    4. '7' → logprob: -2.359370231628418
    5. '10' → logprob: -2.484370231628418
    6. ' (' → logprob: -2.609370231628418
    7. '```' → logprob: -3.234370231628418
    8. '100' → logprob: -3.609370231628418
    9. ')' → logprob: -4.234370231628418
    10. '=' → logprob: -4.234370231628418

Token 264: 'iers' (ID: 11012)
  Prédit: 'orm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orm' → logprob: -0.3594738841056824
    2. 'é' → logprob: -1.8594739437103271
    3. 'er' → logprob: -3.609473943710327
    4. 'rop' → logprob: -4.109473705291748
    5. 'p' → logprob: -4.234473705291748
    6. 'ép' → logprob: -4.234473705291748
    7. 'roits' → logprob: -5.484473705291748
    8. 'ormais' → logprob: -5.671973705291748
    9. 'éf' → logprob: -5.921973705291748
    10. 'f' → logprob: -6.109473705291748

Token 265: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17283010482788086
    2. '=' → logprob: -2.547830104827881
    3. 'MOD' → logprob: -2.547830104827881
    4. ' =
' → logprob: -7.047830104827881
    5. '_MOD' → logprob: -7.172830104827881
    6. ' ' → logprob: -8.547830581665039
    7. ' MOD' → logprob: -9.047830581665039
    8. '=
' → logprob: -9.547830581665039
    9. '(' → logprob: -10.172830581665039
    10. ':' → logprob: -10.297830581665039

Token 266: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001911432045744732
    2. '=' → logprob: -9.500190734863281
    3. ' MOD' → logprob: -9.750190734863281
    4. ' =' → logprob: -10.000190734863281
    5. '_MOD' → logprob: -11.500190734863281
    6. '=
' → logprob: -14.125190734863281
    7. '10' → logprob: -14.500190734863281
    8. '.MOD' → logprob: -14.625190734863281
    9. ' =
' → logprob: -15.250190734863281
    10. '
' → logprob: -15.750190734863281

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014141082763672
    2. '=' → logprob: -1.7014141082763672
    3. ',' → logprob: -14.451414108276367
    4. '=int' → logprob: -15.701414108276367
    5. '＝' → logprob: -17.576414108276367
    6. ' =
' → logprob: -17.576414108276367
    7. ':' → logprob: -17.576414108276367
    8. ' ' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.201414108276367
    10. ')' → logprob: -18.826414108276367

Token 268: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1004764586687088
    2. ' ' → logprob: -2.3504765033721924
    3. '100' → logprob: -8.225476264953613
    4. '1' → logprob: -13.225476264953613
    5. ' ' → logprob: -16.22547721862793
    6. 'int' → logprob: -16.47547721862793
    7. '(' → logprob: -17.60047721862793
    8. '```' → logprob: -18.97547721862793
    9. '​' → logprob: -19.60047721862793
    10. '109' → logprob: -20.10047721862793

Token 269: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003357006062287837
    2. '100' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.250335693359375
    4. '1' → logprob: -17.250335693359375
    5. 'int' → logprob: -18.375335693359375
    6. '(' → logprob: -18.500335693359375
    7. '```' → logprob: -21.125335693359375
    8. '109' → logprob: -21.625335693359375
    9. '１０' → logprob: -22.750335693359375
    10. '۱۰' → logprob: -23.250335693359375

Token 270: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.043510399758815765
    2. '9' → logprob: -3.1685104370117188
    3. ' **' → logprob: -7.668510437011719
    4. '+' → logprob: -10.668510437011719
    5. '*' → logprob: -12.293510437011719
    6. ' ' → logprob: -12.543510437011719
    7. '09' → logprob: -12.793510437011719
    8. '000' → logprob: -12.918510437011719
    9. '_' → logprob: -13.168510437011719
    10. '^' → logprob: -13.293510437011719

Token 271: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '```' → logprob: -20.75
    4. ' ' → logprob: -20.875
    5. '+' → logprob: -21.125
    6. '
' → logprob: -22.375
    7. '９' → logprob: -23.0
    8. '009' → logprob: -23.75
    9. '۹' → logprob: -24.3125
    10. '19' → logprob: -24.375

Token 272: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004307884373702109
    2. ' +' → logprob: -7.750430583953857
    3. '7' → logprob: -16.125431060791016
    4. '+
' → logprob: -17.375431060791016
    5. '＋' → logprob: -18.000431060791016
    6. ' ' → logprob: -18.875431060791016
    7. ' ' → logprob: -19.625431060791016
    8. ' plus' → logprob: -20.625431060791016
    9. ' +
' → logprob: -21.750431060791016
    10. '+b' → logprob: -22.000431060791016

Token 273: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '07' → logprob: -19.75
    4. '۷' → logprob: -22.125
    5. '７' → logprob: -22.5
    6. '٧' → logprob: -23.25
    7. '+' → logprob: -23.375
    8. '৭' → logprob: -23.5
    9. '७' → logprob: -23.5
    10. '```' → logprob: -23.75

Token 274: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -20.125
    3. ' ' → logprob: -20.625
    4. '```' → logprob: -22.75
    5. '+' → logprob: -23.25
    6. '７' → logprob: -23.625
    7. '۷' → logprob: -24.25
    8. '' → logprob: -25.25
    9. '٧' → logprob: -25.25
    10. '
' → logprob: -25.375

Token 275: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3807010650634766
    2. '\n' → logprob: -1.6307010650634766
    3. 'result' → logprob: -1.7557010650634766
    4. 'for' → logprob: -1.7557010650634766
    5. '\' → logprob: -3.7557010650634766
    6. 'def' → logprob: -3.7557010650634766
    7. 'c' → logprob: -4.130701065063477
    8. '(' → logprob: -4.255701065063477
    9. 'a' → logprob: -4.255701065063477
    10. '#' → logprob: -4.380701065063477

Token 276: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3416016101837158
    2. '#' → logprob: -1.8416016101837158
    3. 'a' → logprob: -2.466601610183716
    4. ',' → logprob: -2.466601610183716
    5. '\n' → logprob: -2.591601610183716
    6. 'def' → logprob: -3.091601610183716
    7. '\' → logprob: -3.091601610183716
    8. 'i' → logprob: -3.216601610183716
    9. 'x' → logprob: -3.966601610183716
    10. 'c' → logprob: -3.966601610183716

Token 277: ' Initialise' (ID: 179601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.748500645160675
    2. 'result' → logprob: -1.1235005855560303
    3. 'def' → logprob: -1.9985005855560303
    4. 'res' → logprob: -3.7485005855560303
    5. 'answer' → logprob: -3.9985005855560303
    6. 'total' → logprob: -4.373500823974609
    7. 'ans' → logprob: -5.373500823974609
    8. 'count' → logprob: -6.873500823974609
    9. 'max' → logprob: -6.873500823974609
    10. 's' → logprob: -7.248500823974609

Token 278: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3174276053905487
    2. 'result' → logprob: -1.942427635192871
    3. 'answer' → logprob: -3.817427635192871
    4. 'res' → logprob: -3.817427635192871
    5. ' dp' → logprob: -3.817427635192871
    6. 'ans' → logprob: -4.067427635192871
    7. ' ans' → logprob: -4.442427635192871
    8. ' result' → logprob: -4.442427635192871
    9. 'total' → logprob: -4.692427635192871
    10. 'count' → logprob: -5.692427635192871

Token 279: ' variable' (ID: 11076)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24061499536037445
    2. 'result' → logprob: -1.7406150102615356
    3. 'fact' → logprob: -4.240614891052246
    4. 'res' → logprob: -4.865614891052246
    5. 'count' → logprob: -5.490614891052246
    6. 'factor' → logprob: -5.615614891052246
    7. 'c' → logprob: -6.865614891052246
    8. 'total' → logprob: -7.240614891052246
    9. 'pow' → logprob: -7.365614891052246
    10. 'counter' → logprob: -7.365614891052246

Token 280: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0406854152679443
    2. 'ans' → logprob: -1.9156854152679443
    3. 'answer' → logprob: -1.9156854152679443
    4. ' ans' → logprob: -2.0406854152679443
    5. ' result' → logprob: -2.5406854152679443
    6. 'res' → logprob: -2.9156854152679443
    7. 'total' → logprob: -3.5406854152679443
    8. ' answer' → logprob: -3.6656854152679443
    9. 'dp' → logprob: -4.165685653686523
    10. 's' → logprob: -5.415685653686523

Token 281: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3969384431838989
    2. 'answer' → logprob: -2.1469383239746094
    3. 'ans' → logprob: -2.3969383239746094
    4. 'res' → logprob: -2.5219383239746094
    5. 'total' → logprob: -3.8969383239746094
    6. 'dp' → logprob: -4.396938323974609
    7. 'max' → logprob: -7.146938323974609
    8. 'count' → logprob: -7.271938323974609
    9. 'fact' → logprob: -7.396938323974609
    10. ' result' → logprob: -7.646938323974609

Token 282: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07907077670097351
    2. '=' → logprob: -2.579070806503296
    3. ' ' → logprob: -9.079071044921875
    4. ',' → logprob: -10.079071044921875
    5. ')' → logprob: -12.079071044921875
    6. '`' → logprob: -12.079071044921875
    7. ']' → logprob: -12.954071044921875
    8. '```' → logprob: -13.329071044921875
    9. 's' → logprob: -13.704071044921875
    10. '1' → logprob: -13.704071044921875

Token 283: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690194487571716
    2. ' =' → logprob: -1.1369019746780396
    3. ',' → logprob: -10.63690185546875
    4. ' ' → logprob: -12.51190185546875
    5. '0' → logprob: -13.38690185546875
    6. 'ans' → logprob: -14.26190185546875
    7. ' ans' → logprob: -14.38690185546875
    8. ' ' → logprob: -16.13690185546875
    9. ' ,' → logprob: -16.26190185546875
    10. '_ans' → logprob: -16.51190185546875

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016117537394165993
    2. '1' → logprob: -4.391117572784424
    3. ' ' → logprob: -5.641117572784424
    4. 'c' → logprob: -10.516117095947266
    5. '-' → logprob: -12.016117095947266
    6. '(' → logprob: -12.766117095947266
    7. 'n' → logprob: -12.766117095947266
    8. ' c' → logprob: -13.016117095947266
    9. '10' → logprob: -13.266117095947266
    10. 'pow' → logprob: -13.453617095947266

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04150068014860153
    2. '1' → logprob: -3.2915005683898926
    3. 'c' → logprob: -5.791500568389893
    4. '-' → logprob: -8.41650104522705
    5. '(' → logprob: -9.66650104522705
    6. 'n' → logprob: -10.41650104522705
    7. 'pow' → logprob: -11.04150104522705
    8. 'ans' → logprob: -11.29150104522705
    9. 'len' → logprob: -11.79150104522705
    10. ' ' → logprob: -11.79150104522705

Token 286: '.' (ID: 13)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014517917297780514
    2. ' ans' → logprob: -4.389517784118652
    3. '=' → logprob: -7.514517784118652
    4. '
' → logprob: -7.514517784118652
    5. ' =' → logprob: -8.014517784118652
    6. 'a' → logprob: -8.514517784118652
    7. '	ans' → logprob: -9.014517784118652
    8. '(ans' → logprob: -9.264517784118652
    9. '0' → logprob: -9.389517784118652
    10. '_ans' → logprob: -10.389517784118652

Token 287: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4492604732513428
    2. ' ans' → logprob: -1.0742604732513428
    3. '=' → logprob: -4.449260711669922
    4. ' =' → logprob: -5.574260711669922
    5. '0' → logprob: -6.074260711669922
    6. ' ' → logprob: -7.074260711669922
    7. '	ans' → logprob: -7.324260711669922
    8. 'a' → logprob: -8.074260711669922
    9. '(ans' → logprob: -8.199260711669922
    10. '_ans' → logprob: -8.449260711669922

Token 288: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5315337777137756
    2. ' =' → logprob: -1.2815337181091309
    3. '=' → logprob: -2.156533718109131
    4. '_' → logprob: -4.031533718109131
    5. ',' → logprob: -8.531534194946289
    6. '  ' → logprob: -8.656534194946289
    7. ' +=' → logprob: -8.781534194946289
    8. '#' → logprob: -8.906534194946289
    9. ' ' → logprob: -9.656534194946289
    10. 'space' → logprob: -9.656534194946289

Token 289: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7250813841819763
    2. ' =' → logprob: -0.8500813841819763
    3. ' ' → logprob: -2.475081443786621
    4. '<|end|>' → logprob: -5.975081443786621
    5. '_' → logprob: -7.350081443786621
    6. ',' → logprob: -8.350081443786621
    7. ')' → logprob: -8.725081443786621
    8. ' +=' → logprob: -8.725081443786621
    9. '  ' → logprob: -9.725081443786621
    10. ' =
' → logprob: -9.850081443786621

Token 290: ' accum' (ID: 23148)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15952882170677185
    2. ' =' → logprob: -2.1595287322998047
    3. '_' → logprob: -4.409528732299805
    4. ' ' → logprob: -4.534528732299805
    5. ' +=' → logprob: -5.159528732299805
    6. '+=' → logprob: -6.159528732299805
    7. '0' → logprob: -7.534528732299805
    8. '+' → logprob: -8.534528732299805
    9. ')' → logprob: -9.159528732299805
    10. '   ' → logprob: -9.409528732299805

Token 291: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0983922928571701
    2. 'u' → logprob: -2.5983922481536865
    3. 'uer' → logprob: -4.598392486572266
    4. ' u' → logprob: -5.473392486572266
    5. ' =' → logprob: -5.723392486572266
    6. '=' → logprob: -7.098392486572266
    7. 'er' → logprob: -8.098392486572266
    8. 'érer' → logprob: -8.598392486572266
    9. 'ul' → logprob: -9.223392486572266
    10. '_' → logprob: -9.473392486572266

Token 292: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41854602098464966
    2. '_' → logprob: -1.4185459613800049
    3. '0' → logprob: -2.793545961380005
    4. ')' → logprob: -4.418546199798584
    5. '=' → logprob: -4.543546199798584
    6. ',' → logprob: -5.793546199798584
    7. '<|end|>' → logprob: -5.793546199798584
    8. ' =' → logprob: -5.918546199798584
    9. ' ans' → logprob: -6.668546199798584
    10. '1' → logprob: -6.793546199798584

Token 293: ' somme' (ID: 64484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5437090396881104
    2. '+' → logprob: -1.7937090396881104
    3. ' ' → logprob: -2.4187090396881104
    4. '0' → logprob: -2.6687090396881104
    5. '1' → logprob: -3.1687090396881104
    6. ' =' → logprob: -3.9187090396881104
    7. ' result' → logprob: -5.043708801269531
    8. 'result' → logprob: -5.168708801269531
    9. ' sum' → logprob: -6.168708801269531
    10. 'sum' → logprob: -6.168708801269531

Token 294: ' finale' (ID: 37759)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8217210173606873
    2. ' =' → logprob: -1.321721076965332
    3. '_' → logprob: -1.571721076965332
    4. ' ' → logprob: -3.196721076965332
    5. ')' → logprob: -4.071721076965332
    6. ',' → logprob: -4.071721076965332
    7. ' +=' → logprob: -5.946721076965332
    8. ' ans' → logprob: -6.446721076965332
    9. 'ans' → logprob: -6.946721076965332
    10. '+' → logprob: -7.196721076965332

Token 295: ' selon' (ID: 27571)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17363247275352478
    2. ' ' → logprob: -2.5486323833465576
    3. ' =' → logprob: -3.2986323833465576
    4. ' ans' → logprob: -4.298632621765137
    5. ',' → logprob: -5.048632621765137
    6. ')' → logprob: -5.048632621765137
    7. '<|end|>' → logprob: -5.173632621765137
    8. 'ans' → logprob: -5.298632621765137
    9. '_' → logprob: -6.423632621765137
    10. '0' → logprob: -7.173632621765137

Token 296: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0502301454544067
    2. '=' → logprob: -1.4252301454544067
    3. '+' → logprob: -1.8002301454544067
    4. ')' → logprob: -2.050230026245117
    5. '+=' → logprob: -3.550230026245117
    6. 'range' → logprob: -3.800230026245117
    7. ' la' → logprob: -4.050230026245117
    8. 'c' → logprob: -4.550230026245117
    9. '1' → logprob: -4.925230026245117
    10. ' =' → logprob: -5.175230026245117

Token 297: ' formule' (ID: 84316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03238784521818161
    2. '+=' → logprob: -4.782387733459473
    3. 'for' → logprob: -4.907387733459473
    4. '=' → logprob: -4.907387733459473
    5. '*' → logprob: -6.032387733459473
    6. 'range' → logprob: -6.407387733459473
    7. '**' → logprob: -7.157387733459473
    8. ')' → logprob: -7.407387733459473
    9. ' +' → logprob: -7.657387733459473
    10. 'space' → logprob: -8.157387733459473

Token 298: ' donnée' (ID: 130126)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3471541106700897
    2. 'for' → logprob: -2.472154140472412
    3. ',' → logprob: -2.597154140472412
    4. '*' → logprob: -2.972154140472412
    5. ' =' → logprob: -3.847154140472412
    6. ')' → logprob: -3.847154140472412
    7. '+' → logprob: -5.097154140472412
    8. ' ' → logprob: -5.347154140472412
    9. 'ans' → logprob: -5.722154140472412
    10. '#' → logprob: -5.722154140472412

Token 299: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9581994414329529
    2. 'ans' → logprob: -1.3331995010375977
    3. 'a' → logprob: -2.4581995010375977
    4. ',' → logprob: -2.5831995010375977
    5. ' ans' → logprob: -2.8331995010375977
    6. '
' → logprob: -3.3331995010375977
    7. ')' → logprob: -3.4581995010375977
    8. '+' → logprob: -4.083199501037598
    9. '*' → logprob: -4.708199501037598
    10. ' =' → logprob: -4.708199501037598

Token 300: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018111985409632325
    2. ' ans' → logprob: -6.5018110275268555
    3. 'a' → logprob: -8.376811027526855
    4. '
' → logprob: -10.251811027526855
    5. '0' → logprob: -11.126811027526855
    6. '(ans' → logprob: -11.501811027526855
    7. '	ans' → logprob: -11.751811027526855
    8. '_ans' → logprob: -12.501811027526855
    9. '```' → logprob: -13.001811027526855
    10. 'answer' → logprob: -13.251811027526855

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022889316082
    2. '=' → logprob: -1.9102288484573364
    3. ' ' → logprob: -12.785228729248047
    4. ',' → logprob: -13.910228729248047
    5. ' +=' → logprob: -14.410228729248047
    6. ' =
' → logprob: -15.660228729248047
    7. ' ' → logprob: -16.410228729248047
    8. ')' → logprob: -16.410228729248047
    9. '+=' → logprob: -17.035228729248047
    10. ' ,' → logprob: -17.285228729248047

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004081128165125847
    2. ' ' → logprob: -5.5040812492370605
    3. 'c' → logprob: -13.379080772399902
    4. '(' → logprob: -15.379080772399902
    5. ' ' → logprob: -15.441580772399902
    6. ' c' → logprob: -15.441580772399902
    7. '1' → logprob: -16.44158172607422
    8. 'sum' → logprob: -16.81658172607422
    9. 'pow' → logprob: -16.94158172607422
    10. 'n' → logprob: -17.06658172607422

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.171581091824919e-05
    2. 'c' → logprob: -9.87507152557373
    3. '(' → logprob: -11.75007152557373
    4. '1' → logprob: -12.37507152557373
    5. 'sum' → logprob: -12.75007152557373
    6. ' ' → logprob: -12.87507152557373
    7. 'int' → logprob: -14.37507152557373
    8. 'pow' → logprob: -14.50007152557373
    9. 'n' → logprob: -15.06257152557373
    10. '(c' → logprob: -15.25007152557373

Token 304: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09688790887594223
    2. ' for' → logprob: -3.0968878269195557
    3. '*' → logprob: -4.346888065338135
    4. ')' → logprob: -4.471888065338135
    5. '<|end|>' → logprob: -5.096888065338135
    6. '+' → logprob: -5.096888065338135
    7. '
' → logprob: -5.971888065338135
    8. ' ' → logprob: -6.346888065338135
    9. '**' → logprob: -6.971888065338135
    10. 'i' → logprob: -7.096888065338135

Token 305: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057277780026197433
    2. ' for' → logprob: -3.8072776794433594
    3. '*' → logprob: -4.307277679443359
    4. 'i' → logprob: -4.807277679443359
    5. 'f' → logprob: -5.557277679443359
    6. ',' → logprob: -5.682277679443359
    7. ')' → logprob: -6.932277679443359
    8. '#' → logprob: -7.432277679443359
    9. '(' → logprob: -7.682277679443359
    10. ' ' → logprob: -7.807277679443359

Token 306: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005759911146014929
    2. 'pow' → logprob: -5.6307597160339355
    3. 'p' → logprob: -7.2557597160339355
    4. 'factor' → logprob: -7.3807597160339355
    5. 'i' → logprob: -8.505760192871094
    6. 'fact' → logprob: -9.005760192871094
    7. 'f' → logprob: -9.380760192871094
    8. 'power' → logprob: -9.380760192871094
    9. ' for' → logprob: -9.630760192871094
    10. 'k' → logprob: -9.755760192871094

Token 307: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.17476828396320343
    2. 'ours' → logprob: -3.0497682094573975
    3. 'for' → logprob: -3.4247682094573975
    4. ' for' → logprob: -3.7997682094573975
    5. 'or' → logprob: -3.7997682094573975
    6. 'er' → logprob: -4.549768447875977
    7. 'ourt' → logprob: -5.174768447875977
    8. 'o' → logprob: -5.674768447875977
    9. 'ur' → logprob: -5.924768447875977
    10. 'u' → logprob: -5.924768447875977

Token 308: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3039555549621582
    2. 'range' → logprob: -1.5539555549621582
    3. ' i' → logprob: -4.303955554962158
    4. '(range' → logprob: -4.428955554962158
    5. ' n' → logprob: -4.553955554962158
    6. 'i' → logprob: -5.678955554962158
    7. '_' → logprob: -5.803955554962158
    8. 'n' → logprob: -5.928955554962158
    9. ' c' → logprob: -6.678955554962158
    10. '(' → logprob: -6.803955554962158

Token 309: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13787923753261566
    2. ' i' → logprob: -2.1378791332244873
    3. 'c' → logprob: -4.762879371643066
    4. ' c' → logprob: -6.637879371643066
    5. '_' → logprob: -7.137879371643066
    6. ' _' → logprob: -9.387879371643066
    7. 'x' → logprob: -9.762879371643066
    8. ' ' → logprob: -10.512879371643066
    9. '_i' → logprob: -10.887879371643066
    10. 'e' → logprob: -11.637879371643066

Token 310: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0486966371536255
    2. ' in' → logprob: -1.4236966371536255
    3. ',' → logprob: -1.6736966371536255
    4. 'i' → logprob: -1.7986966371536255
    5. 'in' → logprob: -3.673696517944336
    6. ' ' → logprob: -4.673696517944336
    7. '(' → logprob: -4.923696517944336
    8. 'for' → logprob: -5.173696517944336
    9. '_' → logprob: -5.673696517944336
    10. ' for' → logprob: -6.298696517944336

Token 311: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.053080346435308456
    2. 'c' → logprob: -3.1780803203582764
    3. 'enumer' → logprob: -4.9280805587768555
    4. ' range' → logprob: -5.9280805587768555
    5. ' c' → logprob: -9.303080558776855
    6. ' enumerate' → logprob: -10.428080558776855
    7. '(range' → logprob: -13.053080558776855
    8. 'r' → logprob: -13.928080558776855
    9. 'enum' → logprob: -14.178080558776855
    10. 'rang' → logprob: -14.678080558776855

Token 312: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4345868229866028
    2. 'c' → logprob: -1.059586763381958
    3. ' range' → logprob: -5.184587001800537
    4. ' c' → logprob: -8.559586524963379
    5. 'enumer' → logprob: -9.684586524963379
    6. 'r' → logprob: -12.809586524963379
    7. 'rang' → logprob: -13.059586524963379
    8. '(range' → logprob: -13.059586524963379
    9. ' ' → logprob: -13.934586524963379
    10. ' enumerate' → logprob: -14.309586524963379

Token 313: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2789549231529236
    2. ' c' → logprob: -2.2789549827575684
    3. 'for' → logprob: -2.6539549827575684
    4. ' range' → logprob: -3.7789549827575684
    5. ' for' → logprob: -3.7789549827575684
    6. 'range' → logprob: -3.7789549827575684
    7. '(' → logprob: -6.653954982757568
    8. '(range' → logprob: -7.653954982757568
    9. 'enumer' → logprob: -9.15395450592041
    10. '(c' → logprob: -9.40395450592041

Token 314: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1160349458805285e-05
    2. 'range' → logprob: -11.625011444091797
    3. ' c' → logprob: -13.625011444091797
    4. 'enumer' → logprob: -14.500011444091797
    5. '(range' → logprob: -15.875011444091797
    6. '(c' → logprob: -16.625011444091797
    7. ')c' → logprob: -16.875011444091797
    8. 'for' → logprob: -16.875011444091797
    9. ' range' → logprob: -17.000011444091797
    10. '```' → logprob: -17.500011444091797

Token 315: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002078528515994549
    2. ' :' → logprob: -6.627078533172607
    3. ',' → logprob: -8.00207805633545
    4. 'for' → logprob: -8.50207805633545
    5. ':
' → logprob: -9.25207805633545
    6. ' for' → logprob: -9.75207805633545
    7. ',:' → logprob: -10.87707805633545
    8. ')' → logprob: -11.00207805633545
    9. '):' → logprob: -11.75207805633545
    10. 'range' → logprob: -12.37707805633545

Token 316: ' ainsi' (ID: 16371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2300618439912796
    2. ':' → logprob: -1.7300618886947632
    3. ' for' → logprob: -3.6050617694854736
    4. ',' → logprob: -7.605062007904053
    5. ':
' → logprob: -8.105061531066895
    6. ')' → logprob: -8.855061531066895
    7. ' :' → logprob: -10.355061531066895
    8. 'range' → logprob: -11.355061531066895
    9. 'in' → logprob: -11.605061531066895
    10. '.' → logprob: -11.605061531066895

Token 317: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02069276198744774
    2. ' for' → logprob: -4.145692825317383
    3. ',' → logprob: -5.520692825317383
    4. ':' → logprob: -8.145692825317383
    5. 'in' → logprob: -9.020692825317383
    6. 'range' → logprob: -9.270692825317383
    7. ' ' → logprob: -10.645692825317383
    8. 'pour' → logprob: -11.145692825317383
    9. ' in' → logprob: -11.395692825317383
    10. ')' → logprob: -11.520692825317383

Token 318: ' son' (ID: 2391)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.44132179021835327
    2. 'range' → logprob: -1.941321849822998
    3. 'enumer' → logprob: -2.191321849822998
    4. ' enumerate' → logprob: -2.316321849822998
    5. ' la' → logprob: -6.066321849822998
    6. ' ' → logprob: -8.44132137298584
    7. '(range' → logprob: -9.06632137298584
    8. ' ' → logprob: -9.19132137298584
    9. ' le' → logprob: -10.06632137298584
    10. ' l' → logprob: -11.19132137298584

Token 319: ' indice' (ID: 90848)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.18773342669010162
    2. 'indice' → logprob: -2.6877334117889404
    3. ' indice' → logprob: -2.6877334117889404
    4. 'index' → logprob: -3.5627334117889404
    5. ' idx' → logprob: -5.4377336502075195
    6. ' i' → logprob: -6.9377336502075195
    7. ',' → logprob: -7.9377336502075195
    8. 'idx' → logprob: -8.31273365020752
    9. ' ' → logprob: -8.31273365020752
    10. 'i' → logprob: -9.06273365020752

Token 320: ' correspondant' (ID: 146058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00630783149972558
    2. ' for' → logprob: -5.506307601928711
    3. ',' → logprob: -6.131307601928711
    4. ':' → logprob: -10.006307601928711
    5. 'in' → logprob: -13.506307601928711
    6. 'i' → logprob: -14.006307601928711
    7. '```' → logprob: -14.256307601928711
    8. 'or' → logprob: -14.381307601928711
    9. 'enumer' → logprob: -14.756307601928711
    10. 'c' → logprob: -14.756307601928711

Token 321: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019135961309075356
    2. ' for' → logprob: -4.26913595199585
    3. ',' → logprob: -5.39413595199585
    4. ':' → logprob: -7.89413595199585
    5. 'enumer' → logprob: -11.394136428833008
    6. '
' → logprob: -12.019136428833008
    7. ',
' → logprob: -12.644136428833008
    8. ':
' → logprob: -12.769136428833008
    9. 'n' → logprob: -13.019136428833008
    10. '.' → logprob: -13.269136428833008

Token 322: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005544631858356297
    2. ' for' → logprob: -7.50055456161499
    3. 'f' → logprob: -13.750554084777832
    4. 'or' → logprob: -16.00055503845215
    5. 'fo' → logprob: -16.37555503845215
    6. ',' → logprob: -17.00055503845215
    7. 'i' → logprob: -17.37555503845215
    8. ':' → logprob: -17.50055503845215
    9. '```' → logprob: -18.50055503845215
    10. 'n' → logprob: -18.62555503845215

Token 323: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5771042108535767
    2. ' i' → logprob: -0.8271042108535767
    3. 'idx' → logprob: -7.577104091644287
    4. ' idx' → logprob: -7.827104091644287
    5. 'index' → logprob: -9.202104568481445
    6. 'x' → logprob: -10.577104568481445
    7. ' index' → logprob: -10.577104568481445
    8. ' ' → logprob: -10.827104568481445
    9. 'k' → logprob: -11.077104568481445
    10. '	i' → logprob: -11.327104568481445

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033741019666194916
    2. ' in' → logprob: -3.908740997314453
    3. ' ,' → logprob: -4.658740997314453
    4. 'in' → logprob: -5.783740997314453
    5. ' ' → logprob: -7.533740997314453
    6. ',in' → logprob: -11.783740997314453
    7. ',n' → logprob: -13.033740997314453
    8. ',v' → logprob: -13.033740997314453
    9. '  ' → logprob: -13.658740997314453
    10. ',c' → logprob: -13.783740997314453

Token 325: ' ci' (ID: 7405)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8525823950767517
    2. 'value' → logprob: -1.3525824546813965
    3. 'val' → logprob: -1.7275824546813965
    4. 'ci' → logprob: -2.7275824546813965
    5. 'x' → logprob: -3.6025824546813965
    6. 'v' → logprob: -4.1025824546813965
    7. ' val' → logprob: -4.7275824546813965
    8. ' c' → logprob: -4.7275824546813965
    9. ' value' → logprob: -6.1025824546813965
    10. ' ci' → logprob: -6.2275824546813965

Token 326: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12712222337722778
    2. 'in' → logprob: -2.127122163772583
    3. ' ' → logprob: -9.127121925354004
    4. ')' → logprob: -9.877121925354004
    5. ',' → logprob: -11.002121925354004
    6. '	in' → logprob: -12.377121925354004
    7. 'n' → logprob: -12.752121925354004
    8. '  ' → logprob: -13.502121925354004
    9. 'import' → logprob: -13.627121925354004
    10. 's' → logprob: -13.627121925354004

Token 327: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01416350994259119
    2. ' enumerate' → logprob: -4.264163494110107
    3. 'en' → logprob: -17.514163970947266
    4. 'enum' → logprob: -18.139163970947266
    5. '```' → logprob: -19.764163970947266
    6. 'Enumer' → logprob: -20.139163970947266
    7. '.enumer' → logprob: -20.139163970947266
    8. 'range' → logprob: -20.264163970947266
    9. 'c' → logprob: -20.889163970947266
    10. ' enumer' → logprob: -21.139163970947266

Token 328: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00012999906903132796
    2. '(' → logprob: -9.750129699707031
    3. 'c' → logprob: -10.375129699707031
    4. ' (' → logprob: -10.625129699707031
    5. ' c' → logprob: -11.500129699707031
    6. ')c' → logprob: -12.375129699707031
    7. ',c' → logprob: -13.875129699707031
    8. '	c' → logprob: -15.375129699707031
    9. ' ' → logprob: -15.625129699707031
    10. '(ci' → logprob: -15.875129699707031

Token 329: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004946522531099617
    2. ')' → logprob: -8.125494956970215
    3. '):
' → logprob: -9.000494956970215
    4. ' ):' → logprob: -10.000494956970215
    5. ':' → logprob: -10.625494956970215
    6. ',' → logprob: -12.500494956970215
    7. '):
' → logprob: -13.875494956970215
    8. '):

' → logprob: -16.1254940032959
    9. ' :' → logprob: -16.2504940032959
    10. '():' → logprob: -16.3754940032959

Token 330: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19895847141742706
    2. '   ' → logprob: -1.9489585161209106
    3. '):' → logprob: -3.948958396911621
    4. ' :' → logprob: -5.198958396911621
    5. ' ans' → logprob: -5.323958396911621
    6. ' ' → logprob: -6.198958396911621
    7. ')' → logprob: -6.198958396911621
    8. 'ans' → logprob: -6.948958396911621
    9. '(ans' → logprob: -7.448958396911621
    10. '+' → logprob: -7.823958396911621

Token 331: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1484399139881134
    2. 'ans' → logprob: -2.023439884185791
    3. '   ' → logprob: -5.398439884185791
    4. '(ans' → logprob: -7.523439884185791
    5. ')' → logprob: -8.39844036102295
    6. '	ans' → logprob: -8.89844036102295
    7. '    
' → logprob: -9.27344036102295
    8. ' if' → logprob: -9.89844036102295
    9. 'pow' → logprob: -10.52344036102295
    10. ' ' → logprob: -10.64844036102295

Token 332: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007763731759041548
    2. ' ans' → logprob: -5.507763862609863
    3. 'val' → logprob: -6.757763862609863
    4. 'pow' → logprob: -7.757763862609863
    5. 'power' → logprob: -8.132763862609863
    6. 'coeff' → logprob: -8.132763862609863
    7. '   ' → logprob: -8.382763862609863
    8. 'if' → logprob: -8.507763862609863
    9. 'term' → logprob: -9.007763862609863
    10. 'p' → logprob: -9.007763862609863

Token 333: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26088863611221313
    2. ' ci' → logprob: -3.2608885765075684
    3. ' ans' → logprob: -3.3858885765075684
    4. ' (' → logprob: -3.6358885765075684
    5. ' c' → logprob: -3.8858885765075684
    6. 'i' → logprob: -3.8858885765075684
    7. ' ' → logprob: -3.8858885765075684
    8. ' _' → logprob: -4.260888576507568
    9. ' range' → logprob: -4.385888576507568
    10. '(' → logprob: -4.885888576507568

Token 334: ' élément' (ID: 99627)
  Prédit: ' ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ci' → logprob: -0.8981083035469055
    2. 'ci' → logprob: -1.3981082439422607
    3. ' ans' → logprob: -1.7731082439422607
    4. ' i' → logprob: -2.0231082439422607
    5. 'ans' → logprob: -4.39810848236084
    6. 'i' → logprob: -4.52310848236084
    7. '(ci' → logprob: -5.64810848236084
    8. ' ' → logprob: -5.64810848236084
    9. ' (' → logprob: -5.77310848236084
    10. '(ans' → logprob: -6.02310848236084

Token 335: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1304531693458557
    2. '   ' → logprob: -2.755453109741211
    3. '):' → logprob: -3.630453109741211
    4. ' :' → logprob: -4.005453109741211
    5. ':
' → logprob: -5.255453109741211
    6. ',' → logprob: -5.505453109741211
    7. ')' → logprob: -6.630453109741211
    8. '):
' → logprob: -6.755453109741211
    9. ' ans' → logprob: -7.130453109741211
    10. ' :
' → logprob: -7.630453109741211

Token 336: ' calc' (ID: 25691)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4987354278564453
    2. ' ans' → logprob: -0.9987354278564453
    3. '   ' → logprob: -3.7487354278564453
    4. '	ans' → logprob: -8.123735427856445
    5. '    
' → logprob: -9.248735427856445
    6. 'val' → logprob: -9.248735427856445
    7. '(ans' → logprob: -9.623735427856445
    8. 'pow' → logprob: -10.623735427856445
    9. ' val' → logprob: -10.873735427856445
    10. ' ' → logprob: -10.873735427856445

Token 337: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.057836320251226425
    2. '(' → logprob: -3.3078362941741943
    3. '(i' → logprob: -4.807836532592773
    4. '(ci' → logprob: -5.182836532592773
    5. 'uler' → logprob: -6.432836532592773
    6. 'ulate' → logprob: -6.807836532592773
    7. 'ulé' → logprob: -7.432836532592773
    8. '((' → logprob: -7.557836532592773
    9. '=' → logprob: -7.682836532592773
    10. '   ' → logprob: -8.307836532592773

Token 338: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4983462393283844
    2. ' ans' → logprob: -1.373346209526062
    3. '(ans' → logprob: -2.6233463287353516
    4. '(ci' → logprob: -3.9983463287353516
    5. '(' → logprob: -4.623346328735352
    6. 'ans' → logprob: -4.748346328735352
    7. ' ci' → logprob: -4.748346328735352
    8. '(i' → logprob: -4.873346328735352
    9. 'pow' → logprob: -5.748346328735352
    10. ' pow' → logprob: -5.748346328735352

Token 339: 'indice' (ID: 176697)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.16221068799495697
    2. '(ci' → logprob: -2.162210702896118
    3. ' ci' → logprob: -3.787210702896118
    4. '(' → logprob: -5.162210464477539
    5. 'pow' → logprob: -5.662210464477539
    6. '2' → logprob: -7.287210464477539
    7. '(i' → logprob: -7.537210464477539
    8. 'i' → logprob: -7.787210464477539
    9. ' (' → logprob: -7.787210464477539
    10. '((' → logprob: -8.412210464477539

Token 340: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7155999541282654
    2. ' *' → logprob: -1.0906000137329102
    3. '+' → logprob: -1.9656000137329102
    4. '*' → logprob: -3.84060001373291
    5. ')' → logprob: -5.34060001373291
    6. ' ' → logprob: -5.71560001373291
    7. '(ci' → logprob: -6.34060001373291
    8. ' )' → logprob: -7.46560001373291
    9. '(i' → logprob: -7.46560001373291
    10. '   ' → logprob: -7.59060001373291

Token 341: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003863438032567501
    2. ' ' → logprob: -7.8753862380981445
    3. '2' → logprob: -13.375386238098145
    4. 'ci' → logprob: -13.375386238098145
    5. ')' → logprob: -13.750386238098145
    6. ' i' → logprob: -15.000386238098145
    7. 'i' → logprob: -15.000386238098145
    8. '   ' → logprob: -16.00038719177246
    9. ' ' → logprob: -16.00038719177246
    10. '
' → logprob: -16.06288719177246

Token 342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04927131161093712
    2. ')**' → logprob: -3.17427134513855
    3. ')*' → logprob: -5.549271106719971
    4. ' )' → logprob: -6.424271106719971
    5. '**' → logprob: -7.799271106719971
    6. '*' → logprob: -9.424271583557129
    7. ')*(' → logprob: -9.799271583557129
    8. '   ' → logprob: -9.924271583557129
    9. ' *' → logprob: -10.049271583557129
    10. ' ' → logprob: -11.049271583557129

Token 343: ' fois' (ID: 14697)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038610078394412994
    2. '*' → logprob: -3.4136099815368652
    3. '**' → logprob: -5.413609981536865
    4. ' **' → logprob: -7.788609981536865
    5. ')' → logprob: -10.288610458374023
    6. ',' → logprob: -11.163610458374023
    7. ' ' → logprob: -11.788610458374023
    8. '*i' → logprob: -11.913610458374023
    9. ' *
' → logprob: -12.163610458374023
    10. '*(' → logprob: -12.538610458374023

Token 344: ' la' (ID: 557)
  Prédit: ' ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ci' → logprob: -0.06751258671283722
    2. 'ci' → logprob: -2.8175125122070312
    3. '(ci' → logprob: -5.442512512207031
    4. ' (' → logprob: -7.442512512207031
    5. ' ' → logprob: -8.692512512207031
    6. '(' → logprob: -9.067512512207031
    7. '   ' → logprob: -9.567512512207031
    8. ' ' → logprob: -9.942512512207031
    9. ' pow' → logprob: -10.192512512207031
    10. 'pow' → logprob: -10.442512512207031

Token 345: ' valeur' (ID: 41664)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.03809862956404686
    2. ' ci' → logprob: -3.2880985736846924
    3. '(ci' → logprob: -9.788098335266113
    4. 'cii' → logprob: -14.288098335266113
    5. 'pow' → logprob: -16.16309928894043
    6. 'c' → logprob: -16.41309928894043
    7. '-ci' → logprob: -16.53809928894043
    8. '_ci' → logprob: -17.16309928894043
    9. 'ciu' → logprob: -17.66309928894043
    10. ' ' → logprob: -17.91309928894043

Token 346: ' correspond' (ID: 11095)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.558988094329834
    2. '*' → logprob: -1.433988094329834
    3. ' ci' → logprob: -2.308988094329834
    4. 'ci' → logprob: -3.808988094329834
    5. ',' → logprob: -4.058988094329834
    6. '   ' → logprob: -4.308988094329834
    7. ' ' → logprob: -4.433988094329834
    8. '(ci' → logprob: -4.558988094329834
    9. ' ,' → logprob: -4.933988094329834
    10. '  ' → logprob: -5.558988094329834

Token 347: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.037124935537576675
    2. 'ant' → logprob: -3.4121248722076416
    3. 'nte' → logprob: -6.162125110626221
    4. 'ente' → logprob: -7.537125110626221
    5. ' ci' → logprob: -8.912124633789062
    6. 'ci' → logprob: -9.037124633789062
    7. 't' → logprob: -9.287124633789062
    8. '   ' → logprob: -9.662124633789062
    9. 'ent' → logprob: -9.912124633789062
    10. '(ci' → logprob: -10.037124633789062

Token 348: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019017254933714867
    2. ' *' → logprob: -4.269017219543457
    3. ':' → logprob: -6.144017219543457
    4. '*' → logprob: -7.144017219543457
    5. ',' → logprob: -7.519017219543457
    6. ')' → logprob: -7.644017219543457
    7. '  ' → logprob: -8.644017219543457
    8. '):' → logprob: -8.769017219543457
    9. ' ans' → logprob: -8.894017219543457
    10. 'ans' → logprob: -9.144017219543457

Token 349: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29135316610336304
    2. ')' → logprob: -2.291353225708008
    3. '<|end|>' → logprob: -2.916353225708008
    4. ' ' → logprob: -3.166353225708008
    5. ' ans' → logprob: -4.041353225708008
    6. ' )' → logprob: -5.041353225708008
    7. ' and' → logprob: -5.166353225708008
    8. '  ' → logprob: -5.291353225708008
    9. '    ' → logprob: -5.416353225708008
    10. 'ans' → logprob: -5.541353225708008

Token 350: ' applique' (ID: 180579)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6297149062156677
    2. ' ans' → logprob: -0.8797149062156677
    3. '(ans' → logprob: -3.0047149658203125
    4. '	ans' → logprob: -6.7547149658203125
    5. '   ' → logprob: -7.2547149658203125
    6. ' (' → logprob: -8.004714965820312
    7. ' ' → logprob: -9.379714965820312
    8. '_ans' → logprob: -9.504714965820312
    9. ' +=' → logprob: -9.629714965820312
    10. ')' → logprob: -9.754714965820312

Token 351: ' le' (ID: 505)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7382459044456482
    2. ' MOD' → logprob: -1.113245964050293
    3. '%' → logprob: -2.113245964050293
    4. 'MOD' → logprob: -2.988245964050293
    5. ' modulo' → logprob: -4.238245964050293
    6. ' ' → logprob: -5.488245964050293
    7. ')' → logprob: -6.613245964050293
    8. '_MOD' → logprob: -7.488245964050293
    9. ' %=' → logprob: -7.738245964050293
    10. ' (' → logprob: -8.238245964050293

Token 352: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.09931409358978271
    2. '%' → logprob: -2.7243142127990723
    3. 'MOD' → logprob: -4.599314212799072
    4. 'mod' → logprob: -4.974314212799072
    5. ' %' → logprob: -4.974314212799072
    6. ' MOD' → logprob: -5.474314212799072
    7. ' modulus' → logprob: -7.849314212799072
    8. 'Modulo' → logprob: -8.099313735961914
    9. '_MOD' → logprob: -10.099313735961914
    10. '_mod' → logprob: -10.599313735961914

Token 353: ' MOD' (ID: 32868)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6357582211494446
    2. ' ans' → logprob: -2.0107581615448
    3. 'MOD' → logprob: -2.6357581615448
    4. ' MOD' → logprob: -3.0107581615448
    5. ',' → logprob: -3.2607581615448
    6. ' (' → logprob: -3.2607581615448
    7. '%' → logprob: -3.3857581615448
    8. 'ans' → logprob: -3.5107581615448
    9. '=' → logprob: -4.385758399963379
    10. ' (%)' → logprob: -4.635758399963379

Token 354: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30878737568855286
    2. '   ' → logprob: -1.4337873458862305
    3. ':
' → logprob: -4.8087873458862305
    4. ',' → logprob: -5.3087873458862305
    5. ' ans' → logprob: -5.4337873458862305
    6. 'ans' → logprob: -6.0587873458862305
    7. '(ans' → logprob: -6.3087873458862305
    8. ')' → logprob: -6.4337873458862305
    9. '):' → logprob: -6.6837873458862305
    10. '	ans' → logprob: -7.1837873458862305

Token 355: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5068939328193665
    2. '   ' → logprob: -1.0068938732147217
    3. '):' → logprob: -4.506894111633301
    4. 'ans' → logprob: -4.756894111633301
    5. ' ans' → logprob: -5.006894111633301
    6. '(ans' → logprob: -6.631894111633301
    7. ')' → logprob: -6.881894111633301
    8. ' :' → logprob: -7.006894111633301
    9. '	ans' → logprob: -7.131894111633301
    10. '  ' → logprob: -7.381894111633301

Token 356: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13240379095077515
    2. ' ans' → logprob: -2.13240385055542
    3. '   ' → logprob: -5.75740385055542
    4. '(ans' → logprob: -6.13240385055542
    5. '	ans' → logprob: -9.132403373718262
    6. '
' → logprob: -12.257403373718262
    7. '_ans' → logprob: -12.507403373718262
    8. '    
' → logprob: -12.632403373718262
    9. ' 
' → logprob: -12.757403373718262
    10. 'answer' → logprob: -13.132403373718262

Token 357: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19296947121620178
    2. ' ans' → logprob: -2.317969560623169
    3. '   ' → logprob: -2.567969560623169
    4. '	ans' → logprob: -8.31796932220459
    5. '(ans' → logprob: -10.31796932220459
    6. ' ' → logprob: -11.31796932220459
    7. 'answer' → logprob: -11.56796932220459
    8. '  ' → logprob: -12.06796932220459
    9. '
' → logprob: -12.31796932220459
    10. 'ann' → logprob: -12.56796932220459

Token 358: ' opération' (ID: 86023)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005261629819869995
    2. ' ans' → logprob: -5.380261421203613
    3. 'val' → logprob: -8.505261421203613
    4. '	ans' → logprob: -9.505261421203613
    5. 's' → logprob: -10.505261421203613
    6. 'value' → logprob: -10.630261421203613
    7. 'operation' → logprob: -10.630261421203613
    8. 'ann' → logprob: -10.630261421203613
    9. 'a' → logprob: -10.755261421203613
    10. ' is' → logprob: -10.880261421203613

Token 359: ' emp' (ID: 4927)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2941245138645172
    2. '<|end|>' → logprob: -2.5441246032714844
    3. ':' → logprob: -3.4191246032714844
    4. ' est' → logprob: -4.044124603271484
    5. '   ' → logprob: -4.044124603271484
    6. ' ans' → logprob: -4.169124603271484
    7. ')' → logprob: -4.294124603271484
    8. 's' → logprob: -4.794124603271484
    9. '<|end|>' → logprob: -5.044124603271484
    10. '
' → logprob: -5.044124603271484

Token 360: 'êche' (ID: 63993)
  Prédit: 'êche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êche' → logprob: -0.9353522658348083
    2. '=' → logprob: -1.0603523254394531
    3. 'lo' → logprob: -2.560352325439453
    4. 'ly' → logprob: -3.435352325439453
    5. 'orte' → logprob: -3.935352325439453
    6. 'ile' → logprob: -4.185352325439453
    7. 'le' → logprob: -4.560352325439453
    8. '+=' → logprob: -4.685352325439453
    9. 'lace' → logprob: -4.685352325439453
    10. 'porte' → logprob: -4.810352325439453

Token 361: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0450379848480225
    2. ' overflow' → logprob: -1.1700379848480225
    3. 'overflow' → logprob: -2.9200379848480225
    4. ' la' → logprob: -2.9200379848480225
    5. ' une' → logprob: -3.1700379848480225
    6. ' l' → logprob: -3.2950379848480225
    7. ' que' → logprob: -3.4200379848480225
    8. ' ans' → logprob: -3.5450379848480225
    9. 'ans' → logprob: -3.7950379848480225
    10. ' des' → logprob: -4.045038223266602

Token 362: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2622351050376892
    2. 'overflow' → logprob: -2.137235164642334
    3. 'dé' → logprob: -2.887235164642334
    4. ' dépasse' → logprob: -3.137235164642334
    5. ' overflow' → logprob: -4.762235164642334
    6. ' déb' → logprob: -5.762235164642334
    7. 's' → logprob: -7.387235164642334
    8. 'ans' → logprob: -7.887235164642334
    9. 'val' → logprob: -8.637234687805176
    10. 'ent' → logprob: -9.387234687805176

Token 363: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34193122386932373
    2. '=' → logprob: -2.3419313430786133
    3. ' d' → logprob: -2.3419313430786133
    4. ' ans' → logprob: -2.9669313430786133
    5. ' =' → logprob: -3.2169313430786133
    6. ' ' → logprob: -6.841931343078613
    7. 'ans' → logprob: -6.841931343078613
    8. '_' → logprob: -7.341931343078613
    9. 'de' → logprob: -7.591931343078613
    10. ' from' → logprob: -7.716931343078613

Token 364: ' dépasser' (ID: 187375)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24044768512248993
    2. 'dé' → logprob: -1.8654476404190063
    3. 'overflow' → logprob: -3.615447759628296
    4. 'ans' → logprob: -3.865447759628296
    5. ' dépasse' → logprob: -6.365447521209717
    6. ' dépasser' → logprob: -6.365447521209717
    7. ' overflow' → logprob: -6.490447521209717
    8. 'l' → logprob: -6.615447521209717
    9. 's' → logprob: -7.115447521209717
    10. ' ans' → logprob: -7.240447521209717

Token 365: ' une' (ID: 2463)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.033729493618011475
    2. 'MOD' → logprob: -3.4087295532226562
    3. ' le' → logprob: -10.908729553222656
    4. ' (' → logprob: -11.033729553222656
    5. ')' → logprob: -11.158729553222656
    6. '(M' → logprob: -12.158729553222656
    7. ' )' → logprob: -12.283729553222656
    8. '_MOD' → logprob: -12.408729553222656
    9. '.MOD' → logprob: -12.408729553222656
    10. '(Mod' → logprob: -12.783729553222656

Token 366: ' certaine' (ID: 91318)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -1.9934194087982178
    2. 'b' → logprob: -2.2434194087982178
    3. ' overflow' → logprob: -2.3684194087982178
    4. ' large' → logprob: -2.3684194087982178
    5. 'large' → logprob: -2.4934194087982178
    6. 'MOD' → logprob: -2.6184194087982178
    7. ' modulo' → logprob: -2.6184194087982178
    8. ' ans' → logprob: -2.7434194087982178
    9. 'ans' → logprob: -3.2434194087982178
    10. ' MOD' → logprob: -3.3684194087982178

Token 367: ' limite' (ID: 48939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16050153970718384
    2. ' MOD' → logprob: -3.160501480102539
    3. '<|end|>' → logprob: -4.285501480102539
    4. ' modulo' → logprob: -4.410501480102539
    5. ' space' → logprob: -4.785501480102539
    6. ' ans' → logprob: -4.910501480102539
    7. ' espace' → logprob: -4.910501480102539
    8. ' )' → logprob: -4.910501480102539
    9. ' modulus' → logprob: -4.910501480102539
    10. ' overflow' → logprob: -5.035501480102539

Token 368: ' fix' (ID: 9295)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6180029511451721
    2. ':' → logprob: -1.3680028915405273
    3. ',' → logprob: -2.2430028915405273
    4. ' ans' → logprob: -2.9930028915405273
    5. ')' → logprob: -3.8680028915405273
    6. '(ans' → logprob: -4.993002891540527
    7. 'ans' → logprob: -5.118002891540527
    8. ':
' → logprob: -5.618002891540527
    9. '.' → logprob: -6.618002891540527
    10. '	ans' → logprob: -6.868002891540527

Token 369: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.012618301436305046
    2. ')' → logprob: -4.887618064880371
    3. '=' → logprob: -6.262618064880371
    4. 'é' → logprob: -6.637618064880371
    5. 'e' → logprob: -7.387618064880371
    6. ' )' → logprob: -7.887618064880371
    7. ' =' → logprob: -8.137618064880371
    8. 'urée' → logprob: -9.637618064880371
    9. '+' → logprob: -10.137618064880371
    10. 'ées' → logprob: -10.262618064880371

Token 370: ' par' (ID: 686)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.9697477221488953
    2. ' ans' → logprob: -1.34474778175354
    3. ')' → logprob: -1.96974778175354
    4. ',' → logprob: -2.59474778175354
    5. '   ' → logprob: -3.21974778175354
    6. 'ans' → logprob: -3.46974778175354
    7. ' )' → logprob: -3.71974778175354
    8. '%' → logprob: -3.84474778175354
    9. '=' → logprob: -4.969747543334961
    10. ' ,' → logprob: -6.094747543334961

Token 371: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.20164215564727783
    2. ' MOD' → logprob: -1.7016421556472778
    3. ' ' → logprob: -8.701642036437988
    4. '100' → logprob: -10.701642036437988
    5. ' ' → logprob: -10.826642036437988
    6. '10' → logprob: -12.076642036437988
    7. ' le' → logprob: -12.826642036437988
    8. '_MOD' → logprob: -13.451642036437988
    9. '  ' → logprob: -13.576642036437988
    10. '```' → logprob: -13.576642036437988

Token 372: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6018269062042236
    2. '   ' → logprob: -0.9768269062042236
    3. '):' → logprob: -3.2268269062042236
    4. ')' → logprob: -3.6018269062042236
    5. ',' → logprob: -6.1018266677856445
    6. ' ' → logprob: -6.6018266677856445
    7. ':
' → logprob: -6.6018266677856445
    8. '  ' → logprob: -7.1018266677856445
    9. ' :' → logprob: -7.6018266677856445
    10. ' ans' → logprob: -8.101826667785645

Token 373: ' emp' (ID: 4927)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.27014708518981934
    2. ' continue' → logprob: -2.7701470851898193
    3. ' assure' → logprob: -2.8951470851898193
    4. ' garantit' → logprob: -3.5201470851898193
    5. ')' → logprob: -4.645147323608398
    6. ' addition' → logprob: -4.895147323608398
    7. ' ensures' → logprob: -4.895147323608398
    8. 's' → logprob: -4.895147323608398
    9. ' +=' → logprob: -5.020147323608398
    10. ' s' → logprob: -5.270147323608398

Token 374: 'êche' (ID: 63993)
  Prédit: 'êche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êche' → logprob: -0.01410485990345478
    2. 'orte' → logprob: -5.889104843139648
    3. 're' → logprob: -6.139104843139648
    4. 'f' → logprob: -6.514104843139648
    5. 'oste' → logprob: -7.389104843139648
    6. 'ose' → logprob: -7.389104843139648
    7. 'lo' → logprob: -7.639104843139648
    8. 'o' → logprob: -7.764104843139648
    9. 'ORTE' → logprob: -7.764104843139648
    10. 'porte' → logprob: -7.889104843139648

Token 375: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.31038641929626465
    2. ' overflow' → logprob: -2.0603864192962646
    3. ' des' → logprob: -2.9353864192962646
    4. ' l' → logprob: -3.6853864192962646
    5. 'les' → logprob: -3.9353864192962646
    6. 'des' → logprob: -4.560386657714844
    7. 'overflow' → logprob: -4.560386657714844
    8. 'l' → logprob: -4.810386657714844
    9. ' un' → logprob: -5.685386657714844
    10. ' une' → logprob: -5.935386657714844

Token 376: ' déb' (ID: 37874)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.20816323161125183
    2. 'overflow' → logprob: -1.7081632614135742
    3. ' over' → logprob: -5.708163261413574
    4. ' Overflow' → logprob: -6.708163261413574
    5. 'Overflow' → logprob: -6.958163261413574
    6. ' erreurs' → logprob: -7.833163261413574
    7. ' dépasse' → logprob: -7.833163261413574
    8. 'over' → logprob: -8.583163261413574
    9. ' integer' → logprob: -9.708163261413574
    10. 'dé' → logprob: -9.833163261413574

Token 377: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0001698094274615869
    2. 'or' → logprob: -9.25016975402832
    3. 'ords' → logprob: -10.12516975402832
    4. 'orde' → logprob: -11.37516975402832
    5. '```' → logprob: -12.87516975402832
    6. 'ors' → logprob: -13.25016975402832
    7. 'орд' → logprob: -13.62516975402832
    8. '(ord' → logprob: -13.62516975402832
    9. '``' → logprob: -13.87516975402832
    10. 'ort' → logprob: -14.00016975402832

Token 378: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -1.302633285522461
    2. 'er' → logprob: -1.677633285522461
    3. '```' → logprob: -2.052633285522461
    4. 't' → logprob: -2.802633285522461
    5. 'ord' → logprob: -3.052633285522461
    6. 'iers' → logprob: -3.177633285522461
    7. 'èrement' → logprob: -3.302633285522461
    8. 'î' → logprob: -3.677633285522461
    9. 'i' → logprob: -4.052633285522461
    10. 'r' → logprob: -4.302633285522461

Token 379: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17209583520889282
    2. ':' → logprob: -2.672095775604248
    3. ',' → logprob: -3.422095775604248
    4. ' ans' → logprob: -3.672095775604248
    5. 'ans' → logprob: -4.422095775604248
    6. ')' → logprob: -4.922095775604248
    7. '(ans' → logprob: -5.172095775604248
    8. '	ans' → logprob: -6.297095775604248
    9. '.' → logprob: -6.547095775604248
    10. ':
' → logprob: -7.672095775604248

Token 380: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.03605473414063454
    2. 'ent' → logprob: -3.411054849624634
    3. '’ent' → logprob: -6.536054611206055
    4. ' ent' → logprob: -7.536054611206055
    5. 'ans' → logprob: -8.911054611206055
    6. ''' → logprob: -9.911054611206055
    7. '_ent' → logprob: -10.411054611206055
    8. 'inte' → logprob: -10.661054611206055
    9. ''espace' → logprob: -10.661054611206055
    10. ' entier' → logprob: -10.786054611206055

Token 381: 'iers' (ID: 11012)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.2037310600280762
    2. 't' → logprob: -1.7037310600280762
    3. 'i' → logprob: -2.328731060028076
    4. 'ans' → logprob: -2.828731060028076
    5. 'ents' → logprob: -3.203731060028076
    6. '```' → logprob: -3.703731060028076
    7. 'd' → logprob: -3.828731060028076
    8. ' ent' → logprob: -4.078731060028076
    9. 'ent' → logprob: -4.203731060028076
    10. 'e' → logprob: -4.203731060028076

Token 382: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5637066960334778
    2. '   ' → logprob: -1.188706636428833
    3. ' ans' → logprob: -3.188706636428833
    4. '):' → logprob: -3.563706636428833
    5. ')' → logprob: -3.688706636428833
    6. 'ans' → logprob: -4.938706874847412
    7. ',' → logprob: -5.188706874847412
    8. '	ans' → logprob: -5.438706874847412
    9. ' ' → logprob: -5.563706874847412
    10. '<|end|>' → logprob: -5.688706874847412

Token 383: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9138302803039551
    2. '   ' → logprob: -1.413830280303955
    3. ' ans' → logprob: -1.413830280303955
    4. ':' → logprob: -3.163830280303955
    5. '(ans' → logprob: -3.163830280303955
    6. '):' → logprob: -4.913830280303955
    7. '	ans' → logprob: -4.913830280303955
    8. ' ' → logprob: -5.413830280303955
    9. ')' → logprob: -5.413830280303955
    10. '  ' → logprob: -6.663830280303955

Token 384: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0013217884115874767
    2. '   ' → logprob: -6.751321792602539
    3. ' ans' → logprob: -9.251321792602539
    4. '(ans' → logprob: -10.126321792602539
    5. '	ans' → logprob: -11.626321792602539
    6. '    
' → logprob: -13.001321792602539
    7. 'answer' → logprob: -13.876321792602539
    8. 'val' → logprob: -14.501321792602539
    9. ' ' → logprob: -14.876321792602539
    10. 'ann' → logprob: -14.876321792602539

Token 385: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31774526834487915
    2. ' +=' → logprob: -1.3177452087402344
    3. '+=(' → logprob: -6.192745208740234
    4. '=' → logprob: -6.317745208740234
    5. ' =' → logprob: -7.442745208740234
    6. '+' → logprob: -11.442745208740234
    7. '%=' → logprob: -11.692745208740234
    8. ']+=' → logprob: -11.692745208740234
    9. '=(' → logprob: -12.317745208740234
    10. '```' → logprob: -13.067745208740234

Token 386: ' (' (ID: 350)
  Prédit: '(ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ci' → logprob: -0.09061378240585327
    2. '((' → logprob: -2.840613842010498
    3. '(i' → logprob: -3.715613842010498
    4. ' (' → logprob: -5.590613842010498
    5. ' ((' → logprob: -9.59061336517334
    6. '(ans' → logprob: -9.96561336517334
    7. '(' → logprob: -10.84061336517334
    8. '(ii' → logprob: -11.59061336517334
    9. '(((' → logprob: -11.71561336517334
    10. 'ci' → logprob: -12.46561336517334

Token 387: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11361152678728104
    2. '(i' → logprob: -2.2386114597320557
    3. ' (' → logprob: -7.613611698150635
    4. ' i' → logprob: -8.238611221313477
    5. '   ' → logprob: -10.738611221313477
    6. '(' → logprob: -12.488611221313477
    7. '{i' → logprob: -13.488611221313477
    8. '[i' → logprob: -13.738611221313477
    9. '	i' → logprob: -14.113611221313477
    10. ' ' → logprob: -14.363611221313477

Token 388: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859054833650589
    2. ' +' → logprob: -3.048590660095215
    3. '+
' → logprob: -13.423590660095215
    4. ' +
' → logprob: -14.423590660095215
    5. ' ' → logprob: -15.048590660095215
    6. ' plus' → logprob: -15.673590660095215
    7. '2' → logprob: -15.673590660095215
    8. '()+' → logprob: -15.798590660095215
    9. '1' → logprob: -15.923590660095215
    10. '```' → logprob: -16.4235897064209

Token 389: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.625140190124512
    4. '  ' → logprob: -17.250141143798828
    5. '```' → logprob: -17.625141143798828
    6. '
' → logprob: -18.437641143798828
    7. '۲' → logprob: -18.562641143798828
    8. '    ' → logprob: -18.687641143798828
    9. '２' → logprob: -18.812641143798828
    10. '       ' → logprob: -19.750141143798828

Token 390: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '```' → logprob: -18.875003814697266
    5. '۲' → logprob: -19.000003814697266
    6. '２' → logprob: -19.125003814697266
    7. '
' → logprob: -19.187503814697266
    8. '  ' → logprob: -19.500003814697266
    9. '1' → logprob: -19.562503814697266
    10. '২' → logprob: -20.125003814697266

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030531475320458412
    2. ' *' → logprob: -3.905531406402588
    3. '*' → logprob: -4.655531406402588
    4. ')*' → logprob: -8.030531883239746
    5. ' )' → logprob: -9.280531883239746
    6. '*)' → logprob: -12.405531883239746
    7. '   ' → logprob: -12.530531883239746
    8. ' ' → logprob: -13.155531883239746
    9. ' ' → logprob: -14.405531883239746
    10. '```' → logprob: -14.530531883239746

Token 392: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.054891765117645264
    2. '*' → logprob: -2.92989182472229
    3. ' ' → logprob: -12.304891586303711
    4. ' ' → logprob: -12.929891586303711
    5. '```' → logprob: -14.554891586303711
    6. '   ' → logprob: -14.804891586303711
    7. '*c' → logprob: -14.804891586303711
    8. ')' → logprob: -15.179891586303711
    9. '*object' → logprob: -15.804891586303711
    10. '**' → logprob: -15.804891586303711

Token 393: ' ci' (ID: 7405)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.16023549437522888
    2. ' ci' → logprob: -1.9102355241775513
    3. '(ci' → logprob: -11.535235404968262
    4. 'cii' → logprob: -13.785235404968262
    5. '-ci' → logprob: -15.785235404968262
    6. '_ci' → logprob: -16.035236358642578
    7. 'c' → logprob: -16.410236358642578
    8. '   ' → logprob: -16.660236358642578
    9. ' ' → logprob: -16.910236358642578
    10. 'ciu' → logprob: -17.035236358642578

Token 394: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10175547003746033
    2. '%' → logprob: -2.476755380630493
    3. '<|end|>' → logprob: -4.976755619049072
    4. '
' → logprob: -6.101755619049072
    5. ')' → logprob: -6.101755619049072
    6. ' %=' → logprob: -7.851755619049072
    7. ')%' → logprob: -7.976755619049072
    8. ' ans' → logprob: -8.101755142211914
    9. ' ' → logprob: -9.351755142211914
    10. '<|end|>' → logprob: -10.226755142211914

Token 395: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019286326132714748
    2. ' MOD' → logprob: -6.251928806304932
    3. '_MOD' → logprob: -18.001928329467773
    4. '.MOD' → logprob: -18.251928329467773
    5. '(M' → logprob: -21.126928329467773
    6. 'MO' → logprob: -22.126928329467773
    7. ' ' → logprob: -22.626928329467773
    8. 'mod' → logprob: -22.626928329467773
    9. '(Mod' → logprob: -22.751928329467773
    10. ' ' → logprob: -22.876928329467773

Token 396: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' Ap' (ID: 6537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00033760786755010486
    2. ' ans' → logprob: -8.000337600708008
    3. '	ans' → logprob: -13.750337600708008
    4. '(ans' → logprob: -14.250337600708008
    5. '   ' → logprob: -14.875337600708008
    6. '_ans' → logprob: -17.750337600708008
    7. 'answer' → logprob: -18.125337600708008
    8. '```' → logprob: -18.250337600708008
    9. 'anst' → logprob: -18.625337600708008
    10. 'Ans' → logprob: -18.625337600708008

Token 400: 'plique' (ID: 71193)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.04649783670902252
    2. 'r' → logprob: -3.7964978218078613
    3. 'n' → logprob: -4.671497821807861
    4. 'ans' → logprob: -4.921497821807861
    5. '=' → logprob: -5.921497821807861
    6. 's' → logprob: -6.171497821807861
    7. ' =' → logprob: -7.921497821807861
    8. ' ans' → logprob: -7.921497821807861
    9. 'rs' → logprob: -8.42149829864502
    10. '	ans' → logprob: -9.29649829864502

Token 401: ' à' (ID: 1221)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.017630748450756073
    2. 'ans' → logprob: -4.142630577087402
    3. '(ans' → logprob: -6.517630577087402
    4. ' %=' → logprob: -9.767630577087402
    5. '	ans' → logprob: -10.392630577087402
    6. '_ans' → logprob: -11.642630577087402
    7. '%' → logprob: -11.642630577087402
    8. ' ' → logprob: -12.392630577087402
    9. ' MOD' → logprob: -13.267630577087402
    10. ')' → logprob: -13.517630577087402

Token 402: ' nouveau' (ID: 23184)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12827779352664948
    2. 'ans' → logprob: -2.1282777786254883
    3. '(ans' → logprob: -6.628277778625488
    4. '	ans' → logprob: -10.753277778625488
    5. '_ans' → logprob: -12.753277778625488
    6. '```' → logprob: -14.753277778625488
    7. ' ' → logprob: -14.878277778625488
    8. ' MOD' → logprob: -14.878277778625488
    9. 'mod' → logprob: -15.253277778625488
    10. 'Ans' → logprob: -15.878277778625488

Token 403: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.48206430673599243
    2. 'ans' → logprob: -0.9820643067359924
    3. '(ans' → logprob: -4.857064247131348
    4. '	ans' → logprob: -9.482064247131348
    5. '%' → logprob: -9.607064247131348
    6. ' %=' → logprob: -11.482064247131348
    7. '_ans' → logprob: -11.482064247131348
    8. 'mod' → logprob: -12.482064247131348
    9. '```' → logprob: -12.732064247131348
    10. ' MOD' → logprob: -13.107064247131348

Token 404: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2596697509288788
    2. ' ans' → logprob: -1.8846697807312012
    3. '%' → logprob: -2.634669780731201
    4. 'MOD' → logprob: -6.384669780731201
    5. ' %' → logprob: -6.634669780731201
    6. ' %=' → logprob: -7.134669780731201
    7. ' MOD' → logprob: -7.509669780731201
    8. 'mod' → logprob: -8.259669303894043
    9. '(ans' → logprob: -8.634669303894043
    10. '%=' → logprob: -9.009669303894043

Token 405: ' après' (ID: 16460)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2628110647201538
    2. ' ans' → logprob: -1.5128110647201538
    3. '(ans' → logprob: -4.637811183929443
    4. '=' → logprob: -7.387811183929443
    5. ' %=' → logprob: -8.637810707092285
    6. '	ans' → logprob: -8.762810707092285
    7. 'ANS' → logprob: -10.012810707092285
    8. '   ' → logprob: -10.137810707092285
    9. '_ans' → logprob: -10.262810707092285
    10. '%=' → logprob: -10.637810707092285

Token 406: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010454319417476654
    2. ' ans' → logprob: -6.876045227050781
    3. '(ans' → logprob: -12.001045227050781
    4. '=' → logprob: -12.501045227050781
    5. '   ' → logprob: -14.126045227050781
    6. '	ans' → logprob: -14.126045227050781
    7. '+=' → logprob: -14.251045227050781
    8. '```' → logprob: -14.751045227050781
    9. '_ans' → logprob: -15.876045227050781
    10. ')' → logprob: -17.37604522705078

Token 407: ''' (ID: 6)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07155590504407883
    2. '+=' → logprob: -2.9465558528900146
    3. '=' → logprob: -4.196556091308594
    4. ' +=' → logprob: -7.321556091308594
    5. ' ans' → logprob: -7.821556091308594
    6. '+' → logprob: -8.696556091308594
    7. '(ans' → logprob: -9.196556091308594
    8. '%=' → logprob: -10.196556091308594
    9. 'a' → logprob: -10.696556091308594
    10. '```' → logprob: -10.946556091308594

Token 408: 'addition' (ID: 198155)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011974901426583529
    2. 'addition' → logprob: -7.251197338104248
    3. '+=' → logprob: -8.001197814941406
    4. ' ans' → logprob: -9.501197814941406
    5. 'aj' → logprob: -10.501197814941406
    6. '=' → logprob: -10.751197814941406
    7. 'assignment' → logprob: -11.626197814941406
    8. ' addition' → logprob: -12.001197814941406
    9. ' +=' → logprob: -12.501197814941406
    10. '```' → logprob: -13.001197814941406

Token 409: ' pour' (ID: 1930)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3150475323200226
    2. 'ans' → logprob: -1.3150475025177002
    3. '(ans' → logprob: -6.565047740936279
    4. '	ans' → logprob: -8.440047264099121
    5. '   ' → logprob: -9.690047264099121
    6. '_ans' → logprob: -10.315047264099121
    7. ' =' → logprob: -10.690047264099121
    8. '=' → logprob: -11.190047264099121
    9. '
' → logprob: -11.440047264099121
    10. ' %=' → logprob: -11.815047264099121

Token 410: ' garantir' (ID: 48328)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2027003914117813
    2. 'ans' → logprob: -1.7027003765106201
    3. '(ans' → logprob: -6.702700614929199
    4. '	ans' → logprob: -10.2027006149292
    5. '_ans' → logprob: -11.4527006149292
    6. '   ' → logprob: -11.5777006149292
    7. ' ' → logprob: -14.5777006149292
    8. '```' → logprob: -15.3277006149292
    9. 'Ans' → logprob: -15.5777006149292
    10. 'answer' → logprob: -15.8277006149292

Token 411: ' que' (ID: 661)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06436851620674133
    2. ' ans' → logprob: -2.814368486404419
    3. '(ans' → logprob: -6.064368724822998
    4. ' MOD' → logprob: -10.18936824798584
    5. 'MOD' → logprob: -11.06436824798584
    6. '	ans' → logprob: -11.18936824798584
    7. '   ' → logprob: -12.43936824798584
    8. '_ans' → logprob: -13.93936824798584
    9. '```' → logprob: -14.43936824798584
    10. ' ' → logprob: -15.06436824798584

Token 412: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011061854660511017
    2. ' ans' → logprob: -4.511061668395996
    3. '(ans' → logprob: -11.261061668395996
    4. '	ans' → logprob: -14.011061668395996
    5. '   ' → logprob: -15.386061668395996
    6. 'answer' → logprob: -16.386062622070312
    7. '_ans' → logprob: -17.136062622070312
    8. 'answers' → logprob: -19.511062622070312
    9. ' ' → logprob: -20.136062622070312
    10. '
' → logprob: -20.136062622070312

Token 413: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.038078561425209045
    2. ' ans' → logprob: -3.288078546524048
    3. '(ans' → logprob: -10.288078308105469
    4. '	ans' → logprob: -13.038078308105469
    5. 'answer' → logprob: -15.163078308105469
    6. '   ' → logprob: -15.288078308105469
    7. '_ans' → logprob: -15.788078308105469
    8. '
' → logprob: -16.41307830810547
    9. ' ' → logprob: -16.78807830810547
    10. ' ' → logprob: -17.78807830810547

Token 414: ''' (ID: 6)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5789700746536255
    2. '%=' → logprob: -0.8289700746536255
    3. '=' → logprob: -6.203969955444336
    4. ')' → logprob: -7.078969955444336
    5. '%' → logprob: -9.203969955444336
    6. '   ' → logprob: -10.328969955444336
    7. ' =' → logprob: -11.203969955444336
    8. 'ans' → logprob: -12.328969955444336
    9. ')%' → logprob: -12.578969955444336
    10. ' )' → logprob: -13.328969955444336

Token 415: ' reste' (ID: 26769)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.16051240265369415
    2. ' %=' → logprob: -1.9105124473571777
    3. '=' → logprob: -8.66051197052002
    4. '%' → logprob: -9.28551197052002
    5. '   ' → logprob: -11.28551197052002
    6. ')' → logprob: -12.16051197052002
    7. ' =' → logprob: -13.41051197052002
    8. 'ans' → logprob: -13.91051197052002
    9. '<' → logprob: -14.53551197052002
    10. ' %' → logprob: -14.78551197052002

Token 416: ' dans' (ID: 2671)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08175025880336761
    2. ' ans' → logprob: -2.9567501544952393
    3. '%' → logprob: -4.331750392913818
    4. '%=' → logprob: -5.331750392913818
    5. '(ans' → logprob: -5.456750392913818
    6. ' %=' → logprob: -5.706750392913818
    7. 'mod' → logprob: -7.456750392913818
    8. '<' → logprob: -8.95674991607666
    9. '=' → logprob: -9.95674991607666
    10. 'ANS' → logprob: -10.45674991607666

Token 417: ' la' (ID: 557)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0012671363074332476
    2. ' MOD' → logprob: -7.251266956329346
    3. 'ans' → logprob: -7.501266956329346
    4. '_MOD' → logprob: -13.376267433166504
    5. ' ans' → logprob: -13.626267433166504
    6. 'mod' → logprob: -14.126267433166504
    7. '.MOD' → logprob: -14.126267433166504
    8. '(ans' → logprob: -15.251267433166504
    9. 'range' → logprob: -16.876266479492188
    10. ')' → logprob: -16.876266479492188

Token 418: ' plage' (ID: 78241)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.15395215153694153
    2. 'ans' → logprob: -2.028952121734619
    3. ' MOD' → logprob: -4.778952121734619
    4. 'range' → logprob: -6.778952121734619
    5. ' ans' → logprob: -7.153952121734619
    6. 'mod' → logprob: -8.153952598571777
    7. ' range' → logprob: -8.528952598571777
    8. '%' → logprob: -9.028952598571777
    9. '(ans' → logprob: -9.653952598571777
    10. 'bounds' → logprob: -9.778952598571777

Token 419: ' correcte' (ID: 173783)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7466307282447815
    2. 'MOD' → logprob: -1.2466306686401367
    3. '%' → logprob: -2.7466306686401367
    4. '%=' → logprob: -2.8716306686401367
    5. '(ans' → logprob: -2.8716306686401367
    6. '=' → logprob: -3.7466306686401367
    7. ' %=' → logprob: -4.246630668640137
    8. ' ans' → logprob: -4.246630668640137
    9. ' MOD' → logprob: -5.246630668640137
    10. '```' → logprob: -6.996630668640137

Token 420: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.049537140876054764
    2. ' ans' → logprob: -3.174537181854248
    3. '   ' → logprob: -5.174537181854248
    4. '	ans' → logprob: -7.549537181854248
    5. '(ans' → logprob: -8.29953670501709
    6. '_ans' → logprob: -10.54953670501709
    7. '=' → logprob: -10.92453670501709
    8. '```' → logprob: -11.54953670501709
    9. '%' → logprob: -12.29953670501709
    10. ' =' → logprob: -12.42453670501709

Token 421: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08037043362855911
    2. ' ans' → logprob: -2.7053704261779785
    3. '(ans' → logprob: -4.7053704261779785
    4. '	ans' → logprob: -7.4553704261779785
    5. '   ' → logprob: -7.7053704261779785
    6. '```' → logprob: -8.705370903015137
    7. '_ans' → logprob: -9.705370903015137
    8. '=' → logprob: -10.330370903015137
    9. '
' → logprob: -11.705370903015137
    10. '    
' → logprob: -11.955370903015137

Token 422: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.620622712536715e-05
    2. ' ans' → logprob: -10.000045776367188
    3. '(ans' → logprob: -14.625045776367188
    4. '	ans' → logprob: -15.250045776367188
    5. '```' → logprob: -17.000045776367188
    6. '   ' → logprob: -17.625045776367188
    7. 'answer' → logprob: -18.125045776367188
    8. '_ans' → logprob: -18.375045776367188
    9. 'ANS' → logprob: -19.500045776367188
    10. 'Ans' → logprob: -19.875045776367188

Token 423: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.08081662654876709
    2. ' %=' → logprob: -2.5808167457580566
    3. '%' → logprob: -6.830816745758057
    4. '=' → logprob: -7.080816745758057
    5. ' ' → logprob: -14.080816268920898
    6. ')' → logprob: -14.205816268920898
    7. ' %' → logprob: -14.205816268920898
    8. ')%' → logprob: -14.455816268920898
    9. '```' → logprob: -14.455816268920898
    10. ' =' → logprob: -14.580816268920898

Token 424: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '_MOD' → logprob: -21.750001907348633
    4. '(M' → logprob: -22.875001907348633
    5. 'MO' → logprob: -23.000001907348633
    6. '.MOD' → logprob: -23.125001907348633
    7. '10' → logprob: -24.875001907348633
    8. 'MD' → logprob: -25.125001907348633
    9. 'mod' → logprob: -25.625001907348633
    10. 'Mod' → logprob: -25.875001907348633

Token 425: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1994775377388578e-05
    2. '<|end|>' → logprob: -12.000012397766113
    3. 'pr' → logprob: -13.125012397766113
    4. ' print' → logprob: -13.375012397766113
    5. '```' → logprob: -14.125012397766113
    6. '
' → logprob: -15.000012397766113
    7. '#print' → logprob: -15.125012397766113
    8. 'return' → logprob: -15.375012397766113
    9. ')' → logprob: -15.625012397766113
    10. '#' → logprob: -15.625012397766113

Token 427: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'pr' → logprob: -19.375
    3. ' print' → logprob: -19.625
    4. 'prin' → logprob: -19.875
    5. '#print' → logprob: -20.5
    6. 'ans' → logprob: -21.375
    7. '```' → logprob: -21.625
    8. 'pri' → logprob: -21.875
    9. 'printf' → logprob: -22.0
    10. '
' → logprob: -23.125

Token 428: 'cule' (ID: 45017)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009436229011043906
    2. 'c' → logprob: -8.375943183898926
    3. 'cul' → logprob: -8.875943183898926
    4. '
' → logprob: -9.125943183898926
    5. 'pr' → logprob: -9.125943183898926
    6. ' print' → logprob: -9.375943183898926
    7. 'r' → logprob: -9.375943183898926
    8. '#print' → logprob: -10.000943183898926
    9. 'pri' → logprob: -10.375943183898926
    10. '```' → logprob: -10.500943183898926

Token 429: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5267927050590515
    2. '(ans' → logprob: -1.0267927646636963
    3. 'ans' → logprob: -3.1517927646636963
    4. 'pow' → logprob: -6.026792526245117
    5. ' ans' → logprob: -6.276792526245117
    6. ' print' → logprob: -6.401792526245117
    7. ' (' → logprob: -6.526792526245117
    8. '(' → logprob: -7.401792526245117
    9. '(print' → logprob: -7.901792526245117
    10. '((' → logprob: -9.776792526245117

Token 430: ' puissance' (ID: 63494)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026615159586071968
    2. 'ans' → logprob: -4.401615142822266
    3. 'pow' → logprob: -5.026615142822266
    4. '(ans' → logprob: -5.026615142822266
    5. '(' → logprob: -8.526615142822266
    6. 'inv' → logprob: -8.776615142822266
    7. 'inverse' → logprob: -9.276615142822266
    8. 'import' → logprob: -9.526615142822266
    9. 'factor' → logprob: -9.651615142822266
    10. 'power' → logprob: -9.776615142822266

Token 431: ' de' (ID: 334)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7148547768592834
    2. 'ans' → logprob: -1.5898547172546387
    3. '(ans' → logprob: -1.7148547172546387
    4. '(pow' → logprob: -2.2148547172546387
    5. '(' → logprob: -4.214854717254639
    6. ' pow' → logprob: -7.339854717254639
    7. '2' → logprob: -7.464854717254639
    8. 'def' → logprob: -7.589854717254639
    9. 'of' → logprob: -8.464855194091797
    10. 'mod' → logprob: -8.839855194091797

Token 432: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005024306010454893
    2. 'pow' → logprob: -5.755024433135986
    3. '3' → logprob: -7.505024433135986
    4. '(' → logprob: -7.505024433135986
    5. 'ans' → logprob: -8.630023956298828
    6. '10' → logprob: -8.630023956298828
    7. '4' → logprob: -8.630023956298828
    8. ' ' → logprob: -10.255023956298828
    9. '(n' → logprob: -10.255023956298828
    10. '5' → logprob: -10.880023956298828

Token 433: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037944926880300045
    2. '3' → logprob: -6.7537946701049805
    3. 'pow' → logprob: -6.8787946701049805
    4. '(' → logprob: -7.3787946701049805
    5. '4' → logprob: -8.12879467010498
    6. 'ans' → logprob: -8.25379467010498
    7. '10' → logprob: -9.00379467010498
    8. '(n' → logprob: -9.00379467010498
    9. 'n' → logprob: -9.37879467010498
    10. '5' → logprob: -11.25379467010498

Token 434: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.919329047203064
    2. '(ans' → logprob: -1.294329047203064
    3. 'pow' → logprob: -1.419329047203064
    4. 'ans' → logprob: -2.9193291664123535
    5. '```' → logprob: -5.1693291664123535
    6. '2' → logprob: -5.2943291664123535
    7. ',' → logprob: -5.4193291664123535
    8. '(pow' → logprob: -5.5443291664123535
    9. '(' → logprob: -5.6693291664123535
    10. ' ans' → logprob: -5.6693291664123535

Token 435: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13893553614616394
    2. '(n' → logprob: -2.5139355659484863
    3. 'i' → logprob: -3.2639355659484863
    4. '(i' → logprob: -5.638935565948486
    5. 'ans' → logprob: -5.888935565948486
    6. ' n' → logprob: -6.513935565948486
    7. '(ans' → logprob: -6.638935565948486
    8. ' (' → logprob: -8.138935089111328
    9. ' i' → logprob: -8.138935089111328
    10. '(' → logprob: -8.388935089111328

Token 436: ''ex' (ID: 23472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1435033231973648
    2. 'n' → logprob: -3.143503427505493
    3. '(i' → logprob: -3.143503427505493
    4. 'ans' → logprob: -3.268503427505493
    5. '(ans' → logprob: -5.893503189086914
    6. '(n' → logprob: -6.018503189086914
    7. '```' → logprob: -7.268503189086914
    8. '**' → logprob: -7.518503189086914
    9. '(' → logprob: -7.518503189086914
    10. '#' → logprob: -7.643503189086914

Token 437: 'pos' (ID: 1103)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36938604712486267
    2. '(i' → logprob: -1.369386076927185
    3. 'pow' → logprob: -3.7443859577178955
    4. 'ans' → logprob: -4.994386196136475
    5. '```' → logprob: -4.994386196136475
    6. '(ans' → logprob: -5.119386196136475
    7. 'n' → logprob: -5.994386196136475
    8. 'p' → logprob: -6.744386196136475
    9. 'power' → logprob: -6.744386196136475
    10. '((' → logprob: -6.994386196136475

Token 438: 'ant' (ID: 493)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5071319341659546
    2. 'i' → logprob: -1.5071319341659546
    3. '(' → logprob: -2.257132053375244
    4. '(ans' → logprob: -3.632132053375244
    5. 'ans' → logprob: -4.507132053375244
    6. '(n' → logprob: -5.257132053375244
    7. 'ent' → logprob: -5.382132053375244
    8. '**' → logprob: -5.507132053375244
    9. '((' → logprob: -5.632132053375244
    10. ' (' → logprob: -5.882132053375244

Token 439: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0086397435516119
    2. 'i' → logprob: -5.508639812469482
    3. '(n' → logprob: -5.633639812469482
    4. ' n' → logprob: -7.633639812469482
    5. '(' → logprob: -8.508639335632324
    6. 'ans' → logprob: -9.258639335632324
    7. '(i' → logprob: -9.758639335632324
    8. 'len' → logprob: -10.258639335632324
    9. 'pow' → logprob: -11.008639335632324
    10. ' (' → logprob: -11.508639335632324

Token 440: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007513784803450108
    2. '(n' → logprob: -7.500751495361328
    3. 'i' → logprob: -9.125751495361328
    4. ' n' → logprob: -10.125751495361328
    5. 'len' → logprob: -11.000751495361328
    6. '(' → logprob: -11.375751495361328
    7. '   ' → logprob: -12.125751495361328
    8. '
' → logprob: -12.500751495361328
    9. 'ans' → logprob: -12.500751495361328
    10. '10' → logprob: -13.375751495361328

Token 441: '*n' (ID: 58470)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22159427404403687
    2. '(n' → logprob: -2.5965943336486816
    3. '*n' → logprob: -2.9715943336486816
    4. '**' → logprob: -3.8465943336486816
    5. ' n' → logprob: -4.221594333648682
    6. ' *' → logprob: -4.346594333648682
    7. '*' → logprob: -4.846594333648682
    8. ' (' → logprob: -5.221594333648682
    9. '*(' → logprob: -5.221594333648682
    10. '(' → logprob: -5.846594333648682

Token 442: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09028839319944382
    2. ',' → logprob: -3.2152884006500244
    3. '-' → logprob: -3.9652884006500244
    4. ')-' → logprob: -4.590288162231445
    5. '*' → logprob: -5.465288162231445
    6. '+' → logprob: -5.590288162231445
    7. ' -' → logprob: -6.090288162231445
    8. ' )' → logprob: -6.215288162231445
    9. ' ,' → logprob: -6.840288162231445
    10. '**' → logprob: -6.840288162231445

Token 443: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38915735483169556
    2. '1' → logprob: -1.6391572952270508
    3. '(' → logprob: -2.764157295227051
    4. '-' → logprob: -3.139157295227051
    5. ')' → logprob: -4.889157295227051
    6. '(n' → logprob: -5.014157295227051
    7. '2' → logprob: -5.264157295227051
    8. ' -' → logprob: -7.514157295227051
    9. ' n' → logprob: -7.764157295227051
    10. '```' → logprob: -8.13915729522705

Token 444: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018052779138088226
    2. ' ,' → logprob: -4.893052577972412
    3. ')' → logprob: -5.143052577972412
    4. '**' → logprob: -6.393052577972412
    5. ',
' → logprob: -7.018052577972412
    6. '
' → logprob: -7.768052577972412
    7. 'pow' → logprob: -7.893052577972412
    8. '**,' → logprob: -8.26805305480957
    9. '(ans' → logprob: -8.76805305480957
    10. 'ans' → logprob: -8.76805305480957

Token 445: ' modulo' (ID: 112372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.21373426914215088
    2. 'ans' → logprob: -1.7137342691421509
    3. 'print' → logprob: -5.088734149932861
    4. 'result' → logprob: -6.338734149932861
    5. 'answer' → logprob: -6.838734149932861
    6. '**' → logprob: -6.963734149932861
    7. 'power' → logprob: -7.088734149932861
    8. '
' → logprob: -7.463734149932861
    9. ' ans' → logprob: -8.46373462677002
    10. 'res' → logprob: -8.83873462677002

Token 446: ' MOD' (ID: 32868)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.046331763267517
    2. '(' → logprob: -1.171331763267517
    3. 'MOD' → logprob: -1.171331763267517
    4. '2' → logprob: -4.046331882476807
    5. ' (' → logprob: -5.421331882476807
    6. ' MOD' → logprob: -5.546331882476807
    7. ' pow' → logprob: -6.171331882476807
    8. '(pow' → logprob: -7.421331882476807
    9. ' ' → logprob: -9.046331405639648
    10. '```' → logprob: -9.671331405639648

Token 447: ' avec' (ID: 3937)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.49396365880966187
    2. 'ans' → logprob: -1.4939637184143066
    3. 'print' → logprob: -2.3689637184143066
    4. 'result' → logprob: -2.7439637184143066
    5. 'answer' → logprob: -5.743963718414307
    6. 'res' → logprob: -6.368963718414307
    7. 'power' → logprob: -6.493963718414307
    8. '
' → logprob: -7.243963718414307
    9. ' ans' → logprob: -9.493963241577148
    10. '```' → logprob: -10.118963241577148

Token 448: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.541112427134067e-05
    2. ' pow' → logprob: -9.500075340270996
    3. '(pow' → logprob: -14.625075340270996
    4. 'power' → logprob: -17.750076293945312
    5. '2' → logprob: -19.125076293945312
    6. '.pow' → logprob: -19.750076293945312
    7. '```' → logprob: -19.750076293945312
    8. 'print' → logprob: -20.000076293945312
    9. '
' → logprob: -20.125076293945312
    10. '_pow' → logprob: -20.625076293945312

Token 449: ' fonction' (ID: 17610)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.817902173381299e-05
    2. ' pow' → logprob: -9.25009822845459
    3. '(pow' → logprob: -13.62509822845459
    4. '.pow' → logprob: -15.50009822845459
    5. 'print' → logprob: -15.62509822845459
    6. 'built' → logprob: -16.000097274780273
    7. 'power' → logprob: -16.625097274780273
    8. 'builtin' → logprob: -16.750097274780273
    9. '```' → logprob: -16.750097274780273
    10. '_pow' → logprob: -17.000097274780273

Token 450: ' intégr' (ID: 57752)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -6.704273118884885e-07
    2. ' pow' → logprob: -14.250000953674316
    3. '(pow' → logprob: -18.625
    4. 'power' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '`' → logprob: -21.375
    7. '   ' → logprob: -22.25
    8. '.pow' → logprob: -22.375
    9. '_pow' → logprob: -22.375
    10. 'print' → logprob: -22.625

Token 451: 'ée' (ID: 2894)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0019110271241515875
    2. ' pow' → logprob: -6.376911163330078
    3. 'ée' → logprob: -10.001911163330078
    4. '(pow' → logprob: -10.126911163330078
    5. '**' → logprob: -10.376911163330078
    6. 'e' → logprob: -11.251911163330078
    7. '   ' → logprob: -11.501911163330078
    8. '2' → logprob: -11.626911163330078
    9. 'ale' → logprob: -11.626911163330078
    10. 'ex' → logprob: -11.751911163330078

Token 452: ' '' (ID: 461)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2541002035140991
    2. 'print' → logprob: -1.5041002035140991
    3. 'ans' → logprob: -6.379100322723389
    4. 'result' → logprob: -8.25409984588623
    5. 'power' → logprob: -8.75409984588623
    6. '
' → logprob: -10.62909984588623
    7. 'answer' → logprob: -11.25409984588623
    8. '```' → logprob: -12.00409984588623
    9. '(pow' → logprob: -12.37909984588623
    10. ' pow' → logprob: -13.00409984588623

Token 453: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.9361264946837764e-07
    2. ' pow' → logprob: -16.0
    3. 'power' → logprob: -19.375
    4. '(pow' → logprob: -20.0
    5. '```' → logprob: -21.125
    6. '
' → logprob: -21.875
    7. '`' → logprob: -22.625
    8. '_pow' → logprob: -23.25
    9. '.pow' → logprob: -23.625
    10. 'print' → logprob: -24.25

Token 454: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005128803662955761
    2. '(
' → logprob: -5.505128860473633
    3. ',' → logprob: -7.255128860473633
    4. '2' → logprob: -9.130128860473633
    5. '(pow' → logprob: -9.380128860473633
    6. ' (' → logprob: -9.505128860473633
    7. 'pow' → logprob: -10.505128860473633
    8. ')' → logprob: -11.130128860473633
    9. '(ans' → logprob: -11.505128860473633
    10. '
' → logprob: -12.630128860473633

Token 455: ' qui' (ID: 2780)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32380586862564087
    2. 'pow' → logprob: -1.823805809020996
    3. 'result' → logprob: -2.948805809020996
    4. 'print' → logprob: -3.698805809020996
    5. '
' → logprob: -4.448805809020996
    6. 'answer' → logprob: -4.698805809020996
    7. 'power' → logprob: -4.698805809020996
    8. 'res' → logprob: -6.448805809020996
    9. '**' → logprob: -6.573805809020996
    10. '(ans' → logprob: -7.073805809020996

Token 456: ' support' (ID: 2498)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3702932894229889
    2. ')' → logprob: -1.9952932596206665
    3. 'pow' → logprob: -3.245293378829956
    4. ' calculates' → logprob: -3.870293378829956
    5. '(' → logprob: -3.995293378829956
    6. '**' → logprob: -5.120293140411377
    7. '```' → logprob: -5.245293140411377
    8. 'calcul' → logprob: -5.245293140411377
    9. 'print' → logprob: -5.370293140411377
    10. ' permet' → logprob: -5.370293140411377

Token 457: 'e' (ID: 68)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11267182230949402
    2. '(
' → logprob: -2.6126718521118164
    3. ')' → logprob: -3.9876718521118164
    4. 'e' → logprob: -4.737671852111816
    5. ',' → logprob: -6.487671852111816
    6. '(pow' → logprob: -6.612671852111816
    7. 'ère' → logprob: -7.362671852111816
    8. 'é' → logprob: -7.612671852111816
    9. '=' → logprob: -8.237671852111816
    10. 'er' → logprob: -8.612671852111816

Token 458: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008602463640272617
    2. '2' → logprob: -7.875860214233398
    3. 'pow' → logprob: -8.000860214233398
    4. '(pow' → logprob: -9.000860214233398
    5. 'mod' → logprob: -11.375860214233398
    6. '(
' → logprob: -12.375860214233398
    7. '(base' → logprob: -13.375860214233398
    8. 'base' → logprob: -14.625860214233398
    9. '```' → logprob: -14.625860214233398
    10. 'def' → logprob: -14.750860214233398

Token 459: ' modulo' (ID: 112372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9029947519302368
    2. '2' → logprob: -1.4029947519302368
    3. 'mod' → logprob: -2.0279946327209473
    4. '3' → logprob: -2.7779946327209473
    5. 'base' → logprob: -2.7779946327209473
    6. 'MOD' → logprob: -2.7779946327209473
    7. '(' → logprob: -4.152994632720947
    8. ')' → logprob: -5.402994632720947
    9. '(base' → logprob: -6.777994632720947
    10. 'ex' → logprob: -6.902994632720947

Token 460: ' en' (ID: 469)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3719722330570221
    2. 'pow' → logprob: -1.8719722032546997
    3. 'result' → logprob: -2.4969723224639893
    4. 'power' → logprob: -3.1219723224639893
    5. 'answer' → logprob: -4.62197208404541
    6. 'print' → logprob: -4.62197208404541
    7. 'res' → logprob: -5.87197208404541
    8. 'factor' → logprob: -6.24697208404541
    9. 'final' → logprob: -6.87197208404541
    10. '
' → logprob: -7.24697208404541

Token 461: ' troisième' (ID: 75373)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2061292678117752
    2. 'pow' → logprob: -1.8311293125152588
    3. 'mod' → logprob: -4.45612907409668
    4. ')' → logprob: -5.33112907409668
    5. '(' → logprob: -5.95612907409668
    6. '3' → logprob: -6.58112907409668
    7. 'ans' → logprob: -6.58112907409668
    8. '```' → logprob: -7.33112907409668
    9. '
' → logprob: -7.70612907409668
    10. '(pow' → logprob: -7.83112907409668

Token 462: ' argument' (ID: 10383)
  Prédit: 'argument'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argument' → logprob: -0.057514265179634094
    2. ',' → logprob: -3.057514190673828
    3. ' argument' → logprob: -5.682514190673828
    4. 'param' → logprob: -5.932514190673828
    5. ')' → logprob: -6.682514190673828
    6. 'arg' → logprob: -7.432514190673828
    7. '(' → logprob: -7.557514190673828
    8. 'parameter' → logprob: -7.932514190673828
    9. '(argument' → logprob: -10.182514190673828
    10. ',arg' → logprob: -11.307514190673828

Token 463: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6966404914855957
    2. 'pow' → logprob: -1.0716404914855957
    3. 'print' → logprob: -2.3216404914855957
    4. 'power' → logprob: -3.6966404914855957
    5. 'result' → logprob: -3.9466404914855957
    6. 'res' → logprob: -5.196640491485596
    7. '
' → logprob: -5.571640491485596
    8. 'answer' → logprob: -5.946640491485596
    9. 'factor' → logprob: -6.446640491485596
    10. '2' → logprob: -7.196640491485596

Token 464: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23097862303256989
    2. 'pow' → logprob: -2.3559787273406982
    3. 'result' → logprob: -2.9809787273406982
    4. 'power' → logprob: -3.6059787273406982
    5. 'print' → logprob: -3.8559787273406982
    6. 'factor' → logprob: -5.355978488922119
    7. 'res' → logprob: -5.855978488922119
    8. 'answer' → logprob: -5.980978488922119
    9. 'final' → logprob: -7.355978488922119
    10. 'p' → logprob: -7.605978488922119

Token 465: ' Mult' (ID: 15431)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.479619562625885
    2. 'print' → logprob: -0.979619562625885
    3. 'answer' → logprob: -6.35461950302124
    4. 'result' → logprob: -6.47961950302124
    5. 'pow' → logprob: -6.60461950302124
    6. 'power' → logprob: -7.47961950302124
    7. 'res' → logprob: -8.854619979858398
    8. 'a' → logprob: -10.604619979858398
    9. 'factor' → logprob: -10.729619979858398
    10. '```' → logprob: -10.729619979858398

Token 466: 'ipl' (ID: 7840)
  Prédit: 'ipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.016445811837911606
    2. 'ip' → logprob: -4.266445636749268
    3. 'ans' → logprob: -7.016445636749268
    4. ' ans' → logprob: -7.641445636749268
    5. '=' → logprob: -8.016446113586426
    6. '(ans' → logprob: -8.766446113586426
    7. 'pl' → logprob: -9.141446113586426
    8. 'plique' → logprob: -9.266446113586426
    9. '#' → logprob: -10.016446113586426
    10. 'iple' → logprob: -10.141446113586426

Token 467: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.29846134781837463
    2. 'ipl' → logprob: -1.5484613180160522
    3. 'ip' → logprob: -3.798461437225342
    4. 'ies' → logprob: -5.048461437225342
    5. 'iez' → logprob: -5.548461437225342
    6. 'e' → logprob: -5.673461437225342
    7. '#' → logprob: -6.798461437225342
    8. 'iplier' → logprob: -7.298461437225342
    9. 'ié' → logprob: -7.298461437225342
    10. 'ient' → logprob: -7.548461437225342

Token 468: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18090485036373138
    2. '(ans' → logprob: -1.8059048652648926
    3. ' ans' → logprob: -7.430904865264893
    4. '(' → logprob: -7.680904865264893
    5. '(
' → logprob: -9.680904388427734
    6. '	ans' → logprob: -11.180904388427734
    7. ' (' → logprob: -11.555904388427734
    8. '_ans' → logprob: -12.555904388427734
    9. '```' → logprob: -13.305904388427734
    10. '(
' → logprob: -13.555904388427734

Token 469: ' résultat' (ID: 62556)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5565364360809326
    2. 'ans' → logprob: -1.1815364360809326
    3. '*' → logprob: -2.5565364360809326
    4. '=' → logprob: -4.056536674499512
    5. ')' → logprob: -5.431536674499512
    6. '.' → logprob: -6.056536674499512
    7. '```' → logprob: -6.556536674499512
    8. ' par' → logprob: -6.681536674499512
    9. 'mod' → logprob: -6.931536674499512
    10. ' *' → logprob: -6.931536674499512

Token 470: ' par' (ID: 686)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7161038517951965
    2. '(ans' → logprob: -1.3411037921905518
    3. '*' → logprob: -1.7161037921905518
    4. '*=' → logprob: -3.0911037921905518
    5. ' ans' → logprob: -4.966104030609131
    6. '(' → logprob: -5.091104030609131
    7. ' *=' → logprob: -5.341104030609131
    8. ' *' → logprob: -6.341104030609131
    9. '=' → logprob: -6.966104030609131
    10. ',' → logprob: -7.091104030609131

Token 471: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001415618316968903
    2. ' ans' → logprob: -9.500141143798828
    3. '(ans' → logprob: -9.625141143798828
    4. '	ans' → logprob: -14.750141143798828
    5. 'answer' → logprob: -16.250141143798828
    6. 'anst' → logprob: -17.375141143798828
    7. '_ans' → logprob: -18.250141143798828
    8. '   ' → logprob: -18.500141143798828
    9. '```' → logprob: -18.750141143798828
    10. 'a' → logprob: -19.250141143798828

Token 472: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.941161776310764e-05
    2. '(ans' → logprob: -10.375039100646973
    3. ' ans' → logprob: -11.750039100646973
    4. 'answer' → logprob: -15.875039100646973
    5. '	ans' → logprob: -16.37504005432129
    6. 'anst' → logprob: -17.62504005432129
    7. 'a' → logprob: -17.75004005432129
    8. '(' → logprob: -18.37504005432129
    9. '_ans' → logprob: -18.75004005432129
    10. 'print' → logprob: -18.87504005432129

Token 473: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2325829267501831
    2. ' *' → logprob: -2.2325830459594727
    3. '%' → logprob: -3.3575830459594727
    4. ' %' → logprob: -3.8575830459594727
    5. '*' → logprob: -4.232583045959473
    6. ' )' → logprob: -4.607583045959473
    7. ' ans' → logprob: -5.107583045959473
    8. 'ans' → logprob: -5.482583045959473
    9. '(ans' → logprob: -5.607583045959473
    10. ',' → logprob: -6.107583045959473

Token 474: ' applique' (ID: 180579)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.583462655544281
    2. 'ans' → logprob: -0.833462655544281
    3. '(ans' → logprob: -5.708462715148926
    4. '%' → logprob: -6.833462715148926
    5. ' %=' → logprob: -6.958462715148926
    6. ' and' → logprob: -7.083462715148926
    7. ' %' → logprob: -7.958462715148926
    8. 'mod' → logprob: -8.208462715148926
    9. ' modulo' → logprob: -8.708462715148926
    10. 'and' → logprob: -9.583462715148926

Token 475: ' le' (ID: 505)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.37434709072113037
    2. 'ans' → logprob: -2.24934720993042
    3. '(ans' → logprob: -2.37434720993042
    4. ' %' → logprob: -2.62434720993042
    5. ' ans' → logprob: -3.62434720993042
    6. ' %=' → logprob: -5.24934720993042
    7. ' MOD' → logprob: -5.99934720993042
    8. 'MOD' → logprob: -6.12434720993042
    9. ' modulo' → logprob: -6.87434720993042
    10. ' (%)' → logprob: -7.24934720993042

Token 476: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01792210526764393
    2. ' %' → logprob: -4.7679219245910645
    3. ' modulo' → logprob: -4.7679219245910645
    4. 'mod' → logprob: -7.5179219245910645
    5. 'MOD' → logprob: -8.767922401428223
    6. ' MOD' → logprob: -10.017922401428223
    7. '_mod' → logprob: -12.267922401428223
    8. '_MOD' → logprob: -12.767922401428223
    9. ' %=' → logprob: -12.892922401428223
    10. '%=' → logprob: -12.892922401428223

Token 477: ' à' (ID: 1221)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.30480924248695374
    2. 'ans' → logprob: -1.5548092126846313
    3. ' (' → logprob: -4.179809093475342
    4. '(' → logprob: -4.179809093475342
    5. ' ans' → logprob: -5.179809093475342
    6. '%' → logprob: -5.929809093475342
    7. ',' → logprob: -5.929809093475342
    8. '=' → logprob: -6.304809093475342
    9. 'MOD' → logprob: -6.804809093475342
    10. '(
' → logprob: -6.929809093475342

Token 478: ' nouveau' (ID: 23184)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0017343213548883796
    2. ' MOD' → logprob: -6.376734256744385
    3. 'ans' → logprob: -11.251734733581543
    4. '(M' → logprob: -11.626734733581543
    5. '100' → logprob: -12.501734733581543
    6. '_MOD' → logprob: -12.876734733581543
    7. 'final' → logprob: -13.751734733581543
    8. '```' → logprob: -14.251734733581543
    9. '.MOD' → logprob: -14.876734733581543
    10. '(' → logprob: -15.001734733581543

Token 479: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2586077153682709
    2. '(ans' → logprob: -1.8836077451705933
    3. 'print' → logprob: -2.7586076259613037
    4. ' ans' → logprob: -5.383607864379883
    5. '(' → logprob: -6.508607864379883
    6. ' (' → logprob: -6.633607864379883
    7. '%' → logprob: -7.133607864379883
    8. 'result' → logprob: -7.133607864379883
    9. '
' → logprob: -7.508607864379883
    10. '%
' → logprob: -7.508607864379883

Token 480: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6019084453582764
    2. 'ans' → logprob: -1.3519084453582764
    3. ' obtenir' → logprob: -2.6019084453582764
    4. 'final' → logprob: -2.7269084453582764
    5. ' garantir' → logprob: -3.6019084453582764
    6. 'ob' → logprob: -5.4769086837768555
    7. ' rester' → logprob: -5.8519086837768555
    8. ' print' → logprob: -5.9769086837768555
    9. ' garder' → logprob: -6.2269086837768555
    10. ' ans' → logprob: -6.3519086837768555

Token 481: ' dernière' (ID: 39497)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.5629337430000305
    2. 'print' → logprob: -1.3129336833953857
    3. ' final' → logprob: -2.5629336833953857
    4. 'result' → logprob: -3.1879336833953857
    5. 'ans' → logprob: -4.187933921813965
    6. 'rés' → logprob: -5.187933921813965
    7. ' result' → logprob: -5.312933921813965
    8. ' print' → logprob: -5.437933921813965
    9. ' résultat' → logprob: -5.562933921813965
    10. ' ans' → logprob: -5.937933921813965

Token 482: ' fois' (ID: 14697)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7131935954093933
    2. ')' → logprob: -1.213193655014038
    3. 'ans' → logprob: -2.213193655014038
    4. '*' → logprob: -3.838193655014038
    5. ' result' → logprob: -3.963193655014038
    6. '(ans' → logprob: -4.463193416595459
    7. '%' → logprob: -4.713193416595459
    8. '.' → logprob: -5.213193416595459
    9. 'result' → logprob: -5.338193416595459
    10. ' )' → logprob: -5.963193416595459

Token 483: ' afin' (ID: 22217)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9875156283378601
    2. 'print' → logprob: -1.2375156879425049
    3. '(ans' → logprob: -1.2375156879425049
    4. 'pow' → logprob: -3.987515687942505
    5. ' ans' → logprob: -4.362515449523926
    6. ' (' → logprob: -5.237515449523926
    7. '(' → logprob: -5.612515449523926
    8. 'result' → logprob: -6.362515449523926
    9. '*' → logprob: -6.987515449523926
    10. '
' → logprob: -7.112515449523926

Token 484: ' d' (ID: 272)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.387169748544693
    2. ' de' → logprob: -1.3871697187423706
    3. ' d' → logprob: -3.76216983795166
    4. ')' → logprob: -4.13716983795166
    5. '(ans' → logprob: -4.26216983795166
    6. '=' → logprob: -5.38716983795166
    7. ' print' → logprob: -5.51216983795166
    8. 'ans' → logprob: -5.63716983795166
    9. ' =' → logprob: -6.38716983795166
    10. ' que' → logprob: -6.88716983795166

Token 485: ''obtenir' (ID: 191633)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.18676120042800903
    2. ' assurer' → logprob: -2.6867611408233643
    3. 'print' → logprob: -3.3117611408233643
    4. ' rester' → logprob: -3.5617611408233643
    5. ' garder' → logprob: -5.061761379241943
    6. ''assurer' → logprob: -5.061761379241943
    7. 'ans' → logprob: -5.311761379241943
    8. ' obtenir' → logprob: -5.561761379241943
    9. ' éviter' → logprob: -5.936761379241943
    10. ' conserver' → logprob: -5.936761379241943

Token 486: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.11924506723880768
    2. 'ans' → logprob: -2.2442450523376465
    3. ' (' → logprob: -5.7442450523376465
    4. '(' → logprob: -5.8692450523376465
    5. ' ans' → logprob: -8.744245529174805
    6. '(result' → logprob: -10.369245529174805
    7. '(mod' → logprob: -10.494245529174805
    8. '_ans' → logprob: -10.619245529174805
    9. 'MOD' → logprob: -10.869245529174805
    10. 'final' → logprob: -11.119245529174805

Token 487: ' résultat' (ID: 62556)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0969197154045105
    2. 'result' → logprob: -2.8469197750091553
    3. ' final' → logprob: -3.4719197750091553
    4. ' result' → logprob: -6.721919536590576
    5. ' résultat' → logprob: -6.971919536590576
    6. 'rés' → logprob: -7.596919536590576
    7. 'ans' → logprob: -8.096920013427734
    8. 'answer' → logprob: -8.721920013427734
    9. 'correct' → logprob: -9.346920013427734
    10. ' resultat' → logprob: -10.471920013427734

Token 488: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07777571678161621
    2. 'ans' → logprob: -3.327775716781616
    3. 'result' → logprob: -3.952775716781616
    4. '(ans' → logprob: -4.077775955200195
    5. '
' → logprob: -7.452775955200195
    6. '(' → logprob: -7.452775955200195
    7. ' (' → logprob: -8.327775955200195
    8. '(print' → logprob: -8.452775955200195
    9. ' print' → logprob: -8.577775955200195
    10. ' ans' → logprob: -8.827775955200195

Token 489: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03692331537604332
    2. 'ans' → logprob: -4.161923408508301
    3. 'result' → logprob: -4.161923408508301
    4. '
' → logprob: -5.911923408508301
    5. '\n' → logprob: -7.411923408508301
    6. '\' → logprob: -7.911923408508301
    7. 'answer' → logprob: -8.0369234085083
    8. 'output' → logprob: -8.1619234085083
    9. '```' → logprob: -9.1619234085083
    10. '(ans' → logprob: -9.2869234085083

Token 490: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007418495370075107
    2. 'result' → logprob: -7.375741958618164
    3. 'ans' → logprob: -10.000741958618164
    4. '```' → logprob: -10.000741958618164
    5. 'answer' → logprob: -11.750741958618164
    6. ' print' → logprob: -12.250741958618164
    7. 'pow' → logprob: -12.500741958618164
    8. '
' → logprob: -12.625741958618164
    9. 'output' → logprob: -13.250741958618164
    10. 'final' → logprob: -13.375741958618164

Token 491: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859429597854614
    2. '=' → logprob: -3.0485942363739014
    3. 's' → logprob: -12.54859447479248
    4. ' ' → logprob: -13.92359447479248
    5. ' =
' → logprob: -14.04859447479248
    6. '_' → logprob: -14.29859447479248
    7. ')' → logprob: -14.92359447479248
    8. ' ' → logprob: -15.92359447479248
    9. '  ' → logprob: -16.673593521118164
    10. ' =
' → logprob: -16.798593521118164

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141538977622986
    2. '=' → logprob: -1.7014154195785522
    3. 's' → logprob: -14.326415061950684
    4. ' ' → logprob: -14.326415061950684
    5. ' =
' → logprob: -14.826415061950684
    6. ' ' → logprob: -16.326416015625
    7. ' =(' → logprob: -16.326416015625
    8. 'ans' → logprob: -16.826416015625
    9. '=
' → logprob: -16.826416015625
    10. ')' → logprob: -16.951416015625

Token 493: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.046149346977472305
    2. 'ans' → logprob: -3.171149253845215
    3. ' ans' → logprob: -6.296149253845215
    4. 'pow' → logprob: -6.921149253845215
    5. ' (' → logprob: -8.546149253845215
    6. '(pow' → logprob: -9.171149253845215
    7. '(' → logprob: -11.546149253845215
    8. ' pow' → logprob: -12.546149253845215
    9. '	ans' → logprob: -12.921149253845215
    10. '_ans' → logprob: -14.171149253845215

Token 494: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4742295742034912
    2. '*' → logprob: -0.9742295742034912
    3. 'pow' → logprob: -9.47422981262207
    4. '=' → logprob: -10.09922981262207
    5. ' pow' → logprob: -11.84922981262207
    6. ' =' → logprob: -12.34922981262207
    7. '*(' → logprob: -12.59922981262207
    8. '```' → logprob: -12.59922981262207
    9. '**' → logprob: -12.72422981262207
    10. ' ' → logprob: -12.72422981262207

Token 495: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.5048530030981055e-06
    2. ' pow' → logprob: -13.500001907348633
    3. '(pow' → logprob: -17.500001907348633
    4. 'power' → logprob: -21.625001907348633
    5. '_pow' → logprob: -22.125001907348633
    6. 'Pow' → logprob: -23.875001907348633
    7. '.pow' → logprob: -23.875001907348633
    8. 'pw' → logprob: -24.625001907348633
    9. '2' → logprob: -24.875001907348633
    10. '   ' → logprob: -25.625001907348633

Token 496: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001502717612311244
    2. '2' → logprob: -6.501502513885498
    3. '(
' → logprob: -15.501502990722656
    4. 'mod' → logprob: -16.876502990722656
    5. '```' → logprob: -16.876502990722656
    6. ' (' → logprob: -17.126502990722656
    7. 'two' → logprob: -18.376502990722656
    8. ' ' → logprob: -19.001502990722656
    9. 's' → logprob: -19.126502990722656
    10. 'er' → logprob: -19.251502990722656

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.125004768371582
    4. '
' → logprob: -18.2500057220459
    5. ')' → logprob: -19.6250057220459
    6. '```' → logprob: -19.8750057220459
    7. '２' → logprob: -21.0000057220459
    8. '۲' → logprob: -21.0000057220459
    9. '  ' → logprob: -21.2500057220459
    10. '

' → logprob: -21.2500057220459

Token 498: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01233210414648056
    2. ',' → logprob: -4.512331962585449
    3. '2' → logprob: -7.012331962585449
    4. ' (' → logprob: -9.26233196258545
    5. '((' → logprob: -9.38733196258545
    6. '(n' → logprob: -9.51233196258545
    7. '
' → logprob: -10.13733196258545
    8. '(
' → logprob: -10.38733196258545
    9. 'n' → logprob: -10.76233196258545
    10. ',n' → logprob: -11.38733196258545

Token 499: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0086253322660923
    2. '(' → logprob: -4.758625507354736
    3. ' ' → logprob: -11.508625030517578
    4. ' (' → logprob: -14.258625030517578
    5. '[' → logprob: -18.258625030517578
    6. '{' → logprob: -18.508625030517578
    7. '
' → logprob: -18.883625030517578
    8. '   ' → logprob: -18.883625030517578
    9. '((' → logprob: -18.883625030517578
    10. '```' → logprob: -19.008625030517578

Token 500: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004079112783074379
    2. '(' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.25407886505127
    4. ' (' → logprob: -16.504079818725586
    5. '   ' → logprob: -19.629079818725586
    6. '((' → logprob: -19.754079818725586
    7. '{' → logprob: -19.754079818725586
    8. '```' → logprob: -19.754079818725586
    9. '[' → logprob: -20.379079818725586
    10. '  ' → logprob: -20.879079818725586

Token 501: ' *' (ID: 425)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.003252692986279726
    2. '*' → logprob: -5.7532525062561035
    3. ' *' → logprob: -9.503252983093262
    4. 'n' → logprob: -15.003252983093262
    5. '*(' → logprob: -17.753252029418945
    6. '*num' → logprob: -18.878252029418945
    7. '*N' → logprob: -19.128252029418945
    8. '*f' → logprob: -19.378252029418945
    9. '*p' → logprob: -19.503252029418945
    10. '*m' → logprob: -19.878252029418945

Token 502: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.250001907348633
    3. '*n' → logprob: -17.000001907348633
    4. '	n' → logprob: -21.375001907348633
    5. '
' → logprob: -21.875001907348633
    6. '(n' → logprob: -22.250001907348633
    7. '*' → logprob: -22.500001907348633
    8. ' ' → logprob: -22.750001907348633
    9. '   ' → logprob: -22.750001907348633
    10. ')n' → logprob: -23.750001907348633

Token 503: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011049470864236355
    2. ' -' → logprob: -4.511049270629883
    3. ',' → logprob: -14.261049270629883
    4. ' ' → logprob: -14.636049270629883
    5. 'n' → logprob: -15.761049270629883
    6. '```' → logprob: -16.011049270629883
    7. '−' → logprob: -16.136049270629883
    8. '  ' → logprob: -17.011049270629883
    9. ')' → logprob: -17.386049270629883
    10. ' ' → logprob: -17.636049270629883

Token 504: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -16.187515258789062
    4. '```' → logprob: -16.687515258789062
    5. '   ' → logprob: -16.937515258789062
    6. '۲' → logprob: -17.312515258789062
    7. '
' → logprob: -17.750015258789062
    8. '

' → logprob: -17.812515258789062
    9. '-' → logprob: -17.812515258789062
    10. '২' → logprob: -18.000015258789062

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.750001907348633
    4. '
' → logprob: -17.812501907348633
    5. '```' → logprob: -18.250001907348633
    6. '1' → logprob: -18.687501907348633
    7. '۲' → logprob: -19.062501907348633
    8. '
' → logprob: -19.125001907348633
    9. '-' → logprob: -19.687501907348633
    10. '

' → logprob: -19.812501907348633

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ')' → logprob: -14.500003814697266
    4. '```' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ',
' → logprob: -17.375003814697266
    7. '%' → logprob: -17.500003814697266
    8. '+' → logprob: -18.250003814697266
    9. 'MOD' → logprob: -18.250003814697266
    10. 'mod' → logprob: -19.250003814697266

Token 507: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. 'MO' → logprob: -22.125001907348633
    4. '_MOD' → logprob: -22.750001907348633
    5. '.MOD' → logprob: -24.500001907348633
    6. 'MODULE' → logprob: -25.125001907348633
    7. '```' → logprob: -25.125001907348633
    8. ' ' → logprob: -25.375001907348633
    9. 'MODE' → logprob: -25.500001907348633
    10. 'MD' → logprob: -25.625001907348633

Token 508: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04302316531538963
    2. ',' → logprob: -3.168023109436035
    3. ' )' → logprob: -11.293023109436035
    4. '   ' → logprob: -12.293023109436035
    5. ')%' → logprob: -12.918023109436035
    6. ')
' → logprob: -13.168023109436035
    7. ' ,' → logprob: -13.918023109436035
    8. ' ' → logprob: -14.918023109436035
    9. ')`' → logprob: -14.918023109436035
    10. '),' → logprob: -15.293023109436035

Token 509: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12732544541358948
    2. ' %' → logprob: -2.1273255348205566
    3. 'result' → logprob: -8.377325057983398
    4. ')' → logprob: -9.002325057983398
    5. ')%' → logprob: -11.377325057983398
    6. '
' → logprob: -11.627325057983398
    7. '%
' → logprob: -11.877325057983398
    8. '```' → logprob: -11.877325057983398
    9. '%n' → logprob: -13.127325057983398
    10. '%A' → logprob: -13.627325057983398

Token 510: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '(M' → logprob: -18.75
    4. 'MO' → logprob: -20.375
    5. '_MOD' → logprob: -20.5
    6. '.MOD' → logprob: -22.375
    7. '(' → logprob: -23.0
    8. '```' → logprob: -23.25
    9. '(Mod' → logprob: -23.625
    10. 'MD' → logprob: -23.75

Token 511: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.849109119386412e-06
    2. '<|end|>' → logprob: -11.750009536743164
    3. ' print' → logprob: -13.750009536743164
    4. '```' → logprob: -15.125009536743164
    5. 'result' → logprob: -15.250009536743164
    6. '#print' → logprob: -16.000009536743164
    7. '
' → logprob: -16.375009536743164
    8. '#' → logprob: -16.750009536743164
    9. '(print' → logprob: -17.500009536743164
    10. 'return' → logprob: -18.875009536743164

Token 512: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.875
    3. ' print' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '#print' → logprob: -18.375
    6. 'pr' → logprob: -18.875
    7. 'return' → logprob: -19.875
    8. '  
' → logprob: -20.125
    9. 'result' → logprob: -20.25
    10. 'prin' → logprob: -20.75

Token 513: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.0
    3. 'pr' → logprob: -24.625
    4. 'prin' → logprob: -25.25
    5. '#print' → logprob: -25.625
    6. 'printf' → logprob: -27.625
    7. 'result' → logprob: -27.875
    8. '```' → logprob: -28.0
    9. '	print' → logprob: -28.375
    10. 'import' → logprob: -28.5

Token 514: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005903251585550606
    2. 'ich' → logprob: -8.125590324401855
    3. 'iche' → logprob: -8.875590324401855
    4. 'icher' → logprob: -9.250590324401855
    5. ' print' → logprob: -10.500590324401855
    6. '#print' → logprob: -11.875590324401855
    7. '_print' → logprob: -12.000590324401855
    8. 'ichage' → logprob: -12.250590324401855
    9. 'er' → logprob: -13.000590324401855
    10. '.print' → logprob: -13.375590324401855

Token 515: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.723973582556937e-05
    2. 'result' → logprob: -11.000017166137695
    3. '(' → logprob: -14.625017166137695
    4. '(res' → logprob: -17.125017166137695
    5. '(r' → logprob: -18.125017166137695
    6. '(resultado' → logprob: -18.125017166137695
    7. ' (' → logprob: -19.000017166137695
    8. '=result' → logprob: -19.250017166137695
    9. '(print' → logprob: -20.375017166137695
    10. '(rest' → logprob: -20.500017166137695

Token 516: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.000158842682139948
    2. '(result' → logprob: -8.75015926361084
    3. ' result' → logprob: -15.12515926361084
    4. 'print' → logprob: -15.75015926361084
    5. 'resultado' → logprob: -19.750158309936523
    6. 'rés' → logprob: -20.000158309936523
    7. 'res' → logprob: -21.000158309936523
    8. ' resultat' → logprob: -21.000158309936523
    9. '[result' → logprob: -21.125158309936523
    10. 'final' → logprob: -21.375158309936523

Token 517: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. '
' → logprob: -17.5
    4. ' print' → logprob: -21.0
    5. 'result' → logprob: -21.5
    6. '``' → logprob: -23.0
    7. '(print' → logprob: -23.75
    8. '#print' → logprob: -24.25
    9. '`' → logprob: -24.625
    10. '`
' → logprob: -24.875

Token 518: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6033604145050049
    2. 'print' → logprob: -1.7283604145050049
    3. '(result' → logprob: -2.353360414505005
    4. 'result' → logprob: -2.478360414505005
    5. 'la' → logprob: -2.603360414505005
    6. 'l' → logprob: -4.978360176086426
    7. '())' → logprob: -5.853360176086426
    8. '()
' → logprob: -6.228360176086426
    9. '(print' → logprob: -6.353360176086426
    10. '(' → logprob: -6.603360176086426

Token 519: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13520261645317078
    2. 'stdout' → logprob: -2.260202646255493
    3. 'console' → logprob: -4.760202407836914
    4. 'standard' → logprob: -4.885202407836914
    5. '```' → logprob: -6.635202407836914
    6. 'output' → logprob: -6.760202407836914
    7. 'dern' → logprob: -7.260202407836914
    8. '\n' → logprob: -7.260202407836914
    9. 'python' → logprob: -8.385202407836914
    10. 'import' → logprob: -8.510202407836914

Token 520: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26445215940475464
    2. '()' → logprob: -1.5144522190093994
    3. 'result' → logprob: -4.76445198059082
    4. '(result' → logprob: -5.88945198059082
    5. '()
' → logprob: -7.51445198059082
    6. '()`' → logprob: -8.63945198059082
    7. '```' → logprob: -9.26445198059082
    8. 'put' → logprob: -9.88945198059082
    9. 'println' → logprob: -9.88945198059082
    10. '(print' → logprob: -9.88945198059082

Token 521: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. ' print' → logprob: -20.0
    4. '``' → logprob: -20.875
    5. 'result' → logprob: -21.375
    6. '
' → logprob: -23.25
    7. '(print' → logprob: -24.125
    8. '`' → logprob: -24.875
    9. '#print' → logprob: -24.875
    10. '.print' → logprob: -25.875

Token 522: 'habit' (ID: 183262)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2062402367591858
    2. ')' → logprob: -1.831240177154541
    3. 'result' → logprob: -4.581240177154541
    4. 'stdout' → logprob: -4.581240177154541
    5. 'sys' → logprob: -6.081240177154541
    6. '")' → logprob: -6.331240177154541
    7. '```' → logprob: -7.331240177154541
    8. ')
' → logprob: -7.956240177154541
    9. '')' → logprob: -8.2062406539917
    10. '``' → logprob: -9.2062406539917

Token 523: 'uellement' (ID: 36026)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36285704374313354
    2. 'e' → logprob: -1.9878571033477783
    3. 'ale' → logprob: -1.9878571033477783
    4. 'é' → logprob: -4.112856864929199
    5. 'al' → logprob: -5.112856864929199
    6. 'ée' → logprob: -6.112856864929199
    7. ')' → logprob: -6.737856864929199
    8. '()' → logprob: -6.737856864929199
    9. '#' → logprob: -7.612856864929199
    10. '#print' → logprob: -7.612856864929199

Token 524: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6095242500305176
    2. 'sys' → logprob: -1.4845242500305176
    3. 'stdout' → logprob: -1.9845242500305176
    4. 'print' → logprob: -2.7345242500305176
    5. '")' → logprob: -4.484524250030518
    6. 'la' → logprob: -5.109524250030518
    7. ' sys' → logprob: -5.859524250030518
    8. '')' → logprob: -6.109524250030518
    9. ' la' → logprob: -6.734524250030518
    10. 'l' → logprob: -7.109524250030518

Token 525: ''écran' (ID: 147901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25352537631988525
    2. 'stdout' → logprob: -1.8785253763198853
    3. 'e' → logprob: -2.7535252571105957
    4. 'a' → logprob: -5.503525257110596
    5. 'standard' → logprob: -6.503525257110596
    6. 'console' → logprob: -8.128525733947754
    7. 'output' → logprob: -8.503525733947754
    8. ' print' → logprob: -9.003525733947754
    9. 'import' → logprob: -9.128525733947754
    10. ''' → logprob: -9.128525733947754

Token 526: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09034231305122375
    2. ')' → logprob: -2.8403422832489014
    3. ')
' → logprob: -3.9653422832489014
    4. '(result' → logprob: -4.9653425216674805
    5. '(print' → logprob: -6.7153425216674805
    6. 'result' → logprob: -7.3403425216674805
    7. ' print' → logprob: -9.71534252166748
    8. ',' → logprob: -10.59034252166748
    9. '()
' → logprob: -10.59034252166748
    10. '(' → logprob: -10.59034252166748

Token 527: ' terminal' (ID: 21801)
  Prédit: 'ordinateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinateur' → logprob: -0.19133888185024261
    2. 'terminal' → logprob: -2.0663387775421143
    3. 'console' → logprob: -3.3163387775421143
    4. 's' → logprob: -5.316339015960693
    5. ' terminal' → logprob: -5.816339015960693
    6. '```' → logprob: -7.441339015960693
    7. 'é' → logprob: -7.816339015960693
    8. 'code' → logprob: -7.941339015960693
    9. '#' → logprob: -8.316338539123535
    10. 'programme' → logprob: -8.316338539123535

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.610405445098877
    2. 'print' → logprob: -0.860405445098877
    3. '(result' → logprob: -4.110405445098877
    4. ')
' → logprob: -4.360405445098877
    5. '(print' → logprob: -6.360405445098877
    6. '()' → logprob: -6.610405445098877
    7. 'result' → logprob: -6.735405445098877
    8. ' print' → logprob: -8.985404968261719
    9. '()
' → logprob: -9.110404968261719
    10. ',result' → logprob: -9.735404968261719

Token 529: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -22.25
    4. 'result' → logprob: -24.0
    5. '``' → logprob: -24.25
    6. '
' → logprob: -24.75
    7. '(print' → logprob: -26.75
    8. '#print' → logprob: -26.75
    9. '`' → logprob: -27.125
    10. 'printf' → logprob: -27.375

Token 530: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00020818933262489736
    2. '(' → logprob: -8.500207901000977
    3. 'result' → logprob: -12.375207901000977
    4. '(resultado' → logprob: -15.250207901000977
    5. '()' → logprob: -16.625207901000977
    6. ' (' → logprob: -16.750207901000977
    7. '=result' → logprob: -17.625207901000977
    8. '(results' → logprob: -17.750207901000977
    9. ',result' → logprob: -18.500207901000977
    10. '(
' → logprob: -18.625207901000977

Token 531: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.23089385032653809
    2. ')' → logprob: -1.605893850326538
    3. 't' → logprob: -5.480894088745117
    4. 'ation' → logprob: -7.480894088745117
    5. '(result' → logprob: -8.605894088745117
    6. 'a' → logprob: -8.855894088745117
    7. 'result' → logprob: -9.105894088745117
    8. '(' → logprob: -9.730894088745117
    9. 's' → logprob: -10.605894088745117
    10. 'ат' → logprob: -10.730894088745117

Token 532: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9146995327901095e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.250019073486328
    4. '()' → logprob: -16.000019073486328
    5. '))' → logprob: -16.125019073486328
    6. ')`' → logprob: -16.250019073486328
    7. '```' → logprob: -16.375019073486328
    8. '(' → logprob: -17.000019073486328
    9. '),' → logprob: -17.125019073486328
    10. '<|end|>' → logprob: -17.625019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 530
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 269
Précision stricte (1ère position): 23.21%
Précision adaptée (1ère position): 23.58%
Précision (top 10): 50.75%
================================================================================
