================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import string
import itertools
import fractions
import heapq
import collections
import re
import array
import bisect
import copy
import functools
import random
import sys
from collections import deque, defaultdict, Counter
from heapq import heappush, heappop
from itertools import permutations, combinations, product, accumulate, groupby
from bisect import bisect_left, bisect_right, insort_left, insort_right
from operator import itemgetter as ig

sys.setrecursionlimit(10 ** 7)

inf = 10 ** 20
INF = float("INF")
ans = 1
tmp = 0
cnt = 0
ansli = []
tmpli = []
candili = []
stillset = set()
eps = 1.0 / 10 ** 10
mod = 10 ** 9 + 7
dd = [(-1, 0), (0, 1), (1, 0), (0, -1)]
ddn = dd + [(-1, 1), (1, 1), (1, -1), (-1, -1)]
ddn9 = ddn + [(0, 0)]

def wi():
    return list(map(int, sys.stdin.readline().split()))

def wip():
    return [int(x) - 1 for x in sys.stdin.readline().split()]

def ws():
    return sys.stdin.readline().split()

def i():
    return int(sys.stdin.readline())

def s():
    return input()

def s_list():
    return list(input())

def hi(n):
    return [i() for _ in range(n)]

def hs(n):
    return [s() for _ in range(n)]

def mi(n):
    return [wi() for _ in range(n)]

def num_grid(n):
    return [[int(i) for i in sys.stdin.readline().split()[0]] for _ in range(n)]

def mip(n):
    return [wip() for _ in range(n)]

def ms(n):
    return [ws() for _ in range(n)]

def grid(n):
    return [s_list() for _ in range(n)]

n = i()
s = s()
new_s = ""
for idx in range(2 * n):
    if (2 * n - idx - 1) % 2 == 0:
        new_s += s[idx]
    else:
        new_s += "W" if s[idx] == "B" else "B"

lr = ""
for idx in range(2 * n):
    if new_s[idx] == "B":
        lr += "R"
    else:
        lr += "L"

if lr.count("R") != n:
    print(0)
    exit()

lcount = 0
for idx in range(2 * n):
    if lr[idx] == "L":
        lcount += 1
    else:
        ans *= lcount
        ans %= mod
        lcount -= 1

for j in range(1, n + 1):
    ans *= j
    ans %= mod

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858839981257915
    2. '\n' → logprob: -5.883858680725098
    3. '<|end|>' → logprob: -6.008858680725098
    4. '```' → logprob: -6.883858680725098
    5. '\' → logprob: -6.883858680725098
    6. 'import' → logprob: -7.133858680725098
    7. '<|end|>' → logprob: -9.133858680725098
    8. 'def' → logprob: -9.633858680725098
    9. '.pi' → logprob: -9.883858680725098
    10. 'newline' → logprob: -9.883858680725098

Token 4: ' string' (ID: 1621)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4080662429332733
    2. ' os' → logprob: -1.1580662727355957
    3. ' numpy' → logprob: -4.408066272735596
    4. 'sys' → logprob: -5.533066272735596
    5. ' random' → logprob: -6.033066272735596
    6. 'os' → logprob: -6.658066272735596
    7. ' cm' → logprob: -8.158065795898438
    8. ' re' → logprob: -8.283065795898438
    9. ' statistics' → logprob: -8.408065795898438
    10. 'random' → logprob: -8.908065795898438

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3115742802619934
    2. 'import' → logprob: -1.9365742206573486
    3. '
' → logprob: -3.4365742206573486
    4. '#' → logprob: -3.5615742206573486
    5. '<|end|>' → logprob: -4.311574459075928
    6. '\' → logprob: -4.436574459075928
    7. '.' → logprob: -4.436574459075928
    8. '```' → logprob: -4.561574459075928
    9. ',' → logprob: -5.186574459075928
    10. '

' → logprob: -5.811574459075928

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5187146663665771
    2. '\n' → logprob: -1.6437146663665771
    3. '
' → logprob: -2.143714666366577
    4. '

' → logprob: -3.768714666366577
    5. 'def' → logprob: -4.018714904785156
    6. ',' → logprob: -4.143714904785156
    7. '\' → logprob: -4.393714904785156
    8. '```' → logprob: -4.768714904785156
    9. 'from' → logprob: -6.018714904785156
    10. '#' → logprob: -6.018714904785156

Token 7: ' itertools' (ID: 103178)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1261873245239258
    2. 'random' → logprob: -1.2511873245239258
    3. ' random' → logprob: -2.001187324523926
    4. ' re' → logprob: -2.876187324523926
    5. ' sys' → logprob: -2.876187324523926
    6. 'os' → logprob: -3.001187324523926
    7. 'sys' → logprob: -3.126187324523926
    8. ' os' → logprob: -3.126187324523926
    9. 'collections' → logprob: -6.001187324523926
    10. ' collections' → logprob: -6.751187324523926

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.039240021258592606
    2. '\' → logprob: -4.414239883422852
    3. '\n' → logprob: -4.539239883422852
    4. '#' → logprob: -5.539239883422852
    5. 'import' → logprob: -5.789239883422852
    6. ',' → logprob: -5.914239883422852
    7. '```' → logprob: -6.164239883422852
    8. '(' → logprob: -7.539239883422852
    9. 'def' → logprob: -7.539239883422852
    10. '<|end|>' → logprob: -7.789239883422852

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21413438022136688
    2. 'def' → logprob: -2.339134454727173
    3. '\' → logprob: -3.714134454727173
    4. '#' → logprob: -3.714134454727173
    5. 'import' → logprob: -4.339134216308594
    6. '\n' → logprob: -4.339134216308594
    7. '```' → logprob: -5.464134216308594
    8. '

' → logprob: -5.964134216308594
    9. ',' → logprob: -5.964134216308594
    10. 'from' → logprob: -6.464134216308594

Token 10: ' fractions' (ID: 110523)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5834471583366394
    2. 're' → logprob: -1.8334472179412842
    3. 'fun' → logprob: -2.208447217941284
    4. ' collections' → logprob: -2.458447217941284
    5. 'random' → logprob: -2.958447217941284
    6. ' functools' → logprob: -4.458446979522705
    7. ' re' → logprob: -4.833446979522705
    8. ' random' → logprob: -5.458446979522705
    9. 'operator' → logprob: -5.583446979522705
    10. 'os' → logprob: -5.833446979522705

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0541664361953735
    2. '
' → logprob: -1.4291664361953735
    3. 'import' → logprob: -1.9291664361953735
    4. '

' → logprob: -2.304166316986084
    5. 'def' → logprob: -2.554166316986084
    6. '#' → logprob: -4.304166316986084
    7. 'from' → logprob: -4.429166316986084
    8. ',' → logprob: -4.679166316986084
    9. '<|end|>' → logprob: -4.679166316986084
    10. '\n' → logprob: -4.929166316986084

Token 12: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.503964900970459
    2. 'import' → logprob: -2.003964900970459
    3. '
' → logprob: -2.128964900970459
    4. '

' → logprob: -3.128964900970459
    5. '\n' → logprob: -3.878964900970459
    6. 'def' → logprob: -4.503964900970459
    7. '<|end|>' → logprob: -4.503964900970459
    8. ',' → logprob: -4.753964900970459
    9. '\' → logprob: -4.878964900970459
    10. '```' → logprob: -5.128964900970459

Token 13: ' heap' (ID: 37237)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.1391140222549438
    2. 'random' → logprob: -1.3891140222549438
    3. 'decimal' → logprob: -2.2641139030456543
    4. 'operator' → logprob: -2.6391139030456543
    5. ' collections' → logprob: -2.8891139030456543
    6. ' functools' → logprob: -3.1391139030456543
    7. ' decimal' → logprob: -3.2641139030456543
    8. 'fun' → logprob: -3.3891139030456543
    9. ' random' → logprob: -3.6391139030456543
    10. ' operator' → logprob: -4.139113903045654

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.630610641877865e-06
    2. 'queue' → logprob: -12.000006675720215
    3. ' queue' → logprob: -15.375006675720215
    4. 't' → logprob: -16.7500057220459
    5. 'u' → logprob: -17.3750057220459
    6. 'Queue' → logprob: -18.1250057220459
    7. '_queue' → logprob: -18.5000057220459
    8. 'que' → logprob: -18.7500057220459
    9. '```' → logprob: -18.8750057220459
    10. '큐' → logprob: -18.8750057220459

Token 15: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.663360059261322
    2. '
' → logprob: -1.5383601188659668
    3. 'import' → logprob: -2.163360118865967
    4. '\n' → logprob: -3.163360118865967
    5. '

' → logprob: -3.788360118865967
    6. '<|end|>' → logprob: -3.913360118865967
    7. 'def' → logprob: -4.163360118865967
    8. '#' → logprob: -4.288360118865967
    9. '\' → logprob: -4.288360118865967
    10. ',' → logprob: -4.413360118865967

Token 16: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3243712186813354
    2. '
' → logprob: -1.4493712186813354
    3. '.' → logprob: -1.9493712186813354
    4. 'def' → logprob: -2.074371337890625
    5. '#' → logprob: -2.949371337890625
    6. '

' → logprob: -3.074371337890625
    7. '\n' → logprob: -3.324371337890625
    8. '\' → logprob: -3.574371337890625
    9. ',' → logprob: -4.074371337890625
    10. '<|end|>' → logprob: -4.574371337890625

Token 17: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2037312537431717
    2. ' collections' → logprob: -1.9537312984466553
    3. 'operator' → logprob: -3.7037312984466553
    4. ' operator' → logprob: -4.828731060028076
    5. 'random' → logprob: -5.453731060028076
    6. 'bis' → logprob: -6.453731060028076
    7. 'copy' → logprob: -6.953731060028076
    8. 'os' → logprob: -7.328731060028076
    9. ' functools' → logprob: -7.328731060028076
    10. ' bis' → logprob: -7.453731060028076

Token 18: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.41060367226600647
    2. '.' → logprob: -2.0356037616729736
    3. '<|end|>' → logprob: -2.4106037616729736
    4. '
' → logprob: -3.0356037616729736
    5. '\n' → logprob: -3.4106037616729736
    6. '\' → logprob: -4.0356035232543945
    7. '

' → logprob: -5.2856035232543945
    8. 'from' → logprob: -6.1606035232543945
    9. '```' → logprob: -6.4106035232543945
    10. '#' → logprob: -6.7856035232543945

Token 19: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3493068218231201
    2. '
' → logprob: -1.5993068218231201
    3. '\n' → logprob: -3.59930682182312
    4. '

' → logprob: -3.84930682182312
    5. 'def' → logprob: -4.474307060241699
    6. '.' → logprob: -4.599307060241699
    7. 'from' → logprob: -5.349307060241699
    8. '<|end|>' → logprob: -5.599307060241699
    9. '\' → logprob: -5.849307060241699
    10. '#' → logprob: -6.224307060241699

Token 20: ' re' (ID: 322)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.7448742985725403
    2. ' operator' → logprob: -0.9948742985725403
    3. 'operator' → logprob: -3.1198742389678955
    4. ' bis' → logprob: -3.4948742389678955
    5. ' sys' → logprob: -3.9948742389678955
    6. ' os' → logprob: -4.369874477386475
    7. ' re' → logprob: -4.369874477386475
    8. 'random' → logprob: -4.869874477386475
    9. ' random' → logprob: -5.119874477386475
    10. 'os' → logprob: -5.244874477386475

Token 21: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9003840088844299
    2. '\n' → logprob: -1.1503839492797852
    3. '
' → logprob: -2.650383949279785
    4. 'def' → logprob: -2.900383949279785
    5. '<|end|>' → logprob: -3.150383949279785
    6. '.' → logprob: -3.525383949279785
    7. '```' → logprob: -4.150383949279785
    8. '#' → logprob: -4.150383949279785
    9. '\' → logprob: -4.525383949279785
    10. '

' → logprob: -4.650383949279785

Token 22: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8139203190803528
    2. 'import' → logprob: -1.438920259475708
    3. '#' → logprob: -2.063920259475708
    4. '\n' → logprob: -2.313920259475708
    5. 'class' → logprob: -3.188920259475708
    6. '.' → logprob: -4.438920497894287
    7. '[' → logprob: -4.938920497894287
    8. '\' → logprob: -5.188920497894287
    9. '
' → logprob: -5.688920497894287
    10. ',' → logprob: -5.688920497894287

Token 23: ' array' (ID: 2644)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8775867223739624
    2. 'sys' → logprob: -1.5025867223739624
    3. ' functools' → logprob: -1.6275867223739624
    4. 'os' → logprob: -2.627586841583252
    5. 'random' → logprob: -3.502586841583252
    6. ' os' → logprob: -3.877586841583252
    7. 'fun' → logprob: -4.502586841583252
    8. ' random' → logprob: -4.877586841583252
    9. 'operator' → logprob: -5.002586841583252
    10. ' operator' → logprob: -5.377586841583252

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6332696676254272
    2. '<|end|>' → logprob: -1.1332696676254272
    3. 'import' → logprob: -2.633269786834717
    4. '
' → logprob: -3.008269786834717
    5. '

' → logprob: -5.258269786834717
    6. '\' → logprob: -5.383269786834717
    7. '<|end|>' → logprob: -5.633269786834717
    8. '.' → logprob: -5.883269786834717
    9. '```' → logprob: -6.008269786834717
    10. '[' → logprob: -6.258269786834717

Token 25: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0241742134094238
    2. '
' → logprob: -1.1491742134094238
    3. '

' → logprob: -2.274174213409424
    4. '<|end|>' → logprob: -2.399174213409424
    5. '\n' → logprob: -3.149174213409424
    6. '#' → logprob: -4.024174213409424
    7. '' → logprob: -4.399174213409424
    8. '.' → logprob: -4.524174213409424
    9. 'def' → logprob: -5.024174213409424
    10. 'from' → logprob: -5.024174213409424

Token 26: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.08962858468294144
    2. 'bis' → logprob: -2.7146286964416504
    3. ' sys' → logprob: -4.96462869644165
    4. ' functools' → logprob: -5.21462869644165
    5. ' os' → logprob: -5.58962869644165
    6. 'os' → logprob: -6.83962869644165
    7. 'sys' → logprob: -6.83962869644165
    8. ' copy' → logprob: -8.464628219604492
    9. ' random' → logprob: -8.714628219604492
    10. 'random' → logprob: -8.839628219604492

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.41866585687967e-06
    2. 't' → logprob: -11.875008583068848
    3. 'e' → logprob: -14.125008583068848
    4. 'ec' → logprob: -15.125008583068848
    5. 'ected' → logprob: -15.375008583068848
    6. 'ection' → logprob: -17.00000762939453
    7. 'ectl' → logprob: -17.12500762939453
    8. 'ects' → logprob: -17.62500762939453
    9. 'ector' → logprob: -17.75000762939453
    10. '```' → logprob: -18.50000762939453

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8144698143005371
    2. '\n' → logprob: -1.814469814300537
    3. '<|end|>' → logprob: -1.814469814300537
    4. '
' → logprob: -2.189469814300537
    5. '.' → logprob: -3.064469814300537
    6. '```' → logprob: -4.064469814300537
    7. '

' → logprob: -4.439469814300537
    8. '\' → logprob: -4.814469814300537
    9. '[' → logprob: -5.064469814300537
    10. '#' → logprob: -5.189469814300537

Token 30: ' copy' (ID: 5150)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.3136775493621826
    2. ' functools' → logprob: -1.5636775493621826
    3. ' random' → logprob: -1.9386775493621826
    4. 'copy' → logprob: -2.4386775493621826
    5. 'cmath' → logprob: -2.4386775493621826
    6. ' copy' → logprob: -2.5636775493621826
    7. ' sys' → logprob: -3.0636775493621826
    8. ' math' → logprob: -4.063677787780762
    9. 'sys' → logprob: -4.063677787780762
    10. 'math' → logprob: -4.438677787780762

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7430844306945801
    2. '<|end|>' → logprob: -0.9930844306945801
    3. 'import' → logprob: -2.61808443069458
    4. '

' → logprob: -2.99308443069458
    5. '\n' → logprob: -4.61808443069458
    6. '#' → logprob: -5.24308443069458
    7. '```' → logprob: -5.74308443069458
    8. '<|end|>' → logprob: -5.86808443069458
    9. 'def' → logprob: -5.99308443069458
    10. '.' → logprob: -6.99308443069458

Token 32: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6433982849121094
    2. '#' → logprob: -2.1433982849121094
    3. '<|end|>' → logprob: -2.1433982849121094
    4. 'import' → logprob: -2.3933982849121094
    5. '

' → logprob: -3.1433982849121094
    6. '\n' → logprob: -3.3933982849121094
    7. 'def' → logprob: -4.143398284912109
    8. '.' → logprob: -4.393398284912109
    9. '\' → logprob: -4.768398284912109
    10. '```' → logprob: -4.768398284912109

Token 33: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6307570934295654
    2. 'random' → logprob: -1.7557570934295654
    3. 'operator' → logprob: -2.8807570934295654
    4. ' random' → logprob: -3.0057570934295654
    5. 'decimal' → logprob: -3.3807570934295654
    6. ' sys' → logprob: -3.8807570934295654
    7. 'datetime' → logprob: -3.8807570934295654
    8. ' operator' → logprob: -4.2557573318481445
    9. 'sys' → logprob: -4.5057573318481445
    10. 'deque' → logprob: -4.5057573318481445

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3200935125350952
    2. '
' → logprob: -1.5700935125350952
    3. 'def' → logprob: -1.8200935125350952
    4. '\n' → logprob: -2.5700936317443848
    5. '<|end|>' → logprob: -3.0700936317443848
    6. '.' → logprob: -3.0700936317443848
    7. '\' → logprob: -3.1950936317443848
    8. '#' → logprob: -3.4450936317443848
    9. 'd' → logprob: -3.5700936317443848
    10. '@' → logprob: -4.070093631744385

Token 36: ' random' (ID: 7526)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.16394688189029694
    2. 'operator' → logprob: -1.9139468669891357
    3. ' random' → logprob: -6.163947105407715
    4. 'random' → logprob: -7.038947105407715
    5. ' hashlib' → logprob: -8.538947105407715
    6. ' json' → logprob: -8.788947105407715
    7. 'json' → logprob: -9.663947105407715
    8. 'os' → logprob: -9.913947105407715
    9. ' io' → logprob: -10.038947105407715
    10. ' threading' → logprob: -10.538947105407715

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35244590044021606
    2. '\n' → logprob: -2.6024458408355713
    3. '#' → logprob: -2.8524458408355713
    4. 'import' → logprob: -3.2274458408355713
    5. '<|end|>' → logprob: -3.6024458408355713
    6. '

' → logprob: -3.7274458408355713
    7. 'def' → logprob: -4.35244607925415
    8. '\' → logprob: -4.47744607925415
    9. '```' → logprob: -4.47744607925415
    10. '' → logprob: -4.97744607925415

Token 39: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3194538950920105
    2. ' time' → logprob: -1.9444539546966553
    3. 'sys' → logprob: -2.8194539546966553
    4. 'time' → logprob: -2.9444539546966553
    5. ' datetime' → logprob: -5.194453716278076
    6. ' operator' → logprob: -5.819453716278076
    7. 'datetime' → logprob: -6.069453716278076
    8. ' os' → logprob: -6.319453716278076
    9. 'operator' → logprob: -6.819453716278076
    10. ' decimal' → logprob: -7.069453716278076

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9065900444984436
    2. '\n' → logprob: -1.4065899848937988
    3. '.' → logprob: -2.156589984893799
    4. '

' → logprob: -2.406589984893799
    5. '#' → logprob: -3.531589984893799
    6. '\' → logprob: -3.656589984893799
    7. '<|end|>' → logprob: -3.656589984893799
    8. '' → logprob: -3.906589984893799
    9. 'def' → logprob: -4.281589984893799
    10. '```' → logprob: -4.906589984893799

Token 41: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3459516167640686
    2. '

' → logprob: -1.5959515571594238
    3. '\n' → logprob: -3.095951557159424
    4. '<|end|>' → logprob: -4.470951557159424
    5. 'import' → logprob: -5.095951557159424
    6. '#' → logprob: -5.095951557159424
    7. '```' → logprob: -5.470951557159424
    8. 'def' → logprob: -5.470951557159424
    9. '' → logprob: -5.970951557159424
    10. 'n' → logprob: -6.220951557159424

Token 42: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24523107707500458
    2. ' collections' → logprob: -2.6202311515808105
    3. ' math' → logprob: -2.8702311515808105
    4. ' io' → logprob: -3.6202311515808105
    5. ' typing' → logprob: -3.6202311515808105
    6. '_' → logprob: -3.8702311515808105
    7. ' os' → logprob: -5.4952311515808105
    8. ' ' → logprob: -5.7452311515808105
    9. ' itertools' → logprob: -5.9952311515808105
    10. 'collections' → logprob: -6.6202311515808105

Token 43: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42887642979621887
    2. ' import' → logprob: -1.0538763999938965
    3. 'abc' → logprob: -9.803876876831055
    4. '.' → logprob: -10.178876876831055
    5. '	import' → logprob: -10.553876876831055
    6. '```' → logprob: -10.678876876831055
    7. ' ' → logprob: -11.928876876831055
    8. 's' → logprob: -12.178876876831055
    9. ' abc' → logprob: -12.428876876831055
    10. 'from' → logprob: -13.053876876831055

Token 44: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.07714478671550751
    2. ' deque' → logprob: -2.7021448612213135
    3. ' abc' → logprob: -5.202144622802734
    4. 'deque' → logprob: -6.702144622802734
    5. 'default' → logprob: -8.827144622802734
    6. ' ' → logprob: -9.077144622802734
    7. ' ' → logprob: -9.702144622802734
    8. ' Counter' → logprob: -9.827144622802734
    9. ' default' → logprob: -10.452144622802734
    10. 'abc' → logprob: -10.577144622802734

Token 45: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5308231115341187
    2. '

' → logprob: -1.0308231115341187
    3. '<|end|>' → logprob: -3.405823230743408
    4. 'import' → logprob: -5.280823230743408
    5. 'def' → logprob: -5.280823230743408
    6. '#' → logprob: -5.905823230743408
    7. '' → logprob: -6.155823230743408
    8. '\n' → logprob: -6.905823230743408
    9. 'n' → logprob: -7.030823230743408
    10. '<|end|>' → logprob: -7.030823230743408

Token 46: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.07630284875631332
    2. ' defaultdict' → logprob: -3.3263027667999268
    3. 'Counter' → logprob: -3.5763027667999268
    4. 'named' → logprob: -4.826303005218506
    5. 'Ordered' → logprob: -6.701303005218506
    6. ' Counter' → logprob: -8.576302528381348
    7. ' named' → logprob: -9.701302528381348
    8. 'Chain' → logprob: -10.826302528381348
    9. 'Default' → logprob: -11.326302528381348
    10. 'abc' → logprob: -11.451302528381348

Token 47: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5839254260063171
    2. ',' → logprob: -1.583925485610962
    3. '

' → logprob: -1.583925485610962
    4. '<|end|>' → logprob: -4.208925247192383
    5. ',
' → logprob: -5.208925247192383
    6. 'import' → logprob: -5.333925247192383
    7. ',

' → logprob: -6.208925247192383
    8. '
' → logprob: -6.958925247192383
    9. '<|end|>' → logprob: -7.458925247192383
    10. 'def' → logprob: -7.458925247192383

Token 48: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.1598861813545227
    2. ' Counter' → logprob: -2.534886121749878
    3. 'Ordered' → logprob: -2.784886121749878
    4. 'named' → logprob: -5.534886360168457
    5. ' Ordered' → logprob: -6.034886360168457
    6. ' named' → logprob: -7.909886360168457
    7. 'Chain' → logprob: -10.909886360168457
    8. 'counter' → logprob: -12.284886360168457
    9. '_counter' → logprob: -12.409886360168457
    10. 'deque' → logprob: -12.409886360168457

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40915447473526
    2. '

' → logprob: -1.2841544151306152
    3. ',' → logprob: -4.159154415130615
    4. 'import' → logprob: -4.409154415130615
    5. '\n' → logprob: -5.034154415130615
    6. '<|end|>' → logprob: -5.284154415130615
    7. '' → logprob: -5.534154415130615
    8. '#' → logprob: -5.659154415130615
    9. 'def' → logprob: -5.784154415130615
    10. ',
' → logprob: -6.284154415130615

Token 50: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4587582051753998
    2. '
' → logprob: -1.5837582349777222
    3. 'd' → logprob: -3.2087581157684326
    4. '

' → logprob: -3.4587581157684326
    5. '' → logprob: -3.9587581157684326
    6. '\' → logprob: -3.9587581157684326
    7. '\n' → logprob: -4.083758354187012
    8. '#' → logprob: -4.208758354187012
    9. 'n' → logprob: -5.833758354187012
    10. 'import' → logprob: -5.958758354187012

Token 51: ' heap' (ID: 37237)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.27214762568473816
    2. ' operator' → logprob: -2.1471476554870605
    3. ' math' → logprob: -2.5221476554870605
    4. 'typing' → logprob: -4.2721476554870605
    5. 'operator' → logprob: -4.3971476554870605
    6. ' itertools' → logprob: -5.1471476554870605
    7. ' os' → logprob: -6.1471476554870605
    8. '_' → logprob: -6.6471476554870605
    9. ' io' → logprob: -7.0221476554870605
    10. ' heap' → logprob: -7.1471476554870605

Token 52: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -18.875
    3. ' queue' → logprob: -19.5
    4. 'import' → logprob: -21.5
    5. '```' → logprob: -21.875
    6. '<|end|>' → logprob: -21.875
    7. 'f' → logprob: -22.0
    8. 'n' → logprob: -22.125
    9. '_queue' → logprob: -22.25
    10. 'dict' → logprob: -22.25

Token 53: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09134683012962341
    2. 'import' → logprob: -2.5913467407226562
    3. ' ' → logprob: -4.466346740722656
    4. '<|end|>' → logprob: -7.216346740722656
    5. '.' → logprob: -9.591346740722656
    6. '	import' → logprob: -10.341346740722656
    7. 'space' → logprob: -11.591346740722656
    8. '  ' → logprob: -11.966346740722656
    9. '_import' → logprob: -11.966346740722656
    10. ' ' → logprob: -12.091346740722656

Token 54: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.15178415179252625
    2. 'he' → logprob: -2.0267841815948486
    3. ' n' → logprob: -5.4017839431762695
    4. ' ' → logprob: -6.1517839431762695
    5. 'nl' → logprob: -6.4017839431762695
    6. 'n' → logprob: -7.9017839431762695
    7. 'heap' → logprob: -8.27678394317627
    8. '```' → logprob: -10.40178394317627
    9. ' heap' → logprob: -10.52678394317627
    10. 'merge' → logprob: -10.52678394317627

Token 55: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009170551202259958
    2. 'ap' → logprob: -7.000916957855225
    3. 'a' → logprob: -12.125917434692383
    4. 'appen' → logprob: -17.375917434692383
    5. 'appa' → logprob: -17.750917434692383
    6. 'ап' → logprob: -18.125917434692383
    7. 'aps' → logprob: -18.375917434692383
    8. 'apput' → logprob: -18.500917434692383
    9. '```' → logprob: -18.750917434692383
    10. 'aq' → logprob: -19.000917434692383

Token 56: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.018150178715586662
    2. 'op' → logprob: -4.018150329589844
    3. 'us' → logprob: -16.018150329589844
    4. 'ut' → logprob: -17.143150329589844
    5. 'u' → logprob: -17.393150329589844
    6. '```' → logprob: -17.768150329589844
    7. '[' → logprob: -18.143150329589844
    8. 'o' → logprob: -18.268150329589844
    9. 'push' → logprob: -18.268150329589844
    10. 'USH' → logprob: -19.518150329589844

Token 57: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.25198960304260254
    2. ' he' → logprob: -1.5019896030426025
    3. 'heap' → logprob: -9.751989364624023
    4. ' heap' → logprob: -13.376989364624023
    5. '.he' → logprob: -15.126989364624023
    6. '```' → logprob: -15.501989364624023
    7. '_he' → logprob: -15.876989364624023
    8. ' ' → logprob: -16.001989364624023
    9. 'hev' → logprob: -18.126989364624023
    10. 'hem' → logprob: -18.251989364624023

Token 59: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.703443770878948e-06
    2. 'ap' → logprob: -11.875007629394531
    3. 'pp' → logprob: -14.250007629394531
    4. 'a' → logprob: -17.12500762939453
    5. 'appen' → logprob: -17.62500762939453
    6. ' app' → logprob: -18.37500762939453
    7. '_app' → logprob: -19.37500762939453
    8. '(app' → logprob: -19.75000762939453
    9. 'pop' → logprob: -19.87500762939453
    10. '	app' → logprob: -19.87500762939453

Token 60: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.5759883522987366
    2. 'op' → logprob: -0.8259883522987366
    3. 'o' → logprob: -11.32598876953125
    4. 'opp' → logprob: -11.70098876953125
    5. 'p' → logprob: -12.32598876953125
    6. '```' → logprob: -12.45098876953125
    7. '   ' → logprob: -12.70098876953125
    8. '
' → logprob: -12.82598876953125
    9. '

' → logprob: -13.20098876953125
    10. '[' → logprob: -13.45098876953125

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4078011214733124
    2. '

' → logprob: -1.1578011512756348
    3. 'def' → logprob: -5.282801151275635
    4. '' → logprob: -5.657801151275635
    5. '\n' → logprob: -6.282801151275635
    6. 'import' → logprob: -6.282801151275635
    7. '


' → logprob: -6.407801151275635
    8. ',' → logprob: -6.532801151275635
    9. '
' → logprob: -7.032801151275635
    10. ',
' → logprob: -7.282801151275635

Token 62: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8289868235588074
    2. '
' → logprob: -0.8289868235588074
    3. '

' → logprob: -2.828986883163452
    4. 'def' → logprob: -3.328986883163452
    5. '' → logprob: -4.703986644744873
    6. '\' → logprob: -4.953986644744873
    7. '\n' → logprob: -5.578986644744873
    8. '
' → logprob: -5.703986644744873
    9. '#' → logprob: -6.453986644744873
    10. 'n' → logprob: -6.578986644744873

Token 63: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.1123559474945068
    2. ' operator' → logprob: -1.2373559474945068
    3. ' itertools' → logprob: -1.9873559474945068
    4. 'operator' → logprob: -2.112355947494507
    5. 'math' → logprob: -2.362355947494507
    6. ' typing' → logprob: -4.487356185913086
    7. '_' → logprob: -5.112356185913086
    8. '_operator' → logprob: -5.612356185913086
    9. '_math' → logprob: -5.987356185913086
    10. 'typing' → logprob: -6.237356185913086

Token 64: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02314986288547516
    2. 'import' → logprob: -3.8981499671936035
    3. '.' → logprob: -6.5231499671936035
    4. ' ' → logprob: -7.3981499671936035
    5. '	import' → logprob: -8.773149490356445
    6. ' .' → logprob: -9.023149490356445
    7. '.import' → logprob: -9.148149490356445
    8. ' itertools' → logprob: -10.273149490356445
    9. '_import' → logprob: -10.398149490356445
    10. '.im' → logprob: -11.148149490356445

Token 65: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.319197416305542
    2. 'per' → logprob: -2.444197416305542
    3. ' product' → logprob: -2.944197416305542
    4. 'com' → logprob: -2.944197416305542
    5. 'product' → logprob: -3.069197416305542
    6. ' combinations' → logprob: -4.319197654724121
    7. 'count' → logprob: -4.694197654724121
    8. ' accumulate' → logprob: -5.694197654724121
    9. 'acc' → logprob: -6.444197654724121
    10. ' count' → logprob: -6.569197654724121

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055544231086969376
    2. ',
' → logprob: -3.305544137954712
    3. '\n' → logprob: -5.305544376373291
    4. '<|end|>' → logprob: -6.055544376373291
    5. 'import' → logprob: -6.305544376373291
    6. 'from' → logprob: -6.805544376373291
    7. '(
' → logprob: -6.930544376373291
    8. '(' → logprob: -6.930544376373291
    9. ')' → logprob: -7.055544376373291
    10. '
' → logprob: -7.430544376373291

Token 67: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.04436977952718735
    2. 'product' → logprob: -3.794369697570801
    3. ' combinations' → logprob: -4.044369697570801
    4. ' product' → logprob: -5.794369697570801
    5. 'chain' → logprob: -8.7943696975708
    6. '	com' → logprob: -9.7943696975708
    7. 'acc' → logprob: -10.6693696975708
    8. 'group' → logprob: -10.7943696975708
    9. ' chain' → logprob: -10.9193696975708
    10. 'comb' → logprob: -11.0443696975708

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10359172523021698
    2. '<|end|>' → logprob: -3.3535916805267334
    3. '
' → logprob: -3.6035916805267334
    4. ',
' → logprob: -3.8535916805267334
    5. '\n' → logprob: -5.1035919189453125
    6. 'import' → logprob: -5.4785919189453125
    7. 'from' → logprob: -6.8535919189453125
    8. ' ,' → logprob: -7.7285919189453125
    9. '

' → logprob: -7.7285919189453125
    10. ',n' → logprob: -8.103591918945312

Token 69: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.1477486938238144
    2. ' product' → logprob: -2.1477487087249756
    3. 'com' → logprob: -4.1477484703063965
    4. 'chain' → logprob: -6.2727484703063965
    5. 'acc' → logprob: -6.5227484703063965
    6. ' combinations' → logprob: -7.5227484703063965
    7. ' chain' → logprob: -7.8977484703063965
    8. ' accumulate' → logprob: -8.397748947143555
    9. 'group' → logprob: -8.647748947143555
    10. ' group' → logprob: -10.147748947143555

Token 70: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3973591923713684
    2. ',' → logprob: -2.1473591327667236
    3. '

' → logprob: -2.6473591327667236
    4. '\n' → logprob: -2.8973591327667236
    5. '<|end|>' → logprob: -3.3973591327667236
    6. 'def' → logprob: -4.022359371185303
    7. ',
' → logprob: -4.522359371185303
    8. 'n' → logprob: -5.272359371185303
    9. '#' → logprob: -5.647359371185303
    10. 'import' → logprob: -6.022359371185303

Token 71: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.15027841925621033
    2. 'chain' → logprob: -2.400278329849243
    3. 'acc' → logprob: -3.275278329849243
    4. 'group' → logprob: -5.275278568267822
    5. 'cycle' → logprob: -6.400278568267822
    6. ' accumulate' → logprob: -6.900278568267822
    7. 'compress' → logprob: -7.275278568267822
    8. '```' → logprob: -7.275278568267822
    9. ' chain' → logprob: -7.650278568267822
    10. 'is' → logprob: -7.775278568267822

Token 72: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23775464296340942
    2. '

' → logprob: -2.3627545833587646
    3. 'def' → logprob: -3.4877545833587646
    4. '#' → logprob: -3.9877545833587646
    5. '\n' → logprob: -3.9877545833587646
    6. '' → logprob: -4.112754821777344
    7. '\' → logprob: -4.612754821777344
    8. ',' → logprob: -5.487754821777344
    9. '.' → logprob: -5.862754821777344
    10. '[' → logprob: -5.987754821777344

Token 73: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.7061865329742432
    2. ' group' → logprob: -1.3311865329742432
    3. 'chain' → logprob: -2.456186532974243
    4. ' chain' → logprob: -2.456186532974243
    5. 'com' → logprob: -2.831186532974243
    6. 'filter' → logprob: -5.331186294555664
    7. 'cycle' → logprob: -6.081186294555664
    8. '```' → logprob: -6.331186294555664
    9. 'compress' → logprob: -6.956186294555664
    10. 'st' → logprob: -7.956186294555664

Token 74: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -3.7697225252486533e-06
    2. 'b' → logprob: -13.625003814697266
    3. 'ing' → logprob: -13.875003814697266
    4. 'y' → logprob: -14.000003814697266
    5. 'ed' → logprob: -14.500003814697266
    6. ' by' → logprob: -16.250003814697266
    7. 'ings' → logprob: -17.875003814697266
    8. 's' → logprob: -17.875003814697266
    9. 'by's' → logprob: -18.000003814697266
    10. '```' → logprob: -18.625003814697266

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05378585308790207
    2. '<|end|>' → logprob: -3.678785800933838
    3. '

' → logprob: -4.303785800933838
    4. ',' → logprob: -5.178785800933838
    5. '\n' → logprob: -5.928785800933838
    6. 'def' → logprob: -6.678785800933838
    7. 'import' → logprob: -6.928785800933838
    8. ',
' → logprob: -7.053785800933838
    9. '#' → logprob: -7.303785800933838
    10. '
' → logprob: -8.303786277770996

Token 76: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21827280521392822
    2. '

' → logprob: -2.3432726860046387
    3. 'def' → logprob: -3.4682726860046387
    4. '\n' → logprob: -3.4682726860046387
    5. 'import' → logprob: -4.343272686004639
    6. '#' → logprob: -4.593272686004639
    7. 'class' → logprob: -6.093272686004639
    8. 'd' → logprob: -6.593272686004639
    9. ',' → logprob: -6.593272686004639
    10. 'n' → logprob: -6.718272686004639

Token 77: ' bis' (ID: 7204)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6193505525588989
    2. 'operator' → logprob: -0.8693505525588989
    3. 'math' → logprob: -3.4943504333496094
    4. ' math' → logprob: -4.869350433349609
    5. ' typing' → logprob: -6.744350433349609
    6. 'typing' → logprob: -6.869350433349609
    7. 'os' → logprob: -6.994350433349609
    8. '_operator' → logprob: -7.744350433349609
    9. 'fra' → logprob: -9.11935043334961
    10. 'io' → logprob: -9.36935043334961

Token 78: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.36574100604048e-06
    2. 'e' → logprob: -12.750004768371582
    3. 'ec' → logprob: -14.250004768371582
    4. '```' → logprob: -15.250004768371582
    5. 'sect' → logprob: -15.750004768371582
    6. 'ectl' → logprob: -16.125003814697266
    7. 'ected' → logprob: -17.000003814697266
    8. 'ecta' → logprob: -17.125003814697266
    9. 'ects' → logprob: -17.250003814697266
    10. '
' → logprob: -17.500003814697266

Token 79: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09122365713119507
    2. 'import' → logprob: -2.46622371673584
    3. '_' → logprob: -6.71622371673584
    4. ' ' → logprob: -7.71622371673584
    5. '_import' → logprob: -8.34122371673584
    6. '	import' → logprob: -8.71622371673584
    7. '.' → logprob: -9.46622371673584
    8. '<|end|>' → logprob: -9.46622371673584
    9. ' ' → logprob: -10.46622371673584
    10. '```' → logprob: -12.46622371673584

Token 80: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.10179336369037628
    2. 'bis' → logprob: -2.6017932891845703
    3. ' ins' → logprob: -4.10179328918457
    4. 'ins' → logprob: -5.10179328918457
    5. '_ins' → logprob: -12.22679328918457
    6. ' ' → logprob: -12.60179328918457
    7. '.ins' → logprob: -12.72679328918457
    8. '```' → logprob: -13.22679328918457
    9. '	b' → logprob: -14.47679328918457
    10. '.b' → logprob: -14.85179328918457

Token 81: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.3856492842023727e-06
    2. 'e' → logprob: -13.625000953674316
    3. 'ec' → logprob: -17.000001907348633
    4. 'ected' → logprob: -18.625001907348633
    5. 'ectl' → logprob: -19.000001907348633
    6. ' ect' → logprob: -19.125001907348633
    7. 'ects' → logprob: -19.375001907348633
    8. 'ext' → logprob: -19.375001907348633
    9. 'ection' → logprob: -19.750001907348633
    10. 'ecta' → logprob: -19.875001907348633

Token 82: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.009168371558189392
    2. '_' → logprob: -4.7591681480407715
    3. '_right' → logprob: -7.5091681480407715
    4. '_
' → logprob: -13.25916862487793
    5. '_

' → logprob: -13.50916862487793
    6. '_le' → logprob: -14.13416862487793
    7. '_
' → logprob: -14.63416862487793
    8. '```' → logprob: -14.75916862487793
    9. ' _' → logprob: -15.50916862487793
    10. '_ins' → logprob: -16.00916862487793

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04419448971748352
    2. '_' → logprob: -4.54419469833374
    3. ')' → logprob: -5.29419469833374
    4. 'import' → logprob: -5.66919469833374
    5. ',
' → logprob: -5.66919469833374
    6. ',b' → logprob: -5.66919469833374
    7. '(' → logprob: -5.91919469833374
    8. '\n' → logprob: -6.04419469833374
    9. 'def' → logprob: -6.29419469833374
    10. '' → logprob: -6.79419469833374

Token 84: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.42873722314834595
    2. ' bis' → logprob: -1.0537371635437012
    3. 'b' → logprob: -10.55373764038086
    4. '```' → logprob: -12.55373764038086
    5. 'ins' → logprob: -12.80373764038086
    6. ' ' → logprob: -13.67873764038086
    7. ' ins' → logprob: -14.42873764038086
    8. 'bs' → logprob: -14.42873764038086
    9. '	b' → logprob: -14.80373764038086
    10. ''b' → logprob: -15.17873764038086

Token 85: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.017371520400047302
    2. 'sect' → logprob: -4.142371654510498
    3. 'e' → logprob: -7.142371654510498
    4. 'ec' → logprob: -8.64237117767334
    5. 'ct' → logprob: -9.14237117767334
    6. 's' → logprob: -9.39237117767334
    7. '```' → logprob: -9.51737117767334
    8. '_right' → logprob: -10.76737117767334
    9. 'ects' → logprob: -10.76737117767334
    10. 'se' → logprob: -11.01737117767334

Token 86: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.005535281728953123
    2. 'ight' → logprob: -5.380535125732422
    3. 'right' → logprob: -7.630535125732422
    4. '_' → logprob: -8.130535125732422
    5. 'ght' → logprob: -9.130535125732422
    6. 'igh' → logprob: -11.755535125732422
    7. '__' → logprob: -12.505535125732422
    8. 'Right' → logprob: -12.880535125732422
    9. '_RIGHT' → logprob: -13.005535125732422
    10. ' right' → logprob: -13.255535125732422

Token 87: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15308867394924164
    2. '

' → logprob: -2.1530885696411133
    3. '<|end|>' → logprob: -4.278088569641113
    4. '#' → logprob: -5.528088569641113
    5. '' → logprob: -6.653088569641113
    6. ' 
' → logprob: -6.903088569641113
    7. 'import' → logprob: -7.028088569641113
    8. '
' → logprob: -7.028088569641113
    9. '\n' → logprob: -7.153088569641113
    10. ' 

' → logprob: -7.528088569641113

Token 88: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.22185462713241577
    2. 'bis' → logprob: -2.2218546867370605
    3. ' ins' → logprob: -2.4718546867370605
    4. ' bis' → logprob: -5.0968546867370605
    5. '```' → logprob: -11.471854209899902
    6. ''ins' → logprob: -13.221854209899902
    7. 'in' → logprob: -13.721854209899902
    8. '.ins' → logprob: -13.971854209899902
    9. ' ' → logprob: -14.221854209899902
    10. '_ins' → logprob: -14.846854209899902

Token 89: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.4341967701911926
    2. 'ert' → logprob: -1.0591967105865479
    3. 'e' → logprob: -5.809196949005127
    4. '```' → logprob: -6.309196949005127
    5. '_' → logprob: -8.809196472167969
    6. 'o' → logprob: -9.184196472167969
    7. '``' → logprob: -9.934196472167969
    8. '   ' → logprob: -10.309196472167969
    9. 'er' → logprob: -10.309196472167969
    10. '`' → logprob: -10.309196472167969

Token 90: '_left' (ID: 22189)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5109866857528687
    2. '

' → logprob: -1.6359866857528687
    3. ' 

' → logprob: -3.135986804962158
    4. '' → logprob: -3.385986804962158
    5. ',' → logprob: -3.760986804962158
    6. '_' → logprob: -3.885986804962158
    7. ' ' → logprob: -4.385986804962158
    8. '


' → logprob: -4.510986804962158
    9. ' 
' → logprob: -4.635986804962158
    10. '\n' → logprob: -4.885986804962158

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045034926384687424
    2. ',
' → logprob: -3.670034885406494
    3. '
' → logprob: -4.545034885406494
    4. '' → logprob: -6.295034885406494
    5. '_' → logprob: -6.795034885406494
    6. '_
' → logprob: -7.045034885406494
    7. '\n' → logprob: -7.295034885406494
    8. ' ' → logprob: -7.795034885406494
    9. 'import' → logprob: -7.920034885406494
    10. '

' → logprob: -8.045035362243652

Token 92: ' ins' (ID: 2215)
  Prédit: ' ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.04327034950256348
    2. 'ins' → logprob: -3.1682703495025635
    3. ''ins' → logprob: -8.418270111083984
    4. '(ins' → logprob: -10.793270111083984
    5. ''s' → logprob: -12.043270111083984
    6. '```' → logprob: -12.418270111083984
    7. '_ins' → logprob: -12.543270111083984
    8. 's' → logprob: -12.980770111083984
    9. ' ' → logprob: -13.168270111083984
    10. ''' → logprob: -13.730770111083984

Token 93: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.00015788905147928745
    2. 'ert' → logprob: -9.250158309936523
    3. 'o' → logprob: -10.875158309936523
    4. 's' → logprob: -11.000158309936523
    5. '```' → logprob: -11.000158309936523
    6. 'орт' → logprob: -12.000158309936523
    7. 't' → logprob: -14.250158309936523
    8. 'sort' → logprob: -14.250158309936523
    9. 'e' → logprob: -14.875158309936523
    10. '``' → logprob: -15.250158309936523

Token 94: '_right' (ID: 24402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02081933617591858
    2. '_right' → logprob: -4.020819187164307
    3. '_left' → logprob: -6.020819187164307
    4. '_
' → logprob: -9.770819664001465
    5. ' _' → logprob: -9.895819664001465
    6. '_

' → logprob: -10.020819664001465
    7. '_l' → logprob: -11.645819664001465
    8. '_
' → logprob: -11.645819664001465
    9. '__' → logprob: -11.895819664001465
    10. '```' → logprob: -12.145819664001465

Token 95: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.40367427468299866
    2. '
' → logprob: -1.1536742448806763
    3. '#' → logprob: -5.528674125671387
    4. 'def' → logprob: -5.778674125671387
    5. '


' → logprob: -5.903674125671387
    6. '' → logprob: -6.153674125671387
    7. '
' → logprob: -6.653674125671387
    8. '\n' → logprob: -7.528674125671387
    9. '



' → logprob: -7.653674125671387
    10. 'd' → logprob: -7.903674125671387

Token 96: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26422470808029175
    2. '

' → logprob: -1.6392247676849365
    3. 'def' → logprob: -4.389224529266357
    4. '#' → logprob: -4.764224529266357
    5. '' → logprob: -5.514224529266357
    6. 'd' → logprob: -6.014224529266357
    7. '\n' → logprob: -6.139224529266357
    8. '
' → logprob: -6.889224529266357
    9. '
 
' → logprob: -6.889224529266357
    10. ' 
' → logprob: -7.139224529266357

Token 97: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.9267146587371826
    2. ' math' → logprob: -0.9267146587371826
    3. ' typing' → logprob: -2.3017146587371826
    4. 'operator' → logprob: -3.4267146587371826
    5. 'math' → logprob: -3.6767146587371826
    6. ' os' → logprob: -3.6767146587371826
    7. 'typing' → logprob: -4.801714897155762
    8. 'os' → logprob: -5.551714897155762
    9. '_' → logprob: -6.176714897155762
    10. ' ' → logprob: -6.676714897155762

Token 98: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5485883951187134
    2. ' ' → logprob: -1.1735883951187134
    3. '<|end|>' → logprob: -2.423588275909424
    4. 'import' → logprob: -4.173588275909424
    5. '.' → logprob: -4.798588275909424
    6. '<|end|>' → logprob: -8.673588752746582
    7. ' ' → logprob: -9.423588752746582
    8. ',' → logprob: -9.423588752746582
    9. '	import' → logprob: -9.548588752746582
    10. ' as' → logprob: -9.673588752746582

Token 99: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.08103968948125839
    2. ' ' → logprob: -3.2060396671295166
    3. 'item' → logprob: -4.081039905548096
    4. ' attr' → logprob: -4.456039905548096
    5. ' mul' → logprob: -5.581039905548096
    6. ' method' → logprob: -6.331039905548096
    7. ' add' → logprob: -6.831039905548096
    8. '  ' → logprob: -7.706039905548096
    9. '	item' → logprob: -8.331039428710938
    10. ' icon' → logprob: -8.831039428710938

Token 100: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0013553560711443424
    2. 'get' → logprob: -6.626355171203613
    3. 'g' → logprob: -10.751355171203613
    4. 'gett' → logprob: -12.376355171203613
    5. 's' → logprob: -13.376355171203613
    6. '
' → logprob: -14.626355171203613
    7. 'getitem' → logprob: -15.126355171203613
    8. ' ' → logprob: -15.126355171203613
    9. 'Getter' → logprob: -16.00135612487793
    10. '' → logprob: -16.00135612487793

Token 101: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5347533226013184
    2. '

' → logprob: -0.9097533226013184
    3. ',' → logprob: -5.659753322601318
    4. '\n' → logprob: -6.409753322601318
    5. '' → logprob: -6.534753322601318
    6. '<|end|>' → logprob: -6.534753322601318
    7. '
' → logprob: -6.909753322601318
    8. ' 

' → logprob: -7.534753322601318
    9. '


' → logprob: -7.659753322601318
    10. '#' → logprob: -8.284753799438477

Token 102: ' ig' (ID: 7328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.523592472076416
    2. 'item' → logprob: -1.398592472076416
    3. 'ig' → logprob: -2.648592472076416
    4. 'getitem' → logprob: -3.773592472076416
    5. ' ig' → logprob: -4.148592472076416
    6. 'attr' → logprob: -4.773592472076416
    7. '	' → logprob: -5.023592472076416
    8. ' item' → logprob: -5.148592472076416
    9. 'iget' → logprob: -5.273592472076416
    10. '	item' → logprob: -5.773592472076416

Token 103: '

' (ID: 279)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06951183825731277
    2. 'et' → logprob: -3.194511890411377
    3. 'te' → logprob: -4.069511890411377
    4. ')' → logprob: -4.819511890411377
    5. 'tem' → logprob: -8.444511413574219
    6. 's' → logprob: -8.694511413574219
    7. 'etter' → logprob: -8.819511413574219
    8. 'em' → logprob: -8.944511413574219
    9. 'e' → logprob: -9.944511413574219
    10. ',' → logprob: -10.194511413574219

Token 104: 'sys' (ID: 17324)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4230543375015259
    2. '_' → logprob: -2.2980542182922363
    3. '.' → logprob: -2.6730542182922363
    4. '#' → logprob: -2.9230542182922363
    5. 'def' → logprob: -3.5480542182922363
    6. 'd' → logprob: -3.6730542182922363
    7. '
' → logprob: -4.298054218292236
    8. ' ' → logprob: -4.298054218292236
    9. ':' → logprob: -4.798054218292236
    10. '=' → logprob: -5.173054218292236

Token 105: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1994775377388578e-05
    2. '.exit' → logprob: -13.000012397766113
    3. '.​' → logprob: -13.375012397766113
    4. '.`' → logprob: -13.750012397766113
    5. '.)' → logprob: -14.250012397766113
    6. '.readline' → logprob: -14.500012397766113
    7. '.Â' → logprob: -14.500012397766113
    8. '.stdin' → logprob: -14.625012397766113
    9. ' .' → logprob: -14.625012397766113
    10. '.stdout' → logprob: -14.750012397766113

Token 106: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00766127509996295
    2. ' _' → logprob: -5.75766134262085
    3. 'attr' → logprob: -7.50766134262085
    4. '_opt' → logprob: -7.88266134262085
    5. '_trace' → logprob: -8.507660865783691
    6. '_attr' → logprob: -8.632660865783691
    7. 'uptools' → logprob: -8.882660865783691
    8. '_space' → logprob: -9.007660865783691
    9. '_exc' → logprob: -9.132660865783691
    10. '_stdout' → logprob: -9.382660865783691

Token 107: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003749486757442355
    2. 'ursive' → logprob: -5.878749370574951
    3. 'urs' → logprob: -7.253749370574951
    4. 'ur' → logprob: -9.12874984741211
    5. 'limit' → logprob: -9.50374984741211
    6. 'set' → logprob: -11.00374984741211
    7. 'urf' → logprob: -11.37874984741211
    8. 'urse' → logprob: -12.00374984741211
    9. 'ursor' → logprob: -12.50374984741211
    10. '_limit' → logprob: -13.12874984741211

Token 108: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0011797507759183645
    2. '_limit' → logprob: -6.7511796951293945
    3. 'lim' → logprob: -11.876179695129395
    4. ' limit' → logprob: -13.751179695129395
    5. 'depth' → logprob: -14.001179695129395
    6. 'limits' → logprob: -16.00118064880371
    7. '_depth' → logprob: -16.25118064880371
    8. '_LIMIT' → logprob: -16.25118064880371
    9. 'Limit' → logprob: -16.50118064880371
    10. 'al' → logprob: -16.87618064880371

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. '(
' → logprob: -12.500007629394531
    3. '((' → logprob: -13.375007629394531
    4. ' (' → logprob: -13.750007629394531
    5. '(

' → logprob: -14.125007629394531
    6. '()' → logprob: -15.875007629394531
    7. '("("' → logprob: -16.00000762939453
    8. '```' → logprob: -17.25000762939453
    9. '(()' → logprob: -17.37500762939453
    10. '<|end|>' → logprob: -18.00000762939453

Token 110: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011754630832001567
    2. '100' → logprob: -6.751175403594971
    3. ' ' → logprob: -12.501175880432129
    4. '1' → logprob: -14.126175880432129
    5. '200' → logprob: -15.751175880432129
    6. '999' → logprob: -16.001174926757812
    7. '300' → logprob: -16.001174926757812
    8. 'int' → logprob: -16.126174926757812
    9. '250' → logprob: -16.251174926757812
    10. 'pow' → logprob: -16.376174926757812

Token 111: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0005058500682935119
    2. '0' → logprob: -8.625505447387695
    3. '00' → logprob: -8.875505447387695
    4. '7' → logprob: -9.500505447387695
    5. '8' → logprob: -9.750505447387695
    6. '6' → logprob: -10.500505447387695
    7. '000' → logprob: -11.250505447387695
    8. '*' → logprob: -11.625505447387695
    9. '07' → logprob: -14.125505447387695
    10. ' **' → logprob: -14.375505447387695

Token 112: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06200544163584709
    2. '9' → logprob: -2.8120055198669434
    3. '8' → logprob: -10.187005043029785
    4. '6' → logprob: -16.3120059967041
    5. '**' → logprob: -16.8120059967041
    6. '```' → logprob: -17.0620059967041
    7. '

' → logprob: -19.9370059967041
    8. ')' → logprob: -19.9370059967041
    9. ' ' → logprob: -20.0620059967041
    10. '+' → logprob: -20.1870059967041

Token 113: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0181950144469738
    2. '9' → logprob: -4.018195152282715
    3. '8' → logprob: -10.018195152282715
    4. '6' → logprob: -14.768195152282715
    5. '**' → logprob: -16.7681941986084
    6. '

' → logprob: -17.7681941986084
    7. '```' → logprob: -17.8931941986084
    8. '``' → logprob: -19.5181941986084
    9. '  ' → logprob: -19.7681941986084
    10. '"' → logprob: -19.8931941986084

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. ')
' → logprob: -10.875028610229492
    3. ' )' → logprob: -11.625028610229492
    4. ')
' → logprob: -15.250028610229492
    5. ')`' → logprob: -17.000028610229492
    6. ')

' → logprob: -17.375028610229492
    7. '))' → logprob: -18.125028610229492
    8. '),' → logprob: -18.750028610229492
    9. '
' → logprob: -19.125028610229492
    10. ')#' → logprob: -19.500028610229492

Token 115: 'inf' (ID: 22226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15986798703670502
    2. 'n' → logprob: -2.284868001937866
    3. 'd' → logprob: -3.784868001937866
    4. '
' → logprob: -4.159867763519287
    5. 'class' → logprob: -5.909867763519287
    6. '

' → logprob: -6.034867763519287
    7. 'N' → logprob: -7.034867763519287
    8. '\' → logprob: -7.159867763519287
    9. '#' → logprob: -7.909867763519287
    10. ' 
' → logprob: -9.284868240356445

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7356189489364624
    2. ' ' → logprob: -2.110619068145752
    3. '=' → logprob: -2.360619068145752
    4. ')' → logprob: -2.485619068145752
    5. ',' → logprob: -2.485619068145752
    6. '.' → logprob: -2.860619068145752
    7. '_' → logprob: -3.110619068145752
    8. ':' → logprob: -4.485619068145752
    9. '  ' → logprob: -5.360619068145752
    10. '<|end|>' → logprob: -5.360619068145752

Token 117: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22026805579662323
    2. 'float' → logprob: -1.9702680110931396
    3. ' ' → logprob: -2.9702680110931396
    4. ' float' → logprob: -4.970268249511719
    5. '1' → logprob: -10.345268249511719
    6. 'int' → logprob: -11.970268249511719
    7. '100' → logprob: -13.095268249511719
    8. 'inf' → logprob: -13.845268249511719
    9. 'math' → logprob: -14.095268249511719
    10. '	float' → logprob: -14.220268249511719

Token 118: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3869370222091675
    2. 'float' → logprob: -1.1369370222091675
    3. '1' → logprob: -10.136937141418457
    4. ' float' → logprob: -11.761937141418457
    5. '9' → logprob: -12.011937141418457
    6. 'int' → logprob: -12.636937141418457
    7. 'math' → logprob: -12.761937141418457
    8. '100' → logprob: -13.261937141418457
    9. ' ' → logprob: -13.386937141418457
    10. '(float' → logprob: -13.886937141418457

Token 119: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04901105910539627
    2. '18' → logprob: -3.049010992050171
    3. '10' → logprob: -8.29901123046875
    4. '12' → logprob: -9.42401123046875
    5. '**' → logprob: -10.67401123046875
    6. '1' → logprob: -11.04901123046875
    7. '8' → logprob: -11.54901123046875
    8. '+' → logprob: -11.54901123046875
    9. '15' → logprob: -11.67401123046875
    10. '7' → logprob: -11.67401123046875

Token 120: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.16033674776554108
    2. '15' → logprob: -2.16033673286438
    3. '9' → logprob: -3.66033673286438
    4. '20' → logprob: -5.660336971282959
    5. '10' → logprob: -6.035336971282959
    6. '16' → logprob: -7.035336971282959
    7. '19' → logprob: -8.5353364944458
    8. '17' → logprob: -9.4103364944458
    9. '12' → logprob: -9.6603364944458
    10. '14' → logprob: -10.7853364944458

Token 121: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5065163969993591
    2. '18' → logprob: -1.131516456604004
    3. '15' → logprob: -2.756516456604004
    4. '10' → logprob: -5.006516456604004
    5. '20' → logprob: -5.881516456604004
    6. '16' → logprob: -7.131516456604004
    7. '12' → logprob: -7.881516456604004
    8. '19' → logprob: -8.006516456604004
    9. '17' → logprob: -8.756516456604004
    10. '14' → logprob: -9.256516456604004

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028154917061328888
    2. '<|end|>' → logprob: -5.0281548500061035
    3. '

' → logprob: -5.1531548500061035
    4. '
' → logprob: -5.1531548500061035
    5. '' → logprob: -6.1531548500061035
    6. 'n' → logprob: -6.4031548500061035
    7. '#' → logprob: -6.5281548500061035
    8. ',' → logprob: -6.9031548500061035
    9. ' 
' → logprob: -7.1531548500061035
    10. '0' → logprob: -7.2781548500061035

Token 123: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15669675171375275
    2. ' 
' → logprob: -2.7816967964172363
    3. '#' → logprob: -4.156696796417236
    4. '' → logprob: -4.281696796417236
    5. '

' → logprob: -4.531696796417236
    6. '
' → logprob: -4.531696796417236
    7. 'n' → logprob: -4.656696796417236
    8. ',' → logprob: -4.906696796417236
    9. ' ' → logprob: -4.906696796417236
    10. ' 

' → logprob: -6.031696796417236

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3681522607803345
    2. '=' → logprob: -1.3681522607803345
    3. '_' → logprob: -3.118152141571045
    4. '<|end|>' → logprob: -4.993152141571045
    5. ' ' → logprob: -7.243152141571045
    6. ',' → logprob: -7.868152141571045
    7. '_=' → logprob: -8.118152618408203
    8. ')' → logprob: -9.243152618408203
    9. '```' → logprob: -9.743152618408203
    10. '0' → logprob: -9.868152618408203

Token 125: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.157801553606987
    2. 'float' → logprob: -2.282801628112793
    3. ' ' → logprob: -3.282801628112793
    4. ' float' → logprob: -5.782801628112793
    5. 'inf' → logprob: -6.157801628112793
    6. '1' → logprob: -7.157801628112793
    7. '(' → logprob: -8.782801628112793
    8. 'int' → logprob: -9.032801628112793
    9. '(float' → logprob: -9.782801628112793
    10. ' inf' → logprob: -10.407801628112793

Token 126: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001242613303475082
    2. '("' → logprob: -6.876242637634277
    3. '(' → logprob: -8.501242637634277
    4. '('-' → logprob: -12.501242637634277
    5. '('.')' → logprob: -13.626242637634277
    6. '('+' → logprob: -14.626242637634277
    7. '(
' → logprob: -15.251242637634277
    8. '(',' → logprob: -15.251242637634277
    9. '('.' → logprob: -15.626242637634277
    10. ''' → logprob: -15.626242637634277

Token 127: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.4259644558478612e-05
    2. '"' → logprob: -12.000014305114746
    3. ''' → logprob: -13.000014305114746
    4. ' inf' → logprob: -13.750014305114746
    5. 'in' → logprob: -13.875014305114746
    6. '-inf' → logprob: -13.875014305114746
    7. ''in' → logprob: -14.125014305114746
    8. '")' → logprob: -14.375014305114746
    9. 'INF' → logprob: -14.500014305114746
    10. 'Inf' → logprob: -16.00001335144043

Token 128: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.251091377227567e-05
    2. ')' → logprob: -11.125042915344238
    3. '"' → logprob: -11.500042915344238
    4. '")
' → logprob: -11.500042915344238
    5. ')")' → logprob: -12.875042915344238
    6. '")
' → logprob: -13.125042915344238
    7. ' ")' → logprob: -13.125042915344238
    8. '")

' → logprob: -15.750042915344238
    9. '”)' → logprob: -15.750042915344238
    10. '')' → logprob: -16.000041961669922

Token 129: 'ans' (ID: 616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.169572651386261
    2. 'n' → logprob: -2.419572591781616
    3. '#' → logprob: -3.919572591781616
    4. 'MOD' → logprob: -4.169572830200195
    5. 'mod' → logprob: -4.794572830200195
    6. '_' → logprob: -5.419572830200195
    7. 'class' → logprob: -5.544572830200195
    8. 'd' → logprob: -5.669572830200195
    9. ':' → logprob: -6.419572830200195
    10. ')' → logprob: -6.669572830200195

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22811980545520782
    2. '=' → logprob: -1.8531198501586914
    3. '_' → logprob: -3.1031198501586914
    4. 's' → logprob: -7.353119850158691
    5. ' ' → logprob: -7.478119850158691
    6. ',' → logprob: -8.478119850158691
    7. ')' → logprob: -8.728119850158691
    8. '[:]' → logprob: -9.103119850158691
    9. '=[]' → logprob: -9.228119850158691
    10. '[' → logprob: -9.478119850158691

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6432663202285767
    2. ' []' → logprob: -0.8932663202285767
    3. '0' → logprob: -3.268266201019287
    4. '[]' → logprob: -3.768266201019287
    5. ' [' → logprob: -6.768266201019287
    6. ' None' → logprob: -7.018266201019287
    7. ' inf' → logprob: -7.643266201019287
    8. ' ' → logprob: -7.893266201019287
    9. '[' → logprob: -8.143266677856445
    10. 'inf' → logprob: -8.518266677856445

Token 132: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06757388263940811
    2. '[]' → logprob: -2.8175737857818604
    3. 'inf' → logprob: -5.4425740242004395
    4. '[' → logprob: -8.192573547363281
    5. '-' → logprob: -8.442573547363281
    6. 'None' → logprob: -8.692573547363281
    7. '-inf' → logprob: -9.192573547363281
    8. '{}' → logprob: -9.317573547363281
    9. '""' → logprob: -9.567573547363281
    10. 'INF' → logprob: -9.567573547363281

Token 133: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22782140970230103
    2. '0' → logprob: -1.8528213500976562
    3. ' ' → logprob: -3.6028213500976562
    4. '*' → logprob: -5.227821350097656
    5. ' +' → logprob: -5.227821350097656
    6. '_' → logprob: -6.102821350097656
    7. '
' → logprob: -6.102821350097656
    8. '#' → logprob: -6.602821350097656
    9. ',' → logprob: -7.602821350097656
    10. '[' → logprob: -7.727821350097656

Token 134: 'tmp' (ID: 11669)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5877882838249207
    2. ' ' → logprob: -0.9627882838249207
    3. '+' → logprob: -3.7127883434295654
    4. ':' → logprob: -4.712788105010986
    5. '
' → logprob: -4.837788105010986
    6. ' 
' → logprob: -4.962788105010986
    7. ',' → logprob: -5.462788105010986
    8. '=' → logprob: -6.212788105010986
    9. '#' → logprob: -6.462788105010986
    10. '_' → logprob: -6.712788105010986

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9493188261985779
    2. '=' → logprob: -1.4493188858032227
    3. '_' → logprob: -1.4493188858032227
    4. ' ' → logprob: -1.9493188858032227
    5. '.' → logprob: -7.574318885803223
    6. ',' → logprob: -8.199318885803223
    7. ' _' → logprob: -9.449318885803223
    8. ')' → logprob: -10.074318885803223
    9. '_space' → logprob: -10.074318885803223
    10. '[' → logprob: -10.324318885803223

Token 136: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27489396929740906
    2. '0' → logprob: -1.6498939990997314
    3. ' []' → logprob: -3.3998939990997314
    4. '[]' → logprob: -4.774893760681152
    5. '1' → logprob: -5.899893760681152
    6. ' [' → logprob: -6.274893760681152
    7. '[' → logprob: -7.274893760681152
    8. ' None' → logprob: -8.774893760681152
    9. '10' → logprob: -8.774893760681152
    10. ' ans' → logprob: -9.399893760681152

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13341492414474487
    2. '[]' → logprob: -2.5084149837493896
    3. '1' → logprob: -3.6334149837493896
    4. '[' → logprob: -4.6334147453308105
    5. ' ' → logprob: -6.1334147453308105
    6. '2' → logprob: -6.6334147453308105
    7. 'ans' → logprob: -6.7584147453308105
    8. 'inf' → logprob: -7.7584147453308105
    9. ' []' → logprob: -8.008415222167969
    10. '10' → logprob: -8.133415222167969

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07701544463634491
    2. ' ' → logprob: -3.0770153999328613
    3. ' 
' → logprob: -4.952015399932861
    4. 'for' → logprob: -5.202015399932861
    5. '#' → logprob: -5.702015399932861
    6. '' → logprob: -5.952015399932861
    7. ' for' → logprob: -6.327015399932861
    8. ',' → logprob: -6.452015399932861
    9. 'x' → logprob: -6.452015399932861
    10. '\n' → logprob: -6.452015399932861

Token 139: 'cnt' (ID: 33160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17199304699897766
    2. 'for' → logprob: -1.9219930171966553
    3. ' ' → logprob: -6.046993255615234
    4. 'd' → logprob: -6.296993255615234
    5. 'a' → logprob: -6.296993255615234
    6. '#' → logprob: -7.296993255615234
    7. ' for' → logprob: -7.296993255615234
    8. 't' → logprob: -7.421993255615234
    9. 'N' → logprob: -7.546993255615234
    10. '_' → logprob: -7.671993255615234

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7076408267021179
    2. ' =' → logprob: -0.7076408267021179
    3. ' ' → logprob: -4.957640647888184
    4. '_' → logprob: -5.082640647888184
    5. ',' → logprob: -7.582640647888184
    6. ' +=' → logprob: -8.957640647888184
    7. '+' → logprob: -8.957640647888184
    8. ')' → logprob: -8.957640647888184
    9. '<|end|>' → logprob: -9.207640647888184
    10. '  ' → logprob: -10.082640647888184

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197899952530861
    2. ' ' → logprob: -2.811979055404663
    3. '1' → logprob: -12.186979293823242
    4. '[' → logprob: -13.061979293823242
    5. ' defaultdict' → logprob: -13.561979293823242
    6. ' [' → logprob: -14.561979293823242
    7. '{}' → logprob: -15.061979293823242
    8. '[]' → logprob: -15.061979293823242
    9. '10' → logprob: -15.186979293823242
    10. '[int' → logprob: -15.311979293823242

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011212840909138322
    2. ' ' → logprob: -8.001121520996094
    3. 'default' → logprob: -8.251121520996094
    4. '{}' → logprob: -8.501121520996094
    5. '[' → logprob: -9.001121520996094
    6. 'collections' → logprob: -9.751121520996094
    7. '1' → logprob: -9.876121520996094
    8. '[]' → logprob: -10.126121520996094
    9. '{' → logprob: -10.876121520996094
    10. ' defaultdict' → logprob: -11.626121520996094

Token 143: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9744396209716797
    2. '
' → logprob: -1.0994396209716797
    3. ' ' → logprob: -1.8494396209716797
    4. 'for' → logprob: -2.8494396209716797
    5. '#' → logprob: -3.7244396209716797
    6. ',' → logprob: -3.8494396209716797
    7. 'a' → logprob: -5.47443962097168
    8. 'def' → logprob: -5.59943962097168
    9. 'd' → logprob: -5.84943962097168
    10. '' → logprob: -5.97443962097168

Token 144: 'ans' (ID: 616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1394702047109604
    2. 'for' → logprob: -2.264470100402832
    3. 'N' → logprob: -3.889470100402832
    4. 'a' → logprob: -6.639470100402832
    5. 'd' → logprob: -6.889470100402832
    6. 'def' → logprob: -7.264470100402832
    7. 'while' → logprob: -7.889470100402832
    8. 'A' → logprob: -7.889470100402832
    9. 't' → logprob: -8.139470100402832
    10. 'q' → logprob: -8.389470100402832

Token 145: 'li' (ID: 1307)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4989160895347595
    2. '+' → logprob: -1.3739161491394043
    3. '=' → logprob: -3.1239161491394043
    4. ' +=' → logprob: -3.3739161491394043
    5. ' =' → logprob: -3.7489161491394043
    6. '<|end|>' → logprob: -4.248916149139404
    7. ' +' → logprob: -5.248916149139404
    8. ',' → logprob: -5.373916149139404
    9. '*' → logprob: -5.873916149139404
    10. '+=' → logprob: -5.998916149139404

Token 146: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00133595522493124
    2. 's' → logprob: -6.626336097717285
    3. '=' → logprob: -12.126336097717285
    4. 'sts' → logprob: -12.751336097717285
    5. 'ст' → logprob: -14.876336097717285
    6. 'sting' → logprob: -14.876336097717285
    7. 't' → logprob: -15.001336097717285
    8. ' =' → logprob: -15.126336097717285
    9. 'sti' → logprob: -15.876336097717285
    10. 'stæ' → logprob: -16.87633514404297

Token 147: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0031058229506015778
    2. '[' → logprob: -6.253105640411377
    3. ' []' → logprob: -6.753105640411377
    4. '[]
' → logprob: -12.128106117248535
    5. '[]}' → logprob: -13.128106117248535
    6. '[],' → logprob: -14.503106117248535
    7. ' [' → logprob: -15.003106117248535
    8. '[]

' → logprob: -15.128106117248535
    9. '[:]' → logprob: -15.503106117248535
    10. '[])' → logprob: -15.628106117248535

Token 148: 'tm' (ID: 23170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4833889603614807
    2. 'n' → logprob: -1.108388900756836
    3. ' ' → logprob: -4.358388900756836
    4. 'd' → logprob: -4.733388900756836
    5. ' for' → logprob: -4.858388900756836
    6. 'a' → logprob: -5.108388900756836
    7. '#' → logprob: -5.233388900756836
    8. 'def' → logprob: -5.233388900756836
    9. '(' → logprob: -6.858388900756836
    10. 'N' → logprob: -7.108388900756836

Token 149: 'pli' (ID: 5521)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010342379100620747
    2. 'pli' → logprob: -7.626034259796143
    3. 'plist' → logprob: -7.876034259796143
    4. 'pl' → logprob: -9.126033782958984
    5. 'ps' → logprob: -10.626033782958984
    6. 'plib' → logprob: -11.626033782958984
    7. 'plt' → logprob: -12.126033782958984
    8. 'п' → logprob: -13.001033782958984
    9. 'plo' → logprob: -13.126033782958984
    10. 'pi' → logprob: -13.251033782958984

Token 150: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8186439275741577
    2. '=' → logprob: -1.0686439275741577
    3. ' =' → logprob: -1.5686439275741577
    4. '=[]' → logprob: -5.068644046783447
    5. '[]' → logprob: -7.443644046783447
    6. 's' → logprob: -8.568643569946289
    7. '.append' → logprob: -10.568643569946289
    8. 'ist' → logprob: -11.193643569946289
    9. '=[]
' → logprob: -11.318643569946289
    10. 't' → logprob: -11.443643569946289

Token 151: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00017970333283301443
    2. ' []' → logprob: -9.375179290771484
    3. '[]
' → logprob: -9.625179290771484
    4. '[' → logprob: -10.875179290771484
    5. '[]}' → logprob: -12.750179290771484
    6. '[:]' → logprob: -12.875179290771484
    7. '=[]' → logprob: -13.250179290771484
    8. '[]

' → logprob: -13.625179290771484
    9. '0' → logprob: -14.500179290771484
    10. '[],' → logprob: -15.375179290771484

Token 152: 'cand' (ID: 199358)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6643668413162231
    2. 'd' → logprob: -1.6643668413162231
    3. ' ' → logprob: -2.1643667221069336
    4. 'for' → logprob: -2.2893667221069336
    5. 'a' → logprob: -3.7893667221069336
    6. '#' → logprob: -4.164366722106934
    7. 'def' → logprob: -4.664366722106934
    8. ' 
' → logprob: -5.289366722106934
    9. 'i' → logprob: -5.539366722106934
    10. '\' → logprob: -5.914366722106934

Token 153: 'ili' (ID: 2751)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.1073077842593193
    2. '=' → logprob: -2.7323076725006104
    3. '=[]' → logprob: -3.7323076725006104
    4. ' =' → logprob: -5.7323079109191895
    5. '[' → logprob: -6.1073079109191895
    6. '[:]' → logprob: -6.1073079109191895
    7. 'icate' → logprob: -6.7323079109191895
    8. 'icates' → logprob: -6.9823079109191895
    9. '[]' → logprob: -7.7323079109191895
    10. 'list' → logprob: -7.8573079109191895

Token 154: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.2110348343849182
    2. 'date' → logprob: -2.0860347747802734
    3. '=' → logprob: -3.3360347747802734
    4. ' =' → logprob: -4.461034774780273
    5. 'dates' → logprob: -4.711034774780273
    6. 's' → logprob: -5.336034774780273
    7. 'sts' → logprob: -6.586034774780273
    8. 'd' → logprob: -6.711034774780273
    9. 'ates' → logprob: -7.086034774780273
    10. '=[]' → logprob: -7.961034774780273

Token 155: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1898701786994934
    2. '[' → logprob: -2.1898701190948486
    3. ' []' → logprob: -2.8148701190948486
    4. ' ' → logprob: -7.814870357513428
    5. ' [' → logprob: -7.939870357513428
    6. '[:]' → logprob: -8.68986988067627
    7. '[]}' → logprob: -9.93986988067627
    8. '[]
' → logprob: -10.43986988067627
    9. 'set' → logprob: -11.43986988067627
    10. '[],' → logprob: -11.68986988067627

Token 156: 'still' (ID: 53939)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9603400826454163
    2. ' ' → logprob: -1.8353400230407715
    3. '#' → logprob: -2.2103400230407715
    4. 'd' → logprob: -2.4603400230407715
    5. 'a' → logprob: -2.5853400230407715
    6. '(' → logprob: -3.2103400230407715
    7. 'for' → logprob: -3.4603400230407715
    8. '=' → logprob: -3.7103400230407715
    9. 'def' → logprob: -3.8353400230407715
    10. 'c' → logprob: -4.2103400230407715

Token 157: 'set' (ID: 977)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5556029081344604
    2. '_' → logprob: -1.1806029081344604
    3. 's' → logprob: -3.30560302734375
    4. '=' → logprob: -3.55560302734375
    5. '_continue' → logprob: -4.68060302734375
    6. 'ing' → logprob: -5.30560302734375
    7. '_candidates' → logprob: -5.30560302734375
    8. '_list' → logprob: -5.43060302734375
    9. '_alive' → logprob: -5.68060302734375
    10. '_set' → logprob: -5.80560302734375

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20614778995513916
    2. '=' → logprob: -1.7061477899551392
    3. '_' → logprob: -6.20614767074585
    4. '=set' → logprob: -6.45614767074585
    5. 's' → logprob: -7.95614767074585
    6. ',' → logprob: -7.95614767074585
    7. '(' → logprob: -8.456148147583008
    8. '()' → logprob: -9.581148147583008
    9. '=[]' → logprob: -10.206148147583008
    10. ' ' → logprob: -10.331148147583008

Token 159: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.18027721345424652
    2. 'set' → logprob: -1.8052772283554077
    3. ' ' → logprob: -8.680276870727539
    4. ' {' → logprob: -8.930276870727539
    5. ' {}' → logprob: -9.930276870727539
    6. '{}' → logprob: -9.930276870727539
    7. '{' → logprob: -10.555276870727539
    8. '=set' → logprob: -10.805276870727539
    9. ' defaultdict' → logprob: -11.055276870727539
    10. ' []' → logprob: -11.180276870727539

Token 160: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05500820279121399
    2. '(' → logprob: -2.9300081729888916
    3. '()
' → logprob: -10.305007934570312
    4. ' ()' → logprob: -10.305007934570312
    5. '()

' → logprob: -11.430007934570312
    6. '(),' → logprob: -11.555007934570312
    7. 's' → logprob: -12.180007934570312
    8. '([]' → logprob: -12.305007934570312
    9. '()]' → logprob: -12.430007934570312
    10. '()<' → logprob: -12.805007934570312

Token 161: 'eps' (ID: 12967)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9110338091850281
    2. 'n' → logprob: -1.1610338687896729
    3. '#' → logprob: -2.286033868789673
    4. 'for' → logprob: -2.286033868789673
    5. 'd' → logprob: -3.161033868789673
    6. 'a' → logprob: -4.536033630371094
    7. ' ' → logprob: -5.286033630371094
    8. 's' → logprob: -5.661033630371094
    9. '
' → logprob: -5.911033630371094
    10. ',' → logprob: -6.036033630371094

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014935139566659927
    2. '=' → logprob: -4.26493501663208
    3. ' ' → logprob: -7.26493501663208
    4. '_' → logprob: -10.639935493469238
    5. ' ' → logprob: -10.764935493469238
    6. ',' → logprob: -12.014935493469238
    7. ')' → logprob: -12.514935493469238
    8. ' )' → logprob: -12.764935493469238
    9. ' =)' → logprob: -12.889935493469238
    10. ' ,' → logprob: -13.389935493469238

Token 163: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10057002305984497
    2. '1' → logprob: -2.3505699634552
    3. '10' → logprob: -7.975570201873779
    4. '0' → logprob: -11.225569725036621
    5. ' ' → logprob: -12.225569725036621
    6. '<|end|>' → logprob: -14.975569725036621
    7. '2' → logprob: -15.100569725036621
    8. '(' → logprob: -15.850569725036621
    9. ' (' → logprob: -16.100570678710938
    10. '  ' → logprob: -16.225570678710938

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. '10' → logprob: -10.875033378601074
    3. ' ' → logprob: -11.375033378601074
    4. '0' → logprob: -12.875033378601074
    5. '(' → logprob: -16.500032424926758
    6. 'float' → logprob: -16.625032424926758
    7. '2' → logprob: -18.000032424926758
    8. '-' → logprob: -18.000032424926758
    9. '１' → logprob: -19.125032424926758
    10. '3' → logprob: -20.000032424926758

Token 165: '.' (ID: 13)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18367056548595428
    2. '-' → logprob: -1.8086705207824707
    3. '.' → logprob: -5.558670520782471
    4. '0' → logprob: -10.183670997619629
    5. '.e' → logprob: -12.433670997619629
    6. '```' → logprob: -12.433670997619629
    7. '*' → logprob: -12.683670997619629
    8. ' -' → logprob: -13.058670997619629
    9. ' ' → logprob: -13.558670997619629
    10. '**' → logprob: -13.558670997619629

Token 166: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0046503725461661816
    2. '0' → logprob: -5.504650592803955
    3. '8' → logprob: -7.879650592803955
    4. '2' → logprob: -10.004650115966797
    5. '1' → logprob: -10.129650115966797
    6. 'e' → logprob: -10.754650115966797
    7. '9' → logprob: -10.879650115966797
    8. '5' → logprob: -11.254650115966797
    9. '000' → logprob: -11.379650115966797
    10. '7' → logprob: -11.754650115966797

Token 167: ' /' (ID: 820)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06995777040719986
    2. 'e' → logprob: -2.694957733154297
    3. '-e' → logprob: -12.444957733154297
    4. ' -' → logprob: -12.694957733154297
    5. 'E' → logprob: -13.069957733154297
    6. '
' → logprob: -13.319957733154297
    7. '10' → logprob: -13.319957733154297
    8. '-
' → logprob: -13.319957733154297
    9. '\-' → logprob: -13.819957733154297
    10. '*' → logprob: -13.944957733154297

Token 168: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42502087354660034
    2. '(' → logprob: -1.1750209331512451
    3. '100' → logprob: -3.425020933151245
    4. '3' → logprob: -5.925020694732666
    5. ' (' → logprob: -7.300020694732666
    6. '1' → logprob: -8.050021171569824
    7. ' ' → logprob: -8.300021171569824
    8. 'e' → logprob: -8.425021171569824
    9. '123' → logprob: -9.175021171569824
    10. '7' → logprob: -9.675021171569824

Token 169: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2826058864593506
    2. '10' → logprob: -1.5326058864593506
    3. '3' → logprob: -3.9076058864593506
    4. '100' → logprob: -4.78260612487793
    5. '9' → logprob: -7.65760612487793
    6. '7' → logprob: -7.90760612487793
    7. ' (' → logprob: -8.53260612487793
    8. '8' → logprob: -9.53260612487793
    9. '123' → logprob: -9.65760612487793
    10. ' ' → logprob: -9.78260612487793

Token 170: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08649905771017075
    2. '7' → logprob: -3.461498975753784
    3. '6' → logprob: -3.586498975753784
    4. '9' → logprob: -4.086499214172363
    5. '-' → logprob: -6.086499214172363
    6. '8' → logprob: -6.711499214172363
    7. '0' → logprob: -6.836499214172363
    8. ' **' → logprob: -7.086499214172363
    9. '000' → logprob: -7.836499214172363
    10. '00' → logprob: -8.336499214172363

Token 171: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004534319508820772
    2. '7' → logprob: -6.3795342445373535
    3. '10' → logprob: -6.3795342445373535
    4. '6' → logprob: -7.7545342445373535
    5. '8' → logprob: -7.8795342445373535
    6. '12' → logprob: -8.254534721374512
    7. '15' → logprob: -10.254534721374512
    8. '5' → logprob: -11.504534721374512
    9. '14' → logprob: -11.879534721374512
    10. '11' → logprob: -12.004534721374512

Token 172: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00527478801086545
    2. '10' → logprob: -6.005274772644043
    3. '7' → logprob: -7.005274772644043
    4. '6' → logprob: -7.005274772644043
    5. '12' → logprob: -7.505274772644043
    6. '8' → logprob: -8.005274772644043
    7. '15' → logprob: -10.005274772644043
    8. '11' → logprob: -11.130274772644043
    9. '14' → logprob: -11.130274772644043
    10. '5' → logprob: -11.255274772644043

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4753868281841278
    2. 'n' → logprob: -1.8503868579864502
    3. 'def' → logprob: -1.9753868579864502
    4. '\n' → logprob: -3.47538685798645
    5. ' 
' → logprob: -4.350386619567871
    6. ' ' → logprob: -4.725386619567871
    7. 'for' → logprob: -4.850386619567871
    8. '#' → logprob: -5.100386619567871
    9. '' → logprob: -5.225386619567871
    10. '\' → logprob: -5.475386619567871

Token 174: 'mod' (ID: 4847)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3816208839416504
    2. ' ' → logprob: -1.7566208839416504
    3. '
' → logprob: -2.1316208839416504
    4. 'd' → logprob: -2.2566208839416504
    5. ' 
' → logprob: -2.2566208839416504
    6. '\n' → logprob: -2.6316208839416504
    7. '\' → logprob: -3.2566208839416504
    8. '#' → logprob: -3.3816208839416504
    9. 'a' → logprob: -3.6316208839416504
    10. 'def' → logprob: -4.13162088394165

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07055982947349548
    2. '=' → logprob: -3.3205597400665283
    3. ' ' → logprob: -3.4455597400665283
    4. '_' → logprob: -9.82055950164795
    5. '  ' → logprob: -11.07055950164795
    6. ' =
' → logprob: -11.32055950164795
    7. ' ,' → logprob: -12.44555950164795
    8. ',' → logprob: -12.57055950164795
    9. 'space' → logprob: -12.94555950164795
    10. ' =)' → logprob: -12.94555950164795

Token 176: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31496044993400574
    2. '10' → logprob: -1.3149604797363281
    3. '100' → logprob: -6.439960479736328
    4. '998' → logprob: -9.689960479736328
    5. '1' → logprob: -10.189960479736328
    6. ' ' → logprob: -14.439960479736328
    7. ' (' → logprob: -15.439960479736328
    8. '9' → logprob: -15.689960479736328
    9. ' 
' → logprob: -16.189960479736328
    10. '(' → logprob: -16.689960479736328

Token 177: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.798993706703186
    2. '100' → logprob: -0.798993706703186
    3. '998' → logprob: -2.2989935874938965
    4. '1' → logprob: -10.548994064331055
    5. '(' → logprob: -10.673994064331055
    6. 'int' → logprob: -11.048994064331055
    7. '999' → logprob: -11.923994064331055
    8. ' ' → logprob: -12.923994064331055
    9. '9' → logprob: -13.548994064331055
    10. 'pow' → logprob: -13.923994064331055

Token 178: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04373932257294655
    2. '**' → logprob: -3.1687393188476562
    3. '+' → logprob: -7.668739318847656
    4. ' ' → logprob: -8.668739318847656
    5. '09' → logprob: -9.418739318847656
    6. ' **' → logprob: -12.043739318847656
    7. '```' → logprob: -12.543739318847656
    8. '000' → logprob: -12.793739318847656
    9. '^' → logprob: -13.043739318847656
    10. '7' → logprob: -13.543739318847656

Token 179: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1472419600977446e-06
    2. '09' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.250001907348633
    4. '+' → logprob: -17.375001907348633
    5. '９' → logprob: -19.250001907348633
    6. '10' → logprob: -21.000001907348633
    7. '
' → logprob: -21.875001907348633
    8. '19' → logprob: -22.625001907348633
    9. '0' → logprob: -22.750001907348633
    10. '_' → logprob: -22.875001907348633

Token 180: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. '10' → logprob: -18.375
    4. '+' → logprob: -19.625
    5. '９' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '18' → logprob: -20.5
    8. ' ' → logprob: -20.625
    9. '
' → logprob: -21.25
    10. '19' → logprob: -21.5

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031797364354133606
    2. ' +' → logprob: -5.753179550170898
    3. '7' → logprob: -13.378179550170898
    4. '+
' → logprob: -15.128179550170898
    5. ' ' → logprob: -16.5031795501709
    6. '＋' → logprob: -16.7531795501709
    7. ' plus' → logprob: -17.5031795501709
    8. ' ' → logprob: -18.2531795501709
    9. ' +
' → logprob: -18.6281795501709
    10. '9' → logprob: -18.6281795501709

Token 182: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '+' → logprob: -19.875
    4. '07' → logprob: -21.0
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -21.25
    7. '' → logprob: -21.25
    8. '７' → logprob: -21.75
    9. '9' → logprob: -22.375
    10. '  ' → logprob: -22.5625

Token 183: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '+' → logprob: -21.0
    4. '07' → logprob: -21.75
    5. '9' → logprob: -21.875
    6. '７' → logprob: -22.125
    7. '   ' → logprob: -23.0
    8. '```' → logprob: -23.0
    9. '۷' → logprob: -23.75
    10. '
' → logprob: -23.875

Token 184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08268225193023682
    2. '<|end|>' → logprob: -3.3326821327209473
    3. ' ' → logprob: -4.207682132720947
    4. ' 
' → logprob: -4.332682132720947
    5. '\n' → logprob: -5.207682132720947
    6. '' → logprob: -5.832682132720947
    7. '#' → logprob: -6.332682132720947
    8. 'n' → logprob: -6.332682132720947
    9. '

' → logprob: -6.457682132720947
    10. ',' → logprob: -8.207682609558105

Token 185: 'dd' (ID: 1183)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5505358576774597
    2. 'n' → logprob: -1.1755359172821045
    3. '
' → logprob: -2.6755359172821045
    4. '#' → logprob: -3.3005359172821045
    5. ' ' → logprob: -5.675535678863525
    6. '\n' → logprob: -6.925535678863525
    7. 'd' → logprob: -7.425535678863525
    8. ' 
' → logprob: -7.550535678863525
    9. '\' → logprob: -7.550535678863525
    10. 'a' → logprob: -7.925535678863525

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.643069863319397
    2. ' =' → logprob: -0.768069863319397
    3. ' ' → logprob: -4.893069744110107
    4. 'ict' → logprob: -6.143069744110107
    5. 'ic' → logprob: -8.393070220947266
    6. ',' → logprob: -8.893070220947266
    7. 'ictionary' → logprob: -9.643070220947266
    8. '=[]' → logprob: -10.018070220947266
    9. '={}' → logprob: -10.393070220947266
    10. '[' → logprob: -10.518070220947266

Token 187: ' [' (ID: 723)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0347399711608887
    2. '{}' → logprob: -1.1597399711608887
    3. ' defaultdict' → logprob: -1.2847399711608887
    4. 'collections' → logprob: -3.6597399711608887
    5. ' {}' → logprob: -3.7847399711608887
    6. ' collections' → logprob: -5.284739971160889
    7. 'dict' → logprob: -7.534739971160889
    8. '[]' → logprob: -9.284740447998047
    9. ' ' → logprob: -9.659740447998047
    10. ' []' → logprob: -10.284740447998047

Token 188: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4607571065425873
    2. '-' → logprob: -1.4607571363449097
    3. '1' → logprob: -2.71075701713562
    4. '0' → logprob: -2.96075701713562
    5. '(-' → logprob: -4.210757255554199
    6. '[' → logprob: -5.710757255554199
    7. '[-' → logprob: -7.335757255554199
    8. ' ' → logprob: -10.0857572555542
    9. ' (' → logprob: -10.5857572555542
    10. ' -' → logprob: -13.2107572555542

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. '2' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.250018119812012
    4. '3' → logprob: -14.750018119812012
    5. '10' → logprob: -15.125018119812012
    6. '-' → logprob: -15.250018119812012
    7. '0' → logprob: -15.250018119812012
    8. '4' → logprob: -15.875018119812012
    9. '5' → logprob: -16.437517166137695
    10. '
' → logprob: -17.187517166137695

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.518582762917504e-05
    2. ' ,' → logprob: -9.37508487701416
    3. '0' → logprob: -15.25008487701416
    4. '),' → logprob: -17.375085830688477
    5. ',),' → logprob: -18.000085830688477
    6. ',
' → logprob: -18.500085830688477
    7. ',-' → logprob: -18.875085830688477
    8. ',)' → logprob: -19.625085830688477
    9. '),(' → logprob: -19.750085830688477
    10. ')' → logprob: -19.875085830688477

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0791458934545517
    2. ' ' → logprob: -2.579145908355713
    3. '-' → logprob: -8.329145431518555
    4. ' -' → logprob: -11.454145431518555
    5. '1' → logprob: -12.454145431518555
    6. ')' → logprob: -15.329145431518555
    7. ' ' → logprob: -17.204145431518555
    8. '  ' → logprob: -17.704145431518555
    9. ',' → logprob: -17.954145431518555
    10. ' )' → logprob: -18.266645431518555

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02822943590581417
    2. ' ' → logprob: -3.6532294750213623
    3. '-' → logprob: -6.278229236602783
    4. '1' → logprob: -10.153229713439941
    5. ' -' → logprob: -11.403229713439941
    6. ')' → logprob: -15.653229713439941
    7. ' ' → logprob: -16.028228759765625
    8. '  ' → logprob: -16.403228759765625
    9. '2' → logprob: -17.215728759765625
    10. '   ' → logprob: -18.153228759765625

Token 193: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005948548787273467
    2. '),(' → logprob: -7.8755950927734375
    3. '),
' → logprob: -8.750595092773438
    4. ')' → logprob: -10.000595092773438
    5. '),

' → logprob: -12.125595092773438
    6. ' ),' → logprob: -12.250595092773438
    7. ',' → logprob: -14.875595092773438
    8. '),
' → logprob: -15.625595092773438
    9. ',),' → logprob: -16.125595092773438
    10. ' ' → logprob: -17.375595092773438

Token 194: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10022187232971191
    2. ' (' → logprob: -2.350221872329712
    3. '(-' → logprob: -11.850221633911133
    4. ' ' → logprob: -12.225221633911133
    5. '0' → logprob: -13.475221633911133
    6. '1' → logprob: -13.475221633911133
    7. ' (-' → logprob: -15.350221633911133
    8. '(+' → logprob: -16.975221633911133
    9. '   ' → logprob: -17.100221633911133
    10. '	' → logprob: -17.725221633911133

Token 195: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04692729935050011
    2. '0' → logprob: -3.1719272136688232
    3. ' ' → logprob: -5.546927452087402
    4. '-' → logprob: -10.921927452087402
    5. '+' → logprob: -13.921927452087402
    6. '  ' → logprob: -14.671927452087402
    7. ' -' → logprob: -14.671927452087402
    8. '   ' → logprob: -14.921927452087402
    9. '01' → logprob: -16.046926498413086
    10. '(' → logprob: -16.109426498413086

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. '1' → logprob: -9.750085830688477
    3. '-' → logprob: -11.250085830688477
    4. ' ,' → logprob: -11.750085830688477
    5. ',-' → logprob: -12.000085830688477
    6. ' ' → logprob: -15.875085830688477
    7. ' -' → logprob: -16.000085830688477
    8. ',
' → logprob: -16.625085830688477
    9. ' ,-' → logprob: -17.250085830688477
    10. '-,' → logprob: -17.875085830688477

Token 197: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16089308261871338
    2. '1' → logprob: -1.9108930826187134
    3. ' ' → logprob: -7.535892963409424
    4. ' -' → logprob: -8.910893440246582
    5. ')' → logprob: -17.035892486572266
    6. '```' → logprob: -17.035892486572266
    7. '−' → logprob: -17.160892486572266
    8. '   ' → logprob: -17.285892486572266
    9. '
' → logprob: -17.660892486572266
    10. '+' → logprob: -17.660892486572266

Token 198: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38721153140068054
    2. '1' → logprob: -1.137211561203003
    3. ' ' → logprob: -8.012211799621582
    4. ' -' → logprob: -11.637211799621582
    5. '−' → logprob: -16.637210845947266
    6. '+' → logprob: -17.137210845947266
    7. '  ' → logprob: -18.137210845947266
    8. '```' → logprob: -18.262210845947266
    9. '   ' → logprob: -18.387210845947266
    10. '１' → logprob: -18.637210845947266

Token 199: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00015550498210359365
    2. ' ),' → logprob: -9.125155448913574
    3. ')' → logprob: -10.000155448913574
    4. '),(' → logprob: -14.125155448913574
    5. ',' → logprob: -15.500155448913574
    6. '),
' → logprob: -16.75015640258789
    7. ',),' → logprob: -18.00015640258789
    8. '],' → logprob: -18.12515640258789
    9. ' ' → logprob: -18.25015640258789
    10. '7' → logprob: -18.37515640258789

Token 200: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011054071597754955
    2. ' (' → logprob: -4.511054039001465
    3. '1' → logprob: -12.136054039001465
    4. ' ' → logprob: -13.886054039001465
    5. '(+' → logprob: -16.88605499267578
    6. ' (+' → logprob: -18.88605499267578
    7. '{' → logprob: -19.26105499267578
    8. ' ' → logprob: -19.51105499267578
    9. '0' → logprob: -19.51105499267578
    10. '[' → logprob: -19.88605499267578

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007288746419362724
    2. ' ' → logprob: -7.250729084014893
    3. '(' → logprob: -10.875728607177734
    4. ' (' → logprob: -17.750728607177734
    5. '-' → logprob: -18.875728607177734
    6. '+' → logprob: -19.125728607177734
    7. '```' → logprob: -20.125728607177734
    8. '0' → logprob: -20.250728607177734
    9. '   ' → logprob: -20.250728607177734
    10. '  ' → logprob: -20.625728607177734

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.004696090007201e-05
    2. ' ,' → logprob: -9.750069618225098
    3. '0' → logprob: -11.375069618225098
    4. ' ' → logprob: -15.875069618225098
    5. '<|end|>' → logprob: -17.500070571899414
    6. ',
' → logprob: -18.125070571899414
    7. '```' → logprob: -18.375070571899414
    8. '),' → logprob: -18.750070571899414
    9. '1' → logprob: -18.875070571899414
    10. '‌,' → logprob: -19.125070571899414

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029756855219602585
    2. ' ' → logprob: -3.529756784439087
    3. '-' → logprob: -12.654756546020508
    4. '1' → logprob: -13.029756546020508
    5. ' -' → logprob: -14.404756546020508
    6. ' ' → logprob: -16.029756546020508
    7. ',' → logprob: -16.092256546020508
    8. '```' → logprob: -16.467256546020508
    9. ')' → logprob: -16.967256546020508
    10. '  ' → logprob: -17.404756546020508

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005364707321859896
    2. ' ' → logprob: -7.6255364418029785
    3. '-' → logprob: -10.000536918640137
    4. '1' → logprob: -12.875536918640137
    5. ' -' → logprob: -15.000536918640137
    6. '```' → logprob: -16.25053596496582
    7. '   ' → logprob: -19.06303596496582
    8. '  ' → logprob: -19.25053596496582
    9. '۰' → logprob: -19.37553596496582
    10. ')' → logprob: -19.81303596496582

Token 205: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000206401280593127
    2. ')' → logprob: -9.000205993652344
    3. ' ),' → logprob: -10.000205993652344
    4. '),(' → logprob: -11.000205993652344
    5. ')]' → logprob: -11.125205993652344
    6. ',' → logprob: -12.500205993652344
    7. '),
' → logprob: -13.750205993652344
    8. '],' → logprob: -14.000205993652344
    9. ',),' → logprob: -15.875205993652344
    10. ')],' → logprob: -16.000205993652344

Token 206: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16033542156219482
    2. ' (' → logprob: -1.9103354215621948
    3. '0' → logprob: -9.285335540771484
    4. ' ' → logprob: -10.910335540771484
    5. ',' → logprob: -16.535335540771484
    6. ')' → logprob: -16.910335540771484
    7. '(-' → logprob: -17.160335540771484
    8. ' ' → logprob: -17.410335540771484
    9. ' (-' → logprob: -17.910335540771484
    10. '[' → logprob: -18.535335540771484

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009881501318886876
    2. ' ' → logprob: -7.125988006591797
    3. '(' → logprob: -8.625988006591797
    4. '-' → logprob: -12.500988006591797
    5. ' (' → logprob: -14.875988006591797
    6. '(-' → logprob: -15.625988006591797
    7. ')' → logprob: -16.000988006591797
    8. ' -' → logprob: -17.000988006591797
    9. '[' → logprob: -17.375988006591797
    10. ',' → logprob: -18.375988006591797

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ',-' → logprob: -10.125046730041504
    3. ' ,' → logprob: -12.500046730041504
    4. '-' → logprob: -13.125046730041504
    5. ',
' → logprob: -14.625046730041504
    6. ')' → logprob: -16.250045776367188
    7. '1' → logprob: -16.375045776367188
    8. ' ,-' → logprob: -16.750045776367188
    9. '),' → logprob: -17.125045776367188
    10. ' -' → logprob: -18.250045776367188

Token 209: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. ' -' → logprob: -16.75
    4. '−' → logprob: -22.5
    5. '-
' → logprob: -22.5
    6. '```' → logprob: -22.875
    7. ' ' → logprob: -23.625
    8. '   ' → logprob: -23.625
    9. '-directed' → logprob: -23.875
    10. '-l' → logprob: -24.5

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.813969957875088e-05
    2. ')]' → logprob: -9.625067710876465
    3. ')' → logprob: -13.750067710876465
    4. ' ' → logprob: -14.125067710876465
    5. ')]
' → logprob: -16.25006866455078
    6. '-' → logprob: -16.62506866455078
    7. ')],' → logprob: -16.75006866455078
    8. '```' → logprob: -17.37506866455078
    9. '')]' → logprob: -17.37506866455078
    10. ')])' → logprob: -17.87506866455078

Token 211: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0010119688231498003
    2. ')' → logprob: -7.251011848449707
    3. '),' → logprob: -8.376011848449707
    4. ']' → logprob: -9.626011848449707
    5. ' )' → logprob: -12.876011848449707
    6. ')],' → logprob: -14.126011848449707
    7. ')]
' → logprob: -14.501011848449707
    8. '))' → logprob: -14.876011848449707
    9. ')}' → logprob: -15.251011848449707
    10. '')]' → logprob: -15.376011848449707

Token 212: 'dd' (ID: 1183)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0289497375488281
    2. 'd' → logprob: -1.4039497375488281
    3. 'n' → logprob: -1.7789497375488281
    4. ',' → logprob: -2.153949737548828
    5. 'def' → logprob: -3.403949737548828
    6. ' ' → logprob: -3.778949737548828
    7. 'D' → logprob: -4.903949737548828
    8. ')' → logprob: -5.278949737548828
    9. '
' → logprob: -5.403949737548828
    10. '' → logprob: -5.528949737548828

Token 213: 'n' (ID: 77)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18474505841732025
    2. '=' → logprob: -2.0597450733184814
    3. '2' → logprob: -3.6847450733184814
    4. '_' → logprob: -5.559744834899902
    5. '[' → logprob: -5.809744834899902
    6. '.' → logprob: -6.184744834899902
    7. '6' → logprob: -6.809744834899902
    8. 's' → logprob: -7.184744834899902
    9. '.append' → logprob: -7.434744834899902
    10. ',' → logprob: -7.934744834899902

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742696285247803
    2. '=' → logprob: -0.9742696285247803
    3. 'e' → logprob: -9.59926986694336
    4. ',' → logprob: -10.59926986694336
    5. 'd' → logprob: -10.84926986694336
    6. 's' → logprob: -10.97426986694336
    7. '4' → logprob: -11.09926986694336
    8. ' ' → logprob: -11.59926986694336
    9. '6' → logprob: -11.72426986694336
    10. '=[' → logprob: -12.22426986694336

Token 215: ' dd' (ID: 18636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05997413769364357
    2. ' [' → logprob: -2.934974193572998
    3. '[(' → logprob: -5.809974193572998
    4. 'dd' → logprob: -6.809974193572998
    5. '8' → logprob: -8.30997371673584
    6. '[-' → logprob: -8.43497371673584
    7. ' [(' → logprob: -8.43497371673584
    8. ' ' → logprob: -9.05997371673584
    9. ' dd' → logprob: -9.93497371673584
    10. '9' → logprob: -10.43497371673584

Token 216: ' +' (ID: 659)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5553814768791199
    2. '+' → logprob: -1.1803815364837646
    3. '[:' → logprob: -2.9303815364837646
    4. ' +' → logprob: -3.0553815364837646
    5. '+n' → logprob: -5.0553812980651855
    6. '+[' → logprob: -5.4303812980651855
    7. '[' → logprob: -5.4303812980651855
    8. '*' → logprob: -6.6803812980651855
    9. '[:-' → logprob: -7.0553812980651855
    10. 'n' → logprob: -7.8053812980651855

Token 217: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02521948330104351
    2. '[(' → logprob: -4.025219440460205
    3. ' [' → logprob: -5.150219440460205
    4. '[((' → logprob: -6.775219440460205
    5. ' [(' → logprob: -9.525219917297363
    6. 'dd' → logprob: -11.150219917297363
    7. ' ' → logprob: -11.775219917297363
    8. '[]' → logprob: -12.650219917297363
    9. '[d' → logprob: -13.025219917297363
    10. '([' → logprob: -14.525219917297363

Token 218: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00012797261297237128
    2. ' (-' → logprob: -9.000127792358398
    3. '(' → logprob: -12.375127792358398
    4. '-' → logprob: -15.625127792358398
    5. '((-' → logprob: -16.5001277923584
    6. ' ' → logprob: -17.5001277923584
    7. '   ' → logprob: -18.0001277923584
    8. '
' → logprob: -18.3751277923584
    9. ' (' → logprob: -19.8751277923584
    10. '(+' → logprob: -19.8751277923584

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '-' → logprob: -16.75
    4. '
' → logprob: -18.125
    5. '১' → logprob: -20.75
    6. '   ' → logprob: -21.0625
    7. '۱' → logprob: -21.0625
    8. '

' → logprob: -21.0625
    9. ']' → logprob: -21.125
    10. '१' → logprob: -21.125

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012627716176211834
    2. ',-' → logprob: -4.387627601623535
    3. '-' → logprob: -9.887627601623535
    4. ' ,' → logprob: -10.262627601623535
    5. '1' → logprob: -10.512627601623535
    6. ' -' → logprob: -12.762627601623535
    7. ' ,-' → logprob: -13.387627601623535
    8. ',
' → logprob: -15.262627601623535
    9. ' ' → logprob: -16.38762855529785
    10. ')' → logprob: -16.51262855529785

Token 221: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005032490473240614
    2. ' -' → logprob: -5.755032539367676
    3. '1' → logprob: -6.380032539367676
    4. ' ' → logprob: -8.880032539367676
    5. '0' → logprob: -10.880032539367676
    6. '+' → logprob: -18.88003158569336
    7. '  ' → logprob: -19.50503158569336
    8. '	' → logprob: -19.50503158569336
    9. '   ' → logprob: -19.63003158569336
    10. ')' → logprob: -19.69253158569336

Token 222: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004640049301087856
    2. '1' → logprob: -5.379640102386475
    3. ' ' → logprob: -11.379639625549316
    4. '0' → logprob: -12.379639625549316
    5. ' -' → logprob: -12.379639625549316
    6. '   ' → logprob: -18.379640579223633
    7. '-
' → logprob: -18.504640579223633
    8. '+' → logprob: -18.879640579223633
    9. '
' → logprob: -19.004640579223633
    10. '-
' → logprob: -19.879640579223633

Token 223: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0001843485952122137
    2. ',' → logprob: -9.000184059143066
    3. ')' → logprob: -10.125184059143066
    4. ' ),' → logprob: -11.250184059143066
    5. '),(' → logprob: -11.875184059143066
    6. '),
' → logprob: -15.000184059143066
    7. ',),' → logprob: -15.125184059143066
    8. ' ,' → logprob: -15.750184059143066
    9. '],' → logprob: -17.000185012817383
    10. ')]' → logprob: -17.625185012817383

Token 224: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00397759722545743
    2. '(' → logprob: -5.8789777755737305
    3. ' (-' → logprob: -6.7539777755737305
    4. ' (' → logprob: -12.25397777557373
    5. ' ' → logprob: -14.75397777557373
    6. '-' → logprob: -14.87897777557373
    7. '   ' → logprob: -16.128976821899414
    8. '
' → logprob: -16.378976821899414
    9. '1' → logprob: -17.128976821899414
    10. ' ' → logprob: -17.628976821899414

Token 225: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000730781932361424
    2. '1' → logprob: -7.375730991363525
    3. ' -' → logprob: -9.500730514526367
    4. '(-' → logprob: -10.750730514526367
    5. '0' → logprob: -12.750730514526367
    6. '(' → logprob: -12.750730514526367
    7. ' ' → logprob: -13.125730514526367
    8. '   ' → logprob: -16.750730514526367
    9. '−' → logprob: -17.625730514526367
    10. '
' → logprob: -18.125730514526367

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003716854262165725
    2. '-' → logprob: -8.625371932983398
    3. ',-' → logprob: -8.875371932983398
    4. '1' → logprob: -10.125371932983398
    5. ' ,' → logprob: -11.500371932983398
    6. ' -' → logprob: -13.625371932983398
    7. '0' → logprob: -15.125371932983398
    8. ',
' → logprob: -15.125371932983398
    9. ' ' → logprob: -16.6878719329834
    10. '```' → logprob: -17.2503719329834

Token 227: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10071435570716858
    2. '1' → logprob: -2.3507144451141357
    3. ' -' → logprob: -7.975714206695557
    4. ' ' → logprob: -8.725714683532715
    5. '0' → logprob: -14.600714683532715
    6. '−' → logprob: -14.850714683532715
    7. '```' → logprob: -15.600714683532715
    8. ')' → logprob: -15.850714683532715
    9. '–' → logprob: -16.1007137298584
    10. '-)' → logprob: -16.8507137298584

Token 228: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04300697147846222
    2. '1' → logprob: -3.1680068969726562
    3. ' -' → logprob: -12.418006896972656
    4. ' ' → logprob: -13.043006896972656
    5. '0' → logprob: -13.668006896972656
    6. '−' → logprob: -16.418006896972656
    7. '```' → logprob: -16.543006896972656
    8. ')' → logprob: -16.918006896972656
    9. '   ' → logprob: -18.230506896972656
    10. '[' → logprob: -18.293006896972656

Token 229: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -6.611323624383658e-05
    2. ')' → logprob: -10.250065803527832
    3. ' ),' → logprob: -10.875065803527832
    4. ',' → logprob: -11.875065803527832
    5. '),(' → logprob: -13.625065803527832
    6. ')]' → logprob: -14.000065803527832
    7. '],' → logprob: -14.000065803527832
    8. '),
' → logprob: -14.375065803527832
    9. '-' → logprob: -15.125065803527832
    10. '0' → logprob: -15.625065803527832

Token 230: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.02975570224225521
    2. '(' → logprob: -3.5297555923461914
    3. ' (-' → logprob: -12.529755592346191
    4. '1' → logprob: -14.154755592346191
    5. '-' → logprob: -14.279755592346191
    6. ' (' → logprob: -15.529755592346191
    7. ' ' → logprob: -17.154756546020508
    8. '
' → logprob: -17.279756546020508
    9. ' ' → logprob: -18.654756546020508
    10. '[-' → logprob: -19.029756546020508

Token 231: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00027325618430040777
    2. '1' → logprob: -8.250273704528809
    3. ' -' → logprob: -11.375273704528809
    4. '(-' → logprob: -15.250273704528809
    5. '(' → logprob: -16.000272750854492
    6. ' ' → logprob: -16.000272750854492
    7. '0' → logprob: -16.625272750854492
    8. '−' → logprob: -18.125272750854492
    9. '```' → logprob: -19.125272750854492
    10. '–' → logprob: -20.125272750854492

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024096666311379522
    2. ',-' → logprob: -8.62524127960205
    3. '-' → logprob: -9.75024127960205
    4. ' ,' → logprob: -13.87524127960205
    5. ' -' → logprob: -13.87524127960205
    6. ',
' → logprob: -14.62524127960205
    7. '1' → logprob: -14.75024127960205
    8. '0' → logprob: -15.12524127960205
    9. ')' → logprob: -16.750240325927734
    10. ',\
' → logprob: -17.125240325927734

Token 233: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -14.875
    3. '0' → logprob: -17.375
    4. '−' → logprob: -18.25
    5. '1' → logprob: -18.625
    6. ')' → logprob: -20.375
    7. '```' → logprob: -20.5
    8. '(-' → logprob: -21.0
    9. '–' → logprob: -21.375
    10. '-user' → logprob: -21.625

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.2500057220459
    4. '１' → logprob: -18.1250057220459
    5. ',' → logprob: -18.3750057220459
    6. '
' → logprob: -18.6875057220459
    7. ')' → logprob: -18.8750057220459
    8. '۱' → logprob: -19.0000057220459
    9. '-' → logprob: -19.1250057220459
    10. '0' → logprob: -19.1875057220459

Token 235: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -8.08944896562025e-05
    2. ',' → logprob: -10.000081062316895
    3. ' ),' → logprob: -10.500081062316895
    4. ')' → logprob: -11.875081062316895
    5. '),(' → logprob: -15.000081062316895
    6. ')]' → logprob: -15.625081062316895
    7. ',),' → logprob: -15.875081062316895
    8. '],' → logprob: -16.375080108642578
    9. '1' → logprob: -16.500080108642578
    10. '(' → logprob: -17.125080108642578

Token 236: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01664525270462036
    2. '(-' → logprob: -4.266645431518555
    3. ' -' → logprob: -6.391645431518555
    4. ' (-' → logprob: -7.141645431518555
    5. '(' → logprob: -11.516645431518555
    6. ' ' → logprob: -14.766645431518555
    7. '{-' → logprob: -15.016645431518555
    8. '[-' → logprob: -15.391645431518555
    9. '
' → logprob: -15.641645431518555
    10. '	' → logprob: -16.016645431518555

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -14.437503814697266
    3. ' ' → logprob: -14.562503814697266
    4. ')' → logprob: -14.687503814697266
    5. '
' → logprob: -15.250003814697266
    6. '' → logprob: -15.687503814697266
    7. '-' → logprob: -16.000003814697266
    8. ']' → logprob: -16.250003814697266
    9. ',' → logprob: -16.312503814697266
    10. '0' → logprob: -16.375003814697266

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002197836758568883
    2. ',-' → logprob: -6.377197742462158
    3. '-' → logprob: -7.627197742462158
    4. ' -' → logprob: -12.627198219299316
    5. ' ,' → logprob: -13.002198219299316
    6. ',
' → logprob: -14.252198219299316
    7. '1' → logprob: -14.252198219299316
    8. ')' → logprob: -14.377198219299316
    9. ' ,-' → logprob: -15.002198219299316
    10. '0' → logprob: -15.127198219299316

Token 239: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. ' -' → logprob: -13.500001907348633
    3. ' ' → logprob: -19.125001907348633
    4. '0' → logprob: -19.500001907348633
    5. '1' → logprob: -19.750001907348633
    6. '-)' → logprob: -19.875001907348633
    7. ')' → logprob: -20.125001907348633
    8. '−' → logprob: -20.750001907348633
    9. '[' → logprob: -20.875001907348633
    10. '<|end|>' → logprob: -21.000001907348633

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. ')' → logprob: -14.000003814697266
    4. ']' → logprob: -17.750003814697266
    5. ')]' → logprob: -17.750003814697266
    6. '```' → logprob: -18.625003814697266
    7. '])' → logprob: -19.187503814697266
    8. '１' → logprob: -19.187503814697266
    9. '
' → logprob: -19.437503814697266
    10. '-' → logprob: -19.500003814697266

Token 241: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017541198758408427
    2. ']' → logprob: -9.000175476074219
    3. ')' → logprob: -10.000175476074219
    4. '),' → logprob: -12.625175476074219
    5. ')]
' → logprob: -13.250175476074219
    6. ' )' → logprob: -14.875175476074219
    7. '')]' → logprob: -15.625175476074219
    8. '])' → logprob: -15.750175476074219
    9. '))' → logprob: -15.875175476074219
    10. ')],' → logprob: -16.00017547607422

Token 242: 'dd' (ID: 1183)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5692744851112366
    2. 'n' → logprob: -0.9442744851112366
    3. 'N' → logprob: -3.194274425506592
    4. 'd' → logprob: -6.569274425506592
    5. 'H' → logprob: -7.444274425506592
    6. '#' → logprob: -7.444274425506592
    7. 'h' → logprob: -7.944274425506592
    8. 'x' → logprob: -8.44427490234375
    9. 'class' → logprob: -8.69427490234375
    10. 'for' → logprob: -8.81927490234375

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4217493236064911
    2. '[' → logprob: -1.1717493534088135
    3. '[n' → logprob: -3.6717493534088135
    4. '<|end|>' → logprob: -5.296749114990234
    5. '_n' → logprob: -7.046749114990234
    6. ',' → logprob: -7.421749114990234
    7. '+' → logprob: -7.671749114990234
    8. '.' → logprob: -8.296749114990234
    9. ']' → logprob: -8.546749114990234
    10. '[]' → logprob: -8.546749114990234

Token 244: '9' (ID: 24)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18771445751190186
    2. '.' → logprob: -1.9377144575119019
    3. '+' → logprob: -4.437714576721191
    4. '[:]' → logprob: -5.437714576721191
    5. '.append' → logprob: -5.687714576721191
    6. ')' → logprob: -6.562714576721191
    7. '=' → logprob: -7.062714576721191
    8. ',' → logprob: -7.312714576721191
    9. '[]' → logprob: -7.562714576721191
    10. ']' → logprob: -7.687714576721191

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891479134559631
    2. '=' → logprob: -2.5789148807525635
    3. ' ' → logprob: -12.203914642333984
    4. '9' → logprob: -12.328914642333984
    5. '[' → logprob: -12.578914642333984
    6. ' =[' → logprob: -12.578914642333984
    7. 'n' → logprob: -13.578914642333984
    8. '=[' → logprob: -13.578914642333984
    9. '.' → logprob: -14.203914642333984
    10. ',' → logprob: -14.203914642333984

Token 246: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.38186025619506836
    2. '[' → logprob: -1.5068602561950684
    3. '[(' → logprob: -2.5068602561950684
    4. ' dd' → logprob: -4.756860256195068
    5. ' [' → logprob: -5.506860256195068
    6. '[-' → logprob: -7.256860256195068
    7. ' [(' → logprob: -7.756860256195068
    8. '[]' → logprob: -8.006860733032227
    9. '(dd' → logprob: -10.006860733032227
    10. '[((' → logprob: -10.256860733032227

Token 247: 'n' (ID: 77)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12160253524780273
    2. '+' → logprob: -2.3716025352478027
    3. 'n' → logprob: -3.8716025352478027
    4. '+n' → logprob: -8.996603012084961
    5. ' ' → logprob: -9.121603012084961
    6. '9' → logprob: -9.496603012084961
    7. ' +
' → logprob: -11.746603012084961
    8. '*' → logprob: -11.871603012084961
    9. ' *' → logprob: -12.121603012084961
    10. ' ' → logprob: -12.621603012084961

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06203557923436165
    2. '+' → logprob: -2.81203556060791
    3. '+[' → logprob: -9.68703556060791
    4. '[' → logprob: -13.31203556060791
    5. ' ' → logprob: -13.68703556060791
    6. '*' → logprob: -13.81203556060791
    7. ' *' → logprob: -13.81203556060791
    8. ' +
' → logprob: -14.81203556060791
    9. ' +(' → logprob: -15.43703556060791
    10. '+(' → logprob: -16.062036514282227

Token 249: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48881879448890686
    2. '[(' → logprob: -0.9888187646865845
    3. '[((' → logprob: -4.738818645477295
    4. ' [' → logprob: -5.738818645477295
    5. 'dd' → logprob: -6.113818645477295
    6. ' [(' → logprob: -7.863818645477295
    7. '[
' → logprob: -10.363819122314453
    8. ' dd' → logprob: -11.113819122314453
    9. '(dd' → logprob: -11.738819122314453
    10. ' ' → logprob: -11.988819122314453

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20374253392219543
    2. '-' → logprob: -1.703742504119873
    3. ' ' → logprob: -6.578742504119873
    4. '2' → logprob: -7.578742504119873
    5. '1' → logprob: -8.453742980957031
    6. ' -' → logprob: -8.578742980957031
    7. '(' → logprob: -12.078742980957031
    8. '
' → logprob: -12.578742980957031
    9. '(-' → logprob: -12.641242980957031
    10. '   ' → logprob: -13.203742980957031

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003175889723934233
    2. ',-' → logprob: -8.375317573547363
    3. ' ,' → logprob: -9.875317573547363
    4. '1' → logprob: -10.750317573547363
    5. ',
' → logprob: -11.750317573547363
    6. '-' → logprob: -13.375317573547363
    7. '2' → logprob: -13.750317573547363
    8. '7' → logprob: -14.250317573547363
    9. ' ' → logprob: -14.375317573547363
    10. '9' → logprob: -15.125317573547363

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08760083466768265
    2. '-' → logprob: -3.2126009464263916
    3. '1' → logprob: -3.3376009464263916
    4. ' ' → logprob: -5.0876007080078125
    5. ' -' → logprob: -6.8376007080078125
    6. '2' → logprob: -7.0876007080078125
    7. ')' → logprob: -12.712600708007812
    8. '3' → logprob: -12.712600708007812
    9. '  ' → logprob: -12.962600708007812
    10. '
' → logprob: -13.212600708007812

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39349862933158875
    2. '-' → logprob: -1.2684986591339111
    3. '1' → logprob: -3.143498659133911
    4. '2' → logprob: -7.143498420715332
    5. ' ' → logprob: -9.268498420715332
    6. ' -' → logprob: -10.393498420715332
    7. '3' → logprob: -13.143498420715332
    8. '−' → logprob: -13.268498420715332
    9. '9' → logprob: -13.518498420715332
    10. '5' → logprob: -14.518498420715332

Token 254: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03070431388914585
    2. '),' → logprob: -3.5307042598724365
    3. ' )' → logprob: -7.780704498291016
    4. ')' → logprob: -8.405704498291016
    5. '),(' → logprob: -8.780704498291016
    6. ',' → logprob: -9.530704498291016
    7. ' ),' → logprob: -9.905704498291016
    8. ')]
' → logprob: -11.530704498291016
    9. ')],' → logprob: -12.155704498291016
    10. ')])' → logprob: -12.155704498291016

Token 255: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5758427381515503
    2. '#' → logprob: -1.4508427381515503
    3. 'def' → logprob: -2.57584285736084
    4. '
' → logprob: -3.32584285736084
    5. 'n' → logprob: -3.95084285736084
    6. '=' → logprob: -4.20084285736084
    7. 'a' → logprob: -4.45084285736084
    8. ',' → logprob: -4.70084285736084
    9. ' ' → logprob: -4.82584285736084
    10. ':' → logprob: -4.95084285736084

Token 256: ' wi' (ID: 20219)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013216003775596619
    2. ' solve' → logprob: -4.513216018676758
    3. ' dfs' → logprob: -6.763216018676758
    4. ' ' → logprob: -8.638216018676758
    5. 'main' → logprob: -8.638216018676758
    6. ' factorial' → logprob: -8.888216018676758
    7. '_' → logprob: -9.263216018676758
    8. ' bfs' → logprob: -9.638216018676758
    9. 'solve' → logprob: -9.638216018676758
    10. '_main' → logprob: -10.263216018676758

Token 257: '():
' (ID: 8595)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.21473421156406403
    2. 'n' → logprob: -2.4647343158721924
    3. 'nd' → logprob: -2.9647343158721924
    4. 't' → logprob: -3.7147343158721924
    5. 'd' → logprob: -4.339734077453613
    6. 'def' → logprob: -4.839734077453613
    7. 's' → logprob: -6.089734077453613
    8. '()' → logprob: -6.589734077453613
    9. 'ndef' → logprob: -6.839734077453613
    10. 'll' → logprob: -7.464734077453613

Token 258: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23286835849285126
    2. '   ' → logprob: -1.9828683137893677
    3. 'return' → logprob: -2.8578684329986572
    4. ' ' → logprob: -4.857868194580078
    5. 'n' → logprob: -5.982868194580078
    6. ' n' → logprob: -6.982868194580078
    7. '    ' → logprob: -7.482868194580078
    8. '  ' → logprob: -8.732868194580078
    9. '	return' → logprob: -8.982868194580078
    10. ' r' → logprob: -8.982868194580078

Token 259: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01429783832281828
    2. ' return' → logprob: -4.264297962188721
    3. 'ret' → logprob: -9.639297485351562
    4. '   ' → logprob: -10.014297485351562
    5. 'r' → logprob: -11.514297485351562
    6. 'int' → logprob: -11.764297485351562
    7. 'map' → logprob: -13.014297485351562
    8. ' ' → logprob: -13.639297485351562
    9. 'list' → logprob: -14.264297485351562
    10. '	return' → logprob: -14.264297485351562

Token 260: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3646318018436432
    2. ' map' → logprob: -1.8646317720413208
    3. ' int' → logprob: -2.1146318912506104
    4. 'map' → logprob: -3.8646318912506104
    5. ' list' → logprob: -5.114631652832031
    6. 'list' → logprob: -5.864631652832031
    7. ' tuple' → logprob: -10.364631652832031
    8. 'tuple' → logprob: -10.614631652832031
    9. '[int' → logprob: -11.489631652832031
    10. ' ' → logprob: -11.614631652832031

Token 261: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005548207554966211
    2. '(' → logprob: -7.500555038452148
    3. '(
' → logprob: -14.000555038452148
    4. 'map' → logprob: -14.500555038452148
    5. ' map' → logprob: -15.750555038452148
    6. '(int' → logprob: -16.00055503845215
    7. '(m' → logprob: -16.50055503845215
    8. '(ma' → logprob: -16.50055503845215
    9. '	map' → logprob: -17.00055503845215
    10. '()' → logprob: -17.00055503845215

Token 262: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004125575942452997
    2. 'int' → logprob: -8.125412940979004
    3. '(' → logprob: -9.125412940979004
    4. '<int' → logprob: -12.750412940979004
    5. ',int' → logprob: -13.625412940979004
    6. '[int' → logprob: -13.750412940979004
    7. ' int' → logprob: -14.250412940979004
    8. '=int' → logprob: -14.625412940979004
    9. ']int' → logprob: -14.625412940979004
    10. '(
' → logprob: -15.000412940979004

Token 263: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3150114119052887
    2. 'input' → logprob: -1.9400113821029663
    3. ',' → logprob: -2.190011501312256
    4. '(input' → logprob: -4.315011501312256
    5. 'sys' → logprob: -7.065011501312256
    6. '(sys' → logprob: -8.940011024475098
    7. ' input' → logprob: -9.065011024475098
    8. '(' → logprob: -9.565011024475098
    9. ' ,' → logprob: -9.940011024475098
    10. '   ' → logprob: -12.440011024475098

Token 264: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5787864923477173
    2. 'sys' → logprob: -0.8287864923477173
    3. ' sys' → logprob: -6.453786373138428
    4. ' input' → logprob: -6.703786373138428
    5. 'stdin' → logprob: -10.328786849975586
    6. '=sys' → logprob: -11.828786849975586
    7. '	sys' → logprob: -14.453786849975586
    8. '(sys' → logprob: -14.703786849975586
    9. ' ' → logprob: -14.703786849975586
    10. '=input' → logprob: -15.828786849975586

Token 265: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -12.12501335144043
    3. '.readline' → logprob: -12.37501335144043
    4. 'stdin' → logprob: -13.87501335144043
    5. '.stdout' → logprob: -14.12501335144043
    6. '.std' → logprob: -14.12501335144043
    7. '.argv' → logprob: -14.25001335144043
    8. ' stdin' → logprob: -16.37501335144043
    9. '.st' → logprob: -16.62501335144043
    10. '.input' → logprob: -17.50001335144043

Token 266: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -11.375015258789062
    3. '.read' → logprob: -12.750015258789062
    4. '.buffer' → logprob: -14.750015258789062
    5. ' .' → logprob: -15.625015258789062
    6. '.readlines' → logprob: -17.625015258789062
    7. '.stdin' → logprob: -17.875015258789062
    8. '().' → logprob: -19.125015258789062
    9. ' readline' → logprob: -20.625015258789062
    10. ').' → logprob: -21.125015258789062

Token 267: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.625000953674316
    3. ' ().' → logprob: -16.375
    4. '()))' → logprob: -19.125
    5. '(' → logprob: -19.875
    6. '.readline' → logprob: -20.25
    7. '().__' → logprob: -20.625
    8. '.' → logprob: -21.375
    9. 'line' → logprob: -21.625
    10. '().
' → logprob: -21.875

Token 268: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10230723768472672
    2. 'rstrip' → logprob: -2.3523073196411133
    3. 'split' → logprob: -6.602307319641113
    4. 'read' → logprob: -7.227307319641113
    5. ' strip' → logprob: -11.227307319641113
    6. 'decode' → logprob: -14.352307319641113
    7. ')' → logprob: -15.477307319641113
    8. 'rs' → logprob: -16.227306365966797
    9. 'r' → logprob: -16.352306365966797
    10. 'rst' → logprob: -16.477306365966797

Token 269: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04644935950636864
    2. '()' → logprob: -3.7964494228363037
    3. '))' → logprob: -3.7964494228363037
    4. '())' → logprob: -7.921449184417725
    5. '()))
' → logprob: -9.421449661254883
    6. '(' → logprob: -10.546449661254883
    7. '()));' → logprob: -12.171449661254883
    8. ')' → logprob: -12.421449661254883
    9. '())))' → logprob: -13.296449661254883
    10. '(),' → logprob: -13.546449661254883

Token 270: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014174791052937508
    2. 'd' → logprob: -4.264174938201904
    3. 'de' → logprob: -11.764174461364746
    4. '#' → logprob: -13.389174461364746
    5. 'D' → logprob: -14.764174461364746
    6. '\' → logprob: -15.139174461364746
    7. '_' → logprob: -15.264174461364746
    8. ' def' → logprob: -15.264174461364746
    9. ':' → logprob: -15.639174461364746
    10. ':def' → logprob: -16.264175415039062

Token 271: ' w' (ID: 286)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.6078976392745972
    2. 'wo' → logprob: -2.2328977584838867
    3. 'i' → logprob: -2.6078977584838867
    4. 'ii' → logprob: -2.9828977584838867
    5. 'main' → logprob: -3.4828977584838867
    6. 'ws' → logprob: -3.4828977584838867
    7. 'w' → logprob: -3.6078977584838867
    8. 'li' → logprob: -3.7328977584838867
    9. 'si' → logprob: -3.7328977584838867
    10. 'mi' → logprob: -3.7328977584838867

Token 272: 'ip' (ID: 488)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012527309590950608
    2. 'l' → logprob: -7.1262526512146
    3. '()' → logprob: -8.876253128051758
    4. 'r' → logprob: -9.126253128051758
    5. 'a' → logprob: -9.501253128051758
    6. 'p' → logprob: -10.126253128051758
    7. 's' → logprob: -10.376253128051758
    8. '():
' → logprob: -11.001253128051758
    9. 'rite' → logprob: -12.251253128051758
    10. 'li' → logprob: -12.251253128051758

Token 273: '():
' (ID: 8595)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9837955832481384
    2. '()' → logprob: -0.9837955832481384
    3. '():' → logprob: -1.7337956428527832
    4. '():
' → logprob: -2.983795642852783
    5. 'ut' → logprob: -4.233795642852783
    6. 'u' → logprob: -5.233795642852783
    7. 'n' → logprob: -6.233795642852783
    8. 's' → logprob: -7.608795642852783
    9. 'r' → logprob: -7.608795642852783
    10. '()):
' → logprob: -7.858795642852783

Token 274: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0029513163026422262
    2. '():
' → logprob: -5.877951145172119
    3. '()' → logprob: -9.752951622009277
    4. ' ():' → logprob: -9.877951622009277
    5. ':' → logprob: -10.502951622009277
    6. '   ' → logprob: -12.002951622009277
    7. '):' → logprob: -13.377951622009277
    8. '():
' → logprob: -14.002951622009277
    9. '(' → logprob: -14.752951622009277
    10. '():

' → logprob: -15.377951622009277

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04526098445057869
    2. ' return' → logprob: -3.9202609062194824
    3. 'print' → logprob: -4.295260906219482
    4. '   ' → logprob: -5.295260906219482
    5. 'def' → logprob: -5.295260906219482
    6. 'list' → logprob: -8.17026138305664
    7. '():' → logprob: -9.17026138305664
    8. ')' → logprob: -10.17026138305664
    9. '()' → logprob: -10.17026138305664
    10. '):' → logprob: -10.42026138305664

Token 276: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3734060227870941
    2. 'list' → logprob: -1.2484060525894165
    3. ' tuple' → logprob: -4.123405933380127
    4. ' map' → logprob: -5.873405933380127
    5. 'map' → logprob: -6.498405933380127
    6. 'tuple' → logprob: -6.498405933380127
    7. '[' → logprob: -7.123405933380127
    8. 'int' → logprob: -7.373405933380127
    9. ' [' → logprob: -7.623405933380127
    10. '[int' → logprob: -8.373406410217285

Token 277: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010563877876847982
    2. 'list' → logprob: -8.001056671142578
    3. 'tuple' → logprob: -8.126056671142578
    4. 'sys' → logprob: -8.251056671142578
    5. 'map' → logprob: -10.126056671142578
    6. '(int' → logprob: -10.751056671142578
    7. 'float' → logprob: -10.751056671142578
    8. 'x' → logprob: -10.751056671142578
    9. 'p' → logprob: -10.876056671142578
    10. 'i' → logprob: -11.876056671142578

Token 278: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011655801208689809
    2. '(sys' → logprob: -7.001165390014648
    3. '(i' → logprob: -8.376165390014648
    4. '(s' → logprob: -11.001165390014648
    5. '(a' → logprob: -12.751165390014648
    6. '(n' → logprob: -13.751165390014648
    7. '(o' → logprob: -14.126165390014648
    8. '(p' → logprob: -14.251165390014648
    9. '(k' → logprob: -15.376165390014648
    10. '(b' → logprob: -15.376165390014648

Token 279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13581962883472443
    2. '()' → logprob: -2.260819673538208
    3. 'sys' → logprob: -5.010819435119629
    4. 'for' → logprob: -5.510819435119629
    5. '(sys' → logprob: -5.635819435119629
    6. ' for' → logprob: -5.635819435119629
    7. '(x' → logprob: -5.885819435119629
    8. '())' → logprob: -7.135819435119629
    9. '=sys' → logprob: -7.635819435119629
    10. 'in' → logprob: -7.760819435119629

Token 280: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5467467308044434
    2. 'for' → logprob: -0.9217467308044434
    3. '()' → logprob: -4.046746730804443
    4. 'sys' → logprob: -5.546746730804443
    5. ' sys' → logprob: -7.296746730804443
    6. ')' → logprob: -7.296746730804443
    7. '(sys' → logprob: -8.796747207641602
    8. 'in' → logprob: -9.046747207641602
    9. '=sys' → logprob: -9.046747207641602
    10. ' in' → logprob: -9.796747207641602

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.87548828125
    4. '  ' → logprob: -18.25048828125
    5. 'for' → logprob: -18.62548828125
    6. ' ' → logprob: -19.25048828125
    7. ' for' → logprob: -19.50048828125
    8. '１' → logprob: -19.50048828125
    9. '0' → logprob: -19.62548828125
    10. 'int' → logprob: -20.37548828125

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'int' → logprob: -18.75002098083496
    4. 'for' → logprob: -18.75002098083496
    5. '   ' → logprob: -19.25002098083496
    6. '0' → logprob: -19.87502098083496
    7. '  ' → logprob: -19.87502098083496
    8. '１' → logprob: -20.37502098083496
    9. 'sys' → logprob: -20.37502098083496
    10. ' for' → logprob: -20.50002098083496

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132841885089874
    2. ' for' → logprob: -1.313284158706665
    3. ')' → logprob: -11.688283920288086
    4. '	for' → logprob: -11.813283920288086
    5. '()' → logprob: -12.813283920288086
    6. ' ' → logprob: -12.938283920288086
    7. '(x' → logprob: -13.938283920288086
    8. '
' → logprob: -15.688283920288086
    9. '   ' → logprob: -15.938283920288086
    10. 'x' → logprob: -16.063283920288086

Token 284: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014164448715746403
    2. 'x' → logprob: -4.264164447784424
    3. ' sys' → logprob: -15.014164924621582
    4. '	x' → logprob: -15.389164924621582
    5. '(x' → logprob: -15.764164924621582
    6. ' ' → logprob: -16.139163970947266
    7. ' ' → logprob: -16.514163970947266
    8. 'sys' → logprob: -17.639163970947266
    9. '  ' → logprob: -18.014163970947266
    10. '
' → logprob: -18.264163970947266

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026363123208284378
    2. 'in' → logprob: -3.6513631343841553
    3. 'x' → logprob: -10.526363372802734
    4. ' x' → logprob: -10.651363372802734
    5. 'sys' → logprob: -12.026363372802734
    6. '=sys' → logprob: -13.526363372802734
    7. ' sys' → logprob: -13.901363372802734
    8. 'input' → logprob: -14.401363372802734
    9. 's' → logprob: -14.401363372802734
    10. ' ' → logprob: -15.026363372802734

Token 286: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0011779663618654013
    2. ' sys' → logprob: -6.751177787780762
    3. 'wi' → logprob: -11.876177787780762
    4. '(sys' → logprob: -15.376177787780762
    5. '	sys' → logprob: -15.501177787780762
    6. '=sys' → logprob: -15.876177787780762
    7. 'input' → logprob: -16.126178741455078
    8. 'range' → logprob: -17.251178741455078
    9. 'sy' → logprob: -17.501178741455078
    10. ' ' → logprob: -17.876178741455078

Token 287: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003291480534244329
    2. 'stdin' → logprob: -8.50032901763916
    3. '.' → logprob: -9.50032901763916
    4. '.stdout' → logprob: -10.75032901763916
    5. '.argv' → logprob: -11.12532901763916
    6. '.readline' → logprob: -12.00032901763916
    7. '(stdin' → logprob: -12.25032901763916
    8. ' stdin' → logprob: -14.00032901763916
    9. '.std' → logprob: -14.12532901763916
    10. ' .' → logprob: -14.62532901763916

Token 288: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.stdin' → logprob: -15.375000953674316
    3. '.readlines' → logprob: -15.500000953674316
    4. '.' → logprob: -15.875000953674316
    5. ' readline' → logprob: -16.625
    6. 'stdin' → logprob: -18.0
    7. 'buffer' → logprob: -18.5
    8. 'read' → logprob: -18.5
    9. '.read' → logprob: -19.5
    10. '.buffer' → logprob: -19.75

Token 289: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. ' ().' → logprob: -13.875001907348633
    3. '()' → logprob: -14.125001907348633
    4. '.split' → logprob: -16.375001907348633
    5. ' .' → logprob: -18.125001907348633
    6. '.' → logprob: -18.625001907348633
    7. '(' → logprob: -20.125001907348633
    8. '.readline' → logprob: -20.500001907348633
    9. '()[' → logprob: -20.875001907348633
    10. '.strip' → logprob: -21.500001907348633

Token 290: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005567280459217727
    2. 'strip' → logprob: -7.500556945800781
    3. ' split' → logprob: -13.125556945800781
    4. 'rstrip' → logprob: -13.750556945800781
    5. 'read' → logprob: -14.500556945800781
    6. '(split' → logprob: -17.25055694580078
    7. 'decode' → logprob: -17.62555694580078
    8. 'spl' → logprob: -18.62555694580078
    9. '.split' → logprob: -19.12555694580078
    10. ' strip' → logprob: -19.75055694580078

Token 291: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00045367187703959644
    2. '()' → logprob: -7.750453472137451
    3. '())' → logprob: -10.75045394897461
    4. '()][' → logprob: -14.87545394897461
    5. ')]' → logprob: -15.00045394897461
    6. ']' → logprob: -15.12545394897461
    7. '()]
' → logprob: -16.00045394897461
    8. ']()' → logprob: -16.25045394897461
    9. '()}' → logprob: -16.25045394897461
    10. ' ()' → logprob: -16.50045394897461

Token 292: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.32554900646209717
    2. ']' → logprob: -1.3255490064620972
    3. ')]' → logprob: -4.575549125671387
    4. ']()' → logprob: -6.325549125671387
    5. '()' → logprob: -9.700549125671387
    6. ')' → logprob: -10.325549125671387
    7. '])' → logprob: -10.825549125671387
    8. '())' → logprob: -12.700549125671387
    9. ' ]' → logprob: -13.325549125671387
    10. '`]' → logprob: -14.325549125671387

Token 293: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002659839577972889
    2. 'd' → logprob: -6.002659797668457
    3. '#' → logprob: -9.252659797668457
    4. 'n' → logprob: -10.127659797668457
    5. 'de' → logprob: -11.877659797668457
    6. '
' → logprob: -11.877659797668457
    7. 'class' → logprob: -12.002659797668457
    8. 'ndef' → logprob: -12.002659797668457
    9. '<|end|>' → logprob: -12.627659797668457
    10. '\' → logprob: -12.877659797668457

Token 294: ' ws' (ID: 33500)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7935603260993958
    2. 'ws' → logprob: -1.543560266494751
    3. 'wi' → logprob: -2.043560266494751
    4. 'input' → logprob: -2.668560266494751
    5. 'int' → logprob: -3.668560266494751
    6. 'i' → logprob: -3.668560266494751
    7. 'main' → logprob: -4.41856050491333
    8. 'ii' → logprob: -4.41856050491333
    9. 'wr' → logprob: -4.41856050491333
    10. ' ws' → logprob: -5.04356050491333

Token 295: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005292457528412342
    2. '():
' → logprob: -5.2552924156188965
    3. '()' → logprob: -10.005292892456055
    4. ' ():' → logprob: -11.380292892456055
    5. '():
' → logprob: -13.255292892456055
    6. '():

' → logprob: -15.005292892456055
    7. ' ()' → logprob: -18.005292892456055
    8. 'def' → logprob: -18.130292892456055
    9. '().' → logprob: -18.130292892456055
    10. 'tring' → logprob: -18.505292892456055

Token 296: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5843797326087952
    2. '():
' → logprob: -0.8343797326087952
    3. 'return' → logprob: -5.45937967300415
    4. '()' → logprob: -5.83437967300415
    5. '):
' → logprob: -7.58437967300415
    6. '   ' → logprob: -8.459380149841309
    7. ' return' → logprob: -8.709380149841309
    8. 'def' → logprob: -9.334380149841309
    9. '):' → logprob: -9.334380149841309
    10. '():
' → logprob: -9.709380149841309

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01849381998181343
    2. 'sys' → logprob: -4.01849365234375
    3. ' return' → logprob: -8.39349365234375
    4. '   ' → logprob: -9.14349365234375
    5. ' sys' → logprob: -11.89349365234375
    6. '=sys' → logprob: -13.39349365234375
    7. 'def' → logprob: -13.64349365234375
    8. '(sys' → logprob: -14.14349365234375
    9. ')' → logprob: -16.76849365234375
    10. 'input' → logprob: -17.01849365234375

Token 298: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.717296517104842e-05
    2. 'input' → logprob: -10.000057220458984
    3. 'list' → logprob: -11.750057220458984
    4. ' sys' → logprob: -12.500057220458984
    5. '(sys' → logprob: -17.000057220458984
    6. '   ' → logprob: -17.250057220458984
    7. '=sys' → logprob: -18.000057220458984
    8. 'str' → logprob: -18.250057220458984
    9. '	sys' → logprob: -18.750057220458984
    10. '.sys' → logprob: -19.875057220458984

Token 299: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.991464786347933e-05
    2. '.stdout' → logprob: -9.750060081481934
    3. 'stdin' → logprob: -13.750060081481934
    4. '.' → logprob: -15.750060081481934
    5. '.readline' → logprob: -16.125059127807617
    6. '.argv' → logprob: -16.375059127807617
    7. '.std' → logprob: -16.750059127807617
    8. '.stderr' → logprob: -17.000059127807617
    9. '(stdin' → logprob: -18.000059127807617
    10. ' stdin' → logprob: -18.500059127807617

Token 300: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.664371848164592e-05
    2. 'read' → logprob: -11.125016212463379
    3. '.read' → logprob: -14.000016212463379
    4. ' readline' → logprob: -14.000016212463379
    5. '.' → logprob: -17.125017166137695
    6. '.readlines' → logprob: -17.625017166137695
    7. 'buffer' → logprob: -18.375017166137695
    8. '_read' → logprob: -18.500017166137695
    9. 'rstrip' → logprob: -19.000017166137695
    10. 'reader' → logprob: -19.125017166137695

Token 301: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000158842682139948
    2. '()' → logprob: -8.75015926361084
    3. ' ().' → logprob: -15.37515926361084
    4. '(' → logprob: -17.375158309936523
    5. '("").' → logprob: -17.625158309936523
    6. '().'' → logprob: -19.000158309936523
    7. '().__' → logprob: -19.125158309936523
    8. '()

' → logprob: -19.250158309936523
    9. '()
' → logprob: -19.250158309936523
    10. '.' → logprob: -19.250158309936523

Token 302: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023245712742209435
    2. 'rstrip' → logprob: -3.7732458114624023
    3. 'str' → logprob: -16.023244857788086
    4. ' strip' → logprob: -16.523244857788086
    5. 'decode' → logprob: -18.398244857788086
    6. 'read' → logprob: -18.648244857788086
    7. '_strip' → logprob: -19.398244857788086
    8. 'stripe' → logprob: -20.898244857788086
    9. 'split' → logprob: -20.898244857788086
    10. '.rstrip' → logprob: -21.023244857788086

Token 303: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017076305812224746
    2. '(' → logprob: -8.875170707702637
    3. '()]' → logprob: -11.750170707702637
    4. '()
' → logprob: -11.875170707702637
    5. '()[' → logprob: -11.875170707702637
    6. '().' → logprob: -12.625170707702637
    7. '()\' → logprob: -13.375170707702637
    8. '()

' → logprob: -14.000170707702637
    9. '())' → logprob: -14.250170707702637
    10. '()>' → logprob: -14.875170707702637

Token 304: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3856492842023727e-06
    2. '#' → logprob: -14.875000953674316
    3. 'd' → logprob: -15.250000953674316
    4. '\' → logprob: -15.500000953674316
    5. 'ndef' → logprob: -15.875000953674316
    6. '<|end|>' → logprob: -15.875000953674316
    7. 'de' → logprob: -16.125001907348633
    8. 'class' → logprob: -16.125001907348633
    9. ' def' → logprob: -17.000001907348633
    10. '```' → logprob: -17.250001907348633

Token 305: ' i' (ID: 575)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.793774425983429
    2. 'i' → logprob: -1.6687743663787842
    3. 'wi' → logprob: -1.6687743663787842
    4. 'input' → logprob: -2.293774366378784
    5. 'wr' → logprob: -3.668774366378784
    6. 's' → logprob: -5.168774604797363
    7. 'a' → logprob: -5.543774604797363
    8. 'int' → logprob: -6.043774604797363
    9. 'wc' → logprob: -6.043774604797363
    10. 'wt' → logprob: -6.168774604797363

Token 306: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5764315128326416
    2. 'nt' → logprob: -0.8264315128326416
    3. 'np' → logprob: -7.8264312744140625
    4. '()' → logprob: -10.576431274414062
    5. 't' → logprob: -11.201431274414062
    6. 'ntl' → logprob: -11.201431274414062
    7. 'nit' → logprob: -11.576431274414062
    8. 'p' → logprob: -12.326431274414062
    9. 'ndef' → logprob: -12.576431274414062
    10. 'nd' → logprob: -12.826431274414062

Token 307: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288213849067688
    2. 'return' → logprob: -1.553821325302124
    3. ' =' → logprob: -2.928821325302124
    4. '()' → logprob: -3.053821325302124
    5. ' return' → logprob: -4.053821563720703
    6. 'int' → logprob: -4.553821563720703
    7. '=int' → logprob: -5.178821563720703
    8. '   ' → logprob: -6.803821563720703
    9. '()
' → logprob: -7.553821563720703
    10. ')' → logprob: -7.928821563720703

Token 308: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011272875592112541
    2. 'return' (adapté à ' return') → logprob: -4.51127290725708
    3. ' int' → logprob: -8.511272430419922
    4. ' return' → logprob: -10.761272430419922
    5. '=int' → logprob: -13.011272430419922
    6. '   ' → logprob: -15.511272430419922
    7. '(int' → logprob: -17.386272430419922
    8. '
' → logprob: -17.636272430419922
    9. ' ' → logprob: -17.761272430419922
    10. 'ints' → logprob: -18.136272430419922

Token 309: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048170737922192
    2. ' int' → logprob: -4.511048316955566
    3. '	int' → logprob: -15.261048316955566
    4. ' ' → logprob: -16.88604736328125
    5. '(int' → logprob: -17.13604736328125
    6. '<int' → logprob: -18.51104736328125
    7. '=int' → logprob: -18.63604736328125
    8. ' ' → logprob: -19.01104736328125
    9. '[int' → logprob: -19.38604736328125
    10. 'in' → logprob: -19.63604736328125

Token 310: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0005897291121073067
    2. '(' → logprob: -7.500589847564697
    3. 'sys' → logprob: -10.250589370727539
    4. ' sys' → logprob: -14.375589370727539
    5. '(
' → logprob: -14.625589370727539
    6. '=sys' → logprob: -16.25058937072754
    7. '(Sys' → logprob: -16.37558937072754
    8. '	sys' → logprob: -16.50058937072754
    9. ' (' → logprob: -16.50058937072754
    10. '()' → logprob: -17.00058937072754

Token 311: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.6776029699249193e-05
    2. 'stdin' → logprob: -11.12502670288086
    3. '.readline' → logprob: -11.50002670288086
    4. '(stdin' → logprob: -14.00002670288086
    5. '.argv' → logprob: -14.50002670288086
    6. '.' → logprob: -15.25002670288086
    7. '.stdout' → logprob: -16.12502670288086
    8. ' stdin' → logprob: -16.37502670288086
    9. ' .' → logprob: -17.87502670288086
    10. '.std' → logprob: -18.62502670288086

Token 312: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.010712572373449802
    2. '().' → logprob: -5.010712623596191
    3. 'line' → logprob: -6.010712623596191
    4. '())' → logprob: -7.135712623596191
    5. 'ine' → logprob: -8.510712623596191
    6. '.stdin' → logprob: -8.635712623596191
    7. 'stdin' → logprob: -9.010712623596191
    8. '()' → logprob: -9.760712623596191
    9. 'read' → logprob: -9.885712623596191
    10. ' readline' → logprob: -10.010712623596191

Token 313: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4163915514945984
    2. '())' → logprob: -1.1663916110992432
    3. '()' → logprob: -3.541391611099243
    4. '.readline' → logprob: -9.291391372680664
    5. ')' → logprob: -11.791391372680664
    6. ' ())' → logprob: -12.166391372680664
    7. '();)' → logprob: -13.416391372680664
    8. '()
' → logprob: -13.416391372680664
    9. '(' → logprob: -13.541391372680664
    10. '()]' → logprob: -13.666391372680664

Token 314: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013344056205824018
    2. 'd' → logprob: -6.751334190368652
    3. '\' → logprob: -9.376334190368652
    4. 'n' → logprob: -10.251334190368652
    5. '#' → logprob: -10.876334190368652
    6. '\n' → logprob: -12.126334190368652
    7. ':' → logprob: -12.501334190368652
    8. 'ndef' → logprob: -13.126334190368652
    9. ' 
' → logprob: -13.251334190368652
    10. '    
' → logprob: -13.376334190368652

Token 315: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4770945906639099
    2. 'l' → logprob: -1.4770946502685547
    3. 'f' → logprob: -2.7270946502685547
    4. 'input' → logprob: -3.6020946502685547
    5. 'li' → logprob: -4.727094650268555
    6. 'main' → logprob: -5.102094650268555
    7. 'si' → logprob: -5.102094650268555
    8. 'i' → logprob: -5.352094650268555
    9. 'print' → logprob: -5.477094650268555
    10. ' s' → logprob: -5.477094650268555

Token 316: '():
' (ID: 8595)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.06223778426647186
    2. '()' → logprob: -3.9372377395629883
    3. 'tring' → logprob: -3.9372377395629883
    4. 'trip' → logprob: -4.312237739562988
    5. 'tri' → logprob: -6.062237739562988
    6. 'trim' → logprob: -6.562237739562988
    7. '():' → logprob: -6.937237739562988
    8. 'trin' → logprob: -6.937237739562988
    9. '().' → logprob: -7.812237739562988
    10. 'td' → logprob: -8.062237739562988

Token 317: '   ' (ID: 271)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0883384719491005
    2. 'return' → logprob: -2.9633383750915527
    3. '().' → logprob: -4.838338375091553
    4. '()' → logprob: -5.088338375091553
    5. '=sys' → logprob: -5.088338375091553
    6. '(sys' → logprob: -5.713338375091553
    7. 'rstrip' → logprob: -5.963338375091553
    8. ')' → logprob: -6.088338375091553
    9. '   ' → logprob: -6.588338375091553
    10. '.rstrip' → logprob: -7.088338375091553

Token 318: ' return' (ID: 622)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.652451464906335e-05
    2. 'input' → logprob: -11.500016212463379
    3. 'return' (adapté à ' return') → logprob: -12.250016212463379
    4. '=sys' → logprob: -14.000016212463379
    5. ' sys' → logprob: -14.375016212463379
    6. 'str' → logprob: -16.750017166137695
    7. 'strip' → logprob: -17.125017166137695
    8. 'rstrip' → logprob: -17.500017166137695
    9. '(sys' → logprob: -17.750017166137695
    10. '	sys' → logprob: -18.125017166137695

Token 319: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.1424973713001236e-05
    2. 'input' → logprob: -10.500031471252441
    3. ' sys' → logprob: -12.500031471252441
    4. 'str' → logprob: -16.875030517578125
    5. '(sys' → logprob: -17.625030517578125
    6. '	sys' → logprob: -19.500030517578125
    7. '=sys' → logprob: -19.750030517578125
    8. '   ' → logprob: -20.875030517578125
    9. '.sys' → logprob: -21.500030517578125
    10. ' input' → logprob: -22.000030517578125

Token 320: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007638567127287388
    2. '().' → logprob: -4.882638454437256
    3. '(' → logprob: -11.632638931274414
    4. ' ()' → logprob: -11.757638931274414
    5. '())' → logprob: -12.382638931274414
    6. '()
' → logprob: -12.382638931274414
    7. '()]' → logprob: -12.757638931274414
    8. ']()' → logprob: -14.632638931274414
    9. '()`' → logprob: -14.632638931274414
    10. '（）' → logprob: -14.632638931274414

Token 321: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008569653145968914
    2. 'd' → logprob: -5.633569717407227
    3. '#' → logprob: -6.008569717407227
    4. ':' → logprob: -6.258569717407227
    5. '.' → logprob: -9.508569717407227
    6. '<|end|>' → logprob: -9.508569717407227
    7. 'D' → logprob: -9.758569717407227
    8. '\' → logprob: -9.758569717407227
    9. ':def' → logprob: -9.758569717407227
    10. '\n' → logprob: -10.258569717407227

Token 322: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7749737501144409
    2. '_' → logprob: -1.524973750114441
    3. ' main' → logprob: -1.774973750114441
    4. 's' → logprob: -2.6499738693237305
    5. ' s' → logprob: -3.6499738693237305
    6. ' t' → logprob: -4.6499738693237305
    7. '  ' → logprob: -5.0249738693237305
    8. ' print' → logprob: -5.1499738693237305
    9. ' p' → logprob: -5.3999738693237305
    10. 'r' → logprob: -5.8999738693237305

Token 323: '_list' (ID: 4162)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.030334200710058212
    2. '()' → logprob: -4.405333995819092
    3. 'tr' → logprob: -5.155333995819092
    4. 'strip' → logprob: -5.780333995819092
    5. 'trip' → logprob: -5.905333995819092
    6. 't' → logprob: -6.405333995819092
    7. 'plit' → logprob: -6.780333995819092
    8. 'trim' → logprob: -7.030333995819092
    9. 'tring' → logprob: -7.530333995819092
    10. 'split' → logprob: -7.655333995819092

Token 324: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002467966405674815
    2. '():
' → logprob: -8.87524700164795
    3. '()' → logprob: -9.87524700164795
    4. ' ():' → logprob: -9.87524700164795
    5. ' ()' → logprob: -13.37524700164795
    6. '():

' → logprob: -13.75024700164795
    7. '(' → logprob: -14.50024700164795
    8. '()[' → logprob: -15.62524700164795
    9. '();' → logprob: -15.87524700164795
    10. '():
' → logprob: -16.500246047973633

Token 325: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01000786479562521
    2. '():
' → logprob: -4.635007858276367
    3. '()' → logprob: -8.510007858276367
    4. '():

' → logprob: -11.510007858276367
    5. ' ():' → logprob: -11.510007858276367
    6. ':' → logprob: -11.885007858276367
    7. '()[' → logprob: -11.885007858276367
    8. '():
' → logprob: -12.385007858276367
    9. '().' → logprob: -13.010007858276367
    10. ' =' → logprob: -13.135007858276367

Token 326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5987823605537415
    2. 'list' → logprob: -0.8487823605537415
    3. 's' → logprob: -4.473782539367676
    4. 'sys' → logprob: -5.223782539367676
    5. ' return' → logprob: -6.098782539367676
    6. 'input' → logprob: -6.348782539367676
    7. ' list' → logprob: -6.473782539367676
    8. '[]' → logprob: -8.973782539367676
    9. '   ' → logprob: -10.098782539367676
    10. '[s' → logprob: -10.973782539367676

Token 327: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011672453256323934
    2. 'sys' → logprob: -7.251167297363281
    3. 'input' → logprob: -8.501167297363281
    4. ' list' → logprob: -9.126167297363281
    5. '[list' → logprob: -9.251167297363281
    6. 's' → logprob: -10.376167297363281
    7. '[input' → logprob: -11.626167297363281
    8. '[s' → logprob: -11.876167297363281
    9. '[' → logprob: -13.376167297363281
    10. '(list' → logprob: -14.876167297363281

Token 328: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0695505365729332
    2. '(s' → logprob: -3.0695505142211914
    3. '(map' → logprob: -3.9445505142211914
    4. '(str' → logprob: -7.444550514221191
    5. '()' → logprob: -7.569550514221191
    6. '(' → logprob: -8.319550514221191
    7. 'input' → logprob: -10.569550514221191
    8. 'map' → logprob: -12.194550514221191
    9. 's' → logprob: -12.444550514221191
    10. '(sys' → logprob: -13.319550514221191

Token 329: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00021390743495430797
    2. '()' → logprob: -8.625213623046875
    3. '().' → logprob: -11.000213623046875
    4. ' ())' → logprob: -11.125213623046875
    5. '()))' → logprob: -13.750213623046875
    6. '();)' → logprob: -14.125213623046875
    7. ')' → logprob: -14.875213623046875
    8. '()]' → logprob: -15.250213623046875
    9. '()[' → logprob: -16.500213623046875
    10. '()),' → logprob: -16.875213623046875

Token 330: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019628899171948433
    2. '#' → logprob: -7.376962661743164
    3. '<|end|>' → logprob: -7.501962661743164
    4. '\' → logprob: -8.626962661743164
    5. '<|end|>' → logprob: -9.001962661743164
    6. '
' → logprob: -9.001962661743164
    7. 'class' → logprob: -9.501962661743164
    8. '\n' → logprob: -9.626962661743164
    9. '_' → logprob: -10.501962661743164
    10. 'de' → logprob: -10.501962661743164

Token 331: ' hi' (ID: 5911)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.1225805282592773
    2. 'main' → logprob: -1.9975805282592773
    3. 'print' → logprob: -3.1225805282592773
    4. 'i' → logprob: -3.3725805282592773
    5. 's' → logprob: -3.4975805282592773
    6. ' l' → logprob: -3.6225805282592773
    7. 'p' → logprob: -3.6225805282592773
    8. ' print' → logprob: -3.6225805282592773
    9. 'd' → logprob: -3.6225805282592773
    10. ' s' → logprob: -3.7475805282592773

Token 332: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.36977192759513855
    2. '():
' → logprob: -1.244771957397461
    3. '()' → logprob: -4.369771957397461
    4. 'gh' → logprob: -5.869771957397461
    5. 'nt' → logprob: -6.119771957397461
    6. 'st' → logprob: -6.994771957397461
    7. 'de' → logprob: -7.119771957397461
    8. 'def' → logprob: -8.369771957397461
    9. '():
' → logprob: -8.369771957397461
    10. 'range' → logprob: -8.619771957397461

Token 333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002031827752944082
    2. '):
' → logprob: -9.000203132629395
    3. ')' → logprob: -9.750203132629395
    4. ':' → logprob: -11.625203132629395
    5. ' ):' → logprob: -11.625203132629395
    6. ',' → logprob: -13.500203132629395
    7. '=' → logprob: -14.250203132629395
    8. '):
' → logprob: -14.250203132629395
    9. '():' → logprob: -16.12520408630371
    10. '):

' → logprob: -16.37520408630371

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06390789151191711
    2. 'return' → logprob: -2.9389078617095947
    3. 'for' → logprob: -5.063908100128174
    4. ' return' → logprob: -6.188908100128174
    5. ' for' → logprob: -7.938908100128174
    6. '	return' → logprob: -9.438907623291016
    7. 'def' → logprob: -9.938907623291016
    8. 'ret' → logprob: -10.313907623291016
    9. 'res' → logprob: -10.938907623291016
    10. 'heap' → logprob: -11.063907623291016

Token 335: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020137958228588104
    2. 'for' → logprob: -4.145137786865234
    3. 'heap' → logprob: -5.770137786865234
    4. '[' → logprob: -7.645137786865234
    5. ' return' → logprob: -8.770137786865234
    6. 'def' → logprob: -9.020137786865234
    7. 'arr' → logprob: -10.520137786865234
    8. 'res' → logprob: -10.520137786865234
    9. 'ret' → logprob: -10.770137786865234
    10. 'a' → logprob: -10.770137786865234

Token 336: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19637998938560486
    2. '[int' → logprob: -2.0713798999786377
    3. '[list' → logprob: -4.196380138397217
    4. 'heap' → logprob: -4.321380138397217
    5. '[i' → logprob: -4.446380138397217
    6. '[random' → logprob: -5.696380138397217
    7. '[n' → logprob: -6.071380138397217
    8. 'list' → logprob: -6.196380138397217
    9. '[h' → logprob: -6.821380138397217
    10. '[len' → logprob: -7.196380138397217

Token 337: 'i' (ID: 72)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03942924365401268
    2. 'list' → logprob: -3.289429187774658
    3. 'i' → logprob: -6.664429187774658
    4. '0' → logprob: -9.539429664611816
    5. '[int' → logprob: -11.039429664611816
    6. 'tuple' → logprob: -11.914429664611816
    7. '[]' → logprob: -12.164429664611816
    8. 'input' → logprob: -12.539429664611816
    9. 's' → logprob: -12.664429664611816
    10. '[i' → logprob: -13.539429664611816

Token 338: '()' (ID: 416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11533531546592712
    2. 'n' → logprob: -2.61533522605896
    3. 'for' → logprob: -3.86533522605896
    4. 'nt' → logprob: -4.365335464477539
    5. '+' → logprob: -6.490335464477539
    6. ']' → logprob: -8.490335464477539
    7. ' ' → logprob: -9.240335464477539
    8. '()' → logprob: -9.740335464477539
    9. '
' → logprob: -10.240335464477539
    10. '   ' → logprob: -10.490335464477539

Token 339: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1269456297159195
    2. ' for' → logprob: -2.126945734024048
    3. '()' → logprob: -11.376945495605469
    4. '	for' → logprob: -12.376945495605469
    5. 'n' → logprob: -14.251945495605469
    6. '   ' → logprob: -14.376945495605469
    7. '```' → logprob: -15.751945495605469
    8. '(n' → logprob: -16.00194549560547
    9. ' ' → logprob: -16.12694549560547
    10. ')' → logprob: -16.37694549560547

Token 340: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01829381100833416
    2. ' range' → logprob: -4.518293857574463
    3. ' _' → logprob: -5.393293857574463
    4. 'range' → logprob: -6.018293857574463
    5. '_range' → logprob: -8.893293380737305
    6. ' ' → logprob: -10.268293380737305
    7. 'i' → logprob: -10.268293380737305
    8. ' in' → logprob: -11.143293380737305
    9. '	range' → logprob: -12.393293380737305
    10. 'in' → logprob: -13.143293380737305

Token 341: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021867557370569557
    2. ' range' → logprob: -8.875218391418457
    3. '_range' → logprob: -9.875218391418457
    4. '_' → logprob: -10.625218391418457
    5. 'in' → logprob: -13.500218391418457
    6. '	range' → logprob: -13.750218391418457
    7. 'rang' → logprob: -16.125219345092773
    8. '_r' → logprob: -16.375219345092773
    9. 'r' → logprob: -16.500219345092773
    10. '(range' → logprob: -16.625219345092773

Token 342: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.061054359131958e-06
    2. ' range' → logprob: -11.750007629394531
    3. '	range' → logprob: -17.12500762939453
    4. '(range' → logprob: -17.87500762939453
    5. 'rang' → logprob: -17.87500762939453
    6. 'ran' → logprob: -18.37500762939453
    7. 'r' → logprob: -18.87500762939453
    8. 'ra' → logprob: -19.00000762939453
    9. '_range' → logprob: -20.50000762939453
    10. '
' → logprob: -21.25000762939453

Token 343: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0564331205387134e-05
    2. 'n' → logprob: -12.25001049041748
    3. '(' → logprob: -12.50001049041748
    4. ' n' → logprob: -13.37501049041748
    5. '	n' → logprob: -14.87501049041748
    6. ' (' → logprob: -17.250011444091797
    7. '(
' → logprob: -18.125011444091797
    8. ')n' → logprob: -19.125011444091797
    9. ',n' → logprob: -19.625011444091797
    10. '   ' → logprob: -19.625011444091797

Token 344: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.264322317088954e-05
    2. ')' → logprob: -10.500052452087402
    3. ']' → logprob: -10.625052452087402
    4. ')]
' → logprob: -15.500052452087402
    5. ' )' → logprob: -15.875052452087402
    6. '()]' → logprob: -16.50005340576172
    7. '   ' → logprob: -16.62505340576172
    8. ' ' → logprob: -17.25005340576172
    9. ' ]' → logprob: -17.50005340576172
    10. '}]' → logprob: -17.62505340576172

Token 345: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.877503907773644e-05
    2. '#' → logprob: -10.000099182128906
    3. 'd' → logprob: -11.500099182128906
    4. '<|end|>' → logprob: -11.500099182128906
    5. ')' → logprob: -12.000099182128906
    6. '
' → logprob: -12.500099182128906
    7. '<|end|>' → logprob: -12.625099182128906
    8. '```' → logprob: -12.875099182128906
    9. 'for' → logprob: -13.250099182128906
    10. ']' → logprob: -13.500099182128906

Token 346: ' hs' (ID: 59089)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.20943772792816162
    2. 'w' → logprob: -2.334437847137451
    3. 'hs' → logprob: -2.834437847137451
    4. 'li' → logprob: -4.709437847137451
    5. 'hi' → logprob: -4.834437847137451
    6. 'ws' → logprob: -4.834437847137451
    7. 'si' → logprob: -5.584437847137451
    8. 'h' → logprob: -5.834437847137451
    9. 'hf' → logprob: -8.584437370300293
    10. 'mi' → logprob: -8.709437370300293

Token 347: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003362966235727072
    2. '(' → logprob: -8.375336647033691
    3. 's' → logprob: -10.125336647033691
    4. 'def' → logprob: -10.250336647033691
    5. '(s' → logprob: -11.375336647033691
    6. '(lambda' → logprob: -11.625336647033691
    7. '(int' → logprob: -12.750336647033691
    8. '(i' → logprob: -13.375336647033691
    9. ' (' → logprob: -13.875336647033691
    10. '=lambda' → logprob: -14.125336647033691

Token 348: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014069711789488792
    2. '):
' → logprob: -4.389069557189941
    3. '(n' → logprob: -6.764069557189941
    4. ')' → logprob: -7.889069557189941
    5. '):
' → logprob: -11.389069557189941
    6. 'def' → logprob: -11.889069557189941
    7. ':' → logprob: -12.764069557189941
    8. '):

' → logprob: -12.889069557189941
    9. ' ):' → logprob: -13.014069557189941
    10. '(' → logprob: -13.389069557189941

Token 349: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3155877888202667
    2. '   ' → logprob: -1.4405877590179443
    3. 'def' → logprob: -3.5655877590179443
    4. '(' → logprob: -6.565587997436523
    5. ':' → logprob: -7.315587997436523
    6. '(s' → logprob: -7.440587997436523
    7. ' =' → logprob: -7.565587997436523
    8. ' def' → logprob: -7.565587997436523
    9. '(
' → logprob: -8.315587997436523
    10. 'n' → logprob: -8.440587997436523

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5339905619621277
    2. 'def' → logprob: -1.0339906215667725
    3. ' return' → logprob: -3.6589906215667725
    4. '[' → logprob: -3.7839906215667725
    5. '   ' → logprob: -4.908990383148193
    6. '[
' → logprob: -7.033990383148193
    7. ' def' → logprob: -7.408990383148193
    8. '[n' → logprob: -7.908990383148193
    9. '[i' → logprob: -8.783990859985352
    10. 'for' → logprob: -9.408990859985352

Token 351: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.030086694285273552
    2. '[' → logprob: -3.5300867557525635
    3. '[str' → logprob: -9.030086517333984
    4. ' [' → logprob: -9.280086517333984
    5. '[input' → logprob: -9.530086517333984
    6. '[string' → logprob: -10.655086517333984
    7. '[i' → logprob: -11.405086517333984
    8. '[int' → logprob: -11.780086517333984
    9. '[list' → logprob: -12.280086517333984
    10. '   ' → logprob: -14.405086517333984

Token 352: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.696889623621246e-06
    2. 'input' → logprob: -12.87500286102295
    3. 'sys' → logprob: -16.750001907348633
    4. '(s' → logprob: -16.875001907348633
    5. ' s' → logprob: -17.625001907348633
    6. '()' → logprob: -18.375001907348633
    7. '(input' → logprob: -19.500001907348633
    8. '   ' → logprob: -20.375001907348633
    9. '_s' → logprob: -21.000001907348633
    10. '(' → logprob: -21.125001907348633

Token 353: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.128163257315464e-07
    2. '().' → logprob: -16.625
    3. '()]' → logprob: -16.875
    4. '()
' → logprob: -17.0
    5. ' ()' → logprob: -17.375
    6. '(' → logprob: -18.625
    7. '()`' → logprob: -19.875
    8. '（）' → logprob: -20.0
    9. '()<<' → logprob: -20.5
    10. '()[' → logprob: -20.875

Token 354: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22036752104759216
    2. '()' → logprob: -1.9703675508499146
    3. ' for' → logprob: -2.970367431640625
    4. '(n' → logprob: -4.970367431640625
    5. '   ' → logprob: -9.595367431640625
    6. '	for' → logprob: -10.095367431640625
    7. 'n' → logprob: -10.970367431640625
    8. '(' → logprob: -11.845367431640625
    9. ' ()' → logprob: -11.970367431640625
    10. '(i' → logprob: -13.470367431640625

Token 355: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1875571544806007e-05
    2. ' _' → logprob: -11.750011444091797
    3. ' range' → logprob: -12.625011444091797
    4. '_range' → logprob: -15.000011444091797
    5. 'range' → logprob: -15.625011444091797
    6. ' in' → logprob: -16.375011444091797
    7. '_
' → logprob: -19.750011444091797
    8. '_
' → logprob: -20.000011444091797
    9. '_=' → logprob: -20.625011444091797
    10. '_]' → logprob: -21.125011444091797

Token 356: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04163459315896034
    2. ' range' → logprob: -4.291634559631348
    3. '_' → logprob: -4.541634559631348
    4. 'in' → logprob: -4.541634559631348
    5. ' in' → logprob: -5.166634559631348
    6. '_range' → logprob: -9.666634559631348
    7. 'i' → logprob: -11.916634559631348
    8. 'n' → logprob: -12.041634559631348
    9. '(range' → logprob: -12.541634559631348
    10. '_in' → logprob: -15.291634559631348

Token 357: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005533903022296727
    2. ' range' → logprob: -7.500553607940674
    3. '_' → logprob: -15.875553131103516
    4. '(range' → logprob: -16.500553131103516
    5. '_range' → logprob: -16.750553131103516
    6. '	range' → logprob: -18.500553131103516
    7. 'in' → logprob: -20.125553131103516
    8. 'rang' → logprob: -20.625553131103516
    9. 'r' → logprob: -20.750553131103516
    10. ' in' → logprob: -21.125553131103516

Token 358: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -11.12503433227539
    3. 'range' → logprob: -11.62503433227539
    4. 'n' → logprob: -12.00003433227539
    5. '(range' → logprob: -12.37503433227539
    6. ' range' → logprob: -15.12503433227539
    7. ' (' → logprob: -16.62503433227539
    8. ' n' → logprob: -18.37503433227539
    9. '(
' → logprob: -20.25003433227539
    10. '(i' → logprob: -20.75003433227539

Token 359: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8889261304575484e-06
    2. ']' → logprob: -12.750003814697266
    3. '()]' → logprob: -14.875003814697266
    4. ')' → logprob: -15.500003814697266
    5. ')]
' → logprob: -15.500003814697266
    6. '')]' → logprob: -17.250003814697266
    7. '])]' → logprob: -17.875003814697266
    8. '}]' → logprob: -18.125003814697266
    9. 'def' → logprob: -18.500003814697266
    10. ')],' → logprob: -18.750003814697266

Token 360: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.034592388459714e-06
    2. '#' → logprob: -13.000005722045898
    3. 'class' → logprob: -13.000005722045898
    4. 'from' → logprob: -14.625005722045898
    5. '@' → logprob: -15.125005722045898
    6. ' def' → logprob: -15.875005722045898
    7. 'd' → logprob: -16.0000057220459
    8. '
' → logprob: -16.2500057220459
    9. 'for' → logprob: -16.5000057220459
    10. '<|end|>' → logprob: -16.8750057220459

Token 361: ' mi' (ID: 3997)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.564224362373352
    2. 'main' → logprob: -1.814224362373352
    3. 'hi' → logprob: -2.5642242431640625
    4. 'h' → logprob: -2.9392242431640625
    5. 'ws' → logprob: -3.1892242431640625
    6. 'w' → logprob: -4.0642242431640625
    7. 'g' → logprob: -4.0642242431640625
    8. 'print' → logprob: -4.6892242431640625
    9. 'hl' → logprob: -5.1892242431640625
    10. 'ho' → logprob: -5.4392242431640625

Token 362: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017922651022672653
    2. '()' → logprob: -9.125179290771484
    3. '():
' → logprob: -10.750179290771484
    4. '():' → logprob: -11.250179290771484
    5. 'ult' → logprob: -12.125179290771484
    6. '(' → logprob: -12.250179290771484
    7. 'x' → logprob: -12.375179290771484
    8. 'ulti' → logprob: -12.750179290771484
    9. 'def' → logprob: -13.000179290771484
    10. 't' → logprob: -13.000179290771484

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009791743941605091
    2. '):
' → logprob: -4.634791851043701
    3. ')' → logprob: -10.509791374206543
    4. ':' → logprob: -13.009791374206543
    5. '(n' → logprob: -13.009791374206543
    6. '):
' → logprob: -13.509791374206543
    7. ' ):' → logprob: -13.884791374206543
    8. 'def' → logprob: -14.259791374206543
    9. '):

' → logprob: -14.884791374206543
    10. ',' → logprob: -15.134791374206543

Token 364: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8658382296562195
    2. ' return' → logprob: -1.1158382892608643
    3. '   ' → logprob: -1.4908382892608643
    4. '[]' → logprob: -4.240838050842285
    5. '[' → logprob: -4.990838050842285
    6. 'def' → logprob: -5.365838050842285
    7. '[]
' → logprob: -8.740838050842285
    8. '{}' → logprob: -9.365838050842285
    9. '=' → logprob: -9.990838050842285
    10. ' def' → logprob: -9.990838050842285

Token 365: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14094123244285583
    2. '[' → logprob: -2.1409411430358887
    3. 'def' → logprob: -4.515941143035889
    4. '[]' → logprob: -6.515941143035889
    5. ' return' → logprob: -7.015941143035889
    6. '[[' → logprob: -8.890941619873047
    7. '   ' → logprob: -9.140941619873047
    8. '[int' → logprob: -9.265941619873047
    9. '[i' → logprob: -9.640941619873047
    10. ' [' → logprob: -9.765941619873047

Token 366: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0719771757721901
    2. '[int' → logprob: -3.071977138519287
    3. '[' → logprob: -4.321977138519287
    4. 'list' → logprob: -5.321977138519287
    5. '[m' → logprob: -5.821977138519287
    6. '[i' → logprob: -6.946977138519287
    7. ' [' → logprob: -7.321977138519287
    8. '[List' → logprob: -8.696977615356445
    9. '[[' → logprob: -10.071977615356445
    10. '[s' → logprob: -10.446977615356445

Token 367: 'wi' (ID: 7491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0037156417965888977
    2. 'map' → logprob: -5.753715515136719
    3. 'wi' → logprob: -7.753715515136719
    4. 'w' → logprob: -9.253715515136719
    5. 'li' → logprob: -12.253715515136719
    6. 'int' → logprob: -12.628715515136719
    7. ' list' → logprob: -13.503715515136719
    8. '[' → logprob: -14.378715515136719
    9. '[int' → logprob: -14.503715515136719
    10. '[list' → logprob: -14.503715515136719

Token 368: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038086701184511185
    2. '()' → logprob: -3.2880866527557373
    3. '(' → logprob: -10.288086891174316
    4. '(i' → logprob: -12.038086891174316
    5. '()]' → logprob: -13.288086891174316
    6. ' ()' → logprob: -13.788086891174316
    7. 'for' → logprob: -13.788086891174316
    8. ' (' → logprob: -13.913086891174316
    9. '()(' → logprob: -15.288086891174316
    10. 'n' → logprob: -15.413086891174316

Token 369: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14347070455551147
    2. ' for' → logprob: -2.5184707641601562
    3. '(n' → logprob: -3.0184707641601562
    4. '()' → logprob: -5.518470764160156
    5. '	for' → logprob: -9.768470764160156
    6. '(' → logprob: -9.893470764160156
    7. ')' → logprob: -9.893470764160156
    8. '   ' → logprob: -11.518470764160156
    9. 'n' → logprob: -12.268470764160156
    10. ' (' → logprob: -12.893470764160156

Token 370: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07181421667337418
    2. ' range' → logprob: -3.0718142986297607
    3. ' _' → logprob: -3.8218142986297607
    4. 'range' → logprob: -7.196814060211182
    5. '_range' → logprob: -8.07181453704834
    6. ' in' → logprob: -11.69681453704834
    7. '(range' → logprob: -13.69681453704834
    8. ' _
' → logprob: -15.94681453704834
    9. '	range' → logprob: -16.071813583374023
    10. ' xrange' → logprob: -16.196813583374023

Token 371: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011561851017177105
    2. ' range' → logprob: -4.511561870574951
    3. '_range' → logprob: -7.761561870574951
    4. '_' → logprob: -9.386561393737793
    5. '(range' → logprob: -12.636561393737793
    6. '	range' → logprob: -14.011561393737793
    7. 'in' → logprob: -16.88656234741211
    8. ' in' → logprob: -17.13656234741211
    9. '_in' → logprob: -18.01156234741211
    10. ' _' → logprob: -18.13656234741211

Token 372: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.630233764648438
    4. '_range' → logprob: -16.755233764648438
    5. '	range' → logprob: -18.880233764648438
    6. '_' → logprob: -21.505233764648438
    7. '.range' → logprob: -22.630233764648438
    8. 'n' → logprob: -22.630233764648438
    9. ' ' → logprob: -23.005233764648438
    10. 'rang' → logprob: -23.130233764648438

Token 373: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006159355980344117
    2. '(' → logprob: -8.000616073608398
    3. '(range' → logprob: -9.000616073608398
    4. ' range' → logprob: -9.250616073608398
    5. 'range' → logprob: -9.875616073608398
    6. 'n' → logprob: -11.625616073608398
    7. ' (' → logprob: -15.000616073608398
    8. ' n' → logprob: -15.375616073608398
    9. ' in' → logprob: -16.2506160736084
    10. '_range' → logprob: -16.3756160736084

Token 374: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014505229890346527
    2. ']' → logprob: -4.264505386352539
    3. ')' → logprob: -8.014505386352539
    4. '()]' → logprob: -11.639505386352539
    5. '])]' → logprob: -14.014505386352539
    6. '])' → logprob: -14.514505386352539
    7. ')])' → logprob: -15.014505386352539
    8. ')],' → logprob: -15.514505386352539
    9. ' ]' → logprob: -16.26450538635254
    10. '`]' → logprob: -16.76450538635254

Token 375: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045557913836091757
    2. '#' → logprob: -8.000455856323242
    3. '```' → logprob: -10.250455856323242
    4. 'class' → logprob: -11.125455856323242
    5. '<|end|>' → logprob: -11.375455856323242
    6. 'd' → logprob: -11.500455856323242
    7. '
' → logprob: -11.625455856323242
    8. '\' → logprob: -11.750455856323242
    9. '[' → logprob: -11.875455856323242
    10. '<|end|>' → logprob: -12.375455856323242

Token 376: ' num' (ID: 2269)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.044236920773983
    2. 'hs' → logprob: -3.169236898422241
    3. 'm' → logprob: -6.91923713684082
    4. 's' → logprob: -9.54423713684082
    5. ' ms' → logprob: -9.79423713684082
    6. 'h' → logprob: -9.79423713684082
    7. 'si' → logprob: -11.79423713684082
    8. 'def' → logprob: -11.91923713684082
    9. 'mi' → logprob: -12.04423713684082
    10. 'pi' → logprob: -12.29423713684082

Token 377: '_grid' (ID: 34614)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.1265668421983719
    2. '_threads' → logprob: -3.6265668869018555
    3. '_inputs' → logprob: -4.0015668869018555
    4. '_to' → logprob: -4.6265668869018555
    5. '_tokens' → logprob: -4.7515668869018555
    6. '_items' → logprob: -5.6265668869018555
    7. '_of' → logprob: -5.7515668869018555
    8. '_samples' → logprob: -6.1265668869018555
    9. 'ba' → logprob: -6.1265668869018555
    10. '_lines' → logprob: -6.1265668869018555

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00025633294717408717
    2. '(' → logprob: -8.750256538391113
    3. ' (' → logprob: -9.875256538391113
    4. 'def' → logprob: -11.125256538391113
    5. '():' → logprob: -11.125256538391113
    6. '(N' → logprob: -12.000256538391113
    7. '(size' → logprob: -12.625256538391113
    8. '():
' → logprob: -13.375256538391113
    9. '(
' → logprob: -14.125256538391113
    10. '(row' → logprob: -14.375256538391113

Token 379: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16247610747814178
    2. '):' → logprob: -1.9124760627746582
    3. '):
' → logprob: -6.662476062774658
    4. ')' → logprob: -7.037476062774658
    5. ',m' → logprob: -10.537476539611816
    6. ':' → logprob: -11.162476539611816
    7. ',n' → logprob: -11.412476539611816
    8. ',
' → logprob: -11.787476539611816
    9. ' ,' → logprob: -11.787476539611816
    10. '):
' → logprob: -12.412476539611816

Token 380: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9340461492538452
    2. '():' → logprob: -1.8090461492538452
    3. '():
' → logprob: -2.1840462684631348
    4. '   ' → logprob: -2.3090462684631348
    5. ':
' → logprob: -2.3090462684631348
    6. ':' → logprob: -2.8090462684631348
    7. 'def' → logprob: -3.3090462684631348
    8. 'return' → logprob: -4.934046268463135
    9. '=' → logprob: -5.059046268463135
    10. ' =' → logprob: -5.184046268463135

Token 381: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11321327090263367
    2. 'return' (adapté à ' return') → logprob: -2.613213300704956
    3. 'def' → logprob: -4.113213062286377
    4. '[]' → logprob: -4.488213062286377
    5. '[[' → logprob: -6.238213062286377
    6. '[w' → logprob: -7.113213062286377
    7. '[i' → logprob: -7.238213062286377
    8. '[int' → logprob: -7.988213062286377
    9. '[list' → logprob: -8.238213539123535
    10. '[row' → logprob: -8.363213539123535

Token 382: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4634764790534973
    2. '[list' → logprob: -1.7134764194488525
    3. '[array' → logprob: -2.4634764194488525
    4. '[[' → logprob: -3.4634764194488525
    5. '[int' → logprob: -3.4634764194488525
    6. '[num' → logprob: -3.4634764194488525
    7. '[i' → logprob: -5.213476657867432
    8. '[n' → logprob: -6.588476657867432
    9. '[m' → logprob: -6.588476657867432
    10. '[w' → logprob: -7.463476657867432

Token 383: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5785802602767944
    2. '0' → logprob: -0.8285802602767944
    3. 'i' → logprob: -5.953580379486084
    4. '*' → logprob: -11.078579902648926
    5. '
' → logprob: -11.828579902648926
    6. ' int' → logprob: -12.328579902648926
    7. ']' → logprob: -12.578579902648926
    8. ' ' → logprob: -13.203579902648926
    9. ']int' → logprob: -13.203579902648926
    10. 'None' → logprob: -13.703579902648926

Token 384: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015339049277827144
    2. '(c' → logprob: -6.5015339851379395
    3. '(ch' → logprob: -11.001533508300781
    4. ']' → logprob: -11.626533508300781
    5. '(' → logprob: -13.251533508300781
    6. '(_)' → logprob: -13.501533508300781
    7. 'x' → logprob: -13.876533508300781
    8. '(i' → logprob: -14.876533508300781
    9. '()' → logprob: -15.126533508300781
    10. '()]' → logprob: -15.626533508300781

Token 385: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07913730293512344
    2. ')' → logprob: -2.7041373252868652
    3. '(x' → logprob: -5.204137325286865
    4. '()' → logprob: -5.829137325286865
    5. 'x' → logprob: -7.829137325286865
    6. 'char' → logprob: -8.829136848449707
    7. 'c' → logprob: -9.704136848449707
    8. '()]' → logprob: -10.704136848449707
    9. '(c' → logprob: -10.954136848449707
    10. '())
' → logprob: -11.329136848449707

Token 386: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6214752197265625
    2. 'for' → logprob: -1.3714752197265625
    3. ')' → logprob: -1.6214752197265625
    4. '())' → logprob: -4.6214752197265625
    5. ' for' → logprob: -7.1214752197265625
    6. '()]' → logprob: -8.371475219726562
    7. '(x' → logprob: -8.496475219726562
    8. 'in' → logprob: -8.746475219726562
    9. ']' → logprob: -9.871475219726562
    10. 'char' → logprob: -10.371475219726562

Token 387: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28731393814086914
    2. 'i' → logprob: -1.4123139381408691
    3. 's' → logprob: -6.037313938140869
    4. 'in' → logprob: -6.912313938140869
    5. '__' → logprob: -7.162313938140869
    6. 'input' → logprob: -7.412313938140869
    7. 'x' → logprob: -7.662313938140869
    8. 'c' → logprob: -8.287313461303711
    9. 'sys' → logprob: -8.912313461303711
    10. '_i' → logprob: -9.037313461303711

Token 388: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10401815921068192
    2. ' in' → logprob: -2.354018211364746
    3. 's' → logprob: -5.604018211364746
    4. '_' → logprob: -10.104018211364746
    5. 'row' → logprob: -11.354018211364746
    6. 'sys' → logprob: -11.354018211364746
    7. 'input' → logprob: -11.854018211364746
    8. '(s' → logprob: -11.854018211364746
    9. '()' → logprob: -12.229018211364746
    10. '(sys' → logprob: -12.479018211364746

Token 389: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07014071941375732
    2. 'input' → logprob: -3.320140838623047
    3. 's' → logprob: -3.570140838623047
    4. ' sys' → logprob: -6.320140838623047
    5. 'ws' → logprob: -7.195140838623047
    6. 'w' → logprob: -8.070140838623047
    7. 'range' → logprob: -8.570140838623047
    8. 'wi' → logprob: -8.820140838623047
    9. ' input' → logprob: -9.070140838623047
    10. 'list' → logprob: -9.320140838623047

Token 390: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000464035285403952
    2. 'stdin' → logprob: -7.750463962554932
    3. '(stdin' → logprob: -11.00046443939209
    4. '.readline' → logprob: -11.75046443939209
    5. 'sys' → logprob: -13.12546443939209
    6. '=sys' → logprob: -13.75046443939209
    7. 'in' → logprob: -13.75046443939209
    8. 'import' → logprob: -13.87546443939209
    9. 's' → logprob: -13.87546443939209
    10. 'input' → logprob: -14.37546443939209

Token 391: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008986006141640246
    2. '().' → logprob: -7.375898838043213
    3. '.' → logprob: -8.250898361206055
    4. '   ' → logprob: -12.875898361206055
    5. 'sys' → logprob: -13.000898361206055
    6. 'read' → logprob: -13.750898361206055
    7. '()' → logprob: -13.750898361206055
    8. '=sys' → logprob: -14.000898361206055
    9. 'stdin' → logprob: -14.125898361206055
    10. '.stdin' → logprob: -14.375898361206055

Token 392: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008687060908414423
    2. '()' → logprob: -7.250868797302246
    3. '()]' → logprob: -9.000868797302246
    4. '.strip' → logprob: -11.125868797302246
    5. '()]
' → logprob: -13.000868797302246
    6. '.readline' → logprob: -13.250868797302246
    7. '(' → logprob: -13.250868797302246
    8. '.rstrip' → logprob: -13.250868797302246
    9. 'strip' → logprob: -13.375868797302246
    10. '()[' → logprob: -13.500868797302246

Token 393: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12397661805152893
    2. 'rstrip' → logprob: -2.623976707458496
    3. 'strip' → logprob: -3.123976707458496
    4. 'decode' → logprob: -9.498976707458496
    5. 'read' → logprob: -10.748976707458496
    6. 's' → logprob: -12.498976707458496
    7. 'sys' → logprob: -13.873976707458496
    8. 'replace' → logprob: -14.373976707458496
    9. ' split' → logprob: -14.373976707458496
    10. 'range' → logprob: -14.498976707458496

Token 394: '()[' (ID: 20778)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0011743901995941997
    2. '()' → logprob: -6.751174449920654
    3. '()[' → logprob: -13.126173973083496
    4. '()]
' → logprob: -13.751173973083496
    5. '()],' → logprob: -15.001173973083496
    6. '())' → logprob: -15.376173973083496
    7. '()][' → logprob: -15.626173973083496
    8. '(' → logprob: -15.751173973083496
    9. ' ()' → logprob: -15.876173973083496
    10. '()}' → logprob: -16.626174926757812

Token 395: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04577924311161041
    2. ':j' → logprob: -4.170779228210449
    3. ':i' → logprob: -4.545779228210449
    4. ':n' → logprob: -4.670779228210449
    5. ':]' → logprob: -5.295779228210449
    6. ':x' → logprob: -6.795779228210449
    7. ']]' → logprob: -7.420779228210449
    8. '::' → logprob: -8.17077922821045
    9. ':length' → logprob: -8.17077922821045
    10. ':k' → logprob: -8.42077922821045

Token 396: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3008124828338623
    2. 'n' → logprob: -1.9258124828338623
    3. '][:' → logprob: -2.8008124828338623
    4. ':n' → logprob: -3.1758124828338623
    5. '[:' → logprob: -5.175812721252441
    6. ']' → logprob: -5.925812721252441
    7. '(n' → logprob: -6.550812721252441
    8. ':' → logprob: -7.425812721252441
    9. '])]' → logprob: -8.925812721252441
    10. ' n' → logprob: -9.175812721252441

Token 397: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5766366124153137
    2. 'for' → logprob: -0.8266366124153137
    3. ']' → logprob: -8.32663631439209
    4. '	for' → logprob: -8.45163631439209
    5. '()' → logprob: -9.20163631439209
    6. '   ' → logprob: -9.57663631439209
    7. '()]' → logprob: -11.20163631439209
    8. '           ' → logprob: -11.32663631439209
    9. '[:]' → logprob: -12.20163631439209
    10. '            ' → logprob: -12.32663631439209

Token 398: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.474772185087204
    2. ' range' → logprob: -0.9747722148895264
    3. '_' → logprob: -7.474771976470947
    4. '_range' → logprob: -8.974772453308105
    5. '	range' → logprob: -13.974772453308105
    6. '(range' → logprob: -15.974772453308105
    7. '_r' → logprob: -16.59977149963379
    8. ' _' → logprob: -17.09977149963379
    9. '.range' → logprob: -17.72477149963379
    10. ' ' → logprob: -17.84977149963379

Token 399: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026181264547631145
    2. ' range' → logprob: -8.250262260437012
    3. '_range' → logprob: -15.250262260437012
    4. 'ange' → logprob: -15.750262260437012
    5. '_' → logprob: -16.625261306762695
    6. '(range' → logprob: -16.750261306762695
    7. '	range' → logprob: -16.750261306762695
    8. 'r' → logprob: -18.750261306762695
    9. 'rang' → logprob: -19.000261306762695
    10. 'ran' → logprob: -19.250261306762695

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. 'n' → logprob: -19.375059127807617
    4. '	range' → logprob: -19.625059127807617
    5. '(range' → logprob: -20.250059127807617
    6. '_range' → logprob: -22.250059127807617
    7. 'r' → logprob: -22.250059127807617
    8. 'rang' → logprob: -22.625059127807617
    9. '.range' → logprob: -22.750059127807617
    10. ')' → logprob: -23.750059127807617

Token 401: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.000763510703109e-05
    2. 'n' → logprob: -10.250040054321289
    3. '(' → logprob: -12.375040054321289
    4. ' n' → logprob: -15.500040054321289
    5. ' (' → logprob: -15.750040054321289
    6. '	n' → logprob: -18.00004005432129
    7. '(
' → logprob: -18.25004005432129
    8. '(num' → logprob: -20.25004005432129
    9. ')n' → logprob: -20.50004005432129
    10. ',n' → logprob: -20.75004005432129

Token 402: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.180258191714529e-06
    2. ']' → logprob: -12.125008583068848
    3. ')' → logprob: -13.375008583068848
    4. '])' → logprob: -15.000008583068848
    5. '])]' → logprob: -15.250008583068848
    6. '()]' → logprob: -15.500008583068848
    7. ')]
' → logprob: -15.750008583068848
    8. ' )' → logprob: -16.62500762939453
    9. ')])' → logprob: -16.87500762939453
    10. '   ' → logprob: -17.12500762939453

Token 403: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12060323357582092
    2. '(' → logprob: -2.495603322982788
    3. ')' → logprob: -3.745603322982788
    4. '.' → logprob: -5.370603084564209
    5. '#' → logprob: -7.370603084564209
    6. '<|end|>' → logprob: -7.495603084564209
    7. ':' → logprob: -8.370603561401367
    8. '_' → logprob: -8.495603561401367
    9. ']' → logprob: -8.745603561401367
    10. '\' → logprob: -8.745603561401367

Token 404: ' mip' (ID: 90713)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.521571934223175
    2. 'main' → logprob: -1.0215718746185303
    3. 'grid' → logprob: -5.396572113037109
    4. 'dfs' → logprob: -5.396572113037109
    5. 's' → logprob: -5.646572113037109
    6. ' num' → logprob: -5.771572113037109
    7. ' main' → logprob: -5.896572113037109
    8. 'input' → logprob: -6.521572113037109
    9. 'mi' → logprob: -6.771572113037109
    10. 'print' → logprob: -6.896572113037109

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002064257161691785
    2. 'def' → logprob: -6.877064228057861
    3. '()' → logprob: -7.377064228057861
    4. '(' → logprob: -8.00206470489502
    5. 'n' → logprob: -11.12706470489502
    6. ' (' → logprob: -11.75206470489502
    7. 'a' → logprob: -12.12706470489502
    8. 's' → logprob: -12.37706470489502
    9. '(
' → logprob: -12.50206470489502
    10. '()(' → logprob: -12.75206470489502

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018913877429440618
    2. '):
' → logprob: -6.376891613006592
    3. '(n' → logprob: -8.626891136169434
    4. ')' → logprob: -11.751891136169434
    5. '):
' → logprob: -13.876891136169434
    6. ',n' → logprob: -15.126891136169434
    7. ':' → logprob: -15.751891136169434
    8. '):

' → logprob: -16.00189208984375
    9. ' ):' → logprob: -16.00189208984375
    10. '():' → logprob: -16.12689208984375

Token 407: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02852780371904373
    2. 'def' → logprob: -3.9035277366638184
    3. '   ' → logprob: -4.903527736663818
    4. 'n' → logprob: -7.778527736663818
    5. 'return' → logprob: -10.278528213500977
    6. ' def' → logprob: -10.778528213500977
    7. '[n' → logprob: -11.153528213500977
    8. '(' → logprob: -11.278528213500977
    9. ' return' → logprob: -12.028528213500977
    10. ' (' → logprob: -12.028528213500977

Token 408: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07750801742076874
    2. 'return' (adapté à ' return') → logprob: -2.702507972717285
    3. '(n' → logprob: -5.577507972717285
    4. ' return' → logprob: -5.952507972717285
    5. '   ' → logprob: -7.327507972717285
    6. '[n' → logprob: -8.452507972717285
    7. 'n' → logprob: -8.827507972717285
    8. ' def' → logprob: -10.577507972717285
    9. '(lambda' → logprob: -10.952507972717285
    10. '	return' → logprob: -11.327507972717285

Token 409: ' [' (ID: 723)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.06711661070585251
    2. '[' → logprob: -3.5671164989471436
    3. '[[' → logprob: -3.5671164989471436
    4. '[int' → logprob: -5.442116737365723
    5. '[i' → logprob: -6.567116737365723
    6. '[list' → logprob: -6.692116737365723
    7. ' [' → logprob: -6.942116737365723
    8. '[item' → logprob: -9.192116737365723
    9. '[word' → logprob: -9.442116737365723
    10. '[array' → logprob: -10.067116737365723

Token 410: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00010771531378850341
    2. 'list' → logprob: -10.250107765197754
    3. '[w' → logprob: -10.500107765197754
    4. '[int' → logprob: -11.000107765197754
    5. ' w' → logprob: -11.875107765197754
    6. '[' → logprob: -11.875107765197754
    7. 'int' → logprob: -12.000107765197754
    8. 'tuple' → logprob: -13.250107765197754
    9. 'wi' → logprob: -13.500107765197754
    10. 'map' → logprob: -13.875107765197754

Token 411: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.00024512779782526195
    2. 'i' → logprob: -8.500245094299316
    3. 'p' → logprob: -10.125245094299316
    4. '(ip' → logprob: -13.750245094299316
    5. ' ip' → logprob: -15.625245094299316
    6. 'ips' → logprob: -16.750246047973633
    7. 'ип' → logprob: -17.000246047973633
    8. '	ip' → logprob: -17.125246047973633
    9. '(i' → logprob: -17.750246047973633
    10. '_ip' → logprob: -17.875246047973633

Token 412: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011059258133172989
    2. '()' → logprob: -4.511059284210205
    3. ' (' → logprob: -12.636058807373047
    4. '()(' → logprob: -12.886058807373047
    5. '(' → logprob: -13.011058807373047
    6. 'for' → logprob: -13.511058807373047
    7. '()]' → logprob: -14.011058807373047
    8. ' ()' → logprob: -14.511058807373047
    9. 'n' → logprob: -14.636058807373047
    10. '(i' → logprob: -15.636058807373047

Token 413: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003679528832435608
    2. ' for' → logprob: -6.2536797523498535
    3. 'for' → logprob: -6.6286797523498535
    4. '(n' → logprob: -8.003679275512695
    5. ' ()' → logprob: -9.503679275512695
    6. ')' → logprob: -11.378679275512695
    7. '()]' → logprob: -12.503679275512695
    8. '())' → logprob: -13.128679275512695
    9. '()
' → logprob: -14.503679275512695
    10. '()[' → logprob: -14.753679275512695

Token 414: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005509315058588982
    2. ' range' → logprob: -5.505509376525879
    3. 'range' → logprob: -7.005509376525879
    4. '_range' → logprob: -7.880509376525879
    5. ' _' → logprob: -8.880509376525879
    6. '(range' → logprob: -12.130509376525879
    7. 'n' → logprob: -16.005508422851562
    8. '	range' → logprob: -16.005508422851562
    9. '_=' → logprob: -17.005508422851562
    10. '(n' → logprob: -17.380508422851562

Token 415: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024479670450091362
    2. ' range' → logprob: -4.024479866027832
    3. 'in' → logprob: -5.274479866027832
    4. ' in' → logprob: -7.149479866027832
    5. '_' → logprob: -8.274479866027832
    6. '_range' → logprob: -8.899479866027832
    7. '_in' → logprob: -12.274479866027832
    8. ' _' → logprob: -12.649479866027832
    9. '(range' → logprob: -12.899479866027832
    10. '	range' → logprob: -13.274479866027832

Token 416: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889705896377563
    2. ' range' → logprob: -2.578896999359131
    3. '_range' → logprob: -12.578897476196289
    4. '_' → logprob: -13.078897476196289
    5. '(range' → logprob: -13.328897476196289
    6. '	range' → logprob: -16.95389747619629
    7. ' _' → logprob: -18.45389747619629
    8. ' ' → logprob: -20.07889747619629
    9. 'n' → logprob: -20.32889747619629
    10. '.range' → logprob: -20.45389747619629

Token 417: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.412610233994201e-05
    2. 'n' → logprob: -9.500094413757324
    3. '(' → logprob: -10.875094413757324
    4. ' n' → logprob: -15.625094413757324
    5. ' (' → logprob: -17.625093460083008
    6. '(
' → logprob: -17.875093460083008
    7. '	n' → logprob: -17.875093460083008
    8. ')n' → logprob: -19.375093460083008
    9. ',n' → logprob: -20.250093460083008
    10. '((' → logprob: -20.500093460083008

Token 418: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013107170816510916
    2. ')' → logprob: -7.1263108253479
    3. ']' → logprob: -7.6263108253479
    4. '()]' → logprob: -11.126310348510742
    5. ')])' → logprob: -13.001310348510742
    6. '])' → logprob: -14.376310348510742
    7. '])]' → logprob: -14.876310348510742
    8. ')],' → logprob: -15.126310348510742
    9. ')].' → logprob: -15.876310348510742
    10. '')]' → logprob: -16.376310348510742

Token 419: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05312037095427513
    2. '#' → logprob: -3.3031203746795654
    3. '<|end|>' → logprob: -5.178120136260986
    4. ':' → logprob: -6.053120136260986
    5. ')' → logprob: -6.178120136260986
    6. 'd' → logprob: -6.928120136260986
    7. '```' → logprob: -7.303120136260986
    8. '
' → logprob: -7.428120136260986
    9. 'n' → logprob: -8.053120613098145
    10. '[' → logprob: -8.178120613098145

Token 420: ' ms' (ID: 15217)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.14443956315517426
    2. 'dfs' → logprob: -4.019439697265625
    3. 'pow' → logprob: -4.144439697265625
    4. 'm' → logprob: -4.269439697265625
    5. 'w' → logprob: -4.644439697265625
    6. 'd' → logprob: -4.769439697265625
    7. 'h' → logprob: -5.269439697265625
    8. 'def' → logprob: -5.269439697265625
    9. 'solve' → logprob: -5.269439697265625
    10. 'ms' → logprob: -5.519439697265625

Token 421: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007305434555746615
    2. '(' → logprob: -8.000730514526367
    3. '()' → logprob: -8.625730514526367
    4. 'p' → logprob: -9.250730514526367
    5. 'def' → logprob: -9.250730514526367
    6. 'i' → logprob: -12.125730514526367
    7. 's' → logprob: -12.500730514526367
    8. 't' → logprob: -12.625730514526367
    9. ' (' → logprob: -12.750730514526367
    10. '_list' → logprob: -13.625730514526367

Token 422: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021052466705441475
    2. '(n' → logprob: -4.521052360534668
    3. '):
' → logprob: -4.771052360534668
    4. ')' → logprob: -6.521052360534668
    5. '):
' → logprob: -12.646052360534668
    6. '(' → logprob: -13.021052360534668
    7. 'n' → logprob: -13.271052360534668
    8. '):

' → logprob: -14.021052360534668
    9. ':' → logprob: -14.271052360534668
    10. 'def' → logprob: -14.396052360534668

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1145199537277222
    2. '(n' → logprob: -1.1145199537277222
    3. 'def' → logprob: -1.1145199537277222
    4. 'return' → logprob: -4.864520072937012
    5. ' return' → logprob: -5.989520072937012
    6. '(s' → logprob: -6.114520072937012
    7. ' def' → logprob: -6.739520072937012
    8. '(return' → logprob: -8.239520072937012
    9. '(def' → logprob: -8.364520072937012
    10. '=' → logprob: -8.739520072937012

Token 424: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00048107770271599293
    2. ' return' → logprob: -7.750481128692627
    3. 'def' → logprob: -10.125480651855469
    4. '   ' → logprob: -11.500480651855469
    5. '	return' → logprob: -16.62548065185547
    6. '
' → logprob: -16.87548065185547
    7. ' ' → logprob: -17.75048065185547
    8. ':return' → logprob: -17.75048065185547
    9. '{return' → logprob: -18.00048065185547
    10. '[' → logprob: -18.12548065185547

Token 425: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055077265948057175
    2. '[s' → logprob: -2.930077314376831
    3. ' [' → logprob: -8.93007755279541
    4. '[str' → logprob: -11.05507755279541
    5. '[int' → logprob: -11.68007755279541
    6. '[string' → logprob: -11.68007755279541
    7. 'sys' → logprob: -12.43007755279541
    8. '   ' → logprob: -12.80507755279541
    9. '[list' → logprob: -12.93007755279541
    10. '[String' → logprob: -13.05507755279541

Token 426: 'ws' (ID: 8811)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0076346630230546
    2. 'sys' → logprob: -4.88263463973999
    3. 'list' → logprob: -11.007635116577148
    4. 'input' → logprob: -11.882635116577148
    5. 'ws' → logprob: -12.882635116577148
    6. ' s' → logprob: -14.007635116577148
    7. ' sys' → logprob: -15.007635116577148
    8. 'ss' → logprob: -15.132635116577148
    9. '(s' → logprob: -15.382635116577148
    10. 'string' → logprob: -15.632635116577148

Token 427: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024883802980184555
    2. '()' → logprob: -6.002488613128662
    3. '(' → logprob: -12.002488136291504
    4. ' (' → logprob: -12.377488136291504
    5. 'for' → logprob: -13.627488136291504
    6. '()(' → logprob: -15.002488136291504
    7. '()]' → logprob: -15.127488136291504
    8. ' ()' → logprob: -15.127488136291504
    9. 'n' → logprob: -15.502488136291504
    10. ' for' → logprob: -17.25248908996582

Token 428: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03471444174647331
    2. '(n' → logprob: -3.784714460372925
    3. 'for' → logprob: -4.534714221954346
    4. ' for' → logprob: -7.534714221954346
    5. ' ()' → logprob: -9.159714698791504
    6. '(' → logprob: -10.659714698791504
    7. '()
' → logprob: -12.784714698791504
    8. '()]' → logprob: -12.909714698791504
    9. ' (' → logprob: -13.034714698791504
    10. '())' → logprob: -14.284714698791504

Token 429: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007963843643665314
    2. 'n' → logprob: -5.88296365737915
    3. ' _' → logprob: -6.00796365737915
    4. '_range' → logprob: -6.38296365737915
    5. '(n' → logprob: -7.63296365737915
    6. ' n' → logprob: -8.257964134216309
    7. ' range' → logprob: -9.007964134216309
    8. '_n' → logprob: -9.382964134216309
    9. 'range' → logprob: -10.132964134216309
    10. '(range' → logprob: -13.257964134216309

Token 430: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01465830858796835
    2. '_range' → logprob: -4.514658451080322
    3. ' range' → logprob: -6.264658451080322
    4. '(n' → logprob: -7.014658451080322
    5. '_' → logprob: -7.889658451080322
    6. 'n' → logprob: -8.014657974243164
    7. '(range' → logprob: -9.889657974243164
    8. '_n' → logprob: -10.014657974243164
    9. '-range' → logprob: -14.639657974243164
    10. ' _' → logprob: -14.764657974243164

Token 431: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007070301566272974
    2. ' range' → logprob: -5.007070064544678
    3. '_range' → logprob: -8.507070541381836
    4. '(n' → logprob: -9.007070541381836
    5. 'n' → logprob: -10.882070541381836
    6. '(range' → logprob: -11.382070541381836
    7. ' n' → logprob: -16.257070541381836
    8. '_n' → logprob: -17.257070541381836
    9. '_' → logprob: -17.507070541381836
    10. '	range' → logprob: -17.632070541381836

Token 432: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06197172403335571
    2. 'n' → logprob: -2.811971664428711
    3. 'range' → logprob: -12.936971664428711
    4. ' n' → logprob: -13.936971664428711
    5. ' (' → logprob: -14.686971664428711
    6. '(' → logprob: -15.311971664428711
    7. ' range' → logprob: -16.18697166442871
    8. '(range' → logprob: -18.43697166442871
    9. ')' → logprob: -19.56197166442871
    10. ')n' → logprob: -19.68697166442871

Token 433: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028083212673664093
    2. ']' → logprob: -6.502808094024658
    3. '()]' → logprob: -7.377808094024658
    4. '(n' → logprob: -8.002808570861816
    5. ')' → logprob: -8.002808570861816
    6. '()' → logprob: -12.002808570861816
    7. 'n' → logprob: -13.252808570861816
    8. ')]
' → logprob: -14.252808570861816
    9. '())' → logprob: -14.502808570861816
    10. ')],' → logprob: -15.127808570861816

Token 434: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04084425047039986
    2. '#' → logprob: -3.915844202041626
    3. '(' → logprob: -4.790844440460205
    4. '
' → logprob: -5.790844440460205
    5. '<|end|>' → logprob: -6.040844440460205
    6. 'n' → logprob: -6.790844440460205
    7. '(n' → logprob: -6.790844440460205
    8. '(
' → logprob: -7.540844440460205
    9. 'x' → logprob: -7.540844440460205
    10. '```' → logprob: -7.665844440460205

Token 435: ' grid' (ID: 10586)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.031161226332187653
    2. 'dfs' → logprob: -4.531161308288574
    3. 'g' → logprob: -5.781161308288574
    4. 'solve' → logprob: -5.906161308288574
    5. 'pow' → logprob: -6.156161308288574
    6. 'l' → logprob: -6.281161308288574
    7. 'f' → logprob: -6.656161308288574
    8. 'h' → logprob: -7.406161308288574
    9. 'factor' → logprob: -7.406161308288574
    10. 'max' → logprob: -7.531161308288574

Token 436: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013902351493015885
    2. 'def' → logprob: -6.62639045715332
    3. '(' → logprob: -10.50139045715332
    4. '(num' → logprob: -12.00139045715332
    5. '<|end|>' → logprob: -12.37639045715332
    6. '(N' → logprob: -12.62639045715332
    7. '_def' → logprob: -12.75139045715332
    8. '<|end|>' → logprob: -13.00139045715332
    9. '(size' → logprob: -13.25139045715332
    10. ' (' → logprob: -13.25139045715332

Token 437: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002513592829927802
    2. '):
' → logprob: -6.002513408660889
    3. ')' → logprob: -10.252513885498047
    4. ':' → logprob: -13.877513885498047
    5. '):
' → logprob: -14.252513885498047
    6. ' ):' → logprob: -14.752513885498047
    7. ',' → logprob: -15.252513885498047
    8. '):

' → logprob: -15.752513885498047
    9. '=' → logprob: -16.127513885498047
    10. 'def' → logprob: -17.127513885498047

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06177215278148651
    2. ':' → logprob: -3.561772108078003
    3. ':
' → logprob: -3.686772108078003
    4. '():' → logprob: -6.561772346496582
    5. '(n' → logprob: -6.686772346496582
    6. ' return' → logprob: -7.186772346496582
    7. 'return' → logprob: -7.311772346496582
    8. '():
' → logprob: -7.436772346496582
    9. ':return' → logprob: -7.561772346496582
    10. 'def' → logprob: -7.686772346496582

Token 439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020567618776112795
    2. ' return' → logprob: -6.25205659866333
    3. '   ' → logprob: -9.127057075500488
    4. '[]' → logprob: -11.627057075500488
    5. 'def' → logprob: -11.877057075500488
    6. '[' → logprob: -13.002057075500488
    7. ':return' → logprob: -15.377057075500488
    8. '[]
' → logprob: -15.502057075500488
    9. ')' → logprob: -15.752057075500488
    10. '=' → logprob: -16.002056121826172

Token 440: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6893287301063538
    2. '[' → logprob: -1.439328670501709
    3. '[list' → logprob: -1.439328670501709
    4. '[int' → logprob: -5.064328670501709
    5. '[num' → logprob: -5.564328670501709
    6. '[array' → logprob: -5.814328670501709
    7. ' [' → logprob: -6.189328670501709
    8. '[s' → logprob: -6.439328670501709
    9. '[i' → logprob: -6.689328670501709
    10. '[List' → logprob: -7.064328670501709

Token 441: 's' (ID: 82)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06002678722143173
    2. 's' → logprob: -3.0600268840789795
    3. 'sys' → logprob: -4.8100266456604
    4. 'input' → logprob: -5.8100266456604
    5. 'wi' → logprob: -8.935027122497559
    6. 'ws' → logprob: -10.060027122497559
    7. ' list' → logprob: -11.185027122497559
    8. 'w' → logprob: -11.435027122497559
    9. '[list' → logprob: -11.560027122497559
    10. '[s' → logprob: -11.810027122497559

Token 442: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024931633844971657
    2. '().' → logprob: -3.7749316692352295
    3. '()]' → logprob: -6.52493143081665
    4. '()[' → logprob: -9.399931907653809
    5. ' ()' → logprob: -10.649931907653809
    6. '().__' → logprob: -10.649931907653809
    7. '()(' → logprob: -11.274931907653809
    8. '()+' → logprob: -11.524931907653809
    9. '())' → logprob: -11.649931907653809
    10. '()-' → logprob: -11.774931907653809

Token 443: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.314625690924004e-05
    2. '()' → logprob: -9.750073432922363
    3. ' (' → logprob: -11.250073432922363
    4. '(' → logprob: -13.750073432922363
    5. 'n' → logprob: -15.000073432922363
    6. '()(' → logprob: -15.750073432922363
    7. '()]' → logprob: -15.750073432922363
    8. ' ()' → logprob: -17.125072479248047
    9. '())' → logprob: -18.125072479248047
    10. '(N' → logprob: -19.250072479248047

Token 444: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20170842111110687
    2. '(n' → logprob: -1.701708436012268
    3. ' ()' → logprob: -8.576708793640137
    4. '()]' → logprob: -10.076708793640137
    5. '(' → logprob: -10.326708793640137
    6. '()
' → logprob: -11.451708793640137
    7. 'for' → logprob: -11.826708793640137
    8. ' (' → logprob: -11.951708793640137
    9. '()[' → logprob: -13.576708793640137
    10. 'n' → logprob: -13.701708793640137

Token 445: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.955703818472102e-05
    2. ' _' → logprob: -10.000059127807617
    3. ' range' → logprob: -11.250059127807617
    4. '_range' → logprob: -13.875059127807617
    5. ' in' → logprob: -16.375059127807617
    6. 'range' → logprob: -17.250059127807617
    7. '_=' → logprob: -20.375059127807617
    8. '(range' → logprob: -20.500059127807617
    9. 'in' → logprob: -20.750059127807617
    10. '_in' → logprob: -21.000059127807617

Token 446: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.032274506986141205
    2. ' range' → logprob: -3.5322744846343994
    3. '_' → logprob: -6.0322747230529785
    4. '_range' → logprob: -9.03227424621582
    5. '(range' → logprob: -14.03227424621582
    6. '	range' → logprob: -15.15727424621582
    7. 'ange' → logprob: -15.40727424621582
    8. 'ran' → logprob: -17.78227424621582
    9. 'rang' → logprob: -19.03227424621582
    10. 'in' → logprob: -19.40727424621582

Token 447: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10023729503154755
    2. ' range' → logprob: -2.3502373695373535
    3. '_range' → logprob: -10.600236892700195
    4. '(range' → logprob: -12.600236892700195
    5. '_' → logprob: -12.975236892700195
    6. '	range' → logprob: -17.600236892700195
    7. 'in' → logprob: -17.850236892700195
    8. 'n' → logprob: -17.850236892700195
    9. ' in' → logprob: -19.100236892700195
    10. '.range' → logprob: -19.225236892700195

Token 448: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.60414821645827e-06
    2. 'n' → logprob: -12.875004768371582
    3. '(' → logprob: -13.125004768371582
    4. ' (' → logprob: -16.875003814697266
    5. ' n' → logprob: -20.250003814697266
    6. '(
' → logprob: -20.375003814697266
    7. '((' → logprob: -22.500003814697266
    8. '	n' → logprob: -22.625003814697266
    9. 'def' → logprob: -22.875003814697266
    10. '(N' → logprob: -23.125003814697266

Token 449: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0033762650564312935
    2. ']' → logprob: -5.753376483917236
    3. ')' → logprob: -8.628376007080078
    4. '()]' → logprob: -10.878376007080078
    5. ')]
' → logprob: -16.003376007080078
    6. ' ]' → logprob: -16.003376007080078
    7. ')],' → logprob: -16.753376007080078
    8. '}]' → logprob: -16.753376007080078
    9. 'def' → logprob: -17.003376007080078
    10. ']
' → logprob: -17.003376007080078

Token 450: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5797989964485168
    2. 'def' → logprob: -2.079798936843872
    3. '<|end|>' → logprob: -2.454798936843872
    4. '(' → logprob: -2.704798936843872
    5. ':' → logprob: -2.704798936843872
    6. '#' → logprob: -3.204798936843872
    7. '(
' → logprob: -4.454799175262451
    8. '[' → logprob: -4.704799175262451
    9. ')' → logprob: -4.954799175262451
    10. ',' → logprob: -5.204799175262451

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34540635347366333
    2. '=' → logprob: -1.3454062938690186
    3. ',' → logprob: -3.8454062938690186
    4. ' ' → logprob: -4.845406532287598
    5. '<|end|>' → logprob: -6.720406532287598
    6. ' ,' → logprob: -7.720406532287598
    7. ')' → logprob: -8.470406532287598
    8. '  ' → logprob: -9.345406532287598
    9. '>' → logprob: -9.595406532287598
    10. '.' → logprob: -9.720406532287598

Token 452: ' i' (ID: 575)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29620903730392456
    2. ' int' → logprob: -1.4212090969085693
    3. ' ' → logprob: -4.79620885848999
    4. 'i' → logprob: -5.92120885848999
    5. '0' → logprob: -6.17120885848999
    6. '=int' → logprob: -7.67120885848999
    7. ' i' → logprob: -7.92120885848999
    8. '10' → logprob: -8.171209335327148
    9. '<int' → logprob: -8.546209335327148
    10. '[int' → logprob: -8.671209335327148

Token 453: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30597153306007385
    2. 'a' → logprob: -1.9309715032577515
    3. 'd' → logprob: -3.680971622467041
    4. 'for' → logprob: -3.680971622467041
    5. 'n' → logprob: -4.555971622467041
    6. ' ' → logprob: -4.680971622467041
    7. ',a' → logprob: -5.055971622467041
    8. '
' → logprob: -5.305971622467041
    9. 'x' → logprob: -5.305971622467041
    10. '(' → logprob: -5.305971622467041

Token 454: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.398120641708374
    2. 'for' → logprob: -1.273120641708374
    3. 'arr' → logprob: -4.273120880126953
    4. 'lst' → logprob: -5.148120880126953
    5. 'd' → logprob: -5.398120880126953
    6. 'grid' → logprob: -5.523120880126953
    7. 'li' → logprob: -5.773120880126953
    8. 'data' → logprob: -5.773120880126953
    9. 's' → logprob: -6.023120880126953
    10. 'A' → logprob: -6.148120880126953

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13035304844379425
    2. ' =' → logprob: -3.0053529739379883
    3. '_' → logprob: -3.2553529739379883
    4. '()' → logprob: -3.6303529739379883
    5. '_=' → logprob: -5.380352973937988
    6. '(' → logprob: -6.505352973937988
    7. 's' → logprob: -7.255352973937988
    8. ' ' → logprob: -8.880352973937988
    9. 't' → logprob: -9.130352973937988
    10. ',' → logprob: -9.755352973937988

Token 456: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2295239269733429
    2. ' s' → logprob: -1.6045238971710205
    3. 'input' → logprob: -5.7295241355896
    4. ' input' → logprob: -7.3545241355896
    5. ' ' → logprob: -9.354523658752441
    6. '(s' → logprob: -9.854523658752441
    7. '()' → logprob: -9.979523658752441
    8. 'list' → logprob: -11.854523658752441
    9. ' list' → logprob: -12.604523658752441
    10. '_s' → logprob: -12.604523658752441

Token 457: '()
' (ID: 1234)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1890738159418106
    2. '[' → logprob: -2.0640738010406494
    3. '[::-' → logprob: -4.5640740394592285
    4. '.' → logprob: -5.0640740394592285
    5. '.strip' → logprob: -5.1890740394592285
    6. ' +' → logprob: -5.1890740394592285
    7. '.replace' → logprob: -5.3140740394592285
    8. '.lower' → logprob: -5.5640740394592285
    9. '.split' → logprob: -5.8140740394592285
    10. '[:]' → logprob: -6.5640740394592285

Token 458: 'new' (ID: 1389)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6452116370201111
    2. 'd' → logprob: -1.8952116966247559
    3. 'for' → logprob: -2.395211696624756
    4. 'ans' → logprob: -2.895211696624756
    5. 'cnt' → logprob: -3.645211696624756
    6. 'dp' → logprob: -3.770211696624756
    7. 'i' → logprob: -4.020211696624756
    8. 'a' → logprob: -4.145211696624756
    9. 't' → logprob: -4.270211696624756
    10. 'count' → logprob: -4.395211696624756

Token 459: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7072824835777283
    2. ' =' → logprob: -1.082282543182373
    3. '_s' → logprob: -2.207282543182373
    4. '=' → logprob: -3.582282543182373
    5. '_' → logprob: -3.582282543182373
    6. '_=' → logprob: -7.832282543182373
    7. '_str' → logprob: -8.082282066345215
    8. '_list' → logprob: -8.207282066345215
    9. 't' → logprob: -8.457282066345215
    10. '_ans' → logprob: -8.832282066345215

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869032859802246
    2. ' =' → logprob: -1.1369032859802246
    3. '=s' → logprob: -11.261903762817383
    4. 's' → logprob: -11.511903762817383
    5. ',' → logprob: -12.886903762817383
    6. ' ' → logprob: -13.511903762817383
    7. '[' → logprob: -13.761903762817383
    8. '=[]' → logprob: -14.011903762817383
    9. ' =
' → logprob: -14.386903762817383
    10. '_' → logprob: -14.511903762817383

Token 461: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.4314687252044678
    2. '[]' → logprob: -1.1814687252044678
    3. 's' → logprob: -3.8064687252044678
    4. '''' → logprob: -4.431468963623047
    5. 'list' → logprob: -5.056468963623047
    6. '"' → logprob: -6.431468963623047
    7. ' []' → logprob: -7.806468963623047
    8. '[' → logprob: -8.306468963623047
    9. ' ""' → logprob: -8.431468963623047
    10. '[]
' → logprob: -9.056468963623047

Token 462: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000817369669675827
    2. 'i' → logprob: -7.12581729888916
    3. ' for' → logprob: -12.25081729888916
    4. 'prev' → logprob: -12.62581729888916
    5. 'f' → logprob: -13.00081729888916
    6. 'c' → logprob: -14.37581729888916
    7. 'last' → logprob: -14.62581729888916
    8. 't' → logprob: -15.25081729888916
    9. 'idx' → logprob: -15.37581729888916
    10. 'l' → logprob: -15.62581729888916

Token 463: ' idx' (ID: 14016)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22433380782604218
    2. 'c' → logprob: -1.7243337631225586
    3. ' i' → logprob: -4.349333763122559
    4. 'i' → logprob: -5.099333763122559
    5. 'ch' → logprob: -6.474333763122559
    6. ' ch' → logprob: -6.599333763122559
    7. '_' → logprob: -8.474333763122559
    8. ' _' → logprob: -8.849333763122559
    9. 'char' → logprob: -8.974333763122559
    10. '_i' → logprob: -9.724333763122559

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025838632136583328
    2. 'in' → logprob: -3.900838613510132
    3. ' ' → logprob: -5.275838851928711
    4. ',' → logprob: -8.775838851928711
    5. ' ,' → logprob: -12.525838851928711
    6. '_' → logprob: -12.650838851928711
    7. '	in' → logprob: -13.150838851928711
    8. '  ' → logprob: -13.275838851928711
    9. '   ' → logprob: -13.525838851928711
    10. ' i' → logprob: -14.025838851928711

Token 465: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01828959211707115
    2. 'range' → logprob: -4.018289566040039
    3. ' s' → logprob: -9.018289566040039
    4. 's' → logprob: -11.143289566040039
    5. ' ' → logprob: -13.643289566040039
    6. ' ran' → logprob: -13.768289566040039
    7. ' rang' → logprob: -14.518289566040039
    8. ' ra' → logprob: -14.518289566040039
    9. ' new' → logprob: -15.518289566040039
    10. '	range' → logprob: -15.768289566040039

Token 466: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.1288338005542755
    2. '(n' → logprob: -2.378833770751953
    3. '(' → logprob: -3.628833770751953
    4. ' (' → logprob: -7.378833770751953
    5. 'len' → logprob: -7.628833770751953
    6. ' n' → logprob: -8.628833770751953
    7. 'n' → logprob: -8.628833770751953
    8. ' len' → logprob: -8.753833770751953
    9. '(
' → logprob: -10.003833770751953
    10. '(length' → logprob: -14.503833770751953

Token 467: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001176893594674766
    2. 'len' → logprob: -6.751176834106445
    3. ' n' → logprob: -12.001176834106445
    4. '   ' → logprob: -16.126176834106445
    5. '0' → logprob: -16.251176834106445
    6. '1' → logprob: -16.501176834106445
    7. '	n' → logprob: -16.876176834106445
    8. ' len' → logprob: -17.001176834106445
    9. '
' → logprob: -17.126176834106445
    10. '(n' → logprob: -17.251176834106445

Token 468: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17125804722309113
    2. ',n' → logprob: -2.796257972717285
    3. ' ,' → logprob: -2.796257972717285
    4. ',len' → logprob: -4.171257972717285
    5. '):' → logprob: -4.296257972717285
    6. '):
' → logprob: -6.546257972717285
    7. ' *' → logprob: -6.671257972717285
    8. '*n' → logprob: -7.171257972717285
    9. 'n' → logprob: -7.421257972717285
    10. ' ' → logprob: -7.671257972717285

Token 469: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031860284507274628
    2. ' n' → logprob: -5.753186225891113
    3. '*n' → logprob: -12.378186225891113
    4. 'len' → logprob: -14.128186225891113
    5. '(n' → logprob: -14.128186225891113
    6. ')n' → logprob: -14.878186225891113
    7. ' ' → logprob: -15.003186225891113
    8. '	n' → logprob: -15.003186225891113
    9. 's' → logprob: -15.253186225891113
    10. '
' → logprob: -15.503186225891113

Token 470: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05613980442285538
    2. '):
' → logprob: -2.9311397075653076
    3. ' ):' → logprob: -7.181139945983887
    4. '+' → logprob: -7.931139945983887
    5. ')' → logprob: -9.806139945983887
    6. '-' → logprob: -10.806139945983887
    7. ' ):
' → logprob: -10.806139945983887
    8. ':' → logprob: -10.931139945983887
    9. '):
' → logprob: -11.306139945983887
    10. ' +' → logprob: -12.306139945983887

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012241669930517673
    2. ' new' → logprob: -5.012241840362549
    3. '	new' → logprob: -5.762241840362549
    4. ' if' → logprob: -6.762241840362549
    5. 'new' → logprob: -7.637241840362549
    6. '	if' → logprob: -7.887241840362549
    7. '	s' → logprob: -9.13724136352539
    8. '   ' → logprob: -9.76224136352539
    9. ' s' → logprob: -10.38724136352539
    10. 'if' → logprob: -10.63724136352539

Token 472: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9264792203903198
    2. '   ' → logprob: -1.0514792203903198
    3. ' new' → logprob: -1.8014792203903198
    4. 'if' (adapté à ' if') → logprob: -2.8014793395996094
    5. ' if' → logprob: -3.5514793395996094
    6. 'c' → logprob: -9.55147933959961
    7. '	new' → logprob: -10.30147933959961
    8. 'print' → logprob: -11.42647933959961
    9. ' ' → logprob: -11.55147933959961
    10. 'i' → logprob: -11.80147933959961

Token 473: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03914407268166542
    2. 's' → logprob: -3.2891440391540527
    3. ' (' → logprob: -7.789144039154053
    4. ' idx' → logprob: -8.414144515991211
    5. ' new' → logprob: -8.664144515991211
    6. '   ' → logprob: -9.289144515991211
    7. ' ' → logprob: -9.539144515991211
    8. '(s' → logprob: -10.039144515991211
    9. 'idx' → logprob: -10.539144515991211
    10. 'new' → logprob: -11.289144515991211

Token 474: '2' (ID: 17)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06938605010509491
    2. 's' → logprob: -3.0693860054016113
    3. ' idx' → logprob: -4.194386005401611
    4. '(idx' → logprob: -5.819386005401611
    5. ' s' → logprob: -6.569386005401611
    6. '   ' → logprob: -8.19438648223877
    7. '(s' → logprob: -8.19438648223877
    8. ' (' → logprob: -8.44438648223877
    9. '(' → logprob: -8.81938648223877
    10. 'not' → logprob: -9.69438648223877

Token 475: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7090343832969666
    2. ' *' → logprob: -1.5840344429016113
    3. ')' → logprob: -1.9590344429016113
    4. 'idx' → logprob: -2.5840344429016113
    5. ' ' → logprob: -3.5840344429016113
    6. '[idx' → logprob: -3.9590344429016113
    7. ' idx' → logprob: -4.584034442901611
    8. 's' → logprob: -4.709034442901611
    9. '*s' → logprob: -5.959034442901611
    10. ' +' → logprob: -6.209034442901611

Token 476: ' n' (ID: 297)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5301061272621155
    2. 'n' → logprob: -0.9051061272621155
    3. ' idx' → logprob: -5.905106067657471
    4. ' n' → logprob: -7.030106067657471
    5. 's' → logprob: -7.030106067657471
    6. '(idx' → logprob: -7.280106067657471
    7. ')' → logprob: -7.405106067657471
    8. 'new' → logprob: -7.905106067657471
    9. '[idx' → logprob: -8.780106544494629
    10. ')n' → logprob: -9.155106544494629

Token 477: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4746549427509308
    2. ' -' → logprob: -1.9746549129486084
    3. '-' → logprob: -2.0996549129486084
    4. '>' → logprob: -2.7246549129486084
    5. ' >' → logprob: -3.5996549129486084
    6. ')>' → logprob: -4.4746551513671875
    7. ' )' → logprob: -5.7246551513671875
    8. ')%' → logprob: -6.0996551513671875
    9. '):' → logprob: -6.9746551513671875
    10. '<=' → logprob: -7.3496551513671875

Token 478: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.29938679933547974
    2. '1' → logprob: -1.674386739730835
    3. ' idx' → logprob: -2.674386739730835
    4. ' ' → logprob: -6.674386978149414
    5. '(idx' → logprob: -7.549386978149414
    6. '   ' → logprob: -8.924386978149414
    7. ')' → logprob: -9.049386978149414
    8. ' (' → logprob: -9.424386978149414
    9. '	idx' → logprob: -9.549386978149414
    10. '(' → logprob: -10.049386978149414

Token 479: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01342267356812954
    2. '-' → logprob: -4.76342248916626
    3. ' )' → logprob: -6.01342248916626
    4. ' -' → logprob: -6.88842248916626
    5. '>' → logprob: -7.26342248916626
    6. ')>' → logprob: -7.76342248916626
    7. ' ' → logprob: -9.763422966003418
    8. ')%' → logprob: -9.888422966003418
    9. ')>=' → logprob: -10.638422966003418
    10. ' >' → logprob: -11.138422966003418

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026120443362742662
    2. ' ' → logprob: -6.002612113952637
    3. '2' → logprob: -9.127612113952637
    4. ')' → logprob: -10.627612113952637
    5. ' )' → logprob: -13.627612113952637
    6. '   ' → logprob: -14.440112113952637
    7. '3' → logprob: -15.127612113952637
    8. 's' → logprob: -15.440112113952637
    9. '  ' → logprob: -15.627612113952637
    10. ' s' → logprob: -15.940112113952637

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015841391868889332
    2. '2' → logprob: -6.876584053039551
    3. ' ' → logprob: -7.626584053039551
    4. ')' → logprob: -9.87658405303955
    5. '3' → logprob: -12.12658405303955
    6. ' )' → logprob: -13.00158405303955
    7. '   ' → logprob: -14.75158405303955
    8. '  ' → logprob: -14.87658405303955
    9. '>' → logprob: -15.12658405303955
    10. '4' → logprob: -15.18908405303955

Token 482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0042383125983178616
    2. '>' → logprob: -6.754238128662109
    3. ')>' → logprob: -6.879238128662109
    4. ' )' → logprob: -7.129238128662109
    5. ')%' → logprob: -7.504238128662109
    6. ')>=' → logprob: -8.12923812866211
    7. '>=' → logprob: -8.75423812866211
    8. ' >' → logprob: -9.37923812866211
    9. ' >=' → logprob: -10.12923812866211
    10. ' ' → logprob: -10.75423812866211

Token 483: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.29324209690094
    2. '%' → logprob: -1.54324209690094
    3. ' >' → logprob: -1.79324209690094
    4. '>' → logprob: -1.91824209690094
    5. ' %' → logprob: -2.5432419776916504
    6. '>=' → logprob: -2.6682419776916504
    7. ' <' → logprob: -3.7932419776916504
    8. ' <=' → logprob: -4.41824197769165
    9. '<' → logprob: -5.41824197769165
    10. ' ' → logprob: -5.79324197769165

Token 484: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03793315216898918
    2. '3' → logprob: -3.412933111190796
    3. ' ' → logprob: -6.162933349609375
    4. '4' → logprob: -6.287933349609375
    5. 'n' → logprob: -9.162933349609375
    6. ' n' → logprob: -9.787933349609375
    7. '(' → logprob: -10.412933349609375
    8. '(n' → logprob: -10.537933349609375
    9. '5' → logprob: -10.787933349609375
    10. '6' → logprob: -10.912933349609375

Token 485: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004259800538420677
    2. '3' → logprob: -5.6292595863342285
    3. '4' → logprob: -7.5042595863342285
    4. ' ' → logprob: -10.629260063171387
    5. '7' → logprob: -10.754260063171387
    6. 'n' → logprob: -10.879260063171387
    7. '26' → logprob: -11.004260063171387
    8. '5' → logprob: -12.379260063171387
    9. '6' → logprob: -12.754260063171387
    10. '10' → logprob: -13.129260063171387

Token 486: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6341091990470886
    2. '==' → logprob: -0.7591091990470886
    3. '=' → logprob: -6.884109020233154
    4. ' =' → logprob: -8.509109497070312
    5. '!=' → logprob: -9.259109497070312
    6. ' !=' → logprob: -9.509109497070312
    7. ')' → logprob: -9.884109497070312
    8. ' ' → logprob: -10.384109497070312
    9. ')==' → logprob: -11.634109497070312
    10. ':' → logprob: -12.009109497070312

Token 487: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08222031593322754
    2. '1' → logprob: -2.5822203159332275
    3. ' ' → logprob: -5.707220077514648
    4. '==' → logprob: -13.207220077514648
    5. '=' → logprob: -14.582220077514648
    6. '   ' → logprob: -15.832220077514648
    7. 'not' → logprob: -16.39472007751465
    8. '
' → logprob: -16.51972007751465
    9. ' =' → logprob: -16.83222007751465
    10. ' ==' → logprob: -16.89472007751465

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07001679390668869
    2. '1' → logprob: -2.695016860961914
    3. ' ' → logprob: -9.445016860961914
    4. 's' → logprob: -15.070016860961914
    5. '==' → logprob: -15.445016860961914
    6. 'not' → logprob: -15.695016860961914
    7. 'x' → logprob: -16.070016860961914
    8. '=' → logprob: -16.570016860961914
    9. '
' → logprob: -16.757516860961914
    10. '(' → logprob: -16.945016860961914

Token 489: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09066440910100937
    2. ':
' → logprob: -2.4656643867492676
    3. 'new' → logprob: -7.465664386749268
    4. ':new' → logprob: -8.090664863586426
    5. '   ' → logprob: -8.215664863586426
    6. ' and' → logprob: -8.340664863586426
    7. ' new' → logprob: -8.465664863586426
    8. 'and' → logprob: -10.465664863586426
    9. '==' → logprob: -10.465664863586426
    10. '=' → logprob: -11.340664863586426

Token 490: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.34460580348968506
    2. '   ' → logprob: -1.719605803489685
    3. '       ' → logprob: -2.8446059226989746
    4. 'new' → logprob: -2.9696059226989746
    5. '	new' → logprob: -6.094605922698975
    6. '
' → logprob: -8.969605445861816
    7. ' ' → logprob: -9.469605445861816
    8. '	   ' → logprob: -9.844605445861816
    9. '	' → logprob: -10.094605445861816
    10. '  ' → logprob: -10.219605445861816

Token 491: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.001163792097941041
    2. '   ' → logprob: -7.501163959503174
    3. ' new' → logprob: -7.501163959503174
    4. '
' → logprob: -10.126163482666016
    5. '	new' → logprob: -11.001163482666016
    6. '       ' → logprob: -15.251163482666016
    7. ' ' → logprob: -15.501163482666016
    8. 'newline' → logprob: -15.501163482666016
    9. ')new' → logprob: -15.751163482666016
    10. '[new' → logprob: -15.876163482666016

Token 492: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.4987974029500037e-05
    2. '_' → logprob: -10.625024795532227
    3. 's' → logprob: -14.250024795532227
    4. '_=' → logprob: -17.750024795532227
    5. '_token' → logprob: -17.875024795532227
    6. '=' → logprob: -18.750024795532227
    7. '_
' → logprob: -19.000024795532227
    8. '_new' → logprob: -19.125024795532227
    9. 'new' → logprob: -19.250024795532227
    10. '_string' → logprob: -19.625024795532227

Token 493: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00104305159766227
    2. ' +=' → logprob: -6.87604284286499
    3. '+' → logprob: -12.501043319702148
    4. '+='' → logprob: -12.876043319702148
    5. '+="' → logprob: -13.501043319702148
    6. '=' → logprob: -14.001043319702148
    7. ']+=' → logprob: -14.001043319702148
    8. '+=(' → logprob: -14.001043319702148
    9. ' +' → logprob: -16.87604331970215
    10. '```' → logprob: -17.50104331970215

Token 494: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005541055579669774
    2. '"' → logprob: -8.125554084777832
    3. ''' → logprob: -9.375554084777832
    4. ' s' → logprob: -9.875554084777832
    5. ''s' → logprob: -10.125554084777832
    6. '"*' → logprob: -11.250554084777832
    7. ''*' → logprob: -11.375554084777832
    8. '"#' → logprob: -11.375554084777832
    9. '"s' → logprob: -11.750554084777832
    10. '")' → logprob: -12.500554084777832

Token 495: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05797884240746498
    2. '[' → logprob: -3.307978868484497
    3. '[s' → logprob: -3.932978868484497
    4. 's' → logprob: -10.057978630065918
    5. '[(' → logprob: -10.307978630065918
    6. '[n' → logprob: -11.057978630065918
    7. '[int' → logprob: -11.557978630065918
    8. '[i' → logprob: -11.557978630065918
    9. '[new' → logprob: -11.682978630065918
    10. '[
' → logprob: -12.182978630065918

Token 496: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006345019210129976
    2. '].' → logprob: -5.256344795227051
    3. '.lower' → logprob: -7.506344795227051
    4. '.upper' → logprob: -8.13134479522705
    5. '+' → logprob: -9.88134479522705
    6. ']
' → logprob: -10.00634479522705
    7. '[::-' → logprob: -10.38134479522705
    8. '[' → logprob: -10.63134479522705
    9. '])' → logprob: -11.25634479522705
    10. '*' → logprob: -11.25634479522705

Token 497: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25394558906555176
    2. 'else' → logprob: -1.6289455890655518
    3. ' else' → logprob: -3.7539455890655518
    4. 'elif' → logprob: -6.253945350646973
    5. ' ' → logprob: -7.378945350646973
    6. 'new' → logprob: -7.503945350646973
    7. ' print' → logprob: -8.128945350646973
    8. 's' → logprob: -8.378945350646973
    9. '#' → logprob: -8.503945350646973
    10. 'for' → logprob: -9.378945350646973

Token 498: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7112123370170593
    2. 'else' (adapté à ' else') → logprob: -0.7112123370170593
    3. 'new' → logprob: -5.461212158203125
    4. ' new' → logprob: -5.711212158203125
    5. ' ' → logprob: -5.961212158203125
    6. 'elif' → logprob: -5.961212158203125
    7. ')' → logprob: -6.586212158203125
    8. 'print' → logprob: -7.086212158203125
    9. ' elif' → logprob: -7.211212158203125
    10. '#' → logprob: -8.086212158203125

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6642705202102661
    2. '       ' → logprob: -1.0392705202102661
    3. ':
' → logprob: -2.1642704010009766
    4. ' new' → logprob: -4.414270401000977
    5. 'new' → logprob: -6.039270401000977
    6. '   ' → logprob: -7.164270401000977
    7. '(new' → logprob: -8.164270401000977
    8. '[' → logprob: -8.539270401000977
    9. ' :' → logprob: -8.539270401000977
    10. ' :
' → logprob: -9.039270401000977

Token 500: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.695411741733551
    2. 'new' → logprob: -0.695411741733551
    3. '	new' → logprob: -7.445411682128906
    4. 'pass' → logprob: -7.695411682128906
    5. '   ' → logprob: -7.820411682128906
    6. ' ' → logprob: -8.070411682128906
    7. ' pass' → logprob: -9.570411682128906
    8. '_' → logprob: -9.945411682128906
    9. '_new' → logprob: -9.945411682128906
    10. ' s' → logprob: -10.070411682128906

Token 501: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.022678224369883537
    2. ' new' → logprob: -3.8976781368255615
    3. 'pass' → logprob: -6.772678375244141
    4. '   ' → logprob: -8.27267837524414
    5. 's' → logprob: -8.64767837524414
    6. 'tmp' → logprob: -8.77267837524414
    7. '_' → logprob: -9.14767837524414
    8. 'continue' → logprob: -9.52267837524414
    9. 'print' → logprob: -9.89767837524414
    10. 'ans' → logprob: -10.14767837524414

Token 502: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.750001907348633
    3. 's' → logprob: -15.000001907348633
    4. 'new' → logprob: -16.125001907348633
    5. '_new' → logprob: -16.750001907348633
    6. '+' → logprob: -19.375001907348633
    7. '```' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '_
' → logprob: -19.750001907348633
    10. '_str' → logprob: -19.875001907348633

Token 503: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0017100441036745906
    2. '+' → logprob: -7.251709938049316
    3. ' +=' → logprob: -7.376709938049316
    4. '+="' → logprob: -8.751709938049316
    5. '+='' → logprob: -8.751709938049316
    6. '=' → logprob: -10.001709938049316
    7. ' +' → logprob: -11.751709938049316
    8. ']+=' → logprob: -13.876709938049316
    9. '+=(' → logprob: -14.251709938049316
    10. '.' → logprob: -14.251709938049316

Token 504: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8337119221687317
    2. 's' → logprob: -0.9587119221687317
    3. '"*' → logprob: -2.833711862564087
    4. ''*' → logprob: -3.333711862564087
    5. '"#' → logprob: -3.458711862564087
    6. '""' → logprob: -3.833711862564087
    7. ''' → logprob: -4.083712100982666
    8. ''#' → logprob: -5.208712100982666
    9. '"_' → logprob: -6.083712100982666
    10. '"s' → logprob: -6.333712100982666

Token 505: 'W' (ID: 54)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9225137829780579
    2. '*' → logprob: -1.297513723373413
    3. '*"' → logprob: -1.922513723373413
    4. '_' → logprob: -3.172513723373413
    5. '?"' → logprob: -3.922513723373413
    6. ' "' → logprob: -3.922513723373413
    7. '_"' → logprob: -3.922513723373413
    8. '?' → logprob: -3.922513723373413
    9. 's' → logprob: -4.172513961791992
    10. '#' → logprob: -4.547513961791992

Token 506: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.021012436598539352
    2. '")' → logprob: -3.896012544631958
    3. '<|end|>' → logprob: -7.771012306213379
    4. '"#' → logprob: -11.021012306213379
    5. '"""' → logprob: -11.771012306213379
    6. '"]' → logprob: -12.521012306213379
    7. '"*' → logprob: -12.771012306213379
    8. '"}' → logprob: -13.146012306213379
    9. '">' → logprob: -13.146012306213379
    10. '<|end|>' → logprob: -13.521012306213379

Token 507: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14166462421417236
    2. '<|end|>' → logprob: -2.141664505004883
    3. '
' → logprob: -4.641664505004883
    4. ')' → logprob: -6.641664505004883
    5. '#' → logprob: -6.891664505004883
    6. 'new' → logprob: -7.141664505004883
    7. '[' → logprob: -8.141664505004883
    8. '#print' → logprob: -8.141664505004883
    9. 'for' → logprob: -8.141664505004883
    10. '```' → logprob: -8.266664505004883

Token 508: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20143964886665344
    2. ' s' → logprob: -1.701439619064331
    3. 'new' → logprob: -10.82643985748291
    4. ' new' → logprob: -12.57643985748291
    5. ' ' → logprob: -13.82643985748291
    6. '(s' → logprob: -13.95143985748291
    7. '_s' → logprob: -15.32643985748291
    8. '(' → logprob: -15.45143985748291
    9. '   ' → logprob: -15.95143985748291
    10. ' ' → logprob: -15.95143985748291

Token 509: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001612267515156418
    2. '[' → logprob: -8.750161170959473
    3. 'idx' → logprob: -13.125161170959473
    4. '[
' → logprob: -15.000161170959473
    5. '[int' → logprob: -16.37516212463379
    6. '[index' → logprob: -16.87516212463379
    7. '[i' → logprob: -16.87516212463379
    8. '[src' → logprob: -17.25016212463379
    9. '[ind' → logprob: -17.25016212463379
    10. '	idx' → logprob: -17.75016212463379

Token 510: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06668824702501297
    2. ' ==' → logprob: -2.816688299179077
    3. ']==' → logprob: -6.316688060760498
    4. ']' → logprob: -6.816688060760498
    5. '!=' → logprob: -7.441688060760498
    6. '[' → logprob: -8.066688537597656
    7. '=' → logprob: -8.316688537597656
    8. '=='' → logprob: -8.566688537597656
    9. 'else' → logprob: -8.816688537597656
    10. '=="' → logprob: -9.191688537597656

Token 511: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020624807104468346
    2. ' ==' → logprob: -4.02062463760376
    3. '!=' → logprob: -6.64562463760376
    4. '=="' → logprob: -7.39562463760376
    5. 'else' → logprob: -8.395625114440918
    6. '=='' → logprob: -8.520625114440918
    7. '=' → logprob: -10.020625114440918
    8. ' else' → logprob: -11.020625114440918
    9. ' in' → logprob: -11.145625114440918
    10. ' !=' → logprob: -11.145625114440918

Token 512: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.005413284990936518
    2. ''' → logprob: -5.755413055419922
    3. '"' → logprob: -6.130413055419922
    4. '"W' → logprob: -10.755413055419922
    5. '"L' → logprob: -11.005413055419922
    6. 'B' → logprob: -11.505413055419922
    7. '"G' → logprob: -13.130413055419922
    8. '"D' → logprob: -13.255413055419922
    9. '"A' → logprob: -13.505413055419922
    10. '```' → logprob: -13.880413055419922

Token 513: 'B' (ID: 33)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.18440063297748566
    2. 'B' → logprob: -1.9344006776809692
    3. ''' → logprob: -4.30940055847168
    4. '"' → logprob: -4.68440055847168
    5. 'R' → logprob: -7.30940055847168
    6. '"W' → logprob: -8.18440055847168
    7. '#' → logprob: -8.80940055847168
    8. '"#' → logprob: -11.18440055847168
    9. ''#' → logprob: -11.18440055847168
    10. '.B' → logprob: -11.43440055847168

Token 514: '"' (ID: 1)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3966659605503082
    2. ' else' → logprob: -1.1466659307479858
    3. '"' → logprob: -4.646666049957275
    4. '	else' → logprob: -9.021665573120117
    5. '<|end|>' → logprob: -11.271665573120117
    6. '")' → logprob: -11.771665573120117
    7. '"]' → logprob: -12.771665573120117
    8. 's' → logprob: -13.646665573120117
    9. 'lse' → logprob: -13.646665573120117
    10. 'e' → logprob: -13.771665573120117

Token 515: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06197194382548332
    2. ' else' → logprob: -2.81197190284729
    3. '	else' → logprob: -12.436971664428711
    4. 'el' → logprob: -16.56197166442871
    5. ' ' → logprob: -16.68697166442871
    6. 'e' → logprob: -16.93697166442871
    7. 'elses' → logprob: -17.18697166442871
    8. 'els' → logprob: -17.31197166442871
    9. '<|end|>' → logprob: -17.43697166442871
    10. '==' → logprob: -18.06197166442871

Token 516: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.0025587803684175014
    2. '"' → logprob: -6.127558708190918
    3. '"W' → logprob: -9.002558708190918
    4. ''' → logprob: -9.252558708190918
    5. ' "' → logprob: -9.377558708190918
    6. 'B' → logprob: -9.627558708190918
    7. ' B' → logprob: -13.627558708190918
    8. ' ' → logprob: -13.752558708190918
    9. '`' → logprob: -14.127558708190918
    10. '"A' → logprob: -14.752558708190918

Token 517: 'B' (ID: 33)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.16596156358718872
    2. 'B' → logprob: -1.915961503982544
    3. ''' → logprob: -5.165961742401123
    4. '"' → logprob: -12.540961265563965
    5. '"W' → logprob: -12.790961265563965
    6. ' B' → logprob: -13.040961265563965
    7. ''b' → logprob: -13.790961265563965
    8. '`' → logprob: -13.915961265563965
    9. 'b' → logprob: -14.415961265563965
    10. '.B' → logprob: -14.540961265563965

Token 518: '"

' (ID: 2678)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3470601439476013
    2. '"' → logprob: -1.597060203552246
    3. '<|end|>' → logprob: -2.597060203552246
    4. ')' → logprob: -4.472060203552246
    5. '"]' → logprob: -5.847060203552246
    6. '```' → logprob: -7.722060203552246
    7. ']' → logprob: -7.847060203552246
    8. '}' → logprob: -8.472060203552246
    9. '"}' → logprob: -8.722060203552246
    10. '">' → logprob: -9.222060203552246

Token 519: 'lr' (ID: 35878)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.625001907348633
    3. 'new' → logprob: -15.250001907348633
    4. ')' → logprob: -16.375001907348633
    5. '#print' → logprob: -16.500001907348633
    6. 'for' → logprob: -16.625001907348633
    7. '```' → logprob: -16.875001907348633
    8. '<|end|>' → logprob: -17.000001907348633
    9. 'pr' → logprob: -17.250001907348633
    10. 'return' → logprob: -17.625001907348633

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.817714512348175
    2. '=' → logprob: -0.942714512348175
    3. ',' → logprob: -1.8177144527435303
    4. 'eft' → logprob: -6.192714691162109
    5. '=[]' → logprob: -6.442714691162109
    6. 'f' → logprob: -6.817714691162109
    7. 'ef' → logprob: -7.192714691162109
    8. 'l' → logprob: -8.69271469116211
    9. '_' → logprob: -9.06771469116211
    10. 'e' → logprob: -9.31771469116211

Token 521: ' ""
' (ID: 18061)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17415080964565277
    2. '[' → logprob: -2.1741507053375244
    3. 'new' → logprob: -4.2991509437561035
    4. '[]' → logprob: -4.7991509437561035
    5. '[n' → logprob: -4.7991509437561035
    6. 'n' → logprob: -5.6741509437561035
    7. '(' → logprob: -6.0491509437561035
    8. '[new' → logprob: -6.1741509437561035
    9. ' ' → logprob: -6.2991509437561035
    10. ' [' → logprob: -7.4241509437561035

Token 522: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.619311974034645e-05
    2. 'lr' → logprob: -10.625036239624023
    3. 'i' → logprob: -12.125036239624023
    4. 'l' → logprob: -13.875036239624023
    5. 'prev' → logprob: -14.000036239624023
    6. 'fo' → logprob: -14.000036239624023
    7. 'if' → logprob: -14.125036239624023
    8. 'count' → logprob: -14.250036239624023
    9. ' for' → logprob: -14.250036239624023
    10. 'left' → logprob: -14.500036239624023

Token 523: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1019626036286354
    2. 'idx' → logprob: -2.4769625663757324
    3. 'c' → logprob: -5.351962566375732
    4. 'x' → logprob: -6.101962566375732
    5. '_i' → logprob: -6.351962566375732
    6. '_' → logprob: -6.476962566375732
    7. ' i' → logprob: -6.851962566375732
    8. '_idx' → logprob: -7.351962566375732
    9. ' idx' → logprob: -7.976962566375732
    10. 'ch' → logprob: -8.10196304321289

Token 524: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023321647197008133
    2. 'in' → logprob: -3.7733216285705566
    3. ' ' → logprob: -9.773322105407715
    4. 'range' → logprob: -11.523322105407715
    5. ',' → logprob: -13.023322105407715
    6. '	in' → logprob: -13.273322105407715
    7. '   ' → logprob: -13.398322105407715
    8. '  ' → logprob: -13.898322105407715
    9. ' i' → logprob: -14.648322105407715
    10. '(' → logprob: -14.648322105407715

Token 525: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173848554491997
    2. ' range' → logprob: -4.264173984527588
    3. 'ra' → logprob: -12.63917350769043
    4. 'ran' → logprob: -13.01417350769043
    5. 'new' → logprob: -13.13917350769043
    6. 'in' → logprob: -14.13917350769043
    7. 'r' → logprob: -14.63917350769043
    8. ' ' → logprob: -14.88917350769043
    9. ' ra' → logprob: -15.13917350769043
    10. 's' → logprob: -15.38917350769043

Token 526: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016040096525102854
    2. '2' → logprob: -7.001604080200195
    3. '(n' → logprob: -7.376604080200195
    4. '(len' → logprob: -10.001604080200195
    5. 'n' → logprob: -12.126604080200195
    6. '0' → logprob: -12.376604080200195
    7. '(l' → logprob: -13.001604080200195
    8. '((' → logprob: -13.126604080200195
    9. '(
' → logprob: -13.751604080200195
    10. 'range' → logprob: -13.876604080200195

Token 527: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011759399203583598
    2. '0' → logprob: -7.626175880432129
    3. 'len' → logprob: -8.126175880432129
    4. ' ' → logprob: -8.876175880432129
    5. 'n' → logprob: -9.376175880432129
    6. '(' → logprob: -9.501175880432129
    7. '1' → logprob: -10.001175880432129
    8. '4' → logprob: -10.626175880432129
    9. '   ' → logprob: -11.626175880432129
    10. 'new' → logprob: -12.001175880432129

Token 528: ' *' (ID: 425)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12576119601726532
    2. ' *' → logprob: -2.5007612705230713
    3. '*n' → logprob: -3.8757612705230713
    4. ' n' → logprob: -4.750761032104492
    5. '(n' → logprob: -5.125761032104492
    6. '(' → logprob: -7.750761032104492
    7. '*' → logprob: -8.250761032104492
    8. ',' → logprob: -10.125761032104492
    9. 'new' → logprob: -10.375761032104492
    10. ' (' → logprob: -11.625761032104492

Token 529: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007394690765067935
    2. 'range' → logprob: -7.500739574432373
    3. 'new' → logprob: -9.000739097595215
    4. ' n' → logprob: -10.000739097595215
    5. 's' → logprob: -11.375739097595215
    6. '(n' → logprob: -13.250739097595215
    7. ' range' → logprob: -13.250739097595215
    8. '2' → logprob: -13.500739097595215
    9. ')' → logprob: -15.000739097595215
    10. 'len' → logprob: -15.750739097595215

Token 530: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28133833408355713
    2. '):
' → logprob: -1.4063383340835571
    3. ':' → logprob: -9.531338691711426
    4. '-' → logprob: -10.031338691711426
    5. '+' → logprob: -11.031338691711426
    6. '):
' → logprob: -11.031338691711426
    7. ')' → logprob: -11.531338691711426
    8. '   ' → logprob: -11.781338691711426
    9. ':
' → logprob: -12.781338691711426
    10. ' ):' → logprob: -12.906338691711426

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.064297824399546e-05
    2. ' if' → logprob: -10.625070571899414
    3. '	l' → logprob: -11.250070571899414
    4. ' lr' → logprob: -11.375070571899414
    5. '[' → logprob: -11.750070571899414
    6. '	if' → logprob: -12.500070571899414
    7. '   ' → logprob: -12.500070571899414
    8. 'lr' → logprob: -13.000070571899414
    9. '       ' → logprob: -13.750070571899414
    10. '<|end|>' → logprob: -13.875070571899414

Token 532: ' if' (ID: 538)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.033338941633701324
    2. 'if' (adapté à ' if') → logprob: -3.533339023590088
    3. '   ' → logprob: -5.658339023590088
    4. ' lr' → logprob: -9.53333854675293
    5. ' if' → logprob: -11.15833854675293
    6. 'l' → logprob: -13.03333854675293
    7. '_lr' → logprob: -13.53333854675293
    8. 'lf' → logprob: -13.78333854675293
    9. ' ' → logprob: -14.65833854675293
    10. '    
' → logprob: -15.28333854675293

Token 533: ' new' (ID: 620)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0533281564712524
    2. '(' → logprob: -1.1783281564712524
    3. 'new' → logprob: -2.053328037261963
    4. ' s' → logprob: -2.178328037261963
    5. 'idx' → logprob: -2.803328037261963
    6. ' (' → logprob: -4.053328037261963
    7. ' idx' → logprob: -4.428328037261963
    8. ' new' → logprob: -4.678328037261963
    9. '   ' → logprob: -6.803328037261963
    10. '(s' → logprob: -7.428328037261963

Token 534: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00010950337309623137
    2. 's' → logprob: -9.125109672546387
    3. '[' → logprob: -15.625109672546387
    4. 'li' → logprob: -17.00010871887207
    5. '_' → logprob: -17.12510871887207
    6. '[idx' → logprob: -17.50010871887207
    7. 'lr' → logprob: -17.62510871887207
    8. 'idx' → logprob: -17.75010871887207
    9. 'S' → logprob: -17.87510871887207
    10. '_lr' → logprob: -18.12510871887207

Token 535: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.007679623086005449
    2. '[' → logprob: -4.882679462432861
    3. ' [' → logprob: -10.25767993927002
    4. '==' → logprob: -11.75767993927002
    5. '```' → logprob: -12.13267993927002
    6. '[
' → logprob: -12.13267993927002
    7. '[index' → logprob: -12.50767993927002
    8. '[i' → logprob: -12.88267993927002
    9. 'idx' → logprob: -13.25767993927002
    10. '[int' → logprob: -13.63267993927002

Token 536: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03065079264342785
    2. ']==' → logprob: -3.5306508541107178
    3. '==' → logprob: -7.655650615692139
    4. ']=='' → logprob: -8.405651092529297
    5. ' ]' → logprob: -9.405651092529297
    6. ']!=' → logprob: -9.655651092529297
    7. ']=="' → logprob: -10.655651092529297
    8. ')' → logprob: -11.405651092529297
    9. 'in' → logprob: -12.405651092529297
    10. ' ' → logprob: -12.655651092529297

Token 537: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0064203632064163685
    2. ' ==' → logprob: -5.256420135498047
    3. '!=' → logprob: -6.881420135498047
    4. '==
' → logprob: -9.756420135498047
    5. '=='' → logprob: -10.256420135498047
    6. ' in' → logprob: -10.506420135498047
    7. '=="' → logprob: -11.131420135498047
    8. '=' → logprob: -11.756420135498047
    9. 'in' → logprob: -12.131420135498047
    10. ' !=' → logprob: -12.756420135498047

Token 538: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.2753926217556
    2. ''' → logprob: -2.150392532348633
    3. '"W' → logprob: -2.900392532348633
    4. '"L' → logprob: -3.025392532348633
    5. '"' → logprob: -4.150392532348633
    6. ' "' → logprob: -5.900392532348633
    7. 'B' → logprob: -7.900392532348633
    8. 's' → logprob: -8.025392532348633
    9. ''L' → logprob: -8.525392532348633
    10. ' '' → logprob: -8.650392532348633

Token 539: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2512965500354767
    2. 'W' → logprob: -1.6262965202331543
    3. 'L' → logprob: -4.376296520233154
    4. ''' → logprob: -5.126296520233154
    5. '"' → logprob: -6.001296520233154
    6. '"W' → logprob: -6.126296520233154
    7. '"B' → logprob: -6.251296520233154
    8. 'R' → logprob: -8.751296997070312
    9. '"L' → logprob: -8.876296997070312
    10. 'l' → logprob: -10.376296997070312

Token 540: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.5247156023979187
    2. '":' → logprob: -1.0247156620025635
    3. '"' → logprob: -3.1497156620025635
    4. ':
' → logprob: -5.774715423583984
    5. ':' → logprob: -6.024715423583984
    6. '):
' → logprob: -7.649715423583984
    7. '":
' → logprob: -8.399715423583984
    8. ')' → logprob: -9.149715423583984
    9. '):' → logprob: -10.524715423583984
    10. '"):
' → logprob: -10.649715423583984

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05343242362141609
    2. ':' → logprob: -3.5534324645996094
    3. ':
' → logprob: -3.8034324645996094
    4. ' and' → logprob: -7.928432464599609
    5. '	' → logprob: -8.92843246459961
    6. ' lr' → logprob: -8.92843246459961
    7. '
' → logprob: -9.05343246459961
    8. 'lr' → logprob: -9.67843246459961
    9. ' or' → logprob: -9.80343246459961
    10. '   ' → logprob: -9.92843246459961

Token 542: ' lr' (ID: 58770)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' (adapté à ' lr') → logprob: -0.0008639379520900548
    2. ' lr' → logprob: -7.375864028930664
    3. '   ' → logprob: -8.750864028930664
    4. 'if' → logprob: -10.625864028930664
    5. 'l' → logprob: -11.000864028930664
    6. ' ' → logprob: -11.625864028930664
    7. 'print' → logprob: -12.500864028930664
    8. '_lr' → logprob: -12.625864028930664
    9. 'lc' → logprob: -12.750864028930664
    10. '  ' → logprob: -13.125864028930664

Token 543: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1611437350511551
    2. ' +=' → logprob: -1.9111437797546387
    3. '+='' → logprob: -7.911143779754639
    4. '+="' → logprob: -8.28614330291748
    5. '=' → logprob: -8.41114330291748
    6. '+' → logprob: -10.03614330291748
    7. ' =' → logprob: -10.91114330291748
    8. ' +' → logprob: -11.28614330291748
    9. ']+=' → logprob: -13.28614330291748
    10. '+=(' → logprob: -14.16114330291748

Token 544: ' "' (ID: 392)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.06280229985713959
    2. '"' → logprob: -2.937802314758301
    3. 'L' → logprob: -5.437802314758301
    4. ''' → logprob: -6.437802314758301
    5. ''L' → logprob: -6.812802314758301
    6. '"B' → logprob: -7.562802314758301
    7. 'R' → logprob: -9.3128023147583
    8. '"W' → logprob: -9.4378023147583
    9. '"<' → logprob: -10.3128023147583
    10. '")' → logprob: -11.1878023147583

Token 545: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03419836610555649
    2. '"' → logprob: -4.15919828414917
    3. 'R' → logprob: -4.40919828414917
    4. '"L' → logprob: -5.40919828414917
    5. 'l' → logprob: -7.53419828414917
    6. '(' → logprob: -9.034198760986328
    7. 'LR' → logprob: -9.159198760986328
    8. '("' → logprob: -9.409198760986328
    9. ''' → logprob: -9.409198760986328
    10. '1' → logprob: -9.534198760986328

Token 546: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009854302741587162
    2. '"
' → logprob: -5.009854316711426
    3. 'L' → logprob: -6.259854316711426
    4. '"L' → logprob: -6.759854316711426
    5. 'R' → logprob: -10.384854316711426
    6. '"
' → logprob: -12.759854316711426
    7. '">' → logprob: -13.134854316711426
    8. '"E' → logprob: -13.259854316711426
    9. '"B' → logprob: -13.384854316711426
    10. ' "' → logprob: -13.509854316711426

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6439046859741211
    2. 'else' → logprob: -0.7689046859741211
    3. ' else' → logprob: -4.518904685974121
    4. 'elif' → logprob: -8.393904685974121
    5. '	else' → logprob: -9.768904685974121
    6. '  ' → logprob: -10.643904685974121
    7. ' ' → logprob: -11.143904685974121
    8. '"' → logprob: -12.268904685974121
    9. '
' → logprob: -12.643904685974121
    10. '       ' → logprob: -12.893904685974121

Token 548: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08119787275791168
    2. ' else' → logprob: -2.58119797706604
    3. 'elif' → logprob: -6.581197738647461
    4. '	else' → logprob: -7.081197738647461
    5. ' ' → logprob: -10.956197738647461
    6. ' elif' → logprob: -11.081197738647461
    7. '   ' → logprob: -11.206197738647461
    8. '"' → logprob: -11.206197738647461
    9. '  ' → logprob: -12.456197738647461
    10. '<|end|>' → logprob: -12.581197738647461

Token 549: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7429472208023071
    2. '       ' → logprob: -0.7429472208023071
    3. ':
' → logprob: -3.3679471015930176
    4. ' :' → logprob: -5.117947101593018
    5. ' :
' → logprob: -6.117947101593018
    6. ' =' → logprob: -6.617947101593018
    7. ' +=' → logprob: -6.617947101593018
    8. '=' → logprob: -6.867947101593018
    9. '   ' → logprob: -7.617947101593018
    10. '+' → logprob: -8.492947578430176

Token 550: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.30151668190956116
    2. '"L' → logprob: -1.6765166521072388
    3. 'L' → logprob: -2.8015167713165283
    4. ' L' → logprob: -4.801516532897949
    5. ' "' → logprob: -6.801516532897949
    6. '       ' → logprob: -7.051516532897949
    7. ''' → logprob: -7.176516532897949
    8. ''L' → logprob: -7.551516532897949
    9. '   ' → logprob: -7.926516532897949
    10. 'lr' → logprob: -8.92651653289795

Token 551: ' lr' (ID: 58770)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.2013612985610962
    2. '"' → logprob: -2.3263611793518066
    3. 'L' → logprob: -2.5763611793518066
    4. '"B' → logprob: -5.076361179351807
    5. ''L' → logprob: -6.576361179351807
    6. ''' → logprob: -7.701361179351807
    7. '"W' → logprob: -9.201361656188965
    8. 'B' → logprob: -9.451361656188965
    9. '"G' → logprob: -9.576361656188965
    10. '"."' → logprob: -10.076361656188965

Token 552: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011111253872513771
    2. ' +=' → logprob: -4.511111259460449
    3. '+='' → logprob: -10.38611125946045
    4. '+="' → logprob: -11.01111125946045
    5. '+' → logprob: -11.13611125946045
    6. '=' → logprob: -14.26111125946045
    7. ']+=' → logprob: -14.51111125946045
    8. ' +' → logprob: -15.01111125946045
    9. '+=(' → logprob: -16.761110305786133
    10. '.append' → logprob: -18.761110305786133

Token 553: ' "' (ID: 392)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.07455579191446304
    2. '"' → logprob: -3.0745558738708496
    3. '"B' → logprob: -3.6995558738708496
    4. 'L' → logprob: -7.44955587387085
    5. '"G' → logprob: -8.574555397033691
    6. '"W' → logprob: -9.699555397033691
    7. ''L' → logprob: -10.824555397033691
    8. ' "' → logprob: -11.824555397033691
    9. '"S' → logprob: -11.949555397033691
    10. 'B' → logprob: -12.199555397033691

Token 554: 'L' (ID: 43)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.04659773409366608
    2. ''L' → logprob: -3.546597719192505
    3. ''' → logprob: -4.546597957611084
    4. '"B' → logprob: -5.796597957611084
    5. '"' → logprob: -6.421597957611084
    6. 'L' → logprob: -6.671597957611084
    7. '"W' → logprob: -9.171597480773926
    8. '"G' → logprob: -10.421597480773926
    9. '""' → logprob: -11.796597480773926
    10. '"D' → logprob: -11.921597480773926

Token 555: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07217339426279068
    2. '<|end|>' → logprob: -3.0721733570098877
    3. '")' → logprob: -4.822173595428467
    4. '"' → logprob: -4.822173595428467
    5. '```' → logprob: -5.197173595428467
    6. '}' → logprob: -7.697173595428467
    7. ']' → logprob: -8.072173118591309
    8. '">' → logprob: -8.572173118591309
    9. '
' → logprob: -9.072173118591309
    10. '#' → logprob: -9.197173118591309

Token 556: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005968777113594115
    2. 'if' → logprob: -7.75059700012207
    3. 'pr' → logprob: -9.62559700012207
    4. 'for' → logprob: -9.62559700012207
    5. 'answer' → logprob: -12.12559700012207
    6. 'count' → logprob: -12.37559700012207
    7. ')' → logprob: -12.37559700012207
    8. 'ans' → logprob: -12.87559700012207
    9. ' print' → logprob: -13.00059700012207
    10. 'p' → logprob: -13.25059700012207

Token 557: ' lr' (ID: 58770)
  Prédit: ' lr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lr' → logprob: -0.09869886934757233
    2. ' len' → logprob: -3.223698854446411
    3. ' new' → logprob: -4.22369909286499
    4. ' n' → logprob: -4.47369909286499
    5. ' ' → logprob: -4.84869909286499
    6. 'lr' → logprob: -5.09869909286499
    7. '"' → logprob: -5.22369909286499
    8. ' s' → logprob: -5.59869909286499
    9. ' "' → logprob: -5.97369909286499
    10. ' not' → logprob: -7.84869909286499

Token 558: '.count' (ID: 14019)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6578996181488037
    2. '.count' → logprob: -1.0328996181488037
    3. ' ==' → logprob: -2.5328996181488037
    4. '[' → logprob: -3.5328996181488037
    5. '.' → logprob: -4.657899856567383
    6. '.startswith' → logprob: -5.907899856567383
    7. '.find' → logprob: -6.157899856567383
    8. '!=' → logprob: -6.282899856567383
    9. ' .' → logprob: -7.907899856567383
    10. ' !=' → logprob: -8.407899856567383

Token 559: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5156385898590088
    2. '(' → logprob: -1.1406385898590088
    3. '('' → logprob: -2.640638589859009
    4. '("("' → logprob: -5.14063835144043
    5. '(">' → logprob: -5.14063835144043
    6. '("="' → logprob: -9.89063835144043
    7. ' (' → logprob: -9.89063835144043
    8. '("")' → logprob: -10.51563835144043
    9. '(
' → logprob: -10.89063835144043
    10. '(l' → logprob: -10.89063835144043

Token 560: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7240467667579651
    2. ''' → logprob: -1.5990467071533203
    3. 'L' → logprob: -1.8490467071533203
    4. '"' → logprob: -2.4740467071533203
    5. '"L' → logprob: -3.5990467071533203
    6. 'B' → logprob: -3.7240467071533203
    7. '"B' → logprob: -4.34904670715332
    8. ''L' → logprob: -4.97404670715332
    9. ' R' → logprob: -10.47404670715332
    10. ')' → logprob: -10.84904670715332

Token 561: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09085731953382492
    2. '")' → logprob: -2.4658572673797607
    3. ')")' → logprob: -6.96585750579834
    4. '>' → logprob: -8.09085750579834
    5. '%' → logprob: -8.46585750579834
    6. '()' → logprob: -9.09085750579834
    7. '(' → logprob: -9.71585750579834
    8. ' ")' → logprob: -9.96585750579834
    9. ' )' → logprob: -10.21585750579834
    10. '("' → logprob: -10.21585750579834

Token 562: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0582396984100342
    2. ' ==' → logprob: -1.1832396984100342
    3. ' <' → logprob: -2.558239698410034
    4. '%' → logprob: -2.808239698410034
    5. '>' → logprob: -2.808239698410034
    6. ' %' → logprob: -2.808239698410034
    7. '==' → logprob: -3.308239698410034
    8. ' >=' → logprob: -3.683239698410034
    9. '<' → logprob: -4.683239936828613
    10. ' !=' → logprob: -5.058239936828613

Token 563: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29083654284477234
    2. ' n' → logprob: -1.5408365726470947
    3. 'lr' → logprob: -4.040836334228516
    4. '0' → logprob: -4.665836334228516
    5. ' lr' → logprob: -4.790836334228516
    6. ' ' → logprob: -6.540836334228516
    7. '1' → logprob: -7.790836334228516
    8. '2' → logprob: -7.790836334228516
    9. 'nr' → logprob: -8.915836334228516
    10. 'nl' → logprob: -8.915836334228516

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016294787637889385
    2. ':
' → logprob: -6.62662935256958
    3. ' or' → logprob: -8.376629829406738
    4. ':return' → logprob: -9.751629829406738
    5. ')' → logprob: -12.501629829406738
    6. 'or' → logprob: -12.626629829406738
    7. '):' → logprob: -12.876629829406738
    8. ' :' → logprob: -13.001629829406738
    9. ' and' → logprob: -13.376629829406738
    10. '.' → logprob: -14.626629829406738

Token 565: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10698508471250534
    2. ':
' → logprob: -2.356985092163086
    3. '   ' → logprob: -5.356985092163086
    4. 'print' → logprob: -6.356985092163086
    5. ' print' → logprob: -8.856985092163086
    6. ':return' → logprob: -10.106985092163086
    7. ' and' → logprob: -10.606985092163086
    8. ' or' → logprob: -10.606985092163086
    9. ' :' → logprob: -10.981985092163086
    10. '.' → logprob: -11.106985092163086

Token 566: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5780183672904968
    2. 'print' (adapté à ' print') → logprob: -0.8280183672904968
    3. '   ' → logprob: -6.7030181884765625
    4. ' sys' → logprob: -8.203018188476562
    5. 'exit' → logprob: -8.453018188476562
    6. ' exit' → logprob: -8.953018188476562
    7. 'pr' → logprob: -9.203018188476562
    8. 'sys' → logprob: -9.703018188476562
    9. '
' → logprob: -11.453018188476562
    10. ' prin' → logprob: -11.578018188476562

Token 567: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.36135193705558777
    2. '(-' → logprob: -1.3613519668579102
    3. '(' → logprob: -3.11135196685791
    4. '(":' → logprob: -6.61135196685791
    5. '("-' → logprob: -7.61135196685791
    6. '('' → logprob: -8.86135196685791
    7. '("?' → logprob: -8.86135196685791
    8. '(
' → logprob: -9.11135196685791
    9. '-' → logprob: -9.86135196685791
    10. '()' → logprob: -10.23635196685791

Token 568: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02735917642712593
    2. '"' → logprob: -5.1523590087890625
    3. '-no' → logprob: -5.2773590087890625
    4. '-No' → logprob: -5.6523590087890625
    5. '"No' → logprob: -5.9023590087890625
    6. 'No' → logprob: -6.2773590087890625
    7. '0' → logprob: -6.4023590087890625
    8. '-l' → logprob: -6.5273590087890625
    9. '-im' → logprob: -6.7773590087890625
    10. '-r' → logprob: -7.0273590087890625

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006500058807432652
    2. ')
' → logprob: -7.375649929046631
    3. ' )' → logprob: -11.375650405883789
    4. ')return' → logprob: -11.625650405883789
    5. '
' → logprob: -13.750650405883789
    6. '()' → logprob: -14.875650405883789
    7. ')#' → logprob: -15.000650405883789
    8. '")' → logprob: -15.125650405883789
    9. '')' → logprob: -15.250650405883789
    10. '())' → logprob: -15.500650405883789

Token 570: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08817421644926071
    2. '   ' → logprob: -2.7131741046905518
    3. '
' → logprob: -4.588174343109131
    4. 'elif' → logprob: -5.588174343109131
    5. ')' → logprob: -5.838174343109131
    6. '<|end|>' → logprob: -7.588174343109131
    7. '    
' → logprob: -8.463173866271973
    8. 'exit' → logprob: -8.713173866271973
    9. ' else' → logprob: -9.088173866271973
    10. ',' → logprob: -10.338173866271973

Token 571: ' exit' (ID: 10654)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3640367388725281
    2. 'else' → logprob: -1.4890367984771729
    3. '   ' → logprob: -3.364036798477173
    4. '    
' → logprob: -4.114036560058594
    5. ')' → logprob: -4.739036560058594
    6. 'elif' → logprob: -4.864036560058594
    7. 'exit' (adapté à ' exit') → logprob: -4.864036560058594
    8. '\n' → logprob: -6.739036560058594
    9. ' exit' → logprob: -7.739036560058594
    10. '  
' → logprob: -7.864036560058594

Token 572: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06150786206126213
    2. 'print' → logprob: -3.4365079402923584
    3. '()' → logprob: -4.936507701873779
    4. ')' → logprob: -5.186507701873779
    5. '()
' → logprob: -5.436507701873779
    6. '(' → logprob: -5.936507701873779
    7. '  
' → logprob: -6.186507701873779
    8. '(
' → logprob: -6.436507701873779
    9. 'if' → logprob: -7.186507701873779
    10. '
' → logprob: -7.311507701873779

Token 573: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3147629499435425
    2. 'print' → logprob: -1.3147629499435425
    3. 'for' → logprob: -1.8147629499435425
    4. '(' → logprob: -1.8147629499435425
    5. 'if' → logprob: -4.064763069152832
    6. '(
' → logprob: -4.064763069152832
    7. 'n' → logprob: -4.314763069152832
    8. 'p' → logprob: -4.564763069152832
    9. 'from' → logprob: -4.689763069152832
    10. 'l' → logprob: -5.064763069152832

Token 574: 'count' (ID: 5420)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18313680589199066
    2. ' =' → logprob: -2.1831367015838623
    3. 'eft' → logprob: -3.5581367015838623
    4. '=' → logprob: -5.558136940002441
    5. ',' → logprob: -5.683136940002441
    6. 'count' → logprob: -5.808136940002441
    7. 'cnt' → logprob: -5.933136940002441
    8. 'ft' → logprob: -6.558136940002441
    9. 'stack' → logprob: -6.683136940002441
    10. 'e' → logprob: -6.808136940002441

Token 575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31393784284591675
    2. '=' → logprob: -1.3139379024505615
    3. ',' → logprob: -7.313937664031982
    4. ' ' → logprob: -12.43893814086914
    5. ' ,' → logprob: -12.93893814086914
    6. '_' → logprob: -14.18893814086914
    7. 's' → logprob: -14.43893814086914
    8. ' ' → logprob: -14.81393814086914
    9. ' =
' → logprob: -15.06393814086914
    10. '  ' → logprob: -15.31393814086914

Token 576: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027009700424969196
    2. 'r' → logprob: -6.0027008056640625
    3. 'lr' → logprob: -9.127700805664062
    4. ' ' → logprob: -9.252700805664062
    5. 'rr' → logprob: -12.502700805664062
    6. '1' → logprob: -12.752700805664062
    7. ' r' → logprob: -13.252700805664062
    8. 'cnt' → logprob: -13.377700805664062
    9. '[' → logprob: -13.752700805664062
    10. 'idx' → logprob: -13.940200805664062

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002695032162591815
    2. 'r' → logprob: -6.127695083618164
    3. 'lr' → logprob: -7.752695083618164
    4. '1' → logprob: -11.127695083618164
    5. 'n' → logprob: -11.377695083618164
    6. ' ' → logprob: -11.627695083618164
    7. '[' → logprob: -12.002695083618164
    8. 'R' → logprob: -12.127695083618164
    9. 'rr' → logprob: -12.377695083618164
    10. 'idx' → logprob: -12.627695083618164

Token 578: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031595381442457438
    2. ' r' → logprob: -6.128159523010254
    3. 'for' → logprob: -7.503159523010254
    4. ',' → logprob: -9.003159523010254
    5. ' for' → logprob: -9.253159523010254
    6. ',r' → logprob: -9.753159523010254
    7. 'c' → logprob: -10.378159523010254
    8. '<|end|>' → logprob: -10.753159523010254
    9. 'rc' → logprob: -11.003159523010254
    10. ';' → logprob: -11.253159523010254

Token 579: 'for' (ID: 1938)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01272506918758154
    2. 'rc' → logprob: -4.762724876403809
    3. 'stack' → logprob: -6.137724876403809
    4. 'balance' → logprob: -7.012724876403809
    5. 'for' → logprob: -7.762724876403809
    6. ' r' → logprob: -9.512724876403809
    7. 'l' → logprob: -9.512724876403809
    8. 'answer' → logprob: -9.887724876403809
    9. 'count' → logprob: -10.262724876403809
    10. 'd' → logprob: -10.262724876403809

Token 580: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6721989512443542
    2. ' idx' → logprob: -1.547199010848999
    3. 'c' → logprob: -2.047199010848999
    4. 'i' → logprob: -3.172199010848999
    5. 'char' → logprob: -3.422199010848999
    6. ' i' → logprob: -3.672199010848999
    7. 'ch' → logprob: -3.797199010848999
    8. ' c' → logprob: -4.42219877243042
    9. ' ch' → logprob: -4.92219877243042
    10. ' char' → logprob: -5.79719877243042

Token 581: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033830687403678894
    2. 'in' → logprob: -3.4088306427001953
    3. ' ' → logprob: -8.658830642700195
    4. '	in' → logprob: -12.158830642700195
    5. ',' → logprob: -13.408830642700195
    6. '   ' → logprob: -14.408830642700195
    7. ' i' → logprob: -14.408830642700195
    8. 'range' → logprob: -14.533830642700195
    9. '  ' → logprob: -14.783830642700195
    10. '=' → logprob: -15.033830642700195

Token 582: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.63263338804245
    2. ' range' → logprob: -0.75763338804245
    3. ' in' → logprob: -11.632633209228516
    4. ' ' → logprob: -11.757633209228516
    5. 'new' → logprob: -12.882633209228516
    6. 'in' → logprob: -13.132633209228516
    7. ' ra' → logprob: -13.257633209228516
    8. ' new' → logprob: -13.257633209228516
    9. 'ran' → logprob: -13.507633209228516
    10. 'ra' → logprob: -13.757633209228516

Token 583: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09880384057760239
    2. ' range' → logprob: -2.723803758621216
    3. '(' → logprob: -3.598803758621216
    4. '2' → logprob: -7.098803997039795
    5. '(range' → logprob: -8.848803520202637
    6. '0' → logprob: -9.598803520202637
    7. ' (' → logprob: -10.723803520202637
    8. ' ' → logprob: -10.848803520202637
    9. '   ' → logprob: -11.348803520202637
    10. 'in' → logprob: -13.473803520202637

Token 584: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010103817097842693
    2. '0' → logprob: -4.885103702545166
    3. 'range' → logprob: -6.135103702545166
    4. '(' → logprob: -8.510104179382324
    5. ' ' → logprob: -9.385104179382324
    6. 'len' → logprob: -11.135104179382324
    7. ' range' → logprob: -12.010104179382324
    8. '   ' → logprob: -12.135104179382324
    9. '1' → logprob: -12.135104179382324
    10. 'lr' → logprob: -12.510104179382324

Token 585: ' *' (ID: 425)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6747572422027588
    2. '(n' → logprob: -1.0497572422027588
    3. ' n' → logprob: -2.424757242202759
    4. '(' → logprob: -4.04975700378418
    5. ' *' → logprob: -4.42475700378418
    6. ',' → logprob: -5.67475700378418
    7. '+' → logprob: -5.79975700378418
    8. 'range' → logprob: -5.79975700378418
    9. ' range' → logprob: -5.92475700378418
    10. '   ' → logprob: -6.04975700378418

Token 586: ' n' (ID: 297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0027110804803669453
    2. ' range' → logprob: -6.127711296081543
    3. '(' → logprob: -8.252711296081543
    4. '2' → logprob: -8.252711296081543
    5. 'n' → logprob: -13.252711296081543
    6. '(range' → logprob: -13.627711296081543
    7. '[' → logprob: -14.877711296081543
    8. ' ' → logprob: -15.127711296081543
    9. ' (' → logprob: -15.377711296081543
    10. '   ' → logprob: -15.627711296081543

Token 587: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8394143581390381
    2. '):
' → logprob: -1.339414358139038
    3. ':
' → logprob: -1.589414358139038
    4. '):' → logprob: -2.589414358139038
    5. '   ' → logprob: -4.214414596557617
    6. '(' → logprob: -5.714414596557617
    7. '+' → logprob: -5.714414596557617
    8. '():
' → logprob: -6.714414596557617
    9. ' :' → logprob: -6.839414596557617
    10. '(n' → logprob: -7.464414596557617

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007339857402257621
    2. '	if' → logprob: -7.750733852386475
    3. ' if' → logprob: -8.625734329223633
    4. '	   ' → logprob: -9.875734329223633
    5. '       ' → logprob: -11.000734329223633
    6. '   ' → logprob: -11.250734329223633
    7. 'if' → logprob: -11.375734329223633
    8. '    ' → logprob: -12.375734329223633
    9. '	l' → logprob: -12.375734329223633
    10. '‌' → logprob: -12.750734329223633

Token 589: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8331934809684753
    2. 'if' (adapté à ' if') → logprob: -0.9581934809684753
    3. ' if' → logprob: -1.7081935405731201
    4. ' l' → logprob: -8.8331937789917
    5. 'l' → logprob: -8.9581937789917
    6. '	if' → logprob: -9.5831937789917
    7. ' ' → logprob: -9.8331937789917
    8. '       ' → logprob: -10.0831937789917
    9. 'c' → logprob: -10.2081937789917
    10. '  ' → logprob: -10.4581937789917

Token 590: ' lr' (ID: 58770)
  Prédit: ' lr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lr' → logprob: -0.25269243121147156
    2. 'lr' → logprob: -1.502692461013794
    3. ' new' → logprob: -8.627692222595215
    4. 'new' → logprob: -8.877692222595215
    5. 'l' → logprob: -9.002692222595215
    6. ' ' → logprob: -9.627692222595215
    7. '(l' → logprob: -9.752692222595215
    8. '   ' → logprob: -10.002692222595215
    9. ' l' → logprob: -10.127692222595215
    10. 's' → logprob: -10.127692222595215

Token 591: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.3358446166384965e-05
    2. 'idx' → logprob: -10.250053405761719
    3. '[' → logprob: -11.500053405761719
    4. '[
' → logprob: -13.500053405761719
    5. '==' → logprob: -13.875053405761719
    6. '[i' → logprob: -14.125053405761719
    7. '[count' → logprob: -14.250053405761719
    8. ']' → logprob: -14.375053405761719
    9. ' idx' → logprob: -14.875053405761719
    10. '   ' → logprob: -15.000053405761719

Token 592: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16356150805950165
    2. ' ==' → logprob: -1.913561463356018
    3. ']==' → logprob: -6.4135613441467285
    4. ']' → logprob: -7.0385613441467285
    5. '=' → logprob: -7.9135613441467285
    6. '==
' → logprob: -8.288561820983887
    7. '=='' → logprob: -9.288561820983887
    8. '=="' → logprob: -9.538561820983887
    9. ']=='' → logprob: -11.413561820983887
    10. ')' → logprob: -12.538561820983887

Token 593: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002618466503918171
    2. ' ==' → logprob: -6.252618312835693
    3. '=' → logprob: -7.377618312835693
    4. '==
' → logprob: -10.127618789672852
    5. '=='' → logprob: -11.252618789672852
    6. 'in' → logprob: -12.002618789672852
    7. '=="' → logprob: -12.877618789672852
    8. '[' → logprob: -13.877618789672852
    9. ']==' → logprob: -14.752618789672852
    10. ' ' → logprob: -15.377618789672852

Token 594: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08461549133062363
    2. '"' → logprob: -3.084615468978882
    3. 'R' → logprob: -3.584615468978882
    4. ''L' → logprob: -5.584615707397461
    5. '"L' → logprob: -5.959615707397461
    6. ' '' → logprob: -7.584615707397461
    7. '"B' → logprob: -8.334615707397461
    8. ' R' → logprob: -8.459615707397461
    9. ' "' → logprob: -9.584615707397461
    10. 'L' → logprob: -9.709615707397461

Token 595: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.015462308190762997
    2. 'L' → logprob: -4.390462398529053
    3. ''' → logprob: -6.265462398529053
    4. '"' → logprob: -7.015462398529053
    5. ''L' → logprob: -9.890461921691895
    6. '"L' → logprob: -10.140461921691895
    7. 'B' → logprob: -10.390461921691895
    8. ' R' → logprob: -10.765461921691895
    9. '`' → logprob: -14.265461921691895
    10. 'RL' → logprob: -14.390461921691895

Token 596: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6082679629325867
    2. ':
' → logprob: -0.8582679629325867
    3. '):
' → logprob: -3.8582680225372314
    4. ')' → logprob: -5.733267784118652
    5. '):' → logprob: -6.108267784118652
    6. '+' → logprob: -6.733267784118652
    7. '=' → logprob: -6.733267784118652
    8. '":' → logprob: -7.483267784118652
    9. '":
' → logprob: -7.858267784118652
    10. '==' → logprob: -7.983267784118652

Token 597: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7872857451438904
    2. ':
' → logprob: -0.9122857451438904
    3. '       ' → logprob: -2.787285804748535
    4. '   ' → logprob: -2.912285804748535
    5. ' l' → logprob: -4.787285804748535
    6. '	l' → logprob: -5.412285804748535
    7. 'l' → logprob: -6.287285804748535
    8. ',' → logprob: -6.537285804748535
    9. ' :
' → logprob: -6.662285804748535
    10. '):
' → logprob: -6.787285804748535

Token 598: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -9.376848902320489e-05
    2. ' l' → logprob: -9.625093460083008
    3. 'if' → logprob: -11.375093460083008
    4. '   ' → logprob: -11.625093460083008
    5. 'print' → logprob: -12.500093460083008
    6. '       ' → logprob: -13.250093460083008
    7. 'break' → logprob: -14.375093460083008
    8. '	l' → logprob: -15.125093460083008
    9. 'lc' → logprob: -15.875093460083008
    10. '0' → logprob: -16.000093460083008

Token 599: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.981667537620524e-06
    2. 'c' → logprob: -14.125001907348633
    3. 'l' → logprob: -14.625001907348633
    4. '+=' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.250001907348633
    6. 'counter' → logprob: -16.375001907348633
    7. '+' → logprob: -16.500001907348633
    8. 'print' → logprob: -16.750001907348633
    9. '_count' → logprob: -16.875001907348633
    10. ' +=' → logprob: -16.875001907348633

Token 600: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5243039727210999
    2. '+=' → logprob: -0.8993039727210999
    3. '=' → logprob: -7.149303913116455
    4. ' -=' → logprob: -8.524304389953613
    5. '-=' → logprob: -9.399304389953613
    6. ' =' → logprob: -10.149304389953613
    7. '+' → logprob: -10.149304389953613
    8. '>' → logprob: -11.149304389953613
    9. ' >' → logprob: -12.399304389953613
    10. '==' → logprob: -12.774304389953613

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026634239475242794
    2. ' ' → logprob: -8.375266075134277
    3. '-' → logprob: -10.375266075134277
    4. '0' → logprob: -13.500266075134277
    5. ')' → logprob: -14.000266075134277
    6. ' -' → logprob: -14.250266075134277
    7. '2' → logprob: -15.000266075134277
    8. 'ans' → logprob: -15.375266075134277
    9. 'l' → logprob: -15.500266075134277
    10. '(' → logprob: -15.750266075134277

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010700009443098679
    2. '-' → logprob: -10.250106811523438
    3. 'ans' → logprob: -10.750106811523438
    4. ' ' → logprob: -11.375106811523438
    5. 'l' → logprob: -11.750106811523438
    6. 'lr' → logprob: -12.125106811523438
    7. '(' → logprob: -12.250106811523438
    8. '2' → logprob: -12.500106811523438
    9. 'new' → logprob: -12.500106811523438
    10. '0' → logprob: -12.625106811523438

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0684280395507812
    2. ' elif' → logprob: -1.1934280395507812
    3. 'elif' → logprob: -1.8184280395507812
    4. ' else' → logprob: -1.9434280395507812
    5. 'else' → logprob: -3.3184280395507812
    6. '	elif' → logprob: -5.068428039550781
    7. ' ' → logprob: -6.568428039550781
    8. '	else' → logprob: -7.068428039550781
    9. '       ' → logprob: -7.068428039550781
    10. ' and' → logprob: -8.068428039550781

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1508815288543701
    2. ' else' → logprob: -1.4008815288543701
    3. 'else' → logprob: -1.6508815288543701
    4. 'elif' → logprob: -2.02588152885437
    5. ' elif' → logprob: -2.27588152885437
    6. ' ' → logprob: -5.775881767272949
    7. '	elif' → logprob: -6.025881767272949
    8. '	else' → logprob: -6.650881767272949
    9. '       ' → logprob: -7.025881767272949
    10. '<|end|>' → logprob: -7.400881767272949

Token 605: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7613972425460815
    2. 'elif' → logprob: -1.5113972425460815
    3. ' else' → logprob: -1.8863972425460815
    4. '   ' → logprob: -2.261397361755371
    5. ' elif' → logprob: -3.011397361755371
    6. ' ' → logprob: -5.261397361755371
    7. '       ' → logprob: -8.011397361755371
    8. '	elif' → logprob: -8.011397361755371
    9. 'if' → logprob: -8.261397361755371
    10. '	else' → logprob: -8.511397361755371

Token 606: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07515241205692291
    2. '   ' → logprob: -3.2001523971557617
    3. ':
' → logprob: -3.5751523971557617
    4. '       ' → logprob: -6.075152397155762
    5. ' :' → logprob: -7.575152397155762
    6. ' :
' → logprob: -8.825152397155762
    7. '    ' → logprob: -9.325152397155762
    8. ' if' → logprob: -9.450152397155762
    9. '.' → logprob: -9.575152397155762
    10. '=' → logprob: -9.700152397155762

Token 607: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16041605174541473
    2. 'l' → logprob: -2.6604161262512207
    3. '   ' → logprob: -3.0354161262512207
    4. '       ' → logprob: -3.9104161262512207
    5. '	l' → logprob: -5.785416126251221
    6. 'cnt' → logprob: -5.910416126251221
    7. ' cnt' → logprob: -5.910416126251221
    8. '    ' → logprob: -7.160416126251221
    9. ' ' → logprob: -8.785415649414062
    10. ' if' → logprob: -9.160415649414062

Token 608: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012853598222136497
    2. ' l' → logprob: -4.387853622436523
    3. '1' → logprob: -9.137853622436523
    4. 'cnt' → logprob: -9.512853622436523
    5. '   ' → logprob: -9.887853622436523
    6. '0' → logprob: -9.887853622436523
    7. 'print' → logprob: -11.012853622436523
    8. '       ' → logprob: -11.512853622436523
    9. 'ans' (adapté à ' ans') → logprob: -11.762853622436523
    10. '	l' → logprob: -12.137853622436523

Token 609: ' *=' (ID: 25253)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3985428214073181
    2. ' *=' → logprob: -1.398542881011963
    3. '+=' → logprob: -3.398542881011963
    4. '=' → logprob: -3.773542881011963
    5. ' =' → logprob: -4.148542881011963
    6. '*=' → logprob: -5.148542881011963
    7. ' ' → logprob: -5.773542881011963
    8. ' -=' → logprob: -8.648542404174805
    9. '*' → logprob: -8.773542404174805
    10. ' *' → logprob: -9.023542404174805

Token 610: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0025883850175887346
    2. '2' → logprob: -6.252588272094727
    3. '(' → logprob: -8.127588272094727
    4. '(l' → logprob: -8.127588272094727
    5. ' l' → logprob: -10.002588272094727
    6. '1' → logprob: -11.752588272094727
    7. '(n' → logprob: -12.752588272094727
    8. '3' → logprob: -13.127588272094727
    9. 'max' → logprob: -13.502588272094727
    10. ' (' → logprob: -13.752588272094727

Token 611: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3425219549390022e-05
    2. 'c' → logprob: -11.37501335144043
    3. 'cout' → logprob: -15.12501335144043
    4. 'cnt' → logprob: -15.25001335144043
    5. 'index' → logprob: -15.37501335144043
    6. 'counter' → logprob: -15.37501335144043
    7. 'l' → logprob: -15.62501335144043
    8. '[count' → logprob: -15.75001335144043
    9. 'co' → logprob: -16.25001335144043
    10. '(count' → logprob: -16.25001335144043

Token 612: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00779305212199688
    2. '<|end|>' → logprob: -5.882792949676514
    3. ' +' → logprob: -6.132792949676514
    4. '*' → logprob: -6.507792949676514
    5. '```' → logprob: -8.257793426513672
    6. '+l' → logprob: -8.257793426513672
    7. '+=' → logprob: -8.632793426513672
    8. '
' → logprob: -9.632793426513672
    9. '+
' → logprob: -9.757793426513672
    10. ')' → logprob: -10.382793426513672

Token 613: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.360996485454962e-05
    2. 'ans' → logprob: -9.7500638961792
    3. ' l' → logprob: -12.7500638961792
    4. '_l' → logprob: -14.0000638961792
    5. '```' → logprob: -14.8750638961792
    6. 'import' → logprob: -15.7500638961792
    7. '1' → logprob: -16.125062942504883
    8. ',' → logprob: -16.250062942504883
    9. ' ans' → logprob: -16.500062942504883
    10. '	l' → logprob: -16.500062942504883

Token 614: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00013154871703591198
    2. 'ans' (adapté à ' ans') → logprob: -9.000131607055664
    3. ' l' → logprob: -12.000131607055664
    4. '1' → logprob: -14.750131607055664
    5. ' ans' → logprob: -15.125131607055664
    6. '_l' → logprob: -15.250131607055664
    7. 'print' → logprob: -15.250131607055664
    8. 'cnt' → logprob: -15.625131607055664
    9. 'import' → logprob: -15.875131607055664
    10. '```' → logprob: -15.875131607055664

Token 615: ' %=' (ID: 117035)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10143949836492538
    2. '%=' → logprob: -2.8514394760131836
    3. '*=' → logprob: -4.101439476013184
    4. '%' → logprob: -4.601439476013184
    5. ' +=' → logprob: -5.351439476013184
    6. '-=' → logprob: -5.601439476013184
    7. '=' → logprob: -6.726439476013184
    8. ' %=' → logprob: -6.851439476013184
    9. '//=' → logprob: -7.226439476013184
    10. '*' → logprob: -8.476439476013184

Token 616: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.6240566083070007e-06
    2. ' mod' → logprob: -13.500001907348633
    3. '(mod' → logprob: -16.500001907348633
    4. '10' → logprob: -17.000001907348633
    5. '100' → logprob: -17.625001907348633
    6. 'MOD' → logprob: -18.000001907348633
    7. '	mod' → logprob: -19.125001907348633
    8. 'moder' → logprob: -19.125001907348633
    9. '998' → logprob: -19.250001907348633
    10. '
' → logprob: -20.375001907348633

Token 617: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.166354700922966
    2. 'print' → logprob: -2.1663546562194824
    3. ' l' → logprob: -3.4163546562194824
    4. ')' → logprob: -6.291354656219482
    5. '1' → logprob: -7.041354656219482
    6. '       ' → logprob: -7.416354656219482
    7. '<|end|>' → logprob: -7.541354656219482
    8. '0' → logprob: -8.04135513305664
    9. '```' → logprob: -8.04135513305664
    10. 'ans' → logprob: -8.54135513305664

Token 618: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007854561321437359
    2. ')' → logprob: -5.757854461669922
    3. ' print' → logprob: -6.757854461669922
    4. '0' → logprob: -6.882854461669922
    5. 'l' → logprob: -7.132854461669922
    6. ' l' → logprob: -7.757854461669922
    7. '<|end|>' → logprob: -7.882854461669922
    8. 'ans' → logprob: -8.882854461669922
    9. '#' → logprob: -9.132854461669922
    10. '\' → logprob: -9.257854461669922

Token 619: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00014537633978761733
    2. 'print' → logprob: -9.375144958496094
    3. '       ' → logprob: -9.875144958496094
    4. '   ' → logprob: -12.125144958496094
    5. ' l' → logprob: -12.750144958496094
    6. '           ' → logprob: -15.125144958496094
    7. '```' → logprob: -15.375144958496094
    8. '1' → logprob: -16.125144958496094
    9. 'ans' → logprob: -16.500144958496094
    10. '        ' → logprob: -16.875144958496094

Token 620: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.000885730201844126
    2. 'cnt' → logprob: -7.750885963439941
    3. 'continue' → logprob: -8.250885963439941
    4. 'r' → logprob: -9.125885963439941
    5. 'print' → logprob: -10.375885963439941
    6. 'c' → logprob: -11.250885963439941
    7. 'idx' → logprob: -11.875885963439941
    8. '_count' → logprob: -12.625885963439941
    9. '```' → logprob: -12.625885963439941
    10. 'import' → logprob: -12.750885963439941

Token 621: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.06382882595062256
    2. ' -=' → logprob: -2.813828945159912
    3. '-' → logprob: -6.313828945159912
    4. '=' → logprob: -10.438828468322754
    5. '+=' → logprob: -11.063828468322754
    6. ' ' → logprob: -13.813828468322754
    7. ' -' → logprob: -14.313828468322754
    8. ' +=' → logprob: -14.563828468322754
    9. '<|end|>' → logprob: -14.938828468322754
    10. '--' → logprob: -15.438828468322754

Token 622: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '```' → logprob: -18.500003814697266
    5. '<|end|>' → logprob: -19.625003814697266
    6. '0' → logprob: -20.000003814697266
    7. '=' → logprob: -20.125003814697266
    8. '
' → logprob: -20.625003814697266
    9. '１' → logprob: -21.250003814697266
    10. '  ' → logprob: -21.562503814697266

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -19.125
    5. '１' → logprob: -20.875
    6. '=' → logprob: -20.875
    7. '0' → logprob: -21.0
    8. '`' → logprob: -21.625
    9. '  ' → logprob: -21.8125
    10. '       ' → logprob: -21.8125

Token 624: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02532246522605419
    2. '<|end|>' → logprob: -4.400322437286377
    3. '
' → logprob: -4.650322437286377
    4. ')' → logprob: -5.900322437286377
    5. 'if' → logprob: -8.400322914123535
    6. ' print' → logprob: -9.150322914123535
    7. 'for' → logprob: -10.525322914123535
    8. ',' → logprob: -11.150322914123535
    9. '```' → logprob: -11.650322914123535
    10. ')
' → logprob: -11.900322914123535

Token 625: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00027099132421426475
    2. ' print' → logprob: -8.87527084350586
    3. ')' → logprob: -9.50027084350586
    4. '<|end|>' → logprob: -10.75027084350586
    5. '\n' → logprob: -11.12527084350586
    6. '```' → logprob: -12.00027084350586
    7. '
' → logprob: -12.12527084350586
    8. '(print' → logprob: -12.75027084350586
    9. '.print' → logprob: -14.00027084350586
    10. '#' → logprob: -14.00027084350586

Token 626: ' j' (ID: 441)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8536218404769897
    2. ' idx' → logprob: -1.1036218404769897
    3. '_' → logprob: -1.6036218404769897
    4. ' i' → logprob: -3.8536219596862793
    5. 'idx' → logprob: -4.103621959686279
    6. ' ' → logprob: -6.353621959686279
    7. 'i' → logprob: -7.353621959686279
    8. '_idx' → logprob: -8.478621482849121
    9. '_i' → logprob: -8.853621482849121
    10. ' token' → logprob: -8.978621482849121

Token 627: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03187714144587517
    2. 'dx' → logprob: -4.156877040863037
    3. '_' → logprob: -5.156877040863037
    4. 'in' → logprob: -5.781877040863037
    5. ' ' → logprob: -6.156877040863037
    6. 'x' → logprob: -6.281877040863037
    7. 'n' → logprob: -6.656877040863037
    8. 'range' → logprob: -7.031877040863037
    9. '  ' → logprob: -8.656877517700195
    10. '   ' → logprob: -8.906877517700195

Token 628: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048805490136146545
    2. ' range' → logprob: -3.0488054752349854
    3. 'ran' → logprob: -9.298805236816406
    4. '_' → logprob: -10.673805236816406
    5. 'ra' → logprob: -10.673805236816406
    6. 'r' → logprob: -11.048805236816406
    7. ' ' → logprob: -11.673805236816406
    8. 'new' → logprob: -11.798805236816406
    9. 'rang' → logprob: -11.798805236816406
    10. 're' → logprob: -12.048805236816406

Token 629: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5272379517555237
    2. '(' → logprob: -0.9022379517555237
    3. '(l' → logprob: -5.777237892150879
    4. 'n' → logprob: -7.527237892150879
    5. '2' → logprob: -8.277237892150879
    6. '1' → logprob: -9.777237892150879
    7. '(ans' → logprob: -10.277237892150879
    8. 'l' → logprob: -10.402237892150879
    9. '(len' → logprob: -10.527237892150879
    10. '(
' → logprob: -11.152237892150879

Token 630: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2796436548233032
    2. 'n' → logprob: -1.6546436548233032
    3. '1' → logprob: -3.0296435356140137
    4. 'l' → logprob: -6.654643535614014
    5. ' ' → logprob: -6.654643535614014
    6. ' n' → logprob: -7.154643535614014
    7. '0' → logprob: -7.529643535614014
    8. 'len' → logprob: -8.654644012451172
    9. '(' → logprob: -9.154644012451172
    10. '(n' → logprob: -9.529644012451172

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005481217987835407
    2. ',n' → logprob: -5.255481243133545
    3. ' ,' → logprob: -8.630480766296387
    4. 'n' → logprob: -10.755480766296387
    5. ',j' → logprob: -11.005480766296387
    6. '(n' → logprob: -12.005480766296387
    7. '2' → logprob: -12.005480766296387
    8. '1' → logprob: -12.255480766296387
    9. '(' → logprob: -12.630480766296387
    10. ',
' → logprob: -12.880480766296387

Token 632: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0054148235358297825
    2. '2' → logprob: -5.255414962768555
    3. ' n' → logprob: -8.630414962768555
    4. '(n' → logprob: -14.130414962768555
    5. ' ' → logprob: -14.380414962768555
    6. '10' → logprob: -15.255414962768555
    7. '1' → logprob: -15.880414962768555
    8. ')n' → logprob: -15.880414962768555
    9. 'ans' → logprob: -16.255414962768555
    10. '_n' → logprob: -16.505414962768555

Token 633: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023250136524438858
    2. ' +' → logprob: -3.773250102996826
    3. '+n' → logprob: -13.023250579833984
    4. '+j' → logprob: -13.523250579833984
    5. '+
' → logprob: -14.648250579833984
    6. ',' → logprob: -14.773250579833984
    7. '
' → logprob: -17.148250579833984
    8. '):
' → logprob: -17.273250579833984
    9. '＋' → logprob: -17.273250579833984
    10. ' +
' → logprob: -17.523250579833984

Token 634: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001656613196246326
    2. '+' → logprob: -7.126656532287598
    3. ' ' → logprob: -7.751656532287598
    4. '(n' → logprob: -8.376656532287598
    5. ')' → logprob: -8.876656532287598
    6. 'n' → logprob: -10.876656532287598
    7. '):
' → logprob: -11.876656532287598
    8. '):' → logprob: -12.001656532287598
    9. '(' → logprob: -12.126656532287598
    10. '   ' → logprob: -12.501656532287598

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06248395889997482
    2. '+' → logprob: -2.8124840259552
    3. ' +' → logprob: -7.937483787536621
    4. ' ' → logprob: -9.312483787536621
    5. '2' → logprob: -10.187483787536621
    6. 'n' → logprob: -11.562483787536621
    7. 'j' → logprob: -11.562483787536621
    8. ')' → logprob: -12.312483787536621
    9. '100' → logprob: -13.437483787536621
    10. '+j' → logprob: -13.437483787536621

Token 636: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39923325181007385
    2. ':' → logprob: -1.2742332220077515
    3. '):
' → logprob: -3.149233341217041
    4. ':
' → logprob: -5.399233341217041
    5. ')' → logprob: -7.149233341217041
    6. '}:' → logprob: -7.899233341217041
    7. '**' → logprob: -8.149232864379883
    8. ' :' → logprob: -8.774232864379883
    9. '):
' → logprob: -9.399232864379883
    10. '{' → logprob: -9.899232864379883

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0644284263253212
    2. '	ans' → logprob: -3.1894283294677734
    3. 'ans' → logprob: -3.9394283294677734
    4. ' ans' → logprob: -6.564428329467773
    5. '(ans' → logprob: -8.314428329467773
    6. ':
' → logprob: -11.314428329467773
    7. '   ' → logprob: -11.439428329467773
    8. '<|end|>' → logprob: -11.439428329467773
    9. '_ans' → logprob: -11.939428329467773
    10. '```' → logprob: -12.064428329467773

Token 638: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0809362530708313
    2. '   ' → logprob: -2.5809361934661865
    3. '	ans' → logprob: -6.830936431884766
    4. ' ans' → logprob: -6.955936431884766
    5. '(ans' → logprob: -11.955936431884766
    6. '  ' → logprob: -13.205936431884766
    7. '_ans' → logprob: -13.830936431884766
    8. ' ' → logprob: -14.330936431884766
    9. 'answer' → logprob: -14.580936431884766
    10. '```' → logprob: -14.955936431884766

Token 639: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0007884251535870135
    2. '*' → logprob: -7.75078821182251
    3. ' *=' → logprob: -8.375788688659668
    4. '=' → logprob: -9.000788688659668
    5. ' ' → logprob: -13.500788688659668
    6. '	' → logprob: -14.000788688659668
    7. ' =' → logprob: -14.375788688659668
    8. '   ' → logprob: -15.250788688659668
    9. '**' → logprob: -15.500788688659668
    10. '+=' → logprob: -15.500788688659668

Token 640: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004307884373702109
    2. ' j' → logprob: -7.750430583953857
    3. '	j' → logprob: -16.750431060791016
    4. '2' → logprob: -17.375431060791016
    5. '   ' → logprob: -17.500431060791016
    6. '
' → logprob: -17.750431060791016
    7. ' ' → logprob: -18.375431060791016
    8. '*j' → logprob: -18.875431060791016
    9. '1' → logprob: -19.625431060791016
    10. '```' → logprob: -20.000431060791016

Token 641: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6223466992378235
    2. '%=' → logprob: -1.4973466396331787
    3. ' %=' → logprob: -1.9973466396331787
    4. ' ans' → logprob: -2.6223466396331787
    5. '(ans' → logprob: -4.247346878051758
    6. 'ans' → logprob: -5.122346878051758
    7. ' %' → logprob: -5.872346878051758
    8. '   ' → logprob: -6.247346878051758
    9. '	ans' → logprob: -6.372346878051758
    10. '_ans' → logprob: -6.497346878051758

Token 642: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1404533386230469
    2. '%' → logprob: -1.2654533386230469
    3. ' ans' → logprob: -1.2654533386230469
    4. '(ans' → logprob: -2.765453338623047
    5. '	ans' → logprob: -4.140453338623047
    6. 'mod' → logprob: -4.390453338623047
    7. '   ' → logprob: -4.515453338623047
    8. '%
' → logprob: -5.390453338623047
    9. '_ans' → logprob: -6.015453338623047
    10. ')' → logprob: -6.890453338623047

Token 643: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16426819562911987
    2. 'ans' (adapté à ' ans') → logprob: -1.9142682552337646
    3. '%' → logprob: -6.5392680168151855
    4. 'mod' → logprob: -6.9142680168151855
    5. '(ans' → logprob: -7.1642680168151855
    6. '	ans' → logprob: -7.9142680168151855
    7. '_ans' → logprob: -8.289268493652344
    8. ' mod' → logprob: -9.289268493652344
    9. ' Ans' → logprob: -10.414268493652344
    10. 'Ans' → logprob: -10.664268493652344

Token 644: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.04250897094607353
    2. ' %=' → logprob: -3.292509078979492
    3. '%' → logprob: -5.417509078979492
    4. ' ' → logprob: -11.417509078979492
    5. ' %' → logprob: -12.167509078979492
    6. ')%' → logprob: -13.917509078979492
    7. '	' → logprob: -14.042509078979492
    8. '```' → logprob: -14.667509078979492
    9. ')' → logprob: -15.917509078979492
    10. '%
' → logprob: -16.042509078979492

Token 645: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3133242726325989
    2. 'mod' → logprob: -1.313324213027954
    3. '(mod' → logprob: -9.688323974609375
    4. '	mod' → logprob: -14.938323974609375
    5. ' ' → logprob: -16.938323974609375
    6. ' ' → logprob: -17.063323974609375
    7. ' 
' → logprob: -18.188323974609375
    8. '
' → logprob: -18.313323974609375
    9. ' мод' → logprob: -18.438323974609375
    10. ' modul' → logprob: -18.688323974609375

Token 646: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007139815716072917
    2. '
' → logprob: -7.25071382522583
    3. ' print' → logprob: -12.625714302062988
    4. '```' → logprob: -15.375714302062988
    5. ')
' → logprob: -15.875714302062988
    6. '(print' → logprob: -16.125713348388672
    7. '<|end|>' → logprob: -16.625713348388672
    8. '

' → logprob: -16.875713348388672
    9. '
' → logprob: -16.875713348388672
    10. ')' → logprob: -17.125713348388672

Token 647: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. 'pr' → logprob: -16.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '(print' → logprob: -19.000001907348633
    7. '#print' → logprob: -19.125001907348633
    8. 'prin' → logprob: -19.625001907348633
    9. '#' → logprob: -20.125001907348633
    10. '.print' → logprob: -20.250001907348633

Token 648: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00026205103495158255
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.875262260437012
    4. 'ans' → logprob: -15.000262260437012
    5. '(answer' → logprob: -16.125261306762695
    6. ' (' → logprob: -17.000261306762695
    7. '(f' → logprob: -17.875261306762695
    8. '(a' → logprob: -18.125261306762695
    9. '(

' → logprob: -18.500261306762695
    10. '(`' → logprob: -18.500261306762695

Token 649: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -16.250001907348633
    4. '```' → logprob: -16.875001907348633
    5. ')`' → logprob: -18.250001907348633
    6. '),' → logprob: -18.375001907348633
    7. '
' → logprob: -18.625001907348633
    8. '}' → logprob: -18.750001907348633
    9. '))' → logprob: -18.875001907348633
    10. '(' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 647
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 236
Tokens correctement prédits (top 10): 521
Précision stricte (1ère position): 33.85%
Précision adaptée (1ère position): 36.48%
Précision (top 10): 80.53%
================================================================================
