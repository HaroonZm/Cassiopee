================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,A,B,C,D = map(int, input().split())
# Pour être sûr qu'on bosse à partir de 0
A = A-1
B = B-1
C = C-1
D = D-1
S = input()
# Check rapide: s'il y a double # c'est mort
if '##' in S[A:C+1] or '##' in S[B:D+1]:
    print('No')
    exit()
# Le cas où B doit dépasser C (un peu tricky)
if D < C:
    # Faut un espace pour doubler quelqu'un...
    if S[D-1] == "#" or S[D+1] == "#":
        if "..." in S[B-1:D+2]:
            print('Yes')
        else:
            print('No')
    else:
        print('Yes')
else:
    print('Yes')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',A' (ID: 59196)
  → Token d'amorce (pas de prédiction)

Token 2: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 3: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0315500907599926
    2. ',' → logprob: -4.15654993057251
    3. ' =' → logprob: -4.40654993057251
    4. '[' → logprob: -6.53154993057251
    5. '.' → logprob: -7.03154993057251
    6. ';' → logprob: -8.156550407409668
    7. ')' → logprob: -8.906550407409668
    8. '_' → logprob: -9.031550407409668
    9. '```' → logprob: -9.406550407409668
    10. ':' → logprob: -10.031550407409668

Token 4: ',D' (ID: 61507)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39111435413360596
    2. ',' → logprob: -1.891114354133606
    3. ' =' → logprob: -2.5161142349243164
    4. '```' → logprob: -3.0161142349243164
    5. '[' → logprob: -4.016114234924316
    6. ';' → logprob: -4.391114234924316
    7. '.' → logprob: -5.016114234924316
    8. ')' → logprob: -6.391114234924316
    9. ':' → logprob: -6.891114234924316
    10. '#' → logprob: -7.516114234924316

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020392274484038353
    2. ' =' → logprob: -4.395392417907715
    3. ',' → logprob: -5.520392417907715
    4. ';' → logprob: -6.270392417907715
    5. '```' → logprob: -7.020392417907715
    6. '[' → logprob: -8.145392417907715
    7. ')' → logprob: -8.145392417907715
    8. '.' → logprob: -8.270392417907715
    9. ':' → logprob: -9.645392417907715
    10. '(' → logprob: -10.395392417907715

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7289349436759949
    2. '0' → logprob: -2.1039350032806396
    3. ' [' → logprob: -2.3539350032806396
    4. ' input' → logprob: -2.9789350032806396
    5. ' map' → logprob: -2.9789350032806396
    6. ' range' → logprob: -3.1039350032806396
    7. '1' → logprob: -3.4789350032806396
    8. '5' → logprob: -3.4789350032806396
    9. 'range' → logprob: -3.4789350032806396
    10. '10' → logprob: -3.9789350032806396

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17570865154266357
    2. '(lambda' → logprob: -2.175708770751953
    3. '<|end|>' → logprob: -3.175708770751953
    4. '(int' → logprob: -6.050708770751953
    5. '```' → logprob: -6.925708770751953
    6. ')' → logprob: -7.425708770751953
    7. '<|end|>' → logprob: -7.925708770751953
    8. '(str' → logprob: -8.675708770751953
    9. '(user' → logprob: -9.175708770751953
    10. '()' → logprob: -9.300708770751953

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11915766447782516
    2. ')' → logprob: -2.244157552719116
    3. '(' → logprob: -5.994157791137695
    4. 'input' → logprob: -7.119157791137695
    5. '(user' → logprob: -7.744157791137695
    6. ',input' → logprob: -7.869157791137695
    7. '(raw' → logprob: -8.369157791137695
    8. '`)' → logprob: -8.494157791137695
    9. ')(' → logprob: -8.619157791137695
    10. '<|end|>' → logprob: -8.744157791137695

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010059093125164509
    2. ' input' → logprob: -4.760058879852295
    3. '(input' → logprob: -6.635058879852295
    4. ')' → logprob: -9.010059356689453
    5. ',input' → logprob: -12.385059356689453
    6. '=input' → logprob: -14.135059356689453
    7. ' ' → logprob: -14.135059356689453
    8. '```' → logprob: -15.010059356689453
    9. '[input' → logprob: -15.010059356689453
    10. '(' → logprob: -15.260059356689453

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.41418570280075073
    2. '()' → logprob: -2.2891857624053955
    3. ')' → logprob: -2.7891857624053955
    4. '(' → logprob: -2.9141857624053955
    5. '`()' → logprob: -3.4141857624053955
    6. '().' → logprob: -3.6641857624053955
    7. '(""))' → logprob: -4.164185523986816
    8. '```' → logprob: -5.039185523986816
    9. '()))' → logprob: -5.164185523986816
    10. '>>()' → logprob: -5.414185523986816

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0020019153598695993
    2. 'strip' → logprob: -6.252001762390137
    3. 'rstrip' → logprob: -9.877001762390137
    4. ' split' → logprob: -11.502001762390137
    5. 'read' → logprob: -12.002001762390137
    6. ')' → logprob: -12.877001762390137
    7. 'startswith' → logprob: -13.877001762390137
    8. 'spl' → logprob: -14.377001762390137
    9. '(split' → logprob: -14.502001762390137
    10. 'replace' → logprob: -14.752001762390137

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041436754167079926
    2. '())' → logprob: -3.2914366722106934
    3. '(' → logprob: -6.791436672210693
    4. '()' → logprob: -6.916436672210693
    5. '`)' → logprob: -7.416436672210693
    6. '))' → logprob: -7.666436672210693
    7. ')`' → logprob: -10.416437149047852
    8. '```' → logprob: -10.666437149047852
    9. '('' → logprob: -10.791437149047852
    10. ')(' → logprob: -10.916437149047852

Token 13: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09359508752822876
    2. 'i' → logprob: -3.468595027923584
    3. 'x' → logprob: -4.468595027923584
    4. 'E' → logprob: -4.718595027923584
    5. 'print' → logprob: -4.718595027923584
    6. 'for' → logprob: -5.343595027923584
    7. 'a' → logprob: -5.593595027923584
    8. '#' → logprob: -5.593595027923584
    9. 's' → logprob: -6.468595027923584
    10. 'result' → logprob: -6.468595027923584

Token 14: ' Pour' (ID: 13931)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.76492440700531
    2. 's' → logprob: -2.1399245262145996
    3. 'result' → logprob: -2.1399245262145996
    4. 'if' → logprob: -2.5149245262145996
    5. ' if' → logprob: -3.0149245262145996
    6. 'answer' → logprob: -3.2649245262145996
    7. ' result' → logprob: -3.6399245262145996
    8. ' i' → logprob: -3.6399245262145996
    9. 'sum' → logprob: -3.6399245262145996
    10. 'a' → logprob: -3.7649245262145996

Token 15: ' être' (ID: 9104)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1693706512451172
    2. ' ' → logprob: -1.5443706512451172
    3. 'i' → logprob: -2.044370651245117
    4. ' i' → logprob: -2.169370651245117
    5. ' l' → logprob: -2.294370651245117
    6. '_' → logprob: -3.294370651245117
    7. 'r' → logprob: -3.544370651245117
    8. 'c' → logprob: -4.294370651245117
    9. ' calcul' → logprob: -4.294370651245117
    10. 'quoi' → logprob: -4.919370651245117

Token 16: ' sûr' (ID: 46415)
  Prédit: ' sûr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -1.2894998788833618
    2. 's' → logprob: -1.6644998788833618
    3. 'v' → logprob: -1.9144998788833618
    4. 'dans' → logprob: -2.6644997596740723
    5. 'é' → logprob: -2.7894997596740723
    6. 'compatible' → logprob: -2.9144997596740723
    7. 'plus' → logprob: -3.6644997596740723
    8. 'eligible' → logprob: -3.7894997596740723
    9. 'sur' → logprob: -3.9144997596740723
    10. 'à' → logprob: -4.164499759674072

Token 17: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4456440210342407
    2. ',' → logprob: -1.5706440210342407
    3. 's' → logprob: -3.570643901824951
    4. '_' → logprob: -3.570643901824951
    5. ':' → logprob: -4.195643901824951
    6. '#' → logprob: -4.320643901824951
    7. 'd' → logprob: -4.570643901824951
    8. ')' → logprob: -4.820643901824951
    9. 't' → logprob: -5.070643901824951
    10. '.' → logprob: -5.820643901824951

Token 18: ''on' (ID: 25812)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4564335346221924
    2. 'e' → logprob: -1.0814335346221924
    3. 'u' → logprob: -4.456433296203613
    4. '_' → logprob: -4.706433296203613
    5. ''il' → logprob: -6.331433296203613
    6. ' ' → logprob: -6.456433296203613
    7. ''on' → logprob: -6.956433296203613
    8. ' e' → logprob: -7.456433296203613
    9. ''un' → logprob: -7.706433296203613
    10. ''une' → logprob: -8.081433296203613

Token 19: ' bos' (ID: 26134)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7621766924858093
    2. ' puisse' → logprob: -1.137176752090454
    3. ' ait' → logprob: -2.012176752090454
    4. '_' → logprob: -3.637176752090454
    5. ' soit' → logprob: -4.012176513671875
    6. 'a' → logprob: -4.387176513671875
    7. ' ai' → logprob: -5.262176513671875
    8. ' continue' → logprob: -6.137176513671875
    9. ' n' → logprob: -6.262176513671875
    10. ' respecte' → logprob: -6.387176513671875

Token 20: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.04041101038455963
    2. 's' → logprob: -3.6654109954833984
    3. 'ser' → logprob: -4.665410995483398
    4. 'sera' → logprob: -5.540410995483398
    5. '#' → logprob: -8.165410995483398
    6. 'sé' → logprob: -9.415410995483398
    7. 'seau' → logprob: -10.165410995483398
    8. 'seille' → logprob: -10.415410995483398
    9. '```' → logprob: -10.915410995483398
    10. ' sè' → logprob: -11.165410995483398

Token 21: ' à' (ID: 1221)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6873806118965149
    2. 'sur' → logprob: -0.9373806118965149
    3. ' avec' → logprob: -3.31238055229187
    4. '_sur' → logprob: -4.187380790710449
    5. ' uniquement' → logprob: -4.312380790710449
    6. '_' → logprob: -4.312380790710449
    7. ' ' → logprob: -4.437380790710449
    8. ' correctement' → logprob: -5.312380790710449
    9. 'avec' → logprob: -6.437380790710449
    10. '```' → logprob: -6.687380790710449

Token 22: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7510190606117249
    2. 'fond' → logprob: -2.12601900100708
    3. '100' → logprob: -2.25101900100708
    4. '```' → logprob: -3.00101900100708
    5. 'plein' → logprob: -3.25101900100708
    6. 'f' → logprob: -3.62601900100708
    7. 'fonds' → logprob: -3.62601900100708
    8. 'la' → logprob: -3.62601900100708
    9. 'bien' → logprob: -4.25101900100708
    10. 'une' → logprob: -4.25101900100708

Token 23: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18710413575172424
    2. ' du' → logprob: -2.5621042251586914
    3. ' de' → logprob: -2.5621042251586914
    4. 'd' → logprob: -5.312104225158691
    5. ' des' → logprob: -5.437104225158691
    6. 'du' → logprob: -5.687104225158691
    7. ' ' → logprob: -6.312104225158691
    8. 'de' → logprob: -6.687104225158691
    9. 'des' → logprob: -9.062104225158691
    10. ' sur' → logprob: -9.312104225158691

Token 24: ' ' (ID: 220)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.4891411066055298
    2. 'A' → logprob: -1.6141411066055298
    3. ' la' → logprob: -1.7391411066055298
    4. ' une' → logprob: -2.4891409873962402
    5. 'la' → logprob: -2.8641409873962402
    6. ' l' → logprob: -3.1141409873962402
    7. 'l' → logprob: -3.1141409873962402
    8. ' B' → logprob: -3.8641409873962402
    9. 'B' → logprob: -3.8641409873962402
    10. 'C' → logprob: -4.23914098739624

Token 25: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3030571937561035
    2. 'l' → logprob: -1.3030571937561035
    3. 'la' → logprob: -1.9280571937561035
    4. ' A' → logprob: -2.5530571937561035
    5. ' la' → logprob: -2.9280571937561035
    6. 'N' → logprob: -3.8030571937561035
    7. 'le' → logprob: -4.0530571937561035
    8. 'une' → logprob: -4.0530571937561035
    9. ' l' → logprob: -4.3030571937561035
    10. 'C' → logprob: -4.5530571937561035

Token 26: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.650663137435913
    2. 'i' → logprob: -1.900663137435913
    3. '<|end|>' → logprob: -2.150663137435913
    4. 'indices' → logprob: -2.275663137435913
    5. ' for' → logprob: -3.150663137435913
    6. 'x' → logprob: -3.150663137435913
    7. ' i' → logprob: -3.275663137435913
    8. ',' → logprob: -3.400663137435913
    9. ' indices' → logprob: -3.400663137435913
    10. 'n' → logprob: -3.650663137435913

Token 27: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.025751151144504547
    2. ' A' → logprob: -3.7757511138916016
    3. 'N' → logprob: -7.650751113891602
    4. 'x' → logprob: -7.900751113891602
    5. 'D' → logprob: -8.150751113891602
    6. 'a' → logprob: -8.400751113891602
    7. 'E' → logprob: -8.400751113891602
    8. 's' → logprob: -8.525751113891602
    9. 'i' → logprob: -8.775751113891602
    10. '```' → logprob: -8.775751113891602

Token 28: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.036888282746076584
    2. '-' → logprob: -3.661888360977173
    3. ' =' → logprob: -5.411888122558594
    4. ' -' → logprob: -5.911888122558594
    5. '-=' → logprob: -6.036888122558594
    6. ',' → logprob: -7.536888122558594
    7. ' ' → logprob: -8.786888122558594
    8. '=' → logprob: -9.036888122558594
    9. ' +=' → logprob: -9.911888122558594
    10. ' ,' → logprob: -10.411888122558594

Token 29: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.27442285418510437
    2. 'A' → logprob: -1.5244228839874268
    3. '0' → logprob: -4.274422645568848
    4. ' ' → logprob: -4.899422645568848
    5. '-' → logprob: -7.149422645568848
    6. ' -' → logprob: -10.524422645568848
    7. ' max' → logprob: -11.399422645568848
    8. '	A' → logprob: -11.899422645568848
    9. '-A' → logprob: -11.899422645568848
    10. ' int' → logprob: -12.274422645568848

Token 30: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741092920303345
    2. ' -' → logprob: -0.9741092920303345
    3. '<|end|>' → logprob: -10.599109649658203
    4. ' ' → logprob: -11.974109649658203
    5. '–' → logprob: -14.724109649658203
    6. ' ' → logprob: -15.474109649658203
    7. '<|end|>' → logprob: -15.474109649658203
    8. '  ' → logprob: -16.099109649658203
    9. '1' → logprob: -16.724109649658203
    10. ' –' → logprob: -17.474109649658203

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -14.500109672546387
    4. '0' → logprob: -16.062610626220703
    5. '   ' → logprob: -16.687610626220703
    6. '```' → logprob: -17.125110626220703
    7. '  ' → logprob: -17.625110626220703
    8. '১' → logprob: -17.812610626220703
    9. '2' → logprob: -18.000110626220703
    10. '<|end|>' → logprob: -18.125110626220703

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'B' (ID: 33)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3450601100921631
    2. 'B' → logprob: -1.470060110092163
    3. '<|end|>' → logprob: -3.095060110092163
    4. '#' → logprob: -5.595060348510742
    5. ' 
' → logprob: -5.970060348510742
    6. 'D' → logprob: -6.095060348510742
    7. '```' → logprob: -6.845060348510742
    8. ' B' → logprob: -7.095060348510742
    9. '<|end|>' → logprob: -7.095060348510742
    10. '
' → logprob: -7.220060348510742

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918553799390793
    2. '=' → logprob: -2.5791854858398438
    3. '<|end|>' → logprob: -8.704185485839844
    4. ' ' → logprob: -9.829185485839844
    5. '<|end|>' → logprob: -10.829185485839844
    6. '-' → logprob: -10.829185485839844
    7. ' -=' → logprob: -11.579185485839844
    8. ')' → logprob: -11.579185485839844
    9. ',' → logprob: -12.954185485839844
    10. ' +=' → logprob: -13.079185485839844

Token 35: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6326296329498291
    2. ' B' → logprob: -0.7576296329498291
    3. ' ' → logprob: -10.63262939453125
    4. '1' → logprob: -13.25762939453125
    5. '0' → logprob: -13.88262939453125
    6. ' (' → logprob: -14.50762939453125
    7. 'A' → logprob: -14.88262939453125
    8. '-' → logprob: -15.32012939453125
    9. '	B' → logprob: -15.32012939453125
    10. '  ' → logprob: -15.38262939453125

Token 36: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.41866585687967e-06
    2. ' -' → logprob: -11.875008583068848
    3. '<|end|>' → logprob: -13.625008583068848
    4. '<|end|>' → logprob: -15.375008583068848
    5. '1' → logprob: -17.37500762939453
    6. '#' → logprob: -18.12500762939453
    7. ' ' → logprob: -18.12500762939453
    8. '```' → logprob: -18.87500762939453
    9. '...' → logprob: -19.12500762939453
    10. '-
' → logprob: -19.25000762939453

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -11.000036239624023
    3. '<|end|>' → logprob: -11.000036239624023
    4. '2' → logprob: -13.750036239624023
    5. '<|end|>' → logprob: -14.000036239624023
    6. '0' → logprob: -14.375036239624023
    7. '-' → logprob: -15.125036239624023
    8. '>' → logprob: -16.000036239624023
    9. '```' → logprob: -17.000036239624023
    10. 'A' → logprob: -17.125036239624023

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03579861298203468
    2. '<|end|>' → logprob: -3.6607985496520996
    3. 'C' → logprob: -5.1607985496521
    4. '
' → logprob: -6.7857985496521
    5. '#' → logprob: -7.2857985496521
    6. '\n' → logprob: -7.5357985496521
    7. '  
' → logprob: -7.9107985496521
    8. ' 
' → logprob: -7.9107985496521
    9. '<|end|>' → logprob: -9.035799026489258
    10. '```' → logprob: -9.285799026489258

Token 39: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04256288707256317
    2. '
' → logprob: -3.667562961578369
    3. '```' → logprob: -4.542562961578369
    4. '<|end|>' → logprob: -5.917562961578369
    5. '#' → logprob: -7.542562961578369
    6. '\n' → logprob: -7.542562961578369
    7. '``' → logprob: -8.167562484741211
    8. '\' → logprob: -8.667562484741211
    9. 'print' → logprob: -8.792562484741211
    10. 'D' → logprob: -9.042562484741211

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076658944599330425
    2. '=' → logprob: -4.882666110992432
    3. ' ' → logprob: -10.632665634155273
    4. '<|end|>' → logprob: -10.882665634155273
    5. '<|end|>' → logprob: -12.382665634155273
    6. ' +=' → logprob: -12.507665634155273
    7. ')' → logprob: -13.632665634155273
    8. ',' → logprob: -13.882665634155273
    9. '```' → logprob: -13.882665634155273
    10. '`' → logprob: -14.382665634155273

Token 41: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.2811850905418396
    2. 'C' → logprob: -1.4061851501464844
    3. ' ' → logprob: -10.531185150146484
    4. '0' → logprob: -12.781185150146484
    5. '<|end|>' → logprob: -12.906185150146484
    6. '	C' → logprob: -14.593685150146484
    7. 'D' → logprob: -14.781185150146484
    8. ' D' → logprob: -15.156185150146484
    9. '<|end|>' → logprob: -15.531185150146484
    10. '-' → logprob: -15.718685150146484

Token 42: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.829823102336377e-05
    2. ' -' → logprob: -9.37509822845459
    3. '<|end|>' → logprob: -11.75009822845459
    4. '+' → logprob: -13.25009822845459
    5. ' ' → logprob: -13.37509822845459
    6. '#' → logprob: -14.12509822845459
    7. '<|end|>' → logprob: -14.87509822845459
    8. '-
' → logprob: -15.25009822845459
    9. '0' → logprob: -15.87509822845459
    10. ')' → logprob: -16.250099182128906

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '<|end|>' → logprob: -14.250000953674316
    3. '2' → logprob: -15.000000953674316
    4. '0' → logprob: -16.125001907348633
    5. ' ' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -17.250001907348633
    7. '```' → logprob: -17.687501907348633
    8. '3' → logprob: -18.875001907348633
    9. '+' → logprob: -19.000001907348633
    10. '-' → logprob: -19.187501907348633

Token 44: '
' (ID: 198)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0012803568970412016
    2. '
' → logprob: -6.876280307769775
    3. '<|end|>' → logprob: -8.876280784606934
    4. '#' → logprob: -10.501280784606934
    5. '```' → logprob: -10.876280784606934
    6. ' D' → logprob: -11.251280784606934
    7. 's' → logprob: -11.626280784606934
    8. '\' → logprob: -11.751280784606934
    9. 'd' → logprob: -12.501280784606934
    10. '\n' → logprob: -12.626280784606934

Token 45: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00010723850573413074
    2. '
' → logprob: -9.375106811523438
    3. '```' → logprob: -11.375106811523438
    4. ' D' → logprob: -13.250106811523438
    5. '<|end|>' → logprob: -13.375106811523438
    6. '#' → logprob: -13.625106811523438
    7. 'd' → logprob: -13.750106811523438
    8. 'print' → logprob: -14.000106811523438
    9. 's' → logprob: -14.125106811523438
    10. 'import' → logprob: -14.250106811523438

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3510642945766449
    2. '=' → logprob: -1.2260643243789673
    3. '<|end|>' → logprob: -6.226064205169678
    4. '-' → logprob: -8.476064682006836
    5. '<|end|>' → logprob: -8.976064682006836
    6. ' ' → logprob: -9.351064682006836
    7. ')' → logprob: -9.601064682006836
    8. ' -=' → logprob: -9.601064682006836
    9. ' +=' → logprob: -10.351064682006836
    10. '+' → logprob: -11.601064682006836

Token 47: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.693148672580719
    2. ' D' → logprob: -0.693148672580719
    3. ' ' → logprob: -14.068148612976074
    4. '	D' → logprob: -15.193148612976074
    5. '<|end|>' → logprob: -16.06814956665039
    6. '   ' → logprob: -16.94314956665039
    7. '0' → logprob: -17.06814956665039
    8. ' (' → logprob: -17.06814956665039
    9. '>D' → logprob: -17.06814956665039
    10. '=D' → logprob: -17.31814956665039

Token 48: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018089536752086133
    2. ' -' → logprob: -8.875181198120117
    3. '-D' → logprob: -10.625181198120117
    4. 'D' → logprob: -11.375181198120117
    5. ' ' → logprob: -13.500181198120117
    6. ' D' → logprob: -13.875181198120117
    7. '<|end|>' → logprob: -13.875181198120117
    8. '-
' → logprob: -14.625181198120117
    9. '#' → logprob: -14.625181198120117
    10. '1' → logprob: -14.875181198120117

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -16.625
    4. '0' → logprob: -17.75
    5. '```' → logprob: -18.5
    6. '+' → logprob: -18.875
    7. '2' → logprob: -19.25
    8. '>' → logprob: -19.25
    9. '   ' → logprob: -19.375
    10. '-' → logprob: -19.5

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9659333825111389
    2. '#' → logprob: -1.8409333229064941
    3. 'n' → logprob: -1.8409333229064941
    4. 'if' → logprob: -2.090933322906494
    5. 'i' → logprob: -3.715933322906494
    6. 'def' → logprob: -4.090933322906494
    7. 'x' → logprob: -4.340933322906494
    8. '<|end|>' → logprob: -4.465933322906494
    9. '```' → logprob: -4.590933322906494
    10. 'N' → logprob: -4.590933322906494

Token 51: 'S' (ID: 50)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1845072507858276
    2. 'n' → logprob: -2.059507369995117
    3. '
' → logprob: -2.309507369995117
    4. 'i' → logprob: -2.309507369995117
    5. '#' → logprob: -2.684507369995117
    6. 'E' → logprob: -2.934507369995117
    7. 'x' → logprob: -3.184507369995117
    8. 't' → logprob: -3.434507369995117
    9. 'result' → logprob: -3.934507369995117
    10. 'def' → logprob: -4.184507369995117

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7422422170639038
    2. '[' → logprob: -0.7422422170639038
    3. ' =' → logprob: -3.1172423362731934
    4. '.' → logprob: -6.867242336273193
    5. 'tring' → logprob: -6.992242336273193
    6. '=input' → logprob: -7.367242336273193
    7. '[S' → logprob: -8.242241859436035
    8. '[input' → logprob: -8.367241859436035
    9. '[int' → logprob: -9.492241859436035
    10. 't' → logprob: -9.742241859436035

Token 53: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06998234242200851
    2. ' input' → logprob: -2.6949822902679443
    3. 'list' → logprob: -10.194982528686523
    4. 'int' → logprob: -12.819982528686523
    5. ' list' → logprob: -13.069982528686523
    6. 'str' → logprob: -13.569982528686523
    7. '=input' → logprob: -14.194982528686523
    8. '[input' → logprob: -14.319982528686523
    9. '(input' → logprob: -14.694982528686523
    10. '	input' → logprob: -15.694982528686523

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062069639563560486
    2. '(' → logprob: -2.8120696544647217
    3. ')' → logprob: -10.4370698928833
    4. '().' → logprob: -10.6870698928833
    5. ' ()' → logprob: -11.1870698928833
    6. '[' → logprob: -11.6870698928833
    7. '(
' → logprob: -12.5620698928833
    8. '('' → logprob: -12.6870698928833
    9. '.' → logprob: -12.8120698928833
    10. ''' → logprob: -13.0620698928833

Token 55: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25909319519996643
    2. 'i' → logprob: -1.884093165397644
    3. '#' → logprob: -4.634093284606934
    4. ' if' → logprob: -4.884093284606934
    5. '
' → logprob: -5.009093284606934
    6. 't' → logprob: -5.259093284606934
    7. 'a' → logprob: -5.384093284606934
    8. '[' → logprob: -5.509093284606934
    9. ' 
' → logprob: -5.634093284606934
    10. 's' → logprob: -5.759093284606934

Token 56: ' Check' (ID: 6208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7161552309989929
    2. 'if' → logprob: -1.7161552906036377
    3. 'dist' → logprob: -2.9661552906036377
    4. 'distance' → logprob: -3.3411552906036377
    5. '#' → logprob: -3.5911552906036377
    6. 'ans' → logprob: -3.8411552906036377
    7. 'result' → logprob: -4.091155052185059
    8. 'def' → logprob: -4.091155052185059
    9. 'visited' → logprob: -4.091155052185059
    10. 'res' → logprob: -4.341155052185059

Token 57: ' rapide' (ID: 44887)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0825018882751465
    2. ' if' → logprob: -1.5825018882751465
    3. ' ' → logprob: -1.5825018882751465
    4. '(' → logprob: -2.2075018882751465
    5. '_' → logprob: -3.0825018882751465
    6. 's' → logprob: -3.2075018882751465
    7. '[' → logprob: -4.8325018882751465
    8. 'i' → logprob: -4.8325018882751465
    9. ' (' → logprob: -4.9575018882751465
    10. ' =' → logprob: -5.2075018882751465

Token 58: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8140040040016174
    2. ' if' → logprob: -1.6890039443969727
    3. 'if' → logprob: -1.6890039443969727
    4. ':' → logprob: -1.9390039443969727
    5. 's' → logprob: -4.439003944396973
    6. '<|end|>' → logprob: -4.439003944396973
    7. ',' → logprob: -5.439003944396973
    8. ' :' → logprob: -5.564003944396973
    9. 'i' → logprob: -6.564003944396973
    10. '_' → logprob: -6.689003944396973

Token 59: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6397531032562256
    2. ' if' → logprob: -1.1397531032562256
    3. ' ' → logprob: -2.1397531032562256
    4. 'i' → logprob: -3.8897531032562256
    5. ' i' → logprob: -4.514753341674805
    6. 's' → logprob: -7.014753341674805
    7. 'S' → logprob: -7.514753341674805
    8. ' S' → logprob: -8.014753341674805
    9. ' A' → logprob: -8.139753341674805
    10. '<|end|>' → logprob: -8.389753341674805

Token 60: ''il' (ID: 14683)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8717606067657471
    2. '[S' → logprob: -1.871760606765747
    3. '=' → logprob: -2.621760606765747
    4. 't' → logprob: -2.746760606765747
    5. 'e' → logprob: -2.996760606765747
    6. '1' → logprob: -3.246760606765747
    7. '[i' → logprob: -3.746760606765747
    8. 'S' → logprob: -3.996760606765747
    9. '[C' → logprob: -4.121760368347168
    10. ' =' → logprob: -4.371760368347168

Token 61: ' y' (ID: 342)
  Prédit: ''agit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''agit' → logprob: -1.0465655326843262
    2. ' n' → logprob: -1.2965655326843262
    3. ''' → logprob: -2.421565532684326
    4. 't' → logprob: -2.921565532684326
    5. ''y' → logprob: -3.421565532684326
    6. '[' → logprob: -3.421565532684326
    7. ' y' → logprob: -3.546565532684326
    8. 'e' → logprob: -3.546565532684326
    9. ''''' → logprob: -4.296565532684326
    10. 'ont' → logprob: -4.296565532684326

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03981995955109596
    2. ' a' → logprob: -3.7898199558258057
    3. ''a' → logprob: -4.289820194244385
    4. 'avait' → logprob: -6.164820194244385
    5. ''avait' → logprob: -8.789819717407227
    6. ' avait' → logprob: -9.289819717407227
    7. ''s' → logprob: -10.164819717407227
    8. '```' → logprob: -10.289819717407227
    9. 'n't' → logprob: -10.664819717407227
    10. 'est' → logprob: -11.039819717407227

Token 63: ' double' (ID: 3503)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.284355878829956
    2. 'une' → logprob: -1.284355878829956
    3. ' un' → logprob: -1.409355878829956
    4. 'un' → logprob: -2.534355878829956
    5. ' au' → logprob: -4.159356117248535
    6. 't' → logprob: -4.159356117248535
    7. ' déjà' → logprob: -4.534356117248535
    8. ' ' → logprob: -4.659356117248535
    9. 'a' → logprob: -4.659356117248535
    10. 'u' → logprob: -4.909356117248535

Token 64: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.331616997718811
    2. 's' → logprob: -1.706616997718811
    3. ' S' → logprob: -1.706616997718811
    4. 'S' → logprob: -1.956616997718811
    5. ' espaces' → logprob: -3.4566168785095215
    6. 'e' → logprob: -3.5816168785095215
    7. ' D' → logprob: -3.9566168785095215
    8. 'ment' → logprob: -3.9566168785095215
    9. ' espace' → logprob: -4.0816168785095215
    10. 't' → logprob: -4.0816168785095215

Token 65: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5710499286651611
    2. ' ' → logprob: -1.3210499286651611
    3. ' #' → logprob: -2.946049928665161
    4. '"' → logprob: -3.696049928665161
    5. 's' → logprob: -3.946049928665161
    6. ''' → logprob: -3.946049928665161
    7. 'if' → logprob: -4.821049690246582
    8. 'S' → logprob: -4.821049690246582
    9. ' "' → logprob: -4.946049690246582
    10. ' if' → logprob: -5.696049690246582

Token 66: ''est' (ID: 6616)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8897820115089417
    2. 'ont' → logprob: -1.5147819519042969
    3. '#' → logprob: -1.7647819519042969
    4. ''#' → logprob: -2.014781951904297
    5. ''est' → logprob: -3.764781951904297
    6. 'u' → logprob: -4.514781951904297
    7. ''' → logprob: -4.889781951904297
    8. ''il' → logprob: -6.139781951904297
    9. '##' → logprob: -6.389781951904297
    10. 'ar' → logprob: -6.389781951904297

Token 67: ' mort' (ID: 10146)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.007518961559981108
    2. 'per' → logprob: -6.382518768310547
    3. 'Impossible' → logprob: -7.257518768310547
    4. 'dé' → logprob: -7.507518768310547
    5. 'mort' → logprob: -7.507518768310547
    6. 'game' → logprob: -7.632518768310547
    7. '"' → logprob: -7.757518768310547
    8. '```' → logprob: -8.007518768310547
    9. 'une' → logprob: -8.382518768310547
    10. 'imp' → logprob: -8.507518768310547

Token 68: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9666545987129211
    2. 'if' → logprob: -1.0916545391082764
    3. ' if' → logprob: -2.3416545391082764
    4. 'for' → logprob: -2.7166545391082764
    5. ' for' → logprob: -3.3416545391082764
    6. '<|end|>' → logprob: -3.3416545391082764
    7. ',' → logprob: -4.8416547775268555
    8. 'i' → logprob: -4.9666547775268555
    9. ' 
' → logprob: -4.9666547775268555
    10. 's' → logprob: -5.0916547775268555

Token 69: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02445780672132969
    2. 'for' → logprob: -4.149457931518555
    3. 'i' → logprob: -5.149457931518555
    4. ' if' → logprob: -6.149457931518555
    5. ' for' → logprob: -8.774457931518555
    6. 's' → logprob: -9.899457931518555
    7. '
' → logprob: -10.524457931518555
    8. '\n' → logprob: -10.649457931518555
    9. 'n' → logprob: -10.774457931518555
    10. '<|end|>' → logprob: -11.024457931518555

Token 70: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.7674272060394287
    2. '"' → logprob: -1.0174272060394287
    3. ' '' → logprob: -2.3924272060394287
    4. ''' → logprob: -3.0174272060394287
    5. ' '#'' → logprob: -4.017427444458008
    6. ' "#"' → logprob: -5.017427444458008
    7. '"S' → logprob: -5.642427444458008
    8. ' ' → logprob: -6.517427444458008
    9. '"#' → logprob: -6.892427444458008
    10. ''#' → logprob: -7.017427444458008

Token 71: '##' (ID: 877)
  Prédit: '##'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '##' → logprob: -0.0033094852697104216
    2. ''' → logprob: -6.00330924987793
    3. '"' → logprob: -7.12830924987793
    4. '##
' → logprob: -11.25330924987793
    5. '##

' → logprob: -11.75330924987793
    6. '#' → logprob: -12.50330924987793
    7. ''#' → logprob: -13.00330924987793
    8. '##_' → logprob: -13.50330924987793
    9. '###' → logprob: -14.00330924987793
    10. ' ##' → logprob: -14.50330924987793

Token 72: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004680037964135408
    2. ''in' → logprob: -5.379680156707764
    3. '##' → logprob: -10.004679679870605
    4. '#' → logprob: -12.254679679870605
    5. ''#' → logprob: -12.379679679870605
    6. '"' → logprob: -12.879679679870605
    7. ' in' → logprob: -14.379679679870605
    8. 'in' → logprob: -14.879679679870605
    9. ''''' → logprob: -15.129679679870605
    10. '')' → logprob: -15.379679679870605

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14293144643306732
    2. 'in' → logprob: -2.0179314613342285
    3. ''in' → logprob: -9.26793098449707
    4. ' ' → logprob: -9.39293098449707
    5. ')' → logprob: -10.39293098449707
    6. '  ' → logprob: -10.89293098449707
    7. '<|end|>' → logprob: -11.39293098449707
    8. ''' → logprob: -13.01793098449707
    9. ' '' → logprob: -13.14293098449707
    10. 'n' → logprob: -13.26793098449707

Token 74: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10020937025547028
    2. ' S' → logprob: -2.3502094745635986
    3. '<|end|>' → logprob: -13.35020923614502
    4. ' ' → logprob: -14.35020923614502
    5. '>S' → logprob: -15.47520923614502
    6. '(S' → logprob: -16.100210189819336
    7. '	S' → logprob: -16.850210189819336
    8. '_S' → logprob: -17.100210189819336
    9. '<S' → logprob: -17.350210189819336
    10. '.S' → logprob: -17.850210189819336

Token 75: '[A' (ID: 58391)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00602750713005662
    2. ' :' → logprob: -5.131027698516846
    3. '):' → logprob: -9.381027221679688
    4. ' or' → logprob: -12.256027221679688
    5. ':
' → logprob: -12.756027221679688
    6. ':**' → logprob: -13.631027221679688
    7. '>:' → logprob: -13.756027221679688
    8. ')' → logprob: -13.756027221679688
    9. ':return' → logprob: -13.756027221679688
    10. '':' → logprob: -14.631027221679688

Token 76: ':C' (ID: 99856)
  Prédit: ':D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':D' → logprob: -0.6088050007820129
    2. ':' → logprob: -1.2338049411773682
    3. ':B' → logprob: -2.858804941177368
    4. ':C' → logprob: -3.358804941177368
    5. ':]' → logprob: -3.608804941177368
    6. 'D' → logprob: -4.108805179595947
    7. ']' → logprob: -4.983805179595947
    8. ']:' → logprob: -4.983805179595947
    9. ':A' → logprob: -5.233805179595947
    10. 'C' → logprob: -5.983805179595947

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4225841462612152
    2. ']:' → logprob: -1.4225841760635376
    3. ']' → logprob: -2.297584056854248
    4. ']):' → logprob: -7.172584056854248
    5. ']+' → logprob: -7.547584056854248
    6. ']:
' → logprob: -7.547584056854248
    7. ' +' → logprob: -8.047584533691406
    8. '):' → logprob: -8.297584533691406
    9. ':' → logprob: -9.172584533691406
    10. '']:' → logprob: -9.422584533691406

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015905579784885049
    2. ']' → logprob: -7.251590728759766
    3. '+' → logprob: -7.376590728759766
    4. ' ' → logprob: -9.001590728759766
    5. ']:' → logprob: -9.501590728759766
    6. '2' → logprob: -10.501590728759766
    7. ']:
' → logprob: -12.501590728759766
    8. ']+' → logprob: -12.689090728759766
    9. '```' → logprob: -13.064090728759766
    10. ']):' → logprob: -13.251590728759766

Token 79: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2605500817298889
    2. ']' → logprob: -1.5105500221252441
    3. '']:' → logprob: -5.260550022125244
    4. '']' → logprob: -6.510550022125244
    5. ']):' → logprob: -7.760550022125244
    6. '"]:' → logprob: -8.010550498962402
    7. '):' → logprob: -8.135550498962402
    8. ' ]' → logprob: -8.260550498962402
    9. ']:
' → logprob: -8.760550498962402
    10. ''):' → logprob: -9.385550498962402

Token 80: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015327194705605507
    2. ' :' → logprob: -4.765326976776123
    3. ' or' → logprob: -5.015326976776123
    4. ':
' → logprob: -10.640327453613281
    5. ' and' → logprob: -11.515327453613281
    6. 'or' → logprob: -11.890327453613281
    7. ')' → logprob: -12.765327453613281
    8. '):' → logprob: -12.890327453613281
    9. ' :
' → logprob: -13.390327453613281
    10. ':return' → logprob: -13.390327453613281

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1150084063410759
    2. ' '' → logprob: -2.3650083541870117
    3. ''S' → logprob: -4.740008354187012
    4. ''#' → logprob: -6.490008354187012
    5. ' '#'' → logprob: -6.490008354187012
    6. ' ' → logprob: -6.615008354187012
    7. 'S' → logprob: -7.990008354187012
    8. ''s' → logprob: -8.365008354187012
    9. ' S' → logprob: -8.615008354187012
    10. ''A' → logprob: -8.615008354187012

Token 82: '##' (ID: 877)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3672623336315155
    2. '##' → logprob: -1.367262363433838
    3. 'S' → logprob: -3.742262363433838
    4. ''#' → logprob: -3.867262363433838
    5. ''S' → logprob: -5.367262363433838
    6. '#' → logprob: -6.492262363433838
    7. '##

' → logprob: -8.24226188659668
    8. '`' → logprob: -8.86726188659668
    9. '##
' → logprob: -8.99226188659668
    10. ''C' → logprob: -8.99226188659668

Token 83: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10822374373674393
    2. 'in' → logprob: -2.8582236766815186
    3. ' in' → logprob: -3.7332236766815186
    4. 'S' → logprob: -4.733223915100098
    5. '#' → logprob: -5.733223915100098
    6. ''in' → logprob: -5.858223915100098
    7. '']' → logprob: -5.983223915100098
    8. ']' → logprob: -6.358223915100098
    9. ''S' → logprob: -7.483223915100098
    10. ''[' → logprob: -8.233223915100098

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25230783224105835
    2. 'in' → logprob: -1.5023078918457031
    3. ' ' → logprob: -9.002307891845703
    4. ' not' → logprob: -9.752307891845703
    5. '   ' → logprob: -10.127307891845703
    6. 'S' → logprob: -10.627307891845703
    7. '  ' → logprob: -10.627307891845703
    8. '[' → logprob: -11.127307891845703
    9. 'i' → logprob: -11.252307891845703
    10. ' S' → logprob: -11.377307891845703

Token 85: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10043784976005554
    2. ' S' → logprob: -2.350437879562378
    3. ' ' → logprob: -8.600438117980957
    4. ''' → logprob: -11.350438117980957
    5. '  ' → logprob: -11.725438117980957
    6. 's' → logprob: -11.850438117980957
    7. '<|end|>' → logprob: -12.787938117980957
    8. ''S' → logprob: -13.225438117980957
    9. '`' → logprob: -13.350438117980957
    10. ' ' → logprob: -13.537938117980957

Token 86: '[B' (ID: 95385)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.5374025106430054
    2. '[B' → logprob: -0.9124025106430054
    3. ':' → logprob: -4.912402629852295
    4. '[' → logprob: -5.662402629852295
    5. '[:' → logprob: -6.537402629852295
    6. '[C' → logprob: -7.037402629852295
    7. '[A' → logprob: -7.537402629852295
    8. '):' → logprob: -9.287402153015137
    9. '[S' → logprob: -9.787402153015137
    10. 'B' → logprob: -10.599902153015137

Token 87: ':D' (ID: 98485)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.24645355343818665
    2. ':D' → logprob: -1.7464535236358643
    3. '[' → logprob: -3.8714535236358643
    4. '[C' → logprob: -4.121453762054443
    5. ':' → logprob: -6.121453762054443
    6. '[:' → logprob: -6.371453762054443
    7. ':]' → logprob: -6.996453762054443
    8. ':C' → logprob: -7.746453762054443
    9. '[B' → logprob: -8.371453285217285
    10. ':[' → logprob: -8.621453285217285

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006656142068095505
    2. '1' → logprob: -7.625665664672852
    3. ' +' → logprob: -9.500665664672852
    4. '])' → logprob: -10.250665664672852
    5. ']' → logprob: -10.375665664672852
    6. ']+' → logprob: -11.000665664672852
    7. '+]' → logprob: -12.375665664672852
    8. '+"]' → logprob: -13.438165664672852
    9. '])]' → logprob: -13.563165664672852
    10. '```' → logprob: -13.875665664672852

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.000007629394531
    3. ']' → logprob: -14.625007629394531
    4. '+' → logprob: -15.250007629394531
    5. '-' → logprob: -15.750007629394531
    6. '])' → logprob: -15.875007629394531
    7. '۱' → logprob: -16.12500762939453
    8. ')' → logprob: -16.37500762939453
    9. '```' → logprob: -16.50000762939453
    10. '１' → logprob: -16.81250762939453

Token 90: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17661572992801666
    2. ']:' → logprob: -2.1766157150268555
    3. ':' → logprob: -3.3016157150268555
    4. ']):' → logprob: -5.6766157150268555
    5. ']' → logprob: -5.9266157150268555
    6. ')' → logprob: -6.0516157150268555
    7. ''):' → logprob: -6.4266157150268555
    8. ' ):' → logprob: -7.5516157150268555
    9. '']:' → logprob: -7.5516157150268555
    10. '):
' → logprob: -8.426615715026855

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18922123312950134
    2. '   ' → logprob: -1.9392212629318237
    3. 'print' → logprob: -4.814221382141113
    4. ' print' → logprob: -5.314221382141113
    5. ')' → logprob: -5.564221382141113
    6. ' :' → logprob: -5.689221382141113
    7. ':
' → logprob: -6.064221382141113
    8. '.' → logprob: -6.314221382141113
    9. ' ' → logprob: -7.064221382141113
    10. '):' → logprob: -7.189221382141113

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03873978927731514
    2. ' print' → logprob: -3.2887396812438965
    3. '   ' → logprob: -8.038740158081055
    4. '
' → logprob: -9.663740158081055
    5. 'exit' → logprob: -9.788740158081055
    6. 'pass' → logprob: -9.788740158081055
    7. ' 
' → logprob: -10.288740158081055
    8. 'pr' → logprob: -10.413740158081055
    9. '```' → logprob: -10.413740158081055
    10. '    
' → logprob: -10.663740158081055

Token 93: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42775067687034607
    2. '("' → logprob: -1.3027507066726685
    3. '('' → logprob: -2.927750587463379
    4. '(-' → logprob: -3.802750587463379
    5. '(False' → logprob: -8.427750587463379
    6. '(
' → logprob: -9.052750587463379
    7. '()' → logprob: -10.802750587463379
    8. '(None' → logprob: -11.302750587463379
    9. '("")' → logprob: -11.802750587463379
    10. ' ("' → logprob: -11.802750587463379

Token 94: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00691085634753108
    2. 'NO' → logprob: -5.506910800933838
    3. 'Impossible' → logprob: -6.506910800933838
    4. '0' → logprob: -7.631910800933838
    5. '"No' → logprob: -8.131911277770996
    6. 'im' → logprob: -8.131911277770996
    7. 'Fail' → logprob: -9.631911277770996
    8. 'IMP' → logprob: -10.881911277770996
    9. ' No' → logprob: -10.881911277770996
    10. '#' → logprob: -11.131911277770996

Token 95: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0011173540260642767
    2. ')' → logprob: -7.37611722946167
    3. ''' → logprob: -8.501117706298828
    4. '")' → logprob: -9.001117706298828
    5. '')
' → logprob: -9.251117706298828
    6. 't' → logprob: -10.376117706298828
    7. ' ')' → logprob: -11.501117706298828
    8. '#' → logprob: -11.876117706298828
    9. 'ne' → logprob: -12.751117706298828
    10. '')
' → logprob: -13.126117706298828

Token 96: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018079236149787903
    2. 'elif' → logprob: -4.1430792808532715
    3. ' else' → logprob: -6.8930792808532715
    4. '   ' → logprob: -7.2680792808532715
    5. '
' → logprob: -8.893078804016113
    6. '    
' → logprob: -9.643078804016113
    7. '```' → logprob: -10.268078804016113
    8. ')' → logprob: -10.518078804016113
    9. '<|end|>' → logprob: -10.768078804016113
    10. '\n' → logprob: -11.643078804016113

Token 97: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04545465111732483
    2. 'exit' (adapté à ' exit') → logprob: -3.795454740524292
    3. '
' → logprob: -5.045454502105713
    4. '   ' → logprob: -5.045454502105713
    5. 'elif' → logprob: -5.045454502105713
    6. ')' → logprob: -7.670454502105713
    7. '	exit' → logprob: -7.795454502105713
    8. ' else' → logprob: -7.920454502105713
    9. '```' → logprob: -7.920454502105713
    10. ' exit' → logprob: -8.045454978942871

Token 98: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017362393555231392
    2. '(' → logprob: -8.875173568725586
    3. '()
' → logprob: -10.375173568725586
    4. '()

' → logprob: -13.375173568725586
    5. '()`' → logprob: -14.750173568725586
    6. '()\' → logprob: -15.875173568725586
    7. '())' → logprob: -16.000173568725586
    8. '()]' → logprob: -16.500173568725586
    9. '(
' → logprob: -17.000173568725586
    10. ' ()' → logprob: -17.375173568725586

Token 99: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1485391855239868
    2. 'for' → logprob: -1.5235391855239868
    3. ' 
' → logprob: -1.8985391855239868
    4. ' ' → logprob: -2.2735390663146973
    5. 'if' → logprob: -2.7735390663146973
    6. 'i' → logprob: -3.5235390663146973
    7. 'n' → logprob: -3.8985390663146973
    8. '  
' → logprob: -3.8985390663146973
    9. ' for' → logprob: -4.023539066314697
    10. ' 

' → logprob: -4.648539066314697

Token 100: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8702960014343262
    2. 'for' → logprob: -1.4952960014343262
    3. 'if' → logprob: -2.245296001434326
    4. 'pos' → logprob: -3.495296001434326
    5. 'while' → logprob: -3.495296001434326
    6. 'i' → logprob: -3.620296001434326
    7. 'from' → logprob: -3.620296001434326
    8. 'possible' → logprob: -3.620296001434326
    9. 'distance' → logprob: -4.370296001434326
    10. 'dp' → logprob: -4.370296001434326

Token 101: ' cas' (ID: 2108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.300102710723877
    2. 's' → logprob: -1.675102710723877
    3. 't' → logprob: -2.050102710723877
    4. 'r' → logprob: -2.925102710723877
    5. 'elif' → logprob: -2.925102710723877
    6. 'n' → logprob: -3.425102710723877
    7. 'def' → logprob: -3.425102710723877
    8. 'for' → logprob: -3.550102710723877
    9. 'en' → logprob: -3.800102710723877
    10. 're' → logprob: -4.300102710723877

Token 102: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -1.41313636302948
    2. 's' → logprob: -1.78813636302948
    3. ' où' → logprob: -1.78813636302948
    4. 'simple' → logprob: -2.2881364822387695
    5. '#' → logprob: -3.0381364822387695
    6. 'g' → logprob: -3.5381364822387695
    7. ' where' → logprob: -3.5381364822387695
    8. ' général' → logprob: -3.7881364822387695
    9. 'é' → logprob: -3.7881364822387695
    10. 'e' → logprob: -4.0381364822387695

Token 103: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0755835697054863
    2. 'C' → logprob: -3.4505834579467773
    3. 'B' → logprob: -3.9505834579467773
    4. ' A' → logprob: -4.325583457946777
    5. 'S' → logprob: -5.825583457946777
    6. '(A' → logprob: -6.325583457946777
    7. 'D' → logprob: -6.700583457946777
    8. '(C' → logprob: -7.575583457946777
    9. ' C' → logprob: -7.825583457946777
    10. ' B' → logprob: -8.200583457946777

Token 104: ' doit' (ID: 21822)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14503800868988037
    2. '<' → logprob: -3.02003812789917
    3. ' >' → logprob: -3.52003812789917
    4. ' ==' → logprob: -3.52003812789917
    5. ' <=' → logprob: -4.27003812789917
    6. '==' → logprob: -5.14503812789917
    7. '>' → logprob: -5.52003812789917
    8. '<=' → logprob: -6.39503812789917
    9. ' >=' → logprob: -7.52003812789917
    10. '>=' → logprob: -8.895037651062012

Token 105: ' dépasser' (ID: 187375)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.046390414237976
    2. 'se' → logprob: -1.546390414237976
    3. ' arriver' → logprob: -2.7963905334472656
    4. 'être' → logprob: -2.9213905334472656
    5. 'dé' → logprob: -3.0463905334472656
    6. 'pass' → logprob: -3.0463905334472656
    7. 'atte' → logprob: -3.2963905334472656
    8. 'att' → logprob: -3.9213905334472656
    9. ' se' → logprob: -4.296390533447266
    10. 're' → logprob: -4.296390533447266

Token 106: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009836959652602673
    2. ' A' → logprob: -4.6348371505737305
    3. 'C' → logprob: -9.75983715057373
    4. ' ' → logprob: -11.25983715057373
    5. 'a' → logprob: -13.57233715057373
    6. ' C' → logprob: -14.13483715057373
    7. '   ' → logprob: -14.38483715057373
    8. 'l' → logprob: -14.50983715057373
    9. '	A' → logprob: -14.75983715057373
    10. 'à' → logprob: -14.88483715057373

Token 107: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014310882426798344
    2. ' if' → logprob: -4.639310836791992
    3. ':' → logprob: -6.014310836791992
    4. 'elif' → logprob: -6.639310836791992
    5. '<|end|>' → logprob: -8.889310836791992
    6. ' and' → logprob: -9.014310836791992
    7. 'while' → logprob: -9.139310836791992
    8. 'and' → logprob: -9.139310836791992
    9. ',' → logprob: -10.139310836791992
    10. 'for' → logprob: -10.264310836791992

Token 108: 'un' (ID: 373)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11073160171508789
    2. ')' → logprob: -3.110731601715088
    3. ' if' → logprob: -3.110731601715088
    4. 'while' → logprob: -4.735731601715088
    5. '#' → logprob: -6.235731601715088
    6. ' and' → logprob: -6.985731601715088
    7. ' while' → logprob: -7.110731601715088
    8. 'and' → logprob: -7.235731601715088
    9. 'for' → logprob: -7.860731601715088
    10. ' )' → logprob: -7.985731601715088

Token 109: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1494637429714203
    2. '#' → logprob: -3.274463653564453
    3. ' peu' → logprob: -3.274463653564453
    4. ' cas' → logprob: -4.524463653564453
    5. ')' → logprob: -5.399463653564453
    6. ' #' → logprob: -5.399463653564453
    7. ' espace' → logprob: -5.649463653564453
    8. 'iquement' → logprob: -5.836963653564453
    9. 's' → logprob: -6.149463653564453
    10. ' e' → logprob: -6.461963653564453

Token 110: ' tricky' (ID: 53009)
  Prédit: 'comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comme' → logprob: -1.387801170349121
    2. 'special' → logprob: -1.887801170349121
    3. 'plus' → logprob: -2.512801170349121
    4. 'le' → logprob: -2.887801170349121
    5. 'sp' → logprob: -3.012801170349121
    6. 'b' → logprob: -3.137801170349121
    7. 'part' → logprob: -3.637801170349121
    8. 'border' → logprob: -3.637801170349121
    9. ' particulier' → logprob: -3.637801170349121
    10. 'amb' → logprob: -3.887801170349121

Token 111: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29571038484573364
    2. ')' → logprob: -2.170710325241089
    3. 'if' → logprob: -3.170710325241089
    4. ' if' → logprob: -3.420710325241089
    5. ' :' → logprob: -3.545710325241089
    6. '<|end|>' → logprob: -4.295710563659668
    7. ' ' → logprob: -4.795710563659668
    8. ',' → logprob: -4.920710563659668
    9. '#' → logprob: -6.045710563659668
    10. '.' → logprob: -6.170710563659668

Token 112: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006673574447631836
    2. 'elif' → logprob: -6.006673812866211
    3. 'for' → logprob: -6.756673812866211
    4. 'i' → logprob: -7.006673812866211
    5. 'while' → logprob: -7.256673812866211
    6. 'possible' → logprob: -8.256673812866211
    7. 'pos' → logprob: -8.631673812866211
    8. 'can' → logprob: -9.256673812866211
    9. 'ok' → logprob: -9.256673812866211
    10. 'answer' → logprob: -9.506673812866211

Token 113: ' D' (ID: 415)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.11420679837465286
    2. ' C' → logprob: -2.7392067909240723
    3. 'B' → logprob: -3.4892067909240723
    4. ' D' → logprob: -4.739206790924072
    5. 'C' → logprob: -5.989206790924072
    6. ' A' → logprob: -7.364206790924072
    7. 'D' → logprob: -8.23920726776123
    8. ' ' → logprob: -8.36420726776123
    9. ' S' → logprob: -8.98920726776123
    10. ' (' → logprob: -9.11420726776123

Token 114: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.153455376625061
    2. ' <' → logprob: -1.278455376625061
    3. ' >' → logprob: -1.778455376625061
    4. '>' → logprob: -1.903455376625061
    5. ' <=' → logprob: -2.7784552574157715
    6. '<=' → logprob: -3.7784552574157715
    7. '>=' → logprob: -6.6534552574157715
    8. ' >=' → logprob: -6.7784552574157715
    9. ' ==' → logprob: -9.02845573425293
    10. '==' → logprob: -9.02845573425293

Token 115: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5449626445770264
    2. ' A' → logprob: -1.5449626445770264
    3. 'C' → logprob: -2.5449626445770264
    4. 'B' → logprob: -2.6699626445770264
    5. ' C' → logprob: -3.4199626445770264
    6. ' B' → logprob: -3.6699626445770264
    7. '=' → logprob: -7.9199628829956055
    8. ' ' → logprob: -8.044962882995605
    9. '=A' → logprob: -10.044962882995605
    10. '=C' → logprob: -10.419962882995605

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6253618597984314
    2. ' and' → logprob: -0.8753618597984314
    3. 'and' → logprob: -3.125361919403076
    4. ':
' → logprob: -5.875361919403076
    5. ' or' → logprob: -6.875361919403076
    6. ' :' → logprob: -9.125361442565918
    7. 'or' → logprob: -9.500361442565918
    8. ' ' → logprob: -9.750361442565918
    9. ')' → logprob: -10.000361442565918
    10. ',' → logprob: -10.375361442565918

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1444355547428131
    2. ' if' → logprob: -2.7694356441497803
    3. 'if' → logprob: -3.7694356441497803
    4. ' and' → logprob: -4.144435405731201
    5. 'print' → logprob: -4.519435405731201
    6. ' print' → logprob: -4.894435405731201
    7. '
' → logprob: -5.769435405731201
    8. ':' → logprob: -5.769435405731201
    9. '    
' → logprob: -5.769435405731201
    10. ' ' → logprob: -6.894435405731201

Token 118: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4606129825115204
    2. 'print' → logprob: -1.5856130123138428
    3. '#' (adapté à ' #') → logprob: -2.7106130123138428
    4. 'for' → logprob: -2.8356130123138428
    5. 'while' → logprob: -4.585612773895264
    6. 'i' → logprob: -5.085612773895264
    7. 'S' → logprob: -5.085612773895264
    8. 'temp' → logprob: -5.960612773895264
    9. 'C' → logprob: -6.460612773895264
    10. 'idx' → logprob: -6.585612773895264

Token 119: ' F' (ID: 454)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3145277798175812
    2. 'for' → logprob: -2.189527750015259
    3. 'print' → logprob: -2.939527750015259
    4. '#' → logprob: -2.939527750015259
    5. 'while' → logprob: -4.189527988433838
    6. 'possible' → logprob: -4.939527988433838
    7. 'i' → logprob: -5.064527988433838
    8. 'found' → logprob: -5.564527988433838
    9. 'pass' → logprob: -5.689527988433838
    10. 'temp' → logprob: -6.064527988433838

Token 120: 'aut' (ID: 1828)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.22365909814834595
    2. '#' → logprob: -1.9736590385437012
    3. 'for' → logprob: -2.973659038543701
    4. 'if' → logprob: -5.473659038543701
    5. '   ' → logprob: -5.848659038543701
    6. ' or' → logprob: -7.723659038543701
    7. 'r' → logprob: -7.973659038543701
    8. 'print' → logprob: -8.22365951538086
    9. '
' → logprob: -8.59865951538086
    10. ' #' → logprob: -8.72365951538086

Token 121: ' un' (ID: 537)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.7766461372375488
    2. '#' → logprob: -2.026646137237549
    3. ' trouver' → logprob: -2.401646137237549
    4. 's' → logprob: -2.651646137237549
    5. 'avoir' → logprob: -2.651646137237549
    6. ' que' → logprob: -3.026646137237549
    7. ' vérifier' → logprob: -3.026646137237549
    8. 'une' → logprob: -3.151646137237549
    9. 'qu' → logprob: -3.276646137237549
    10. '-il' → logprob: -3.276646137237549

Token 122: ' espace' (ID: 66004)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07810895889997482
    2. ' espace' → logprob: -3.7031090259552
    3. ''' → logprob: -4.578108787536621
    4. ' triple' → logprob: -5.203108787536621
    5. ' passage' → logprob: -5.328108787536621
    6. ' e' → logprob: -5.453108787536621
    7. ' trip' → logprob: -6.078108787536621
    8. ' '' → logprob: -6.203108787536621
    9. '#' → logprob: -6.578108787536621
    10. 'es' → logprob: -6.703108787536621

Token 123: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' doub' (ID: 12198)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.25744232535362244
    2. 'pass' → logprob: -2.6324422359466553
    3. ' que' → logprob: -2.8824422359466553
    4. 'f' → logprob: -4.007442474365234
    5. 'p' → logprob: -4.382442474365234
    6. 'C' → logprob: -4.507442474365234
    7. 's' → logprob: -4.757442474365234
    8. 'faire' → logprob: -4.757442474365234
    9. 'qu' → logprob: -5.007442474365234
    10. 'le' → logprob: -5.257442474365234

Token 125: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.6364247798919678
    2. 'le' → logprob: -0.7614247798919678
    3. 'l' → logprob: -6.136425018310547
    4. 'er' → logprob: -7.136425018310547
    5. 'lement' → logprob: -7.886425018310547
    6. '#' → logprob: -8.511425018310547
    7. '>' → logprob: -9.511425018310547
    8. '```' → logprob: -11.261425018310547
    9. 'les' → logprob: -11.386425018310547
    10. 'ex' → logprob: -11.511425018310547

Token 126: ' quelqu' (ID: 57482)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11267096549272537
    2. '...' → logprob: -3.4876708984375
    3. ''' → logprob: -3.6126708984375
    4. '.' → logprob: -4.1126708984375
    5. 'space' → logprob: -5.1126708984375
    6. ''#' → logprob: -5.1126708984375
    7. '<|end|>' → logprob: -6.2376708984375
    8. '###' → logprob: -6.3626708984375
    9. '..' → logprob: -6.4876708984375
    10. 'l' → logprob: -6.7376708984375

Token 127: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.40123409032821655
    2. 'es' → logprob: -2.6512341499328613
    3. '#' → logprob: -2.7762341499328613
    4. 'ent' → logprob: -2.7762341499328613
    5. ''espace' → logprob: -3.0262341499328613
    6. 'i' → logprob: -4.651234149932861
    7. ''' → logprob: -4.776234149932861
    8. ''#' → logprob: -4.901234149932861
    9. ''un' → logprob: -5.151234149932861
    10. 'le' → logprob: -5.151234149932861

Token 128: '...
' (ID: 4908)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5829598307609558
    2. 'if' → logprob: -1.2079598903656006
    3. ' and' → logprob: -2.4579598903656006
    4. ' or' → logprob: -3.8329598903656006
    5. 'and' → logprob: -4.8329596519470215
    6. ' ' → logprob: -5.3329596519470215
    7. '<|end|>' → logprob: -5.3329596519470215
    8. '  ' → logprob: -5.9579596519470215
    9. ' for' → logprob: -6.2079596519470215
    10. '   ' → logprob: -6.3329596519470215

Token 129: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21201199293136597
    2. ' if' → logprob: -1.7120120525360107
    3. ' and' → logprob: -4.837011814117432
    4. 'and' → logprob: -6.962011814117432
    5. '...' → logprob: -8.21201229095459
    6. 'S' → logprob: -8.58701229095459
    7. ' S' → logprob: -8.71201229095459
    8. '#' → logprob: -8.71201229095459
    9. 's' → logprob: -8.83701229095459
    10. 'for' → logprob: -9.08701229095459

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004166964441537857
    2. ''' → logprob: -6.254167079925537
    3. ' if' → logprob: -6.754167079925537
    4. 'print' → logprob: -7.629167079925537
    5. 'S' → logprob: -7.879167079925537
    6. ''S' → logprob: -9.254166603088379
    7. ' '' → logprob: -10.754166603088379
    8. ''s' → logprob: -11.129166603088379
    9. ' S' → logprob: -11.754166603088379
    10. '   ' → logprob: -11.754166603088379

Token 131: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3107597529888153
    2. ' S' → logprob: -2.1857597827911377
    3. ''S' → logprob: -2.5607597827911377
    4. ''' → logprob: -3.0607597827911377
    5. ' '' → logprob: -4.810759544372559
    6. ' '#'' → logprob: -4.810759544372559
    7. ''C' → logprob: -5.185759544372559
    8. ''#' → logprob: -5.435759544372559
    9. 'C' → logprob: -6.810759544372559
    10. ' ' → logprob: -7.560759544372559

Token 132: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.013282928615808487
    2. '[C' → logprob: -5.013282775878906
    3. '[' → logprob: -6.138282775878906
    4. '[B' → logprob: -6.138282775878906
    5. '[A' → logprob: -7.138282775878906
    6. '.find' → logprob: -7.263282775878906
    7. '.count' → logprob: -7.888282775878906
    8. '.index' → logprob: -8.513282775878906
    9. 'D' → logprob: -10.138282775878906
    10. '#' → logprob: -10.388282775878906

Token 133: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.283568799495697
    2. ']' → logprob: -1.6585688591003418
    3. '-' → logprob: -3.283568859100342
    4. ' +' → logprob: -4.408568859100342
    5. ':D' → logprob: -6.158568859100342
    6. 'D' → logprob: -6.283568859100342
    7. ']==' → logprob: -7.033568859100342
    8. '+D' → logprob: -7.408568859100342
    9. ' -' → logprob: -7.783568859100342
    10. ']=='' → logprob: -8.033568382263184

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.85366350505501e-05
    2. '2' → logprob: -9.75009822845459
    3. ' ' → logprob: -10.37509822845459
    4. '0' → logprob: -12.12509822845459
    5. 'D' → logprob: -13.87509822845459
    6. '3' → logprob: -14.12509822845459
    7. '   ' → logprob: -14.68759822845459
    8. '-' → logprob: -14.87509822845459
    9. 'C' → logprob: -15.50009822845459
    10. '(' → logprob: -15.68759822845459

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004662949591875076
    2. ']==' → logprob: -6.504662990570068
    3. ']!='' → logprob: -7.129662990570068
    4. ':' → logprob: -7.379662990570068
    5. ' ]' → logprob: -7.504662990570068
    6. ']!=' → logprob: -7.754662990570068
    7. 'D' → logprob: -8.37966251373291
    8. ']=='' → logprob: -8.50466251373291
    9. ':D' → logprob: -9.12966251373291
    10. ' D' → logprob: -10.50466251373291

Token 136: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47081273794174194
    2. '!=' → logprob: -1.2208127975463867
    3. ' !=' → logprob: -2.8458127975463867
    4. ' ==' → logprob: -4.095812797546387
    5. '!='' → logprob: -5.595812797546387
    6. '=='' → logprob: -6.345812797546387
    7. '()!=' → logprob: -10.345812797546387
    8. ' ' → logprob: -10.470812797546387
    9. '.' → logprob: -10.720812797546387
    10. '=' → logprob: -11.033312797546387

Token 137: ' "#"' (ID: 149789)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00993138737976551
    2. ''#' → logprob: -4.634931564331055
    3. ''' → logprob: -8.759931564331055
    4. ' '.'' → logprob: -11.509931564331055
    5. '"."' → logprob: -12.259931564331055
    6. ''S' → logprob: -13.634931564331055
    7. ' '#'' → logprob: -14.259931564331055
    8. '".' → logprob: -14.509931564331055
    9. '.' → logprob: -15.134931564331055
    10. '('.')' → logprob: -15.259931564331055

Token 138: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23988157510757446
    2. ' or' → logprob: -1.9898815155029297
    3. 'and' → logprob: -2.6148815155029297
    4. 'or' → logprob: -6.36488151550293
    5. ' ' → logprob: -7.98988151550293
    6. ''' → logprob: -8.11488151550293
    7. ':' → logprob: -8.11488151550293
    8. ')' → logprob: -8.48988151550293
    9. ' '' → logprob: -8.98988151550293
    10. '.' → logprob: -9.73988151550293

Token 139: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22563371062278748
    2. ' S' → logprob: -1.6006337404251099
    3. ' ' → logprob: -8.85063362121582
    4. 'D' → logprob: -10.22563362121582
    5. '#' → logprob: -11.72563362121582
    6. ' D' → logprob: -12.22563362121582
    7. '  ' → logprob: -12.53813362121582
    8. ' (' → logprob: -12.53813362121582
    9. '"S' → logprob: -12.66313362121582
    10. '(S' → logprob: -12.72563362121582

Token 140: '[D' (ID: 159299)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.49758967757225037
    2. 'S' → logprob: -0.9975897073745728
    3. ' D' → logprob: -4.747589588165283
    4. ' ' → logprob: -5.372589588165283
    5. 'D' → logprob: -5.497589588165283
    6. '   ' → logprob: -5.872589588165283
    7. '  ' → logprob: -6.997589588165283
    8. '[D' → logprob: -7.247589588165283
    9. '[S' → logprob: -8.247590065002441
    10. ' '' → logprob: -8.247590065002441

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1973093748092651
    2. ']' → logprob: -1.1973093748092651
    3. '-' → logprob: -1.3223093748092651
    4. '1' → logprob: -2.4473094940185547
    5. '0' → logprob: -4.572309494018555
    6. ']==' → logprob: -4.697309494018555
    7. ' ' → logprob: -5.322309494018555
    8. '[' → logprob: -5.447309494018555
    9. '#' → logprob: -5.447309494018555
    10. ' ==' → logprob: -5.697309494018555

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.250043869018555
    3. '+' → logprob: -12.625043869018555
    4. '2' → logprob: -13.750043869018555
    5. '#' → logprob: -13.875043869018555
    6. '-' → logprob: -13.875043869018555
    7. '0' → logprob: -14.125043869018555
    8. '   ' → logprob: -14.875043869018555
    9. ']' → logprob: -15.000043869018555
    10. '```' → logprob: -15.625043869018555

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005961510818451643
    2. ']==' → logprob: -5.3809614181518555
    3. '==' → logprob: -7.2559614181518555
    4. ' ==' → logprob: -8.005961418151855
    5. '']' → logprob: -8.880961418151855
    6. '"]' → logprob: -9.255961418151855
    7. ' ]' → logprob: -10.005961418151855
    8. ']=='' → logprob: -11.755961418151855
    9. '']==' → logprob: -12.880961418151855
    10. '#' → logprob: -13.130961418151855

Token 144: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13633880019187927
    2. ' ==' → logprob: -2.386338710784912
    3. '!=' → logprob: -3.511338710784912
    4. ' !=' → logprob: -5.261338710784912
    5. '=='' → logprob: -8.51133918762207
    6. '=="' → logprob: -9.88633918762207
    7. ']==' → logprob: -10.01133918762207
    8. ')' → logprob: -10.38633918762207
    9. '!='' → logprob: -11.01133918762207
    10. '=' → logprob: -11.13633918762207

Token 145: ' "#' (ID: 11351)
  Prédit: '"#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"#' → logprob: -0.0034473033156245947
    2. '"' → logprob: -6.378447532653809
    3. ' "#"' → logprob: -6.628447532653809
    4. ''#' → logprob: -7.878447532653809
    5. ' "#' → logprob: -11.003447532653809
    6. '""' → logprob: -12.378447532653809
    7. '#' → logprob: -12.503447532653809
    8. '"""' → logprob: -12.628447532653809
    9. ' '#'' → logprob: -12.628447532653809
    10. '")' → logprob: -13.503447532653809

Token 146: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5204818248748779
    2. ':
' → logprob: -2.020481824874878
    3. '":' → logprob: -2.145481824874878
    4. ' or' → logprob: -2.645481824874878
    5. '"' → logprob: -3.645481824874878
    6. '":
' → logprob: -4.270482063293457
    7. '):
' → logprob: -4.395482063293457
    8. '   ' → logprob: -4.520482063293457
    9. '):' → logprob: -5.020482063293457
    10. '"):
' → logprob: -5.020482063293457

Token 147: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1395050436258316
    2. '       ' → logprob: -2.51450514793396
    3. 'print' → logprob: -3.51450514793396
    4. ' print' → logprob: -5.264504909515381
    5. '
' → logprob: -5.764504909515381
    6. ')' → logprob: -5.889504909515381
    7. '  ' → logprob: -6.139504909515381
    8. ' or' → logprob: -6.264504909515381
    9. ' ' → logprob: -6.514504909515381
    10. '<|end|>' → logprob: -6.889504909515381

Token 148: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15077108144760132
    2. '   ' → logprob: -2.400771141052246
    3. ' print' → logprob: -3.025771141052246
    4. '       ' → logprob: -7.775771141052246
    5. ' ' → logprob: -8.900771141052246
    6. '
' → logprob: -9.025771141052246
    7. '  ' → logprob: -10.025771141052246
    8. '    ' → logprob: -11.025771141052246
    9. '	print' → logprob: -11.025771141052246
    10. '```' → logprob: -11.525771141052246

Token 149: ' "' (ID: 392)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3683919608592987
    2. ' S' → logprob: -1.368391990661621
    3. ''' → logprob: -4.618391990661621
    4. ''S' → logprob: -4.868391990661621
    5. ' D' → logprob: -4.993391990661621
    6. 'D' → logprob: -5.118391990661621
    7. ' '' → logprob: -5.868391990661621
    8. 'B' → logprob: -5.868391990661621
    9. 'A' → logprob: -5.868391990661621
    10. ' B' → logprob: -5.993391990661621

Token 150: '..."' (ID: 34415)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8069919347763062
    2. ''' → logprob: -1.3069919347763062
    3. ' S' → logprob: -2.1819920539855957
    4. '"' → logprob: -2.5569920539855957
    5. ' '' → logprob: -3.3069920539855957
    6. ''S' → logprob: -3.9319920539855957
    7. ' '#'' → logprob: -5.431992053985596
    8. '"S' → logprob: -5.556992053985596
    9. ' not' → logprob: -5.556992053985596
    10. ' ' → logprob: -5.681992053985596

Token 151: ' in' (ID: 306)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -1.1428587436676025
    2. '"' → logprob: -1.2678587436676025
    3. ' not' → logprob: -1.3928587436676025
    4. ' "' → logprob: -2.7678587436676025
    5. ' in' → logprob: -3.3928587436676025
    6. ''' → logprob: -4.517858505249023
    7. ' '' → logprob: -5.017858505249023
    8. '.' → logprob: -5.142858505249023
    9. 'not' → logprob: -5.517858505249023
    10. ' ...' → logprob: -5.642858505249023

Token 152: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16024981439113617
    2. ' S' → logprob: -1.9102498292922974
    3. ' ' → logprob: -10.910249710083008
    4. '  ' → logprob: -12.785249710083008
    5. 's' → logprob: -13.785249710083008
    6. '   ' → logprob: -14.035249710083008
    7. ' ' → logprob: -14.285249710083008
    8. '(S' → logprob: -14.910249710083008
    9. '
' → logprob: -15.285249710083008
    10. '#' → logprob: -15.347749710083008

Token 153: '[B' (ID: 95385)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.000556843588128686
    2. '[' → logprob: -8.375556945800781
    3. 'D' → logprob: -9.000556945800781
    4. '[B' → logprob: -9.250556945800781
    5. '[S' → logprob: -10.000556945800781
    6. '[C' → logprob: -10.875556945800781
    7. '(D' → logprob: -11.875556945800781
    8. ':D' → logprob: -12.125556945800781
    9. '

' → logprob: -12.125556945800781
    10. ' [' → logprob: -12.875556945800781

Token 154: '-' (ID: 12)
  Prédit: ':D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':D' → logprob: -0.058671895414590836
    2. '+' → logprob: -3.8086719512939453
    3. '[D' → logprob: -3.9336719512939453
    4. 'D' → logprob: -4.558671951293945
    5. '-' → logprob: -6.183671951293945
    6. ':]' → logprob: -7.183671951293945
    7. ']' → logprob: -7.808671951293945
    8. ':' → logprob: -7.808671951293945
    9. '+D' → logprob: -8.183671951293945
    10. '(D' → logprob: -8.808671951293945

Token 155: '1' (ID: 16)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001694461447186768
    2. 'C' → logprob: -6.501694679260254
    3. ' D' → logprob: -9.376694679260254
    4. 'B' → logprob: -10.126694679260254
    5. 'A' → logprob: -10.876694679260254
    6. ':D' → logprob: -11.001694679260254
    7. ' ' → logprob: -11.876694679260254
    8. '   ' → logprob: -11.876694679260254
    9. ']' → logprob: -12.751694679260254
    10. ':' → logprob: -12.876694679260254

Token 156: ':D' (ID: 98485)
  Prédit: ':D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':D' → logprob: -0.025758584961295128
    2. ':C' → logprob: -3.7757585048675537
    3. ':B' → logprob: -6.400758743286133
    4. ' :' → logprob: -7.525758743286133
    5. ':' → logprob: -8.775758743286133
    6. ':]' → logprob: -9.900758743286133
    7. 'D' → logprob: -10.525758743286133
    8. 'C' → logprob: -10.525758743286133
    9. ']' → logprob: -11.150758743286133
    10. ':E' → logprob: -12.400758743286133

Token 157: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019872242584824562
    2. ']' → logprob: -4.019872188568115
    3. ' +' → logprob: -7.519872188568115
    4. '1' → logprob: -7.644872188568115
    5. ']:' → logprob: -8.019872665405273
    6. '+]' → logprob: -9.269872665405273
    7. ']+' → logprob: -9.644872665405273
    8. ']:
' → logprob: -10.019872665405273
    9. ' ]' → logprob: -10.269872665405273
    10. '3' → logprob: -10.269872665405273

Token 158: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7004050612449646
    2. '1' → logprob: -0.7004050612449646
    3. '2' → logprob: -4.950405120849609
    4. ']' → logprob: -10.32540512084961
    5. ']+' → logprob: -10.45040512084961
    6. ' ' → logprob: -10.70040512084961
    7. '3' → logprob: -10.70040512084961
    8. '0' → logprob: -11.07540512084961
    9. '+]' → logprob: -12.32540512084961
    10. '-' → logprob: -12.32540512084961

Token 159: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2798392176628113
    2. ']' → logprob: -1.529839277267456
    3. ']:
' → logprob: -4.279839038848877
    4. ' ]' → logprob: -5.029839038848877
    5. '"]:' → logprob: -5.904839038848877
    6. '":' → logprob: -6.779839038848877
    7. ']"' → logprob: -7.279839038848877
    8. ':' → logprob: -7.279839038848877
    9. ']==' → logprob: -7.654839038848877
    10. '"]' → logprob: -7.654839038848877

Token 160: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5117002725601196
    2. '   ' → logprob: -1.3867002725601196
    3. ' print' → logprob: -2.13670015335083
    4. '       ' → logprob: -3.88670015335083
    5. ':
' → logprob: -5.51170015335083
    6. '
' → logprob: -5.63670015335083
    7. ':' → logprob: -6.51170015335083
    8. '```' → logprob: -7.01170015335083
    9. '           ' → logprob: -7.38670015335083
    10. ' ' → logprob: -8.261700630187988

Token 161: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.040535565465688705
    2. ' print' → logprob: -3.2905354499816895
    3. '   ' → logprob: -6.0405354499816895
    4. '       ' → logprob: -9.665535926818848
    5. ' ' → logprob: -11.040535926818848
    6. '
' → logprob: -11.665535926818848
    7. ':' → logprob: -12.290535926818848
    8. '           ' → logprob: -12.290535926818848
    9. '	print' → logprob: -12.540535926818848
    10. '\n' → logprob: -13.290535926818848

Token 162: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2663794755935669
    2. '("' → logprob: -1.766379475593567
    3. '(' → logprob: -2.7663793563842773
    4. '("("' → logprob: -12.266379356384277
    5. '('(' → logprob: -12.516379356384277
    6. '("(' → logprob: -13.641379356384277
    7. ' ("' → logprob: -15.141379356384277
    8. '(('' → logprob: -15.141379356384277
    9. ' ('' → logprob: -15.266379356384277
    10. '()' → logprob: -15.391379356384277

Token 163: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.523948907968588e-05
    2. ''' → logprob: -10.750035285949707
    3. 'Oui' → logprob: -12.000035285949707
    4. 'Ye' → logprob: -12.750035285949707
    5. 'No' → logprob: -13.000035285949707
    6. ' Yes' → logprob: -13.500035285949707
    7. '"' → logprob: -14.750035285949707
    8. 'YES' → logprob: -15.375035285949707
    9. 'Ok' → logprob: -16.25003433227539
    10. 'O' → logprob: -17.00003433227539

Token 164: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5764333605766296
    2. '')
' → logprob: -0.8264333605766296
    3. '')
' → logprob: -8.326433181762695
    4. ')' → logprob: -8.451433181762695
    5. ')
' → logprob: -10.951433181762695
    6. '")' → logprob: -11.576433181762695
    7. '")
' → logprob: -12.201433181762695
    8. ')')
' → logprob: -13.201433181762695
    9. '')

' → logprob: -13.701433181762695
    10. ''' → logprob: -14.451433181762695

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07460303604602814
    2. 'else' → logprob: -2.8246030807495117
    3. '   ' → logprob: -4.824603080749512
    4. '           ' → logprob: -5.574603080749512
    5. ' else' → logprob: -7.699603080749512
    6. 'elif' → logprob: -8.699603080749512
    7. ')' → logprob: -10.574603080749512
    8. '               ' → logprob: -11.074603080749512
    9. '            
' → logprob: -11.324603080749512
    10. ' ' → logprob: -11.574603080749512

Token 166: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8324183821678162
    2. '       ' → logprob: -1.207418441772461
    3. '   ' → logprob: -1.332418441772461
    4. 'elif' → logprob: -6.707418441772461
    5. ' else' → logprob: -7.457418441772461
    6. '           ' → logprob: -8.082418441772461
    7. ')' → logprob: -10.332418441772461
    8. ' ' → logprob: -11.457418441772461
    9. '	else' → logprob: -11.957418441772461
    10. '  ' → logprob: -12.332418441772461

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055421195924282074
    2. ':
' → logprob: -2.9304211139678955
    3. '           ' → logprob: -7.555421352386475
    4. 'print' → logprob: -12.555420875549316
    5. '       ' → logprob: -13.055420875549316
    6. ':

' → logprob: -13.055420875549316
    7. ' :' → logprob: -13.555420875549316
    8. '               ' → logprob: -13.555420875549316
    9. ' :
' → logprob: -13.805420875549316
    10. '):
' → logprob: -13.930420875549316

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006204177159816027
    2. 'print' → logprob: -5.131204128265381
    3. ' print' → logprob: -8.881204605102539
    4. '   ' → logprob: -9.506204605102539
    5. '               ' → logprob: -10.506204605102539
    6. '       ' → logprob: -10.631204605102539
    7. '          ' → logprob: -12.506204605102539
    8. '         ' → logprob: -13.256204605102539
    9. '	       ' → logprob: -13.506204605102539
    10. ' ' → logprob: -13.631204605102539

Token 169: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010292385704815388
    2. '           ' → logprob: -7.001029014587402
    3. ' print' → logprob: -9.126029014587402
    4. '   ' → logprob: -12.001029014587402
    5. '       ' → logprob: -13.001029014587402
    6. ' ' → logprob: -15.251029014587402
    7. '	print' → logprob: -16.25102996826172
    8. '  ' → logprob: -16.75102996826172
    9. '```' → logprob: -17.25102996826172
    10. '          ' → logprob: -17.37602996826172

Token 170: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '("' → logprob: -17.1250057220459
    4. '(
' → logprob: -19.3750057220459
    5. ' ('' → logprob: -20.6250057220459
    6. '(('' → logprob: -20.8750057220459
    7. '()' → logprob: -21.1250057220459
    8. '('\' → logprob: -21.1250057220459
    9. ''' → logprob: -21.1250057220459
    10. '(

' → logprob: -21.7500057220459

Token 171: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0021970022935420275
    2. ''' → logprob: -6.127196788787842
    3. '('' → logprob: -12.002197265625
    4. '"No' → logprob: -12.877197265625
    5. 'Yes' → logprob: -13.002197265625
    6. ' No' → logprob: -14.877197265625
    7. '(No' → logprob: -15.252197265625
    8. '')' → logprob: -16.002197265625
    9. '"' → logprob: -16.252197265625
    10. 'NO' → logprob: -16.377197265625

Token 172: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07049284130334854
    2. '')
' → logprob: -2.820492744445801
    3. ')' → logprob: -5.070492744445801
    4. '   ' → logprob: -6.195492744445801
    5. ')
' → logprob: -9.4454927444458
    6. '')
' → logprob: -10.4454927444458
    7. '       ' → logprob: -10.5704927444458
    8. '")' → logprob: -11.0704927444458
    9. 'else' → logprob: -12.0704927444458
    10. '#' → logprob: -12.6954927444458

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004556392319500446
    2. 'else' → logprob: -5.879556179046631
    3. '       ' → logprob: -6.379556179046631
    4. 'elif' → logprob: -10.754556655883789
    5. ' else' → logprob: -11.129556655883789
    6. '           ' → logprob: -11.879556655883789
    7. ')' → logprob: -13.504556655883789
    8. '  ' → logprob: -13.754556655883789
    9. '	else' → logprob: -13.754556655883789
    10. '    
' → logprob: -13.754556655883789

Token 174: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16813816130161285
    2. '   ' → logprob: -1.9181381464004517
    3. '       ' → logprob: -5.668138027191162
    4. ' else' → logprob: -5.918138027191162
    5. 'elif' → logprob: -6.418138027191162
    6. '	else' → logprob: -10.29313850402832
    7. '
' → logprob: -10.79313850402832
    8. ' ' → logprob: -11.16813850402832
    9. ')' → logprob: -11.91813850402832
    10. 'print' → logprob: -12.29313850402832

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02987140230834484
    2. ':
' → logprob: -3.5298714637756348
    3. '       ' → logprob: -9.279870986938477
    4. '   ' → logprob: -11.029870986938477
    5. 'print' → logprob: -12.404870986938477
    6. ' :' → logprob: -12.654870986938477
    7. ' :
' → logprob: -13.779870986938477
    8. ':

' → logprob: -13.904870986938477
    9. '.' → logprob: -14.654870986938477
    10. ':
' → logprob: -14.779870986938477

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20207343995571136
    2. 'print' → logprob: -1.7020734548568726
    3. '   ' → logprob: -8.327073097229004
    4. '           ' → logprob: -8.327073097229004
    5. ' print' → logprob: -8.702073097229004
    6. 'if' → logprob: -12.577073097229004
    7. '```' → logprob: -13.202073097229004
    8. '	print' → logprob: -13.327073097229004
    9. '     ' → logprob: -14.077073097229004
    10. ' ' → logprob: -14.077073097229004

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017651435919106007
    2. ' print' → logprob: -6.751765251159668
    3. '       ' → logprob: -8.001765251159668
    4. 'if' → logprob: -8.876765251159668
    5. '   ' → logprob: -9.251765251159668
    6. '           ' → logprob: -11.501765251159668
    7. ' if' → logprob: -12.251765251159668
    8. ' ' → logprob: -12.376765251159668
    9. '	print' → logprob: -13.376765251159668
    10. 'Print' → logprob: -13.876765251159668

Token 178: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0031827057246118784
    2. '(' → logprob: -5.753182888031006
    3. '("' → logprob: -12.503182411193848
    4. '('(' → logprob: -13.753182411193848
    5. ' ('' → logprob: -16.378183364868164
    6. '()' → logprob: -16.628183364868164
    7. '(
' → logprob: -17.378183364868164
    8. '(('' → logprob: -17.878183364868164
    9. '("("' → logprob: -18.128183364868164
    10. '(`' → logprob: -18.128183364868164

Token 179: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2085433155298233
    2. ''' → logprob: -1.833543300628662
    3. 'Yes' → logprob: -3.583543300628662
    4. '('' → logprob: -7.583543300628662
    5. '"No' → logprob: -10.08354377746582
    6. '(No' → logprob: -11.33354377746582
    7. ' No' → logprob: -11.83354377746582
    8. '"' → logprob: -11.95854377746582
    9. 'Nos' → logprob: -13.08354377746582
    10. ''N' → logprob: -13.08354377746582

Token 180: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002873346209526062
    2. '')' → logprob: -5.877873420715332
    3. ')
' → logprob: -10.127873420715332
    4. '")' → logprob: -11.377873420715332
    5. '`)' → logprob: -12.377873420715332
    6. ' )' → logprob: -12.627873420715332
    7. '```' → logprob: -12.752873420715332
    8. '<|end|>' → logprob: -12.877873420715332
    9. '#' → logprob: -13.627873420715332
    10. '}' → logprob: -14.627873420715332

Token 181: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.017831947654485703
    2. 'elif' → logprob: -4.892831802368164
    3. '<|end|>' → logprob: -5.392831802368164
    4. ' else' → logprob: -5.392831802368164
    5. ')' → logprob: -7.517831802368164
    6. '```' → logprob: -8.267831802368164
    7. '
' → logprob: -9.392831802368164
    8. ':' → logprob: -9.767831802368164
    9. '#' → logprob: -10.392831802368164
    10. '#else' → logprob: -11.142831802368164

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026634239475242794
    2. ':
' → logprob: -8.250266075134277
    3. ' :' → logprob: -12.625266075134277
    4. '   ' → logprob: -13.500266075134277
    5. ':
' → logprob: -15.750266075134277
    6. ':

' → logprob: -16.125267028808594
    7. '{' → logprob: -17.875267028808594
    8. '.' → logprob: -18.000267028808594
    9. 'if' → logprob: -18.125267028808594
    10. ' :
' → logprob: -18.500267028808594

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13877366483211517
    2. 'if' → logprob: -2.1387736797332764
    3. 'print' → logprob: -5.013773441314697
    4. ' if' → logprob: -5.513773441314697
    5. '#' → logprob: -7.013773441314697
    6. '       ' → logprob: -9.388773918151855
    7. ' print' → logprob: -10.388773918151855
    8. 'for' → logprob: -10.888773918151855
    9. '    ' → logprob: -11.263773918151855
    10. ' #' → logprob: -11.763773918151855

Token 184: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6567444801330566
    2. '#' → logprob: -1.0317444801330566
    3. 'for' → logprob: -3.0317444801330566
    4. '   ' → logprob: -3.2817444801330566
    5. 'print' (adapté à ' print') → logprob: -3.5317444801330566
    6. ' if' → logprob: -5.906744480133057
    7. 'count' → logprob: -6.531744480133057
    8. ' #' → logprob: -6.656744480133057
    9. 'pass' → logprob: -6.781744480133057
    10. '...' → logprob: -7.031744480133057

Token 185: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005663761985488236
    2. '(' → logprob: -7.500566482543945
    3. '('(' → logprob: -11.500566482543945
    4. '("' → logprob: -12.875566482543945
    5. '("("' → logprob: -14.875566482543945
    6. '(('' → logprob: -15.625566482543945
    7. '()' → logprob: -17.125566482543945
    8. ' ('' → logprob: -17.250566482543945
    9. '(
' → logprob: -17.500566482543945
    10. '(`' → logprob: -17.500566482543945

Token 186: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.3140265941619873
    2. 'No' → logprob: -1.3140265941619873
    3. ''' → logprob: -7.189026832580566
    4. ' Yes' → logprob: -12.439026832580566
    5. '('' → logprob: -13.439026832580566
    6. ' No' → logprob: -14.189026832580566
    7. 'Possible' → logprob: -14.314026832580566
    8. '"' → logprob: -14.814026832580566
    9. '"No' → logprob: -14.814026832580566
    10. 'YES' → logprob: -15.189026832580566

Token 187: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890454679727554
    2. '')' → logprob: -2.578904628753662
    3. '")' → logprob: -11.578904151916504
    4. ' )' → logprob: -12.828904151916504
    5. ')
' → logprob: -13.828904151916504
    6. '```' → logprob: -14.578904151916504
    7. '`)' → logprob: -14.703904151916504
    8. '#' → logprob: -15.453904151916504
    9. '')
' → logprob: -15.578904151916504
    10. '»)' → logprob: -16.95390510559082


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 136
Précision stricte (1ère position): 30.81%
Précision adaptée (1ère position): 34.59%
Précision (top 10): 73.51%
================================================================================
