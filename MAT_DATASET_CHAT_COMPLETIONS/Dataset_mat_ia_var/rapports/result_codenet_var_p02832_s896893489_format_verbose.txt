================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

number_of_elements = int(stdin.readline().rstrip())

input_sequence = list(map(int, stdin.readline().rstrip().split()))

current_expected_value = 0

for element in input_sequence:
    if element == current_expected_value + 1:
        current_expected_value = element

if current_expected_value == 0:
    print(-1)
else:
    result = number_of_elements - current_expected_value
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08520080149173737
    2. ' argv' → logprob: -2.710200786590576
    3. 'exit' → logprob: -4.585200786590576
    4. ' exit' → logprob: -5.835200786590576
    5. 'stdout' → logprob: -6.960200786590576
    6. 'path' → logprob: -7.710200786590576
    7. 'stdin' → logprob: -8.210201263427734
    8. 'version' → logprob: -9.085201263427734
    9. 'import' → logprob: -9.460201263427734
    10. ' path' → logprob: -10.085201263427734

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009244076907634735
    2. '.readline' → logprob: -4.759243965148926
    3. '.read' → logprob: -8.509243965148926
    4. '\n' → logprob: -9.259243965148926
    5. '
' → logprob: -9.509243965148926
    6. '.
' → logprob: -9.759243965148926
    7. ',' → logprob: -9.884243965148926
    8. 'import' → logprob: -10.134243965148926
    9. '```' → logprob: -10.384243965148926
    10. '.write' → logprob: -11.134243965148926

Token 5: 'number' (ID: 8096)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0644008219242096
    2. '.readline' → logprob: -3.1894009113311768
    3. '\n' → logprob: -4.814400672912598
    4. 'for' → logprob: -5.814400672912598
    5. '.read' → logprob: -6.189400672912598
    6. 'import' → logprob: -6.189400672912598
    7. '
' → logprob: -6.689400672912598
    8. ',' → logprob: -7.064400672912598
    9. 'print' → logprob: -7.314400672912598
    10. '\' → logprob: -7.314400672912598

Token 6: '_of' (ID: 8023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7775156497955322
    2. '.' → logprob: -1.4025156497955322
    3. ')' → logprob: -2.2775156497955322
    4. ' =' → logprob: -2.4025156497955322
    5. 's' → logprob: -2.7775156497955322
    6. '_' → logprob: -3.6525156497955322
    7. '.readline' → logprob: -5.152515411376953
    8. ' ' → logprob: -5.902515411376953
    9. '<|end|>' → logprob: -7.527515411376953
    10. ',' → logprob: -7.652515411376953

Token 7: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25481143593788147
    2. '_lines' → logprob: -1.754811406135559
    3. '_items' → logprob: -4.0048112869262695
    4. '_spaces' → logprob: -4.5048112869262695
    5. '_users' → logprob: -4.7548112869262695
    6. ' ' → logprob: -5.6298112869262695
    7. 's' → logprob: -6.5048112869262695
    8. '_words' → logprob: -6.7548112869262695
    9. '_students' → logprob: -6.8798112869262695
    10. '_reads' → logprob: -6.8798112869262695

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5259262919425964
    2. '=' → logprob: -0.9009262919425964
    3. '_' → logprob: -6.525926113128662
    4. '.' → logprob: -7.775926113128662
    5. ')' → logprob: -8.15092658996582
    6. '[' → logprob: -8.27592658996582
    7. 's' → logprob: -8.90092658996582
    8. ' ' → logprob: -9.02592658996582
    9. ',' → logprob: -10.15092658996582
    10. '[:]' → logprob: -11.02592658996582

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.025036394596099854
    2. ' ' → logprob: -4.150036334991455
    3. 'int' → logprob: -4.775036334991455
    4. ' len' → logprob: -8.025036811828613
    5. ' stdin' → logprob: -9.775036811828613
    6. ' []' → logprob: -10.150036811828613
    7. '0' → logprob: -10.900036811828613
    8. ' map' → logprob: -10.900036811828613
    9. ' list' → logprob: -11.275036811828613
    10. '[int' → logprob: -11.400036811828613

Token 10: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037740739062428474
    2. '(stdin' → logprob: -5.628774166107178
    3. '()' → logprob: -9.87877368927002
    4. ' (' → logprob: -10.50377368927002
    5. '('' → logprob: -10.62877368927002
    6. '(input' → logprob: -10.75377368927002
    7. '```' → logprob: -11.87877368927002
    8. '(paren' → logprob: -12.25377368927002
    9. '("("' → logprob: -12.37877368927002
    10. '(st' → logprob: -12.50377368927002

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.014801021665334702
    2. '.read' → logprob: -4.264801025390625
    3. '.' → logprob: -7.389801025390625
    4. '.readlines' → logprob: -11.764801025390625
    5. ')' → logprob: -12.639801025390625
    6. '.Read' → logprob: -13.139801025390625
    7. 'read' → logprob: -13.639801025390625
    8. '.write' → logprob: -13.639801025390625
    9. '[' → logprob: -14.014801025390625
    10. '.peek' → logprob: -14.264801025390625

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10606369376182556
    2. '()' → logprob: -2.3560636043548584
    3. ')' → logprob: -5.3560638427734375
    4. '().' → logprob: -7.7310638427734375
    5. '(' → logprob: -7.9810638427734375
    6. '()))' → logprob: -9.106063842773438
    7. ' ())' → logprob: -9.356063842773438
    8. '('' → logprob: -9.731063842773438
    9. '()[' → logprob: -10.106063842773438
    10. '();)' → logprob: -12.481063842773438

Token 13: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0050559756346046925
    2. 'rstrip' → logprob: -5.505055904388428
    3. 'read' → logprob: -7.005055904388428
    4. ')' → logprob: -9.880056381225586
    5. 'split' → logprob: -11.505056381225586
    6. ' strip' → logprob: -11.880056381225586
    7. '_strip' → logprob: -14.630056381225586
    8. '-strip' → logprob: -14.630056381225586
    9. 'replace' → logprob: -15.255056381225586
    10. 'decode' → logprob: -15.880056381225586

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03929755464196205
    2. '))' → logprob: -3.789297580718994
    3. '())' → logprob: -4.164297580718994
    4. '()))' → logprob: -8.539297103881836
    5. '()' → logprob: -8.664297103881836
    6. '(' → logprob: -12.539297103881836
    7. '`)' → logprob: -12.664297103881836
    8. '')' → logprob: -13.039297103881836
    9. ')`' → logprob: -14.039297103881836
    10. ')))' → logprob: -14.164297103881836

Token 15: 'input' (ID: 2586)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.19918698072433472
    2. 'numbers' → logprob: -1.9491870403289795
    3. 'data' → logprob: -4.1991868019104
    4. 'array' → logprob: -4.6991868019104
    5. 'result' → logprob: -5.0741868019104
    6. 'arr' → logprob: -6.3241868019104
    7. ' elements' → logprob: -6.4491868019104
    8. 'my' → logprob: -6.4491868019104
    9. 'for' → logprob: -6.4491868019104
    10. 'list' → logprob: -7.6991868019104

Token 16: '_sequence' (ID: 55606)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.702840268611908
    2. '_' → logprob: -1.2028403282165527
    3. '()' → logprob: -2.5778403282165527
    4. '_list' → logprob: -3.3278403282165527
    5. '_lines' → logprob: -3.4528403282165527
    6. '_line' → logprob: -4.327840328216553
    7. '(' → logprob: -4.452840328216553
    8. '_values' → logprob: -4.952840328216553
    9. '_elements' → logprob: -5.327840328216553
    10. '_array' → logprob: -5.577840328216553

Token 17: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2382848560810089
    2. ' =' → logprob: -2.2382848262786865
    3. '=' → logprob: -3.3632848262786865
    4. '.append' → logprob: -3.4882848262786865
    5. '[' → logprob: -3.6132848262786865
    6. '[:]' → logprob: -4.988285064697266
    7. '.readline' → logprob: -6.488285064697266
    8. '()' → logprob: -7.363285064697266
    9. '[]' → logprob: -7.363285064697266
    10. '_' → logprob: -7.488285064697266

Token 18: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7675740718841553
    2. 'list' → logprob: -1.0175740718841553
    3. ' stdin' → logprob: -2.3925740718841553
    4. 'stdin' → logprob: -3.0175740718841553
    5. ' []' → logprob: -3.6425740718841553
    6. '[]' → logprob: -5.267574310302734
    7. ' [' → logprob: -6.767574310302734
    8. '(stdin' → logprob: -6.892574310302734
    9. '[' → logprob: -8.142574310302734
    10. '[int' → logprob: -9.642574310302734

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000769009639043361
    2. '[' → logprob: -8.000768661499023
    3. '(range' → logprob: -9.250768661499023
    4. '<|end|>' → logprob: -9.625768661499023
    5. '[int' → logprob: -9.750768661499023
    6. '[(' → logprob: -10.125768661499023
    7. '(input' → logprob: -10.375768661499023
    8. '(
' → logprob: -11.375768661499023
    9. '("("' → logprob: -11.375768661499023
    10. '(int' → logprob: -11.375768661499023

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024024726822972298
    2. '(' → logprob: -3.774024724960327
    3. '(str' → logprob: -7.899024963378906
    4. '(lambda' → logprob: -8.024024963378906
    5. 'int' → logprob: -9.899024963378906
    6. ' (' → logprob: -11.774024963378906
    7. '(
' → logprob: -12.774024963378906
    8. '(input' → logprob: -12.899024963378906
    9. '(float' → logprob: -13.024024963378906
    10. ' int' → logprob: -13.149024963378906

Token 21: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0013182159746065736
    2. '(' → logprob: -6.876317977905273
    3. '(std' → logprob: -8.626317977905273
    4. ',' → logprob: -10.126317977905273
    5. ')' → logprob: -10.626317977905273
    6. 'stdin' → logprob: -11.001317977905273
    7. ' (' → logprob: -12.376317977905273
    8. '(stdout' → logprob: -12.376317977905273
    9. '(st' → logprob: -12.501317977905273
    10. '(input' → logprob: -12.876317977905273

Token 22: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.00680536450818181
    2. ' stdin' → logprob: -5.006805419921875
    3. '(stdin' → logprob: -9.381805419921875
    4. 'stdout' → logprob: -12.756805419921875
    5. '.stdin' → logprob: -12.881805419921875
    6. 'std' → logprob: -16.131805419921875
    7. 'stderr' → logprob: -16.881805419921875
    8. ')' → logprob: -17.006805419921875
    9. 'stdlib' → logprob: -17.381805419921875
    10. 'stdio' → logprob: -17.506805419921875

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.923874702304602e-05
    2. '().' → logprob: -9.500089645385742
    3. '.' → logprob: -11.500089645385742
    4. '.read' → logprob: -13.125089645385742
    5. '.readlines' → logprob: -13.250089645385742
    6. ' .' → logprob: -14.875089645385742
    7. ').' → logprob: -16.250089645385742
    8. ' readline' → logprob: -17.750089645385742
    9. '.rstrip' → logprob: -19.000089645385742
    10. '.stdin' → logprob: -19.000089645385742

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.2729995988775045e-06
    2. ' ().' → logprob: -12.375006675720215
    3. '()' → logprob: -13.375006675720215
    4. '.readline' → logprob: -15.625006675720215
    5. '().'' → logprob: -16.7500057220459
    6. '(' → logprob: -17.0000057220459
    7. '.' → logprob: -17.2500057220459
    8. '.rstrip' → logprob: -17.3750057220459
    9. '.split' → logprob: -18.1250057220459
    10. ' .' → logprob: -18.2500057220459

Token 25: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0012453512754291296
    2. 'split' → logprob: -6.751245498657227
    3. 'strip' → logprob: -9.501245498657227
    4. 'rs' → logprob: -15.251245498657227
    5. '.rstrip' → logprob: -16.376245498657227
    6. 'rst' → logprob: -17.501245498657227
    7. ' split' → logprob: -19.751245498657227
    8. 'read' → logprob: -20.001245498657227
    9. 'rl' → logprob: -20.501245498657227
    10. '```' → logprob: -20.751245498657227

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.371605948312208e-05
    2. '()' → logprob: -10.875053405761719
    3. '()))' → logprob: -11.500053405761719
    4. '())' → logprob: -11.500053405761719
    5. ')' → logprob: -12.000053405761719
    6. '())))' → logprob: -12.375053405761719
    7. ')))' → logprob: -13.625053405761719
    8. ' ().' → logprob: -13.625053405761719
    9. '))' → logprob: -14.375053405761719
    10. '(' → logprob: -14.625053405761719

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.2994620242971e-06
    2. ' split' → logprob: -11.750008583068848
    3. 'rstrip' → logprob: -15.625008583068848
    4. 'strip' → logprob: -16.00000762939453
    5. '(split' → logprob: -16.50000762939453
    6. 'spl' → logprob: -17.25000762939453
    7. ')' → logprob: -18.25000762939453
    8. 's' → logprob: -18.50000762939453
    9. '.split' → logprob: -18.87500762939453
    10. 'plit' → logprob: -19.87500762939453

Token 28: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2398175150156021
    2. '())' → logprob: -1.739817500114441
    3. '))' → logprob: -3.9898176193237305
    4. '()' → logprob: -4.7398176193237305
    5. ')' → logprob: -5.3648176193237305
    6. '(' → logprob: -5.8648176193237305
    7. '())))' → logprob: -6.1148176193237305
    8. ')))' → logprob: -7.6148176193237305
    9. '('' → logprob: -8.98981761932373
    10. '()))
' → logprob: -10.36481761932373

Token 29: 'current' (ID: 5804)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4798256158828735
    2. 'max' → logprob: -1.7298256158828735
    3. 'dp' → logprob: -1.7298256158828735
    4. 'sorted' → logprob: -2.354825496673584
    5. 'count' → logprob: -2.479825496673584
    6. 'for' → logprob: -2.604825496673584
    7. 'total' → logprob: -3.729825496673584
    8. 's' → logprob: -4.104825496673584
    9. 'c' → logprob: -4.354825496673584
    10. 'sum' → logprob: -4.354825496673584

Token 30: '_expected' (ID: 79906)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007427607662975788
    2. '_value' → logprob: -6.00742769241333
    3. '_sum' → logprob: -6.25742769241333
    4. ' _' → logprob: -7.38242769241333
    5. '_number' → logprob: -7.50742769241333
    6. '_space' → logprob: -7.75742769241333
    7. '_index' → logprob: -8.132427215576172
    8. '_count' → logprob: -8.257427215576172
    9. '_sequence' → logprob: -8.382427215576172
    10. '_element' → logprob: -9.132427215576172

Token 31: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005083264317363501
    2. '_token' → logprob: -6.380083084106445
    3. '_value' → logprob: -6.630083084106445
    4. '_number' → logprob: -7.130083084106445
    5. '_space' → logprob: -7.505083084106445
    6. ' _' → logprob: -8.755083084106445
    7. '_equal' → logprob: -8.880083084106445
    8. '_val' → logprob: -9.755083084106445
    9. '_=' → logprob: -9.880083084106445
    10. '_num' → logprob: -10.255083084106445

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1432233303785324
    2. '=' → logprob: -2.143223285675049
    3. '_' → logprob: -4.143223285675049
    4. ' ' → logprob: -9.018223762512207
    5. ' _' → logprob: -9.643223762512207
    6. '_space' → logprob: -10.643223762512207
    7. '_=' → logprob: -10.643223762512207
    8. ' ==' → logprob: -11.143223762512207
    9. ' =)' → logprob: -12.143223762512207
    10. ')' → logprob: -12.268223762512207

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22671788930892944
    2. '0' → logprob: -1.8517179489135742
    3. ' ' → logprob: -3.601717948913574
    4. 'input' → logprob: -4.226717948913574
    5. 'number' → logprob: -5.726717948913574
    6. ' input' → logprob: -7.476717948913574
    7. ' number' → logprob: -8.726717948913574
    8. 'int' → logprob: -12.601717948913574
    9. '`' → logprob: -12.976717948913574
    10. '(input' → logprob: -13.101717948913574

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04181559011340141
    2. '0' → logprob: -3.6668155193328857
    3. 'input' → logprob: -4.291815757751465
    4. 'number' → logprob: -6.416815757751465
    5. 'min' → logprob: -10.541815757751465
    6. ' ' → logprob: -11.416815757751465
    7. 'max' → logprob: -12.041815757751465
    8. '2' → logprob: -12.166815757751465
    9. '-' → logprob: -12.166815757751465
    10. 'int' → logprob: -12.166815757751465

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0340849906206131
    2. '<|end|>' → logprob: -3.7840850353240967
    3. 'for' → logprob: -5.659084796905518
    4. ' for' → logprob: -6.034084796905518
    5. ' 
' → logprob: -6.159084796905518
    6. '\n' → logprob: -6.909084796905518
    7. '' → logprob: -7.909084796905518
    8. '
' → logprob: -7.909084796905518
    9. ' ' → logprob: -8.409085273742676
    10. '<|end|>' → logprob: -8.659085273742676

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04012887179851532
    2. '
' → logprob: -3.2901289463043213
    3. ' for' → logprob: -6.415128707885742
    4. '\n' → logprob: -8.415128707885742
    5. 'if' → logprob: -8.540128707885742
    6. '' → logprob: -11.790128707885742
    7. ' 
' → logprob: -11.915128707885742
    8. 'while' → logprob: -12.040128707885742
    9. '
' → logprob: -13.040128707885742
    10. '	for' → logprob: -13.540128707885742

Token 37: ' element' (ID: 3577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7348488569259644
    2. ' i' → logprob: -0.9848488569259644
    3. ' element' → logprob: -2.484848976135254
    4. ' number' → logprob: -2.984848976135254
    5. ' value' → logprob: -5.109848976135254
    6. ' item' → logprob: -5.984848976135254
    7. ' _' → logprob: -6.109848976135254
    8. ' current' → logprob: -7.484848976135254
    9. '  ' → logprob: -7.859848976135254
    10. ' num' → logprob: -8.234848976135254

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014472571201622486
    2. 'in' → logprob: -4.264472484588623
    3. ' ' → logprob: -8.264472961425781
    4. '<|end|>' → logprob: -11.514472961425781
    5. ' ,' → logprob: -11.764472961425781
    6. '  ' → logprob: -11.889472961425781
    7. ',' → logprob: -12.389472961425781
    8. 's' → logprob: -12.889472961425781
    9. ' :' → logprob: -12.889472961425781
    10. '	in' → logprob: -13.014472961425781

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03804263845086098
    2. 'input' → logprob: -3.2880425453186035
    3. ' ' → logprob: -13.913043022155762
    4. '	input' → logprob: -16.413042068481445
    5. '(input' → logprob: -16.913042068481445
    6. '_input' → logprob: -16.913042068481445
    7. '<input' → logprob: -17.413042068481445
    8. ' ' → logprob: -17.663042068481445
    9. ' range' → logprob: -17.788042068481445
    10. '  ' → logprob: -17.913042068481445

Token 40: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0002278542669955641
    2. '_' → logprob: -8.500227928161621
    3. 'sequence' → logprob: -11.625227928161621
    4. '_sequences' → logprob: -12.375227928161621
    5. ' _' → logprob: -12.875227928161621
    6. 'Sequence' → logprob: -13.125227928161621
    7. '_s' → logprob: -13.375227928161621
    8. '_seq' → logprob: -14.250227928161621
    9. '_SEQUENCE' → logprob: -14.250227928161621
    10. ' sequence' → logprob: -14.375227928161621

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004062434600200504
    2. ':
' → logprob: -8.000406265258789
    3. '   ' → logprob: -9.750406265258789
    4. ' :' → logprob: -11.875406265258789
    5. ':**' → logprob: -13.625406265258789
    6. '=' → logprob: -14.250406265258789
    7. '):' → logprob: -14.250406265258789
    8. ',' → logprob: -14.375406265258789
    9. ''s' → logprob: -14.875406265258789
    10. ' if' → logprob: -15.125406265258789

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10868719220161438
    2. ':' → logprob: -2.358687162399292
    3. ' if' → logprob: -6.233687400817871
    4. ' ' → logprob: -6.358687400817871
    5. '```' → logprob: -7.233687400817871
    6. ':
' → logprob: -7.358687400817871
    7. ''s' → logprob: -7.358687400817871
    8. '    ' → logprob: -7.483687400817871
    9. '    
' → logprob: -7.483687400817871
    10. ' :' → logprob: -7.608687400817871

Token 43: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7303766012191772
    2. ' if' → logprob: -1.4803766012191772
    3. '    ' → logprob: -1.7303766012191772
    4. '   ' → logprob: -2.355376720428467
    5. '```' → logprob: -5.230376720428467
    6. '<|end|>' → logprob: -5.480376720428467
    7. 'if' (adapté à ' if') → logprob: -5.855376720428467
    8. ' 
' → logprob: -5.980376720428467
    9. ' ```' → logprob: -6.605376720428467
    10. '     
' → logprob: -6.980376720428467

Token 44: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.006662796251475811
    2. 'element' → logprob: -5.131662845611572
    3. ' current' → logprob: -7.631662845611572
    4. ' ' → logprob: -8.506662368774414
    5. ' ' → logprob: -10.881662368774414
    6. '	element' → logprob: -11.131662368774414
    7. 'current' → logprob: -12.381662368774414
    8. ' space' → logprob: -12.756662368774414
    9. '(element' → logprob: -13.381662368774414
    10. ' not' → logprob: -14.381662368774414

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03412440046668053
    2. '==' → logprob: -3.4091243743896484
    3. ' >' → logprob: -7.909124374389648
    4. '>' → logprob: -9.534124374389648
    5. ' >=' → logprob: -11.409124374389648
    6. ' !=' → logprob: -11.659124374389648
    7. ' <=' → logprob: -11.909124374389648
    8. '   ' → logprob: -12.409124374389648
    9. ' ' → logprob: -12.659124374389648
    10. '>=' → logprob: -13.909124374389648

Token 46: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.02977270446717739
    2. 'current' → logprob: -3.5297727584838867
    3. ' ' → logprob: -11.029772758483887
    4. '0' → logprob: -12.404772758483887
    5. '(current' → logprob: -14.904772758483887
    6. '	current' → logprob: -15.154772758483887
    7. 'urrent' → logprob: -15.279772758483887
    8. '=current' → logprob: -15.279772758483887
    9. '$current' → logprob: -16.02977180480957
    10. '   ' → logprob: -16.02977180480957

Token 47: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.000003814697266
    3. ' _' → logprob: -15.250003814697266
    4. '_requested' → logprob: -16.125003814697266
    5. '_current' → logprob: -16.375003814697266
    6. '_required' → logprob: -16.500003814697266
    7. 'Expected' → logprob: -16.625003814697266
    8. '_possible' → logprob: -16.625003814697266
    9. '_expect' → logprob: -16.750003814697266
    10. '_pred' → logprob: -16.875003814697266

Token 48: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001454955490771681
    2. '_' → logprob: -9.12514591217041
    3. ' _' → logprob: -10.37514591217041
    4. '_val' → logprob: -12.87514591217041
    5. '_number' → logprob: -13.75014591217041
    6. ' ' → logprob: -14.12514591217041
    7. 'value' → logprob: -15.50014591217041
    8. '_values' → logprob: -15.62514591217041
    9. '_token' → logprob: -16.125144958496094
    10. ' value' → logprob: -16.250144958496094

Token 49: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00657753087580204
    2. ':
' → logprob: -5.131577491760254
    3. '   ' → logprob: -7.631577491760254
    4. ' :' → logprob: -9.506577491760254
    5. '       ' → logprob: -10.506577491760254
    6. '+' → logprob: -10.506577491760254
    7. '    ' → logprob: -11.631577491760254
    8. '):' → logprob: -11.881577491760254
    9. ' :
' → logprob: -12.506577491760254
    10. ',' → logprob: -13.131577491760254

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028060602489858866
    2. ' ' → logprob: -5.877806186676025
    3. '   ' → logprob: -14.127805709838867
    4. '<|end|>' → logprob: -15.752805709838867
    5. '  ' → logprob: -16.002805709838867
    6. '0' → logprob: -16.252805709838867
    7. ' ' → logprob: -16.877805709838867
    8. '+' → logprob: -17.127805709838867
    9. '```' → logprob: -17.627805709838867
    10. '`' → logprob: -17.877805709838867

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.750046730041504
    4. '<|end|>' → logprob: -15.500046730041504
    5. '  ' → logprob: -16.375045776367188
    6. '0' → logprob: -16.625045776367188
    7. '2' → logprob: -16.750045776367188
    8. '7' → logprob: -17.500045776367188
    9. '+' → logprob: -17.500045776367188
    10. '<|end|>' → logprob: -18.125045776367188

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006145407445728779
    2. ':
' → logprob: -5.631145477294922
    3. ' or' → logprob: -7.006145477294922
    4. ' and' → logprob: -7.131145477294922
    5. '   ' → logprob: -7.881145477294922
    6. '       ' → logprob: -8.131145477294922
    7. '<|end|>' → logprob: -10.006145477294922
    8. 'and' → logprob: -10.506145477294922
    9. ' :' → logprob: -10.506145477294922
    10. ',' → logprob: -11.006145477294922

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07049839943647385
    2. '   ' → logprob: -3.445498466491699
    3. ':' → logprob: -4.070498466491699
    4. 'current' → logprob: -4.820498466491699
    5. ' current' → logprob: -4.945498466491699
    6. ':
' → logprob: -6.945498466491699
    7. '    
' → logprob: -7.695498466491699
    8. '<|end|>' → logprob: -7.820498466491699
    9. '        
' → logprob: -8.1954984664917
    10. '    ' → logprob: -8.4454984664917

Token 54: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4882645010948181
    2. 'current' (adapté à ' current') → logprob: -0.9882645010948181
    3. ' 
' → logprob: -5.238264560699463
    4. '
' → logprob: -5.738264560699463
    5. '   ' → logprob: -5.988264560699463
    6. '    
' → logprob: -6.613264560699463
    7. '	current' → logprob: -7.488264560699463
    8. '_current' → logprob: -7.863264560699463
    9. '    ' → logprob: -9.113264083862305
    10. ' ' → logprob: -9.238264083862305

Token 55: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -1.27099974633893e-05
    2. '_' → logprob: -12.000012397766113
    3. 'Expected' → logprob: -13.375012397766113
    4. ' _' → logprob: -13.375012397766113
    5. '```' → logprob: -14.125012397766113
    6. '_current' → logprob: -14.250012397766113
    7. '_expect' → logprob: -15.500012397766113
    8. '_possible' → logprob: -15.500012397766113
    9. '_s' → logprob: -15.625012397766113
    10. 'expected' → logprob: -15.875012397766113

Token 56: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00020795092859771103
    2. 'value' → logprob: -8.500207901000977
    3. '_' → logprob: -13.500207901000977
    4. 'valu' → logprob: -13.500207901000977
    5. 'Value' → logprob: -14.750207901000977
    6. '_val' → logprob: -14.875207901000977
    7. '_VALUE' → logprob: -15.125207901000977
    8. '```' → logprob: -15.625207901000977
    9. 'alue' → logprob: -16.375207901000977
    10. '_values' → logprob: -16.500207901000977

Token 57: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07503087818622589
    2. ' =' → logprob: -2.95003080368042
    3. '+=' → logprob: -4.07503080368042
    4. '=' → logprob: -5.82503080368042
    5. ' ' → logprob: -13.700031280517578
    6. '+' → logprob: -13.950031280517578
    7. ' ' → logprob: -16.200031280517578
    8. ' +' → logprob: -16.325031280517578
    9. ' -=' → logprob: -16.450031280517578
    10. ' |=' → logprob: -16.575031280517578

Token 58: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.10022705048322678
    2. ' element' → logprob: -2.350227117538452
    3. 'current' → logprob: -11.350227355957031
    4. '	element' → logprob: -12.725227355957031
    5. ' current' → logprob: -12.975227355957031
    6. '0' → logprob: -13.725227355957031
    7. '1' → logprob: -13.850227355957031
    8. '(element' → logprob: -15.350227355957031
    9. ' ' → logprob: -15.725227355957031
    10. '[element' → logprob: -15.850227355957031

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.012974569573998451
    2. 'current' → logprob: -4.387974739074707
    3. ' ' → logprob: -7.762974739074707
    4. '_' → logprob: -10.637974739074707
    5. ' ' → logprob: -12.137974739074707
    6. ' _' → logprob: -12.637974739074707
    7. ' number' → logprob: -13.137974739074707
    8. '_current' → logprob: -13.262974739074707
    9. '(current' → logprob: -13.637974739074707
    10. '  ' → logprob: -14.887974739074707

Token 62: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -6.869017852295656e-06
    2. 'expected' → logprob: -13.250006675720215
    3. '_' → logprob: -13.375006675720215
    4. 'Expected' → logprob: -14.250006675720215
    5. '_expect' → logprob: -14.750006675720215
    6. '_current' → logprob: -14.875006675720215
    7. '_requested' → logprob: -15.750006675720215
    8. ' _' → logprob: -15.875006675720215
    9. '_required' → logprob: -15.875006675720215
    10. 'EXPECTED' → logprob: -15.875006675720215

Token 63: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0033028353936970234
    2. '_expected' → logprob: -5.753303050994873
    3. '_' → logprob: -9.503302574157715
    4. '_val' → logprob: -10.128302574157715
    5. '_values' → logprob: -12.378302574157715
    6. 'value' → logprob: -13.378302574157715
    7. 'valu' → logprob: -14.503302574157715
    8. '```' → logprob: -14.628302574157715
    9. 'ed' → logprob: -14.753302574157715
    10. '_output' → logprob: -14.753302574157715

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24594658613204956
    2. '+' → logprob: -1.8709466457366943
    3. ' +' → logprob: -3.1209466457366943
    4. '==' → logprob: -4.120946407318115
    5. ' <' → logprob: -5.745946407318115
    6. ' ' → logprob: -8.620946884155273
    7. ':' → logprob: -8.995946884155273
    8. ' !=' → logprob: -9.745946884155273
    9. ' :' → logprob: -10.620946884155273
    10. ' +=' → logprob: -10.620946884155273

Token 65: ' ' (ID: 220)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4745064079761505
    2. ' number' → logprob: -0.9745063781738281
    3. ' len' → logprob: -8.724506378173828
    4. 'len' → logprob: -8.974506378173828
    5. ' ' → logprob: -9.224506378173828
    6. ' max' → logprob: -10.849506378173828
    7. 'max' → logprob: -11.724506378173828
    8. '  ' → logprob: -12.224506378173828
    9. '0' → logprob: -12.599506378173828
    10. '   ' → logprob: -13.224506378173828

Token 66: '0' (ID: 15)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.011468524113297462
    2. ' number' → logprob: -4.511468410491943
    3. 'len' → logprob: -7.886468410491943
    4. ' len' → logprob: -11.261468887329102
    5. 'max' → logprob: -11.636468887329102
    6. ' ' → logprob: -11.636468887329102
    7. '0' → logprob: -11.761468887329102
    8. 'num' → logprob: -13.511468887329102
    9. '  ' → logprob: -14.136468887329102
    10. ' max' → logprob: -14.386468887329102

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.874882430769503e-05
    2. ':
' → logprob: -9.500079154968262
    3. ':return' → logprob: -13.000079154968262
    4. ' :' → logprob: -13.750079154968262
    5. '.' → logprob: -16.500078201293945
    6. ' or' → logprob: -16.625078201293945
    7. ' and' → logprob: -16.750078201293945
    8. ':
' → logprob: -17.125078201293945
    9. ':**' → logprob: -17.125078201293945
    10. ':def' → logprob: -17.250078201293945

Token 68: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24563397467136383
    2. '   ' → logprob: -1.9956339597702026
    3. '\n' → logprob: -3.245634078979492
    4. ' print' → logprob: -3.495634078979492
    5. '
' → logprob: -5.620634078979492
    6. '    
' → logprob: -5.620634078979492
    7. ':
' → logprob: -6.620634078979492
    8. ':' → logprob: -6.745634078979492
    9. '\' → logprob: -6.995634078979492
    10. ' 
' → logprob: -7.870634078979492

Token 69: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13121864199638367
    2. ' print' → logprob: -2.256218671798706
    3. '   ' → logprob: -4.631218433380127
    4. '\n' → logprob: -5.631218433380127
    5. '    
' → logprob: -6.131218433380127
    6. '
' → logprob: -6.756218433380127
    7. ' 
' → logprob: -7.631218433380127
    8. '    ' → logprob: -7.881218433380127
    9. '\' → logprob: -8.381218910217285
    10. '     
' → logprob: -8.631218910217285

Token 70: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4390193521976471
    2. '(' → logprob: -1.0640193223953247
    3. '("' → logprob: -5.189019203186035
    4. '("-' → logprob: -6.189019203186035
    5. '-' → logprob: -6.814019203186035
    6. '0' → logprob: -7.189019203186035
    7. '()' → logprob: -8.189019203186035
    8. '('' → logprob: -8.564019203186035
    9. '(number' → logprob: -8.814019203186035
    10. '(current' → logprob: -10.689019203186035

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -12.750008583068848
    3. 'current' → logprob: -13.125008583068848
    4. 'number' → logprob: -13.250008583068848
    5. '0' → logprob: -13.875008583068848
    6. '2' → logprob: -15.000008583068848
    7. '-' → logprob: -15.125008583068848
    8. '(-' → logprob: -16.125009536743164
    9. ')' → logprob: -16.250009536743164
    10. ' -' → logprob: -16.875009536743164

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004988207365386188
    2. ')
' → logprob: -7.6254987716674805
    3. 'else' → logprob: -11.50049877166748
    4. ')

' → logprob: -15.50049877166748
    5. ' )' → logprob: -15.75049877166748
    6. ')
' → logprob: -16.125499725341797
    7. '))' → logprob: -16.875499725341797
    8. ' else' → logprob: -16.875499725341797
    9. '   ' → logprob: -17.500499725341797
    10. ')`' → logprob: -17.500499725341797

Token 73: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003663968062028289
    2. ' else' → logprob: -5.628664016723633
    3. 'elif' → logprob: -9.878664016723633
    4. '```' → logprob: -12.128664016723633
    5. '<|end|>' → logprob: -13.003664016723633
    6. ')' → logprob: -13.628664016723633
    7. '
' → logprob: -13.628664016723633
    8. '#else' → logprob: -14.628664016723633
    9. '_else' → logprob: -14.753664016723633
    10. 'elser' → logprob: -15.128664016723633

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10029023140668869
    2. ':
' → logprob: -2.350290298461914
    3. '   ' → logprob: -9.475290298461914
    4. ':
' → logprob: -12.975290298461914
    5. 'print' → logprob: -13.600290298461914
    6. ':

' → logprob: -14.100290298461914
    7. ' :
' → logprob: -14.100290298461914
    8. ' :' → logprob: -14.350290298461914
    9. '```' → logprob: -14.725290298461914
    10. ' print' → logprob: -14.975290298461914

Token 75: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29116296768188477
    2. ' print' → logprob: -1.9161629676818848
    3. '   ' → logprob: -2.2911629676818848
    4. ' current' → logprob: -6.541162967681885
    5. '\n' → logprob: -7.291162967681885
    6. '```' → logprob: -7.541162967681885
    7. '    
' → logprob: -7.916162967681885
    8. 'current' → logprob: -8.041162490844727
    9. '
' → logprob: -8.041162490844727
    10. ' 
' → logprob: -8.916162490844727

Token 76: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018169960007071495
    2. ' print' → logprob: -4.01816987991333
    3. '   ' → logprob: -10.893170356750488
    4. '```' → logprob: -14.268170356750488
    5. 'current' → logprob: -15.393170356750488
    6. ' current' → logprob: -15.518170356750488
    7. '.print' → logprob: -16.393169403076172
    8. 'pr' → logprob: -16.768169403076172
    9. '	print' → logprob: -16.893169403076172
    10. ' ' → logprob: -17.268169403076172

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4958769381046295
    2. '=' → logprob: -0.9958769083023071
    3. 'print' → logprob: -5.620876789093018
    4. '   ' → logprob: -5.620876789093018
    5. '()' → logprob: -5.870876789093018
    6. ')' → logprob: -5.870876789093018
    7. '(' → logprob: -6.120876789093018
    8. ',' → logprob: -6.495876789093018
    9. '.' → logprob: -7.120876789093018
    10. '.append' → logprob: -7.120876789093018

Token 78: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.440962553024292
    2. ' current' → logprob: -1.440962553024292
    3. 'number' → logprob: -3.190962553024292
    4. '[current' → logprob: -3.440962553024292
    5. '[number' → logprob: -4.565962791442871
    6. ' number' → logprob: -4.940962791442871
    7. '[' → logprob: -5.065962791442871
    8. ' [' → logprob: -5.190962791442871
    9. 'len' → logprob: -5.565962791442871
    10. '[len' → logprob: -5.565962791442871

Token 79: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.25001049041748
    3. 'of' → logprob: -13.50001049041748
    4. ' _' → logprob: -13.62501049041748
    5. '_o' → logprob: -14.12501049041748
    6. '_for' → logprob: -14.50001049041748
    7. '```' → logprob: -15.25001049041748
    8. '_elements' → logprob: -15.37501049041748
    9. '\' → logprob: -15.75001049041748
    10. 's' → logprob: -16.000009536743164

Token 80: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.02324850670993328
    2. 'elements' → logprob: -3.7732484340667725
    3. '_ELEMENTS' → logprob: -13.898248672485352
    4. 'Elements' → logprob: -14.148248672485352
    5. '```' → logprob: -14.773248672485352
    6. 'element' → logprob: -15.148248672485352
    7. ' elements' → logprob: -15.523248672485352
    8. '_tokens' → logprob: -16.52324867248535
    9. 'current' → logprob: -16.64824867248535
    10. '...' → logprob: -17.02324867248535

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2993030250072479
    2. '-' → logprob: -1.4243030548095703
    3. '-current' → logprob: -4.17430305480957
    4. ' ' → logprob: -6.92430305480957
    5. '   ' → logprob: -7.17430305480957
    6. '
' → logprob: -8.79930305480957
    7. '-
' → logprob: -8.79930305480957
    8. 'current' → logprob: -9.04930305480957
    9. '+' → logprob: -9.67430305480957
    10. '    ' → logprob: -9.79930305480957

Token 82: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.003180563682690263
    2. ' current' → logprob: -5.753180503845215
    3. 'result' → logprob: -13.378180503845215
    4. '(current' → logprob: -13.753180503845215
    5. 'number' → logprob: -16.12818145751953
    6. ' ' → logprob: -17.62818145751953
    7. 'urrent' → logprob: -17.75318145751953
    8. 'input' → logprob: -18.00318145751953
    9. '   ' → logprob: -18.12818145751953
    10. '$current' → logprob: -18.37818145751953

Token 83: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -7.941850526549388e-06
    2. 'expected' → logprob: -12.125007629394531
    3. '_expect' → logprob: -14.000007629394531
    4. 'Expected' → logprob: -14.000007629394531
    5. '_current' → logprob: -15.125007629394531
    6. '_' → logprob: -15.750007629394531
    7. '_value' → logprob: -16.50000762939453
    8. '_EXPECT' → logprob: -16.62500762939453
    9. 'EXPECTED' → logprob: -17.25000762939453
    10. '_valid' → logprob: -17.62500762939453

Token 84: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0069776177406311035
    2. 'value' → logprob: -5.006977558135986
    3. 'ed' → logprob: -8.506978034973145
    4. 'valu' → logprob: -10.381978034973145
    5. 'expected' → logprob: -11.631978034973145
    6. '_expected' → logprob: -12.006978034973145
    7. 'val' → logprob: -13.006978034973145
    8. '_values' → logprob: -13.131978034973145
    9. 'al' → logprob: -13.131978034973145
    10. 'pected' → logprob: -13.756978034973145

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012114014476537704
    2. 'print' → logprob: -4.51211404800415
    3. '
' → logprob: -6.88711404800415
    4. '    
' → logprob: -10.512113571166992
    5. ' print' → logprob: -11.387113571166992
    6. '```' → logprob: -12.762113571166992
    7. '
' → logprob: -13.762113571166992
    8. '  
' → logprob: -14.637113571166992
    9. '	print' → logprob: -14.762113571166992
    10. '' → logprob: -15.012113571166992

Token 86: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6239568591117859
    2. '
' → logprob: -0.8739568591117859
    3. '   ' → logprob: -3.1239569187164307
    4. ' print' → logprob: -6.248956680297852
    5. '    
' → logprob: -8.248956680297852
    6. '```' → logprob: -8.623956680297852
    7. ')
' → logprob: -8.873956680297852
    8. '  
' → logprob: -9.498956680297852
    9. '.print' → logprob: -9.748956680297852
    10. ' 
' → logprob: -9.873956680297852

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.1888679839321412e-05
    2. '   ' → logprob: -11.375021934509277
    3. ' print' → logprob: -11.500021934509277
    4. '```' → logprob: -15.875021934509277
    5. '
' → logprob: -16.87502098083496
    6. '.print' → logprob: -18.00002098083496
    7. '	print' → logprob: -18.12502098083496
    8. '(print' → logprob: -18.87502098083496
    9. '    
' → logprob: -19.00002098083496
    10. '``' → logprob: -19.75002098083496

Token 88: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.31326544284820557
    2. '(' → logprob: -1.3132654428482056
    3. 'result' → logprob: -13.438265800476074
    4. '(current' → logprob: -14.188265800476074
    5. '(res' → logprob: -14.438265800476074
    6. '('' → logprob: -14.813265800476074
    7. '(
' → logprob: -15.938265800476074
    8. '()' → logprob: -16.188264846801758
    9. ' (' → logprob: -16.188264846801758
    10. '(results' → logprob: -16.313264846801758

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -16.375
    5. ')`' → logprob: -17.875
    6. '`)' → logprob: -18.0
    7. ')#' → logprob: -19.125
    8. '')' → logprob: -19.375
    9. '）' → logprob: -19.375
    10. ')))' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 47.13%
Précision adaptée (1ère position): 49.43%
Précision (top 10): 80.46%
================================================================================
