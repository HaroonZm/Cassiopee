================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def LcmGenius(A, B):
    L = [A*i for i in range(1, B+1)] + [B*i for i in range(1, A+1)]
    for candidate in sorted(L):
        if candidate % A == 0 and candidate % B == 0:
            return candidate
Q, W = (int(e[::-1][::-1]) for e in input().split())
ans = LcmGenius(Q, W)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' L' (ID: 451)
  → Token d'amorce (pas de prédiction)

Token 2: 'cm' (ID: 7871)
  → Token d'amorce (pas de prédiction)

Token 3: 'G' (ID: 38)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027432903880253434
    2. '```' → logprob: -8.500274658203125
    3. ' (' → logprob: -10.500274658203125
    4. '_' → logprob: -11.750274658203125
    5. '(a' → logprob: -11.875274658203125
    6. '(
' → logprob: -12.625274658203125
    7. '(L' → logprob: -12.750274658203125
    8. '\(' → logprob: -13.250274658203125
    9. 'a' → logprob: -13.375274658203125
    10. '(x' → logprob: -13.500274658203125

Token 4: 'enius' (ID: 84002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7596110105514526
    2. '():' → logprob: -0.8846110105514526
    3. 'CD' → logprob: -3.884611129760742
    4. ':' → logprob: -4.259611129760742
    5. '```' → logprob: -4.259611129760742
    6. 'cd' → logprob: -4.509611129760742
    7. 'd' → logprob: -4.759611129760742
    8. 'u' → logprob: -5.134611129760742
    9. ' ():' → logprob: -5.134611129760742
    10. '(a' → logprob: -5.259611129760742

Token 5: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015431294741574675
    2. '(:' → logprob: -10.375154495239258
    3. '```' → logprob: -10.375154495239258
    4. ':' → logprob: -10.625154495239258
    5. ' (' → logprob: -10.875154495239258
    6. '():' → logprob: -11.250154495239258
    7. '_' → logprob: -11.625154495239258
    8. '(
' → logprob: -12.125154495239258
    9. '<|end|>' → logprob: -12.625154495239258
    10. '[' → logprob: -12.875154495239258

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016743605956435204
    2. '):' → logprob: -4.3917436599731445
    3. ')' → logprob: -5.7667436599731445
    4. '[' → logprob: -7.7667436599731445
    5. ',b' → logprob: -9.016743659973145
    6. ',a' → logprob: -9.141743659973145
    7. ',n' → logprob: -9.641743659973145
    8. ' ,' → logprob: -9.766743659973145
    9. ',i' → logprob: -10.141743659973145
    10. ',A' → logprob: -10.266743659973145

Token 7: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3505657911300659
    2. 'B' → logprob: -1.225565791130066
    3. ',' → logprob: -6.8505659103393555
    4. ' ,' → logprob: -7.7255659103393555
    5. ' ' → logprob: -7.8505659103393555
    6. ')' → logprob: -9.725565910339355
    7. ',B' → logprob: -9.850565910339355
    8. ' ' → logprob: -10.725565910339355
    9. 'b' → logprob: -11.225565910339355
    10. ' )' → logprob: -11.225565910339355

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025238079950213432
    2. ')' → logprob: -3.775238037109375
    3. ':' → logprob: -6.400238037109375
    4. '):
' → logprob: -8.275238037109375
    5. ''):' → logprob: -11.275238037109375
    6. '```' → logprob: -11.275238037109375
    7. '**' → logprob: -11.650238037109375
    8. ',' → logprob: -11.650238037109375
    9. '*' → logprob: -12.025238037109375
    10. ')：' → logprob: -13.150238037109375

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023927422240376472
    2. '   ' → logprob: -4.023927211761475
    3. ':
' → logprob: -5.523927211761475
    4. '```' → logprob: -6.648927211761475
    5. '    
' → logprob: -9.148927688598633
    6. ' 
' → logprob: -10.023927688598633
    7. '  
' → logprob: -10.148927688598633
    8. ' ' → logprob: -10.273927688598633
    9. ':\' → logprob: -10.523927688598633
    10. '\' → logprob: -10.898927688598633

Token 10: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22582177817821503
    2. ' ' → logprob: -2.1008217334747314
    3. '    ' → logprob: -4.4758219718933105
    4. ''' → logprob: -4.4758219718933105
    5. ' 
' → logprob: -4.6008219718933105
    6. '```' → logprob: -4.7258219718933105
    7. 'i' → logprob: -5.2258219718933105
    8. '\t' → logprob: -5.4758219718933105
    9. '"' → logprob: -5.6008219718933105
    10. '    
' → logprob: -5.7258219718933105

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4694947600364685
    2. 'C' → logprob: -1.5944948196411133
    3. '=' → logprob: -2.2194948196411133
    4. 'CM' → logprob: -3.5944948196411133
    5. 'cm' → logprob: -4.219494819641113
    6. ',' → logprob: -4.844494819641113
    7. '   ' → logprob: -5.969494819641113
    8. 'e' → logprob: -6.344494819641113
    9. 'c' → logprob: -6.844494819641113
    10. '=[]' → logprob: -6.969494819641113

Token 12: ' [' (ID: 723)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08186745643615723
    2. 'A' → logprob: -2.5818674564361572
    3. ' ' → logprob: -6.331867218017578
    4. '1' → logprob: -7.581867218017578
    5. ' max' → logprob: -7.581867218017578
    6. ' abs' → logprob: -10.206867218017578
    7. '0' → logprob: -10.456867218017578
    8. ' []' → logprob: -10.581867218017578
    9. '(A' → logprob: -11.081867218017578
    10. 'max' → logprob: -11.081867218017578

Token 13: 'A' (ID: 32)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5499369502067566
    2. '1' → logprob: -2.0499370098114014
    3. 'A' → logprob: -2.0499370098114014
    4. 'i' → logprob: -2.9249370098114014
    5. 'max' → logprob: -3.7999370098114014
    6. ' A' → logprob: -4.049936771392822
    7. 'min' → logprob: -4.174936771392822
    8. 'a' → logprob: -4.174936771392822
    9. ']' → logprob: -4.174936771392822
    10. ' max' → logprob: -5.049936771392822

Token 14: '*i' (ID: 51147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015671348199248314
    2. ' ,' → logprob: -4.515671253204346
    3. '   ' → logprob: -6.390671253204346
    4. ']' → logprob: -6.640671253204346
    5. '*' → logprob: -7.390671253204346
    6. ' *' → logprob: -8.265671730041504
    7. ',
' → logprob: -8.765671730041504
    8. ')' → logprob: -9.015671730041504
    9. ' ' → logprob: -9.265671730041504
    10. ' ]' → logprob: -9.515671730041504

Token 15: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0042276280000805855
    2. 'for' → logprob: -5.629227638244629
    3. ' ' → logprob: -7.379227638244629
    4. '	for' → logprob: -13.254227638244629
    5. '  ' → logprob: -14.504227638244629
    6. ',' → logprob: -15.004227638244629
    7. ']' → logprob: -15.254227638244629
    8. '1' → logprob: -15.879227638244629
    9. '   ' → logprob: -15.879227638244629
    10. '    ' → logprob: -16.504226684570312

Token 16: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001875086221843958
    2. ' ' → logprob: -6.501874923706055
    3. ' i' → logprob: -8.251874923706055
    4. 'range' → logprob: -9.626874923706055
    5. '  ' → logprob: -10.626874923706055
    6. '	range' → logprob: -11.001874923706055
    7. ' xrange' → logprob: -13.501874923706055
    8. ' B' → logprob: -14.126874923706055
    9. '   ' → logprob: -14.501874923706055
    10. ' ' → logprob: -14.876874923706055

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00275197671726346
    2. ' ' → logprob: -6.62775182723999
    3. 'in' → logprob: -7.25275182723999
    4. '<|end|>' → logprob: -7.37775182723999
    5. ' range' → logprob: -9.752752304077148
    6. 'range' → logprob: -11.127752304077148
    7. '<|end|>' → logprob: -11.627752304077148
    8. ' ' → logprob: -13.752752304077148
    9. '	in' → logprob: -14.002752304077148
    10. ' ,' → logprob: -14.377752304077148

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003178306156769395
    2. 'range' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.253178596496582
    4. '	range' → logprob: -15.378178596496582
    5. ' xrange' → logprob: -16.503177642822266
    6. '(range' → logprob: -16.628177642822266
    7. 'Range' → logprob: -17.253177642822266
    8. '[' → logprob: -18.003177642822266
    9. '_range' → logprob: -19.128177642822266
    10. '.range' → logprob: -19.628177642822266

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -11.50001049041748
    3. '1' → logprob: -14.50001049041748
    4. '(
' → logprob: -15.75001049041748
    5. '(len' → logprob: -18.750011444091797
    6. '2' → logprob: -18.750011444091797
    7. '<|end|>' → logprob: -18.875011444091797
    8. ' ' → logprob: -19.750011444091797
    9. '(

' → logprob: -20.250011444091797
    10. '[' → logprob: -20.875011444091797

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04421798884868622
    2. ' ' → logprob: -3.169218063354492
    3. '2' → logprob: -7.419218063354492
    4. '0' → logprob: -8.044218063354492
    5. ' B' → logprob: -8.419218063354492
    6. 'B' → logprob: -9.544218063354492
    7. '(' → logprob: -13.294218063354492
    8. '10' → logprob: -13.669218063354492
    9. '20' → logprob: -14.919218063354492
    10. '16' → logprob: -14.919218063354492

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009902465157210827
    2. ' ,' → logprob: -4.634902477264404
    3. ',B' → logprob: -9.009902000427246
    4. '(' → logprob: -12.134902000427246
    5. ',len' → logprob: -12.134902000427246
    6. '1' → logprob: -12.759902000427246
    7. ' ' → logprob: -13.134902000427246
    8. ',A' → logprob: -13.509902000427246
    9. ',int' → logprob: -13.509902000427246
    10. 'B' → logprob: -13.634902000427246

Token 22: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2519512474536896
    2. 'B' → logprob: -1.5019512176513672
    3. ' max' → logprob: -11.126951217651367
    4. ' min' → logprob: -13.126951217651367
    5. '(B' → logprob: -13.251951217651367
    6. ' (' → logprob: -13.751951217651367
    7. 'max' → logprob: -13.876951217651367
    8. ' ' → logprob: -14.751951217651367
    9. '(' → logprob: -14.876951217651367
    10. 'min' → logprob: -15.251951217651367

Token 23: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25195029377937317
    2. ' +' → logprob: -1.5019502639770508
    3. '+B' → logprob: -11.37695026397705
    4. ')]' → logprob: -11.75195026397705
    5. ')])' → logprob: -14.50195026397705
    6. ' ' → logprob: -14.50195026397705
    7. ')' → logprob: -15.12695026397705
    8. '+b' → logprob: -16.501951217651367
    9. ' )' → logprob: -16.626951217651367
    10. '＋' → logprob: -16.626951217651367

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006762263830751181
    2. ' ' → logprob: -5.0067620277404785
    3. '+' → logprob: -10.256762504577637
    4. '2' → logprob: -11.756762504577637
    5. 'B' → logprob: -13.506762504577637
    6. ' +' → logprob: -13.756762504577637
    7. '(' → logprob: -14.631762504577637
    8. ')' → logprob: -14.881762504577637
    9. ' B' → logprob: -15.506762504577637
    10. '```' → logprob: -16.25676155090332

Token 25: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011130942031741142
    2. ')' → logprob: -4.7611308097839355
    3. ']' → logprob: -6.0111308097839355
    4. ' )' → logprob: -10.886131286621094
    5. '):' → logprob: -11.511131286621094
    6. ')])' → logprob: -12.011131286621094
    7. ' ' → logprob: -12.136131286621094
    8. ':' → logprob: -12.886131286621094
    9. ' ]' → logprob: -12.886131286621094
    10. '   ' → logprob: -13.011131286621094

Token 26: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.71050626039505
    2. ' ' → logprob: -0.83550626039505
    3. '<|end|>' → logprob: -3.7105062007904053
    4. ' for' → logprob: -4.460506439208984
    5. '    
' → logprob: -4.960506439208984
    6. '    ' → logprob: -5.085506439208984
    7. ' 
' → logprob: -5.335506439208984
    8. '\' → logprob: -5.460506439208984
    9. '  
' → logprob: -5.835506439208984
    10. '  ' → logprob: -5.835506439208984

Token 27: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4778556823730469
    2. '[B' → logprob: -0.9778556823730469
    3. '[' → logprob: -5.852855682373047
    4. '[A' → logprob: -7.227855682373047
    5. ' B' → logprob: -9.977855682373047
    6. ' ' → logprob: -9.977855682373047
    7. ' ' → logprob: -10.227855682373047
    8. '   ' → logprob: -11.352855682373047
    9. 'B' → logprob: -11.602855682373047
    10. '[b' → logprob: -13.102855682373047

Token 28: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014191361144185066
    2. ' B' → logprob: -4.264191150665283
    3. '(B' → logprob: -11.764191627502441
    4. '   ' → logprob: -12.014191627502441
    5. ' ' → logprob: -12.014191627502441
    6. ' (' → logprob: -13.139191627502441
    7. '(' → logprob: -13.264191627502441
    8. '  ' → logprob: -14.139191627502441
    9. '`' → logprob: -14.514191627502441
    10. 'b' → logprob: -14.514191627502441

Token 29: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.06203053891658783
    2. '*j' → logprob: -2.812030553817749
    3. '*' → logprob: -9.687030792236328
    4. '**' → logprob: -15.687030792236328
    5. ' *' → logprob: -15.937030792236328
    6. '*a' → logprob: -16.062030792236328
    7. '*x' → logprob: -16.562030792236328
    8. '*n' → logprob: -17.187030792236328
    9. '*f' → logprob: -17.687030792236328
    10. ''*' → logprob: -17.687030792236328

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269376575946808
    2. 'for' → logprob: -2.1269376277923584
    3. '	for' → logprob: -12.501937866210938
    4. ' ' → logprob: -13.001937866210938
    5. '   ' → logprob: -13.251937866210938
    6. ')' → logprob: -13.751937866210938
    7. '(for' → logprob: -15.376937866210938
    8. '(' → logprob: -15.501937866210938
    9. ']' → logprob: -15.876937866210938
    10. ' ' → logprob: -16.376937866210938

Token 31: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017440813826397061
    2. 'range' → logprob: -6.376744270324707
    3. '(range' → logprob: -10.626744270324707
    4. '	range' → logprob: -12.126744270324707
    5. '<|end|>' → logprob: -12.251744270324707
    6. ' i' → logprob: -12.501744270324707
    7. ' xrange' → logprob: -13.126744270324707
    8. 'i' → logprob: -14.876744270324707
    9. ' ' → logprob: -15.126744270324707
    10. '<|end|>' → logprob: -15.626744270324707

Token 32: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1896679401397705
    2. ' range' → logprob: -2.3146679401397705
    3. ' in' → logprob: -3.0646679401397705
    4. '(range' → logprob: -3.9396679401397705
    5. 'range' → logprob: -5.564667701721191
    6. ' (' → logprob: -5.939667701721191
    7. '<|end|>' → logprob: -6.689667701721191
    8. ' for' → logprob: -10.189667701721191
    9. ',' → logprob: -10.814667701721191
    10. '<|end|>' → logprob: -11.314667701721191

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006739646662026644
    2. 'range' → logprob: -5.006739616394043
    3. '(range' → logprob: -10.881739616394043
    4. '<|end|>' → logprob: -13.131739616394043
    5. ' ' → logprob: -13.506739616394043
    6. '	range' → logprob: -13.631739616394043
    7. '1' → logprob: -15.006739616394043
    8. ' xrange' → logprob: -15.131739616394043
    9. '(' → logprob: -15.256739616394043
    10. '[' → logprob: -16.00674057006836

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.68022444692906e-05
    2. '1' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.875046730041504
    4. '<|end|>' → logprob: -15.250046730041504
    5. '2' → logprob: -16.62504768371582
    6. '(
' → logprob: -16.87504768371582
    7. ',' → logprob: -17.87504768371582
    8. 'def' → logprob: -18.37504768371582
    9. '<|end|>' → logprob: -18.37504768371582
    10. ')' → logprob: -18.62504768371582

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023170113563537598
    2. ' ' → logprob: -6.752316951751709
    3. 'A' → logprob: -6.877316951751709
    4. ' A' → logprob: -9.127317428588867
    5. '2' → logprob: -12.377317428588867
    6. 'B' → logprob: -13.877317428588867
    7. '	A' → logprob: -14.502317428588867
    8. '(' → logprob: -15.877317428588867
    9. '   ' → logprob: -16.252317428588867
    10. ')' → logprob: -16.252317428588867

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002421556506305933
    2. ' ,' → logprob: -6.7524213790893555
    3. ',B' → logprob: -6.8774213790893555
    4. '1' → logprob: -9.127421379089355
    5. 'B' → logprob: -10.377421379089355
    6. '+' → logprob: -10.627421379089355
    7. '(' → logprob: -11.127421379089355
    8. ' ' → logprob: -11.627421379089355
    9. '+,' → logprob: -12.127421379089355
    10. ',A' → logprob: -12.252421379089355

Token 37: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2014872133731842
    2. 'A' → logprob: -1.7014871835708618
    3. '	A' → logprob: -10.32648754119873
    4. ' ' → logprob: -10.82648754119873
    5. '(A' → logprob: -11.45148754119873
    6. ' (' → logprob: -12.57648754119873
    7. ')' → logprob: -13.20148754119873
    8. ' B' → logprob: -13.70148754119873
    9. '(' → logprob: -13.95148754119873
    10. '   ' → logprob: -14.07648754119873

Token 38: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.682846287731081e-05
    2. ' +' → logprob: -9.625066757202148
    3. ')+' → logprob: -15.500066757202148
    4. '1' → logprob: -15.750066757202148
    5. '+
' → logprob: -16.25006675720215
    6. '+B' → logprob: -16.37506675720215
    7. '＋' → logprob: -17.00006675720215
    8. '()+' → logprob: -17.37506675720215
    9. '2' → logprob: -17.75006675720215
    10. ')' → logprob: -18.25006675720215

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.875008583068848
    3. '2' → logprob: -13.625008583068848
    4. '+' → logprob: -15.625008583068848
    5. 'B' → logprob: -16.125009536743164
    6. '```' → logprob: -17.250009536743164
    7. '-' → logprob: -18.000009536743164
    8. ')' → logprob: -18.375009536743164
    9. '   ' → logprob: -18.625009536743164
    10. '11' → logprob: -19.125009536743164

Token 40: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39671897888183594
    2. ')]' → logprob: -1.146718978881836
    3. ')' → logprob: -4.646718978881836
    4. '])' → logprob: -8.646718978881836
    5. ' ]' → logprob: -11.271718978881836
    6. ')])' → logprob: -11.521718978881836
    7. '])]' → logprob: -12.646718978881836
    8. '`]' → logprob: -12.896718978881836
    9. '']' → logprob: -14.396718978881836
    10. '）' → logprob: -15.146718978881836

Token 41: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4402648210525513
    2. '
' → logprob: -1.6902648210525513
    3. ':' → logprob: -2.0652647018432617
    4. '   ' → logprob: -2.6902647018432617
    5. ')' → logprob: -2.8152647018432617
    6. '\' → logprob: -2.8152647018432617
    7. ' ' → logprob: -2.9402647018432617
    8. '[' → logprob: -2.9402647018432617
    9. '' → logprob: -3.8152647018432617
    10. ':
' → logprob: -3.8152647018432617

Token 42: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.470788836479187
    2. '   ' → logprob: -2.2207889556884766
    3. '.' → logprob: -2.7207889556884766
    4. '\' → logprob: -3.0957889556884766
    5. ' ' → logprob: -3.2207889556884766
    6. '
' → logprob: -3.8457889556884766
    7. ')' → logprob: -4.095788955688477
    8. '[' → logprob: -4.470788955688477
    9. ' 
' → logprob: -4.970788955688477
    10. '    
' → logprob: -5.095788955688477

Token 43: ' candidate' (ID: 17098)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0634440183639526
    2. ' l' → logprob: -1.3134440183639526
    3. 'x' → logprob: -2.188444137573242
    4. ' i' → logprob: -2.438444137573242
    5. 'l' → logprob: -2.688444137573242
    6. ' ' → logprob: -3.563444137573242
    7. 'i' → logprob: -3.688444137573242
    8. ' n' → logprob: -3.813444137573242
    9. 'n' → logprob: -4.313444137573242
    10. ' L' → logprob: -4.813444137573242

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01302974671125412
    2. 'in' → logprob: -4.3880295753479
    3. ' ' → logprob: -8.138030052185059
    4. '  ' → logprob: -8.763030052185059
    5. '	in' → logprob: -11.013030052185059
    6. '<|end|>' → logprob: -11.138030052185059
    7. '_' → logprob: -11.388030052185059
    8. ' ' → logprob: -12.013030052185059
    9. 's' → logprob: -12.388030052185059
    10. '_in' → logprob: -12.513030052185059

Token 45: ' sorted' (ID: 20099)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.38690927624702454
    2. 'L' → logprob: -1.1369092464447021
    3. ' ' → logprob: -11.011909484863281
    4. ' ' → logprob: -11.636909484863281
    5. '   ' → logprob: -12.136909484863281
    6. '    ' → logprob: -12.511909484863281
    7. '  ' → logprob: -13.261909484863281
    8. '	L' → logprob: -13.636909484863281
    9. '(L' → logprob: -15.386909484863281
    10. ' range' → logprob: -15.511909484863281

Token 46: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.07889275997877121
    2. '(' → logprob: -2.578892707824707
    3. '(l' → logprob: -13.453892707824707
    4. '(`' → logprob: -14.328892707824707
    5. ' (' → logprob: -14.453892707824707
    6. '(
' → logprob: -15.578892707824707
    7. '((' → logprob: -16.078893661499023
    8. '(A' → logprob: -16.953893661499023
    9. '(lambda' → logprob: -17.828893661499023
    10. '(C' → logprob: -17.953893661499023

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001936485292389989
    2. ')' → logprob: -7.126936435699463
    3. ':' → logprob: -7.376936435699463
    4. ' ):' → logprob: -7.876936435699463
    5. '():' → logprob: -9.876936912536621
    6. ',' → logprob: -10.501936912536621
    7. '):
' → logprob: -10.626936912536621
    8. ' :' → logprob: -11.626936912536621
    9. '   ' → logprob: -12.751936912536621
    10. ']:' → logprob: -12.751936912536621

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012736850185319781
    2. ' :' → logprob: -7.6262736320495605
    3. '):' → logprob: -8.376274108886719
    4. '       ' → logprob: -8.626274108886719
    5. ':
' → logprob: -8.626274108886719
    6. '   ' → logprob: -9.876274108886719
    7. '<|end|>' → logprob: -10.001274108886719
    8. ',' → logprob: -10.376274108886719
    9. ' ' → logprob: -11.501274108886719
    10. '():' → logprob: -11.751274108886719

Token 49: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9655547738075256
    2. '       ' → logprob: -1.7155547142028809
    3. ' if' → logprob: -1.9655547142028809
    4. ':' → logprob: -2.340554714202881
    5. '    ' → logprob: -2.715554714202881
    6. '<|end|>' → logprob: -2.715554714202881
    7. ' :' → logprob: -3.590554714202881
    8. 'if' (adapté à ' if') → logprob: -3.965554714202881
    9. '        ' → logprob: -4.215554714202881
    10. '   ' → logprob: -5.715554714202881

Token 50: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.01277532521635294
    2. 'candidate' → logprob: -4.387775421142578
    3. '(candidate' → logprob: -8.387775421142578
    4. ' all' → logprob: -10.887775421142578
    5. ' (' → logprob: -11.762775421142578
    6. ' candidat' → logprob: -12.262775421142578
    7. ' A' → logprob: -13.512775421142578
    8. ' not' → logprob: -13.512775421142578
    9. ' ' → logprob: -14.012775421142578
    10. '_candidate' → logprob: -14.512775421142578

Token 51: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.004125299863517284
    2. '%' → logprob: -5.504125118255615
    3. ' ' → logprob: -10.129125595092773
    4. '<|end|>' → logprob: -12.254125595092773
    5. ' ' → logprob: -13.879125595092773
    6. ' %#' → logprob: -14.379125595092773
    7. '%A' → logprob: -15.879125595092773
    8. ' %=' → logprob: -16.254125595092773
    9. '<|end|>' → logprob: -16.504125595092773
    10. ' %
' → logprob: -16.629125595092773

Token 52: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10021130740642548
    2. ' A' → logprob: -2.3502113819122314
    3. '	A' → logprob: -12.850211143493652
    4. ' ' → logprob: -13.725211143493652
    5. '   ' → logprob: -14.600211143493652
    6. '  ' → logprob: -15.350211143493652
    7. '>A' → logprob: -16.47521209716797
    8. '(A' → logprob: -16.60021209716797
    9. '<|end|>' → logprob: -17.85021209716797
    10. '=A' → logprob: -17.97521209716797

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519817352294922
    2. '==' → logprob: -1.5019817352294922
    3. '=' → logprob: -10.251981735229492
    4. ' =' → logprob: -11.626981735229492
    5. ' ' → logprob: -12.376981735229492
    6. '===' → logprob: -13.376981735229492
    7. ')==' → logprob: -14.376981735229492
    8. '<|end|>' → logprob: -15.001981735229492
    9. 'and' → logprob: -15.126981735229492
    10. ' and' → logprob: -15.251981735229492

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.785223960876465
    4. '<|end|>' → logprob: -16.91022491455078
    5. '  ' → logprob: -17.66022491455078
    6. '```' → logprob: -17.78522491455078
    7. '۰' → logprob: -18.28522491455078
    8. '   ' → logprob: -18.78522491455078
    9. ' ' → logprob: -19.97272491455078
    10. '０' → logprob: -20.59772491455078

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '  ' → logprob: -16.37520408630371
    4. '۰' → logprob: -17.00020408630371
    5. '

' → logprob: -17.56270408630371
    6. '```' → logprob: -17.56270408630371
    7. '   ' → logprob: -17.62520408630371
    8. ' ' → logprob: -17.75020408630371
    9. '<|end|>' → logprob: -17.87520408630371
    10. ' ' → logprob: -18.43770408630371

Token 56: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0076607041992247105
    2. 'and' → logprob: -4.882660865783691
    3. ' ' → logprob: -9.882660865783691
    4. '<|end|>' → logprob: -13.382660865783691
    5. ' or' → logprob: -13.882660865783691
    6. '        ' → logprob: -15.382660865783691
    7. '       ' → logprob: -15.382660865783691
    8. '    ' → logprob: -16.132659912109375
    9. ' ' → logprob: -16.132659912109375
    10. '  ' → logprob: -16.382659912109375

Token 57: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.0015187880489975214
    2. 'candidate' → logprob: -6.626518726348877
    3. ' ' → logprob: -9.001519203186035
    4. ' B' → logprob: -10.501519203186035
    5. ' ' → logprob: -10.751519203186035
    6. '(candidate' → logprob: -11.001519203186035
    7. ' candidat' → logprob: -13.126519203186035
    8. ' candidato' → logprob: -14.376519203186035
    9. '  ' → logprob: -15.001519203186035
    10. ' cand' → logprob: -15.751519203186035

Token 58: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02170442044734955
    2. '%' → logprob: -3.8967044353485107
    3. ' ' → logprob: -6.771704196929932
    4. '<|end|>' → logprob: -11.64670467376709
    5. ' ' → logprob: -12.14670467376709
    6. ' %=' → logprob: -14.64670467376709
    7. ' %#' → logprob: -14.77170467376709
    8. '  ' → logprob: -15.02170467376709
    9. '<|end|>' → logprob: -15.52170467376709
    10. '`' → logprob: -16.271703720092773

Token 59: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.023567941039800644
    2. 'B' → logprob: -4.398568153381348
    3. ' ' → logprob: -4.523568153381348
    4. ' ' → logprob: -9.023568153381348
    5. '  ' → logprob: -12.023568153381348
    6. '<|end|>' → logprob: -12.523568153381348
    7. '	B' → logprob: -13.023568153381348
    8. '`' → logprob: -13.523568153381348
    9. ''' → logprob: -13.648568153381348
    10. ' (' → logprob: -13.648568153381348

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5763790607452393
    2. '==' → logprob: -0.8263790607452393
    3. '<|end|>' → logprob: -7.95137882232666
    4. ' ' → logprob: -10.57637882232666
    5. '===' → logprob: -11.07637882232666
    6. ')==' → logprob: -11.45137882232666
    7. '=' → logprob: -11.70137882232666
    8. ']==' → logprob: -11.95137882232666
    9. ' ' → logprob: -12.45137882232666
    10. '<|end|>' → logprob: -12.57637882232666

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759544372558594
    2. ' ' → logprob: -0.8259544372558594
    3. '<|end|>' → logprob: -11.32595443725586
    4. ' ' → logprob: -13.45095443725586
    5. '  ' → logprob: -14.95095443725586
    6. '```' → logprob: -15.07595443725586
    7. '<|end|>' → logprob: -15.45095443725586
    8. '۰' → logprob: -15.63845443725586
    9. '   ' → logprob: -15.63845443725586
    10. ' 

' → logprob: -16.01345443725586

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '  ' → logprob: -17.000295639038086
    4. '۰' → logprob: -17.625295639038086
    5. '```' → logprob: -17.750295639038086
    6. '   ' → logprob: -17.812795639038086
    7. '<|end|>' → logprob: -17.937795639038086
    8. ' ' → logprob: -18.875295639038086
    9. ' ' → logprob: -18.937795639038086
    10. '    ' → logprob: -19.187795639038086

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014859484508633614
    2. ':
' → logprob: -9.25014877319336
    3. ':return' → logprob: -10.62514877319336
    4. '):' → logprob: -11.25014877319336
    5. '       ' → logprob: -11.62514877319336
    6. ' :' → logprob: -12.62514877319336
    7. '           ' → logprob: -13.75014877319336
    8. ':**' → logprob: -14.37514877319336
    9. ',' → logprob: -14.75014877319336
    10. ':

' → logprob: -15.62514877319336

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04756723716855049
    2. ':' → logprob: -3.547567129135132
    3. '       ' → logprob: -5.047567367553711
    4. ' :' → logprob: -5.797567367553711
    5. ':return' → logprob: -5.797567367553711
    6. ' return' → logprob: -6.047567367553711
    7. '\n' → logprob: -7.422567367553711
    8. '        ' → logprob: -8.047567367553711
    9. 'return' → logprob: -8.172567367553711
    10. ':
' → logprob: -8.297567367553711

Token 65: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23695866763591766
    2. '               ' → logprob: -2.1119587421417236
    3. ' return' → logprob: -3.1119587421417236
    4. 'return' (adapté à ' return') → logprob: -3.1119587421417236
    5. ' ' → logprob: -8.236958503723145
    6. '            ' → logprob: -8.361958503723145
    7. ':return' → logprob: -9.361958503723145
    8. '          ' → logprob: -9.611958503723145
    9. '       ' → logprob: -9.611958503723145
    10. ' 
' → logprob: -10.236958503723145

Token 66: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.12692873179912567
    2. 'candidate' → logprob: -2.1269288063049316
    3. ' candidat' → logprob: -14.751928329467773
    4. '(candidate' → logprob: -15.501928329467773
    5. 'Candidate' → logprob: -18.126928329467773
    6. 'c' → logprob: -18.126928329467773
    7. ' ' → logprob: -18.126928329467773
    8. ' candidato' → logprob: -18.501928329467773
    9. '_candidate' → logprob: -18.626928329467773
    10. 'andidate' → logprob: -20.126928329467773

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: 'Q' (ID: 48)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' W' (ID: 486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44952377676963806
    2. 'R' → logprob: -1.6995238065719604
    3. ' R' → logprob: -2.324523687362671
    4. ' =' → logprob: -3.199523687362671
    5. 'r' → logprob: -4.82452392578125
    6. '=' → logprob: -5.07452392578125
    7. 'A' → logprob: -5.32452392578125
    8. '_' → logprob: -5.69952392578125
    9. ' A' → logprob: -6.19952392578125
    10. ''' → logprob: -6.32452392578125

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814478278160095
    2. ' =' → logprob: -1.4064478874206543
    3. ',' → logprob: -8.781447410583496
    4. ')' → logprob: -9.781447410583496
    5. '=

' → logprob: -10.531447410583496
    6. ' ' → logprob: -10.906447410583496
    7. '[' → logprob: -11.156447410583496
    8. '=
' → logprob: -11.906447410583496
    9. '   ' → logprob: -12.906447410583496
    10. ' =
' → logprob: -12.906447410583496

Token 72: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.42269858717918396
    2. '5' → logprob: -1.7976986169815063
    3. '10' → logprob: -2.547698497772217
    4. '1' → logprob: -3.797698497772217
    5. ' ' → logprob: -4.047698497772217
    6. ' map' → logprob: -4.297698497772217
    7. '2' → logprob: -4.422698497772217
    8. '4' → logprob: -4.797698497772217
    9. '3' → logprob: -5.297698497772217
    10. '7' → logprob: -5.422698497772217

Token 73: 'int' (ID: 491)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -1.797343373298645
    2. 'int' → logprob: -1.922343373298645
    3. '5' → logprob: -2.0473432540893555
    4. '1' → logprob: -2.1723432540893555
    5. '10' → logprob: -2.2973432540893555
    6. '3' → logprob: -2.4223432540893555
    7. '6' → logprob: -2.9223432540893555
    8. '2' → logprob: -2.9223432540893555
    9. ' ' → logprob: -3.6723432540893555
    10. '4' → logprob: -3.6723432540893555

Token 74: '(e' (ID: 3454)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04640906676650047
    2. '(' → logprob: -3.1714091300964355
    3. '(x' → logprob: -6.0464091300964355
    4. ')' → logprob: -8.046408653259277
    5. '(i' → logprob: -8.546408653259277
    6. 'input' → logprob: -8.546408653259277
    7. ')(' → logprob: -9.046408653259277
    8. '()' → logprob: -9.546408653259277
    9. '(s' → logprob: -9.796408653259277
    10. '(raw' → logprob: -10.921408653259277

Token 75: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5873346924781799
    2. '(input' → logprob: -1.3373346328735352
    3. '(x' → logprob: -1.8373346328735352
    4. '(n' → logprob: -4.712334632873535
    5. '(' → logprob: -5.212334632873535
    6. 'input' → logprob: -5.837334632873535
    7. '())' → logprob: -6.712334632873535
    8. '(s' → logprob: -7.087334632873535
    9. 'n' → logprob: -7.337334632873535
    10. ')x' → logprob: -8.087334632873535

Token 76: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17674121260643005
    2. 's' → logprob: -2.551741123199463
    3. 'str' → logprob: -3.676741123199463
    4. 'rs' → logprob: -3.926741123199463
    5. 'd' → logprob: -4.676741123199463
    6. 'verse' → logprob: -5.051741123199463
    7. 'versed' → logprob: -5.426741123199463
    8. '1' → logprob: -5.551741123199463
    9. 'strip' → logprob: -6.176741123199463
    10. 'string' → logprob: -6.301741123199463

Token 77: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001321073155850172
    2. ']))' → logprob: -6.876320838928223
    3. ']' → logprob: -9.001320838928223
    4. ')' → logprob: -9.501320838928223
    5. ''])' → logprob: -10.501320838928223
    6. ' ])' → logprob: -10.626320838928223
    7. ')])' → logprob: -11.376320838928223
    8. '))' → logprob: -11.626320838928223
    9. '")' → logprob: -13.376320838928223
    10. ' ' → logprob: -13.501320838928223

Token 78: '::-' (ID: 96612)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07133514434099197
    2. ')' → logprob: -2.6963350772857666
    3. ']' → logprob: -7.821335315704346
    4. '0' → logprob: -8.446334838867188
    5. ']))' → logprob: -8.821334838867188
    6. ' ])' → logprob: -8.821334838867188
    7. ''])' → logprob: -9.446334838867188
    8. ')])' → logprob: -9.571334838867188
    9. ' ' → logprob: -10.071334838867188
    10. '))' → logprob: -10.071334838867188

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26119962334632874
    2. 's' → logprob: -2.261199712753296
    3. '()' → logprob: -2.636199712753296
    4. 'e' → logprob: -3.761199712753296
    5. '])' → logprob: -4.511199474334717
    6. 'str' → logprob: -4.886199474334717
    7. 'ex' → logprob: -5.636199474334717
    8. '-' → logprob: -5.761199474334717
    9. 'i' → logprob: -6.761199474334717
    10. 'string' → logprob: -7.511199474334717

Token 80: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1856725960969925
    2. '())' → logprob: -2.1856725215911865
    3. '(' → logprob: -3.3106725215911865
    4. '])' → logprob: -4.560672760009766
    5. '()' → logprob: -5.685672760009766
    6. '('' → logprob: -5.935672760009766
    7. '(input' → logprob: -6.310672760009766
    8. '))' → logprob: -7.060672760009766
    9. '')' → logprob: -8.435672760009766
    10. '("' → logprob: -9.060672760009766

Token 81: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5665011405944824
    2. ')' → logprob: -1.1915011405944824
    3. '(input' → logprob: -2.4415011405944824
    4. ',' → logprob: -3.9415011405944824
    5. '<|end|>' → logprob: -4.316501140594482
    6. '()' → logprob: -6.441501140594482
    7. '(','' → logprob: -6.566501140594482
    8. '(int' → logprob: -6.941501140594482
    9. '(
' → logprob: -7.566501140594482
    10. '(x' → logprob: -7.691501140594482

Token 82: ' e' (ID: 319)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02716231346130371
    2. 'input' → logprob: -3.6521623134613037
    3. '(input' → logprob: -8.027162551879883
    4. ' ' → logprob: -8.277162551879883
    5. ' (' → logprob: -9.152162551879883
    6. '_' → logprob: -9.652162551879883
    7. ' _' → logprob: -10.527162551879883
    8. ' range' → logprob: -11.027162551879883
    9. '  ' → logprob: -11.402162551879883
    10. '_input' → logprob: -12.027162551879883

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0898040384054184
    2. 'in' → logprob: -2.46480393409729
    3. '(' → logprob: -7.589804172515869
    4. ')' → logprob: -8.589803695678711
    5. '(in' → logprob: -10.214803695678711
    6. ' ' → logprob: -10.464803695678711
    7. '<|end|>' → logprob: -10.464803695678711
    8. '(input' → logprob: -11.214803695678711
    9. '  ' → logprob: -12.214803695678711
    10. 'import' → logprob: -12.214803695678711

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03419410064816475
    2. ' input' → logprob: -3.409193992614746
    3. '(input' → logprob: -8.784193992614746
    4. '['' → logprob: -8.909193992614746
    5. '["' → logprob: -9.284193992614746
    6. '[input' → logprob: -9.909193992614746
    7. ')' → logprob: -10.909193992614746
    8. ' ' → logprob: -11.284193992614746
    9. 'str' → logprob: -11.534193992614746
    10. '[' → logprob: -11.659193992614746

Token 85: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07194589823484421
    2. '('' → logprob: -3.696945905685425
    3. '())' → logprob: -3.821945905685425
    4. '()' → logprob: -3.946945905685425
    5. '().' → logprob: -6.571945667266846
    6. '("("' → logprob: -7.071945667266846
    7. '("' → logprob: -7.446945667266846
    8. ')' → logprob: -9.071946144104004
    9. '(
' → logprob: -9.071946144104004
    10. '(

' → logprob: -9.821946144104004

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036084887688048184
    2. 'strip' → logprob: -8.000360488891602
    3. ' split' → logprob: -10.875360488891602
    4. 'rstrip' → logprob: -12.125360488891602
    5. 'replace' → logprob: -14.000360488891602
    6. 'spl' → logprob: -16.0003604888916
    7. ')' → logprob: -17.0003604888916
    8. '(split' → logprob: -17.2503604888916
    9. '.split' → logprob: -18.2503604888916
    10. ' strip' → logprob: -18.6253604888916

Token 87: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.040056150406599045
    2. '()' → logprob: -3.4150562286376953
    3. ')' → logprob: -5.165056228637695
    4. '(' → logprob: -7.415056228637695
    5. '();)' → logprob: -11.040056228637695
    6. ' ())' → logprob: -11.290056228637695
    7. '())
' → logprob: -11.665056228637695
    8. '()))' → logprob: -11.665056228637695
    9. '('' → logprob: -11.915056228637695
    10. '()]' → logprob: -12.040056228637695

Token 88: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0616060495376587
    2. '<|end|>' → logprob: -1.0616060495376587
    3. ')' → logprob: -1.5616060495376587
    4. '#' → logprob: -3.186605930328369
    5. '\n' → logprob: -3.686605930328369
    6. ' ' → logprob: -4.811605930328369
    7. '\' → logprob: -5.311605930328369
    8. '*' → logprob: -5.936605930328369
    9. '+' → logprob: -6.061605930328369
    10. '```' → logprob: -6.186605930328369

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894415944814682
    2. ' =' → logprob: -2.46394419670105
    3. '=

' → logprob: -14.088944435119629
    4. 'u' → logprob: -14.588944435119629
    5. '=int' → logprob: -14.713944435119629
    6. ' ' → logprob: -14.838944435119629
    7. '<|end|>' → logprob: -15.338944435119629
    8. ',' → logprob: -15.463944435119629
    9. ')' → logprob: -15.713944435119629
    10. '=
' → logprob: -15.838944435119629

Token 90: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0024764856789261103
    2. ' L' → logprob: -6.002476692199707
    3. 'str' → logprob: -14.502476692199707
    4. ' ' → logprob: -16.12747573852539
    5. '   ' → logprob: -16.25247573852539
    6. '```' → logprob: -17.25247573852539
    7. '  ' → logprob: -17.62747573852539
    8. '	L' → logprob: -17.62747573852539
    9. '`' → logprob: -18.12747573852539
    10. 'Q' → logprob: -18.87747573852539

Token 91: 'cm' (ID: 7871)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3703247308731079
    2. 'cm' → logprob: -1.245324730873108
    3. 'c' → logprob: -4.370324611663818
    4. 'G' → logprob: -4.995324611663818
    5. 'm' → logprob: -6.370324611663818
    6. 'CM' → logprob: -8.120325088500977
    7. 'Cm' → logprob: -8.620325088500977
    8. 'L' → logprob: -11.620325088500977
    9. 'cmath' → logprob: -12.120325088500977
    10. 'M' → logprob: -12.495325088500977

Token 92: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: 0.0
    2. ' Genius' → logprob: -18.875
    3. 'Gen' → logprob: -20.875
    4. '(G' → logprob: -21.0
    5. '```' → logprob: -21.0
    6. ' G' → logprob: -21.625
    7. '_G' → logprob: -21.75
    8. ' genius' → logprob: -21.875
    9. '   ' → logprob: -22.0
    10. '  ' → logprob: -22.75

Token 93: 'enius' (ID: 84002)
  Prédit: 'enius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enius' → logprob: -0.01320153009146452
    2. 'G' → logprob: -4.513201713562012
    3. 'us' → logprob: -7.513201713562012
    4. 'nius' → logprob: -7.513201713562012
    5. 'ius' → logprob: -7.638201713562012
    6. 'enus' → logprob: -7.763201713562012
    7. 'u' → logprob: -10.263201713562012
    8. 'eniu' → logprob: -10.388201713562012
    9. 'enu' → logprob: -10.513201713562012
    10. 'en' → logprob: -10.888201713562012

Token 94: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.004079708829522133
    2. '(' → logprob: -5.504079818725586
    3. '((' → logprob: -14.254079818725586
    4. '(
' → logprob: -15.004079818725586
    5. ' (' → logprob: -16.004079818725586
    6. '(

' → logprob: -17.379079818725586
    7. '(W' → logprob: -17.504079818725586
    8. '(`' → logprob: -17.879079818725586
    9. '(L' → logprob: -17.879079818725586
    10. '(A' → logprob: -18.004079818725586

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.05499910004437e-05
    2. ',W' → logprob: -9.500090599060059
    3. ' ,' → logprob: -11.625090599060059
    4. ',

' → logprob: -12.875090599060059
    5. ',
' → logprob: -13.000090599060059
    6. 'W' → logprob: -13.875090599060059
    7. ')' → logprob: -14.000090599060059
    8. ',w' → logprob: -17.375089645385742
    9. ',Q' → logprob: -17.875089645385742
    10. ',
' → logprob: -18.375089645385742

Token 96: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.38687339425086975
    2. ' W' → logprob: -1.1368733644485474
    3. ' ' → logprob: -14.011873245239258
    4. ')' → logprob: -14.136873245239258
    5. ' ' → logprob: -14.761873245239258
    6. '	W' → logprob: -16.074373245239258
    7. '<W' → logprob: -16.511873245239258
    8. '```' → logprob: -17.199373245239258
    9. '<|end|>' → logprob: -17.386873245239258
    10. ' 
' → logprob: -17.449373245239258

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.125003814697266
    3. '))' → logprob: -13.750003814697266
    4. ' )' → logprob: -14.875003814697266
    5. ')`' → logprob: -15.000003814697266
    6. ')

' → logprob: -16.500003814697266
    7. ')**' → logprob: -16.875003814697266
    8. ')return' → logprob: -17.250003814697266
    9. '),' → logprob: -17.500003814697266
    10. ')#' → logprob: -17.625003814697266

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5570885807392187e-05
    2. '
' → logprob: -11.750015258789062
    3. ' print' → logprob: -12.000015258789062
    4. '<|end|>' → logprob: -13.750015258789062
    5. '```' → logprob: -16.125015258789062
    6. '(print' → logprob: -16.250015258789062
    7. '#print' → logprob: -16.625015258789062
    8. '.print' → logprob: -16.875015258789062
    9. 'prin' → logprob: -17.375015258789062
    10. '-print' → logprob: -17.750015258789062

Token 99: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313285231590271
    2. '(ans' → logprob: -1.313285231590271
    3. '("("' → logprob: -11.688284873962402
    4. '('' → logprob: -11.938284873962402
    5. ' (' → logprob: -13.188284873962402
    6. '(answer' → logprob: -13.188284873962402
    7. '(
' → logprob: -13.563284873962402
    8. '(

' → logprob: -13.813284873962402
    9. '(`' → logprob: -14.188284873962402
    10. '(f' → logprob: -14.813284873962402

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.25
    4. ')`' → logprob: -16.875
    5. ')
' → logprob: -18.0
    6. '')' → logprob: -18.375
    7. '`)' → logprob: -18.75
    8. ')}' → logprob: -19.125
    9. '),' → logprob: -19.125
    10. ')**' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 47.96%
Précision adaptée (1ère position): 47.96%
Précision (top 10): 76.53%
================================================================================
