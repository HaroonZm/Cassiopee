================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, chain
import operator
import sys

input = lambda: sys.stdin.readline()

n = int(input())
l = list(map(lambda _: list(map(int, input().split())), range(n)))
l = sorted(l, key=operator.itemgetter(1))

def verdict(tasks):
    s = list(accumulate(map(operator.itemgetter(0), tasks)))
    checks = map(lambda pair: pair[0] <= pair[1], zip(s, map(operator.itemgetter(1), tasks)))
    try:
        reduce(lambda _, x: x if x else (_ for _ in ()).throw(SystemExit(print('No'))), checks)
        print('Yes')
    except SystemExit:
        pass

verdict(l)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12747511267662048
    2. 'import' → logprob: -2.1274750232696533
    3. '.' → logprob: -8.127474784851074
    4. '.import' → logprob: -8.752474784851074
    5. '	import' → logprob: -10.377474784851074
    6. ' ' → logprob: -10.502474784851074
    7. ' .' → logprob: -11.377474784851074
    8. '_import' → logprob: -11.752474784851074
    9. '.im' → logprob: -12.502474784851074
    10. ' itertools' → logprob: -13.252474784851074

Token 8: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02924237959086895
    2. '(
' → logprob: -4.029242515563965
    3. 'def' → logprob: -5.779242515563965
    4. ',' → logprob: -6.279242515563965
    5. '#' → logprob: -6.529242515563965
    6. '\' → logprob: -6.529242515563965
    7. '.' → logprob: -6.779242515563965
    8. '\n' → logprob: -7.279242515563965
    9. '`' → logprob: -8.154242515563965
    10. '```' → logprob: -8.529242515563965

Token 10: ' chain' (ID: 13464)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5179258584976196
    2. 'chain' → logprob: -1.8929258584976196
    3. ' group' → logprob: -2.26792573928833
    4. ' chain' → logprob: -2.39292573928833
    5. 'product' → logprob: -3.89292573928833
    6. 'com' → logprob: -4.01792573928833
    7. ' product' → logprob: -5.26792573928833
    8. 'count' → logprob: -5.39292573928833
    9. 'cycle' → logprob: -6.26792573928833
    10. 'per' → logprob: -6.26792573928833

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16838034987449646
    2. '(
' → logprob: -2.9183802604675293
    3. ',' → logprob: -3.4183802604675293
    4. '.' → logprob: -3.6683802604675293
    5. '\' → logprob: -3.7933802604675293
    6. '\n' → logprob: -5.293380260467529
    7. 'def' → logprob: -5.293380260467529
    8. '```' → logprob: -5.293380260467529
    9. 'import' → logprob: -6.918380260467529
    10. ',
' → logprob: -7.293380260467529

Token 12: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.584414005279541
    2. 'def' → logprob: -1.584414005279541
    3. '(' → logprob: -1.834414005279541
    4. '
' → logprob: -2.459414005279541
    5. 'import' → logprob: -2.709414005279541
    6. '\' → logprob: -2.834414005279541
    7. '\n' → logprob: -2.834414005279541
    8. 'd' → logprob: -3.209414005279541
    9. '(
' → logprob: -3.334414005279541
    10. ',
' → logprob: -4.084414005279541

Token 13: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.873540461063385
    2. ' math' → logprob: -1.6235404014587402
    3. ' collections' → logprob: -1.8735404014587402
    4. ' itertools' → logprob: -2.2485404014587402
    5. ' ' → logprob: -2.8735404014587402
    6. ' functools' → logprob: -3.3735404014587402
    7. ' operator' → logprob: -4.24854040145874
    8. ' re' → logprob: -4.49854040145874
    9. ' numpy' → logprob: -5.87354040145874
    10. ' pandas' → logprob: -5.87354040145874

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5362941026687622
    2. '.' → logprob: -1.0362941026687622
    3. 'def' → logprob: -3.5362939834594727
    4. '\' → logprob: -4.911293983459473
    5. ',' → logprob: -5.036293983459473
    6. '(
' → logprob: -5.036293983459473
    7. '#' → logprob: -5.536293983459473
    8. '_' → logprob: -6.911293983459473
    9. '```' → logprob: -7.036293983459473
    10. '[' → logprob: -7.161293983459473

Token 15: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48607972264289856
    2. '.' → logprob: -1.4860796928405762
    3. 'def' → logprob: -2.486079692840576
    4. '#' → logprob: -4.111079692840576
    5. '(
' → logprob: -4.111079692840576
    6. ',' → logprob: -4.236079692840576
    7. '\' → logprob: -4.611079692840576
    8. 'd' → logprob: -5.611079692840576
    9. '_' → logprob: -5.861079692840576
    10. '*' → logprob: -5.861079692840576

Token 16: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1488114446401596
    2. ' os' → logprob: -2.5238113403320312
    3. ' functools' → logprob: -3.8988113403320312
    4. ' collections' → logprob: -4.023811340332031
    5. ' sys' → logprob: -4.273811340332031
    6. ' re' → logprob: -5.898811340332031
    7. ' itertools' → logprob: -7.148811340332031
    8. ' ' → logprob: -7.148811340332031
    9. 'math' → logprob: -7.398811340332031
    10. ' numpy' → logprob: -8.273811340332031

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2908376157283783
    2. '

' → logprob: -2.165837526321411
    3. '\n' → logprob: -2.790837526321411
    4. '.' → logprob: -3.665837526321411
    5. '\' → logprob: -4.16583776473999
    6. '<|end|>' → logprob: -4.79083776473999
    7. 'def' → logprob: -5.29083776473999
    8. '' → logprob: -5.41583776473999
    9. '```' → logprob: -5.66583776473999
    10. ',' → logprob: -5.66583776473999

Token 18: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16656403243541718
    2. 'd' → logprob: -2.7915639877319336
    3. '\' → logprob: -3.7915639877319336
    4. '```' → logprob: -4.416563987731934
    5. '#' → logprob: -4.541563987731934
    6. '_' → logprob: -4.916563987731934
    7. '`' → logprob: -5.041563987731934
    8. '.' → logprob: -5.166563987731934
    9. 'de' → logprob: -5.916563987731934
    10. 'a' → logprob: -6.041563987731934

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039599984884262085
    2. '()' → logprob: -4.164599895477295
    3. '_data' → logprob: -4.914599895477295
    4. '=' → logprob: -4.914599895477295
    5. 'data' → logprob: -6.289599895477295
    6. ' =' → logprob: -6.289599895477295
    7. '.' → logprob: -6.289599895477295
    8. '_' → logprob: -6.789599895477295
    9. ')' → logprob: -7.539599895477295
    10. '```' → logprob: -8.039600372314453

Token 20: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.09233426302671432
    2. 'input' → logprob: -2.592334270477295
    3. ' sys' → logprob: -4.342334270477295
    4. ' input' → logprob: -8.717333793640137
    5. 'lambda' → logprob: -8.967333793640137
    6. '=sys' → logprob: -10.342333793640137
    7. '	sys' → logprob: -11.717333793640137
    8. '(sys' → logprob: -11.717333793640137
    9. ' lambda' → logprob: -12.842333793640137
    10. 'system' → logprob: -13.842333793640137

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04661048203706741
    2. ' :' → logprob: -3.2966105937957764
    3. ' ' → logprob: -5.546610355377197
    4. '()' → logprob: -6.171610355377197
    5. '():' → logprob: -6.921610355377197
    6. '().' → logprob: -8.296610832214355
    7. 's' → logprob: -8.421610832214355
    8. '<|end|>' → logprob: -8.671610832214355
    9. ' input' → logprob: -9.046610832214355
    10. 'input' → logprob: -9.171610832214355

Token 22: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38687703013420105
    2. ' sys' → logprob: -1.1368770599365234
    3. 'input' → logprob: -12.511877059936523
    4. ' input' → logprob: -14.011877059936523
    5. '	sys' → logprob: -14.261877059936523
    6. '=sys' → logprob: -14.511877059936523
    7. '(sys' → logprob: -15.136877059936523
    8. 'system' → logprob: -16.636877059936523
    9. 'stdin' → logprob: -17.511877059936523
    10. '.sys' → logprob: -17.636877059936523

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.08645041286945343
    2. '.' → logprob: -2.7114503383636475
    3. '.readline' → logprob: -4.461450576782227
    4. '.stdout' → logprob: -5.586450576782227
    5. '.argv' → logprob: -7.586450576782227
    6. '.input' → logprob: -9.086450576782227
    7. '.stderr' → logprob: -9.211450576782227
    8. '.exit' → logprob: -9.461450576782227
    9. '.std' → logprob: -9.836450576782227
    10. '.get' → logprob: -10.336450576782227

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015273597091436386
    2. '.read' → logprob: -7.126527309417725
    3. 'read' → logprob: -7.251527309417725
    4. '.' → logprob: -11.501527786254883
    5. '.readlines' → logprob: -13.001527786254883
    6. '```' → logprob: -14.876527786254883
    7. 'buffer' → logprob: -15.251527786254883
    8. '.Read' → logprob: -15.376527786254883
    9. ' readline' → logprob: -15.876527786254883
    10. '.buffer' → logprob: -16.501527786254883

Token 25: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17070695757865906
    2. '().' → logprob: -1.9207069873809814
    3. '(' → logprob: -5.045706748962402
    4. '()
' → logprob: -5.920706748962402
    5. '()\' → logprob: -7.045706748962402
    6. '()

' → logprob: -8.670706748962402
    7. '(
' → logprob: -9.170706748962402
    8. '
' → logprob: -10.170706748962402
    9. '.' → logprob: -10.920706748962402
    10. '()<' → logprob: -11.545706748962402

Token 26: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2927057445049286
    2. 'def' → logprob: -1.542705774307251
    3. 'data' → logprob: -4.042705535888672
    4. '
' → logprob: -5.417705535888672
    5. 'a' → logprob: -5.667705535888672
    6. 'number' → logprob: -5.917705535888672
    7. '(n' → logprob: -6.042705535888672
    8. 'num' → logprob: -6.292705535888672
    9. 'N' → logprob: -6.917705535888672
    10. 'for' → logprob: -7.042705535888672

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42366018891334534
    2. ' ' → logprob: -1.298660159111023
    3. '=' → logprob: -2.6736602783203125
    4. ',' → logprob: -7.0486602783203125
    5. ')' → logprob: -7.2986602783203125
    6. ' ,' → logprob: -7.5486602783203125
    7. '  ' → logprob: -7.7986602783203125
    8. '<|end|>' → logprob: -8.298660278320312
    9. '.' → logprob: -8.923660278320312
    10. ' )' → logprob: -9.048660278320312

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01818096451461315
    2. 'int' → logprob: -4.018180847167969
    3. ' ' → logprob: -11.018180847167969
    4. ' input' → logprob: -11.393180847167969
    5. 'input' → logprob: -13.518180847167969
    6. '=int' → logprob: -13.518180847167969
    7. ' ' → logprob: -16.14318084716797
    8. '10' → logprob: -16.51818084716797
    9. '(int' → logprob: -16.76818084716797
    10. ' n' → logprob: -17.14318084716797

Token 29: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10024592280387878
    2. '(' → logprob: -2.350245952606201
    3. '()' → logprob: -10.725245475769043
    4. 'input' → logprob: -11.850245475769043
    5. '('' → logprob: -12.225245475769043
    6. ' (' → logprob: -13.350245475769043
    7. '(sys' → logprob: -13.600245475769043
    8. '(
' → logprob: -14.850245475769043
    9. '(in' → logprob: -14.975245475769043
    10. '(`' → logprob: -15.350245475769043

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029875680804252625
    2. '()' → logprob: -3.5298757553100586
    3. ')' → logprob: -9.779875755310059
    4. ' ())' → logprob: -10.279875755310059
    5. '(' → logprob: -11.279875755310059
    6. '().' → logprob: -11.404875755310059
    7. '()))' → logprob: -12.404875755310059
    8. '()`' → logprob: -13.029875755310059
    9. '())
' → logprob: -13.779875755310059
    10. '();)' → logprob: -14.029875755310059

Token 31: 'l' (ID: 75)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.0683101415634155
    2. ' ' → logprob: -1.6933101415634155
    3. 'a' → logprob: -2.318310260772705
    4. ')' → logprob: -2.443310260772705
    5. 'arr' → logprob: -2.693310260772705
    6. 'array' → logprob: -3.193310260772705
    7. 's' → logprob: -3.568310260772705
    8. 'numbers' → logprob: -3.568310260772705
    9. '<|end|>' → logprob: -3.693310260772705
    10. ' numbers' → logprob: -4.193310260772705

Token 32: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.6670923233032227
    2. ' =' → logprob: -0.9170923233032227
    3. '=' → logprob: -3.1670923233032227
    4. 'i' → logprob: -4.292092323303223
    5. 's' → logprob: -4.417092323303223
    6. 'st' → logprob: -4.792092323303223
    7. 'is' → logprob: -5.417092323303223
    8. '.' → logprob: -6.042092323303223
    9. '_' → logprob: -6.792092323303223
    10. '=[]' → logprob: -7.417092323303223

Token 33: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.022354181855916977
    2. ' list' → logprob: -4.6473541259765625
    3. '[list' → logprob: -5.0223541259765625
    4. '[' → logprob: -5.8973541259765625
    5. 'ist' → logprob: -6.6473541259765625
    6. '[]' → logprob: -7.2723541259765625
    7. '[int' → logprob: -7.5223541259765625
    8. 'map' → logprob: -8.147354125976562
    9. '[input' → logprob: -8.897354125976562
    10. '(list' → logprob: -9.772354125976562

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.19453036785125732
    2. '(' → logprob: -1.9445303678512573
    3. '(chain' → logprob: -4.319530487060547
    4. '(acc' → logprob: -4.694530487060547
    5. '(input' → logprob: -5.319530487060547
    6. '()' → logprob: -5.569530487060547
    7. '(int' → logprob: -6.569530487060547
    8. '(range' → logprob: -6.944530487060547
    9. '(filter' → logprob: -9.444530487060547
    10. '(read' → logprob: -11.069530487060547

Token 35: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0722636729478836
    2. '(' → logprob: -2.822263717651367
    3. '(lambda' → logprob: -5.072263717651367
    4. '(str' → logprob: -6.322263717651367
    5. '<|end|>' → logprob: -6.697263717651367
    6. '(input' → logprob: -8.697263717651367
    7. '(operator' → logprob: -8.822263717651367
    8. '[int' → logprob: -8.947263717651367
    9. '(eval' → logprob: -9.072263717651367
    10. ')' → logprob: -9.197263717651367

Token 36: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6932111382484436
    2. ' x' → logprob: -0.6932111382484436
    3. ' s' → logprob: -10.818211555480957
    4. 's' → logprob: -11.193211555480957
    5. 'a' → logprob: -11.568211555480957
    6. ' a' → logprob: -12.318211555480957
    7. 'int' → logprob: -12.568211555480957
    8. ':' → logprob: -12.693211555480957
    9. ' ' → logprob: -12.943211555480957
    10. '	x' → logprob: -13.193211555480957

Token 37: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027882395312190056
    2. ' int' → logprob: -3.6528823375701904
    3. 'input' → logprob: -6.5278825759887695
    4. ' input' → logprob: -9.27788257598877
    5. '_' → logprob: -11.27788257598877
    6. '(int' → logprob: -12.77788257598877
    7. ' ' → logprob: -13.02788257598877
    8. '	int' → logprob: -13.52788257598877
    9. ':int' → logprob: -13.65288257598877
    10. '<int' → logprob: -13.90288257598877

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.375261306762695
    3. '(input' → logprob: -10.875261306762695
    4. '(int' → logprob: -11.750261306762695
    5. '()' → logprob: -13.250261306762695
    6. '(range' → logprob: -14.250261306762695
    7. 'map' → logprob: -15.000261306762695
    8. '	map' → logprob: -15.375261306762695
    9. ' map' → logprob: -16.000261306762695
    10. '())' → logprob: -16.000261306762695

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009151478880085051
    2. '(' → logprob: -7.750915050506592
    3. 'int' → logprob: -7.875915050506592
    4. '<int' → logprob: -9.62591552734375
    5. '<|end|>' → logprob: -11.37591552734375
    6. ',int' → logprob: -12.00091552734375
    7. '(
' → logprob: -12.00091552734375
    8. ')' → logprob: -12.25091552734375
    9. '[int' → logprob: -12.50091552734375
    10. '=int' → logprob: -13.62591552734375

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2208274006843567
    2. ',input' → logprob: -1.970827341079712
    3. ',' → logprob: -2.970827341079712
    4. '(' → logprob: -5.470827579498291
    5. 'input' → logprob: -5.970827579498291
    6. '(sys' → logprob: -8.220827102661133
    7. '),' → logprob: -9.095827102661133
    8. '(),' → logprob: -9.220827102661133
    9. '(','' → logprob: -9.720827102661133
    10. ')' → logprob: -10.095827102661133

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003180921310558915
    2. ' input' → logprob: -5.753180980682373
    3. '	input' → logprob: -13.753180503845215
    4. '(input' → logprob: -14.003180503845215
    5. '   ' → logprob: -14.878180503845215
    6. ',input' → logprob: -15.003180503845215
    7. ' ' → logprob: -15.378180503845215
    8. 'list' → logprob: -16.00318145751953
    9. '=input' → logprob: -16.62818145751953
    10. 'str' → logprob: -16.87818145751953

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.702754474943504e-05
    2. '()' → logprob: -10.25003719329834
    3. '())))' → logprob: -14.00003719329834
    4. '()))' → logprob: -15.12503719329834
    5. '())' → logprob: -16.000036239624023
    6. ' ().' → logprob: -16.250036239624023
    7. '()),' → logprob: -17.000036239624023
    8. '()
' → logprob: -17.250036239624023
    9. '.readline' → logprob: -17.375036239624023
    10. '()));' → logprob: -17.375036239624023

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.049267109483480453
    2. 'strip' → logprob: -3.049267053604126
    3. 'rstrip' → logprob: -7.299267292022705
    4. '(split' → logprob: -13.674266815185547
    5. ' split' → logprob: -13.674266815185547
    6. 'read' → logprob: -14.299266815185547
    7. ')' → logprob: -15.924266815185547
    8. 'rs' → logprob: -16.049266815185547
    9. 'spl' → logprob: -16.424266815185547
    10. 'decode' → logprob: -16.924266815185547

Token 44: '()' (ID: 416)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5353089570999146
    2. '()' → logprob: -1.0353089570999146
    3. '())))' → logprob: -2.910308837890625
    4. '())' → logprob: -6.035308837890625
    5. '())),
' → logprob: -7.285308837890625
    6. '))' → logprob: -7.285308837890625
    7. ')))' → logprob: -7.660308837890625
    8. '())))
' → logprob: -8.410308837890625
    9. '()),' → logprob: -8.910308837890625
    10. '()))
' → logprob: -9.160308837890625

Token 45: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.5230644345283508
    2. '()' → logprob: -1.023064374923706
    3. '))' → logprob: -3.648064374923706
    4. ')' → logprob: -5.148064613342285
    5. '()))' → logprob: -5.273064613342285
    6. '),' → logprob: -5.898064613342285
    7. ')))' → logprob: -6.273064613342285
    8. '))),' → logprob: -6.273064613342285
    9. '())' → logprob: -6.523064613342285
    10. '()),' → logprob: -6.648064613342285

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006980192265473306
    2. ' range' → logprob: -7.375698089599609
    3. '[' → logprob: -9.87569808959961
    4. '   ' → logprob: -11.37569808959961
    5. '(range' → logprob: -12.87569808959961
    6. ' ' → logprob: -13.00069808959961
    7. '	range' → logprob: -13.50069808959961
    8. '  ' → logprob: -14.00069808959961
    9. '    ' → logprob: -15.00069808959961
    10. 'rang' → logprob: -15.25069808959961

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.660315895918757e-05
    2. '(' → logprob: -9.500076293945312
    3. 'n' → logprob: -13.375076293945312
    4. '(
' → logprob: -15.750076293945312
    5. '((' → logprob: -19.125076293945312
    6. ')n' → logprob: -19.250076293945312
    7. '(l' → logprob: -20.125076293945312
    8. ' (' → logprob: -20.500076293945312
    9. '(

' → logprob: -20.625076293945312
    10. ')' → logprob: -20.875076293945312

Token 48: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.07528487592935562
    2. '))' → logprob: -3.200284957885742
    3. ')' → logprob: -3.450284957885742
    4. '))))' → logprob: -11.575284957885742
    5. ')))
' → logprob: -12.075284957885742
    6. '),' → logprob: -12.325284957885742
    7. ')));' → logprob: -12.450284957885742
    8. ' ' → logprob: -12.575284957885742
    9. '')))' → logprob: -13.950284957885742
    10. '())))' → logprob: -14.200284957885742

Token 49: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15494902431964874
    2. '
' → logprob: -2.1549489498138428
    3. '[' → logprob: -4.654949188232422
    4. 'n' → logprob: -5.779949188232422
    5. ')
' → logprob: -6.154949188232422
    6. '\n' → logprob: -6.279949188232422
    7. 'for' → logprob: -6.779949188232422
    8. '[
' → logprob: -6.779949188232422
    9. 's' → logprob: -6.904949188232422
    10. '#' → logprob: -7.029949188232422

Token 50: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7188750505447388
    2. 'list' → logprob: -0.7188750505447388
    3. '[' → logprob: -5.218874931335449
    4. ' [' → logprob: -5.468874931335449
    5. 'sorted' → logprob: -5.593874931335449
    6. '[list' → logprob: -5.843874931335449
    7. 'chain' → logprob: -5.968874931335449
    8. ' chain' → logprob: -5.968874931335449
    9. ' sorted' → logprob: -6.468874931335449
    10. 'sum' → logprob: -7.093874931335449

Token 52: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.018357831984758377
    2. '(' → logprob: -4.018357753753662
    3. '(lambda' → logprob: -8.51835823059082
    4. '((' → logprob: -13.26835823059082
    5. '(list' → logprob: -13.39335823059082
    6. 'l' → logprob: -13.76835823059082
    7. '(
' → logprob: -14.01835823059082
    8. '```' → logprob: -14.64335823059082
    9. '(key' → logprob: -14.76835823059082
    10. '(chain' → logprob: -15.01835823059082

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2531906068325043
    2. ',key' → logprob: -1.5031906366348267
    3. ')' → logprob: -6.753190517425537
    4. 'key' → logprob: -10.378190994262695
    5. '(),' → logprob: -10.503190994262695
    6. ' ,' → logprob: -11.253190994262695
    7. '(key' → logprob: -11.503190994262695
    8. ',)' → logprob: -12.128190994262695
    9. '[key' → logprob: -13.378190994262695
    10. ' key' → logprob: -13.878190994262695

Token 54: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06224405765533447
    2. ' key' → logprob: -2.812243938446045
    3. 'lambda' → logprob: -8.687244415283203
    4. 'reverse' → logprob: -9.312244415283203
    5. ' lambda' → logprob: -12.312244415283203
    6. ',key' → logprob: -12.437244415283203
    7. '	key' → logprob: -12.937244415283203
    8. '(key' → logprob: -13.312244415283203
    9. ' reverse' → logprob: -13.562244415283203
    10. ')' → logprob: -13.687244415283203

Token 55: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011089086532592773
    2. '=' → logprob: -4.511089324951172
    3. '=len' → logprob: -10.261089324951172
    4. '=l' → logprob: -12.886089324951172
    5. 'lambda' → logprob: -13.511089324951172
    6. 'operator' → logprob: -13.636089324951172
    7. '=item' → logprob: -14.136089324951172
    8. '=int' → logprob: -15.261089324951172
    9. ' =' → logprob: -17.011089324951172
    10. '=sum' → logprob: -17.261089324951172

Token 56: 'operator' (ID: 15184)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04490284249186516
    2. 'operator' → logprob: -3.169902801513672
    3. 'len' → logprob: -7.044902801513672
    4. ' lambda' → logprob: -7.169902801513672
    5. '=lambda' → logprob: -8.794902801513672
    6. '   ' → logprob: -10.294902801513672
    7. '```' → logprob: -11.044902801513672
    8. '(lambda' → logprob: -11.419902801513672
    9. 'sum' → logprob: -11.419902801513672
    10. 'lam' → logprob: -11.919902801513672

Token 57: '.item' (ID: 15732)
  Prédit: '.item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.item' → logprob: -0.006850473582744598
    2. '.attr' → logprob: -5.006850242614746
    3. '.method' → logprob: -9.131850242614746
    4. '.' → logprob: -11.131850242614746
    5. '.operator' → logprob: -12.631850242614746
    6. '=item' → logprob: -13.256850242614746
    7. '.lt' → logprob: -14.131850242614746
    8. '.lambda' → logprob: -14.131850242614746
    9. '.mul' → logprob: -14.256850242614746
    10. '.add' → logprob: -14.256850242614746

Token 58: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -2.8921695047756657e-05
    2. 'get' → logprob: -10.500028610229492
    3. 'getitem' → logprob: -14.125028610229492
    4. '[' → logprob: -15.000028610229492
    5. 'gett' → logprob: -15.375028610229492
    6. 'item' → logprob: -17.375028610229492
    7. 'Getter' → logprob: -17.625028610229492
    8. 'attr' → logprob: -17.875028610229492
    9. 'g' → logprob: -18.000028610229492
    10. '1' → logprob: -18.750028610229492

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3253032863140106
    2. '0' → logprob: -1.325303316116333
    3. '1' → logprob: -4.575303077697754
    4. '(-' → logprob: -6.700303077697754
    5. '2' → logprob: -8.325303077697754
    6. '[' → logprob: -9.950303077697754
    7. '3' → logprob: -10.575303077697754
    8. ')' → logprob: -11.200303077697754
    9. '(len' → logprob: -11.325303077697754
    10. '```' → logprob: -11.325303077697754

Token 60: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29166507720947266
    2. '1' → logprob: -1.5416650772094727
    3. '-' → logprob: -3.7916650772094727
    4. '2' → logprob: -4.166665077209473
    5. '3' → logprob: -8.041665077209473
    6. ' ' → logprob: -8.166665077209473
    7. ' -' → logprob: -8.791665077209473
    8. '[' → logprob: -10.041665077209473
    9. '4' → logprob: -10.291665077209473
    10. '5' → logprob: -11.604165077209473

Token 61: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03132125362753868
    2. ',' → logprob: -3.9063212871551514
    3. '),' → logprob: -4.656321048736572
    4. ')' → logprob: -6.906321048736572
    5. ' ))' → logprob: -9.15632152557373
    6. '))
' → logprob: -10.15632152557373
    7. ')))' → logprob: -10.65632152557373
    8. '0' → logprob: -11.90632152557373
    9. '1' → logprob: -12.03132152557373
    10. ' ,' → logprob: -12.15632152557373

Token 62: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6213545203208923
    2. ',' → logprob: -1.496354579925537
    3. 'for' → logprob: -2.871354579925537
    4. '#' → logprob: -2.996354579925537
    5. ',
' → logprob: -2.996354579925537
    6. '[' → logprob: -4.246354579925537
    7. '
' → logprob: -4.746354579925537
    8. 'max' → logprob: -4.871354579925537
    9. 'n' → logprob: -5.621354579925537
    10. ':' → logprob: -5.746354579925537

Token 63: ' verdict' (ID: 75722)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.7107495069503784
    2. ' find' → logprob: -2.085749626159668
    3. ' main' → logprob: -2.085749626159668
    4. ' merge' → logprob: -2.210749626159668
    5. ' solve' → logprob: -2.585749626159668
    6. ' chain' → logprob: -2.960749626159668
    7. ' accumulate' → logprob: -3.085749626159668
    8. ' get' → logprob: -3.460749626159668
    9. ' longest' → logprob: -3.960749626159668
    10. ' calculate' → logprob: -3.960749626159668

Token 64: '(tasks' (ID: 148979)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.500327467918396
    2. '(s' → logprob: -1.875327467918396
    3. '(l' → logprob: -1.875327467918396
    4. '(a' → logprob: -3.5003275871276855
    5. '():' → logprob: -4.2503275871276855
    6. ' (' → logprob: -5.0003275871276855
    7. '(x' → logprob: -5.3753275871276855
    8. '(p' → logprob: -5.3753275871276855
    9. '(line' → logprob: -5.3753275871276855
    10. '((' → logprob: -5.5003275871276855

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02477661520242691
    2. ',' → logprob: -3.8997766971588135
    3. '):
' → logprob: -5.649776458740234
    4. ')' → logprob: -8.149776458740234
    5. '[' → logprob: -8.899776458740234
    6. '[]):' → logprob: -9.274776458740234
    7. ':' → logprob: -9.524776458740234
    8. ')):' → logprob: -10.524776458740234
    9. '):
' → logprob: -11.024776458740234
    10. ' ):' → logprob: -11.774776458740234

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020930597558617592
    2. '<|end|>' → logprob: -5.020930767059326
    3. '    
' → logprob: -5.770930767059326
    4. ' ' → logprob: -6.270930767059326
    5. ' return' → logprob: -6.270930767059326
    6. '	return' → logprob: -6.770930767059326
    7. '    ' → logprob: -6.770930767059326
    8. ' 
' → logprob: -6.895930767059326
    9. '(' → logprob: -7.395930767059326
    10. '<|end|>' → logprob: -7.645930767059326

Token 67: ' s' (ID: 265)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.2403463125228882
    2. ' time' → logprob: -1.3653463125228882
    3. 'time' → logprob: -2.6153464317321777
    4. '   ' → logprob: -3.1153464317321777
    5. ' tasks' → logprob: -3.1153464317321777
    6. ' acc' → logprob: -3.4903464317321777
    7. ' prev' → logprob: -3.4903464317321777
    8. ' last' → logprob: -3.6153464317321777
    9. ' cur' → logprob: -3.7403464317321777
    10. 'current' → logprob: -3.8653464317321777

Token 68: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2745518386363983
    2. '=' → logprob: -1.7745518684387207
    3. ' =' → logprob: -2.7745518684387207
    4. ' ' → logprob: -5.899551868438721
    5. '   ' → logprob: -6.899551868438721
    6. ',' → logprob: -7.024551868438721
    7. 't' → logprob: -7.149551868438721
    8. 'u' → logprob: -7.774551868438721
    9. '=sum' → logprob: -7.774551868438721
    10. 'core' → logprob: -8.274551391601562

Token 69: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028849374502897263
    2. ' ' → logprob: -3.6538493633270264
    3. 'tasks' → logprob: -6.4038496017456055
    4. ' tasks' → logprob: -8.653849601745605
    5. '[]
' → logprob: -8.778849601745605
    6. 'set' → logprob: -9.028849601745605
    7. '[]' → logprob: -9.028849601745605
    8. ' set' → logprob: -9.903849601745605
    9. '[' → logprob: -10.028849601745605
    10. ' []' → logprob: -10.028849601745605

Token 70: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00034511767444200814
    2. 'acc' → logprob: -8.250345230102539
    3. '(chain' → logprob: -10.000345230102539
    4. '(ac' → logprob: -10.625345230102539
    5. '(' → logprob: -11.875345230102539
    6. '(map' → logprob: -12.750345230102539
    7. '(tasks' → logprob: -14.125345230102539
    8. '(it' → logprob: -14.375345230102539
    9. '	acc' → logprob: -14.500345230102539
    10. ' accumulate' → logprob: -15.000345230102539

Token 71: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00038682064041495323
    2. 'tasks' → logprob: -8.125387191772461
    3. 'um' → logprob: -10.125387191772461
    4. 'ulate' → logprob: -10.500387191772461
    5. 'umul' → logprob: -12.250387191772461
    6. 'acc' → logprob: -12.625387191772461
    7. ' tasks' → logprob: -12.750387191772461
    8. 'ulum' → logprob: -12.875387191772461
    9. 'ul' → logprob: -13.625387191772461
    10. 'umulator' → logprob: -13.875387191772461

Token 72: '(map' (ID: 16946)
  Prédit: '(tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tasks' → logprob: -0.40831002593040466
    2. '(operator' → logprob: -1.533310055732727
    3. '(lambda' → logprob: -2.9083099365234375
    4. '(map' → logprob: -3.4083099365234375
    5. '(chain' → logprob: -3.6583099365234375
    6. '(task' → logprob: -6.0333099365234375
    7. '(' → logprob: -6.6583099365234375
    8. '([' → logprob: -7.4083099365234375
    9. '(t' → logprob: -8.158309936523438
    10. '(op' → logprob: -8.158309936523438

Token 73: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.00437897490337491
    2. '(lambda' → logprob: -5.504378795623779
    3. 'operator' → logprob: -8.254379272460938
    4. '(' → logprob: -10.504379272460938
    5. '(op' → logprob: -11.754379272460938
    6. '	operator' → logprob: -13.254379272460938
    7. '(int' → logprob: -13.879379272460938
    8. 'lambda' → logprob: -14.004379272460938
    9. '```' → logprob: -15.379379272460938
    10. ')' → logprob: -15.504379272460938

Token 74: '.item' (ID: 15732)
  Prédit: '.item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.item' → logprob: -0.005973111838102341
    2. '.operator' → logprob: -6.5059733390808105
    3. '=item' → logprob: -7.0059733390808105
    4. '.add' → logprob: -7.1309733390808105
    5. 'getitem' → logprob: -7.2559733390808105
    6. ':item' → logprob: -7.2559733390808105
    7. 'item' → logprob: -7.7559733390808105
    8. '.method' → logprob: -8.630972862243652
    9. '.neg' → logprob: -8.755972862243652
    10. '.attr' → logprob: -9.255972862243652

Token 75: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0008307131356559694
    2. 'get' → logprob: -7.50083065032959
    3. 'item' → logprob: -8.37583065032959
    4. 'attr' → logprob: -10.87583065032959
    5. 'getitem' → logprob: -11.50083065032959
    6. '   ' → logprob: -12.25083065032959
    7. '=item' → logprob: -12.25083065032959
    8. '  ' → logprob: -13.25083065032959
    9. ' ' → logprob: -13.75083065032959
    10. 'setter' → logprob: -14.75083065032959

Token 76: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.435139898210764e-05
    2. '0' → logprob: -9.500083923339844
    3. '[' → logprob: -13.125083923339844
    4. ' (' → logprob: -13.125083923339844
    5. '1' → logprob: -13.875083923339844
    6. '   ' → logprob: -14.000083923339844
    7. '(lambda' → logprob: -14.000083923339844
    8. ',' → logprob: -14.375083923339844
    9. '```' → logprob: -14.375083923339844
    10. '
' → logprob: -15.375083923339844

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006005940958857536
    2. '1' → logprob: -5.256005764007568
    3. ' ' → logprob: -7.631005764007568
    4. '2' → logprob: -8.756006240844727
    5. '   ' → logprob: -9.256006240844727
    6. '  ' → logprob: -12.006006240844727
    7. '    ' → logprob: -12.193506240844727
    8. '	' → logprob: -12.256006240844727
    9. '3' → logprob: -12.693506240844727
    10. '    
' → logprob: -12.818506240844727

Token 78: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002233245177194476
    2. ',' → logprob: -8.750223159790039
    3. ')' → logprob: -10.500223159790039
    4. '   ' → logprob: -11.500223159790039
    5. ' ),' → logprob: -11.875223159790039
    6. ',),' → logprob: -12.250223159790039
    7. '),
' → logprob: -13.125223159790039
    8. '  ' → logprob: -13.250223159790039
    9. ')))' → logprob: -13.375223159790039
    10. '_),' → logprob: -13.500223159790039

Token 79: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.006737392861396074
    2. ' tasks' → logprob: -5.006737232208252
    3. '(tasks' → logprob: -10.88173770904541
    4. '   ' → logprob: -13.38173770904541
    5. 't' → logprob: -13.75673770904541
    6. '  ' → logprob: -15.50673770904541
    7. 'task' → logprob: -15.63173770904541
    8. '.tasks' → logprob: -16.006736755371094
    9. ' ' → logprob: -16.506736755371094
    10. 'l' → logprob: -17.756736755371094

Token 80: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1504489928483963
    2. '))' → logprob: -2.27544903755188
    3. '),' → logprob: -4.275448799133301
    4. ',' → logprob: -4.525448799133301
    5. ')))
' → logprob: -4.525448799133301
    6. '))))' → logprob: -8.1504487991333
    7. '))
' → logprob: -8.4004487991333
    8. '   ' → logprob: -8.6504487991333
    9. ')))

' → logprob: -9.4004487991333
    10. ')));' → logprob: -9.5254487991333

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12006135284900665
    2. '
' → logprob: -2.7450613975524902
    3. ' for' → logprob: -3.8700613975524902
    4. ')' → logprob: -4.74506139755249
    5. ',' → logprob: -5.12006139755249
    6. '    
' → logprob: -5.49506139755249
    7. 'for' → logprob: -6.12006139755249
    8. '  
' → logprob: -6.87006139755249
    9. ')
' → logprob: -7.24506139755249
    10. ' if' → logprob: -7.37006139755249

Token 82: ' checks' (ID: 22097)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15690770745277405
    2. '   ' → logprob: -2.406907796859741
    3. 'for' → logprob: -3.781907796859741
    4. ')' → logprob: -4.406907558441162
    5. '
' → logprob: -4.531907558441162
    6. ' ' → logprob: -5.906907558441162
    7. ')
' → logprob: -6.781907558441162
    8. '  
' → logprob: -6.781907558441162
    9. '    
' → logprob: -7.281907558441162
    10. ',' → logprob: -7.281907558441162

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026338964700698853
    2. '=' → logprob: -3.651339054107666
    3. ' ' → logprob: -11.776338577270508
    4. ',' → logprob: -12.276338577270508
    5. '=[]' → logprob: -12.526338577270508
    6. ')' → logprob: -12.651338577270508
    7. ':' → logprob: -12.776338577270508
    8. ' ' → logprob: -12.776338577270508
    9. '   ' → logprob: -12.901338577270508
    10. '(' → logprob: -13.526338577270508

Token 84: ' map' (ID: 4014)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.349992275238037
    2. '[' → logprob: -1.599992275238037
    3. ' list' → logprob: -1.724992275238037
    4. 'list' → logprob: -1.849992275238037
    5. ' all' → logprob: -2.724992275238037
    6. '[list' → logprob: -3.474992275238037
    7. 'all' → logprob: -3.599992275238037
    8. '[s' → logprob: -4.099992275238037
    9. ' map' → logprob: -4.349992275238037
    10. '[(' → logprob: -4.599992275238037

Token 85: '(lambda' (ID: 43341)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.5533214807510376
    2. '(lambda' → logprob: -0.9283214807510376
    3. '(' → logprob: -3.678321361541748
    4. 'operator' → logprob: -5.553321361541748
    5. ' operator' → logprob: -8.303321838378906
    6. 'lambda' → logprob: -9.178321838378906
    7. '2' → logprob: -9.428321838378906
    8. ' (' → logprob: -9.803321838378906
    9. '(
' → logprob: -10.178321838378906
    10. '	operator' → logprob: -10.803321838378906

Token 86: ' pair' (ID: 10610)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.893983781337738
    2. 'x' → logprob: -2.268983840942383
    3. ' i' → logprob: -2.268983840942383
    4. ' idx' → logprob: -2.393983840942383
    5. ' task' → logprob: -2.643983840942383
    6. ' s' → logprob: -2.643983840942383
    7. ' lambda' → logprob: -3.643983840942383
    8. 'i' → logprob: -3.893983840942383
    9. 's' → logprob: -4.393983840942383
    10. ':' → logprob: -4.393983840942383

Token 87: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.180879816180095e-05
    2. ',' → logprob: -11.125051498413086
    3. ' :' → logprob: -11.125051498413086
    4. ':
' → logprob: -11.375051498413086
    5. 's' → logprob: -12.500051498413086
    6. '=lambda' → logprob: -13.000051498413086
    7. ':(' → logprob: -13.750051498413086
    8. ':list' → logprob: -13.875051498413086
    9. ':s' → logprob: -14.375051498413086
    10. '=' → logprob: -14.625051498413086

Token 88: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.6398405432701111
    2. 'operator' → logprob: -1.6398406028747559
    3. ' pair' → logprob: -1.8898406028747559
    4. ' operator' → logprob: -2.389840602874756
    5. '   ' → logprob: -4.889840602874756
    6. ' s' → logprob: -5.139840602874756
    7. '(pair' → logprob: -5.264840602874756
    8. 's' → logprob: -5.389840602874756
    9. 'lambda' → logprob: -5.889840602874756
    10. ' lambda' → logprob: -6.389840602874756

Token 89: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5022441744804382
    2. '[' → logprob: -1.002244234085083
    3. '(' → logprob: -4.877243995666504
    4. '(operator' → logprob: -5.377243995666504
    5. 's' → logprob: -5.627243995666504
    6. ',' → logprob: -6.252243995666504
    7. 'operator' → logprob: -6.502243995666504
    8. ' operator' → logprob: -6.752243995666504
    9. ' (' → logprob: -7.002243995666504
    10. ' :' → logprob: -7.002243995666504

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03212883323431015
    2. '1' → logprob: -3.7821288108825684
    3. 'operator' → logprob: -5.532128810882568
    4. 's' → logprob: -5.907128810882568
    5. '(' → logprob: -6.907128810882568
    6. '[' → logprob: -7.282128810882568
    7. '(operator' → logprob: -8.907129287719727
    8. ' ' → logprob: -9.157129287719727
    9. ' operator' → logprob: -9.782129287719727
    10. 'sum' → logprob: -10.032129287719727

Token 91: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.37744656205177307
    2. '<=' → logprob: -1.8774465322494507
    3. ' >=' → logprob: -2.2524466514587402
    4. '>=' → logprob: -3.6274466514587402
    5. ',' → logprob: -4.62744665145874
    6. '[' → logprob: -5.00244665145874
    7. '+' → logprob: -5.62744665145874
    8. ' +' → logprob: -6.12744665145874
    9. ' <' → logprob: -6.25244665145874
    10. ' >' → logprob: -6.75244665145874

Token 92: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6847942471504211
    2. ' <=' → logprob: -1.1847941875457764
    3. '<=' → logprob: -2.1847941875457764
    4. ' >=' → logprob: -4.3097944259643555
    5. '[' → logprob: -4.8097944259643555
    6. '>=' → logprob: -4.8097944259643555
    7. 's' → logprob: -5.3097944259643555
    8. '(s' → logprob: -5.4347944259643555
    9. '(' → logprob: -5.4347944259643555
    10. ':' → logprob: -5.5597944259643555

Token 93: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.16033510863780975
    2. ' pair' → logprob: -1.9103350639343262
    3. '(pair' → logprob: -10.285335540771484
    4. '   ' → logprob: -10.535335540771484
    5. '  ' → logprob: -10.660335540771484
    6. ' ' → logprob: -10.785335540771484
    7. '<pair' → logprob: -13.410335540771484
    8. '    ' → logprob: -13.410335540771484
    9. '
' → logprob: -14.535335540771484
    10. '     ' → logprob: -15.035335540771484

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004641711246222258
    2. '1' → logprob: -5.379641532897949
    3. ' [' → logprob: -12.50464153289795
    4. ',' → logprob: -12.62964153289795
    5. '-' → logprob: -13.50464153289795
    6. 's' → logprob: -13.50464153289795
    7. '(' → logprob: -13.50464153289795
    8. '[
' → logprob: -13.50464153289795
    9. '][' → logprob: -13.75464153289795
    10. ' ' → logprob: -14.12964153289795

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010223194840364158
    2. '[' → logprob: -10.125102043151855
    3. '0' → logprob: -11.125102043151855
    4. ' ' → logprob: -11.250102043151855
    5. 's' → logprob: -11.375102043151855
    6. '-' → logprob: -12.062602043151855
    7. ')' → logprob: -12.687602043151855
    8. ']' → logprob: -12.750102043151855
    9. '(' → logprob: -13.750102043151855
    10. '```' → logprob: -13.937602043151855

Token 96: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032572117634117603
    2. ' ,' → logprob: -6.5032572746276855
    3. ',s' → logprob: -6.6282572746276855
    4. 's' → logprob: -8.378256797790527
    5. '   ' → logprob: -10.378256797790527
    6. ',l' → logprob: -10.378256797790527
    7. ',
' → logprob: -10.753256797790527
    8. '),' → logprob: -10.878256797790527
    9. ',p' → logprob: -11.628256797790527
    10. '  ' → logprob: -11.753256797790527

Token 97: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.20182785391807556
    2. ' zip' → logprob: -1.701827883720398
    3. '   ' → logprob: -8.451828002929688
    4. '(zip' → logprob: -9.451828002929688
    5. 'enumer' → logprob: -10.076828002929688
    6. ' enumerate' → logprob: -10.201828002929688
    7. 'list' → logprob: -11.451828002929688
    8. 's' → logprob: -12.076828002929688
    9. 'chain' → logprob: -12.201828002929688
    10. '    ' → logprob: -12.451828002929688

Token 98: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00021390743495430797
    2. 's' → logprob: -8.500213623046875
    3. '(' → logprob: -11.750213623046875
    4. '(check' → logprob: -14.500213623046875
    5. '(l' → logprob: -14.500213623046875
    6. ' (' → logprob: -15.000213623046875
    7. '(list' → logprob: -15.125213623046875
    8. '   ' → logprob: -15.250213623046875
    9. '(chain' → logprob: -15.500213623046875
    10. '(
' → logprob: -16.500213623046875

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022559337317943573
    2. ',l' → logprob: -4.14755916595459
    3. '(l' → logprob: -6.02255916595459
    4. '(' → logprob: -6.89755916595459
    5. 'l' → logprob: -7.14755916595459
    6. '(tasks' → logprob: -7.39755916595459
    7. ' ,' → logprob: -7.52255916595459
    8. ',[' → logprob: -8.52255916595459
    9. ',(' → logprob: -8.64755916595459
    10. '(chain' → logprob: -8.89755916595459

Token 100: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.018746675923466682
    2. '(map' → logprob: -4.643746852874756
    3. ' map' → logprob: -5.143746852874756
    4. '   ' → logprob: -6.018746852874756
    5. 'chain' → logprob: -8.018746376037598
    6. '  ' → logprob: -9.143746376037598
    7. ' ' → logprob: -9.893746376037598
    8. '	map' → logprob: -10.018746376037598
    9. 'list' → logprob: -10.768746376037598
    10. '    ' → logprob: -11.143746376037598

Token 101: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.000263481488218531
    2. 'operator' → logprob: -8.250263214111328
    3. '(' → logprob: -13.875263214111328
    4. '	operator' → logprob: -14.000263214111328
    5. ' operator' → logprob: -14.750263214111328
    6. '   ' → logprob: -17.250263214111328
    7. '  ' → logprob: -17.875263214111328
    8. '.operator' → logprob: -18.875263214111328
    9. '(lambda' → logprob: -19.000263214111328
    10. '(op' → logprob: -19.875263214111328

Token 102: '.item' (ID: 15732)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.06016889587044716
    2. 'item' → logprob: -3.310168981552124
    3. '.operator' → logprob: -4.435168743133545
    4. '  ' → logprob: -5.935168743133545
    5. '   ' → logprob: -6.185168743133545
    6. '(operator' → logprob: -6.185168743133545
    7. '	operator' → logprob: -7.185168743133545
    8. ' ' → logprob: -7.310168743133545
    9. ' operator' → logprob: -7.435168743133545
    10. '.item' → logprob: -7.935168743133545

Token 103: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0012741618556901813
    2. 'item' → logprob: -7.001274108886719
    3. 'getitem' → logprob: -8.751274108886719
    4. 'caller' → logprob: -9.126274108886719
    5. 'setter' → logprob: -10.876274108886719
    6. 'get' → logprob: -11.501274108886719
    7. 'tem' → logprob: -11.501274108886719
    8. '=item' → logprob: -11.626274108886719
    9. 'attr' → logprob: -11.876274108886719
    10. 'tag' → logprob: -12.001274108886719

Token 104: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011613584123551846
    2. '1' → logprob: -4.511613368988037
    3. ',' → logprob: -8.261613845825195
    4. ' (' → logprob: -9.511613845825195
    5. '               ' → logprob: -10.261613845825195
    6. '           ' → logprob: -10.386613845825195
    7. '   ' → logprob: -10.511613845825195
    8. ' ' → logprob: -10.761613845825195
    9. '       ' → logprob: -11.261613845825195
    10. '     ' → logprob: -11.386613845825195

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.875036239624023
    4. ',' → logprob: -16.250036239624023
    5. '  ' → logprob: -16.250036239624023
    6. '    ' → logprob: -16.875036239624023
    7. '           ' → logprob: -17.000036239624023
    8. '                   ' → logprob: -17.000036239624023
    9. '2' → logprob: -17.250036239624023
    10. '```' → logprob: -17.375036239624023

Token 106: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004972120281308889
    2. ',l' → logprob: -5.379971981048584
    3. ',t' → logprob: -8.879972457885742
    4. '),' → logprob: -9.254972457885742
    5. '(tasks' → logprob: -9.629972457885742
    6. ')))' → logprob: -11.879972457885742
    7. '(l' → logprob: -12.004972457885742
    8. 'l' → logprob: -12.379972457885742
    9. ')' → logprob: -12.379972457885742
    10. '```' → logprob: -12.629972457885742

Token 107: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.12849389016628265
    2. ' tasks' → logprob: -2.1284937858581543
    3. '(tasks' → logprob: -6.503493785858154
    4. '   ' → logprob: -10.628494262695312
    5. 'l' → logprob: -10.878494262695312
    6. ' ' → logprob: -11.878494262695312
    7. '.tasks' → logprob: -12.503494262695312
    8. 'task' → logprob: -12.628494262695312
    9. 't' → logprob: -12.878494262695312
    10. '  ' → logprob: -13.128494262695312

Token 108: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.003919768612831831
    2. ')))
' → logprob: -5.75391960144043
    3. '))' → logprob: -7.75391960144043
    4. ')' → logprob: -8.50391960144043
    5. '))))' → logprob: -10.37891960144043
    6. ' ' → logprob: -10.62891960144043
    7. ')))

' → logprob: -10.75391960144043
    8. '())))' → logprob: -11.00391960144043
    9. ')));' → logprob: -11.87891960144043
    10. ')))
' → logprob: -13.12891960144043

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41527992486953735
    2. 'return' → logprob: -1.1652798652648926
    3. ' return' → logprob: -3.6652798652648926
    4. '
' → logprob: -7.665279865264893
    5. 'for' → logprob: -7.665279865264893
    6. ' for' → logprob: -8.29028034210205
    7. ' checks' → logprob: -8.41528034210205
    8. 'def' → logprob: -8.54028034210205
    9. 'checks' → logprob: -8.54028034210205
    10. 'if' → logprob: -8.54028034210205

Token 110: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21487095952033997
    2. 'if' → logprob: -2.2148709297180176
    3. '   ' → logprob: -2.7148709297180176
    4. ' return' → logprob: -4.214870929718018
    5. ' if' → logprob: -5.964870929718018
    6. 'all' → logprob: -7.964870929718018
    7. 'for' → logprob: -9.214871406555176
    8. ' all' → logprob: -9.964871406555176
    9. 'def' → logprob: -9.964871406555176
    10. '
' → logprob: -10.214871406555176

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20331868529319763
    2. ':
' → logprob: -1.82831871509552
    3. '       ' → logprob: -4.0783185958862305
    4. '   ' → logprob: -5.0783185958862305
    5. ' :' → logprob: -10.32831859588623
    6. ':return' → logprob: -10.82831859588623
    7. ' :
' → logprob: -11.20331859588623
    8. '    ' → logprob: -11.32831859588623
    9. '):
' → logprob: -11.45331859588623
    10. ' ' → logprob: -11.57831859588623

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009161396883428097
    2. '   ' → logprob: -4.884161472320557
    3. ' next' → logprob: -7.259161472320557
    4. ' return' → logprob: -8.134160995483398
    5. '
' → logprob: -8.259160995483398
    6. 'next' → logprob: -9.009160995483398
    7. ' if' → logprob: -9.259160995483398
    8. 'return' → logprob: -11.134160995483398
    9. ':
' → logprob: -11.134160995483398
    10. '    ' → logprob: -11.509160995483398

Token 113: ' reduce' (ID: 10389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3410760462284088
    2. ' next' → logprob: -1.7160760164260864
    3. '
' → logprob: -2.841076135635376
    4. 'next' → logprob: -3.716076135635376
    5. '   ' → logprob: -3.841076135635376
    6. ' if' → logprob: -6.341075897216797
    7. '           ' → logprob: -6.966075897216797
    8. '    ' → logprob: -7.966075897216797
    9. 'if' → logprob: -8.091075897216797
    10. ' return' → logprob: -8.216075897216797

Token 114: '(lambda' (ID: 43341)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.01816949062049389
    2. '(lambda' → logprob: -4.018169403076172
    3. '((' → logprob: -11.768169403076172
    4. '(' → logprob: -12.268169403076172
    5. 'operator' → logprob: -13.143169403076172
    6. '   ' → logprob: -13.268169403076172
    7. '(op' → logprob: -13.518169403076172
    8. '```' → logprob: -13.768169403076172
    9. '(bool' → logprob: -15.018169403076172
    10. ')' → logprob: -15.393169403076172

Token 115: ' _,' (ID: 18042)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.15029770135879517
    2. 'lambda' → logprob: -2.4002976417541504
    3. '   ' → logprob: -3.4002976417541504
    4. '(operator' → logprob: -4.77529764175415
    5. ' operator' → logprob: -5.40029764175415
    6. '(lambda' → logprob: -6.52529764175415
    7. ' ' → logprob: -8.025298118591309
    8. 'x' → logprob: -8.525298118591309
    9. 'op' → logprob: -8.525298118591309
    10. ' lambda' → logprob: -8.775298118591309

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25120383501052856
    2. '__' → logprob: -2.251203775405884
    3. ' __' → logprob: -3.126203775405884
    4. ' x' → logprob: -3.626203775405884
    5. 'y' → logprob: -3.876203775405884
    6. 'valid' → logprob: -4.251204013824463
    7. ' y' → logprob: -5.876204013824463
    8. 'fail' → logprob: -6.251204013824463
    9. 'a' → logprob: -6.376204013824463
    10. '__:' → logprob: -6.501204013824463

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007798729930073023
    2. ',' → logprob: -4.882798671722412
    3. ' :' → logprob: -8.63279914855957
    4. '   ' → logprob: -12.75779914855957
    5. '1' → logprob: -13.25779914855957
    6. '0' → logprob: -13.50779914855957
    7. '=' → logprob: -13.63279914855957
    8. ' ,' → logprob: -13.88279914855957
    9. ':
' → logprob: -14.00779914855957
    10. ':x' → logprob: -14.00779914855957

Token 118: ' x' (ID: 1215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008292567916214466
    2. ' _' → logprob: -5.0082926750183105
    3. 'x' → logprob: -7.2582926750183105
    4. '_[' → logprob: -8.258292198181152
    5. ' x' → logprob: -8.508292198181152
    6. 'operator' → logprob: -9.383292198181152
    7. '_=' → logprob: -10.008292198181152
    8. '_x' → logprob: -10.258292198181152
    9. '_
' → logprob: -10.258292198181152
    10. '_*' → logprob: -10.383292198181152

Token 119: ' if' (ID: 538)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6802869439125061
    2. ' and' → logprob: -0.9302869439125061
    3. ' if' → logprob: -2.9302868843078613
    4. ' or' → logprob: -3.4302868843078613
    5. 'if' → logprob: -4.930286884307861
    6. ' ' → logprob: -5.930286884307861
    7. 'or' → logprob: -6.055286884307861
    8. '[' → logprob: -7.680286884307861
    9. '   ' → logprob: -8.68028736114502
    10. ',' → logprob: -8.68028736114502

Token 120: ' x' (ID: 1215)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8429998755455017
    2. 'not' → logprob: -1.0929999351501465
    3. '_' → logprob: -1.4679999351501465
    4. 'x' → logprob: -6.2179999351501465
    5. ' x' → logprob: -6.7179999351501465
    6. '_not' → logprob: -7.7179999351501465
    7. ' _' → logprob: -8.967999458312988
    8. '(not' → logprob: -9.592999458312988
    9. '   ' → logprob: -9.717999458312988
    10. ' ' → logprob: -10.842999458312988

Token 121: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3946349322795868
    2. ' else' → logprob: -1.2696349620819092
    3. '==' → logprob: -3.144634962081909
    4. ' is' → logprob: -7.14463472366333
    5. ' ==' → logprob: -7.26963472366333
    6. 'is' → logprob: -8.519635200500488
    7. ' ' → logprob: -8.769635200500488
    8. '   ' → logprob: -9.894635200500488
    9. '    ' → logprob: -10.519635200500488
    10. '       ' → logprob: -10.644635200500488

Token 122: ' (_' (ID: 11350)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08919528871774673
    2. '(False' → logprob: -2.5891952514648438
    3. ' False' → logprob: -4.839195251464844
    4. '(' → logprob: -7.339195251464844
    5. 'None' → logprob: -7.964195251464844
    6. 'Assertion' → logprob: -7.964195251464844
    7. 'Value' → logprob: -8.964195251464844
    8. ' ' → logprob: -8.964195251464844
    9. '(_' → logprob: -8.964195251464844
    10. 'Exception' → logprob: -8.964195251464844

Token 123: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1159471273422241
    2. '),' → logprob: -1.6159471273422241
    3. 'raise' → logprob: -1.6159471273422241
    4. ' for' → logprob: -2.2409472465515137
    5. '[' → logprob: -2.6159472465515137
    6. ':' → logprob: -3.6159472465515137
    7. ' ,' → logprob: -4.615947246551514
    8. ')' → logprob: -4.990947246551514
    9. '):' → logprob: -5.240947246551514
    10. '   ' → logprob: -5.615947246551514

Token 124: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008513865992426872
    2. '()' → logprob: -5.008513927459717
    3. ' ()' → logprob: -7.508513927459717
    4. ' _' → logprob: -7.633513927459717
    5. 'False' → logprob: -7.758513927459717
    6. '[]' → logprob: -8.758513450622559
    7. '().' → logprob: -10.258513450622559
    8. ' False' → logprob: -10.633513450622559
    9. '_x' → logprob: -10.758513450622559
    10. 'True' → logprob: -11.008513450622559

Token 125: ' in' (ID: 306)
  Prédit: ').__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').__' → logprob: -0.7026403546333313
    2. 'in' → logprob: -1.3276402950286865
    3. ').' → logprob: -2.2026402950286865
    4. ' in' → logprob: -2.4526402950286865
    5. ' ()' → logprob: -3.7026402950286865
    6. ' ' → logprob: -5.327640533447266
    7. '()' → logprob: -5.952640533447266
    8. '()).' → logprob: -6.077640533447266
    9. '   ' → logprob: -6.452640533447266
    10. '().__' → logprob: -6.827640533447266

Token 126: ' ()' (ID: 2869)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2872551679611206
    2. '()' → logprob: -1.4122551679611206
    3. '[' → logprob: -5.91225528717041
    4. '()).' → logprob: -6.66225528717041
    5. ' ()' → logprob: -7.03725528717041
    6. '()[' → logprob: -7.28725528717041
    7. 'range' → logprob: -8.78725528717041
    8. '().' → logprob: -9.91225528717041
    9. ').' → logprob: -10.03725528717041
    10. '[]
' → logprob: -10.16225528717041

Token 127: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0008611999801360071
    2. ').__' → logprob: -7.125861167907715
    3. ' ).' → logprob: -10.500861167907715
    4. '.' → logprob: -11.625861167907715
    5. '           ' → logprob: -12.750861167907715
    6. 'raise' → logprob: -13.375861167907715
    7. '       ' → logprob: -13.500861167907715
    8. '                               ' → logprob: -13.500861167907715
    9. '()).' → logprob: -13.625861167907715
    10. '),' → logprob: -13.625861167907715

Token 128: 'throw' (ID: 12818)
  Prédit: 'throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throw' → logprob: -0.0006203425000421703
    2. '   ' → logprob: -8.625619888305664
    3. ' throw' → logprob: -9.125619888305664
    4. '           ' → logprob: -9.375619888305664
    5. '       ' → logprob: -9.750619888305664
    6. '    ' → logprob: -9.750619888305664
    7. '     ' → logprob: -10.375619888305664
    8. '               ' → logprob: -10.750619888305664
    9. '  ' → logprob: -11.375619888305664
    10. '      ' → logprob: -11.500619888305664

Token 129: '(System' (ID: 16432)
  Prédit: 'Assertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Assertion' → logprob: -0.06868802011013031
    2. 'Exception' → logprob: -4.193687915802002
    3. 'Stop' → logprob: -4.318687915802002
    4. 'Value' → logprob: -4.443687915802002
    5. '(' → logprob: -4.818687915802002
    6. 'Timeout' → logprob: -5.318687915802002
    7. ' Assertion' → logprob: -5.318687915802002
    8. 'Runtime' → logprob: -5.568687915802002
    9. '(Exception' → logprob: -6.818687915802002
    10. ' ' → logprob: -7.443687915802002

Token 130: 'Exit' (ID: 23779)
  Prédit: 'Exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exit' → logprob: -3.547789674485102e-05
    2. 'Error' → logprob: -10.250035285949707
    3. '_exit' → logprob: -18.500036239624023
    4. 'Check' → logprob: -18.500036239624023
    5. 'Stop' → logprob: -18.625036239624023
    6. 'exit' → logprob: -18.625036239624023
    7. '

' → logprob: -18.625036239624023
    8. '
' → logprob: -18.750036239624023
    9. '.exit' → logprob: -19.000036239624023
    10. 'Failure' → logprob: -19.375036239624023

Token 131: '(print' (ID: 110391)
  Prédit: '()),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.642413318157196
    2. '(' → logprob: -0.767413318157196
    3. '()' → logprob: -4.892413139343262
    4. '())' → logprob: -6.642413139343262
    5. '()),
' → logprob: -7.767413139343262
    6. '(True' → logprob: -8.892413139343262
    7. '()))' → logprob: -9.267413139343262
    8. '),' → logprob: -9.767413139343262
    9. '(-' → logprob: -9.767413139343262
    10. '(False' → logprob: -10.017413139343262

Token 132: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.13063383102417
    2. '(False' → logprob: -1.38063383102417
    3. '(-' → logprob: -1.50563383102417
    4. '(' → logprob: -1.88063383102417
    5. '('' → logprob: -3.00563383102417
    6. '(True' → logprob: -7.25563383102417
    7. '-' → logprob: -7.50563383102417
    8. '("-' → logprob: -9.130634307861328
    9. '(false' → logprob: -9.630634307861328
    10. '(":' → logprob: -9.880634307861328

Token 133: 'No' (ID: 3160)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0008009672164917
    2. '-' → logprob: -1.5008009672164917
    3. ''' → logprob: -2.0008010864257812
    4. '"' → logprob: -2.7508010864257812
    5. '("' → logprob: -2.8758010864257812
    6. 'No' → logprob: -2.8758010864257812
    7. '"No' → logprob: -3.0008010864257812
    8. ':-' → logprob: -5.000801086425781
    9. '(-' → logprob: -5.000801086425781
    10. 'NO' → logprob: -5.375801086425781

Token 134: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.37343162298202515
    2. '')),' → logprob: -1.74843168258667
    3. '')))' → logprob: -1.99843168258667
    4. '')))
' → logprob: -7.49843168258667
    5. '',' → logprob: -8.123431205749512
    6. ''))
' → logprob: -8.248431205749512
    7. '('' → logprob: -8.373431205749512
    8. ''' → logprob: -8.623431205749512
    9. '')),
' → logprob: -9.373431205749512
    10. '()' → logprob: -9.373431205749512

Token 135: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1273999661207199
    2. '       ' → logprob: -3.3773999214172363
    3. ')),' → logprob: -3.5023999214172363
    4. '()),' → logprob: -3.6273999214172363
    5. '   ' → logprob: -3.8773999214172363
    6. '           ' → logprob: -5.752399921417236
    7. ')' → logprob: -6.252399921417236
    8. '()' → logprob: -7.627399921417236
    9. ' ),' → logprob: -8.377400398254395
    10. ',' → logprob: -8.627400398254395

Token 136: ' checks' (ID: 22097)
  Prédit: 'checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checks' → logprob: -0.005697930697351694
    2. ' checks' → logprob: -5.380697727203369
    3. '   ' → logprob: -7.255697727203369
    4. 'check' → logprob: -8.380698204040527
    5. '    ' → logprob: -10.005698204040527
    6. '     ' → logprob: -10.255698204040527
    7. '       ' → logprob: -11.255698204040527
    8. '           ' → logprob: -11.380698204040527
    9. '
' → logprob: -11.505698204040527
    10. '      ' → logprob: -12.005698204040527

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07419349253177643
    2. ')
' → logprob: -3.1991934776306152
    3. ',' → logprob: -3.5741934776306152
    4. '))' → logprob: -6.574193477630615
    5. '   ' → logprob: -7.074193477630615
    6. ')))' → logprob: -8.449193954467773
    7. '       ' → logprob: -10.074193954467773
    8. '))
' → logprob: -10.199193954467773
    9. ')
' → logprob: -10.199193954467773
    10. ' )' → logprob: -10.449193954467773

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33466652035713196
    2. '   ' → logprob: -1.5846664905548096
    3. ',' → logprob: -2.5846664905548096
    4. 'except' → logprob: -6.584666728973389
    5. '
' → logprob: -6.834666728973389
    6. ')' → logprob: -7.584666728973389
    7. ' except' → logprob: -7.959666728973389
    8. ',
' → logprob: -8.58466625213623
    9. ')
' → logprob: -8.58466625213623
    10. ';' → logprob: -10.08466625213623

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6837525963783264
    2. 'return' → logprob: -1.1837525367736816
    3. '   ' → logprob: -2.4337525367736816
    4. '       ' → logprob: -2.5587525367736816
    5. 'except' → logprob: -3.9337525367736816
    6. ' print' → logprob: -6.183752536773682
    7. ' return' → logprob: -6.308752536773682
    8. ' except' → logprob: -8.30875301361084
    9. 'pass' → logprob: -8.68375301361084
    10. 'def' → logprob: -9.68375301361084

Token 140: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006976197939366102
    2. '(' → logprob: -5.006976127624512
    3. '("' → logprob: -8.256976127624512
    4. '(
' → logprob: -14.381976127624512
    5. '(`' → logprob: -15.256976127624512
    6. ''' → logprob: -15.756976127624512
    7. ' ('' → logprob: -16.256977081298828
    8. '(

' → logprob: -16.881977081298828
    9. '(('' → logprob: -17.006977081298828
    10. '(True' → logprob: -17.756977081298828

Token 141: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -7.941850526549388e-06
    2. 'YES' → logprob: -12.250007629394531
    3. ' Yes' → logprob: -13.250007629394531
    4. 'OK' → logprob: -15.250007629394531
    5. 'Ok' → logprob: -15.375007629394531
    6. 'yes' → logprob: -15.500007629394531
    7. 'Ye' → logprob: -15.625007629394531
    8. ''' → logprob: -16.12500762939453
    9. '('' → logprob: -16.12500762939453
    10. '(' → logprob: -16.25000762939453

Token 142: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03242385387420654
    2. ')' → logprob: -4.032423973083496
    3. '')
' → logprob: -4.282423973083496
    4. ')')
' → logprob: -8.532423973083496
    5. ''))' → logprob: -9.157423973083496
    6. ')
' → logprob: -10.282423973083496
    7. ')'' → logprob: -11.657423973083496
    8. '))' → logprob: -11.782423973083496
    9. '')
' → logprob: -12.907423973083496
    10. ''))
' → logprob: -13.157423973083496

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006548513192683458
    2. '       ' → logprob: -5.3815484046936035
    3. 'except' → logprob: -7.3815484046936035
    4. ' except' → logprob: -7.5065484046936035
    5. ')' → logprob: -8.381548881530762
    6. ',' → logprob: -8.381548881530762
    7. '
' → logprob: -9.006548881530762
    8. '	except' → logprob: -9.881548881530762
    9. ')
' → logprob: -10.256548881530762
    10. 'def' → logprob: -10.631548881530762

Token 144: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05084129422903061
    2. ' except' → logprob: -3.8008413314819336
    3. 'except' (adapté à ' except') → logprob: -3.9258413314819336
    4. ',' → logprob: -5.300841331481934
    5. '	except' → logprob: -6.800841331481934
    6. '
' → logprob: -7.800841331481934
    7. ')' → logprob: -7.925841331481934
    8. ')
' → logprob: -8.050841331481934
    9. '       ' → logprob: -8.675841331481934
    10. '    
' → logprob: -10.425841331481934

Token 145: ' System' (ID: 1219)
  Prédit: ' System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' System' → logprob: -0.07889111340045929
    2. 'System' → logprob: -2.5788910388946533
    3. '(System' → logprob: -13.953890800476074
    4. '<System' → logprob: -15.703890800476074
    5. '	System' → logprob: -16.20389175415039
    6. ' ' → logprob: -16.32889175415039
    7. '  ' → logprob: -17.95389175415039
    8. '_System' → logprob: -18.07889175415039
    9. ':System' → logprob: -18.45389175415039
    10. '   ' → logprob: -18.82889175415039

Token 146: 'Exit' (ID: 23779)
  Prédit: 'Exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exit' → logprob: 0.0
    2. 'Error' → logprob: -17.125
    3. '[' → logprob: -20.125
    4. '_exit' → logprob: -20.375
    5. '.Exit' → logprob: -20.5
    6. 'Exited' → logprob: -20.875
    7. ' Exit' → logprob: -20.875
    8. '.exit' → logprob: -21.625
    9. '_EXIT' → logprob: -21.75
    10. '
' → logprob: -21.75

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1623832881450653
    2. ':
' → logprob: -1.9123833179473877
    3. ' as' → logprob: -7.162383079528809
    4. '):' → logprob: -7.412383079528809
    5. '   ' → logprob: -8.037383079528809
    6. '():
' → logprob: -9.037383079528809
    7. '       ' → logprob: -9.037383079528809
    8. '):
' → logprob: -9.287383079528809
    9. '():' → logprob: -9.412383079528809
    10. ':return' → logprob: -10.662383079528809

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02319539152085781
    2. 'pass' → logprob: -4.023195266723633
    3. '   ' → logprob: -6.148195266723633
    4. ' pass' → logprob: -6.398195266723633
    5. '           ' → logprob: -7.898195266723633
    6. 'None' → logprob: -8.398195266723633
    7. ':' → logprob: -8.398195266723633
    8. '0' → logprob: -9.023195266723633
    9. ':
' → logprob: -9.273195266723633
    10. '():' → logprob: -10.023195266723633

Token 149: ' pass' (ID: 1853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1806357204914093
    2. 'pass' (adapté à ' pass') → logprob: -2.180635690689087
    3. 'exit' → logprob: -3.180635690689087
    4. '   ' → logprob: -5.680635929107666
    5. 'sys' → logprob: -5.805635929107666
    6. ' return' → logprob: -5.805635929107666
    7. ' pass' → logprob: -7.305635929107666
    8. ' exit' → logprob: -8.555635452270508
    9. 'import' → logprob: -8.805635452270508
    10. '       ' → logprob: -9.555635452270508

Token 150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.00019328886992298067
    2. 'verd' → logprob: -9.25019359588623
    3. '(ver' → logprob: -10.12519359588623
    4. ')' → logprob: -10.75019359588623
    5. 'l' → logprob: -11.00019359588623
    6. 'tasks' → logprob: -12.25019359588623
    7. '```' → logprob: -12.50019359588623
    8. '
' → logprob: -12.87519359588623
    9. '[' → logprob: -13.12519359588623
    10. ')
' → logprob: -14.12519359588623

Token 152: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.128163257315464e-07
    2. 'd' → logprob: -15.125
    3. 'erd' → logprob: -18.125
    4. 'dir' → logprob: -18.25
    5. ' dict' → logprob: -18.75
    6. 'rd' → logprob: -18.75
    7. 'dit' → logprob: -19.0
    8. 'Dict' → logprob: -19.25
    9. 'dic' → logprob: -19.375
    10. 'ict' → logprob: -20.0

Token 153: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0010407903464511037
    2. '(' → logprob: -6.876040935516357
    3. '(s' → logprob: -12.8760404586792
    4. '(
' → logprob: -13.8760404586792
    5. '(n' → logprob: -13.8760404586792
    6. '(ls' → logprob: -13.8760404586792
    7. ' (' → logprob: -14.0010404586792
    8. '(ll' → logprob: -14.1260404586792
    9. '((' → logprob: -15.0010404586792
    10. '(lst' → logprob: -15.5010404586792

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '))' → logprob: -13.62500286102295
    3. ')
' → logprob: -14.62500286102295
    4. ' )' → logprob: -15.00000286102295
    5. ')`' → logprob: -15.75000286102295
    6. '[' → logprob: -16.375001907348633
    7. '())' → logprob: -16.500001907348633
    8. ')}' → logprob: -17.500001907348633
    9. '])' → logprob: -17.750001907348633
    10. '[])' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 39.47%
Précision adaptée (1ère position): 40.13%
Précision (top 10): 80.92%
================================================================================
