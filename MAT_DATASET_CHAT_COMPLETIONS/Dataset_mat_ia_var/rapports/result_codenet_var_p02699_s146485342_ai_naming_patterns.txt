================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
ship_weight, weight_limit = map(int, input().split())

if ship_weight <= weight_limit:
    print('unsafe')
else:
    print('safe')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'ship' (ID: 8238)
  → Token d'amorce (pas de prédiction)

Token 1: '_weight' (ID: 34711)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' weight' (ID: 6049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8847805261611938
    2. ',' → logprob: -1.2597805261611938
    3. 'ship' → logprob: -2.6347804069519043
    4. ' ship' → logprob: -2.6347804069519043
    5. ' =' → logprob: -3.8847804069519043
    6. ' ,' → logprob: -4.134780406951904
    7. '_' → logprob: -4.259780406951904
    8. ' max' → logprob: -4.259780406951904
    9. '_ship' → logprob: -4.509780406951904
    10. 'max' → logprob: -4.634780406951904

Token 4: '_limit' (ID: 34361)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4481782019138336
    2. '_' → logprob: -1.1981781721115112
    3. ' =' → logprob: -3.448178291320801
    4. ')' → logprob: -4.323178291320801
    5. ',' → logprob: -4.698178291320801
    6. 's' → logprob: -6.823178291320801
    7. '*' → logprob: -6.948178291320801
    8. '.' → logprob: -7.073178291320801
    9. '+' → logprob: -7.573178291320801
    10. '[' → logprob: -7.698178291320801

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5940058827400208
    2. ' =' → logprob: -1.219005823135376
    3. '_' → logprob: -2.594005823135376
    4. ')' → logprob: -3.344005823135376
    5. ',' → logprob: -4.594006061553955
    6. ' ' → logprob: -4.719006061553955
    7. ' <=' → logprob: -5.094006061553955
    8. '>' → logprob: -5.969006061553955
    9. '_space' → logprob: -5.969006061553955
    10. '.' → logprob: -6.219006061553955

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49221664667129517
    2. ' ' → logprob: -0.9922166466712952
    3. ' ship' → logprob: -5.11721658706665
    4. '10' → logprob: -5.36721658706665
    5. ' map' → logprob: -5.86721658706665
    6. 'map' → logprob: -6.86721658706665
    7. 'ship' → logprob: -7.74221658706665
    8. '50' → logprob: -7.74221658706665
    9. 'input' → logprob: -7.86721658706665
    10. '20' → logprob: -8.117217063903809

Token 7: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0030311904847621918
    2. '(' → logprob: -6.628031253814697
    3. '(user' → logprob: -7.003031253814697
    4. ')' → logprob: -7.753031253814697
    5. '('' → logprob: -8.878030776977539
    6. 'input' → logprob: -9.878030776977539
    7. '(ship' → logprob: -10.128030776977539
    8. '(raw' → logprob: -10.753030776977539
    9. '(str' → logprob: -11.128030776977539
    10. '("' → logprob: -11.378030776977539

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02326376549899578
    2. ' input' → logprob: -3.773263692855835
    3. '(input' → logprob: -11.273263931274414
    4. ')' → logprob: -13.148263931274414
    5. ',input' → logprob: -13.773263931274414
    6. 'ship' → logprob: -13.898263931274414
    7. '<input' → logprob: -14.398263931274414
    8. '=input' → logprob: -14.773263931274414
    9. 'user' → logprob: -15.648263931274414
    10. ' ship' → logprob: -16.023263931274414

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8743736147880554
    2. '()' → logprob: -0.9993736147880554
    3. ')' → logprob: -1.8743736743927002
    4. '().' → logprob: -3.7493736743927
    5. '(' → logprob: -3.8743736743927
    6. '(()' → logprob: -5.374373435974121
    7. '```' → logprob: -5.999373435974121
    8. '();)' → logprob: -6.624373435974121
    9. '());' → logprob: -6.749373435974121
    10. '('' → logprob: -7.374373435974121

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009531481191515923
    2. 'strip' → logprob: -7.000953197479248
    3. 'rstrip' → logprob: -10.25095272064209
    4. 'read' → logprob: -12.37595272064209
    5. ' split' → logprob: -13.62595272064209
    6. '(split' → logprob: -14.62595272064209
    7. 'spl' → logprob: -15.25095272064209
    8. 'startswith' → logprob: -15.37595272064209
    9. ')' → logprob: -16.500953674316406
    10. 'replace' → logprob: -17.375953674316406

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4015319347381592
    2. ')' → logprob: -1.1515319347381592
    3. '))' → logprob: -4.901532173156738
    4. '()' → logprob: -5.276532173156738
    5. '()))' → logprob: -6.901532173156738
    6. '('' → logprob: -7.651532173156738
    7. '`)' → logprob: -8.651532173156738
    8. '(' → logprob: -9.651532173156738
    9. ' ())' → logprob: -10.401532173156738
    10. '')' → logprob: -10.651532173156738

Token 13: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4323433041572571
    2. ',' → logprob: -2.1823432445526123
    3. '\n' → logprob: -3.1823432445526123
    4. '#' → logprob: -3.1823432445526123
    5. ':' → logprob: -3.3073432445526123
    6. '<|end|>' → logprob: -3.5573432445526123
    7. ')' → logprob: -4.182343482971191
    8. ';' → logprob: -4.432343482971191
    9. ' ' → logprob: -4.807343482971191
    10. 'for' → logprob: -5.307343482971191

Token 14: ' ship' (ID: 12407)
  Prédit: ' ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ship' → logprob: -0.0008642955799587071
    2. 'ship' → logprob: -7.125864505767822
    3. ' weight' → logprob: -10.250864028930664
    4. ' ' → logprob: -11.500864028930664
    5. ' ' → logprob: -12.000864028930664
    6. '(ship' → logprob: -12.750864028930664
    7. ' ships' → logprob: -13.000864028930664
    8. ' Ship' → logprob: -14.250864028930664
    9. '_ship' → logprob: -14.500864028930664
    10. ' shipment' → logprob: -14.750864028930664

Token 15: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.002327959518879652
    2. '_' → logprob: -7.377327919006348
    3. '._' → logprob: -7.627327919006348
    4. '_weights' → logprob: -7.877327919006348
    5. ' _' → logprob: -8.002327919006348
    6. '_w' → logprob: -8.377327919006348
    7. ''_' → logprob: -9.627327919006348
    8. '_we' → logprob: -9.877327919006348
    9. '"_' → logprob: -10.627327919006348
    10. '```' → logprob: -11.252327919006348

Token 16: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8411902189254761
    2. ' <' → logprob: -1.341190218925476
    3. ' >' → logprob: -1.341190218925476
    4. ' >=' → logprob: -3.2161903381347656
    5. ' ' → logprob: -5.591190338134766
    6. ' ==' → logprob: -7.341190338134766
    7. '>' → logprob: -7.841190338134766
    8. '  ' → logprob: -8.341190338134766
    9. '<' → logprob: -8.466190338134766
    10. '   ' → logprob: -8.841190338134766

Token 17: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.12695667147636414
    2. 'weight' → logprob: -2.1269567012786865
    3. ' ' → logprob: -11.251956939697266
    4. ' ship' → logprob: -11.376956939697266
    5. 'ship' → logprob: -14.001956939697266
    6. '(weight' → logprob: -14.001956939697266
    7. ' ' → logprob: -14.126956939697266
    8. '0' → logprob: -15.126956939697266
    9. '20' → logprob: -15.376956939697266
    10. ' gewicht' → logprob: -15.751956939697266

Token 18: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0016365008195862174
    2. ' _' → logprob: -6.876636505126953
    3. '_' → logprob: -7.501636505126953
    4. '_lim' → logprob: -11.126636505126953
    5. '_limits' → logprob: -11.376636505126953
    6. ')_' → logprob: -12.626636505126953
    7. '_l' → logprob: -12.751636505126953
    8. '```' → logprob: -13.126636505126953
    9. '_space' → logprob: -13.876636505126953
    10. '

' → logprob: -14.376636505126953

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4617256056226324e-05
    2. ' :' → logprob: -11.875014305114746
    3. ':**' → logprob: -12.000014305114746
    4. '':' → logprob: -14.875014305114746
    5. '':'' → logprob: -15.125014305114746
    6. ':
' → logprob: -15.375014305114746
    7. '):' → logprob: -16.250015258789062
    8. '>:' → logprob: -16.375015258789062
    9. ':return' → logprob: -16.625015258789062
    10. '":' → logprob: -17.000015258789062

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8652405738830566
    2. ' print' → logprob: -1.2402405738830566
    3. ':' → logprob: -1.4902405738830566
    4. 'print' → logprob: -2.9902405738830566
    5. '\n' → logprob: -5.365240573883057
    6. ' ' → logprob: -6.115240573883057
    7. '\' → logprob: -6.115240573883057
    8. ':
' → logprob: -6.365240573883057
    9. '    ' → logprob: -7.490240573883057
    10. ' :' → logprob: -7.740240573883057

Token 21: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.004843646194785833
    2. 'print' (adapté à ' print') → logprob: -5.379843711853027
    3. ' pass' → logprob: -8.629843711853027
    4. '    ' → logprob: -11.004843711853027
    5. '   ' → logprob: -11.004843711853027
    6. '```' → logprob: -12.629843711853027
    7. '`' → logprob: -14.004843711853027
    8. 'pass' → logprob: -14.004843711853027
    9. ' ' → logprob: -14.379843711853027
    10. ' `' → logprob: -14.504843711853027

Token 22: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007568060886114836
    2. '("' → logprob: -5.382567882537842
    3. '("("' → logprob: -7.132567882537842
    4. '(ship' → logprob: -7.132567882537842
    5. '('' → logprob: -7.382567882537842
    6. '(True' → logprob: -7.757567882537842
    7. '()' → logprob: -8.382568359375
    8. '("(' → logprob: -10.757568359375
    9. '("")' → logprob: -11.132568359375
    10. '(False' → logprob: -11.382568359375

Token 23: 'unsafe' (ID: 66907)
  Prédit: 'Ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ship' → logprob: -1.2663835287094116
    2. 'Safe' → logprob: -1.8913835287094116
    3. 'Allowed' → logprob: -2.266383647918701
    4. 'Good' → logprob: -2.391383647918701
    5. 'Yes' → logprob: -2.766383647918701
    6. 'Load' → logprob: -2.891383647918701
    7. 'Loaded' → logprob: -2.891383647918701
    8. 'Accepted' → logprob: -3.391383647918701
    9. 'Weight' → logprob: -3.766383647918701
    10. ''' → logprob: -3.891383647918701

Token 24: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005346532445400953
    2. ')' → logprob: -5.255346298217773
    3. '')
' → logprob: -9.880346298217773
    4. ''' → logprob: -10.505346298217773
    5. '")' → logprob: -10.880346298217773
    6. '!' → logprob: -12.130346298217773
    7. '')
' → logprob: -12.630346298217773
    8. ':' → logprob: -13.380346298217773
    9. ' ')' → logprob: -13.880346298217773
    10. '('' → logprob: -14.005346298217773

Token 25: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16516855359077454
    2. ' else' → logprob: -2.790168523788452
    3. '<|end|>' → logprob: -2.790168523788452
    4. ':' → logprob: -4.040168762207031
    5. '```' → logprob: -5.290168762207031
    6. ')' → logprob: -5.915168762207031
    7. '   ' → logprob: -7.415168762207031
    8. 'elif' → logprob: -7.415168762207031
    9. '<|end|>' → logprob: -7.540168762207031
    10. '    
' → logprob: -8.290168762207031

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.849109119386412e-06
    2. ':
' → logprob: -11.750009536743164
    3. ' :' → logprob: -13.625009536743164
    4. '   ' → logprob: -14.750009536743164
    5. ':return' → logprob: -16.625009536743164
    6. ',' → logprob: -17.250009536743164
    7. ':**' → logprob: -17.500009536743164
    8. '```' → logprob: -17.625009536743164
    9. '{' → logprob: -17.875009536743164
    10. '<|end|>' → logprob: -17.875009536743164

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004929650574922562
    2. ' print' → logprob: -5.629929542541504
    3. 'print' → logprob: -6.629929542541504
    4. '```' → logprob: -12.629929542541504
    5. '	print' → logprob: -13.379929542541504
    6. '   ' → logprob: -13.879929542541504
    7. ' safe' → logprob: -14.129929542541504
    8. '       ' → logprob: -14.379929542541504
    9. '    ' → logprob: -15.004929542541504
    10. ' ' → logprob: -15.942429542541504

Token 28: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1754826158285141
    2. ' print' → logprob: -2.1754825115203857
    3. '   ' → logprob: -3.0504825115203857
    4. '```' → logprob: -10.800482749938965
    5. '	print' → logprob: -11.050482749938965
    6. ' ' → logprob: -12.050482749938965
    7. '    ' → logprob: -12.300482749938965
    8. '  ' → logprob: -12.800482749938965
    9. '       ' → logprob: -13.050482749938965
    10. '.print' → logprob: -13.800482749938965

Token 29: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3133028447628021
    2. '(' → logprob: -1.3133028745651245
    3. ''' → logprob: -10.813302993774414
    4. '("' → logprob: -11.188302993774414
    5. '()' → logprob: -12.563302993774414
    6. ''s' → logprob: -13.938302993774414
    7. '(
' → logprob: -14.188302993774414
    8. '(

' → logprob: -15.063302993774414
    9. '(True' → logprob: -15.063302993774414
    10. '('_' → logprob: -15.188302993774414

Token 30: 'safe' (ID: 46891)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.18646644055843353
    2. 'safe' → logprob: -1.9364664554595947
    3. ''' → logprob: -3.6864664554595947
    4. ' safe' → logprob: -7.186466217041016
    5. 'unsafe' → logprob: -10.311466217041016
    6. ''un' → logprob: -11.436466217041016
    7. '   ' → logprob: -11.686466217041016
    8. ''ok' → logprob: -11.936466217041016
    9. ' '' → logprob: -12.311466217041016
    10. 'Safe' → logprob: -12.561466217041016

Token 31: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01815556176006794
    2. ')' → logprob: -4.018155574798584
    3. ''' → logprob: -12.893155097961426
    4. '")' → logprob: -13.518155097961426
    5. '!' → logprob: -14.518155097961426
    6. '')
' → logprob: -14.643155097961426
    7. '('' → logprob: -14.893155097961426
    8. '`)' → logprob: -16.143156051635742
    9. ')'' → logprob: -16.393156051635742
    10. '```' → logprob: -16.768156051635742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 41.38%
Précision adaptée (1ère position): 44.83%
Précision (top 10): 75.86%
================================================================================
