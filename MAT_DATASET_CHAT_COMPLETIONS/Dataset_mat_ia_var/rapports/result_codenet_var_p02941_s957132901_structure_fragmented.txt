================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import bisect
from heapq import heappush, heappop
from collections import defaultdict
from itertools import accumulate
from collections import Counter
from collections import deque
from operator import itemgetter
from itertools import permutations

sys.setrecursionlimit(1000000000)
mod = 10 ** 9 + 7
inf = float('inf')

def read_int():
    return int(sys.stdin.readline())

def read_int_list():
    return list(map(int, sys.stdin.readline().split()))

def push_heap(h, v, i):
    heappush(h, (-v, i))

def pop_heap(h):
    v, i = heappop(h)
    return -v, i

def get_prev_idx(i, n):
    return (i - 1) % n

def get_next_idx(i, n):
    return (i + 1) % n

def compute_tmp(V, i, n):
    return V[get_next_idx(i, n)] + V[get_prev_idx(i, n)]

def compute_s(v, ai, tmp):
    return (v - ai) // tmp

def update_v(v, s, tmp):
    return v - s * tmp

def update_V(V, i, v):
    V[i] = v

def check_valid(s):
    return s > 0

def push_if_needed(h, v, i, ai):
    if v != ai:
        push_heap(h, v, i)

def handle_invalid():
    print(-1)
    quit()

def try_continue(v, ai):
    return v == ai

def add_to_ans(ans, s):
    return ans + s

def main():
    n = read_int()
    a = read_int_list()
    b = read_int_list()
    h = []
    V = [0] * n
    for i, v in enumerate(b):
        push_heap(h, v, i)
        V[i] = v
    ans = 0
    while h:
        v, i = pop_heap(h)
        tmp = compute_tmp(V, i, n)
        if try_continue(v, a[i]):
            continue
        s = compute_s(v, a[i], tmp)
        if not check_valid(s):
            handle_invalid()
        ans = add_to_ans(ans, s)
        v = update_v(v, s, tmp)
        update_V(V, i, v)
        push_if_needed(h, v, i, a[i])
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0007113590254448354
    2. 'os' → logprob: -7.250711441040039
    3. ' math' → logprob: -14.250711441040039
    4. ' re' → logprob: -15.125711441040039
    5. '"os' → logprob: -15.250711441040039
    6. ' json' → logprob: -16.37571144104004
    7. '_os' → logprob: -16.37571144104004
    8. '	os' → logprob: -17.25071144104004
    9. ' io' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.62571144104004

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04749391973018646
    2. '\n' → logprob: -4.172493934631348
    3. '\' → logprob: -4.547493934631348
    4. 'import' → logprob: -4.672493934631348
    5. '
' → logprob: -5.672493934631348
    6. '```' → logprob: -6.297493934631348
    7. '

' → logprob: -6.672493934631348
    8. ',' → logprob: -6.922493934631348
    9. '<|end|>' → logprob: -6.922493934631348
    10. '.
' → logprob: -7.547493934631348

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1021716594696045
    2. '\n' → logprob: -1.7271716594696045
    3. 'import' → logprob: -1.7271716594696045
    4. '
' → logprob: -1.9771716594696045
    5. '```' → logprob: -2.6021716594696045
    6. '\' → logprob: -3.6021716594696045
    7. '

' → logprob: -3.8521716594696045
    8. '<|end|>' → logprob: -3.9771716594696045
    9. ',' → logprob: -4.227171897888184
    10. '<|end|>' → logprob: -5.977171897888184

Token 7: ' bis' (ID: 7204)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.3171370029449463
    2. ' os' → logprob: -1.3171370029449463
    3. 'random' → logprob: -6.067136764526367
    4. ' random' → logprob: -6.817136764526367
    5. ' re' → logprob: -8.817136764526367
    6. 're' → logprob: -9.192136764526367
    7. ' numpy' → logprob: -10.192136764526367
    8. 'collections' → logprob: -10.317136764526367
    9. 'numpy' → logprob: -10.692136764526367
    10. ' itertools' → logprob: -10.817136764526367

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0009166974923573434
    2. 't' → logprob: -7.000916481018066
    3. 'ected' → logprob: -12.625916481018066
    4. 'ection' → logprob: -14.750916481018066
    5. 'e' → logprob: -14.875916481018066
    6. '```' → logprob: -15.000916481018066
    7. 'ec' → logprob: -15.625916481018066
    8. 'ector' → logprob: -15.625916481018066
    9. 'ective' → logprob: -16.500917434692383
    10. 'p' → logprob: -16.500917434692383

Token 9: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2444572448730469
    2. '<|end|>' → logprob: -1.2444572448730469
    3. '
' → logprob: -1.4944572448730469
    4. '\n' → logprob: -2.494457244873047
    5. '

' → logprob: -3.244457244873047
    6. '```' → logprob: -3.994457244873047
    7. '' → logprob: -3.994457244873047
    8. '.' → logprob: -4.744457244873047
    9. 'newline' → logprob: -5.494457244873047
    10. '
' → logprob: -5.619457244873047

Token 10: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8492864370346069
    2. '<|end|>' → logprob: -1.599286437034607
    3. '
' → logprob: -1.849286437034607
    4. '

' → logprob: -2.8492865562438965
    5. '\n' → logprob: -3.2242865562438965
    6. '```' → logprob: -3.7242865562438965
    7. '.' → logprob: -3.8492865562438965
    8. '<|end|>' → logprob: -4.2242865562438965
    9. ',' → logprob: -4.4742865562438965
    10. '\' → logprob: -4.4742865562438965

Token 11: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2245793342590332
    2. 'collections' → logprob: -1.7245793342590332
    3. ' itertools' → logprob: -3.974579334259033
    4. ' heap' → logprob: -6.224579334259033
    5. ' typing' → logprob: -6.724579334259033
    6. 'heap' → logprob: -7.474579334259033
    7. '_' → logprob: -9.599578857421875
    8. ' ' → logprob: -9.849578857421875
    9. 'typing' → logprob: -9.849578857421875
    10. ' functools' → logprob: -9.974578857421875

Token 12: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. 'import' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.750000953674316
    4. 'queue' → logprob: -16.0
    5. ' queue' → logprob: -16.875
    6. ' import' → logprob: -17.375
    7. 'n' → logprob: -18.0
    8. 'u' → logprob: -18.375
    9. 't' → logprob: -18.625
    10. '```' → logprob: -19.625

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011077998206019402
    2. 'import' → logprob: -4.511077880859375
    3. ' ' → logprob: -10.636077880859375
    4. '	import' → logprob: -13.261077880859375
    5. '<|end|>' → logprob: -13.886077880859375
    6. '.' → logprob: -14.011077880859375
    7. '_import' → logprob: -14.261077880859375
    8. ' space' → logprob: -14.761077880859375
    9. ' im' → logprob: -15.011077880859375
    10. 'space' → logprob: -15.636077880859375

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.390114963054657
    2. ' he' → logprob: -1.1401150226593018
    3. 'heap' → logprob: -5.890114784240723
    4. 'nl' → logprob: -9.140114784240723
    5. 'merge' → logprob: -9.265114784240723
    6. 'n' → logprob: -9.390114784240723
    7. ' n' → logprob: -9.390114784240723
    8. ' heap' → logprob: -10.140114784240723
    9. 'import' → logprob: -10.890114784240723
    10. '.he' → logprob: -11.140114784240723

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023290548473596573
    2. 'ap' → logprob: -3.7732906341552734
    3. 'a' → logprob: -10.023290634155273
    4. 'aq' → logprob: -15.148290634155273
    5. 'ап' → logprob: -16.148290634155273
    6. 'appen' → logprob: -16.773290634155273
    7. 'q' → logprob: -17.148290634155273
    8. 'apl' → logprob: -17.398290634155273
    9. 'appt' → logprob: -17.648290634155273
    10. 'apput' → logprob: -17.898290634155273

Token 16: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0024781543761491776
    2. 'op' → logprob: -6.002478122711182
    3. 'us' → logprob: -13.37747859954834
    4. 'o' → logprob: -14.62747859954834
    5. 'u' → logprob: -14.87747859954834
    6. 'osh' → logprob: -17.752477645874023
    7. 'opleft' → logprob: -18.627477645874023
    8. '[' → logprob: -18.752477645874023
    9. '```' → logprob: -19.127477645874023
    10. 'ut' → logprob: -19.127477645874023

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1886207014322281
    2. 'he' → logprob: -2.0636208057403564
    3. '(' → logprob: -3.3136208057403564
    4. 'import' → logprob: -5.688620567321777
    5. '<|end|>' → logprob: -6.313620567321777
    6. ' ' → logprob: -7.063620567321777
    7. ' he' → logprob: -7.188620567321777
    8. ' and' → logprob: -7.938620567321777
    9. '(heap' → logprob: -8.438620567321777
    10. ' ,' → logprob: -8.563620567321777

Token 18: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.47423505783081055
    2. ' he' → logprob: -0.9742350578308105
    3. 'heap' → logprob: -8.849235534667969
    4. ' heap' → logprob: -11.474235534667969
    5. '.he' → logprob: -14.349235534667969
    6. ' ' → logprob: -14.599235534667969
    7. '_he' → logprob: -14.599235534667969
    8. 'hep' → logprob: -14.849235534667969
    9. '```' → logprob: -14.849235534667969
    10. 'hev' → logprob: -15.099235534667969

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.246537173457909e-06
    2. 'ap' → logprob: -12.375003814697266
    3. 'appen' → logprob: -19.000003814697266
    4. ' app' → logprob: -19.250003814697266
    5. 'a' → logprob: -19.875003814697266
    6. 'APP' → logprob: -20.125003814697266
    7. 'appt' → logprob: -20.625003814697266
    8. '_app' → logprob: -21.000003814697266
    9. '	app' → logprob: -21.250003814697266
    10. '(app' → logprob: -21.250003814697266

Token 20: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03806478902697563
    2. 'ush' → logprob: -3.28806471824646
    3. 'o' → logprob: -10.788064956665039
    4. 'opleft' → logprob: -14.038064956665039
    5. 'osh' → logprob: -14.288064956665039
    6. 'us' → logprob: -14.538064956665039
    7. 'opp' → logprob: -15.288064956665039
    8. 'opl' → logprob: -15.788064956665039
    9. 'opup' → logprob: -17.28806495666504
    10. ' op' → logprob: -17.41306495666504

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5378814935684204
    2. '\n' → logprob: -1.7878814935684204
    3. '\' → logprob: -2.287881374359131
    4. '

' → logprob: -2.537881374359131
    5. '' → logprob: -3.537881374359131
    6. 'def' → logprob: -4.162881374359131
    7. 'd' → logprob: -4.787881374359131
    8. '#' → logprob: -5.412881374359131
    9. '```' → logprob: -5.537881374359131
    10. '
' → logprob: -6.037881374359131

Token 22: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.394685834646225
    2. '

' → logprob: -1.1446858644485474
    3. '
' → logprob: -6.019685745239258
    4. '' → logprob: -6.144685745239258
    5. 'def' → logprob: -6.894685745239258
    6. '```' → logprob: -7.519685745239258
    7. '\n' → logprob: -7.769685745239258
    8. 'import' → logprob: -8.394685745239258
    9. '


' → logprob: -8.644685745239258
    10. 'd' → logprob: -8.769685745239258

Token 23: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.31769347190856934
    2. ' collections' → logprob: -1.3176934719085693
    3. ' itertools' → logprob: -5.442693710327148
    4. ' functools' → logprob: -10.442693710327148
    5. '_' → logprob: -10.817693710327148
    6. 'it' → logprob: -11.567693710327148
    7. 'typing' → logprob: -11.942693710327148
    8. 'operator' → logprob: -12.442693710327148
    9. ' math' → logprob: -12.567693710327148
    10. 'random' → logprob: -12.567693710327148

Token 24: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1603255718946457
    2. ' import' → logprob: -1.910325527191162
    3. 'abc' → logprob: -10.53532600402832
    4. '```' → logprob: -10.53532600402832
    5. ' defaultdict' → logprob: -11.53532600402832
    6. '.' → logprob: -12.16032600402832
    7. '	import' → logprob: -12.16032600402832
    8. '_import' → logprob: -12.41032600402832
    9. ' imports' → logprob: -12.66032600402832
    10. '.Counter' → logprob: -13.03532600402832

Token 25: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.31711095571517944
    2. ' deque' → logprob: -1.3171110153198242
    3. 'deque' → logprob: -5.567111015319824
    4. 'default' → logprob: -11.317111015319824
    5. ' Counter' → logprob: -12.442111015319824
    6. 'de' → logprob: -13.317111015319824
    7. ' de' → logprob: -13.567111015319824
    8. ' default' → logprob: -14.692111015319824
    9. ' named' → logprob: -14.692111015319824
    10. ' abc' → logprob: -15.817111015319824

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4941105246543884
    2. '

' → logprob: -0.9941105246543884
    3. '' → logprob: -5.369110584259033
    4. 'def' → logprob: -5.619110584259033
    5. '```' → logprob: -5.744110584259033
    6. 'import' → logprob: -5.869110584259033
    7. '
' → logprob: -6.119110584259033
    8. 'class' → logprob: -6.619110584259033
    9. '\n' → logprob: -7.744110584259033
    10. ' 

' → logprob: -8.619110107421875

Token 27: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4565480351448059
    2. '
' → logprob: -1.3315479755401611
    3. 'import' → logprob: -3.206547975540161
    4. 'def' → logprob: -3.456547975540161
    5. '```' → logprob: -4.70654821395874
    6. '' → logprob: -5.08154821395874
    7. 'class' → logprob: -5.33154821395874
    8. '\n' → logprob: -5.83154821395874
    9. '
' → logprob: -6.20654821395874
    10. 'd' → logprob: -7.20654821395874

Token 28: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.012758140452206135
    2. ' typing' → logprob: -4.512758255004883
    3. ' functools' → logprob: -6.887758255004883
    4. ' queue' → logprob: -8.512758255004883
    5. 'it' → logprob: -8.762758255004883
    6. ' math' → logprob: -9.262758255004883
    7. 'typing' → logprob: -9.762758255004883
    8. ' ' → logprob: -10.137758255004883
    9. '_' → logprob: -10.262758255004883
    10. ' operator' → logprob: -10.387758255004883

Token 29: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03070211596786976
    2. 'import' → logprob: -3.5307021141052246
    3. ' ' → logprob: -7.780702114105225
    4. '.' → logprob: -8.155702590942383
    5. '	import' → logprob: -9.155702590942383
    6. ' .' → logprob: -9.280702590942383
    7. ' im' → logprob: -11.530702590942383
    8. '.import' → logprob: -11.655702590942383
    9. '_import' → logprob: -11.780702590942383
    10. '.im' → logprob: -12.030702590942383

Token 30: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.8381778001785278
    2. 'count' → logprob: -2.0881776809692383
    3. ' accumulate' → logprob: -2.0881776809692383
    4. 'com' → logprob: -2.2131776809692383
    5. ' combinations' → logprob: -2.7131776809692383
    6. ' count' → logprob: -3.3381776809692383
    7. 'acc' → logprob: -3.4631776809692383
    8. 'per' → logprob: -3.7131776809692383
    9. ' group' → logprob: -3.8381776809692383
    10. ' chain' → logprob: -5.213177680969238

Token 31: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28932061791419983
    2. '
' → logprob: -1.4143205881118774
    3. 'import' → logprob: -6.164320468902588
    4. 'def' → logprob: -6.539320468902588
    5. '\n' → logprob: -7.039320468902588
    6. '


' → logprob: -7.289320468902588
    7. '```' → logprob: -7.289320468902588
    8. ' 

' → logprob: -7.914320468902588
    9. '
' → logprob: -7.914320468902588
    10. '
 
' → logprob: -8.039320945739746

Token 32: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5213857889175415
    2. '
' → logprob: -1.1463857889175415
    3. 'def' → logprob: -3.521385669708252
    4. '\n' → logprob: -4.146385669708252
    5. 'import' → logprob: -4.646385669708252
    6. '#' → logprob: -4.646385669708252
    7. '```' → logprob: -4.771385669708252
    8. '' → logprob: -6.146385669708252
    9. 'n' → logprob: -6.271385669708252
    10. ',' → logprob: -6.396385669708252

Token 33: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1386653333902359
    2. 'operator' → logprob: -2.1386654376983643
    3. ' math' → logprob: -5.513665199279785
    4. ' functools' → logprob: -5.763665199279785
    5. 'math' → logprob: -6.513665199279785
    6. 'fra' → logprob: -6.638665199279785
    7. ' fractions' → logprob: -6.638665199279785
    8. ' ' → logprob: -9.138665199279785
    9. 'heap' → logprob: -10.138665199279785
    10. ' heap' → logprob: -10.138665199279785

Token 34: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2017425298690796
    2. ' import' → logprob: -1.9517425298690796
    3. '.' → logprob: -4.576742649078369
    4. 'port' → logprob: -4.576742649078369
    5. 'ertools' → logprob: -4.951742649078369
    6. 't' → logprob: -5.201742649078369
    7. 'from' → logprob: -6.326742649078369
    8. '.import' → logprob: -6.576742649078369
    9. 'abc' → logprob: -7.201742649078369
    10. '	import' → logprob: -7.201742649078369

Token 35: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.10807492583990097
    2. 'deque' → logprob: -2.733074903488159
    3. ' Counter' → logprob: -3.483074903488159
    4. ' defaultdict' → logprob: -5.108075141906738
    5. 'Counter' → logprob: -7.858075141906738
    6. 'de' → logprob: -9.358075141906738
    7. ' Ordered' → logprob: -9.733075141906738
    8. ' named' → logprob: -9.983075141906738
    9. ' de' → logprob: -10.233075141906738
    10. ' abc' → logprob: -11.233075141906738

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4600280225276947
    2. '

' → logprob: -1.585028052330017
    3. '\n' → logprob: -2.3350279331207275
    4. 'import' → logprob: -3.7100279331207275
    5. '<|end|>' → logprob: -4.085028171539307
    6. '```' → logprob: -4.710028171539307
    7. 'def' → logprob: -5.085028171539307
    8. '\' → logprob: -6.085028171539307
    9. '#' → logprob: -6.210028171539307
    10. '' → logprob: -6.585028171539307

Token 37: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6475776433944702
    2. '
' → logprob: -0.7725776433944702
    3. 'import' → logprob: -4.64757776260376
    4. '\n' → logprob: -6.14757776260376
    5. 'def' → logprob: -7.02257776260376
    6. '
' → logprob: -7.14757776260376
    7. '```' → logprob: -7.77257776260376
    8. '
 
' → logprob: -8.647577285766602
    9. '


' → logprob: -8.647577285766602
    10. 'n' → logprob: -8.772577285766602

Token 38: ' collections' (ID: 22690)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.6489303112030029
    2. ' operator' → logprob: -1.773930311203003
    3. ' functools' → logprob: -1.898930311203003
    4. ' math' → logprob: -3.023930311203003
    5. ' fractions' → logprob: -3.273930311203003
    6. 'typing' → logprob: -3.898930311203003
    7. 'math' → logprob: -4.023930549621582
    8. 'operator' → logprob: -4.148930549621582
    9. 'fra' → logprob: -4.648930549621582
    10. ' itertools' → logprob: -6.273930549621582

Token 39: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0901484340429306
    2. 'import' → logprob: -2.465148448944092
    3. '	import' → logprob: -7.090148448944092
    4. '<|end|>' → logprob: -8.715147972106934
    5. '_import' → logprob: -9.965147972106934
    6. ' ' → logprob: -10.090147972106934
    7. '.' → logprob: -10.215147972106934
    8. ' ' → logprob: -10.965147972106934
    9. ' Import' → logprob: -11.840147972106934
    10. ' importar' → logprob: -12.027647972106934

Token 40: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.024023449048399925
    2. 'deque' → logprob: -3.7740235328674316
    3. ' Ordered' → logprob: -7.774023532867432
    4. ' defaultdict' → logprob: -8.149023056030273
    5. ' named' → logprob: -10.274023056030273
    6. 'Ordered' → logprob: -11.024023056030273
    7. 'de' → logprob: -12.024023056030273
    8. 'named' → logprob: -12.024023056030273
    9. ' de' → logprob: -12.524023056030273
    10. ' abc' → logprob: -14.274023056030273

Token 41: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6349524259567261
    2. '
' → logprob: -0.7599524259567261
    3. 'import' → logprob: -6.759952545166016
    4. '
' → logprob: -7.634952545166016
    5. '


' → logprob: -8.259952545166016
    6. '\n' → logprob: -8.384952545166016
    7. '' → logprob: -10.009952545166016
    8. '```' → logprob: -10.134952545166016
    9. '<|end|>' → logprob: -10.384952545166016
    10. ' 

' → logprob: -10.634952545166016

Token 42: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5066602826118469
    2. '

' → logprob: -1.3816602230072021
    3. 'import' → logprob: -2.631660223007202
    4. '\n' → logprob: -3.131660223007202
    5. 'n' → logprob: -4.631660461425781
    6. '```' → logprob: -5.256660461425781
    7. 'def' → logprob: -5.881660461425781
    8. ' 

' → logprob: -6.256660461425781
    9. '


' → logprob: -6.381660461425781
    10. '<|end|>' → logprob: -6.756660461425781

Token 43: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.9461160898208618
    2. ' typing' → logprob: -1.3211160898208618
    3. ' heap' → logprob: -2.6961159706115723
    4. ' math' → logprob: -2.8211159706115723
    5. ' fractions' → logprob: -2.9461159706115723
    6. ' threading' → logprob: -2.9461159706115723
    7. ' queue' → logprob: -3.1961159706115723
    8. ' operator' → logprob: -3.5711159706115723
    9. ' random' → logprob: -4.571115970611572
    10. ' itertools' → logprob: -5.071115970611572

Token 44: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02284415438771248
    2. 'import' → logprob: -4.522844314575195
    3. '<|end|>' → logprob: -4.897844314575195
    4. ' ' → logprob: -5.522844314575195
    5. '.' → logprob: -8.772844314575195
    6. '<|end|>' → logprob: -10.272844314575195
    7. '	import' → logprob: -10.522844314575195
    8. ' ' → logprob: -11.647844314575195
    9. '_import' → logprob: -12.022844314575195
    10. ' ```' → logprob: -12.272844314575195

Token 45: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.14636863768100739
    2. 'item' → logprob: -2.0213687419891357
    3. ' attr' → logprob: -6.521368503570557
    4. '.item' → logprob: -6.771368503570557
    5. '	item' → logprob: -7.896368503570557
    6. 'attr' → logprob: -8.521368980407715
    7. '=item' → logprob: -9.146368980407715
    8. ' ' → logprob: -9.396368980407715
    9. '[item' → logprob: -10.146368980407715
    10. 'getitem' → logprob: -10.271368980407715

Token 46: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.001046743243932724
    2. 'get' → logprob: -6.876046657562256
    3. 'gett' → logprob: -11.751047134399414
    4. 'g' → logprob: -12.501047134399414
    5. 'getitem' → logprob: -13.251047134399414
    6. 'ge' → logprob: -15.501047134399414
    7. 'gte' → logprob: -16.501047134399414
    8. 'Getter' → logprob: -17.001047134399414
    9. 'gets' → logprob: -17.501047134399414
    10. 'gt' → logprob: -17.501047134399414

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25529879331588745
    2. '

' → logprob: -1.7552988529205322
    3. '<|end|>' → logprob: -3.5052988529205322
    4. 'import' → logprob: -4.505298614501953
    5. '\n' → logprob: -5.130298614501953
    6. '' → logprob: -6.130298614501953
    7. '```' → logprob: -7.755298614501953
    8. '
' → logprob: -7.880298614501953
    9. ' 
' → logprob: -8.005298614501953
    10. ' 

' → logprob: -8.005298614501953

Token 48: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5367603302001953
    2. '

' → logprob: -1.4117603302001953
    3. 'import' → logprob: -2.7867603302001953
    4. '\n' → logprob: -3.0367603302001953
    5. '```' → logprob: -4.036760330200195
    6. 'def' → logprob: -4.161760330200195
    7. '\' → logprob: -4.786760330200195
    8. '' → logprob: -5.036760330200195
    9. 'd' → logprob: -6.036760330200195
    10. 'n' → logprob: -6.036760330200195

Token 49: ' itertools' (ID: 103178)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.527321994304657
    2. 'math' → logprob: -1.6523220539093018
    3. 'fun' → logprob: -1.7773220539093018
    4. 'typing' → logprob: -3.9023220539093018
    5. 'operator' → logprob: -4.652321815490723
    6. 'heap' → logprob: -4.777321815490723
    7. 'os' → logprob: -5.527321815490723
    8. ' math' → logprob: -6.902321815490723
    9. 'random' → logprob: -6.902321815490723
    10. ' itertools' → logprob: -7.277321815490723

Token 50: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0065948134288191795
    2. 'import' → logprob: -5.131594657897949
    3. '.' → logprob: -7.881594657897949
    4. ' ' → logprob: -8.75659465789795
    5. '	import' → logprob: -10.00659465789795
    6. '<|end|>' → logprob: -10.00659465789795
    7. ' .' → logprob: -10.50659465789795
    8. '.import' → logprob: -12.75659465789795
    9. ' itertools' → logprob: -13.13159465789795
    10. '.im' → logprob: -13.88159465789795

Token 51: ' permutations' (ID: 174595)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.3679913878440857
    2. 'product' → logprob: -2.2429914474487305
    3. ' group' → logprob: -2.4929914474487305
    4. 'com' → logprob: -3.1179914474487305
    5. ' permutations' → logprob: -3.2429914474487305
    6. 'per' → logprob: -3.8679914474487305
    7. 'count' → logprob: -5.4929914474487305
    8. 'acc' → logprob: -5.7429914474487305
    9. ' product' → logprob: -5.8679914474487305
    10. ' combinations' → logprob: -6.6179914474487305

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7365924715995789
    2. '\n' → logprob: -0.8615924715995789
    3. '<|end|>' → logprob: -2.8615925312042236
    4. 'import' → logprob: -4.1115922927856445
    5. ' 
' → logprob: -4.7365922927856445
    6. '\' → logprob: -5.6115922927856445
    7. ',' → logprob: -5.9865922927856445
    8. 'from' → logprob: -6.3615922927856445
    9. 'n' → logprob: -6.3615922927856445
    10. '

' → logprob: -6.9865922927856445

Token 53: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5556987524032593
    2. 'import' → logprob: -1.4306987524032593
    3. '\n' → logprob: -3.055698871612549
    4. '
' → logprob: -3.180698871612549
    5. '

' → logprob: -3.555698871612549
    6. '#' → logprob: -4.055698871612549
    7. 'from' → logprob: -4.180698871612549
    8. '\' → logprob: -4.180698871612549
    9. 'class' → logprob: -5.180698871612549
    10. 'n' → logprob: -5.305698871612549

Token 54: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.702754474943504e-05
    2. ' .' → logprob: -11.87503719329834
    3. '.readline' → logprob: -12.12503719329834
    4. '.exit' → logprob: -12.50003719329834
    5. '.setdefault' → logprob: -13.00003719329834
    6. '.`' → logprob: -13.12503719329834
    7. '.argv' → logprob: -13.12503719329834
    8. '.next' → logprob: -13.25003719329834
    9. '.stdin' → logprob: -13.50003719329834
    10. '<|end|>' → logprob: -13.62503719329834

Token 55: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16385288536548615
    2. '_set' → logprob: -3.5388529300689697
    3. '_suffix' → logprob: -4.288852691650391
    4. '_version' → logprob: -4.413852691650391
    5. ' _' → logprob: -4.538852691650391
    6. '_opt' → logprob: -4.663852691650391
    7. '_exc' → logprob: -4.913852691650391
    8. '_config' → logprob: -5.038852691650391
    9. '_limit' → logprob: -5.288852691650391
    10. '_stack' → logprob: -5.788852691650391

Token 56: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0004086275293957442
    2. 'ursive' → logprob: -8.500408172607422
    3. 'urs' → logprob: -8.750408172607422
    4. 'ur' → logprob: -10.750408172607422
    5. 'limit' → logprob: -11.250408172607422
    6. 'urf' → logprob: -12.375408172607422
    7. 'ursor' → logprob: -12.375408172607422
    8. 'urst' → logprob: -13.500408172607422
    9. 'urse' → logprob: -14.500408172607422
    10. 'ursively' → logprob: -15.375408172607422

Token 57: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00081153231440112
    2. '_limit' → logprob: -7.125811576843262
    3. ' limit' → logprob: -12.500811576843262
    4. 'lim' → logprob: -13.000811576843262
    5. 'al' → logprob: -14.750811576843262
    6. 'depth' → logprob: -15.125811576843262
    7. '-limit' → logprob: -15.875811576843262
    8. '_LIMIT' → logprob: -16.625810623168945
    9. 'l' → logprob: -16.875810623168945
    10. '(limit' → logprob: -17.375810623168945

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1041145626222715e-05
    2. '(
' → logprob: -11.750011444091797
    3. '(

' → logprob: -13.250011444091797
    4. ' (' → logprob: -13.875011444091797
    5. '((' → logprob: -16.000011444091797
    6. '()' → logprob: -16.250011444091797
    7. '("("' → logprob: -17.250011444091797
    8. '(()' → logprob: -17.750011444091797
    9. '(
' → logprob: -17.750011444091797
    10. '(None' → logprob: -18.000011444091797

Token 59: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001517834491096437
    2. '100' → logprob: -6.5015177726745605
    3. ' ' → logprob: -11.376518249511719
    4. '1' → logprob: -12.501518249511719
    5. '200' → logprob: -16.62651824951172
    6. '300' → logprob: -16.75151824951172
    7. '500' → logprob: -16.87651824951172
    8. 'pow' → logprob: -17.62651824951172
    9. '2' → logprob: -17.87651824951172
    10. '250' → logprob: -18.00151824951172

Token 60: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5239149928092957
    2. '00' → logprob: -1.0239150524139404
    3. '0' → logprob: -3.0239150524139404
    4. '_' → logprob: -12.89891529083252
    5. '48' → logprob: -13.77391529083252
    6. '   ' → logprob: -14.14891529083252
    7. ' ' → logprob: -15.27391529083252
    8. ')' → logprob: -15.39891529083252
    9. '500' → logprob: -15.52391529083252
    10. '9' → logprob: -15.77391529083252

Token 61: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021507740020752
    2. ')' → logprob: -2.350214958190918
    3. ')
' → logprob: -12.475214958190918
    4. '1' → logprob: -13.225214958190918
    5. '_' → logprob: -14.100214958190918
    6. '```' → logprob: -14.225214958190918
    7. ' )' → logprob: -14.725214958190918
    8. ')

' → logprob: -15.350214958190918
    9. ' ' → logprob: -16.100215911865234
    10. '00' → logprob: -16.225215911865234

Token 62: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. '0' → logprob: -9.375088691711426
    3. ' )' → logprob: -12.750088691711426
    4. '))' → logprob: -15.250088691711426
    5. '1' → logprob: -15.875088691711426
    6. ')
' → logprob: -17.25008773803711
    7. '9' → logprob: -17.37508773803711
    8. '+' → logprob: -17.50008773803711
    9. '')' → logprob: -18.00008773803711
    10. '```' → logprob: -18.37508773803711

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '0' → logprob: -18.125
    5. ')

' → logprob: -18.75
    6. '))' → logprob: -18.75
    7. '),' → logprob: -19.375
    8. ')
' → logprob: -19.625
    9. ')`' → logprob: -20.0
    10. '6' → logprob: -20.375

Token 64: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.354680597782135
    2. '

' → logprob: -1.4796805381774902
    3. 'def' → logprob: -3.6046805381774902
    4. '#' → logprob: -4.47968053817749
    5. '\n' → logprob: -4.85468053817749
    6. '\' → logprob: -5.10468053817749
    7. 'n' → logprob: -5.10468053817749
    8. '' → logprob: -5.35468053817749
    9. 'class' → logprob: -6.10468053817749
    10. 'import' → logprob: -6.35468053817749

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09726611524820328
    2. '=' → logprob: -2.97226619720459
    3. ' ' → logprob: -3.22226619720459
    4. '_' → logprob: -6.84726619720459
    5. '  ' → logprob: -8.72226619720459
    6. '.' → logprob: -9.34726619720459
    7. '<|end|>' → logprob: -9.84726619720459
    8. ')' → logprob: -9.97226619720459
    9. '1' → logprob: -10.47226619720459
    10. ',' → logprob: -10.84726619720459

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006070048548281193
    2. '10' → logprob: -5.131070137023926
    3. '100' → logprob: -8.881070137023926
    4. '998' → logprob: -13.256070137023926
    5. 'int' → logprob: -15.256070137023926
    6. '1' → logprob: -15.256070137023926
    7. ' ' → logprob: -15.631070137023926
    8. ' int' → logprob: -16.75606918334961
    9. '109' → logprob: -17.13106918334961
    10. ' (' → logprob: -17.50606918334961

Token 67: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.039399560540914536
    2. '100' → logprob: -3.2893996238708496
    3. ' ' → logprob: -6.66439962387085
    4. '998' → logprob: -9.539399147033691
    5. '1' → logprob: -11.789399147033691
    6. 'int' → logprob: -13.414399147033691
    7. 'pow' → logprob: -15.539399147033691
    8. '999' → logprob: -15.789399147033691
    9. '(' → logprob: -16.164400100708008
    10. '2' → logprob: -16.664400100708008

Token 68: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08442290872335434
    2. '09' → logprob: -2.5844228267669678
    3. '**' → logprob: -5.334423065185547
    4. '000' → logprob: -7.459423065185547
    5. '009' → logprob: -9.459423065185547
    6. '00' → logprob: -10.959423065185547
    7. '+' → logprob: -11.584423065185547
    8. '```' → logprob: -12.084423065185547
    9. ' ' → logprob: -12.834423065185547
    10. '10' → logprob: -13.959423065185547

Token 69: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.75
    3. '+' → logprob: -17.75
    4. ' ' → logprob: -19.75
    5. '```' → logprob: -20.5
    6. '18' → logprob: -21.5
    7. '10' → logprob: -21.625
    8. '９' → logprob: -22.25
    9. '19' → logprob: -22.75
    10. '
' → logprob: -23.0

Token 70: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. '+' → logprob: -17.625
    4. '```' → logprob: -19.25
    5. '18' → logprob: -19.375
    6. '10' → logprob: -20.125
    7. ' ' → logprob: -20.625
    8. '19' → logprob: -21.75
    9. '９' → logprob: -22.25
    10. '   ' → logprob: -22.5

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005725711234845221
    2. ' +' → logprob: -7.500572681427002
    3. '7' → logprob: -10.875572204589844
    4. '+
' → logprob: -15.000572204589844
    5. '+

' → logprob: -16.000572204589844
    6. ' plus' → logprob: -16.375572204589844
    7. '＋' → logprob: -16.625572204589844
    8. ' ' → logprob: -17.375572204589844
    9. 'plus' → logprob: -17.500572204589844
    10. '9' → logprob: -18.375572204589844

Token 72: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -15.25
    3. ' ' → logprob: -15.75
    4. '9' → logprob: -18.25
    5. '07' → logprob: -19.125
    6. '```' → logprob: -19.125
    7. '   ' → logprob: -19.875
    8. '  ' → logprob: -20.5
    9. ' ' → logprob: -21.1875
    10. '' → logprob: -21.4375

Token 73: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.875
    3. ' ' → logprob: -20.0
    4. '```' → logprob: -20.75
    5. '07' → logprob: -21.0
    6. '

' → logprob: -21.625
    7. '9' → logprob: -21.75
    8. '   ' → logprob: -22.0
    9. '７' → logprob: -22.625
    10. '' → logprob: -22.625

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3889889121055603
    2. '

' → logprob: -1.138988971710205
    3. '
' → logprob: -6.763988971710205
    4. 'def' → logprob: -7.638988971710205
    5. '' → logprob: -8.513988494873047
    6. '\n' → logprob: -9.513988494873047
    7. '```' → logprob: -9.763988494873047
    8. 'n' → logprob: -10.013988494873047
    9. '


' → logprob: -10.388988494873047
    10. '\' → logprob: -10.638988494873047

Token 75: 'inf' (ID: 22226)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11805858463048935
    2. '

' → logprob: -2.618058681488037
    3. '\n' → logprob: -3.993058681488037
    4. 'def' → logprob: -4.868058681488037
    5. '' → logprob: -5.618058681488037
    6. '
' → logprob: -5.743058681488037
    7. '\' → logprob: -5.743058681488037
    8. 'n' → logprob: -6.868058681488037
    9. 'd' → logprob: -7.493058681488037
    10. '```' → logprob: -8.368058204650879

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07910778373479843
    2. '=' → logprob: -2.5791077613830566
    3. ',' → logprob: -9.579108238220215
    4. ')' → logprob: -10.454108238220215
    5. '_' → logprob: -11.079108238220215
    6. '.' → logprob: -11.204108238220215
    7. '  ' → logprob: -11.204108238220215
    8. 'a' → logprob: -11.454108238220215
    9. '   ' → logprob: -11.954108238220215
    10. ' ' → logprob: -12.204108238220215

Token 77: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6071802973747253
    2. '10' → logprob: -1.1071803569793701
    3. 'float' → logprob: -2.60718035697937
    4. ' float' → logprob: -2.98218035697937
    5. '1' → logprob: -8.73218059539795
    6. '100' → logprob: -11.10718059539795
    7. 'int' → logprob: -11.60718059539795
    8. '(float' → logprob: -12.85718059539795
    9. 'inf' → logprob: -12.85718059539795
    10. ' ' → logprob: -13.73218059539795

Token 78: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.278864359250292e-05
    2. '(' → logprob: -9.750072479248047
    3. '("' → logprob: -11.250072479248047
    4. ''' → logprob: -13.875072479248047
    5. ''in' → logprob: -15.750072479248047
    6. '('-' → logprob: -16.000072479248047
    7. ' ('' → logprob: -16.625072479248047
    8. '32' → logprob: -16.750072479248047
    9. '('+' → logprob: -18.000072479248047
    10. '(\'' → logprob: -18.000072479248047

Token 79: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.2918151021003723
    2. ''in' → logprob: -1.4168150424957275
    3. ''' → logprob: -4.791815280914307
    4. ''i' → logprob: -7.416815280914307
    5. '"' → logprob: -7.791815280914307
    6. 'in' → logprob: -8.166814804077148
    7. 'info' → logprob: -8.666814804077148
    8. ''ins' → logprob: -8.791814804077148
    9. 'i' → logprob: -9.041814804077148
    10. ''inc' → logprob: -9.791814804077148

Token 80: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005234594456851482
    2. '')' → logprob: -5.255234718322754
    3. '")' → logprob: -15.255234718322754
    4. ' )' → logprob: -15.630234718322754
    5. ')'' → logprob: -15.755234718322754
    6. '))' → logprob: -16.255233764648438
    7. '()' → logprob: -16.505233764648438
    8. ')
' → logprob: -17.630233764648438
    9. '`)' → logprob: -17.755233764648438
    10. '('' → logprob: -18.130233764648438

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15888388454914093
    2. 'n' → logprob: -2.658883810043335
    3. 'd' → logprob: -2.908883810043335
    4. '
' → logprob: -4.408884048461914
    5. 'class' → logprob: -4.908884048461914
    6. '\' → logprob: -6.533884048461914
    7. '#' → logprob: -8.033884048461914
    8. 'a' → logprob: -8.158884048461914
    9. '\n' → logprob: -8.283884048461914
    10. '

' → logprob: -8.658884048461914

Token 82: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003927964251488447
    2. ' dfs' → logprob: -6.503928184509277
    3. ' solve' → logprob: -6.628928184509277
    4. ' ' → logprob: -7.003928184509277
    5. ' s' → logprob: -9.503928184509277
    6. 'main' → logprob: -11.378928184509277
    7. ' ' → logprob: -11.378928184509277
    8. ' factor' → logprob: -11.378928184509277
    9. ' bfs' → logprob: -11.628928184509277
    10. ' space' → logprob: -11.878928184509277

Token 83: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9590539932250977
    2. '_line' → logprob: -1.0840539932250977
    3. '():' → logprob: -1.4590539932250977
    4. '_' → logprob: -3.7090539932250977
    5. '(' → logprob: -3.9590539932250977
    6. 'line' → logprob: -6.584053993225098
    7. '_input' → logprob: -8.834053993225098
    8. '```' → logprob: -8.959053993225098
    9. ' ()' → logprob: -9.209053993225098
    10. '_LINE' → logprob: -9.459053993225098

Token 84: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20727182924747467
    2. '()' → logprob: -1.7072718143463135
    3. 's' → logprob: -5.457272052764893
    4. ' ()' → logprob: -7.332272052764893
    5. '():
' → logprob: -8.207271575927734
    6. ' ():' → logprob: -8.832271575927734
    7. '_list' → logprob: -9.582271575927734
    8. '32' → logprob: -9.707271575927734
    9. '（）' → logprob: -9.832271575927734
    10. '(' → logprob: -10.082271575927734

Token 85: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12857471406459808
    2. '()' → logprob: -2.1285746097564697
    3. ' ():' → logprob: -7.128574848175049
    4. ' ()' → logprob: -7.253574848175049
    5. '():
' → logprob: -9.62857437133789
    6. '(' → logprob: -10.25357437133789
    7. '()*' → logprob: -11.62857437133789
    8. 's' → logprob: -12.00357437133789
    9. ':' → logprob: -12.37857437133789
    10. '[]' → logprob: -13.00357437133789

Token 86: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07909500598907471
    2. 'return' (adapté à ' return') → logprob: -2.704094886779785
    3. 'int' → logprob: -5.079094886779785
    4. ' int' → logprob: -5.954094886779785
    5. ' ' → logprob: -8.829094886779785
    6. '   ' → logprob: -9.829094886779785
    7. '()' → logprob: -10.204094886779785
    8. ' ()' → logprob: -11.204094886779785
    9. '    ' → logprob: -11.454094886779785
    10. '(int' → logprob: -12.079094886779785

Token 87: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10026652365922928
    2. 'int' → logprob: -2.350266456604004
    3. '(int' → logprob: -9.975266456604004
    4. ' ' → logprob: -11.600266456604004
    5. '	int' → logprob: -13.350266456604004
    6. '<int' → logprob: -13.725266456604004
    7. '[int' → logprob: -14.225266456604004
    8. '  ' → logprob: -15.725266456604004
    9. '=int' → logprob: -16.10026741027832
    10. ',int' → logprob: -16.60026741027832

Token 88: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5890964269638062
    2. '(input' → logprob: -0.8390964269638062
    3. '(sys' → logprob: -4.339096546173096
    4. 'input' → logprob: -11.464096069335938
    5. '(
' → logprob: -12.089096069335938
    6. '(

' → logprob: -13.339096069335938
    7. ' (' → logprob: -13.339096069335938
    8. '(stdin' → logprob: -13.339096069335938
    9. ' input' → logprob: -15.464096069335938
    10. '(open' → logprob: -15.839096069335938

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.125210297293961e-05
    2. '.' → logprob: -9.750081062316895
    3. '.readline' → logprob: -10.875081062316895
    4. '.argv' → logprob: -12.750081062316895
    5. '.stdout' → logprob: -14.125081062316895
    6. '.std' → logprob: -16.00008201599121
    7. '(stdin' → logprob: -16.00008201599121
    8. 'stdin' → logprob: -17.37508201599121
    9. '.input' → logprob: -18.00008201599121
    10. '.st' → logprob: -18.25008201599121

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.5027299822540954e-05
    2. '.' → logprob: -10.000055313110352
    3. '.read' → logprob: -11.625055313110352
    4. '.buffer' → logprob: -14.375055313110352
    5. ' readline' → logprob: -17.62505531311035
    6. '.stdin' → logprob: -18.12505531311035
    7. '.readlines' → logprob: -19.00005531311035
    8. '.)' → logprob: -19.25005531311035
    9. 'read' → logprob: -19.62505531311035
    10. '.Read' → logprob: -20.62505531311035

Token 91: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4756248891353607
    2. '().' → logprob: -0.9756249189376831
    3. '()' → logprob: -6.475625038146973
    4. ' ())' → logprob: -12.475625038146973
    5. '(' → logprob: -14.725625038146973
    6. ')' → logprob: -14.850625038146973
    7. '();)' → logprob: -14.850625038146973
    8. '())
' → logprob: -15.225625038146973
    9. '()]' → logprob: -15.475625038146973
    10. '()\' → logprob: -15.725625038146973

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003700081491842866
    2. '
' → logprob: -5.753700256347656
    3. '\' → logprob: -7.753700256347656
    4. ' def' → logprob: -10.628700256347656
    5. '\n' → logprob: -11.003700256347656
    6. 'd' → logprob: -11.503700256347656
    7. 'ndef' → logprob: -11.878700256347656
    8. '

' → logprob: -12.128700256347656
    9. '(def' → logprob: -12.378700256347656
    10. '```' → logprob: -12.503700256347656

Token 93: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.04308025911450386
    2. 'read' → logprob: -3.1680803298950195
    3. ' readline' → logprob: -10.41808032989502
    4. ' ' → logprob: -11.04308032989502
    5. ' write' → logprob: -11.41808032989502
    6. '	read' → logprob: -11.66808032989502
    7. '_read' → logprob: -12.16808032989502
    8. '_' → logprob: -12.41808032989502
    9. ' main' → logprob: -12.66808032989502
    10. ' reads' → logprob: -13.54308032989502

Token 94: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1567094922065735
    2. '_int' → logprob: -3.0317094326019287
    3. '_' → logprob: -3.1567094326019287
    4. '_list' → logprob: -3.5317094326019287
    5. '_str' → logprob: -3.9067094326019287
    6. '_array' → logprob: -6.656709671020508
    7. '_s' → logprob: -7.531709671020508
    8. '_string' → logprob: -7.531709671020508
    9. '()' → logprob: -8.156709671020508
    10. '_raw' → logprob: -8.406709671020508

Token 95: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016072027385234833
    2. '_list' → logprob: -4.266071796417236
    3. 'list' → logprob: -7.266071796417236
    4. '_line' → logprob: -7.391071796417236
    5. '()' → logprob: -8.391072273254395
    6. '_array' → logprob: -8.391072273254395
    7. 'line' → logprob: -9.016072273254395
    8. 'array' → logprob: -12.641072273254395
    9. 'List' → logprob: -12.766072273254395
    10. '_lst' → logprob: -12.891072273254395

Token 96: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07016417384147644
    2. '():' → logprob: -2.695164203643799
    3. ' ()' → logprob: -9.19516372680664
    4. '()[' → logprob: -10.32016372680664
    5. '().' → logprob: -10.69516372680664
    6. '()>' → logprob: -11.19516372680664
    7. '(' → logprob: -11.57016372680664
    8. '()">' → logprob: -11.69516372680664
    9. '():
' → logprob: -12.07016372680664
    10. '(){' → logprob: -12.07016372680664

Token 97: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008325200527906418
    2. '():' → logprob: -5.258325099945068
    3. '().' → logprob: -6.383325099945068
    4. '():
' → logprob: -7.133325099945068
    5. '()[' → logprob: -8.508325576782227
    6. ' ()' → logprob: -8.758325576782227
    7. '(' → logprob: -9.633325576782227
    8. '()
' → logprob: -10.133325576782227
    9. '()>' → logprob: -10.883325576782227
    10. '():

' → logprob: -10.883325576782227

Token 98: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0989496186375618
    2. 'map' → logprob: -2.723949670791626
    3. ' list' → logprob: -3.973949670791626
    4. 'return' (adapté à ' return') → logprob: -4.723949432373047
    5. ' map' → logprob: -7.723949432373047
    6. 'sys' → logprob: -8.223949432373047
    7. ' return' → logprob: -9.223949432373047
    8. ')' → logprob: -10.598949432373047
    9. '(list' → logprob: -11.098949432373047
    10. '   ' → logprob: -11.223949432373047

Token 99: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.062003977596759796
    2. ' list' → logprob: -2.8120040893554688
    3. '(list' → logprob: -10.437004089355469
    4. '[list' → logprob: -12.437004089355469
    5. 'map' → logprob: -13.562004089355469
    6. '[' → logprob: -13.937004089355469
    7. '	list' → logprob: -14.187004089355469
    8. ' ' → logprob: -16.68700408935547
    9. '=list' → logprob: -16.68700408935547
    10. '   ' → logprob: -17.56200408935547

Token 100: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008644593879580498
    2. '(' → logprob: -4.7586445808410645
    3. '(sys' → logprob: -10.758645057678223
    4. '(int' → logprob: -12.383645057678223
    5. 'map' → logprob: -13.883645057678223
    6. '(list' → logprob: -13.883645057678223
    7. ' map' → logprob: -14.258645057678223
    8. '(eval' → logprob: -14.633645057678223
    9. '(

' → logprob: -14.758645057678223
    10. '()' → logprob: -15.008645057678223

Token 101: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000682530109770596
    2. '(' → logprob: -7.500682353973389
    3. 'int' → logprob: -9.125682830810547
    4. '<int' → logprob: -11.000682830810547
    5. '(
' → logprob: -13.750682830810547
    6. ',int' → logprob: -14.000682830810547
    7. '[int' → logprob: -14.250682830810547
    8. ']int' → logprob: -14.625682830810547
    9. '=int' → logprob: -14.875682830810547
    10. ' int' → logprob: -15.625682830810547

Token 102: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.43299567699432373
    2. ',' → logprob: -1.0579956769943237
    3. 'sys' → logprob: -6.057995796203613
    4. '(' → logprob: -6.682995796203613
    5. '=sys' → logprob: -8.432995796203613
    6. '	sys' → logprob: -8.932995796203613
    7. ' ,' → logprob: -9.057995796203613
    8. ',input' → logprob: -9.432995796203613
    9. ' sys' → logprob: -9.682995796203613
    10. ')' → logprob: -11.182995796203613

Token 103: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007142199319787323
    2. ' sys' → logprob: -7.250714302062988
    3. '(sys' → logprob: -12.875714302062988
    4. '=sys' → logprob: -14.000714302062988
    5. '	sys' → logprob: -14.250714302062988
    6. ')' → logprob: -16.375713348388672
    7. 'input' → logprob: -16.875713348388672
    8. 'str' → logprob: -17.375713348388672
    9. '
' → logprob: -18.625713348388672
    10. '   ' → logprob: -18.750713348388672

Token 104: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.941161776310764e-05
    2. 'stdin' → logprob: -10.500039100646973
    3. '.stdout' → logprob: -11.625039100646973
    4. '.' → logprob: -13.250039100646973
    5. '.std' → logprob: -14.125039100646973
    6. '(stdin' → logprob: -15.875039100646973
    7. ' stdin' → logprob: -16.12504005432129
    8. '.readline' → logprob: -16.75004005432129
    9. '.argv' → logprob: -16.87504005432129
    10. '.stderr' → logprob: -17.87504005432129

Token 105: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001882823125924915
    2. '.stdin' → logprob: -8.750187873840332
    3. '.' → logprob: -10.500187873840332
    4. '(sys' → logprob: -14.625187873840332
    5. '().' → logprob: -14.750187873840332
    6. '=sys' → logprob: -14.750187873840332
    7. '.readlines' → logprob: -15.375187873840332
    8. '.read' → logprob: -15.500187873840332
    9. '(stdin' → logprob: -15.500187873840332
    10. ' .' → logprob: -16.12518882751465

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.368984107510187e-05
    2. '()' → logprob: -10.750033378601074
    3. '.readline' → logprob: -11.375033378601074
    4. ' ().' → logprob: -14.875033378601074
    5. '(' → logprob: -15.625033378601074
    6. '.' → logprob: -17.00003433227539
    7. '()
' → logprob: -17.12503433227539
    8. ')' → logprob: -17.62503433227539
    9. '.strip' → logprob: -17.87503433227539
    10. '().__' → logprob: -18.00003433227539

Token 107: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.44128766655921936
    2. 'read' → logprob: -1.191287636756897
    3. 'rstrip' → logprob: -2.9412877559661865
    4. 'split' → logprob: -8.941287994384766
    5. ')' → logprob: -10.566287994384766
    6. 'decode' → logprob: -12.816287994384766
    7. ' readline' → logprob: -13.066287994384766
    8. '.readline' → logprob: -13.691287994384766
    9. ' strip' → logprob: -14.066287994384766
    10. 'r' → logprob: -15.566287994384766

Token 108: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13361884653568268
    2. '))' → logprob: -2.1336188316345215
    3. '()' → logprob: -5.1336188316345215
    4. '())' → logprob: -7.3836188316345215
    5. '()))
' → logprob: -9.63361930847168
    6. '(' → logprob: -9.75861930847168
    7. ')' → logprob: -10.75861930847168
    8. '()));' → logprob: -13.13361930847168
    9. ')))' → logprob: -13.63361930847168
    10. ' ))' → logprob: -14.00861930847168

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003455264260992408
    2. 'd' → logprob: -6.00345516204834
    3. 'class' → logprob: -7.25345516204834
    4. '\' → logprob: -8.50345516204834
    5. 'n' → logprob: -10.87845516204834
    6. '
' → logprob: -11.25345516204834
    7. '#' → logprob: -11.37845516204834
    8. 'de' → logprob: -12.12845516204834
    9. '\n' → logprob: -12.37845516204834
    10. '```' → logprob: -12.62845516204834

Token 110: ' push' (ID: 9349)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.23068712651729584
    2. 'read' → logprob: -1.980687141418457
    3. ' main' → logprob: -2.855687141418457
    4. 'main' → logprob: -4.855687141418457
    5. ' input' → logprob: -7.355687141418457
    6. 'input' → logprob: -8.230687141418457
    7. 'pow' → logprob: -8.605687141418457
    8. ' readline' → logprob: -8.605687141418457
    9. 'print' → logprob: -8.730687141418457
    10. 'int' → logprob: -8.730687141418457

Token 111: '_heap' (ID: 88741)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6320626139640808
    2. '_' → logprob: -1.7570626735687256
    3. '(heap' → logprob: -2.1320626735687256
    4. '_heap' → logprob: -2.3820626735687256
    5. '(queue' → logprob: -3.7570626735687256
    6. '(stack' → logprob: -4.0070624351501465
    7. '_(' → logprob: -4.0070624351501465
    8. '(_' → logprob: -5.2570624351501465
    9. '_stack' → logprob: -5.5070624351501465
    10. ' (' → logprob: -5.5070624351501465

Token 112: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39102327823638916
    2. '(heap' → logprob: -1.1410232782363892
    3. '(h' → logprob: -6.0160231590271
    4. ' (' → logprob: -6.8910231590271
    5. '(queue' → logprob: -8.516023635864258
    6. '(q' → logprob: -8.516023635864258
    7. '(item' → logprob: -9.766023635864258
    8. '(p' → logprob: -10.516023635864258
    9. '(_' → logprob: -10.641023635864258
    10. '(a' → logprob: -10.641023635864258

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.170270353322849e-05
    2. ' ,' → logprob: -10.625061988830566
    3. ')' → logprob: -11.375061988830566
    4. 'e' → logprob: -12.125061988830566
    5. ',h' → logprob: -12.250061988830566
    6. '),' → logprob: -12.375061988830566
    7. ',)' → logprob: -12.625061988830566
    8. ',u' → logprob: -12.875061988830566
    9. ',item' → logprob: -13.750061988830566
    10. 'u' → logprob: -14.375061988830566

Token 114: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24657297134399414
    2. 'val' → logprob: -2.371572971343994
    3. 'v' → logprob: -2.746572971343994
    4. 'item' → logprob: -3.121572971343994
    5. 'value' → logprob: -4.496572971343994
    6. ' val' → logprob: -5.996572971343994
    7. ' x' → logprob: -6.121572971343994
    8. ' item' → logprob: -7.496572971343994
    9. ' v' → logprob: -7.996572971343994
    10. ' value' → logprob: -8.621572494506836

Token 115: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021936828270554543
    2. ')' → logprob: -6.377193450927734
    3. '):
' → logprob: -7.627193450927734
    4. '):
' → logprob: -13.127193450927734
    5. ' ):' → logprob: -13.377193450927734
    6. ')):' → logprob: -15.127193450927734
    7. '):

' → logprob: -15.502193450927734
    8. ':' → logprob: -15.627193450927734
    9. ')：' → logprob: -17.002193450927734
    10. '_' → logprob: -17.252193450927734

Token 116: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.635324239730835
    2. ' key' → logprob: -1.635324239730835
    3. 'priority' → logprob: -2.010324239730835
    4. ' priority' → logprob: -2.885324239730835
    5. 'heap' → logprob: -3.135324239730835
    6. ' heap' → logprob: -3.510324239730835
    7. ' entry' → logprob: -3.760324239730835
    8. 'k' → logprob: -3.885324239730835
    9. 'val' → logprob: -4.010324478149414
    10. 'idx' → logprob: -4.135324478149414

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2326193004846573
    2. 'nd' → logprob: -1.982619285583496
    3. 'dx' → logprob: -3.232619285583496
    4. 'tem' → logprob: -4.607619285583496
    5. 'n' → logprob: -4.982619285583496
    6. '):
' → logprob: -5.732619285583496
    7. ')' → logprob: -5.857619285583496
    8. 'd' → logprob: -5.982619285583496
    9. 'x' → logprob: -6.357619285583496
    10. 'dex' → logprob: -6.982619285583496

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057694997638463974
    2. '):' → logprob: -3.307694911956787
    3. ':' → logprob: -5.057694911956787
    4. ')' → logprob: -5.557694911956787
    5. ' he' → logprob: -5.557694911956787
    6. ',' → logprob: -5.807694911956787
    7. '):
' → logprob: -6.807694911956787
    8. 'he' → logprob: -7.307694911956787
    9. ':
' → logprob: -8.807695388793945
    10. ' heap' → logprob: -8.932695388793945

Token 119: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.005742136854678392
    2. 'he' (adapté à ' he') → logprob: -5.380742073059082
    3. '   ' → logprob: -6.880742073059082
    4. ' if' → logprob: -9.880742073059082
    5. ' return' → logprob: -10.505742073059082
    6. ' heap' → logprob: -12.630742073059082
    7. ' h' → logprob: -12.755742073059082
    8. 'return' → logprob: -13.005742073059082
    9. ' while' → logprob: -13.505742073059082
    10. 'if' → logprob: -14.005742073059082

Token 120: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00038980069803074
    2. 'ap' → logprob: -7.875389575958252
    3. 'a' → logprob: -12.25039005279541
    4. ' app' → logprob: -12.50039005279541
    5. 'append' → logprob: -14.50039005279541
    6. '```' → logprob: -16.000389099121094
    7. '	app' → logprob: -16.500389099121094
    8. 'ап' → logprob: -16.750389099121094
    9. '   ' → logprob: -17.000389099121094
    10. ' ' → logprob: -17.000389099121094

Token 121: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.5928495486150496e-05
    2. 'push' → logprob: -11.250016212463379
    3. 'sh' → logprob: -13.000016212463379
    4. 'op' → logprob: -15.125016212463379
    5. 'us' → logprob: -15.875016212463379
    6. 'u' → logprob: -16.375015258789062
    7. '```' → logprob: -16.875015258789062
    8. '   ' → logprob: -17.875015258789062
    9. 'ut' → logprob: -18.250015258789062
    10. 'p' → logprob: -18.750015258789062

Token 122: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03804803267121315
    2. '(' → logprob: -3.288048028945923
    3. '(heap' → logprob: -13.663047790527344
    4. '((' → logprob: -13.788047790527344
    5. '(
' → logprob: -13.913047790527344
    6. '(s' → logprob: -14.413047790527344
    7. '<|end|>' → logprob: -14.413047790527344
    8. '(v' → logprob: -14.788047790527344
    9. ' (' → logprob: -15.163047790527344
    10. '(i' → logprob: -15.163047790527344

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25431469082832336
    2. '(v' → logprob: -2.004314661026001
    3. ')' → logprob: -3.504314661026001
    4. '(' → logprob: -3.504314661026001
    5. '((' → logprob: -4.12931489944458
    6. ' (' → logprob: -4.75431489944458
    7. ',(' → logprob: -6.12931489944458
    8. '(i' → logprob: -6.62931489944458
    9. ' ,' → logprob: -7.25431489944458
    10. ',v' → logprob: -8.129314422607422

Token 124: ' (-' (ID: 21382)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1139155775308609
    2. ' (' → logprob: -2.2389156818389893
    3. '(' → logprob: -6.98891544342041
    4. '(i' → logprob: -8.98891544342041
    5. ' v' → logprob: -10.61391544342041
    6. '(value' → logprob: -11.86391544342041
    7. ')' → logprob: -12.48891544342041
    8. 'v' → logprob: -12.61391544342041
    9. ' ' → logprob: -12.86391544342041
    10. '((' → logprob: -14.11391544342041

Token 125: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.47626737493556e-05
    2. ' v' → logprob: -11.12503433227539
    3. 'i' → logprob: -11.50003433227539
    4. ')v' → logprob: -12.75003433227539
    5. 'vi' → logprob: -12.87503433227539
    6. ')' → logprob: -12.87503433227539
    7. '(v' → logprob: -14.62503433227539
    8. '
' → logprob: -15.12503433227539
    9. '   ' → logprob: -15.50003433227539
    10. '	v' → logprob: -16.06253433227539

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002086854539811611
    2. ',i' → logprob: -6.377086639404297
    3. ' ,' → logprob: -7.877086639404297
    4. ')' → logprob: -12.752086639404297
    5. ',
' → logprob: -14.002086639404297
    6. ' i' → logprob: -14.752086639404297
    7. ' ' → logprob: -15.377086639404297
    8. ',)' → logprob: -15.502086639404297
    9. ',index' → logprob: -15.877086639404297
    10. '),' → logprob: -16.002086639404297

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22602558135986328
    2. ' i' → logprob: -1.6010255813598633
    3. '-i' → logprob: -8.226025581359863
    4. ' -' → logprob: -8.476025581359863
    5. '-' → logprob: -9.101025581359863
    6. ' ' → logprob: -11.476025581359863
    7. ')' → logprob: -13.101025581359863
    8. '  ' → logprob: -13.101025581359863
    9. '   ' → logprob: -13.476025581359863
    10. 'v' → logprob: -13.726025581359863

Token 128: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132791221141815
    2. '))' → logprob: -1.313279151916504
    3. ')
' → logprob: -11.313279151916504
    4. '))
' → logprob: -13.063279151916504
    5. ')))' → logprob: -13.813279151916504
    6. ' )' → logprob: -14.313279151916504
    7. ')

' → logprob: -14.563279151916504
    8. '))

' → logprob: -15.188279151916504
    9. ' ))' → logprob: -15.188279151916504
    10. '),' → logprob: -15.813279151916504

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01441910769790411
    2. '
' → logprob: -4.889419078826904
    3. '<|end|>' → logprob: -5.014419078826904
    4. '<|end|>' → logprob: -9.639419555664062
    5. '

' → logprob: -10.514419555664062
    6. ' def' → logprob: -10.639419555664062
    7. '  
' → logprob: -11.389419555664062
    8. ')' → logprob: -11.889419555664062
    9. ' 
' → logprob: -12.389419555664062
    10. '
' → logprob: -12.764419555664062

Token 130: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.008668106980621815
    2. ' pop' → logprob: -4.758667945861816
    3. 'def' → logprob: -10.133667945861816
    4. 'push' → logprob: -12.008667945861816
    5. '```' → logprob: -13.508667945861816
    6. '	pop' → logprob: -13.758667945861816
    7. 'pull' → logprob: -14.133667945861816
    8. 'Pop' → logprob: -14.133667945861816
    9. 'peek' → logprob: -14.133667945861816
    10. ' def' → logprob: -14.508667945861816

Token 131: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -3.690834273584187e-05
    2. '_' → logprob: -11.00003719329834
    3. '_he' → logprob: -11.50003719329834
    4. 'heap' → logprob: -12.75003719329834
    5. '_h' → logprob: -12.87503719329834
    6. '(heap' → logprob: -13.12503719329834
    7. '_stack' → logprob: -14.00003719329834
    8. '(h' → logprob: -14.25003719329834
    9. '_heat' → logprob: -15.37503719329834
    10. '(' → logprob: -15.37503719329834

Token 132: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00020497082732617855
    2. '(' → logprob: -8.500205039978027
    3. '()' → logprob: -14.250205039978027
    4. '(
' → logprob: -14.875205039978027
    5. '(heap' → logprob: -14.875205039978027
    6. '(H' → logprob: -16.75020408630371
    7. ' (' → logprob: -17.50020408630371
    8. '(

' → logprob: -17.87520408630371
    9. 'def' → logprob: -18.25020408630371
    10. '<|end|>' → logprob: -18.62520408630371

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014624357223510742
    2. '):
' → logprob: -4.51462459564209
    3. ')' → logprob: -5.63962459564209
    4. ' ):' → logprob: -11.51462459564209
    5. '):

' → logprob: -13.13962459564209
    6. ',' → logprob: -13.13962459564209
    7. '):
' → logprob: -13.76462459564209
    8. ')
' → logprob: -15.76462459564209
    9. '(h' → logprob: -15.88962459564209
    10. ')：' → logprob: -16.264623641967773

Token 134: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5324053168296814
    2. 'return' → logprob: -0.9074053168296814
    3. '   ' → logprob: -5.532405376434326
    4. ' return' → logprob: -5.782405376434326
    5. '_,' → logprob: -7.032405376434326
    6. '(-' → logprob: -8.782404899597168
    7. 'neg' → logprob: -8.782404899597168
    8. 'val' → logprob: -8.907404899597168
    9. ' v' → logprob: -9.032404899597168
    10. 'ret' → logprob: -9.282404899597168

Token 135: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.26696211099624634
    2. 'return' → logprob: -1.5169620513916016
    3. '_,' → logprob: -4.766962051391602
    4. ' return' → logprob: -6.141962051391602
    5. '   ' → logprob: -7.266962051391602
    6. 'neg' → logprob: -7.391962051391602
    7. 'val' → logprob: -7.641962051391602
    8. '(-' → logprob: -7.641962051391602
    9. '_v' → logprob: -8.141962051391602
    10. 'value' → logprob: -8.266962051391602

Token 136: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5778677463531494
    2. ',' → logprob: -0.8278677463531494
    3. ' =' → logprob: -6.32786750793457
    4. ',i' → logprob: -10.07786750793457
    5. ',v' → logprob: -10.32786750793457
    6. ',_' → logprob: -11.07786750793457
    7. '_,' → logprob: -11.45286750793457
    8. ' ,' → logprob: -11.82786750793457
    9. '=
' → logprob: -12.20286750793457
    10. ',h' → logprob: -12.45286750793457

Token 137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42874792218208313
    2. ' i' → logprob: -1.0537478923797607
    3. 'idx' → logprob: -10.42874813079834
    4. ' idx' → logprob: -12.17874813079834
    5. 'index' → logprob: -12.55374813079834
    6. ' ' → logprob: -12.67874813079834
    7. '<|end|>' → logprob: -13.42874813079834
    8. '	i' → logprob: -13.67874813079834
    9. '```' → logprob: -13.67874813079834
    10. '_i' → logprob: -14.42874813079834

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. ')' → logprob: -14.923587799072266
    4. '=
' → logprob: -16.173587799072266
    5. ')=' → logprob: -16.173587799072266
    6. '=

' → logprob: -16.673587799072266
    7. ',' → logprob: -17.673587799072266
    8. ' =
' → logprob: -18.298587799072266
    9. '＝' → logprob: -18.673587799072266
    10. '   ' → logprob: -18.673587799072266

Token 139: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5760731101036072
    2. ' he' → logprob: -0.8260731101036072
    3. 'h' → logprob: -9.076072692871094
    4. ' h' → logprob: -11.451072692871094
    5. '   ' → logprob: -13.076072692871094
    6. '_he' → logprob: -13.451072692871094
    7. 'heap' → logprob: -13.576072692871094
    8. ' ' → logprob: -14.201072692871094
    9. '-he' → logprob: -14.326072692871094
    10. '.he' → logprob: -14.576072692871094

Token 140: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001093841710826382
    2. 'ap' → logprob: -9.125109672546387
    3. 'a' → logprob: -15.625109672546387
    4. 'q' → logprob: -16.00010871887207
    5. 'he' → logprob: -17.00010871887207
    6. ' app' → logprob: -17.25010871887207
    7. '(app' → logprob: -17.37510871887207
    8. '[' → logprob: -17.62510871887207
    9. 'ап' → logprob: -18.37510871887207
    10. '```' → logprob: -18.50010871887207

Token 141: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00014489953173324466
    2. 'pop' → logprob: -9.125144958496094
    3. 'p' → logprob: -10.500144958496094
    4. 'ap' → logprob: -12.375144958496094
    5. 'app' → logprob: -13.625144958496094
    6. 'o' → logprob: -14.750144958496094
    7. 'q' → logprob: -14.750144958496094
    8. 'opleft' → logprob: -14.750144958496094
    9. 'he' → logprob: -15.375144958496094
    10. 'оп' → logprob: -15.625144958496094

Token 142: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -16.125001907348633
    4. '(H' → logprob: -18.375001907348633
    5. '(s' → logprob: -18.500001907348633
    6. ' (' → logprob: -18.875001907348633
    7. '(
' → logprob: -19.000001907348633
    8. 'h' → logprob: -19.375001907348633
    9. '(heap' → logprob: -19.375001907348633
    10. 's' → logprob: -19.500001907348633

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01418572012335062
    2. ')
' → logprob: -4.264185905456543
    3. ')
' → logprob: -11.514185905456543
    4. ')return' → logprob: -11.764185905456543
    5. ')

' → logprob: -12.514185905456543
    6. ' )' → logprob: -15.014185905456543
    7. ')v' → logprob: -16.264184951782227
    8. 'return' → logprob: -16.889184951782227
    9. ')`' → logprob: -17.014184951782227
    10. '),' → logprob: -17.264184951782227

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22107762098312378
    2. ' return' → logprob: -2.0960776805877686
    3. 'return' → logprob: -2.5960776805877686
    4. '	return' → logprob: -7.5960774421691895
    5. 'v' → logprob: -8.846077919006348
    6. '<|end|>' → logprob: -8.971077919006348
    7. ')' → logprob: -10.721077919006348
    8. ',' → logprob: -11.346077919006348
    9. '
' → logprob: -12.471077919006348
    10. ':return' → logprob: -12.596077919006348

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015084042213857174
    2. ' return' → logprob: -4.515084266662598
    3. '   ' → logprob: -5.515084266662598
    4. 'v' → logprob: -13.640084266662598
    5. '	return' → logprob: -13.765084266662598
    6. '  ' → logprob: -16.26508331298828
    7. ':return' → logprob: -16.39008331298828
    8. '
' → logprob: -16.64008331298828
    9. ' ' → logprob: -17.39008331298828
    10. 'eturn' → logprob: -17.51508331298828

Token 146: ' -' (ID: 533)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.14284341037273407
    2. '-i' → logprob: -2.89284348487854
    3. ' -' → logprob: -3.01784348487854
    4. '(-' → logprob: -3.64284348487854
    5. '-' → logprob: -6.142843246459961
    6. ' (-' → logprob: -8.642843246459961
    7. '-V' → logprob: -8.892843246459961
    8. '-in' → logprob: -10.642843246459961
    9. '-value' → logprob: -10.892843246459961
    10. '-I' → logprob: -11.267843246459961

Token 147: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. ' v' → logprob: -16.125
    3. '<|end|>' → logprob: -16.5
    4. 'vq' → logprob: -17.0
    5. '	v' → logprob: -18.625
    6. 've' → logprob: -18.875
    7. ')v' → logprob: -20.125
    8. '1' → logprob: -20.375
    9. 'vj' → logprob: -20.875
    10. 'value' → logprob: -21.125

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029516739305108786
    2. ',i' → logprob: -5.877951622009277
    3. ' ,' → logprob: -8.877951622009277
    4. ',
' → logprob: -12.002951622009277
    5. ',v' → logprob: -14.752951622009277
    6. 'i' → logprob: -15.127951622009277
    7. ',int' → logprob: -15.627951622009277
    8. '‌,' → logprob: -16.502952575683594
    9. '<|end|>' → logprob: -16.502952575683594
    10. ' i' → logprob: -16.627952575683594

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022473573684692
    2. ' i' → logprob: -1.9102246761322021
    3. ' ' → logprob: -14.785224914550781
    4. '	i' → logprob: -16.41022491455078
    5. ' ' → logprob: -17.03522491455078
    6. '  ' → logprob: -18.16022491455078
    7. '<|end|>' → logprob: -18.53522491455078
    8. '_i' → logprob: -18.66022491455078
    9. '   ' → logprob: -18.91022491455078
    10. '1' → logprob: -20.53522491455078

Token 150: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6385637521743774
    2. '<|end|>' → logprob: -0.8885637521743774
    3. '
' → logprob: -2.888563632965088
    4. '#' → logprob: -5.638563632965088
    5. '\n' → logprob: -7.638563632965088
    6. '<|end|>' → logprob: -8.263564109802246
    7. '\' → logprob: -8.513564109802246
    8. '```' → logprob: -8.763564109802246
    9. '  
' → logprob: -9.513564109802246
    10. ' 
' → logprob: -9.888564109802246

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00036418659146875143
    2. 'class' → logprob: -8.000364303588867
    3. '
' → logprob: -11.750364303588867
    4. 'n' → logprob: -12.000364303588867
    5. '#' → logprob: -12.250364303588867
    6. 'ndef' → logprob: -13.000364303588867
    7. 'd' → logprob: -13.500364303588867
    8. 'from' → logprob: -13.625364303588867
    9. 'deque' → logprob: -13.625364303588867
    10. '<|end|>' → logprob: -13.750364303588867

Token 152: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3206821382045746
    2. ' solve' → logprob: -2.3206820487976074
    3. 'main' → logprob: -2.4456820487976074
    4. 'solve' → logprob: -3.5706820487976074
    5. ' dfs' → logprob: -3.9456820487976074
    6. ' d' → logprob: -4.570682048797607
    7. 'dfs' → logprob: -4.820682048797607
    8. 'd' → logprob: -5.070682048797607
    9. ' top' → logprob: -5.570682048797607
    10. ' binary' → logprob: -5.945682048797607

Token 153: '_prev' (ID: 60491)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.33883070945739746
    2. '_' → logprob: -3.5888307094573975
    3. '_m' → logprob: -3.7138307094573975
    4. '_div' → logprob: -3.8388307094573975
    5. '_min' → logprob: -4.213830947875977
    6. '_per' → logprob: -4.213830947875977
    7. '_factor' → logprob: -4.213830947875977
    8. '_sorted' → logprob: -4.213830947875977
    9. '_neighbors' → logprob: -4.463830947875977
    10. '_next' → logprob: -4.588830947875977

Token 154: '_idx' (ID: 15257)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.29102760553359985
    2. '_idx' → logprob: -2.041027545928955
    3. '(i' → logprob: -3.791027545928955
    4. '_' → logprob: -4.041027545928955
    5. '_value' → logprob: -4.291027545928955
    6. '_indices' → logprob: -4.791027545928955
    7. '_val' → logprob: -5.041027545928955
    8. '(_' → logprob: -5.166027545928955
    9. '_pos' → logprob: -5.291027545928955
    10. '_item' → logprob: -5.416027545928955

Token 155: '(i' (ID: 3649)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.7932456731796265
    2. '(h' → logprob: -1.0432456731796265
    3. '(lst' → logprob: -2.668245792388916
    4. '(a' → logprob: -3.168245792388916
    5. '(' → logprob: -3.418245792388916
    6. '(array' → logprob: -3.918245792388916
    7. '(nums' → logprob: -4.793245792388916
    8. '(i' → logprob: -5.168245792388916
    9. '(idx' → logprob: -5.418245792388916
    10. '(s' → logprob: -5.668245792388916

Token 156: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2821778655052185
    2. ',' → logprob: -1.4071779251098633
    3. '):
' → logprob: -7.282177925109863
    4. ' ):' → logprob: -8.657177925109863
    5. ')' → logprob: -9.157177925109863
    6. ' ,' → logprob: -10.657177925109863
    7. ',i' → logprob: -11.282177925109863
    8. ':' → logprob: -11.532177925109863
    9. '):
' → logprob: -13.282177925109863
    10. ',index' → logprob: -13.282177925109863

Token 157: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5661354660987854
    2. ' n' → logprob: -1.0661354064941406
    3. 'arr' → logprob: -3.9411354064941406
    4. ' arr' → logprob: -4.566135406494141
    5. ' length' → logprob: -4.691135406494141
    6. 'N' → logprob: -4.816135406494141
    7. 'k' → logprob: -5.566135406494141
    8. ' N' → logprob: -5.691135406494141
    9. 'lst' → logprob: -5.691135406494141
    10. ' lst' → logprob: -5.691135406494141

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009127851575613022
    2. ',' → logprob: -5.259127616882324
    3. '):
' → logprob: -5.634127616882324
    4. ')' → logprob: -8.134127616882324
    5. ' ):' → logprob: -11.259127616882324
    6. ':' → logprob: -13.259127616882324
    7. '):
' → logprob: -13.384127616882324
    8. '):

' → logprob: -14.009127616882324
    9. ',
' → logprob: -15.009127616882324
    10. '=' → logprob: -15.134127616882324

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04770795255899429
    2. ' return' → logprob: -3.297708034515381
    3. 'return' → logprob: -4.797708034515381
    4. '
' → logprob: -6.922708034515381
    5. '	return' → logprob: -8.422707557678223
    6. '    
' → logprob: -9.297707557678223
    7. ' 
' → logprob: -11.172707557678223
    8. ' if' → logprob: -11.172707557678223
    9. ' ' → logprob: -11.797707557678223
    10. '<|end|>' → logprob: -11.797707557678223

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02426304668188095
    2. ' return' → logprob: -3.7742631435394287
    3. '   ' → logprob: -7.27426290512085
    4. ' (' → logprob: -9.149263381958008
    5. 'if' → logprob: -9.274263381958008
    6. '
' → logprob: -9.649263381958008
    7. ' if' → logprob: -10.399263381958008
    8. '(return' → logprob: -11.649263381958008
    9. '(i' → logprob: -12.024263381958008
    10. '	return' → logprob: -12.399263381958008

Token 161: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08004830032587051
    2. ' (' → logprob: -2.5800483226776123
    3. 'i' → logprob: -6.830048084259033
    4. ' i' → logprob: -10.205048561096191
    5. '(n' → logprob: -11.205048561096191
    6. '(' → logprob: -11.705048561096191
    7. '
' → logprob: -11.955048561096191
    8. '   ' → logprob: -12.580048561096191
    9. 'n' → logprob: -12.830048561096191
    10. ' ' → logprob: -13.455048561096191

Token 162: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00030316898482851684
    2. '(i' → logprob: -8.125303268432617
    3. ' i' → logprob: -12.125303268432617
    4. ')i' → logprob: -14.750303268432617
    5. ')' → logprob: -15.125303268432617
    6. ' (' → logprob: -15.375303268432617
    7. 'n' → logprob: -15.500303268432617
    8. '	i' → logprob: -15.625303268432617
    9. '{i' → logprob: -15.750303268432617
    10. '   ' → logprob: -16.000303268432617

Token 163: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05493554845452309
    2. ' -' → logprob: -2.9299354553222656
    3. '+' → logprob: -10.054935455322266
    4. '1' → logprob: -12.804935455322266
    5. ' ' → logprob: -13.054935455322266
    6. ' ' → logprob: -13.804935455322266
    7. 'n' → logprob: -13.929935455322266
    8. ')' → logprob: -14.179935455322266
    9. '-
' → logprob: -14.304935455322266
    10. ' +' → logprob: -14.429935455322266

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '
' → logprob: -14.875085830688477
    4. '   ' → logprob: -15.250085830688477
    5. ')' → logprob: -16.125085830688477
    6. '```' → logprob: -16.875085830688477
    7. '<|end|>' → logprob: -17.625085830688477
    8. '  ' → logprob: -17.625085830688477
    9. '2' → logprob: -18.625085830688477
    10. '

' → logprob: -18.750085830688477

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '
' → logprob: -14.250022888183594
    4. ')' → logprob: -15.750022888183594
    5. 'n' → logprob: -15.750022888183594
    6. '   ' → logprob: -16.812522888183594
    7. '```' → logprob: -17.250022888183594
    8. '<|end|>' → logprob: -17.437522888183594
    9. '[' → logprob: -18.000022888183594
    10. '

' → logprob: -18.375022888183594

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023522183764725924
    2. '+' → logprob: -6.127352237701416
    3. ')%' → logprob: -9.502351760864258
    4. '+n' → logprob: -9.502351760864258
    5. ' +' → logprob: -11.627351760864258
    6. ' )' → logprob: -12.252351760864258
    7. ')n' → logprob: -13.502351760864258
    8. 'n' → logprob: -13.877351760864258
    9. '%' → logprob: -14.252351760864258
    10. '%n' → logprob: -15.127351760864258

Token 167: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31452909111976624
    2. '%' → logprob: -1.3145290613174438
    3. '%n' → logprob: -6.689528942108154
    4. ')' → logprob: -11.689529418945312
    5. ' ' → logprob: -12.064529418945312
    6. ' ' → logprob: -13.189529418945312
    7. ' if' → logprob: -13.564529418945312
    8. '%i' → logprob: -13.689529418945312
    9. '
' → logprob: -13.814529418945312
    10. '%
' → logprob: -14.189529418945312

Token 168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861456897109747
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -17.133615493774414
    4. '(n' → logprob: -17.383615493774414
    5. '_n' → logprob: -19.758615493774414
    6. ')n' → logprob: -19.758615493774414
    7. '$n' → logprob: -21.258615493774414
    8. ',n' → logprob: -21.383615493774414
    9. ' ' → logprob: -21.508615493774414
    10. '<|end|>' → logprob: -21.883615493774414

Token 169: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012658444233238697
    2. '<|end|>' → logprob: -4.387658596038818
    3. '
' → logprob: -9.01265811920166
    4. '<|end|>' → logprob: -11.51265811920166
    5. '```' → logprob: -11.63765811920166
    6. ' def' → logprob: -12.51265811920166
    7. '

' → logprob: -12.76265811920166
    8. '  
' → logprob: -14.38765811920166
    9. '    
' → logprob: -15.88765811920166
    10. '``' → logprob: -16.012659072875977

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004696645773947239
    2. '<|end|>' → logprob: -5.379696846008301
    3. '
' → logprob: -10.0046968460083
    4. '```' → logprob: -10.6296968460083
    5. ' def' → logprob: -12.7546968460083
    6. '<|end|>' → logprob: -13.0046968460083
    7. ')' → logprob: -15.2546968460083
    8. '\' → logprob: -15.3796968460083
    9. '  
' → logprob: -15.3796968460083
    10. 'de' → logprob: -15.6296968460083

Token 171: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.17981623113155365
    2. 'get' → logprob: -1.8048162460327148
    3. '_get' → logprob: -10.679816246032715
    4. 'def' → logprob: -11.304816246032715
    5. ' next' → logprob: -12.429816246032715
    6. ' def' → logprob: -12.429816246032715
    7. ' ' → logprob: -12.554816246032715
    8. '.get' → logprob: -12.992316246032715
    9. 'next' → logprob: -13.117316246032715
    10. ' main' → logprob: -13.117316246032715

Token 172: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.4855663721391466e-05
    2. ' next' → logprob: -12.250015258789062
    3. 'next' → logprob: -13.125015258789062
    4. '_' → logprob: -13.125015258789062
    5. ' _' → logprob: -13.250015258789062
    6. '_n' → logprob: -13.375015258789062
    7. '_current' → logprob: -14.000015258789062
    8. 'Next' → logprob: -14.125015258789062
    9. '_prev' → logprob: -14.125015258789062
    10. '_NEXT' → logprob: -16.250015258789062

Token 173: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.491498531133402e-06
    2. '_index' → logprob: -11.875009536743164
    3. '_' → logprob: -14.125009536743164
    4. '_idxs' → logprob: -14.750009536743164
    5. '_i' → logprob: -15.000009536743164
    6. '_id' → logprob: -15.250009536743164
    7. '```' → logprob: -15.750009536743164
    8. '_IDX' → logprob: -16.250009536743164
    9. '##_' → logprob: -16.250009536743164
    10. '_ix' → logprob: -16.250009536743164

Token 174: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0019288709154352546
    2. '(' → logprob: -6.251928806304932
    3. '(ii' → logprob: -16.626928329467773
    4. '(n' → logprob: -17.251928329467773
    5. '(
' → logprob: -17.376928329467773
    6. ' (' → logprob: -17.751928329467773
    7. '(a' → logprob: -18.376928329467773
    8. '((' → logprob: -18.876928329467773
    9. '(index' → logprob: -19.126928329467773
    10. '(iv' → logprob: -19.126928329467773

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031258241506293416
    2. ' ,' → logprob: -8.750312805175781
    3. ',n' → logprob: -8.875312805175781
    4. '(n' → logprob: -11.625312805175781
    5. ',i' → logprob: -13.125312805175781
    6. ',
' → logprob: -13.375312805175781
    7. ')' → logprob: -14.000312805175781
    8. '(i' → logprob: -14.500312805175781
    9. 'n' → logprob: -15.875312805175781
    10. '(' → logprob: -16.75031280517578

Token 176: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019373197574168444
    2. ' n' → logprob: -6.251937389373779
    3. '<|end|>' → logprob: -12.626936912536621
    4. ')' → logprob: -12.876936912536621
    5. ' ' → logprob: -13.501936912536621
    6. '(n' → logprob: -15.001936912536621
    7. ')n' → logprob: -15.251936912536621
    8. '   ' → logprob: -15.626936912536621
    9. '...' → logprob: -15.626936912536621
    10. '_n' → logprob: -15.876936912536621

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38730865716934204
    2. '):
' → logprob: -1.1373085975646973
    3. ')' → logprob: -7.762308597564697
    4. '):
' → logprob: -11.637309074401855
    5. '):

' → logprob: -13.012309074401855
    6. ')
' → logprob: -15.262309074401855
    7. '   ' → logprob: -15.387309074401855
    8. ' ):' → logprob: -15.387309074401855
    9. ':' → logprob: -16.51230812072754
    10. ' ):
' → logprob: -16.76230812072754

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0839759111404419
    2. ' return' → logprob: -2.8339757919311523
    3. 'return' → logprob: -3.8339757919311523
    4. ' (' → logprob: -9.333975791931152
    5. '	return' → logprob: -10.708975791931152
    6. '(i' → logprob: -11.208975791931152
    7. '    
' → logprob: -11.458975791931152
    8. '    ' → logprob: -12.333975791931152
    9. ' ' → logprob: -13.583975791931152
    10. '(return' → logprob: -13.833975791931152

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.500191867351532
    2. ' return' → logprob: -1.2501919269561768
    3. '(i' → logprob: -2.6251919269561768
    4. '   ' → logprob: -4.000191688537598
    5. ' (' → logprob: -4.125191688537598
    6. '(return' → logprob: -8.625191688537598
    7. ' ' → logprob: -10.625191688537598
    8. '	return' → logprob: -11.375191688537598
    9. '
' → logprob: -12.000191688537598
    10. '(' → logprob: -12.750191688537598

Token 180: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31326231360435486
    2. '(i' → logprob: -1.3132623434066772
    3. ' ' → logprob: -15.563261985778809
    4. '(' → logprob: -15.563261985778809
    5. '   ' → logprob: -16.313262939453125
    6. '(I' → logprob: -16.813262939453125
    7. '((' → logprob: -17.688262939453125
    8. '(ii' → logprob: -18.063262939453125
    9. ' ' → logprob: -18.813262939453125
    10. '(in' → logprob: -19.563262939453125

Token 181: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002619318547658622
    2. '(i' → logprob: -8.250262260437012
    3. ' i' → logprob: -14.625262260437012
    4. '   ' → logprob: -16.625261306762695
    5. '_i' → logprob: -17.250261306762695
    6. ' (' → logprob: -17.500261306762695
    7. '	i' → logprob: -18.250261306762695
    8. '{i' → logprob: -18.250261306762695
    9. '```' → logprob: -18.375261306762695
    10. '
' → logprob: -18.625261306762695

Token 182: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858850687742233
    2. ' +' → logprob: -3.048588514328003
    3. '1' → logprob: -14.048588752746582
    4. '+
' → logprob: -15.173588752746582
    5. '+)' → logprob: -17.298587799072266
    6. '+i' → logprob: -17.548587799072266
    7. ' plus' → logprob: -17.673587799072266
    8. '＋' → logprob: -18.173587799072266
    9. ' +
' → logprob: -18.423587799072266
    10. ')' → logprob: -18.423587799072266

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. ')' → logprob: -16.251325607299805
    4. '   ' → logprob: -18.251325607299805
    5. 'def' → logprob: -18.501325607299805
    6. '```' → logprob: -18.501325607299805
    7. '2' → logprob: -18.751325607299805
    8. ' ' → logprob: -19.938825607299805
    9. '
' → logprob: -20.001325607299805
    10. '  ' → logprob: -20.063825607299805

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.375
    4. '
' → logprob: -19.5
    5. ')' → logprob: -20.5
    6. 'def' → logprob: -20.875
    7. '<|end|>' → logprob: -21.0
    8. 'i' → logprob: -21.125
    9. '2' → logprob: -21.375
    10. '１' → logprob: -21.4375

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036037206882610917
    2. ',' → logprob: -8.000360488891602
    3. ')%' → logprob: -11.125360488891602
    4. ' )' → logprob: -11.625360488891602
    5. ')n' → logprob: -15.000360488891602
    6. '%' → logprob: -15.250360488891602
    7. ')
' → logprob: -15.750360488891602
    8. ' ,' → logprob: -16.1253604888916
    9. '   ' → logprob: -16.2503604888916
    10. 'n' → logprob: -16.7503604888916

Token 186: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5775557160377502
    2. ' %' → logprob: -0.8275557160377502
    3. '%n' → logprob: -6.4525556564331055
    4. ')' → logprob: -11.202555656433105
    5. ' n' → logprob: -11.577555656433105
    6. 'n' → logprob: -11.702555656433105
    7. ')%' → logprob: -13.327555656433105
    8. '
' → logprob: -13.702555656433105
    9. ' ' → logprob: -14.202555656433105
    10. '(n' → logprob: -14.202555656433105

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7697225252486533e-06
    2. ' n' → logprob: -12.500003814697266
    3. '	n' → logprob: -21.625003814697266
    4. ')n' → logprob: -22.750003814697266
    5. '(n' → logprob: -23.125003814697266
    6. '```' → logprob: -23.750003814697266
    7. '_n' → logprob: -24.125003814697266
    8. '   ' → logprob: -24.750003814697266
    9. '<|end|>' → logprob: -25.000003814697266
    10. '$n' → logprob: -25.250003814697266

Token 188: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2976383566856384
    2. '<|end|>' → logprob: -1.4226384162902832
    3. '<|end|>' → logprob: -4.547638416290283
    4. '\n' → logprob: -6.422638416290283
    5. '
' → logprob: -6.547638416290283
    6. '\' → logprob: -6.922638416290283
    7. '```' → logprob: -7.297638416290283
    8. '#' → logprob: -8.047637939453125
    9. 'newline' → logprob: -8.922637939453125
    10. ')' → logprob: -9.047637939453125

Token 189: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024876687675714493
    2. 'class' → logprob: -6.002487659454346
    3. 'n' → logprob: -12.252488136291504
    4. 'ndef' → logprob: -13.002488136291504
    5. '
' → logprob: -13.252488136291504
    6. 'deque' → logprob: -13.752488136291504
    7. 'd' → logprob: -14.127488136291504
    8. '#' → logprob: -14.377488136291504
    9. 'from' → logprob: -15.502488136291504
    10. '\' → logprob: -15.752488136291504

Token 190: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08018144220113754
    2. ' solve' → logprob: -2.705181360244751
    3. 'main' → logprob: -5.58018159866333
    4. 'solve' → logprob: -6.45518159866333
    5. ' dfs' → logprob: -6.58018159866333
    6. ' find' → logprob: -7.45518159866333
    7. ' is' → logprob: -7.83018159866333
    8. ' count' → logprob: -7.95518159866333
    9. ' binary' → logprob: -8.205181121826172
    10. ' process' → logprob: -8.580181121826172

Token 191: '_tmp' (ID: 35658)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.343658208847046
    2. '_sum' → logprob: -1.843658208847046
    3. '_' → logprob: -2.093658208847046
    4. '(' → logprob: -2.593658208847046
    5. '_distance' → logprob: -2.593658208847046
    6. '_max' → logprob: -2.718658208847046
    7. '_score' → logprob: -3.593658208847046
    8. '_div' → logprob: -3.718658208847046
    9. '_prefix' → logprob: -3.843658208847046
    10. '_next' → logprob: -3.968658208847046

Token 192: '(V' (ID: 16949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26730799674987793
    2. '_sum' → logprob: -2.517307996749878
    3. '_value' → logprob: -3.017307996749878
    4. '(i' → logprob: -4.017308235168457
    5. '_array' → logprob: -4.517308235168457
    6. '(n' → logprob: -4.642308235168457
    7. '_max' → logprob: -4.767308235168457
    8. '_val' → logprob: -4.892308235168457
    9. '_tmp' → logprob: -5.267308235168457
    10. '_list' → logprob: -5.392308235168457

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017608491703867912
    2. '):' → logprob: -4.142608642578125
    3. '):
' → logprob: -7.642608642578125
    4. ',i' → logprob: -8.017608642578125
    5. ',n' → logprob: -8.392608642578125
    6. 's' → logprob: -8.892608642578125
    7. ' ,' → logprob: -9.392608642578125
    8. '[i' → logprob: -9.892608642578125
    9. '[' → logprob: -10.642608642578125
    10. ',V' → logprob: -10.892608642578125

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.323703408241272
    2. ' i' → logprob: -1.573703408241272
    3. ' idx' → logprob: -1.573703408241272
    4. ' n' → logprob: -2.5737032890319824
    5. 'idx' → logprob: -2.5737032890319824
    6. 'n' → logprob: -2.6987032890319824
    7. 'k' → logprob: -4.448703289031982
    8. ' k' → logprob: -4.823703289031982
    9. 'index' → logprob: -5.573703289031982
    10. ' indices' → logprob: -5.573703289031982

Token 195: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3947262763977051
    2. ',' → logprob: -1.144726276397705
    3. '):
' → logprob: -4.894726276397705
    4. ' ,' → logprob: -9.269725799560547
    5. ')' → logprob: -9.394725799560547
    6. ' ):' → logprob: -10.019725799560547
    7. '   ' → logprob: -10.269725799560547
    8. '):
' → logprob: -10.394725799560547
    9. ',n' → logprob: -11.394725799560547
    10. 'n' → logprob: -12.394725799560547

Token 196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15119320154190063
    2. 'j' → logprob: -3.276193141937256
    3. ' n' → logprob: -3.276193141937256
    4. 'h' → logprob: -5.276193141937256
    5. 'a' → logprob: -5.401193141937256
    6. 'prev' → logprob: -5.651193141937256
    7. 'd' → logprob: -6.026193141937256
    8. 'A' → logprob: -6.026193141937256
    9. 'k' → logprob: -6.088693141937256
    10. ' j' → logprob: -6.151193141937256

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.051321353763341904
    2. '):
' → logprob: -3.426321268081665
    3. ',' → logprob: -4.051321506500244
    4. '):
' → logprob: -10.051321029663086
    5. '   ' → logprob: -10.176321029663086
    6. ')' → logprob: -10.926321029663086
    7. ' ):' → logprob: -11.176321029663086
    8. ' ,' → logprob: -13.301321029663086
    9. '):

' → logprob: -14.051321029663086
    10. ' ' → logprob: -14.051321029663086

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001884015218820423
    2. 'v' → logprob: -9.625188827514648
    3. '```' → logprob: -10.500188827514648
    4. '    
' → logprob: -10.625188827514648
    5. 'prev' → logprob: -11.000188827514648
    6. ' v' → logprob: -11.250188827514648
    7. ' prev' → logprob: -11.625188827514648
    8. '   ' → logprob: -11.750188827514648
    9. '
' → logprob: -12.000188827514648
    10. ' return' → logprob: -13.125188827514648

Token 199: ' return' (ID: 622)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6038898229598999
    2. 'return' (adapté à ' return') → logprob: -1.1038898229599
    3. 'v' → logprob: -2.9788899421691895
    4. 'V' → logprob: -3.4788899421691895
    5. 'left' → logprob: -4.1038899421691895
    6. '   ' → logprob: -5.2288899421691895
    7. 'if' → logprob: -5.7288899421691895
    8. 'a' → logprob: -5.9788899421691895
    9. 'val' → logprob: -6.7288899421691895
    10. 'l' → logprob: -6.7288899421691895

Token 200: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.39102235436439514
    2. '(V' → logprob: -1.5160223245620728
    3. 'abs' → logprob: -3.0160224437713623
    4. 'min' → logprob: -4.016022205352783
    5. 'max' → logprob: -4.641022205352783
    6. '((' → logprob: -5.391022205352783
    7. ' V' → logprob: -5.391022205352783
    8. '(abs' → logprob: -5.766022205352783
    9. '(min' → logprob: -5.891022205352783
    10. '-V' → logprob: -5.891022205352783

Token 201: '[get' (ID: 160135)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.254699170589447
    2. '[get' → logprob: -1.5046992301940918
    3. '[' → logprob: -6.004699230194092
    4. '[
' → logprob: -9.004698753356934
    5. '[(' → logprob: -9.504698753356934
    6. 'get' → logprob: -10.004698753356934
    7. '*' → logprob: -12.004698753356934
    8. '```' → logprob: -12.379698753356934
    9. '(i' → logprob: -12.504698753356934
    10. '[min' → logprob: -12.629698753356934

Token 202: '_next' (ID: 25436)
  Prédit: '_prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.001502717612311244
    2. '_next' → logprob: -6.501502513885498
    3. '_previous' → logprob: -14.876502990722656
    4. '_' → logprob: -18.126502990722656
    5. 'prev' → logprob: -18.376502990722656
    6. '(prev' → logprob: -19.501502990722656
    7. 'Prev' → logprob: -19.876502990722656
    8. ' Prev' → logprob: -20.751502990722656
    9. '	prev' → logprob: -20.876502990722656
    10. '_pred' → logprob: -21.001502990722656

Token 203: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.8444881536415778e-05
    2. 'idx' → logprob: -10.875028610229492
    3. 'Idx' → logprob: -11.750028610229492
    4. '(i' → logprob: -14.500028610229492
    5. '_IDX' → logprob: -15.250028610229492
    6. '```' → logprob: -15.750028610229492
    7. '(idx' → logprob: -16.125028610229492
    8. 'x' → logprob: -16.250028610229492
    9. '_idxs' → logprob: -16.375028610229492
    10. 'n' → logprob: -16.625028610229492

Token 204: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004985823179595172
    2. '(' → logprob: -7.6254987716674805
    3. ' (' → logprob: -12.62549877166748
    4. '](' → logprob: -12.75049877166748
    5. '(V' → logprob: -13.50049877166748
    6. '(
' → logprob: -13.75049877166748
    7. ']' → logprob: -14.25049877166748
    8. '(I' → logprob: -14.37549877166748
    9. '```' → logprob: -15.25049877166748
    10. 'i' → logprob: -15.75049877166748

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030738646164536476
    2. '(n' → logprob: -4.280738830566406
    3. '(V' → logprob: -5.905738830566406
    4. '(i' → logprob: -5.905738830566406
    5. ')]' → logprob: -6.030738830566406
    6. '(' → logprob: -6.405738830566406
    7. ')' → logprob: -6.530738830566406
    8. ',n' → logprob: -6.530738830566406
    9. ' ,' → logprob: -6.655738830566406
    10. '),' → logprob: -7.155738830566406

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015058133285492659
    2. ' n' → logprob: -6.5015058517456055
    3. ')' → logprob: -13.126505851745605
    4. ')n' → logprob: -14.251505851745605
    5. '```' → logprob: -14.751505851745605
    6. '
' → logprob: -15.626505851745605
    7. '(n' → logprob: -16.25150489807129
    8. '	n' → logprob: -17.00150489807129
    9. ' ' → logprob: -17.62650489807129
    10. ')]' → logprob: -17.75150489807129

Token 207: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023619852436240762
    2. ')' → logprob: -9.875236511230469
    3. ')])' → logprob: -9.875236511230469
    4. ')]
' → logprob: -10.125236511230469
    5. ']' → logprob: -10.875236511230469
    6. ')][' → logprob: -11.125236511230469
    7. '),' → logprob: -11.250236511230469
    8. '(V' → logprob: -11.375236511230469
    9. ')],' → logprob: -11.750236511230469
    10. ' )' → logprob: -11.875236511230469

Token 208: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7394662499427795
    2. '[i' → logprob: -1.7394661903381348
    3. '(i' → logprob: -1.7394661903381348
    4. '[' → logprob: -2.6144661903381348
    5. '(' → logprob: -3.4894661903381348
    6. '()' → logprob: -3.9894661903381348
    7. '[]' → logprob: -4.364466190338135
    8. ')' → logprob: -4.739466190338135
    9. '-' → logprob: -4.864466190338135
    10. '(V' → logprob: -5.364466190338135

Token 209: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.646176278591156
    2. ' V' → logprob: -0.771176278591156
    3. '2' → logprob: -4.646176338195801
    4. ' ' → logprob: -6.021176338195801
    5. '3' → logprob: -6.896176338195801
    6. '   ' → logprob: -8.8961763381958
    7. '1' → logprob: -9.6461763381958
    8. ' ' → logprob: -9.7711763381958
    9. ' (' → logprob: -10.5211763381958
    10. '4' → logprob: -10.8961763381958

Token 210: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.011774640530347824
    2. '[i' → logprob: -4.51177453994751
    3. '[' → logprob: -7.26177453994751
    4. '(get' → logprob: -11.261775016784668
    5. '[(' → logprob: -11.886775016784668
    6. '[
' → logprob: -13.386775016784668
    7. '```' → logprob: -13.386775016784668
    8. 'get' → logprob: -14.761775016784668
    9. '(i' → logprob: -15.136775016784668
    10. '[V' → logprob: -15.636775016784668

Token 211: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -6.76628842484206e-05
    2. 'prev' → logprob: -10.375067710876465
    3. '_next' → logprob: -10.875067710876465
    4. '_idx' → logprob: -11.250067710876465
    5. '_previous' → logprob: -12.875067710876465
    6. 'Prev' → logprob: -14.500067710876465
    7. '_current' → logprob: -14.875067710876465
    8. '(i' → logprob: -15.000067710876465
    9. '_curr' → logprob: -15.875067710876465
    10. '_i' → logprob: -16.00006675720215

Token 212: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.4391956685576588e-05
    2. 'Idx' → logprob: -11.125024795532227
    3. 'idx' → logprob: -11.875024795532227
    4. '(idx' → logprob: -13.500024795532227
    5. '(i' → logprob: -14.625024795532227
    6. '_IDX' → logprob: -15.000024795532227
    7. '_idxs' → logprob: -16.125024795532227
    8. '```' → logprob: -16.500024795532227
    9. ' idx' → logprob: -17.250024795532227
    10. '(_' → logprob: -18.000024795532227

Token 213: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.000763510703109e-05
    2. '(' → logprob: -10.250040054321289
    3. '](' → logprob: -13.000040054321289
    4. ')(' → logprob: -13.625040054321289
    5. ' (' → logprob: -15.000040054321289
    6. ')' → logprob: -15.250040054321289
    7. 'i' → logprob: -15.500040054321289
    8. ']' → logprob: -16.00004005432129
    9. ',' → logprob: -16.37504005432129
    10. '```' → logprob: -16.62504005432129

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18950363993644714
    2. '(i' → logprob: -2.4395036697387695
    3. '(n' → logprob: -3.1895036697387695
    4. '(' → logprob: -4.1895036697387695
    5. ')' → logprob: -4.3145036697387695
    6. '),' → logprob: -5.0645036697387695
    7. ')]' → logprob: -5.9395036697387695
    8. ',i' → logprob: -5.9395036697387695
    9. ' ,' → logprob: -6.4395036697387695
    10. ')],' → logprob: -7.1895036697387695

Token 215: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027063372544944286
    2. ' i' → logprob: -8.75027084350586
    3. 'n' → logprob: -9.12527084350586
    4. ')' → logprob: -13.37527084350586
    5. '(i' → logprob: -14.37527084350586
    6. '
' → logprob: -15.00027084350586
    7. ' ' → logprob: -15.25027084350586
    8. '(' → logprob: -15.50027084350586
    9. ' n' → logprob: -15.62527084350586
    10. '(n' → logprob: -16.25027084350586

Token 216: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003832445072475821
    2. ')])' → logprob: -8.500383377075195
    3. ')' → logprob: -9.250383377075195
    4. ']' → logprob: -10.625383377075195
    5. ')]
' → logprob: -11.125383377075195
    6. '])' → logprob: -11.375383377075195
    7. '(n' → logprob: -11.875383377075195
    8. '(i' → logprob: -12.000383377075195
    9. '))' → logprob: -12.125383377075195
    10. '   ' → logprob: -13.125383377075195

Token 217: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0841640904545784
    2. ' solve' → logprob: -3.7091641426086426
    3. ' compute' → logprob: -3.9591641426086426
    4. 'main' → logprob: -3.9591641426086426
    5. 'solve' → logprob: -5.584164142608643
    6. 'compute' → logprob: -6.084164142608643
    7. ' process' → logprob: -6.334164142608643
    8. ' dfs' → logprob: -6.584164142608643
    9. ' def' → logprob: -6.584164142608643
    10. ' calc' → logprob: -6.834164142608643

Token 219: '_s' (ID: 1278)
  Prédit: '_tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -0.005623477511107922
    2. 'tmp' → logprob: -5.5056233406066895
    3. '(V' → logprob: -7.2556233406066895
    4. '_max' → logprob: -8.380623817443848
    5. '_temp' → logprob: -9.130623817443848
    6. '_sum' → logprob: -9.255623817443848
    7. '_diff' → logprob: -9.630623817443848
    8. 'Tmp' → logprob: -9.630623817443848
    9. '_avg' → logprob: -10.755623817443848
    10. '(' → logprob: -10.880623817443848

Token 220: '(v' (ID: 6932)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.012860527262091637
    2. 'tmp' → logprob: -5.262860298156738
    3. '_tmp' → logprob: -6.137860298156738
    4. 'uffix' → logprob: -6.762860298156738
    5. 'core' → logprob: -6.762860298156738
    6. 't' → logprob: -6.887860298156738
    7. 'qrt' → logprob: -7.137860298156738
    8. 'quare' → logprob: -8.262860298156738
    9. 'oft' → logprob: -8.637860298156738
    10. '(tmp' → logprob: -9.012860298156738

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013982963748276234
    2. ',i' → logprob: -5.013982772827148
    3. '):' → logprob: -5.888982772827148
    4. 's' → logprob: -6.263982772827148
    5. '[i' → logprob: -7.763982772827148
    6. '[' → logprob: -8.138982772827148
    7. ',
' → logprob: -8.138982772827148
    8. ' ,' → logprob: -8.263982772827148
    9. 'alue' → logprob: -8.263982772827148
    10. ')' → logprob: -8.638982772827148

Token 222: ' ai' (ID: 8440)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.14635169506073
    2. ' V' → logprob: -1.14635169506073
    3. 'n' → logprob: -2.0213518142700195
    4. ' n' → logprob: -2.2713518142700195
    5. 'i' → logprob: -2.8963518142700195
    6. ' i' → logprob: -3.2713518142700195
    7. 'v' → logprob: -4.2713518142700195
    8. ' v' → logprob: -5.0213518142700195
    9. ' prev' → logprob: -6.8963518142700195
    10. 'prev' → logprob: -6.8963518142700195

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15089914202690125
    2. '):' → logprob: -3.1508991718292236
    3. '):
' → logprob: -3.1508991718292236
    4. 's' → logprob: -3.9008991718292236
    5. 'x' → logprob: -4.1508989334106445
    6. ')' → logprob: -4.9008989334106445
    7. 'd' → logprob: -5.9008989334106445
    8. 'dx' → logprob: -5.9008989334106445
    9. ',
' → logprob: -6.6508989334106445
    10. '[' → logprob: -6.6508989334106445

Token 224: ' tmp' (ID: 8919)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.30517110228538513
    2. ' bi' → logprob: -2.305171012878418
    3. 'n' → logprob: -3.555171012878418
    4. 'aj' → logprob: -4.305171012878418
    5. 'i' → logprob: -4.305171012878418
    6. ' n' → logprob: -4.555171012878418
    7. ' aj' → logprob: -4.680171012878418
    8. 'x' → logprob: -4.680171012878418
    9. 'vi' → logprob: -4.805171012878418
    10. 'a' → logprob: -5.055171012878418

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7051637768745422
    2. '):' → logprob: -0.7051637768745422
    3. ',' → logprob: -4.580163955688477
    4. '):

' → logprob: -7.455163955688477
    5. '):
' → logprob: -7.830163955688477
    6. ')' → logprob: -8.080163955688477
    7. ')=' → logprob: -9.580163955688477
    8. 's' → logprob: -9.955163955688477
    9. ' ):' → logprob: -10.330163955688477
    10. '[' → logprob: -10.330163955688477

Token 226: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7850789427757263
    2. ':' → logprob: -0.9100789427757263
    3. ' =' → logprob: -2.910079002380371
    4. '   ' → logprob: -3.035079002380371
    5. ':
' → logprob: -3.285079002380371
    6. 'return' → logprob: -7.785079002380371
    7. ',' → logprob: -8.285079002380371
    8. '):' → logprob: -8.285079002380371
    9. ' return' → logprob: -9.035079002380371
    10. ':return' → logprob: -9.035079002380371

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0445161871612072
    2. '   ' → logprob: -3.294516086578369
    3. ' return' → logprob: -5.044516086578369
    4. '(v' → logprob: -12.419516563415527
    5. 'result' → logprob: -13.544516563415527
    6. '
' → logprob: -13.669516563415527
    7. '	return' → logprob: -14.044516563415527
    8. 's' → logprob: -14.794516563415527
    9. ' (' → logprob: -15.419516563415527
    10. '(s' → logprob: -15.419516563415527

Token 228: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.08402666449546814
    2. ' (' → logprob: -2.959026575088501
    3. 'v' → logprob: -3.959026575088501
    4. ' v' → logprob: -6.08402681350708
    5. '(' → logprob: -6.08402681350708
    6. '((' → logprob: -6.20902681350708
    7. '(ai' → logprob: -6.33402681350708
    8. '(max' → logprob: -8.084026336669922
    9. '(pow' → logprob: -8.709026336669922
    10. '(abs' → logprob: -8.709026336669922

Token 229: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03193580359220505
    2. '(v' → logprob: -4.156935691833496
    3. 'ai' → logprob: -4.656935691833496
    4. '(ai' → logprob: -5.906935691833496
    5. 'tmp' → logprob: -7.281935691833496
    6. '2' → logprob: -7.281935691833496
    7. '(' → logprob: -7.531935691833496
    8. 's' → logprob: -7.531935691833496
    9. ' v' → logprob: -7.906935691833496
    10. 'pow' → logprob: -8.656935691833496

Token 230: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5671175122261047
    2. '*' → logprob: -1.19211745262146
    3. ' +' → logprob: -2.44211745262146
    4. '+' → logprob: -3.56711745262146
    5. ' -' → logprob: -4.567117691040039
    6. '-' → logprob: -6.067117691040039
    7. ' ^' → logprob: -7.817117691040039
    8. '[' → logprob: -7.942117691040039
    9. '^' → logprob: -8.442117691040039
    10. ' ' → logprob: -8.817117691040039

Token 231: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.054388925433158875
    2. '(ai' → logprob: -3.554388999938965
    3. ' ai' → logprob: -3.804388999938965
    4. ' (' → logprob: -7.179388999938965
    5. '(' → logprob: -8.054388999938965
    6. '1' → logprob: -8.304388999938965
    7. '2' → logprob: -8.554388999938965
    8. 'tmp' → logprob: -8.679388999938965
    9. '((' → logprob: -9.179388999938965
    10. ' ' → logprob: -9.554388999938965

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16717451810836792
    2. '+' → logprob: -2.2921745777130127
    3. ' +' → logprob: -3.5421745777130127
    4. '*' → logprob: -4.417174339294434
    5. '-' → logprob: -5.167174339294434
    6. ' -' → logprob: -5.792174339294434
    7. ')*' → logprob: -5.917174339294434
    8. ' *' → logprob: -9.042174339294434
    9. ')**' → logprob: -9.292174339294434
    10. ' )' → logprob: -9.792174339294434

Token 233: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8136510252952576
    2. '*' → logprob: -0.9386510252952576
    3. ' +' → logprob: -2.4386510848999023
    4. '+' → logprob: -2.9386510848999023
    5. '%' → logprob: -4.063651084899902
    6. ' %' → logprob: -5.063651084899902
    7. ' -' → logprob: -7.813651084899902
    8. '**' → logprob: -7.938651084899902
    9. ' ' → logprob: -8.188651084899902
    10. ')' → logprob: -8.313651084899902

Token 234: ' tmp' (ID: 8919)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020076262298971415
    2. '3' → logprob: -6.627007484436035
    3. 'tmp' → logprob: -7.627007484436035
    4. ' ' → logprob: -9.502007484436035
    5. '1' → logprob: -10.002007484436035
    6. '10' → logprob: -10.752007484436035
    7. '4' → logprob: -11.002007484436035
    8. 'max' → logprob: -12.127007484436035
    9. '12' → logprob: -12.252007484436035
    10. '100' → logprob: -12.377007484436035

Token 235: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.30542972683906555
    2. ' compute' → logprob: -1.5554296970367432
    3. ' solve' → logprob: -3.305429697036743
    4. 'main' → logprob: -5.430429935455322
    5. 'compute' → logprob: -5.555429935455322
    6. ' def' → logprob: -5.805429935455322
    7. 'solve' → logprob: -7.055429935455322
    8. 'def' → logprob: -7.555429935455322
    9. ' read' → logprob: -7.805429935455322
    10. ' pow' → logprob: -7.805429935455322

Token 238: '_v' (ID: 5390)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.016163991764187813
    2. '(' → logprob: -5.3911638259887695
    3. '_s' → logprob: -5.7661638259887695
    4. '(i' → logprob: -6.5161638259887695
    5. '_values' → logprob: -6.6411638259887695
    6. '(v' → logprob: -7.3911638259887695
    7. '(_' → logprob: -7.3911638259887695
    8. '_tmp' → logprob: -7.6411638259887695
    9. '_value' → logprob: -7.7661638259887695
    10. '_V' → logprob: -7.7661638259887695

Token 239: '(v' (ID: 6932)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.011749666184186935
    2. '(' → logprob: -4.761749744415283
    3. '(v' → logprob: -5.886749744415283
    4. '(i' → logprob: -8.761749267578125
    5. ' (' → logprob: -9.136749267578125
    6. '(s' → logprob: -11.136749267578125
    7. '(_' → logprob: -11.386749267578125
    8. '(
' → logprob: -11.761749267578125
    9. '(N' → logprob: -11.886749267578125
    10. '(A' → logprob: -11.886749267578125

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011617878044489771
    2. ',v' → logprob: -9.875116348266602
    3. ',i' → logprob: -10.250116348266602
    4. ' ,' → logprob: -10.500116348266602
    5. 'v' → logprob: -14.875116348266602
    6. '):' → logprob: -15.125116348266602
    7. ',
' → logprob: -15.625116348266602
    8. ',a' → logprob: -15.875116348266602
    9. ',n' → logprob: -15.875116348266602
    10. ',s' → logprob: -16.0001163482666

Token 241: ' s' (ID: 265)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.32833948731422424
    2. ' ai' → logprob: -2.2033395767211914
    3. 'tmp' → logprob: -2.3283395767211914
    4. ' tmp' → logprob: -3.4533395767211914
    5. 's' → logprob: -4.453339576721191
    6. 'i' → logprob: -4.703339576721191
    7. ' s' → logprob: -4.953339576721191
    8. 'v' → logprob: -5.578339576721191
    9. ' i' → logprob: -5.953339576721191
    10. 'a' → logprob: -6.078339576721191

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018983196059707552
    2. ' ,' → logprob: -9.375189781188965
    3. ',v' → logprob: -10.375189781188965
    4. '):' → logprob: -11.250189781188965
    5. '):
' → logprob: -11.375189781188965
    6. 's' → logprob: -11.375189781188965
    7. ',
' → logprob: -11.750189781188965
    8. '_,' → logprob: -11.875189781188965
    9. ',i' → logprob: -12.125189781188965
    10. ',s' → logprob: -12.125189781188965

Token 243: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.7303478717803955
    2. 'tmp' → logprob: -1.2303478717803955
    3. ' ai' → logprob: -1.8553478717803955
    4. 'ai' → logprob: -2.7303478717803955
    5. ' v' → logprob: -6.855347633361816
    6. ' i' → logprob: -7.605347633361816
    7. 'v' → logprob: -7.730347633361816
    8. ' ' → logprob: -7.855347633361816
    9. ' s' → logprob: -7.980347633361816
    10. ' a' → logprob: -8.105347633361816

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1005018949508667
    2. '):
' → logprob: -2.3505020141601562
    3. ',' → logprob: -8.350502014160156
    4. '):
' → logprob: -10.100502014160156
    5. ' ):' → logprob: -11.975502014160156
    6. ')' → logprob: -12.350502014160156
    7. '):

' → logprob: -12.475502014160156
    8. ':' → logprob: -13.600502014160156
    9. '   ' → logprob: -13.850502014160156
    10. ' ):
' → logprob: -15.100502014160156

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6114316582679749
    2. ' return' → logprob: -1.36143159866333
    3. 'return' → logprob: -1.61143159866333
    4. 'v' → logprob: -6.61143159866333
    5. ' v' → logprob: -9.486432075500488
    6. 'def' → logprob: -10.111432075500488
    7. '	return' → logprob: -10.611432075500488
    8. ')' → logprob: -11.736432075500488
    9. '    ' → logprob: -12.236432075500488
    10. '=' → logprob: -12.486432075500488

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004026633687317371
    2. ' return' → logprob: -6.004026412963867
    3. 'v' → logprob: -6.504026412963867
    4. '   ' → logprob: -9.879026412963867
    5. ' v' → logprob: -14.129026412963867
    6. '	return' → logprob: -16.004026412963867
    7. '
' → logprob: -16.629026412963867
    8. '```' → logprob: -16.879026412963867
    9. '(v' → logprob: -17.754026412963867
    10. 'def' → logprob: -18.004026412963867

Token 247: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006727803498506546
    2. ' v' → logprob: -5.006727695465088
    3. 'max' → logprob: -11.631728172302246
    4. '(v' → logprob: -13.131728172302246
    5. ' max' → logprob: -13.756728172302246
    6. '   ' → logprob: -15.131728172302246
    7. ' (' → logprob: -16.75672721862793
    8. '	v' → logprob: -16.75672721862793
    9. '_v' → logprob: -16.88172721862793
    10. '(max' → logprob: -17.13172721862793

Token 248: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2814928889274597
    2. ' -' → logprob: -1.4064929485321045
    3. '+' → logprob: -8.156493186950684
    4. '-s' → logprob: -10.656493186950684
    5. 's' → logprob: -10.906493186950684
    6. ' ' → logprob: -12.406493186950684
    7. '-v' → logprob: -12.531493186950684
    8. ' +' → logprob: -13.656493186950684
    9. ' ' → logprob: -13.656493186950684
    10. '
' → logprob: -14.406493186950684

Token 249: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31329795718193054
    2. ' s' → logprob: -1.313297986984253
    3. 'tmp' → logprob: -11.688298225402832
    4. '   ' → logprob: -12.188298225402832
    5. ' (' → logprob: -12.188298225402832
    6. ' ' → logprob: -12.188298225402832
    7. '(s' → logprob: -12.313298225402832
    8. ' tmp' → logprob: -12.438298225402832
    9. ' ' → logprob: -13.438298225402832
    10. '_s' → logprob: -14.063298225402832

Token 250: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03804241120815277
    2. ' *' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.913042068481445
    4. ' ' → logprob: -14.913042068481445
    5. '**' → logprob: -15.288042068481445
    6. '*
' → logprob: -17.288042068481445
    7. '*(' → logprob: -17.788042068481445
    8. '[tmp' → logprob: -18.038042068481445
    9. '```' → logprob: -18.288042068481445
    10. ' *
' → logprob: -18.663042068481445

Token 251: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.00861669983714819
    2. 'tmp' → logprob: -4.758616924285889
    3. '(tmp' → logprob: -13.75861644744873
    4. '	tmp' → logprob: -14.75861644744873
    5. '_tmp' → logprob: -14.88361644744873
    6. '/tmp' → logprob: -15.25861644744873
    7. ' ' → logprob: -17.008617401123047
    8. '$tmp' → logprob: -17.508617401123047
    9. ',tmp' → logprob: -18.383617401123047
    10. ' ' → logprob: -18.758617401123047

Token 252: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15320374071598053
    2. '<|end|>' → logprob: -2.0282037258148193
    3. '#' → logprob: -5.028203964233398
    4. '<|end|>' → logprob: -6.778203964233398
    5. '
' → logprob: -6.903203964233398
    6. ')' → logprob: -6.903203964233398
    7. '```' → logprob: -8.028203964233398
    8. 'class' → logprob: -9.528203964233398
    9. 'v' → logprob: -9.528203964233398
    10. 'n' → logprob: -9.903203964233398

Token 253: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035426935646682978
    2. '#' → logprob: -5.878542900085449
    3. '<|end|>' → logprob: -7.753542900085449
    4. 'class' → logprob: -9.12854290008545
    5. '<|end|>' → logprob: -9.25354290008545
    6. '
' → logprob: -10.62854290008545
    7. ')' → logprob: -10.75354290008545
    8. '```' → logprob: -10.87854290008545
    9. 'n' → logprob: -11.75354290008545
    10. '...' → logprob: -12.12854290008545

Token 254: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.29234012961387634
    2. 'main' → logprob: -1.4173401594161987
    3. 'solve' → logprob: -5.167340278625488
    4. ' solve' → logprob: -5.542340278625488
    5. 'process' → logprob: -7.417340278625488
    6. ' process' → logprob: -7.792340278625488
    7. 'simulate' → logprob: -8.417340278625488
    8. ' simulate' → logprob: -9.042340278625488
    9. 'compute' → logprob: -9.542340278625488
    10. ' compute' → logprob: -10.292340278625488

Token 255: '_V' (ID: 4553)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.5489212870597839
    2. '_tmp' → logprob: -1.9239213466644287
    3. '_ai' → logprob: -2.0489213466644287
    4. '_s' → logprob: -2.7989213466644287
    5. '_i' → logprob: -3.6739213466644287
    6. '_V' → logprob: -3.6739213466644287
    7. '_a' → logprob: -4.17392110824585
    8. 'V' → logprob: -5.04892110824585
    9. 'tmp' → logprob: -5.17392110824585
    10. 's' → logprob: -6.54892110824585

Token 256: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00037323508877307177
    2. '(' → logprob: -8.125372886657715
    3. '(v' → logprob: -9.875372886657715
    4. ' (' → logprob: -10.625372886657715
    5. '(
' → logprob: -14.500372886657715
    6. '((' → logprob: -15.250372886657715
    7. ',' → logprob: -15.625372886657715
    8. 'def' → logprob: -16.75037384033203
    9. 'V' → logprob: -17.12537384033203
    10. '(A' → logprob: -17.12537384033203

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.52919222577475e-05
    2. ',i' → logprob: -10.250075340270996
    3. ' ,' → logprob: -10.500075340270996
    4. ',v' → logprob: -12.500075340270996
    5. ',V' → logprob: -12.500075340270996
    6. ',n' → logprob: -13.250075340270996
    7. '):' → logprob: -13.625075340270996
    8. ',
' → logprob: -15.000075340270996
    9. ',index' → logprob: -15.000075340270996
    10. '   ' → logprob: -15.125075340270996

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.481414258480072
    2. ' i' → logprob: -0.981414258480072
    3. ' idx' → logprob: -5.856414318084717
    4. 'idx' → logprob: -6.606414318084717
    5. 's' → logprob: -6.856414318084717
    6. ' s' → logprob: -6.981414318084717
    7. 'v' → logprob: -8.356413841247559
    8. ')' → logprob: -8.356413841247559
    9. ' indices' → logprob: -8.731413841247559
    10. 'index' → logprob: -8.856413841247559

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ' ,' → logprob: -9.750077247619629
    3. ',v' → logprob: -11.125077247619629
    4. '):
' → logprob: -13.625077247619629
    5. '   ' → logprob: -14.250077247619629
    6. ',i' → logprob: -14.500077247619629
    7. ')' → logprob: -15.000077247619629
    8. ',V' → logprob: -15.250077247619629
    9. ',
' → logprob: -15.500077247619629
    10. ',value' → logprob: -16.125076293945312

Token 260: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10547643899917603
    2. ' v' → logprob: -2.3554763793945312
    3. 's' → logprob: -6.230476379394531
    4. 'new' → logprob: -6.855476379394531
    5. ' new' → logprob: -7.480476379394531
    6. 'value' → logprob: -7.605476379394531
    7. ' s' → logprob: -7.730476379394531
    8. 'n' → logprob: -8.230476379394531
    9. ' value' → logprob: -9.355476379394531
    10. ')' → logprob: -9.480476379394531

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2124502807855606
    2. '):
' → logprob: -1.8374502658843994
    3. ',' → logprob: -3.4624502658843994
    4. '):
' → logprob: -7.5874505043029785
    5. '[i' → logprob: -8.33745002746582
    6. ')' → logprob: -10.33745002746582
    7. ',i' → logprob: -11.33745002746582
    8. '):

' → logprob: -11.33745002746582
    9. '   ' → logprob: -11.58745002746582
    10. '[]):' → logprob: -12.96245002746582

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006270512938499451
    2. ' V' → logprob: -5.256270408630371
    3. 'V' → logprob: -7.131270408630371
    4. '	V' → logprob: -8.506270408630371
    5. '[V' → logprob: -11.256270408630371
    6. '   ' → logprob: -12.131270408630371
    7. '_V' → logprob: -12.631270408630371
    8. '(V' → logprob: -13.256270408630371
    9. '    
' → logprob: -13.381270408630371
    10. ',V' → logprob: -13.381270408630371

Token 263: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4645300805568695
    2. 'V' (adapté à ' V') → logprob: -1.464530110359192
    3. ' V' → logprob: -1.964530110359192
    4. '	V' → logprob: -8.964529991149902
    5. ' ' → logprob: -10.964529991149902
    6. '_V' → logprob: -11.839529991149902
    7. '  ' → logprob: -13.089529991149902
    8. '```' → logprob: -13.589529991149902
    9. '.V' → logprob: -13.964529991149902
    10. '(V' → logprob: -14.339529991149902

Token 264: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. '[I' → logprob: -14.50000286102295
    4. '.append' → logprob: -15.75000286102295
    5. '[V' → logprob: -16.625001907348633
    6. '[:]' → logprob: -17.000001907348633
    7. '[index' → logprob: -17.125001907348633
    8. '.insert' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'i' → logprob: -17.625001907348633

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003403495065867901
    2. ']=' → logprob: -8.000340461730957
    3. ' ]' → logprob: -12.250340461730957
    4. '=' → logprob: -15.625340461730957
    5. ')' → logprob: -17.62533950805664
    6. ' =' → logprob: -18.12533950805664
    7. ']
' → logprob: -18.25033950805664
    8. ']+=' → logprob: -18.37533950805664
    9. ']

' → logprob: -19.75033950805664
    10. '],' → logprob: -20.00033950805664

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. '＝' → logprob: -15.538042068481445
    4. '[' → logprob: -15.913042068481445
    5. '=v' → logprob: -16.038042068481445
    6. '=
' → logprob: -16.163042068481445
    7. ')=' → logprob: -16.538042068481445
    8. '=

' → logprob: -16.663042068481445
    9. '.=' → logprob: -17.288042068481445
    10. ' =
' → logprob: -17.413042068481445

Token 267: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.676292231422849e-05
    2. ' v' → logprob: -11.000017166137695
    3. '	v' → logprob: -20.250017166137695
    4. '_v' → logprob: -22.875017166137695
    5. '   ' → logprob: -24.750017166137695
    6. 'value' → logprob: -24.875017166137695
    7. 'vj' → logprob: -25.250017166137695
    8. 'vq' → logprob: -25.500017166137695
    9. ' ' → logprob: -25.625017166137695
    10. '
' → logprob: -25.750017166137695

Token 268: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001495484757469967
    2. '#' → logprob: -8.875149726867676
    3. 'n' → logprob: -12.875149726867676
    4. 'class' → logprob: -13.000149726867676
    5. ' def' → logprob: -14.625149726867676
    6. 'ndef' → logprob: -14.625149726867676
    7. '```' → logprob: -14.625149726867676
    8. '...' → logprob: -14.875149726867676
    9. '<|end|>' → logprob: -14.875149726867676
    10. 'if' → logprob: -14.875149726867676

Token 270: ' check' (ID: 2371)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03600229322910309
    2. ' main' → logprob: -3.5360023975372314
    3. 'solve' → logprob: -5.286002159118652
    4. 'process' → logprob: -6.911002159118652
    5. ' solve' → logprob: -9.536002159118652
    6. 'def' → logprob: -10.411002159118652
    7. 'simulate' → logprob: -10.661002159118652
    8. 'compute' → logprob: -11.161002159118652
    9. ' process' → logprob: -11.911002159118652
    10. 'remove' → logprob: -12.536002159118652

Token 271: '_valid' (ID: 23321)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39267396926879883
    2. '(V' → logprob: -1.2676739692687988
    3. '_' → logprob: -3.517673969268799
    4. '(i' → logprob: -5.517673969268799
    5. '_s' → logprob: -6.642673969268799
    6. '(s' → logprob: -6.767673969268799
    7. '(v' → logprob: -6.767673969268799
    8. ' (' → logprob: -7.267673969268799
    9. '_valid' → logprob: -7.517673969268799
    10. '_complete' → logprob: -7.767673969268799

Token 272: '(s' (ID: 1858)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.2253282070159912
    2. '(' → logprob: -2.225328207015991
    3. '(i' → logprob: -2.725328207015991
    4. '(s' → logprob: -3.975328207015991
    5. '(v' → logprob: -5.35032844543457
    6. '(a' → logprob: -6.60032844543457
    7. '(_' → logprob: -7.72532844543457
    8. '(value' → logprob: -7.97532844543457
    9. '():' → logprob: -7.97532844543457
    10. '(n' → logprob: -8.35032844543457

Token 273: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2040969878435135
    2. '):' → logprob: -1.704097032546997
    3. 's' → logprob: -6.954096794128418
    4. ',i' → logprob: -7.704096794128418
    5. ' ,' → logprob: -7.829096794128418
    6. ')' → logprob: -8.329096794128418
    7. ' ):' → logprob: -9.204096794128418
    8. '(i' → logprob: -9.329096794128418
    9. '):
' → logprob: -9.454096794128418
    10. '(' → logprob: -9.579096794128418

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003274087095633149
    2. ' return' → logprob: -5.753273963928223
    3. 'return' → logprob: -9.253273963928223
    4. '	return' → logprob: -14.503273963928223
    5. '   ' → logprob: -16.12827491760254
    6. '    ' → logprob: -19.50327491760254
    7. '   ' → logprob: -19.87827491760254
    8. '       ' → logprob: -20.00327491760254
    9. '    
' → logprob: -21.25327491760254
    10. ' s' → logprob: -21.37827491760254

Token 275: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5239105820655823
    2. 'return' (adapté à ' return') → logprob: -1.0239105224609375
    3. '   ' → logprob: -3.0239105224609375
    4. '	return' → logprob: -13.398910522460938
    5. ' ' → logprob: -18.898910522460938
    6. '    ' → logprob: -19.398910522460938
    7. '   ' → logprob: -19.398910522460938
    8. '  ' → logprob: -19.523910522460938
    9. 'if' → logprob: -19.773910522460938
    10. '
' → logprob: -20.523910522460938

Token 276: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2811805009841919
    2. 's' → logprob: -1.406180500984192
    3. '(s' → logprob: -11.156180381774902
    4. ' isinstance' → logprob: -12.031180381774902
    5. 'True' → logprob: -13.031180381774902
    6. ' True' → logprob: -13.156180381774902
    7. '(' → logprob: -13.281180381774902
    8. '0' → logprob: -13.656180381774902
    9. ' (' → logprob: -14.281180381774902
    10. ' all' → logprob: -14.406180381774902

Token 277: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.29051196575164795
    2. '>' → logprob: -1.415511965751648
    3. ' >=' → logprob: -5.0405120849609375
    4. '>=' → logprob: -6.6655120849609375
    5. ' !=' → logprob: -6.7905120849609375
    6. '!=' → logprob: -7.9155120849609375
    7. ' ' → logprob: -9.665512084960938
    8. ' <=' → logprob: -12.040512084960938
    9. ' ' → logprob: -12.290512084960938
    10. '()>' → logprob: -13.290512084960938

Token 278: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021877337712794542
    2. ' ' → logprob: -6.127187728881836
    3. '1' → logprob: -13.127187728881836
    4. '=' → logprob: -14.502187728881836
    5. '   ' → logprob: -17.002187728881836
    6. '
' → logprob: -17.752187728881836
    7. '>' → logprob: -18.127187728881836
    8. '  ' → logprob: -18.502187728881836
    9. '2' → logprob: -18.877187728881836
    10. ' ' → logprob: -19.127187728881836

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.011373155459296e-05
    2. ' ' → logprob: -10.625030517578125
    3. '1' → logprob: -12.125030517578125
    4. '-' → logprob: -15.250030517578125
    5. '=' → logprob: -17.500030517578125
    6. '2' → logprob: -17.625030517578125
    7. '۰' → logprob: -19.062530517578125
    8. '>' → logprob: -19.125030517578125
    9. 'zero' → logprob: -19.562530517578125
    10. '3' → logprob: -19.562530517578125

Token 280: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002933364361524582
    2. '<|end|>' → logprob: -5.877933502197266
    3. '#' → logprob: -10.127933502197266
    4. '
' → logprob: -10.252933502197266
    5. '<|end|>' → logprob: -11.377933502197266
    6. ')' → logprob: -11.877933502197266
    7. 'class' → logprob: -11.877933502197266
    8. 'n' → logprob: -12.002933502197266
    9. 'ndef' → logprob: -12.127933502197266
    10. '```' → logprob: -12.752933502197266

Token 281: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.464347173576243e-05
    2. '#' → logprob: -11.00003433227539
    3. '<|end|>' → logprob: -12.12503433227539
    4. '<|end|>' → logprob: -13.00003433227539
    5. 'class' → logprob: -13.25003433227539
    6. '.' → logprob: -13.50003433227539
    7. 'for' → logprob: -13.50003433227539
    8. '```' → logprob: -13.75003433227539
    9. ' def' → logprob: -14.12503433227539
    10. 'if' → logprob: -14.25003433227539

Token 282: ' push' (ID: 9349)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.025440435856580734
    2. 'main' → logprob: -3.9004404544830322
    3. ' solve' → logprob: -5.650440216064453
    4. 'solve' → logprob: -7.400440216064453
    5. ' process' → logprob: -7.525440216064453
    6. ' simulate' → logprob: -9.275440216064453
    7. 'process' → logprob: -9.900440216064453
    8. 'simulate' → logprob: -10.400440216064453
    9. ' find' → logprob: -12.400440216064453
    10. ' compute' → logprob: -12.400440216064453

Token 283: '_if' (ID: 25821)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.006751135922968388
    2. '<|end|>' → logprob: -5.88175106048584
    3. '(heap' → logprob: -5.88175106048584
    4. '_' → logprob: -8.13175106048584
    5. '(h' → logprob: -8.13175106048584
    6. 'heap' → logprob: -8.38175106048584
    7. '_h' → logprob: -8.50675106048584
    8. '_stack' → logprob: -10.38175106048584
    9. '(' → logprob: -10.63175106048584
    10. '_he' → logprob: -11.25675106048584

Token 284: '_needed' (ID: 148421)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.10708470642566681
    2. 'valid' → logprob: -2.3570847511291504
    3. '(h' → logprob: -5.73208475112915
    4. ' valid' → logprob: -5.98208475112915
    5. 'check' → logprob: -7.98208475112915
    6. '_possible' → logprob: -8.232084274291992
    7. '(valid' → logprob: -8.857084274291992
    8. 'Valid' → logprob: -9.732084274291992
    9. '(check' → logprob: -9.982084274291992
    10. 'not' → logprob: -9.982084274291992

Token 285: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.625042915344238
    3. ' (' → logprob: -11.000042915344238
    4. '(H' → logprob: -13.375042915344238
    5. '(heap' → logprob: -14.625042915344238
    6. '(s' → logprob: -16.875043869018555
    7. '(v' → logprob: -16.875043869018555
    8. '(
' → logprob: -17.000043869018555
    9. '(i' → logprob: -17.625043869018555
    10. '(a' → logprob: -17.750043869018555

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001705246395431459
    2. ',h' → logprob: -8.750170707702637
    3. ' ,' → logprob: -11.375170707702637
    4. ',v' → logprob: -15.375170707702637
    5. '(h' → logprob: -15.500170707702637
    6. ',
' → logprob: -16.87516975402832
    7. ' h' → logprob: -17.00016975402832
    8. 'h' → logprob: -18.62516975402832
    9. ',s' → logprob: -18.75016975402832
    10. '   ' → logprob: -18.87516975402832

Token 287: ' v' (ID: 323)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.24687626957893372
    2. ' V' → logprob: -1.8718762397766113
    3. 'v' → logprob: -3.1218762397766113
    4. 'h' → logprob: -4.621876239776611
    5. ' v' → logprob: -4.871876239776611
    6. ' h' → logprob: -6.121876239776611
    7. 'i' → logprob: -7.496876239776611
    8. ' i' → logprob: -8.12187671661377
    9. 's' → logprob: -9.12187671661377
    10. ' s' → logprob: -9.37187671661377

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000455340719781816
    2. ',i' → logprob: -7.875455379486084
    3. ' ,' → logprob: -9.500454902648926
    4. ',int' → logprob: -16.375455856323242
    5. '   ' → logprob: -16.625455856323242
    6. '‌,' → logprob: -16.625455856323242
    7. 'i' → logprob: -17.125455856323242
    8. ',v' → logprob: -17.500455856323242
    9. ',
' → logprob: -17.750455856323242
    10. ' ' → logprob: -17.875455856323242

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889319956302643
    2. ' i' → logprob: -2.5788931846618652
    3. ' ' → logprob: -13.578893661499023
    4. '   ' → logprob: -13.703893661499023
    5. '	i' → logprob: -15.078893661499023
    6. '  ' → logprob: -15.703893661499023
    7. 'index' → logprob: -15.828893661499023
    8. '    ' → logprob: -15.828893661499023
    9. 'idx' → logprob: -16.203893661499023
    10. 'h' → logprob: -16.703893661499023

Token 290: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04860304668545723
    2. '):
' → logprob: -3.048603057861328
    3. ',' → logprob: -11.798603057861328
    4. ')' → logprob: -12.423603057861328
    5. '):
' → logprob: -12.798603057861328
    6. '   ' → logprob: -14.423603057861328
    7. ' ):' → logprob: -14.923603057861328
    8. ':' → logprob: -15.298603057861328
    9. '):

' → logprob: -15.298603057861328
    10. ' ):
' → logprob: -17.923603057861328

Token 291: ' ai' (ID: 8440)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4851733148097992
    2. 'V' → logprob: -1.6101733446121216
    3. 'in' → logprob: -3.110173225402832
    4. ' visited' → logprob: -3.235173225402832
    5. 'added' → logprob: -3.860173225402832
    6. 'used' → logprob: -4.110173225402832
    7. ' V' → logprob: -4.235173225402832
    8. 'seen' → logprob: -4.735173225402832
    9. 'valid' → logprob: -5.360173225402832
    10. 'vis' → logprob: -5.485173225402832

Token 292: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44848594069480896
    2. '):
' → logprob: -1.1984859704971313
    3. '):' → logprob: -2.823485851287842
    4. '):
' → logprob: -9.198486328125
    5. 's' → logprob: -9.448486328125
    6. ')' → logprob: -9.448486328125
    7. '):

' → logprob: -10.323486328125
    8. ' ,' → logprob: -10.573486328125
    9. '   ' → logprob: -12.073486328125
    10. ',
' → logprob: -12.573486328125

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005767853930592537
    2. ' s' → logprob: -5.880767822265625
    3. ' if' → logprob: -6.505767822265625
    4. 'if' → logprob: -7.005767822265625
    5. 's' → logprob: -7.880767822265625
    6. ':' → logprob: -9.380767822265625
    7. ':
' → logprob: -10.505767822265625
    8. ',' → logprob: -10.755767822265625
    9. '_s' → logprob: -11.630767822265625
    10. ',s' → logprob: -12.005767822265625

Token 294: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6370407342910767
    2. '   ' → logprob: -1.2620407342910767
    3. 'if' (adapté à ' if') → logprob: -2.012040615081787
    4. ' if' → logprob: -3.387040615081787
    5. ' s' → logprob: -3.887040615081787
    6. ' ' → logprob: -11.137041091918945
    7. '  ' → logprob: -12.262041091918945
    8. '
' → logprob: -12.512041091918945
    9. '       ' → logprob: -12.637041091918945
    10. '	s' → logprob: -13.262041091918945

Token 295: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.28806641697883606
    2. ' v' → logprob: -1.5380663871765137
    3. 'check' → logprob: -4.038066387176514
    4. ' check' → logprob: -4.288066387176514
    5. 's' → logprob: -6.038066387176514
    6. ' s' → logprob: -6.538066387176514
    7. '(check' → logprob: -9.913066864013672
    8. '   ' → logprob: -10.038066864013672
    9. ' ' → logprob: -10.163066864013672
    10. '	v' → logprob: -10.288066864013672

Token 296: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5860540866851807
    2. ' >' → logprob: -0.8360540866851807
    3. '>=' → logprob: -5.086053848266602
    4. ' >=' → logprob: -5.711053848266602
    5. ' <' → logprob: -8.336053848266602
    6. '<' → logprob: -8.461053848266602
    7. ' ' → logprob: -9.961053848266602
    8. '   ' → logprob: -11.086053848266602
    9. '<=' → logprob: -11.836053848266602
    10. '%' → logprob: -11.836053848266602

Token 297: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.05344688892364502
    2. '0' → logprob: -3.4284467697143555
    3. ' ai' → logprob: -4.0534467697143555
    4. ' ' → logprob: -7.0534467697143555
    5. '-' → logprob: -7.4284467697143555
    6. '-ai' → logprob: -8.178446769714355
    7. 'inf' → logprob: -8.303446769714355
    8. ' -' → logprob: -9.553446769714355
    9. 'None' → logprob: -9.928446769714355
    10. 'a' → logprob: -9.928446769714355

Token 298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6752611994743347
    2. ' and' → logprob: -1.3002612590789795
    3. ':
' → logprob: -1.5502612590789795
    4. 'and' → logprob: -5.1752610206604
    5. '   ' → logprob: -7.9252610206604
    6. '       ' → logprob: -8.925261497497559
    7. '):
' → logprob: -10.300261497497559
    8. ' :' → logprob: -10.425261497497559
    9. ' :
' → logprob: -10.425261497497559
    10. ' or' → logprob: -10.550261497497559

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029457585886120796
    2. ':' → logprob: -4.6544575691223145
    3. ':
' → logprob: -4.6544575691223145
    4. ' and' → logprob: -5.0294575691223145
    5. 'push' → logprob: -6.1544575691223145
    6. ' push' → logprob: -8.029458045959473
    7. 'and' → logprob: -8.154458045959473
    8. '):
' → logprob: -8.654458045959473
    9. '   ' → logprob: -8.904458045959473
    10. ',' → logprob: -9.404458045959473

Token 300: ' push' (ID: 9349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1589968502521515
    2. 'push' (adapté à ' push') → logprob: -2.033996820449829
    3. ' push' → logprob: -4.158997058868408
    4. '           ' → logprob: -8.15899658203125
    5. 'he' → logprob: -9.28399658203125
    6. '   ' → logprob: -9.40899658203125
    7. ' he' → logprob: -9.65899658203125
    8. '	push' → logprob: -11.53399658203125
    9. '      ' → logprob: -12.15899658203125
    10. '.push' → logprob: -12.15899658203125

Token 301: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -3.726595241460018e-05
    2. '(h' → logprob: -10.50003719329834
    3. 'heap' → logprob: -11.62503719329834
    4. '_stack' → logprob: -14.87503719329834
    5. '(heap' → logprob: -15.12503719329834
    6. 'Heap' → logprob: -16.250038146972656
    7. '```' → logprob: -17.000038146972656
    8. '_queue' → logprob: -18.000038146972656
    9. '_heat' → logprob: -18.250038146972656
    10. ' heap' → logprob: -18.250038146972656

Token 302: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.000000953674316
    3. 'h' → logprob: -15.625000953674316
    4. '(
' → logprob: -16.875
    5. '<|end|>' → logprob: -17.25
    6. '	h' → logprob: -17.5
    7. ' (' → logprob: -17.5
    8. ',h' → logprob: -18.25
    9. '```' → logprob: -18.375
    10. ' h' → logprob: -19.5

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003576304006855935
    2. ',h' → logprob: -8.000357627868652
    3. '(h' → logprob: -11.625357627868652
    4. ',v' → logprob: -11.875357627868652
    5. ' ,' → logprob: -12.125357627868652
    6. ')' → logprob: -15.250357627868652
    7. '(v' → logprob: -15.750357627868652
    8. ',i' → logprob: -16.25035858154297
    9. ',
' → logprob: -16.50035858154297
    10. '<|end|>' → logprob: -16.75035858154297

Token 304: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0548880398273468
    2. ' v' → logprob: -2.9298880100250244
    3. '	v' → logprob: -12.929887771606445
    4. ')v' → logprob: -13.429887771606445
    5. '
' → logprob: -14.929887771606445
    6. 'V' → logprob: -15.179887771606445
    7. ',v' → logprob: -15.304887771606445
    8. '<|end|>' → logprob: -15.429887771606445
    9. '(v' → logprob: -15.679887771606445
    10. ')' → logprob: -15.804887771606445

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00199477793648839
    2. ',i' → logprob: -6.251994609832764
    3. ' ,' → logprob: -9.626995086669922
    4. ',
' → logprob: -15.751995086669922
    5. '   ' → logprob: -17.501995086669922
    6. '
' → logprob: -17.626995086669922
    7. ' i' → logprob: -17.751995086669922
    8. 'i' → logprob: -18.126995086669922
    9. ')' → logprob: -18.376995086669922
    10. ',int' → logprob: -18.876995086669922

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019286326132714748
    2. ' i' → logprob: -6.251928806304932
    3. ')i' → logprob: -17.751928329467773
    4. '	i' → logprob: -18.626928329467773
    5. ')' → logprob: -19.376928329467773
    6. '   ' → logprob: -19.626928329467773
    7. '_i' → logprob: -19.751928329467773
    8. '
' → logprob: -20.501928329467773
    9. ' ' → logprob: -21.126928329467773
    10. ',i' → logprob: -21.876928329467773

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ')
' → logprob: -9.375086784362793
    3. ')return' → logprob: -14.000086784362793
    4. '   ' → logprob: -14.875086784362793
    5. ')

' → logprob: -15.250086784362793
    6. ' )' → logprob: -15.375086784362793
    7. '<|end|>' → logprob: -15.375086784362793
    8. ')#' → logprob: -17.25008773803711
    9. ')add' → logprob: -17.62508773803711
    10. '')' → logprob: -17.62508773803711

Token 308: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014840320218354464
    2. '<|end|>' → logprob: -6.626483917236328
    3. '#' → logprob: -8.876483917236328
    4. '```' → logprob: -11.501483917236328
    5. '
' → logprob: -13.001483917236328
    6. '<|end|>' → logprob: -13.626483917236328
    7. '...' → logprob: -13.751483917236328
    8. ' def' → logprob: -13.876483917236328
    9. 'ndef' → logprob: -14.126483917236328
    10. 'for' → logprob: -14.251483917236328

Token 309: ' handle' (ID: 5318)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2904188930988312
    2. 'main' → logprob: -2.165418863296509
    3. ' main' → logprob: -2.165418863296509
    4. ' def' → logprob: -3.915418863296509
    5. 'push' → logprob: -6.915419101715088
    6. ' push' → logprob: -7.790419101715088
    7. 'read' → logprob: -8.16541862487793
    8. 'process' → logprob: -8.79041862487793
    9. 'solve' → logprob: -8.79041862487793
    10. 'd' → logprob: -9.16541862487793

Token 310: '_invalid' (ID: 71389)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4439890384674072
    2. '_heap' → logprob: -1.5689890384674072
    3. '_queue' → logprob: -4.318988800048828
    4. '_query' → logprob: -4.443988800048828
    5. '_operation' → logprob: -4.568988800048828
    6. '_input' → logprob: -4.693988800048828
    7. '_stack' → logprob: -4.693988800048828
    8. '(' → logprob: -5.443988800048828
    9. '_de' → logprob: -5.693988800048828
    10. '_push' → logprob: -5.818988800048828

Token 311: '():
' (ID: 8595)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.9717738032341003
    2. '_idx' → logprob: -1.7217738628387451
    3. '(i' → logprob: -1.9717738628387451
    4. '_indices' → logprob: -2.221773862838745
    5. '(s' → logprob: -2.596773862838745
    6. '_index' → logprob: -2.596773862838745
    7. '(' → logprob: -4.346773624420166
    8. '_heap' → logprob: -5.721773624420166
    9. '_node' → logprob: -5.846773624420166
    10. '_indexes' → logprob: -5.846773624420166

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012940469896420836
    2. ' pass' → logprob: -6.751294136047363
    3. 'pass' → logprob: -9.126294136047363
    4. '	pass' → logprob: -12.126294136047363
    5. '   ' → logprob: -12.626294136047363
    6. ' return' → logprob: -12.876294136047363
    7. '    
' → logprob: -13.251294136047363
    8. 'return' → logprob: -14.501294136047363
    9. ' raise' → logprob: -14.751294136047363
    10. '    ' → logprob: -14.751294136047363

Token 313: ' print' (ID: 2123)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5829024314880371
    2. 'pass' → logprob: -0.9579024314880371
    3. '   ' → logprob: -2.957902431488037
    4. 'return' → logprob: -5.707902431488037
    5. ' return' → logprob: -5.957902431488037
    6. '	pass' → logprob: -9.082902908325195
    7. '    ' → logprob: -11.082902908325195
    8. ' while' → logprob: -11.082902908325195
    9. 'while' → logprob: -11.332902908325195
    10. '```' → logprob: -11.707902908325195

Token 314: '(-' (ID: 8087)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26175469160079956
    2. '(-' → logprob: -1.5117547512054443
    3. '(' → logprob: -5.511754512786865
    4. '("' → logprob: -6.011754512786865
    5. '('' → logprob: -6.261754512786865
    6. '()-' → logprob: -6.761754512786865
    7. '()
' → logprob: -9.511754989624023
    8. '("-' → logprob: -10.136754989624023
    9. '-' → logprob: -10.386754989624023
    10. '()"' → logprob: -10.636754989624023

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -15.250000953674316
    3. '2' → logprob: -15.437500953674316
    4. '-' → logprob: -15.562500953674316
    5. '
' → logprob: -16.687501907348633
    6. '
' → logprob: -16.812501907348633
    7. '```' → logprob: -16.875001907348633
    8. '

' → logprob: -17.375001907348633
    9. '１' → logprob: -17.437501907348633
    10. '   ' → logprob: -18.000001907348633

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02976229228079319
    2. ')
' → logprob: -3.5297622680664062
    3. ')
' → logprob: -12.154762268066406
    4. ')return' → logprob: -12.404762268066406
    5. '')' → logprob: -13.904762268066406
    6. ' )' → logprob: -14.029762268066406
    7. '),' → logprob: -15.529762268066406
    8. ');' → logprob: -16.404762268066406
    9. '<|end|>' → logprob: -16.404762268066406
    10. ')

' → logprob: -16.404762268066406

Token 317: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017103075981140137
    2. '<|end|>' → logprob: -4.14210319519043
    3. '
' → logprob: -7.14210319519043
    4. '\n' → logprob: -9.14210319519043
    5. '```' → logprob: -9.26710319519043
    6. '<|end|>' → logprob: -10.51710319519043
    7. '

' → logprob: -11.26710319519043
    8. '\' → logprob: -11.26710319519043
    9. '#' → logprob: -12.14210319519043
    10. 'newline' → logprob: -12.89210319519043

Token 318: ' quit' (ID: 27737)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5096243023872375
    2. 'exit' → logprob: -1.2596242427825928
    3. 'import' → logprob: -2.2596242427825928
    4. '   ' → logprob: -4.509624481201172
    5. ' sys' → logprob: -9.384624481201172
    6. 'return' → logprob: -10.884624481201172
    7. ' exit' → logprob: -11.259624481201172
    8. '
' → logprob: -12.384624481201172
    9. 'quit' (adapté à ' quit') → logprob: -13.759624481201172
    10. '```' → logprob: -13.759624481201172

Token 319: '()

' (ID: 5874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33759093284606934
    2. '
' → logprob: -1.3375909328460693
    3. '<|end|>' → logprob: -3.8375909328460693
    4. '

' → logprob: -6.212591171264648
    5. '<|end|>' → logprob: -8.712591171264648
    6. '\n' → logprob: -9.212591171264648
    7. '  
' → logprob: -9.462591171264648
    8. '```' → logprob: -9.837591171264648
    9. '    
' → logprob: -10.837591171264648
    10. '\' → logprob: -11.462591171264648

Token 320: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.511406809295295e-06
    2. 'n' → logprob: -12.375006675720215
    3. ' def' → logprob: -13.875006675720215
    4. '
' → logprob: -15.250006675720215
    5. 'ndef' → logprob: -15.625006675720215
    6. '\' → logprob: -15.750006675720215
    7. '```' → logprob: -15.875006675720215
    8. 'for' → logprob: -16.5000057220459
    9. 'class' → logprob: -16.6250057220459
    10. '<|end|>' → logprob: -16.6250057220459

Token 321: ' try' (ID: 2075)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03188811615109444
    2. 'main' → logprob: -3.531888008117676
    3. ' solve' → logprob: -6.406888008117676
    4. 'solve' → logprob: -7.781888008117676
    5. ' process' → logprob: -9.906888008117676
    6. 'process' → logprob: -11.406888008117676
    7. '	main' → logprob: -12.906888008117676
    8. 'simulate' → logprob: -13.656888008117676
    9. ' simulate' → logprob: -13.781888008117676
    10. '_main' → logprob: -14.906888008117676

Token 322: '_continue' (ID: 188911)
  Prédit: '_process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_process' → logprob: -1.7562453746795654
    2. '_push' → logprob: -1.8812453746795654
    3. '_merge' → logprob: -2.1312453746795654
    4. '_reduce' → logprob: -2.5062453746795654
    5. '_to' → logprob: -2.6312453746795654
    6. '_pop' → logprob: -2.7562453746795654
    7. '_update' → logprob: -2.8812453746795654
    8. '_remove' → logprob: -3.0062453746795654
    9. '_handle' → logprob: -3.1312453746795654
    10. '_apply' → logprob: -3.6312453746795654

Token 323: '(v' (ID: 6932)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.060890018939971924
    2. '():' → logprob: -2.935889959335327
    3. '(' → logprob: -5.310890197753906
    4. '(i' → logprob: -7.685890197753906
    5. '(s' → logprob: -9.060890197753906
    6. '_' → logprob: -9.560890197753906
    7. '(_' → logprob: -9.935890197753906
    8. '(p' → logprob: -10.185890197753906
    9. '_(' → logprob: -10.185890197753906
    10. '(v' → logprob: -10.435890197753906

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005476722144521773
    2. ',i' → logprob: -8.125547409057617
    3. ' ,' → logprob: -8.750547409057617
    4. 's' → logprob: -10.500547409057617
    5. '):' → logprob: -10.625547409057617
    6. ',v' → logprob: -11.625547409057617
    7. ',s' → logprob: -11.750547409057617
    8. ',
' → logprob: -11.875547409057617
    9. '   ' → logprob: -12.625547409057617
    10. '):
' → logprob: -13.000547409057617

Token 325: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.6960434317588806
    2. ' ai' → logprob: -0.8210434317588806
    3. 'i' → logprob: -4.321043491363525
    4. ' s' → logprob: -4.446043491363525
    5. ' i' → logprob: -4.696043491363525
    6. 's' → logprob: -4.696043491363525
    7. ' tmp' → logprob: -5.071043491363525
    8. 'tmp' → logprob: -5.446043491363525
    9. 'a' → logprob: -5.821043491363525
    10. 'v' → logprob: -6.821043491363525

Token 326: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.117345684382599e-05
    2. ' ,' → logprob: -10.875020980834961
    3. '):' → logprob: -14.125020980834961
    4. ',i' → logprob: -14.250020980834961
    5. ',
' → logprob: -15.375020980834961
    6. '):
' → logprob: -15.875020980834961
    7. '   ' → logprob: -16.00002098083496
    8. '_,' → logprob: -16.12502098083496
    9. ',s' → logprob: -16.12502098083496
    10. 's' → logprob: -16.62502098083496

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021951000962872058
    2. ' return' → logprob: -8.875219345092773
    3. 'return' → logprob: -9.500219345092773
    4. ':' → logprob: -13.500219345092773
    5. ':return' → logprob: -13.875219345092773
    6. ':
' → logprob: -14.000219345092773
    7. '	return' → logprob: -14.125219345092773
    8. ',' → logprob: -15.250219345092773
    9. '   ' → logprob: -15.625219345092773
    10. '):
' → logprob: -16.125219345092773

Token 328: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8125739693641663
    2. 'return' (adapté à ' return') → logprob: -0.8125739693641663
    3. ' return' → logprob: -2.1875739097595215
    4. 'if' → logprob: -8.31257438659668
    5. ' if' → logprob: -9.31257438659668
    6. '	return' → logprob: -10.43757438659668
    7. 'def' → logprob: -12.06257438659668
    8. '  ' → logprob: -12.68757438659668
    9. '    ' → logprob: -13.06257438659668
    10. ' ' → logprob: -13.06257438659668

Token 329: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3134203851222992
    2. ' v' → logprob: -1.3134204149246216
    3. '(v' → logprob: -9.313420295715332
    4. ' (' → logprob: -10.563420295715332
    5. 'True' → logprob: -11.313420295715332
    6. '(' → logprob: -12.063420295715332
    7. ' ' → logprob: -12.313420295715332
    8. ' True' → logprob: -12.438420295715332
    9. '	v' → logprob: -12.438420295715332
    10. 'False' → logprob: -12.563420295715332

Token 330: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7360272407531738
    2. ' >' → logprob: -0.9860272407531738
    3. '!=' → logprob: -2.861027240753174
    4. ' >=' → logprob: -3.736027240753174
    5. ' ==' → logprob: -3.736027240753174
    6. '>' → logprob: -3.986027240753174
    7. ' <' → logprob: -4.236027240753174
    8. '<|end|>' → logprob: -5.861027240753174
    9. '==' → logprob: -6.111027240753174
    10. '>=' → logprob: -6.486027240753174

Token 331: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.5235421061515808
    2. 'ai' → logprob: -0.8985421061515808
    3. '0' → logprob: -8.523542404174805
    4. ' ' → logprob: -8.898542404174805
    5. '(ai' → logprob: -10.273542404174805
    6. '   ' → logprob: -11.023542404174805
    7. '1' → logprob: -11.148542404174805
    8. '  ' → logprob: -12.273542404174805
    9. '_ai' → logprob: -12.648542404174805
    10. '-ai' → logprob: -13.398542404174805

Token 332: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6281923651695251
    2. '<|end|>' → logprob: -0.8781923651695251
    3. '
' → logprob: -3.00319242477417
    4. '<|end|>' → logprob: -7.75319242477417
    5. '

' → logprob: -7.87819242477417
    6. '#' → logprob: -8.628191947937012
    7. '\n' → logprob: -9.503191947937012
    8. '  
' → logprob: -9.628191947937012
    9. '```' → logprob: -9.878191947937012
    10. ' def' → logprob: -10.628191947937012

Token 333: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.550411151489243e-05
    2. '#' → logprob: -10.125055313110352
    3. 'n' → logprob: -12.875055313110352
    4. '<|end|>' → logprob: -13.125055313110352
    5. '```' → logprob: -13.250055313110352
    6. 'for' → logprob: -13.250055313110352
    7. 'v' → logprob: -13.375055313110352
    8. ')' → logprob: -13.500055313110352
    9. 'while' → logprob: -14.000055313110352
    10. ' def' → logprob: -14.250055313110352

Token 334: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06610047817230225
    2. 'main' → logprob: -2.941100597381592
    3. ' def' → logprob: -5.566100597381592
    4. ' solve' → logprob: -6.066100597381592
    5. 'def' → logprob: -6.191100597381592
    6. ' process' → logprob: -6.691100597381592
    7. 'solve' → logprob: -7.066100597381592
    8. 'process' → logprob: -8.316100120544434
    9. ' compute' → logprob: -9.941100120544434
    10. ' try' → logprob: -10.066100120544434

Token 335: '_to' (ID: 5089)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2490328550338745
    2. '(' → logprob: -1.4990328550338745
    3. '<|end|>' → logprob: -1.8740328550338745
    4. ' def' → logprob: -2.499032974243164
    5. '_s' → logprob: -2.749032974243164
    6. '_' → logprob: -3.624032974243164
    7. ':' → logprob: -3.749032974243164
    8. '(s' → logprob: -3.874032974243164
    9. ' ' → logprob: -4.374032974243164
    10. 's' → logprob: -4.624032974243164

Token 336: '_ans' (ID: 146254)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.4411755800247192
    2. '_counter' → logprob: -1.8161755800247192
    3. '_heap' → logprob: -2.1911754608154297
    4. 's' → logprob: -2.1911754608154297
    5. '_queue' → logprob: -2.3161754608154297
    6. '(h' → logprob: -2.9411754608154297
    7. 'counter' → logprob: -3.1911754608154297
    8. 'h' → logprob: -3.3161754608154297
    9. 'deque' → logprob: -3.4411754608154297
    10. '_stack' → logprob: -3.6911754608154297

Token 337: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8375087380409241
    2. '(ans' → logprob: -1.0875086784362793
    3. '(a' → logprob: -2.5875086784362793
    4. 'def' → logprob: -2.9625086784362793
    5. '(s' → logprob: -3.3375086784362793
    6. ':' → logprob: -4.462508678436279
    7. '(answer' → logprob: -4.462508678436279
    8. '(value' → logprob: -4.712508678436279
    9. 's' → logprob: -4.962508678436279
    10. ' (' → logprob: -5.087508678436279

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003266241867095232
    2. '(ans' → logprob: -6.128266334533691
    3. '):' → logprob: -7.378266334533691
    4. '(' → logprob: -8.378266334533691
    5. ' ,' → logprob: -9.628266334533691
    6. ')' → logprob: -9.753266334533691
    7. '   ' → logprob: -10.878266334533691
    8. ')(' → logprob: -11.253266334533691
    9. '):
' → logprob: -11.753266334533691
    10. '[' → logprob: -11.878266334533691

Token 339: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8796197772026062
    2. ' value' → logprob: -1.379619836807251
    3. 'i' → logprob: -2.004619836807251
    4. ' v' → logprob: -2.629619836807251
    5. 'value' → logprob: -2.754619836807251
    6. 'v' → logprob: -3.879619836807251
    7. ' x' → logprob: -4.379619598388672
    8. ' val' → logprob: -4.629619598388672
    9. 'x' → logprob: -5.754619598388672
    10. ' s' → logprob: -5.754619598388672

Token 340: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3942694067955017
    2. '):' → logprob: -1.1442694664001465
    3. '):
' → logprob: -5.5192694664001465
    4. ')' → logprob: -6.6442694664001465
    5. '[' → logprob: -7.1442694664001465
    6. '):
' → logprob: -8.394268989562988
    7. ':' → logprob: -8.644268989562988
    8. 's' → logprob: -8.769268989562988
    9. '.append' → logprob: -8.894268989562988
    10. ' ,' → logprob: -9.394268989562988

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011915886716451496
    2. ' ans' → logprob: -9.25011920928955
    3. '	ans' → logprob: -10.87511920928955
    4. 'ans' → logprob: -12.87511920928955
    5. '(ans' → logprob: -13.50011920928955
    6. '   ' → logprob: -15.50011920928955
    7. '       ' → logprob: -17.750118255615234
    8. '```' → logprob: -18.125118255615234
    9. '_ans' → logprob: -18.375118255615234
    10. '	an' → logprob: -18.875118255615234

Token 342: ' return' (ID: 622)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5762161612510681
    2. 'ans' → logprob: -0.8262161612510681
    3. '   ' → logprob: -8.326215744018555
    4. '	ans' → logprob: -10.701215744018555
    5. '(ans' → logprob: -11.451215744018555
    6. '_ans' → logprob: -14.451215744018555
    7. 'answer' → logprob: -15.951215744018555
    8. 'anst' → logprob: -16.326215744018555
    9. ' ' → logprob: -16.451215744018555
    10. ' ' → logprob: -16.576215744018555

Token 343: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12719561159610748
    2. ' ans' → logprob: -2.1271955966949463
    3. '(ans' → logprob: -8.252195358276367
    4. '	ans' → logprob: -12.877195358276367
    5. 's' → logprob: -13.752195358276367
    6. ' None' → logprob: -14.252195358276367
    7. 'None' → logprob: -14.502195358276367
    8. ' s' → logprob: -14.627195358276367
    9. '[' → logprob: -14.752195358276367
    10. ' ' → logprob: -14.877195358276367

Token 344: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3359258472919464
    2. ' +' → logprob: -1.835925817489624
    3. '<|end|>' → logprob: -2.335925817489624
    4. '.append' → logprob: -3.585925817489624
    5. ',' → logprob: -7.460926055908203
    6. ' +=' → logprob: -8.460926055908203
    7. '+[' → logprob: -8.585926055908203
    8. '[' → logprob: -9.460926055908203
    9. '.add' → logprob: -9.585926055908203
    10. '.' → logprob: -9.960926055908203

Token 345: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1333475261926651
    2. ' s' → logprob: -2.758347511291504
    3. '[s' → logprob: -3.008347511291504
    4. ' [' → logprob: -4.883347511291504
    5. '[' → logprob: -5.508347511291504
    6. '1' → logprob: -8.758347511291504
    7. ''s' → logprob: -9.758347511291504
    8. 'str' → logprob: -10.258347511291504
    9. '(s' → logprob: -10.258347511291504
    10. '[str' → logprob: -10.508347511291504

Token 346: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.040314484387636185
    2. '
' → logprob: -3.2903144359588623
    3. '

' → logprob: -6.540314674377441
    4. '<|end|>' → logprob: -7.540314674377441
    5. '\n' → logprob: -9.790314674377441
    6. '<|end|>' → logprob: -10.165314674377441
    7. '\' → logprob: -10.415314674377441
    8. '
' → logprob: -10.540314674377441
    9. '  
' → logprob: -10.790314674377441
    10. '    
' → logprob: -10.915314674377441

Token 347: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012941618449985981
    2. '
' → logprob: -5.137941837310791
    3. '<|end|>' → logprob: -5.137941837310791
    4. '\n' → logprob: -8.137941360473633
    5. '\' → logprob: -8.137941360473633
    6. '<|end|>' → logprob: -8.262941360473633
    7. ' def' → logprob: -9.262941360473633
    8. '

' → logprob: -10.137941360473633
    9. '#' → logprob: -10.387941360473633
    10. '```' → logprob: -10.512941360473633

Token 348: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04547891393303871
    2. 'main' → logprob: -3.7954788208007812
    3. ' solve' → logprob: -3.9204788208007812
    4. 'solve' → logprob: -6.295478820800781
    5. ' process' → logprob: -8.545478820800781
    6. 'process' → logprob: -10.795478820800781
    7. ' solution' → logprob: -11.170478820800781
    8. ' def' → logprob: -11.545478820800781
    9. ' compute' → logprob: -11.545478820800781
    10. ' simulate' → logprob: -11.545478820800781

Token 349: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.249780638725497e-05
    2. '():
' → logprob: -10.375032424926758
    3. '()' → logprob: -14.250032424926758
    4. ' ():' → logprob: -14.375032424926758
    5. '():
' → logprob: -17.000032424926758
    6. '(' → logprob: -17.000032424926758
    7. ':' → logprob: -18.250032424926758
    8. '():

' → logprob: -19.875032424926758
    9. 'def' → logprob: -20.875032424926758
    10. '();' → logprob: -21.250032424926758

Token 350: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10648646205663681
    2. 'n' → logprob: -2.6064865589141846
    3. '   ' → logprob: -3.6064865589141846
    4. '	n' → logprob: -9.606486320495605
    5. '_n' → logprob: -12.981486320495605
    6. ' ' → logprob: -13.606486320495605
    7. '```' → logprob: -14.606486320495605
    8. ',n' → logprob: -14.981486320495605
    9. '   ' → logprob: -15.606486320495605
    10. '    ' → logprob: -16.106487274169922

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0037278688978403807
    2. '   ' → logprob: -5.878727912902832
    3. ' n' → logprob: -7.003727912902832
    4. 'N' → logprob: -11.878727912902832
    5. ' ' → logprob: -12.878727912902832
    6. '	n' → logprob: -13.003727912902832
    7. '
' → logprob: -13.753727912902832
    8. '#' → logprob: -14.753727912902832
    9. '    
' → logprob: -15.003727912902832
    10. '```' → logprob: -15.503727912902832

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.117561474442482
    2. '=' → logprob: -2.2425615787506104
    3. ',' → logprob: -5.367561340332031
    4. '=int' → logprob: -10.367561340332031
    5. ' ' → logprob: -10.992561340332031
    6. ' =
' → logprob: -11.992561340332031
    7. ' ,' → logprob: -12.617561340332031
    8. '=input' → logprob: -12.992561340332031
    9. ' =
' → logprob: -14.242561340332031
    10. ',n' → logprob: -15.367561340332031

Token 353: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0619756355881691
    2. ' read' → logprob: -2.8119757175445557
    3. 'int' → logprob: -11.936975479125977
    4. ' int' → logprob: -13.436975479125977
    5. '	read' → logprob: -17.311975479125977
    6. '  ' → logprob: -19.811975479125977
    7. '(read' → logprob: -19.936975479125977
    8. ' ' → logprob: -19.936975479125977
    9. '_read' → logprob: -20.936975479125977
    10. 'r' → logprob: -21.186975479125977

Token 354: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.01633944921195507
    2. '()' → logprob: -4.516339302062988
    3. '_' → logprob: -5.641339302062988
    4. 'int' → logprob: -6.391339302062988
    5. ')' → logprob: -11.141339302062988
    6. '()
' → logprob: -12.141339302062988
    7. '(' → logprob: -12.266339302062988
    8. ' _' → logprob: -12.516339302062988
    9. '_integer' → logprob: -12.516339302062988
    10. '())' → logprob: -12.891339302062988

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010712771909311414
    2. '()
' → logprob: -6.876071453094482
    3. ')' → logprob: -11.001070976257324
    4. '<|end|>' → logprob: -12.001070976257324
    5. '()\' → logprob: -12.626070976257324
    6. '())' → logprob: -12.751070976257324
    7. '
' → logprob: -13.376070976257324
    8. '   ' → logprob: -13.751070976257324
    9. ' ()' → logprob: -13.876070976257324
    10. '();' → logprob: -14.126070976257324

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12407739460468292
    2. 'V' → logprob: -2.874077320098877
    3. ' V' → logprob: -3.124077320098877
    4. 'A' → logprob: -5.124077320098877
    5. ' A' → logprob: -5.249077320098877
    6. ' ai' → logprob: -5.999077320098877
    7. 'a' → logprob: -6.749077320098877
    8. 'ai' → logprob: -7.499077320098877
    9. ' a' → logprob: -8.624077796936035
    10. ' ' → logprob: -8.874077796936035

Token 357: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.40582722425460815
    2. 'V' → logprob: -1.780827283859253
    3. 'A' → logprob: -2.280827283859253
    4. 'ai' → logprob: -2.780827283859253
    5. 'ans' → logprob: -7.780827045440674
    6. 'arr' → logprob: -8.155827522277832
    7. '   ' → logprob: -10.405827522277832
    8. 'AI' → logprob: -10.780827522277832
    9. 'Ai' → logprob: -11.030827522277832
    10. 'import' → logprob: -11.530827522277832

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16074082255363464
    2. '=' → logprob: -1.910740852355957
    3. '_list' → logprob: -7.910740852355957
    4. 's' → logprob: -9.910740852355957
    5. ' ' → logprob: -10.035740852355957
    6. '=[]' → logprob: -10.910740852355957
    7. 'List' → logprob: -12.160740852355957
    8. '=list' → logprob: -12.160740852355957
    9. 'lst' → logprob: -12.285740852355957
    10. 'list' → logprob: -12.410740852355957

Token 359: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.07888989895582199
    2. 'read' → logprob: -2.578889846801758
    3. '	read' → logprob: -16.578889846801758
    4. ' list' → logprob: -18.328889846801758
    5. '[]' → logprob: -18.578889846801758
    6. '(read' → logprob: -19.203889846801758
    7. '_read' → logprob: -19.328889846801758
    8. ' [' → logprob: -19.453889846801758
    9. '.read' → logprob: -20.078889846801758
    10. ' []' → logprob: -20.328889846801758

Token 360: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00015872348740231246
    2. 'int' → logprob: -9.000158309936523
    3. '_list' → logprob: -11.250158309936523
    4. '_line' → logprob: -11.500158309936523
    5. '_in' → logprob: -12.375158309936523
    6. '_' → logprob: -13.500158309936523
    7. '(_' → logprob: -14.000158309936523
    8. '
' → logprob: -14.000158309936523
    9. '```' → logprob: -14.375158309936523
    10. ' _' → logprob: -14.625158309936523

Token 361: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8789383830153383e-05
    2. '_' → logprob: -11.875019073486328
    3. 'list' → logprob: -12.000019073486328
    4. '()' → logprob: -12.625019073486328
    5. '_array' → logprob: -14.125019073486328
    6. 'List' → logprob: -14.375019073486328
    7. ' _' → logprob: -15.375019073486328
    8. '_lst' → logprob: -15.750019073486328
    9. 's' → logprob: -15.875019073486328
    10. '_lista' → logprob: -16.000019073486328

Token 362: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.313570499420166
    2. '()
' → logprob: -1.313570499420166
    3. '   ' → logprob: -8.188570022583008
    4. '
' → logprob: -11.563570022583008
    5. '()
' → logprob: -12.063570022583008
    6. '()\' → logprob: -12.188570022583008
    7. '()

' → logprob: -12.813570022583008
    8. ')' → logprob: -13.313570022583008
    9. ',' → logprob: -14.063570022583008
    10. '(
' → logprob: -14.313570022583008

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4283851385116577
    2. ' V' → logprob: -1.6783851385116577
    3. 'V' → logprob: -2.0533852577209473
    4. '
' → logprob: -4.303385257720947
    5. ' h' → logprob: -4.553385257720947
    6. '    
' → logprob: -6.178385257720947
    7. 'v' → logprob: -6.553385257720947
    8. 'h' → logprob: -6.803385257720947
    9. ' 
' → logprob: -6.803385257720947
    10. '```' → logprob: -7.178385257720947

Token 364: ' b' (ID: 287)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0025991995353251696
    2. 'h' → logprob: -6.627599239349365
    3. '   ' → logprob: -7.752599239349365
    4. 'v' → logprob: -8.377598762512207
    5. 'ans' → logprob: -8.377598762512207
    6. ' V' → logprob: -9.002598762512207
    7. 'if' → logprob: -9.127598762512207
    8. '#' → logprob: -10.377598762512207
    9. '    
' → logprob: -10.377598762512207
    10. 'a' → logprob: -10.877598762512207

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012582294642925262
    2. '=' → logprob: -4.387582302093506
    3. '_' → logprob: -9.762581825256348
    4. ' ' → logprob: -12.512581825256348
    5. ' ' → logprob: -12.762581825256348
    6. ',' → logprob: -12.762581825256348
    7. '[' → logprob: -13.637581825256348
    8. ' =
' → logprob: -14.012581825256348
    9. ' ,' → logprob: -14.262581825256348
    10. ')' → logprob: -14.887581825256348

Token 366: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.2970457077026367
    2. ' read' → logprob: -1.2970457077026367
    3. ' a' → logprob: -1.6720457077026367
    4. 'a' → logprob: -1.6720457077026367
    5. ' [' → logprob: -3.4220457077026367
    6. '[' → logprob: -3.6720457077026367
    7. '[a' → logprob: -5.047045707702637
    8. ' list' → logprob: -5.297045707702637
    9. '[]' → logprob: -5.422045707702637
    10. 'list' → logprob: -5.797045707702637

Token 367: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.022850560024380684
    2. 'int' → logprob: -4.022850513458252
    3. '_list' → logprob: -5.397850513458252
    4. 'list' → logprob: -9.14785099029541
    5. 'Int' → logprob: -11.64785099029541
    6. 'a' → logprob: -11.64785099029541
    7. '[int' → logprob: -11.77285099029541
    8. '```' → logprob: -12.02285099029541
    9. '(int' → logprob: -12.27285099029541
    10. '
' → logprob: -12.27285099029541

Token 368: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.35451820492744446
    2. '()' → logprob: -1.229518175125122
    3. '()
' → logprob: -5.604518413543701
    4. 'List' → logprob: -6.979518413543701
    5. 's' → logprob: -7.354518413543701
    6. '_' → logprob: -7.479518413543701
    7. 'list' → logprob: -9.354517936706543
    8. '(' → logprob: -9.729517936706543
    9. '[]' → logprob: -11.104517936706543
    10. '()[' → logprob: -11.104517936706543

Token 369: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009228924172930419
    2. '()
' → logprob: -7.000922679901123
    3. ' ()' → logprob: -12.625923156738281
    4. ' =' → logprob: -12.750923156738281
    5. 'def' → logprob: -13.875923156738281
    6. '()

' → logprob: -14.000923156738281
    7. '())' → logprob: -14.250923156738281
    8. '()\' → logprob: -14.625923156738281
    9. '()[' → logprob: -14.625923156738281
    10. '()
' → logprob: -15.000923156738281

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29869621992111206
    2. '
' → logprob: -1.4236962795257568
    3. 'V' → logprob: -5.173696041107178
    4. '    
' → logprob: -5.298696041107178
    5. ' V' → logprob: -6.298696041107178
    6. ' ans' → logprob: -7.048696041107178
    7. ' h' → logprob: -7.173696041107178
    8. '```' → logprob: -7.423696041107178
    9. '  
' → logprob: -7.548696041107178
    10. 'h' → logprob: -7.673696041107178

Token 371: ' h' (ID: 312)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.09974316507577896
    2. 'h' (adapté à ' h') → logprob: -2.724743127822876
    3. '
' → logprob: -4.349743366241455
    4. '   ' → logprob: -4.974743366241455
    5. 'ans' → logprob: -5.724743366241455
    6. ' V' → logprob: -6.349743366241455
    7. '    
' → logprob: -6.474743366241455
    8. 'v' → logprob: -7.474743366241455
    9. 'a' → logprob: -7.474743366241455
    10. ' ans' → logprob: -7.724743366241455

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011993874795734882
    2. '=' → logprob: -5.136993885040283
    3. '=[]' → logprob: -5.261993885040283
    4. ',' → logprob: -7.136993885040283
    5. '[]' → logprob: -11.261993408203125
    6. ' ' → logprob: -11.386993408203125
    7. '   ' → logprob: -11.511993408203125
    8. '=[' → logprob: -11.636993408203125
    9. '=[]
' → logprob: -11.761993408203125
    10. '  ' → logprob: -12.636993408203125

Token 373: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4021237802808173e-05
    2. ' []' → logprob: -11.750014305114746
    3. '[]
' → logprob: -12.125014305114746
    4. '[' → logprob: -15.125014305114746
    5. '[]}' → logprob: -15.500014305114746
    6. '[]>' → logprob: -16.00001335144043
    7. '[],' → logprob: -16.87501335144043
    8. '=[]' → logprob: -17.37501335144043
    9. '[])' → logprob: -17.37501335144043
    10. '[]

' → logprob: -17.62501335144043

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5562923550605774
    2. ' for' → logprob: -0.9312923550605774
    3. 'for' → logprob: -3.4312922954559326
    4. '    
' → logprob: -9.181292533874512
    5. '	for' → logprob: -9.306292533874512
    6. '
' → logprob: -10.306292533874512
    7. '```' → logprob: -11.556292533874512
    8. 'n' → logprob: -11.806292533874512
    9. ',' → logprob: -11.931292533874512
    10. ' ' → logprob: -12.556292533874512

Token 375: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.5817699432373047
    2. 'for' → logprob: -0.8317699432373047
    3. 'ans' → logprob: -5.831769943237305
    4. ' for' → logprob: -6.081769943237305
    5. ' V' → logprob: -7.956769943237305
    6. '   ' → logprob: -8.956769943237305
    7. ' ans' → logprob: -10.706769943237305
    8. 'result' → logprob: -10.956769943237305
    9. 'answer' → logprob: -11.206769943237305
    10. 'v' → logprob: -11.206769943237305

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6947550773620605
    2. ' =' → logprob: -0.6947550773620605
    3. ',' → logprob: -6.4447550773620605
    4. '.' → logprob: -12.069755554199219
    5. '=[]' → logprob: -12.444755554199219
    6. ' ,' → logprob: -13.319755554199219
    7. '[' → logprob: -13.444755554199219
    8. '=[' → logprob: -14.319755554199219
    9. '.append' → logprob: -14.569755554199219
    10. '   ' → logprob: -14.819755554199219

Token 377: ' [' (ID: 723)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5949681401252747
    2. 'a' → logprob: -0.8449681401252747
    3. '[' → logprob: -4.844968318939209
    4. '[a' → logprob: -4.969968318939209
    5. '[b' → logprob: -6.219968318939209
    6. 'list' → logprob: -6.719968318939209
    7. ' a' → logprob: -8.09496784210205
    8. ' b' → logprob: -8.21996784210205
    9. ' [' → logprob: -9.46996784210205
    10. '[]' → logprob: -9.71996784210205

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5745013952255249
    2. 'b' → logprob: -1.449501395225525
    3. 'a' → logprob: -1.949501395225525
    4. 'ai' → logprob: -3.5745015144348145
    5. 'x' → logprob: -4.4495015144348145
    6. 'inf' → logprob: -5.4495015144348145
    7. 'max' → logprob: -5.5745015144348145
    8. 'bi' → logprob: -6.1995015144348145
    9. 'v' → logprob: -6.3245015144348145
    10. '(' → logprob: -6.8245015144348145

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02663685940206051
    2. ']*' → logprob: -3.651636838912964
    3. ']+' → logprob: -8.776637077331543
    4. ']*(' → logprob: -8.901637077331543
    5. ' for' → logprob: -10.276637077331543
    6. ' ]' → logprob: -12.276637077331543
    7. 'for' → logprob: -12.651637077331543
    8. ',' → logprob: -14.151637077331543
    9. 'n' → logprob: -14.651637077331543
    10. '()]' → logprob: -15.026637077331543

Token 380: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28723084926605225
    2. 'for' → logprob: -2.662230968475342
    3. ' for' → logprob: -2.662230968475342
    4. ' *' → logprob: -3.287230968475342
    5. '*n' → logprob: -3.287230968475342
    6. ']*' → logprob: -4.162230968475342
    7. '+' → logprob: -4.537230968475342
    8. ']' → logprob: -6.412230968475342
    9. ' n' → logprob: -6.787230968475342
    10. '
' → logprob: -6.787230968475342

Token 381: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002258277963846922
    2. '(n' → logprob: -8.875226020812988
    3. ' n' → logprob: -9.625226020812988
    4. '(' → logprob: -11.000226020812988
    5. ' (' → logprob: -13.250226020812988
    6. '
' → logprob: -14.375226020812988
    7. '   ' → logprob: -14.625226020812988
    8. '	n' → logprob: -15.625226020812988
    9. '2' → logprob: -16.125225067138672
    10. ' ' → logprob: -16.625225067138672

Token 382: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044922105967998505
    2. '   ' → logprob: -3.794922113418579
    3. '<|end|>' → logprob: -4.294921875
    4. '    
' → logprob: -5.669921875
    5. '  
' → logprob: -6.294921875
    6. ' 
' → logprob: -6.919921875
    7. ' for' → logprob: -7.794921875
    8. '
' → logprob: -8.294921875
    9. '	
' → logprob: -8.544921875
    10. '   
' → logprob: -8.794921875

Token 383: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7669626474380493
    2. '   ' → logprob: -1.1419626474380493
    3. '<|end|>' → logprob: -1.8919626474380493
    4. ' for' → logprob: -3.1419625282287598
    5. '    
' → logprob: -4.89196252822876
    6. '  
' → logprob: -5.39196252822876
    7. ' 
' → logprob: -5.51696252822876
    8. 'for' → logprob: -6.39196252822876
    9. ' ' → logprob: -6.39196252822876
    10. '  ' → logprob: -7.64196252822876

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026341751217842102
    2. ' for' → logprob: -4.401341915130615
    3. 'ans' → logprob: -4.526341915130615
    4. '   ' → logprob: -5.901341915130615
    5. ' ans' → logprob: -9.276341438293457
    6. 's' → logprob: -10.776341438293457
    7. 'answer' → logprob: -11.026341438293457
    8. '
' → logprob: -11.401341438293457
    9. 'total' → logprob: -11.776341438293457
    10. 'a' → logprob: -12.026341438293457

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196925416588783
    2. ' i' → logprob: -2.81196928024292
    3. '	i' → logprob: -14.186968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '_i' → logprob: -14.811968803405762
    6. '_' → logprob: -15.811968803405762
    7. '   ' → logprob: -16.936969757080078
    8. ' _' → logprob: -17.811969757080078
    9. '`' → logprob: -18.061969757080078
    10. ' in' → logprob: -18.561969757080078

Token 386: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04941439628601074
    2. 'in' → logprob: -3.0494143962860107
    3. ' ' → logprob: -7.17441463470459
    4. '	in' → logprob: -10.29941463470459
    5. ',' → logprob: -11.42441463470459
    6. '  ' → logprob: -12.67441463470459
    7. 'n' → logprob: -12.67441463470459
    8. ' i' → logprob: -13.67441463470459
    9. ' n' → logprob: -13.92441463470459
    10. '_' → logprob: -13.92441463470459

Token 387: ' v' (ID: 323)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.2434827983379364
    2. '(ai' → logprob: -1.6184828281402588
    3. '(' → logprob: -4.49348258972168
    4. 'val' → logprob: -5.99348258972168
    5. '(v' → logprob: -7.36848258972168
    6. 'x' → logprob: -7.36848258972168
    7. '(val' → logprob: -7.49348258972168
    8. 'v' → logprob: -7.61848258972168
    9. '(a' → logprob: -7.86848258972168
    10. ' ai' → logprob: -8.11848258972168

Token 388: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28150278329849243
    2. 'in' → logprob: -1.4065027236938477
    3. ',' → logprob: -8.156502723693848
    4. ' ' → logprob: -11.031502723693848
    5. 'n' → logprob: -11.656502723693848
    6. '   ' → logprob: -12.156502723693848
    7. 'a' → logprob: -12.406502723693848
    8. 'v' → logprob: -12.656502723693848
    9. 's' → logprob: -12.656502723693848
    10. 'import' → logprob: -12.781502723693848

Token 389: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0003372502396814525
    2. ' enumerate' → logprob: -8.000337600708008
    3. 'zip' → logprob: -13.625337600708008
    4. 'enum' → logprob: -15.875337600708008
    5. '
' → logprob: -16.000337600708008
    6. 'en' → logprob: -16.625337600708008
    7. '(en' → logprob: -16.750337600708008
    8. 'range' → logprob: -16.750337600708008
    9. 'enqueue' → logprob: -17.000337600708008
    10. '```' → logprob: -17.375337600708008

Token 390: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06549415737390518
    2. '(b' → logprob: -2.9404940605163574
    3. 'a' → logprob: -5.315494060516357
    4. 'b' → logprob: -6.065494060516357
    5. ' (' → logprob: -6.440494060516357
    6. ' a' → logprob: -7.190494060516357
    7. '(zip' → logprob: -7.940494060516357
    8. ' b' → logprob: -8.065494537353516
    9. '(' → logprob: -9.190494537353516
    10. ',' → logprob: -9.690494537353516

Token 391: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023267259821295738
    2. '):
' → logprob: -3.7732672691345215
    3. '):
' → logprob: -11.773266792297363
    4. ':' → logprob: -11.898266792297363
    5. ' ):' → logprob: -12.148266792297363
    6. ')' → logprob: -14.523266792297363
    7. ']:' → logprob: -15.273266792297363
    8. '):

' → logprob: -15.398266792297363
    9. '[i' → logprob: -15.648266792297363
    10. '[]):' → logprob: -15.773266792297363

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009273487143218517
    2. ' V' → logprob: -5.384273529052734
    3. 'V' → logprob: -6.384273529052734
    4. '   ' → logprob: -6.759273529052734
    5. ':' → logprob: -6.884273529052734
    6. '):
' → logprob: -8.509273529052734
    7. ':
' → logprob: -8.509273529052734
    8. ',' → logprob: -9.884273529052734
    9. 'push' → logprob: -9.884273529052734
    10. '      ' → logprob: -10.134273529052734

Token 393: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' (adapté à ' push') → logprob: -0.7326592206954956
    2. 'V' → logprob: -0.9826592206954956
    3. '   ' → logprob: -2.732659339904785
    4. ' V' → logprob: -3.107659339904785
    5. ' push' → logprob: -3.482659339904785
    6. '       ' → logprob: -6.482659339904785
    7. 'update' → logprob: -6.607659339904785
    8. 'if' → logprob: -7.357659339904785
    9. ' update' → logprob: -8.482659339904785
    10. 'v' → logprob: -8.607659339904785

Token 394: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -9.13388703338569e-06
    2. 'heap' → logprob: -11.875009536743164
    3. '(h' → logprob: -13.750009536743164
    4. 'h' → logprob: -14.250009536743164
    5. '(heap' → logprob: -15.875009536743164
    6. '_h' → logprob: -17.250009536743164
    7. '```' → logprob: -17.375009536743164
    8. '
' → logprob: -18.000009536743164
    9. 'a' → logprob: -18.750009536743164
    10. '_hp' → logprob: -18.750009536743164

Token 395: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.375
    3. '(' → logprob: -16.75
    4. ' (' → logprob: -19.625
    5. '	h' → logprob: -21.5
    6. '[h' → logprob: -21.5
    7. '   ' → logprob: -22.25
    8. '<h' → logprob: -22.25
    9. '(
' → logprob: -22.375
    10. ',h' → logprob: -22.875

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060132429003715515
    2. '(h' → logprob: -3.0601325035095215
    3. ',h' → logprob: -4.5601325035095215
    4. '(' → logprob: -7.5601325035095215
    5. ')' → logprob: -8.935132026672363
    6. ' ,' → logprob: -9.185132026672363
    7. ',V' → logprob: -9.435132026672363
    8. '(V' → logprob: -9.435132026672363
    9. 'h' → logprob: -9.935132026672363
    10. '(v' → logprob: -11.060132026672363

Token 397: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024779161904007196
    2. ' v' → logprob: -6.002478122711182
    3. '       ' → logprob: -13.502477645874023
    4. '	v' → logprob: -14.627477645874023
    5. ')v' → logprob: -15.502477645874023
    6. 'V' → logprob: -17.127477645874023
    7. ',v' → logprob: -17.127477645874023
    8. '(v' → logprob: -17.252477645874023
    9. '        ' → logprob: -17.627477645874023
    10. '
' → logprob: -18.127477645874023

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014315475709736347
    2. ',i' → logprob: -7.126431465148926
    3. ' ,' → logprob: -7.376431465148926
    4. ',
' → logprob: -15.251431465148926
    5. ' i' → logprob: -15.376431465148926
    6. 'i' → logprob: -15.501431465148926
    7. '   ' → logprob: -15.876431465148926
    8. '[i' → logprob: -16.001432418823242
    9. ' ' → logprob: -17.126432418823242
    10. '```' → logprob: -17.376432418823242

Token 399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0067154900170862675
    2. ' i' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.756715774536133
    4. ')i' → logprob: -17.006715774536133
    5. '	i' → logprob: -17.131715774536133
    6. ')' → logprob: -17.506715774536133
    7. ' ' → logprob: -18.256715774536133
    8. '       ' → logprob: -19.756715774536133
    9. '    ' → logprob: -20.131715774536133
    10. '(i' → logprob: -20.506715774536133

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013584480620920658
    2. ')
' → logprob: -6.626358509063721
    3. ')V' → logprob: -10.751358032226562
    4. '       ' → logprob: -12.626358032226562
    5. ')

' → logprob: -12.751358032226562
    6. ')v' → logprob: -13.251358032226562
    7. '   ' → logprob: -13.501358032226562
    8. ')
' → logprob: -15.001358032226562
    9. ' )' → logprob: -15.126358032226562
    10. ',' → logprob: -15.751358032226562

Token 401: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009386274963617325
    2. '<|end|>' → logprob: -4.88438606262207
    3. ' while' → logprob: -8.13438606262207
    4. 'while' → logprob: -8.13438606262207
    5. '
' → logprob: -8.25938606262207
    6. ' for' → logprob: -8.50938606262207
    7. '       ' → logprob: -8.88438606262207
    8. '    
' → logprob: -8.88438606262207
    9. 'V' → logprob: -9.00938606262207
    10. 'for' → logprob: -9.25938606262207

Token 402: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.0022653979249298573
    2. '   ' → logprob: -6.252265453338623
    3. ' V' → logprob: -8.877264976501465
    4. 'ai' → logprob: -9.877264976501465
    5. '
' → logprob: -10.377264976501465
    6. 'update' → logprob: -10.377264976501465
    7. '       ' → logprob: -10.752264976501465
    8. 'while' → logprob: -10.877264976501465
    9. 'a' → logprob: -11.627264976501465
    10. 'for' → logprob: -12.252264976501465

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -10.500030517578125
    3. '```' → logprob: -14.750030517578125
    4. '=' → logprob: -15.000030517578125
    5. ' =' → logprob: -15.250030517578125
    6. 'i' → logprob: -15.500030517578125
    7. '[v' → logprob: -15.875030517578125
    8. '
' → logprob: -15.875030517578125
    9. '[index' → logprob: -16.000030517578125
    10. ' [' → logprob: -16.125030517578125

Token 404: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09751419723033905
    2. '=' → logprob: -2.4725141525268555
    3. ']=' → logprob: -5.2225141525268555
    4. ' =' → logprob: -6.0975141525268555
    5. ')' → logprob: -7.0975141525268555
    6. '=v' → logprob: -10.347514152526855
    7. ')=' → logprob: -10.722514152526855
    8. ' ]' → logprob: -12.097514152526855
    9. ']+=' → logprob: -12.722514152526855
    10. 'v' → logprob: -13.347514152526855

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025147777050733566
    2. ' =' → logprob: -6.002514839172363
    3. '=v' → logprob: -10.252514839172363
    4. '+=' → logprob: -13.502514839172363
    5. '=i' → logprob: -14.127514839172363
    6. '=int' → logprob: -14.377514839172363
    7. '=
' → logprob: -14.627514839172363
    8. ',' → logprob: -16.127513885498047
    9. '=

' → logprob: -16.127513885498047
    10. '=s' → logprob: -16.627513885498047

Token 406: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00013738969573751092
    2. ' v' → logprob: -9.125137329101562
    3. '0' → logprob: -10.750137329101562
    4. 'a' → logprob: -12.625137329101562
    5. 'b' → logprob: -12.750137329101562
    6. ' ' → logprob: -15.250137329101562
    7. '	v' → logprob: -15.875137329101562
    8. '   ' → logprob: -16.125137329101562
    9. '1' → logprob: -16.750137329101562
    10. '```' → logprob: -17.000137329101562

Token 407: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18237201869487762
    2. '<|end|>' → logprob: -2.3073720932006836
    3. '
' → logprob: -2.8073720932006836
    4. '    
' → logprob: -5.432372093200684
    5. '<|end|>' → logprob: -7.182372093200684
    6. 'while' → logprob: -7.557372093200684
    7. '	while' → logprob: -8.307372093200684
    8. ' while' → logprob: -8.432372093200684
    9. '  
' → logprob: -8.807372093200684
    10. ' for' → logprob: -9.307372093200684

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04518602788448334
    2. '
' → logprob: -3.7951860427856445
    3. '<|end|>' → logprob: -4.4201860427856445
    4. '    
' → logprob: -4.9201860427856445
    5. ' while' → logprob: -7.2951860427856445
    6. 'while' → logprob: -7.2951860427856445
    7. '  
' → logprob: -8.295186042785645
    8. ' ' → logprob: -9.170186042785645
    9. '```' → logprob: -9.420186042785645
    10. '   
' → logprob: -9.420186042785645

Token 409: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002304889028891921
    2. 'while' → logprob: -6.377305030822754
    3. '   ' → logprob: -8.002305030822754
    4. ' ans' → logprob: -8.377305030822754
    5. 'answer' → logprob: -10.752305030822754
    6. ' while' → logprob: -11.877305030822754
    7. '    
' → logprob: -12.752305030822754
    8. '```' → logprob: -13.002305030822754
    9. 'for' → logprob: -13.877305030822754
    10. '	ans' → logprob: -14.127305030822754

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804241120815277
    2. '=' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.538042068481445
    4. ',' → logprob: -14.788042068481445
    5. ' =
' → logprob: -17.038042068481445
    6. ' ' → logprob: -17.413042068481445
    7. '  ' → logprob: -18.663042068481445
    8. ' =)' → logprob: -18.663042068481445
    9. ' +=' → logprob: -19.038042068481445
    10. '0' → logprob: -19.163042068481445

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007106438861228526
    2. ' ' → logprob: -7.250710487365723
    3. '1' → logprob: -15.375710487365723
    4. 'inf' → logprob: -15.750710487365723
    5. 'sum' → logprob: -15.875710487365723
    6. '   ' → logprob: -17.25071144104004
    7. ' ' → logprob: -17.50071144104004
    8. 'max' → logprob: -17.68821144104004
    9. '-' → logprob: -17.87571144104004
    10. 'b' → logprob: -17.93821144104004

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -18.750003814697266
    4. 'inf' → logprob: -18.750003814697266
    5. 'int' → logprob: -19.500003814697266
    6. '-' → logprob: -19.625003814697266
    7. '000' → logprob: -20.187503814697266
    8. '۰' → logprob: -20.562503814697266
    9. '   ' → logprob: -20.687503814697266
    10. 'sum' → logprob: -20.750003814697266

Token 413: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016445956425741315
    2. '   ' → logprob: -7.251644611358643
    3. '    
' → logprob: -8.126644134521484
    4. '<|end|>' → logprob: -8.626644134521484
    5. '  
' → logprob: -9.001644134521484
    6. '	
' → logprob: -9.126644134521484
    7. ' 
' → logprob: -9.501644134521484
    8. '
' → logprob: -10.001644134521484
    9. '	while' → logprob: -10.626644134521484
    10. '\n' → logprob: -10.626644134521484

Token 414: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6555023193359375
    2. '   ' → logprob: -1.0305023193359375
    3. 'while' → logprob: -2.5305023193359375
    4. '
' → logprob: -3.2805023193359375
    5. '	while' → logprob: -5.1555023193359375
    6. '    
' → logprob: -7.7805023193359375
    7. '<|end|>' → logprob: -8.280502319335938
    8. ' 
' → logprob: -8.905502319335938
    9. '```' → logprob: -10.280502319335938
    10. '  
' → logprob: -10.530502319335938

Token 415: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0789073035120964
    2. ' while' → logprob: -2.5789072513580322
    3. '   ' → logprob: -11.828907012939453
    4. '	while' → logprob: -12.078907012939453
    5. '
' → logprob: -13.453907012939453
    6. ' 
' → logprob: -14.453907012939453
    7. 'While' → logprob: -14.578907012939453
    8. 'for' → logprob: -14.953907012939453
    9. '    
' → logprob: -15.078907012939453
    10. ' ' → logprob: -15.453907012939453

Token 416: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2520226538181305
    2. ' h' → logprob: -1.502022624015808
    3. ' len' → logprob: -10.502022743225098
    4. '(h' → logprob: -10.627022743225098
    5. 'len' → logprob: -10.627022743225098
    6. 'True' → logprob: -11.877022743225098
    7. '	h' → logprob: -12.627022743225098
    8. ' True' → logprob: -12.877022743225098
    9. '   ' → logprob: -13.252022743225098
    10. ' ' → logprob: -14.002022743225098

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002545448951423168
    2. '):' → logprob: -8.87525463104248
    3. ':
' → logprob: -10.00025463104248
    4. ' and' → logprob: -10.00025463104248
    5. '>:' → logprob: -11.62525463104248
    6. '>' → logprob: -12.50025463104248
    7. '!=' → logprob: -12.75025463104248
    8. 'and' → logprob: -12.87525463104248
    9. ')' → logprob: -13.50025463104248
    10. '[' → logprob: -13.50025463104248

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15521985292434692
    2. ',' → logprob: -2.655219793319702
    3. '   ' → logprob: -3.530219793319702
    4. ' v' → logprob: -4.155220031738281
    5. '    ' → logprob: -4.530220031738281
    6. ' ,' → logprob: -5.530220031738281
    7. 'v' → logprob: -5.530220031738281
    8. ',v' → logprob: -6.030220031738281
    9. ' (' → logprob: -6.655220031738281
    10. '(v' → logprob: -7.155220031738281

Token 419: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0005743592046201229
    2. ' v' → logprob: -7.500574588775635
    3. '   ' → logprob: -11.250574111938477
    4. '       ' → logprob: -12.000574111938477
    5. '_v' → logprob: -14.875574111938477
    6. '```' → logprob: -15.250574111938477
    7. '	v' → logprob: -15.375574111938477
    8. '    ' → logprob: -15.500574111938477
    9. '           ' → logprob: -15.500574111938477
    10. ',v' → logprob: -15.875574111938477

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ',i' → logprob: -12.12501335144043
    3. ' ,' → logprob: -12.12501335144043
    4. '=' → logprob: -14.25001335144043
    5. ',v' → logprob: -14.37501335144043
    6. 'v' → logprob: -15.37501335144043
    7. '‌,' → logprob: -16.50001335144043
    8. ',n' → logprob: -16.75001335144043
    9. ',
' → logprob: -16.87501335144043
    10. ',current' → logprob: -17.12501335144043

Token 421: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002249933750135824
    2. ' i' → logprob: -8.500225067138672
    3. 'idx' → logprob: -10.875225067138672
    4. '   ' → logprob: -14.125225067138672
    5. 'index' → logprob: -15.125225067138672
    6. '
' → logprob: -15.375225067138672
    7. '	i' → logprob: -15.500225067138672
    8. ' ' → logprob: -15.500225067138672
    9. '```' → logprob: -15.875225067138672
    10. 'ind' → logprob: -16.000225067138672

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020947456359863
    2. '=' → logprob: -2.3502094745635986
    3. ' =
' → logprob: -13.97520923614502
    4. ')' → logprob: -14.60020923614502
    5. ',' → logprob: -14.85020923614502
    6. '   ' → logprob: -15.22520923614502
    7. '=v' → logprob: -15.22520923614502
    8. ' ' → logprob: -15.47520923614502
    9. '=
' → logprob: -15.85020923614502
    10. 'v' → logprob: -16.475210189819336

Token 423: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0232466422021389
    2. ' pop' → logprob: -3.7732465267181396
    3. '	pop' → logprob: -13.898246765136719
    4. '.pop' → logprob: -15.398246765136719
    5. '(pop' → logprob: -16.77324676513672
    6. '
' → logprob: -17.77324676513672
    7. '   ' → logprob: -18.52324676513672
    8. '_pop' → logprob: -18.89824676513672
    9. 'Pop' → logprob: -20.77324676513672
    10. ' поп' → logprob: -20.89824676513672

Token 424: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.03809462487697601
    2. '(h' → logprob: -3.2880945205688477
    3. 'heap' → logprob: -10.038094520568848
    4. 'h' → logprob: -12.788094520568848
    5. '(heap' → logprob: -13.538094520568848
    6. '```' → logprob: -13.663094520568848
    7. 'Heap' → logprob: -13.788094520568848
    8. '_heat' → logprob: -14.413094520568848
    9. '[h' → logprob: -14.538094520568848
    10. '_h' → logprob: -14.663094520568848

Token 425: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.875003814697266
    3. '(
' → logprob: -13.500003814697266
    4. ' (' → logprob: -16.000003814697266
    5. ')' → logprob: -17.625003814697266
    6. 'h' → logprob: -17.750003814697266
    7. '       ' → logprob: -17.875003814697266
    8. '   ' → logprob: -18.125003814697266
    9. ',' → logprob: -18.750003814697266
    10. ',h' → logprob: -19.375003814697266

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859509319067001
    2. ')
' → logprob: -3.0485951900482178
    3. ')
' → logprob: -12.673595428466797
    4. ')

' → logprob: -13.423595428466797
    5. '       ' → logprob: -14.048595428466797
    6. '()' → logprob: -14.048595428466797
    7. '   ' → logprob: -15.173595428466797
    8. '())' → logprob: -15.423595428466797
    9. ')`' → logprob: -15.923595428466797
    10. '())
' → logprob: -16.048595428466797

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004471777938306332
    2. 'tmp' → logprob: -7.129471778869629
    3. 'ai' → logprob: -7.379471778869629
    4. '        
' → logprob: -7.379471778869629
    5. ' ai' → logprob: -7.504471778869629
    6. '
' → logprob: -7.629471778869629
    7. '   ' → logprob: -8.004471778869629
    8. ',' → logprob: -8.129471778869629
    9. '```' → logprob: -8.629471778869629
    10. ' tmp' → logprob: -9.254471778869629

Token 428: ' tmp' (ID: 8919)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.10324711352586746
    2. 'if' → logprob: -2.4782471656799316
    3. 'tmp' (adapté à ' tmp') → logprob: -4.853247165679932
    4. '       ' → logprob: -5.728247165679932
    5. '   ' → logprob: -6.478247165679932
    6. 'a' → logprob: -7.228247165679932
    7. ' ai' → logprob: -8.478246688842773
    8. ' if' → logprob: -8.478246688842773
    9. 's' → logprob: -8.728246688842773
    10. '           ' → logprob: -9.353246688842773

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889077812433243
    2. '=' → logprob: -2.578890800476074
    3. ',' → logprob: -14.203890800476074
    4. ' ' → logprob: -15.578890800476074
    5. ' ' → logprob: -16.453889846801758
    6. ')' → logprob: -17.078889846801758
    7. 's' → logprob: -18.703889846801758
    8. ':' → logprob: -18.703889846801758
    9. ' =
' → logprob: -18.828889846801758
    10. '＝' → logprob: -18.953889846801758

Token 430: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.003622285323217511
    2. ' compute' → logprob: -5.628622055053711
    3. 'V' → logprob: -11.128622055053711
    4. ' V' → logprob: -12.378622055053711
    5. '   ' → logprob: -13.378622055053711
    6. '
' → logprob: -14.378622055053711
    7. 'b' → logprob: -14.503622055053711
    8. 'v' → logprob: -15.878622055053711
    9. ' ' → logprob: -16.00362205505371
    10. 'calculate' → logprob: -16.12862205505371

Token 431: '_tmp' (ID: 35658)
  Prédit: '_tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -0.004082909319549799
    2. 'tmp' → logprob: -5.504082679748535
    3. '_temp' → logprob: -13.504082679748535
    4. 'Tmp' → logprob: -13.629082679748535
    5. '(tmp' → logprob: -14.254082679748535
    6. '_TMP' → logprob: -14.379082679748535
    7. '	tmp' → logprob: -15.504082679748535
    8. ' tmp' → logprob: -15.629082679748535
    9. '_' → logprob: -16.00408363342285
    10. '```' → logprob: -17.12908363342285

Token 432: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -13.375005722045898
    3. 'V' → logprob: -13.375005722045898
    4. '(v' → logprob: -13.500005722045898
    5. ' (' → logprob: -14.500005722045898
    6. '```' → logprob: -16.0000057220459
    7. '(
' → logprob: -16.5000057220459
    8. ')' → logprob: -16.7500057220459
    9. '(B' → logprob: -17.3750057220459
    10. '
' → logprob: -18.0000057220459

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005253921262919903
    2. ',i' → logprob: -7.62552547454834
    3. ' ,' → logprob: -10.25052547454834
    4. '(i' → logprob: -13.50052547454834
    5. ',v' → logprob: -15.25052547454834
    6. ',
' → logprob: -15.37552547454834
    7. ' i' → logprob: -17.000524520874023
    8. ')' → logprob: -17.000524520874023
    9. 'i' → logprob: -17.375524520874023
    10. ',n' → logprob: -17.500524520874023

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043102685594931245
    2. ' i' → logprob: -7.750431060791016
    3. ')' → logprob: -15.375431060791016
    4. ')i' → logprob: -16.500431060791016
    5. '
' → logprob: -17.500431060791016
    6. '   ' → logprob: -17.625431060791016
    7. '	i' → logprob: -18.125431060791016
    8. '(i' → logprob: -18.750431060791016
    9. ' ' → logprob: -19.000431060791016
    10. '       ' → logprob: -19.375431060791016

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026991849881596863
    2. ',n' → logprob: -8.250269889831543
    3. ' ,' → logprob: -11.750269889831543
    4. ',
' → logprob: -15.000269889831543
    5. ')' → logprob: -15.750269889831543
    6. 'n' → logprob: -15.875269889831543
    7. '),' → logprob: -17.12527084350586
    8. ',len' → logprob: -17.75027084350586
    9. '‌,' → logprob: -18.25027084350586
    10. '```' → logprob: -18.37527084350586

Token 436: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009122979827225208
    2. ' n' → logprob: -7.000912189483643
    3. '
' → logprob: -14.8759126663208
    4. '   ' → logprob: -15.1259126663208
    5. ')' → logprob: -16.500911712646484
    6. ')n' → logprob: -16.875911712646484
    7. '	n' → logprob: -17.750911712646484
    8. '       ' → logprob: -17.875911712646484
    9. '    ' → logprob: -19.125911712646484
    10. 'len' → logprob: -19.625911712646484

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02976958453655243
    2. ')
' → logprob: -3.5297696590423584
    3. '       ' → logprob: -11.529769897460938
    4. ')
' → logprob: -11.904769897460938
    5. ')

' → logprob: -13.279769897460938
    6. '   ' → logprob: -15.404769897460938
    7. ')#' → logprob: -16.404769897460938
    8. ' )' → logprob: -16.529769897460938
    9. '),' → logprob: -16.529769897460938
    10. ')\
' → logprob: -16.904769897460938

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013338351622223854
    2. '<|end|>' → logprob: -5.138338565826416
    3. 's' → logprob: -5.888338565826416
    4. ' if' → logprob: -6.138338565826416
    5. ' s' → logprob: -6.763338565826416
    6. 'if' → logprob: -7.513338565826416
    7. '
' → logprob: -8.263338088989258
    8. '        
' → logprob: -8.763338088989258
    9. ')' → logprob: -8.888338088989258
    10. ',' → logprob: -9.513338088989258

Token 439: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1447160542011261
    2. 's' → logprob: -2.1447160243988037
    3. 'ai' → logprob: -4.269716262817383
    4. ' if' → logprob: -6.394716262817383
    5. '       ' → logprob: -7.019716262817383
    6. '   ' → logprob: -7.144716262817383
    7. ' s' → logprob: -8.644716262817383
    8. '           ' → logprob: -10.644716262817383
    9. '
' → logprob: -11.019716262817383
    10. '```' → logprob: -11.644716262817383

Token 440: ' try' (ID: 2075)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.02362814173102379
    2. ' tmp' → logprob: -3.7736282348632812
    3. 'not' → logprob: -8.648628234863281
    4. ' not' → logprob: -9.398628234863281
    5. 'check' → logprob: -10.023628234863281
    6. 'v' → logprob: -10.148628234863281
    7. '(tmp' → logprob: -11.398628234863281
    8. '   ' → logprob: -12.398628234863281
    9. ' check' → logprob: -12.773628234863281
    10. '	tmp' → logprob: -12.898628234863281

Token 441: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.000614028365816921
    2. 'continue' → logprob: -7.750614166259766
    3. ' continue' → logprob: -9.000614166259766
    4. ' v' → logprob: -10.625614166259766
    5. '_cont' → logprob: -11.500614166259766
    6. '_' → logprob: -12.000614166259766
    7. ' ' → logprob: -12.500614166259766
    8. 'Continue' → logprob: -12.625614166259766
    9. '   ' → logprob: -12.625614166259766
    10. ' _' → logprob: -13.375614166259766

Token 442: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02441650815308094
    2. '(' → logprob: -3.774416446685791
    3. ' (' → logprob: -6.774416446685791
    4. '(V' → logprob: -11.27441692352295
    5. '(
' → logprob: -11.52441692352295
    6. ' ' → logprob: -13.27441692352295
    7. ')' → logprob: -13.89941692352295
    8. ',' → logprob: -14.39941692352295
    9. '((' → logprob: -15.14941692352295
    10. '(value' → logprob: -15.52441692352295

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017293256241828203
    2. ' ,' → logprob: -6.376729488372803
    3. ',
' → logprob: -11.501729011535645
    4. '==' → logprob: -11.751729011535645
    5. ',i' → logprob: -13.126729011535645
    6. ')' → logprob: -13.501729011535645
    7. ' ==' → logprob: -13.501729011535645
    8. ' ' → logprob: -14.126729011535645
    9. '   ' → logprob: -14.126729011535645
    10. ',v' → logprob: -14.126729011535645

Token 444: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00030829108436591923
    2. ' a' → logprob: -8.3753080368042
    3. 'b' → logprob: -9.6253080368042
    4. '0' → logprob: -12.3753080368042
    5. '   ' → logprob: -12.7503080368042
    6. 'ai' → logprob: -13.1253080368042
    7. ' ' → logprob: -14.7503080368042
    8. '	a' → logprob: -14.8753080368042
    9. '       ' → logprob: -15.0003080368042
    10. '
' → logprob: -15.2503080368042

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0100624169572257e-05
    2. '[' → logprob: -11.750020027160645
    3. 'i' → logprob: -12.000020027160645
    4. ')' → logprob: -12.250020027160645
    5. '):' → logprob: -15.500020027160645
    6. '
' → logprob: -15.875020027160645
    7. '[I' → logprob: -16.25002098083496
    8. '[j' → logprob: -16.50002098083496
    9. ' [' → logprob: -16.62502098083496
    10. '[
' → logprob: -16.62502098083496

Token 446: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05077433958649635
    2. '):
' → logprob: -3.175774335861206
    3. ']):' → logprob: -5.800774574279785
    4. ')' → logprob: -6.175774574279785
    5. ')):' → logprob: -6.550774574279785
    6. '[i' → logprob: -7.300774574279785
    7. ']):
' → logprob: -8.300774574279785
    8. ')):
' → logprob: -9.425774574279785
    9. '       ' → logprob: -10.050774574279785
    10. '>):' → logprob: -10.300774574279785

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005090137477964163
    2. ' continue' → logprob: -6.255090236663818
    3. 'continue' → logprob: -6.505090236663818
    4. '       ' → logprob: -7.005090236663818
    5. ':
' → logprob: -7.630090236663818
    6. '
' → logprob: -8.88008975982666
    7. ':' → logprob: -10.38008975982666
    8. ',' → logprob: -10.75508975982666
    9. '   ' → logprob: -10.88008975982666
    10. '```' → logprob: -11.00508975982666

Token 448: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7174261212348938
    2. '           ' → logprob: -0.8424261212348938
    3. '       ' → logprob: -2.842426061630249
    4. ' continue' → logprob: -3.842426061630249
    5. '               ' → logprob: -7.092426300048828
    6. '   ' → logprob: -7.467426300048828
    7. '	continue' → logprob: -9.467426300048828
    8. 'push' → logprob: -9.842426300048828
    9. '```' → logprob: -10.092426300048828
    10. '
' → logprob: -12.092426300048828

Token 449: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012750372290611267
    2. '
' → logprob: -4.637750148773193
    3. '        
' → logprob: -6.012750148773193
    4. 's' → logprob: -8.137750625610352
    5. ' s' → logprob: -9.887750625610352
    6. '<|end|>' → logprob: -10.137750625610352
    7. '  
' → logprob: -10.387750625610352
    8. '       
' → logprob: -10.762750625610352
    9. '   ' → logprob: -10.887750625610352
    10. '    
' → logprob: -11.262750625610352

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001490696449764073
    2. 's' → logprob: -7.126490592956543
    3. '        
' → logprob: -7.626490592956543
    4. '
' → logprob: -8.876490592956543
    5. '<|end|>' → logprob: -11.126490592956543
    6. ' s' → logprob: -11.251490592956543
    7. ')' → logprob: -12.251490592956543
    8. '       
' → logprob: -12.626490592956543
    9. '   ' → logprob: -12.626490592956543
    10. ',' → logprob: -12.751490592956543

Token 451: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.1396520584821701
    2. '       ' → logprob: -2.5146520137786865
    3. '   ' → logprob: -3.6396520137786865
    4. ' s' → logprob: -4.264652252197266
    5. 'if' → logprob: -5.389652252197266
    6. '
' → logprob: -5.639652252197266
    7. '        
' → logprob: -8.264652252197266
    8. ' if' → logprob: -8.514652252197266
    9. '           ' → logprob: -8.889652252197266
    10. '    
' → logprob: -9.389652252197266

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300205409526825
    2. '=' → logprob: -3.168002128601074
    3. ',' → logprob: -13.168002128601074
    4. 's' → logprob: -15.168002128601074
    5. ' s' → logprob: -15.918002128601074
    6. ' ' → logprob: -16.043001174926758
    7. '_' → logprob: -16.043001174926758
    8. ' ' → logprob: -16.293001174926758
    9. ')' → logprob: -16.418001174926758
    10. ' =
' → logprob: -16.918001174926758

Token 453: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.38691946864128113
    2. 'compute' → logprob: -1.1369194984436035
    3. ' (' → logprob: -10.511919021606445
    4. ' max' → logprob: -12.011919021606445
    5. ' ' → logprob: -12.761919021606445
    6. ' s' → logprob: -12.886919021606445
    7. '(s' → logprob: -12.886919021606445
    8. '   ' → logprob: -13.511919021606445
    9. 's' → logprob: -13.761919021606445
    10. ' v' → logprob: -14.011919021606445

Token 454: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0022324516903609037
    2. '_tmp' → logprob: -6.502232551574707
    3. 's' → logprob: -7.377232551574707
    4. 'tmp' → logprob: -9.627232551574707
    5. '(tmp' → logprob: -11.002232551574707
    6. '(s' → logprob: -11.127232551574707
    7. '(v' → logprob: -12.752232551574707
    8. '_' → logprob: -13.127232551574707
    9. ' s' → logprob: -14.502232551574707
    10. '(' → logprob: -15.127232551574707

Token 455: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.897412822581828e-05
    2. 'v' → logprob: -9.625068664550781
    3. '(' → logprob: -12.875068664550781
    4. '(
' → logprob: -15.500068664550781
    5. '(V' → logprob: -17.12506866455078
    6. '```' → logprob: -17.50006866455078
    7. '(s' → logprob: -17.62506866455078
    8. '	v' → logprob: -18.12506866455078
    9. 's' → logprob: -18.37506866455078
    10. '[v' → logprob: -18.50006866455078

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011534360237419605
    2. ',a' → logprob: -6.876153469085693
    3. ' ,' → logprob: -9.376152992248535
    4. 'a' → logprob: -11.251152992248535
    5. ',s' → logprob: -11.626152992248535
    6. ',
' → logprob: -11.751152992248535
    7. '=' → logprob: -13.501152992248535
    8. 's' → logprob: -13.501152992248535
    9. ',i' → logprob: -14.001152992248535
    10. '   ' → logprob: -14.626152992248535

Token 457: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00015872348740231246
    2. ' a' → logprob: -8.750158309936523
    3. 'ai' → logprob: -16.000158309936523
    4. '	a' → logprob: -16.500158309936523
    5. '#a' → logprob: -18.500158309936523
    6. '
' → logprob: -18.750158309936523
    7. '   ' → logprob: -19.500158309936523
    8. ',a' → logprob: -19.625158309936523
    9. '_a' → logprob: -19.750158309936523
    10. ')a' → logprob: -19.750158309936523

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. 'i' → logprob: -13.375001907348633
    3. '[' → logprob: -14.375001907348633
    4. ',i' → logprob: -16.875001907348633
    5. '_i' → logprob: -17.375001907348633
    6. '[
' → logprob: -17.500001907348633
    7. '(i' → logprob: -17.750001907348633
    8. ' [' → logprob: -18.125001907348633
    9. ',' → logprob: -18.500001907348633
    10. '
' → logprob: -18.750001907348633

Token 459: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8908587662735954e-05
    2. ' ,' → logprob: -11.250019073486328
    3. ',
' → logprob: -12.750019073486328
    4. ',tmp' → logprob: -13.000019073486328
    5. ',

' → logprob: -14.750019073486328
    6. ')' → logprob: -16.125019073486328
    7. '),' → logprob: -17.500019073486328
    8. ',t' → logprob: -18.250019073486328
    9. 'tmp' → logprob: -18.250019073486328
    10. '‌,' → logprob: -18.500019073486328

Token 460: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0019293478690087795
    2. ' tmp' → logprob: -6.25192928314209
    3. '(tmp' → logprob: -15.62692928314209
    4. '/tmp' → logprob: -16.126930236816406
    5. '           ' → logprob: -16.376930236816406
    6. '	tmp' → logprob: -16.501930236816406
    7. '[tmp' → logprob: -16.876930236816406
    8. '       ' → logprob: -17.001930236816406
    9. '
' → logprob: -17.126930236816406
    10. 'temp' → logprob: -17.251930236816406

Token 461: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164921827614307
    2. ')
' → logprob: -4.264164924621582
    3. ')

' → logprob: -13.889164924621582
    4. ')
' → logprob: -14.889164924621582
    5. '),' → logprob: -16.889163970947266
    6. ')`' → logprob: -17.139163970947266
    7. ')#' → logprob: -17.264163970947266
    8. ' )' → logprob: -17.764163970947266
    9. ')n' → logprob: -17.764163970947266
    10. ')\
' → logprob: -18.014163970947266

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08955613523721695
    2. '<|end|>' → logprob: -2.5895562171936035
    3. '
' → logprob: -4.5895562171936035
    4. ' if' → logprob: -8.464555740356445
    5. '<|end|>' → logprob: -9.589555740356445
    6. ')' → logprob: -10.589555740356445
    7. 'if' → logprob: -10.589555740356445
    8. '        
' → logprob: -10.839555740356445
    9. ',' → logprob: -10.839555740356445
    10. '   ' → logprob: -11.089555740356445

Token 463: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.709047257900238
    2. 'if' (adapté à ' if') → logprob: -0.959047257900238
    3. '       ' → logprob: -2.084047317504883
    4. '
' → logprob: -8.709047317504883
    5. '   ' → logprob: -11.334047317504883
    6. '	if' → logprob: -11.709047317504883
    7. ' ' → logprob: -12.209047317504883
    8. ',' → logprob: -12.959047317504883
    9. '```' → logprob: -13.459047317504883
    10. 'If' → logprob: -13.834047317504883

Token 464: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4741162061691284
    2. 'not' → logprob: -0.9741162061691284
    3. 's' → logprob: -10.974116325378418
    4. ' s' → logprob: -11.724116325378418
    5. 'check' → logprob: -11.724116325378418
    6. ' check' → logprob: -13.099116325378418
    7. '   ' → logprob: -13.224116325378418
    8. '(not' → logprob: -13.974116325378418
    9. '       ' → logprob: -15.099116325378418
    10. '	not' → logprob: -15.474116325378418

Token 465: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.313268780708313
    2. ' check' → logprob: -1.313268780708313
    3. '(check' → logprob: -11.938268661499023
    4. ' ' → logprob: -15.188268661499023
    5. '	check' → logprob: -16.438268661499023
    6. '_check' → logprob: -17.438268661499023
    7. ' (' → logprob: -17.438268661499023
    8. ' ' → logprob: -17.563268661499023
    9. ' s' → logprob: -18.313268661499023
    10. '   ' → logprob: -18.313268661499023

Token 466: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -3.333223139634356e-05
    2. 'valid' → logprob: -10.375033378601074
    3. '(s' → logprob: -13.375033378601074
    4. 'Valid' → logprob: -15.125033378601074
    5. 's' → logprob: -15.375033378601074
    6. '
' → logprob: -17.875032424926758
    7. ' valid' → logprob: -18.125032424926758
    8. '(valid' → logprob: -18.125032424926758
    9. '```' → logprob: -18.875032424926758
    10. '_invalid' → logprob: -18.875032424926758

Token 467: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -13.750001907348633
    4. '(
' → logprob: -18.000001907348633
    5. 's' → logprob: -20.125001907348633
    6. '```' → logprob: -20.750001907348633
    7. '
' → logprob: -21.250001907348633
    8. ')' → logprob: -21.500001907348633
    9. '\(' → logprob: -22.625001907348633
    10. '((' → logprob: -22.625001907348633

Token 468: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062034573405981064
    2. '):
' → logprob: -2.8120346069335938
    3. ':' → logprob: -9.937034606933594
    4. ')' → logprob: -11.312034606933594
    5. '):
' → logprob: -12.812034606933594
    6. ':
' → logprob: -13.437034606933594
    7. '):

' → logprob: -13.812034606933594
    8. '   ' → logprob: -14.687034606933594
    9. '       ' → logprob: -15.312034606933594
    10. ' ):' → logprob: -15.562034606933594

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037079326808452606
    2. 'handle' → logprob: -3.662079334259033
    3. ' handle' → logprob: -5.662079334259033
    4. ':
' → logprob: -5.912079334259033
    5. '(handle' → logprob: -6.537079334259033
    6. '
' → logprob: -6.662079334259033
    7. '):
' → logprob: -7.287079334259033
    8. '():
' → logprob: -8.037078857421875
    9. '.handle' → logprob: -8.537078857421875
    10. ',' → logprob: -8.537078857421875

Token 470: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' (adapté à ' handle') → logprob: -0.06975045800209045
    2. ' handle' → logprob: -2.8197505474090576
    3. '           ' → logprob: -4.9447503089904785
    4. '	handle' → logprob: -7.5697503089904785
    5. '   ' → logprob: -10.569750785827637
    6. '
' → logprob: -10.569750785827637
    7. '       ' → logprob: -10.944750785827637
    8. '.handle' → logprob: -10.944750785827637
    9. '(handle' → logprob: -11.319750785827637
    10. '               ' → logprob: -12.194750785827637

Token 471: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -3.292907877039397e-06
    2. 'invalid' → logprob: -12.75000286102295
    3. '_valid' → logprob: -16.125003814697266
    4. '```' → logprob: -16.500003814697266
    5. '_INVALID' → logprob: -16.625003814697266
    6. '_Invalid' → logprob: -17.625003814697266
    7. 'Invalid' → logprob: -17.875003814697266
    8. '
' → logprob: -18.500003814697266
    9. '_inv' → logprob: -18.500003814697266
    10. '_' → logprob: -18.875003814697266

Token 472: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02975245751440525
    2. '()
' → logprob: -3.529752492904663
    3. '()

' → logprob: -13.654752731323242
    4. '()
' → logprob: -14.779752731323242
    5. '()`' → logprob: -15.154752731323242
    6. '()\' → logprob: -16.779752731323242
    7. '()"' → logprob: -17.404752731323242
    8. '();' → logprob: -18.154752731323242
    9. ' ()' → logprob: -18.279752731323242
    10. '())' → logprob: -18.404752731323242

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005256764590740204
    2. '
' → logprob: -5.755256652832031
    3. '<|end|>' → logprob: -6.505256652832031
    4. '        
' → logprob: -8.505256652832031
    5. ')' → logprob: -8.755256652832031
    6. '   ' → logprob: -10.130256652832031
    7. 'v' → logprob: -10.380256652832031
    8. 's' → logprob: -10.380256652832031
    9. ' s' → logprob: -10.630256652832031
    10. '  
' → logprob: -11.880256652832031

Token 474: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4769151210784912
    2. '       ' → logprob: -1.8519151210784912
    3. ' v' → logprob: -1.8519151210784912
    4. 'ans' (adapté à ' ans') → logprob: -3.101915121078491
    5. ' ans' → logprob: -4.10191535949707
    6. ' s' → logprob: -6.72691535949707
    7. 's' → logprob: -6.72691535949707
    8. 'V' → logprob: -7.22691535949707
    9. ' V' → logprob: -7.97691535949707
    10. '   ' → logprob: -8.47691535949707

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03327448293566704
    2. '=' → logprob: -3.5332744121551514
    3. ' +=' → logprob: -5.6582746505737305
    4. '+=' → logprob: -10.53327465057373
    5. ' ' → logprob: -12.90827465057373
    6. '+' → logprob: -16.533273696899414
    7. ',' → logprob: -16.533273696899414
    8. '  ' → logprob: -16.908273696899414
    9. ' |=' → logprob: -17.533273696899414
    10. ' *=' → logprob: -17.783273696899414

Token 476: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11231016367673874
    2. ' ans' → logprob: -2.7373101711273193
    3. 'add' → logprob: -3.2373101711273193
    4. 'ans' → logprob: -6.11230993270874
    5. '(ans' → logprob: -13.237310409545898
    6. '	ans' → logprob: -14.362310409545898
    7. ' ' → logprob: -14.862310409545898
    8. '	add' → logprob: -15.237310409545898
    9. ' ad' → logprob: -15.612310409545898
    10. '_add' → logprob: -16.2373104095459

Token 477: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.810037742368877e-05
    2. '_ans' → logprob: -10.250038146972656
    3. '(ans' → logprob: -13.125038146972656
    4. '_' → logprob: -15.750038146972656
    5. '_an' → logprob: -16.375038146972656
    6. 'to' → logprob: -16.500038146972656
    7. '```' → logprob: -16.750038146972656
    8. 'ans' → logprob: -16.750038146972656
    9. '(_' → logprob: -17.000038146972656
    10. ' _' → logprob: -17.250038146972656

Token 478: '_ans' (ID: 146254)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.176947600673884e-05
    2. ' ans' → logprob: -10.750021934509277
    3. '(ans' → logprob: -16.12502098083496
    4. '	ans' → logprob: -16.62502098083496
    5. '_ans' → logprob: -16.62502098083496
    6. '
' → logprob: -18.12502098083496
    7. 's' → logprob: -19.75002098083496
    8. 'a' → logprob: -20.25002098083496
    9. 'answer' → logprob: -20.50002098083496
    10. ' ' → logprob: -21.00002098083496

Token 479: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.935296834039036e-06
    2. 'ans' → logprob: -12.75000286102295
    3. '(answer' → logprob: -18.500003814697266
    4. ' (' → logprob: -19.375003814697266
    5. ' ans' → logprob: -19.500003814697266
    6. '	ans' → logprob: -19.500003814697266
    7. '(an' → logprob: -19.750003814697266
    8. '(' → logprob: -20.125003814697266
    9. '(
' → logprob: -21.625003814697266
    10. '```' → logprob: -21.750003814697266

Token 480: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.25344741344451904
    2. ',' → logprob: -1.503447413444519
    3. 'ans' → logprob: -6.753447532653809
    4. '(s' → logprob: -8.253447532653809
    5. ' ans' → logprob: -10.503447532653809
    6. ')' → logprob: -11.003447532653809
    7. '(' → logprob: -11.378447532653809
    8. 's' → logprob: -11.378447532653809
    9. '),' → logprob: -11.628447532653809
    10. ',
' → logprob: -12.628447532653809

Token 481: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02324547804892063
    2. ' s' → logprob: -3.7732455730438232
    3. '	s' → logprob: -18.148244857788086
    4. '```' → logprob: -19.023244857788086
    5. '(s' → logprob: -19.273244857788086
    6. '   ' → logprob: -19.273244857788086
    7. '<|end|>' → logprob: -19.523244857788086
    8. ' ' → logprob: -19.648244857788086
    9. '
' → logprob: -19.648244857788086
    10. ')' → logprob: -19.648244857788086

Token 482: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48447778820991516
    2. '
' → logprob: -1.4844777584075928
    3. ')' → logprob: -2.2344777584075928
    4. ')
' → logprob: -3.7344777584075928
    5. '<|end|>' → logprob: -3.7344777584075928
    6. '        
' → logprob: -6.734477996826172
    7. '<|end|>' → logprob: -7.734477996826172
    8. '   ' → logprob: -8.359477996826172
    9. '
' → logprob: -8.984477996826172
    10. '           ' → logprob: -9.734477996826172

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0496102012693882
    2. 'v' → logprob: -3.049610137939453
    3. ' v' → logprob: -6.924610137939453
    4. '```' → logprob: -11.049610137939453
    5. '   ' → logprob: -11.924610137939453
    6. 'V' → logprob: -11.924610137939453
    7. '
' → logprob: -12.924610137939453
    8. ',' → logprob: -13.424610137939453
    9. '        
' → logprob: -13.674610137939453
    10. ',v' → logprob: -13.924610137939453

Token 484: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.1817711591720581
    2. 'V' → logprob: -1.806771159172058
    3. 'new' → logprob: -7.181771278381348
    4. 'update' → logprob: -7.431771278381348
    5. ' v' → logprob: -8.306771278381348
    6. ' V' → logprob: -8.431771278381348
    7. '       ' → logprob: -9.306771278381348
    8. 'updated' → logprob: -10.056771278381348
    9. 'nv' → logprob: -10.931771278381348
    10. 'vv' → logprob: -11.556771278381348

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016042815521359444
    2. ' =' → logprob: -4.141042709350586
    3. ',' → logprob: -11.766042709350586
    4. '-=' → logprob: -14.641042709350586
    5. ' -=' → logprob: -16.641042709350586
    6. '-' → logprob: -16.641042709350586
    7. ')' → logprob: -17.266042709350586
    8. 'updated' → logprob: -17.266042709350586
    9. '=
' → logprob: -17.891042709350586
    10. '```' → logprob: -18.016042709350586

Token 486: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0007100477814674377
    2. ' update' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.750709533691406
    4. '	update' → logprob: -19.000709533691406
    5. '       ' → logprob: -19.875709533691406
    6. '           ' → logprob: -20.000709533691406
    7. 'v' → logprob: -20.375709533691406
    8. '.update' → logprob: -20.500709533691406
    9. '(update' → logprob: -20.500709533691406
    10. 'updated' → logprob: -21.000709533691406

Token 487: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.00033593899570405483
    2. 'v' → logprob: -8.000335693359375
    3. '_V' → logprob: -15.000335693359375
    4. '_' → logprob: -16.875335693359375
    5. 'V' → logprob: -18.000335693359375
    6. '	v' → logprob: -18.375335693359375
    7. ' v' → logprob: -19.875335693359375
    8. '```' → logprob: -20.000335693359375
    9. '\' → logprob: -20.250335693359375
    10. 's' → logprob: -21.125335693359375

Token 488: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00038825106457807124
    2. '(' → logprob: -7.875388145446777
    3. 'v' → logprob: -11.750388145446777
    4. ' (' → logprob: -16.750389099121094
    5. '(
' → logprob: -16.750389099121094
    6. '```' → logprob: -17.375389099121094
    7. '\(' → logprob: -18.375389099121094
    8. '	v' → logprob: -18.375389099121094
    9. '​' → logprob: -18.625389099121094
    10. '(V' → logprob: -18.875389099121094

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010100651998072863
    2. ',s' → logprob: -7.001009941101074
    3. 's' → logprob: -9.626009941101074
    4. ' ,' → logprob: -10.376009941101074
    5. ',
' → logprob: -13.876009941101074
    6. ' s' → logprob: -15.001009941101074
    7. ')' → logprob: -16.50101089477539
    8. '```' → logprob: -17.37601089477539
    9. '
' → logprob: -17.87601089477539
    10. ',v' → logprob: -18.00101089477539

Token 490: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.493430894101039e-05
    2. ' s' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -19.87507438659668
    4. ')' → logprob: -20.25007438659668
    5. '
' → logprob: -20.62507438659668
    6. '   ' → logprob: -21.00007438659668
    7. '	s' → logprob: -21.37507438659668
    8. '(s' → logprob: -21.50007438659668
    9. '```' → logprob: -21.50007438659668
    10. '_s' → logprob: -21.50007438659668

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',tmp' → logprob: -13.25001335144043
    4. ',
' → logprob: -18.50001335144043
    5. ')' → logprob: -18.62501335144043
    6. '[tmp' → logprob: -19.50001335144043
    7. 'tmp' → logprob: -19.75001335144043
    8. '，' → logprob: -20.12501335144043
    9. '(tmp' → logprob: -20.37501335144043
    10. '`,' → logprob: -20.37501335144043

Token 492: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0007102862582542002
    2. ' tmp' → logprob: -7.250710487365723
    3. '(tmp' → logprob: -15.500710487365723
    4. '/tmp' → logprob: -16.125709533691406
    5. '	tmp' → logprob: -17.250709533691406
    6. '[tmp' → logprob: -18.125709533691406
    7. '$tmp' → logprob: -18.250709533691406
    8. '_tmp' → logprob: -18.500709533691406
    9. ',tmp' → logprob: -18.875709533691406
    10. '
' → logprob: -19.250709533691406

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002294272184372
    2. ')
' → logprob: -2.350229501724243
    3. '<|end|>' → logprob: -12.225229263305664
    4. ')

' → logprob: -12.350229263305664
    5. ')
' → logprob: -12.475229263305664
    6. '   ' → logprob: -12.475229263305664
    7. ')V' → logprob: -13.350229263305664
    8. '       ' → logprob: -13.850229263305664
    9. ')v' → logprob: -14.475229263305664
    10. ',' → logprob: -14.850229263305664

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03137647360563278
    2. ' update' → logprob: -3.906376361846924
    3. 'update' → logprob: -4.656376361846924
    4. '   ' → logprob: -7.406376361846924
    5. '```' → logprob: -7.781376361846924
    6. '	update' → logprob: -9.781376838684082
    7. '_update' → logprob: -9.906376838684082
    8. '.update' → logprob: -10.156376838684082
    9. '<|end|>' → logprob: -10.281376838684082
    10. '(update' → logprob: -10.906376838684082

Token 495: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.014227558858692646
    2. ' update' → logprob: -4.264227390289307
    3. 'V' → logprob: -10.014227867126465
    4. '       ' → logprob: -11.014227867126465
    5. '   ' → logprob: -13.389227867126465
    6. ' V' → logprob: -14.139227867126465
    7. '.update' → logprob: -15.514227867126465
    8. 'v' → logprob: -15.764227867126465
    9. '	update' → logprob: -16.76422691345215
    10. '```' → logprob: -17.01422691345215

Token 496: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -2.935296834039036e-06
    2. 'V' → logprob: -12.87500286102295
    3. '(V' → logprob: -15.37500286102295
    4. '```' → logprob: -15.87500286102295
    5. '_v' → logprob: -17.875003814697266
    6. '	V' → logprob: -18.500003814697266
    7. '_' → logprob: -19.375003814697266
    8. ' V' → logprob: -19.875003814697266
    9. '`' → logprob: -20.000003814697266
    10. '\' → logprob: -20.000003814697266

Token 497: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. 'V' → logprob: -15.875001907348633
    4. '```' → logprob: -15.875001907348633
    5. ')' → logprob: -18.125001907348633
    6. '
' → logprob: -18.125001907348633
    7. '(v' → logprob: -18.625001907348633
    8. '\(' → logprob: -19.000001907348633
    9. ' (' → logprob: -19.125001907348633
    10. '(
' → logprob: -19.250001907348633

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033951509976759553
    2. ',i' → logprob: -8.37533950805664
    3. '(i' → logprob: -9.50033950805664
    4. ',V' → logprob: -11.00033950805664
    5. ' ,' → logprob: -11.75033950805664
    6. '(' → logprob: -12.37533950805664
    7. ',v' → logprob: -12.62533950805664
    8. ')' → logprob: -14.12533950805664
    9. '(V' → logprob: -15.00033950805664
    10. '(v' → logprob: -15.25033950805664

Token 499: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. ')' → logprob: -17.375158309936523
    4. ')i' → logprob: -17.375158309936523
    5. '[i' → logprob: -18.500158309936523
    6. '	i' → logprob: -19.000158309936523
    7. '   ' → logprob: -19.500158309936523
    8. '```' → logprob: -19.750158309936523
    9. 'I' → logprob: -19.875158309936523
    10. '(i' → logprob: -20.250158309936523

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ',i' → logprob: -12.250012397766113
    3. 'i' → logprob: -12.500012397766113
    4. ' ,' → logprob: -13.125012397766113
    5. ',v' → logprob: -13.875012397766113
    6. '(i' → logprob: -15.250012397766113
    7. 'v' → logprob: -15.750012397766113
    8. '```' → logprob: -15.875012397766113
    9. ')' → logprob: -16.500011444091797
    10. 's' → logprob: -17.500011444091797

Token 501: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.000001907348633
    3. ')v' → logprob: -18.250001907348633
    4. '	v' → logprob: -19.375001907348633
    5. ')' → logprob: -20.250001907348633
    6. '(v' → logprob: -20.250001907348633
    7. '```' → logprob: -21.750001907348633
    8. '_v' → logprob: -22.000001907348633
    9. '$v' → logprob: -22.000001907348633
    10. '   ' → logprob: -22.750001907348633

Token 502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07009682059288025
    2. ')
' → logprob: -2.695096731185913
    3. '       ' → logprob: -9.195096969604492
    4. '<|end|>' → logprob: -10.070096969604492
    5. '   ' → logprob: -11.820096969604492
    6. ')
' → logprob: -12.945096969604492
    7. ')

' → logprob: -13.070096969604492
    8. ' )' → logprob: -13.945096969604492
    9. ',' → logprob: -14.320096969604492
    10. '),' → logprob: -14.695096969604492

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004878873471170664
    2. 'push' → logprob: -5.379878997802734
    3. '   ' → logprob: -8.879878997802734
    4. ' push' → logprob: -10.129878997802734
    5. '```' → logprob: -10.379878997802734
    6. '<|end|>' → logprob: -11.379878997802734
    7. '	push' → logprob: -11.504878997802734
    8. '        
' → logprob: -11.879878997802734
    9. 'for' → logprob: -12.129878997802734
    10. '           ' → logprob: -12.629878997802734

Token 504: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' (adapté à ' push') → logprob: -0.3086053729057312
    2. 'for' → logprob: -1.433605432510376
    3. 'prev' → logprob: -4.308605194091797
    4. 'if' → logprob: -5.183605194091797
    5. '       ' → logprob: -5.558605194091797
    6. 'left' → logprob: -6.433605194091797
    7. 'tmp' → logprob: -7.058605194091797
    8. '   ' → logprob: -7.683605194091797
    9. '#' → logprob: -8.058605194091797
    10. 'next' → logprob: -8.433605194091797

Token 505: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.3876171410083771
    2. '_heap' → logprob: -1.1376171112060547
    3. 'if' → logprob: -7.262617111206055
    4. 'heap' → logprob: -10.887617111206055
    5. '```' → logprob: -11.387617111206055
    6. 'If' → logprob: -11.762617111206055
    7. 'Heap' → logprob: -13.137617111206055
    8. ' if' → logprob: -14.512617111206055
    9. '(heap' → logprob: -14.512617111206055
    10. '_he' → logprob: -14.512617111206055

Token 506: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.00317783304490149
    2. 'needed' → logprob: -5.753177642822266
    3. 'Needed' → logprob: -16.253177642822266
    4. '```' → logprob: -16.878177642822266
    5. ' needed' → logprob: -17.628177642822266
    6. '_required' → logprob: -17.753177642822266
    7. '_used' → logprob: -18.003177642822266
    8. '_need' → logprob: -18.003177642822266
    9. 'need' → logprob: -18.753177642822266
    10. 'if' → logprob: -19.003177642822266

Token 507: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -14.625001907348633
    4. '```' → logprob: -18.625001907348633
    5. 'h' → logprob: -19.875001907348633
    6. '(
' → logprob: -20.250001907348633
    7. '(ht' → logprob: -21.875001907348633
    8. '<h' → logprob: -21.875001907348633
    9. ',h' → logprob: -22.000001907348633
    10. ',' → logprob: -22.125001907348633

Token 508: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.085517113911919e-05
    2. ',' → logprob: -10.37505054473877
    3. '(' → logprob: -11.50005054473877
    4. ',h' → logprob: -12.25005054473877
    5. ')' → logprob: -12.62505054473877
    6. ' (' → logprob: -14.00005054473877
    7. 'h' → logprob: -15.37505054473877
    8. '),' → logprob: -16.500051498413086
    9. '```' → logprob: -17.000051498413086
    10. ' h' → logprob: -17.000051498413086

Token 509: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00018006093159783632
    2. ' v' → logprob: -8.7501802444458
    3. 'V' → logprob: -10.7501802444458
    4. '	v' → logprob: -16.000179290771484
    5. ' V' → logprob: -17.375179290771484
    6. ')v' → logprob: -18.125179290771484
    7. '_v' → logprob: -18.375179290771484
    8. '   ' → logprob: -18.625179290771484
    9. '```' → logprob: -19.250179290771484
    10. '(v' → logprob: -19.500179290771484

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001846293918788433
    2. ',i' → logprob: -6.3768463134765625
    3. ' ,' → logprob: -8.876846313476562
    4. '[i' → logprob: -13.001846313476562
    5. 'i' → logprob: -14.251846313476562
    6. ' i' → logprob: -14.501846313476562
    7. '(i' → logprob: -15.126846313476562
    8. ')' → logprob: -15.251846313476562
    9. ',
' → logprob: -15.751846313476562
    10. ',v' → logprob: -16.501846313476562

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005530327325686812
    2. ' i' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.250553131103516
    4. ' ' → logprob: -18.375553131103516
    5. '	i' → logprob: -18.875553131103516
    6. '<|end|>' → logprob: -20.000553131103516
    7. '```' → logprob: -20.250553131103516
    8. '  ' → logprob: -20.625553131103516
    9. ')' → logprob: -20.875553131103516
    10. '_i' → logprob: -21.000553131103516

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009572625160217285
    2. ',a' → logprob: -4.759572505950928
    3. 'a' → logprob: -7.009572505950928
    4. ' ,' → logprob: -10.259572982788086
    5. ' a' → logprob: -11.384572982788086
    6. ',i' → logprob: -12.884572982788086
    7. '   ' → logprob: -12.884572982788086
    8. '```' → logprob: -13.384572982788086
    9. 'ai' → logprob: -14.634572982788086
    10. ',
' → logprob: -14.759572982788086

Token 513: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.024604277219623e-05
    2. ' a' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. 'ai' → logprob: -17.75004005432129
    5. '	a' → logprob: -17.87504005432129
    6. '_a' → logprob: -19.75004005432129
    7. '#a' → logprob: -20.12504005432129
    8. ' ' → logprob: -20.37504005432129
    9. ')a' → logprob: -20.75004005432129
    10. '    ' → logprob: -21.12504005432129

Token 514: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.375
    3. 'a' → logprob: -17.625
    4. '[' → logprob: -18.0
    5. ')' → logprob: -19.125
    6. '(i' → logprob: -19.5
    7. '[
' → logprob: -20.125
    8. '[a' → logprob: -20.375
    9. '```' → logprob: -20.75
    10. '<|end|>' → logprob: -21.0

Token 515: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.872261317563243e-05
    2. ')
' → logprob: -10.125059127807617
    3. '[i' → logprob: -11.000059127807617
    4. ')

' → logprob: -14.000059127807617
    5. ' )' → logprob: -14.625059127807617
    6. '[' → logprob: -16.125059127807617
    7. '))' → logprob: -16.250059127807617
    8. ')`' → logprob: -16.250059127807617
    9. ')i' → logprob: -16.500059127807617
    10. '   ' → logprob: -16.500059127807617

Token 516: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.319184273481369
    2. '<|end|>' → logprob: -1.6941843032836914
    3. 'main' → logprob: -2.9441843032836914
    4. '
' → logprob: -3.8191843032836914
    5. '```' → logprob: -5.194184303283691
    6. '   ' → logprob: -5.569184303283691
    7. 'print' → logprob: -5.944184303283691
    8. 'for' → logprob: -7.069184303283691
    9. ' if' → logprob: -7.569184303283691
    10. 'while' → logprob: -7.819184303283691

Token 517: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12719538807868958
    2. 'print' (adapté à ' print') → logprob: -2.127195358276367
    3. '```' → logprob: -9.002195358276367
    4. ' print' → logprob: -9.377195358276367
    5. 'if' → logprob: -10.252195358276367
    6. '	print' → logprob: -11.377195358276367
    7. '<|end|>' → logprob: -12.002195358276367
    8. '    
' → logprob: -13.502195358276367
    9. '``' → logprob: -13.752195358276367
    10. '
' → logprob: -14.002195358276367

Token 518: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00010390079842181876
    2. '(' → logprob: -9.250103950500488
    3. 'ans' → logprob: -12.250103950500488
    4. '(answer' → logprob: -13.500103950500488
    5. ' (' → logprob: -13.750103950500488
    6. '(abs' → logprob: -16.125102996826172
    7. '(int' → logprob: -16.500102996826172
    8. '	ans' → logprob: -16.500102996826172
    9. '(
' → logprob: -17.125102996826172
    10. '('' → logprob: -17.250102996826172

Token 519: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.250001907348633
    4. '())' → logprob: -15.000001907348633
    5. '()' → logprob: -16.500001907348633
    6. ')`' → logprob: -16.875001907348633
    7. '')' → logprob: -17.500001907348633
    8. '`)' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. '))' → logprob: -18.125001907348633

Token 520: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011181510984897614
    2. 'main' → logprob: -4.511181354522705
    3. '
' → logprob: -9.886181831359863
    4. '(main' → logprob: -10.386181831359863
    5. '```' → logprob: -10.886181831359863
    6. '<|end|>' → logprob: -11.261181831359863
    7. ' if' → logprob: -11.386181831359863
    8. '\n' → logprob: -13.136181831359863
    9. '  
' → logprob: -13.636181831359863
    10. ' main' → logprob: -13.636181831359863

Token 521: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01632760651409626
    2. '__' → logprob: -4.141327381134033
    3. '_name' → logprob: -8.891327857971191
    4. ' ' → logprob: -9.266327857971191
    5. '_' → logprob: -10.141327857971191
    6. 'name' → logprob: -11.391327857971191
    7. ' ' → logprob: -12.641327857971191
    8. '___' → logprob: -12.891327857971191
    9. ' _' → logprob: -13.516327857971191
    10. ' ' → logprob: -13.641327857971191

Token 522: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31820395588874817
    2. ' __' → logprob: -1.3182039260864258
    3. ' ==' → logprob: -5.943203926086426
    4. '<|end|>' → logprob: -7.318203926086426
    5. '_' → logprob: -7.568203926086426
    6. '_main' → logprob: -8.193203926086426
    7. '_name' → logprob: -8.693203926086426
    8. '.__' → logprob: -9.318203926086426
    9. ' main' → logprob: -9.568203926086426
    10. '```' → logprob: -9.818203926086426

Token 523: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5570885807392187e-05
    2. '==' → logprob: -11.375015258789062
    3. '__.__' → logprob: -12.875015258789062
    4. ' ==' → logprob: -13.750015258789062
    5. '__
' → logprob: -16.000015258789062
    6. ' __' → logprob: -16.625015258789062
    7. '____' → logprob: -16.625015258789062
    8. '__.' → logprob: -17.625015258789062
    9. '__":
' → logprob: -17.750015258789062
    10. '_' → logprob: -17.750015258789062

Token 524: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16703088581562042
    2. ' ==' → logprob: -2.1670308113098145
    3. '==' → logprob: -3.2920308113098145
    4. '=="' → logprob: -6.2920308113098145
    5. '=='' → logprob: -8.667031288146973
    6. '_' → logprob: -9.667031288146973
    7. '==
' → logprob: -11.417031288146973
    8. '=' → logprob: -12.042031288146973
    9. '___' → logprob: -12.042031288146973
    10. '.__' → logprob: -12.292031288146973

Token 525: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47408154606819153
    2. ''' → logprob: -0.9740815162658691
    3. '__' → logprob: -12.724081993103027
    4. ' "__' → logprob: -14.099081993103027
    5. ''"' → logprob: -14.849081993103027
    6. ' '__' → logprob: -15.724081993103027
    7. '"'' → logprob: -16.22408103942871
    8. '"name' → logprob: -17.34908103942871
    9. ''name' → logprob: -17.34908103942871
    10. '   ' → logprob: -17.47408103942871

Token 526: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.039609041064977646
    2. '__' → logprob: -3.414608955383301
    3. ''' → logprob: -5.664608955383301
    4. '"' → logprob: -6.039608955383301
    5. 'name' → logprob: -9.6646089553833
    6. '_main' → logprob: -11.0396089553833
    7. ' main' → logprob: -12.6646089553833
    8. '__
' → logprob: -13.2896089553833
    9. '___' → logprob: -13.6646089553833
    10. 'built' → logprob: -13.6646089553833

Token 527: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7004043459892273
    2. '__":
' → logprob: -0.7004043459892273
    3. '__':
' → logprob: -4.950404167175293
    4. '__.' → logprob: -10.075404167175293
    5. '__:' → logprob: -10.075404167175293
    6. '__["' → logprob: -11.075404167175293
    7. '__.__' → logprob: -11.200404167175293
    8. '__
' → logprob: -11.325404167175293
    9. '==' → logprob: -12.325404167175293
    10. ' ==' → logprob: -12.575404167175293

Token 528: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011797507759183645
    2. ' main' → logprob: -6.7511796951293945
    3. '	main' → logprob: -11.626179695129395
    4. '   ' → logprob: -14.751179695129395
    5. '_main' → logprob: -16.37618064880371
    6. '    
' → logprob: -16.75118064880371
    7. '(main' → logprob: -17.37618064880371
    8. '
' → logprob: -18.37618064880371
    9. '.main' → logprob: -19.25118064880371
    10. '__' → logprob: -19.75118064880371

Token 529: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -24.875
    5. '(main' → logprob: -25.25
    6. '.main' → logprob: -25.375
    7. '_main' → logprob: -26.25
    8. 'Main' → logprob: -28.5
    9. 'mai' → logprob: -29.125
    10. 'import' → logprob: -29.125

Token 530: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08617527782917023
    2. '
' → logprob: -3.3361752033233643
    3. '<|end|>' → logprob: -3.3361752033233643
    4. '\n' → logprob: -5.336175441741943
    5. '()
' → logprob: -6.086175441741943
    6. '```' → logprob: -6.461175441741943
    7. '(' → logprob: -7.086175441741943
    8. '#' → logprob: -7.211175441741943
    9. ')' → logprob: -7.711175441741943
    10. '\' → logprob: -8.336174964904785


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 528
Tokens correctement prédits (1ère position, stricte): 227
Tokens correctement prédits (1ère position, avec adaptation): 250
Tokens correctement prédits (top 10): 450
Précision stricte (1ère position): 42.99%
Précision adaptée (1ère position): 47.35%
Précision (top 10): 85.23%
================================================================================
