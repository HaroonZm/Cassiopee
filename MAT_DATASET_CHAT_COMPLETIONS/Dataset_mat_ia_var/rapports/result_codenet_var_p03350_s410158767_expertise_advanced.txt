================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import accumulate
from functools import lru_cache

R = range
N, K = map(int, stdin.readline().split())
Q = R(N + 1)
d = [bytearray(1 << i) for i in Q]
f = [bytearray(1 << i) for i in Q]

for i, s in enumerate(map(str.rstrip, (stdin.readline() for _ in Q))):
    d[i][:len(s)] = map(int, s)

for i in R(1, N + 1):
    fi = f[i]
    for j in R(1 << i):
        t = (j >> (i - 1)) & 1
        r = 0
        while r < i and ((j >> (i - 1 - r)) & 1) == t:
            r += 1
        fi[j] = r

for i in Q:
    for k in R(i + 1, N + 1):
        z = k - i
        m = (1 << z) - 1
        dk, fi_z, di = d[k], f[z], d[i]
        for j in R(1 << k):
            di[j >> z] += dk[j]
            r = fi_z[j & m]
            if r != z:
                d[k - r][(j >> z) << (z - r) | (j & ((1 << (z - r)) - 1))] += dk[j]
    I = J = None
    for j, v in enumerate(d[i]):
        if v >= K:
            I, J = i, j
            break
    if I is not None:
        break

print('' if (I == 0 and J == 0) else format(J, '0{}b'.format(I)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06321117281913757
    2. '.readline' → logprob: -3.56321120262146
    3. 'for' → logprob: -4.563210964202881
    4. '\n' → logprob: -4.688210964202881
    5. '
' → logprob: -5.938210964202881
    6. 'import' → logprob: -5.938210964202881
    7. 'print' → logprob: -6.188210964202881
    8. '.read' → logprob: -6.688210964202881
    9. '```' → logprob: -7.313210964202881
    10. ',' → logprob: -7.313210964202881

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020580431446433067
    2. 'import' → logprob: -3.895580530166626
    3. ' ' → logprob: -11.020580291748047
    4. '	import' → logprob: -11.770580291748047
    5. '.' → logprob: -12.395580291748047
    6. '_import' → logprob: -12.770580291748047
    7. ' im' → logprob: -13.645580291748047
    8. ' itertools' → logprob: -13.770580291748047
    9. '.import' → logprob: -13.770580291748047
    10. ' .' → logprob: -14.145580291748047

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6071425676345825
    2. 'per' → logprob: -1.9821425676345825
    3. 'count' → logprob: -1.9821425676345825
    4. 'product' → logprob: -3.107142448425293
    5. 'group' → logprob: -3.357142448425293
    6. ' permutations' → logprob: -3.607142448425293
    7. 'chain' → logprob: -3.857142448425293
    8. 'import' → logprob: -4.357142448425293
    9. 'cycle' → logprob: -4.357142448425293
    10. 'com' → logprob: -4.482142448425293

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2185611128807068
    2. '\n' → logprob: -2.2185611724853516
    3. '

' → logprob: -2.8435611724853516
    4. '' → logprob: -5.218561172485352
    5. 'for' → logprob: -5.468561172485352
    6. ',' → logprob: -5.468561172485352
    7. 'newline' → logprob: -5.718561172485352
    8. '\' → logprob: -6.218561172485352
    9. 'import' → logprob: -6.218561172485352
    10. '
' → logprob: -6.468561172485352

Token 10: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5528494119644165
    2. '\n' → logprob: -1.5528494119644165
    3. '

' → logprob: -1.8028494119644165
    4. 'newline' → logprob: -4.427849292755127
    5. '\' → logprob: -5.177849292755127
    6. '```' → logprob: -5.302849292755127
    7. 'import' → logprob: -5.677849292755127
    8. '
' → logprob: -5.677849292755127
    9. 'def' → logprob: -5.927849292755127
    10. '' → logprob: -6.177849292755127

Token 11: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8621671795845032
    2. ' operator' → logprob: -1.2371671199798584
    3. 'math' → logprob: -1.7371671199798584
    4. 'operator' → logprob: -2.2371671199798584
    5. '_operator' → logprob: -7.1121673583984375
    6. 'collections' → logprob: -7.1121673583984375
    7. '_math' → logprob: -7.1121673583984375
    8. ' collections' → logprob: -7.3621673583984375
    9. ' ' → logprob: -7.3621673583984375
    10. ' functools' → logprob: -8.112167358398438

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038131795823574066
    2. 'import' → logprob: -3.2881317138671875
    3. '	import' → logprob: -9.913131713867188
    4. ' ' → logprob: -10.788131713867188
    5. '_import' → logprob: -11.788131713867188
    6. '<|end|>' → logprob: -12.163131713867188
    7. ' импорт' → logprob: -13.913131713867188
    8. '.' → logprob: -14.163131713867188
    9. ' importar' → logprob: -14.288131713867188
    10. '.import' → logprob: -14.413131713867188

Token 13: ' l' (ID: 305)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.1066620871424675
    2. 'l' → logprob: -3.1066620349884033
    3. ' reduce' → logprob: -3.1066620349884033
    4. ' l' → logprob: -4.856662273406982
    5. 'partial' → logprob: -5.731662273406982
    6. ' partial' → logprob: -8.481661796569824
    7. 'cache' → logprob: -8.856661796569824
    8. 'import' → logprob: -9.606661796569824
    9. 'redu' → logprob: -9.731661796569824
    10. 'wrap' → logprob: -9.731661796569824

Token 14: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.0683535037969705e-05
    2. 'ambda' → logprob: -12.37501049041748
    3. 'r' → logprob: -12.75001049041748
    4. 'ruz' → logprob: -13.62501049041748
    5. 'reduce' → logprob: -14.37501049041748
    6. '_ru' → logprob: -15.12501049041748
    7. 'ruh' → logprob: -15.37501049041748
    8. 'amb' → logprob: -15.62501049041748
    9. 'u' → logprob: -16.000011444091797
    10. 'a' → logprob: -16.375011444091797

Token 15: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.427700936794281
    2. 'c' → logprob: -1.4277009963989258
    3. '_cache' → logprob: -2.302700996398926
    4. 'r' → logprob: -5.427700996398926
    5. 'cached' → logprob: -6.052700996398926
    6. 't' → logprob: -8.677700996398926
    7. '_c' → logprob: -8.802700996398926
    8. '```' → logprob: -8.927700996398926
    9. 'ch' → logprob: -9.177700996398926
    10. '\' → logprob: -9.177700996398926

Token 16: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4032905399799347
    2. '
' → logprob: -1.1532905101776123
    3. 'def' → logprob: -4.903290748596191
    4. '\n' → logprob: -5.278290748596191
    5. '```' → logprob: -6.903290748596191
    6. 'import' → logprob: -7.403290748596191
    7. '
' → logprob: -7.653290748596191
    8. '<|end|>' → logprob: -7.778290748596191
    9. '


' → logprob: -8.028290748596191
    10. '
 
' → logprob: -8.653290748596191

Token 17: 'R' (ID: 49)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.569938600063324
    2. 'def' → logprob: -0.944938600063324
    3. 'd' → logprob: -3.8199386596679688
    4. '\' → logprob: -4.694938659667969
    5. '@
' → logprob: -5.694938659667969
    6. '```' → logprob: -5.694938659667969
    7. 'n' → logprob: -6.069938659667969
    8. '`' → logprob: -6.569938659667969
    9. '\n' → logprob: -6.819938659667969
    10. 'import' → logprob: -6.944938659667969

Token 18: ' =' (ID: 314)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7304142713546753
    2. 'A' → logprob: -0.8554142713546753
    3. 'ANGE' → logprob: -2.855414390563965
    4. '=' → logprob: -4.855414390563965
    5. '(' → logprob: -5.105414390563965
    6. 'a' → logprob: -5.355414390563965
    7. 'U' → logprob: -5.730414390563965
    8. '_' → logprob: -6.230414390563965
    9. 'O' → logprob: -6.355414390563965
    10. 'C' → logprob: -6.730414390563965

Token 19: ' range' (ID: 3352)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.26962247490882874
    2. 'int' → logprob: -1.5196224451065063
    3. ' ' → logprob: -4.769622325897217
    4. '10' → logprob: -5.644622325897217
    5. ' map' → logprob: -5.894622325897217
    6. ' range' → logprob: -6.769622325897217
    7. 'map' → logprob: -8.019622802734375
    8. 'range' → logprob: -8.144622802734375
    9. '[int' → logprob: -8.269622802734375
    10. '100' → logprob: -8.394622802734375

Token 20: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03145317733287811
    2. '<|end|>' → logprob: -3.5314531326293945
    3. '(len' → logprob: -7.2814531326293945
    4. '<|end|>' → logprob: -8.281453132629395
    5. '(
' → logprob: -8.406453132629395
    6. '(n' → logprob: -8.531453132629395
    7. '(R' → logprob: -8.906453132629395
    8. ' (' → logprob: -10.156453132629395
    9. '(int' → logprob: -10.531453132629395
    10. '(-' → logprob: -10.656453132629395

Token 21: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035079147666692734
    2. '(len' → logprob: -4.160079002380371
    3. '(n' → logprob: -4.535079002380371
    4. '(int' → logprob: -5.410079002380371
    5. '(max' → logprob: -6.910079002380371
    6. '(
' → logprob: -7.535079002380371
    7. '(lambda' → logprob: -7.660079002380371
    8. '(N' → logprob: -8.285079002380371
    9. 'def' → logprob: -8.535079002380371
    10. '(min' → logprob: -8.785079002380371

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5557534098625183
    2. ' =' → logprob: -0.9307534098625183
    3. '=' → logprob: -3.680753469467163
    4. ' ,' → logprob: -5.305753231048584
    5. ' ' → logprob: -6.555753231048584
    6. '[' → logprob: -8.805753707885742
    7. '=int' → logprob: -8.930753707885742
    8. ')' → logprob: -10.055753707885742
    9. '_' → logprob: -10.305753707885742
    10. '.' → logprob: -10.555753707885742

Token 23: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0895145907998085
    2. 'K' → logprob: -2.5895144939422607
    3. ' M' → logprob: -4.96451473236084
    4. 'Q' → logprob: -6.46451473236084
    5. ' K' → logprob: -6.83951473236084
    6. 'N' → logprob: -7.83951473236084
    7. ' ' → logprob: -8.83951473236084
    8. '=' → logprob: -9.21451473236084
    9. 'T' → logprob: -9.58951473236084
    10. '_' → logprob: -9.96451473236084

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2346060574054718
    2. '=' → logprob: -1.6096060276031494
    3. ',' → logprob: -4.7346062660217285
    4. ' ' → logprob: -8.60960578918457
    5. ' ,' → logprob: -8.85960578918457
    6. '=input' → logprob: -11.10960578918457
    7. '<|end|>' → logprob: -12.10960578918457
    8. '=int' → logprob: -12.23460578918457
    9. ' =",' → logprob: -12.85960578918457
    10. ' =
' → logprob: -13.10960578918457

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06996600329875946
    2. 'map' → logprob: -2.6949660778045654
    3. ' ' → logprob: -10.819966316223145
    4. '(map' → logprob: -13.694966316223145
    5. '[' → logprob: -13.819966316223145
    6. '	map' → logprob: -13.944966316223145
    7. ' list' → logprob: -14.069966316223145
    8. ' stdin' → logprob: -14.194966316223145
    9. ' [' → logprob: -14.319966316223145
    10. 'int' → logprob: -14.319966316223145

Token 26: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24635376036167145
    2. '(int' → logprob: -1.8713537454605103
    3. '(str' → logprob: -2.9963538646698
    4. '(lambda' → logprob: -4.996353626251221
    5. '(input' → logprob: -5.496353626251221
    6. '<|end|>' → logprob: -6.246353626251221
    7. '(stdin' → logprob: -6.996353626251221
    8. '()' → logprob: -9.246354103088379
    9. '(len' → logprob: -9.246354103088379
    10. 'str' → logprob: -9.621354103088379

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2715871036052704
    2. '(stdin' → logprob: -1.5215871334075928
    3. ',input' → logprob: -4.271586894989014
    4. '(' → logprob: -6.271586894989014
    5. 'stdin' → logprob: -6.521586894989014
    6. ',std' → logprob: -7.146586894989014
    7. ',int' → logprob: -7.396586894989014
    8. ' ,' → logprob: -7.896586894989014
    9. '(input' → logprob: -9.271587371826172
    10. ' stdin' → logprob: -10.021587371826172

Token 28: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01297068502753973
    2. ' stdin' → logprob: -4.387970447540283
    3. 'int' → logprob: -8.887970924377441
    4. '(stdin' → logprob: -9.137970924377441
    5. 'input' → logprob: -9.262970924377441
    6. 'std' → logprob: -9.762970924377441
    7. ')' → logprob: -11.012970924377441
    8. 'str' → logprob: -11.512970924377441
    9. '.stdin' → logprob: -11.887970924377441
    10. ' ' → logprob: -12.137970924377441

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005882986588403583
    2. '.read' → logprob: -7.625588417053223
    3. '.' → logprob: -9.250588417053223
    4. '.readlines' → logprob: -12.875588417053223
    5. ').' → logprob: -14.375588417053223
    6. ')' → logprob: -15.000588417053223
    7. '().' → logprob: -15.250588417053223
    8. ' .' → logprob: -15.625588417053223
    9. '.buffer' → logprob: -16.250587463378906
    10. '.stdin' → logprob: -16.500587463378906

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.043208032846450806
    2. '())' → logprob: -3.293208122253418
    3. '()' → logprob: -5.293208122253418
    4. '(),' → logprob: -9.668208122253418
    5. ')' → logprob: -10.293208122253418
    6. '()))' → logprob: -11.293208122253418
    7. '(' → logprob: -11.918208122253418
    8. '()[' → logprob: -12.543208122253418
    9. '()),' → logprob: -13.668208122253418
    10. '());' → logprob: -13.668208122253418

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20700280368328094
    2. 'strip' → logprob: -1.7070027589797974
    3. 'rstrip' → logprob: -5.207002639770508
    4. 'read' → logprob: -9.457002639770508
    5. ' split' → logprob: -11.332002639770508
    6. ')' → logprob: -12.582002639770508
    7. '(split' → logprob: -14.332002639770508
    8. ' strip' → logprob: -14.582002639770508
    9. 'rs' → logprob: -14.832002639770508
    10. '```' → logprob: -14.957002639770508

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004388933070003986
    2. '))' → logprob: -5.629388809204102
    3. '())' → logprob: -7.254388809204102
    4. '()' → logprob: -9.754388809204102
    5. '),' → logprob: -11.754388809204102
    6. '(' → logprob: -12.504388809204102
    7. '`)' → logprob: -13.129388809204102
    8. ')`' → logprob: -13.254388809204102
    9. ' )' → logprob: -13.504388809204102
    10. ')
' → logprob: -13.629388809204102

Token 33: 'Q' (ID: 48)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33726978302001953
    2. '
' → logprob: -1.9622697830200195
    3. 'A' → logprob: -2.9622697830200195
    4. ')
' → logprob: -2.9622697830200195
    5. 'data' → logprob: -4.8372697830200195
    6. ' A' → logprob: -4.8372697830200195
    7. 'a' → logprob: -4.9622697830200195
    8. ' 
' → logprob: -5.3372697830200195
    9. 'arr' → logprob: -6.0872697830200195
    10. '  
' → logprob: -6.8372697830200195

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08149261772632599
    2. '=' → logprob: -2.7064926624298096
    3. 's' → logprob: -4.5814924240112305
    4. ',' → logprob: -7.5814924240112305
    5. ' ' → logprob: -8.20649242401123
    6. 'ues' → logprob: -8.70649242401123
    7. 'u' → logprob: -9.70649242401123
    8. '.' → logprob: -9.70649242401123
    9. '  ' → logprob: -10.08149242401123
    10. 'S' → logprob: -10.83149242401123

Token 35: ' R' (ID: 460)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8134741187095642
    2. ' int' → logprob: -1.438474178314209
    3. '[int' → logprob: -1.563474178314209
    4. ' [' → logprob: -2.938474178314209
    5. ' R' → logprob: -4.063474178314209
    6. '[]' → logprob: -4.313474178314209
    7. ' []' → logprob: -4.438474178314209
    8. 'list' → logprob: -5.813474178314209
    9. ' list' → logprob: -6.188474178314209
    10. '[' → logprob: -6.188474178314209

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01946687325835228
    2. '(' → logprob: -4.519466876983643
    3. '(int' → logprob: -5.269466876983643
    4. '(K' → logprob: -6.144466876983643
    5. '(Q' → logprob: -6.894466876983643
    6. '((' → logprob: -10.769466400146484
    7. '(len' → logprob: -11.019466400146484
    8. '(M' → logprob: -11.144466400146484
    9. ' (' → logprob: -12.144466400146484
    10. '(n' → logprob: -12.269466400146484

Token 37: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001801801408873871
    2. ' )' → logprob: -9.3751802444458
    3. '+' → logprob: -10.6251802444458
    4. '-' → logprob: -10.7501802444458
    5. '))' → logprob: -11.1251802444458
    6. '*' → logprob: -11.5001802444458
    7. '`)' → logprob: -12.1251802444458
    8. ')
' → logprob: -12.3751802444458
    9. ',' → logprob: -12.7501802444458
    10. '),' → logprob: -13.1251802444458

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3227623999118805
    2. 'K' → logprob: -1.572762370109558
    3. ' K' → logprob: -2.9477624893188477
    4. ' ' → logprob: -4.197762489318848
    5. 'Q' → logprob: -7.447762489318848
    6. ' Q' → logprob: -9.447762489318848
    7. '2' → logprob: -9.822762489318848
    8. '10' → logprob: -10.197762489318848
    9. '(' → logprob: -10.322762489318848
    10. ')' → logprob: -10.822762489318848

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015181967988610268
    2. 'K' → logprob: -4.515182018280029
    3. ' ' → logprob: -5.640182018280029
    4. ' K' → logprob: -7.765182018280029
    5. '2' → logprob: -9.640181541442871
    6. 'Q' → logprob: -10.390181541442871
    7. '(' → logprob: -11.265181541442871
    8. '  ' → logprob: -12.015181541442871
    9. '10' → logprob: -12.015181541442871
    10. '3' → logprob: -12.390181541442871

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013572083844337612
    2. ',' → logprob: -9.50013542175293
    3. ' )' → logprob: -10.50013542175293
    4. '`)' → logprob: -11.50013542175293
    5. ')
' → logprob: -12.12513542175293
    6. '),' → logprob: -12.12513542175293
    7. '")' → logprob: -13.37513542175293
    8. '))' → logprob: -13.50013542175293
    9. '```' → logprob: -13.75013542175293
    10. '')' → logprob: -14.00013542175293

Token 41: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.814350426197052
    2. '
' → logprob: -0.814350426197052
    3. '\n' → logprob: -3.9393503665924072
    4. ')
' → logprob: -4.064350605010986
    5. '
' → logprob: -4.439350605010986
    6. '[' → logprob: -4.564350605010986
    7. 'newline' → logprob: -5.314350605010986
    8. ',' → logprob: -5.439350605010986
    9. '+' → logprob: -5.814350605010986
    10. '[
' → logprob: -6.064350605010986

Token 42: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010642479173839092
    2. ' =' → logprob: -7.126064300537109
    3. '=' → logprob: -9.25106430053711
    4. 'P' → logprob: -10.00106430053711
    5. 'e' → logprob: -10.87606430053711
    6. 'ps' → logprob: -11.25106430053711
    7. 'ist' → logprob: -11.62606430053711
    8. 'iff' → logprob: -11.62606430053711
    9. 'if' → logprob: -11.75106430053711
    10. 'ef' → logprob: -12.00106430053711

Token 43: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5984510183334351
    2. ' [' → logprob: -0.8484510183334351
    3. '{}' → logprob: -5.598451137542725
    4. '{' → logprob: -5.848451137542725
    5. '[len' → logprob: -5.973451137542725
    6. '[int' → logprob: -6.098451137542725
    7. '[-' → logprob: -6.348451137542725
    8. '[N' → logprob: -6.973451137542725
    9. ' {}' → logprob: -6.973451137542725
    10. '[R' → logprob: -7.098451137542725

Token 44: 'byte' (ID: 7216)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05483071506023407
    2. 'int' → logprob: -3.42983078956604
    3. 'list' → logprob: -5.429830551147461
    4. '-' → logprob: -5.429830551147461
    5. '1' → logprob: -5.554830551147461
    6. '[]' → logprob: -6.054830551147461
    7. '[int' → logprob: -6.554830551147461
    8. '[' → logprob: -7.304830551147461
    9. '(int' → logprob: -7.429830551147461
    10. ']' → logprob: -7.679830551147461

Token 45: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -2.6060808522743173e-05
    2. 'arr' → logprob: -11.375025749206543
    3. 'rray' → logprob: -12.750025749206543
    4. 's' → logprob: -13.250025749206543
    5. 'code' → logprob: -13.250025749206543
    6. 'count' → logprob: -13.500025749206543
    7. 'arra' → logprob: -13.500025749206543
    8. 'arry' → logprob: -13.625025749206543
    9. 'arrays' → logprob: -14.375025749206543
    10. 'r' → logprob: -14.625025749206543

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49464496970176697
    2. '(Q' → logprob: -1.1196449995040894
    3. '([' → logprob: -3.7446448802948
    4. '((' → logprob: -3.9946448802948
    5. '(N' → logprob: -4.744645118713379
    6. '(K' → logprob: -4.744645118713379
    7. '(R' → logprob: -5.994645118713379
    8. '()' → logprob: -7.494645118713379
    9. ' (' → logprob: -8.494645118713379
    10. ']' → logprob: -8.744645118713379

Token 47: '1' (ID: 16)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.7185744643211365
    2. '(' → logprob: -1.8435745239257812
    3. 'Q' → logprob: -2.0935745239257812
    4. '(stdin' → logprob: -2.7185745239257812
    5. 'K' → logprob: -3.2185745239257812
    6. 'b' → logprob: -3.9685745239257812
    7. 'N' → logprob: -3.9685745239257812
    8. '[' → logprob: -4.718574523925781
    9. '1' → logprob: -4.718574523925781
    10. '100' → logprob: -4.718574523925781

Token 48: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.6641858220100403
    2. ')' → logprob: -1.2891857624053955
    3. ')]' → logprob: -2.1641857624053955
    4. '0' → logprob: -2.7891857624053955
    5. ']' → logprob: -5.039186000823975
    6. '6' → logprob: -5.414186000823975
    7. '<<(' → logprob: -5.414186000823975
    8. '00' → logprob: -5.539186000823975
    9. '1' → logprob: -5.664186000823975
    10. ')])' → logprob: -6.164186000823975

Token 49: ' i' (ID: 575)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.41000601649284363
    2. '10' → logprob: -2.535006046295166
    3. '6' → logprob: -3.035006046295166
    4. '7' → logprob: -3.035006046295166
    5. '20' → logprob: -3.410006046295166
    6. '5' → logprob: -3.660006046295166
    7. '8' → logprob: -3.785006046295166
    8. 'N' → logprob: -4.285006046295166
    9. '4' → logprob: -4.535006046295166
    10. '3' → logprob: -4.660006046295166

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1086757481098175
    2. ' for' → logprob: -2.733675718307495
    3. 'for' → logprob: -3.358675718307495
    4. ' ' → logprob: -6.483675956726074
    5. ' )' → logprob: -8.108675956726074
    6. '0' → logprob: -8.358675956726074
    7. '+' → logprob: -8.983675956726074
    8. '  ' → logprob: -9.108675956726074
    9. '1' → logprob: -9.108675956726074
    10. '   ' → logprob: -9.233675956726074

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5767640471458435
    2. 'for' → logprob: -0.8267640471458435
    3. ')' → logprob: -7.701764106750488
    4. '	for' → logprob: -9.326764106750488
    5. ' ' → logprob: -9.451764106750488
    6. '0' → logprob: -9.701764106750488
    7. ']' → logprob: -9.951764106750488
    8. '1' → logprob: -11.451764106750488
    9. '   ' → logprob: -11.701764106750488
    10. '[' → logprob: -11.701764106750488

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3363727927207947
    2. ' i' → logprob: -2.0863728523254395
    3. '_' → logprob: -2.2113728523254395
    4. ' range' → logprob: -3.2113728523254395
    5. 'range' → logprob: -5.0863728523254395
    6. '_i' → logprob: -5.8363728523254395
    7. ' _' → logprob: -6.2113728523254395
    8. ' in' → logprob: -8.586372375488281
    9. ' ' → logprob: -8.961372375488281
    10. '_range' → logprob: -10.336372375488281

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055369310081005096
    2. 'in' → logprob: -2.9303693771362305
    3. ' ' → logprob: -8.68036937713623
    4. 's' → logprob: -9.55536937713623
    5. '(' → logprob: -9.80536937713623
    6. 'n' → logprob: -9.93036937713623
    7. ' range' → logprob: -10.43036937713623
    8. 'range' → logprob: -10.43036937713623
    9. 'd' → logprob: -10.55536937713623
    10. 'N' → logprob: -11.68036937713623

Token 54: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6009034514427185
    2. 'range' → logprob: -1.2259035110473633
    3. ' range' → logprob: -2.4759035110473633
    4. 'R' → logprob: -2.7259035110473633
    5. ' Q' → logprob: -5.100903511047363
    6. ' R' → logprob: -6.600903511047363
    7. 'N' → logprob: -7.350903511047363
    8. 'K' → logprob: -8.475903511047363
    9. ' ' → logprob: -8.850903511047363
    10. '(Q' → logprob: -10.350903511047363

Token 55: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5501465201377869
    2. ']' → logprob: -0.9251465201377869
    3. ')' → logprob: -3.9251465797424316
    4. '])' → logprob: -5.050146579742432
    5. '()]' → logprob: -8.675146102905273
    6. '])]' → logprob: -8.925146102905273
    7. ')])' → logprob: -9.800146102905273
    8. ']
' → logprob: -10.550146102905273
    9. '(' → logprob: -10.550146102905273
    10. ')],' → logprob: -10.675146102905273

Token 56: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2255595326423645
    2. ']' → logprob: -1.9755594730377197
    3. '(' → logprob: -3.6005594730377197
    4. '[' → logprob: -4.975559711456299
    5. '
' → logprob: -5.225559711456299
    6. ' ' → logprob: -5.350559711456299
    7. '#' → logprob: -5.725559711456299
    8. '0' → logprob: -5.975559711456299
    9. '<|end|>' → logprob: -6.225559711456299
    10. '=' → logprob: -6.475559711456299

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11962378770112991
    2. '=' → logprob: -2.369623899459839
    3. 'or' → logprob: -4.49462366104126
    4. 'ull' → logprob: -5.86962366104126
    5. 'requencies' → logprob: -7.49462366104126
    6. '[' → logprob: -7.61962366104126
    7. ' ' → logprob: -7.74462366104126
    8. 'a' → logprob: -7.99462366104126
    9. ',' → logprob: -8.244624137878418
    10. '(' → logprob: -8.494624137878418

Token 58: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09589390456676483
    2. ' [' → logprob: -3.3458938598632812
    3. '[R' → logprob: -3.5958938598632812
    4. 'lambda' → logprob: -5.095893859863281
    5. 'R' → logprob: -5.720893859863281
    6. '[len' → logprob: -5.845893859863281
    7. ' R' → logprob: -5.970893859863281
    8. '[l' → logprob: -6.220893859863281
    9. '[]' → logprob: -6.345893859863281
    10. '[[' → logprob: -6.345893859863281

Token 59: 'byte' (ID: 7216)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21718727052211761
    2. '[' → logprob: -2.7171871662139893
    3. 'byte' → logprob: -3.2171871662139893
    4. 'lambda' → logprob: -3.2171871662139893
    5. 'R' → logprob: -4.842187404632568
    6. '1' → logprob: -4.842187404632568
    7. '[]' → logprob: -4.967187404632568
    8. 'int' → logprob: -5.092187404632568
    9. '[R' → logprob: -5.592187404632568
    10. '[int' → logprob: -6.217187404632568

Token 60: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -2.0339031834737398e-05
    2. 'a' → logprob: -11.500020027160645
    3. 'arra' → logprob: -12.375020027160645
    4. 'arr' → logprob: -12.875020027160645
    5. 'rray' → logprob: -14.375020027160645
    6. 'arrays' → logprob: -14.500020027160645
    7. 'byte' → logprob: -14.625020027160645
    8. '8' → logprob: -15.500020027160645
    9. '[' → logprob: -15.500020027160645
    10. 'arry' → logprob: -15.500020027160645

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07555251568555832
    2. '(K' → logprob: -3.325552463531494
    3. '(N' → logprob: -4.075552463531494
    4. '(Q' → logprob: -4.575552463531494
    5. '((' → logprob: -4.825552463531494
    6. '(R' → logprob: -7.325552463531494
    7. '([' → logprob: -8.575552940368652
    8. '(i' → logprob: -8.950552940368652
    9. '1' → logprob: -9.575552940368652
    10. '(len' → logprob: -9.950552940368652

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7895815968513489
    2. '(' → logprob: -0.9145815968513489
    3. 'K' → logprob: -2.789581537246704
    4. 'N' → logprob: -3.039581537246704
    5. '2' → logprob: -5.289581775665283
    6. '(K' → logprob: -5.414581775665283
    7. 'Q' → logprob: -5.664581775665283
    8. ' ' → logprob: -5.914581775665283
    9. '32' → logprob: -6.039581775665283
    10. '(N' → logprob: -6.289581775665283

Token 63: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.31504499912261963
    2. '<<' → logprob: -1.3150449991226196
    3. ')' → logprob: -7.06504487991333
    4. '<<(' → logprob: -8.065045356750488
    5. '+' → logprob: -8.940045356750488
    6. ' +' → logprob: -9.315045356750488
    7. '1' → logprob: -9.940045356750488
    8. '<' → logprob: -10.127545356750488
    9. '
' → logprob: -10.502545356750488
    10. ' <<
' → logprob: -10.690045356750488

Token 64: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13906313478946686
    2. 'N' → logprob: -2.8890631198883057
    3. 'K' → logprob: -3.5140631198883057
    4. ' i' → logprob: -3.6390631198883057
    5. '(N' → logprob: -5.514063358306885
    6. ' (' → logprob: -5.889063358306885
    7. ' N' → logprob: -6.014063358306885
    8. ' K' → logprob: -6.139063358306885
    9. '(i' → logprob: -6.639063358306885
    10. '(K' → logprob: -6.889063358306885

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026308270171284676
    2. '+' → logprob: -6.752630710601807
    3. ' )' → logprob: -7.377630710601807
    4. 'for' → logprob: -8.252631187438965
    5. ' for' → logprob: -8.627631187438965
    6. ' +' → logprob: -8.627631187438965
    7. '-' → logprob: -10.502631187438965
    8. ' ' → logprob: -10.752631187438965
    9. '()' → logprob: -11.190131187438965
    10. '   ' → logprob: -11.440131187438965

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5433256030082703
    2. 'for' → logprob: -0.9183256030082703
    3. ')' → logprob: -3.918325662612915
    4. ' ' → logprob: -9.918325424194336
    5. '+' → logprob: -11.168325424194336
    6. '   ' → logprob: -11.543325424194336
    7. '[' → logprob: -11.918325424194336
    8. ' )' → logprob: -12.043325424194336
    9. '	for' → logprob: -12.543325424194336
    10. '()' → logprob: -12.918325424194336

Token 67: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7878196239471436
    2. ' i' → logprob: -1.4128196239471436
    3. 'i' → logprob: -1.9128196239471436
    4. 'Q' → logprob: -2.2878196239471436
    5. ' Q' → logprob: -3.4128196239471436
    6. 'in' → logprob: -4.162819862365723
    7. ' ' → logprob: -6.787819862365723
    8. 'd' → logprob: -7.662819862365723
    9. 'I' → logprob: -7.662819862365723
    10. '_' → logprob: -8.037819862365723

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12119922041893005
    2. 'in' → logprob: -2.246199131011963
    3. 'Q' → logprob: -5.246199131011963
    4. '(Q' → logprob: -6.496199131011963
    5. ' Q' → logprob: -6.621199131011963
    6. ' ' → logprob: -9.871199607849121
    7. 'd' → logprob: -10.808699607849121
    8. ')' → logprob: -10.996199607849121
    9. 's' → logprob: -11.058699607849121
    10. '=' → logprob: -11.058699607849121

Token 69: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.008992237038910389
    2. ' Q' → logprob: -4.7589921951293945
    3. 'R' → logprob: -8.258992195129395
    4. 'range' → logprob: -10.383992195129395
    5. '(Q' → logprob: -10.633992195129395
    6. ' range' → logprob: -10.883992195129395
    7. 'N' → logprob: -11.383992195129395
    8. ' ' → logprob: -11.758992195129395
    9. ')' → logprob: -12.258992195129395
    10. ' R' → logprob: -12.508992195129395

Token 70: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021412506699562073
    2. ')]' → logprob: -3.8964126110076904
    3. ')' → logprob: -7.396412372589111
    4. '()]' → logprob: -9.02141284942627
    5. '])' → logprob: -9.39641284942627
    6. ']
' → logprob: -10.64641284942627
    7. ' ]' → logprob: -11.14641284942627
    8. '`]' → logprob: -12.39641284942627
    9. '])]' → logprob: -12.89641284942627
    10. ']
' → logprob: -13.14641284942627

Token 71: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42816072702407837
    2. '(' → logprob: -1.8031606674194336
    3. ']' → logprob: -2.4281606674194336
    4. '[' → logprob: -3.1781606674194336
    5. '=' → logprob: -3.3031606674194336
    6. '#' → logprob: -5.053160667419434
    7. '(
' → logprob: -6.053160667419434
    8. ' ' → logprob: -6.303160667419434
    9. '()' → logprob: -6.553160667419434
    10. '[
' → logprob: -7.303160667419434

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01960785873234272
    2. 'i' → logprob: -4.394608020782471
    3. ' n' → logprob: -6.144608020782471
    4. ' x' → logprob: -6.644608020782471
    5. '_' → logprob: -6.769608020782471
    6. ' k' → logprob: -7.519608020782471
    7. ' a' → logprob: -8.019607543945312
    8. ' _' → logprob: -8.394607543945312
    9. ' ' → logprob: -8.519607543945312
    10. ' v' → logprob: -8.519607543945312

Token 73: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20267078280448914
    2. 'in' → logprob: -1.7026708126068115
    3. ' ' → logprob: -6.952670574188232
    4. ',' → logprob: -9.20267105102539
    5. '(' → logprob: -9.32767105102539
    6. '  ' → logprob: -10.32767105102539
    7. ' i' → logprob: -10.45267105102539
    8. '_' → logprob: -11.57767105102539
    9. ' ,' → logprob: -11.95267105102539
    10. ')' → logprob: -12.07767105102539

Token 74: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0866411924362183
    2. 'a' → logprob: -1.4616411924362183
    3. 'v' → logprob: -2.586641311645508
    4. 'c' → logprob: -3.336641311645508
    5. 'd' → logprob: -3.586641311645508
    6. 'j' → logprob: -3.586641311645508
    7. 'b' → logprob: -3.711641311645508
    8. ' x' → logprob: -3.836641311645508
    9. 'k' → logprob: -4.086641311645508
    10. ' a' → logprob: -4.211641311645508

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3498002290725708
    2. 'in' → logprob: -1.2248002290725708
    3. ',' → logprob: -6.974800109863281
    4. 's' → logprob: -8.974800109863281
    5. 'ize' → logprob: -9.599800109863281
    6. 'n' → logprob: -10.224800109863281
    7. 'inp' → logprob: -10.224800109863281
    8. ' ' → logprob: -10.849800109863281
    9. '	in' → logprob: -11.474800109863281
    10. 'ince' → logprob: -11.599800109863281

Token 76: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.12697146832942963
    2. 'enumer' → logprob: -2.126971483230591
    3. '(en' → logprob: -11.126971244812012
    4. 'enum' → logprob: -11.751971244812012
    5. 'en' → logprob: -12.001971244812012
    6. ' en' → logprob: -12.376971244812012
    7. ' enum' → logprob: -12.501971244812012
    8. 'e' → logprob: -13.501971244812012
    9. 'enu' → logprob: -13.876971244812012
    10. ' zip' → logprob: -14.001971244812012

Token 77: '(map' (ID: 16946)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.00125570734962821
    2. '(range' → logprob: -7.876255512237549
    3. '(st' → logprob: -8.126255989074707
    4. '(' → logprob: -8.751255989074707
    5. 'stdin' → logprob: -9.251255989074707
    6. '(R' → logprob: -9.626255989074707
    7. '(map' → logprob: -10.126255989074707
    8. '(d' → logprob: -10.251255989074707
    9. '(std' → logprob: -10.501255989074707
    10. '(f' → logprob: -10.626255989074707

Token 78: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03167206048965454
    2. '(str' → logprob: -3.5316720008850098
    3. '(' → logprob: -6.90667200088501
    4. '(stdin' → logprob: -7.78167200088501
    5. '(lambda' → logprob: -8.906672477722168
    6. '(list' → logprob: -9.156672477722168
    7. '(ord' → logprob: -9.156672477722168
    8. '(eval' → logprob: -10.031672477722168
    9. '(bytes' → logprob: -10.531672477722168
    10. '(input' → logprob: -10.656672477722168

Token 79: '.rstrip' (ID: 161629)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7514858245849609
    2. '.strip' → logprob: -0.8764858245849609
    3. ',input' → logprob: -3.001485824584961
    4. ',int' → logprob: -3.126485824584961
    5. '.rstrip' → logprob: -4.376485824584961
    6. ',str' → logprob: -5.751485824584961
    7. '.split' → logprob: -7.126485824584961
    8. '.lower' → logprob: -7.626485824584961
    9. ',len' → logprob: -8.376485824584961
    10. ',std' → logprob: -8.376485824584961

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007351400796324015
    2. '(stdin' → logprob: -5.007351398468018
    3. 'stdin' → logprob: -7.882351398468018
    4. ',std' → logprob: -9.007351875305176
    5. ' ,' → logprob: -9.757351875305176
    6. ' stdin' → logprob: -10.507351875305176
    7. '))' → logprob: -10.757351875305176
    8. ')):' → logprob: -12.257351875305176
    9. ',input' → logprob: -12.507351875305176
    10. '.stdin' → logprob: -12.507351875305176

Token 81: ' (' (ID: 350)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.004920631647109985
    2. ' stdin' → logprob: -5.379920482635498
    3. '(stdin' → logprob: -8.129920959472656
    4. ' ' → logprob: -12.629920959472656
    5. '   ' → logprob: -13.879920959472656
    6. '  ' → logprob: -14.254920959472656
    7. '.stdin' → logprob: -14.629920959472656
    8. 'st' → logprob: -15.254920959472656
    9. 'stdout' → logprob: -15.879920959472656
    10. '    ' → logprob: -16.504920959472656

Token 82: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.000892759533599019
    2. '(stdin' → logprob: -7.375892639160156
    3. ' stdin' → logprob: -8.250892639160156
    4. '.stdin' → logprob: -13.000892639160156
    5. 'st' → logprob: -13.875892639160156
    6. ' ' → logprob: -14.375892639160156
    7. '   ' → logprob: -15.000892639160156
    8. 'stdout' → logprob: -15.375892639160156
    9. '  ' → logprob: -15.375892639160156
    10. '))' → logprob: -16.250892639160156

Token 83: '.readline' (ID: 74673)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.24127595126628876
    2. '()' → logprob: -3.1162760257720947
    3. '().' → logprob: -3.1162760257720947
    4. ')):' → logprob: -3.2412760257720947
    5. '))' → logprob: -3.3662760257720947
    6. '.readline' → logprob: -3.3662760257720947
    7. '())))' → logprob: -5.366275787353516
    8. '()));' → logprob: -5.491275787353516
    9. '.readlines' → logprob: -5.866275787353516
    10. ')))' → logprob: -6.241275787353516

Token 84: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01661781407892704
    2. 'for' → logprob: -4.516617774963379
    3. ' for' → logprob: -5.891617774963379
    4. '().' → logprob: -6.516617774963379
    5. '()))' → logprob: -8.016617774963379
    6. '())))' → logprob: -8.266617774963379
    7. ')' → logprob: -8.516617774963379
    8. ')))' → logprob: -9.141617774963379
    9. ').' → logprob: -9.891617774963379
    10. '()).' → logprob: -10.016617774963379

Token 85: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05648742616176605
    2. '()))' → logprob: -4.306487560272217
    3. 'for' → logprob: -4.681487560272217
    4. '())))' → logprob: -4.681487560272217
    5. ')' → logprob: -4.806487560272217
    6. ')))' → logprob: -5.431487560272217
    7. '()).' → logprob: -5.931487560272217
    8. ' for' → logprob: -6.306487560272217
    9. '().' → logprob: -6.806487560272217
    10. ').' → logprob: -6.931487560272217

Token 86: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021420512348413467
    2. 'range' → logprob: -7.252141952514648
    3. ' range' → logprob: -7.752141952514648
    4. 'in' → logprob: -8.002141952514648
    5. '_range' → logprob: -8.877141952514648
    6. 'Q' → logprob: -9.002141952514648
    7. '()' → logprob: -9.627141952514648
    8. 'i' → logprob: -10.252141952514648
    9. '_N' → logprob: -10.252141952514648
    10. 'R' → logprob: -10.377141952514648

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6212060451507568
    2. 'in' → logprob: -0.8712060451507568
    3. 'range' → logprob: -3.496206045150757
    4. ' range' → logprob: -4.496206283569336
    5. 'Q' → logprob: -6.496206283569336
    6. ' Q' → logprob: -7.996206283569336
    7. ' ' → logprob: -8.121206283569336
    8. ')' → logprob: -8.871206283569336
    9. 'N' → logprob: -9.746206283569336
    10. 'count' → logprob: -9.871206283569336

Token 88: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9026241898536682
    2. 'range' → logprob: -1.1526241302490234
    3. 'R' → logprob: -1.4026241302490234
    4. ' range' → logprob: -3.6526241302490234
    5. ' Q' → logprob: -5.777624130249023
    6. 'N' → logprob: -6.027624130249023
    7. ' R' → logprob: -7.152624130249023
    8. ')' → logprob: -9.277624130249023
    9. 'K' → logprob: -9.652624130249023
    10. '
' → logprob: -9.777624130249023

Token 89: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07242678850889206
    2. ')):' → logprob: -2.8224267959594727
    3. ')))' → logprob: -4.822426795959473
    4. '()))' → logprob: -6.322426795959473
    5. ')' → logprob: -8.197426795959473
    6. '):' → logprob: -8.697426795959473
    7. ')));' → logprob: -10.072426795959473
    8. ' ))' → logprob: -11.072426795959473
    9. '()' → logprob: -11.072426795959473
    10. ')):
' → logprob: -11.572426795959473

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016353088431060314
    2. ')' → logprob: -6.8766350746154785
    3. ':' → logprob: -7.5016350746154785
    4. '):
' → logprob: -10.376635551452637
    5. ' ):' → logprob: -11.751635551452637
    6. ',' → logprob: -12.251635551452637
    7. '():' → logprob: -13.001635551452637
    8. ']:' → logprob: -13.751635551452637
    9. ')):' → logprob: -14.876635551452637
    10. ':)' → logprob: -15.251635551452637

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37950795888900757
    2. ' ' → logprob: -2.1295080184936523
    3. '   ' → logprob: -2.1295080184936523
    4. '<|end|>' → logprob: -3.3795080184936523
    5. ' :' → logprob: -3.8795080184936523
    6. '):' → logprob: -5.379508018493652
    7. '    ' → logprob: -5.629508018493652
    8. ')' → logprob: -6.504508018493652
    9. ',' → logprob: -6.879508018493652
    10. ':
' → logprob: -6.879508018493652

Token 92: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9021899700164795
    2. ' f' → logprob: -1.6521899700164795
    3. 'f' → logprob: -1.7771899700164795
    4. 'for' → logprob: -2.5271899700164795
    5. ' ' → logprob: -3.0271899700164795
    6. 's' → logprob: -3.5271899700164795
    7. ' s' → logprob: -3.7771899700164795
    8. '   ' → logprob: -4.277190208435059
    9. ':' → logprob: -4.527190208435059
    10. 'd' (adapté à ' d') → logprob: -5.152190208435059

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003517894074320793
    2. '[' → logprob: -8.000351905822754
    3. '[I' → logprob: -12.125351905822754
    4. '[N' → logprob: -13.125351905822754
    5. '[len' → logprob: -13.250351905822754
    6. '[s' → logprob: -13.250351905822754
    7. '[R' → logprob: -13.625351905822754
    8. 'i' → logprob: -14.000351905822754
    9. '[int' → logprob: -14.125351905822754
    10. '[a' → logprob: -15.000351905822754

Token 94: '][:' (ID: 63357)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5603025555610657
    2. '][:' → logprob: -1.060302495956421
    3. '].' → logprob: -3.060302495956421
    4. ']' → logprob: -3.810302495956421
    5. ']=' → logprob: -4.810302734375
    6. ']+=' → logprob: -6.435302734375
    7. '|' → logprob: -7.310302734375
    8. '[:' → logprob: -7.560302734375
    9. '][-' → logprob: -7.560302734375
    10. ']|' → logprob: -7.935302734375

Token 95: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05895794928073883
    2. 'int' → logprob: -3.683958053588867
    3. '1' → logprob: -4.058958053588867
    4. 's' → logprob: -4.808958053588867
    5. 'ord' → logprob: -6.183958053588867
    6. 'min' → logprob: -6.433958053588867
    7. 'K' → logprob: -7.183958053588867
    8. '2' → logprob: -7.683958053588867
    9. ' len' → logprob: -7.683958053588867
    10. 'N' → logprob: -8.058958053588867

Token 96: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3306015716807451e-05
    2. 's' → logprob: -11.37501335144043
    3. '(' → logprob: -13.37501335144043
    4. '(d' → logprob: -16.25001335144043
    5. 'd' → logprob: -16.50001335144043
    6. '](' → logprob: -17.37501335144043
    7. ' (' → logprob: -17.50001335144043
    8. ']' → logprob: -17.62501335144043
    9. ')(' → logprob: -17.62501335144043
    10. '(bytes' → logprob: -17.62501335144043

Token 97: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005222494248300791
    2. ')' → logprob: -5.630222320556641
    3. 's' → logprob: -7.380222320556641
    4. ')=' → logprob: -8.00522232055664
    5. ']' → logprob: -8.13022232055664
    6. '())' → logprob: -9.50522232055664
    7. '(s' → logprob: -9.50522232055664
    8. ' )' → logprob: -10.13022232055664
    9. '   ' → logprob: -10.38022232055664
    10. '()]' → logprob: -10.38022232055664

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005803157109767199
    2. ' =' → logprob: -8.250580787658691
    3. '=s' → logprob: -8.625580787658691
    4. '=int' → logprob: -9.875580787658691
    5. '=data' → logprob: -10.500580787658691
    6. '=d' → logprob: -10.625580787658691
    7. '=b' → logprob: -10.875580787658691
    8. '=set' → logprob: -12.875580787658691
    9. '=
' → logprob: -13.125580787658691
    10. 's' → logprob: -13.125580787658691

Token 99: ' map' (ID: 4014)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04575258493423462
    2. ' s' → logprob: -3.42075252532959
    3. 'b' → logprob: -5.29575252532959
    4. 'bytes' → logprob: -5.42075252532959
    5. ' bytes' → logprob: -6.67075252532959
    6. 'list' → logprob: -7.54575252532959
    7. 'byte' → logprob: -8.17075252532959
    8. ' b' → logprob: -8.42075252532959
    9. 'map' → logprob: -8.79575252532959
    10. '{s' → logprob: -10.17075252532959

Token 100: '(int' (ID: 2742)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.0006090328097343445
    2. '(lambda' → logprob: -8.000609397888184
    3. '(' → logprob: -8.375609397888184
    4. '(bytes' → logprob: -10.250609397888184
    5. '(str' → logprob: -12.125609397888184
    6. '(byte' → logprob: -14.125609397888184
    7. 'ord' → logprob: -14.625609397888184
    8. '(int' → logprob: -15.000609397888184
    9. ' ord' → logprob: -15.375609397888184
    10. '(chr' → logprob: -16.250608444213867

Token 101: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.027430281043052673
    2. 's' → logprob: -3.902430295944214
    3. ',' → logprob: -5.402430057525635
    4. '(' → logprob: -6.652430057525635
    5. ' (' → logprob: -8.152430534362793
    6. ')' → logprob: -8.152430534362793
    7. ')(' → logprob: -8.152430534362793
    8. ',s' → logprob: -9.152430534362793
    9. '(d' → logprob: -10.027430534362793
    10. ',(' → logprob: -10.652430534362793

Token 102: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.428806871175766
    2. 's' → logprob: -1.0538069009780884
    3. '(s' → logprob: -10.053807258605957
    4. ')' → logprob: -11.053807258605957
    5. ' list' → logprob: -11.428807258605957
    6. ' map' → logprob: -12.053807258605957
    7. ' bytes' → logprob: -12.178807258605957
    8. 'list' → logprob: -12.303807258605957
    9. ' ' → logprob: -12.303807258605957
    10. 'map' → logprob: -12.678807258605957

Token 103: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32044294476509094
    2. '())' → logprob: -1.3204429149627686
    3. '()' → logprob: -5.945443153381348
    4. '[:-' → logprob: -6.945443153381348
    5. '.strip' → logprob: -6.945443153381348
    6. '().' → logprob: -7.320443153381348
    7. '.split' → logprob: -7.570443153381348
    8. '[' → logprob: -8.195443153381348
    9. '[:' → logprob: -8.445443153381348
    10. '(' → logprob: -8.570443153381348

Token 104: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04175431281328201
    2. '[' → logprob: -4.416754245758057
    3. '
' → logprob: -4.916754245758057
    4. ' ' → logprob: -5.166754245758057
    5. '<|end|>' → logprob: -6.041754245758057
    6. '   ' → logprob: -6.541754245758057
    7. 'd' → logprob: -6.666754245758057
    8. '#' → logprob: -6.791754245758057
    9. 'for' → logprob: -6.791754245758057
    10. ']' → logprob: -6.916754245758057

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01723584346473217
    2. 'i' → logprob: -5.01723575592041
    3. ' ' → logprob: -5.14223575592041
    4. ' _' → logprob: -5.76723575592041
    5. '_' → logprob: -6.89223575592041
    6. ' j' → logprob: -8.64223575592041
    7. ' ' → logprob: -9.39223575592041
    8. '  ' → logprob: -10.14223575592041
    9. ' I' → logprob: -11.14223575592041
    10. ')' → logprob: -11.32973575592041

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16161735355854034
    2. 'in' → logprob: -1.911617398262024
    3. ',' → logprob: -7.286617279052734
    4. '(' → logprob: -8.161617279052734
    5. '+' → logprob: -8.786617279052734
    6. ' ' → logprob: -9.036617279052734
    7. '1' → logprob: -10.036617279052734
    8. '_' → logprob: -10.536617279052734
    9. ' ,' → logprob: -11.786617279052734
    10. '0' → logprob: -11.911617279052734

Token 107: ' R' (ID: 460)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3161134123802185
    2. ' R' → logprob: -1.5661134719848633
    3. ' Q' → logprob: -2.9411134719848633
    4. 'R' → logprob: -5.941113471984863
    5. 'range' → logprob: -5.941113471984863
    6. ' ' → logprob: -6.691113471984863
    7. 'Q' → logprob: -6.816113471984863
    8. ' N' → logprob: -7.066113471984863
    9. ' reversed' → logprob: -8.066113471984863
    10. '(' → logprob: -8.816113471984863

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017175428802147508
    2. '(N' → logprob: -6.376717567443848
    3. '1' → logprob: -11.376717567443848
    4. ' (' → logprob: -14.126717567443848
    5. '(len' → logprob: -14.376717567443848
    6. '(n' → logprob: -14.501717567443848
    7. '(
' → logprob: -14.751717567443848
    8. 'N' → logprob: -15.001717567443848
    9. '(i' → logprob: -15.376717567443848
    10. '(K' → logprob: -15.501717567443848

Token 109: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5853931903839111
    2. '1' → logprob: -0.8353931903839111
    3. '(N' → logprob: -5.210392951965332
    4. 'N' → logprob: -5.585392951965332
    5. ' ' → logprob: -9.335392951965332
    6. ' N' → logprob: -10.835392951965332
    7. ' (' → logprob: -10.960392951965332
    8. '(
' → logprob: -11.272892951965332
    9. '2' → logprob: -11.585392951965332
    10. '10' → logprob: -12.835392951965332

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000261216628132388
    2. ',N' → logprob: -8.750261306762695
    3. ' ,' → logprob: -9.250261306762695
    4. ',
' → logprob: -12.375261306762695
    5. ',n' → logprob: -13.500261306762695
    6. ' ' → logprob: -15.750261306762695
    7. '(N' → logprob: -15.875261306762695
    8. 'N' → logprob: -16.125261306762695
    9. ' N' → logprob: -16.250261306762695
    10. ',

' → logprob: -16.250261306762695

Token 111: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013298832345753908
    2. ' N' → logprob: -6.6263298988342285
    3. 'len' → logprob: -12.75132942199707
    4. 'n' → logprob: -14.87632942199707
    5. ' ' → logprob: -15.00132942199707
    6. '(N' → logprob: -15.75132942199707
    7. '  ' → logprob: -16.62632942199707
    8. '1' → logprob: -16.87632942199707
    9. '	N' → logprob: -17.00132942199707
    10. ')' → logprob: -17.00132942199707

Token 112: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3515818417072296
    2. '):' → logprob: -1.4765818119049072
    3. ' +' → logprob: -2.7265818119049072
    4. ')' → logprob: -6.851582050323486
    5. '):
' → logprob: -7.351582050323486
    6. ',' → logprob: -7.601582050323486
    7. ' ):' → logprob: -8.476581573486328
    8. ' ' → logprob: -10.101581573486328
    9. '(' → logprob: -10.726581573486328
    10. '1' → logprob: -11.226581573486328

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010336418636143208
    2. ' ' → logprob: -6.876033782958984
    3. '2' → logprob: -15.501033782958984
    4. ')' → logprob: -15.501033782958984
    5. '   ' → logprob: -16.001033782958984
    6. '```' → logprob: -16.126033782958984
    7. ',' → logprob: -16.376033782958984
    8. '(' → logprob: -16.751033782958984
    9. 'i' → logprob: -17.501033782958984
    10. '  ' → logprob: -17.626033782958984

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001596771035110578
    2. ' ' → logprob: -8.75015926361084
    3. ')' → logprob: -14.50015926361084
    4. '   ' → logprob: -15.12515926361084
    5. '```' → logprob: -16.000160217285156
    6. '2' → logprob: -16.125160217285156
    7. 'i' → logprob: -16.375160217285156
    8. '  ' → logprob: -16.875160217285156
    9. '``' → logprob: -17.750160217285156
    10. 'N' → logprob: -17.812660217285156

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015121236210688949
    2. ')' → logprob: -6.751512050628662
    3. ':' → logprob: -9.00151252746582
    4. ',' → logprob: -9.25151252746582
    5. '):
' → logprob: -9.25151252746582
    6. ' ):' → logprob: -10.75151252746582
    7. '+' → logprob: -13.62651252746582
    8. ']:' → logprob: -13.62651252746582
    9. '):
' → logprob: -14.12651252746582
    10. '():' → logprob: -14.75151252746582

Token 116: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19321417808532715
    2. '   ' → logprob: -2.568214178085327
    3. ' f' → logprob: -2.568214178085327
    4. 'for' → logprob: -4.068214416503906
    5. ' ' → logprob: -7.068214416503906
    6. ' if' → logprob: -7.318214416503906
    7. 'f' → logprob: -7.318214416503906
    8. ' j' → logprob: -7.443214416503906
    9. ' i' → logprob: -7.943214416503906
    10. ' d' → logprob: -8.068214416503906

Token 117: ' fi' (ID: 6134)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7548073530197144
    2. ' for' → logprob: -1.1298073530197144
    3. ' f' → logprob: -2.629807472229004
    4. 'f' → logprob: -2.754807472229004
    5. '   ' → logprob: -3.754807472229004
    6. 'j' → logprob: -4.254807472229004
    7. ' j' → logprob: -4.629807472229004
    8. 'm' → logprob: -5.879807472229004
    9. 's' → logprob: -6.254807472229004
    10. 'd' → logprob: -6.254807472229004

Token 118: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.974743127822876
    2. '[:]' → logprob: -1.224743127822876
    3. '=' → logprob: -2.224743127822876
    4. ' =' → logprob: -2.474743127822876
    5. '[i' → logprob: -2.974743127822876
    6. '[:' → logprob: -3.849743127822876
    7. 'x' → logprob: -4.724742889404297
    8. '[]' → logprob: -4.974742889404297
    9. 'f' → logprob: -5.099742889404297
    10. '[j' → logprob: -5.724742889404297

Token 119: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03383322432637215
    2. ' f' → logprob: -4.533833026885986
    3. 'd' → logprob: -4.658833026885986
    4. 'byte' → logprob: -5.283833026885986
    5. 'i' → logprob: -6.533833026885986
    6. 'R' → logprob: -6.908833026885986
    7. '[' → logprob: -7.158833026885986
    8. '[]' → logprob: -7.658833026885986
    9. '1' → logprob: -7.658833026885986
    10. '0' → logprob: -7.783833026885986

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.750005722045898
    3. 'i' → logprob: -13.750005722045898
    4. '[N' → logprob: -13.875005722045898
    5. '[I' → logprob: -15.250005722045898
    6. '[-' → logprob: -16.7500057220459
    7. '(i' → logprob: -17.0000057220459
    8. ' i' → logprob: -17.1250057220459
    9. '[
' → logprob: -17.1250057220459
    10. '[R' → logprob: -17.3750057220459

Token 121: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05933918431401253
    2. ']' → logprob: -3.0593392848968506
    3. ' -' → logprob: -4.6843390464782715
    4. '1' → logprob: -7.9343390464782715
    5. '][:' → logprob: -8.55933952331543
    6. '])' → logprob: -8.68433952331543
    7. '-i' → logprob: -8.68433952331543
    8. '][' → logprob: -9.43433952331543
    9. ']
' → logprob: -9.43433952331543
    10. ' ]' → logprob: -10.18433952331543

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031540848314762115
    2. ' for' → logprob: -4.031540870666504
    3. 'for' → logprob: -5.031540870666504
    4. 'fi' → logprob: -6.031540870666504
    5. 'di' → logprob: -7.531540870666504
    6. 'j' → logprob: -8.031540870666504
    7. 'f' → logprob: -8.031540870666504
    8. 'si' → logprob: -8.156540870666504
    9. '    
' → logprob: -8.281540870666504
    10. ' f' → logprob: -8.531540870666504

Token 123: ' for' (ID: 395)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.47750404477119446
    2. 'pi' → logprob: -1.477504014968872
    3. 'fi' → logprob: -2.852504014968872
    4. 'for' (adapté à ' for') → logprob: -3.352504014968872
    5. 'd' → logprob: -3.602504014968872
    6. 'si' → logprob: -4.352504253387451
    7. 'dj' → logprob: -5.602504253387451
    8. 'fj' → logprob: -6.352504253387451
    9. ' di' → logprob: -6.477504253387451
    10. 'dpi' → logprob: -6.727504253387451

Token 124: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6963064670562744
    2. 'j' → logprob: -1.4463064670562744
    3. ' b' → logprob: -2.3213064670562744
    4. ' x' → logprob: -3.4463064670562744
    5. 'x' → logprob: -3.5713064670562744
    6. 'b' → logprob: -3.6963064670562744
    7. ' k' → logprob: -3.9463064670562744
    8. 'k' → logprob: -4.196306228637695
    9. ' mask' → logprob: -4.446306228637695
    10. ' s' → logprob: -5.321306228637695

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2527329623699188
    2. 'in' → logprob: -1.5027329921722412
    3. '<|end|>' → logprob: -7.627732753753662
    4. ' ' → logprob: -8.12773323059082
    5. '<|end|>' → logprob: -12.25273323059082
    6. '  ' → logprob: -12.25273323059082
    7. ',' → logprob: -12.62773323059082
    8. '	in' → logprob: -13.12773323059082
    9. '0' → logprob: -14.00273323059082
    10. ' =' → logprob: -14.00273323059082

Token 126: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.22372876107692719
    2. 'range' → logprob: -1.8487287759780884
    3. ' range' → logprob: -3.348728656768799
    4. ' R' → logprob: -5.348728656768799
    5. 'Q' → logprob: -5.848728656768799
    6. 'r' → logprob: -9.973729133605957
    7. '(range' → logprob: -10.098729133605957
    8. 'd' → logprob: -10.223729133605957
    9. ' ' → logprob: -10.473729133605957
    10. ' Q' → logprob: -11.098729133605957

Token 127: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08787064254283905
    2. '(' → logprob: -2.7128705978393555
    3. '(len' → logprob: -4.3378705978393555
    4. '(K' → logprob: -5.9628705978393555
    5. '(j' → logprob: -7.3378705978393555
    6. '(N' → logprob: -7.5878705978393555
    7. '((' → logprob: -8.087870597839355
    8. '(d' → logprob: -8.712870597839355
    9. '1' → logprob: -8.962870597839355
    10. '(f' → logprob: -8.962870597839355

Token 128: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7423482537269592
    2. '(' → logprob: -0.9923482537269592
    3. '(len' → logprob: -2.2423481941223145
    4. '1' → logprob: -3.4923481941223145
    5. 'i' → logprob: -4.8673481941223145
    6. '(K' → logprob: -5.7423481941223145
    7. 'len' → logprob: -6.1173481941223145
    8. '(N' → logprob: -6.9923481941223145
    9. '((' → logprob: -7.3673481941223145
    10. '(j' → logprob: -7.8673481941223145

Token 129: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009395253844559193
    2. ',i' → logprob: -5.009395122528076
    3. ' ,' → logprob: -6.009395122528076
    4. ',K' → logprob: -9.634395599365234
    5. '<<' → logprob: -10.134395599365234
    6. '(i' → logprob: -10.634395599365234
    7. ' i' → logprob: -11.009395599365234
    8. ',len' → logprob: -11.259395599365234
    9. ' ' → logprob: -11.384395599365234
    10. 'i' → logprob: -11.759395599365234

Token 130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5609843730926514
    2. '(i' → logprob: -1.3109843730926514
    3. 'K' → logprob: -2.4359843730926514
    4. '(K' → logprob: -3.6859843730926514
    5. 'j' → logprob: -3.8109843730926514
    6. 'len' → logprob: -5.4359846115112305
    7. '(len' → logprob: -5.6859846115112305
    8. '(j' → logprob: -5.8109846115112305
    9. ' (' → logprob: -5.8109846115112305
    10. 'd' → logprob: -6.3109846115112305

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13995277881622314
    2. '):
' → logprob: -2.3899526596069336
    3. '()' → logprob: -3.7649526596069336
    4. '(i' → logprob: -5.139952659606934
    5. ')' → logprob: -5.514952659606934
    6. '   ' → logprob: -6.639952659606934
    7. '()):
' → logprob: -6.639952659606934
    8. '(' → logprob: -6.764952659606934
    9. ' ):' → logprob: -7.389952659606934
    10. '       ' → logprob: -8.139952659606934

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006635082419961691
    2. ' if' → logprob: -6.8816351890563965
    3. '<|end|>' → logprob: -6.8816351890563965
    4. ' ' → logprob: -7.2566351890563965
    5. '   ' → logprob: -7.6316351890563965
    6. '_' → logprob: -7.8816351890563965
    7. 's' → logprob: -8.006634712219238
    8. 'if' → logprob: -8.256634712219238
    9. 'fi' → logprob: -8.256634712219238
    10. '0' → logprob: -8.381634712219238

Token 133: ' t' (ID: 260)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.013252931647002697
    2. 'if' → logprob: -5.2632527351379395
    3. '   ' → logprob: -6.3882527351379395
    4. ' fi' → logprob: -6.5132527351379395
    5. '0' → logprob: -6.6382527351379395
    6. 'f' → logprob: -6.6382527351379395
    7. ' if' → logprob: -8.138253211975098
    8. '       ' → logprob: -8.388253211975098
    9. 'x' → logprob: -8.388253211975098
    10. 'k' → logprob: -8.513253211975098

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43817684054374695
    2. '=' → logprob: -1.1881768703460693
    3. ' ' → logprob: -3.8131768703460693
    4. 'f' → logprob: -4.31317663192749
    5. 's' → logprob: -5.18817663192749
    6. 'if' → logprob: -6.56317663192749
    7. '0' → logprob: -6.81317663192749
    8. ',' → logprob: -7.06317663192749
    9. 'o' → logprob: -7.18817663192749
    10. '_' → logprob: -7.18817663192749

Token 135: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9661060571670532
    2. 'j' → logprob: -1.7161060571670532
    3. '(j' → logprob: -2.3411059379577637
    4. '0' → logprob: -2.5911059379577637
    5. 'fi' → logprob: -2.9661059379577637
    6. 'f' → logprob: -3.2161059379577637
    7. '(d' → logprob: -3.2161059379577637
    8. ' (' → logprob: -3.3411059379577637
    9. '(i' → logprob: -3.5911059379577637
    10. '(' → logprob: -4.216105937957764

Token 136: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14848460257053375
    2. ' j' → logprob: -2.148484706878662
    3. '(j' → logprob: -4.398484706878662
    4. ' (' → logprob: -5.523484706878662
    5. 'f' → logprob: -6.398484706878662
    6. 'd' → logprob: -6.523484706878662
    7. ' d' → logprob: -8.023484230041504
    8. ' f' → logprob: -8.523484230041504
    9. ' ' → logprob: -8.523484230041504
    10. '(' → logprob: -8.898484230041504

Token 137: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.38393434882164
    2. '&' → logprob: -1.8839343786239624
    3. '^' → logprob: -2.258934259414673
    4. '-' → logprob: -3.383934259414673
    5. ' ^' → logprob: -5.133934497833252
    6. ' &' → logprob: -5.133934497833252
    7. ' >>' → logprob: -5.758934497833252
    8. ')' → logprob: -6.258934497833252
    9. ' -' → logprob: -6.383934497833252
    10. '<<' → logprob: -6.383934497833252

Token 138: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08685377240180969
    2. '1' → logprob: -2.5868537425994873
    3. '(' → logprob: -5.086853981018066
    4. ' (' → logprob: -7.336853981018066
    5. 'i' → logprob: -7.961853981018066
    6. '(j' → logprob: -8.086853981018066
    7. '0' → logprob: -8.586853981018066
    8. '(K' → logprob: -9.586853981018066
    9. ' ' → logprob: -10.086853981018066
    10. '   ' → logprob: -10.336853981018066

Token 139: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04764169082045555
    2. '1' → logprob: -3.4226417541503906
    3. 'i' → logprob: -4.422641754150391
    4. '(' → logprob: -6.547641754150391
    5. ' (' → logprob: -8.42264175415039
    6. '0' → logprob: -8.54764175415039
    7. ' i' → logprob: -11.42264175415039
    8. '   ' → logprob: -11.67264175415039
    9. ')' → logprob: -11.92264175415039
    10. ' ' → logprob: -12.04764175415039

Token 140: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10239257663488388
    2. '1' → logprob: -2.4773926734924316
    3. ' -' → logprob: -4.852392673492432
    4. ' ' → logprob: -5.227392673492432
    5. ')' → logprob: -9.352392196655273
    6. '   ' → logprob: -9.977392196655273
    7. '  ' → logprob: -11.352392196655273
    8. '0' → logprob: -11.852392196655273
    9. '−' → logprob: -11.977392196655273
    10. '2' → logprob: -12.602392196655273

Token 141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -15.750031471252441
    4. '   ' → logprob: -16.500032424926758
    5. '```' → logprob: -17.625032424926758
    6. ')' → logprob: -17.750032424926758
    7. '
' → logprob: -18.000032424926758
    8. '0' → logprob: -18.187532424926758
    9. '-' → logprob: -18.312532424926758
    10. 'i' → logprob: -18.437532424926758

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -14.125017166137695
    4. '   ' → logprob: -17.125017166137695
    5. '
' → logprob: -17.375017166137695
    6. '```' → logprob: -17.687517166137695
    7. ')' → logprob: -17.875017166137695
    8. '...' → logprob: -18.250017166137695
    9. '۱' → logprob: -18.312517166137695
    10. '11' → logprob: -18.437517166137695

Token 143: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23029093444347382
    2. '))' → logprob: -1.6052908897399902
    3. '1' → logprob: -5.98029088973999
    4. ')&' → logprob: -6.23029088973999
    5. ' )' → logprob: -8.480291366577148
    6. ' ' → logprob: -9.605291366577148
    7. '&' → logprob: -10.355291366577148
    8. ' ))' → logprob: -10.855291366577148
    9. '0' → logprob: -11.480291366577148
    10. '```' → logprob: -12.480291366577148

Token 144: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4874255359172821
    2. '^' → logprob: -0.9874255657196045
    3. ')' → logprob: -5.487425327301025
    4. ' ^' → logprob: -5.737425327301025
    5. ' &' → logprob: -6.362425327301025
    6. '1' → logprob: -6.737425327301025
    7. ')&' → logprob: -6.987425327301025
    8. '+' → logprob: -7.237425327301025
    9. '|' → logprob: -7.987425327301025
    10. ')^' → logprob: -8.362425804138184

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000627014203928411
    2. ' ' → logprob: -7.375627040863037
    3. '0' → logprob: -15.875626564025879
    4. '' → logprob: -17.000627517700195
    5. '   ' → logprob: -17.125627517700195
    6. '01' → logprob: -17.125627517700195
    7. '`' → logprob: -17.313127517700195
    8. '  ' → logprob: -17.688127517700195
    9. '3' → logprob: -18.063127517700195
    10. ' ' → logprob: -18.063127517700195

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '0' → logprob: -16.12506675720215
    4. '01' → logprob: -17.25006675720215
    5. '' → logprob: -17.25006675720215
    6. 'j' → logprob: -17.50006675720215
    7. '(' → logprob: -17.50006675720215
    8. '{' → logprob: -17.50006675720215
    9. '   ' → logprob: -17.81256675720215
    10. '3' → logprob: -17.87506675720215

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2909322679042816
    2. '
' → logprob: -1.540932297706604
    3. '=' → logprob: -4.6659321784973145
    4. ')' → logprob: -4.9159321784973145
    5. 'd' → logprob: -5.6659321784973145
    6. 'fi' → logprob: -5.9159321784973145
    7. 'f' → logprob: -6.1659321784973145
    8. '^' → logprob: -6.2909321784973145
    9. '+' → logprob: -6.5409321784973145
    10. '<|end|>' → logprob: -6.6659321784973145

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020224066451191902
    2. '<|end|>' → logprob: -4.645224094390869
    3. '=' → logprob: -5.770224094390869
    4. '+' → logprob: -6.895224094390869
    5. '0' → logprob: -7.145224094390869
    6. '        
' → logprob: -7.270224094390869
    7. '
' → logprob: -7.520224094390869
    8. ' =' → logprob: -7.645224094390869
    9. 's' → logprob: -7.770224094390869
    10. ',' → logprob: -7.895224094390869

Token 149: ' r' (ID: 428)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.15713083744049072
    2. ' fi' → logprob: -2.157130718231201
    3. 'f' → logprob: -4.657130718231201
    4. ' f' → logprob: -4.657130718231201
    5. '0' → logprob: -6.157130718231201
    6. ' ' → logprob: -6.282130718231201
    7. 'd' → logprob: -6.782130718231201
    8. '1' → logprob: -7.157130718231201
    9. '       ' → logprob: -7.157130718231201
    10. ' d' → logprob: -7.532130718231201

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2927245795726776
    2. ' =' → logprob: -1.417724609375
    3. 'e' → logprob: -5.667724609375
    4. ' ' → logprob: -5.792724609375
    5. 'f' → logprob: -6.542724609375
    6. 'ight' → logprob: -6.667724609375
    7. 'a' → logprob: -8.292724609375
    8. '=f' → logprob: -8.667724609375
    9. 'o' → logprob: -9.167724609375
    10. 'c' → logprob: -9.292724609375

Token 151: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7668114304542542
    2. ' f' → logprob: -1.2668113708496094
    3. 'fi' → logprob: -2.6418113708496094
    4. 'd' → logprob: -3.1418113708496094
    5. ' d' → logprob: -3.2668113708496094
    6. ' (' → logprob: -3.8918113708496094
    7. 'j' → logprob: -3.8918113708496094
    8. '0' → logprob: -4.141811370849609
    9. ' fi' → logprob: -4.641811370849609
    10. ' j' → logprob: -4.641811370849609

Token 152: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6921675205230713
    2. 'fi' → logprob: -1.9421675205230713
    3. '(j' → logprob: -2.4421675205230713
    4. 'd' → logprob: -2.9421675205230713
    5. 'j' → logprob: -3.0671675205230713
    6. ' f' → logprob: -3.1921675205230713
    7. '(f' → logprob: -3.6921675205230713
    8. ' (' → logprob: -4.067167282104492
    9. '(fi' → logprob: -4.192167282104492
    10. '(d' → logprob: -4.442167282104492

Token 153: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6194526553153992
    2. '       ' → logprob: -0.8694526553153992
    3. '+' → logprob: -4.494452476501465
    4. 'if' → logprob: -4.744452476501465
    5. '<|end|>' → logprob: -4.994452476501465
    6. '           ' → logprob: -5.619452476501465
    7. '
' → logprob: -5.869452476501465
    8. ' ' → logprob: -6.244452476501465
    9. ' +' → logprob: -6.494452476501465
    10. ' for' → logprob: -6.869452476501465

Token 155: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27562078833580017
    2. ' for' → logprob: -1.6506208181381226
    3. 'if' → logprob: -3.525620698928833
    4. ' if' → logprob: -4.150620937347412
    5. 'while' (adapté à ' while') → logprob: -6.775620937347412
    6. '<|end|>' → logprob: -6.900620937347412
    7. '       ' → logprob: -7.150620937347412
    8. ' while' → logprob: -8.025620460510254
    9. ' ' → logprob: -8.525620460510254
    10. '
' → logprob: -9.525620460510254

Token 156: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16991882026195526
    2. 'j' → logprob: -2.4199187755584717
    3. ' r' → logprob: -3.5449187755584717
    4. 't' → logprob: -4.419919013977051
    5. ' j' → logprob: -5.044919013977051
    6. '(j' → logprob: -5.294919013977051
    7. ' (' → logprob: -5.669919013977051
    8. '(' → logprob: -5.919919013977051
    9. ' t' → logprob: -6.169919013977051
    10. '(r' → logprob: -6.294919013977051

Token 157: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31762951612472534
    2. '<' → logprob: -1.4426295757293701
    3. ' <=' → logprob: -4.192629337310791
    4. '<=' → logprob: -4.817629337310791
    5. '<len' → logprob: -5.442629337310791
    6. ' ' → logprob: -6.067629337310791
    7. '<|end|>' → logprob: -6.067629337310791
    8. '(' → logprob: -8.06762981414795
    9. '+' → logprob: -8.31762981414795
    10. '<n' → logprob: -8.31762981414795

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4005039930343628
    2. '(' → logprob: -1.4005039930343628
    3. '(i' → logprob: -3.1505041122436523
    4. '1' → logprob: -3.5255041122436523
    5. 'len' → logprob: -5.775504112243652
    6. 'K' → logprob: -5.900504112243652
    7. ' (' → logprob: -6.275504112243652
    8. ' i' → logprob: -6.525504112243652
    9. ' ' → logprob: -7.650504112243652
    10. '(len' → logprob: -7.775504112243652

Token 159: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14694182574748993
    2. 'and' → logprob: -2.021941900253296
    3. ':' → logprob: -5.646941661834717
    4. ':
' → logprob: -7.646941661834717
    5. '<|end|>' → logprob: -8.771942138671875
    6. ' :' → logprob: -10.396942138671875
    7. ' ' → logprob: -10.521942138671875
    8. '<|end|>' → logprob: -10.896942138671875
    9. ' :
' → logprob: -12.021942138671875
    10. '-' → logprob: -13.021942138671875

Token 160: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3391382396221161
    2. '(((' → logprob: -2.8391382694244385
    3. '(d' → logprob: -3.0891382694244385
    4. 't' → logprob: -3.4641382694244385
    5. '(t' → logprob: -3.4641382694244385
    6. 'not' → logprob: -3.5891382694244385
    7. 'd' → logprob: -3.5891382694244385
    8. ' not' → logprob: -3.7141382694244385
    9. '(j' → logprob: -3.8391382694244385
    10. ' ((' → logprob: -5.464138031005859

Token 161: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5043331384658813
    2. '(j' → logprob: -1.0043331384658813
    3. 't' → logprob: -4.629333019256592
    4. '((' → logprob: -4.754333019256592
    5. '(t' → logprob: -5.754333019256592
    6. ' j' → logprob: -5.879333019256592
    7. ' (' → logprob: -6.504333019256592
    8. 'd' → logprob: -6.754333019256592
    9. 'f' → logprob: -7.379333019256592
    10. 'fi' → logprob: -7.504333019256592

Token 162: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.37234336137771606
    2. ' >>' → logprob: -1.4973433017730713
    3. ' &' → logprob: -2.4973433017730713
    4. '&' → logprob: -5.74734354019165
    5. '>>(' → logprob: -7.12234354019165
    6. ')' → logprob: -7.87234354019165
    7. ' ' → logprob: -8.622343063354492
    8. '   ' → logprob: -10.122343063354492
    9. ' ^' → logprob: -10.247343063354492
    10. '&r' → logprob: -10.497343063354492

Token 163: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003356420435011387
    2. ' r' → logprob: -6.253356456756592
    3. '(r' → logprob: -6.628356456756592
    4. ' (' → logprob: -10.003355979919434
    5. '(' → logprob: -10.378355979919434
    6. '(i' → logprob: -11.128355979919434
    7. 'i' → logprob: -12.628355979919434
    8. '(N' → logprob: -12.628355979919434
    9. ' ' → logprob: -13.378355979919434
    10. '(M' → logprob: -14.003355979919434

Token 164: 'i' (ID: 72)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002469113329425454
    2. '(r' → logprob: -6.877469062805176
    3. 'i' → logprob: -7.127469062805176
    4. '(i' → logprob: -7.877469062805176
    5. ' r' → logprob: -8.627469062805176
    6. '(' → logprob: -10.627469062805176
    7. '(N' → logprob: -11.002469062805176
    8. ')' → logprob: -11.502469062805176
    9. ' (' → logprob: -11.627469062805176
    10. '   ' → logprob: -12.502469062805176

Token 165: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12377957254648209
    2. ' -' → logprob: -2.498779535293579
    3. '1' → logprob: -3.748779535293579
    4. 'r' → logprob: -4.748779773712158
    5. ')' → logprob: -7.248779773712158
    6. '-r' → logprob: -7.498779773712158
    7. ' ' → logprob: -7.998779773712158
    8. ' r' → logprob: -8.998779296875
    9. '   ' → logprob: -9.123779296875
    10. '
' → logprob: -9.873779296875

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12751120328903198
    2. 'r' → logprob: -2.1275112628936768
    3. '2' → logprob: -8.252511024475098
    4. ' r' → logprob: -8.877511024475098
    5. ' ' → logprob: -9.377511024475098
    6. '(' → logprob: -10.627511024475098
    7. '(r' → logprob: -11.190011024475098
    8. '   ' → logprob: -11.315011024475098
    9. '0' → logprob: -11.815011024475098
    10. ')' → logprob: -11.815011024475098

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02353673428297043
    2. 'r' → logprob: -3.7735366821289062
    3. '2' → logprob: -8.773536682128906
    4. ' ' → logprob: -10.273536682128906
    5. ' r' → logprob: -10.523536682128906
    6. ')' → logprob: -10.898536682128906
    7. '   ' → logprob: -11.461036682128906
    8. '           ' → logprob: -11.711036682128906
    9. '(' → logprob: -12.086036682128906
    10. '0' → logprob: -12.211036682128906

Token 168: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4636490046977997
    2. '-' → logprob: -1.213649034500122
    3. '-r' → logprob: -3.088649034500122
    4. '))' → logprob: -3.838649034500122
    5. ' -' → logprob: -5.588648796081543
    6. 'r' → logprob: -6.713648796081543
    7. ')&' → logprob: -7.338648796081543
    8. '+' → logprob: -7.838648796081543
    9. '-i' → logprob: -8.338648796081543
    10. '1' → logprob: -8.838648796081543

Token 169: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018792888149619102
    2. '1' → logprob: -4.268793106079102
    3. ' r' → logprob: -5.393793106079102
    4. ' ' → logprob: -10.518793106079102
    5. ')' → logprob: -11.018793106079102
    6. '(r' → logprob: -11.768793106079102
    7. '(' → logprob: -11.893793106079102
    8. ' (' → logprob: -12.768793106079102
    9. '	r' → logprob: -12.768793106079102
    10. '
' → logprob: -13.018793106079102

Token 170: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006268258672207594
    2. '))' → logprob: -5.38126802444458
    3. ' )' → logprob: -7.13126802444458
    4. ')&' → logprob: -7.13126802444458
    5. '+' → logprob: -11.256268501281738
    6. '   ' → logprob: -12.131268501281738
    7. '&' → logprob: -12.256268501281738
    8. ' ))' → logprob: -13.006268501281738
    9. ')))' → logprob: -13.131268501281738
    10. ' ' → logprob: -13.131268501281738

Token 171: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03586025908589363
    2. ' )' → logprob: -4.035860061645508
    3. ')==' → logprob: -4.410860061645508
    4. ')&' → logprob: -6.160860061645508
    5. ' &' → logprob: -7.035860061645508
    6. '==' → logprob: -7.285860061645508
    7. '&' → logprob: -7.410860061645508
    8. ' ==' → logprob: -7.535860061645508
    9. ')!=' → logprob: -8.285860061645508
    10. ' ^' → logprob: -9.410860061645508

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018043875694274902
    2. ' ' → logprob: -4.6430439949035645
    3. 't' → logprob: -4.8930439949035645
    4. ' t' → logprob: -7.7680439949035645
    5. 'r' → logprob: -8.393043518066406
    6. '7' → logprob: -10.643043518066406
    7. ' r' → logprob: -11.018043518066406
    8. ')' → logprob: -11.268043518066406
    9. '3' → logprob: -11.643043518066406
    10. 'd' → logprob: -12.018043518066406

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012010134756565094
    2. 't' → logprob: -4.637010097503662
    3. ' ' → logprob: -6.262010097503662
    4. ' t' → logprob: -9.26201057434082
    5. '3' → logprob: -9.63701057434082
    6. 'r' → logprob: -9.76201057434082
    7. '7' → logprob: -10.13701057434082
    8. '(' → logprob: -10.63701057434082
    9. '(t' → logprob: -11.38701057434082
    10. '31' → logprob: -11.88701057434082

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02955665811896324
    2. ')==' → logprob: -3.6545567512512207
    3. ' )' → logprob: -6.404556751251221
    4. '):' → logprob: -7.404556751251221
    5. '==' → logprob: -8.029556274414062
    6. ')!=' → logprob: -8.404556274414062
    7. '):
' → logprob: -8.529556274414062
    8. ' ==' → logprob: -8.779556274414062
    9. '())' → logprob: -10.904556274414062
    10. '()' → logprob: -11.654556274414062

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5876863598823547
    2. ' ==' → logprob: -0.8376863598823547
    3. '!=' → logprob: -5.087686538696289
    4. ' !=' → logprob: -5.837686538696289
    5. ')' → logprob: -6.337686538696289
    6. ')==' → logprob: -7.837686538696289
    7. '^' → logprob: -9.087686538696289
    8. ' and' → logprob: -9.462686538696289
    9. '==
' → logprob: -9.837686538696289
    10. ' ^' → logprob: -10.087686538696289

Token 176: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2815915644168854
    2. ' t' → logprob: -1.406591534614563
    3. '0' → logprob: -8.156591415405273
    4. '1' → logprob: -9.531591415405273
    5. ' ' → logprob: -10.406591415405273
    6. '(t' → logprob: -10.656591415405273
    7. '	t' → logprob: -12.344091415405273
    8. ' (' → logprob: -12.719091415405273
    9. ')t' → logprob: -13.156591415405273
    10. '`t' → logprob: -13.344091415405273

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04001124948263168
    2. ':
' → logprob: -3.290011167526245
    3. ' and' → logprob: -6.415011405944824
    4. '):' → logprob: -9.415011405944824
    5. '):
' → logprob: -9.415011405944824
    6. '       ' → logprob: -10.540011405944824
    7. '   ' → logprob: -10.540011405944824
    8. '+' → logprob: -10.665011405944824
    9. '           ' → logprob: -10.790011405944824
    10. 'and' → logprob: -11.540011405944824

Token 178: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1769806444644928
    2. ' r' → logprob: -2.30198073387146
    3. '           ' → logprob: -2.92698073387146
    4. '       ' → logprob: -5.176980495452881
    5. '   ' → logprob: -6.551980495452881
    6. '++' → logprob: -7.676980495452881
    7. '+' → logprob: -7.926980495452881
    8. '
' → logprob: -8.426980972290039
    9. '	   ' → logprob: -8.676980972290039
    10. '               ' → logprob: -10.051980972290039

Token 179: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.007127600256353617
    2. ' r' → logprob: -5.00712776184082
    3. '           ' → logprob: -7.88212776184082
    4. '   ' → logprob: -10.75712776184082
    5. '
' → logprob: -11.63212776184082
    6. '       ' → logprob: -12.88212776184082
    7. '               ' → logprob: -14.00712776184082
    8. ' ' → logprob: -14.63212776184082
    9. '```' → logprob: -15.63212776184082
    10. '	r' → logprob: -16.00712776184082

Token 180: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04311075061559677
    2. ' +=' → logprob: -3.1681108474731445
    3. '+' → logprob: -9.793110847473145
    4. '=' → logprob: -9.918110847473145
    5. ']+=' → logprob: -12.793110847473145
    6. '   ' → logprob: -12.918110847473145
    7. ' =' → logprob: -15.918110847473145
    8. '+='' → logprob: -16.043109893798828
    9. '<|end|>' → logprob: -16.168109893798828
    10. '       ' → logprob: -16.293109893798828

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.62520408630371
    4. '0' → logprob: -18.00020408630371
    5. 'r' → logprob: -18.06270408630371
    6. '```' → logprob: -18.31270408630371
    7. '  ' → logprob: -19.37520408630371
    8. ' ' → logprob: -19.87520408630371
    9. '۱' → logprob: -20.37520408630371
    10. '2' → logprob: -20.37520408630371

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.8750057220459
    4. 'r' → logprob: -19.0000057220459
    5. '0' → logprob: -19.1250057220459
    6. '   ' → logprob: -20.4375057220459
    7. '۱' → logprob: -20.8125057220459
    8. '
' → logprob: -20.8750057220459
    9. '１' → logprob: -21.4375057220459
    10. '2' → logprob: -21.5000057220459

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05885107070207596
    2. '<|end|>' → logprob: -2.9338510036468506
    3. '<|end|>' → logprob: -6.30885124206543
    4. '
' → logprob: -7.30885124206543
    5. ' ' → logprob: -7.93385124206543
    6. ')' → logprob: -8.18385124206543
    7. '   ' → logprob: -8.80885124206543
    8. ',' → logprob: -9.43385124206543
    9. '...' → logprob: -9.68385124206543
    10. '        
' → logprob: -9.68385124206543

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05160930007696152
    2. ' if' → logprob: -3.5516092777252197
    3. '   ' → logprob: -5.051609516143799
    4. 'if' → logprob: -5.176609516143799
    5. '<|end|>' → logprob: -5.676609516143799
    6. 'f' → logprob: -7.051609516143799
    7. ' for' → logprob: -7.301609516143799
    8. '           ' → logprob: -7.426609516143799
    9. ' f' → logprob: -7.551609516143799
    10. 's' → logprob: -7.676609516143799

Token 185: ' fi' (ID: 6134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5932096838951111
    2. ' if' → logprob: -1.3432097434997559
    3. 'if' → logprob: -2.718209743499756
    4. ' for' → logprob: -3.718209743499756
    5. ' f' → logprob: -3.718209743499756
    6. '   ' → logprob: -3.843209743499756
    7. 'for' → logprob: -4.218209743499756
    8. 'fi' (adapté à ' fi') → logprob: -4.218209743499756
    9. ' d' → logprob: -5.718209743499756
    10. '           ' → logprob: -5.843209743499756

Token 186: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1048504039645195
    2. '[r' → logprob: -2.7298502922058105
    3. '[' → logprob: -3.8548502922058105
    4. '[:]' → logprob: -4.9798502922058105
    5. '[:' → logprob: -5.4798502922058105
    6. '[i' → logprob: -6.4798502922058105
    7. '[...]' → logprob: -8.979850769042969
    8. '[t' → logprob: -9.479850769042969
    9. '][' → logprob: -10.229850769042969
    10. '[f' → logprob: -10.229850769042969

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09891841560602188
    2. '[j' → logprob: -2.8489184379577637
    3. '[r' → logprob: -4.223918437957764
    4. ']=' → logprob: -4.723918437957764
    5. '[' → logprob: -5.348918437957764
    6. '|' → logprob: -5.848918437957764
    7. '][' → logprob: -6.223918437957764
    8. '[i' → logprob: -7.348918437957764
    9. '^' → logprob: -7.348918437957764
    10. ' ^' → logprob: -7.723918437957764

Token 188: ' =' (ID: 314)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6295298933982849
    2. '=' → logprob: -1.0045299530029297
    3. '[r' → logprob: -2.8795299530029297
    4. ' |=' → logprob: -4.50452995300293
    5. '[' → logprob: -4.62952995300293
    6. '^' → logprob: -4.87952995300293
    7. ' =' → logprob: -5.25452995300293
    8. '+=' → logprob: -5.62952995300293
    9. '[j' → logprob: -6.00452995300293
    10. '=r' → logprob: -6.00452995300293

Token 189: ' r' (ID: 428)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.383527934551239
    2. 'd' → logprob: -2.133527994155884
    3. '1' → logprob: -3.133527994155884
    4. ' fi' → logprob: -3.508527994155884
    5. 'f' → logprob: -3.633527994155884
    6. ' d' → logprob: -3.883527994155884
    7. 'max' → logprob: -4.133527755737305
    8. ' max' → logprob: -4.383527755737305
    9. 'r' → logprob: -4.633527755737305
    10. '0' → logprob: -4.633527755737305

Token 190: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.022351039573550224
    2. 'i' → logprob: -4.022351264953613
    3. ' ' → logprob: -5.647351264953613
    4. '_' → logprob: -8.272351264953613
    5. ' _' → logprob: -8.522351264953613
    6. ' ' → logprob: -9.397351264953613
    7. ' j' → logprob: -9.647351264953613
    8. '_i' → logprob: -10.272351264953613
    9. '  ' → logprob: -11.772351264953613
    10. 'j' → logprob: -12.897351264953613

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11879898607730865
    2. 'in' → logprob: -2.3687989711761475
    3. '(' → logprob: -4.368799209594727
    4. ' range' → logprob: -5.368799209594727
    5. 'range' → logprob: -7.868799209594727
    6. '(range' → logprob: -7.993799209594727
    7. ' ' → logprob: -8.618799209594727
    8. '<|end|>' → logprob: -9.743799209594727
    9. ' (' → logprob: -9.868799209594727
    10. '1' → logprob: -10.618799209594727

Token 194: ' Q' (ID: 1486)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.834269642829895
    2. 'range' → logprob: -1.084269642829895
    3. ' range' → logprob: -1.709269642829895
    4. ' R' → logprob: -3.0842695236206055
    5. 'Q' → logprob: -7.3342695236206055
    6. ' ' → logprob: -8.959269523620605
    7. ' Q' → logprob: -10.209269523620605
    8. '1' → logprob: -11.334269523620605
    9. 'Range' → logprob: -11.334269523620605
    10. '(' → logprob: -11.709269523620605

Token 195: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08284872770309448
    2. ':' → logprob: -3.0828487873077393
    3. '[' → logprob: -3.5828487873077393
    4. '<|end|>' → logprob: -6.20784854888916
    5. ',' → logprob: -6.70784854888916
    6. ' in' → logprob: -7.33284854888916
    7. '(range' → logprob: -7.70784854888916
    8. ' range' → logprob: -8.08284854888916
    9. '1' → logprob: -8.58284854888916
    10. 'range' → logprob: -8.70784854888916

Token 196: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6590954065322876
    2. ' for' → logprob: -1.2840954065322876
    3. '   ' → logprob: -2.534095287322998
    4. 'f' → logprob: -2.909095287322998
    5. ' f' → logprob: -3.159095287322998
    6. 'pass' → logprob: -4.909095287322998
    7. 'print' → logprob: -5.034095287322998
    8. ' pass' → logprob: -5.409095287322998
    9. 'if' → logprob: -5.909095287322998
    10. 'd' → logprob: -6.284095287322998

Token 197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4331018924713135
    2. 'f' → logprob: -1.5581018924713135
    3. 'pass' → logprob: -2.5581018924713135
    4. 'print' → logprob: -3.9331018924713135
    5. ' for' → logprob: -4.058101654052734
    6. 'd' → logprob: -5.183101654052734
    7. '...' → logprob: -5.183101654052734
    8. ' f' → logprob: -5.683101654052734
    9. 'if' → logprob: -5.683101654052734
    10. 'j' → logprob: -5.933101654052734

Token 198: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05503946170210838
    2. ' j' → logprob: -2.930039405822754
    3. 'k' → logprob: -9.305039405822754
    4. 'f' → logprob: -10.680039405822754
    5. 'x' → logprob: -11.680039405822754
    6. 's' → logprob: -12.430039405822754
    7. ' k' → logprob: -12.430039405822754
    8. 'K' → logprob: -12.430039405822754
    9. ' f' → logprob: -12.555039405822754
    10. 'd' → logprob: -12.805039405822754

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033694226294755936
    2. 'in' → logprob: -3.408694267272949
    3. ' ' → logprob: -11.53369426727295
    4. '<|end|>' → logprob: -11.53369426727295
    5. '	in' → logprob: -11.53369426727295
    6. 'In' → logprob: -12.28369426727295
    7. '(' → logprob: -13.53369426727295
    8. '1' → logprob: -13.65869426727295
    9. 'Q' → logprob: -13.78369426727295
    10. 'k' → logprob: -13.78369426727295

Token 200: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06143207848072052
    2. 'Q' → logprob: -3.061432123184204
    3. ' R' → logprob: -5.186431884765625
    4. 'range' → logprob: -5.186431884765625
    5. ' range' → logprob: -6.811431884765625
    6. 'd' → logprob: -8.311431884765625
    7. ' Q' → logprob: -9.061431884765625
    8. 'f' → logprob: -9.686431884765625
    9. 'r' → logprob: -10.936431884765625
    10. 'K' → logprob: -11.311431884765625

Token 201: '(i' (ID: 3649)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.22138719260692596
    2. '(' → logprob: -1.7213871479034424
    3. '(N' → logprob: -4.2213873863220215
    4. '(i' → logprob: -5.5963873863220215
    5. '(k' → logprob: -7.4713873863220215
    6. '(len' → logprob: -7.7213873863220215
    7. '(Q' → logprob: -8.971386909484863
    8. '(min' → logprob: -9.471386909484863
    9. '1' → logprob: -9.971386909484863
    10. '(f' → logprob: -10.221386909484863

Token 202: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.354123592376709
    2. ' +' → logprob: -1.229123592376709
    3. '):' → logprob: -5.354123592376709
    4. ',' → logprob: -8.229124069213867
    5. '   ' → logprob: -8.604124069213867
    6. '):
' → logprob: -8.979124069213867
    7. ' ' → logprob: -9.479124069213867
    8. ')):' → logprob: -9.729124069213867
    9. '1' → logprob: -10.104124069213867
    10. ')' → logprob: -10.229124069213867

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017800184432417154
    2. ' ' → logprob: -6.376780033111572
    3. '(' → logprob: -11.126779556274414
    4. 'K' → logprob: -11.251779556274414
    5. '   ' → logprob: -11.251779556274414
    6. 'N' → logprob: -11.501779556274414
    7. 'i' → logprob: -12.126779556274414
    8. '(N' → logprob: -12.376779556274414
    9. '2' → logprob: -12.626779556274414
    10. '  ' → logprob: -12.876779556274414

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.043078898685053e-05
    2. ' ' → logprob: -9.375090599060059
    3. '2' → logprob: -12.625090599060059
    4. '0' → logprob: -14.250090599060059
    5. '(' → logprob: -14.875090599060059
    6. '   ' → logprob: -15.000090599060059
    7. 'K' → logprob: -15.750090599060059
    8. '  ' → logprob: -16.500089645385742
    9. '-' → logprob: -16.687589645385742
    10. 'i' → logprob: -16.687589645385742

Token 205: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02051643282175064
    2. ',' → logprob: -4.020516395568848
    3. '):
' → logprob: -6.395516395568848
    4. ')' → logprob: -8.145516395568848
    5. ':' → logprob: -8.770516395568848
    6. ' ):' → logprob: -8.770516395568848
    7. ' ,' → logprob: -10.270516395568848
    8. ',n' → logprob: -11.520516395568848
    9. '   ' → logprob: -11.645516395568848
    10. '():' → logprob: -12.145516395568848

Token 206: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008892274461686611
    2. ' N' → logprob: -4.758892059326172
    3. 'min' → logprob: -8.508892059326172
    4. ' min' → logprob: -10.133892059326172
    5. ' ' → logprob: -11.383892059326172
    6. 'Q' → logprob: -11.508892059326172
    7. '   ' → logprob: -12.133892059326172
    8. '	N' → logprob: -12.633892059326172
    9. '  ' → logprob: -14.008892059326172
    10. 'i' → logprob: -14.008892059326172

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868745267391205
    2. ' +' → logprob: -1.1368745565414429
    3. '1' → logprob: -13.636874198913574
    4. ' ' → logprob: -13.886874198913574
    5. '   ' → logprob: -14.636874198913574
    6. ')' → logprob: -14.886874198913574
    7. ' +
' → logprob: -16.13687515258789
    8. '+
' → logprob: -16.26187515258789
    9. '＋' → logprob: -16.88687515258789
    10. '()+' → logprob: -17.01187515258789

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014251544780563563
    2. ' ' → logprob: -8.875142097473145
    3. '2' → logprob: -13.937642097473145
    4. 'N' → logprob: -14.937642097473145
    5. '   ' → logprob: -15.437642097473145
    6. 'Q' → logprob: -15.750142097473145
    7. 'K' → logprob: -15.875142097473145
    8. '```' → logprob: -15.937642097473145
    9. ')' → logprob: -16.62514305114746
    10. 'i' → logprob: -17.00014305114746

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.625011444091797
    4. '2' → logprob: -16.875011444091797
    5. '+' → logprob: -17.500011444091797
    6. '```' → logprob: -17.750011444091797
    7. ')' → logprob: -18.437511444091797
    8. '１' → logprob: -19.000011444091797
    9. '
' → logprob: -19.187511444091797
    10. '`' → logprob: -19.500011444091797

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032712374813854694
    2. '):
' → logprob: -5.753271102905273
    3. ':' → logprob: -10.128271102905273
    4. ')' → logprob: -11.003271102905273
    5. '+' → logprob: -11.003271102905273
    6. '():' → logprob: -11.628271102905273
    7. ' ):' → logprob: -12.503271102905273
    8. ',' → logprob: -12.753271102905273
    9. '):
' → logprob: -13.628271102905273
    10. ']:' → logprob: -14.003271102905273

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06002769246697426
    2. '<|end|>' → logprob: -3.810027599334717
    3. ' if' → logprob: -4.310027599334717
    4. ' for' → logprob: -5.310027599334717
    5. 'if' → logprob: -5.935027599334717
    6. ' f' → logprob: -6.060027599334717
    7. '   ' → logprob: -6.060027599334717
    8. '[' → logprob: -6.435027599334717
    9. 'f' → logprob: -6.560027599334717
    10. ':' → logprob: -6.685027599334717

Token 212: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9690439105033875
    2. 'if' → logprob: -1.7190439701080322
    3. 'f' → logprob: -1.9690439701080322
    4. ' for' → logprob: -2.2190439701080322
    5. ' if' → logprob: -3.2190439701080322
    6. ' f' → logprob: -3.4690439701080322
    7. '   ' → logprob: -3.9690439701080322
    8. 'x' → logprob: -4.469043731689453
    9. 'm' → logprob: -4.469043731689453
    10. 's' → logprob: -4.844043731689453

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5264972448348999
    2. '=' → logprob: -0.9014972448348999
    3. '   ' → logprob: -7.5264973640441895
    4. '=i' → logprob: -7.7764973640441895
    5. 'for' → logprob: -8.026496887207031
    6. '=j' → logprob: -8.151496887207031
    7. '=f' → logprob: -8.276496887207031
    8. ',' → logprob: -8.276496887207031
    9. '=k' → logprob: -8.526496887207031
    10. '=d' → logprob: -8.901496887207031

Token 214: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8615183234214783
    2. 'f' → logprob: -1.736518383026123
    3. 'd' → logprob: -1.861518383026123
    4. 'min' → logprob: -2.611518383026123
    5. 'i' → logprob: -3.611518383026123
    6. '1' → logprob: -4.361518383026123
    7. '(i' → logprob: -4.486518383026123
    8. 'len' → logprob: -4.611518383026123
    9. 'K' → logprob: -4.736518383026123
    10. '(f' → logprob: -4.736518383026123

Token 215: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18123061954975128
    2. ' -' → logprob: -2.1812305450439453
    3. '-i' → logprob: -3.0562305450439453
    4. '-j' → logprob: -6.306230545043945
    5. '-z' → logprob: -6.806230545043945
    6. '-k' → logprob: -6.931230545043945
    7. '^' → logprob: -7.931230545043945
    8. '-f' → logprob: -8.431230545043945
    9. '-bit' → logprob: -8.681230545043945
    10. '-x' → logprob: -8.806230545043945

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20184031128883362
    2. '1' → logprob: -1.7018402814865112
    3. '(i' → logprob: -8.5768404006958
    4. 'd' → logprob: -9.3268404006958
    5. ' i' → logprob: -10.0768404006958
    6. 'k' → logprob: -10.7018404006958
    7. '(' → logprob: -10.8268404006958
    8. '2' → logprob: -11.0768404006958
    9. 'f' → logprob: -11.7018404006958
    10. ' ' → logprob: -11.8268404006958

Token 217: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08175619691610336
    2. ' if' → logprob: -3.456756114959717
    3. '<|end|>' → logprob: -3.956756114959717
    4. ' for' → logprob: -4.956756114959717
    5. '+' → logprob: -5.331756114959717
    6. ',' → logprob: -5.706756114959717
    7. 'if' → logprob: -6.331756114959717
    8. '
' → logprob: -6.456756114959717
    9. 'for' → logprob: -6.706756114959717
    10. '[' → logprob: -6.706756114959717

Token 219: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8032020330429077
    2. 'x' → logprob: -1.9282020330429077
    3. 'if' → logprob: -2.1782021522521973
    4. 'm' (adapté à ' m') → logprob: -2.5532021522521973
    5. 'f' → logprob: -3.0532021522521973
    6. 'fi' → logprob: -4.053202152252197
    7. 'fk' → logprob: -4.053202152252197
    8. 'max' → logprob: -4.303202152252197
    9. 'g' → logprob: -4.428202152252197
    10. 'p' → logprob: -4.803202152252197

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8354053497314453
    2. 'ax' → logprob: -1.2104053497314453
    3. ' =' → logprob: -1.3354053497314453
    4. 'x' → logprob: -6.210405349731445
    5. 'a' → logprob: -6.960405349731445
    6. 'ask' → logprob: -7.585405349731445
    7. ',' → logprob: -7.585405349731445
    8. 'in' → logprob: -9.085405349731445
    9. '=max' → logprob: -9.085405349731445
    10. 'sk' → logprob: -9.335405349731445

Token 221: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11889202892780304
    2. '1' → logprob: -2.993891954421997
    3. 'z' → logprob: -3.243891954421997
    4. '(' → logprob: -4.993892192840576
    5. 'max' → logprob: -5.118892192840576
    6. ' min' → logprob: -6.243892192840576
    7. '(min' → logprob: -6.368892192840576
    8. '(z' → logprob: -6.868892192840576
    9. 'N' → logprob: -6.993892192840576
    10. 'd' → logprob: -6.993892192840576

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05983031541109085
    2. '(' → logprob: -3.6848304271698
    3. 'z' → logprob: -3.9348304271698
    4. 'min' → logprob: -5.059830188751221
    5. 'd' → logprob: -5.809830188751221
    6. 'len' → logprob: -6.684830188751221
    7. 'i' → logprob: -7.309830188751221
    8. 'N' → logprob: -7.559830188751221
    9. 'f' → logprob: -8.059830665588379
    10. 'k' → logprob: -8.559830665588379

Token 223: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.22563734650611877
    2. ' <<' → logprob: -1.6006373167037964
    3. '<' → logprob: -8.600637435913086
    4. ')' → logprob: -10.600637435913086
    5. '<<<' → logprob: -11.975637435913086
    6. '1' → logprob: -12.975637435913086
    7. '<<(' → logprob: -13.100637435913086
    8. ' ' → logprob: -13.600637435913086
    9. '>>' → logprob: -14.350637435913086
    10. '   ' → logprob: -14.600637435913086

Token 224: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011658703908324242
    2. ' z' → logprob: -4.886658668518066
    3. 'i' → logprob: -5.886658668518066
    4. 'k' → logprob: -8.261658668518066
    5. 'min' → logprob: -8.386658668518066
    6. ' ' → logprob: -8.761658668518066
    7. '   ' → logprob: -8.886658668518066
    8. ' i' → logprob: -9.011658668518066
    9. '(z' → logprob: -9.136658668518066
    10. ' min' → logprob: -9.386658668518066

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007189844618551433
    2. ' )' → logprob: -8.00071907043457
    3. ')-' → logprob: -8.12571907043457
    4. '       ' → logprob: -10.00071907043457
    5. '1' → logprob: -11.50071907043457
    6. '   ' → logprob: -12.12571907043457
    7. '-' → logprob: -12.37571907043457
    8. '           ' → logprob: -12.37571907043457
    9. ' ' → logprob: -12.50071907043457
    10. ')
' → logprob: -12.75071907043457

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002841491252183914
    2. ' -' → logprob: -5.877841472625732
    3. '       ' → logprob: -10.62784194946289
    4. ')' → logprob: -12.75284194946289
    5. ')-' → logprob: -13.25284194946289
    6. 'm' → logprob: -13.50284194946289
    7. '
' → logprob: -13.50284194946289
    8. '()-' → logprob: -14.12784194946289
    9. '   ' → logprob: -14.37784194946289
    10. '–' → logprob: -14.37784194946289

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -16.125051498413086
    4. 'z' → logprob: -17.500051498413086
    5. '(' → logprob: -17.500051498413086
    6. '```' → logprob: -18.125051498413086
    7. ' z' → logprob: -18.500051498413086
    8. ' (' → logprob: -18.875051498413086
    9. '           ' → logprob: -19.125051498413086
    10. '<|end|>' → logprob: -19.625051498413086

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.125017166137695
    3. '<|end|>' → logprob: -13.250017166137695
    4. '```' → logprob: -15.000017166137695
    5. '<|end|>' → logprob: -15.937517166137695
    6. '2' → logprob: -16.312517166137695
    7. '(' → logprob: -16.625017166137695
    8. '
' → logprob: -17.312517166137695
    9. 'z' → logprob: -17.375017166137695
    10. ')' → logprob: -17.437517166137695

Token 229: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6736140847206116
    2. ' for' → logprob: -1.0486140251159668
    3. '<|end|>' → logprob: -2.923614025115967
    4. 'for' → logprob: -3.673614025115967
    5. ' f' → logprob: -3.923614025115967
    6. ' if' → logprob: -4.173614025115967
    7. 'f' → logprob: -5.423614025115967
    8. 's' → logprob: -5.798614025115967
    9. ',' → logprob: -6.548614025115967
    10. ' s' → logprob: -6.798614025115967

Token 231: ' dk' (ID: 88261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012769035529345274
    2. 'f' → logprob: -7.501276969909668
    3. 'j' → logprob: -8.126276969909668
    4. 'x' → logprob: -9.251276969909668
    5. ' for' → logprob: -9.626276969909668
    6. '       ' → logprob: -10.751276969909668
    7. 'l' → logprob: -10.751276969909668
    8. 'g' → logprob: -10.876276969909668
    9. 'if' → logprob: -11.001276969909668
    10. 'fi' → logprob: -11.126276969909668

Token 232: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6678684949874878
    2. '=' → logprob: -2.1678686141967773
    3. ' =' → logprob: -2.2928686141967773
    4. 'k' → logprob: -2.5428686141967773
    5. '[j' → logprob: -3.2928686141967773
    6. '[' → logprob: -3.4178686141967773
    7. '[i' → logprob: -3.9178686141967773
    8. ',' → logprob: -3.9178686141967773
    9. '[:]' → logprob: -4.167868614196777
    10. '[:' → logprob: -4.792868614196777

Token 233: ' fi' (ID: 6134)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8759951591491699
    2. 'f' → logprob: -1.00099515914917
    3. ' d' → logprob: -2.25099515914917
    4. 'd' → logprob: -2.87599515914917
    5. 'fk' → logprob: -3.62599515914917
    6. 'dj' → logprob: -4.87599515914917
    7. ' fk' → logprob: -5.37599515914917
    8. '<|end|>' → logprob: -5.62599515914917
    9. 'dk' → logprob: -5.87599515914917
    10. 'df' → logprob: -6.00099515914917

Token 234: '_z' (ID: 18252)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.037188444286584854
    2. ' =' → logprob: -3.4121885299682617
    3. 'k' → logprob: -6.162188529968262
    4. '[k' → logprob: -7.662188529968262
    5. '=k' → logprob: -7.912188529968262
    6. ',' → logprob: -8.787188529968262
    7. '[i' → logprob: -8.912188529968262
    8. '[' → logprob: -9.412188529968262
    9. 'j' → logprob: -10.162188529968262
    10. 'i' → logprob: -10.537188529968262

Token 235: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007688731886446476
    2. ' =' → logprob: -4.882688522338867
    3. 'k' → logprob: -11.257688522338867
    4. 'z' → logprob: -11.382688522338867
    5. '=k' → logprob: -11.507688522338867
    6. '=z' → logprob: -11.757688522338867
    7. ']' → logprob: -11.882688522338867
    8. ',' → logprob: -12.507688522338867
    9. '   ' → logprob: -12.632688522338867
    10. ' ' → logprob: -12.632688522338867

Token 236: ' di' (ID: 1320)
  Prédit: 'fk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fk' → logprob: -0.48524564504623413
    2. 'd' → logprob: -1.985245704650879
    3. 'fi' → logprob: -2.610245704650879
    4. 'f' → logprob: -2.985245704650879
    5. 'fj' → logprob: -3.235245704650879
    6. 'dk' → logprob: -3.610245704650879
    7. 'di' → logprob: -3.985245704650879
    8. 'dj' → logprob: -4.235245704650879
    9. ' fk' → logprob: -4.735245704650879
    10. ' d' → logprob: -5.110245704650879

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20402739942073822
    2. ' =' → logprob: -1.7040274143218994
    3. 'k' → logprob: -7.20402717590332
    4. '=z' → logprob: -8.07902717590332
    5. '=k' → logprob: -8.20402717590332
    6. '=i' → logprob: -8.45402717590332
    7. 'i' → logprob: -8.45402717590332
    8. ',' → logprob: -8.57902717590332
    9. '[z' → logprob: -8.70402717590332
    10. 'z' → logprob: -8.70402717590332

Token 238: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004633995704352856
    2. ' d' → logprob: -5.379633903503418
    3. '   ' → logprob: -12.129633903503418
    4. '	d' → logprob: -12.879633903503418
    5. 'f' → logprob: -13.629633903503418
    6. ' ' → logprob: -13.754633903503418
    7. '  ' → logprob: -14.254633903503418
    8. '    ' → logprob: -14.504633903503418
    9. '=' → logprob: -14.879633903503418
    10. '=d' → logprob: -15.004633903503418

Token 239: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.000497032655403018
    2. 'k' → logprob: -8.375496864318848
    3. '[i' → logprob: -8.500496864318848
    4. ' [' → logprob: -10.250496864318848
    5. '[' → logprob: -12.250496864318848
    6. ',k' → logprob: -12.875496864318848
    7. '   ' → logprob: -13.125496864318848
    8. ',' → logprob: -13.250496864318848
    9. '(k' → logprob: -13.375496864318848
    10. ' k' → logprob: -13.375496864318848

Token 240: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.28459441661834717
    2. '][' → logprob: -1.4095944166183472
    3. '][:' → logprob: -6.409594535827637
    4. ']' → logprob: -6.534594535827637
    5. ':],' → logprob: -9.534594535827637
    6. ']
' → logprob: -10.284594535827637
    7. '-' → logprob: -10.409594535827637
    8. '],[' → logprob: -10.409594535827637
    9. '],
' → logprob: -10.784594535827637
    10. ',' → logprob: -10.784594535827637

Token 241: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8672010898590088
    2. ' f' → logprob: -1.2422010898590088
    3. ' d' → logprob: -1.8672010898590088
    4. 'd' → logprob: -1.9922010898590088
    5. ' ' → logprob: -9.11720085144043
    6. '  ' → logprob: -10.61720085144043
    7. '   ' → logprob: -10.86720085144043
    8. '	f' → logprob: -11.99220085144043
    9. ' ' → logprob: -12.67970085144043
    10. '    ' → logprob: -12.92970085144043

Token 242: '[z' (ID: 105082)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01837199367582798
    2. '[i' → logprob: -4.018372058868408
    3. 'k' → logprob: -8.89337158203125
    4. '[k' → logprob: -10.39337158203125
    5. ' i' → logprob: -10.76837158203125
    6. 'z' → logprob: -11.64337158203125
    7. '```' → logprob: -12.14337158203125
    8. '`' → logprob: -12.51837158203125
    9. '{i' → logprob: -12.89337158203125
    10. '[z' → logprob: -13.14337158203125

Token 243: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00604943186044693
    2. '][' → logprob: -5.256049633026123
    3. ']' → logprob: -7.506049633026123
    4. '[i' → logprob: -9.256049156188965
    5. ' ],' → logprob: -9.506049156188965
    6. '   ' → logprob: -10.881049156188965
    7. '-' → logprob: -11.631049156188965
    8. '       ' → logprob: -11.756049156188965
    9. ']
' → logprob: -11.756049156188965
    10. ',' → logprob: -11.756049156188965

Token 244: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09405961632728577
    2. ' d' → logprob: -2.469059705734253
    3. 'f' → logprob: -5.469059467315674
    4. ' f' → logprob: -7.844059467315674
    5. ' ' → logprob: -8.094059944152832
    6. '   ' → logprob: -9.219059944152832
    7. '  ' → logprob: -9.844059944152832
    8. '	d' → logprob: -11.969059944152832
    9. '       ' → logprob: -12.094059944152832
    10. '    ' → logprob: -12.094059944152832

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013467809185385704
    2. 'i' → logprob: -6.626346588134766
    3. ' i' → logprob: -11.376346588134766
    4. '[k' → logprob: -12.126346588134766
    5. ' [' → logprob: -13.626346588134766
    6. '[' → logprob: -13.751346588134766
    7. '[j' → logprob: -14.126346588134766
    8. '```' → logprob: -15.251346588134766
    9. '	i' → logprob: -16.001346588134766
    10. '   ' → logprob: -16.126346588134766

Token 246: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007806300185620785
    2. ']
' → logprob: -5.007806301116943
    3. '[' → logprob: -7.882806301116943
    4. ' ]' → logprob: -8.257805824279785
    5. '][' → logprob: -9.007805824279785
    6. '[
' → logprob: -9.757805824279785
    7. '[:' → logprob: -9.757805824279785
    8. ']

' → logprob: -10.632805824279785
    9. ']
' → logprob: -10.632805824279785
    10. ',' → logprob: -10.882805824279785

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01890566013753414
    2. ' for' → logprob: -4.8939056396484375
    3. 'for' → logprob: -5.1439056396484375
    4. '<|end|>' → logprob: -5.6439056396484375
    5. ',' → logprob: -7.8939056396484375
    6. '	' → logprob: -8.268905639648438
    7. '[' → logprob: -8.393905639648438
    8. '        
' → logprob: -8.518905639648438
    9. '=' → logprob: -8.643905639648438
    10. '           ' → logprob: -9.393905639648438

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01096387393772602
    2. ' for' → logprob: -4.7609639167785645
    3. 'j' → logprob: -6.7609639167785645
    4. '       ' → logprob: -8.135963439941406
    5. 'm' → logprob: -8.760963439941406
    6. 'x' → logprob: -9.385963439941406
    7. 'b' → logprob: -9.510963439941406
    8. 'p' → logprob: -9.635963439941406
    9. 'f' → logprob: -10.135963439941406
    10. 's' → logprob: -10.385963439941406

Token 249: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7189723253250122
    2. ' j' → logprob: -0.7189723253250122
    3. 'x' → logprob: -4.343972206115723
    4. ' x' → logprob: -4.718972206115723
    5. 'm' → logprob: -7.218972206115723
    6. ' m' → logprob: -7.843972206115723
    7. ' b' → logprob: -8.218972206115723
    8. 'b' → logprob: -8.468972206115723
    9. ' w' → logprob: -8.718972206115723
    10. 'w' → logprob: -8.718972206115723

Token 250: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16029927134513855
    2. ' in' → logprob: -1.910299301147461
    3. '(' → logprob: -10.535299301147461
    4. ' ' → logprob: -11.785299301147461
    5. 'In' → logprob: -11.785299301147461
    6. '[' → logprob: -12.035299301147461
    7. '_in' → logprob: -12.535299301147461
    8. 'd' → logprob: -12.910299301147461
    9. '_' → logprob: -13.035299301147461
    10. ')' → logprob: -13.160299301147461

Token 251: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.09949831664562225
    2. 'range' → logprob: -3.2244982719421387
    3. ' range' → logprob: -3.2244982719421387
    4. ' R' → logprob: -4.224498271942139
    5. '(' → logprob: -8.849498748779297
    6. 'Q' → logprob: -8.974498748779297
    7. 'r' → logprob: -9.099498748779297
    8. ' ' → logprob: -10.349498748779297
    9. '(range' → logprob: -10.349498748779297
    10. '(R' → logprob: -10.724498748779297

Token 252: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006350119132548571
    2. '(m' → logprob: -5.756350040435791
    3. '((' → logprob: -6.006350040435791
    4. '1' → logprob: -7.506350040435791
    5. '(z' → logprob: -9.00635051727295
    6. '(k' → logprob: -11.50635051727295
    7. '(len' → logprob: -11.50635051727295
    8. '(j' → logprob: -12.38135051727295
    9. '(d' → logprob: -13.25635051727295
    10. 'm' → logprob: -13.50635051727295

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04841497540473938
    2. '(' → logprob: -3.298414945602417
    3. 'm' → logprob: -4.673415184020996
    4. '0' → logprob: -7.548415184020996
    5. 'z' → logprob: -8.423415184020996
    6. '(m' → logprob: -9.548415184020996
    7. ' ' → logprob: -9.798415184020996
    8. '(z' → logprob: -10.798415184020996
    9. '   ' → logprob: -11.173415184020996
    10. ')' → logprob: -11.298415184020996

Token 254: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.1774121522903442
    2. ' <<' → logprob: -1.3024121522903442
    3. '(z' → logprob: -2.0524120330810547
    4. ' z' → logprob: -2.4274120330810547
    5. 'z' → logprob: -2.5524120330810547
    6. ' (' → logprob: -2.8024120330810547
    7. '(' → logprob: -3.8024120330810547
    8. '       ' → logprob: -4.677412033081055
    9. '   ' → logprob: -4.677412033081055
    10. ' ' → logprob: -5.552412033081055

Token 255: ' k' (ID: 372)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.003820387413725257
    2. ' z' → logprob: -6.378820419311523
    3. '(z' → logprob: -6.378820419311523
    4. 'i' → logprob: -8.628820419311523
    5. '(i' → logprob: -9.503820419311523
    6. '   ' → logprob: -10.503820419311523
    7. '(N' → logprob: -10.503820419311523
    8. 'j' → logprob: -10.628820419311523
    9. '(' → logprob: -10.628820419311523
    10. ' (' → logprob: -11.128820419311523

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4757915139198303
    2. '):
' → logprob: -0.9757915139198303
    3. '):
' → logprob: -7.1007914543151855
    4. '       ' → logprob: -8.600791931152344
    5. '):

' → logprob: -9.100791931152344
    6. '[' → logprob: -9.225791931152344
    7. '   ' → logprob: -9.225791931152344
    8. ' ):' → logprob: -9.600791931152344
    9. '-' → logprob: -9.850791931152344
    10. ')' → logprob: -9.850791931152344

Token 257: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9233127236366272
    2. '<|end|>' → logprob: -1.2983126640319824
    3. '           ' → logprob: -1.5483126640319824
    4. ' if' → logprob: -2.6733126640319824
    5. '        ' → logprob: -4.048312664031982
    6. '       ' → logprob: -4.923312664031982
    7. '[' → logprob: -5.048312664031982
    8. '	       ' → logprob: -5.673312664031982
    9. '		' → logprob: -6.048312664031982
    10. ' [' → logprob: -7.173312664031982

Token 258: ' di' (ID: 1320)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3748615086078644
    2. 'if' → logprob: -2.249861478805542
    3. ' d' → logprob: -2.874861478805542
    4. '           ' → logprob: -3.124861478805542
    5. 'd' → logprob: -3.249861478805542
    6. ' ' → logprob: -3.999861478805542
    7. ' f' → logprob: -4.499861717224121
    8. 'i' → logprob: -5.999861717224121
    9. 'f' → logprob: -6.124861717224121
    10. '0' → logprob: -6.249861717224121

Token 259: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004959185607731342
    2. '[' → logprob: -5.8799591064453125
    3. '[(' → logprob: -6.5049591064453125
    4. ' [' → logprob: -9.004959106445312
    5. '[m' → logprob: -9.004959106445312
    6. '[((' → logprob: -9.504959106445312
    7. '[k' → logprob: -9.629959106445312
    8. '[
' → logprob: -9.754959106445312
    9. 'j' → logprob: -10.254959106445312
    10. '[i' → logprob: -10.379959106445312

Token 260: ' >>' (ID: 6832)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24186231195926666
    2. '|' → logprob: -1.9918622970581055
    3. ']=' → logprob: -2.8668622970581055
    4. ' |' → logprob: -4.8668622970581055
    5. '[j' → logprob: -5.4918622970581055
    6. ']+=' → logprob: -6.4918622970581055
    7. ' ]' → logprob: -6.6168622970581055
    8. '=' → logprob: -6.7418622970581055
    9. ']|' → logprob: -6.7418622970581055
    10. '[' → logprob: -6.8668622970581055

Token 261: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4925725758075714
    2. '(z' → logprob: -0.992572546005249
    3. 'm' → logprob: -4.617572784423828
    4. '(k' → logprob: -5.992572784423828
    5. '(m' → logprob: -5.992572784423828
    6. ' (' → logprob: -6.867572784423828
    7. '(' → logprob: -6.992572784423828
    8. '(j' → logprob: -8.117572784423828
    9. '(i' → logprob: -8.242572784423828
    10. ' z' → logprob: -8.367572784423828

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01727849617600441
    2. '|' → logprob: -4.767278671264648
    3. ']|' → logprob: -5.642278671264648
    4. ' ]' → logprob: -6.392278671264648
    5. ']=' → logprob: -7.142278671264648
    6. '^' → logprob: -7.267278671264648
    7. ']^' → logprob: -7.267278671264648
    8. ']+=' → logprob: -7.767278671264648
    9. ' |' → logprob: -8.642278671264648
    10. '   ' → logprob: -9.517278671264648

Token 263: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.35941773653030396
    2. '^' → logprob: -2.109417676925659
    3. '=' → logprob: -2.359417676925659
    4. ' |=' → logprob: -3.109417676925659
    5. ' ^=' → logprob: -3.859417676925659
    6. '[j' → logprob: -5.359417915344238
    7. '[' → logprob: -5.609417915344238
    8. ']' → logprob: -5.734417915344238
    9. '+=' → logprob: -5.984417915344238
    10. ' =' → logprob: -6.359417915344238

Token 264: ' dk' (ID: 88261)
  Prédit: 'dk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.00902152806520462
    2. ' dk' → logprob: -5.759021759033203
    3. 'fi' → logprob: -6.384021759033203
    4. '   ' → logprob: -6.884021759033203
    5. 'fk' → logprob: -7.634021759033203
    6. '(d' → logprob: -8.009021759033203
    7. 'di' → logprob: -8.134021759033203
    8. 'd' → logprob: -8.134021759033203
    9. '((' → logprob: -8.259021759033203
    10. '(' → logprob: -8.634021759033203

Token 265: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3522390127182007
    2. '[(' → logprob: -1.2272390127182007
    3. '[((' → logprob: -6.22723913192749
    4. '[' → logprob: -6.47723913192749
    5. '((' → logprob: -9.227238655090332
    6. '(j' → logprob: -9.352238655090332
    7. '[
' → logprob: -10.102238655090332
    8. ' [' → logprob: -11.602238655090332
    9. '[[' → logprob: -11.977238655090332
    10. ' [(' → logprob: -11.977238655090332

Token 266: ']
' (ID: 1592)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.7796810865402222
    2. ']' → logprob: -1.5296810865402222
    3. '[j' → logprob: -1.7796810865402222
    4. '])' → logprob: -2.5296812057495117
    5. '^' → logprob: -3.5296812057495117
    6. '][' → logprob: -4.154681205749512
    7. '>>' → logprob: -4.404681205749512
    8. '[(' → logprob: -5.404681205749512
    9. '^(' → logprob: -5.654681205749512
    10. ' &' → logprob: -6.029681205749512

Token 267: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003094531362876296
    2. '<|end|>' → logprob: -6.253094673156738
    3. '[' → logprob: -7.878094673156738
    4. ' 
' → logprob: -8.503094673156738
    5. '    ' → logprob: -9.253094673156738
    6. '  ' → logprob: -9.378094673156738
    7. ' ' → logprob: -9.503094673156738
    8. '+' → logprob: -10.003094673156738
    9. ')' → logprob: -10.003094673156738
    10. '[i' → logprob: -10.753094673156738

Token 268: ' r' (ID: 428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.639153003692627
    2. '[j' → logprob: -1.264153003692627
    3. '=' → logprob: -1.889153003692627
    4. '[' → logprob: -4.764153003692627
    5. '=j' → logprob: -5.014153003692627
    6. '>>>' → logprob: -5.264153003692627
    7. ' ' → logprob: -5.639153003692627
    8. 'ight' → logprob: -6.389153003692627
    9. 'j' → logprob: -6.639153003692627
    10. ' >>=' → logprob: -7.014153003692627

Token 270: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.07375343888998032
    2. ' fi' → logprob: -3.1987533569335938
    3. 'f' → logprob: -3.9487533569335938
    4. ' f' → logprob: -5.698753356933594
    5. 'k' → logprob: -6.823753356933594
    6. 'di' → logprob: -7.198753356933594
    7. '(fi' → logprob: -7.323753356933594
    8. 'fk' → logprob: -7.323753356933594
    9. 'fj' → logprob: -7.448753356933594
    10. ' min' → logprob: -7.698753356933594

Token 271: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.0336637981235981
    2. '[z' → logprob: -3.408663749694824
    3. '[j' → logprob: -12.283663749694824
    4. '[_' → logprob: -12.783663749694824
    5. '[' → logprob: -12.908663749694824
    6. 'z' → logprob: -13.158663749694824
    7. '[k' → logprob: -13.783663749694824
    8. '```' → logprob: -14.033663749694824
    9. '[r' → logprob: -14.408663749694824
    10. '_' → logprob: -14.408663749694824

Token 272: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07276368886232376
    2. '[(' → logprob: -2.697763681411743
    3. '[' → logprob: -6.447763919830322
    4. '[((' → logprob: -6.947763919830322
    5. '[m' → logprob: -9.197763442993164
    6. '[
' → logprob: -9.572763442993164
    7. '[k' → logprob: -9.822763442993164
    8. '[[' → logprob: -11.447763442993164
    9. '[js' → logprob: -12.197763442993164
    10. '[r' → logprob: -12.447763442993164

Token 273: ' &' (ID: 827)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3887462019920349
    2. ']' → logprob: -2.1387462615966797
    3. '&' → logprob: -2.6387462615966797
    4. '>>' → logprob: -2.8887462615966797
    5. '[' → logprob: -3.2637462615966797
    6. '])' → logprob: -4.26374626159668
    7. '][' → logprob: -4.88874626159668
    8. ' &' → logprob: -5.76374626159668
    9. '[(' → logprob: -6.01374626159668
    10. '>>(' → logprob: -6.63874626159668

Token 274: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.64839569455944e-05
    2. ' m' → logprob: -9.500076293945312
    3. '(m' → logprob: -14.000076293945312
    4. '(' → logprob: -15.500076293945312
    5. '```' → logprob: -15.500076293945312
    6. ' ' → logprob: -16.250076293945312
    7. '[m' → logprob: -16.875076293945312
    8. '	m' → logprob: -16.875076293945312
    9. '   ' → logprob: -17.125076293945312
    10. 'mask' → logprob: -17.625076293945312

Token 275: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07043050974607468
    2. ']
' → logprob: -2.6954305171966553
    3. ']+' → logprob: -8.945430755615234
    4. ']

' → logprob: -9.070430755615234
    5. '])' → logprob: -9.445430755615234
    6. ']
' → logprob: -9.695430755615234
    7. ' ]' → logprob: -9.820430755615234
    8. ']<<' → logprob: -11.820430755615234
    9. ' ]
' → logprob: -12.070430755615234
    10. ']-' → logprob: -12.070430755615234

Token 276: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8133919835090637
    2. '           ' → logprob: -1.063391923904419
    3. '+' → logprob: -2.438391923904419
    4. ' if' → logprob: -2.438391923904419
    5. '<|end|>' → logprob: -4.063392162322998
    6. '
' → logprob: -5.563392162322998
    7. ']' → logprob: -6.188392162322998
    8. ' +' → logprob: -6.313392162322998
    9. '=' → logprob: -6.438392162322998
    10. 'f' → logprob: -6.688392162322998

Token 277: ' if' (ID: 538)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.3206014931201935
    2. 'if' (adapté à ' if') → logprob: -1.445601463317871
    3. ' if' → logprob: -4.195601463317871
    4. ' di' → logprob: -4.445601463317871
    5. 'i' → logprob: -5.320601463317871
    6. '           ' → logprob: -5.695601463317871
    7. 'for' → logprob: -6.820601463317871
    8. 'f' → logprob: -7.820601463317871
    9. 'fi' → logprob: -7.945601463317871
    10. ' i' → logprob: -8.320601463317871

Token 278: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7518441081047058
    2. ' r' → logprob: -0.7518441081047058
    3. ' di' → logprob: -4.1268439292907715
    4. ' d' → logprob: -5.0018439292907715
    5. 'di' → logprob: -5.5018439292907715
    6. ' not' → logprob: -5.5018439292907715
    7. 'd' → logprob: -5.7518439292907715
    8. ' (' → logprob: -5.8768439292907715
    9. ' f' → logprob: -5.8768439292907715
    10. ' ' → logprob: -6.1268439292907715

Token 279: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20744939148426056
    2. ' >' → logprob: -2.832449436187744
    3. '>=' → logprob: -2.832449436187744
    4. ' >=' → logprob: -4.082449436187744
    5. ' <' → logprob: -4.207449436187744
    6. '<' → logprob: -4.207449436187744
    7. '==' → logprob: -4.457449436187744
    8. ':' → logprob: -5.082449436187744
    9. '<=' → logprob: -6.582449436187744
    10. ' ==' → logprob: -6.582449436187744

Token 280: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7189133763313293
    2. 'z' → logprob: -0.7189133763313293
    3. ' ' → logprob: -4.843913555145264
    4. 'm' → logprob: -4.843913555145264
    5. ' z' → logprob: -4.968913555145264
    6. '(' → logprob: -7.343913555145264
    7. '(z' → logprob: -7.593913555145264
    8. ' (' → logprob: -8.093913078308105
    9. 'K' → logprob: -8.343913078308105
    10. 'k' → logprob: -8.718913078308105

Token 281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04811054840683937
    2. ':
' → logprob: -3.1731104850769043
    3. ' and' → logprob: -5.423110485076904
    4. '<|end|>' → logprob: -9.048110961914062
    5. '           ' → logprob: -9.173110961914062
    6. ' :' → logprob: -9.423110961914062
    7. 'and' → logprob: -9.548110961914062
    8. '):
' → logprob: -9.673110961914062
    9. '):' → logprob: -9.673110961914062
    10. ')' → logprob: -10.423110961914062

Token 282: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2433803826570511
    2. ':' → logprob: -2.243380308151245
    3. ' and' → logprob: -2.618380308151245
    4. '               ' → logprob: -3.493380308151245
    5. ' di' → logprob: -5.618380546569824
    6. '           ' → logprob: -6.368380546569824
    7. ' :
' → logprob: -7.868380546569824
    8. '):
' → logprob: -8.743380546569824
    9. 'di' → logprob: -8.868380546569824
    10. '                   ' → logprob: -9.243380546569824

Token 283: ' d' (ID: 272)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.20961792767047882
    2. ' di' → logprob: -2.084617853164673
    3. 'f' → logprob: -3.834617853164673
    4. 'd' (adapté à ' d') → logprob: -4.334618091583252
    5. 'i' → logprob: -5.209618091583252
    6. ' f' → logprob: -5.334618091583252
    7. 'break' → logprob: -5.334618091583252
    8. ' break' → logprob: -5.834618091583252
    9. 'x' → logprob: -6.709618091583252
    10. ' d' → logprob: -6.709618091583252

Token 284: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.050492383539676666
    2. '[k' → logprob: -3.050492286682129
    3. 'i' → logprob: -6.425492286682129
    4. '[' → logprob: -8.800492286682129
    5. 'k' → logprob: -10.300492286682129
    6. '           ' → logprob: -10.800492286682129
    7. ' [' → logprob: -10.925492286682129
    8. '[j' → logprob: -11.300492286682129
    9. '[z' → logprob: -11.425492286682129
    10. ' i' → logprob: -11.925492286682129

Token 285: ' -' (ID: 533)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4015432596206665
    2. '][' → logprob: -1.1515432596206665
    3. ' ][' → logprob: -5.651543140411377
    4. '[' → logprob: -5.901543140411377
    5. ']' → logprob: -6.026543140411377
    6. '[r' → logprob: -6.276543140411377
    7. '[i' → logprob: -6.526543140411377
    8. ' ' → logprob: -7.901543140411377
    9. '   ' → logprob: -7.901543140411377
    10. ' [' → logprob: -7.901543140411377

Token 286: ' r' (ID: 428)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2859049141407013
    2. '1' → logprob: -1.535904884338379
    3. 'r' → logprob: -3.410904884338379
    4. ' z' → logprob: -8.285904884338379
    5. 'i' → logprob: -10.535904884338379
    6. ' r' → logprob: -11.285904884338379
    7. ' ' → logprob: -11.410904884338379
    8. '-z' → logprob: -11.535904884338379
    9. 's' → logprob: -11.910904884338379
    10. 'd' → logprob: -11.910904884338379

Token 287: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014507819898426533
    2. ']' → logprob: -5.01450777053833
    3. '[j' → logprob: -5.51450777053833
    4. ' ][' → logprob: -6.26450777053833
    5. '[i' → logprob: -7.88950777053833
    6. '[' → logprob: -7.88950777053833
    7. '[r' → logprob: -8.514508247375488
    8. '][-' → logprob: -9.014508247375488
    9. '])' → logprob: -9.139508247375488
    10. '][:' → logprob: -9.389508247375488

Token 288: '(' (ID: 7)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6200289130210876
    2. '(j' → logprob: -0.9950289130210876
    3. '((' → logprob: -2.4950289726257324
    4. ' (' → logprob: -5.495028972625732
    5. '[j' → logprob: -6.245028972625732
    6. '(' → logprob: -6.995028972625732
    7. '[(' → logprob: -7.245028972625732
    8. '   ' → logprob: -7.620028972625732
    9. ' ((' → logprob: -7.745028972625732
    10. '(i' → logprob: -8.370028495788574

Token 289: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010826382786035538
    2. '(j' → logprob: -4.635826587677002
    3. '((' → logprob: -7.635826587677002
    4. ' j' → logprob: -8.135826110839844
    5. '   ' → logprob: -9.510826110839844
    6. ' (' → logprob: -9.760826110839844
    7. 'i' → logprob: -10.260826110839844
    8. '(' → logprob: -10.510826110839844
    9. '(i' → logprob: -10.510826110839844
    10. 'k' → logprob: -11.510826110839844

Token 290: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.22622573375701904
    2. ' >>' → logprob: -1.851225733757019
    3. '>>(' → logprob: -3.9762258529663086
    4. ' ^' → logprob: -4.226225852966309
    5. ' &' → logprob: -5.351225852966309
    6. '&' → logprob: -5.351225852966309
    7. '^' → logprob: -7.101225852966309
    8. '<<' → logprob: -7.726225852966309
    9. ']' → logprob: -7.976225852966309
    10. '^(' → logprob: -8.101225852966309

Token 291: ' z' (ID: 579)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.09142820537090302
    2. '(z' → logprob: -2.466428279876709
    3. ' (' → logprob: -6.091428279876709
    4. '(' → logprob: -8.84142780303955
    5. '(k' → logprob: -11.21642780303955
    6. 'r' → logprob: -11.21642780303955
    7. '(y' → logprob: -11.84142780303955
    8. '(m' → logprob: -11.84142780303955
    9. '(q' → logprob: -12.09142780303955
    10. '(n' → logprob: -12.21642780303955

Token 292: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003840809687972069
    2. ' )' → logprob: -6.378840923309326
    3. ')+' → logprob: -7.878840923309326
    4. 'r' → logprob: -8.003840446472168
    5. '|' → logprob: -8.128840446472168
    6. '<<' → logprob: -8.503840446472168
    7. ')+(' → logprob: -8.878840446472168
    8. '(r' → logprob: -9.378840446472168
    9. ')(' → logprob: -9.628840446472168
    10. '(' → logprob: -9.628840446472168

Token 293: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.9969897270202637
    2. ')' → logprob: -1.6219897270202637
    3. '|' → logprob: -1.7469897270202637
    4. '][' → logprob: -2.6219897270202637
    5. ']' → logprob: -2.9969897270202637
    6. '|(' → logprob: -3.3719897270202637
    7. '&' → logprob: -4.246989727020264
    8. '<<(' → logprob: -4.746989727020264
    9. '[r' → logprob: -4.871989727020264
    10. ' &' → logprob: -5.121989727020264

Token 294: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10601899027824402
    2. '(r' → logprob: -2.3560190200805664
    3. '(' → logprob: -6.231019020080566
    4. '(i' → logprob: -6.481019020080566
    5. ' r' → logprob: -7.356019020080566
    6. ' (' → logprob: -7.606019020080566
    7. '(z' → logprob: -7.981019020080566
    8. '1' → logprob: -8.606019020080566
    9. '(k' → logprob: -8.606019020080566
    10. '(N' → logprob: -9.481019020080566

Token 295: 'z' (ID: 89)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.49488669633865356
    2. 'r' → logprob: -1.1198866367340088
    3. '(z' → logprob: -2.869886636734009
    4. '(i' → logprob: -5.494886875152588
    5. '(k' → logprob: -6.619886875152588
    6. '(' → logprob: -7.619886875152588
    7. ' (' → logprob: -7.994886875152588
    8. '(N' → logprob: -7.994886875152588
    9. 'z' → logprob: -8.11988639831543
    10. '(K' → logprob: -9.24488639831543

Token 296: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.24589334428310394
    2. '-' → logprob: -2.4958932399749756
    3. ' -' → logprob: -2.7458932399749756
    4. 'r' → logprob: -3.2458932399749756
    5. ')' → logprob: -3.7458932399749756
    6. ' r' → logprob: -5.620893478393555
    7. '+r' → logprob: -6.245893478393555
    8. '+' → logprob: -6.995893478393555
    9. '           ' → logprob: -7.620893478393555
    10. ' ' → logprob: -8.620893478393555

Token 297: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00502845598384738
    2. '1' → logprob: -5.380028247833252
    3. ' r' → logprob: -7.880028247833252
    4. '(r' → logprob: -11.00502872467041
    5. '(' → logprob: -12.00502872467041
    6. ' ' → logprob: -13.00502872467041
    7. ' (' → logprob: -14.00502872467041
    8. ')' → logprob: -14.13002872467041
    9. '	r' → logprob: -14.50502872467041
    10. '0' → logprob: -15.00502872467041

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026260128244757652
    2. '|' → logprob: -4.026259899139404
    3. ')]' → logprob: -5.901259899139404
    4. ')+' → logprob: -6.026259899139404
    5. ' )' → logprob: -6.776259899139404
    6. ')][' → logprob: -7.526259899139404
    7. ')|' → logprob: -7.776259899139404
    8. ')+(' → logprob: -8.651260375976562
    9. ' |' → logprob: -8.776260375976562
    10. '+' → logprob: -8.901260375976562

Token 299: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.014730186201632023
    2. ' |' → logprob: -4.389729976654053
    3. ']' → logprob: -6.514729976654053
    4. '   ' → logprob: -8.514730453491211
    5. '|(' → logprob: -9.264730453491211
    6. ')' → logprob: -9.389730453491211
    7. ' ' → logprob: -9.514730453491211
    8. '+' → logprob: -9.639730453491211
    9. '][' → logprob: -10.139730453491211
    10. ']+' → logprob: -10.264730453491211

Token 300: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.03836631774902344
    2. '((' → logprob: -3.6633663177490234
    3. ' (' → logprob: -4.538366317749023
    4. 'j' → logprob: -7.163366317749023
    5. ' ((' → logprob: -7.913366317749023
    6. '(' → logprob: -9.538366317749023
    7. ' j' → logprob: -10.288366317749023
    8. '(((' → logprob: -11.038366317749023
    9. '(m' → logprob: -12.288366317749023
    10. '   ' → logprob: -12.288366317749023

Token 301: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1823037713766098
    2. '(j' → logprob: -1.807303786277771
    3. ' (' → logprob: -6.8073039054870605
    4. ' j' → logprob: -6.9323039054870605
    5. '   ' → logprob: -9.057303428649902
    6. '((' → logprob: -9.182303428649902
    7. 'fi' → logprob: -10.057303428649902
    8. ' ' → logprob: -10.557303428649902
    9. '(k' → logprob: -10.807303428649902
    10. '           ' → logprob: -10.932303428649902

Token 302: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3806469440460205
    2. '&m' → logprob: -1.3806469440460205
    3. ' &' → logprob: -2.7556469440460205
    4. '&(' → logprob: -7.255646705627441
    5. '>>' → logprob: -7.505646705627441
    6. '&M' → logprob: -9.505646705627441
    7. '&p' → logprob: -9.880646705627441
    8. '&amp' → logprob: -10.505646705627441
    9. '&q' → logprob: -10.505646705627441
    10. '&i' → logprob: -10.630646705627441

Token 303: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.039846986532211304
    2. 'm' → logprob: -3.539846897125244
    3. ' ((' → logprob: -4.664846897125244
    4. ' m' → logprob: -8.039847373962402
    5. '(m' → logprob: -8.414847373962402
    6. ' ' → logprob: -10.289847373962402
    7. '(' → logprob: -10.539847373962402
    8. ' (' → logprob: -11.289847373962402
    9. '(((' → logprob: -13.289847373962402
    10. '   ' → logprob: -13.789847373962402

Token 304: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013945228420197964
    2. ' (' → logprob: -6.626394748687744
    3. ' ' → logprob: -10.126394271850586
    4. '((' → logprob: -11.001394271850586
    5. '   ' → logprob: -12.126394271850586
    6. '1' → logprob: -12.626394271850586
    7. '(m' → logprob: -13.376394271850586
    8. '    ' → logprob: -14.501394271850586
    9. '  ' → logprob: -14.876394271850586
    10. '     ' → logprob: -15.251394271850586

Token 305: ' <<' (ID: 2256)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06385084241628647
    2. ' (' → logprob: -3.5638508796691895
    3. '1' → logprob: -3.6888508796691895
    4. '<<(' → logprob: -6.0638508796691895
    5. '<<' → logprob: -6.3138508796691895
    6. ' ' → logprob: -6.5638508796691895
    7. '((' → logprob: -6.9388508796691895
    8. '   ' → logprob: -7.8138508796691895
    9. ')' → logprob: -7.8138508796691895
    10. '0' → logprob: -8.313850402832031

Token 306: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06594101339578629
    2. '(z' → logprob: -2.815941095352173
    3. '(r' → logprob: -6.190940856933594
    4. 'z' → logprob: -6.690940856933594
    5. ' (' → logprob: -7.815940856933594
    6. ' r' → logprob: -9.065940856933594
    7. '(' → logprob: -9.690940856933594
    8. ' ' → logprob: -10.315940856933594
    9. '(m' → logprob: -12.065940856933594
    10. '(
' → logprob: -12.065940856933594

Token 307: 'z' (ID: 89)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005874871741980314
    2. '(r' → logprob: -5.7558746337890625
    3. '(z' → logprob: -6.1308746337890625
    4. 'z' → logprob: -8.005874633789062
    5. ' (' → logprob: -9.630874633789062
    6. '(' → logprob: -10.005874633789062
    7. ' r' → logprob: -10.130874633789062
    8. '           ' → logprob: -11.630874633789062
    9. ' ' → logprob: -12.130874633789062
    10. '   ' → logprob: -12.255874633789062

Token 308: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001227965927682817
    2. ' r' → logprob: -7.126227855682373
    3. 'z' → logprob: -8.876228332519531
    4. '           ' → logprob: -9.626228332519531
    5. '(r' → logprob: -9.751228332519531
    6. '-r' → logprob: -10.001228332519531
    7. '               ' → logprob: -10.626228332519531
    8. ' (' → logprob: -10.876228332519531
    9. '   ' → logprob: -11.376228332519531
    10. '(z' → logprob: -11.626228332519531

Token 309: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000273136975010857
    2. ' r' → logprob: -8.250272750854492
    3. '(r' → logprob: -12.375272750854492
    4. '(' → logprob: -12.875272750854492
    5. '_r' → logprob: -13.750272750854492
    6. '0' → logprob: -14.375272750854492
    7. '```' → logprob: -14.500272750854492
    8. ' ' → logprob: -14.625272750854492
    9. '           ' → logprob: -15.125272750854492
    10. ')' → logprob: -15.125272750854492

Token 310: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04276314005255699
    2. 'r' → logprob: -3.4177632331848145
    3. ')-' → logprob: -4.9177632331848145
    4. '1' → logprob: -6.6677632331848145
    5. ' )' → logprob: -8.917762756347656
    6. '_r' → logprob: -9.542762756347656
    7. 'z' → logprob: -9.667762756347656
    8. '0' → logprob: -9.917762756347656
    9. '-' → logprob: -10.042762756347656
    10. '   ' → logprob: -10.917762756347656

Token 311: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12743480503559113
    2. ')-' → logprob: -2.252434730529785
    3. 'm' → logprob: -4.877434730529785
    4. '1' → logprob: -6.002434730529785
    5. 'r' → logprob: -6.377434730529785
    6. '(' → logprob: -6.627434730529785
    7. '((' → logprob: -7.752434730529785
    8. '-' → logprob: -7.752434730529785
    9. '(m' → logprob: -8.752434730529785
    10. '(r' → logprob: -9.002434730529785

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'r' → logprob: -16.750001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '0' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. '
' → logprob: -20.000001907348633
    9. '3' → logprob: -20.250001907348633
    10. '2' → logprob: -20.312501907348633

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. 'r' → logprob: -11.375028610229492
    3. ' ' → logprob: -11.375028610229492
    4. '
' → logprob: -13.125028610229492
    5. '0' → logprob: -13.625028610229492
    6. '

' → logprob: -14.937528610229492
    7. '```' → logprob: -15.187528610229492
    8. '   ' → logprob: -15.562528610229492
    9. ')' → logprob: -15.625028610229492
    10. '11' → logprob: -15.812528610229492

Token 314: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0070920889265835285
    2. ')' → logprob: -5.757091999053955
    3. ' )' → logprob: -6.132091999053955
    4. ')])' → logprob: -6.507091999053955
    5. ')]
' → logprob: -10.132092475891113
    6. '))' → logprob: -10.257092475891113
    7. ']' → logprob: -10.257092475891113
    8. '])]' → logprob: -10.757092475891113
    9. '       ' → logprob: -11.257092475891113
    10. ')
' → logprob: -11.257092475891113

Token 315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032691434025764465
    2. ']+=' → logprob: -3.532691478729248
    3. ' ]' → logprob: -6.032691478729248
    4. ']+' → logprob: -8.28269100189209
    5. ')]' → logprob: -9.53269100189209
    6. '+=' → logprob: -10.15769100189209
    7. '   ' → logprob: -10.65769100189209
    8. '|' → logprob: -10.78269100189209
    9. ']=' → logprob: -11.03269100189209
    10. ']]' → logprob: -11.28269100189209

Token 316: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10612320154905319
    2. '|' → logprob: -2.606123208999634
    3. '=' → logprob: -3.981123208999634
    4. ' +=' → logprob: -5.106122970581055
    5. ']+=' → logprob: -6.981122970581055
    6. ' |=' → logprob: -7.481122970581055
    7. ' =' → logprob: -8.856122970581055
    8. '^' → logprob: -9.106122970581055
    9. ']' → logprob: -9.106122970581055
    10. '+' → logprob: -9.231122970581055

Token 317: ' dk' (ID: 88261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004394275136291981
    2. ' ' → logprob: -5.629394054412842
    3. 'di' → logprob: -8.00439453125
    4. 'fi' → logprob: -8.50439453125
    5. 'f' → logprob: -10.00439453125
    6. 'r' → logprob: -10.00439453125
    7. 'd' → logprob: -10.12939453125
    8. '   ' → logprob: -10.50439453125
    9. '0' → logprob: -10.87939453125
    10. ' di' → logprob: -11.25439453125

Token 318: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.08300146460533142
    2. '[r' → logprob: -2.8330013751983643
    3. '[(' → logprob: -4.083001613616943
    4. '[' → logprob: -6.583001613616943
    5. '[z' → logprob: -7.083001613616943
    6. 'j' → logprob: -7.458001613616943
    7. 'r' → logprob: -7.458001613616943
    8. '[((' → logprob: -8.583001136779785
    9. '[m' → logprob: -9.458001136779785
    10. '(j' → logprob: -9.458001136779785

Token 319: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17067740857601166
    2. '<|end|>' → logprob: -1.9206774234771729
    3. ']' → logprob: -5.420677185058594
    4. ')
' → logprob: -6.420677185058594
    5. '           ' → logprob: -6.545677185058594
    6. '<|end|>' → logprob: -7.170677185058594
    7. '+' → logprob: -7.295677185058594
    8. '
' → logprob: -7.795677185058594
    9. ' )' → logprob: -8.545677185058594
    10. '               ' → logprob: -8.670677185058594

Token 320: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14434567093849182
    2. '<|end|>' → logprob: -2.644345760345459
    3. ':' → logprob: -3.644345760345459
    4. ')' → logprob: -3.769345760345459
    5. ' :' → logprob: -5.644345760345459
    6. '[' → logprob: -5.894345760345459
    7. '    ' → logprob: -6.394345760345459
    8. '   ' → logprob: -6.644345760345459
    9. '  ' → logprob: -6.769345760345459
    10. '(' → logprob: -7.769345760345459

Token 321: ' I' (ID: 357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2368609458208084
    2. '<|end|>' → logprob: -1.611860990524292
    3. ' ' → logprob: -5.361860752105713
    4. '```' → logprob: -6.236860752105713
    5. ']' → logprob: -6.736860752105713
    6. '0' → logprob: -7.111860752105713
    7. ' )' → logprob: -7.611860752105713
    8. '#' → logprob: -7.611860752105713
    9. '}' → logprob: -7.986860752105713
    10. '[' → logprob: -8.611861228942871

Token 322: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.32586273550987244
    2. '=' → logprob: -2.2008626461029053
    3. ' =' → logprob: -2.5758626461029053
    4. 'F' → logprob: -3.5758626461029053
    5. 'n' → logprob: -3.8258626461029053
    6. 'm' → logprob: -4.825862884521484
    7. '[' → logprob: -5.200862884521484
    8. '[:]' → logprob: -5.325862884521484
    9. 'for' → logprob: -5.575862884521484
    10. '+=' → logprob: -5.950862884521484

Token 323: ' J' (ID: 643)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0988726615905762
    2. '0' → logprob: -1.4738726615905762
    3. 'i' → logprob: -2.473872661590576
    4. 'Q' → logprob: -2.973872661590576
    5. 'R' → logprob: -3.098872661590576
    6. '[' → logprob: -3.223872661590576
    7. 'K' → logprob: -3.473872661590576
    8. 'range' → logprob: -3.723872661590576
    9. '[N' → logprob: -3.973872661590576
    10. 'f' → logprob: -4.098872661590576

Token 324: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9056186676025391
    2. '+' → logprob: -2.030618667602539
    3. 'Q' → logprob: -2.155618667602539
    4. 'I' → logprob: -2.530618667602539
    5. 'n' → logprob: -3.030618667602539
    6. '=' → logprob: -3.155618667602539
    7. '[' → logprob: -3.655618667602539
    8. '0' → logprob: -4.030618667602539
    9. 'range' → logprob: -4.155618667602539
    10. 'R' → logprob: -4.280618667602539

Token 325: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021744653582572937
    2. 'K' → logprob: -4.771744728088379
    3. 'N' → logprob: -5.146744728088379
    4. ' ' → logprob: -5.271744728088379
    5. '1' → logprob: -7.646744728088379
    6. 'Q' → logprob: -8.021744728088379
    7. ' K' → logprob: -8.146744728088379
    8. 'i' → logprob: -8.521744728088379
    9. 'R' → logprob: -8.646744728088379
    10. ' N' → logprob: -9.021744728088379

Token 326: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06380679458379745
    2. ' for' → logprob: -3.1888067722320557
    3. '<|end|>' → logprob: -4.688807010650635
    4. '[' → logprob: -5.938807010650635
    5. '#' → logprob: -6.563807010650635
    6. 'I' → logprob: -6.813807010650635
    7. '   ' → logprob: -6.813807010650635
    8. 'Q' → logprob: -6.938807010650635
    9. 'if' → logprob: -7.688807010650635
    10. ')' → logprob: -7.688807010650635

Token 328: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016367007046937943
    2. ' for' → logprob: -4.391366958618164
    3. '<|end|>' → logprob: -6.391366958618164
    4. 'if' → logprob: -7.141366958618164
    5. 'K' → logprob: -9.141366958618164
    6. '0' → logprob: -9.141366958618164
    7. 'I' → logprob: -9.266366958618164
    8. '[]' → logprob: -9.391366958618164
    9. '[' → logprob: -9.391366958618164
    10. '#' → logprob: -9.516366958618164

Token 329: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.665278971195221
    2. ' k' → logprob: -1.2902789115905762
    3. ' i' → logprob: -2.665278911590576
    4. 'j' → logprob: -2.790278911590576
    5. 'k' → logprob: -3.040278911590576
    6. ' x' → logprob: -4.540278911590576
    7. 'i' → logprob: -5.290278911590576
    8. ' K' → logprob: -5.540278911590576
    9. ' l' → logprob: -6.290278911590576
    10. 'K' → logprob: -6.415278911590576

Token 330: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1616748571395874
    2. 'in' → logprob: -1.9116748571395874
    3. ',' → logprob: -6.786674976348877
    4. '<|end|>' → logprob: -9.286674499511719
    5. '(' → logprob: -9.661674499511719
    6. ' ' → logprob: -10.286674499511719
    7. '=' → logprob: -11.161674499511719
    8. ' =' → logprob: -11.536674499511719
    9. '   ' → logprob: -11.536674499511719
    10. '  ' → logprob: -11.536674499511719

Token 331: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5026073455810547
    2. 'v' → logprob: -1.5026073455810547
    3. 'fi' → logprob: -3.2526073455810547
    4. ' x' → logprob: -3.6276073455810547
    5. 'k' → logprob: -3.7526073455810547
    6. ' v' → logprob: -4.502607345581055
    7. 'f' → logprob: -4.502607345581055
    8. 'val' → logprob: -4.627607345581055
    9. 'fj' → logprob: -4.877607345581055
    10. 's' → logprob: -4.877607345581055

Token 332: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5323063731193542
    2. ',' → logprob: -1.282306432723999
    3. ' in' → logprob: -2.032306432723999
    4. ',v' → logprob: -5.53230619430542
    5. ' ,' → logprob: -9.157306671142578
    6. ',j' → logprob: -9.657306671142578
    7. ',d' → logprob: -10.532306671142578
    8. ',value' → logprob: -10.657306671142578
    9. ',f' → logprob: -10.782306671142578
    10. ',n' → logprob: -11.157306671142578

Token 333: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.02977270446717739
    2. ' enumerate' → logprob: -3.5297727584838867
    3. 'R' → logprob: -12.279772758483887
    4. 'd' → logprob: -12.654772758483887
    5. 'range' → logprob: -12.654772758483887
    6. 'in' → logprob: -12.779772758483887
    7. 'en' → logprob: -13.029772758483887
    8. 'enum' → logprob: -14.029772758483887
    9. ' ' → logprob: -14.029772758483887
    10. 'Q' → logprob: -14.029772758483887

Token 334: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02339071035385132
    2. '(f' → logprob: -3.773390769958496
    3. 'f' → logprob: -10.023390769958496
    4. 'd' → logprob: -10.648390769958496
    5. '(' → logprob: -10.648390769958496
    6. '(range' → logprob: -11.523390769958496
    7. '(en' → logprob: -11.773390769958496
    8. '((' → logprob: -11.898390769958496
    9. '(D' → logprob: -12.398390769958496
    10. '(di' → logprob: -12.398390769958496

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.036759939044713974
    2. '[I' → logprob: -3.411759853363037
    3. '[N' → logprob: -6.036759853363037
    4. 'i' → logprob: -8.036760330200195
    5. 'I' → logprob: -8.786760330200195
    6. ')' → logprob: -8.786760330200195
    7. 'd' → logprob: -11.161760330200195
    8. '   ' → logprob: -11.161760330200195
    9. '[' → logprob: -11.786760330200195
    10. '
' → logprob: -12.161760330200195

Token 336: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5366805195808411
    2. ']):
' → logprob: -0.9116805195808411
    3. '[i' → logprob: -5.536680698394775
    4. '):' → logprob: -6.411680698394775
    5. ']' → logprob: -6.411680698394775
    6. '[j' → logprob: -6.536680698394775
    7. '):
' → logprob: -6.786680698394775
    8. '])' → logprob: -6.786680698394775
    9. ']:' → logprob: -7.661680698394775
    10. ']==' → logprob: -7.786680698394775

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12355286628007889
    2. ' if' → logprob: -2.2485527992248535
    3. ':' → logprob: -5.7485527992248535
    4. 'if' → logprob: -5.9985527992248535
    5. ':
' → logprob: -6.1235527992248535
    6. '<|end|>' → logprob: -6.8735527992248535
    7. '   ' → logprob: -7.6235527992248535
    8. '):
' → logprob: -7.7485527992248535
    9. ',' → logprob: -8.373553276062012
    10. '=' → logprob: -9.498553276062012

Token 338: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2545672059059143
    2. ' if' → logprob: -1.5045671463012695
    3. 'if' (adapté à ' if') → logprob: -6.3795671463012695
    4. '           ' → logprob: -8.12956714630127
    5. '   ' → logprob: -8.75456714630127
    6. '<|end|>' → logprob: -9.12956714630127
    7. ' ' → logprob: -9.37956714630127
    8. ' ' → logprob: -9.75456714630127
    9. '...' → logprob: -10.37956714630127
    10. ' for' → logprob: -11.06706714630127

Token 339: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4745752811431885
    2. ' v' → logprob: -0.9745752811431885
    3. '   ' → logprob: -9.34957504272461
    4. '       ' → logprob: -9.47457504272461
    5. '    ' → logprob: -9.59957504272461
    6. ' not' → logprob: -9.72457504272461
    7. 'j' → logprob: -10.09957504272461
    8. 'd' → logprob: -10.84957504272461
    9. ' ' → logprob: -10.84957504272461
    10. ' j' → logprob: -10.97457504272461

Token 340: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08555105328559875
    2. ' >' → logprob: -2.8355510234832764
    3. '==' → logprob: -4.4605512619018555
    4. ' ==' → logprob: -5.8355512619018555
    5. '>=' → logprob: -5.9605512619018555
    6. ':' → logprob: -6.0855512619018555
    7. '!=' → logprob: -6.5855512619018555
    8. ' >=' → logprob: -7.3355512619018555
    9. ' !=' → logprob: -7.3355512619018555
    10. '>:' → logprob: -7.5855512619018555

Token 341: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3549319803714752
    2. '1' → logprob: -1.4799319505691528
    3. '2' → logprob: -3.2299320697784424
    4. ' K' → logprob: -4.479931831359863
    5. ' ' → logprob: -4.729931831359863
    6. '0' → logprob: -4.979931831359863
    7. 'I' → logprob: -6.604931831359863
    8. '128' → logprob: -6.604931831359863
    9. 'Q' → logprob: -8.104931831359863
    10. 'N' → logprob: -8.229931831359863

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6687094569206238
    2. ' and' → logprob: -1.0437095165252686
    3. ':
' → logprob: -2.2937095165252686
    4. 'and' → logprob: -3.4187095165252686
    5. '       ' → logprob: -7.4187092781066895
    6. '           ' → logprob: -7.6687092781066895
    7. ' :' → logprob: -8.168709754943848
    8. ' :
' → logprob: -9.168709754943848
    9. '   ' → logprob: -9.418709754943848
    10. '):
' → logprob: -9.918709754943848

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08896967768669128
    2. ' I' → logprob: -3.0889697074890137
    3. 'I' → logprob: -3.8389697074890137
    4. ':
' → logprob: -4.838969707489014
    5. '       ' → logprob: -5.963969707489014
    6. '               ' → logprob: -6.213969707489014
    7. '
' → logprob: -6.713969707489014
    8. ',' → logprob: -7.713969707489014
    9. ':' → logprob: -7.838969707489014
    10. ' if' → logprob: -7.963969707489014

Token 344: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.6856938004493713
    2. 'I' (adapté à ' I') → logprob: -0.9356938004493713
    3. '           ' → logprob: -2.3106937408447266
    4. 'J' → logprob: -6.310693740844727
    5. '               ' → logprob: -6.435693740844727
    6. ' J' → logprob: -7.310693740844727
    7. ' if' → logprob: -8.435693740844727
    8. '       ' → logprob: -8.810693740844727
    9. '   ' → logprob: -9.185693740844727
    10. ' break' → logprob: -9.935693740844727

Token 345: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10373090952634811
    2. ' =' → logprob: -2.3537309169769287
    3. '=j' → logprob: -5.85373067855835
    4. ',' → logprob: -7.72873067855835
    5. ' is' → logprob: -8.728731155395508
    6. ',j' → logprob: -10.603731155395508
    7. '=i' → logprob: -11.728731155395508
    8. '=is' → logprob: -12.228731155395508
    9. '=None' → logprob: -12.728731155395508
    10. '=v' → logprob: -13.478731155395508

Token 346: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.03009732998907566
    2. ' J' → logprob: -3.530097246170044
    3. 'j' → logprob: -8.030097007751465
    4. ' j' → logprob: -11.030097007751465
    5. ' ' → logprob: -13.030097007751465
    6. 'I' → logprob: -13.780097007751465
    7. 'i' → logprob: -14.405097007751465
    8. '<|end|>' → logprob: -14.655097007751465
    9. '0' → logprob: -15.405097007751465
    10. ' i' → logprob: -16.15509796142578

Token 347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030898666009306908
    2. ' =' → logprob: -3.5308985710144043
    3. '=j' → logprob: -6.780898571014404
    4. '=i' → logprob: -12.155899047851562
    5. '=
' → logprob: -12.780899047851562
    6. ',' → logprob: -12.905899047851562
    7. '=v' → logprob: -14.155899047851562
    8. '=k' → logprob: -15.280899047851562
    9. ',j' → logprob: -16.155899047851562
    10. '=}' → logprob: -16.280899047851562

Token 348: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17059378325939178
    2. ' i' → logprob: -1.9205937385559082
    3. 'j' → logprob: -4.795593738555908
    4. ' j' → logprob: -6.545593738555908
    5. '0' → logprob: -7.920593738555908
    6. ' ' → logprob: -9.670594215393066
    7. 'I' → logprob: -10.045594215393066
    8. '(i' → logprob: -10.420594215393066
    9. 'd' → logprob: -10.920594215393066
    10. ' (' → logprob: -11.045594215393066

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03400065377354622
    2. ',j' → logprob: -3.4090006351470947
    3. ' ,' → logprob: -8.284000396728516
    4. ',
' → logprob: -10.034000396728516
    5. 'j' → logprob: -10.909000396728516
    6. ',J' → logprob: -10.909000396728516
    7. ' j' → logprob: -12.409000396728516
    8. ',i' → logprob: -12.534000396728516
    9. '+' → logprob: -12.784000396728516
    10. '           ' → logprob: -13.284000396728516

Token 350: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010435284348204732
    2. ' j' → logprob: -7.001043319702148
    3. '0' → logprob: -9.751043319702148
    4. 'i' → logprob: -10.251043319702148
    5. 'v' → logprob: -10.751043319702148
    6. 'd' → logprob: -11.626043319702148
    7. ' ' → logprob: -13.001043319702148
    8. '(' → logprob: -13.376043319702148
    9. '(j' → logprob: -13.751043319702148
    10. ' (' → logprob: -14.626043319702148

Token 351: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024014587979763746
    2. '<|end|>' → logprob: -6.252401351928711
    3. '                           ' → logprob: -9.377401351928711
    4. '               ' → logprob: -9.877401351928711
    5. '		' → logprob: -10.252401351928711
    6. 'break' → logprob: -10.377401351928711
    7. ' if' → logprob: -10.502401351928711
    8. '                   ' → logprob: -10.502401351928711
    9. '       ' → logprob: -10.502401351928711
    10. '   ' → logprob: -10.627401351928711

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007414919091388583
    2. '       ' → logprob: -8.500741958618164
    3. '<|end|>' → logprob: -8.625741958618164
    4. 'break' → logprob: -9.125741958618164
    5. '   ' → logprob: -9.250741958618164
    6. 'if' → logprob: -10.000741958618164
    7. '               ' → logprob: -10.375741958618164
    8. ' if' → logprob: -11.000741958618164
    9. '[' → logprob: -11.375741958618164
    10. '                           ' → logprob: -11.750741958618164

Token 353: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.008845718577504158
    2. '           ' → logprob: -4.758845806121826
    3. ' break' → logprob: -8.383845329284668
    4. 'print' → logprob: -14.508845329284668
    5. '            
' → logprob: -15.008845329284668
    6. '```' → logprob: -15.008845329284668
    7. '	break' → logprob: -15.133845329284668
    8. 'BREAK' → logprob: -15.258845329284668
    9. '
' → logprob: -15.383845329284668
    10. '               ' → logprob: -15.508845329284668

Token 354: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2587091326713562
    2. '           ' → logprob: -1.883709192276001
    3. '       ' → logprob: -3.883709192276001
    4. '   ' → logprob: -4.133708953857422
    5. ' if' → logprob: -4.258708953857422
    6. '<|end|>' → logprob: -4.758708953857422
    7. 'break' → logprob: -4.883708953857422
    8. ')' → logprob: -6.133708953857422
    9. '```' → logprob: -6.758708953857422
    10. '               ' → logprob: -6.758708953857422

Token 355: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10540220141410828
    2. ')' → logprob: -3.6054022312164307
    3. 'return' → logprob: -3.9804022312164307
    4. 'break' → logprob: -4.105401992797852
    5. ' if' → logprob: -5.105401992797852
    6. '   ' → logprob: -5.105401992797852
    7. '<|end|>' → logprob: -5.230401992797852
    8. 'print' → logprob: -5.480401992797852
    9. '           ' → logprob: -6.105401992797852
    10. '[' → logprob: -6.105401992797852

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08501226454973221
    2. 'break' → logprob: -3.335012197494507
    3. '   ' → logprob: -4.085012435913086
    4. ' if' → logprob: -4.335012435913086
    5. '       ' → logprob: -5.460012435913086
    6. '<|end|>' → logprob: -5.710012435913086
    7. '           ' → logprob: -5.835012435913086
    8. ')' → logprob: -6.460012435913086
    9. 'return' → logprob: -7.085012435913086
    10. 'print' → logprob: -7.835012435913086

Token 357: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.6332530975341797
    2. 'I' → logprob: -0.7582530975341797
    3. ' not' → logprob: -7.63325309753418
    4. ' ' → logprob: -9.13325309753418
    5. '   ' → logprob: -11.00825309753418
    6. 'not' → logprob: -11.63325309753418
    7. ' J' → logprob: -12.38325309753418
    8. 'J' → logprob: -12.38325309753418
    9. '  ' → logprob: -12.63325309753418
    10. ' K' → logprob: -12.63325309753418

Token 358: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.017322076484560966
    2. 'is' → logprob: -4.142322063446045
    3. '==' → logprob: -6.892322063446045
    4. ' ==' → logprob: -8.392322540283203
    5. '!=' → logprob: -11.267322540283203
    6. '   ' → logprob: -12.267322540283203
    7. ' !=' → logprob: -12.267322540283203
    8. ')' → logprob: -12.392322540283203
    9. '<|end|>' → logprob: -12.392322540283203
    10. '>' → logprob: -13.267322540283203

Token 359: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5037857294082642
    2. ' None' → logprob: -1.5037857294082642
    3. ' not' → logprob: -2.0037856101989746
    4. 'not' → logprob: -3.2537856101989746
    5. 'Not' → logprob: -11.503786087036133
    6. 'N' → logprob: -12.503786087036133
    7. 'none' → logprob: -12.503786087036133
    8. 'I' → logprob: -13.503786087036133
    9. '   ' → logprob: -14.128786087036133
    10. ' none' → logprob: -14.378786087036133

Token 360: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.100059156073257e-05
    2. ' None' → logprob: -9.750070571899414
    3. 'not' → logprob: -11.500070571899414
    4. 'N' → logprob: -13.500070571899414
    5. 'none' → logprob: -14.000070571899414
    6. 'Not' → logprob: -17.125070571899414
    7. '
' → logprob: -17.125070571899414
    8. '...' → logprob: -17.375070571899414
    9. '_None' → logprob: -17.375070571899414
    10. '```' → logprob: -17.500070571899414

Token 361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5835216641426086
    2. ':
' → logprob: -1.2085216045379639
    3. '       ' → logprob: -1.9585216045379639
    4. ' and' → logprob: -6.333521842956543
    5. ',' → logprob: -8.458521842956543
    6. '   ' → logprob: -9.208521842956543
    7. '           ' → logprob: -9.333521842956543
    8. '):
' → logprob: -10.208521842956543
    9. 'and' → logprob: -10.458521842956543
    10. '.' → logprob: -11.083521842956543

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002591946395114064
    2. '   ' → logprob: -6.627592086791992
    3. ' break' → logprob: -7.502592086791992
    4. '           ' → logprob: -8.627592086791992
    5. ' print' → logprob: -8.627592086791992
    6. 'print' → logprob: -8.752592086791992
    7. 'break' → logprob: -8.877592086791992
    8. '```' → logprob: -11.502592086791992
    9. '    ' → logprob: -12.440092086791992
    10. '	' → logprob: -12.502592086791992

Token 363: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36964112520217896
    2. 'break' (adapté à ' break') → logprob: -1.4946410655975342
    3. 'print' → logprob: -2.994641065597534
    4. ' break' → logprob: -3.494641065597534
    5. ' print' → logprob: -5.744641304016113
    6. '           ' → logprob: -7.994641304016113
    7. '   ' → logprob: -7.994641304016113
    8. 'for' → logprob: -9.244641304016113
    9. ' for' → logprob: -10.119641304016113
    10. '```' → logprob: -10.744641304016113

Token 364: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033728191629052162
    2. 'if' → logprob: -6.503372669219971
    3. 'else' → logprob: -7.503372669219971
    4. 'for' → logprob: -7.628372669219971
    5. ')' → logprob: -8.128373146057129
    6. 'result' → logprob: -10.003373146057129
    7. 'import' → logprob: -10.003373146057129
    8. '[' → logprob: -10.128373146057129
    9. 'while' → logprob: -10.128373146057129
    10. '#' → logprob: -10.253373146057129

Token 365: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004223323194310069
    2. 'if' → logprob: -8.375422477722168
    3. 'else' → logprob: -8.625422477722168
    4. 'stdout' → logprob: -12.375422477722168
    5. '```' → logprob: -13.500422477722168
    6. '-' → logprob: -13.625422477722168
    7. 'import' → logprob: -13.625422477722168
    8. 'for' → logprob: -13.875422477722168
    9. '   ' → logprob: -14.375422477722168
    10. 'I' → logprob: -14.500422477722168

Token 366: '('' (ID: 706)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.000859531108289957
    2. '(f' → logprob: -7.25085973739624
    3. '(' → logprob: -9.500859260559082
    4. '()' → logprob: -10.750859260559082
    5. '((' → logprob: -10.875859260559082
    6. '('' → logprob: -11.375859260559082
    7. '(i' → logprob: -11.750859260559082
    8. '(*' → logprob: -12.250859260559082
    9. '("' → logprob: -12.375859260559082
    10. 'I' → logprob: -13.125859260559082

Token 367: ''' (ID: 6)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.33965224027633667
    2. '1' → logprob: -1.3396522998809814
    3. '0' → logprob: -4.464652061462402
    4. ''' → logprob: -5.964652061462402
    5. '{' → logprob: -6.339652061462402
    6. '01' → logprob: -6.339652061462402
    7. 'i' → logprob: -6.589652061462402
    8. 'YES' → logprob: -6.589652061462402
    9. 'J' → logprob: -6.964652061462402
    10. '(' → logprob: -7.464652061462402

Token 368: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6217215657234192
    2. '(I' → logprob: -0.9967215657234192
    3. '('' → logprob: -3.6217215061187744
    4. ')' → logprob: -3.6217215061187744
    5. '()' → logprob: -3.7467215061187744
    6. '[' → logprob: -5.4967217445373535
    7. '(
' → logprob: -5.9967217445373535
    8. '[I' → logprob: -6.1217217445373535
    9. ',' → logprob: -6.3717217445373535
    10. '())' → logprob: -6.8717217445373535

Token 369: ' (' (ID: 350)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014243420213460922
    2. ' I' → logprob: -4.8892436027526855
    3. ' not' → logprob: -5.7642436027526855
    4. 'not' → logprob: -6.3892436027526855
    5. 'J' → logprob: -7.3892436027526855
    6. 'True' → logprob: -8.139243125915527
    7. 'K' → logprob: -8.764243125915527
    8. 'i' → logprob: -8.764243125915527
    9. '(I' → logprob: -9.139243125915527
    10. ''I' → logprob: -9.514243125915527

Token 370: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.017749972641468048
    2. 'J' → logprob: -4.392749786376953
    3. 'not' → logprob: -5.892749786376953
    4. 'K' → logprob: -6.892749786376953
    5. 'i' → logprob: -7.392749786376953
    6. ' not' → logprob: -7.892749786376953
    7. 'N' → logprob: -8.642749786376953
    8. ' I' → logprob: -8.642749786376953
    9. ')' → logprob: -10.517749786376953
    10. 'len' → logprob: -11.267749786376953

Token 371: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18761850893497467
    2. '==' → logprob: -2.1876184940338135
    3. ',' → logprob: -3.4376184940338135
    4. 'is' → logprob: -4.687618732452393
    5. ' ==' → logprob: -4.687618732452393
    6. ')' → logprob: -4.937618732452393
    7. ' ,' → logprob: -7.812618732452393
    8. 'and' → logprob: -8.937618255615234
    9. ' ' → logprob: -9.187618255615234
    10. '[' → logprob: -9.812618255615234

Token 372: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14030592143535614
    2. '0' → logprob: -2.640305995941162
    3. 'N' → logprob: -2.890305995941162
    4. ' None' → logprob: -5.640305995941162
    5. ' ' → logprob: -8.265305519104004
    6. ' N' → logprob: -9.015305519104004
    7. 'J' → logprob: -10.390305519104004
    8. '   ' → logprob: -11.765305519104004
    9. '1' → logprob: -12.015305519104004
    10. '-' → logprob: -12.015305519104004

Token 373: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001919002621434629
    2. '0' → logprob: -6.501918792724609
    3. 'N' → logprob: -8.37691879272461
    4. ' None' → logprob: -8.62691879272461
    5. '
' → logprob: -13.37691879272461
    6. ')' → logprob: -13.62691879272461
    7. '
' → logprob: -14.12691879272461
    8. ' ' → logprob: -14.37691879272461
    9. 'I' → logprob: -14.50191879272461
    10. '   ' → logprob: -14.50191879272461

Token 374: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006738342344760895
    2. 'else' → logprob: -5.381738185882568
    3. ' else' → logprob: -6.631738185882568
    4. '==' → logprob: -8.256738662719727
    5. 'or' → logprob: -8.631738662719727
    6. 'and' → logprob: -8.756738662719727
    7. ' )' → logprob: -9.131738662719727
    8. ' or' → logprob: -9.756738662719727
    9. ')==' → logprob: -11.381738662719727
    10. ' and' → logprob: -11.381738662719727

Token 375: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.011254366487264633
    2. ' J' → logprob: -4.51125431060791
    3. 'I' → logprob: -9.38625431060791
    4. 'not' → logprob: -10.13625431060791
    5. 'K' → logprob: -10.38625431060791
    6. ' not' → logprob: -10.76125431060791
    7. ')' → logprob: -11.63625431060791
    8. ' ' → logprob: -12.01125431060791
    9. 'd' → logprob: -12.26125431060791
    10. '  ' → logprob: -13.38625431060791

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17345188558101654
    2. ' ==' → logprob: -2.0484519004821777
    3. ')' → logprob: -3.6734519004821777
    4. '!=' → logprob: -5.923451900482178
    5. ' !=' → logprob: -7.173451900482178
    6. ')==' → logprob: -7.298451900482178
    7. ' )' → logprob: -8.04845142364502
    8. '[' → logprob: -8.79845142364502
    9. ' ' → logprob: -9.29845142364502
    10. ' is' → logprob: -10.29845142364502

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018899753922596574
    2. ' ' → logprob: -8.625188827514648
    3. '(' → logprob: -12.625188827514648
    4. ')' → logprob: -13.000188827514648
    5. 'len' → logprob: -13.750188827514648
    6. '1' → logprob: -14.125188827514648
    7. 'I' → logprob: -14.750188827514648
    8. 'N' → logprob: -14.750188827514648
    9. 'K' → logprob: -15.750188827514648
    10. 'Q' → logprob: -16.00018882751465

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004396095173433423
    2. '(' → logprob: -7.875439643859863
    3. ' ' → logprob: -10.125439643859863
    4. ')' → logprob: -11.500439643859863
    5. '((' → logprob: -12.875439643859863
    6. 'I' → logprob: -13.875439643859863
    7. '1' → logprob: -14.000439643859863
    8. '(I' → logprob: -14.500439643859863
    9. ' (' → logprob: -14.625439643859863
    10. 'N' → logprob: -14.750439643859863

Token 379: ')' (ID: 8)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5313258767127991
    2. ')' → logprob: -1.0313258171081543
    3. ' else' → logprob: -2.9063258171081543
    4. 'or' → logprob: -7.156325817108154
    5. ' or' → logprob: -9.531326293945312
    6. ' )' → logprob: -9.781326293945312
    7. '
' → logprob: -10.906326293945312
    8. '   ' → logprob: -12.031326293945312
    9. ' ' → logprob: -12.156326293945312
    10. ')
' → logprob: -12.531326293945312

Token 380: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.062257274985313416
    2. ' else' → logprob: -2.8122572898864746
    3. ')' → logprob: -8.437256813049316
    4. '
' → logprob: -10.812256813049316
    5. '+' → logprob: -11.187256813049316
    6. '   ' → logprob: -11.812256813049316
    7. 'or' → logprob: -11.937256813049316
    8. ',' → logprob: -12.687256813049316
    9. '```' → logprob: -12.937256813049316
    10. ' 
' → logprob: -13.062256813049316

Token 381: ' format' (ID: 6011)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.990733802318573
    2. 'bin' → logprob: -1.3657338619232178
    3. 'f' → logprob: -2.4907338619232178
    4. 'd' → logprob: -2.8657338619232178
    5. ''' → logprob: -3.6157338619232178
    6. 'next' → logprob: -3.7407338619232178
    7. 'str' → logprob: -3.8657338619232178
    8. 'J' → logprob: -3.9907338619232178
    9. ' ''.' → logprob: -3.9907338619232178
    10. 'I' → logprob: -4.240733623504639

Token 382: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -0.014995507895946503
    2. '(I' → logprob: -4.264995574951172
    3. '(' → logprob: -7.139995574951172
    4. '((' → logprob: -11.139995574951172
    5. '(j' → logprob: -11.389995574951172
    6. '(K' → logprob: -11.764995574951172
    7. '(i' → logprob: -13.889995574951172
    8. ')' → logprob: -14.014995574951172
    9. '(
' → logprob: -14.014995574951172
    10. 'J' → logprob: -14.639995574951172

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1596783995628357
    2. '(I' → logprob: -2.0346784591674805
    3. ',f' → logprob: -5.4096784591674805
    4. ','' → logprob: -5.4096784591674805
    5. '(f' → logprob: -6.0346784591674805
    6. ' ,' → logprob: -6.1596784591674805
    7. '(' → logprob: -7.0346784591674805
    8. '('' → logprob: -7.4096784591674805
    9. ',I' → logprob: -7.6596784591674805
    10. '(i' → logprob: -8.65967845916748

Token 384: ' '' (ID: 461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7718579173088074
    2. ''f' → logprob: -1.3968579769134521
    3. ''I' → logprob: -1.3968579769134521
    4. ''' → logprob: -3.396857976913452
    5. ' f' → logprob: -5.896857738494873
    6. ''i' → logprob: -6.021857738494873
    7. 'I' → logprob: -7.021857738494873
    8. '`' → logprob: -7.021857738494873
    9. 'b' → logprob: -7.271857738494873
    10. ''b' → logprob: -7.271857738494873

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11357608437538147
    2. 'b' → logprob: -2.2385761737823486
    3. ''' → logprob: -7.4885759353637695
    4. '{}' → logprob: -9.11357593536377
    5. ''b' → logprob: -10.48857593536377
    6. 'f' → logprob: -10.48857593536377
    7. '{' → logprob: -12.11357593536377
    8. ''I' → logprob: -12.36357593536377
    9. 'I' → logprob: -12.86357593536377
    10. ''i' → logprob: -12.86357593536377

Token 386: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03574569895863533
    2. '{' → logprob: -3.535745620727539
    3. 'b' → logprob: -5.785745620727539
    4. '{i' → logprob: -5.910745620727539
    5. '{})' → logprob: -9.410745620727539
    6. '0' → logprob: -10.035745620727539
    7. 'I' → logprob: -10.535745620727539
    8. '{}.' → logprob: -11.660745620727539
    9. '#' → logprob: -12.535745620727539
    10. '%' → logprob: -12.660745620727539

Token 387: 'b' (ID: 65)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03907058760523796
    2. 'b' → logprob: -3.2890706062316895
    3. '{' → logprob: -6.9140706062316895
    4. '{i' → logprob: -11.289070129394531
    5. '{})' → logprob: -11.539070129394531
    6. '{}
' → logprob: -12.414070129394531
    7. '{}\' → logprob: -13.289070129394531
    8. '{}.' → logprob: -13.414070129394531
    9. '
' → logprob: -13.539070129394531
    10. ' {}' → logprob: -14.039070129394531

Token 388: ''.' (ID: 6120)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8199913501739502
    2. '{}'.' → logprob: -1.5699913501739502
    3. '{}' → logprob: -1.8199913501739502
    4. '(I' → logprob: -1.8199913501739502
    5. '{i' → logprob: -4.069991111755371
    6. '')' → logprob: -5.569991111755371
    7. 'I' → logprob: -6.069991111755371
    8. '{})' → logprob: -6.444991111755371
    9. '(i' → logprob: -8.069991111755371
    10. ''))' → logprob: -8.069991111755371

Token 389: 'format' (ID: 4078)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.3274393081665039
    2. '{}' → logprob: -1.452439308166504
    3. '{' → logprob: -3.202439308166504
    4. '{i' → logprob: -6.327439308166504
    5. '(I' → logprob: -6.452439308166504
    6. 'i' → logprob: -7.827439308166504
    7. ' I' → logprob: -7.952439308166504
    8. '{})' → logprob: -9.327439308166504
    9. '$I' → logprob: -9.327439308166504
    10. '{}'.' → logprob: -9.827439308166504

Token 390: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.0012566609075292945
    2. '(i' → logprob: -6.876256465911865
    3. '(' → logprob: -9.376256942749023
    4. 'I' → logprob: -9.501256942749023
    5. '(N' → logprob: -10.376256942749023
    6. '((' → logprob: -11.251256942749023
    7. '(K' → logprob: -11.876256942749023
    8. '(
' → logprob: -12.501256942749023
    9. ')' → logprob: -13.001256942749023
    10. '(Q' → logprob: -13.501256942749023

Token 391: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.16040436923503876
    2. ')' → logprob: -2.4104044437408447
    3. '))' → logprob: -2.9104044437408447
    4. ')+' → logprob: -6.285404205322266
    5. '')))' → logprob: -6.785404205322266
    6. ')+'' → logprob: -8.410404205322266
    7. ')))
' → logprob: -8.660404205322266
    8. '+' → logprob: -9.035404205322266
    9. ''))' → logprob: -9.535404205322266
    10. 'I' → logprob: -9.910404205322266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 30.59%
Précision adaptée (1ère position): 32.13%
Précision (top 10): 80.46%
================================================================================
