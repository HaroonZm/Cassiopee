================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
X = list(map(int, input().split()))
somme = 0
for i in range(N):
    somme += X[i]
P = round(somme / N)
wa = 0
for i in range(N):
    diff = X[i] - P
    wa += diff * diff
print(wa)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027933192905038595
    2. '('' → logprob: -8.625279426574707
    3. '(N' → logprob: -10.000279426574707
    4. '(
' → logprob: -10.875279426574707
    5. '(input' → logprob: -11.250279426574707
    6. ''' → logprob: -12.125279426574707
    7. '```' → logprob: -12.375279426574707
    8. '("("' → logprob: -12.500279426574707
    9. '`' → logprob: -12.750279426574707
    10. '(`' → logprob: -13.125279426574707

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032420966774225235
    2. ')' → logprob: -3.7824208736419678
    3. '()' → logprob: -4.782421112060547
    4. '())' → logprob: -7.907421112060547
    5. '(
' → logprob: -9.032421112060547
    6. '```' → logprob: -10.282421112060547
    7. '(

' → logprob: -10.407421112060547
    8. '("("' → logprob: -10.657421112060547
    9. '(()' → logprob: -10.782421112060547
    10. '<|end|>' → logprob: -10.907421112060547

Token 5: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7158713936805725
    2. 'if' → logprob: -1.2158713340759277
    3. '\n' → logprob: -2.5908713340759277
    4. 's' → logprob: -3.7158713340759277
    5. 'i' → logprob: -3.8408713340759277
    6. 'x' → logprob: -4.215871334075928
    7. '```' → logprob: -4.340871334075928
    8. '`' → logprob: -4.715871334075928
    9. 'a' → logprob: -4.715871334075928
    10. ')' → logprob: -4.965871334075928

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028003640472888947
    2. '+' → logprob: -7.377800464630127
    3. '=' → logprob: -7.377800464630127
    4. '.' → logprob: -7.377800464630127
    5. ' =' → logprob: -8.252799987792969
    6. '_' → logprob: -9.377799987792969
    7. '[i' → logprob: -9.627799987792969
    8. '*' → logprob: -9.752799987792969
    9. ')' → logprob: -10.002799987792969
    10. '**' → logprob: -10.002799987792969

Token 7: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0138494968414307
    2. ' int' → logprob: -1.8888494968414307
    3. ' []' → logprob: -2.2638494968414307
    4. '[]' → logprob: -2.3888494968414307
    5. 'input' → logprob: -2.3888494968414307
    6. 'list' → logprob: -2.8888494968414307
    7. ' list' → logprob: -3.1388494968414307
    8. '0' → logprob: -3.3888494968414307
    9. ' input' → logprob: -3.5138494968414307
    10. '[int' → logprob: -4.263849258422852

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046868418576195836
    2. '[' → logprob: -8.500468254089355
    3. '(range' → logprob: -9.250468254089355
    4. '```' → logprob: -9.875468254089355
    5. '[(' → logprob: -10.375468254089355
    6. ')' → logprob: -11.000468254089355
    7. ' (' → logprob: -11.250468254089355
    8. ''s' → logprob: -11.625468254089355
    9. '`' → logprob: -11.750468254089355
    10. '(
' → logprob: -11.875468254089355

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18147560954093933
    2. '(' → logprob: -1.9314756393432617
    3. '(str' → logprob: -3.9314756393432617
    4. '(lambda' → logprob: -7.306475639343262
    5. 'int' → logprob: -8.431475639343262
    6. '(input' → logprob: -8.931475639343262
    7. '(
' → logprob: -9.806475639343262
    8. ')' → logprob: -9.931475639343262
    9. '```' → logprob: -9.931475639343262
    10. '<int' → logprob: -10.181475639343262

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09660329669713974
    2. ',input' → logprob: -2.5966033935546875
    3. ',' → logprob: -4.5966033935546875
    4. '(' → logprob: -5.0966033935546875
    5. '))' → logprob: -7.8466033935546875
    6. ')' → logprob: -8.221603393554688
    7. 'input' → logprob: -8.596603393554688
    8. '=input' → logprob: -8.971603393554688
    9. '(int' → logprob: -9.471603393554688
    10. ' ,' → logprob: -9.596603393554688

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760119557380676
    2. ' input' → logprob: -0.8260119557380676
    3. '(input' → logprob: -9.701011657714844
    4. ',input' → logprob: -12.076011657714844
    5. '=input' → logprob: -12.951011657714844
    6. ')' → logprob: -13.076011657714844
    7. '	input' → logprob: -15.201011657714844
    8. '<input' → logprob: -15.451011657714844
    9. ' ' → logprob: -15.451011657714844
    10. '[input' → logprob: -16.201011657714844

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13774286210536957
    2. '())' → logprob: -2.512742757797241
    3. '()' → logprob: -3.512742757797241
    4. '().' → logprob: -4.88774299621582
    5. '))' → logprob: -5.13774299621582
    6. '()));' → logprob: -6.26274299621582
    7. ')' → logprob: -6.51274299621582
    8. '(),' → logprob: -8.38774299621582
    9. '(' → logprob: -8.38774299621582
    10. '());' → logprob: -8.51274299621582

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009663687669672072
    2. 'strip' → logprob: -7.000966548919678
    3. 'rstrip' → logprob: -10.00096607208252
    4. ' split' → logprob: -11.62596607208252
    5. '(split' → logprob: -15.12596607208252
    6. 'spl' → logprob: -15.25096607208252
    7. ')' → logprob: -17.000967025756836
    8. 'read' → logprob: -17.500967025756836
    9. ' strip' → logprob: -17.625967025756836
    10. '.split' → logprob: -17.750967025756836

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.385749876499176
    2. ')' → logprob: -1.7607498168945312
    3. '()))' → logprob: -2.1357498168945312
    4. '())' → logprob: -3.6357498168945312
    5. '(' → logprob: -6.510749816894531
    6. '()' → logprob: -6.885749816894531
    7. '('' → logprob: -7.385749816894531
    8. ')))' → logprob: -8.760749816894531
    9. ''))' → logprob: -8.760749816894531
    10. '(','' → logprob: -9.385749816894531

Token 15: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.54990553855896
    2. 'count' → logprob: -1.79990553855896
    3. 'sum' → logprob: -2.17490553855896
    4. 'total' → logprob: -2.79990553855896
    5. 'X' → logprob: -2.92490553855896
    6. 'result' → logprob: -3.04990553855896
    7. 'S' → logprob: -3.17490553855896
    8. 'M' → logprob: -3.17490553855896
    9. 'c' → logprob: -3.29990553855896
    10. 'for' → logprob: -3.29990553855896

Token 16: 'omme' (ID: 30420)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5914627909660339
    2. 'um' → logprob: -0.8414627909660339
    3. '.' → logprob: -4.7164626121521
    4. '=' → logprob: -6.2164626121521
    5. '[u' → logprob: -6.8414626121521
    6. ' =' → logprob: -7.0914626121521
    7. '_u' → logprob: -7.5914626121521
    8. '(' → logprob: -7.9664626121521
    9. 'o' → logprob: -7.9664626121521
    10. '(u' → logprob: -8.091463088989258

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036512624472379684
    2. '_' → logprob: -3.536512613296509
    3. 's' → logprob: -5.786512851715088
    4. '[' → logprob: -6.911512851715088
    5. ')' → logprob: -7.161512851715088
    6. '()' → logprob: -7.536512851715088
    7. '_s' → logprob: -7.661512851715088
    8. '_sum' → logprob: -8.41151237487793
    9. '(s' → logprob: -8.78651237487793
    10. '(_)' → logprob: -9.41151237487793

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04521086439490318
    2. ' ' → logprob: -3.545210838317871
    3. ' sum' → logprob: -4.795210838317871
    4. 'sum' → logprob: -5.170210838317871
    5. ' X' → logprob: -6.795210838317871
    6. 'X' → logprob: -8.295210838317871
    7. '(sum' → logprob: -12.170210838317871
    8. 's' → logprob: -12.545210838317871
    9. ' max' → logprob: -13.045210838317871
    10. 'x' → logprob: -13.170210838317871

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06211008131504059
    2. 'sum' → logprob: -2.812110185623169
    3. 'X' → logprob: -8.93710994720459
    4. ' ' → logprob: -12.06210994720459
    5. ' sum' → logprob: -12.93710994720459
    6. '(sum' → logprob: -14.06210994720459
    7. 'max' → logprob: -14.18710994720459
    8. 'x' → logprob: -14.43710994720459
    9. 's' → logprob: -14.93710994720459
    10. '+' → logprob: -15.43710994720459

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014484523562714458
    2. ' for' → logprob: -6.876448631286621
    3. '
' → logprob: -8.126448631286621
    4. '\n' → logprob: -9.876448631286621
    5. '```' → logprob: -10.501448631286621
    6. '' → logprob: -11.501448631286621
    7. '+' → logprob: -12.001448631286621
    8. '<|end|>' → logprob: -12.751448631286621
    9. 'i' → logprob: -12.876448631286621
    10. ')' → logprob: -13.001448631286621

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003420183784328401
    2. ' for' → logprob: -8.12534236907959
    3. '
' → logprob: -10.75034236907959
    4. '\n' → logprob: -11.37534236907959
    5. '```' → logprob: -12.00034236907959
    6. 'i' → logprob: -13.25034236907959
    7. '' → logprob: -14.00034236907959
    8. '\' → logprob: -14.12534236907959
    9. '	for' → logprob: -14.37534236907959
    10. ')' → logprob: -14.75034236907959

Token 22: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12033354490995407
    2. ' ' → logprob: -2.245333433151245
    3. ' _' → logprob: -5.370333671569824
    4. '_' → logprob: -6.620333671569824
    5. 'i' → logprob: -7.120333671569824
    6. ' x' → logprob: -7.495333671569824
    7. ' X' → logprob: -9.495333671569824
    8. '  ' → logprob: -10.745333671569824
    9. ' ' → logprob: -11.745333671569824
    10. 'x' → logprob: -12.120333671569824

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01921970024704933
    2. ' ' → logprob: -4.394219875335693
    3. 'in' → logprob: -5.394219875335693
    4. '  ' → logprob: -6.269219875335693
    5. ' i' → logprob: -9.019219398498535
    6. '   ' → logprob: -10.894219398498535
    7. '[' → logprob: -11.019219398498535
    8. ')' → logprob: -11.019219398498535
    9. ' <' → logprob: -11.019219398498535
    10. '+' → logprob: -11.394219398498535

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007019887678325176
    2. 'range' → logprob: -5.007019996643066
    3. ' X' → logprob: -8.257019996643066
    4. 'X' → logprob: -10.882019996643066
    5. ' ' → logprob: -11.007019996643066
    6. ' xrange' → logprob: -12.507019996643066
    7. '	range' → logprob: -13.132019996643066
    8. '(range' → logprob: -13.882019996643066
    9. '  ' → logprob: -14.382019996643066
    10. ')' → logprob: -14.382019996643066

Token 25: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0881616622209549
    2. '(N' → logprob: -2.5881617069244385
    3. '(len' → logprob: -4.713161468505859
    4. ' (' → logprob: -8.96316146850586
    5. '(n' → logprob: -9.96316146850586
    6. '(i' → logprob: -9.96316146850586
    7. '(s' → logprob: -11.21316146850586
    8. '(
' → logprob: -11.83816146850586
    9. '(range' → logprob: -13.58816146850586
    10. '(`' → logprob: -13.58816146850586

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005740713328123093
    2. ')' → logprob: -5.630740642547607
    3. '+' → logprob: -6.380740642547607
    4. ' ):' → logprob: -8.255741119384766
    5. '):
' → logprob: -9.005741119384766
    6. ':' → logprob: -10.755741119384766
    7. '   ' → logprob: -11.880741119384766
    8. '**' → logprob: -12.380741119384766
    9. ' )' → logprob: -12.380741119384766
    10. '-' → logprob: -12.505741119384766

Token 27: '   ' (ID: 271)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.7484471797943115
    2. ' ' → logprob: -1.4984471797943115
    3. 's' → logprob: -1.8734471797943115
    4. '   ' → logprob: -2.6234471797943115
    5. ' 
' → logprob: -3.9984471797943115
    6. '    ' → logprob: -4.248447418212891
    7. ' s' → logprob: -4.623447418212891
    8. ' if' → logprob: -5.123447418212891
    9. '    
' → logprob: -5.498447418212891
    10. ' somm' → logprob: -5.748447418212891

Token 28: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.23034007847309113
    2. 's' → logprob: -1.6053401231765747
    3. ' somm' → logprob: -6.605340003967285
    4. ' som' → logprob: -6.855340003967285
    5. ' s' → logprob: -7.480340003967285
    6. ' ' → logprob: -7.855340003967285
    7. '   ' → logprob: -7.980340003967285
    8. ' sum' → logprob: -7.980340003967285
    9. ' soma' → logprob: -8.105340003967285
    10. ' sommet' → logprob: -9.105340003967285

Token 29: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0021352714393287897
    2. '+=' → logprob: -6.502135276794434
    3. ' ' → logprob: -8.002135276794434
    4. '+' → logprob: -8.377135276794434
    5. '<|end|>' → logprob: -10.252135276794434
    6. ' =' → logprob: -11.877135276794434
    7. '    ' → logprob: -12.127135276794434
    8. ' +' → logprob: -12.127135276794434
    9. '+='' → logprob: -12.502135276794434
    10. ')' → logprob: -13.627135276794434

Token 30: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1604091376066208
    2. ' X' → logprob: -1.9104090929031372
    3. ' ' → logprob: -8.785408973693848
    4. 'i' → logprob: -11.535408973693848
    5. ' i' → logprob: -12.160408973693848
    6. '	X' → logprob: -13.160408973693848
    7. ' ' → logprob: -13.160408973693848
    8. '   ' → logprob: -13.285408973693848
    9. '1' → logprob: -13.285408973693848
    10. 'x' → logprob: -13.410408973693848

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06207031011581421
    2. '[' → logprob: -2.812070369720459
    3. ' [' → logprob: -9.8120698928833
    4. '[
' → logprob: -10.4370698928833
    5. '[I' → logprob: -11.5620698928833
    6. '\[' → logprob: -13.3120698928833
    7. '[s' → logprob: -13.8120698928833
    8. 'i' → logprob: -14.0620698928833
    9. '```' → logprob: -14.5620698928833
    10. '[f' → logprob: -14.9370698928833

Token 32: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012873471714556217
    2. ']' → logprob: -4.887873649597168
    3. '])' → logprob: -5.512873649597168
    4. ' )' → logprob: -7.387873649597168
    5. ')]' → logprob: -7.762873649597168
    6. ')])' → logprob: -9.887873649597168
    7. '**' → logprob: -10.387873649597168
    8. ')
' → logprob: -11.137873649597168
    9. '*' → logprob: -11.262873649597168
    10. '）' → logprob: -11.637873649597168

Token 33: 'P' (ID: 47)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017973393201828003
    2. 's' → logprob: -5.14297342300415
    3. 'if' → logprob: -5.76797342300415
    4. ' print' → logprob: -6.76797342300415
    5. ' if' → logprob: -6.76797342300415
    6. '<|end|>' → logprob: -7.26797342300415
    7. '```' → logprob: -7.51797342300415
    8. ' ' → logprob: -7.64297342300415
    9. 'average' → logprob: -7.76797342300415
    10. '  
' → logprob: -7.89297342300415

Token 34: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. '(r' → logprob: -15.000000953674316
    3. '_r' → logprob: -15.750000953674316
    4. 'print' → logprob: -15.875000953674316
    5. '	r' → logprob: -16.250001907348633
    6. 'R' → logprob: -16.625001907348633
    7. '#' → logprob: -17.000001907348633
    8. ' r' → logprob: -17.000001907348633
    9. '=r' → logprob: -17.125001907348633
    10. ';r' → logprob: -17.125001907348633

Token 35: ' round' (ID: 7353)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5337558388710022
    2. ' somme' → logprob: -0.9087558388710022
    3. ' ' → logprob: -5.533755779266357
    4. '(s' → logprob: -6.533755779266357
    5. 'sum' → logprob: -6.533755779266357
    6. '1' → logprob: -6.908755779266357
    7. ' (' → logprob: -8.033756256103516
    8. ' sum' → logprob: -8.033756256103516
    9. '100' → logprob: -8.408756256103516
    10. '(' → logprob: -8.533756256103516

Token 36: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3510543406009674
    2. '(' → logprob: -1.226054310798645
    3. '((' → logprob: -6.1010541915893555
    4. '(sum' → logprob: -8.726054191589355
    5. 's' → logprob: -9.226054191589355
    6. ' (' → logprob: -9.351054191589355
    7. '(float' → logprob: -11.976054191589355
    8. '(len' → logprob: -13.101054191589355
    9. '(((' → logprob: -13.351054191589355
    10. '()' → logprob: -13.351054191589355

Token 37: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.18259987235069275
    2. 'ome' → logprob: -2.1825997829437256
    3. 'me' → logprob: -3.3075997829437256
    4. 'e' → logprob: -4.807600021362305
    5. 'o' → logprob: -5.057600021362305
    6. '/' → logprob: -7.557600021362305
    7. '+' → logprob: -7.682600021362305
    8. '*' → logprob: -7.807600021362305
    9. 'olle' → logprob: -8.182600021362305
    10. 'mme' → logprob: -8.307600021362305

Token 38: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.19185541570186615
    2. ' /' → logprob: -1.8168554306030273
    3. '/N' → logprob: -4.441855430603027
    4. ')' → logprob: -8.691855430603027
    5. '*' → logprob: -9.691855430603027
    6. '/n' → logprob: -11.691855430603027
    7. ' ' → logprob: -12.191855430603027
    8. '/i' → logprob: -12.441855430603027
    9. '/P' → logprob: -12.816855430603027
    10. ' *' → logprob: -13.191855430603027

Token 39: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00017982252757064998
    2. ' N' → logprob: -8.6251802444458
    3. ' ' → logprob: -16.625179290771484
    4. '   ' → logprob: -17.500179290771484
    5. ' ' → logprob: -17.750179290771484
    6. 'len' → logprob: -18.125179290771484
    7. '(' → logprob: -18.500179290771484
    8. ')' → logprob: -18.875179290771484
    9. '  ' → logprob: -19.375179290771484
    10. 'n' → logprob: -19.750179290771484

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '))' → logprob: -11.75001335144043
    3. ')
' → logprob: -13.37501335144043
    4. ')`' → logprob: -13.62501335144043
    5. ' )' → logprob: -14.00001335144043
    6. '`)' → logprob: -14.62501335144043
    7. '**' → logprob: -15.50001335144043
    8. ',' → logprob: -15.75001335144043
    9. '*' → logprob: -15.87501335144043
    10. '),' → logprob: -15.87501335144043

Token 41: 'wa' (ID: 1708)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05650004744529724
    2. 'for' → logprob: -2.93149995803833
    3. 'if' → logprob: -7.30649995803833
    4. 's' → logprob: -8.431500434875488
    5. ' for' → logprob: -9.056500434875488
    6. 'pr' → logprob: -9.556500434875488
    7. 'result' → logprob: -9.681500434875488
    8. ')' → logprob: -9.681500434875488
    9. 'diff' → logprob: -9.806500434875488
    10. '```' → logprob: -10.181500434875488

Token 42: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6774909496307373
    2. 'r' → logprob: -1.1774909496307373
    3. 'l' → logprob: -3.5524909496307373
    4. 'i' → logprob: -3.6774909496307373
    5. 'll' → logprob: -3.8024909496307373
    6. 'rr' → logprob: -3.9274909496307373
    7. 'nt' → logprob: -4.552491188049316
    8. 'p' → logprob: -4.927491188049316
    9. 'ter' → logprob: -4.927491188049316
    10. 's' → logprob: -5.427491188049316

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6702517867088318
    2. 'sum' → logprob: -1.4202518463134766
    3. 'abs' → logprob: -1.6702518463134766
    4. ' sum' → logprob: -4.545251846313477
    5. 'max' → logprob: -4.920251846313477
    6. '[' → logprob: -4.920251846313477
    7. 'P' → logprob: -5.295251846313477
    8. '[P' → logprob: -5.295251846313477
    9. ' ' → logprob: -5.420251846313477
    10. ' abs' → logprob: -5.545251846313477

Token 44: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.49558526277542114
    2. '0' → logprob: -1.3705852031707764
    3. 'abs' → logprob: -2.2455852031707764
    4. 'max' → logprob: -4.1205854415893555
    5. 'min' → logprob: -5.6205854415893555
    6. 'P' → logprob: -5.8705854415893555
    7. '[' → logprob: -6.2455854415893555
    8. '[P' → logprob: -6.4955854415893555
    9. 'X' → logprob: -6.6205854415893555
    10. 's' → logprob: -7.2455854415893555

Token 45: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07205737382173538
    2. '
' → logprob: -2.6970574855804443
    3. ' for' → logprob: -6.697057247161865
    4. '\n' → logprob: -7.197057247161865
    5. '' → logprob: -9.447057723999023
    6. '
' → logprob: -10.822057723999023
    7. '```' → logprob: -11.447057723999023
    8. '\' → logprob: -11.947057723999023
    9. '<|end|>' → logprob: -13.072057723999023
    10. '  
' → logprob: -13.197057723999023

Token 46: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -13.875001907348633
    3. '
' → logprob: -15.125001907348633
    4. '```' → logprob: -16.375001907348633
    5. '0' → logprob: -16.625001907348633
    6. 'fo' → logprob: -18.500001907348633
    7. 'f' → logprob: -19.375001907348633
    8. '1' → logprob: -19.750001907348633
    9. 'print' → logprob: -20.125001907348633
    10. '	for' → logprob: -20.375001907348633

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02328135259449482
    2. ' ' → logprob: -4.273281574249268
    3. 'i' → logprob: -4.773281574249268
    4. ' X' → logprob: -8.39828109741211
    5. ' range' → logprob: -8.52328109741211
    6. '  ' → logprob: -9.64828109741211
    7. 'range' → logprob: -10.39828109741211
    8. ' _' → logprob: -10.89828109741211
    9. 'X' → logprob: -10.89828109741211
    10. '<|end|>' → logprob: -11.77328109741211

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04610152915120125
    2. 'in' → logprob: -3.1711015701293945
    3. ' ' → logprob: -5.7961015701293945
    4. '  ' → logprob: -10.921101570129395
    5. 'n' → logprob: -11.296101570129395
    6. 'range' → logprob: -12.296101570129395
    7. '	in' → logprob: -13.046101570129395
    8. '   ' → logprob: -13.171101570129395
    9. ',' → logprob: -13.171101570129395
    10. 'In' → logprob: -13.296101570129395

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02055753581225872
    2. ' range' → logprob: -3.8955576419830322
    3. 'X' → logprob: -11.645557403564453
    4. '(range' → logprob: -12.145557403564453
    5. '	range' → logprob: -14.270557403564453
    6. ' xrange' → logprob: -15.020557403564453
    7. ' ' → logprob: -15.770557403564453
    8. ' X' → logprob: -16.395557403564453
    9. '  ' → logprob: -16.645557403564453
    10. ')' → logprob: -16.770557403564453

Token 50: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3336476683616638
    2. '(' → logprob: -1.3336477279663086
    3. ' (' → logprob: -4.208647727966309
    4. '(range' → logprob: -5.458647727966309
    5. ' range' → logprob: -7.208647727966309
    6. ' ' → logprob: -8.958647727966309
    7. '(n' → logprob: -9.458647727966309
    8. 'range' → logprob: -10.333647727966309
    9. '(s' → logprob: -11.208647727966309
    10. '(P' → logprob: -11.333647727966309

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021675480529665947
    2. '):
' → logprob: -3.8966755867004395
    3. ':' → logprob: -7.5216755867004395
    4. ')' → logprob: -7.7716755867004395
    5. '):
' → logprob: -9.271675109863281
    6. ' ):' → logprob: -10.146675109863281
    7. '   ' → logprob: -11.396675109863281
    8. '+' → logprob: -11.646675109863281
    9. ' ' → logprob: -12.146675109863281
    10. '):

' → logprob: -12.646675109863281

Token 52: '   ' (ID: 271)
  Prédit: ' wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wa' → logprob: -0.322610467672348
    2. '   ' → logprob: -1.3226104974746704
    3. ' ' → logprob: -5.197610378265381
    4. 'wa' → logprob: -6.447610378265381
    5. '```' → logprob: -7.822610378265381
    6. ' if' → logprob: -7.947610378265381
    7. '    ' → logprob: -8.197610855102539
    8. ' w' → logprob: -8.697610855102539
    9. '<|end|>' → logprob: -8.697610855102539
    10. ' ```' → logprob: -9.197610855102539

Token 53: ' diff' (ID: 8868)
  Prédit: ' wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wa' → logprob: -0.01818869262933731
    2. 'wa' → logprob: -4.0181884765625
    3. '   ' → logprob: -10.8931884765625
    4. '```' → logprob: -11.3931884765625
    5. '  ' → logprob: -12.3931884765625
    6. '    ' → logprob: -13.3931884765625
    7. ' waiver' → logprob: -13.8931884765625
    8. ' ' → logprob: -14.5181884765625
    9. '-wa' → logprob: -14.6431884765625
    10. '	' → logprob: -15.6431884765625

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020846186205744743
    2. '=' → logprob: -3.895846128463745
    3. ' +=' → logprob: -8.270846366882324
    4. ' ' → logprob: -10.520846366882324
    5. ' -=' → logprob: -11.770846366882324
    6. '+=' → logprob: -12.520846366882324
    7. 's' → logprob: -12.645846366882324
    8. ' |=' → logprob: -13.770846366882324
    9. ' ' → logprob: -13.895846366882324
    10. '  ' → logprob: -13.895846366882324

Token 55: ' X' (ID: 2127)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.782997190952301
    2. 'X' → logprob: -1.4079971313476562
    3. ' abs' → logprob: -1.9079971313476562
    4. ' X' → logprob: -1.9079971313476562
    5. '(abs' → logprob: -6.907997131347656
    6. '(X' → logprob: -8.532997131347656
    7. '   ' → logprob: -8.532997131347656
    8. ' (' → logprob: -9.782997131347656
    9. ' ' → logprob: -10.157997131347656
    10. '	X' → logprob: -10.782997131347656

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -10.250056266784668
    3. '[I' → logprob: -11.000056266784668
    4. ' [' → logprob: -13.250056266784668
    5. 'i' → logprob: -14.000056266784668
    6. '```' → logprob: -15.250056266784668
    7. '[
' → logprob: -15.500056266784668
    8. '[ii' → logprob: -16.125057220458984
    9. '[s' → logprob: -16.312557220458984
    10. ' ' → logprob: -16.312557220458984

Token 57: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47442904114723206
    2. '-' → logprob: -0.9744290113449097
    3. '-P' → logprob: -7.974429130554199
    4. ' ' → logprob: -12.3494291305542
    5. ')' → logprob: -13.3494291305542
    6. ' ' → logprob: -14.4744291305542
    7. '   ' → logprob: -14.8494291305542
    8. '  ' → logprob: -15.3494291305542
    9. ' abs' → logprob: -16.224428176879883
    10. 'abs' → logprob: -16.474428176879883

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31329071521759033
    2. ' -' → logprob: -1.3132907152175903
    3. '-P' → logprob: -10.5632905960083
    4. ' ' → logprob: -13.8132905960083
    5. ' ' → logprob: -14.0632905960083
    6. ' abs' → logprob: -15.0632905960083
    7. 'abs' → logprob: -15.3132905960083
    8. ' P' → logprob: -16.563291549682617
    9. '-W' → logprob: -16.563291549682617
    10. '<|end|>' → logprob: -16.563291549682617

Token 59: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.25193724036216736
    2. ' P' → logprob: -1.5019372701644897
    3. ' ' → logprob: -12.001936912536621
    4. ' ' → logprob: -14.876936912536621
    5. '<|end|>' → logprob: -14.876936912536621
    6. '	P' → logprob: -15.126936912536621
    7. '>P' → logprob: -15.376936912536621
    8. '  ' → logprob: -16.001937866210938
    9. '   ' → logprob: -16.376937866210938
    10. ')' → logprob: -16.439437866210938

Token 60: '
' (ID: 198)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.2305653989315033
    2. '
' → logprob: -1.8555654287338257
    3. '**' → logprob: -3.605565309524536
    4. ' wa' → logprob: -4.105565547943115
    5. 'if' → logprob: -5.480565547943115
    6. 'w' → logprob: -8.105565071105957
    7. '
' → logprob: -8.105565071105957
    8. '*' → logprob: -8.480565071105957
    9. 'a' → logprob: -8.480565071105957
    10. 'abs' → logprob: -8.480565071105957

Token 61: '   ' (ID: 271)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.012342941015958786
    2. ' wa' → logprob: -5.012342929840088
    3. 'if' → logprob: -5.762342929840088
    4. '
' → logprob: -7.137342929840088
    5. ' if' → logprob: -7.262342929840088
    6. '   ' → logprob: -8.262343406677246
    7. '**' → logprob: -8.387343406677246
    8. '*' → logprob: -8.387343406677246
    9. '```' → logprob: -9.512343406677246
    10. '>' → logprob: -10.137343406677246

Token 62: ' wa' (ID: 3123)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' (adapté à ' wa') → logprob: -0.008158494718372822
    2. ' wa' → logprob: -4.8831586837768555
    3. 'if' → logprob: -7.7581586837768555
    4. ' if' → logprob: -9.883158683776855
    5. 'w' → logprob: -10.383158683776855
    6. 'diff' → logprob: -11.008158683776855
    7. '**' → logprob: -12.383158683776855
    8. 'aw' → logprob: -12.383158683776855
    9. ' ' → logprob: -13.133158683776855
    10. 'abs' → logprob: -13.195658683776855

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39313945174217224
    2. '+=' → logprob: -1.1431394815444946
    3. '**' → logprob: -5.518139362335205
    4. ' =' → logprob: -7.143139362335205
    5. '=' → logprob: -7.643139362335205
    6. ' ' → logprob: -8.518139839172363
    7. '2' → logprob: -8.643139839172363
    8. '   ' → logprob: -9.018139839172363
    9. '  ' → logprob: -9.643139839172363
    10. 'b' → logprob: -9.768139839172363

Token 64: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8135190010070801
    2. 'abs' → logprob: -0.9385190010070801
    3. ' abs' → logprob: -2.43851900100708
    4. ' diff' → logprob: -2.56351900100708
    5. '(abs' → logprob: -7.56351900100708
    6. '(diff' → logprob: -7.68851900100708
    7. '(' → logprob: -10.188518524169922
    8. ' (' → logprob: -10.313518524169922
    9. '	diff' → logprob: -10.438518524169922
    10. 'pow' → logprob: -10.688518524169922

Token 65: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1277206391096115
    2. '*' → logprob: -2.127720594406128
    3. ' **' → logprob: -8.002720832824707
    4. 'diff' → logprob: -8.002720832824707
    5. '2' → logprob: -9.752720832824707
    6. ' *' → logprob: -10.377720832824707
    7. ' diff' → logprob: -11.502720832824707
    8. ' ' → logprob: -11.752720832824707
    9. 'abs' → logprob: -12.127720832824707
    10. '(diff' → logprob: -12.502720832824707

Token 66: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.008965885266661644
    2. ' diff' → logprob: -4.758965969085693
    3. '	diff' → logprob: -8.508965492248535
    4. '(diff' → logprob: -10.008965492248535
    5. 'abs' → logprob: -10.508965492248535
    6. '*' → logprob: -10.633965492248535
    7. 'd' → logprob: -11.133965492248535
    8. '.diff' → logprob: -11.883965492248535
    9. '2' → logprob: -12.258965492248535
    10. 'dif' → logprob: -12.383965492248535

Token 67: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10545273125171661
    2. '
' → logprob: -2.3554527759552
    3. '<|end|>' → logprob: -5.730452537536621
    4. ' print' → logprob: -7.105452537536621
    5. '\n' → logprob: -7.355452537536621
    6. '
' → logprob: -8.355452537536621
    7. ')' → logprob: -9.605452537536621
    8. ' 
' → logprob: -10.105452537536621
    9. '' → logprob: -10.230452537536621
    10. '  
' → logprob: -10.605452537536621

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005302538629621267
    2. '
' → logprob: -5.255302429199219
    3. ' print' → logprob: -10.255302429199219
    4. '
' → logprob: -11.505302429199219
    5. '  
' → logprob: -11.880302429199219
    6. ' 
' → logprob: -12.380302429199219
    7. '    
' → logprob: -12.630302429199219
    8. '```' → logprob: -12.880302429199219
    9. '<|end|>' → logprob: -13.630302429199219
    10. 'wa' → logprob: -14.130302429199219

Token 69: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009913324378430843
    2. '(P' → logprob: -5.634913444519043
    3. '(s' → logprob: -6.384913444519043
    4. '()' → logprob: -6.509913444519043
    5. '(sum' → logprob: -6.634913444519043
    6. '(w' → logprob: -7.384913444519043
    7. '((' → logprob: -8.134913444519043
    8. '(round' → logprob: -8.384913444519043
    9. '(W' → logprob: -8.509913444519043
    10. '(abs' → logprob: -8.884913444519043

Token 70: 'wa' (ID: 1708)
  Prédit: 'wa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.00033403540146537125
    2. ' wa' → logprob: -8.375333786010742
    3. ')' → logprob: -10.125333786010742
    4. '(' → logprob: -11.625333786010742
    5. 'WA' → logprob: -11.625333786010742
    6. 'round' → logprob: -11.750333786010742
    7. 'Wa' → logprob: -11.750333786010742
    8. 'P' → logprob: -11.875333786010742
    9. 'int' → logprob: -12.500333786010742
    10. 'w' → logprob: -13.250333786010742

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. '))' → logprob: -13.125003814697266
    3. ' )' → logprob: -13.625003814697266
    4. ')`' → logprob: -15.000003814697266
    5. '`)' → logprob: -16.250003814697266
    6. ')}' → logprob: -16.750003814697266
    7. '')' → logprob: -17.375003814697266
    8. ')
' → logprob: -17.500003814697266
    9. ')**' → logprob: -17.625003814697266
    10. '})' → logprob: -17.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 34.78%
Précision adaptée (1ère position): 36.23%
Précision (top 10): 79.71%
================================================================================
