================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, C = [int(_) for _ in input().split()]
lst = [A, B, C]
lst_sorted = sorted(lst)
if lst_sorted[1] == C:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11805965006351471
    2. '+' → logprob: -2.9930596351623535
    3. '.' → logprob: -4.2430596351623535
    4. ')' → logprob: -4.2430596351623535
    5. ',' → logprob: -4.6180596351623535
    6. '[' → logprob: -5.1180596351623535
    7. ';' → logprob: -5.6180596351623535
    8. ' =' → logprob: -5.6180596351623535
    9. '(' → logprob: -5.8680596351623535
    10. ':' → logprob: -5.9930596351623535

Token 4: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17269600927829742
    2. ',' → logprob: -2.297696113586426
    3. 'C' → logprob: -3.422696113586426
    4. ' =' → logprob: -4.297696113586426
    5. '.' → logprob: -5.172696113586426
    6. ' ' → logprob: -6.547696113586426
    7. ')' → logprob: -6.672696113586426
    8. ',C' → logprob: -6.797696113586426
    9. '+' → logprob: -7.672696113586426
    10. ':' → logprob: -8.172696113586426

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7694703936576843
    2. ')' → logprob: -1.894470453262329
    3. ';' → logprob: -2.394470453262329
    4. ',' → logprob: -2.894470453262329
    5. 'D' → logprob: -2.894470453262329
    6. ':' → logprob: -3.144470453262329
    7. '.' → logprob: -3.144470453262329
    8. '(' → logprob: -3.269470453262329
    9. '+' → logprob: -4.01947021484375
    10. '<|end|>' → logprob: -4.26947021484375

Token 6: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5445986986160278
    2. '0' → logprob: -1.9195986986160278
    3. '1' → logprob: -2.5445985794067383
    4. ' [' → logprob: -2.6695985794067383
    5. '[' → logprob: -3.6695985794067383
    6. ' []' → logprob: -3.7945985794067383
    7. '[]' → logprob: -3.9195985794067383
    8. ' map' → logprob: -4.419598579406738
    9. '10' → logprob: -4.794598579406738
    10. 'map' → logprob: -5.169598579406738

Token 7: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6593079566955566
    2. '0' → logprob: -1.5343079566955566
    3. '1' → logprob: -1.6593079566955566
    4. '[]' → logprob: -2.9093079566955566
    5. '[' → logprob: -4.034307956695557
    6. '[],' → logprob: -6.409307956695557
    7. '10' → logprob: -7.159307956695557
    8. '[int' → logprob: -7.659307956695557
    9. '][' → logprob: -8.034307479858398
    10. ']int' → logprob: -8.034307479858398

Token 8: '(_)' (ID: 108255)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5514867305755615
    2. '(x' → logprob: -1.3014867305755615
    3. ']' → logprob: -2.3014867305755615
    4. '(i' → logprob: -4.176486968994141
    5. '(s' → logprob: -4.426486968994141
    6. '(token' → logprob: -5.051486968994141
    7. '(input' → logprob: -5.301486968994141
    8. '()]' → logprob: -5.426486968994141
    9. '(line' → logprob: -6.176486968994141
    10. '(item' → logprob: -6.426486968994141

Token 9: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0912233293056488
    2. '(i' → logprob: -2.7162232398986816
    3. '(input' → logprob: -4.216223239898682
    4. '(s' → logprob: -6.341223239898682
    5. 'input' → logprob: -6.591223239898682
    6. 'x' → logprob: -6.716223239898682
    7. ')' → logprob: -7.341223239898682
    8. ']' → logprob: -7.466223239898682
    9. 'for' → logprob: -8.46622371673584
    10. 'i' → logprob: -9.09122371673584

Token 10: ' _' (ID: 1175)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10053541511297226
    2. 'input' → logprob: -2.3505353927612305
    3. '_' → logprob: -8.60053539276123
    4. ' range' → logprob: -9.72553539276123
    5. ' ' → logprob: -10.47553539276123
    6. 'range' → logprob: -10.85053539276123
    7. ' raw' → logprob: -11.85053539276123
    8. ' line' → logprob: -11.97553539276123
    9. '(input' → logprob: -12.22553539276123
    10. 'raw' → logprob: -12.47553539276123

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09573499858379364
    2. ' input' → logprob: -3.3457350730895996
    3. 'in' → logprob: -3.5957350730895996
    4. 'input' → logprob: -3.5957350730895996
    5. ' range' → logprob: -7.3457350730896
    6. 'range' → logprob: -7.8457350730896
    7. ' ' → logprob: -9.220734596252441
    8. ')' → logprob: -11.595734596252441
    9. '(' → logprob: -11.970734596252441
    10. ']' → logprob: -12.220734596252441

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021691024303436
    2. ' input' → logprob: -2.350216865539551
    3. 'range' → logprob: -11.85021686553955
    4. '(input' → logprob: -13.22521686553955
    5. ' range' → logprob: -14.72521686553955
    6. '<input' → logprob: -15.47521686553955
    7. '=input' → logprob: -15.97521686553955
    8. ' ' → logprob: -16.225217819213867
    9. '[input' → logprob: -16.225217819213867
    10. 'open' → logprob: -16.725217819213867

Token 13: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.015855813398957253
    2. '()' → logprob: -4.26585578918457
    3. '().' → logprob: -7.14085578918457
    4. '(' → logprob: -7.64085578918457
    5. '())' → logprob: -8.64085578918457
    6. '()][' → logprob: -9.39085578918457
    7. '()].' → logprob: -9.76585578918457
    8. ']' → logprob: -10.01585578918457
    9. '()],' → logprob: -11.39085578918457
    10. ']()' → logprob: -11.64085578918457

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019374389667063951
    2. 'strip' → logprob: -6.501937389373779
    3. 'rstrip' → logprob: -7.751937389373779
    4. ' split' → logprob: -12.376937866210938
    5. 'spl' → logprob: -14.751937866210938
    6. 'replace' → logprob: -15.376937866210938
    7. 'read' → logprob: -16.376937866210938
    8. '(split' → logprob: -16.876937866210938
    9. ' strip' → logprob: -18.001937866210938
    10. 'rs' → logprob: -18.376937866210938

Token 15: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001948152668774128
    2. '()' → logprob: -7.126948356628418
    3. '(' → logprob: -7.251948356628418
    4. '())' → logprob: -8.251948356628418
    5. '('' → logprob: -8.751948356628418
    6. '()][' → logprob: -12.626948356628418
    7. ']' → logprob: -12.876948356628418
    8. '("' → logprob: -13.126948356628418
    9. '()],' → logprob: -13.126948356628418
    10. '(()' → logprob: -13.501948356628418

Token 16: 'lst' (ID: 65430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2209712564945221
    2. 'i' → logprob: -2.7209713459014893
    3. '+' → logprob: -3.0959713459014893
    4. '#' → logprob: -4.09597110748291
    5. ' if' → logprob: -4.59597110748291
    6. 'x' → logprob: -4.59597110748291
    7. '*' → logprob: -4.72097110748291
    8. '>' → logprob: -4.72097110748291
    9. '```' → logprob: -4.84597110748291
    10. ',' → logprob: -5.09597110748291

Token 17: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06705953180789948
    2. '[' → logprob: -2.8170595169067383
    3. '(' → logprob: -5.817059516906738
    4. 's' → logprob: -7.192059516906738
    5. '.append' → logprob: -7.942059516906738
    6. ' .' → logprob: -8.817059516906738
    7. '```' → logprob: -9.317059516906738
    8. '_' → logprob: -9.692059516906738
    9. '[:]' → logprob: -9.817059516906738
    10. '.setdefault' → logprob: -9.817059516906738

Token 18: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.48841986060142517
    2. '[input' → logprob: -2.238419771194458
    3. '[]' → logprob: -2.363419771194458
    4. '[int' → logprob: -2.613419771194458
    5. '[' → logprob: -2.863419771194458
    6. ' []' → logprob: -3.113419771194458
    7. '[A' → logprob: -5.113420009613037
    8. '[list' → logprob: -6.488420009613037
    9. '[a' → logprob: -7.238420009613037
    10. 'list' → logprob: -7.363420009613037

Token 19: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3471510112285614
    2. '0' → logprob: -1.5971510410308838
    3. 'int' → logprob: -2.722151041030884
    4. ' A' → logprob: -4.097150802612305
    5. 'i' → logprob: -5.472150802612305
    6. '_' → logprob: -6.347150802612305
    7. ' ' → logprob: -7.222150802612305
    8. ' int' → logprob: -7.472150802612305
    9. '_]' → logprob: -7.847150802612305
    10. ']' → logprob: -8.472150802612305

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005851408001035452
    2. ',B' → logprob: -5.3808512687683105
    3. ' ,' → logprob: -6.8808512687683105
    4. '+' → logprob: -9.755851745605469
    5. '*' → logprob: -10.630851745605469
    6. ']' → logprob: -10.630851745605469
    7. ',A' → logprob: -10.755851745605469
    8. ')' → logprob: -11.005851745605469
    9. ',C' → logprob: -11.255851745605469
    10. '-' → logprob: -12.005851745605469

Token 21: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141714811325073
    2. ' B' → logprob: -1.7014172077178955
    3. ' ' → logprob: -14.076416969299316
    4. ' ' → logprob: -14.076416969299316
    5. ',' → logprob: -14.326416969299316
    6. ''' → logprob: -14.326416969299316
    7. ',B' → logprob: -14.951416969299316
    8. '`' → logprob: -15.951416969299316
    9. '_B' → logprob: -16.076417922973633
    10. 'space' → logprob: -16.326417922973633

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003613256849348545
    2. ' ,' → logprob: -8.625361442565918
    3. ',C' → logprob: -9.125361442565918
    4. ')' → logprob: -10.625361442565918
    5. ',
' → logprob: -10.875361442565918
    6. 'C' → logprob: -11.250361442565918
    7. ']' → logprob: -11.625361442565918
    8. '<|end|>' → logprob: -13.250361442565918
    9. ',

' → logprob: -13.625361442565918
    10. ')]' → logprob: -14.000361442565918

Token 23: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3485102355480194
    2. ' C' → logprob: -1.2235102653503418
    3. ' ' → logprob: -10.473509788513184
    4. ',' → logprob: -10.473509788513184
    5. ' ,' → logprob: -12.848509788513184
    6. ',C' → logprob: -13.098509788513184
    7. ')' → logprob: -14.098509788513184
    8. ' ' → logprob: -14.223509788513184
    9. ''' → logprob: -14.348509788513184
    10. '	C' → logprob: -15.098509788513184

Token 24: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9623810658231378e-05
    2. ')' → logprob: -11.875020027160645
    3. ' ]' → logprob: -12.250020027160645
    4. ')]' → logprob: -12.875020027160645
    5. '']' → logprob: -13.625020027160645
    6. '`]' → logprob: -13.750020027160645
    7. ']
' → logprob: -14.125020027160645
    8. ',' → logprob: -14.250020027160645
    9. '])' → logprob: -14.375020027160645
    10. '],' → logprob: -15.500020027160645

Token 25: 'lst' (ID: 65430)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.18934789299964905
    2. '.' → logprob: -1.9393478631973267
    3. 'lst' → logprob: -4.189347743988037
    4. '.
' → logprob: -5.439347743988037
    5. 's' → logprob: -5.689347743988037
    6. '
' → logprob: -5.814347743988037
    7. 'sorted' → logprob: -7.064347743988037
    8. '.sorted' → logprob: -7.689347743988037
    9. 'sort' → logprob: -7.814347743988037
    10. '```' → logprob: -8.189348220825195

Token 26: '_sorted' (ID: 104993)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0060144662857056
    2. '.sort' → logprob: -1.2560144662857056
    3. '[' → logprob: -1.3810144662857056
    4. '<|end|>' → logprob: -2.381014347076416
    5. '```' → logprob: -6.506014347076416
    6. '
' → logprob: -7.006014347076416
    7. '<|end|>' → logprob: -7.131014347076416
    8. 'sort' → logprob: -7.881014347076416
    9. '[:]' → logprob: -8.006014823913574
    10. '_sorted' → logprob: -8.131014823913574

Token 27: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8884492516517639
    2. '.sort' → logprob: -1.3884491920471191
    3. '()' → logprob: -2.013449192047119
    4. '().' → logprob: -2.138449192047119
    5. '_sorted' → logprob: -3.888449192047119
    6. '(' → logprob: -4.013449192047119
    7. '(.)' → logprob: -4.638449192047119
    8. '(.' → logprob: -4.888449192047119
    9. '[:]' → logprob: -5.263449192047119
    10. '.sorted' → logprob: -5.513449192047119

Token 28: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.029752222821116447
    2. ' sorted' → logprob: -3.529752254486084
    3. '(sorted' → logprob: -13.779751777648926
    4. '   ' → logprob: -15.154751777648926
    5. '.sorted' → logprob: -15.279751777648926
    6. ' ' → logprob: -15.779751777648926
    7. '  ' → logprob: -17.654752731323242
    8. 'lst' → logprob: -17.904752731323242
    9. 's' → logprob: -18.029752731323242
    10. ' ' → logprob: -18.529752731323242

Token 29: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.007630177307873964
    2. '(' → logprob: -4.882630348205566
    3. '(list' → logprob: -11.507630348205566
    4. '(ls' → logprob: -11.882630348205566
    5. 'lst' → logprob: -13.132630348205566
    6. '(
' → logprob: -13.257630348205566
    7. '(

' → logprob: -14.507630348205566
    8. '(`' → logprob: -14.882630348205566
    9. ' (' → logprob: -15.007630348205566
    10. '(l' → logprob: -15.132630348205566

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.386147626675665e-05
    2. ',' → logprob: -9.875073432922363
    3. '))' → logprob: -11.625073432922363
    4. ')
' → logprob: -12.625073432922363
    5. ' )' → logprob: -12.625073432922363
    6. '[' → logprob: -13.625073432922363
    7. ']' → logprob: -13.750073432922363
    8. '])' → logprob: -14.625073432922363
    9. ')]' → logprob: -14.875073432922363
    10. ')

' → logprob: -15.000073432922363

Token 31: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04206079617142677
    2. 'print' → logprob: -3.9170608520507812
    3. 'for' → logprob: -4.167060852050781
    4. '[' → logprob: -6.542060852050781
    5. 'max' → logprob: -7.417060852050781
    6. 'min' → logprob: -7.542060852050781
    7. ' if' → logprob: -7.792060852050781
    8. 'A' → logprob: -7.917060852050781
    9. 'i' → logprob: -7.917060852050781
    10. '```' → logprob: -8.542060852050781

Token 32: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.0004167297447565943
    2. 'lst' → logprob: -7.8754167556762695
    3. ' ' → logprob: -10.62541675567627
    4. ' len' → logprob: -12.25041675567627
    5. '(lst' → logprob: -13.12541675567627
    6. '_lst' → logprob: -13.62541675567627
    7. ' A' → logprob: -13.62541675567627
    8. ' ls' → logprob: -13.75041675567627
    9. ' l' → logprob: -14.00041675567627
    10. ' space' → logprob: -14.75041675567627

Token 33: '_sorted' (ID: 104993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020290540531277657
    2. '_sorted' → logprob: -4.145290374755859
    3. '==' → logprob: -6.395290374755859
    4. '!=' → logprob: -7.395290374755859
    5. ' !=' → logprob: -7.645290374755859
    6. '[_' → logprob: -7.770290374755859
    7. ' ==' → logprob: -7.895290374755859
    8. '_' → logprob: -8.02029037475586
    9. '[:]' → logprob: -8.89529037475586
    10. '[-' → logprob: -9.52029037475586

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01861611008644104
    2. ' ==' → logprob: -4.768616199493408
    3. ' !=' → logprob: -5.018616199493408
    4. '==' → logprob: -6.268616199493408
    5. '!=' → logprob: -7.268616199493408
    6. ' [' → logprob: -7.643616199493408
    7. '[-' → logprob: -9.14361572265625
    8. '[:]' → logprob: -9.26861572265625
    9. ' ' → logprob: -11.14361572265625
    10. ':' → logprob: -11.39361572265625

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032841868698596954
    2. '1' → logprob: -3.657841920852661
    3. ' ' → logprob: -5.157841682434082
    4. '2' → logprob: -7.282841682434082
    5. '-' → logprob: -9.782841682434082
    6. ']' → logprob: -11.657841682434082
    7. '  ' → logprob: -12.970341682434082
    8. '   ' → logprob: -13.032841682434082
    9. '[' → logprob: -13.720341682434082
    10. ':' → logprob: -14.032841682434082

Token 36: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8246083855628967
    2. ' <' → logprob: -1.074608325958252
    3. ' <=' → logprob: -2.199608325958252
    4. ' ==' → logprob: -3.324608325958252
    5. ']' → logprob: -3.574608325958252
    6. '>' → logprob: -4.074608325958252
    7. ' >=' → logprob: -4.449608325958252
    8. ' !=' → logprob: -5.074608325958252
    9. '<' → logprob: -5.699608325958252
    10. ' ' → logprob: -5.824608325958252

Token 37: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0215622186660767
    2. ' ==' → logprob: -1.7715622186660767
    3. '<' → logprob: -1.8965622186660767
    4. ' !=' → logprob: -2.396562099456787
    5. ' >' → logprob: -2.646562099456787
    6. ' <=' → logprob: -3.021562099456787
    7. '==' → logprob: -3.146562099456787
    8. '>' → logprob: -3.521562099456787
    9. '!=' → logprob: -4.146562099456787
    10. '<=' → logprob: -4.771562099456787

Token 38: ' C' (ID: 363)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.4716954827308655
    2. ' lst' → logprob: -1.2216954231262207
    3. 'A' → logprob: -3.0966954231262207
    4. ' A' → logprob: -3.4716954231262207
    5. ' B' → logprob: -6.346695423126221
    6. 'B' → logprob: -6.346695423126221
    7. ' ' → logprob: -7.471695423126221
    8. 'C' → logprob: -8.096695899963379
    9. ' C' → logprob: -8.471695899963379
    10. 'ls' → logprob: -9.721695899963379

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006433341186493635
    2. ' :' → logprob: -7.750643253326416
    3. ' and' → logprob: -9.125643730163574
    4. ':
' → logprob: -10.000643730163574
    5. '>' → logprob: -10.750643730163574
    6. ',' → logprob: -11.500643730163574
    7. 'and' → logprob: -12.250643730163574
    8. ' or' → logprob: -12.375643730163574
    9. ':**' → logprob: -12.625643730163574
    10. '.' → logprob: -13.375643730163574

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1582011729478836
    2. '\n' → logprob: -2.533201217651367
    3. ':
' → logprob: -3.908201217651367
    4. 'print' → logprob: -3.908201217651367
    5. ' print' → logprob: -4.533201217651367
    6. '
' → logprob: -5.533201217651367
    7. ' 
' → logprob: -5.658201217651367
    8. ' :' → logprob: -6.908201217651367
    9. ' :
' → logprob: -7.158201217651367
    10. '<|end|>' → logprob: -7.283201217651367

Token 41: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1733689159154892
    2. 'print' (adapté à ' print') → logprob: -2.0483689308166504
    3. '   ' → logprob: -3.6733689308166504
    4. '    ' → logprob: -5.67336893081665
    5. ' pass' → logprob: -7.79836893081665
    6. '```' → logprob: -8.298368453979492
    7. ' A' → logprob: -8.673368453979492
    8. ' C' → logprob: -9.798368453979492
    9. ' ' → logprob: -9.923368453979492
    10. ' break' → logprob: -10.048368453979492

Token 42: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2796306908130646
    2. '("' → logprob: -2.029630661010742
    3. '(C' → logprob: -3.154630661010742
    4. '(A' → logprob: -3.154630661010742
    5. '(B' → logprob: -4.404630661010742
    6. '(lst' → logprob: -4.529630661010742
    7. '('' → logprob: -6.029630661010742
    8. '("("' → logprob: -6.904630661010742
    9. '(l' → logprob: -8.529630661010742
    10. '()' → logprob: -9.404630661010742

Token 43: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.6031593680381775
    2. 'C' → logprob: -1.1031594276428223
    3. 'A' → logprob: -3.2281594276428223
    4. 'b' → logprob: -3.4781594276428223
    5. 'B' → logprob: -4.103159427642822
    6. '"C' → logprob: -4.353159427642822
    7. 'ABC' → logprob: -4.978159427642822
    8. 'YES' → logprob: -5.603159427642822
    9. 'M' → logprob: -5.728159427642822
    10. 'AC' → logprob: -6.353159427642822

Token 44: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002468047896400094
    2. '")
' → logprob: -6.252468109130859
    3. ')' → logprob: -7.627468109130859
    4. ')")' → logprob: -10.37746810913086
    5. '")
' → logprob: -11.62746810913086
    6. '!")' → logprob: -11.75246810913086
    7. '"' → logprob: -13.25246810913086
    8. '")

' → logprob: -14.50246810913086
    9. ')
' → logprob: -14.62746810913086
    10. '')' → logprob: -15.00246810913086

Token 45: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00201333686709404
    2. ' else' → logprob: -6.377013206481934
    3. 'elif' → logprob: -8.127013206481934
    4. '<|end|>' → logprob: -12.377013206481934
    5. 'el' → logprob: -13.127013206481934
    6. '
' → logprob: -13.377013206481934
    7. '```' → logprob: -13.502013206481934
    8. '_else' → logprob: -13.627013206481934
    9. 'e' → logprob: -13.752013206481934
    10. 'elser' → logprob: -14.002013206481934

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004126842133700848
    2. ':
' → logprob: -5.504127025604248
    3. '   ' → logprob: -10.00412654876709
    4. ' :' → logprob: -14.00412654876709
    5. '):' → logprob: -14.62912654876709
    6. '```' → logprob: -14.87912654876709
    7. ':

' → logprob: -15.37912654876709
    8. ':
' → logprob: -15.87912654876709
    9. ' :
' → logprob: -15.87912654876709
    10. '):
' → logprob: -15.87912654876709

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005254387855529785
    2. 'print' → logprob: -5.75525426864624
    3. ' print' → logprob: -6.25525426864624
    4. '```' → logprob: -9.255254745483398
    5. '       ' → logprob: -10.880254745483398
    6. '    ' → logprob: -11.005254745483398
    7. '	print' → logprob: -11.505254745483398
    8. ' ' → logprob: -12.880254745483398
    9. '``' → logprob: -13.130254745483398
    10. '`' → logprob: -13.630254745483398

Token 48: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4870728850364685
    2. 'print' (adapté à ' print') → logprob: -0.9870728850364685
    3. '   ' → logprob: -4.362072944641113
    4. '```' → logprob: -9.237072944641113
    5. '\n' → logprob: -11.112072944641113
    6. '	print' → logprob: -11.362072944641113
    7. '    ' → logprob: -11.487072944641113
    8. '``' → logprob: -11.862072944641113
    9. ' ' → logprob: -12.112072944641113
    10. '    
' → logprob: -12.737072944641113

Token 49: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3875148892402649
    2. '(' → logprob: -1.1375148296356201
    3. '("("' → logprob: -7.762515068054199
    4. '("")' → logprob: -9.1375150680542
    5. '()' → logprob: -9.6375150680542
    6. '('' → logprob: -10.8875150680542
    7. '(""' → logprob: -12.1375150680542
    8. '("(' → logprob: -12.1375150680542
    9. '("""' → logprob: -12.1375150680542
    10. '(
' → logprob: -12.8875150680542

Token 50: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.004087185952812433
    2. '"No' → logprob: -5.504086971282959
    3. '"' → logprob: -11.879087448120117
    4. ' No' → logprob: -14.129087448120117
    5. 'N' → logprob: -14.379087448120117
    6. '")' → logprob: -15.504087448120117
    7. '"N' → logprob: -15.879087448120117
    8. '“No' → logprob: -16.754087448120117
    9. 'Yes' → logprob: -17.504087448120117
    10. '(No' → logprob: -17.629087448120117

Token 51: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006742842961102724
    2. ')' → logprob: -5.00674295425415
    3. ')")' → logprob: -10.756742477416992
    4. '")
' → logprob: -12.631742477416992
    5. '```' → logprob: -13.506742477416992
    6. '')' → logprob: -14.506742477416992
    7. '}")' → logprob: -14.506742477416992
    8. '"' → logprob: -15.256742477416992
    9. '`)' → logprob: -15.631742477416992
    10. '”)' → logprob: -17.631742477416992


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 36.73%
Précision adaptée (1ère position): 36.73%
Précision (top 10): 77.55%
================================================================================
