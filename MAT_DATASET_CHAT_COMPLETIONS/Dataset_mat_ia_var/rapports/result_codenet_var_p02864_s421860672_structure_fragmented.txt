================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def set_recursion_limit():
    sys.setrecursionlimit(10 ** 5)

def get_mod():
    return 10 ** 9 + 7

def get_inf():
    return float('INF')

def get_stdin_readline():
    return sys.stdin.readline

def parse_first_line(readline):
    return map(int, readline().split())

def parse_heights_line(readline):
    return list(map(int, readline().split()))

def init_heights(N, readline):
    H_list = parse_heights_line(readline)
    return [0] + H_list + [0]

def init_dp(N, INF):
    dp = []
    for _ in range(N + 1):
        dp.append([INF] * (N + 1))
    return dp

def set_dp_base_case_zero(dp, N):
    for i in range(N + 1):
        dp[i][0] = 0

def set_dp_first_j(H, dp, N):
    for i in range(1, N + 1):
        dp[i][1] = H[i]

def update_dp_for_j(dp, H, N):
    for i in range(1, N + 1):
        for j in range(2, i + 1):
            update_dp_for_j_k(dp, H, i, j)

def update_dp_for_j_k(dp, H, i, j):
    for k in range(1, i):
        dp[i][j] = min(dp[i][j], dp[k][j - 1] + max(0, H[i] - H[k]))

def find_min_ans(dp, N, K, INF):
    ans = INF
    for i in range(1, N + 1):
        ans = min(ans, dp[i][N - K])
    return ans

def print_result(ans):
    print(ans)

def main():
    set_recursion_limit()
    INF = get_inf()
    readline = get_stdin_readline()
    N, K = parse_first_line(readline)
    H = init_heights(N, readline)
    dp = init_dp(N, INF)
    set_dp_base_case_zero(dp, N)
    set_dp_first_j(H, dp, N)
    update_dp_for_j(dp, H, N)
    ans = find_min_ans(dp, N, K, INF)
    print_result(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05329883471131325
    2. ' _' → logprob: -3.3032989501953125
    3. 'attr' → logprob: -6.3032989501953125
    4. '_up' → logprob: -6.6782989501953125
    5. '_attr' → logprob: -7.0532989501953125
    6. '_target' → logprob: -7.1782989501953125
    7. '_space' → logprob: -7.1782989501953125
    8. 'uptools' → logprob: -7.1782989501953125
    9. '_name' → logprob: -7.3032989501953125
    10. '_default' → logprob: -7.4282989501953125

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.05582532659173012
    2. '_' → logprob: -2.9308252334594727
    3. 'ursive' → logprob: -7.180825233459473
    4. 'urs' → logprob: -9.930825233459473
    5. '__' → logprob: -10.305825233459473
    6. 'ursor' → logprob: -10.430825233459473
    7. '```' → logprob: -11.055825233459473
    8. 'u' → logprob: -11.555825233459473
    9. 'ur' → logprob: -12.180825233459473
    10. '`' → logprob: -12.305825233459473

Token 7: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0011498635867610574
    2. '_depth' → logprob: -6.876149654388428
    3. '_' → logprob: -9.751150131225586
    4. '_limits' → logprob: -10.376150131225586
    5. 'limit' → logprob: -11.376150131225586
    6. ' _' → logprob: -11.876150131225586
    7. '_stack' → logprob: -12.501150131225586
    8. '_lim' → logprob: -13.001150131225586
    9. '_max' → logprob: -14.126150131225586
    10. '_li' → logprob: -14.376150131225586

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003613256849348545
    2. '_' → logprob: -8.250361442565918
    3. ' (' → logprob: -9.750361442565918
    4. '(_' → logprob: -11.625361442565918
    5. ':' → logprob: -11.750361442565918
    6. '('' → logprob: -12.250361442565918
    7. '(:' → logprob: -12.250361442565918
    8. '(
' → logprob: -13.500361442565918
    9. '(`' → logprob: -13.500361442565918
    10. '```' → logprob: -13.875361442565918

Token 9: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5307954549789429
    2. '   ' → logprob: -0.9057954549789429
    3. ':' → logprob: -5.780795574188232
    4. ' ' → logprob: -6.905795574188232
    5. '(sys' → logprob: -7.405795574188232
    6. ' (' → logprob: -7.405795574188232
    7. '    ' → logprob: -7.530795574188232
    8. '```' → logprob: -7.780795574188232
    9. '_' → logprob: -8.280795097351074
    10. '(space' → logprob: -9.030795097351074

Token 10: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.201457679271698
    2. ' sys' → logprob: -1.8264577388763428
    3. 'import' → logprob: -4.326457500457764
    4. '   ' → logprob: -4.826457500457764
    5. ' import' → logprob: -9.326457977294922
    6. '(sys' → logprob: -9.326457977294922
    7. 'try' → logprob: -10.951457977294922
    8. '```' → logprob: -11.201457977294922
    9. '	sys' → logprob: -11.576457977294922
    10. 'pass' → logprob: -11.951457977294922

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022791961673647165
    2. '.set' → logprob: -6.377279281616211
    3. '.setdefault' → logprob: -7.627279281616211
    4. '.exit' → logprob: -10.752279281616211
    5. '.argv' → logprob: -10.877279281616211
    6. ' .' → logprob: -10.877279281616211
    7. '.max' → logprob: -12.377279281616211
    8. '.stdout' → logprob: -12.502279281616211
    9. '.append' → logprob: -12.752279281616211
    10. '.stdin' → logprob: -12.752279281616211

Token 12: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -1.0785263776779175
    2. '._' → logprob: -1.2035263776779175
    3. ' _' → logprob: -1.5785263776779175
    4. '_' → logprob: -2.828526496887207
    5. '_limit' → logprob: -3.578526496887207
    6. 'rec' → logprob: -4.078526496887207
    7. '_.' → logprob: -4.078526496887207
    8. '_max' → logprob: -4.828526496887207
    9. '.' → logprob: -5.578526496887207
    10. ' .' → logprob: -5.828526496887207

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000374546303646639
    2. 'ur' → logprob: -8.750374794006348
    3. 'urs' → logprob: -9.250374794006348
    4. 'ursive' → logprob: -9.625374794006348
    5. '_' → logprob: -10.500374794006348
    6. '_limit' → logprob: -11.875374794006348
    7. 'limit' → logprob: -12.000374794006348
    8. 'u' → logprob: -12.750374794006348
    9. 'rs' → logprob: -13.000374794006348
    10. 'usion' → logprob: -13.000374794006348

Token 14: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0002233245177194476
    2. '_' → logprob: -9.125223159790039
    3. 'limit' → logprob: -9.375223159790039
    4. '_depth' → logprob: -10.875223159790039
    5. '_lim' → logprob: -12.000223159790039
    6. '_li' → logprob: -13.125223159790039
    7. '_max' → logprob: -14.000223159790039
    8. ' _' → logprob: -14.000223159790039
    9. '_limits' → logprob: -15.875223159790039
    10. '_LIMIT' → logprob: -16.00022315979004

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.664371848164592e-05
    2. '(
' → logprob: -12.500016212463379
    3. '(

' → logprob: -12.875016212463379
    4. '((' → logprob: -13.125016212463379
    5. '("("' → logprob: -13.125016212463379
    6. ' (' → logprob: -13.250016212463379
    7. '('' → logprob: -13.375016212463379
    8. '(`' → logprob: -14.625016212463379
    9. '()' → logprob: -14.875016212463379
    10. '40' → logprob: -14.875016212463379

Token 16: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06259605288505554
    2. '10' → logprob: -2.812596082687378
    3. '300' → logprob: -8.187596321105957
    4. '150' → logprob: -8.562596321105957
    5. '500' → logprob: -9.187596321105957
    6. '250' → logprob: -10.187596321105957
    7. '200' → logprob: -11.312596321105957
    8. ' ' → logprob: -13.062596321105957
    9. '   ' → logprob: -13.437596321105957
    10. '(' → logprob: -13.937596321105957

Token 17: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2178293615579605
    2. '0' → logprob: -2.217829465866089
    3. '00' → logprob: -2.467829465866089
    4. '6' → logprob: -6.71782922744751
    5. '**' → logprob: -7.71782922744751
    6. '5' → logprob: -8.217829704284668
    7. '4' → logprob: -8.842829704284668
    8. ')' → logprob: -10.592829704284668
    9. '7' → logprob: -11.217829704284668
    10. '007' → logprob: -12.717829704284668

Token 18: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.012691168114542961
    2. '6' → logprob: -4.512691020965576
    3. '8' → logprob: -6.762691020965576
    4. '9' → logprob: -7.637691020965576
    5. ' ' → logprob: -13.137691497802734
    6. '5' → logprob: -13.512691497802734
    7. '4' → logprob: -14.512691497802734
    8. '```' → logprob: -16.637691497802734
    9. ')' → logprob: -18.137691497802734
    10. '  ' → logprob: -19.012691497802734

Token 19: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01838497444987297
    2. '6' → logprob: -4.26838493347168
    3. '9' → logprob: -5.51838493347168
    4. '8' → logprob: -8.51838493347168
    5. '5' → logprob: -15.51838493347168
    6. '```' → logprob: -15.64338493347168
    7. '4' → logprob: -15.76838493347168
    8. '**' → logprob: -16.76838493347168
    9. ' ' → logprob: -18.39338493347168
    10. '(' → logprob: -19.39338493347168

Token 20: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -12.875006675720215
    3. ')
' → logprob: -13.250006675720215
    4. '))' → logprob: -13.875006675720215
    5. '   ' → logprob: -14.500006675720215
    6. '`)' → logprob: -15.500006675720215
    7. '')' → logprob: -16.2500057220459
    8. '0' → logprob: -16.3750057220459
    9. ')))' → logprob: -16.5000057220459
    10. ' ' → logprob: -16.7500057220459

Token 21: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7340631484985352
    2. '(' → logprob: -1.4840631484985352
    3. ')' → logprob: -2.859063148498535
    4. '' → logprob: -3.359063148498535
    5. '\n' → logprob: -3.359063148498535
    6. '\' → logprob: -3.734063148498535
    7. '#' → logprob: -3.734063148498535
    8. '<|end|>' → logprob: -3.859063148498535
    9. 'newline' → logprob: -3.859063148498535
    10. '()' → logprob: -3.984063148498535

Token 22: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1148194670677185
    2. ' calculate' → logprob: -3.2398195266723633
    3. ' my' → logprob: -3.9898195266723633
    4. ' space' → logprob: -3.9898195266723633
    5. ' set' → logprob: -4.989819526672363
    6. ' ' → logprob: -5.489819526672363
    7. ' compute' → logprob: -5.739819526672363
    8. ' test' → logprob: -5.739819526672363
    9. ' add' → logprob: -6.239819526672363
    10. '_' → logprob: -6.489819526672363

Token 23: '_mod' (ID: 15325)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.4517372250556946
    2. '_' → logprob: -1.5767371654510498
    3. '_max' → logprob: -2.20173716545105
    4. ' _' → logprob: -4.076737403869629
    5. '_re' → logprob: -5.576737403869629
    6. '_stack' → logprob: -6.076737403869629
    7. '_depth' → logprob: -6.076737403869629
    8. '_input' → logprob: -6.076737403869629
    9. '_recursive' → logprob: -6.201737403869629
    10. '_limit' → logprob: -6.451737403869629

Token 24: '():
' (ID: 8595)
  Prédit: 'ulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -0.39398202300071716
    2. 'ular' → logprob: -1.7689820528030396
    3. 'ule' → logprob: -3.64398193359375
    4. '_value' → logprob: -3.89398193359375
    5. '()' → logprob: -4.01898193359375
    6. 'ul' → logprob: -4.51898193359375
    7. 'ulu' → logprob: -4.64398193359375
    8. 'ulo' → logprob: -4.64398193359375
    9. '_' → logprob: -4.76898193359375
    10. '```' → logprob: -4.89398193359375

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03127538412809372
    2. '100' → logprob: -4.531275272369385
    3. ' ' → logprob: -4.781275272369385
    4. ' return' → logprob: -5.281275272369385
    5. 'return' → logprob: -5.656275272369385
    6. '10' → logprob: -6.156275272369385
    7. '    ' → logprob: -7.656275272369385
    8. '102' → logprob: -8.781275749206543
    9. '    
' → logprob: -9.781275749206543
    10. '(' → logprob: -9.906275749206543

Token 26: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194851756095886
    2. ' return' → logprob: -1.0194852352142334
    3. 'return' (adapté à ' return') → logprob: -3.1444852352142334
    4. '10' → logprob: -7.644484996795654
    5. ' ' → logprob: -8.269485473632812
    6. '20' → logprob: -8.394485473632812
    7. '100' → logprob: -9.894485473632812
    8. '    ' → logprob: -10.019485473632812
    9. '```' → logprob: -11.019485473632812
    10. '16' → logprob: -11.269485473632812

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011467699892818928
    2. '10' → logprob: -4.511467933654785
    3. '100' → logprob: -8.261467933654785
    4. '(' → logprob: -9.886467933654785
    5. ' (' → logprob: -9.886467933654785
    6. '1' → logprob: -11.011467933654785
    7. '409' → logprob: -11.386467933654785
    8. '998' → logprob: -11.636467933654785
    9. ' int' → logprob: -12.386467933654785
    10. ' None' → logprob: -12.886467933654785

Token 28: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006226321216672659
    2. '100' → logprob: -5.131226539611816
    3. '(' → logprob: -8.756226539611816
    4. '998' → logprob: -9.381226539611816
    5. '1' → logprob: -10.006226539611816
    6. 'int' → logprob: -12.256226539611816
    7. ' ' → logprob: -12.506226539611816
    8. '(int' → logprob: -13.881226539611816
    9. '999' → logprob: -15.006226539611816
    10. '```' → logprob: -15.506226539611816

Token 29: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06843322515487671
    2. '**' → logprob: -2.8184332847595215
    3. ' **' → logprob: -5.3184332847595215
    4. '9' → logprob: -7.3184332847595215
    5. '7' → logprob: -8.068432807922363
    6. '6' → logprob: -8.443432807922363
    7. ' ' → logprob: -8.818432807922363
    8. '00' → logprob: -9.193432807922363
    9. '000' → logprob: -9.818432807922363
    10. '8' → logprob: -10.568432807922363

Token 30: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. '7' → logprob: -18.875
    6. '09' → logprob: -19.25
    7. '8' → logprob: -19.875
    8. '6' → logprob: -20.5
    9. '**' → logprob: -21.0
    10. '+' → logprob: -21.0

Token 31: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. '09' → logprob: -19.25
    4. ' ' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. '7' → logprob: -20.25
    7. '8' → logprob: -20.625
    8. '6' → logprob: -21.625
    9. '**' → logprob: -22.0
    10. '``' → logprob: -22.5

Token 32: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03366529569029808
    2. ' +' → logprob: -3.408665180206299
    3. '7' → logprob: -10.908665657043457
    4. ' plus' → logprob: -14.908665657043457
    5. '＋' → logprob: -15.658665657043457
    6. ' ' → logprob: -15.783665657043457
    7. ' +
' → logprob: -16.15866470336914
    8. '+
' → logprob: -17.03366470336914
    9. 'plus' → logprob: -17.03366470336914
    10. ' ' → logprob: -17.03366470336914

Token 33: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '+' → logprob: -15.75
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -20.75
    6. '07' → logprob: -20.875
    7. '9' → logprob: -21.5625
    8. '  ' → logprob: -21.75
    9. ' +' → logprob: -22.0
    10. '' → logprob: -22.1875

Token 34: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. ' ' → logprob: -19.625
    4. '```' → logprob: -21.125
    5. '   ' → logprob: -21.875
    6. '07' → logprob: -22.5
    7. '' → logprob: -23.25
    8. '9' → logprob: -23.375
    9. '۷' → logprob: -23.9375
    10. '٧' → logprob: -24.0

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.314995676279068
    2. '

' → logprob: -1.4399956464767456
    3. '<|end|>' → logprob: -4.314995765686035
    4. '```' → logprob: -4.814995765686035
    5. '\n' → logprob: -5.189995765686035
    6. '' → logprob: -6.064995765686035
    7. 'def' → logprob: -7.064995765686035
    8. '#' → logprob: -7.689995765686035
    9. '<|end|>' → logprob: -7.814995765686035
    10. '
' → logprob: -7.939995765686035

Token 36: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5530432462692261
    2. 'def' → logprob: -1.678043246269226
    3. '<|end|>' → logprob: -1.928043246269226
    4. '

' → logprob: -2.8030433654785156
    5. '```' → logprob: -4.178043365478516
    6. '\n' → logprob: -4.928043365478516
    7. '#' → logprob: -5.678043365478516
    8. '\' → logprob: -6.178043365478516
    9. '<|end|>' → logprob: -6.178043365478516
    10. '  
' → logprob: -8.053043365478516

Token 37: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.1664005517959595
    2. ' factorial' → logprob: -1.4164005517959595
    3. ' calculate' → logprob: -1.6664005517959595
    4. ' solve' → logprob: -1.9164005517959595
    5. ' compute' → logprob: -2.79140043258667
    6. ' fibonacci' → logprob: -4.66640043258667
    7. ' add' → logprob: -4.91640043258667
    8. ' multiply' → logprob: -5.29140043258667
    9. ' sum' → logprob: -5.54140043258667
    10. ' pow' → logprob: -6.04140043258667

Token 38: '_inf' (ID: 107309)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.8862268328666687
    2. '_max' → logprob: -1.2612268924713135
    3. '_factor' → logprob: -1.6362268924713135
    4. '_mod' → logprob: -3.2612268924713135
    5. '_' → logprob: -3.3862268924713135
    6. '_prime' → logprob: -5.761226654052734
    7. '_data' → logprob: -5.886226654052734
    8. '_base' → logprob: -6.261226654052734
    9. '_fact' → logprob: -6.261226654052734
    10. '_user' → logprob: -6.386226654052734

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05161405727267265
    2. '()' → logprob: -3.1766140460968018
    3. 'inity' → logprob: -5.301614284515381
    4. '():
' → logprob: -6.426614284515381
    5. 'inite' → logprob: -7.051614284515381
    6. '_' → logprob: -8.176613807678223
    7. 'inty' → logprob: -8.301613807678223
    8. '():
' → logprob: -9.051613807678223
    9. '():

' → logprob: -9.301613807678223
    10. 'ity' → logprob: -9.301613807678223

Token 40: '   ' (ID: 271)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6704566478729248
    2. '   ' → logprob: -1.2954566478729248
    3. 'float' → logprob: -1.7954566478729248
    4. '(float' → logprob: -4.045456886291504
    5. '10' → logprob: -4.170456886291504
    6. ' ' → logprob: -5.295456886291504
    7. '(' → logprob: -5.545456886291504
    8. '    ' → logprob: -6.295456886291504
    9. '=float' → logprob: -6.795456886291504
    10. ' (' → logprob: -7.670456886291504

Token 41: ' return' (ID: 622)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3099212646484375
    2. 'float' → logprob: -1.4349212646484375
    3. '10' → logprob: -3.8099212646484375
    4. ' ' → logprob: -5.3099212646484375
    5. '   ' → logprob: -6.8099212646484375
    6. ' return' → logprob: -10.059921264648438
    7. 'int' → logprob: -10.184921264648438
    8. '1' → logprob: -10.684921264648438
    9. 'return' (adapté à ' return') → logprob: -10.934921264648438
    10. ' int' → logprob: -11.059921264648438

Token 42: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.214249849319458
    2. ' float' → logprob: -1.714249849319458
    3. '10' → logprob: -4.714249610900879
    4. ' ' → logprob: -5.589249610900879
    5. 'int' → logprob: -10.339249610900879
    6. '1' → logprob: -12.089249610900879
    7. '(float' → logprob: -12.589249610900879
    8. ' int' → logprob: -12.839249610900879
    9. '   ' → logprob: -13.339249610900879
    10. ' sys' → logprob: -13.964249610900879

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00023810577113181353
    2. '(' → logprob: -8.500238418579102
    3. ''' → logprob: -10.875238418579102
    4. '("' → logprob: -11.250238418579102
    5. ''in' → logprob: -13.250238418579102
    6. '('+' → logprob: -15.250238418579102
    7. ''s' → logprob: -16.0002384185791
    8. ' ('' → logprob: -16.1252384185791
    9. '(\'' → logprob: -17.1252384185791
    10. ''t' → logprob: -17.1252384185791

Token 44: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.2723104848410003e-05
    2. 'i' → logprob: -11.500022888183594
    3. 'info' → logprob: -11.875022888183594
    4. 'in' → logprob: -12.250022888183594
    5. ''in' → logprob: -15.000022888183594
    6. '"' → logprob: -16.875022888183594
    7. ''' → logprob: -16.875022888183594
    8. '-inf' → logprob: -16.875022888183594
    9. 'INF' → logprob: -17.000022888183594
    10. ''i' → logprob: -17.375022888183594

Token 45: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003752615302801132
    2. ')' → logprob: -8.000374794006348
    3. ''' → logprob: -11.125374794006348
    4. '')
' → logprob: -12.000374794006348
    5. 'inity' → logprob: -12.250374794006348
    6. '")' → logprob: -12.500374794006348
    7. 'inite' → logprob: -13.125374794006348
    8. '')"' → logprob: -13.250374794006348
    9. '')

' → logprob: -14.000374794006348
    10. 'finity' → logprob: -14.000374794006348

Token 46: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07426842302083969
    2. '<|end|>' → logprob: -3.324268341064453
    3. '(' → logprob: -4.324268341064453
    4. '()' → logprob: -4.699268341064453
    5. '_' → logprob: -5.324268341064453
    6. '
' → logprob: -6.199268341064453
    7. ':' → logprob: -6.699268341064453
    8. '.' → logprob: -7.199268341064453
    9. '```' → logprob: -7.324268341064453
    10. '#' → logprob: -7.324268341064453

Token 47: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.45439213514328003
    2. '_' → logprob: -1.7043921947479248
    3. ' main' → logprob: -2.204392194747925
    4. ' set' → logprob: -3.454392194747925
    5. 'get' → logprob: -4.454391956329346
    6. '_get' → logprob: -5.454391956329346
    7. ' max' → logprob: -5.454391956329346
    8. 'set' → logprob: -5.704391956329346
    9. '_main' → logprob: -5.704391956329346
    10. '_set' → logprob: -5.829391956329346

Token 48: '_st' (ID: 2518)
  Prédit: '_inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.8370763659477234
    2. '_' → logprob: -1.0870764255523682
    3. ' _' → logprob: -2.087076425552368
    4. '_int' → logprob: -3.212076425552368
    5. '_float' → logprob: -4.462076187133789
    6. '_max' → logprob: -4.587076187133789
    7. '_in' → logprob: -4.837076187133789
    8. '_INF' → logprob: -5.837076187133789
    9. '()' → logprob: -6.212076187133789
    10. ' ' → logprob: -6.462076187133789

Token 49: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.3137262761592865
    2. 'r' → logprob: -2.4387261867523193
    3. 'ack' → logprob: -2.4387261867523193
    4. 'ring' → logprob: -2.9387261867523193
    5. 'd' → logprob: -3.4387261867523193
    6. 'art' → logprob: -5.938726425170898
    7. 'rin' → logprob: -6.313726425170898
    8. 'ream' → logprob: -6.438726425170898
    9. 'rings' → logprob: -6.813726425170898
    10. 'andard' → logprob: -7.563726425170898

Token 50: '_read' (ID: 14291)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06775014102458954
    2. '().' → logprob: -3.5677502155303955
    3. '_line' → logprob: -3.6927502155303955
    4. '.readline' → logprob: -5.067749977111816
    5. '.' → logprob: -7.067749977111816
    6. '_data' → logprob: -7.067749977111816
    7. 'put' → logprob: -7.192749977111816
    8. '_' → logprob: -7.317749977111816
    9. '_input' → logprob: -7.567749977111816
    10. ' ()' → logprob: -8.067749977111816

Token 51: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08037494868040085
    2. 'line' → logprob: -2.7053749561309814
    3. '():' → logprob: -5.455374717712402
    4. '_line' → logprob: -5.455374717712402
    5. '():
' → logprob: -6.705374717712402
    6. 'er' → logprob: -8.455374717712402
    7. 'ln' → logprob: -9.455374717712402
    8. 'lin' → logprob: -9.830374717712402
    9. '().' → logprob: -9.955374717712402
    10. 'ing' → logprob: -10.330374717712402

Token 52: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015434302622452378
    2. '()' → logprob: -6.5015435218811035
    3. '():
' → logprob: -10.626543045043945
    4. ' ():' → logprob: -11.251543045043945
    5. '():

' → logprob: -13.751543045043945
    6. '(' → logprob: -13.751543045043945
    7. ' ()' → logprob: -14.376543045043945
    8. '():
' → logprob: -15.251543045043945
    9. '()>' → logprob: -15.376543045043945
    10. '()`' → logprob: -16.001543045043945

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015755676431581378
    2. '():' → logprob: -7.501575469970703
    3. '    
' → logprob: -8.251575469970703
    4. 'return' → logprob: -8.626575469970703
    5. '
' → logprob: -8.751575469970703
    6. ' return' → logprob: -8.876575469970703
    7. '()' → logprob: -9.376575469970703
    8. ':' → logprob: -9.501575469970703
    9. '(' → logprob: -10.251575469970703
    10. ':return' → logprob: -11.251575469970703

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838325023651123
    2. ' return' → logprob: -0.9588325023651123
    3. 'return' (adapté à ' return') → logprob: -2.8338325023651123
    4. 'import' → logprob: -9.958832740783691
    5. ' ' → logprob: -10.583832740783691
    6. '	return' → logprob: -11.458832740783691
    7. '    ' → logprob: -11.708832740783691
    8. '   ' → logprob: -11.833832740783691
    9. ' import' → logprob: -12.333832740783691
    10. '```' → logprob: -12.833832740783691

Token 55: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03144809976220131
    2. 'sys' → logprob: -3.5314481258392334
    3. ' input' → logprob: -6.531447887420654
    4. 'input' → logprob: -8.406448364257812
    5. ' lambda' → logprob: -11.531448364257812
    6. '	sys' → logprob: -12.781448364257812
    7. '(sys' → logprob: -13.156448364257812
    8. '=sys' → logprob: -14.281448364257812
    9. 'lambda' → logprob: -14.781448364257812
    10. ' ' → logprob: -16.156448364257812

Token 56: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00026741522015072405
    2. '.stdout' → logprob: -8.750267028808594
    3. '.' → logprob: -9.500267028808594
    4. '.readline' → logprob: -10.750267028808594
    5. '.std' → logprob: -11.625267028808594
    6. '.stderr' → logprob: -13.750267028808594
    7. ' .' → logprob: -13.750267028808594
    8. '.argv' → logprob: -14.125267028808594
    9. '.input' → logprob: -14.750267028808594
    10. '.standard' → logprob: -16.250267028808594

Token 57: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0046498957090079784
    2. '.read' → logprob: -5.629650115966797
    3. '.' → logprob: -6.879650115966797
    4. '.readlines' → logprob: -11.129650115966797
    5. ' .' → logprob: -13.254650115966797
    6. '.Read' → logprob: -13.879650115966797
    7. '<|end|>' → logprob: -14.254650115966797
    8. '.write' → logprob: -14.504650115966797
    9. '.stdin' → logprob: -14.504650115966797
    10. '.buffer' → logprob: -15.004650115966797

Token 58: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.060470446944236755
    2. '<|end|>' → logprob: -3.4354703426361084
    3. '
' → logprob: -4.4354705810546875
    4. '()
' → logprob: -4.6854705810546875
    5. '\n' → logprob: -5.6854705810546875
    6. '()

' → logprob: -7.5604705810546875
    7. '(' → logprob: -7.9354705810546875
    8. '

' → logprob: -8.560470581054688
    9. '```' → logprob: -8.560470581054688
    10. '(
' → logprob: -8.935470581054688

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3263161778450012
    2. '<|end|>' → logprob: -1.5763161182403564
    3. '#' → logprob: -3.7013161182403564
    4. '
' → logprob: -3.8263161182403564
    5. '<|end|>' → logprob: -4.4513163566589355
    6. '```' → logprob: -4.9513163566589355
    7. '\n' → logprob: -5.8263163566589355
    8. '\' → logprob: -6.4513163566589355
    9. 'import' → logprob: -7.9513163566589355
    10. 'newline' → logprob: -8.701315879821777

Token 60: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08310020714998245
    2. ' set' → logprob: -2.9581003189086914
    3. '_' → logprob: -4.833100318908691
    4. ' get' → logprob: -5.208100318908691
    5. ' _' → logprob: -5.208100318908691
    6. ' solve' → logprob: -6.458100318908691
    7. ' parse' → logprob: -6.708100318908691
    8. ' ' → logprob: -6.708100318908691
    9. '_main' → logprob: -7.208100318908691
    10. '_set' → logprob: -7.458100318908691

Token 61: '_first' (ID: 29347)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.29743948578834534
    2. '_input' → logprob: -1.547439455986023
    3. '_' → logprob: -3.5474395751953125
    4. '_token' → logprob: -5.0474395751953125
    5. '(' → logprob: -5.7974395751953125
    6. '(line' → logprob: -6.5474395751953125
    7. '_tokens' → logprob: -6.5474395751953125
    8. '(input' → logprob: -7.6724395751953125
    9. '_data' → logprob: -7.7974395751953125
    10. '_int' → logprob: -8.172439575195312

Token 62: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0016988682327792048
    2. '_' → logprob: -6.501698970794678
    3. '_token' → logprob: -9.37669849395752
    4. '_input' → logprob: -10.00169849395752
    5. '_word' → logprob: -11.37669849395752
    6. '_element' → logprob: -11.37669849395752
    7. '_key' → logprob: -12.25169849395752
    8. '_value' → logprob: -12.37669849395752
    9. '()' → logprob: -12.37669849395752
    10. '_item' → logprob: -12.62669849395752

Token 63: '(read' (ID: 45738)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003821098944172263
    2. '()' → logprob: -5.628820896148682
    3. '(' → logprob: -9.00382137298584
    4. ' ():' → logprob: -10.37882137298584
    5. '_' → logprob: -10.62882137298584
    6. '():
' → logprob: -11.00382137298584
    7. '_line' → logprob: -12.37882137298584
    8. '_split' → logprob: -13.00382137298584
    9. '(line' → logprob: -13.12882137298584
    10. ' ()' → logprob: -13.12882137298584

Token 64: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.240481914370321e-05
    2. '_line' → logprob: -10.000052452087402
    3. 'ine' → logprob: -12.625052452087402
    4. 'er' → logprob: -13.375052452087402
    5. 'l' → logprob: -14.500052452087402
    6. 'lin' → logprob: -14.625052452087402
    7. 'Line' → logprob: -14.875052452087402
    8. 'eline' → logprob: -15.375052452087402
    9. '(line' → logprob: -16.250051498413086
    10. ')' → logprob: -16.375051498413086

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02070293202996254
    2. ')' → logprob: -4.145702838897705
    3. '()' → logprob: -6.020702838897705
    4. '():' → logprob: -6.145702838897705
    5. '):
' → logprob: -9.895703315734863
    6. ' ):' → logprob: -11.145703315734863
    7. '(' → logprob: -12.395703315734863
    8. '())' → logprob: -12.395703315734863
    9. ':' → logprob: -12.520703315734863
    10. '   ' → logprob: -12.645703315734863

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026829533278942108
    2. ' line' → logprob: -4.026829719543457
    3. 'line' → logprob: -5.026829719543457
    4. ' readline' → logprob: -7.026829719543457
    5. '(line' → logprob: -8.276829719543457
    6. ' return' → logprob: -8.526829719543457
    7. 'data' → logprob: -8.901829719543457
    8. 'tokens' → logprob: -9.026829719543457
    9. 'return' → logprob: -9.276829719543457
    10. '	line' → logprob: -9.776829719543457

Token 67: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8582125902175903
    2. 'line' → logprob: -1.1082125902175903
    3. '   ' → logprob: -1.6082125902175903
    4. ' return' → logprob: -4.358212471008301
    5. ' data' → logprob: -4.858212471008301
    6. 'data' → logprob: -4.983212471008301
    7. 'return' (adapté à ' return') → logprob: -5.108212471008301
    8. ' parts' → logprob: -5.233212471008301
    9. ' tokens' → logprob: -6.358212471008301
    10. 'tokens' → logprob: -6.358212471008301

Token 68: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5103121995925903
    2. ' list' → logprob: -1.0103121995925903
    3. ' tuple' → logprob: -4.510312080383301
    4. 'map' → logprob: -5.010312080383301
    5. ' map' → logprob: -5.135312080383301
    6. 'tuple' → logprob: -5.260312080383301
    7. ' readline' → logprob: -5.385312080383301
    8. 'read' → logprob: -7.385312080383301
    9. '[' → logprob: -7.760312080383301
    10. '[list' → logprob: -8.0103120803833

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25303274393081665
    2. '(' → logprob: -1.5030326843261719
    3. '(lambda' → logprob: -6.878032684326172
    4. '(str' → logprob: -10.253032684326172
    5. '(
' → logprob: -11.503032684326172
    6. ' (' → logprob: -12.003032684326172
    7. '<|end|>' → logprob: -12.253032684326172
    8. '[int' → logprob: -12.503032684326172
    9. 'int' → logprob: -12.503032684326172
    10. '(s' → logprob: -13.253032684326172

Token 70: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.041585542261600494
    2. ',' → logprob: -3.4165854454040527
    3. '(' → logprob: -4.916585445404053
    4. '(line' → logprob: -7.791585445404053
    5. ' ,' → logprob: -10.416585922241211
    6. 'read' → logprob: -10.666585922241211
    7. '(next' → logprob: -10.916585922241211
    8. '(),' → logprob: -11.166585922241211
    9. '.readline' → logprob: -11.291585922241211
    10. ')' → logprob: -11.666585922241211

Token 71: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.023412715643644333
    2. 'read' → logprob: -3.7734127044677734
    3. '.readline' → logprob: -8.773412704467773
    4. ' read' → logprob: -11.898412704467773
    5. ')' → logprob: -12.523412704467773
    6. '(read' → logprob: -14.773412704467773
    7. 'getline' → logprob: -14.898412704467773
    8. 'line' → logprob: -15.273412704467773
    9. '   ' → logprob: -15.523412704467773
    10. 'README' → logprob: -15.648412704467773

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005488687660545111
    2. '()' → logprob: -5.505488872528076
    3. '())' → logprob: -6.630488872528076
    4. ' ()' → logprob: -10.880488395690918
    5. '()
' → logprob: -11.130488395690918
    6. ' ().' → logprob: -11.380488395690918
    7. ' ' → logprob: -11.380488395690918
    8. '   ' → logprob: -11.505488395690918
    9. ')' → logprob: -11.880488395690918
    10. ' ())' → logprob: -12.505488395690918

Token 73: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20154470205307007
    2. 'strip' → logprob: -1.7015447616577148
    3. 'rstrip' → logprob: -8.951544761657715
    4. ' split' → logprob: -13.701544761657715
    5. ' strip' → logprob: -14.576544761657715
    6. '(split' → logprob: -15.451544761657715
    7. 'spl' → logprob: -16.5765438079834
    8. 's' → logprob: -17.9515438079834
    9. '(strip' → logprob: -18.4515438079834
    10. ' ' → logprob: -18.9515438079834

Token 74: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00040791230276227
    2. '()' → logprob: -8.000408172607422
    3. ')' → logprob: -9.750408172607422
    4. '()))' → logprob: -11.375408172607422
    5. '())
' → logprob: -13.625408172607422
    6. '(' → logprob: -14.375408172607422
    7. ' ())' → logprob: -14.500408172607422
    8. '(),' → logprob: -16.125408172607422
    9. '()]' → logprob: -16.125408172607422
    10. '))' → logprob: -16.375408172607422

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00032473751343786716
    2. '<|end|>' → logprob: -8.750325202941895
    3. '```' → logprob: -9.875325202941895
    4. '
' → logprob: -10.375325202941895
    5. '\' → logprob: -10.500325202941895
    6. '#' → logprob: -11.000325202941895
    7. '<|end|>' → logprob: -11.375325202941895
    8. '

' → logprob: -12.125325202941895
    9. 'class' → logprob: -12.625325202941895
    10. 'import' → logprob: -12.875325202941895

Token 76: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6197574734687805
    2. ' parse' → logprob: -0.8697574734687805
    3. ' solve' → logprob: -3.4947574138641357
    4. ' process' → logprob: -5.744757652282715
    5. ' calculate' → logprob: -6.369757652282715
    6. 'parse' → logprob: -6.494757652282715
    7. ' count' → logprob: -6.744757652282715
    8. ' compute' → logprob: -6.869757652282715
    9. 'main' → logprob: -6.994757652282715
    10. ' read' → logprob: -7.244757652282715

Token 77: '_he' (ID: 94257)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.002298586070537567
    2. '_next' → logprob: -6.502298355102539
    3. '_list' → logprob: -8.002298355102539
    4. '_first' → logprob: -9.127298355102539
    5. '_line' → logprob: -9.752298355102539
    6. '_input' → logprob: -10.002298355102539
    7. '_int' → logprob: -10.127298355102539
    8. '_last' → logprob: -10.127298355102539
    9. '_array' → logprob: -10.502298355102539
    10. '_lines' → logprob: -10.627298355102539

Token 78: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.19180835783481598
    2. 'aders' → logprob: -2.5668084621429443
    3. 'ights' → logprob: -2.6918084621429443
    4. 'ader' → logprob: -3.6918084621429443
    5. 'ad' → logprob: -6.191808223724365
    6. 'ap' → logprob: -6.441808223724365
    7. 'ading' → logprob: -6.941808223724365
    8. 'ads' → logprob: -8.066808700561523
    9. 'x' → logprob: -9.691808700561523
    10. 'igth' → logprob: -10.816808700561523

Token 79: '_line' (ID: 14418)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.0049194470047950745
    2. '(' → logprob: -5.379919528961182
    3. '(line' → logprob: -8.629919052124023
    4. '_read' → logprob: -10.379919052124023
    5. ' (' → logprob: -10.504919052124023
    6. '_(' → logprob: -11.629919052124023
    7. '(Read' → logprob: -11.879919052124023
    8. '```' → logprob: -12.129919052124023
    9. '(lines' → logprob: -12.254919052124023
    10. '_' → logprob: -12.254919052124023

Token 80: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -6.802049756515771e-05
    2. '(' → logprob: -9.625067710876465
    3. '(parse' → logprob: -14.250067710876465
    4. '(line' → logprob: -14.625067710876465
    5. ' (' → logprob: -15.250067710876465
    6. '(Read' → logprob: -15.750067710876465
    7. '(reader' → logprob: -16.00006866455078
    8. 'read' → logprob: -16.25006866455078
    9. '():' → logprob: -16.50006866455078
    10. '(write' → logprob: -17.75006866455078

Token 81: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1472419600977446e-06
    2. '_line' → logprob: -14.000000953674316
    3. '(line' → logprob: -16.000001907348633
    4. 'ine' → logprob: -16.750001907348633
    5. 'Line' → logprob: -16.750001907348633
    6. 'lines' → logprob: -17.625001907348633
    7. 'eline' → logprob: -18.375001907348633
    8. ' line' → logprob: -18.375001907348633
    9. 'lin' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011112819192931056
    2. '):
' → logprob: -7.2511115074157715
    3. ')' → logprob: -8.001111030578613
    4. '   ' → logprob: -10.501111030578613
    5. ' ):' → logprob: -10.876111030578613
    6. '):
' → logprob: -11.626111030578613
    7. '():' → logprob: -11.751111030578613
    8. '()' → logprob: -14.251111030578613
    9. ',' → logprob: -14.751111030578613
    10. ':' → logprob: -14.751111030578613

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026968008023686707
    2. 'return' → logprob: -8.250269889831543
    3. ' return' → logprob: -11.875269889831543
    4. '	return' → logprob: -14.750269889831543
    5. 'def' → logprob: -15.375269889831543
    6. '   ' → logprob: -15.375269889831543
    7. ':return' → logprob: -15.625269889831543
    8. '  ' → logprob: -16.125268936157227
    9. '       ' → logprob: -16.250268936157227
    10. '```' → logprob: -16.875268936157227

Token 84: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4979535639286041
    2. '   ' → logprob: -0.9979535341262817
    3. ' return' → logprob: -3.7479536533355713
    4. ' ' → logprob: -11.622953414916992
    5. '	return' → logprob: -11.872953414916992
    6. '  ' → logprob: -12.622953414916992
    7. 'list' → logprob: -12.622953414916992
    8. 'def' → logprob: -13.372953414916992
    9. '```' → logprob: -13.497953414916992
    10. 'map' → logprob: -14.872953414916992

Token 85: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33824172616004944
    2. 'map' → logprob: -1.713241696357727
    3. ' list' → logprob: -2.3382418155670166
    4. ' map' → logprob: -4.5882415771484375
    5. '   ' → logprob: -11.338241577148438
    6. ' ' → logprob: -12.213241577148438
    7. '[list' → logprob: -12.838241577148438
    8. '  ' → logprob: -12.963241577148438
    9. '[]' → logprob: -13.338241577148438
    10. '[' → logprob: -13.588241577148438

Token 86: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01858392544090748
    2. '(' → logprob: -4.51858377456665
    3. '(int' → logprob: -4.89358377456665
    4. '(list' → logprob: -12.518584251403809
    5. ' (' → logprob: -12.768584251403809
    6. 'map' → logprob: -13.268584251403809
    7. '(
' → logprob: -13.893584251403809
    8. '(

' → logprob: -14.518584251403809
    9. '(line' → logprob: -14.768584251403809
    10. '(in' → logprob: -15.018584251403809

Token 87: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005213391850702465
    2. '(' → logprob: -7.625521183013916
    3. 'int' → logprob: -11.000521659851074
    4. ' (' → logprob: -12.000521659851074
    5. '(
' → logprob: -12.375521659851074
    6. '<int' → logprob: -12.875521659851074
    7. ',int' → logprob: -13.625521659851074
    8. '=int' → logprob: -13.875521659851074
    9. '[int' → logprob: -14.125521659851074
    10. ')' → logprob: -15.250521659851074

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.742448022123426e-05
    2. ' ,' → logprob: -10.750067710876465
    3. '(read' → logprob: -10.875067710876465
    4. '(' → logprob: -11.250067710876465
    5. '(),' → logprob: -11.375067710876465
    6. ',(' → logprob: -14.250067710876465
    7. '),' → logprob: -14.375067710876465
    8. ' readline' → logprob: -15.250067710876465
    9. ',line' → logprob: -15.750067710876465
    10. 'read' → logprob: -15.875067710876465

Token 89: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.0005039428360760212
    2. 'read' → logprob: -7.625504016876221
    3. ' read' → logprob: -11.625503540039062
    4. '.readline' → logprob: -12.500503540039062
    5. '(read' → logprob: -12.625503540039062
    6. ' getline' → logprob: -17.875503540039062
    7. '	read' → logprob: -18.250503540039062
    8. ')' → logprob: -18.625503540039062
    9. 'getline' → logprob: -18.875503540039062
    10. '_read' → logprob: -18.875503540039062

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006880098371766508
    2. '()' → logprob: -7.875688076019287
    3. '()))' → logprob: -8.125687599182129
    4. ' ().' → logprob: -12.750687599182129
    5. '()
' → logprob: -13.000687599182129
    6. '   ' → logprob: -13.750687599182129
    7. '())' → logprob: -13.750687599182129
    8. '))' → logprob: -13.875687599182129
    9. '(' → logprob: -14.000687599182129
    10. '()[' → logprob: -14.125687599182129

Token 91: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011355629976605996
    2. ' split' → logprob: -9.625113487243652
    3. 'strip' → logprob: -10.000113487243652
    4. '(split' → logprob: -13.750113487243652
    5. 'rstrip' → logprob: -14.500113487243652
    6. ')' → logprob: -15.625113487243652
    7. '().' → logprob: -15.625113487243652
    8. 'spl' → logprob: -15.750113487243652
    9. '.split' → logprob: -16.87511444091797
    10. ' ' → logprob: -17.75011444091797

Token 92: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04930693656206131
    2. '()))' → logprob: -3.049306869506836
    3. ')' → logprob: -8.049306869506836
    4. '()' → logprob: -8.299306869506836
    5. '())' → logprob: -8.924306869506836
    6. '(' → logprob: -11.799306869506836
    7. ')))' → logprob: -12.049306869506836
    8. ' ))' → logprob: -13.299306869506836
    9. '   ' → logprob: -14.174306869506836
    10. '))
' → logprob: -14.174306869506836

Token 93: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31630024313926697
    2. 'def' → logprob: -2.3163001537323
    3. '<|end|>' → logprob: -2.3163001537323
    4. '#' → logprob: -3.0663001537323
    5. '\n' → logprob: -5.066300392150879
    6. '

' → logprob: -5.191300392150879
    7. '```' → logprob: -5.566300392150879
    8. '<|end|>' → logprob: -5.566300392150879
    9. '\' → logprob: -5.691300392150879
    10. '[' → logprob: -6.816300392150879

Token 94: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08046712726354599
    2. ' solve' → logprob: -3.3304672241210938
    3. ' calculate' → logprob: -4.580467224121094
    4. ' process' → logprob: -4.705467224121094
    5. ' compute' → logprob: -5.080467224121094
    6. ' parse' → logprob: -5.205467224121094
    7. 'main' → logprob: -5.705467224121094
    8. ' is' → logprob: -6.580467224121094
    9. 'solve' → logprob: -6.830467224121094
    10. ' max' → logprob: -7.205467224121094

Token 95: '_he' (ID: 94257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07914567738771439
    2. '_array' → logprob: -2.829145669937134
    3. '_stack' → logprob: -5.454145908355713
    4. '_data' → logprob: -6.454145908355713
    5. '_counter' → logprob: -6.954145908355713
    6. '_queue' → logprob: -7.079145908355713
    7. '_cache' → logprob: -7.204145908355713
    8. '(' → logprob: -7.204145908355713
    9. '_arrays' → logprob: -7.329145908355713
    10. ' _' → logprob: -7.579145908355713

Token 96: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.5779867172241211
    2. 'ight' → logprob: -0.8279867172241211
    3. 'ap' → logprob: -6.952986717224121
    4. 'aders' → logprob: -7.952986717224121
    5. 'aps' → logprob: -8.202986717224121
    6. '_' → logprob: -9.577986717224121
    7. 'app' → logprob: -9.827986717224121
    8. 'ig' → logprob: -9.952986717224121
    9. 'lp' → logprob: -10.077986717224121
    10. 'igh' → logprob: -10.327986717224121

Token 97: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.057302650064229965
    2. '(' → logprob: -3.182302713394165
    3. '()' → logprob: -4.432302474975586
    4. '()(' → logprob: -6.557302474975586
    5. '(size' → logprob: -8.182302474975586
    6. ' ():' → logprob: -8.807302474975586
    7. '_' → logprob: -9.182302474975586
    8. '():
' → logprob: -9.557302474975586
    9. '(n' → logprob: -9.682302474975586
    10. '(len' → logprob: -10.557302474975586

Token 98: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0801057368516922
    2. ',' → logprob: -2.580105781555176
    3. ')' → logprob: -7.080105781555176
    4. '):
' → logprob: -8.580105781555176
    5. ' ):' → logprob: -8.705105781555176
    6. '   ' → logprob: -11.955105781555176
    7. ' ,' → logprob: -12.455105781555176
    8. ':' → logprob: -13.205105781555176
    9. '),' → logprob: -13.580105781555176
    10. '):
' → logprob: -13.705105781555176

Token 99: ' readline' (ID: 179561)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.15674516558647156
    2. 'he' → logprob: -2.156745195388794
    3. ' default' → logprob: -4.906744956970215
    4. ' H' → logprob: -5.156744956970215
    5. 'H' → logprob: -6.156744956970215
    6. ' K' → logprob: -6.156744956970215
    7. ' initial' → logprob: -6.156744956970215
    8. ' M' → logprob: -6.656744956970215
    9. 'arr' → logprob: -6.656744956970215
    10. 'default' → logprob: -6.906744956970215

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032366468803957105
    2. ')' → logprob: -8.500323295593262
    3. '):
' → logprob: -9.375323295593262
    4. ' ):' → logprob: -10.500323295593262
    5. ',' → logprob: -12.125323295593262
    6. '   ' → logprob: -13.875323295593262
    7. '):
' → logprob: -14.625323295593262
    8. ':' → logprob: -15.000323295593262
    9. ' ' → logprob: -15.250323295593262
    10. ')):' → logprob: -16.500324249267578

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010033601894974709
    2. ' heights' → logprob: -4.88503360748291
    3. ' return' → logprob: -7.01003360748291
    4. '    
' → logprob: -7.63503360748291
    5. '<|end|>' → logprob: -8.38503360748291
    6. '	return' → logprob: -8.63503360748291
    7. 'return' → logprob: -9.01003360748291
    8. '[' → logprob: -9.26003360748291
    9. '    ' → logprob: -9.51003360748291
    10. ')' → logprob: -10.01003360748291

Token 102: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027531877160072327
    2. 'return' → logprob: -4.27753210067749
    3. ' return' → logprob: -4.90253210067749
    4. 'he' → logprob: -5.27753210067749
    5. ' heights' → logprob: -7.27753210067749
    6. ' ' → logprob: -10.777531623840332
    7. '   ' → logprob: -11.027531623840332
    8. '  ' → logprob: -12.152531623840332
    9. '	return' → logprob: -12.527531623840332
    10. 'height' → logprob: -13.152531623840332

Token 103: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22576281428337097
    2. '=' → logprob: -1.6007628440856934
    3. ',' → logprob: -8.475762367248535
    4. ' ' → logprob: -9.975762367248535
    5. '[' → logprob: -10.350762367248535
    6. '   ' → logprob: -11.225762367248535
    7. '_' → logprob: -11.350762367248535
    8. '=[]' → logprob: -11.600762367248535
    9. '[]' → logprob: -11.975762367248535
    10. 's' → logprob: -12.600762367248535

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365088626742363
    2. '=' → logprob: -3.4086508750915527
    3. ',' → logprob: -12.908651351928711
    4. ' ' → logprob: -13.533651351928711
    5. ' =
' → logprob: -14.658651351928711
    6. ' =[' → logprob: -15.283651351928711
    7. '[' → logprob: -15.783651351928711
    8. '   ' → logprob: -16.03365135192871
    9. '  ' → logprob: -16.28365135192871
    10. '=[]' → logprob: -16.40865135192871

Token 105: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.31375589966773987
    2. 'parse' → logprob: -1.3137558698654175
    3. ' list' → logprob: -8.313755989074707
    4. 'list' → logprob: -9.563755989074707
    5. ' [' → logprob: -9.813755989074707
    6. '[' → logprob: -10.063755989074707
    7. '	parse' → logprob: -10.563755989074707
    8. '(parse' → logprob: -10.688755989074707
    9. '[]' → logprob: -11.313755989074707
    10. ' []' → logprob: -11.938755989074707

Token 106: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -2.2723104848410003e-05
    2. '_first' → logprob: -10.875022888183594
    3. '_' → logprob: -13.000022888183594
    4. '_height' → logprob: -13.625022888183594
    5. 'he' → logprob: -15.750022888183594
    6. '(' → logprob: -16.875022888183594
    7. '_h' → logprob: -17.125022888183594
    8. '```' → logprob: -18.625022888183594
    9. 'He' → logprob: -18.750022888183594
    10. '_depth' → logprob: -19.000022888183594

Token 107: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.00010914575977949426
    2. 'ight' → logprob: -9.50010871887207
    3. 'ig' → logprob: -11.25010871887207
    4. 'igh' → logprob: -12.00010871887207
    5. '_' → logprob: -12.62510871887207
    6. '   ' → logprob: -12.87510871887207
    7. 'igts' → logprob: -13.00010871887207
    8. 'IGHTS' → logprob: -13.12510871887207
    9. 'i' → logprob: -13.62510871887207
    10. 'ght' → logprob: -13.87510871887207

Token 108: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.1994775377388578e-05
    2. '_list' → logprob: -12.125012397766113
    3. 'Line' → logprob: -12.250012397766113
    4. '_lines' → logprob: -14.875012397766113
    5. '```' → logprob: -15.000012397766113
    6. '(_' → logprob: -15.125012397766113
    7. '_Line' → logprob: -15.125012397766113
    8. 'line' → logprob: -16.000011444091797
    9. '(line' → logprob: -16.125011444091797
    10. '_lin' → logprob: -16.500011444091797

Token 109: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.008693399839103222
    2. '(' → logprob: -4.758693218231201
    3. ' (' → logprob: -9.63369369506836
    4. '(
' → logprob: -11.63369369506836
    5. '(Read' → logprob: -13.88369369506836
    6. ' ' → logprob: -14.25869369506836
    7. '```' → logprob: -14.25869369506836
    8. '(line' → logprob: -14.50869369506836
    9. '(reader' → logprob: -15.25869369506836
    10. '(

' → logprob: -15.50869369506836

Token 110: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -8.180258191714529e-06
    2. 'read' → logprob: -12.750008583068848
    3. 'list' → logprob: -13.625008583068848
    4. '(line' → logprob: -13.750008583068848
    5. '())' → logprob: -14.375008583068848
    6. 'ine' → logprob: -14.500008583068848
    7. '_line' → logprob: -15.000008583068848
    8. 'eline' → logprob: -15.125008583068848
    9. '(read' → logprob: -15.125008583068848
    10. '(' → logprob: -15.375008583068848

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17194809019565582
    2. '())' → logprob: -1.9219480752944946
    3. '(' → logprob: -5.171947956085205
    4. '()' → logprob: -5.296947956085205
    5. '   ' → logprob: -8.171948432922363
    6. '(N' → logprob: -8.171948432922363
    7. ' )' → logprob: -8.421948432922363
    8. ' ' → logprob: -9.546948432922363
    9. ' ())' → logprob: -10.296948432922363
    10. ',' → logprob: -11.171948432922363

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01849733106791973
    2. '    
' → logprob: -4.393497467041016
    3. '
' → logprob: -5.268497467041016
    4. '<|end|>' → logprob: -8.268497467041016
    5. 'return' → logprob: -8.893497467041016
    6. '[' → logprob: -9.643497467041016
    7. '	return' → logprob: -9.768497467041016
    8. ' return' → logprob: -9.768497467041016
    9. '    ' → logprob: -9.768497467041016
    10. '  
' → logprob: -10.268497467041016

Token 113: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9669278860092163
    2. ' return' → logprob: -1.2169278860092163
    3. ' if' → logprob: -2.091928005218506
    4. 'return' (adapté à ' return') → logprob: -2.466928005218506
    5. '
' → logprob: -2.841928005218506
    6. ' assert' → logprob: -4.591928005218506
    7. ' ' → logprob: -4.966928005218506
    8. ' H' → logprob: -5.091928005218506
    9. 'assert' → logprob: -5.091928005218506
    10. 'if' → logprob: -5.091928005218506

Token 114: ' [' (ID: 723)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.7856117486953735
    2. ' [' → logprob: -0.9106117486953735
    3. '[' → logprob: -2.535611629486084
    4. 'H' → logprob: -2.785611629486084
    5. ' ' → logprob: -7.410611629486084
    6. ' ' → logprob: -8.410612106323242
    7. '   ' → logprob: -9.910612106323242
    8. '[]' → logprob: -11.160612106323242
    9. ' list' → logprob: -11.535612106323242
    10. ' []' → logprob: -11.785612106323242

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05321769043803215
    2. 'H' → logprob: -3.053217649459839
    3. 'float' → logprob: -5.928217887878418
    4. '*' → logprob: -7.803217887878418
    5. '-' → logprob: -7.928217887878418
    6. 'sys' → logprob: -8.678217887878418
    7. 'None' → logprob: -8.803217887878418
    8. '(' → logprob: -8.803217887878418
    9. 'int' → logprob: -9.053217887878418
    10. 'h' → logprob: -9.053217887878418

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003619908355176449
    2. ']+' → logprob: -5.62861967086792
    3. ']*' → logprob: -11.128620147705078
    4. ',' → logprob: -13.003620147705078
    5. ']*(' → logprob: -13.628620147705078
    6. ' ]' → logprob: -14.253620147705078
    7. '*' → logprob: -15.378620147705078
    8. ' for' → logprob: -15.503620147705078
    9. '()]' → logprob: -15.878620147705078
    10. '+' → logprob: -16.628620147705078

Token 117: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38732612133026123
    2. ' +' → logprob: -1.1373261213302612
    3. '+[' → logprob: -8.13732624053955
    4. '*' → logprob: -9.01232624053955
    5. ' *' → logprob: -10.88732624053955
    6. '[' → logprob: -11.13732624053955
    7. '+
' → logprob: -13.76232624053955
    8. '+B' → logprob: -14.26232624053955
    9. '*(' → logprob: -14.51232624053955
    10. 'for' → logprob: -14.63732624053955

Token 118: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.029750484973192215
    2. ' H' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.52975082397461
    4. '[' → logprob: -17.77975082397461
    5. '   ' → logprob: -18.27975082397461
    6. '	H' → logprob: -18.40475082397461
    7. ' ' → logprob: -18.90475082397461
    8. ' [' → logprob: -19.02975082397461
    9. '_H' → logprob: -20.15475082397461
    10. '<H' → logprob: -20.40475082397461

Token 119: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.630610641877865e-06
    2. '_' → logprob: -12.250006675720215
    3. ' _' → logprob: -14.375006675720215
    4. 'List' → logprob: -14.625006675720215
    5. 'list' → logprob: -15.500006675720215
    6. '_lst' → logprob: -15.500006675720215
    7. '_List' → logprob: -17.1250057220459
    8. '_l' → logprob: -17.3750057220459
    9. 's' → logprob: -17.5000057220459
    10. 'H' → logprob: -17.7500057220459

Token 120: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693209946155548
    2. ' [' → logprob: -2.126932144165039
    3. ' ' → logprob: -13.376932144165039
    4. '   ' → logprob: -14.001932144165039
    5. ' ' → logprob: -14.376932144165039
    6. '[-' → logprob: -14.751932144165039
    7. '([' → logprob: -14.876932144165039
    8. '  ' → logprob: -16.75193214416504
    9. '	' → logprob: -17.12693214416504
    10. '[N' → logprob: -17.37693214416504

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009959486313164234
    2. ' ' → logprob: -5.634959697723389
    3. '10' → logprob: -6.009959697723389
    4. 'float' → logprob: -6.009959697723389
    5. 'max' → logprob: -7.634959697723389
    6. '100' → logprob: -8.13495922088623
    7. 'get' → logprob: -8.38495922088623
    8. ' float' → logprob: -9.00995922088623
    9. '1' → logprob: -9.50995922088623
    10. 'H' → logprob: -9.75995922088623

Token 123: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011784763046307489
    2. ' ]' → logprob: -9.125118255615234
    3. ')' → logprob: -12.875118255615234
    4. '<|end|>' → logprob: -13.000118255615234
    5. ']
' → logprob: -13.125118255615234
    6. '])' → logprob: -14.500118255615234
    7. '']' → logprob: -15.000118255615234
    8. ')]' → logprob: -15.000118255615234
    9. ']

' → logprob: -15.500118255615234
    10. '}' → logprob: -15.750118255615234

Token 124: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12014191597700119
    2. '<|end|>' → logprob: -2.3701419830322266
    3. '\n' → logprob: -4.745141983032227
    4. 'def' → logprob: -5.495141983032227
    5. '

' → logprob: -6.245141983032227
    6. '#' → logprob: -6.870141983032227
    7. '```' → logprob: -6.870141983032227
    8. ' 
' → logprob: -7.245141983032227
    9. '[' → logprob: -7.620141983032227
    10. '<|end|>' → logprob: -7.620141983032227

Token 125: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03994779288768768
    2. ' solve' → logprob: -4.039947986602783
    3. 'main' → logprob: -4.789947986602783
    4. ' max' → logprob: -5.914947986602783
    5. ' dfs' → logprob: -6.039947986602783
    6. ' calculate' → logprob: -6.789947986602783
    7. ' compute' → logprob: -6.914947986602783
    8. ' calc' → logprob: -7.164947986602783
    9. 'solve' → logprob: -7.164947986602783
    10. ' process' → logprob: -7.414947986602783

Token 126: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.055661287158727646
    2. '_DP' → logprob: -3.805661201477051
    3. 'dp' → logprob: -4.805661201477051
    4. '_cache' → logprob: -4.930661201477051
    5. '_' → logprob: -5.555661201477051
    6. '(N' → logprob: -6.180661201477051
    7. '_queue' → logprob: -6.305661201477051
    8. '_stack' → logprob: -6.680661201477051
    9. '_cost' → logprob: -6.805661201477051
    10. '_dist' → logprob: -7.180661201477051

Token 127: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.010013177059590816
    2. '(' → logprob: -4.635013103485107
    3. '(_' → logprob: -9.885013580322266
    4. '(n' → logprob: -9.885013580322266
    5. '_' → logprob: -10.135013580322266
    6. '_(' → logprob: -10.135013580322266
    7. ' (' → logprob: -11.135013580322266
    8. '((' → logprob: -11.635013580322266
    9. '_array' → logprob: -12.010013580322266
    10. '_list' → logprob: -12.010013580322266

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0625784695148468
    2. '):' → logprob: -2.8125784397125244
    3. ')' → logprob: -7.6875786781311035
    4. '):
' → logprob: -9.687578201293945
    5. ' ):' → logprob: -10.437578201293945
    6. ' ,' → logprob: -10.437578201293945
    7. ',N' → logprob: -12.187578201293945
    8. ',H' → logprob: -13.000078201293945
    9. '):

' → logprob: -13.125078201293945
    10. ',
' → logprob: -13.187578201293945

Token 129: ' INF' (ID: 69196)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8590830564498901
    2. '):' → logprob: -1.2340830564498901
    3. 'H' → logprob: -2.3590831756591797
    4. 'get' → logprob: -2.8590831756591797
    5. '):
' → logprob: -3.3590831756591797
    6. 'INF' → logprob: -3.8590831756591797
    7. 'M' → logprob: -4.35908317565918
    8. 'max' → logprob: -4.73408317565918
    9. 'K' → logprob: -5.10908317565918
    10. ' )' → logprob: -5.35908317565918

Token 130: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.387459933757782
    2. '):' → logprob: -1.1374599933624268
    3. '):
' → logprob: -7.637459754943848
    4. ')' → logprob: -10.637459754943848
    5. '):

' → logprob: -10.637459754943848
    6. ' ):' → logprob: -10.637459754943848
    7. '=' → logprob: -11.512459754943848
    8. ' ):
' → logprob: -11.512459754943848
    9. ',' → logprob: -11.637459754943848
    10. '   ' → logprob: -13.512459754943848

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04638346657156944
    2. '[' → logprob: -3.5463833808898926
    3. '):
' → logprob: -4.421383380889893
    4. ':
' → logprob: -6.671383380889893
    5. '):' → logprob: -7.046383380889893
    6. ' [' → logprob: -7.046383380889893
    7. ':' → logprob: -7.421383380889893
    8. '    
' → logprob: -9.04638385772705
    9. ' return' → logprob: -9.42138385772705
    10. '[n' → logprob: -9.67138385772705

Token 132: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005659167189151049
    2. 'return' → logprob: -5.630659103393555
    3. '[-' → logprob: -6.880659103393555
    4. ' [' → logprob: -7.380659103393555
    5. 'dp' (adapté à ' dp') → logprob: -8.505659103393555
    6. '   ' → logprob: -8.755659103393555
    7. ' return' → logprob: -10.255659103393555
    8. '[[' → logprob: -12.005659103393555
    9. '[N' → logprob: -13.880659103393555
    10. ' [-' → logprob: -14.130659103393555

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996811181306839
    2. '=' → logprob: -2.6949682235717773
    3. '   ' → logprob: -10.819968223571777
    4. '[' → logprob: -12.569968223571777
    5. '=[' → logprob: -12.819968223571777
    6. ' ' → logprob: -13.319968223571777
    7. ' =[' → logprob: -13.444968223571777
    8. ')' → logprob: -14.694968223571777
    9. '```' → logprob: -14.819968223571777
    10. '  ' → logprob: -15.194968223571777

Token 134: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026169343618676066
    2. ' [' → logprob: -9.000261306762695
    3. '[N' → logprob: -9.000261306762695
    4. '[-' → logprob: -11.500261306762695
    5. '[I' → logprob: -13.500261306762695
    6. '[[' → logprob: -14.250261306762695
    7. '[int' → logprob: -14.500261306762695
    8. '[new' → logprob: -14.750261306762695
    9. '[len' → logprob: -15.000261306762695
    10. '   ' → logprob: -15.000261306762695

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06614398211240768
    2. ' for' → logprob: -3.0661439895629883
    3. 'for' → logprob: -4.441143989562988
    4. ' ' → logprob: -5.941143989562988
    5. '	for' → logprob: -6.816143989562988
    6. '[' → logprob: -6.816143989562988
    7. '    
' → logprob: -8.316143989562988
    8. '    ' → logprob: -8.691143989562988
    9. ',' → logprob: -9.691143989562988
    10. '<|end|>' → logprob: -9.691143989562988

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0885116308927536
    2. ' for' → logprob: -2.5885117053985596
    3. '   ' → logprob: -4.7135114669799805
    4. 'dp' → logprob: -7.4635114669799805
    5. ' dp' → logprob: -11.46351146697998
    6. '	for' → logprob: -11.58851146697998
    7. 'INF' → logprob: -12.08851146697998
    8. ' ' → logprob: -13.71351146697998
    9. 'return' → logprob: -14.33851146697998
    10. '
' → logprob: -14.96351146697998

Token 137: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12269829213619232
    2. ' _' → logprob: -2.3726983070373535
    3. ' i' → logprob: -3.8726983070373535
    4. 'i' → logprob: -6.7476983070373535
    5. '_i' → logprob: -8.247697830200195
    6. ' ' → logprob: -12.997697830200195
    7. '	i' → logprob: -14.872697830200195
    8. '_=' → logprob: -16.372697830200195
    9. ' ' → logprob: -16.497697830200195
    10. '__' → logprob: -17.122697830200195

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23635907471179962
    2. 'in' → logprob: -1.6113591194152832
    3. 'range' → logprob: -4.861359119415283
    4. 'i' → logprob: -6.486359119415283
    5. ' range' → logprob: -7.236359119415283
    6. ' i' → logprob: -7.736359119415283
    7. ' ' → logprob: -8.111358642578125
    8. '_' → logprob: -9.361358642578125
    9. '  ' → logprob: -10.486358642578125
    10. ' _' → logprob: -10.736358642578125

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.673547563375905e-05
    2. ' range' → logprob: -9.375086784362793
    3. '(range' → logprob: -14.375086784362793
    4. 'rang' → logprob: -14.875086784362793
    5. 'ange' → logprob: -15.000086784362793
    6. '	range' → logprob: -15.750086784362793
    7. ')' → logprob: -16.375085830688477
    8. 'ran' → logprob: -16.750085830688477
    9. 'r' → logprob: -17.125085830688477
    10. '[' → logprob: -17.250085830688477

Token 140: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015096203424036503
    2. '(' → logprob: -6.501509666442871
    3. 'N' → logprob: -12.501509666442871
    4. ' (' → logprob: -13.626509666442871
    5. '(n' → logprob: -13.626509666442871
    6. '((' → logprob: -14.376509666442871
    7. '(
' → logprob: -15.001509666442871
    8. ' N' → logprob: -15.251509666442871
    9. '(

' → logprob: -17.376508712768555
    10. '()' → logprob: -17.626508712768555

Token 141: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2254699021577835
    2. ' +' → logprob: -1.600469946861267
    3. '):
' → logprob: -10.225469589233398
    4. '):' → logprob: -11.100469589233398
    5. ')' → logprob: -13.350469589233398
    6. '   ' → logprob: -13.975469589233398
    7. ' ' → logprob: -14.100469589233398
    8. '+
' → logprob: -14.350469589233398
    9. ' +
' → logprob: -14.725469589233398
    10. ' plus' → logprob: -14.850469589233398

Token 142: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04612259566783905
    2. ' ' → logprob: -3.2961225509643555
    3. '3' → logprob: -4.9211225509643555
    4. '1' → logprob: -7.2961225509643555
    5. '4' → logprob: -9.546122550964355
    6. '5' → logprob: -12.171122550964355
    7. '7' → logprob: -13.921122550964355
    8. '+' → logprob: -14.546122550964355
    9. '  ' → logprob: -14.921122550964355
    10. '6' → logprob: -15.171122550964355

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.475425660610199
    2. '2' → logprob: -0.975425660610199
    3. '3' → logprob: -6.725425720214844
    4. '5' → logprob: -9.225425720214844
    5. '10' → logprob: -10.850425720214844
    6. '4' → logprob: -11.350425720214844
    7. ' ' → logprob: -11.600425720214844
    8. '7' → logprob: -13.787925720214844
    9. '11' → logprob: -13.787925720214844
    10. '
' → logprob: -14.037925720214844

Token 144: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07088681310415268
    2. '):' → logprob: -2.6958868503570557
    3. ')' → logprob: -7.570886611938477
    4. ':
' → logprob: -8.570886611938477
    5. ':' → logprob: -9.195886611938477
    6. ',' → logprob: -9.570886611938477
    7. '   ' → logprob: -10.070886611938477
    8. '):
' → logprob: -11.195886611938477
    9. ' ):
' → logprob: -12.070886611938477
    10. '():
' → logprob: -12.445886611938477

Token 145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1883588582277298
    2. '       ' → logprob: -2.063358783721924
    3. ' dp' → logprob: -3.188358783721924
    4. 'dp' → logprob: -6.063358783721924
    5. '	dp' → logprob: -7.188358783721924
    6. '[' → logprob: -9.313359260559082
    7. '   ' → logprob: -9.438359260559082
    8. '(dp' → logprob: -10.563359260559082
    9. ' ' → logprob: -10.688359260559082
    10. ',' → logprob: -10.688359260559082

Token 146: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.02033211477100849
    2. ' dp' → logprob: -4.020332336425781
    3. '   ' → logprob: -6.145332336425781
    4. '       ' → logprob: -10.895332336425781
    5. '	dp' → logprob: -11.270332336425781
    6. ' ' → logprob: -12.895332336425781
    7. '  ' → logprob: -14.145332336425781
    8. '    ' → logprob: -14.395332336425781
    9. '           ' → logprob: -15.145332336425781
    10. '(dp' → logprob: -15.520332336425781

Token 147: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000748398422729224
    2. '.' → logprob: -7.250748634338379
    3. ' .' → logprob: -10.875748634338379
    4. '.app' → logprob: -11.625748634338379
    5. '.extend' → logprob: -11.750748634338379
    6. 'append' → logprob: -13.625748634338379
    7. '.ap' → logprob: -14.000748634338379
    8. '.Append' → logprob: -15.250748634338379
    9. ' append' → logprob: -16.000747680664062
    10. ' +=' → logprob: -16.500747680664062

Token 148: '([' (ID: 5194)
  Prédit: '(IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(IN' → logprob: -0.007100261747837067
    2. '([' → logprob: -5.0071001052856445
    3. 'INF' → logprob: -8.632100105285645
    4. '[' → logprob: -8.757100105285645
    5. '(' → logprob: -10.632100105285645
    6. '([]' → logprob: -11.882100105285645
    7. '(float' → logprob: -12.382100105285645
    8. '(I' → logprob: -12.882100105285645
    9. '(in' → logprob: -13.007100105285645
    10. '(INT' → logprob: -13.632100105285645

Token 149: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.7014437364414334e-05
    2. '-INF' → logprob: -11.25002670288086
    3. '0' → logprob: -11.87502670288086
    4. '-' → logprob: -12.62502670288086
    5. 'float' → logprob: -13.75002670288086
    6. '-inf' → logprob: -14.00002670288086
    7. ' INF' → logprob: -14.12502670288086
    8. 'inf' → logprob: -14.37502670288086
    9. '_INF' → logprob: -14.75002670288086
    10. 'False' → logprob: -16.87502670288086

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38905709981918335
    2. ',' → logprob: -1.1390571594238281
    3. ']*' → logprob: -6.639057159423828
    4. ' ]' → logprob: -7.514057159423828
    5. '])' → logprob: -8.764057159423828
    6. ' ,' → logprob: -9.889057159423828
    7. ' for' → logprob: -10.014057159423828
    8. ',
' → logprob: -10.514057159423828
    9. '+' → logprob: -11.014057159423828
    10. 'for' → logprob: -11.889057159423828

Token 151: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0910428985953331
    2. ']' → logprob: -2.591042995452881
    3. '])' → logprob: -5.216042995452881
    4. ')' → logprob: -6.091042995452881
    5. ' for' → logprob: -6.216042995452881
    6. ']*' → logprob: -6.591042995452881
    7. ' ,' → logprob: -7.716042995452881
    8. ' ]' → logprob: -8.466042518615723
    9. 'for' → logprob: -8.716042518615723
    10. ' )' → logprob: -9.716042518615723

Token 152: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20516808331012726
    2. '3' → logprob: -1.8301681280136108
    3. '(' → logprob: -4.3301682472229
    4. '2' → logprob: -5.3301682472229
    5. '4' → logprob: -6.2051682472229
    6. '100' → logprob: -6.3301682472229
    7. '101' → logprob: -6.5801682472229
    8. ' (' → logprob: -7.9551682472229
    9. '5' → logprob: -8.455167770385742
    10. '11' → logprob: -8.580167770385742

Token 153: 'N' (ID: 45)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20760895311832428
    2. '(N' → logprob: -2.457608938217163
    3. 'N' → logprob: -3.082608938217163
    4. '2' → logprob: -3.457608938217163
    5. '4' → logprob: -4.457609176635742
    6. '(' → logprob: -5.957609176635742
    7. '100' → logprob: -6.082609176635742
    8. '101' → logprob: -6.457609176635742
    9. ' ' → logprob: -6.707609176635742
    10. '11' → logprob: -6.832609176635742

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17978405952453613
    2. ' +' → logprob: -1.8047840595245361
    3. '+
' → logprob: -11.179783821105957
    4. ' +
' → logprob: -11.554783821105957
    5. ')' → logprob: -12.054783821105957
    6. ' ' → logprob: -12.679783821105957
    7. '
' → logprob: -13.429783821105957
    8. ' plus' → logprob: -13.742283821105957
    9. '   ' → logprob: -14.117283821105957
    10. '+

' → logprob: -14.679783821105957

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42963525652885437
    2. '2' → logprob: -1.0546352863311768
    3. ' ' → logprob: -7.054635047912598
    4. '3' → logprob: -9.929635047912598
    5. '7' → logprob: -12.242135047912598
    6. '
' → logprob: -12.554635047912598
    7. '5' → logprob: -12.679635047912598
    8. '6' → logprob: -12.804635047912598
    9. '   ' → logprob: -13.242135047912598
    10. '4' → logprob: -13.492135047912598

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10023675858974457
    2. '2' → logprob: -2.350236654281616
    3. '3' → logprob: -10.850236892700195
    4. ' ' → logprob: -12.100236892700195
    5. '
' → logprob: -13.725236892700195
    6. '5' → logprob: -14.162736892700195
    7. '7' → logprob: -14.225236892700195
    8. '4' → logprob: -14.787736892700195
    9. '   ' → logprob: -14.975236892700195
    10. '6' → logprob: -15.037736892700195

Token 157: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011133065447211266
    2. ')' → logprob: -4.511133193969727
    3. ' ))' → logprob: -10.011133193969727
    4. '])' → logprob: -11.011133193969727
    5. '))
' → logprob: -11.136133193969727
    6. ')))' → logprob: -12.636133193969727
    7. ' )' → logprob: -13.386133193969727
    8. ')
' → logprob: -13.761133193969727
    9. ']))' → logprob: -14.011133193969727
    10. '   ' → logprob: -14.261133193969727

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022083045914769173
    2. ' return' → logprob: -7.627208232879639
    3. '    
' → logprob: -7.877208232879639
    4. '
' → logprob: -8.127208709716797
    5. ' ' → logprob: -8.127208709716797
    6. '<|end|>' → logprob: -8.252208709716797
    7. '	return' → logprob: -9.002208709716797
    8. '[' → logprob: -9.502208709716797
    9. 'return' → logprob: -9.627208709716797
    10. '    ' → logprob: -10.127208709716797

Token 159: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03624742478132248
    2. ' return' → logprob: -3.411247491836548
    3. 'return' (adapté à ' return') → logprob: -6.536247253417969
    4. '	return' → logprob: -7.286247253417969
    5. ' dp' → logprob: -8.661247253417969
    6. ' ' → logprob: -9.786247253417969
    7. 'dp' → logprob: -10.036247253417969
    8. '    
' → logprob: -10.036247253417969
    9. '    ' → logprob: -10.786247253417969
    10. '
' → logprob: -10.786247253417969

Token 160: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.547789674485102e-05
    2. ' dp' → logprob: -10.250035285949707
    3. '	dp' → logprob: -18.625036239624023
    4. '(dp' → logprob: -19.000036239624023
    5. 'd' → logprob: -22.375036239624023
    6. 'dm' → logprob: -22.500036239624023
    7. 'df' → logprob: -22.500036239624023
    8. 'dt' → logprob: -22.750036239624023
    9. '_dp' → logprob: -23.000036239624023
    10. 'dpi' → logprob: -23.250036239624023

Token 161: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47846168279647827
    2. '<|end|>' → logprob: -1.228461742401123
    3. '[' → logprob: -3.103461742401123
    4. 'def' → logprob: -3.978461742401123
    5. '\n' → logprob: -4.978461742401123
    6. '

' → logprob: -6.103461742401123
    7. 'newline' → logprob: -6.228461742401123
    8. '\' → logprob: -6.228461742401123
    9. '<|end|>' → logprob: -6.478461742401123
    10. '```' → logprob: -6.478461742401123

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.377539724111557
    2. '<|end|>' → logprob: -1.3775397539138794
    3. '
' → logprob: -3.00253963470459
    4. '#' → logprob: -5.75253963470459
    5. '```' → logprob: -5.87753963470459
    6. '<|end|>' → logprob: -6.62753963470459
    7. '[' → logprob: -6.87753963470459
    8. ' def' → logprob: -7.12753963470459
    9. ')' → logprob: -7.25253963470459
    10. ' ' → logprob: -7.25253963470459

Token 163: ' set' (ID: 920)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13868744671344757
    2. 'main' → logprob: -2.3886873722076416
    3. ' solve' → logprob: -3.5136873722076416
    4. 'solve' → logprob: -5.513687610626221
    5. ' dfs' → logprob: -6.638687610626221
    6. ' min' → logprob: -8.013687133789062
    7. ' calculate' → logprob: -8.138687133789062
    8. ' compute' → logprob: -8.388687133789062
    9. ' calc' → logprob: -8.763687133789062
    10. 'calculate' → logprob: -8.888687133789062

Token 164: '_dp' (ID: 133252)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.02016436867415905
    2. '_dp' → logprob: -5.020164489746094
    3. '_' → logprob: -5.145164489746094
    4. '_max' → logprob: -5.270164489746094
    5. '_def' → logprob: -8.270164489746094
    6. '_re' → logprob: -8.645164489746094
    7. '_depth' → logprob: -8.770164489746094
    8. '_up' → logprob: -8.895164489746094
    9. '_params' → logprob: -9.520164489746094
    10. '_min' → logprob: -9.520164489746094

Token 165: '_base' (ID: 17096)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11765588819980621
    2. '(N' → logprob: -2.7426559925079346
    3. '[' → logprob: -3.4926559925079346
    4. '[N' → logprob: -4.9926557540893555
    5. '(_' → logprob: -6.1176557540893555
    6. '_' → logprob: -6.1176557540893555
    7. '_line' → logprob: -6.2426557540893555
    8. '[(' → logprob: -7.2426557540893555
    9. '_value' → logprob: -7.7426557540893555
    10. '_row' → logprob: -8.242655754089355

Token 166: '_case' (ID: 43667)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11250650882720947
    2. '_case' → logprob: -2.73750638961792
    3. 'case' → logprob: -4.11250638961792
    4. '_line' → logprob: -4.23750638961792
    5. '(' → logprob: -4.98750638961792
    6. '_' → logprob: -6.48750638961792
    7. '(N' → logprob: -7.86250638961792
    8. 'line' → logprob: -7.98750638961792
    9. ' ():' → logprob: -8.237506866455078
    10. '()' → logprob: -8.362506866455078

Token 167: '_zero' (ID: 53468)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5303030014038086
    2. '(N' → logprob: -1.0303030014038086
    3. '(dp' → logprob: -3.0303030014038086
    4. '(' → logprob: -5.280303001403809
    5. '()' → logprob: -7.155303001403809
    6. '():
' → logprob: -7.905303001403809
    7. '(n' → logprob: -9.780303001403809
    8. ' ():' → logprob: -10.780303001403809
    9. '(df' → logprob: -11.030303001403809
    10. '(D' → logprob: -11.655303001403809

Token 168: '(dp' (ID: 68843)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.15625524520874023
    2. '(' → logprob: -2.4062552452087402
    3. '()' → logprob: -3.2812552452087402
    4. '(dp' → logprob: -4.28125524520874
    5. '_value' → logprob: -7.90625524520874
    6. '_' → logprob: -7.90625524520874
    7. '(N' → logprob: -8.031255722045898
    8. '_dp' → logprob: -8.281255722045898
    9. '_case' → logprob: -8.406255722045898
    10. '()(' → logprob: -8.406255722045898

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04999436438083649
    2. '):' → logprob: -3.049994468688965
    3. '):
' → logprob: -7.549994468688965
    4. ' ,' → logprob: -8.049994468688965
    5. '[' → logprob: -8.424994468688965
    6. ')' → logprob: -8.424994468688965
    7. '   ' → logprob: -9.549994468688965
    8. ',N' → logprob: -11.174994468688965
    9. ' ):' → logprob: -12.049994468688965
    10. ' ' → logprob: -12.549994468688965

Token 170: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2032097429037094
    2. 'N' → logprob: -2.078209638595581
    3. ' N' → logprob: -3.578209638595581
    4. ' ' → logprob: -3.703209638595581
    5. ')' → logprob: -6.20320987701416
    6. 'dp' → logprob: -6.57820987701416
    7. 'i' → logprob: -6.95320987701416
    8. '):
' → logprob: -7.95320987701416
    9. ' dp' → logprob: -8.45320987701416
    10. 'INF' → logprob: -8.45320987701416

Token 171: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14510534703731537
    2. '):' → logprob: -2.0201053619384766
    3. '):
' → logprob: -6.270105361938477
    4. ')' → logprob: -8.395105361938477
    5. ' ,' → logprob: -8.395105361938477
    6. '   ' → logprob: -10.145105361938477
    7. ' ):' → logprob: -11.395105361938477
    8. ',
' → logprob: -11.895105361938477
    9. '+' → logprob: -12.020105361938477
    10. ':' → logprob: -12.895105361938477

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026828988920897245
    2. 'dp' → logprob: -6.127682685852051
    3. ' dp' → logprob: -8.25268268585205
    4. '	dp' → logprob: -8.87768268585205
    5. ' for' → logprob: -10.37768268585205
    6. '[' → logprob: -11.25268268585205
    7. '
' → logprob: -11.37768268585205
    8. '(dp' → logprob: -11.50268268585205
    9. '   ' → logprob: -11.50268268585205
    10. '    
' → logprob: -11.75268268585205

Token 173: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04656519368290901
    2. '   ' → logprob: -3.796565294265747
    3. 'for' (adapté à ' for') → logprob: -4.296565055847168
    4. ' dp' → logprob: -4.796565055847168
    5. ' for' → logprob: -6.796565055847168
    6. '	dp' → logprob: -10.046565055847168
    7. ' ' → logprob: -12.046565055847168
    8. '  ' → logprob: -13.296565055847168
    9. '(dp' → logprob: -13.671565055847168
    10. '	for' → logprob: -13.921565055847168

Token 174: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0790095329284668
    2. 'i' → logprob: -2.579009532928467
    3. ' j' → logprob: -9.454010009765625
    4. ' ' → logprob: -11.204010009765625
    5. 'j' → logprob: -11.579010009765625
    6. ' _' → logprob: -12.579010009765625
    7. '_' → logprob: -12.579010009765625
    8. '   ' → logprob: -13.579010009765625
    9. '_i' → logprob: -13.579010009765625
    10. ' dp' → logprob: -13.579010009765625

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05528979375958443
    2. 'in' → logprob: -2.9302897453308105
    3. 'n' → logprob: -8.180290222167969
    4. ' ' → logprob: -9.555290222167969
    5. ',' → logprob: -11.180290222167969
    6. '0' → logprob: -11.680290222167969
    7. '	in' → logprob: -12.055290222167969
    8. '   ' → logprob: -12.555290222167969
    9. 'In' → logprob: -12.680290222167969
    10. ' i' → logprob: -12.805290222167969

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804412856698036
    2. ' range' → logprob: -3.2880442142486572
    3. ' ' → logprob: -14.163043975830078
    4. '   ' → logprob: -14.163043975830078
    5. '(range' → logprob: -14.288043975830078
    6. '	range' → logprob: -15.538043975830078
    7. '[' → logprob: -15.663043975830078
    8. '  ' → logprob: -16.163043975830078
    9. '0' → logprob: -16.288043975830078
    10. ')' → logprob: -16.913043975830078

Token 177: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12697714567184448
    2. '(' → logprob: -2.1269772052764893
    3. '(n' → logprob: -10.50197696685791
    4. '(
' → logprob: -11.62697696685791
    5. ' (' → logprob: -12.37697696685791
    6. '((' → logprob: -12.62697696685791
    7. '(i' → logprob: -13.37697696685791
    8. '(len' → logprob: -13.75197696685791
    9. '1' → logprob: -13.87697696685791
    10. '(M' → logprob: -15.37697696685791

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08911918848752975
    2. ' +' → logprob: -2.4641191959381104
    3. '):' → logprob: -8.839118957519531
    4. '):
' → logprob: -10.589118957519531
    5. '   ' → logprob: -12.964118957519531
    6. '+
' → logprob: -13.089118957519531
    7. '
' → logprob: -13.964118957519531
    8. ' ' → logprob: -14.214118957519531
    9. ' ):' → logprob: -14.339118957519531
    10. ',' → logprob: -14.464118957519531

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044056313345208764
    2. '2' → logprob: -7.87544059753418
    3. ' ' → logprob: -9.75044059753418
    4. '0' → logprob: -14.12544059753418
    5. '   ' → logprob: -15.31294059753418
    6. '
' → logprob: -15.43794059753418
    7. '```' → logprob: -15.50044059753418
    8. '-' → logprob: -15.75044059753418
    9. '(' → logprob: -15.81294059753418
    10. '+' → logprob: -16.43794059753418

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011846343986690044
    2. '2' → logprob: -6.751184463500977
    3. ' ' → logprob: -12.126184463500977
    4. '
' → logprob: -12.313684463500977
    5. '0' → logprob: -13.876184463500977
    6. '```' → logprob: -14.438684463500977
    7. '

' → logprob: -14.563684463500977
    8. '-' → logprob: -15.251184463500977
    9. '(' → logprob: -15.251184463500977
    10. '   ' → logprob: -15.688684463500977

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029982624109834433
    2. '):
' → logprob: -5.877998352050781
    3. ' ):' → logprob: -8.877998352050781
    4. ')' → logprob: -10.752998352050781
    5. ':' → logprob: -11.002998352050781
    6. '+' → logprob: -11.252998352050781
    7. '   ' → logprob: -14.002998352050781
    8. '):
' → logprob: -14.377998352050781
    9. '():' → logprob: -14.877998352050781
    10. ',' → logprob: -15.002998352050781

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03729010373353958
    2. ':' → logprob: -3.537290096282959
    3. ' dp' → logprob: -5.662290096282959
    4. 'dp' → logprob: -6.662290096282959
    5. '   ' → logprob: -7.037290096282959
    6. ':
' → logprob: -7.162290096282959
    7. '(dp' → logprob: -7.787290096282959
    8. '[' → logprob: -8.037290573120117
    9. '	dp' → logprob: -8.412290573120117
    10. ',' → logprob: -10.912290573120117

Token 183: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.06356675177812576
    2. ' dp' → logprob: -2.8135666847229004
    3. '   ' → logprob: -6.8135666847229
    4. 'for' → logprob: -8.063567161560059
    5. ' for' → logprob: -9.438567161560059
    6. '       ' → logprob: -9.563567161560059
    7. '	dp' → logprob: -10.438567161560059
    8. ' ' → logprob: -14.063567161560059
    9. '(dp' → logprob: -14.188567161560059
    10. 'if' → logprob: -14.438567161560059

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015991552209015936
    2. '[' → logprob: -8.750160217285156
    3. '[I' → logprob: -14.250160217285156
    4. ' [' → logprob: -15.750160217285156
    5. '][' → logprob: -15.875160217285156
    6. '```' → logprob: -16.625160217285156
    7. 'i' → logprob: -16.875160217285156
    8. '[N' → logprob: -16.875160217285156
    9. '[][' → logprob: -17.125160217285156
    10. '[
' → logprob: -17.250160217285156

Token 185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000505730917211622
    2. '[' → logprob: -7.8755059242248535
    3. ']' → logprob: -9.125505447387695
    4. ' ][' → logprob: -11.250505447387695
    5. '[i' → logprob: -13.125505447387695
    6. ']=' → logprob: -14.375505447387695
    7. '0' → logprob: -15.000505447387695
    8. '][-' → logprob: -15.750505447387695
    9. '   ' → logprob: -16.000505447387695
    10. ']
' → logprob: -16.125505447387695

Token 186: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06202403083443642
    2. '0' → logprob: -2.8120241165161133
    3. ' i' → logprob: -10.062024116516113
    4. ']' → logprob: -11.687024116516113
    5. ' ' → logprob: -12.937024116516113
    6. '   ' → logprob: -14.312024116516113
    7. ')' → logprob: -14.812024116516113
    8. '_i' → logprob: -15.374524116516113
    9. '])' → logprob: -15.562024116516113
    10. '	i' → logprob: -15.687024116516113

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.570319702499546e-05
    2. ' ]' → logprob: -10.750025749206543
    3. ']=' → logprob: -12.375025749206543
    4. '']' → logprob: -17.625024795532227
    5. '=' → logprob: -18.750024795532227
    6. '`]' → logprob: -18.750024795532227
    7. ')' → logprob: -18.875024795532227
    8. '[' → logprob: -19.000024795532227
    9. ']
' → logprob: -19.500024795532227
    10. ']

' → logprob: -19.500024795532227

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. '=

' → logprob: -16.02975082397461
    4. '[' → logprob: -16.27975082397461
    5. '=int' → logprob: -16.77975082397461
    6. ']=' → logprob: -16.90475082397461
    7. ']' → logprob: -17.02975082397461
    8. '＝' → logprob: -17.65475082397461
    9. '=
' → logprob: -17.65475082397461
    10. ')' → logprob: -17.90475082397461

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'i' → logprob: -14.62501049041748
    4. 'float' → logprob: -15.75001049041748
    5. '1' → logprob: -17.500011444091797
    6. 'inf' → logprob: -17.875011444091797
    7. 'get' → logprob: -18.000011444091797
    8. 'INF' → logprob: -18.375011444091797
    9. ' i' → logprob: -18.500011444091797
    10. '۰' → logprob: -19.250011444091797

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -18.750001907348633
    4. '۰' → logprob: -19.375001907348633
    5. 'i' → logprob: -19.500001907348633
    6. 'float' → logprob: -20.562501907348633
    7. '(' → logprob: -20.937501907348633
    8. '00' → logprob: -20.937501907348633
    9. ' ' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.062501907348633

Token 191: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3496605157852173
    2. ' main' → logprob: -1.5996605157852173
    3. ' solve' → logprob: -3.0996603965759277
    4. 'set' → logprob: -3.9746603965759277
    5. 'main' → logprob: -5.099660396575928
    6. ' calculate' → logprob: -5.349660396575928
    7. ' compute' → logprob: -5.474660396575928
    8. 'solve' → logprob: -5.724660396575928
    9. ' calc' → logprob: -6.349660396575928
    10. ' process' → logprob: -6.474660396575928

Token 194: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.00012201975914649665
    2. '_' → logprob: -9.5001220703125
    3. 'dp' → logprob: -10.8751220703125
    4. '_rec' → logprob: -11.6251220703125
    5. '_df' → logprob: -12.3751220703125
    6. '_max' → logprob: -13.0001220703125
    7. '_def' → logprob: -14.0001220703125
    8. 'def' → logprob: -14.1251220703125
    9. '_depth' → logprob: -14.2501220703125
    10. '_py' → logprob: -14.6251220703125

Token 195: '_first' (ID: 29347)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.00013882013445254415
    2. '_max' → logprob: -9.375139236450195
    3. '_' → logprob: -11.000139236450195
    4. '_basis' → logprob: -11.250139236450195
    5. '_case' → logprob: -12.500139236450195
    6. '_bas' → logprob: -12.875139236450195
    7. '_min' → logprob: -13.125139236450195
    8. '_current' → logprob: -13.500139236450195
    9. '_zero' → logprob: -14.000139236450195
    10. '_limit' → logprob: -14.000139236450195

Token 196: '_j' (ID: 12021)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.0023991975467652082
    2. '_step' → logprob: -6.62739896774292
    3. '_base' → logprob: -8.877399444580078
    4. '_layer' → logprob: -8.877399444580078
    5. '_line' → logprob: -9.002399444580078
    6. '_row' → logprob: -9.127399444580078
    7. '_value' → logprob: -9.752399444580078
    8. '_level' → logprob: -9.877399444580078
    9. '_choice' → logprob: -10.002399444580078
    10. '_' → logprob: -10.127399444580078

Token 197: '(H' (ID: 20904)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.10593771189451218
    2. '(dp' → logprob: -3.1059377193450928
    3. '_value' → logprob: -4.230937480926514
    4. '_base' → logprob: -4.730937480926514
    5. '_index' → logprob: -5.605937480926514
    6. '_element' → logprob: -5.730937480926514
    7. 'case' → logprob: -5.730937480926514
    8. 'ase' → logprob: -6.355937480926514
    9. '_col' → logprob: -6.480937480926514
    10. '_' → logprob: -6.480937480926514

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4227182865142822
    2. '[' → logprob: -1.7977182865142822
    3. '_list' → logprob: -1.7977182865142822
    4. ',[' → logprob: -5.797718048095703
    5. ' ,' → logprob: -6.422718048095703
    6. '_,' → logprob: -6.547718048095703
    7. ',i' → logprob: -6.672718048095703
    8. ')' → logprob: -6.797718048095703
    9. ',_' → logprob: -7.172718048095703
    10. ',j' → logprob: -7.797718048095703

Token 199: ' dp' (ID: 21546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48905012011528015
    2. 'N' → logprob: -1.3640501499176025
    3. ' ' → logprob: -3.1140501499176025
    4. ' N' → logprob: -3.1140501499176025
    5. '1' → logprob: -3.8640501499176025
    6. 'dp' → logprob: -4.864049911499023
    7. 'i' → logprob: -5.489049911499023
    8. 'j' → logprob: -5.864049911499023
    9. 'H' → logprob: -6.489049911499023
    10. ' dp' → logprob: -6.614049911499023

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005815077456645668
    2. ' ,' → logprob: -8.000581741333008
    3. '):' → logprob: -9.500581741333008
    4. ',N' → logprob: -9.500581741333008
    5. ',i' → logprob: -9.625581741333008
    6. '   ' → logprob: -11.625581741333008
    7. ',j' → logprob: -12.625581741333008
    8. '[' → logprob: -12.875581741333008
    9. ' ' → logprob: -13.000581741333008
    10. ',H' → logprob: -13.000581741333008

Token 201: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1191130056977272
    2. ' N' → logprob: -2.244112968444824
    3. '0' → logprob: -5.869112968444824
    4. 'i' → logprob: -6.994112968444824
    5. ' ' → logprob: -7.119112968444824
    6. 'j' → logprob: -7.244112968444824
    7. '1' → logprob: -7.994112968444824
    8. ' i' → logprob: -8.619112968444824
    9. ' j' → logprob: -8.869112968444824
    10. 'H' → logprob: -9.244112968444824

Token 202: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13180454075336456
    2. '):' → logprob: -2.1318044662475586
    3. '):
' → logprob: -5.506804466247559
    4. ')' → logprob: -7.881804466247559
    5. ',i' → logprob: -8.881804466247559
    6. ' ,' → logprob: -9.131804466247559
    7. ',j' → logprob: -9.756804466247559
    8. '):
' → logprob: -10.131804466247559
    9. '   ' → logprob: -11.006804466247559
    10. ',
' → logprob: -11.631804466247559

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016212647315114737
    2. 'for' → logprob: -6.876621246337891
    3. ' for' → logprob: -7.626621246337891
    4. '	for' → logprob: -9.25162124633789
    5. '   ' → logprob: -12.75162124633789
    6. '```' → logprob: -13.62662124633789
    7. ',' → logprob: -15.37662124633789
    8. '       ' → logprob: -15.50162124633789
    9. 'def' → logprob: -15.62662124633789
    10. ')' → logprob: -16.37662124633789

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5327947735786438
    2. '   ' → logprob: -1.282794713973999
    3. ' for' → logprob: -2.032794713973999
    4. 'dp' → logprob: -5.657794952392578
    5. 'j' → logprob: -7.282794952392578
    6. ' dp' → logprob: -7.907794952392578
    7. ' j' → logprob: -9.282794952392578
    8. 'i' → logprob: -9.907794952392578
    9. 'def' → logprob: -10.032794952392578
    10. ' i' → logprob: -10.532794952392578

Token 205: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6906201243400574
    2. ' j' → logprob: -1.1906201839447021
    3. 'i' → logprob: -2.065620183944702
    4. ' i' → logprob: -2.690620183944702
    5. '_j' → logprob: -11.128120422363281
    6. '   ' → logprob: -11.190620422363281
    7. ' ' → logprob: -11.315620422363281
    8. '	j' → logprob: -11.753120422363281
    9. ' range' → logprob: -11.878120422363281
    10. 'J' → logprob: -11.940620422363281

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033835068345069885
    2. 'in' → logprob: -3.4088351726531982
    3. ' ' → logprob: -9.283835411071777
    4. ',' → logprob: -10.908835411071777
    5. '   ' → logprob: -10.908835411071777
    6. '1' → logprob: -11.658835411071777
    7. 'n' → logprob: -11.908835411071777
    8. '0' → logprob: -12.033835411071777
    9. 'range' → logprob: -12.283835411071777
    10. '  ' → logprob: -12.658835411071777

Token 207: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6326090097427368
    2. 'range' → logprob: -0.7576090097427368
    3. '(range' → logprob: -12.382609367370605
    4. ' ' → logprob: -13.132609367370605
    5. '   ' → logprob: -13.882609367370605
    6. 'in' → logprob: -14.632609367370605
    7. '	range' → logprob: -14.757609367370605
    8. ' in' → logprob: -14.882609367370605
    9. '(' → logprob: -15.007609367370605
    10. '  ' → logprob: -15.132609367370605

Token 208: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05495111644268036
    2. '(N' → logprob: -2.9299511909484863
    3. '1' → logprob: -10.929950714111328
    4. '(n' → logprob: -11.054950714111328
    5. ' ' → logprob: -11.429950714111328
    6. ' (' → logprob: -11.679950714111328
    7. '(
' → logprob: -12.179950714111328
    8. '(H' → logprob: -12.429950714111328
    9. '(len' → logprob: -12.554950714111328
    10. 'N' → logprob: -14.554950714111328

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3493770956993103
    2. 'N' → logprob: -1.224377155303955
    3. '2' → logprob: -7.474377155303955
    4. ' N' → logprob: -9.224376678466797
    5. ' ' → logprob: -9.224376678466797
    6. '   ' → logprob: -9.349376678466797
    7. '0' → logprob: -10.474376678466797
    8. '(' → logprob: -11.349376678466797
    9. 'len' → logprob: -11.599376678466797
    10. '(N' → logprob: -11.849376678466797

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024739265791140497
    2. ' ,' → logprob: -8.75024700164795
    3. ',N' → logprob: -9.50024700164795
    4. ',
' → logprob: -12.00024700164795
    5. '   ' → logprob: -12.62524700164795
    6. '(N' → logprob: -13.25024700164795
    7. ' ' → logprob: -14.62524700164795
    8. '
' → logprob: -15.00024700164795
    9. '(' → logprob: -15.00024700164795
    10. '):
' → logprob: -15.12524700164795

Token 211: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10020741820335388
    2. ' N' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. 'n' → logprob: -15.350207328796387
    5. '   ' → logprob: -15.850207328796387
    6. '	N' → logprob: -16.600208282470703
    7. '1' → logprob: -16.975208282470703
    8. ')' → logprob: -17.225208282470703
    9. 'len' → logprob: -17.600208282470703
    10. '(N' → logprob: -18.600208282470703

Token 212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20165373384952545
    2. ' +' → logprob: -1.7016537189483643
    3. '):
' → logprob: -8.701653480529785
    4. '):' → logprob: -10.076653480529785
    5. '   ' → logprob: -11.076653480529785
    6. '+
' → logprob: -12.201653480529785
    7. '
' → logprob: -12.951653480529785
    8. ' +
' → logprob: -13.076653480529785
    9. ',' → logprob: -13.451653480529785
    10. ' ' → logprob: -13.951653480529785

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080658778548241
    2. ' ' → logprob: -5.504080772399902
    3. '   ' → logprob: -14.441580772399902
    4. '2' → logprob: -14.941580772399902
    5. ')' → logprob: -15.004080772399902
    6. '
' → logprob: -15.441580772399902
    7. '```' → logprob: -15.441580772399902
    8. '  ' → logprob: -16.379079818725586
    9. '(' → logprob: -16.566579818725586
    10. ',' → logprob: -17.504079818725586

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023238400171976537
    2. ' ' → logprob: -8.875232696533203
    3. '2' → logprob: -9.375232696533203
    4. '
' → logprob: -12.750232696533203
    5. '   ' → logprob: -13.625232696533203
    6. '+' → logprob: -14.062732696533203
    7. '```' → logprob: -14.687732696533203
    8. 'i' → logprob: -15.000232696533203
    9. '

' → logprob: -15.312732696533203
    10. ')' → logprob: -15.312732696533203

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00829694140702486
    2. '):
' → logprob: -4.883296966552734
    3. ':' → logprob: -7.383296966552734
    4. ',' → logprob: -10.633296966552734
    5. ')' → logprob: -10.758296966552734
    6. '   ' → logprob: -11.133296966552734
    7. ' ):' → logprob: -11.883296966552734
    8. '):
' → logprob: -14.258296966552734
    9. ':
' → logprob: -15.133296966552734
    10. '       ' → logprob: -15.508296966552734

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0454975925385952
    2. ' dp' → logprob: -3.5454976558685303
    3. 'dp' → logprob: -4.420497417449951
    4. '   ' → logprob: -5.670497417449951
    5. '	dp' → logprob: -9.54549789428711
    6. ' for' → logprob: -10.54549789428711
    7. '(dp' → logprob: -10.79549789428711
    8. '_dp' → logprob: -11.79549789428711
    9. '	   ' → logprob: -12.42049789428711
    10. '           ' → logprob: -12.79549789428711

Token 217: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.007486184127628803
    2. ' dp' → logprob: -5.257486343383789
    3. '       ' → logprob: -6.382486343383789
    4. '   ' → logprob: -7.632486343383789
    5. '	dp' → logprob: -10.257486343383789
    6. 'for' → logprob: -10.757486343383789
    7. ' ' → logprob: -12.632486343383789
    8. 'if' → logprob: -12.632486343383789
    9. '           ' → logprob: -12.882486343383789
    10. ' for' → logprob: -13.382486343383789

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.250016212463379
    3. '][' → logprob: -14.000016212463379
    4. 'i' → logprob: -14.750016212463379
    5. '[j' → logprob: -14.750016212463379
    6. '```' → logprob: -14.875016212463379
    7. ')[' → logprob: -15.625016212463379
    8. ' [' → logprob: -15.750016212463379
    9. '[I' → logprob: -15.750016212463379
    10. '
' → logprob: -16.125015258789062

Token 219: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020822491496801376
    2. '[' → logprob: -3.895822525024414
    3. '[i' → logprob: -9.145822525024414
    4. ']' → logprob: -9.270822525024414
    5. '1' → logprob: -10.520822525024414
    6. ' ][' → logprob: -10.645822525024414
    7. '
' → logprob: -11.895822525024414
    8. '```' → logprob: -12.520822525024414
    9. '0' → logprob: -12.645822525024414
    10. '   ' → logprob: -13.145822525024414

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004630816401913762
    2. '0' → logprob: -8.125463485717773
    3. 'i' → logprob: -8.750463485717773
    4. ' ' → logprob: -12.500463485717773
    5. '   ' → logprob: -13.687963485717773
    6. '
' → logprob: -13.937963485717773
    7. '-' → logprob: -14.625463485717773
    8. '```' → logprob: -15.562963485717773
    9. 'H' → logprob: -15.687963485717773
    10. ']' → logprob: -15.750463485717773

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.664371848164592e-05
    2. ' ]' → logprob: -11.250016212463379
    3. ']=' → logprob: -12.625016212463379
    4. ']
' → logprob: -15.625016212463379
    5. '][' → logprob: -16.500017166137695
    6. ']+=' → logprob: -17.125017166137695
    7. ')' → logprob: -17.375017166137695
    8. '   ' → logprob: -17.500017166137695
    9. ' ' → logprob: -17.875017166137695
    10. '-' → logprob: -17.875017166137695

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894339203834534
    2. '=' → logprob: -2.4639434814453125
    3. ' +=' → logprob: -13.088943481445312
    4. '+=' → logprob: -14.338943481445312
    5. ']' → logprob: -15.338943481445312
    6. '=i' → logprob: -15.463943481445312
    7. ',' → logprob: -15.963943481445312
    8. '=int' → logprob: -16.213943481445312
    9. '[' → logprob: -16.338943481445312
    10. '＝' → logprob: -16.713943481445312

Token 223: ' H' (ID: 487)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6398375630378723
    2. 'H' → logprob: -0.8898375630378723
    3. ' abs' → logprob: -3.8898375034332275
    4. 'dp' → logprob: -4.139837741851807
    5. 'max' → logprob: -4.389837741851807
    6. '0' → logprob: -5.139837741851807
    7. ' H' → logprob: -5.139837741851807
    8. ' max' → logprob: -8.014837265014648
    9. 'min' → logprob: -8.139837265014648
    10. ' dp' → logprob: -8.514837265014648

Token 224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.338466093642637e-05
    2. '[' → logprob: -9.625073432922363
    3. ' [' → logprob: -12.750073432922363
    4. 'i' → logprob: -14.125073432922363
    5. ']' → logprob: -14.375073432922363
    6. '][' → logprob: -14.625073432922363
    7. '[
' → logprob: -14.625073432922363
    8. '
' → logprob: -14.875073432922363
    9. '[I' → logprob: -15.250073432922363
    10. ')' → logprob: -15.250073432922363

Token 225: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0059732310473918915
    2. '-' → logprob: -6.0059733390808105
    3. '])' → logprob: -6.3809733390808105
    4. ' -' → logprob: -7.3809733390808105
    5. ']-' → logprob: -7.7559733390808105
    6. '<|end|>' → logprob: -8.255972862243652
    7. '[' → logprob: -8.505972862243652
    8. ' ]' → logprob: -8.505972862243652
    9. ']
' → logprob: -11.380972862243652
    10. '1' → logprob: -11.630972862243652

Token 226: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' update' (ID: 4027)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.0247882604599
    2. ' calculate' → logprob: -1.6497882604599
    3. ' calc' → logprob: -2.3997883796691895
    4. ' compute' → logprob: -2.3997883796691895
    5. ' solve' → logprob: -2.5247883796691895
    6. ' init' → logprob: -3.5247883796691895
    7. 'set' → logprob: -3.7747883796691895
    8. 'calculate' → logprob: -3.7747883796691895
    9. 'calc' → logprob: -4.0247883796691895
    10. 'def' → logprob: -4.1497883796691895

Token 228: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.001554620685055852
    2. '_' → logprob: -6.626554489135742
    3. '(dp' → logprob: -9.126554489135742
    4. '(' → logprob: -10.126554489135742
    5. 'dp' → logprob: -10.251554489135742
    6. '_DP' → logprob: -11.251554489135742
    7. '_d' → logprob: -11.876554489135742
    8. '_value' → logprob: -13.001554489135742
    9. 'DP' → logprob: -13.126554489135742
    10. '_max' → logprob: -13.126554489135742

Token 229: '_for' (ID: 11903)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04791170358657837
    2. '(H' → logprob: -3.7979116439819336
    3. '(N' → logprob: -4.297911643981934
    4. '(dp' → logprob: -4.547911643981934
    5. '(i' → logprob: -10.047911643981934
    6. '_' → logprob: -10.422911643981934
    7. '(_' → logprob: -10.672911643981934
    8. '(D' → logprob: -10.922911643981934
    9. '_(' → logprob: -11.672911643981934
    10. '(_,' → logprob: -11.672911643981934

Token 230: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9523894786834717
    2. 'i' → logprob: -1.3273894786834717
    3. 'j' → logprob: -1.8273894786834717
    4. '_i' → logprob: -1.9523894786834717
    5. 'all' → logprob: -3.9523894786834717
    6. '(i' → logprob: -5.577389717102051
    7. '_all' → logprob: -5.702389717102051
    8. 'dp' → logprob: -5.952389717102051
    9. '_next' → logprob: -5.952389717102051
    10. '_' → logprob: -6.452389717102051

Token 231: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.1342579871416092
    2. '(' → logprob: -2.5092580318450928
    3. '(N' → logprob: -3.7592580318450928
    4. '(H' → logprob: -4.259257793426514
    5. '(j' → logprob: -5.509257793426514
    6. '(_,' → logprob: -6.509257793426514
    7. '_' → logprob: -7.759257793426514
    8. '_(' → logprob: -8.259258270263672
    9. '(_' → logprob: -9.259258270263672
    10. ' (' → logprob: -9.634258270263672

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046630011638626456
    2. ' ,' → logprob: -8.000466346740723
    3. ',j' → logprob: -9.250466346740723
    4. ',i' → logprob: -11.125466346740723
    5. ',N' → logprob: -11.625466346740723
    6. ',
' → logprob: -12.625466346740723
    7. ',n' → logprob: -13.125466346740723
    8. '   ' → logprob: -14.000466346740723
    9. '[' → logprob: -14.625466346740723
    10. '‌,' → logprob: -14.750466346740723

Token 233: ' H' (ID: 487)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5326228737831116
    2. 'N' → logprob: -0.9076228737831116
    3. ' j' → logprob: -5.782622814178467
    4. ' H' → logprob: -6.032622814178467
    5. 'j' → logprob: -6.282622814178467
    6. 'H' → logprob: -6.532622814178467
    7. ',' → logprob: -8.907623291015625
    8. 'i' → logprob: -9.282623291015625
    9. ' i' → logprob: -9.282623291015625
    10. '   ' → logprob: -9.532623291015625

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044008632539771497
    2. ' ,' → logprob: -8.250439643859863
    3. ',j' → logprob: -9.500439643859863
    4. ',i' → logprob: -9.750439643859863
    5. '   ' → logprob: -10.500439643859863
    6. ',N' → logprob: -11.750439643859863
    7. ',
' → logprob: -13.125439643859863
    8. ',n' → logprob: -13.500439643859863
    9. '       ' → logprob: -13.875439643859863
    10. 'j' → logprob: -14.250439643859863

Token 235: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.458182156085968
    2. ' N' → logprob: -1.0831820964813232
    3. 'j' → logprob: -4.208182334899902
    4. ' j' → logprob: -4.583182334899902
    5. 'i' → logprob: -6.208182334899902
    6. ' i' → logprob: -6.958182334899902
    7. '   ' → logprob: -7.833182334899902
    8. ',' → logprob: -8.083182334899902
    9. 'J' → logprob: -9.833182334899902
    10. ',N' → logprob: -10.083182334899902

Token 236: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021295747137628496
    2. ' ,' → logprob: -9.375212669372559
    3. ',j' → logprob: -9.375212669372559
    4. '   ' → logprob: -10.250212669372559
    5. ',
' → logprob: -13.125212669372559
    6. '):' → logprob: -13.125212669372559
    7. '):
' → logprob: -13.375212669372559
    8. 'j' → logprob: -13.750212669372559
    9. ',i' → logprob: -15.250212669372559
    10. ' j' → logprob: -15.375212669372559

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029981426894664764
    2. 'for' → logprob: -4.15498161315918
    3. ' for' → logprob: -4.27998161315918
    4. '	for' → logprob: -12.52998161315918
    5. '
' → logprob: -13.65498161315918
    6. '```' → logprob: -13.77998161315918
    7. 'def' → logprob: -14.40498161315918
    8. '    
' → logprob: -15.27998161315918
    9. '       ' → logprob: -15.27998161315918
    10. '  ' → logprob: -16.02998161315918

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05842871963977814
    2. '   ' → logprob: -3.1834287643432617
    3. ' for' → logprob: -4.183428764343262
    4. '
' → logprob: -10.683428764343262
    5. 'def' → logprob: -11.183428764343262
    6. '```' → logprob: -11.558428764343262
    7. ' ' → logprob: -11.808428764343262
    8. 'j' → logprob: -12.683428764343262
    9. '  ' → logprob: -12.933428764343262
    10. '	for' → logprob: -13.183428764343262

Token 239: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.22092564404010773
    2. ' i' → logprob: -1.8459256887435913
    3. 'j' → logprob: -3.3459255695343018
    4. 'i' → logprob: -5.345925807952881
    5. ' ' → logprob: -8.595925331115723
    6. '   ' → logprob: -10.033425331115723
    7. '	j' → logprob: -10.533425331115723
    8. '_j' → logprob: -11.095925331115723
    9. ' ' → logprob: -11.408425331115723
    10. ' _' → logprob: -11.658425331115723

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1136256754398346
    2. 'in' → logprob: -2.2386257648468018
    3. ' ' → logprob: -8.238625526428223
    4. '   ' → logprob: -8.738625526428223
    5. ',' → logprob: -8.988625526428223
    6. '1' → logprob: -9.988625526428223
    7. ')' → logprob: -10.238625526428223
    8. '  ' → logprob: -10.738625526428223
    9. '[' → logprob: -10.863625526428223
    10. '	in' → logprob: -10.863625526428223

Token 241: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11284882575273514
    2. ' range' → logprob: -2.2378487586975098
    3. '   ' → logprob: -11.612849235534668
    4. '1' → logprob: -12.612849235534668
    5. ' ' → logprob: -12.612849235534668
    6. ' in' → logprob: -12.987849235534668
    7. '  ' → logprob: -13.112849235534668
    8. '(range' → logprob: -13.112849235534668
    9. 'in' → logprob: -13.237849235534668
    10. '
' → logprob: -14.237849235534668

Token 242: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002469158498570323
    2. '(N' → logprob: -8.75024700164795
    3. '1' → logprob: -10.00024700164795
    4. '   ' → logprob: -11.12524700164795
    5. 'range' → logprob: -11.37524700164795
    6. '(range' → logprob: -12.62524700164795
    7. ' range' → logprob: -12.62524700164795
    8. ' ' → logprob: -13.12524700164795
    9. ' (' → logprob: -13.25024700164795
    10. '(n' → logprob: -13.37524700164795

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021105000749230385
    2. '2' → logprob: -4.27110481262207
    3. 'N' → logprob: -5.02110481262207
    4. ' ' → logprob: -9.02110481262207
    5. 'j' → logprob: -9.39610481262207
    6. 'len' → logprob: -10.39610481262207
    7. '(' → logprob: -10.52110481262207
    8. 'range' → logprob: -10.64610481262207
    9. ' N' → logprob: -11.77110481262207
    10. '0' → logprob: -12.14610481262207

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002314303710591048
    2. ' ,' → logprob: -8.500231742858887
    3. '   ' → logprob: -11.375231742858887
    4. ',N' → logprob: -11.375231742858887
    5. ' ' → logprob: -13.500231742858887
    6. '1' → logprob: -14.125231742858887
    7. '+' → logprob: -14.500231742858887
    8. '  ' → logprob: -14.625231742858887
    9. ',i' → logprob: -15.187731742858887
    10. '       ' → logprob: -15.312731742858887

Token 245: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.100211963057518
    2. ' N' → logprob: -2.3502118587493896
    3. '   ' → logprob: -13.350212097167969
    4. ' ' → logprob: -13.600212097167969
    5. 'n' → logprob: -13.600212097167969
    6. '	N' → logprob: -15.600212097167969
    7. '(N' → logprob: -15.975212097167969
    8. ')' → logprob: -16.10021209716797
    9. '```' → logprob: -16.10021209716797
    10. '  ' → logprob: -16.35021209716797

Token 246: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759641528129578
    2. '+' → logprob: -0.8259641528129578
    3. '):
' → logprob: -11.450963973999023
    4. '   ' → logprob: -11.700963973999023
    5. '+
' → logprob: -13.700963973999023
    6. ' ' → logprob: -13.950963973999023
    7. '
' → logprob: -13.950963973999023
    8. ' +
' → logprob: -14.200963973999023
    9. ',' → logprob: -15.200963973999023
    10. '):' → logprob: -15.325963973999023

Token 247: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009767187759280205
    2. ' ' → logprob: -4.634767055511475
    3. '2' → logprob: -11.884767532348633
    4. '   ' → logprob: -13.884767532348633
    5. ')' → logprob: -14.384767532348633
    6. '+' → logprob: -14.697267532348633
    7. '
' → logprob: -14.822267532348633
    8. '0' → logprob: -15.322267532348633
    9. '11' → logprob: -15.447267532348633
    10. '(' → logprob: -15.759767532348633

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007207724265754223
    2. ' ' → logprob: -7.375720977783203
    3. '2' → logprob: -9.875720977783203
    4. '+' → logprob: -10.375720977783203
    5. 'i' → logprob: -12.625720977783203
    6. '   ' → logprob: -12.875720977783203
    7. ')' → logprob: -13.750720977783203
    8. ' +' → logprob: -14.000720977783203
    9. '
' → logprob: -14.375720977783203
    10. '```' → logprob: -14.875720977783203

Token 249: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011159120127558708
    2. '):' → logprob: -4.5111589431762695
    3. '   ' → logprob: -10.26115894317627
    4. ':
' → logprob: -10.51115894317627
    5. ':' → logprob: -10.76115894317627
    6. '):
' → logprob: -11.63615894317627
    7. '       ' → logprob: -11.76115894317627
    8. ',' → logprob: -12.51115894317627
    9. ' ):
' → logprob: -12.51115894317627
    10. '():
' → logprob: -13.63615894317627

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22084039449691772
    2. ' for' → logprob: -1.8458404541015625
    3. 'for' → logprob: -3.3458404541015625
    4. '   ' → logprob: -5.3458404541015625
    5. '	for' → logprob: -9.220840454101562
    6. '	' → logprob: -9.595840454101562
    7. ' ' → logprob: -10.345840454101562
    8. '	   ' → logprob: -10.720840454101562
    9. ',' → logprob: -10.970840454101562
    10. '           ' → logprob: -11.970840454101562

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0423741452395916
    2. '   ' → logprob: -3.6673741340637207
    3. ' for' → logprob: -4.167374134063721
    4. '       ' → logprob: -7.917374134063721
    5. 'j' → logprob: -10.292374610900879
    6. 'dp' → logprob: -10.542374610900879
    7. '	for' → logprob: -11.042374610900879
    8. ' ' → logprob: -12.042374610900879
    9. ' j' → logprob: -13.417374610900879
    10. '```' → logprob: -14.042374610900879

Token 252: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3486280143260956
    2. ' j' → logprob: -1.223628044128418
    3. '   ' → logprob: -9.723628044128418
    4. '	j' → logprob: -10.223628044128418
    5. 'k' → logprob: -10.598628044128418
    6. '    ' → logprob: -10.848628044128418
    7. '_j' → logprob: -11.598628044128418
    8. ' ' → logprob: -11.911128044128418
    9. '  ' → logprob: -12.911128044128418
    10. ' k' → logprob: -12.911128044128418

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02632700465619564
    2. 'in' → logprob: -3.651326894760132
    3. ' ' → logprob: -11.151327133178711
    4. '	in' → logprob: -12.151327133178711
    5. 'import' → logprob: -13.151327133178711
    6. '   ' → logprob: -14.026327133178711
    7. '    ' → logprob: -14.401327133178711
    8. '1' → logprob: -14.526327133178711
    9. 'range' → logprob: -14.776327133178711
    10. '(' → logprob: -14.901327133178711

Token 254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07891016453504562
    2. ' range' → logprob: -2.5789101123809814
    3. '(range' → logprob: -11.203909873962402
    4. '   ' → logprob: -13.078909873962402
    5. '	range' → logprob: -13.703909873962402
    6. '1' → logprob: -13.703909873962402
    7. ' ' → logprob: -13.828909873962402
    8. '
' → logprob: -14.203909873962402
    9. '  ' → logprob: -15.828909873962402
    10. '(' → logprob: -16.32891082763672

Token 255: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.620622712536715e-05
    2. '1' → logprob: -10.375045776367188
    3. ' (' → logprob: -12.250045776367188
    4. '2' → logprob: -12.500045776367188
    5. '(
' → logprob: -12.750045776367188
    6. '(i' → logprob: -12.875045776367188
    7. ' ' → logprob: -15.000045776367188
    8. '   ' → logprob: -15.625045776367188
    9. '
' → logprob: -16.125045776367188
    10. '(j' → logprob: -16.250045776367188

Token 256: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2260160744190216
    2. '1' → logprob: -1.6010160446166992
    3. 'i' → logprob: -8.3510160446167
    4. ' ' → logprob: -8.3510160446167
    5. '0' → logprob: -9.9760160446167
    6. '
' → logprob: -10.2260160446167
    7. '(' → logprob: -11.1010160446167
    8. 'N' → logprob: -11.4760160446167
    9. '   ' → logprob: -12.2260160446167
    10. 'dp' → logprob: -12.3510160446167

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.088138227118179e-05
    2. ' ,' → logprob: -9.625070571899414
    3. ',N' → logprob: -13.250070571899414
    4. ',
' → logprob: -14.375070571899414
    5. ',i' → logprob: -14.500070571899414
    6. ',j' → logprob: -14.875070571899414
    7. '   ' → logprob: -15.000070571899414
    8. '1' → logprob: -15.500070571899414
    9. '```' → logprob: -15.750070571899414
    10. ' ' → logprob: -16.000070571899414

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42492881417274475
    2. 'N' → logprob: -1.1749287843704224
    3. ' i' → logprob: -3.674928903579712
    4. ' N' → logprob: -4.424928665161133
    5. '   ' → logprob: -12.549928665161133
    6. ' ' → logprob: -12.924928665161133
    7. '
' → logprob: -13.049928665161133
    8. '(i' → logprob: -13.424928665161133
    9. '	N' → logprob: -14.174928665161133
    10. '```' → logprob: -14.424928665161133

Token 259: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3873482644557953
    2. ' +' → logprob: -1.1373482942581177
    3. '):
' → logprob: -8.012348175048828
    4. '):' → logprob: -9.012348175048828
    5. '   ' → logprob: -11.137348175048828
    6. ' ' → logprob: -12.387348175048828
    7. '
' → logprob: -14.012348175048828
    8. '+
' → logprob: -14.137348175048828
    9. '  ' → logprob: -14.512348175048828
    10. ' +
' → logprob: -14.762348175048828

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017058902885764837
    2. ' ' → logprob: -6.376706123352051
    3. '2' → logprob: -12.87670612335205
    4. '   ' → logprob: -14.75170612335205
    5. '):
' → logprob: -15.37670612335205
    6. '
' → logprob: -15.62670612335205
    7. ')' → logprob: -16.001705169677734
    8. '  ' → logprob: -16.501705169677734
    9. '(' → logprob: -17.314205169677734
    10. ',' → logprob: -17.626705169677734

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001911432045744732
    2. ' ' → logprob: -8.625190734863281
    3. '2' → logprob: -11.500190734863281
    4. ')' → logprob: -14.500190734863281
    5. '   ' → logprob: -15.125190734863281
    6. '):
' → logprob: -15.125190734863281
    7. '```' → logprob: -16.31269073486328
    8. '
' → logprob: -16.37519073486328
    9. '  ' → logprob: -16.68769073486328
    10. '0' → logprob: -17.81269073486328

Token 262: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933170557022095
    2. '):' → logprob: -0.6933170557022095
    3. ':' → logprob: -9.443317413330078
    4. '       ' → logprob: -10.068317413330078
    5. '           ' → logprob: -10.943317413330078
    6. '):
' → logprob: -11.443317413330078
    7. ':
' → logprob: -12.068317413330078
    8. ' ):
' → logprob: -12.568317413330078
    9. ' ):' → logprob: -12.693317413330078
    10. '   ' → logprob: -12.943317413330078

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000158842682139948
    2. '               ' → logprob: -9.62515926361084
    3. 'dp' → logprob: -10.37515926361084
    4. ' dp' → logprob: -11.00015926361084
    5. '       ' → logprob: -11.12515926361084
    6. '```' → logprob: -11.62515926361084
    7. '	       ' → logprob: -12.12515926361084
    8. ',' → logprob: -12.50015926361084
    9. '                   ' → logprob: -13.00015926361084
    10. ' if' → logprob: -13.62515926361084

Token 264: ' update' (ID: 4027)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07477129250764847
    2. 'for' → logprob: -3.3247714042663574
    3. ' dp' → logprob: -3.5747714042663574
    4. ' for' → logprob: -5.699771404266357
    5. '               ' → logprob: -6.324771404266357
    6. '           ' → logprob: -6.699771404266357
    7. 'min' → logprob: -7.074771404266357
    8. 'cost' → logprob: -8.0747709274292
    9. 'if' → logprob: -8.4497709274292
    10. '   ' → logprob: -9.1997709274292

Token 265: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.22732144594192505
    2. 'dp' → logprob: -2.2273213863372803
    3. '_value' → logprob: -3.1023213863372803
    4. '_cost' → logprob: -3.9773213863372803
    5. ' =' → logprob: -4.727321624755859
    6. '(dp' → logprob: -4.852321624755859
    7. '_val' → logprob: -4.977321624755859
    8. ' dp' → logprob: -5.727321624755859
    9. 'cost' → logprob: -7.227321624755859
    10. '_' → logprob: -7.477321624755859

Token 266: '_for' (ID: 11903)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02782559208571911
    2. '_for' → logprob: -4.027825355529785
    3. '[j' → logprob: -5.902825355529785
    4. '_value' → logprob: -6.027825355529785
    5. 'for' → logprob: -6.402825355529785
    6. '[' → logprob: -7.652825355529785
    7. '   ' → logprob: -7.652825355529785
    8. '
' → logprob: -8.402825355529785
    9. 'For' → logprob: -8.402825355529785
    10. ' =' → logprob: -8.777825355529785

Token 267: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15813542902469635
    2. '_j' → logprob: -2.533135414123535
    3. 'i' → logprob: -3.158135414123535
    4. 'dp' → logprob: -3.908135414123535
    5. '_i' → logprob: -6.158135414123535
    6. ' j' → logprob: -7.158135414123535
    7. '_dp' → logprob: -8.533135414123535
    8. ' i' → logprob: -8.658135414123535
    9. '[i' → logprob: -8.658135414123535
    10. '[j' → logprob: -8.783135414123535

Token 268: '_k' (ID: 11637)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1913750171661377
    2. '[i' → logprob: -1.8163750171661377
    3. '[' → logprob: -2.0663750171661377
    4. ' dp' → logprob: -2.0663750171661377
    5. '(dp' → logprob: -2.8163750171661377
    6. 'dp' → logprob: -2.9413750171661377
    7. '   ' → logprob: -3.1913750171661377
    8. '       ' → logprob: -3.1913750171661377
    9. '               ' → logprob: -4.191374778747559
    10. '][' → logprob: -4.566374778747559

Token 269: '(dp' (ID: 68843)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.1093666553497314
    2. 'r' → logprob: -1.7343666553497314
    3. 'for' → logprob: -1.8593666553497314
    4. '   ' → logprob: -2.2343666553497314
    5. ' for' → logprob: -2.6093666553497314
    6. ' =' → logprob: -3.4843666553497314
    7. '           ' → logprob: -3.6093666553497314
    8. ' ' → logprob: -4.109366416931152
    9. '       ' → logprob: -4.109366416931152
    10. '(dp' → logprob: -4.484366416931152

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00443237042054534
    2. '(dp' → logprob: -5.879432201385498
    3. ',i' → logprob: -7.504432201385498
    4. ' ,' → logprob: -7.504432201385498
    5. '[' → logprob: -9.004432678222656
    6. '[i' → logprob: -9.129432678222656
    7. ' for' → logprob: -9.629432678222656
    8. 'for' → logprob: -10.004432678222656
    9. '][' → logprob: -10.129432678222656
    10. ' dp' → logprob: -10.254432678222656

Token 271: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1811773031949997
    2. 'i' → logprob: -2.3061773777008057
    3. ' H' → logprob: -3.3061773777008057
    4. 'j' → logprob: -4.056177139282227
    5. ' i' → logprob: -4.806177139282227
    6. 'N' → logprob: -6.306177139282227
    7. ' j' → logprob: -7.181177139282227
    8. ')' → logprob: -7.431177139282227
    9. 'dp' → logprob: -7.931177139282227
    10. ' N' → logprob: -9.181177139282227

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007790116942487657
    2. ',i' → logprob: -7.500779151916504
    3. ' ,' → logprob: -9.500779151916504
    4. '[i' → logprob: -9.500779151916504
    5. '(i' → logprob: -9.875779151916504
    6. '[' → logprob: -12.000779151916504
    7. '   ' → logprob: -12.625779151916504
    8. '(' → logprob: -12.750779151916504
    9. ')' → logprob: -13.125779151916504
    10. '           ' → logprob: -13.625779151916504

Token 273: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14305523037910461
    2. ' N' → logprob: -2.5180552005767822
    3. 'i' → logprob: -3.1430552005767822
    4. ' i' → logprob: -4.768055438995361
    5. ',' → logprob: -7.518055438995361
    6. ',N' → logprob: -8.518054962158203
    7. '   ' → logprob: -9.018054962158203
    8. ' ' → logprob: -10.518054962158203
    9. '	N' → logprob: -10.643054962158203
    10. ',i' → logprob: -10.643054962158203

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013041645288467407
    2. ' ,' → logprob: -7.1263041496276855
    3. ',j' → logprob: -8.001304626464844
    4. ',k' → logprob: -9.251304626464844
    5. '           ' → logprob: -10.626304626464844
    6. '   ' → logprob: -11.126304626464844
    7. '       ' → logprob: -11.251304626464844
    8. '               ' → logprob: -13.001304626464844
    9. ')' → logprob: -13.126304626464844
    10. 'j' → logprob: -13.376304626464844

Token 275: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05488927662372589
    2. ' j' → logprob: -2.92988920211792
    3. '	j' → logprob: -13.054889678955078
    4. '   ' → logprob: -13.304889678955078
    5. ' ' → logprob: -13.804889678955078
    6. '    ' → logprob: -14.929889678955078
    7. ',j' → logprob: -14.929889678955078
    8. '[j' → logprob: -15.304889678955078
    9. '
' → logprob: -15.429889678955078
    10. '$j' → logprob: -15.679889678955078

Token 276: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010320821776986122
    2. ',k' → logprob: -5.010320663452148
    3. ')' → logprob: -5.760320663452148
    4. ' ,' → logprob: -8.760320663452148
    5. '):' → logprob: -9.010320663452148
    6. '):
' → logprob: -10.385320663452148
    7. '   ' → logprob: -10.510320663452148
    8. ',
' → logprob: -10.760320663452148
    9. '       ' → logprob: -10.885320663452148
    10. '           ' → logprob: -11.135320663452148

Token 277: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01769106276333332
    2. '<|end|>' → logprob: -4.142691135406494
    3. '
' → logprob: -6.642691135406494
    4. '   ' → logprob: -9.392690658569336
    5. '<|end|>' → logprob: -9.767690658569336
    6. ' def' → logprob: -10.142690658569336
    7. ' 
' → logprob: -10.642690658569336
    8. '    
' → logprob: -10.642690658569336
    9. '       ' → logprob: -11.017690658569336
    10. '\' → logprob: -11.142690658569336

Token 278: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.14271731674671173
    2. ' update' → logprob: -2.0177173614501953
    3. 'def' → logprob: -10.642717361450195
    4. 'p' → logprob: -11.642717361450195
    5. '_update' → logprob: -12.517717361450195
    6. '(update' → logprob: -13.517717361450195
    7. '	update' → logprob: -13.767717361450195
    8. '.update' → logprob: -14.017717361450195
    9. ' ' → logprob: -14.142717361450195
    10. ' def' → logprob: -15.017717361450195

Token 279: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.7432603272027336e-06
    2. '_df' → logprob: -14.375001907348633
    3. '_' → logprob: -15.250001907348633
    4. '_dc' → logprob: -15.500001907348633
    5. '_db' → logprob: -15.750001907348633
    6. '_dl' → logprob: -16.375001907348633
    7. '_token' → logprob: -16.625001907348633
    8. '_for' → logprob: -16.875001907348633
    9. '_dt' → logprob: -16.875001907348633
    10. '_py' → logprob: -17.250001907348633

Token 280: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.3856492842023727e-06
    2. 'for' → logprob: -13.625000953674316
    3. 'For' → logprob: -16.875001907348633
    4. '_' → logprob: -17.375001907348633
    5. '_FOR' → logprob: -18.250001907348633
    6. '(_' → logprob: -18.875001907348633
    7. '_f' → logprob: -18.875001907348633
    8. '(' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. '##_' → logprob: -19.125001907348633

Token 281: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0015089125372469425
    2. 'j' → logprob: -6.501508712768555
    3. '_k' → logprob: -12.251508712768555
    4. '```' → logprob: -14.376508712768555
    5. '_' → logprob: -14.751508712768555
    6. 'for' → logprob: -16.001508712768555
    7. '_i' → logprob: -16.376508712768555
    8. 'k' → logprob: -16.751508712768555
    9. ' j' → logprob: -17.001508712768555
    10. ' _' → logprob: -17.251508712768555

Token 282: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0017060093814507127
    2. '_' → logprob: -6.376706123352051
    3. '_
' → logprob: -13.37670612335205
    4. '_(' → logprob: -14.00170612335205
    5. '(' → logprob: -15.12670612335205
    6. '_

' → logprob: -15.62670612335205
    7. ' _' → logprob: -15.75170612335205
    8. '__' → logprob: -15.75170612335205
    9. '```' → logprob: -15.75170612335205
    10. '_j' → logprob: -16.001705169677734

Token 283: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00014025058771949261
    2. '(' → logprob: -8.875140190124512
    3. ' (' → logprob: -16.250141143798828
    4. '(def' → logprob: -16.375141143798828
    5. '(df' → logprob: -17.125141143798828
    6. '(
' → logprob: -17.250141143798828
    7. 'dp' → logprob: -17.625141143798828
    8. '	dp' → logprob: -18.750141143798828
    9. '(dt' → logprob: -19.000141143798828
    10. '(db' → logprob: -19.500141143798828

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',H' → logprob: -13.250033378601074
    4. ',k' → logprob: -15.250033378601074
    5. '<|end|>' → logprob: -16.12503433227539
    6. '‌,' → logprob: -16.62503433227539
    7. '[],' → logprob: -17.87503433227539
    8. ',
' → logprob: -17.87503433227539
    9. '_,' → logprob: -18.25003433227539
    10. '‍,' → logprob: -18.25003433227539

Token 285: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2519373297691345
    2. ' H' → logprob: -1.5019373893737793
    3. '<|end|>' → logprob: -12.376936912536621
    4. ' ' → logprob: -14.001936912536621
    5. ',' → logprob: -14.001936912536621
    6. ')' → logprob: -14.126936912536621
    7. ',H' → logprob: -14.501936912536621
    8. '[' → logprob: -15.564436912536621
    9. '   ' → logprob: -15.939436912536621
    10. '_H' → logprob: -16.314437866210938

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.673547563375905e-05
    2. ',i' → logprob: -9.750086784362793
    3. ' ,' → logprob: -10.500086784362793
    4. ',
' → logprob: -15.000086784362793
    5. '   ' → logprob: -15.875086784362793
    6. ',int' → logprob: -16.000085830688477
    7. ',k' → logprob: -16.375085830688477
    8. '_,' → logprob: -16.625085830688477
    9. '‌,' → logprob: -17.375085830688477
    10. ',n' → logprob: -17.625085830688477

Token 287: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1271350383758545
    2. ' N' → logprob: -2.3771350383758545
    3. 'i' → logprob: -3.8771350383758545
    4. ' i' → logprob: -5.252135276794434
    5. 'k' → logprob: -8.252135276794434
    6. ' ' → logprob: -9.502135276794434
    7. 'j' → logprob: -9.502135276794434
    8. '   ' → logprob: -9.877135276794434
    9. ' k' → logprob: -10.002135276794434
    10. '<|end|>' → logprob: -10.627135276794434

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003123439964838326
    2. ',j' → logprob: -8.875312805175781
    3. ',k' → logprob: -9.250312805175781
    4. ' ,' → logprob: -9.500312805175781
    5. '   ' → logprob: -15.000312805175781
    6. 'k' → logprob: -15.250312805175781
    7. 'j' → logprob: -15.250312805175781
    8. ',
' → logprob: -15.625312805175781
    9. '‌,' → logprob: -16.25031280517578
    10. '_,' → logprob: -16.37531280517578

Token 289: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013313164934515953
    2. ' j' → logprob: -4.388313293457031
    3. 'k' → logprob: -7.138313293457031
    4. ' k' → logprob: -11.888313293457031
    5. ' ' → logprob: -13.888313293457031
    6. ')' → logprob: -15.263313293457031
    7. '	j' → logprob: -15.388313293457031
    8. '   ' → logprob: -15.763313293457031
    9. '_j' → logprob: -15.888313293457031
    10. '<|end|>' → logprob: -16.26331329345703

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03840475156903267
    2. ',' → logprob: -3.913404703140259
    3. '):
' → logprob: -4.038404941558838
    4. ')' → logprob: -10.66340446472168
    5. '):
' → logprob: -11.03840446472168
    6. '   ' → logprob: -11.16340446472168
    7. ':' → logprob: -11.28840446472168
    8. ',k' → logprob: -12.53840446472168
    9. '):

' → logprob: -12.66340446472168
    10. ' ):' → logprob: -12.91340446472168

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15290208160877228
    2. 'dp' → logprob: -3.027902126312256
    3. 'for' → logprob: -3.152902126312256
    4. 'min' → logprob: -3.652902126312256
    5. ' for' → logprob: -4.277902126312256
    6. 'if' → logprob: -5.652902126312256
    7. ' dp' → logprob: -6.152902126312256
    8. ' if' → logprob: -6.527902126312256
    9. ' min' → logprob: -6.652902126312256
    10. 'cost' → logprob: -7.027902126312256

Token 292: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7298275232315063
    2. 'dp' → logprob: -1.2298275232315063
    3. '   ' → logprob: -1.7298275232315063
    4. 'min' → logprob: -3.479827404022217
    5. 'best' → logprob: -4.229827404022217
    6. ' for' → logprob: -6.604827404022217
    7. ' dp' → logprob: -7.854827404022217
    8. 'minimum' → logprob: -7.979827404022217
    9. 'k' → logprob: -8.604827880859375
    10. 'res' → logprob: -9.104827880859375

Token 293: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01823352836072445
    2. ' k' → logprob: -4.018233299255371
    3. 'prev' → logprob: -10.768233299255371
    4. '   ' → logprob: -10.893233299255371
    5. 'x' → logprob: -11.893233299255371
    6. '_k' → logprob: -12.143233299255371
    7. 'p' → logprob: -12.143233299255371
    8. 'l' → logprob: -12.393233299255371
    9. ' ' → logprob: -13.143233299255371
    10. ' prev' → logprob: -13.268233299255371

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16038700938224792
    2. 'in' → logprob: -1.9103870391845703
    3. 'range' → logprob: -10.03538703918457
    4. ' ' → logprob: -10.28538703918457
    5. 'k' → logprob: -10.91038703918457
    6. 's' → logprob: -11.91038703918457
    7. '	in' → logprob: -11.91038703918457
    8. '1' → logprob: -11.91038703918457
    9. '0' → logprob: -12.41038703918457
    10. '```' → logprob: -12.41038703918457

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1798357516527176
    2. ' range' → logprob: -1.8048357963562012
    3. '   ' → logprob: -9.554835319519043
    4. ' ' → logprob: -11.929835319519043
    5. '  ' → logprob: -12.679835319519043
    6. '(range' → logprob: -12.929835319519043
    7. '
' → logprob: -13.304835319519043
    8. 're' → logprob: -13.804835319519043
    9. '	range' → logprob: -13.929835319519043
    10. 'ran' → logprob: -14.554835319519043

Token 296: '(' (ID: 7)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5646844506263733
    2. '(' → logprob: -1.1896843910217285
    3. '(i' → logprob: -2.0646843910217285
    4. ' (' → logprob: -9.064684867858887
    5. '(k' → logprob: -9.564684867858887
    6. 'j' → logprob: -10.314684867858887
    7. '1' → logprob: -10.439684867858887
    8. '(
' → logprob: -10.814684867858887
    9. '[j' → logprob: -12.689684867858887
    10. '   ' → logprob: -13.189684867858887

Token 297: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.717077374458313
    2. 'j' → logprob: -0.717077374458313
    3. '1' → logprob: -3.9670772552490234
    4. ' i' → logprob: -6.217077255249023
    5. ' j' → logprob: -6.967077255249023
    6. '(i' → logprob: -7.342077255249023
    7. '0' → logprob: -7.342077255249023
    8. '(j' → logprob: -8.842077255249023
    9. '(' → logprob: -9.467077255249023
    10. ')' → logprob: -9.592077255249023

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004659861326217651
    2. ' ,' → logprob: -5.379659652709961
    3. ',i' → logprob: -10.629659652709961
    4. ',j' → logprob: -11.379659652709961
    5. '   ' → logprob: -13.879659652709961
    6. 'j' → logprob: -14.004659652709961
    7. ',
' → logprob: -14.129659652709961
    8. ' i' → logprob: -14.879659652709961
    9. 'i' → logprob: -15.254659652709961
    10. '
' → logprob: -15.879659652709961

Token 299: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03885434940457344
    2. ' i' → logprob: -3.2888543605804443
    3. 'j' → logprob: -7.163854122161865
    4. ' j' → logprob: -10.413854598999023
    5. '   ' → logprob: -12.163854598999023
    6. '	i' → logprob: -13.788854598999023
    7. ' ' → logprob: -14.413854598999023
    8. 'k' → logprob: -15.413854598999023
    9. '
' → logprob: -15.413854598999023
    10. ')' → logprob: -15.413854598999023

Token 300: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.580213725566864
    2. '):' → logprob: -0.830213725566864
    3. '+' → logprob: -6.33021354675293
    4. ' ):
' → logprob: -6.83021354675293
    5. ' ):' → logprob: -7.20521354675293
    6. '):

' → logprob: -8.58021354675293
    7. ')' → logprob: -8.70521354675293
    8. '<|end|>' → logprob: -8.83021354675293
    9. '   ' → logprob: -10.58021354675293
    10. '[' → logprob: -10.83021354675293

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040910433745011687
    2. '<|end|>' → logprob: -9.625409126281738
    3. '):
' → logprob: -9.875409126281738
    4. ',' → logprob: -9.875409126281738
    5. ' if' → logprob: -10.250409126281738
    6. ':' → logprob: -10.375409126281738
    7. 'dp' → logprob: -10.625409126281738
    8. ' dp' → logprob: -10.750409126281738
    9. '   ' → logprob: -10.875409126281738
    10. '[' → logprob: -11.000409126281738

Token 302: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03909752890467644
    2. 'cost' → logprob: -3.539097547531128
    3. ' dp' → logprob: -5.164097309112549
    4. '           ' → logprob: -6.914097309112549
    5. 'if' → logprob: -7.039097309112549
    6. ' cost' → logprob: -7.914097309112549
    7. 'candidate' → logprob: -7.914097309112549
    8. 'val' → logprob: -8.414097785949707
    9. 'cand' → logprob: -8.539097785949707
    10. '       ' → logprob: -9.539097785949707

Token 303: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.618001053633634e-05
    2. '[j' → logprob: -10.625025749206543
    3. '[k' → logprob: -14.250025749206543
    4. '[' → logprob: -14.750025749206543
    5. '][' → logprob: -15.500025749206543
    6. 'i' → logprob: -15.625025749206543
    7. ' [' → logprob: -16.00002670288086
    8. '```' → logprob: -16.12502670288086
    9. '[I' → logprob: -17.25002670288086
    10. '
' → logprob: -17.25002670288086

Token 304: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04315344616770744
    2. '[j' → logprob: -3.1681535243988037
    3. ']' → logprob: -10.293153762817383
    4. '[k' → logprob: -10.543153762817383
    5. '[' → logprob: -10.668153762817383
    6. '[i' → logprob: -11.043153762817383
    7. '
' → logprob: -11.543153762817383
    8. ' ][' → logprob: -11.793153762817383
    9. '"][' → logprob: -12.293153762817383
    10. 'j' → logprob: -12.418153762817383

Token 305: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.292907877039397e-06
    2. ' j' → logprob: -13.50000286102295
    3. '[j' → logprob: -13.87500286102295
    4. 'k' → logprob: -14.62500286102295
    5. '
' → logprob: -16.125003814697266
    6. '	j' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.375003814697266
    8. 'i' → logprob: -16.875003814697266
    9. '```' → logprob: -17.500003814697266
    10. ']' → logprob: -17.625003814697266

Token 306: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018023921875283122
    2. ']=' → logprob: -6.876802444458008
    3. ' =' → logprob: -7.376802444458008
    4. '=' → logprob: -9.001802444458008
    5. ' ]' → logprob: -11.876802444458008
    6. '=min' → logprob: -12.126802444458008
    7. 'min' → logprob: -12.501802444458008
    8. '[' → logprob: -14.001802444458008
    9. '}' → logprob: -14.126802444458008
    10. '>' → logprob: -14.126802444458008

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38730451464653015
    2. ' =' → logprob: -1.1373045444488525
    3. '=min' → logprob: -7.762304306030273
    4. 'min' → logprob: -12.012304306030273
    5. '=
' → logprob: -13.887304306030273
    6. '=max' → logprob: -15.137304306030273
    7. '[min' → logprob: -15.512304306030273
    8. ' min' → logprob: -15.637304306030273
    9. '[' → logprob: -16.762304306030273
    10. ']=' → logprob: -16.762304306030273

Token 308: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011703446507453918
    2. ' min' → logprob: -6.7511701583862305
    3. '	min' → logprob: -16.126171112060547
    4. 'max' → logprob: -17.001171112060547
    5. '   ' → logprob: -19.126171112060547
    6. '_min' → logprob: -21.751171112060547
    7. '(min' → logprob: -21.751171112060547
    8. '.min' → logprob: -22.001171112060547
    9. '=min' → logprob: -22.001171112060547
    10. '[min' → logprob: -22.126171112060547

Token 309: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.002479104558005929
    2. '(' → logprob: -6.002479076385498
    3. '(
' → logprob: -12.627479553222656
    4. '(

' → logprob: -16.502479553222656
    5. 'dp' → logprob: -17.127479553222656
    6. '(d' → logprob: -17.752479553222656
    7. '	dp' → logprob: -18.002479553222656
    8. ' dp' → logprob: -19.252479553222656
    9. '(df' → logprob: -19.377479553222656
    10. ' (' → logprob: -20.002479553222656

Token 310: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7491250875755213e-05
    2. '][' → logprob: -11.000027656555176
    3. '[' → logprob: -12.375027656555176
    4. 'i' → logprob: -13.000027656555176
    5. '[
' → logprob: -13.625027656555176
    6. '[j' → logprob: -14.375027656555176
    7. '
' → logprob: -14.500027656555176
    8. ')[' → logprob: -15.000027656555176
    9. '```' → logprob: -15.125027656555176
    10. '(i' → logprob: -15.250027656555176

Token 311: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007216068916022778
    2. '-' → logprob: -7.875721454620361
    3. '[i' → logprob: -8.62572193145752
    4. '[j' → logprob: -10.00072193145752
    5. ']' → logprob: -10.37572193145752
    6. ' ][' → logprob: -10.50072193145752
    7. '[k' → logprob: -11.25072193145752
    8. '[' → logprob: -11.50072193145752
    9. ' -' → logprob: -11.50072193145752
    10. '   ' → logprob: -12.12572193145752

Token 312: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001657565007917583
    2. '][' → logprob: -9.500165939331055
    3. 'k' → logprob: -10.125165939331055
    4. '
' → logprob: -10.875165939331055
    5. '[j' → logprob: -11.000165939331055
    6. ']' → logprob: -12.125165939331055
    7. '[' → logprob: -13.125165939331055
    8. ' j' → logprob: -13.250165939331055
    9. '   ' → logprob: -13.250165939331055
    10. '```' → logprob: -13.750165939331055

Token 313: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18070179224014282
    2. '],' → logprob: -1.805701732635498
    3. ' ,' → logprob: -7.055701732635498
    4. ']' → logprob: -10.305702209472656
    5. '],
' → logprob: -10.930702209472656
    6. ' ],' → logprob: -11.055702209472656
    7. 'dp' → logprob: -11.555702209472656
    8. ',
' → logprob: -12.055702209472656
    9. '},' → logprob: -13.305702209472656
    10. '1' → logprob: -13.305702209472656

Token 314: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030367160215973854
    2. ' dp' → logprob: -3.655367136001587
    3. 'max' → logprob: -5.780367374420166
    4. ' max' → logprob: -7.030367374420166
    5. '   ' → logprob: -10.030366897583008
    6. '	dp' → logprob: -10.905366897583008
    7. ' ' → logprob: -12.155366897583008
    8. '
' → logprob: -12.405366897583008
    9. '       ' → logprob: -12.905366897583008
    10. '(dp' → logprob: -13.030366897583008

Token 315: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.004516039043664932
    2. '[i' → logprob: -5.879516124725342
    3. 'k' → logprob: -6.379516124725342
    4. '][' → logprob: -12.254515647888184
    5. '[j' → logprob: -13.254515647888184
    6. 'i' → logprob: -13.379515647888184
    7. ' k' → logprob: -13.629515647888184
    8. ' [' → logprob: -13.629515647888184
    9. '[' → logprob: -13.879515647888184
    10. '
' → logprob: -15.004515647888184

Token 316: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006413076189346611
    2. '[j' → logprob: -7.375641345977783
    3. ' ][' → logprob: -12.000640869140625
    4. ']' → logprob: -12.125640869140625
    5. 'j' → logprob: -14.375640869140625
    6. '[' → logprob: -14.500640869140625
    7. '"][' → logprob: -14.750640869140625
    8. ''][' → logprob: -14.875640869140625
    9. ']][' → logprob: -15.750640869140625
    10. '   ' → logprob: -16.000640869140625

Token 317: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3782830137643032e-05
    2. ' j' → logprob: -12.37501335144043
    3. '[j' → logprob: -12.50001335144043
    4. '   ' → logprob: -12.50001335144043
    5. '(j' → logprob: -14.50001335144043
    6. '][' → logprob: -14.87501335144043
    7. ' ' → logprob: -15.12501335144043
    8. '
' → logprob: -15.25001335144043
    9. '```' → logprob: -15.50001335144043
    10. '	j' → logprob: -16.25001335144043

Token 318: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10566628724336624
    2. ']' → logprob: -2.355666399002075
    3. ' -' → logprob: -5.230666160583496
    4. '1' → logprob: -10.105666160583496
    5. ']+' → logprob: -10.355666160583496
    6. ' ]' → logprob: -12.355666160583496
    7. '])' → logprob: -12.355666160583496
    8. '-
' → logprob: -12.605666160583496
    9. '
' → logprob: -12.855666160583496
    10. ']
' → logprob: -13.480666160583496

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.50000286102295
    4. ']' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '
' → logprob: -18.500001907348633
    7. '    ' → logprob: -18.937501907348633
    8. '       ' → logprob: -18.937501907348633
    9. '  ' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.687501907348633

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -15.50000286102295
    4. '2' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '```' → logprob: -16.875003814697266
    7. '

' → logprob: -17.125003814697266
    8. '۱' → logprob: -17.250003814697266
    9. ']' → logprob: -17.312503814697266
    10. '])' → logprob: -18.000003814697266

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003643058007583022
    2. ']+' → logprob: -8.000364303588867
    3. ' ]' → logprob: -10.750364303588867
    4. '+' → logprob: -13.125364303588867
    5. '],' → logprob: -13.375364303588867
    6. ']
' → logprob: -13.750364303588867
    7. '
' → logprob: -14.625364303588867
    8. '-' → logprob: -15.375364303588867
    9. ' +' → logprob: -15.500364303588867
    10. '']' → logprob: -15.625364303588867

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35241517424583435
    2. ' +' → logprob: -1.2274152040481567
    3. ')' → logprob: -5.727415084838867
    4. ']' → logprob: -7.727415084838867
    5. ')+' → logprob: -9.477415084838867
    6. ']+' → logprob: -9.852415084838867
    7. ',' → logprob: -10.352415084838867
    8. ' ' → logprob: -10.852415084838867
    9. '}' → logprob: -10.977415084838867
    10. '
' → logprob: -11.789915084838867

Token 323: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06652407348155975
    2. 'max' → logprob: -2.941524028778076
    3. 'H' → logprob: -5.316524028778076
    4. '(H' → logprob: -5.691524028778076
    5. '(abs' → logprob: -6.191524028778076
    6. '(max' → logprob: -7.691524028778076
    7. ' abs' → logprob: -7.691524028778076
    8. '(' → logprob: -8.941524505615234
    9. ' max' → logprob: -9.691524505615234
    10. '((' → logprob: -10.691524505615234

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5853016376495361
    2. '(H' → logprob: -0.8353016376495361
    3. '(abs' → logprob: -5.085301399230957
    4. '0' → logprob: -6.210301399230957
    5. '(
' → logprob: -7.210301399230957
    6. 'abs' → logprob: -8.210301399230957
    7. 'H' → logprob: -10.210301399230957
    8. '(

' → logprob: -10.710301399230957
    9. '((' → logprob: -11.085301399230957
    10. ' (' → logprob: -11.710301399230957

Token 325: '0' (ID: 15)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.1509680300951004
    2. 'H' → logprob: -2.400968074798584
    3. '(' → logprob: -3.400968074798584
    4. '0' → logprob: -4.275968074798584
    5. '(max' → logprob: -7.775968074798584
    6. '(abs' → logprob: -7.775968074798584
    7. '(
' → logprob: -7.900968074798584
    8. '(dp' → logprob: -8.150967597961426
    9. 'dp' → logprob: -8.775967597961426
    10. ')' → logprob: -8.900967597961426

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026181264547631145
    2. ',H' → logprob: -8.500262260437012
    3. ',
' → logprob: -10.625262260437012
    4. ' ,' → logprob: -10.625262260437012
    5. 'H' → logprob: -12.500262260437012
    6. '(H' → logprob: -13.125262260437012
    7. '
' → logprob: -14.125262260437012
    8. ',

' → logprob: -14.500262260437012
    9. ')' → logprob: -14.500262260437012
    10. '[' → logprob: -14.750262260437012

Token 327: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0036373690236359835
    2. ' H' → logprob: -5.628637313842773
    3. '(H' → logprob: -10.628637313842773
    4. '   ' → logprob: -12.128637313842773
    5. '	H' → logprob: -12.628637313842773
    6. ' ' → logprob: -13.753637313842773
    7. '  ' → logprob: -14.378637313842773
    8. ')' → logprob: -14.753637313842773
    9. ' (' → logprob: -15.003637313842773
    10. 'abs' → logprob: -15.003637313842773

Token 328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.500008583068848
    3. '[k' → logprob: -13.250008583068848
    4. 'i' → logprob: -13.375008583068848
    5. '[j' → logprob: -13.500008583068848
    6. '[I' → logprob: -16.75000762939453
    7. '[
' → logprob: -17.00000762939453
    8. '```' → logprob: -17.87500762939453
    9. '(i' → logprob: -18.50000762939453
    10. '
' → logprob: -18.50000762939453

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03005164861679077
    2. ']-' → logprob: -3.5300517082214355
    3. ' ]' → logprob: -9.280051231384277
    4. '[k' → logprob: -9.655051231384277
    5. ' -' → logprob: -9.655051231384277
    6. '-' → logprob: -9.780051231384277
    7. '[' → logprob: -11.905051231384277
    8. ']
' → logprob: -12.280051231384277
    9. '-k' → logprob: -13.030051231384277
    10. '[i' → logprob: -13.030051231384277

Token 330: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16067636013031006
    2. ' -' → logprob: -1.91067636013031
    3. '-H' → logprob: -7.7856764793396
    4. ']-' → logprob: -11.160676002502441
    5. ']' → logprob: -11.660676002502441
    6. '-
' → logprob: -12.535676002502441
    7. ' ' → logprob: -12.660676002502441
    8. '-k' → logprob: -13.285676002502441
    9. '   ' → logprob: -13.410676002502441
    10. '  ' → logprob: -14.285676002502441

Token 331: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005533903022296727
    2. ' H' → logprob: -7.500553607940674
    3. 'max' → logprob: -16.250553131103516
    4. ')' → logprob: -16.500553131103516
    5. '	H' → logprob: -16.750553131103516
    6. '(H' → logprob: -17.375553131103516
    7. '<|end|>' → logprob: -17.500553131103516
    8. '[' → logprob: -17.500553131103516
    9. ' ' → logprob: -18.000553131103516
    10. '
' → logprob: -18.250553131103516

Token 332: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.018171129748225212
    2. 'k' → logprob: -4.018171310424805
    3. '[' → logprob: -11.268171310424805
    4. '[
' → logprob: -12.518171310424805
    5. '
' → logprob: -13.143171310424805
    6. '][' → logprob: -13.893171310424805
    7. ']' → logprob: -15.143171310424805
    8. '	k' → logprob: -15.143171310424805
    9. '(k' → logprob: -15.268171310424805
    10. ' k' → logprob: -15.268171310424805

Token 333: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.004600180312991142
    2. '])' → logprob: -5.5046000480651855
    3. ']' → logprob: -8.629600524902344
    4. '])))' → logprob: -9.254600524902344
    5. '))' → logprob: -9.504600524902344
    6. ')))' → logprob: -9.754600524902344
    7. ']))
' → logprob: -10.004600524902344
    8. ')' → logprob: -10.629600524902344
    9. ')])' → logprob: -10.754600524902344
    10. ')]' → logprob: -12.129600524902344

Token 334: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09161249548196793
    2. 'main' → logprob: -2.4666125774383545
    3. ' set' → logprob: -6.341612339019775
    4. 'set' → logprob: -7.841612339019775
    5. 'if' → logprob: -9.091612815856934
    6. '_main' → logprob: -9.341612815856934
    7. ' if' → logprob: -9.716612815856934
    8. ' run' → logprob: -9.716612815856934
    9. ' __' → logprob: -10.466612815856934
    10. 'def' → logprob: -10.466612815856934

Token 336: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.23460878431797028
    2. '_opt' → logprob: -2.1096088886260986
    3. '_best' → logprob: -3.2346088886260986
    4. '_max' → logprob: -3.2346088886260986
    5. '_' → logprob: -5.4846086502075195
    6. '_dp' → logprob: -6.4846086502075195
    7. '_answer' → logprob: -7.3596086502075195
    8. '_next' → logprob: -7.6096086502075195
    9. '_possible' → logprob: -8.73460865020752
    10. '_final' → logprob: -8.73460865020752

Token 337: '_ans' (ID: 146254)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.4621722102165222
    2. '_dp' → logprob: -1.962172269821167
    3. '_' → logprob: -2.087172269821167
    4. '_value' → logprob: -3.712172269821167
    5. 'imum' → logprob: -3.837172269821167
    6. '_total' → logprob: -4.212172031402588
    7. '_answer' → logprob: -4.837172031402588
    8. '_result' → logprob: -5.087172031402588
    9. '_max' → logprob: -5.087172031402588
    10. '_sum' → logprob: -5.212172031402588

Token 338: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.006291718687862158
    2. '(N' → logprob: -5.25629186630249
    3. '(' → logprob: -7.50629186630249
    4. '():' → logprob: -7.75629186630249
    5. '(D' → logprob: -10.631291389465332
    6. '(
' → logprob: -11.631291389465332
    7. '(def' → logprob: -11.756291389465332
    8. '():
' → logprob: -12.006291389465332
    9. '()' → logprob: -12.256291389465332
    10. '(df' → logprob: -12.506291389465332

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005184424575418234
    2. '):
' → logprob: -6.005184650421143
    3. '):' → logprob: -6.255184650421143
    4. ' ,' → logprob: -7.380184650421143
    5. ',N' → logprob: -9.005184173583984
    6. '):
' → logprob: -11.005184173583984
    7. ')' → logprob: -12.505184173583984
    8. '   ' → logprob: -12.630184173583984
    9. ' ):' → logprob: -12.630184173583984
    10. '[N' → logprob: -12.630184173583984

Token 340: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08897283673286438
    2. ' N' → logprob: -2.463972806930542
    3. 'dp' → logprob: -11.588973045349121
    4. ' ' → logprob: -12.088973045349121
    5. 'n' → logprob: -12.213973045349121
    6. '   ' → logprob: -12.713973045349121
    7. 'H' → logprob: -12.963973045349121
    8. ',' → logprob: -13.463973045349121
    9. ',N' → logprob: -13.713973045349121
    10. '	N' → logprob: -13.963973045349121

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01030748337507248
    2. '):
' → logprob: -5.260307312011719
    3. '):' → logprob: -5.760307312011719
    4. ' ,' → logprob: -6.885307312011719
    5. ',j' → logprob: -7.135307312011719
    6. ')' → logprob: -10.635307312011719
    7. '):
' → logprob: -10.635307312011719
    8. '   ' → logprob: -10.885307312011719
    9. ' ):' → logprob: -12.385307312011719
    10. ',
' → logprob: -12.510307312011719

Token 342: ' K' (ID: 658)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3169688284397125
    2. 'M' → logprob: -2.5669689178466797
    3. 'J' → logprob: -2.6919689178466797
    4. ' j' → logprob: -3.1919689178466797
    5. 'K' → logprob: -3.5669689178466797
    6. ')' → logprob: -4.19196891784668
    7. 'N' → logprob: -4.19196891784668
    8. 'k' → logprob: -5.31696891784668
    9. ' M' → logprob: -5.44196891784668
    10. 'INF' → logprob: -5.94196891784668

Token 343: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08038363605737686
    2. ',' → logprob: -3.205383539199829
    3. '):
' → logprob: -3.330383539199829
    4. '):
' → logprob: -7.330383777618408
    5. '   ' → logprob: -9.08038330078125
    6. ')' → logprob: -9.45538330078125
    7. ' ):' → logprob: -10.45538330078125
    8. ' ,' → logprob: -11.08038330078125
    9. '):

' → logprob: -12.20538330078125
    10. ',j' → logprob: -12.58038330078125

Token 344: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.8365265130996704
    2. 'j' → logprob: -1.3365265130996704
    3. ' INF' → logprob: -2.461526393890381
    4. ' j' → logprob: -2.586526393890381
    5. 'J' → logprob: -3.461526393890381
    6. '):
' → logprob: -4.086526393890381
    7. 'K' → logprob: -4.461526393890381
    8. ')' → logprob: -4.461526393890381
    9. 'mod' → logprob: -4.586526393890381
    10. 'H' → logprob: -4.586526393890381

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16070671379566193
    2. '):
' → logprob: -1.9107067584991455
    3. '):
' → logprob: -7.785706520080566
    4. ',' → logprob: -10.285706520080566
    5. ')' → logprob: -11.160706520080566
    6. '   ' → logprob: -11.660706520080566
    7. ' ):' → logprob: -12.160706520080566
    8. '):

' → logprob: -12.910706520080566
    9. ' ):
' → logprob: -13.785706520080566
    10. ':' → logprob: -14.785706520080566

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3249872326850891
    2. ' ans' → logprob: -1.9499871730804443
    3. 'ans' → logprob: -2.1999871730804443
    4. 'min' → logprob: -3.9499871730804443
    5. '	ans' → logprob: -6.324987411499023
    6. ' min' → logprob: -6.824987411499023
    7. 'result' → logprob: -7.324987411499023
    8. 'answer' → logprob: -7.574987411499023
    9. '
' → logprob: -8.324987411499023
    10. 'res' → logprob: -8.449987411499023

Token 347: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.007200274150818586
    2. 'min' → logprob: -5.257200241088867
    3. 'res' → logprob: -7.007200241088867
    4. ' ans' → logprob: -7.632200241088867
    5. 'answer' → logprob: -8.007200241088867
    6. '   ' → logprob: -8.507200241088867
    7. 'return' → logprob: -10.757200241088867
    8. 'result' → logprob: -11.257200241088867
    9. '	ans' → logprob: -13.132200241088867
    10. ' min' → logprob: -13.882200241088867

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141831040382385
    2. '=' → logprob: -1.7014182806015015
    3. ',' → logprob: -12.826417922973633
    4. ' =
' → logprob: -13.451417922973633
    5. ' ' → logprob: -15.076417922973633
    6. '=
' → logprob: -15.326417922973633
    7. '=int' → logprob: -16.326417922973633
    8. '＝' → logprob: -16.701417922973633
    9. '=float' → logprob: -16.701417922973633
    10. '=

' → logprob: -16.701417922973633

Token 349: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.014169503934681416
    2. ' INF' → logprob: -4.264169692993164
    3. 'IN' → logprob: -12.514169692993164
    4. 'inf' → logprob: -14.139169692993164
    5. '_INF' → logprob: -14.389169692993164
    6. ' ' → logprob: -15.764169692993164
    7. 'float' → logprob: -15.764169692993164
    8. ' ' → logprob: -15.764169692993164
    9. '-INF' → logprob: -15.889169692993164
    10. ' min' → logprob: -16.389169692993164

Token 350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32436978816986084
    2. '   ' → logprob: -1.3243697881698608
    3. 'for' → logprob: -5.07436990737915
    4. ' for' → logprob: -5.57436990737915
    5. '    
' → logprob: -7.32436990737915
    6. '
' → logprob: -8.449369430541992
    7. '  
' → logprob: -9.949369430541992
    8. '   
' → logprob: -11.074369430541992
    9. '	for' → logprob: -11.574369430541992
    10. ' 
' → logprob: -11.574369430541992

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06706968694925308
    2. 'for' → logprob: -3.3170697689056396
    3. ' for' → logprob: -3.5670697689056396
    4. '
' → logprob: -7.9420695304870605
    5. '	for' → logprob: -11.817070007324219
    6. '    
' → logprob: -12.192070007324219
    7. '  ' → logprob: -13.567070007324219
    8. ' ' → logprob: -13.942070007324219
    9. ',' → logprob: -14.317070007324219
    10. 'def' → logprob: -14.692070007324219

Token 352: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9266199160483666e-05
    2. ' for' → logprob: -11.250019073486328
    3. '   ' → logprob: -12.000019073486328
    4. '
' → logprob: -17.875019073486328
    5. '	for' → logprob: -19.375019073486328
    6. '```' → logprob: -21.875019073486328
    7. ' ' → logprob: -22.000019073486328
    8. '    
' → logprob: -22.250019073486328
    9. '  ' → logprob: -22.875019073486328
    10. 'return' → logprob: -23.125019073486328

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17687655985355377
    2. 'j' → logprob: -1.9268765449523926
    3. ' i' → logprob: -4.301876544952393
    4. ' j' → logprob: -5.926876544952393
    5. 'k' → logprob: -8.30187702178955
    6. '   ' → logprob: -10.80187702178955
    7. 'x' → logprob: -11.55187702178955
    8. ' ' → logprob: -12.05187702178955
    9. '```' → logprob: -12.92687702178955
    10. ' k' → logprob: -13.23937702178955

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16146643459796906
    2. 'in' → logprob: -1.9114664793014526
    3. 'range' → logprob: -6.786466598510742
    4. '   ' → logprob: -10.411466598510742
    5. 'import' → logprob: -11.661466598510742
    6. ' ' → logprob: -11.661466598510742
    7. ' range' → logprob: -11.786466598510742
    8. 'def' → logprob: -11.786466598510742
    9. 'from' → logprob: -11.911466598510742
    10. '```' → logprob: -12.286466598510742

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324850670993328
    2. ' range' → logprob: -3.7732484340667725
    3. '(range' → logprob: -13.023248672485352
    4. '   ' → logprob: -14.648248672485352
    5. '
' → logprob: -15.023248672485352
    6. '  ' → logprob: -17.14824867248535
    7. 'in' → logprob: -17.39824867248535
    8. ' ' → logprob: -17.77324867248535
    9. 'r' → logprob: -17.77324867248535
    10. 'rang' → logprob: -17.89824867248535

Token 356: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.2028617560863495
    2. '(N' → logprob: -1.7028617858886719
    3. '(' → logprob: -7.077861785888672
    4. 'K' → logprob: -7.702861785888672
    5. 'N' → logprob: -10.077861785888672
    6. ' (' → logprob: -10.202861785888672
    7. '(k' → logprob: -10.577861785888672
    8. ' K' → logprob: -11.327861785888672
    9. '(n' → logprob: -12.077861785888672
    10. '   ' → logprob: -12.077861785888672

Token 357: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.35066062211990356
    2. 'N' → logprob: -1.2256605625152588
    3. '1' → logprob: -6.475660800933838
    4. '(K' → logprob: -8.22566032409668
    5. '(N' → logprob: -8.60066032409668
    6. ' K' → logprob: -9.22566032409668
    7. ' N' → logprob: -10.35066032409668
    8. '0' → logprob: -10.47566032409668
    9. '   ' → logprob: -11.22566032409668
    10. '(' → logprob: -11.47566032409668

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018577903392724693
    2. ' ,' → logprob: -9.2501859664917
    3. ',N' → logprob: -9.3751859664917
    4. ',K' → logprob: -13.5001859664917
    5. 'N' → logprob: -13.7501859664917
    6. '   ' → logprob: -14.0001859664917
    7. ',
' → logprob: -14.2501859664917
    8. ' ' → logprob: -15.5001859664917
    9. ' N' → logprob: -16.250185012817383
    10. '(N' → logprob: -16.250185012817383

Token 359: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011009939044015482
    2. ' N' → logprob: -9.125109672546387
    3. 'K' → logprob: -13.750109672546387
    4. '   ' → logprob: -17.125110626220703
    5. '(N' → logprob: -17.250110626220703
    6. '	N' → logprob: -17.750110626220703
    7. ' ' → logprob: -18.125110626220703
    8. 'len' → logprob: -18.375110626220703
    9. '[N' → logprob: -19.000110626220703
    10. 'n' → logprob: -19.250110626220703

Token 360: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03365365043282509
    2. ' +' → logprob: -3.408653736114502
    3. '   ' → logprob: -12.408653259277344
    4. '-' → logprob: -13.033653259277344
    5. ' -' → logprob: -14.158653259277344
    6. '+k' → logprob: -15.158653259277344
    7. ' ' → logprob: -15.658653259277344
    8. '
' → logprob: -15.783653259277344
    9. '+
' → logprob: -16.408653259277344
    10. ',' → logprob: -16.408653259277344

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007223221473395824
    2. ' ' → logprob: -7.625722408294678
    3. '2' → logprob: -8.37572193145752
    4. 'K' → logprob: -13.37572193145752
    5. '   ' → logprob: -13.87572193145752
    6. ' K' → logprob: -14.75072193145752
    7. 'N' → logprob: -15.12572193145752
    8. '
' → logprob: -15.50072193145752
    9. '  ' → logprob: -15.81322193145752
    10. ' N' → logprob: -16.688222885131836

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.460291767027229e-05
    2. ' ' → logprob: -9.500094413757324
    3. 'K' → logprob: -11.750094413757324
    4. '+' → logprob: -11.750094413757324
    5. '2' → logprob: -13.875094413757324
    6. 'N' → logprob: -14.000094413757324
    7. '
' → logprob: -14.000094413757324
    8. ' K' → logprob: -14.625094413757324
    9. ' +' → logprob: -15.125094413757324
    10. '   ' → logprob: -15.750094413757324

Token 363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1619373857975006
    2. '):' → logprob: -1.9119373559951782
    3. ':' → logprob: -6.536937236785889
    4. ':
' → logprob: -8.911937713623047
    5. '   ' → logprob: -9.411937713623047
    6. '):
' → logprob: -10.661937713623047
    7. ',' → logprob: -11.786937713623047
    8. '+' → logprob: -12.036937713623047
    9. ')' → logprob: -12.411937713623047
    10. '():
' → logprob: -13.411937713623047

Token 364: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7028400301933289
    2. '       ' → logprob: -0.7028400301933289
    3. ' if' → logprob: -5.0778398513793945
    4. '<|end|>' → logprob: -6.9528398513793945
    5. '```' → logprob: -6.9528398513793945
    6. 'if' → logprob: -7.0778398513793945
    7. '
' → logprob: -8.452839851379395
    8. '	if' → logprob: -9.452839851379395
    9. '           ' → logprob: -9.702839851379395
    10. ' ' → logprob: -9.827839851379395

Token 365: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.14931918680667877
    2. 'if' → logprob: -2.2743191719055176
    3. '   ' → logprob: -3.5243191719055176
    4. 'for' → logprob: -5.149319171905518
    5. ' ans' → logprob: -7.774319171905518
    6. ' if' → logprob: -9.524319648742676
    7. '	ans' → logprob: -10.024319648742676
    8. ' ' → logprob: -11.774319648742676
    9. ' for' → logprob: -11.774319648742676
    10. '       ' → logprob: -12.524319648742676

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3874388337135315
    2. ' =' → logprob: -1.1374387741088867
    3. '=min' → logprob: -7.512438774108887
    4. '   ' → logprob: -10.887438774108887
    5. '=max' → logprob: -14.262438774108887
    6. '=
' → logprob: -14.387438774108887
    7. 'min' → logprob: -14.637438774108887
    8. '>' → logprob: -14.762438774108887
    9. '=

' → logprob: -15.387438774108887
    10. '    ' → logprob: -16.762439727783203

Token 367: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804149478673935
    2. ' min' → logprob: -3.288041591644287
    3. '	min' → logprob: -17.788042068481445
    4. '(min' → logprob: -20.163042068481445
    5. '_min' → logprob: -20.913042068481445
    6. '[min' → logprob: -20.913042068481445
    7. '=min' → logprob: -21.038042068481445
    8. '
' → logprob: -21.163042068481445
    9. 'mini' → logprob: -21.288042068481445
    10. 'max' → logprob: -21.413042068481445

Token 368: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.4868770196917467e-05
    2. '(dp' → logprob: -11.000024795532227
    3. '(' → logprob: -11.750024795532227
    4. '(
' → logprob: -15.500024795532227
    5. 'ans' → logprob: -17.875024795532227
    6. '(an' → logprob: -17.875024795532227
    7. '(answer' → logprob: -19.000024795532227
    8. '(

' → logprob: -19.125024795532227
    9. '	ans' → logprob: -19.625024795532227
    10. '(acc' → logprob: -20.125024795532227

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. '(dp' → logprob: -10.125079154968262
    3. ' ,' → logprob: -10.250079154968262
    4. 'dp' → logprob: -13.500079154968262
    5. '(ans' → logprob: -14.000079154968262
    6. ' dp' → logprob: -14.125079154968262
    7. '   ' → logprob: -15.125079154968262
    8. ' ans' → logprob: -15.875079154968262
    9. ',
' → logprob: -16.125078201293945
    10. 'ans' → logprob: -16.500078201293945

Token 370: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003178901970386505
    2. ' dp' → logprob: -5.75317907333374
    3. '	dp' → logprob: -14.128178596496582
    4. '(dp' → logprob: -14.878178596496582
    5. '   ' → logprob: -17.1281795501709
    6. '       ' → logprob: -18.5031795501709
    7. '
' → logprob: -18.8781795501709
    8. '_dp' → logprob: -19.1281795501709
    9. '.dp' → logprob: -19.5031795501709
    10. ')' → logprob: -19.7531795501709

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.700132997939363e-05
    2. '[N' → logprob: -11.250017166137695
    3. '[' → logprob: -13.375017166137695
    4. 'i' → logprob: -13.625017166137695
    5. '```' → logprob: -14.750017166137695
    6. '[
' → logprob: -15.625017166137695
    7. '
' → logprob: -16.125017166137695
    8. '[I' → logprob: -16.250017166137695
    9. '[n' → logprob: -16.375017166137695
    10. '[j' → logprob: -17.250017166137695

Token 372: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14372853934764862
    2. '[K' → logprob: -2.018728494644165
    3. '[' → logprob: -7.518728733062744
    4. '[k' → logprob: -8.893728256225586
    5. '[N' → logprob: -9.268728256225586
    6. ']' → logprob: -9.643728256225586
    7. '
' → logprob: -9.768728256225586
    8. 'K' → logprob: -10.393728256225586
    9. ')[' → logprob: -10.768728256225586
    10. ' [' → logprob: -11.018728256225586

Token 373: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.5048530030981055e-06
    2. ' K' → logprob: -13.500001907348633
    3. '
' → logprob: -18.250001907348633
    4. '>K' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.500001907348633
    6. 'k' → logprob: -19.500001907348633
    7. '	K' → logprob: -19.625001907348633
    8. '<|end|>' → logprob: -19.625001907348633
    9. '[K' → logprob: -20.500001907348633
    10. '<K' → logprob: -20.625001907348633

Token 374: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006683559040538967
    2. ']' → logprob: -8.0006685256958
    3. ' ][' → logprob: -9.1256685256958
    4. '[' → logprob: -9.6256685256958
    5. '])' → logprob: -10.0006685256958
    6. ']
' → logprob: -10.7506685256958
    7. '-' → logprob: -11.0006685256958
    8. '
' → logprob: -11.2506685256958
    9. '[j' → logprob: -12.0006685256958
    10. '   ' → logprob: -12.0006685256958

Token 375: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00021617230959236622
    2. ' K' → logprob: -8.875216484069824
    3. '   ' → logprob: -10.375216484069824
    4. '(K' → logprob: -11.500216484069824
    5. ' ' → logprob: -11.625216484069824
    6. '
' → logprob: -11.875216484069824
    7. '1' → logprob: -11.875216484069824
    8. '  ' → logprob: -12.625216484069824
    9. '    ' → logprob: -12.875216484069824
    10. '       ' → logprob: -13.125216484069824

Token 376: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007519907783716917
    2. '+' → logprob: -5.632519721984863
    3. '])
' → logprob: -5.632519721984863
    4. ']' → logprob: -8.257519721984863
    5. '])

' → logprob: -10.632519721984863
    6. ' +' → logprob: -10.757519721984863
    7. ')' → logprob: -11.632519721984863
    8. '])
' → logprob: -12.257519721984863
    9. ' ])' → logprob: -12.382519721984863
    10. ']])' → logprob: -13.007519721984863

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10417263209819794
    2. 'return' → logprob: -2.479172706604004
    3. ' return' → logprob: -4.229172706604004
    4. '	return' → logprob: -7.979172706604004
    5. '    
' → logprob: -9.604172706604004
    6. ':return' → logprob: -10.479172706604004
    7. ' ' → logprob: -10.729172706604004
    8. '
' → logprob: -10.854172706604004
    9. '<|end|>' → logprob: -11.354172706604004
    10. ')' → logprob: -11.354172706604004

Token 378: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49913540482521057
    2. '   ' → logprob: -1.2491353750228882
    3. ' return' → logprob: -2.2491354942321777
    4. ' ' → logprob: -7.999135494232178
    5. '	return' → logprob: -8.12413501739502
    6. '  ' → logprob: -11.12413501739502
    7. '```' → logprob: -11.37413501739502
    8. '    
' → logprob: -11.74913501739502
    9. ':return' → logprob: -11.74913501739502
    10. 'eturn' → logprob: -12.12413501739502

Token 379: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001171056181192398
    2. ' ans' → logprob: -6.751171112060547
    3. '(ans' → logprob: -14.626171112060547
    4. '	ans' → logprob: -14.876171112060547
    5. 'answer' → logprob: -17.501171112060547
    6. 'abs' → logprob: -18.876171112060547
    7. '
' → logprob: -19.001171112060547
    8. ' ' → logprob: -19.126171112060547
    9. 'int' → logprob: -19.251171112060547
    10. '_ans' → logprob: -19.251171112060547

Token 380: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006730645429342985
    2. 'main' → logprob: -5.006730556488037
    3. ' solve' → logprob: -11.381731033325195
    4. '	main' → logprob: -14.256731033325195
    5. '_main' → logprob: -14.256731033325195
    6. ' def' → logprob: -14.506731033325195
    7. ' get' → logprob: -14.756731033325195
    8. ' set' → logprob: -14.881731033325195
    9. 'solve' → logprob: -15.006731033325195
    10. ' process' → logprob: -15.381731033325195

Token 383: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023456807248294353
    2. '(ans' → logprob: -7.127345561981201
    3. '("("' → logprob: -8.00234603881836
    4. '('' → logprob: -8.12734603881836
    5. '("' → logprob: -8.37734603881836
    6. '()' → logprob: -8.87734603881836
    7. '(`' → logprob: -9.37734603881836
    8. '(
' → logprob: -9.50234603881836
    9. '("")' → logprob: -9.62734603881836
    10. ' (' → logprob: -9.62734603881836

Token 384: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.19700540602207184
    2. '():' → logprob: -2.0720055103302
    3. '(' → logprob: -3.0720055103302
    4. '()' → logprob: -5.572005271911621
    5. '(result' → logprob: -6.947005271911621
    6. ' (' → logprob: -7.322005271911621
    7. '(dp' → logprob: -7.822005271911621
    8. '(answer' → logprob: -8.322005271911621
    9. ' ():' → logprob: -8.822005271911621
    10. '():
' → logprob: -9.197005271911621

Token 385: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06340396404266357
    2. '):
' → logprob: -2.813404083251953
    3. ')' → logprob: -6.563404083251953
    4. '):
' → logprob: -10.688404083251953
    5. ':' → logprob: -14.688404083251953
    6. ' ):' → logprob: -14.813404083251953
    7. '):

' → logprob: -15.313404083251953
    8. ')
' → logprob: -15.563404083251953
    9. '   ' → logprob: -16.188404083251953
    10. ',' → logprob: -16.688404083251953

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031243737787008286
    2. 'print' → logprob: -3.5312438011169434
    3. ' print' → logprob: -6.531243801116943
    4. '```' → logprob: -10.281243324279785
    5. '	print' → logprob: -15.031243324279785
    6. '   ' → logprob: -15.656243324279785
    7. '    
' → logprob: -16.4062442779541
    8. '`' → logprob: -16.9062442779541
    9. '
' → logprob: -17.9062442779541
    10. '    ' → logprob: -18.1562442779541

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -20.0
    5. '
' → logprob: -24.125
    6. '``' → logprob: -26.25
    7. '	print' → logprob: -26.375
    8. '#print' → logprob: -26.875
    9. 'import' → logprob: -27.375
    10. '`' → logprob: -27.625

Token 388: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.50000286102295
    3. 'ans' → logprob: -13.87500286102295
    4. '(answer' → logprob: -17.750001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '()' → logprob: -18.625001907348633
    7. '(
' → logprob: -18.750001907348633
    8. '	ans' → logprob: -19.625001907348633
    9. '(abs' → logprob: -20.375001907348633
    10. '(int' → logprob: -21.625001907348633

Token 389: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.25
    4. ')`' → logprob: -17.125
    5. '())' → logprob: -17.5
    6. '`)' → logprob: -17.875
    7. '))' → logprob: -18.0
    8. '()' → logprob: -18.5
    9. '),' → logprob: -19.125
    10. ')

' → logprob: -19.25

Token 390: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006716079078614712
    2. ' main' → logprob: -5.006716251373291
    3. 'solve' → logprob: -15.006715774536133
    4. '	main' → logprob: -15.256715774536133
    5. 'def' → logprob: -17.256715774536133
    6. 'run' → logprob: -17.381715774536133
    7. 'resolve' → logprob: -17.631715774536133
    8. 'm' → logprob: -17.631715774536133
    9. 'process' → logprob: -18.131715774536133
    10. '
' → logprob: -18.631715774536133

Token 392: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.668304245569743e-05
    2. '():
' → logprob: -10.125046730041504
    3. ' ():' → logprob: -12.000046730041504
    4. '()' → logprob: -15.000046730041504
    5. '():
' → logprob: -17.125045776367188
    6. '():

' → logprob: -18.250045776367188
    7. '(' → logprob: -18.875045776367188
    8. '()>' → logprob: -20.375045776367188
    9. '_' → logprob: -21.000045776367188
    10. '().' → logprob: -21.000045776367188

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010500259697437286
    2. ' set' → logprob: -4.885500431060791
    3. 'set' → logprob: -5.885500431060791
    4. 'import' → logprob: -10.260499954223633
    5. '()' → logprob: -11.010499954223633
    6. '(set' → logprob: -11.260499954223633
    7. ' import' → logprob: -11.385499954223633
    8. '   ' → logprob: -11.760499954223633
    9. '	set' → logprob: -12.135499954223633
    10. 'def' → logprob: -12.135499954223633

Token 394: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.02108970656991005
    2. '   ' → logprob: -3.896089792251587
    3. ' set' → logprob: -7.646089553833008
    4. 'import' → logprob: -10.271089553833008
    5. '	set' → logprob: -11.146089553833008
    6. 'read' → logprob: -11.521089553833008
    7. 'sys' → logprob: -12.646089553833008
    8. '  ' → logprob: -12.771089553833008
    9. ' ' → logprob: -13.521089553833008
    10. 'def' → logprob: -14.771089553833008

Token 395: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -11.25001335144043
    3. '_recursive' → logprob: -16.25001335144043
    4. '_rep' → logprob: -16.37501335144043
    5. 'rec' → logprob: -16.62501335144043
    6. '_re' → logprob: -17.37501335144043
    7. '_def' → logprob: -18.12501335144043
    8. ' _' → logprob: -19.00001335144043
    9. '_dec' → logprob: -19.50001335144043
    10. '_ref' → logprob: -19.62501335144043

Token 396: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.523948907968588e-05
    2. '_' → logprob: -10.875035285949707
    3. 'urs' → logprob: -11.125035285949707
    4. 'ursive' → logprob: -14.500035285949707
    5. 'ursor' → logprob: -15.125035285949707
    6. 'usion' → logprob: -16.12503433227539
    7. 'u' → logprob: -16.12503433227539
    8. 'ur' → logprob: -16.37503433227539
    9. '__' → logprob: -16.62503433227539
    10. '(' → logprob: -16.87503433227539

Token 397: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.011099467054009438
    2. 'limit' → logprob: -4.511099338531494
    3. 'imit' → logprob: -9.886099815368652
    4. '_LIMIT' → logprob: -15.386099815368652
    5. 'Limit' → logprob: -15.511099815368652
    6. ' limit' → logprob: -15.511099815368652
    7. '_limits' → logprob: -16.011098861694336
    8. 'lim' → logprob: -17.261098861694336
    9. '_lim' → logprob: -17.636098861694336
    10. '(limit' → logprob: -17.886098861694336

Token 398: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.8590300139039755e-05
    2. '(' → logprob: -10.375048637390137
    3. '()
' → logprob: -11.125048637390137
    4. ' ()' → logprob: -13.875048637390137
    5. '()

' → logprob: -13.875048637390137
    6. '()`' → logprob: -15.625048637390137
    7. '();' → logprob: -15.625048637390137
    8. '()"' → logprob: -16.75004768371582
    9. '())' → logprob: -16.87504768371582
    10. '()
' → logprob: -17.25004768371582

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04576067626476288
    2. '
' → logprob: -3.1707606315612793
    3. '    
' → logprob: -6.795760631561279
    4. 'read' → logprob: -7.295760631561279
    5. ' readline' → logprob: -7.920760631561279
    6. '(read' → logprob: -8.545761108398438
    7. '```' → logprob: -9.045761108398438
    8. '<|end|>' → logprob: -9.295761108398438
    9. '	read' → logprob: -9.795761108398438
    10. '  
' → logprob: -10.170761108398438

Token 400: ' INF' (ID: 69196)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00022999993234407157
    2. '   ' → logprob: -8.750229835510254
    3. ' readline' → logprob: -9.625229835510254
    4. 'get' → logprob: -12.250229835510254
    5. ' read' → logprob: -15.000229835510254
    6. 'readonly' → logprob: -15.625229835510254
    7. 'getline' → logprob: -16.12523078918457
    8. '	read' → logprob: -16.75023078918457
    9. '.readline' → logprob: -17.50023078918457
    10. '(read' → logprob: -18.00023078918457

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. '=get' → logprob: -17.258615493774414
    5. '＝' → logprob: -18.008615493774414
    6. ',' → logprob: -19.133615493774414
    7. '	' → logprob: -19.633615493774414
    8. '  ' → logprob: -19.883615493774414
    9. '   ' → logprob: -20.133615493774414
    10. ' ' → logprob: -20.258615493774414

Token 402: ' get' (ID: 717)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.025641238316893578
    2. 'get' → logprob: -4.400641441345215
    3. ' float' → logprob: -4.650641441345215
    4. '10' → logprob: -5.775641441345215
    5. ' get' → logprob: -8.400641441345215
    6. '1' → logprob: -9.150641441345215
    7. ' ' → logprob: -10.525641441345215
    8. 'int' → logprob: -10.650641441345215
    9. '100' → logprob: -13.150641441345215
    10. '(float' → logprob: -13.900641441345215

Token 403: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -1.8193366486229934e-05
    2. '_mod' → logprob: -11.000018119812012
    3. '_in' → logprob: -14.250018119812012
    4. '_INF' → logprob: -15.000018119812012
    5. 'inf' → logprob: -15.250018119812012
    6. '_int' → logprob: -16.875019073486328
    7. '_rec' → logprob: -17.125019073486328
    8. '_' → logprob: -17.125019073486328
    9. '_float' → logprob: -17.250019073486328
    10. '_inst' → logprob: -17.375019073486328

Token 404: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048608023673295975
    2. '()
' → logprob: -3.0486080646514893
    3. '()
' → logprob: -10.92360782623291
    4. '()

' → logprob: -12.92360782623291
    5. ' ()' → logprob: -16.173608779907227
    6. '()`' → logprob: -17.548608779907227
    7. '()\' → logprob: -17.923608779907227
    8. '(' → logprob: -17.923608779907227
    9. '())' → logprob: -18.423608779907227
    10. ' ()
' → logprob: -19.048608779907227

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11619332432746887
    2. ' readline' → logprob: -2.2411932945251465
    3. 'read' → logprob: -5.7411932945251465
    4. ' read' → logprob: -9.116193771362305
    5. '```' → logprob: -11.241193771362305
    6. 'get' → logprob: -11.616193771362305
    7. '	read' → logprob: -11.991193771362305
    8. ' get' → logprob: -13.366193771362305
    9. '   ' → logprob: -13.366193771362305
    10. '(read' → logprob: -13.491193771362305

Token 406: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03879265487194061
    2. 'mod' → logprob: -3.413792610168457
    3. '   ' → logprob: -5.413792610168457
    4. 'get' → logprob: -7.913792610168457
    5. 'N' → logprob: -8.663792610168457
    6. 'MOD' → logprob: -9.038792610168457
    7. 'K' → logprob: -12.038792610168457
    8. 'input' → logprob: -12.538792610168457
    9. 'stdin' → logprob: -12.538792610168457
    10. ' readline' → logprob: -13.038792610168457

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06249247118830681
    2. '=' → logprob: -2.8124923706054688
    3. '()' → logprob: -7.562492370605469
    4. '=sys' → logprob: -12.687492370605469
    5. '＝' → logprob: -14.187492370605469
    6. '	' → logprob: -15.062492370605469
    7. ' ' → logprob: -15.062492370605469
    8. ' ()' → logprob: -15.437492370605469
    9. ',' → logprob: -15.687492370605469
    10. '_' → logprob: -16.31249237060547

Token 408: ' get' (ID: 717)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03804849088191986
    2. ' sys' → logprob: -3.288048505783081
    3. 'get' → logprob: -12.41304874420166
    4. '(sys' → logprob: -13.28804874420166
    5. '	sys' → logprob: -14.28804874420166
    6. '=sys' → logprob: -14.91304874420166
    7. 'input' → logprob: -15.41304874420166
    8. ' get' → logprob: -16.913047790527344
    9. 'set' → logprob: -17.538047790527344
    10. '   ' → logprob: -17.538047790527344

Token 409: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0002251125843031332
    2. '_mod' → logprob: -8.500225067138672
    3. 'stdin' → logprob: -10.875225067138672
    4. '_std' → logprob: -13.625225067138672
    5. '_' → logprob: -14.125225067138672
    6. '_stdout' → logprob: -15.375225067138672
    7. '_sys' → logprob: -16.000225067138672
    8. '_in' → logprob: -16.375225067138672
    9. ' stdin' → logprob: -16.500225067138672
    10. ' _' → logprob: -17.500225067138672

Token 410: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.00043937109876424074
    2. 'in' → logprob: -8.250439643859863
    3. 'd' → logprob: -8.875439643859863
    4. 'stdin' → logprob: -10.750439643859863
    5. 'rin' → logprob: -11.750439643859863
    6. '.stdin' → logprob: -13.125439643859863
    7. 'di' → logprob: -13.625439643859863
    8. '_in' → logprob: -14.000439643859863
    9. 'dir' → logprob: -14.500439643859863
    10. '_d' → logprob: -14.625439643859863

Token 411: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.3165757954120636
    2. 'read' → logprob: -1.3165757656097412
    3. '.readline' → logprob: -5.81657600402832
    4. '().' → logprob: -8.44157600402832
    5. 'Read' → logprob: -9.81657600402832
    6. '.read' → logprob: -10.81657600402832
    7. 'line' → logprob: -11.06657600402832
    8. '()' → logprob: -12.06657600402832
    9. '_READ' → logprob: -12.06657600402832
    10. 'ad' → logprob: -12.31657600402832

Token 412: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011706985533237457
    2. 'ine' → logprob: -6.751170635223389
    3. 'eline' → logprob: -16.501171112060547
    4. 'l' → logprob: -16.501171112060547
    5. 'aline' → logprob: -16.876171112060547
    6. 'Line' → logprob: -17.001171112060547
    7. 'able' → logprob: -17.376171112060547
    8. 'ne' → logprob: -17.626171112060547
    9. 'le' → logprob: -17.626171112060547
    10. 'e' → logprob: -17.876171112060547

Token 413: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028084907680749893
    2. '
' → logprob: -3.6530849933624268
    3. '    
' → logprob: -7.278084754943848
    4. '()' → logprob: -7.528084754943848
    5. '()
' → logprob: -7.653084754943848
    6. '(N' → logprob: -10.528084754943848
    7. '(' → logprob: -11.403084754943848
    8. '  
' → logprob: -11.653084754943848
    9. 'def' → logprob: -12.028084754943848
    10. '
' → logprob: -12.403084754943848

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03413107991218567
    2. 'N' → logprob: -3.4091310501098633
    3. ' N' → logprob: -7.659131050109863
    4. '	N' → logprob: -11.784131050109863
    5. 'n' → logprob: -13.284131050109863
    6. '    
' → logprob: -13.784131050109863
    7. '  ' → logprob: -13.784131050109863
    8. '(N' → logprob: -14.409131050109863
    9. ' ' → logprob: -14.534131050109863
    10. ',' → logprob: -15.159131050109863

Token 415: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00010163593105971813
    2. '   ' → logprob: -9.250102043151855
    3. ' N' → logprob: -12.250102043151855
    4. 'n' → logprob: -15.500102043151855
    5. ' ' → logprob: -15.875102043151855
    6. '	N' → logprob: -16.50010108947754
    7. '  ' → logprob: -17.12510108947754
    8. '    
' → logprob: -17.25010108947754
    9. '(N' → logprob: -17.37510108947754
    10. 'def' → logprob: -18.00010108947754

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029852005536668
    2. ',K' → logprob: -8.125298500061035
    3. ' ,' → logprob: -13.000298500061035
    4. ',
' → logprob: -15.500298500061035
    5. 'K' → logprob: -17.00029945373535
    6. ',k' → logprob: -17.12529945373535
    7. '‌,' → logprob: -18.25029945373535
    8. ',\
' → logprob: -18.37529945373535
    9. ',

' → logprob: -18.62529945373535
    10. ',N' → logprob: -18.87529945373535

Token 417: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.38687223196029663
    2. ' K' → logprob: -1.1368722915649414
    3. ' ' → logprob: -13.886872291564941
    4. ' 
' → logprob: -16.511871337890625
    5. '  ' → logprob: -17.136871337890625
    6. '   ' → logprob: -17.261871337890625
    7. '
' → logprob: -17.511871337890625
    8. '<|end|>' → logprob: -17.511871337890625
    9. ' ' → logprob: -17.636871337890625
    10. '	K' → logprob: -18.136871337890625

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142649114131927
    2. '=' → logprob: -1.7014265060424805
    3. ',' → logprob: -11.45142650604248
    4. '＝' → logprob: -14.45142650604248
    5. ' ' → logprob: -14.82642650604248
    6. '<|end|>' → logprob: -14.95142650604248
    7. ')=' → logprob: -15.57642650604248
    8. ' =
' → logprob: -15.95142650604248
    9. '=line' → logprob: -16.326425552368164
    10. ')' → logprob: -16.451425552368164

Token 419: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.014165391214191914
    2. 'parse' → logprob: -4.26416540145874
    3. ' map' → logprob: -14.514164924621582
    4. '(parse' → logprob: -14.889164924621582
    5. '	parse' → logprob: -15.139164924621582
    6. '_parse' → logprob: -15.514164924621582
    7. '=parse' → logprob: -15.639164924621582
    8. ' ' → logprob: -16.0141658782959
    9. ' tuple' → logprob: -16.0141658782959
    10. ' parser' → logprob: -17.5141658782959

Token 420: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00018232580623589456
    2. 'first' → logprob: -8.625182151794434
    3. 'First' → logprob: -13.875182151794434
    4. '_FIRST' → logprob: -14.375182151794434
    5. '(' → logprob: -14.750182151794434
    6. '(first' → logprob: -15.750182151794434
    7. 'parse' → logprob: -16.00018310546875
    8. '_second' → logprob: -16.37518310546875
    9. '```' → logprob: -16.37518310546875
    10. 'get' → logprob: -16.87518310546875

Token 421: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.1689596148207784e-05
    2. 'line' → logprob: -9.875051498413086
    3. '_lin' → logprob: -17.250051498413086
    4. '(line' → logprob: -17.500051498413086
    5. '_LINE' → logprob: -18.125051498413086
    6. 'Line' → logprob: -18.125051498413086
    7. '_lines' → logprob: -18.375051498413086
    8. '_l' → logprob: -18.625051498413086
    9. 'sys' → logprob: -19.000051498413086
    10. 'lin' → logprob: -19.000051498413086

Token 422: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -9.088346359931165e-07
    2. 'read' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(' → logprob: -15.750000953674316
    5. '(stdin' → logprob: -18.0
    6. '(Read' → logprob: -18.125
    7. '.readline' → logprob: -18.75
    8. ' readline' → logprob: -18.75
    9. '(line' → logprob: -18.875
    10. '(write' → logprob: -19.0

Token 423: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.935296834039036e-06
    2. 'ine' → logprob: -13.00000286102295
    3. 'Line' → logprob: -15.62500286102295
    4. '(line' → logprob: -15.75000286102295
    5. 'lin' → logprob: -16.125003814697266
    6. '_line' → logprob: -16.750003814697266
    7. 'eline' → logprob: -16.875003814697266
    8. 'le' → logprob: -17.125003814697266
    9. 'LINE' → logprob: -18.500003814697266
    10. 'l' → logprob: -18.875003814697266

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.37501335144043
    3. '())' → logprob: -13.62501335144043
    4. '()' → logprob: -14.87501335144043
    5. ')

' → logprob: -17.37501335144043
    6. ' )' → logprob: -17.75001335144043
    7. ')
' → logprob: -18.37501335144043
    8. ')#' → logprob: -18.50001335144043
    9. '),' → logprob: -18.62501335144043
    10. '   ' → logprob: -19.12501335144043

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0383104607462883
    2. 'H' → logprob: -3.2883105278015137
    3. ' H' → logprob: -8.538310050964355
    4. '	H' → logprob: -10.538310050964355
    5. '  ' → logprob: -11.413310050964355
    6. '<|end|>' → logprob: -11.663310050964355
    7. '    
' → logprob: -11.788310050964355
    8. '```' → logprob: -11.913310050964355
    9. '   ' → logprob: -12.538310050964355
    10. ' ' → logprob: -12.788310050964355

Token 426: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -1.5690089639974758e-05
    2. '   ' → logprob: -11.500015258789062
    3. ' H' → logprob: -12.125015258789062
    4. '	H' → logprob: -17.250015258789062
    5. '```' → logprob: -18.000015258789062
    6. '  ' → logprob: -19.625015258789062
    7. '`' → logprob: -19.625015258789062
    8. ' ' → logprob: -19.750015258789062
    9. '(H' → logprob: -20.500015258789062
    10. '    
' → logprob: -20.500015258789062

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048729754984378815
    2. '=' → logprob: -3.048729658126831
    3. '_list' → logprob: -8.92372989654541
    4. '_' → logprob: -11.67372989654541
    5. '=[]' → logprob: -16.548728942871094
    6. '```' → logprob: -16.673728942871094
    7. 'list' → logprob: -16.798728942871094
    8. ')' → logprob: -17.048728942871094
    9. ' ' → logprob: -17.048728942871094
    10. 's' → logprob: -17.173728942871094

Token 428: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.029757322743535042
    2. ' init' → logprob: -3.529757261276245
    3. '(init' → logprob: -12.279757499694824
    4. '_init' → logprob: -13.279757499694824
    5. '	init' → logprob: -15.904757499694824
    6. '   ' → logprob: -16.154756546020508
    7. '.init' → logprob: -16.904756546020508
    8. ')init' → logprob: -16.904756546020508
    9. '/init' → logprob: -16.904756546020508
    10. 'inite' → logprob: -17.154756546020508

Token 429: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -1.0564331205387134e-05
    2. 'he' → logprob: -11.50001049041748
    3. '_height' → logprob: -15.75001049041748
    4. 'He' → logprob: -16.250011444091797
    5. 's' → logprob: -17.000011444091797
    6. '_' → logprob: -17.125011444091797
    7. '\' → logprob: -17.625011444091797
    8. '_lengths' → logprob: -17.625011444091797
    9. '_depth' → logprob: -18.000011444091797
    10. '```' → logprob: -18.125011444091797

Token 430: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -1.9504606825648807e-05
    2. 'ight' → logprob: -11.250019073486328
    3. 'ig' → logprob: -12.500019073486328
    4. 'IGHTS' → logprob: -14.125019073486328
    5. 'igh' → logprob: -14.375019073486328
    6. '   ' → logprob: -15.000019073486328
    7. 'ght' → logprob: -15.000019073486328
    8. 'he' → logprob: -15.875019073486328
    9. 'igts' → logprob: -15.875019073486328
    10. '```' → logprob: -16.000019073486328

Token 431: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -14.125000953674316
    3. '(' → logprob: -15.000000953674316
    4. 'N' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '(
' → logprob: -17.875001907348633
    7. '```' → logprob: -18.250001907348633
    8. '
' → logprob: -19.125001907348633
    9. '(n' → logprob: -19.250001907348633
    10. ' ' → logprob: -20.000001907348633

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.125006675720215
    3. '(read' → logprob: -14.000006675720215
    4. ',
' → logprob: -15.625006675720215
    5. '   ' → logprob: -18.0000057220459
    6. '```' → logprob: -18.7500057220459
    7. 'read' → logprob: -19.0000057220459
    8. ',line' → logprob: -19.1250057220459
    9. ' readline' → logprob: -19.8750057220459
    10. '(),' → logprob: -19.8750057220459

Token 433: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00020532844064291567
    2. ' readline' → logprob: -8.500205039978027
    3. ' read' → logprob: -13.625205039978027
    4. '   ' → logprob: -15.500205039978027
    5. 'readonly' → logprob: -15.500205039978027
    6. '(read' → logprob: -16.375205993652344
    7. ' ' → logprob: -18.500205993652344
    8. '	read' → logprob: -18.625205993652344
    9. '.readline' → logprob: -19.000205993652344
    10. ')' → logprob: -19.625205993652344

Token 434: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.250001907348633
    4. ' )' → logprob: -16.625001907348633
    5. ')

' → logprob: -19.000001907348633
    6. ')
' → logprob: -19.875001907348633
    7. '),' → logprob: -19.875001907348633
    8. ')#' → logprob: -20.625001907348633
    9. ')`' → logprob: -20.875001907348633
    10. ' ' → logprob: -21.125001907348633

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024157855659723282
    2. 'dp' → logprob: -3.899157762527466
    3. ' dp' → logprob: -5.649158000946045
    4. 'DP' → logprob: -10.524157524108887
    5. '```' → logprob: -10.649157524108887
    6. '
' → logprob: -11.024157524108887
    7. '	dp' → logprob: -11.649157524108887
    8. '(dp' → logprob: -12.649157524108887
    9. '_dp' → logprob: -12.649157524108887
    10. '    
' → logprob: -12.774157524108887

Token 436: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -3.1424973713001236e-05
    2. ' dp' → logprob: -10.875031471252441
    3. '   ' → logprob: -11.375031471252441
    4. 'DP' → logprob: -15.000031471252441
    5. '	dp' → logprob: -15.375031471252441
    6. 'K' → logprob: -16.250030517578125
    7. 'INF' → logprob: -16.250030517578125
    8. '```' → logprob: -16.500030517578125
    9. '#' → logprob: -17.500030517578125
    10. ' ' → logprob: -17.625030517578125

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. '=create' → logprob: -16.893150329589844
    4. '＝' → logprob: -18.518150329589844
    5. '=set' → logprob: -18.518150329589844
    6. '```' → logprob: -18.518150329589844
    7. ' ' → logprob: -19.268150329589844
    8. ',' → logprob: -19.768150329589844
    9. ')' → logprob: -19.893150329589844
    10. '[' → logprob: -20.143150329589844

Token 438: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023246178403496742
    2. ' init' → logprob: -3.7732462882995605
    3. '_init' → logprob: -15.148245811462402
    4. '(init' → logprob: -15.148245811462402
    5. '	init' → logprob: -16.52324676513672
    6. ' ' → logprob: -17.52324676513672
    7. '.init' → logprob: -17.89824676513672
    8. '   ' → logprob: -19.14824676513672
    9. ')init' → logprob: -19.27324676513672
    10. 'inite' → logprob: -19.27324676513672

Token 439: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.723352049040841e-06
    2. 'dp' → logprob: -12.375004768371582
    3. '_py' → logprob: -16.250003814697266
    4. '```' → logprob: -16.500003814697266
    5. '_pd' → logprob: -17.000003814697266
    6. '_dt' → logprob: -17.125003814697266
    7. '_db' → logprob: -17.500003814697266
    8. '(dp' → logprob: -17.500003814697266
    9. '_dl' → logprob: -17.625003814697266
    10. '_dc' → logprob: -17.750003814697266

Token 440: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.250000953674316
    3. '(
' → logprob: -16.125
    4. ' (' → logprob: -16.5
    5. 'N' → logprob: -16.5
    6. '   ' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '((' → logprob: -19.125
    9. '(len' → logprob: -19.25
    10. '(H' → logprob: -19.75

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',
' → logprob: -14.875025749206543
    4. '<|end|>' → logprob: -15.000025749206543
    5. '‌,' → logprob: -16.125024795532227
    6. 'INF' → logprob: -16.375024795532227
    7. '=' → logprob: -16.750024795532227
    8. ')' → logprob: -17.250024795532227
    9. '<|end|>' → logprob: -17.250024795532227
    10. '),' → logprob: -17.750024795532227

Token 442: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.007609704975038767
    2. ' INF' → logprob: -4.882609844207764
    3. '   ' → logprob: -13.632609367370605
    4. '-INF' → logprob: -13.882609367370605
    5. '_INF' → logprob: -14.257609367370605
    6. 'IN' → logprob: -14.882609367370605
    7. ' ' → logprob: -15.257609367370605
    8. '    ' → logprob: -16.632610321044922
    9. ')' → logprob: -17.507610321044922
    10. 'Inf' → logprob: -17.882610321044922

Token 443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006279678200371563
    2. ')
' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.000627517700195
    4. ')
' → logprob: -15.250627517700195
    5. ' )' → logprob: -15.625627517700195
    6. ')

' → logprob: -15.750627517700195
    7. '),' → logprob: -16.750627517700195
    8. ',' → logprob: -16.750627517700195
    9. ' ' → logprob: -18.500627517700195
    10. ',)' → logprob: -18.500627517700195

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16372253000736237
    2. 'set' → logprob: -1.9137225151062012
    3. ' set' → logprob: -5.663722515106201
    4. '```' → logprob: -11.66372299194336
    5. '	set' → logprob: -12.53872299194336
    6. ')set' → logprob: -12.53872299194336
    7. '(set' → logprob: -12.78872299194336
    8. '=set' → logprob: -13.78872299194336
    9. '   ' → logprob: -13.91372299194336
    10. '#set' → logprob: -14.16372299194336

Token 445: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.375008583068848
    3. ' set' → logprob: -12.375008583068848
    4. '#set' → logprob: -15.000008583068848
    5. '```' → logprob: -16.125009536743164
    6. ')set' → logprob: -16.500009536743164
    7. '...' → logprob: -17.250009536743164
    8. '	set' → logprob: -17.500009536743164
    9. '.set' → logprob: -17.625009536743164
    10. '=set' → logprob: -17.750009536743164

Token 446: '_dp' (ID: 133252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06196959316730499
    2. '_dp' → logprob: -2.811969518661499
    3. '	dp' → logprob: -14.061969757080078
    4. 'DP' → logprob: -15.061969757080078
    5. ' dp' → logprob: -15.186969757080078
    6. 'd' → logprob: -15.686969757080078
    7. '(dp' → logprob: -15.686969757080078
    8. 'a' → logprob: -16.686969757080078
    9. '```' → logprob: -16.811969757080078
    10. '
' → logprob: -17.311969757080078

Token 447: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.00044318195432424545
    2. '_first' → logprob: -7.750442981719971
    3. 'base' → logprob: -11.375443458557129
    4. 'first' → logprob: -13.875443458557129
    5. '_basis' → logprob: -17.125442504882812
    6. 'Base' → logprob: -17.875442504882812
    7. '_bas' → logprob: -18.375442504882812
    8. '_' → logprob: -18.500442504882812
    9. '_BASE' → logprob: -19.250442504882812
    10. ' base' → logprob: -20.000442504882812

Token 448: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: 0.0
    2. '_' → logprob: -17.375
    3. '_cases' → logprob: -17.375
    4. 'case' → logprob: -17.875
    5. '_code' → logprob: -18.375
    6. '_c' → logprob: -19.125
    7. '_dp' → logprob: -19.5
    8. '_line' → logprob: -20.25
    9. '\' → logprob: -20.25
    10. '_space' → logprob: -20.5

Token 449: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.002485169330611825
    2. '_case' → logprob: -6.002485275268555
    3. '_' → logprob: -12.502485275268555
    4. '```' → logprob: -12.752485275268555
    5. 'zero' → logprob: -14.377485275268555
    6. '0' → logprob: -14.502485275268555
    7. '_value' → logprob: -15.377485275268555
    8. '_base' → logprob: -15.502485275268555
    9. '
' → logprob: -16.002485275268555
    10. '_code' → logprob: -16.252485275268555

Token 450: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.625000953674316
    3. ' (' → logprob: -18.500001907348633
    4. '(
' → logprob: -20.000001907348633
    5. '(dt' → logprob: -20.125001907348633
    6. '(dx' → logprob: -20.750001907348633
    7. '(df' → logprob: -21.375001907348633
    8. '(dto' → logprob: -21.500001907348633
    9. '	dp' → logprob: -21.625001907348633
    10. '(lp' → logprob: -21.750001907348633

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',N' → logprob: -11.875009536743164
    3. ' ,' → logprob: -13.125009536743164
    4. ',
' → logprob: -17.375009536743164
    5. ',H' → logprob: -17.750009536743164
    6. ',n' → logprob: -18.125009536743164
    7. ')' → logprob: -18.125009536743164
    8. ',K' → logprob: -18.375009536743164
    9. '‌,' → logprob: -19.250009536743164
    10. '   ' → logprob: -19.750009536743164

Token 452: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.615255839889869e-05
    2. ' N' → logprob: -9.250096321105957
    3. '	N' → logprob: -19.12509536743164
    4. '   ' → logprob: -20.25009536743164
    5. ',N' → logprob: -22.12509536743164
    6. ' ' → logprob: -22.87509536743164
    7. '
' → logprob: -23.25009536743164
    8. ')' → logprob: -23.25009536743164
    9. '_N' → logprob: -23.50009536743164
    10. 'Ｎ' → logprob: -23.62509536743164

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20147590339183807
    2. ')
' → logprob: -1.7014758586883545
    3. '   ' → logprob: -9.701476097106934
    4. ')
' → logprob: -13.951476097106934
    5. ')

' → logprob: -15.576476097106934
    6. '
' → logprob: -15.951476097106934
    7. ')set' → logprob: -16.326475143432617
    8. ' )' → logprob: -16.451475143432617
    9. '),' → logprob: -16.451475143432617
    10. ' ' → logprob: -16.951475143432617

Token 454: '   ' (ID: 271)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018702691420912743
    2. '   ' → logprob: -4.018702507019043
    3. ' set' → logprob: -7.518702507019043
    4. ')set' → logprob: -12.768702507019043
    5. '	set' → logprob: -12.893702507019043
    6. '```' → logprob: -13.268702507019043
    7. '#set' → logprob: -14.018702507019043
    8. '=set' → logprob: -14.018702507019043
    9. '(set' → logprob: -15.393702507019043
    10. '  ' → logprob: -15.893702507019043

Token 455: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -3.166338137816638e-05
    2. ' set' → logprob: -10.625031471252441
    3. '   ' → logprob: -11.875031471252441
    4. '#set' → logprob: -16.250032424926758
    5. ')set' → logprob: -16.750032424926758
    6. '	set' → logprob: -17.000032424926758
    7. '=set' → logprob: -17.750032424926758
    8. '.set' → logprob: -18.125032424926758
    9. '```' → logprob: -18.125032424926758
    10. ' ' → logprob: -19.000032424926758

Token 456: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.008614926598966122
    2. 'dp' → logprob: -4.758615016937256
    3. '	dp' → logprob: -16.133615493774414
    4. 'DP' → logprob: -16.133615493774414
    5. 'def' → logprob: -16.633615493774414
    6. '(dp' → logprob: -16.758615493774414
    7. ' dp' → logprob: -17.883615493774414
    8. '_dt' → logprob: -18.633615493774414
    9. '```' → logprob: -18.758615493774414
    10. 'Dp' → logprob: -19.008615493774414

Token 457: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0007100477814674377
    2. 'first' → logprob: -7.2507100105285645
    3. 'First' → logprob: -16.750709533691406
    4. '_FIRST' → logprob: -17.625709533691406
    5. '_second' → logprob: -19.000709533691406
    6. '_f' → logprob: -19.125709533691406
    7. '_' → logprob: -19.375709533691406
    8. ' first' → logprob: -19.375709533691406
    9. 'FIRST' → logprob: -19.500709533691406
    10. '_for' → logprob: -19.875709533691406

Token 458: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.625000953674316
    3. '
' → logprob: -15.750000953674316
    4. '_i' → logprob: -15.875000953674316
    5. 'j' → logprob: -16.25
    6. '_k' → logprob: -17.375
    7. '\' → logprob: -17.5
    8. '_' → logprob: -17.5
    9. 'def' → logprob: -18.125
    10. '

' → logprob: -18.125

Token 459: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.375012397766113
    3. '(dp' → logprob: -14.625012397766113
    4. ' (' → logprob: -15.375012397766113
    5. 'H' → logprob: -16.125011444091797
    6. ' H' → logprob: -18.375011444091797
    7. '```' → logprob: -18.750011444091797
    8. ',' → logprob: -18.875011444091797
    9. '(D' → logprob: -18.875011444091797
    10. ',H' → logprob: -18.875011444091797

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -12.125009536743164
    3. '(dp' → logprob: -12.625009536743164
    4. ',
' → logprob: -15.375009536743164
    5. 'dp' → logprob: -16.625009536743164
    6. ')' → logprob: -16.875009536743164
    7. ' dp' → logprob: -17.875009536743164
    8. '	dp' → logprob: -18.000009536743164
    9. '
' → logprob: -18.125009536743164
    10. ',d' → logprob: -18.250009536743164

Token 461: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0017245612107217312
    2. ' dp' → logprob: -6.751724720001221
    3. 'N' → logprob: -7.501724720001221
    4. ' N' → logprob: -13.501724243164062
    5. '	dp' → logprob: -15.251724243164062
    6. '(dp' → logprob: -15.251724243164062
    7. ' ' → logprob: -16.126724243164062
    8. '   ' → logprob: -17.376724243164062
    9. '_dp' → logprob: -17.501724243164062
    10. 'd' → logprob: -18.751724243164062

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',N' → logprob: -13.125007629394531
    4. ',
' → logprob: -17.37500762939453
    5. ')' → logprob: -18.00000762939453
    6. '   ' → logprob: -19.25000762939453
    7. '```' → logprob: -19.25000762939453
    8. ',n' → logprob: -19.50000762939453
    9. '),' → logprob: -19.62500762939453
    10. '‌,' → logprob: -19.87500762939453

Token 463: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.15310683415737e-05
    2. ' N' → logprob: -10.750021934509277
    3. '	N' → logprob: -20.25002098083496
    4. ')' → logprob: -21.87502098083496
    5. '   ' → logprob: -22.00002098083496
    6. ' ' → logprob: -22.25002098083496
    7. ',N' → logprob: -22.37502098083496
    8. '[N' → logprob: -22.62502098083496
    9. '<N' → logprob: -22.75002098083496
    10. '
' → logprob: -23.00002098083496

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859191179275513
    2. ')
' → logprob: -3.0485918521881104
    3. '   ' → logprob: -12.548591613769531
    4. ')
' → logprob: -14.173591613769531
    5. ')

' → logprob: -15.548591613769531
    6. ' )' → logprob: -17.04859161376953
    7. ')#' → logprob: -17.42359161376953
    8. '))' → logprob: -17.54859161376953
    9. ')\
' → logprob: -17.79859161376953
    10. ')`' → logprob: -18.04859161376953

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019458913011476398
    2. 'update' → logprob: -6.251945972442627
    3. ' update' → logprob: -11.626945495605469
    4. '```' → logprob: -11.751945495605469
    5. '	update' → logprob: -14.876945495605469
    6. '``' → logprob: -17.12694549560547
    7. '(update' → logprob: -17.25194549560547
    8. '
' → logprob: -18.00194549560547
    9. '       ' → logprob: -18.00194549560547
    10. '`' → logprob: -18.12694549560547

Token 466: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0011167617049068213
    2. '   ' → logprob: -7.001116752624512
    3. ' update' → logprob: -8.501116752624512
    4. '```' → logprob: -13.376116752624512
    5. 'for' → logprob: -15.751116752624512
    6. '	update' → logprob: -16.376117706298828
    7. ' ' → logprob: -17.376117706298828
    8. '.update' → logprob: -17.376117706298828
    9. '(update' → logprob: -17.501117706298828
    10. '
' → logprob: -17.626117706298828

Token 467: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.9361264946837764e-07
    2. 'dp' → logprob: -17.0
    3. '_dc' → logprob: -17.625
    4. '_dt' → logprob: -17.625
    5. '_db' → logprob: -18.25
    6. '_df' → logprob: -18.5
    7. '_dl' → logprob: -19.75
    8. '_for' → logprob: -20.0
    9. '```' → logprob: -20.5
    10. '
' → logprob: -20.625

Token 468: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: 0.0
    2. 'for' → logprob: -19.75
    3. '```' → logprob: -19.75
    4. '_FOR' → logprob: -20.375
    5. 'For' → logprob: -20.625
    6. '_dp' → logprob: -21.0
    7. ')_' → logprob: -21.375
    8. '_f' → logprob: -21.5
    9. ' _' → logprob: -21.625
    10. '##_' → logprob: -21.75

Token 469: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.306760805164231e-05
    2. 'j' → logprob: -11.25001335144043
    3. '_i' → logprob: -17.62501335144043
    4. '__' → logprob: -18.75001335144043
    5. '_js' → logprob: -19.00001335144043
    6. 'J' → logprob: -19.12501335144043
    7. '```' → logprob: -19.37501335144043
    8. '	j' → logprob: -19.62501335144043
    9. '_' → logprob: -20.00001335144043
    10. '\' → logprob: -20.12501335144043

Token 470: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.24031655490398407
    2. '_j' → logprob: -1.6153165102005005
    3. '_for' → logprob: -4.240316390991211
    4. 'for' → logprob: -9.115316390991211
    5. '_dp' → logprob: -9.615316390991211
    6. '(' → logprob: -9.615316390991211
    7. 'dp' → logprob: -9.865316390991211
    8. 'j' → logprob: -9.990316390991211
    9. '```' → logprob: -10.865316390991211
    10. '_k' → logprob: -12.490316390991211

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.347765181795694e-05
    2. ' ,' → logprob: -10.750053405761719
    3. ',H' → logprob: -11.000053405761719
    4. '(H' → logprob: -11.375053405761719
    5. ')' → logprob: -12.750053405761719
    6. '(dp' → logprob: -14.875053405761719
    7. ',
' → logprob: -16.25005340576172
    8. 'dp' → logprob: -16.37505340576172
    9. '(' → logprob: -16.37505340576172
    10. '   ' → logprob: -16.62505340576172

Token 472: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00317783304490149
    2. ' H' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.003177642822266
    4. '	H' → logprob: -17.128177642822266
    5. ' ' → logprob: -17.253177642822266
    6. ')' → logprob: -17.628177642822266
    7. ',H' → logprob: -18.628177642822266
    8. '(H' → logprob: -18.878177642822266
    9. '<H' → logprob: -19.253177642822266
    10. '```' → logprob: -19.315677642822266

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ' ,' → logprob: -10.375039100646973
    3. ',N' → logprob: -11.875039100646973
    4. ',
' → logprob: -15.250039100646973
    5. ')' → logprob: -15.500039100646973
    6. '   ' → logprob: -16.875038146972656
    7. '),' → logprob: -17.375038146972656
    8. '```' → logprob: -17.625038146972656
    9. 'N' → logprob: -17.875038146972656
    10. '`,' → logprob: -18.625038146972656

Token 474: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. ' ' → logprob: -18.750431060791016
    4. '   ' → logprob: -18.875431060791016
    5. ')' → logprob: -19.750431060791016
    6. '
' → logprob: -20.250431060791016
    7. '	N' → logprob: -20.375431060791016
    8. '[N' → logprob: -21.250431060791016
    9. ',N' → logprob: -22.000431060791016
    10. '<N' → logprob: -22.000431060791016

Token 475: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7995116114616394
    2. ',' → logprob: -1.1745116710662842
    3. ')' → logprob: -1.4245116710662842
    4. ')
' → logprob: -7.424511432647705
    5. ',K' → logprob: -9.174511909484863
    6. ' ,' → logprob: -9.549511909484863
    7. ',
' → logprob: -10.424511909484863
    8. '  ' → logprob: -10.924511909484863
    9. ' )' → logprob: -11.674511909484863
    10. ',N' → logprob: -12.424511909484863

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006537011358886957
    2. '
' → logprob: -7.6256537437438965
    3. '<|end|>' → logprob: -9.500653266906738
    4. '    
' → logprob: -10.250653266906738
    5. '```' → logprob: -10.375653266906738
    6. ' find' → logprob: -11.750653266906738
    7. 'find' → logprob: -12.250653266906738
    8. 'K' → logprob: -13.250653266906738
    9. '`' → logprob: -13.375653266906738
    10. '   ' → logprob: -13.500653266906738

Token 477: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6703380942344666
    2. 'ans' (adapté à ' ans') → logprob: -1.2953381538391113
    3. ' ans' → logprob: -1.5453381538391113
    4. 'print' → logprob: -7.795338153839111
    5. ' print' → logprob: -8.420337677001953
    6. '	ans' → logprob: -8.420337677001953
    7. 'result' → logprob: -8.670337677001953
    8. '(ans' → logprob: -9.295337677001953
    9. ' result' → logprob: -9.295337677001953
    10. 'answer' → logprob: -9.420337677001953

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023478398099541664
    2. '=' → logprob: -3.7734785079956055
    3. ',' → logprob: -8.648478507995605
    4. ' ' → logprob: -10.023478507995605
    5. ' ,' → logprob: -11.898478507995605
    6. ')' → logprob: -13.148478507995605
    7. ' =
' → logprob: -13.648478507995605
    8. '<|end|>' → logprob: -14.023478507995605
    9. '.' → logprob: -15.148478507995605
    10. '	' → logprob: -15.273478507995605

Token 479: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.04858827963471413
    2. 'find' → logprob: -3.048588275909424
    3. '(find' → logprob: -15.548588752746582
    4. '   ' → logprob: -15.673588752746582
    5. '	find' → logprob: -16.048587799072266
    6. ' dp' → logprob: -16.173587799072266
    7. ' min' → logprob: -16.298587799072266
    8. '=find' → logprob: -16.548587799072266
    9. 'dp' → logprob: -17.798587799072266
    10. 'fin' → logprob: -17.923587799072266

Token 480: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.320199877838604e-07
    2. 'min' → logprob: -15.625
    3. '_ans' → logprob: -16.125
    4. '_max' → logprob: -16.25
    5. '```' → logprob: -17.5
    6. '_mod' → logprob: -19.875
    7. '_MIN' → logprob: -20.0
    8. '(min' → logprob: -20.0
    9. '_m' → logprob: -20.125
    10. '(_' → logprob: -21.0

Token 481: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.45848218582978e-06
    2. 'ans' → logprob: -13.50000286102295
    3. '_answer' → logprob: -14.62500286102295
    4. '(ans' → logprob: -14.75000286102295
    5. '_result' → logprob: -18.375001907348633
    6. 'Ans' → logprob: -18.375001907348633
    7. '	ans' → logprob: -18.375001907348633
    8. '_an' → logprob: -18.375001907348633
    9. '__' → logprob: -18.500001907348633
    10. '```' → logprob: -18.500001907348633

Token 482: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. 'dp' → logprob: -15.625
    3. '(' → logprob: -16.75
    4. '	dp' → logprob: -18.0
    5. ' (' → logprob: -18.25
    6. '```' → logprob: -18.5
    7. '(
' → logprob: -18.625
    8. ' dp' → logprob: -18.75
    9. '(df' → logprob: -20.875
    10. '(dt' → logprob: -21.25

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008624029345810413
    2. '(dp' → logprob: -4.758624076843262
    3. ' ,' → logprob: -12.258624076843262
    4. 'dp' → logprob: -13.008624076843262
    5. ' dp' → logprob: -14.008624076843262
    6. ')' → logprob: -14.133624076843262
    7. '(' → logprob: -15.008624076843262
    8. ',d' → logprob: -15.508624076843262
    9. '	dp' → logprob: -15.633624076843262
    10. '```' → logprob: -16.633623123168945

Token 484: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0026049104053527117
    2. ' N' → logprob: -6.002604961395264
    3. 'K' → logprob: -9.002604484558105
    4. '   ' → logprob: -12.377604484558105
    5. ' ' → logprob: -13.877604484558105
    6. ' K' → logprob: -14.502604484558105
    7. '	N' → logprob: -15.627604484558105
    8. ')' → logprob: -16.377605438232422
    9. '  ' → logprob: -16.502605438232422
    10. '    ' → logprob: -16.627605438232422

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019697926472872496
    2. ',K' → logprob: -6.376969814300537
    3. ' ,' → logprob: -8.251969337463379
    4. ',
' → logprob: -12.001969337463379
    5. '   ' → logprob: -15.376969337463379
    6. 'K' → logprob: -16.126970291137695
    7. ' K' → logprob: -16.126970291137695
    8. ')' → logprob: -16.751970291137695
    9. '‌,' → logprob: -17.251970291137695
    10. '<|end|>' → logprob: -17.626970291137695

Token 486: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004078878089785576
    2. ' K' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.87907886505127
    4. ')' → logprob: -16.879079818725586
    5. ' ' → logprob: -17.379079818725586
    6. '	K' → logprob: -17.504079818725586
    7. '
' → logprob: -18.004079818725586
    8. '>K' → logprob: -18.379079818725586
    9. '    ' → logprob: -18.629079818725586
    10. '       ' → logprob: -19.379079818725586

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005364707321859896
    2. ')' → logprob: -7.6255364418029785
    3. ' ,' → logprob: -10.500536918640137
    4. '   ' → logprob: -11.750536918640137
    5. ',
' → logprob: -12.250536918640137
    6. ',)' → logprob: -12.375536918640137
    7. '<|end|>' → logprob: -13.875536918640137
    8. ',N' → logprob: -14.500536918640137
    9. '‌,' → logprob: -14.625536918640137
    10. ')
' → logprob: -14.625536918640137

Token 488: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0007110013975761831
    2. ' INF' → logprob: -7.250710964202881
    3. '_INF' → logprob: -14.000711441040039
    4. 'IN' → logprob: -15.875711441040039
    5. '-INF' → logprob: -16.50071144104004
    6. 'inf' → logprob: -17.37571144104004
    7. 'Inf' → logprob: -17.37571144104004
    8. ')' → logprob: -19.12571144104004
    9. ' ' → logprob: -19.62571144104004
    10. '   ' → logprob: -20.37571144104004

Token 489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002624086628202349
    2. ')
' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.000262260437012
    4. ' )' → logprob: -15.875262260437012
    5. ')`' → logprob: -16.750263214111328
    6. ')#' → logprob: -16.875263214111328
    7. ')
' → logprob: -17.125263214111328
    8. '),' → logprob: -17.625263214111328
    9. ')

' → logprob: -18.250263214111328
    10. ').' → logprob: -19.125263214111328

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006098719779402018
    2. 'print' → logprob: -5.131098747253418
    3. ' print' → logprob: -9.381098747253418
    4. '
' → logprob: -10.256098747253418
    5. '	print' → logprob: -10.881098747253418
    6. '```' → logprob: -10.881098747253418
    7. '    
' → logprob: -11.631098747253418
    8. '(print' → logprob: -13.256098747253418
    9. '   ' → logprob: -14.006098747253418
    10. '<|end|>' → logprob: -14.756098747253418

Token 491: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.045966967940330505
    2. '   ' → logprob: -3.795966863632202
    3. ' print' → logprob: -3.795966863632202
    4. '	print' → logprob: -12.795967102050781
    5. '```' → logprob: -14.045967102050781
    6. '(print' → logprob: -15.170967102050781
    7. '.print' → logprob: -16.29596710205078
    8. '_print' → logprob: -16.42096710205078
    9. '
' → logprob: -16.92096710205078
    10. '#print' → logprob: -18.29596710205078

Token 492: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.10126758366823196
    2. '(' → logprob: -2.3512675762176514
    3. '(_' → logprob: -7.4762678146362305
    4. '(result' → logprob: -7.8512678146362305
    5. '(ans' → logprob: -10.35126781463623
    6. '_' → logprob: -11.10126781463623
    7. '_results' → logprob: -11.35126781463623
    8. '_RESULT' → logprob: -11.72626781463623
    9. ' (' → logprob: -11.85126781463623
    10. '_(' → logprob: -11.97626781463623

Token 493: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. '(answer' → logprob: -15.875006675720215
    4. ' (' → logprob: -15.875006675720215
    5. '(
' → logprob: -17.2500057220459
    6. '(an' → logprob: -18.1250057220459
    7. '(op' → logprob: -19.6250057220459
    8. '```' → logprob: -20.0000057220459
    9. 'ans' → logprob: -20.2500057220459
    10. '(arr' → logprob: -20.5000057220459

Token 494: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ')
' → logprob: -12.250012397766113
    3. '()' → logprob: -12.500012397766113
    4. '())' → logprob: -12.750012397766113
    5. ' )' → logprob: -15.000012397766113
    6. ')`' → logprob: -16.750011444091797
    7. '))' → logprob: -17.750011444091797
    8. '`)' → logprob: -18.125011444091797
    9. '   ' → logprob: -19.250011444091797
    10. '(' → logprob: -19.250011444091797

Token 495: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.607391408877447e-05
    2. '
' → logprob: -10.875036239624023
    3. ' if' → logprob: -11.625036239624023
    4. '```' → logprob: -12.000036239624023
    5. '#' → logprob: -14.000036239624023
    6. '<|end|>' → logprob: -14.500036239624023
    7. 'main' → logprob: -15.375036239624023
    8. '\' → logprob: -15.875036239624023
    9. '

' → logprob: -16.875036239624023
    10. '#if' → logprob: -17.125036239624023

Token 496: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4294889569282532
    2. '__' → logprob: -1.0544888973236084
    3. '_' → logprob: -7.6794891357421875
    4. ' ' → logprob: -8.304489135742188
    5. '_name' → logprob: -10.429489135742188
    6. ' ' → logprob: -10.929489135742188
    7. '​' → logprob: -12.054489135742188
    8. '___' → logprob: -12.054489135742188
    9. ' ' → logprob: -12.429489135742188
    10. 'name' → logprob: -12.679489135742188

Token 497: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14044691622257233
    2. ' ==' → logprob: -2.265446901321411
    3. '==' → logprob: -3.640446901321411
    4. ' __' → logprob: -7.14044713973999
    5. '=="' → logprob: -9.640446662902832
    6. '=='' → logprob: -9.890446662902832
    7. '[' → logprob: -10.515446662902832
    8. '.__' → logprob: -11.140446662902832
    9. '__.__' → logprob: -11.515446662902832
    10. '_' → logprob: -12.140446662902832

Token 498: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4378848391061183e-05
    2. '==' → logprob: -11.625014305114746
    3. '__.__' → logprob: -12.625014305114746
    4. ' ==' → logprob: -13.375014305114746
    5. '___' → logprob: -15.500014305114746
    6. '=="' → logprob: -16.625015258789062
    7. '__('' → logprob: -16.625015258789062
    8. '____' → logprob: -17.250015258789062
    9. '_' → logprob: -17.375015258789062
    10. '__.' → logprob: -17.625015258789062

Token 499: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.30855292081832886
    2. '==' → logprob: -1.5585529804229736
    3. ' ==' → logprob: -2.9335529804229736
    4. '=="' → logprob: -6.4335527420043945
    5. '=='' → logprob: -8.808552742004395
    6. '=' → logprob: -9.933552742004395
    7. '==
' → logprob: -11.433552742004395
    8. '_' → logprob: -11.558552742004395
    9. '===' → logprob: -11.933552742004395
    10. '___' → logprob: -12.308552742004395

Token 500: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023270288482308388
    2. ''' → logprob: -3.77327036857605
    3. ' "__' → logprob: -10.898270606994629
    4. '__' → logprob: -12.148270606994629
    5. ' '__' → logprob: -14.273270606994629
    6. '"user' → logprob: -16.523269653320312
    7. '"name' → logprob: -16.523269653320312
    8. '("__' → logprob: -17.648269653320312
    9. ''"' → logprob: -17.898269653320312
    10. '('__' → logprob: -18.523269653320312

Token 501: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00691937655210495
    2. 'name' → logprob: -5.0069193840026855
    3. '__' → logprob: -8.506918907165527
    4. '__':
' → logprob: -14.006918907165527
    5. '__.' → logprob: -14.506918907165527
    6. 'm' → logprob: -15.381918907165527
    7. '_main' → logprob: -15.756918907165527
    8. 'if' → logprob: -16.131919860839844
    9. '__
' → logprob: -16.256919860839844
    10. '_name' → logprob: -17.506919860839844

Token 502: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014327213168144226
    2. '__' → logprob: -4.264327049255371
    3. '__:' → logprob: -9.639327049255371
    4. '__":
' → logprob: -10.139327049255371
    5. ':' → logprob: -10.139327049255371
    6. '_' → logprob: -11.514327049255371
    7. '':' → logprob: -12.139327049255371
    8. '':
' → logprob: -12.764327049255371
    9. '___' → logprob: -15.639327049255371
    10. '```' → logprob: -15.764327049255371

Token 503: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08713975548744202
    2. ' main' → logprob: -2.587139844894409
    3. '	main' → logprob: -5.33713960647583
    4. '   ' → logprob: -5.71213960647583
    5. '_main' → logprob: -10.212140083312988
    6. '    
' → logprob: -10.337140083312988
    7. '(main' → logprob: -11.212140083312988
    8. '
' → logprob: -11.587140083312988
    9. '```' → logprob: -13.337140083312988
    10. '__' → logprob: -13.587140083312988

Token 504: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -22.0
    4. '_main' → logprob: -23.75
    5. '.main' → logprob: -25.875
    6. '(main' → logprob: -26.0
    7. '   ' → logprob: -26.0
    8. '__' → logprob: -27.625
    9. 'Main' → logprob: -27.625
    10. '```' → logprob: -28.875

Token 505: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 503
Tokens correctement prédits (1ère position, stricte): 239
Tokens correctement prédits (1ère position, avec adaptation): 264
Tokens correctement prédits (top 10): 439
Précision stricte (1ère position): 47.51%
Précision adaptée (1ère position): 52.49%
Précision (top 10): 87.28%
================================================================================
