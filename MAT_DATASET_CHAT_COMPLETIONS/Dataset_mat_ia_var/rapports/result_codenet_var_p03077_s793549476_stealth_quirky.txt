================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import __truediv__ as _div
from functools import reduce

get = lambda: int(input())
pool = [get() for _ in range(6)]
N = pool.pop(0)
strange_pick = sorted(pool)[0]
lucky = lambda x, y: int(x // y) + bool(x % y)
steps = lucky(N, strange_pick) + (2 << 1)
print(steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' __' (ID: 2516)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7355836629867554
    2. ' item' → logprob: -0.9855836629867554
    3. 'item' → logprob: -2.110583782196045
    4. 'import' → logprob: -4.110583782196045
    5. ' add' → logprob: -5.360583782196045
    6. 'add' → logprob: -6.360583782196045
    7. ' ' → logprob: -6.735583782196045
    8. 'attr' → logprob: -7.235583782196045
    9. ' attr' → logprob: -7.485583782196045
    10. 'getitem' → logprob: -7.985583782196045

Token 4: 'tr' (ID: 371)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5953217148780823
    2. 'add' → logprob: -0.8453217148780823
    3. 'getitem' → logprob: -5.2203216552734375
    4. 'item' → logprob: -5.3453216552734375
    5. 'name' → logprob: -5.9703216552734375
    6. 'eq' → logprob: -6.8453216552734375
    7. 'all' → logprob: -7.2203216552734375
    8. 'pow' → logprob: -7.7203216552734375
    9. 'i' → logprob: -7.9703216552734375
    10. 'neg' → logprob: -7.9703216552734375

Token 5: 'ued' (ID: 5829)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6653127074241638
    2. 'ue' → logprob: -1.6653127670288086
    3. 'ued' → logprob: -1.6653127670288086
    4. '__' → logprob: -2.2903127670288086
    5. '_' → logprob: -5.290312767028809
    6. '_u' → logprob: -7.790312767028809
    7. 'ut' → logprob: -8.040312767028809
    8. 'uth' → logprob: -8.415312767028809
    9. 'uet' → logprob: -9.665312767028809
    10. '___' → logprob: -9.790312767028809

Token 6: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.0802738870552275e-05
    2. 'ivr' → logprob: -12.87501049041748
    3. 'i' → logprob: -13.12501049041748
    4. 'vi' → logprob: -13.25001049041748
    5. '__' → logprob: -14.00001049041748
    6. 'ivi' → logprob: -14.00001049041748
    7. ' iv' → logprob: -14.12501049041748
    8. '_iv' → logprob: -14.25001049041748
    9. 'ivt' → logprob: -14.37501049041748
    10. 'v' → logprob: -14.50001049041748

Token 7: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027004971634596586
    2. '.' → logprob: -7.377700328826904
    3. ' (' → logprob: -7.377700328826904
    4. ',' → logprob: -7.502700328826904
    5. '[' → logprob: -8.877700805664062
    6. '\(' → logprob: -8.877700805664062
    7. '_' → logprob: -9.377700805664062
    8. ''' → logprob: -9.377700805664062
    9. '\' → logprob: -9.627700805664062
    10. ' ' → logprob: -9.877700805664062

Token 8: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003826795145869255
    2. '.' → logprob: -6.62882661819458
    3. ' (' → logprob: -7.00382661819458
    4. ',' → logprob: -7.87882661819458
    5. ' ' → logprob: -8.503827095031738
    6. '(
' → logprob: -8.628827095031738
    7. '_' → logprob: -9.003827095031738
    8. 'a' → logprob: -9.253827095031738
    9. '<|end|>' → logprob: -9.253827095031738
    10. ')' → logprob: -9.503827095031738

Token 9: ' _' (ID: 1175)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07884659618139267
    2. ' tr' → logprob: -3.2038466930389404
    3. 'div' → logprob: -3.4538466930389404
    4. ' div' → logprob: -5.828846454620361
    5. '__' → logprob: -8.32884693145752
    6. '```' → logprob: -9.20384693145752
    7. 'tru' → logprob: -9.45384693145752
    8. '_tr' → logprob: -9.70384693145752
    9. '	tr' → logprob: -10.32884693145752
    10. '_div' → logprob: -10.57884693145752

Token 10: 'div' (ID: 862)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12889960408210754
    2. '/' → logprob: -2.878899574279785
    3. '__' → logprob: -3.003899574279785
    4. '<|end|>' → logprob: -5.128899574279785
    5. 'div' → logprob: -6.253899574279785
    6. '_/' → logprob: -6.378899574279785
    7. '_div' → logprob: -6.503899574279785
    8. '```' → logprob: -6.628899574279785
    9. '*' → logprob: -7.253899574279785
    10. '/_' → logprob: -8.878899574279785

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03892039507627487
    2. ',' → logprob: -3.5389204025268555
    3. '_' → logprob: -5.4139204025268555
    4. '\(' → logprob: -6.9139204025268555
    5. '.' → logprob: -7.1639204025268555
    6. ' (' → logprob: -7.5389204025268555
    7. '\n' → logprob: -7.9139204025268555
    8. '\' → logprob: -7.9139204025268555
    9. '(
' → logprob: -8.288920402526855
    10. '#' → logprob: -8.413920402526855

Token 12: 'from' (ID: 2845)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19266827404499054
    2. '(' → logprob: -2.5676681995391846
    3. ',' → logprob: -3.3176681995391846
    4. '\' → logprob: -3.8176681995391846
    5. '\n' → logprob: -4.567668437957764
    6. ' ' → logprob: -4.817668437957764
    7. '__' → logprob: -5.317668437957764
    8. '
' → logprob: -5.442668437957764
    9. '<|end|>' → logprob: -6.192668437957764
    10. '' → logprob: -6.442668437957764

Token 13: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5871436595916748
    2. 'math' → logprob: -1.5871436595916748
    3. ' functools' → logprob: -1.8371436595916748
    4. 'fun' → logprob: -3.462143659591675
    5. ' operator' → logprob: -3.962143659591675
    6. 'operator' → logprob: -4.087143898010254
    7. '_math' → logprob: -5.712143898010254
    8. ' itertools' → logprob: -5.712143898010254
    9. '_' → logprob: -6.087143898010254
    10. '__' → logprob: -6.837143898010254

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.38833242654800415
    2. 'import' → logprob: -1.1383323669433594
    3. '_import' → logprob: -6.638332366943359
    4. '	import' → logprob: -9.13833236694336
    5. '_' → logprob: -10.76333236694336
    6. ' _' → logprob: -12.13833236694336
    7. ' ' → logprob: -12.38833236694336
    8. 'from' → logprob: -12.63833236694336
    9. ' ' → logprob: -13.51333236694336
    10. ' importar' → logprob: -13.63833236694336

Token 15: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.49262285232543945
    2. 'wrap' → logprob: -1.3676228523254395
    3. 'reduce' → logprob: -2.6176228523254395
    4. ' wraps' → logprob: -3.1176228523254395
    5. ' partial' → logprob: -4.4926228523254395
    6. 'l' → logprob: -5.9926228523254395
    7. '_wrap' → logprob: -7.2426228523254395
    8. 'cached' → logprob: -7.8676228523254395
    9. ' reduce' → logprob: -8.117622375488281
    10. '_partial' → logprob: -8.117622375488281

Token 16: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3731418550014496
    2. '(
' → logprob: -1.623141884803772
    3. '_' → logprob: -3.4981417655944824
    4. 'def' → logprob: -3.6231417655944824
    5. '
' → logprob: -4.248141765594482
    6. ',' → logprob: -5.123141765594482
    7. '`' → logprob: -5.373141765594482
    8. '_
' → logprob: -5.623141765594482
    9. '```' → logprob: -5.623141765594482
    10. '\n' → logprob: -5.748141765594482

Token 17: 'get' (ID: 522)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9724239110946655
    2. '(
' → logprob: -1.0974239110946655
    3. '(' → logprob: -1.3474239110946655
    4. '(lambda' → logprob: -4.597424030303955
    5. ',' → logprob: -5.347424030303955
    6. '\n' → logprob: -5.972424030303955
    7. '```' → logprob: -5.972424030303955
    8. '`' → logprob: -6.097424030303955
    9. '_' → logprob: -7.097424030303955
    10. '\' → logprob: -7.222424030303955

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07542704790830612
    2. 'attr' → logprob: -2.9504270553588867
    3. ' _' → logprob: -4.200427055358887
    4. '_attr' → logprob: -5.950427055358887
    5. '_item' → logprob: -6.575427055358887
    6. 'ter' → logprob: -7.825427055358887
    7. '_div' → logprob: -7.825427055358887
    8. 'item' → logprob: -8.950427055358887
    9. '_attribute' → logprob: -9.700427055358887
    10. '_value' → logprob: -10.325427055358887

Token 19: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7661981582641602
    2. ' get' → logprob: -2.01619815826416
    3. ' _' → logprob: -2.01619815826416
    4. ' getattr' → logprob: -2.26619815826416
    5. 'get' → logprob: -3.01619815826416
    6. 'lambda' → logprob: -3.39119815826416
    7. ' reduce' → logprob: -3.51619815826416
    8. '_' → logprob: -3.89119815826416
    9. 'reduce' → logprob: -4.14119815826416
    10. ' ' → logprob: -5.64119815826416

Token 20: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1407114714384079
    2. ' lst' → logprob: -2.890711545944214
    3. ' obj' → logprob: -3.390711545944214
    4. 'x' → logprob: -4.890711307525635
    5. ' f' → logprob: -5.140711307525635
    6. ' lambda' → logprob: -5.515711307525635
    7. ' a' → logprob: -5.640711307525635
    8. ' r' → logprob: -6.015711307525635
    9. ' iterable' → logprob: -6.015711307525635
    10. 'lst' → logprob: -6.265711307525635

Token 21: ' int' (ID: 677)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8107277750968933
    2. ' reduce' → logprob: -2.310727834701538
    3. '_' → logprob: -2.435727834701538
    4. 'lambda' → logprob: -2.685727834701538
    5. '__' → logprob: -2.935727834701538
    6. ' lambda' → logprob: -3.060727834701538
    7. ' input' → logprob: -3.310727834701538
    8. ' _' → logprob: -3.435727834701538
    9. 'input' → logprob: -3.560727834701538
    10. ' ' → logprob: -4.560727596282959

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1849827915430069
    2. '(input' → logprob: -1.9349827766418457
    3. 'input' → logprob: -5.184982776641846
    4. '_' → logprob: -5.559982776641846
    5. '(next' → logprob: -5.809982776641846
    6. '('' → logprob: -6.059982776641846
    7. '((' → logprob: -6.684982776641846
    8. '(get' → logprob: -6.934982776641846
    9. '(x' → logprob: -7.059982776641846
    10. '32' → logprob: -7.559982776641846

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3922732174396515
    2. '()' → logprob: -1.267273187637329
    3. '(' → logprob: -3.392273187637329
    4. ')' → logprob: -5.767273426055908
    5. '()))' → logprob: -6.517273426055908
    6. '(()' → logprob: -6.642273426055908
    7. '('' → logprob: -6.642273426055908
    8. '`()' → logprob: -7.892273426055908
    9. '(""))' → logprob: -8.14227294921875
    10. ' ())' → logprob: -8.26727294921875

Token 24: 'pool' (ID: 16535)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20860989391803741
    2. '(
' → logprob: -2.0836098194122314
    3. 'def' → logprob: -3.5836098194122314
    4. ')' → logprob: -5.0836100578308105
    5. 'a' → logprob: -5.0836100578308105
    6. '_' → logprob: -5.5836100578308105
    7. '(n' → logprob: -6.0836100578308105
    8. 'x' → logprob: -6.2086100578308105
    9. '()' → logprob: -6.3336100578308105
    10. '\n' → logprob: -6.5836100578308105

Token 25: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0269100666046143
    2. '[' → logprob: -1.2769100666046143
    3. ')' → logprob: -1.7769100666046143
    4. ' =' → logprob: -3.1519100666046143
    5. '[:]' → logprob: -3.2769100666046143
    6. '=' → logprob: -3.4019100666046143
    7. '(' → logprob: -4.026909828186035
    8. ',' → logprob: -4.026909828186035
    9. '_' → logprob: -4.401909828186035
    10. 's' → logprob: -5.276909828186035

Token 26: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5549433827400208
    2. '[' → logprob: -0.9299433827400208
    3. 'list' → logprob: -4.179943561553955
    4. 'range' → logprob: -5.179943561553955
    5. ' []' → logprob: -5.679943561553955
    6. '[int' → logprob: -6.554943561553955
    7. ' [' → logprob: -6.554943561553955
    8. '[list' → logprob: -6.804943561553955
    9. '[]}' → logprob: -7.429943561553955
    10. '{}' → logprob: -7.679943561553955

Token 27: 'get' (ID: 522)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2710132598876953
    2. '1' → logprob: -1.6460132598876953
    3. '100' → logprob: -4.271013259887695
    4. ')' → logprob: -4.521013259887695
    5. ']' → logprob: -5.521013259887695
    6. '10' → logprob: -6.146013259887695
    7. ' ' → logprob: -6.146013259887695
    8. '   ' → logprob: -6.271013259887695
    9. '])' → logprob: -7.146013259887695
    10. '20' → logprob: -7.271013259887695

Token 28: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8509766459465027
    2. '(),' → logprob: -1.4759767055511475
    3. '())' → logprob: -1.6009767055511475
    4. '()),' → logprob: -2.1009767055511475
    5. '()]' → logprob: -3.9759767055511475
    6. '()],' → logprob: -6.850976467132568
    7. ')' → logprob: -8.725976943969727
    8. '),' → logprob: -9.600976943969727
    9. ')]' → logprob: -9.725976943969727
    10. '());' → logprob: -10.350976943969727

Token 29: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6086328625679016
    2. ',' → logprob: -0.9836328625679016
    3. ')]' → logprob: -2.983632802963257
    4. '),' → logprob: -4.733633041381836
    5. ']' → logprob: -5.108633041381836
    6. 'for' → logprob: -5.483633041381836
    7. ' for' → logprob: -5.483633041381836
    8. '()]' → logprob: -6.358633041381836
    9. '()' → logprob: -6.483633041381836
    10. '())' → logprob: -6.733633041381836

Token 30: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005862309597432613
    2. 'range' → logprob: -5.880862236022949
    3. '_' → logprob: -6.005862236022949
    4. ' _' → logprob: -7.880862236022949
    5. ' ' → logprob: -9.13086223602295
    6. '(range' → logprob: -9.75586223602295
    7. '_range' → logprob: -10.50586223602295
    8. '	range' → logprob: -11.50586223602295
    9. ' xrange' → logprob: -12.63086223602295
    10. ' i' → logprob: -13.63086223602295

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11293059587478638
    2. 'range' → logprob: -2.9879305362701416
    3. ' range' → logprob: -2.9879305362701416
    4. 'in' → logprob: -5.237930774688721
    5. ' ' → logprob: -7.487930774688721
    6. '  ' → logprob: -10.112930297851562
    7. '_range' → logprob: -11.237930297851562
    8. ' xrange' → logprob: -11.237930297851562
    9. '<|end|>' → logprob: -11.362930297851562
    10. '_' → logprob: -11.362930297851562

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022950410842896
    2. ' range' → logprob: -1.9102294445037842
    3. ' ' → logprob: -13.535229682922363
    4. 'iter' → logprob: -14.035229682922363
    5. '[' → logprob: -14.535229682922363
    6. '	range' → logprob: -14.660229682922363
    7. '(range' → logprob: -14.785229682922363
    8. 'r' → logprob: -15.035229682922363
    9. 'ran' → logprob: -15.285229682922363
    10. 'rang' → logprob: -15.410229682922363

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.228561349213123e-05
    2. '4' → logprob: -10.500052452087402
    3. ' (' → logprob: -12.250052452087402
    4. '3' → logprob: -12.375052452087402
    5. '8' → logprob: -12.500052452087402
    6. '10' → logprob: -12.625052452087402
    7. '5' → logprob: -12.750052452087402
    8. '6' → logprob: -13.250052452087402
    9. '(int' → logprob: -14.000052452087402
    10. '(n' → logprob: -14.500052452087402

Token 34: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0525531768798828
    2. '3' → logprob: -1.5525531768798828
    3. '4' → logprob: -1.5525531768798828
    4. '10' → logprob: -1.8025531768798828
    5. '6' → logprob: -3.302553176879883
    6. '8' → logprob: -4.802553176879883
    7. '7' → logprob: -4.927553176879883
    8. '2' → logprob: -5.552553176879883
    9. '9' → logprob: -5.927553176879883
    10. ' ' → logprob: -6.927553176879883

Token 35: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000618792837485671
    2. ')' → logprob: -7.875618934631348
    3. ']' → logprob: -8.375618934631348
    4. ')])' → logprob: -12.750618934631348
    5. ')],' → logprob: -13.125618934631348
    6. '])' → logprob: -14.125618934631348
    7. '])]' → logprob: -14.250618934631348
    8. '),' → logprob: -14.375618934631348
    9. ')]
' → logprob: -15.375618934631348
    10. ' )' → logprob: -15.625618934631348

Token 36: 'N' (ID: 45)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5463926196098328
    2. ')' → logprob: -2.5463926792144775
    3. '_' → logprob: -2.5463926792144775
    4. 'def' → logprob: -2.9213926792144775
    5. '_
' → logprob: -3.1713926792144775
    6. 'result' → logprob: -3.7963926792144775
    7. ']
' → logprob: -4.046392440795898
    8. '#' → logprob: -4.171392440795898
    9. '_div' → logprob: -4.421392440795898
    10. '[' → logprob: -4.546392440795898

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38988953828811646
    2. '=' → logprob: -1.1398894786834717
    3. '_' → logprob: -6.389889717102051
    4. ' ' → logprob: -7.889889717102051
    5. ',' → logprob: -8.63988971710205
    6. ')' → logprob: -8.76488971710205
    7. '.' → logprob: -9.13988971710205
    8. '[' → logprob: -9.13988971710205
    9. 's' → logprob: -9.63988971710205
    10. '  ' → logprob: -9.88988971710205

Token 38: ' pool' (ID: 8389)
  Prédit: ' pool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pool' → logprob: -0.4666122794151306
    2. 'pool' → logprob: -1.2166123390197754
    3. ' get' → logprob: -3.9666123390197754
    4. ' ' → logprob: -4.216612339019775
    5. ' len' → logprob: -4.341612339019775
    6. ' int' → logprob: -4.466612339019775
    7. 'get' → logprob: -5.466612339019775
    8. '6' → logprob: -5.841612339019775
    9. 'len' → logprob: -6.091612339019775
    10. ' sum' → logprob: -6.466612339019775

Token 39: '.pop' (ID: 15746)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019915366545319557
    2. '[:]' → logprob: -4.644915580749512
    3. '[-' → logprob: -5.269915580749512
    4. '.' → logprob: -6.144915580749512
    5. '.copy' → logprob: -6.644915580749512
    6. '[:' → logprob: -8.144915580749512
    7. '[]' → logprob: -8.644915580749512
    8. '[N' → logprob: -8.769915580749512
    9. '[len' → logprob: -8.769915580749512
    10. '[int' → logprob: -8.894915580749512

Token 40: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007627923507243395
    2. '(' → logprob: -4.882627964019775
    3. '()
' → logprob: -11.757627487182617
    4. '()(' → logprob: -12.257627487182617
    5. '(-' → logprob: -12.632627487182617
    6. '()`' → logprob: -13.757627487182617
    7. '()]' → logprob: -14.007627487182617
    8. '(
' → logprob: -14.757627487182617
    9. ' ()' → logprob: -14.882627487182617
    10. '();' → logprob: -14.882627487182617

Token 41: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5822320580482483
    2. '0' → logprob: -0.8322320580482483
    3. '-' → logprob: -5.0822319984436035
    4. '()' → logprob: -10.332232475280762
    5. '))' → logprob: -11.832232475280762
    6. '())' → logprob: -11.957232475280762
    7. '1' → logprob: -12.332232475280762
    8. '(' → logprob: -12.457232475280762
    9. ')
' → logprob: -12.957232475280762
    10. ' ' → logprob: -13.207232475280762

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.250004768371582
    4. '))' → logprob: -15.750004768371582
    5. '),' → logprob: -16.6250057220459
    6. ')

' → logprob: -17.5000057220459
    7. ')`' → logprob: -17.5000057220459
    8. ')>' → logprob: -18.3750057220459
    9. ')))' → logprob: -18.3750057220459
    10. ')#' → logprob: -18.3750057220459

Token 43: 'str' (ID: 689)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25494953989982605
    2. 'res' → logprob: -3.0049495697021484
    3. 'results' → logprob: -3.7549495697021484
    4. 'for' → logprob: -3.8799495697021484
    5. 'def' → logprob: -4.004949569702148
    6. 'answer' → logprob: -4.504949569702148
    7. ')' → logprob: -4.629949569702148
    8. 'ans' → logprob: -4.754949569702148
    9. '*' → logprob: -4.879949569702148
    10. 'while' → logprob: -4.879949569702148

Token 44: 'ange' (ID: 1052)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6938526630401611
    2. 'ings' → logprob: -1.6938526630401611
    3. 'ing' → logprob: -1.8188526630401611
    4. 'e' → logprob: -2.943852663040161
    5. 'pool' → logprob: -3.318852663040161
    6. 'eam' → logprob: -3.818852663040161
    7. '_pool' → logprob: -4.443852424621582
    8. 'ength' → logprob: -5.568852424621582
    9. '_nums' → logprob: -5.818852424621582
    10. 'uct' → logprob: -5.943852424621582

Token 45: '_pick' (ID: 139233)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6490550637245178
    2. '_numbers' → logprob: -1.899055004119873
    3. 's' → logprob: -2.399055004119873
    4. ' =' → logprob: -3.149055004119873
    5. '_pool' → logprob: -3.649055004119873
    6. '=' → logprob: -3.649055004119873
    7. '_nums' → logprob: -4.024055004119873
    8. '_num' → logprob: -4.149055004119873
    9. '_number' → logprob: -4.149055004119873
    10. '_n' → logprob: -4.274055004119873

Token 46: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5010612607002258
    2. '=' → logprob: -1.251061201095581
    3. ' =' → logprob: -2.251061201095581
    4. '_' → logprob: -6.87606143951416
    5. 'er' → logprob: -7.62606143951416
    6. '_s' → logprob: -8.87606143951416
    7. '=_' → logprob: -9.25106143951416
    8. 'ers' → logprob: -9.37606143951416
    9. 'up' → logprob: -9.75106143951416
    10. '1' → logprob: -9.87606143951416

Token 47: ' sorted' (ID: 20099)
  Prédit: 'pool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pool' → logprob: -0.05233225226402283
    2. ' pool' → logprob: -3.4273321628570557
    3. '[]' → logprob: -5.052332401275635
    4. 'lambda' → logprob: -6.302332401275635
    5. ' []' → logprob: -6.677332401275635
    6. 'reduce' → logprob: -6.927332401275635
    7. 'max' → logprob: -7.302332401275635
    8. '0' → logprob: -7.302332401275635
    9. '_pool' → logprob: -7.302332401275635
    10. 'min' → logprob: -7.427332401275635

Token 48: '(pool' (ID: 88303)
  Prédit: '(pool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pool' → logprob: -0.014191711321473122
    2. '(' → logprob: -4.264191627502441
    3. '(p' → logprob: -11.389191627502441
    4. '(pop' → logprob: -12.139191627502441
    5. '(range' → logprob: -13.264191627502441
    6. '<|end|>' → logprob: -13.264191627502441
    7. '(
' → logprob: -13.639191627502441
    8. '((' → logprob: -13.889191627502441
    9. '(pl' → logprob: -14.264191627502441
    10. '(po' → logprob: -14.639191627502441

Token 49: ')[' (ID: 13637)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2187110185623169
    2. '(),' → logprob: -2.8437108993530273
    3. ')' → logprob: -2.9687108993530273
    4. '(reverse' → logprob: -3.0937108993530273
    5. '()' → logprob: -3.4687108993530273
    6. '(' → logprob: -5.093710899353027
    7. '()[' → logprob: -6.718710899353027
    8. '())[' → logprob: -7.093710899353027
    9. 'reverse' → logprob: -7.593710899353027
    10. ',' → logprob: -7.843710899353027

Token 50: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2602850198745728
    2. '2' → logprob: -1.5102850198745728
    3. '1' → logprob: -1.6352850198745728
    4. '-' → logprob: -2.135284900665283
    5. '0' → logprob: -2.760284900665283
    6. ':' → logprob: -2.885284900665283
    7. '4' → logprob: -3.510284900665283
    8. '5' → logprob: -4.635284900665283
    9. '::-' → logprob: -4.760284900665283
    10. '(' → logprob: -5.885284900665283

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053617630153894424
    2. ')' → logprob: -3.0536177158355713
    3. '+' → logprob: -6.178617477416992
    4. '}' → logprob: -7.803617477416992
    5. ' ]' → logprob: -7.928617477416992
    6. ':' → logprob: -8.053617477416992
    7. '6' → logprob: -8.053617477416992
    8. ',' → logprob: -8.803617477416992
    9. ']
' → logprob: -8.803617477416992
    10. '<|end|>' → logprob: -8.803617477416992

Token 52: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2504706382751465
    2. '<|end|>' → logprob: -1.3754706382751465
    3. '+' → logprob: -2.0004706382751465
    4. '*' → logprob: -2.7504706382751465
    5. '#' → logprob: -2.7504706382751465
    6. '_' → logprob: -3.3754706382751465
    7. '=' → logprob: -3.8754706382751465
    8. '%' → logprob: -4.1254706382751465
    9. ']' → logprob: -4.2504706382751465
    10. 'for' → logprob: -4.3754706382751465

Token 53: 'ucky' (ID: 21405)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.6160231828689575
    2. 'en' → logprob: -1.6160231828689575
    3. 'ist' → logprob: -2.116023063659668
    4. 'st' → logprob: -3.991023063659668
    5. 'imit' → logprob: -4.116023063659668
    6. 'oop' → logprob: -4.241023063659668
    7. 'ast' → logprob: -4.366023063659668
    8. 'e' → logprob: -4.491023063659668
    9. 'ength' → logprob: -4.741023063659668
    10. 'im' → logprob: -5.241023063659668

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6545282006263733
    2. ' =' → logprob: -1.4045281410217285
    3. '_pick' → logprob: -2.0295281410217285
    4. '_number' → logprob: -3.0295281410217285
    5. '_numbers' → logprob: -4.0295281410217285
    6. '_num' → logprob: -4.9045281410217285
    7. '_pool' → logprob: -4.9045281410217285
    8. '_' → logprob: -6.1545281410217285
    9. '_p' → logprob: -6.4045281410217285
    10. '_draw' → logprob: -6.5295281410217285

Token 55: ' lambda' (ID: 27871)
  Prédit: ' pool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pool' → logprob: -1.511164903640747
    2. ' _' → logprob: -1.761164903640747
    3. '_str' → logprob: -2.011164903640747
    4. 'str' → logprob: -2.136164903640747
    5. '_div' → logprob: -2.886164903640747
    6. '_pool' → logprob: -3.136164903640747
    7. 'reduce' → logprob: -3.136164903640747
    8. 'pool' → logprob: -3.261164903640747
    9. ' N' → logprob: -3.511164903640747
    10. ' reduce' → logprob: -4.011164665222168

Token 56: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2870335280895233
    2. 'x' → logprob: -1.6620335578918457
    3. ' a' → logprob: -3.9120335578918457
    4. ' n' → logprob: -4.412033557891846
    5. 'a' → logprob: -4.537033557891846
    6. ' s' → logprob: -5.662033557891846
    7. 'n' → logprob: -5.787033557891846
    8. ' pool' → logprob: -6.162033557891846
    9. 's' → logprob: -7.037033557891846
    10. ' i' → logprob: -7.287033557891846

Token 57: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001729921787045896
    2. ' :' → logprob: -6.626729965209961
    3. ',' → logprob: -8.501729965209961
    4. ':x' → logprob: -9.501729965209961
    5. ':_' → logprob: -10.376729965209961
    6. '_:' → logprob: -10.501729965209961
    7. '=' → logprob: -11.001729965209961
    8. 'x' → logprob: -11.876729965209961
    9. ':
' → logprob: -12.251729965209961
    10. '_' → logprob: -12.376729965209961

Token 58: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20499970018863678
    2. ' y' → logprob: -1.8299996852874756
    3. 'n' → logprob: -5.579999923706055
    4. 'i' → logprob: -5.704999923706055
    5. 'arr' → logprob: -6.204999923706055
    6. 'a' → logprob: -6.329999923706055
    7. 'k' → logprob: -6.704999923706055
    8. 'lst' → logprob: -6.704999923706055
    9. 'b' → logprob: -6.829999923706055
    10. 'r' → logprob: -7.204999923706055

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017733541317284107
    2. ' :' → logprob: -7.126773357391357
    3. ',' → logprob: -7.751773357391357
    4. ':_' → logprob: -7.751773357391357
    5. '=' → logprob: -10.3767728805542
    6. ':x' → logprob: -11.0017728805542
    7. '_:' → logprob: -11.1267728805542
    8. ',:' → logprob: -11.5017728805542
    9. ',_' → logprob: -11.6267728805542
    10. ':return' → logprob: -12.7517728805542

Token 60: ' int' (ID: 677)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.6314259767532349
    2. ' _' → logprob: -1.3814259767532349
    3. ' x' → logprob: -2.0064258575439453
    4. 'x' → logprob: -3.3814258575439453
    5. ' y' → logprob: -4.881425857543945
    6. ' ' → logprob: -5.131425857543945
    7. 'y' → logprob: -5.506425857543945
    8. 'a' → logprob: -5.881425857543945
    9. ' (' → logprob: -6.006425857543945
    10. ' str' → logprob: -6.006425857543945

Token 61: '(x' (ID: 4061)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.21532683074474335
    2. '(' → logprob: -2.3403267860412598
    3. '(x' → logprob: -2.9653267860412598
    4. '((' → logprob: -4.59032678604126
    5. '(str' → logprob: -5.09032678604126
    6. '(not' → logprob: -5.21532678604126
    7. '((_' → logprob: -5.21532678604126
    8. '(__' → logprob: -5.59032678604126
    9. '(bool' → logprob: -5.71532678604126
    10. '(round' → logprob: -5.84032678604126

Token 62: ' //' (ID: 602)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6617891192436218
    2. '/' → logprob: -1.7867891788482666
    3. '/y' → logprob: -2.7867891788482666
    4. ' %' → logprob: -2.9117891788482666
    5. '%' → logprob: -3.0367891788482666
    6. '==' → logprob: -3.4117891788482666
    7. '*' → logprob: -4.2867889404296875
    8. '+' → logprob: -4.7867889404296875
    9. '*y' → logprob: -4.7867889404296875
    10. ')' → logprob: -4.9117889404296875

Token 63: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012559685856103897
    2. ' y' → logprob: -4.38755989074707
    3. ' ' → logprob: -11.38755989074707
    4. '2' → logprob: -11.51255989074707
    5. '(' → logprob: -12.26255989074707
    6. ' (' → logprob: -12.51255989074707
    7. '(y' → logprob: -12.51255989074707
    8. '  ' → logprob: -13.01255989074707
    9. '	y' → logprob: -13.13755989074707
    10. ' ' → logprob: -13.63755989074707

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017433916218578815
    2. '))' → logprob: -9.125174522399902
    3. ' )' → logprob: -10.625174522399902
    4. ')
' → logprob: -12.000174522399902
    5. '),' → logprob: -12.250174522399902
    6. '**' → logprob: -12.375174522399902
    7. ' if' → logprob: -12.625174522399902
    8. ')**' → logprob: -12.625174522399902
    9. ',' → logprob: -13.250174522399902
    10. 'if' → logprob: -13.250174522399902

Token 65: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33745381236076355
    2. ')' → logprob: -1.837453842163086
    3. '(
' → logprob: -3.212453842163086
    4. '*' → logprob: -3.712453842163086
    5. '
' → logprob: -4.462453842163086
    6. '\n' → logprob: -4.462453842163086
    7. '<|end|>' → logprob: -4.587453842163086
    8. '#' → logprob: -5.212453842163086
    9. ',' → logprob: -5.837453842163086
    10. '\' → logprob: -6.087453842163086

Token 66: ' bool' (ID: 3792)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8421593308448792
    2. ' (' → logprob: -1.2171592712402344
    3. 'int' → logprob: -2.9671592712402344
    4. ' ' → logprob: -2.9671592712402344
    5. ' int' → logprob: -3.0921592712402344
    6. '(int' → logprob: -3.3421592712402344
    7. ' lucky' → logprob: -3.5921592712402344
    8. '(x' → logprob: -3.8421592712402344
    9. 'l' → logprob: -4.342159271240234
    10. ' x' → logprob: -4.967159271240234

Token 67: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2541227638721466
    2. '(x' → logprob: -1.7541227340698242
    3. '((' → logprob: -3.129122734069824
    4. '(y' → logprob: -5.004122734069824
    5. '(bool' → logprob: -8.004122734069824
    6. '(not' → logprob: -8.754122734069824
    7. '(((' → logprob: -9.379122734069824
    8. '(int' → logprob: -9.879122734069824
    9. ' (' → logprob: -10.004122734069824
    10. '(abs' → logprob: -10.129122734069824

Token 68: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6933313608169556
    2. ' %' → logprob: -0.6933313608169556
    3. '%x' → logprob: -9.443331718444824
    4. ' ' → logprob: -9.943331718444824
    5. '%b' → logprob: -11.693331718444824
    6. '%i' → logprob: -11.818331718444824
    7. '%e' → logprob: -12.068331718444824
    8. 'and' → logprob: -12.443331718444824
    9. ' ' → logprob: -12.443331718444824
    10. '%d' → logprob: -12.568331718444824

Token 69: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024788661394268274
    2. ' y' → logprob: -6.002479076385498
    3. ' ' → logprob: -13.75247859954834
    4. '>' → logprob: -14.75247859954834
    5. 'div' → logprob: -15.12747859954834
    6. 'x' → logprob: -15.37747859954834
    7. '<|end|>' → logprob: -15.75247859954834
    8. '	y' → logprob: -16.002479553222656
    9. '7' → logprob: -16.127479553222656
    10. '2' → logprob: -16.127479553222656

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010354319238103926
    2. '))' → logprob: -9.625103950500488
    3. ')
' → logprob: -10.625103950500488
    4. ')))' → logprob: -12.125103950500488
    5. ' )' → logprob: -13.000103950500488
    6. '),' → logprob: -13.875103950500488
    7. '')' → logprob: -14.125103950500488
    8. '   ' → logprob: -14.750103950500488
    9. ')}}' → logprob: -14.750103950500488
    10. ')}' → logprob: -15.000103950500488

Token 71: 'steps' (ID: 27176)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7479791641235352
    2. ')' → logprob: -1.2479791641235352
    3. '*' → logprob: -2.622979164123535
    4. 'def' → logprob: -3.247979164123535
    5. 'for' → logprob: -3.497979164123535
    6. '(
' → logprob: -3.497979164123535
    7. 'result' → logprob: -3.872979164123535
    8. '[' → logprob: -5.122979164123535
    9. '#' → logprob: -5.122979164123535
    10. 'print' → logprob: -5.247979164123535

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11895649135112762
    2. '=' → logprob: -2.7439565658569336
    3. '(' → logprob: -3.1189565658569336
    4. ',' → logprob: -6.243956565856934
    5. ' ' → logprob: -7.118956565856934
    6. '_' → logprob: -8.493956565856934
    7. '[' → logprob: -8.743956565856934
    8. ' (' → logprob: -8.868956565856934
    9. ')' → logprob: -9.493956565856934
    10. ':' → logprob: -10.368956565856934

Token 73: ' lucky' (ID: 23767)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0206592082977295
    2. 'reduce' → logprob: -1.3956592082977295
    3. '[' → logprob: -1.7706592082977295
    4. ' reduce' → logprob: -2.5206592082977295
    5. ' lambda' → logprob: -3.6456592082977295
    6. '[N' → logprob: -4.020659446716309
    7. '0' → logprob: -4.270659446716309
    8. ' ' → logprob: -4.270659446716309
    9. 'lambda' → logprob: -4.395659446716309
    10. '[str' → logprob: -4.770659446716309

Token 74: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015279646962881088
    2. '(N' → logprob: -4.765279769897461
    3. '(
' → logprob: -5.890279769897461
    4. '(pool' → logprob: -6.015279769897461
    5. '(str' → logprob: -7.390279769897461
    6. '(l' → logprob: -8.015279769897461
    7. '((' → logprob: -9.265279769897461
    8. '(_' → logprob: -9.390279769897461
    9. '(

' → logprob: -9.640279769897461
    10. '(*' → logprob: -10.140279769897461

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004950054455548525
    2. ',str' → logprob: -5.629950046539307
    3. ' ,' → logprob: -6.754950046539307
    4. ',l' → logprob: -9.879950523376465
    5. ',
' → logprob: -10.004950523376465
    6. ')' → logprob: -10.879950523376465
    7. 'str' → logprob: -11.004950523376465
    8. ' ' → logprob: -11.754950523376465
    9. '-' → logprob: -12.129950523376465
    10. ',s' → logprob: -12.129950523376465

Token 76: ' strange' (ID: 26197)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0342484712600708
    2. ' strange' → logprob: -3.4092483520507812
    3. ' str' → logprob: -7.909248352050781
    4. '2' → logprob: -10.784248352050781
    5. 'pool' → logprob: -10.971748352050781
    6. 's' → logprob: -11.159248352050781
    7. ' stranger' → logprob: -11.159248352050781
    8. ' ' → logprob: -11.284248352050781
    9. '[str' → logprob: -11.284248352050781
    10. '_str' → logprob: -11.284248352050781

Token 77: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -1.3782830137643032e-05
    2. 'pick' → logprob: -11.25001335144043
    3. '_p' → logprob: -15.37501335144043
    4. '_pickle' → logprob: -15.50001335144043
    5. 'Pick' → logprob: -16.37501335144043
    6. ' pick' → logprob: -17.37501335144043
    7. '_' → logprob: -17.62501335144043
    8. '_picker' → logprob: -17.87501335144043
    9. '_str' → logprob: -18.12501335144043
    10. '_PICK' → logprob: -18.25001335144043

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029685118352063
    2. ')
' → logprob: -9.125296592712402
    3. '))' → logprob: -9.250296592712402
    4. ',' → logprob: -10.375296592712402
    5. '(' → logprob: -11.875296592712402
    6. '),' → logprob: -12.000296592712402
    7. '*' → logprob: -12.000296592712402
    8. ')`' → logprob: -12.125296592712402
    9. ')))' → logprob: -12.500296592712402
    10. '**' → logprob: -13.000296592712402

Token 79: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7857608795166016
    2. '+' → logprob: -1.2857608795166016
    3. '\n' → logprob: -2.5357608795166016
    4. '%' → logprob: -3.2857608795166016
    5. '<|end|>' → logprob: -3.5357608795166016
    6. '(' → logprob: -3.9107608795166016
    7. ')' → logprob: -3.9107608795166016
    8. ' ' → logprob: -4.285760879516602
    9. '+
' → logprob: -4.285760879516602
    10. '\' → logprob: -4.410760879516602

Token 80: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5433074831962585
    2. '1' → logprob: -1.1683075428009033
    3. ' ' → logprob: -3.9183075428009033
    4. ' lucky' → logprob: -4.043307304382324
    5. 'sum' → logprob: -4.168307304382324
    6. 'len' → logprob: -4.668307304382324
    7. 'str' → logprob: -4.668307304382324
    8. '2' → logprob: -5.043307304382324
    9. 'pool' → logprob: -5.293307304382324
    10. ' pool' → logprob: -5.418307304382324

Token 81: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5558879971504211
    2. 'l' → logprob: -1.8058879375457764
    3. 'N' → logprob: -2.6808879375457764
    4. 'len' → logprob: -2.6808879375457764
    5. 'str' → logprob: -3.0558879375457764
    6. ' ' → logprob: -4.0558881759643555
    7. '2' → logprob: -4.6808881759643555
    8. 'pool' → logprob: -4.6808881759643555
    9. ' N' → logprob: -5.1808881759643555
    10. ' pool' → logprob: -5.4308881759643555

Token 82: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09719125926494598
    2. ' *' → logprob: -3.097191333770752
    3. '*' → logprob: -3.722191333770752
    4. ' -' → logprob: -4.597191333770752
    5. ' )' → logprob: -4.972191333770752
    6. '-' → logprob: -5.472191333770752
    7. '*l' → logprob: -7.847191333770752
    8. '+' → logprob: -8.097190856933594
    9. ')*' → logprob: -8.222190856933594
    10. '*)' → logprob: -8.847190856933594

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8357669115066528
    2. '2' → logprob: -1.7107669115066528
    3. '1' → logprob: -2.3357667922973633
    4. '3' → logprob: -2.5857667922973633
    5. '4' → logprob: -2.8357667922973633
    6. ' (' → logprob: -3.3357667922973633
    7. '0' → logprob: -3.8357667922973633
    8. '5' → logprob: -3.9607667922973633
    9. '6' → logprob: -4.585766792297363
    10. 'l' → logprob: -4.585766792297363

Token 84: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3738688230514526
    2. '1' → logprob: -1.7488688230514526
    3. '3' → logprob: -1.7488688230514526
    4. '4' → logprob: -2.373868942260742
    5. '0' → logprob: -2.748868942260742
    6. ' ' → logprob: -2.998868942260742
    7. '5' → logprob: -3.248868942260742
    8. '(' → logprob: -3.623868942260742
    9. '6' → logprob: -3.748868942260742
    10. 'len' → logprob: -3.998868942260742

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03832972049713135
    2. ' )' → logprob: -3.788329601287842
    3. '-' → logprob: -5.163329601287842
    4. ' -' → logprob: -6.288329601287842
    5. ' ' → logprob: -6.413329601287842
    6. '*' → logprob: -6.788329601287842
    7. ')-' → logprob: -6.788329601287842
    8. ')*' → logprob: -7.038329601287842
    9. '0' → logprob: -7.288329601287842
    10. '1' → logprob: -7.913329601287842

Token 86: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0690524578094482
    2. '*' → logprob: -1.9440524578094482
    3. '<|end|>' → logprob: -1.9440524578094482
    4. '+' → logprob: -2.1940524578094482
    5. '
' → logprob: -2.1940524578094482
    6. '(' → logprob: -3.6940524578094482
    7. '\n' → logprob: -3.9440524578094482
    8. '-' → logprob: -4.444052696228027
    9. '[' → logprob: -4.444052696228027
    10. ' ' → logprob: -4.569052696228027

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007921979762613773
    2. '('' → logprob: -5.757922172546387
    3. '("("' → logprob: -5.757922172546387
    4. '((' → logprob: -7.382922172546387
    5. '(l' → logprob: -8.132922172546387
    6. '(N' → logprob: -8.132922172546387
    7. '(len' → logprob: -9.382922172546387
    8. ' (' → logprob: -9.757922172546387
    9. '(str' → logprob: -10.007922172546387
    10. '(end' → logprob: -10.632922172546387

Token 88: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.02222699299454689
    2. 'str' → logprob: -4.397226810455322
    3. 'N' → logprob: -5.522226810455322
    4. 'l' → logprob: -5.897226810455322
    5. ' steps' → logprob: -6.147226810455322
    6. 'step' → logprob: -9.14722728729248
    7. '_steps' → logprob: -9.14722728729248
    8. ')' → logprob: -9.52222728729248
    9. '_' → logprob: -9.52222728729248
    10. ' N' → logprob: -9.64722728729248

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. ' )' → logprob: -10.1250581741333
    3. '))' → logprob: -11.1250581741333
    4. ')`' → logprob: -13.7500581741333
    5. '+' → logprob: -14.5000581741333
    6. ')
' → logprob: -14.6250581741333
    7. '`)' → logprob: -15.1250581741333
    8. '')' → logprob: -15.5000581741333
    9. ')#' → logprob: -15.8750581741333
    10. ' ' → logprob: -16.000059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 22.99%
Précision adaptée (1ère position): 22.99%
Précision (top 10): 58.62%
================================================================================
