================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x, y, a, b, c = input().split()
x = int(x)
y = int(y)
a = int(a)
b = int(b)
c = int(c)

p = input().split()
for i in range(len(p)):
    p[i] = int(p[i])
q = input().split()
for i in range(len(q)):
    q[i] = int(q[i])
r = input().split()
for i in range(len(r)):
    r[i] = int(r[i])

p.sort()
p.reverse()
q.sort()
q.reverse()
r.sort()
r.reverse()

p = p[0:x]
q = q[0:y]

all_list = []
for i in p:
    all_list.append(i)
for i in q:
    all_list.append(i)
for i in r:
    all_list.append(i)

all_list.sort()
all_list.reverse()

ans = 0
for i in range(x+y):
    ans += all_list[i]

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' y' (ID: 342)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06138712167739868
    2. ' =' → logprob: -3.436387062072754
    3. ',' → logprob: -3.686387062072754
    4. '+' → logprob: -7.186387062072754
    5. '.' → logprob: -7.311387062072754
    6. ' ' → logprob: -8.061387062072754
    7. ')' → logprob: -8.811387062072754
    8. '<|end|>' → logprob: -9.311387062072754
    9. '```' → logprob: -9.561387062072754
    10. '[' → logprob: -9.686387062072754

Token 4: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22634921967983246
    2. ' =' → logprob: -1.6013492345809937
    3. ',' → logprob: -7.476349353790283
    4. ' ' → logprob: -8.351348876953125
    5. ')' → logprob: -10.226348876953125
    6. 'z' → logprob: -10.226348876953125
    7. ' ,' → logprob: -11.101348876953125
    8. '.' → logprob: -11.601348876953125
    9. '_' → logprob: -11.601348876953125
    10. 'x' → logprob: -12.226348876953125

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023111922200769186
    2. ' =' → logprob: -6.2523112297058105
    3. '+' → logprob: -8.377310752868652
    4. ',' → logprob: -9.127310752868652
    5. '```' → logprob: -11.627310752868652
    6. '[' → logprob: -12.002310752868652
    7. '*' → logprob: -12.127310752868652
    8. '+=' → logprob: -12.377310752868652
    9. ' ' → logprob: -12.502310752868652
    10. '_' → logprob: -12.877310752868652

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03321394324302673
    2. ' =' → logprob: -3.9082138538360596
    3. ',' → logprob: -4.408214092254639
    4. ',b' → logprob: -9.03321361541748
    5. 'b' → logprob: -9.15821361541748
    6. ' ' → logprob: -9.15821361541748
    7. '.' → logprob: -10.28321361541748
    8. '_' → logprob: -11.03321361541748
    9. '=b' → logprob: -11.53321361541748
    10. ' b' → logprob: -11.90821361541748

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0027154763229191303
    2. ' =' → logprob: -6.502715587615967
    3. '+' → logprob: -7.252715587615967
    4. ',' → logprob: -8.252715110778809
    5. '```' → logprob: -9.877715110778809
    6. ')' → logprob: -10.502715110778809
    7. '*' → logprob: -10.627715110778809
    8. '_' → logprob: -10.627715110778809
    9. '.' → logprob: -10.877715110778809
    10. '[' → logprob: -11.252715110778809

Token 8: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029536932706832886
    2. ' =' → logprob: -5.87795352935791
    3. ',' → logprob: -8.87795352935791
    4. ')' → logprob: -13.12795352935791
    5. ' ' → logprob: -13.37795352935791
    6. '=
' → logprob: -13.50295352935791
    7. '.' → logprob: -13.75295352935791
    8. '+' → logprob: -13.75295352935791
    9. ';' → logprob: -14.25295352935791
    10. 'x' → logprob: -14.37795352935791

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005138642620295286
    2. ' =' → logprob: -5.380138874053955
    3. ',' → logprob: -8.255138397216797
    4. '+' → logprob: -8.630138397216797
    5. '```' → logprob: -11.005138397216797
    6. ')' → logprob: -11.380138397216797
    7. '_' → logprob: -11.380138397216797
    8. '.' → logprob: -11.505138397216797
    9. '[' → logprob: -12.255138397216797
    10. ':' → logprob: -12.505138397216797

Token 10: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.047730907797813416
    2. ' ' → logprob: -3.2977309226989746
    3. '1' → logprob: -4.797730922698975
    4. '[' → logprob: -6.797730922698975
    5. ' [' → logprob: -8.422730445861816
    6. 'map' → logprob: -11.297730445861816
    7. '10' → logprob: -11.922730445861816
    8. 'x' → logprob: -12.047730445861816
    9. '(' → logprob: -12.422730445861816
    10. '5' → logprob: -12.422730445861816

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004760834388434887
    2. '.' → logprob: -5.6297607421875
    3. '()' → logprob: -7.6297607421875
    4. '(
' → logprob: -8.3797607421875
    5. '[' → logprob: -8.7547607421875
    6. ''' → logprob: -9.6297607421875
    7. '(.)' → logprob: -9.8797607421875
    8. ',' → logprob: -10.3797607421875
    9. '```' → logprob: -10.7547607421875
    10. '('.')' → logprob: -11.0047607421875

Token 12: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3203864097595215
    2. '.' → logprob: -1.4453864097595215
    3. '.strip' → logprob: -4.0703864097595215
    4. 'split' → logprob: -5.1953864097595215
    5. '().' → logprob: -5.3203864097595215
    6. ',' → logprob: -5.3203864097595215
    7. '()' → logprob: -5.3203864097595215
    8. '=' → logprob: -8.19538688659668
    9. '[' → logprob: -8.69538688659668
    10. ' split' → logprob: -9.07038688659668

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037227647844702005
    2. '()' → logprob: -5.628722667694092
    3. '('' → logprob: -9.62872314453125
    4. '(
' → logprob: -10.62872314453125
    5. '(

' → logprob: -11.87872314453125
    6. '("("' → logprob: -11.87872314453125
    7. '```' → logprob: -12.25372314453125
    8. ' (' → logprob: -12.87872314453125
    9. '(`' → logprob: -13.00372314453125
    10. '`' → logprob: -13.75372314453125

Token 14: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.022498369216919
    2. '.' → logprob: -1.647498369216919
    3. '=' → logprob: -1.647498369216919
    4. ',' → logprob: -2.647498369216919
    5. '#' → logprob: -3.272498369216919
    6. '\n' → logprob: -3.272498369216919
    7. '```' → logprob: -3.647498369216919
    8. '[' → logprob: -3.897498369216919
    9. ' =' → logprob: -4.14749813079834
    10. 'a' → logprob: -4.39749813079834

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09433073550462723
    2. '+' → logprob: -3.3443307876586914
    3. '<|end|>' → logprob: -4.094330787658691
    4. '```' → logprob: -4.344330787658691
    5. '*' → logprob: -4.594330787658691
    6. '.' → logprob: -5.594330787658691
    7. '**' → logprob: -5.844330787658691
    8. ')' → logprob: -6.344330787658691
    9. '[int' → logprob: -6.469330787658691
    10. 'x' → logprob: -6.969330787658691

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00414274213835597
    2. 'float' → logprob: -6.004142761230469
    3. 'x' → logprob: -7.254142761230469
    4. ' int' → logprob: -7.379142761230469
    5. 'input' → logprob: -8.254142761230469
    6. '0' → logprob: -10.379142761230469
    7. 'a' → logprob: -11.254142761230469
    8. 'y' → logprob: -11.754142761230469
    9. ' float' → logprob: -11.879142761230469
    10. 'str' → logprob: -12.629142761230469

Token 17: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17982091009616852
    2. '(x' → logprob: -1.8048208951950073
    3. ' (' → logprob: -10.929821014404297
    4. '(
' → logprob: -11.304821014404297
    5. 'x' → logprob: -11.429821014404297
    6. '('' → logprob: -11.929821014404297
    7. '(

' → logprob: -12.054821014404297
    8. '(input' → logprob: -12.179821014404297
    9. '(`' → logprob: -12.304821014404297
    10. '(int' → logprob: -13.179821014404297

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003361774142831564
    2. '+' → logprob: -8.125336647033691
    3. ' )' → logprob: -10.500336647033691
    4. ')x' → logprob: -12.625336647033691
    5. '+)' → logprob: -13.375336647033691
    6. ' +' → logprob: -13.500336647033691
    7. ')+' → logprob: -13.750336647033691
    8. ')
' → logprob: -14.000336647033691
    9. '<|end|>' → logprob: -14.000336647033691
    10. '),' → logprob: -14.125336647033691

Token 19: 'y' (ID: 88)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13618724048137665
    2. 'y' → logprob: -2.6361873149871826
    3. '<|end|>' → logprob: -3.7611873149871826
    4. '*' → logprob: -3.8861873149871826
    5. '+
' → logprob: -6.0111870765686035
    6. 'x' → logprob: -6.1361870765686035
    7. ' y' → logprob: -6.6361870765686035
    8. '+y' → logprob: -6.6361870765686035
    9. '**' → logprob: -6.8861870765686035
    10. ',' → logprob: -7.2611870765686035

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35002991557121277
    2. '<|end|>' → logprob: -1.9750299453735352
    3. '=' → logprob: -2.850029945373535
    4. ')' → logprob: -2.975029945373535
    5. '+' → logprob: -3.475029945373535
    6. ' +' → logprob: -5.225029945373535
    7. ' +=' → logprob: -5.725029945373535
    8. '<|end|>' → logprob: -5.850029945373535
    9. ' ' → logprob: -6.600029945373535
    10. '[' → logprob: -7.225029945373535

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012439649435691535
    2. ' int' → logprob: -9.000123977661133
    3. '(int' → logprob: -14.500123977661133
    4. 'y' → logprob: -15.750123977661133
    5. 'x' → logprob: -16.750123977661133
    6. '=int' → logprob: -16.875123977661133
    7. '[int' → logprob: -17.000123977661133
    8. '<int' → logprob: -17.250123977661133
    9. 'float' → logprob: -17.625123977661133
    10. '0' → logprob: -17.875123977661133

Token 22: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014393957331776619
    2. '(x' → logprob: -4.6393938064575195
    3. '(y' → logprob: -5.3893938064575195
    4. ' (' → logprob: -10.63939380645752
    5. '(

' → logprob: -12.01439380645752
    6. ')' → logprob: -12.13939380645752
    7. '((' → logprob: -12.51439380645752
    8. '("("' → logprob: -12.63939380645752
    9. '(
' → logprob: -12.88939380645752
    10. '(a' → logprob: -13.01439380645752

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ')
' → logprob: -12.375014305114746
    3. '')' → logprob: -12.625014305114746
    4. ' )' → logprob: -12.875014305114746
    5. '`)' → logprob: -13.125014305114746
    6. '```' → logprob: -14.000014305114746
    7. ')x' → logprob: -14.375014305114746
    8. ')y' → logprob: -15.500014305114746
    9. '))' → logprob: -16.000015258789062
    10. '),' → logprob: -16.000015258789062

Token 24: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011229529045522213
    2. ' a' → logprob: -7.626122951507568
    3. '<|end|>' → logprob: -8.501123428344727
    4. 'c' → logprob: -8.751123428344727
    5. '```' → logprob: -9.126123428344727
    6. 'x' → logprob: -9.376123428344727
    7. ',' → logprob: -10.751123428344727
    8. 'b' → logprob: -10.751123428344727
    9. '+' → logprob: -11.501123428344727
    10. '*' → logprob: -12.751123428344727

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3577207028865814
    2. '=' → logprob: -1.2327207326889038
    3. '+' → logprob: -5.607720851898193
    4. ',' → logprob: -6.107720851898193
    5. ')' → logprob: -6.982720851898193
    6. '=int' → logprob: -7.107720851898193
    7. '<|end|>' → logprob: -7.232720851898193
    8. ' +=' → logprob: -8.982720375061035
    9. '_' → logprob: -9.107720375061035
    10. '*' → logprob: -9.357720375061035

Token 26: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001415618316968903
    2. ' int' → logprob: -8.875141143798828
    3. 'float' → logprob: -14.125141143798828
    4. '(int' → logprob: -15.375141143798828
    5. '[int' → logprob: -15.625141143798828
    6. '0' → logprob: -15.750141143798828
    7. '=int' → logprob: -15.875141143798828
    8. 'a' → logprob: -16.250141143798828
    9. '<int' → logprob: -16.750141143798828
    10. '1' → logprob: -17.000141143798828

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04302659258246422
    2. '(' → logprob: -3.1680266857147217
    3. ' (' → logprob: -11.6680269241333
    4. 'a' → logprob: -12.1680269241333
    5. '(x' → logprob: -12.1680269241333
    6. '(c' → logprob: -13.4180269241333
    7. '("("' → logprob: -13.5430269241333
    8. '('' → logprob: -13.6680269241333
    9. '(
' → logprob: -14.0430269241333
    10. '(b' → logprob: -14.4180269241333

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.416665640543215e-05
    2. ')
' → logprob: -10.62503433227539
    3. ' )' → logprob: -12.12503433227539
    4. '`)' → logprob: -13.75003433227539
    5. '')' → logprob: -13.75003433227539
    6. '<|end|>' → logprob: -14.25003433227539
    7. '```' → logprob: -14.75003433227539
    8. ')

' → logprob: -15.62503433227539
    9. '),' → logprob: -15.87503433227539
    10. ')`' → logprob: -16.12503433227539

Token 29: 'b' (ID: 65)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18754942715168
    2. '<|end|>' → logprob: -2.687549352645874
    3. 'b' → logprob: -2.812549352645874
    4. ' b' → logprob: -3.687549352645874
    5. ')' → logprob: -5.312549591064453
    6. ''' → logprob: -5.687549591064453
    7. '```' → logprob: -6.062549591064453
    8. '`' → logprob: -6.312549591064453
    9. '  ' → logprob: -6.687549591064453
    10. ' 
' → logprob: -6.687549591064453

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16298040747642517
    2. '=' → logprob: -1.9129804372787476
    3. ')' → logprob: -6.287980556488037
    4. '=int' → logprob: -7.787980556488037
    5. '<|end|>' → logprob: -8.412980079650879
    6. '(' → logprob: -9.787980079650879
    7. '<|end|>' → logprob: -10.287980079650879
    8. ' ' → logprob: -10.287980079650879
    9. '  ' → logprob: -11.412980079650879
    10. '=b' → logprob: -11.412980079650879

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02708841674029827
    2. ' int' → logprob: -3.6520884037017822
    3. 'b' → logprob: -7.527088642120361
    4. '(int' → logprob: -8.527088165283203
    5. ' b' → logprob: -10.277088165283203
    6. '<int' → logprob: -11.527088165283203
    7. '=int' → logprob: -12.902088165283203
    8. '(b' → logprob: -13.152088165283203
    9. '(' → logprob: -14.277088165283203
    10. ' ' → logprob: -14.777088165283203

Token 32: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.014709405601024628
    2. '(' → logprob: -4.26470947265625
    3. ' (' → logprob: -8.51470947265625
    4. '(c' → logprob: -9.26470947265625
    5. 'b' → logprob: -9.88970947265625
    6. '(int' → logprob: -9.88970947265625
    7. '```' → logprob: -9.88970947265625
    8. ')(' → logprob: -10.13970947265625
    9. ')' → logprob: -11.51470947265625
    10. '\(' → logprob: -12.13970947265625

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -13.250005722045898
    3. ')c' → logprob: -13.250005722045898
    4. ' )' → logprob: -14.250005722045898
    5. '+' → logprob: -14.625005722045898
    6. '<|end|>' → logprob: -14.875005722045898
    7. '')' → logprob: -16.0000057220459
    8. '),' → logprob: -16.2500057220459
    9. '#' → logprob: -16.3750057220459
    10. '`)' → logprob: -16.5000057220459

Token 34: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012356207298580557
    2. '```' → logprob: -9.250123977661133
    3. '``' → logprob: -11.375123977661133
    4. '\n' → logprob: -11.750123977661133
    5. ' c' → logprob: -12.125123977661133
    6. '
' → logprob: -14.375123977661133
    7. '\' → logprob: -14.750123977661133
    8. '`' → logprob: -15.125123977661133
    9. ' 
' → logprob: -15.375123977661133
    10. '`
' → logprob: -15.500123977661133

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232625007629395
    2. ' =' → logprob: -0.8982625007629395
    3. '=int' → logprob: -9.273262023925781
    4. ')' → logprob: -10.398262023925781
    5. '`' → logprob: -13.023262023925781
    6. '(' → logprob: -13.273262023925781
    7. 'int' → logprob: -13.523262023925781
    8. 's' → logprob: -13.773262023925781
    9. '```' → logprob: -13.898262023925781
    10. ',' → logprob: -13.898262023925781

Token 36: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759606957435608
    2. ' int' → logprob: -0.8259606957435608
    3. '(int' → logprob: -11.950961112976074
    4. '<int' → logprob: -12.950961112976074
    5. ' ' → logprob: -13.200961112976074
    6. '[int' → logprob: -13.200961112976074
    7. '=int' → logprob: -13.200961112976074
    8. '0' → logprob: -13.325961112976074
    9. '	int' → logprob: -13.575961112976074
    10. 'c' → logprob: -13.700961112976074

Token 37: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741305708885193
    2. '(c' → logprob: -0.9741305708885193
    3. ' (' → logprob: -10.724130630493164
    4. '(C' → logprob: -11.849130630493164
    5. '(x' → logprob: -12.224130630493164
    6. '()' → logprob: -12.724130630493164
    7. '(`' → logprob: -12.849130630493164
    8. '((' → logprob: -13.099130630493164
    9. ')(' → logprob: -13.474130630493164
    10. '```' → logprob: -13.474130630493164

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -17.375
    4. '))' → logprob: -18.25
    5. '')' → logprob: -18.75
    6. '),' → logprob: -19.0
    7. '}' → logprob: -19.125
    8. '#' → logprob: -19.25
    9. '```' → logprob: -19.75
    10. ')`' → logprob: -20.125

Token 39: 'p' (ID: 79)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3981558382511139
    2. 'd' → logprob: -2.773155927658081
    3. 'print' → logprob: -3.273155927658081
    4. 'x' → logprob: -3.398155927658081
    5. 'result' → logprob: -3.398155927658081
    6. 's' → logprob: -3.773155927658081
    7. 'sum' → logprob: -3.898155927658081
    8. 'max' → logprob: -4.023155689239502
    9. 'ans' → logprob: -4.773155689239502
    10. 'z' → logprob: -4.898155689239502

Token 40: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09100578725337982
    2. '1' → logprob: -3.841005802154541
    3. 'l' → logprob: -3.966005802154541
    4. 'lus' → logprob: -3.966005802154541
    5. ' =' → logprob: -4.966005802154541
    6. '=' → logprob: -5.591005802154541
    7. 'rice' → logprob: -6.466005802154541
    8. '+' → logprob: -6.716005802154541
    9. 'riority' → logprob: -6.841005802154541
    10. 'rices' → logprob: -7.091005802154541

Token 41: ' input' (ID: 3422)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8681430220603943
    2. '[x' → logprob: -1.118143081665039
    3. 'min' → logprob: -2.618143081665039
    4. '[min' → logprob: -2.868143081665039
    5. '[a' → logprob: -3.118143081665039
    6. 'a' → logprob: -3.493143081665039
    7. '[]' → logprob: -4.493143081665039
    8. 'max' → logprob: -4.618143081665039
    9. 'sorted' → logprob: -4.993143081665039
    10. '[' → logprob: -4.993143081665039

Token 42: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06101788207888603
    2. '()' → logprob: -2.9360179901123047
    3. '().' → logprob: -6.061017990112305
    4. '.' → logprob: -6.186017990112305
    5. '('' → logprob: -7.311017990112305
    6. '("("' → logprob: -7.936017990112305
    7. '(
' → logprob: -8.936017990112305
    8. '('.')' → logprob: -9.061017990112305
    9. '"' → logprob: -9.186017990112305
    10. ''' → logprob: -9.436017990112305

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0017286106012761593
    2. 'strip' → logprob: -6.376728534698486
    3. 'rstrip' → logprob: -10.876729011535645
    4. 'replace' → logprob: -12.376729011535645
    5. 'count' → logprob: -13.626729011535645
    6. 'spl' → logprob: -13.876729011535645
    7. 'sort' → logprob: -15.251729011535645
    8. 's' → logprob: -15.501729011535645
    9. 'r' → logprob: -15.501729011535645
    10. 'rs' → logprob: -15.626729011535645

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5233443975448608
    2. '(' → logprob: -0.8983443975448608
    3. '('' → logprob: -9.398344039916992
    4. '("("' → logprob: -10.398344039916992
    5. '(
' → logprob: -10.773344039916992
    6. '()[' → logprob: -11.273344039916992
    7. '(`' → logprob: -11.648344039916992
    8. '(

' → logprob: -11.773344039916992
    9. '```' → logprob: -12.148344039916992
    10. '().' → logprob: -12.273344039916992

Token 45: 'for' (ID: 1938)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5588759779930115
    2. '[' → logprob: -0.9338759779930115
    3. '[p' → logprob: -3.9338760375976562
    4. ' p' → logprob: -5.433876037597656
    5. '<|end|>' → logprob: -5.683876037597656
    6. '[int' → logprob: -6.683876037597656
    7. 'a' → logprob: -6.808876037597656
    8. ']' → logprob: -7.308876037597656
    9. 's' → logprob: -7.433876037597656
    10. '```' → logprob: -7.683876037597656

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4363095760345459
    2. ' ' → logprob: -1.186309576034546
    3. ' _' → logprob: -3.561309576034546
    4. ' p' → logprob: -4.061309814453125
    5. '_' → logprob: -6.436309814453125
    6. '  ' → logprob: -8.186309814453125
    7. 'i' → logprob: -8.311309814453125
    8. ' x' → logprob: -8.311309814453125
    9. ' ‌' → logprob: -9.811309814453125
    10. ' ' → logprob: -10.561309814453125

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2923906743526459
    2. 'in' → logprob: -1.4173907041549683
    3. ' ' → logprob: -4.667390823364258
    4. '  ' → logprob: -6.917390823364258
    5. ' p' → logprob: -8.292390823364258
    6. '<|end|>' → logprob: -8.792390823364258
    7. '_' → logprob: -9.042390823364258
    8. 'p' → logprob: -10.042390823364258
    9. '	in' → logprob: -10.292390823364258
    10. 'n' → logprob: -10.417390823364258

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8629215359687805
    2. 'range' → logprob: -0.9879215359687805
    3. 'p' → logprob: -1.8629214763641357
    4. ' p' → logprob: -2.9879214763641357
    5. ' ' → logprob: -10.112921714782715
    6. 'a' → logprob: -11.237921714782715
    7. '  ' → logprob: -11.862921714782715
    8. ' a' → logprob: -11.862921714782715
    9. '[' → logprob: -12.362921714782715
    10. 'c' → logprob: -12.362921714782715

Token 49: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007057284936308861
    2. ' (' → logprob: -5.257057189941406
    3. '(len' → logprob: -6.757057189941406
    4. '(a' → logprob: -8.382057189941406
    5. '(p' → logprob: -8.882057189941406
    6. '(y' → logprob: -9.257057189941406
    7. '(n' → logprob: -10.007057189941406
    8. '(x' → logprob: -10.132057189941406
    9. '(s' → logprob: -10.257057189941406
    10. ' ' → logprob: -10.632057189941406

Token 50: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011077763512730598
    2. '(' → logprob: -4.511077880859375
    3. 'p' → logprob: -11.511077880859375
    4. '(s' → logprob: -12.386077880859375
    5. '(a' → logprob: -12.511077880859375
    6. '(x' → logprob: -12.761077880859375
    7. ' (' → logprob: -13.011077880859375
    8. '(
' → logprob: -13.636077880859375
    9. '(y' → logprob: -13.636077880859375
    10. ')' → logprob: -14.136077880859375

Token 51: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5894186496734619
    2. '):' → logprob: -0.8394186496734619
    3. '))' → logprob: -4.464418411254883
    4. ' ):' → logprob: -6.714418411254883
    5. ')' → logprob: -7.714418411254883
    6. ' ))' → logprob: -9.589418411254883
    7. ':' → logprob: -10.214418411254883
    8. ']):' → logprob: -10.339418411254883
    9. ' ' → logprob: -10.964418411254883
    10. '>):' → logprob: -11.089418411254883

Token 52: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.05041474476456642
    2. 'p' → logprob: -3.050414800643921
    3. ' ' → logprob: -6.675414562225342
    4. '   ' → logprob: -8.8004150390625
    5. '	p' → logprob: -8.8004150390625
    6. '<|end|>' → logprob: -9.3004150390625
    7. '    ' → logprob: -10.1754150390625
    8. ' =' → logprob: -10.8004150390625
    9. '(p' → logprob: -11.1754150390625
    10. '=' → logprob: -11.6754150390625

Token 53: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.5232433080673218
    2. ' p' → logprob: -0.8982433080673218
    3. '   ' → logprob: -9.523242950439453
    4. '    ' → logprob: -11.773242950439453
    5. '	p' → logprob: -11.773242950439453
    6. ' ' → logprob: -12.273242950439453
    7. 'if' → logprob: -12.523242950439453
    8. ')p' → logprob: -12.523242950439453
    9. '```' → logprob: -12.898242950439453
    10. ' if' → logprob: -13.335742950439453

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14839068055152893
    2. '[' → logprob: -2.398390769958496
    3. '=' → logprob: -3.648390769958496
    4. '[int' → logprob: -3.898390769958496
    5. '[p' → logprob: -7.898390769958496
    6. ' =' → logprob: -8.273390769958496
    7. 'p' → logprob: -10.648390769958496
    8. '[...]' → logprob: -10.898390769958496
    9. '=int' → logprob: -11.148390769958496
    10. '\[' → logprob: -11.648390769958496

Token 55: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030551815405488014
    2. '=' → logprob: -3.9055519104003906
    3. ')=' → logprob: -4.905551910400391
    4. ' =' → logprob: -6.280551910400391
    5. ']' → logprob: -7.905551910400391
    6. ' )' → logprob: -9.03055191040039
    7. '=int' → logprob: -9.03055191040039
    8. ']=' → logprob: -10.53055191040039
    9. '])' → logprob: -10.90555191040039
    10. ')]' → logprob: -11.40555191040039

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01276861410588026
    2. ' =' → logprob: -4.387768745422363
    3. '=int' → logprob: -8.262768745422363
    4. '+=' → logprob: -15.512768745422363
    5. '=
' → logprob: -15.762768745422363
    6. '=

' → logprob: -16.137767791748047
    7. '.=' → logprob: -16.512767791748047
    8. 'int' → logprob: -16.762767791748047
    9. '＝' → logprob: -16.887767791748047
    10. '=float' → logprob: -17.012767791748047

Token 57: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28119444847106934
    2. ' int' → logprob: -1.4061944484710693
    3. ' ' → logprob: -11.656194686889648
    4. '   ' → logprob: -11.656194686889648
    5. ' p' → logprob: -12.531194686889648
    6. '  ' → logprob: -12.656194686889648
    7. 'float' → logprob: -12.656194686889648
    8. '	int' → logprob: -12.781194686889648
    9. ' float' → logprob: -12.906194686889648
    10. '[int' → logprob: -13.031194686889648

Token 58: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10020925104618073
    2. '(' → logprob: -2.3502092361450195
    3. '(
' → logprob: -14.35020923614502
    4. 'p' → logprob: -14.72520923614502
    5. '(

' → logprob: -14.85020923614502
    6. '()' → logprob: -15.47520923614502
    7. '(x' → logprob: -15.60020923614502
    8. '(i' → logprob: -15.72520923614502
    9. '('' → logprob: -15.97520923614502
    10. ' (' → logprob: -16.350210189819336

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.219262624857947e-05
    2. ')' → logprob: -10.125072479248047
    3. '[' → logprob: -10.375072479248047
    4. '])' → logprob: -15.750072479248047
    5. ')i' → logprob: -16.125072479248047
    6. '[
' → logprob: -16.375072479248047
    7. '[I' → logprob: -16.625072479248047
    8. ' [' → logprob: -16.750072479248047
    9. '[p' → logprob: -16.750072479248047
    10. ')[' → logprob: -17.000072479248047

Token 60: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062336135655641556
    2. '])' → logprob: -3.0623362064361572
    3. '))' → logprob: -4.312335968017578
    4. ']' → logprob: -9.312335968017578
    5. ')])' → logprob: -9.562335968017578
    6. ')]' → logprob: -10.187335968017578
    7. ')
' → logprob: -11.187335968017578
    8. ']))' → logprob: -11.437335968017578
    9. ' )' → logprob: -12.312335968017578
    10. ''])' → logprob: -12.687335968017578

Token 61: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0069992817007005215
    2. 's' → logprob: -6.256999492645264
    3. 'm' → logprob: -6.881999492645264
    4. 'd' → logprob: -7.256999492645264
    5. 'q' → logprob: -7.381999492645264
    6. 'print' → logprob: -7.631999492645264
    7. '#' → logprob: -8.381999015808105
    8. 'a' → logprob: -8.381999015808105
    9. 'if' → logprob: -8.506999015808105
    10. 'l' → logprob: -8.881999015808105

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365630656480789
    2. '=' → logprob: -3.408656358718872
    3. '.' → logprob: -12.908656120300293
    4. ',' → logprob: -13.158656120300293
    5. ' ' → logprob: -13.533656120300293
    6. '[' → logprob: -13.658656120300293
    7. 's' → logprob: -14.658656120300293
    8. '_' → logprob: -15.033656120300293
    9. 'u' → logprob: -15.033656120300293
    10. '[:]' → logprob: -15.158656120300293

Token 63: ' input' (ID: 3422)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.6108792424201965
    2. ' []' → logprob: -1.7358791828155518
    3. ' p' → logprob: -2.2358791828155518
    4. ' [' → logprob: -2.6108791828155518
    5. 'sorted' → logprob: -3.3608791828155518
    6. ' input' → logprob: -3.9858791828155518
    7. '[]' → logprob: -4.360879421234131
    8. '[p' → logprob: -4.485879421234131
    9. ' list' → logprob: -4.610879421234131
    10. '[' → logprob: -5.110879421234131

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038693982060067356
    2. '()' → logprob: -7.875386714935303
    3. ' ().' → logprob: -12.125387191772461
    4. '(' → logprob: -13.625387191772461
    5. '.' → logprob: -16.62538719177246
    6. '()
' → logprob: -17.50038719177246
    7. '().__' → logprob: -18.00038719177246
    8. ' ()' → logprob: -18.12538719177246
    9. ' .' → logprob: -18.12538719177246
    10. '()[' → logprob: -18.25038719177246

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2233183042553719e-05
    2. 'strip' → logprob: -11.750012397766113
    3. ' split' → logprob: -13.875012397766113
    4. 'rstrip' → logprob: -14.375012397766113
    5. 'plit' → logprob: -14.500012397766113
    6. 's' → logprob: -14.500012397766113
    7. 'read' → logprob: -14.625012397766113
    8. 'spl' → logprob: -14.875012397766113
    9. '```' → logprob: -14.875012397766113
    10. '(split' → logprob: -15.375012397766113

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.480199954239652e-05
    2. '(' → logprob: -9.750064849853516
    3. '()
' → logprob: -13.125064849853516
    4. '()[' → logprob: -13.500064849853516
    5. '()`' → logprob: -13.875064849853516
    6. '()]' → logprob: -15.000064849853516
    7. '();' → logprob: -15.250064849853516
    8. '()

' → logprob: -15.500064849853516
    9. '().' → logprob: -15.500064849853516
    10. ' ()' → logprob: -15.625064849853516

Token 67: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.200166469876422e-06
    2. ' for' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -13.500004768371582
    4. '```' → logprob: -17.3750057220459
    5. '	for' → logprob: -18.1250057220459
    6. 'q' → logprob: -18.1250057220459
    7. '[' → logprob: -19.7500057220459
    8. '
' → logprob: -21.2500057220459
    9. 'For' → logprob: -21.3750057220459
    10. '.for' → logprob: -21.5000057220459

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0021974791307002306
    2. 'i' → logprob: -6.127197265625
    3. ' ' → logprob: -12.127197265625
    4. '  ' → logprob: -12.752197265625
    5. '	i' → logprob: -13.377197265625
    6. '(i' → logprob: -13.877197265625
    7. 'I' → logprob: -14.752197265625
    8. '   ' → logprob: -14.752197265625
    9. ' ' → logprob: -15.002197265625
    10. '(' → logprob: -15.502197265625

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01397649571299553
    2. 'in' → logprob: -4.388976573944092
    3. ' =' → logprob: -7.388976573944092
    4. ' ' → logprob: -7.388976573944092
    5. '=' → logprob: -9.388976097106934
    6. '   ' → logprob: -10.138976097106934
    7. '<|end|>' → logprob: -10.138976097106934
    8. 'range' → logprob: -10.638976097106934
    9. '  ' → logprob: -11.388976097106934
    10. ' range' → logprob: -11.638976097106934

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10041563957929611
    2. ' range' → logprob: -2.3504157066345215
    3. '(range' → logprob: -8.475415229797363
    4. '(len' → logprob: -15.350415229797363
    5. 'len' → logprob: -15.850415229797363
    6. '	range' → logprob: -16.60041618347168
    7. ' len' → logprob: -18.72541618347168
    8. '.range' → logprob: -18.97541618347168
    9. ' (' → logprob: -19.10041618347168
    10. '(' → logprob: -19.35041618347168

Token 71: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -4.417976379045285e-05
    2. ' (' → logprob: -10.375043869018555
    3. '(range' → logprob: -11.750043869018555
    4. '(' → logprob: -12.375043869018555
    5. '<len' → logprob: -15.000043869018555
    6. 'len' → logprob: -15.750043869018555
    7. ' len' → logprob: -15.750043869018555
    8. '[len' → logprob: -16.625043869018555
    9. '=len' → logprob: -17.250043869018555
    10. 'range' → logprob: -17.250043869018555

Token 72: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00011892046313732862
    2. '(' → logprob: -9.12511920928955
    3. ' (' → logprob: -11.75011920928955
    4. 'q' → logprob: -13.25011920928955
    5. ')' → logprob: -16.375118255615234
    6. ' q' → logprob: -16.500118255615234
    7. '(Q' → logprob: -17.000118255615234
    8. '(len' → logprob: -17.625118255615234
    9. '?q' → logprob: -18.000118255615234
    10. '(query' → logprob: -18.125118255615234

Token 73: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006037465296685696
    2. '):
' → logprob: -5.13103723526001
    3. '):
' → logprob: -10.131037712097168
    4. ')' → logprob: -10.256037712097168
    5. '   ' → logprob: -10.756037712097168
    6. ' ):' → logprob: -12.006037712097168
    7. ':' → logprob: -12.506037712097168
    8. '[]):' → logprob: -14.381037712097168
    9. '):

' → logprob: -14.506037712097168
    10. ')=' → logprob: -15.006037712097168

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011997550027444959
    2. ' q' → logprob: -7.376199722290039
    3. 'q' → logprob: -7.626199722290039
    4. '	q' → logprob: -10.126199722290039
    5. '    ' → logprob: -10.751199722290039
    6. ' ' → logprob: -11.751199722290039
    7. '  ' → logprob: -11.876199722290039
    8. '    
' → logprob: -12.876199722290039
    9. ',q' → logprob: -13.876199722290039
    10. '       ' → logprob: -14.001199722290039

Token 75: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.14282335340976715
    2. 'q' (adapté à ' q') → logprob: -2.0178234577178955
    3. '   ' → logprob: -9.017823219299316
    4. '    ' → logprob: -11.517823219299316
    5. ' ' → logprob: -11.767823219299316
    6. '	q' → logprob: -11.892823219299316
    7. '  ' → logprob: -14.017823219299316
    8. ',q' → logprob: -15.017823219299316
    9. '?q' → logprob: -15.392823219299316
    10. ' p' → logprob: -15.642823219299316

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.625028610229492
    3. '[q' → logprob: -12.875028610229492
    4. '=' → logprob: -14.125028610229492
    5. '[int' → logprob: -14.750028610229492
    6. '   ' → logprob: -14.875028610229492
    7. '```' → logprob: -16.125028610229492
    8. '[I' → logprob: -16.500028610229492
    9. '[]' → logprob: -16.625028610229492
    10. ' =' → logprob: -16.625028610229492

Token 77: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27057862281799316
    2. ' =' → logprob: -1.7705786228179932
    3. ']' → logprob: -3.145578622817993
    4. ')' → logprob: -3.895578622817993
    5. ']=' → logprob: -5.895578384399414
    6. ')=' → logprob: -7.395578384399414
    7. ' )' → logprob: -10.520578384399414
    8. '   ' → logprob: -10.645578384399414
    9. ' ]' → logprob: -10.895578384399414
    10. ')]' → logprob: -12.520578384399414

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694500386714935
    2. ' =' → logprob: -2.1269450187683105
    3. '=int' → logprob: -11.001944541931152
    4. ' ' → logprob: -16.12694549560547
    5. '=q' → logprob: -17.75194549560547
    6. '   ' → logprob: -17.75194549560547
    7. ')' → logprob: -18.00194549560547
    8. '＝' → logprob: -18.25194549560547
    9. 'int' → logprob: -18.62694549560547
    10. '`' → logprob: -19.00194549560547

Token 79: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022737324237823
    2. ' int' → logprob: -1.9102274179458618
    3. ' ' → logprob: -13.53522777557373
    4. '(int' → logprob: -14.78522777557373
    5. '=int' → logprob: -14.91022777557373
    6. '	int' → logprob: -15.16022777557373
    7. '   ' → logprob: -15.16022777557373
    8. '[int' → logprob: -15.66022777557373
    9. '<int' → logprob: -16.160226821899414
    10. '  ' → logprob: -16.410226821899414

Token 80: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -16.000024795532227
    4. ')' → logprob: -18.625024795532227
    5. '[q' → logprob: -18.750024795532227
    6. '((' → logprob: -18.875024795532227
    7. '(Q' → logprob: -19.125024795532227
    8. '(
' → logprob: -19.250024795532227
    9. 'q' → logprob: -19.250024795532227
    10. ')(' → logprob: -19.750024795532227

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.967624019831419e-05
    2. '[q' → logprob: -10.000060081481934
    3. '[' → logprob: -12.250060081481934
    4. ')' → logprob: -12.250060081481934
    5. '(i' → logprob: -12.625060081481934
    6. '[I' → logprob: -14.875060081481934
    7. '[int' → logprob: -15.125060081481934
    8. ')i' → logprob: -15.375060081481934
    9. '```' → logprob: -16.000059127807617
    10. '[]' → logprob: -16.500059127807617

Token 82: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5769100785255432
    2. '])' → logprob: -0.8269100785255432
    3. ')]' → logprob: -7.951910018920898
    4. ')])' → logprob: -8.201910018920898
    5. ']' → logprob: -8.951910018920898
    6. '))' → logprob: -9.201910018920898
    7. '])]' → logprob: -9.826910018920898
    8. ')
' → logprob: -10.951910018920898
    9. ''])' → logprob: -11.701910018920898
    10. '）' → logprob: -11.951910018920898

Token 83: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1889345943927765
    2. 'p' → logprob: -2.313934564590454
    3. 'result' → logprob: -4.188934803009033
    4. 's' → logprob: -4.313934803009033
    5. 'k' → logprob: -4.688934803009033
    6. 'q' → logprob: -4.938934803009033
    7. 'm' → logprob: -5.438934803009033
    8. 'd' → logprob: -6.063934803009033
    9. 'res' → logprob: -6.188934803009033
    10. 'ans' → logprob: -6.188934803009033

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759484171867371
    2. ' =' → logprob: -0.8259484171867371
    3. 's' → logprob: -12.950948715209961
    4. ',' → logprob: -13.325948715209961
    5. ' ' → logprob: -13.950948715209961
    6. '=input' → logprob: -14.075948715209961
    7. '=[]' → logprob: -14.075948715209961
    8. '=int' → logprob: -15.075948715209961
    9. '＝' → logprob: -15.388448715209961
    10. '_' → logprob: -15.513448715209961

Token 85: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07889749854803085
    2. 'input' → logprob: -2.578897476196289
    3. '[]' → logprob: -12.453897476196289
    4. '[input' → logprob: -13.328897476196289
    5. ' []' → logprob: -13.953897476196289
    6. '=input' → logprob: -15.453897476196289
    7. '(input' → logprob: -15.703897476196289
    8. '	input' → logprob: -15.828897476196289
    9. 'int' → logprob: -15.953897476196289
    10. '_input' → logprob: -16.07889747619629

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008621551096439362
    2. '()' → logprob: -4.758621692657471
    3. '(' → logprob: -12.508621215820312
    4. '()
' → logprob: -13.508621215820312
    5. ' ().' → logprob: -13.508621215820312
    6. '()

' → logprob: -15.633621215820312
    7. ' ()' → logprob: -16.133621215820312
    8. '().'' → logprob: -16.508621215820312
    9. '()[' → logprob: -16.758621215820312
    10. '.' → logprob: -16.883621215820312

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -14.75
    3. ' split' → logprob: -16.75
    4. 'strip' → logprob: -17.875
    5. 's' → logprob: -18.625
    6. 'plit' → logprob: -18.625
    7. '(split' → logprob: -18.75
    8. 'sp' → logprob: -19.625
    9. 'rstrip' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010076811304315925
    2. '(' → logprob: -7.126007556915283
    3. '().' → logprob: -8.626008033752441
    4. '('' → logprob: -12.626008033752441
    5. '()
' → logprob: -12.876008033752441
    6. '()`' → logprob: -12.876008033752441
    7. '())' → logprob: -13.001008033752441
    8. ' ()' → logprob: -13.251008033752441
    9. '()]' → logprob: -13.251008033752441
    10. '()?>' → logprob: -13.751008033752441

Token 89: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5928495486150496e-05
    2. ' for' → logprob: -11.125016212463379
    3. 'r' → logprob: -14.750016212463379
    4. '<|end|>' → logprob: -14.750016212463379
    5. '```' → logprob: -16.750015258789062
    6. '[' → logprob: -16.750015258789062
    7. '0' → logprob: -17.500015258789062
    8. '	for' → logprob: -17.625015258789062
    9. '.for' → logprob: -17.750015258789062
    10. '
' → logprob: -17.750015258789062

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0232832171022892
    2. 'i' → logprob: -3.7732832431793213
    3. '(i' → logprob: -10.773283004760742
    4. ' (' → logprob: -11.648283004760742
    5. ' ' → logprob: -13.148283004760742
    6. '(' → logprob: -13.148283004760742
    7. '  ' → logprob: -13.773283004760742
    8. '	i' → logprob: -13.773283004760742
    9. ' in' → logprob: -14.023283004760742
    10. 'I' → logprob: -15.023283004760742

Token 91: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4771216809749603
    2. ' in' → logprob: -0.9771217107772827
    3. '(len' → logprob: -6.852121829986572
    4. '(' → logprob: -6.977121829986572
    5. ' (' → logprob: -7.477121829986572
    6. ' ' → logprob: -8.852121353149414
    7. '(in' → logprob: -9.352121353149414
    8. '   ' → logprob: -9.477121353149414
    9. '  ' → logprob: -9.602121353149414
    10. ')' → logprob: -10.727121353149414

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021344369743019342
    2. ' range' → logprob: -6.252134323120117
    3. '(range' → logprob: -8.502134323120117
    4. 'len' → logprob: -13.377134323120117
    5. '(len' → logprob: -14.252134323120117
    6. 'r' → logprob: -16.002134323120117
    7. '(r' → logprob: -16.377134323120117
    8. '(' → logprob: -16.502134323120117
    9. 'rang' → logprob: -16.502134323120117
    10. '   ' → logprob: -16.752134323120117

Token 93: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.750000953674316
    3. 'len' → logprob: -15.000000953674316
    4. '(range' → logprob: -15.750000953674316
    5. '<len' → logprob: -15.875000953674316
    6. '(l' → logprob: -16.375001907348633
    7. '[len' → logprob: -16.375001907348633
    8. ' (' → logprob: -17.875001907348633
    9. '=len' → logprob: -18.125001907348633
    10. ' len' → logprob: -18.625001907348633

Token 94: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.7755875129951164e-05
    2. '(' → logprob: -10.00004768371582
    3. 'r' → logprob: -13.87504768371582
    4. '(
' → logprob: -14.37504768371582
    5. ')' → logprob: -14.62504768371582
    6. ' (' → logprob: -15.37504768371582
    7. ' r' → logprob: -17.25004768371582
    8. '(R' → logprob: -18.00004768371582
    9. '(

' → logprob: -19.25004768371582
    10. ' ' → logprob: -19.37504768371582

Token 95: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023485617712140083
    2. '):
' → logprob: -3.7734856605529785
    3. '):
' → logprob: -8.77348518371582
    4. ')' → logprob: -9.64848518371582
    5. ' ):' → logprob: -11.77348518371582
    6. '   ' → logprob: -12.27348518371582
    7. ']):' → logprob: -12.89848518371582
    8. ':' → logprob: -13.27348518371582
    9. ')):' → logprob: -13.39848518371582
    10. '):

' → logprob: -14.77348518371582

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018393946811556816
    2. 'r' → logprob: -6.5018391609191895
    3. ' r' → logprob: -8.001839637756348
    4. '  ' → logprob: -14.126839637756348
    5. ' ' → logprob: -14.626839637756348
    6. '	r' → logprob: -14.876839637756348
    7. '    
' → logprob: -15.126839637756348
    8. '
' → logprob: -15.876839637756348
    9. '    ' → logprob: -16.00183868408203
    10. '       ' → logprob: -16.12683868408203

Token 97: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.20158691704273224
    2. ' r' → logprob: -1.7015869617462158
    3. '   ' → logprob: -8.826586723327637
    4. ' ' → logprob: -11.076586723327637
    5. '  ' → logprob: -11.826586723327637
    6. 'int' → logprob: -13.076586723327637
    7. '	r' → logprob: -14.826586723327637
    8. '
' → logprob: -15.076586723327637
    9. ' =' → logprob: -15.201586723327637
    10. '    ' → logprob: -15.326586723327637

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -10.000051498413086
    3. '=' → logprob: -12.500051498413086
    4. ' =' → logprob: -14.000051498413086
    5. '[r' → logprob: -14.000051498413086
    6. '[int' → logprob: -15.375051498413086
    7. '   ' → logprob: -15.500051498413086
    8. '[]' → logprob: -15.625051498413086
    9. ' [' → logprob: -15.875051498413086
    10. '[I' → logprob: -16.500051498413086

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4054425060749054
    2. '=' → logprob: -1.530442476272583
    3. ')' → logprob: -2.655442476272583
    4. ' =' → logprob: -3.155442476272583
    5. ']=' → logprob: -6.155442714691162
    6. ' ]' → logprob: -6.530442714691162
    7. ')=' → logprob: -8.655442237854004
    8. ' )' → logprob: -8.780442237854004
    9. '=int' → logprob: -11.030442237854004
    10. '   ' → logprob: -11.030442237854004

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740838408470154
    2. ' =' → logprob: -0.9740838408470154
    3. '=int' → logprob: -11.97408390045166
    4. ' ' → logprob: -14.59908390045166
    5. '＝' → logprob: -17.599082946777344
    6. ')' → logprob: -17.974082946777344
    7. '=
' → logprob: -18.349082946777344
    8. ' =
' → logprob: -18.474082946777344
    9. 'int' → logprob: -18.724082946777344
    10. '=

' → logprob: -19.099082946777344

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324605919420719
    2. ' int' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.273245811462402
    4. '(int' → logprob: -15.773245811462402
    5. '	int' → logprob: -17.02324676513672
    6. '   ' → logprob: -17.14824676513672
    7. '=int' → logprob: -17.52324676513672
    8. '<int' → logprob: -18.02324676513672
    9. '[int' → logprob: -18.02324676513672
    10. '  ' → logprob: -18.14824676513672

Token 102: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023247575387358665
    2. '(' → logprob: -3.773247480392456
    3. 'r' → logprob: -14.023247718811035
    4. '(
' → logprob: -14.273247718811035
    5. '(

' → logprob: -15.273247718811035
    6. ' (' → logprob: -16.14824676513672
    7. ')' → logprob: -17.02324676513672
    8. '(rr' → logprob: -17.14824676513672
    9. '(`' → logprob: -17.39824676513672
    10. '()' → logprob: -17.64824676513672

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004788128426298499
    2. ')' → logprob: -7.750478744506836
    3. '])' → logprob: -10.500478744506836
    4. 'i' → logprob: -11.500478744506836
    5. ']' → logprob: -12.750478744506836
    6. ')i' → logprob: -13.125478744506836
    7. '(i' → logprob: -13.250478744506836
    8. '[' → logprob: -13.375478744506836
    9. '[
' → logprob: -14.750478744506836
    10. 'r' → logprob: -15.125478744506836

Token 104: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.39023831486701965
    2. ')' → logprob: -1.1402382850646973
    3. ')]' → logprob: -6.015238285064697
    4. ']' → logprob: -7.265238285064697
    5. ')])' → logprob: -8.890238761901855
    6. '])]' → logprob: -10.515238761901855
    7. ')
' → logprob: -11.265238761901855
    8. '）' → logprob: -11.390238761901855
    9. '))' → logprob: -11.390238761901855
    10. '])
' → logprob: -11.640238761901855

Token 105: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0182616226375103
    2. 'r' → logprob: -4.143261432647705
    3. 'a' → logprob: -7.893261432647705
    4. 'x' → logprob: -8.268261909484863
    5. 's' → logprob: -8.268261909484863
    6. 'result' → logprob: -8.393261909484863
    7. 'q' → logprob: -8.518261909484863
    8. 'all' → logprob: -8.643261909484863
    9. 'u' → logprob: -9.268261909484863
    10. 'sorted' → logprob: -9.518261909484863

Token 106: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.08335950970649719
    2. '.' → logprob: -3.583359479904175
    3. '[' → logprob: -3.583359479904175
    4. '[:]' → logprob: -4.083359718322754
    5. '+' → logprob: -6.583359718322754
    6. ',' → logprob: -6.958359718322754
    7. '_sorted' → logprob: -7.083359718322754
    8. '[p' → logprob: -7.208359718322754
    9. '[::-' → logprob: -7.833359718322754
    10. ' =' → logprob: -8.083359718322754

Token 107: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007493520388379693
    2. '(' → logprob: -7.250749588012695
    3. '(p' → logprob: -10.750749588012695
    4. '()
' → logprob: -11.375749588012695
    5. '()`' → logprob: -13.250749588012695
    6. 'p' → logprob: -13.875749588012695
    7. ' ()' → logprob: -14.125749588012695
    8. '())' → logprob: -14.875749588012695
    9. '()>' → logprob: -15.000749588012695
    10. '(reverse' → logprob: -15.375749588012695

Token 108: 'p' (ID: 79)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007330217398703098
    2. '()' → logprob: -5.757330417633057
    3. 'r' → logprob: -6.882330417633057
    4. ',' → logprob: -6.882330417633057
    5. 'p' → logprob: -7.382330417633057
    6. '.' → logprob: -7.632330417633057
    7. '.reverse' → logprob: -7.882330417633057
    8. ')' → logprob: -8.632329940795898
    9. ',q' → logprob: -8.632329940795898
    10. '()
' → logprob: -9.507329940795898

Token 109: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -1.0573123693466187
    2. '<|end|>' → logprob: -1.4323123693466187
    3. '()' → logprob: -1.8073123693466187
    4. '.' → logprob: -2.307312488555908
    5. '[' → logprob: -2.932312488555908
    6. '[::-' → logprob: -3.307312488555908
    7. '[-' → logprob: -4.182312488555908
    8. '.sort' → logprob: -4.432312488555908
    9. '.pop' → logprob: -4.932312488555908
    10. '[p' → logprob: -5.307312488555908

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.375008583068848
    3. '()
' → logprob: -12.875008583068848
    4. '()`' → logprob: -13.750008583068848
    5. '`()' → logprob: -15.125008583068848
    6. '()

' → logprob: -15.625008583068848
    7. '().' → logprob: -16.500009536743164
    8. '()\' → logprob: -16.625009536743164
    9. '()"' → logprob: -16.875009536743164
    10. ' ()' → logprob: -16.875009536743164

Token 111: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00015562419139314443
    2. 'r' → logprob: -8.875155448913574
    3. ' q' → logprob: -12.500155448913574
    4. 'for' → logprob: -12.625155448913574
    5. '```' → logprob: -13.000155448913574
    6. ',' → logprob: -13.750155448913574
    7. '
' → logprob: -14.375155448913574
    8. '\n' → logprob: -14.375155448913574
    9. ' for' → logprob: -14.625155448913574
    10. ' 
' → logprob: -14.875155448913574

Token 112: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.062038373202085495
    2. '.' → logprob: -2.8120384216308594
    3. '.reverse' → logprob: -9.81203842163086
    4. ' .' → logprob: -12.18703842163086
    5. '[' → logprob: -12.68703842163086
    6. '.sorted' → logprob: -13.18703842163086
    7. '.setdefault' → logprob: -13.31203842163086
    8. 'sort' → logprob: -13.43703842163086
    9. '.s' → logprob: -14.31203842163086
    10. '[:]' → logprob: -14.56203842163086

Token 113: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.226628895296017e-06
    2. '()
' → logprob: -12.125007629394531
    3. '(' → logprob: -14.125007629394531
    4. '())' → logprob: -15.500007629394531
    5. '()\' → logprob: -16.00000762939453
    6. '();' → logprob: -16.12500762939453
    7. '()<' → logprob: -16.25000762939453
    8. ' ()' → logprob: -16.25000762939453
    9. '()`' → logprob: -16.50000762939453
    10. '()]' → logprob: -16.75000762939453

Token 114: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005961980205029249
    2. 'reverse' → logprob: -5.130961894989014
    3. ' q' → logprob: -10.505962371826172
    4. ' reverse' → logprob: -12.380962371826172
    5. '.reverse' → logprob: -13.880962371826172
    6. 'r' → logprob: -14.755962371826172
    7. '(reverse' → logprob: -15.130962371826172
    8. '	q' → logprob: -16.505962371826172
    9. '
' → logprob: -17.130962371826172
    10. '   ' → logprob: -17.505962371826172

Token 115: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.003248181426897645
    2. 'reverse' → logprob: -6.37824821472168
    3. '.' → logprob: -6.75324821472168
    4. '.sort' → logprob: -8.37824821472168
    5. ' .' → logprob: -9.12824821472168
    6. ' reverse' → logprob: -10.50324821472168
    7. '(reverse' → logprob: -12.25324821472168
    8. '[::-' → logprob: -13.12824821472168
    9. 'sort' → logprob: -14.00324821472168
    10. '=' → logprob: -14.37824821472168

Token 116: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.27099974633893e-05
    2. '(' → logprob: -12.000012397766113
    3. '()
' → logprob: -12.875012397766113
    4. '())' → logprob: -13.375012397766113
    5. '()`' → logprob: -13.875012397766113
    6. '()]' → logprob: -15.500012397766113
    7. ' ()' → logprob: -15.625012397766113
    8. '()>' → logprob: -15.750012397766113
    9. '()

' → logprob: -15.875012397766113
    10. '();' → logprob: -16.00001335144043

Token 117: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.531315314830863e-06
    2. ' r' → logprob: -13.125003814697266
    3. '
' → logprob: -14.125003814697266
    4. '```' → logprob: -14.375003814697266
    5. '`' → logprob: -16.375003814697266
    6. '``' → logprob: -18.375003814697266
    7. '[r' → logprob: -18.625003814697266
    8. ',r' → logprob: -18.750003814697266
    9. '	r' → logprob: -19.125003814697266
    10. ' 
' → logprob: -19.250003814697266

Token 118: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.015280117280781269
    2. '.' → logprob: -4.265280246734619
    3. 'sort' → logprob: -6.890280246734619
    4. ' .' → logprob: -9.890279769897461
    5. '.s' → logprob: -11.265279769897461
    6. ' =' → logprob: -11.640279769897461
    7. '.reverse' → logprob: -11.890279769897461
    8. '=' → logprob: -12.390279769897461
    9. ' sort' → logprob: -12.640279769897461
    10. ' ' → logprob: -13.140279769897461

Token 119: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.200166469876422e-06
    2. '()
' → logprob: -12.625004768371582
    3. '(' → logprob: -14.125004768371582
    4. '())' → logprob: -14.375004768371582
    5. ' ()' → logprob: -16.0000057220459
    6. '(r' → logprob: -16.6250057220459
    7. '()\' → logprob: -16.6250057220459
    8. '()>' → logprob: -16.7500057220459
    9. '()]' → logprob: -16.8750057220459
    10. '()`' → logprob: -16.8750057220459

Token 120: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004973897244781256
    2. 'reverse' → logprob: -5.504973888397217
    3. 'for' → logprob: -9.004974365234375
    4. 'q' → logprob: -9.004974365234375
    5. '[' → logprob: -9.254974365234375
    6. '[]' → logprob: -9.254974365234375
    7. 'c' → logprob: -9.629974365234375
    8. '()' → logprob: -9.754974365234375
    9. ')' → logprob: -9.879974365234375
    10. 'if' → logprob: -10.254974365234375

Token 121: '.reverse' (ID: 65426)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6347636580467224
    2. '.reverse' → logprob: -0.7597636580467224
    3. ' reverse' → logprob: -7.759763717651367
    4. 'def' → logprob: -8.134763717651367
    5. '_reverse' → logprob: -8.384763717651367
    6. '(reverse' → logprob: -8.509763717651367
    7. '.pop' → logprob: -8.759763717651367
    8. '.sort' → logprob: -8.884763717651367
    9. '.' → logprob: -9.009763717651367
    10. '()' → logprob: -9.259763717651367

Token 122: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.6934557505883276e-05
    2. '()
' → logprob: -9.875057220458984
    3. '(' → logprob: -12.375057220458984
    4. '()`' → logprob: -15.125057220458984
    5. '()

' → logprob: -15.125057220458984
    6. '();' → logprob: -16.000057220458984
    7. '())' → logprob: -16.375057220458984
    8. '()]' → logprob: -16.750057220458984
    9. '()\' → logprob: -16.750057220458984
    10. '()
' → logprob: -16.875057220458984

Token 123: 'p' (ID: 79)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6154385805130005
    2. 'dp' → logprob: -2.115438461303711
    3. 'answer' → logprob: -2.240438461303711
    4. 'result' → logprob: -2.490438461303711
    5. 'count' → logprob: -3.490438461303711
    6. 'res' → logprob: -3.740438461303711
    7. 'total' → logprob: -3.865438461303711
    8. 'points' → logprob: -4.365438461303711
    9. 'cnt' → logprob: -4.615438461303711
    10. 'score' → logprob: -4.990438461303711

Token 124: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032015811651945114
    2. '<|end|>' → logprob: -4.282015800476074
    3. '[p' → logprob: -4.657015800476074
    4. '[-' → logprob: -6.282015800476074
    5. '[]' → logprob: -6.657015800476074
    6. '[q' → logprob: -6.782015800476074
    7. '.' → logprob: -7.407015800476074
    8. ',' → logprob: -7.532015800476074
    9. '[:]' → logprob: -7.657015800476074
    10. '[len' → logprob: -7.657015800476074

Token 125: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2818707525730133
    2. ' p' → logprob: -1.406870722770691
    3. '[p' → logprob: -7.7818708419799805
    4. '[' → logprob: -8.78187084197998
    5. ' [' → logprob: -10.03187084197998
    6. ' ' → logprob: -10.84437084197998
    7. 'sorted' → logprob: -11.21937084197998
    8. '	p' → logprob: -11.96937084197998
    9. '   ' → logprob: -12.03187084197998
    10. 'r' → logprob: -12.09437084197998

Token 126: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.005124176852405071
    2. '[:]' → logprob: -5.380124092102051
    3. '[a' → logprob: -8.50512409210205
    4. '[' → logprob: -9.00512409210205
    5. '[:-' → logprob: -9.50512409210205
    6. '[b' → logprob: -10.25512409210205
    7. '+' → logprob: -10.63012409210205
    8. '+b' → logprob: -10.63012409210205
    9. '+a' → logprob: -12.50512409210205
    10. '[-' → logprob: -12.88012409210205

Token 127: '0' (ID: 15)
  Prédit: ':a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':a' → logprob: -0.6797218322753906
    2. 'a' → logprob: -1.6797218322753906
    3. ':x' → logprob: -1.9297218322753906
    4. ':' → logprob: -2.6797218322753906
    5. 'x' → logprob: -2.6797218322753906
    6. '0' → logprob: -4.054721832275391
    7. ':b' → logprob: -5.429721832275391
    8. ':c' → logprob: -6.804721832275391
    9. ':y' → logprob: -7.679721832275391
    10. ' :' → logprob: -8.30472183227539

Token 128: ':x' (ID: 73587)
  Prédit: ':x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':x' → logprob: -0.40246132016181946
    2. ':a' → logprob: -1.152461290359497
    3. ':' → logprob: -4.277461528778076
    4. ' :' → logprob: -6.902461528778076
    5. 'x' → logprob: -8.402461051940918
    6. 'a' → logprob: -8.527461051940918
    7. ':]' → logprob: -10.277461051940918
    8. ':c' → logprob: -10.777461051940918
    9. ':min' → logprob: -11.152461051940918
    10. ':y' → logprob: -11.152461051940918

Token 129: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001203923486173153
    2. ']
' → logprob: -7.126204013824463
    3. ' ]' → logprob: -8.376203536987305
    4. ']+' → logprob: -8.876203536987305
    5. ']

' → logprob: -11.001203536987305
    6. '][:' → logprob: -12.751203536987305
    7. '+' → logprob: -13.001203536987305
    8. ']
' → logprob: -13.001203536987305
    9. '],' → logprob: -14.001203536987305
    10. ' ]
' → logprob: -14.501203536987305

Token 130: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.236549335066229e-05
    2. 'r' → logprob: -11.625021934509277
    3. ' q' → logprob: -11.875021934509277
    4. '
' → logprob: -12.750021934509277
    5. '<|end|>' → logprob: -14.375021934509277
    6. 'p' → logprob: -14.625021934509277
    7. 'b' → logprob: -14.625021934509277
    8. 'a' → logprob: -14.875021934509277
    9. '+' → logprob: -15.500021934509277
    10. 'print' → logprob: -15.750021934509277

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42876213788986206
    2. ' =' → logprob: -1.0537621974945068
    3. '=q' → logprob: -9.803762435913086
    4. '=p' → logprob: -12.553762435913086
    5. 'q' → logprob: -14.303762435913086
    6. 'p' → logprob: -14.553762435913086
    7. ')' → logprob: -15.303762435913086
    8. ',' → logprob: -15.553762435913086
    9. ' ' → logprob: -15.678762435913086
    10. '>' → logprob: -16.053762435913086

Token 132: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0017050558235496283
    2. ' q' → logprob: -6.376705169677734
    3. ' ' → logprob: -13.126705169677734
    4. '	q' → logprob: -15.001705169677734
    5. '   ' → logprob: -15.876705169677734
    6. '  ' → logprob: -16.126705169677734
    7. 'p' → logprob: -16.376705169677734
    8. '
' → logprob: -16.501705169677734
    9. '[q' → logprob: -16.751705169677734
    10. '[' → logprob: -16.876705169677734

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049514807760715485
    2. '[:' → logprob: -3.0495147705078125
    3. '[q' → logprob: -7.0495147705078125
    4. '[x' → logprob: -10.674514770507812
    5. 'q' → logprob: -11.549514770507812
    6. '[b' → logprob: -11.799514770507812
    7. '[:]' → logprob: -11.799514770507812
    8. 'b' → logprob: -12.299514770507812
    9. '[y' → logprob: -13.674514770507812
    10. '0' → logprob: -13.674514770507812

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040123690268956125
    2. 'y' → logprob: -8.125401496887207
    3. 'b' → logprob: -9.625401496887207
    4. ' ' → logprob: -10.250401496887207
    5. ' y' → logprob: -13.000401496887207
    6. 'x' → logprob: -14.375401496887207
    7. '
' → logprob: -15.625401496887207
    8. 'a' → logprob: -16.00040054321289
    9. '   ' → logprob: -16.06290054321289
    10. '  ' → logprob: -16.25040054321289

Token 135: ':y' (ID: 124542)
  Prédit: ':y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':y' → logprob: -0.00021784115233458579
    2. ' :' → logprob: -9.00021743774414
    3. ':' → logprob: -9.87521743774414
    4. 'y' → logprob: -11.12521743774414
    5. ':x' → logprob: -11.75021743774414
    6. '*y' → logprob: -11.87521743774414
    7. ' ' → logprob: -13.00021743774414
    8. ':q' → logprob: -13.37521743774414
    9. ':b' → logprob: -13.50021743774414
    10. ':
' → logprob: -13.62521743774414

Token 136: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4742085635662079
    2. ']
' → logprob: -0.9742085933685303
    3. 'r' → logprob: -9.47420883178711
    4. ']
' → logprob: -10.59920883178711
    5. ']

' → logprob: -10.97420883178711
    6. ' ]' → logprob: -11.97420883178711
    7. ' ]
' → logprob: -12.47420883178711
    8. ' r' → logprob: -14.22420883178711
    9. 'q' → logprob: -14.47420883178711
    10. '
' → logprob: -15.22420883178711

Token 137: 'all' (ID: 586)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13390488922595978
    2. 'combined' → logprob: -2.7589049339294434
    3. 'total' → logprob: -4.758904933929443
    4. 'all' → logprob: -4.883904933929443
    5. 'import' → logprob: -5.133904933929443
    6. 'merged' → logprob: -5.258904933929443
    7. 'result' → logprob: -5.508904933929443
    8. 's' → logprob: -5.508904933929443
    9. 'from' → logprob: -5.758904933929443
    10. 'res' → logprob: -6.008904933929443

Token 138: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1852152794599533
    2. '=' → logprob: -1.8102152347564697
    3. '_items' → logprob: -6.560215473175049
    4. '_' → logprob: -6.935215473175049
    5. '_cards' → logprob: -7.560215473175049
    6. '_scores' → logprob: -7.560215473175049
    7. '_points' → logprob: -7.685215473175049
    8. '_list' → logprob: -7.935215473175049
    9. '_tokens' → logprob: -8.18521499633789
    10. '_candidates' → logprob: -8.31021499633789

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687896728515625
    2. ' =' → logprob: -1.1368789672851562
    3. '=[]' → logprob: -13.136878967285156
    4. '=p' → logprob: -13.261878967285156
    5. 's' → logprob: -13.761878967285156
    6. 'p' → logprob: -14.636878967285156
    7. '_' → logprob: -14.761878967285156
    8. '(' → logprob: -14.761878967285156
    9. ' ' → logprob: -14.886878967285156
    10. ')' → logprob: -15.136878967285156

Token 140: ' []
' (ID: 8911)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38775089383125305
    2. ' p' → logprob: -1.1377508640289307
    3. 'r' → logprob: -8.137750625610352
    4. ' r' → logprob: -8.387750625610352
    5. '[]' → logprob: -8.887750625610352
    6. ' ' → logprob: -10.012750625610352
    7. '[p' → logprob: -10.387750625610352
    8. ' []' → logprob: -10.512750625610352
    9. ' sorted' → logprob: -10.512750625610352
    10. 'q' → logprob: -10.762750625610352

Token 141: 'for' (ID: 1938)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11289449781179428
    2. 'for' → logprob: -2.2378945350646973
    3. 'p' → logprob: -10.487894058227539
    4. 'import' → logprob: -11.237894058227539
    5. 'i' → logprob: -11.987894058227539
    6. 'a' → logprob: -12.237894058227539
    7. 'from' → logprob: -12.862894058227539
    8. 'while' → logprob: -12.987894058227539
    9. ' for' → logprob: -13.112894058227539
    10. 'r' → logprob: -13.237894058227539

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2431769073009491
    2. 'item' → logprob: -2.2431769371032715
    3. 'val' → logprob: -4.1181769371032715
    4. ' i' → logprob: -4.1181769371032715
    5. 'elem' → logprob: -4.2431769371032715
    6. 'value' → logprob: -4.4931769371032715
    7. 'pi' → logprob: -4.4931769371032715
    8. 'num' → logprob: -5.1181769371032715
    9. 'el' → logprob: -5.4931769371032715
    10. 'v' → logprob: -5.6181769371032715

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22913780808448792
    2. 'in' → logprob: -1.6041377782821655
    3. 'n' → logprob: -5.854137897491455
    4. ' ' → logprob: -7.354137897491455
    5. ' n' → logprob: -9.104137420654297
    6. ',' → logprob: -9.979137420654297
    7. '  ' → logprob: -10.979137420654297
    8. '	in' → logprob: -11.854137420654297
    9. '   ' → logprob: -12.229137420654297
    10. ' i' → logprob: -12.729137420654297

Token 144: ' p' (ID: 275)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.526299774646759
    2. 'p' → logprob: -1.4012997150421143
    3. ' range' → logprob: -1.9012997150421143
    4. ' p' → logprob: -4.401299953460693
    5. 'r' → logprob: -6.901299953460693
    6. '[p' → logprob: -9.276299476623535
    7. ' r' → logprob: -10.026299476623535
    8. 'q' → logprob: -10.588799476623535
    9. '[' → logprob: -10.963799476623535
    10. ' ' → logprob: -11.151299476623535

Token 145: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29023101925849915
    2. ',' → logprob: -1.9152309894561768
    3. 'in' → logprob: -2.5402309894561768
    4. ':' → logprob: -4.290231227874756
    5. '+' → logprob: -5.040231227874756
    6. ' ,' → logprob: -5.540231227874756
    7. ' ' → logprob: -7.790231227874756
    8. ' :' → logprob: -8.165230751037598
    9. ',p' → logprob: -8.790230751037598
    10. '[' → logprob: -8.915230751037598

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11439575254917145
    2. ' all' → logprob: -2.6143958568573
    3. 'all' → logprob: -3.3643958568573
    4. '	all' → logprob: -9.239396095275879
    5. ' ' → logprob: -9.989396095275879
    6. '
' → logprob: -10.239396095275879
    7. '  ' → logprob: -10.739396095275879
    8. ' for' → logprob: -10.989396095275879
    9. '   ' → logprob: -11.114396095275879
    10. '       ' → logprob: -11.614396095275879

Token 147: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.0068624247796833515
    2. ' all' → logprob: -5.006862640380859
    3. '   ' → logprob: -8.88186264038086
    4. '
' → logprob: -12.75686264038086
    5. ' ' → logprob: -13.13186264038086
    6. 'for' → logprob: -13.25686264038086
    7. 'i' → logprob: -14.50686264038086
    8. '	all' → logprob: -14.63186264038086
    9. '```' → logprob: -16.00686264038086
    10. 'a' → logprob: -16.00686264038086

Token 148: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. 'list' → logprob: -14.875000953674316
    4. '._' → logprob: -16.000001907348633
    5. '.append' → logprob: -16.750001907348633
    6. '_lists' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.625001907348633
    8. '_all' → logprob: -17.750001907348633
    9. 'List' → logprob: -18.000001907348633
    10. '```' → logprob: -18.750001907348633

Token 149: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005728095420636237
    2. '.' → logprob: -7.500572681427002
    3. '.ap' → logprob: -11.62557315826416
    4. ' .' → logprob: -12.12557315826416
    5. '.app' → logprob: -12.50057315826416
    6. '.extend' → logprob: -13.62557315826416
    7. 'append' → logprob: -15.37557315826416
    8. '.add' → logprob: -16.500572204589844
    9. '.a' → logprob: -17.125572204589844
    10. '+' → logprob: -17.375572204589844

Token 150: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.227250610711053e-05
    2. '(' → logprob: -10.375041961669922
    3. '((' → logprob: -12.000041961669922
    4. 'i' → logprob: -12.375041961669922
    5. '(a' → logprob: -15.250041961669922
    6. '(
' → logprob: -16.125041961669922
    7. ' i' → logprob: -17.000041961669922
    8. ' (' → logprob: -17.250041961669922
    9. ')i' → logprob: -17.500041961669922
    10. '(s' → logprob: -18.000041961669922

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014932483434677
    2. ')
' → logprob: -1.701493263244629
    3. ' )
' → logprob: -10.326493263244629
    4. ' )' → logprob: -10.451493263244629
    5. ')

' → logprob: -11.201493263244629
    6. ')
' → logprob: -12.951493263244629
    7. '
' → logprob: -13.701493263244629
    8. '),' → logprob: -15.576493263244629
    9. ')`' → logprob: -15.951493263244629
    10. ')\
' → logprob: -15.951493263244629

Token 152: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.008129963040119e-06
    2. 'all' → logprob: -12.750003814697266
    3. ' for' → logprob: -14.125003814697266
    4. '
' → logprob: -15.125003814697266
    5. '```' → logprob: -17.500003814697266
    6. '    
' → logprob: -19.000003814697266
    7. '  
' → logprob: -19.625003814697266
    8. ' 
' → logprob: -19.625003814697266
    9. '\
' → logprob: -21.250003814697266
    10. '

' → logprob: -21.375003814697266

Token 153: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33504700660705566
    2. ' i' → logprob: -1.9600470066070557
    3. 'j' → logprob: -2.4600470066070557
    4. ' j' → logprob: -3.5850470066070557
    5. ' ' → logprob: -4.460046768188477
    6. 'in' → logprob: -4.960046768188477
    7. ' in' → logprob: -5.085046768188477
    8. 'q' → logprob: -5.960046768188477
    9. '  ' → logprob: -6.210046768188477
    10. ' q' → logprob: -7.585046768188477

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012255205772817135
    2. 'in' → logprob: -4.5122551918029785
    3. ' q' → logprob: -6.7622551918029785
    4. 'q' → logprob: -10.512255668640137
    5. ' ' → logprob: -11.387255668640137
    6. 's' → logprob: -12.387255668640137
    7. ' i' → logprob: -13.262255668640137
    8. ' b' → logprob: -14.137255668640137
    9. '  ' → logprob: -14.262255668640137
    10. 'import' → logprob: -14.512255668640137

Token 155: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1426801085472107
    2. ' q' → logprob: -2.0176801681518555
    3. ' ' → logprob: -12.767680168151855
    4. '	q' → logprob: -14.517680168151855
    5. 'r' → logprob: -15.142680168151855
    6. '   ' → logprob: -15.267680168151855
    7. '
' → logprob: -15.267680168151855
    8. '  ' → logprob: -15.642680168151855
    9. 'p' → logprob: -16.51767921447754
    10. '[q' → logprob: -16.58017921447754

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28500714898109436
    2. ':' → logprob: -1.535007119178772
    3. '   ' → logprob: -4.035006999969482
    4. ' all' → logprob: -4.785006999969482
    5. 'all' → logprob: -5.160006999969482
    6. '(all' → logprob: -7.660006999969482
    7. ' in' → logprob: -9.16000747680664
    8. 'All' → logprob: -9.91000747680664
    9. ' :
' → logprob: -10.78500747680664
    10. '	all' → logprob: -11.16000747680664

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019643394276499748
    2. 'all' → logprob: -4.019643306732178
    3. ' all' → logprob: -6.519643306732178
    4. '	all' → logprob: -11.894643783569336
    5. '    
' → logprob: -12.019643783569336
    6. '
' → logprob: -13.269643783569336
    7. '{
' → logprob: -14.269643783569336
    8. '  ' → logprob: -14.519643783569336
    9. '```' → logprob: -14.644643783569336
    10. '    ' → logprob: -15.019643783569336

Token 158: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.0019291093340143561
    2. ' all' → logprob: -6.25192928314209
    3. '
' → logprob: -15.37692928314209
    4. '   ' → logprob: -15.37692928314209
    5. ' ' → logprob: -18.251928329467773
    6. '	all' → logprob: -18.626928329467773
    7. '  ' → logprob: -19.876928329467773
    8. '    
' → logprob: -20.501928329467773
    9. ' 
' → logprob: -20.751928329467773
    10. '    ' → logprob: -20.751928329467773

Token 159: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.0219828002154827e-05
    2. 'List' → logprob: -11.750020027160645
    3. 'list' → logprob: -11.750020027160645
    4. '.append' → logprob: -12.375020027160645
    5. 'append' → logprob: -16.87502098083496
    6. '._' → logprob: -17.25002098083496
    7. '_' → logprob: -17.25002098083496
    8. '_LIST' → logprob: -18.00002098083496
    9. ' _' → logprob: -18.50002098083496
    10. 's' → logprob: -18.75002098083496

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003567959647625685
    2. '.' → logprob: -8.000356674194336
    3. 'append' → logprob: -10.875356674194336
    4. ' .' → logprob: -13.000356674194336
    5. '   ' → logprob: -15.875356674194336
    6. '.app' → logprob: -17.750356674194336
    7. ' append' → logprob: -17.750356674194336
    8. '.extend' → logprob: -18.250356674194336
    9. '_append' → logprob: -18.375356674194336
    10. '.add' → logprob: -18.500356674194336

Token 161: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. '(r' → logprob: -13.750001907348633
    3. '(' → logprob: -14.750001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '(I' → logprob: -20.375001907348633
    6. '(ii' → logprob: -20.750001907348633
    7. '(o' → logprob: -20.875001907348633
    8. '(int' → logprob: -21.250001907348633
    9. '(s' → logprob: -21.250001907348633
    10. '(x' → logprob: -21.750001907348633

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059779733419418335
    2. ')
' → logprob: -5.130978107452393
    3. ')i' → logprob: -10.505977630615234
    4. 'r' → logprob: -11.880977630615234
    5. ' )' → logprob: -11.880977630615234
    6. 'for' → logprob: -12.255977630615234
    7. '   ' → logprob: -14.505977630615234
    8. 'i' → logprob: -14.630977630615234
    9. ')
' → logprob: -14.630977630615234
    10. ' )
' → logprob: -14.880977630615234

Token 163: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.4849443838757e-06
    2. 'all' → logprob: -12.375004768371582
    3. ' for' → logprob: -16.625003814697266
    4. '```' → logprob: -17.250003814697266
    5. '
' → logprob: -17.625003814697266
    6. 'r' → logprob: -19.250003814697266
    7. '``' → logprob: -21.125003814697266
    8. '    
' → logprob: -21.125003814697266
    9. 'while' → logprob: -21.250003814697266
    10. '`' → logprob: -21.625003814697266

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20142485201358795
    2. ' i' → logprob: -1.7014248371124268
    3. ' ' → logprob: -12.076424598693848
    4. '	i' → logprob: -13.576424598693848
    5. '  ' → logprob: -13.701424598693848
    6. 'j' → logprob: -13.951424598693848
    7. '   ' → logprob: -14.576424598693848
    8. 'r' → logprob: -14.576424598693848
    9. ' in' → logprob: -14.701424598693848
    10. ' ' → logprob: -14.951424598693848

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029880305752158165
    2. 'in' → logprob: -3.5298802852630615
    3. 'r' → logprob: -9.15488052368164
    4. ' r' → logprob: -10.77988052368164
    5. ' ' → logprob: -13.27988052368164
    6. 's' → logprob: -14.40488052368164
    7. 'i' → logprob: -15.65488052368164
    8. 'In' → logprob: -16.15488052368164
    9. 'n' → logprob: -16.40488052368164
    10. '  ' → logprob: -16.52988052368164

Token 166: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.054884087294340134
    2. ' r' → logprob: -2.929884195327759
    3. '	r' → logprob: -14.42988395690918
    4. 'range' → logprob: -14.55488395690918
    5. '   ' → logprob: -15.67988395690918
    6. '_r' → logprob: -15.92988395690918
    7. ' range' → logprob: -16.05488395690918
    8. ' ' → logprob: -16.30488395690918
    9. '[r' → logprob: -16.30488395690918
    10. '(r' → logprob: -17.17988395690918

Token 167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31335511803627014
    2. ':' → logprob: -1.3133550882339478
    3. 'all' → logprob: -9.813355445861816
    4. '   ' → logprob: -10.938355445861816
    5. ' all' → logprob: -11.938355445861816
    6. '[' → logprob: -12.938355445861816
    7. '):
' → logprob: -12.938355445861816
    8. 'in' → logprob: -13.188355445861816
    9. ')' → logprob: -13.188355445861816
    10. ':
' → logprob: -13.938355445861816

Token 168: '   ' (ID: 271)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3413273096084595
    2. '   ' → logprob: -1.3413273096084595
    3. ' all' → logprob: -3.59132719039917
    4. 'if' → logprob: -9.716327667236328
    5. ' ' → logprob: -11.091327667236328
    6. '	all' → logprob: -11.091327667236328
    7. ' if' → logprob: -11.841327667236328
    8. '  ' → logprob: -12.091327667236328
    9. '       ' → logprob: -12.466327667236328
    10. '    ' → logprob: -12.966327667236328

Token 169: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.02603273093700409
    2. ' all' → logprob: -3.7760326862335205
    3. '   ' → logprob: -5.9010329246521
    4. 'if' → logprob: -10.276032447814941
    5. '  ' → logprob: -12.276032447814941
    6. ' ' → logprob: -12.526032447814941
    7. ' if' → logprob: -13.401032447814941
    8. '    ' → logprob: -14.151032447814941
    9. '       ' → logprob: -14.276032447814941
    10. '	all' → logprob: -14.651032447814941

Token 170: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4498052223643754e-05
    2. 'list' → logprob: -11.375014305114746
    3. 'List' → logprob: -13.250014305114746
    4. '.append' → logprob: -13.750014305114746
    5. 'append' → logprob: -15.875014305114746
    6. '   ' → logprob: -17.500015258789062
    7. '_' → logprob: -18.250015258789062
    8. 's' → logprob: -18.500015258789062
    9. '[' → logprob: -18.875015258789062
    10. '_LIST' → logprob: -18.875015258789062

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003245800966396928
    2. 'append' → logprob: -5.753245830535889
    3. '.' → logprob: -9.75324535369873
    4. '   ' → logprob: -12.37824535369873
    5. ' append' → logprob: -13.25324535369873
    6. ' .' → logprob: -13.50324535369873
    7. 'all' → logprob: -14.50324535369873
    8. ').' → logprob: -15.12824535369873
    9. 's' → logprob: -15.75324535369873
    10. 'All' → logprob: -15.75324535369873

Token 172: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -16.125003814697266
    4. 'i' → logprob: -19.000003814697266
    5. '(int' → logprob: -19.375003814697266
    6. '((' → logprob: -19.875003814697266
    7. '(
' → logprob: -20.500003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '(I' → logprob: -20.875003814697266
    10. '()' → logprob: -21.125003814697266

Token 173: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020937370136380196
    2. ')
' → logprob: -3.895937442779541
    3. ')

' → logprob: -7.895937442779541
    4. ')
' → logprob: -10.895936965942383
    5. ' )' → logprob: -14.020936965942383
    6. ')

' → logprob: -14.270936965942383
    7. '.sort' → logprob: -14.395936965942383
    8. ')`
' → logprob: -14.770936965942383
    9. ')`' → logprob: -14.895936965942383
    10. ')


' → logprob: -15.145936965942383

Token 174: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -7.822646693966817e-06
    2. 'sorted' → logprob: -13.000007629394531
    3. 'import' → logprob: -13.625007629394531
    4. 'a' → logprob: -13.875007629394531
    5. ' all' → logprob: -14.250007629394531
    6. 'from' → logprob: -14.500007629394531
    7. '```' → logprob: -14.500007629394531
    8. '
' → logprob: -14.875007629394531
    9. 'sort' → logprob: -15.625007629394531
    10. '.sort' → logprob: -15.625007629394531

Token 175: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.00001049041748
    3. '_sorted' → logprob: -12.87501049041748
    4. '_sum' → logprob: -15.00001049041748
    5. ' _' → logprob: -15.12501049041748
    6. '\' → logprob: -16.250009536743164
    7. '_li' → logprob: -16.625009536743164
    8. '_sort' → logprob: -16.625009536743164
    9. ' =' → logprob: -16.750009536743164
    10. '=' → logprob: -16.750009536743164

Token 176: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5760615468025208
    2. '.' → logprob: -0.8260615468025208
    3. '=' → logprob: -9.326061248779297
    4. ' =' → logprob: -11.076061248779297
    5. 'sort' → logprob: -11.701061248779297
    6. ' .' → logprob: -12.826061248779297
    7. '.s' → logprob: -13.201061248779297
    8. '.sorted' → logprob: -13.701061248779297
    9. '.=' → logprob: -14.576061248779297
    10. 'all' → logprob: -14.576061248779297

Token 177: '()
' (ID: 1234)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0013763030292466283
    2. '()' → logprob: -6.751376152038574
    3. 'reverse' → logprob: -8.751376152038574
    4. '()
' → logprob: -10.251376152038574
    5. '(' → logprob: -11.376376152038574
    6. '.reverse' → logprob: -14.876376152038574
    7. ' reverse' → logprob: -15.626376152038574
    8. 'Reverse' → logprob: -15.876376152038574
    9. '(re' → logprob: -15.876376152038574
    10. '_reverse' → logprob: -16.37637710571289

Token 178: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.006286268122494221
    2. 'reverse' → logprob: -5.756286144256592
    3. 'print' → logprob: -6.756286144256592
    4. 'for' → logprob: -7.006286144256592
    5. 'answer' → logprob: -8.13128662109375
    6. '[::-' → logprob: -8.50628662109375
    7. 'result' → logprob: -9.25628662109375
    8. ' all' → logprob: -9.38128662109375
    9. 'a' → logprob: -10.00628662109375
    10. 'sum' → logprob: -10.00628662109375

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00030304977553896606
    2. 'list' → logprob: -8.125303268432617
    3. '_' → logprob: -12.625303268432617
    4. 'reverse' → logprob: -13.875303268432617
    5. 'List' → logprob: -15.000303268432617
    6. '_l' → logprob: -15.125303268432617
    7. '_lists' → logprob: -15.125303268432617
    8. '\' → logprob: -15.375303268432617
    9. '_reverse' → logprob: -15.500303268432617
    10. '=' → logprob: -15.500303268432617

Token 180: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.006402119528502226
    2. 'reverse' → logprob: -5.881402015686035
    3. '=' → logprob: -6.506402015686035
    4. '(reverse' → logprob: -7.006402015686035
    5. '<|end|>' → logprob: -7.881402015686035
    6. ' =' → logprob: -8.256402015686035
    7. '[::-' → logprob: -8.506402015686035
    8. '.' → logprob: -9.131402015686035
    9. ' reverse' → logprob: -9.256402015686035
    10. '_reverse' → logprob: -10.631402015686035

Token 181: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018232580623589456
    2. '(' → logprob: -8.875182151794434
    3. '()
' → logprob: -10.125182151794434
    4. '()`' → logprob: -14.250182151794434
    5. '()]' → logprob: -14.750182151794434
    6. '())' → logprob: -15.000182151794434
    7. '()

' → logprob: -15.375182151794434
    8. '()\' → logprob: -15.500182151794434
    9. '()
' → logprob: -15.875182151794434
    10. '()[' → logprob: -16.00018310546875

Token 182: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5069790482521057
    2. 'result' → logprob: -1.506978988647461
    3. 'ans' → logprob: -2.631978988647461
    4. 'total' → logprob: -3.006978988647461
    5. 'answer' → logprob: -3.506978988647461
    6. 'sum' → logprob: -4.131978988647461
    7. 'all' → logprob: -5.131978988647461
    8. 'res' → logprob: -6.506978988647461
    9. 's' → logprob: -6.881978988647461
    10. 'score' → logprob: -9.256978988647461

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232622623443604
    2. '=' → logprob: -0.8982622623443604
    3. '_' → logprob: -9.273262023925781
    4. 's' → logprob: -10.773262023925781
    5. ' ' → logprob: -11.898262023925781
    6. 'space' → logprob: -12.523262023925781
    7. '_=' → logprob: -12.773262023925781
    8. ',' → logprob: -13.023262023925781
    9. '=[]' → logprob: -13.773262023925781
    10. '＝' → logprob: -13.898262023925781

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024064991623163223
    2. 'sum' → logprob: -3.7740650177001953
    3. ' sum' → logprob: -7.649065017700195
    4. ' ' → logprob: -8.024065017700195
    5. 'all' → logprob: -11.524065017700195
    6. 'ans' → logprob: -13.649065017700195
    7. '(sum' → logprob: -13.649065017700195
    8. ' all' → logprob: -14.399065017700195
    9. 's' → logprob: -14.399065017700195
    10. '   ' → logprob: -15.524065017700195

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08896531164646149
    2. 'sum' → logprob: -2.46396541595459
    3. 'str' → logprob: -11.08896541595459
    4. 'all' → logprob: -12.21396541595459
    5. ' sum' → logprob: -13.58896541595459
    6. 'int' → logprob: -14.21396541595459
    7. '(sum' → logprob: -14.21396541595459
    8. ' ' → logprob: -14.33896541595459
    9. 'ans' → logprob: -14.33896541595459
    10. 's' → logprob: -15.33896541595459

Token 186: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.334533878136426e-05
    2. ' for' → logprob: -10.125042915344238
    3. '
' → logprob: -13.875042915344238
    4. 'count' → logprob: -14.125042915344238
    5. 'print' → logprob: -14.250042915344238
    6. '=' → logprob: -15.000042915344238
    7. '```' → logprob: -16.000043869018555
    8. ',' → logprob: -16.375043869018555
    9. '(' → logprob: -17.250043869018555
    10. '<|end|>' → logprob: -17.375043869018555

Token 187: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.5
    3. 'i' → logprob: -17.0
    4. 'count' → logprob: -17.375
    5. 'print' → logprob: -18.0
    6. 'ans' → logprob: -18.25
    7. '
' → logprob: -19.125
    8. 'while' → logprob: -19.75
    9. 'all' → logprob: -20.5
    10. '	for' → logprob: -20.625

Token 188: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04301128908991814
    2. ' i' → logprob: -3.16801118850708
    3. ' ' → logprob: -12.043011665344238
    4. '_i' → logprob: -13.793011665344238
    5. '	i' → logprob: -13.918011665344238
    6. '_' → logprob: -14.168011665344238
    7. 'range' → logprob: -14.793011665344238
    8. '   ' → logprob: -14.918011665344238
    9. 'ans' → logprob: -14.918011665344238
    10. '```' → logprob: -15.043011665344238

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03810792788863182
    2. 'in' → logprob: -3.2881078720092773
    3. ' ' → logprob: -9.788107872009277
    4. 'range' → logprob: -12.788107872009277
    5. ',' → logprob: -13.038107872009277
    6. ' i' → logprob: -13.538107872009277
    7. 'import' → logprob: -14.663107872009277
    8. 'n' → logprob: -14.788107872009277
    9. '0' → logprob: -14.788107872009277
    10. '  ' → logprob: -14.913107872009277

Token 190: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024916162714362144
    2. 'all' → logprob: -4.399916172027588
    3. ' range' → logprob: -4.399916172027588
    4. ' all' → logprob: -10.02491569519043
    5. 'ran' → logprob: -13.14991569519043
    6. '(range' → logprob: -13.39991569519043
    7. 'ans' → logprob: -14.52491569519043
    8. 'r' → logprob: -14.52491569519043
    9. '	range' → logprob: -14.77491569519043
    10. 'rang' → logprob: -14.89991569519043

Token 191: '(x' (ID: 4061)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34129148721694946
    2. '(a' → logprob: -1.3412914276123047
    3. 'x' → logprob: -3.7162914276123047
    4. '(x' → logprob: -5.966291427612305
    5. ' a' → logprob: -7.466291427612305
    6. '(' → logprob: -9.466291427612305
    7. ' x' → logprob: -10.841291427612305
    8. '   ' → logprob: -11.216291427612305
    9. ' (' → logprob: -11.216291427612305
    10. 'c' → logprob: -11.341291427612305

Token 192: '+y' (ID: 102753)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.46413156390190125
    2. '+' → logprob: -1.0891315937042236
    3. '+y' → logprob: -3.4641315937042236
    4. '+x' → logprob: -6.3391313552856445
    5. '+b' → logprob: -6.4641313552856445
    6. '+c' → logprob: -10.089131355285645
    7. '+a' → logprob: -10.339131355285645
    8. '+
' → logprob: -10.589131355285645
    9. ')' → logprob: -11.089131355285645
    10. ' ' → logprob: -11.464131355285645

Token 193: '):
' (ID: 1883)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.5545181035995483
    2. '+' → logprob: -1.1795181035995483
    3. '):' → logprob: -2.679518222808838
    4. ' +' → logprob: -3.179518222808838
    5. '+a' → logprob: -5.429518222808838
    6. '):
' → logprob: -5.929518222808838
    7. '+k' → logprob: -8.05451774597168
    8. 'a' → logprob: -8.92951774597168
    9. ')' → logprob: -9.05451774597168
    10. '+b' → logprob: -9.30451774597168

Token 194: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13001687824726105
    2. '   ' → logprob: -2.255016803741455
    3. ' ans' → logprob: -4.130016803741455
    4. '	ans' → logprob: -7.005016803741455
    5. '(ans' → logprob: -10.255017280578613
    6. '    
' → logprob: -11.880017280578613
    7. '
' → logprob: -13.130017280578613
    8. '  ' → logprob: -13.255017280578613
    9. ',' → logprob: -13.630017280578613
    10. '```' → logprob: -13.630017280578613

Token 195: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.843177233240567e-05
    2. ' ans' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.750018119812012
    4. '	ans' → logprob: -14.625018119812012
    5. '(ans' → logprob: -16.125019073486328
    6. 'answer' → logprob: -18.125019073486328
    7. '
' → logprob: -18.250019073486328
    8. '```' → logprob: -18.750019073486328
    9. '_ans' → logprob: -19.125019073486328
    10. 'if' → logprob: -19.250019073486328

Token 196: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31332921981811523
    2. '+=' → logprob: -1.3133292198181152
    3. '+' → logprob: -10.063329696655273
    4. '=' → logprob: -11.188329696655273
    5. ' =' → logprob: -12.188329696655273
    6. ' +' → logprob: -12.813329696655273
    7. ']+=' → logprob: -13.313329696655273
    8. '+='' → logprob: -14.313329696655273
    9. '+="' → logprob: -15.313329696655273
    10. '+=(' → logprob: -15.313329696655273

Token 197: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.029750604182481766
    2. ' all' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.27975082397461
    4. '	all' → logprob: -17.27975082397461
    5. 'int' → logprob: -17.40475082397461
    6. ' ' → logprob: -18.27975082397461
    7. '(all' → logprob: -19.65475082397461
    8. 'ans' → logprob: -20.15475082397461
    9. '  ' → logprob: -20.52975082397461
    10. 'a' → logprob: -21.02975082397461

Token 198: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4021237802808173e-05
    2. 'ist' → logprob: -11.250014305114746
    3. '_' → logprob: -14.375014305114746
    4. 'list' → logprob: -14.875014305114746
    5. 'List' → logprob: -18.00001335144043
    6. '[' → logprob: -18.50001335144043
    7. '_lst' → logprob: -19.12501335144043
    8. ' _' → logprob: -19.37501335144043
    9. 's' → logprob: -19.50001335144043
    10. '```' → logprob: -19.50001335144043

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.676292231422849e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -16.750017166137695
    4. ' [' → logprob: -17.875017166137695
    5. 'i' → logprob: -18.125017166137695
    6. '```' → logprob: -18.625017166137695
    7. '[j' → logprob: -19.875017166137695
    8. '[int' → logprob: -20.000017166137695
    9. '\[' → logprob: -20.125017166137695
    10. '[I' → logprob: -20.125017166137695

Token 200: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.392824874026701e-05
    2. ')
' → logprob: -11.12503433227539
    3. ']' → logprob: -11.25003433227539
    4. '}' → logprob: -13.25003433227539
    5. ' )' → logprob: -13.37503433227539
    6. '）' → logprob: -14.25003433227539
    7. '+' → logprob: -14.50003433227539
    8. '<|end|>' → logprob: -14.62503433227539
    9. '*' → logprob: -14.75003433227539
    10. '```' → logprob: -15.50003433227539

Token 201: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3319124011322856e-05
    2. '
' → logprob: -11.250022888183594
    3. ' print' → logprob: -11.500022888183594
    4. '```' → logprob: -16.750022888183594
    5. '
' → logprob: -18.375022888183594
    6. '\n' → logprob: -18.500022888183594
    7. '``' → logprob: -19.625022888183594
    8. '.print' → logprob: -20.125022888183594
    9. '(print' → logprob: -20.125022888183594
    10. ' 
' → logprob: -20.500022888183594

Token 202: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519417703151703
    2. '(ans' → logprob: -1.5019418001174927
    3. '(
' → logprob: -12.001941680908203
    4. '()' → logprob: -13.376941680908203
    5. ' (' → logprob: -13.751941680908203
    6. '('' → logprob: -14.001941680908203
    7. 'ans' → logprob: -14.376941680908203
    8. '("("' → logprob: -14.376941680908203
    9. '(

' → logprob: -14.376941680908203
    10. '(answer' → logprob: -14.376941680908203

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -17.625
    4. '))' → logprob: -18.75
    5. ')`' → logprob: -19.125
    6. '')' → logprob: -20.125
    7. '}' → logprob: -20.875
    8. '()' → logprob: -21.0
    9. '）' → logprob: -21.25
    10. '+' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 201
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 179
Précision stricte (1ère position): 44.78%
Précision adaptée (1ère position): 47.76%
Précision (top 10): 89.05%
================================================================================
