================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_k = input().split()
n = int(n_k[0])
k = int(n_k[1])
s = list(input())
s[k-1] = s[k-1].lower()
result = ''
for ch in s:
    result += ch
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_k' (ID: 11637)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048364102840423584
    2. '10' → logprob: -3.7983641624450684
    3. '32' → logprob: -5.048364162445068
    4. '0' → logprob: -5.173364162445068
    5. '1' → logprob: -5.423364162445068
    6. '5' → logprob: -5.923364162445068
    7. '20' → logprob: -6.423364162445068
    8. '"' → logprob: -7.173364162445068
    9. '3' → logprob: -7.673364162445068
    10. ''' → logprob: -7.923364162445068

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037980206310749054
    2. ''' → logprob: -3.787980318069458
    3. '"' → logprob: -5.162980079650879
    4. '_' → logprob: -5.537980079650879
    5. '[' → logprob: -6.037980079650879
    6. '.' → logprob: -7.037980079650879
    7. '('' → logprob: -7.662980079650879
    8. '(
' → logprob: -8.162980079650879
    9. '("("' → logprob: -9.037980079650879
    10. '```' → logprob: -9.037980079650879

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22753433883190155
    2. '+' → logprob: -1.977534294128418
    3. '.strip' → logprob: -3.727534294128418
    4. ')' → logprob: -4.477534294128418
    5. '*' → logprob: -5.227534294128418
    6. '_' → logprob: -5.477534294128418
    7. ' ' → logprob: -5.477534294128418
    8. '=' → logprob: -5.602534294128418
    9. '#' → logprob: -6.102534294128418
    10. '.split' → logprob: -6.352534294128418

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018322535324841738
    2. '()' → logprob: -6.376832485198975
    3. '(
' → logprob: -10.001832008361816
    4. '('' → logprob: -10.501832008361816
    5. '(

' → logprob: -11.001832008361816
    6. '("("' → logprob: -11.376832008361816
    7. '((' → logprob: -12.251832008361816
    8. '```' → logprob: -12.376832008361816
    9. '(`' → logprob: -12.626832008361816
    10. '"' → logprob: -12.626832008361816

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35873377323150635
    2. '=' → logprob: -1.4837337732315063
    3. ' =' → logprob: -3.358733654022217
    4. 'n' → logprob: -3.858733654022217
    5. '_' → logprob: -5.108733654022217
    6. '[n' → logprob: -5.608733654022217
    7. '#' → logprob: -5.983733654022217
    8. '[:]' → logprob: -7.108733654022217
    9. '_n' → logprob: -7.233733654022217
    10. ',' → logprob: -7.233733654022217

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023596934974193573
    2. '_k' → logprob: -4.02359676361084
    3. '[' → logprob: -5.27359676361084
    4. '_n' → logprob: -8.89859676361084
    5. '[_' → logprob: -9.77359676361084
    6. '_[' → logprob: -10.14859676361084
    7. ' _' → logprob: -12.02359676361084
    8. '[]' → logprob: -12.27359676361084
    9. '_)' → logprob: -12.39859676361084
    10. '\[' → logprob: -12.39859676361084

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.475679874420166
    2. ' int' → logprob: -0.975679874420166
    3. ' n' → logprob: -7.225679874420166
    4. 'len' → logprob: -8.100679397583008
    5. 'n' → logprob: -8.350679397583008
    6. '[int' → logprob: -8.725679397583008
    7. ' len' → logprob: -9.225679397583008
    8. ' ' → logprob: -10.850679397583008
    9. 'list' → logprob: -11.100679397583008
    10. ' list' → logprob: -11.600679397583008

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023455806076526642
    2. '(n' → logprob: -3.773455858230591
    3. '('' → logprob: -8.898455619812012
    4. '("("' → logprob: -9.898455619812012
    5. 'n' → logprob: -11.898455619812012
    6. '("' → logprob: -12.773455619812012
    7. '(

' → logprob: -13.023455619812012
    8. '(
' → logprob: -13.023455619812012
    9. '_n' → logprob: -13.523455619812012
    10. '('_' → logprob: -13.898455619812012

Token 11: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.3500497341156006
    2. '[' → logprob: -1.2250497341156006
    3. ')' → logprob: -7.47504997253418
    4. '_n' → logprob: -8.35004997253418
    5. ')_' → logprob: -8.60004997253418
    6. '_' → logprob: -8.72504997253418
    7. '[_' → logprob: -8.97504997253418
    8. '```' → logprob: -9.97504997253418
    9. '_tokens' → logprob: -9.97504997253418
    10. '_[' → logprob: -10.10004997253418

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[n' → logprob: -13.625001907348633
    3. ')' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.500001907348633
    5. '\[' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.875001907348633
    7. '```' → logprob: -17.875001907348633
    8. '[k' → logprob: -18.625001907348633
    9. ')[' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.250001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003502434410620481
    2. '1' → logprob: -8.000349998474121
    3. ' ' → logprob: -11.125349998474121
    4. ')' → logprob: -17.875350952148438
    5. '```' → logprob: -19.125350952148438
    6. '   ' → logprob: -19.250350952148438
    7. ''' → logprob: -19.375350952148438
    8. '`' → logprob: -19.375350952148438
    9. '  ' → logprob: -19.750350952148438
    10. ']' → logprob: -20.250350952148438

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5384283065795898
    2. ')' → logprob: -0.9134283065795898
    3. ']' → logprob: -4.28842830657959
    4. ')]' → logprob: -6.78842830657959
    5. ')])' → logprob: -8.66342830657959
    6. ''])' → logprob: -9.66342830657959
    7. '[' → logprob: -10.66342830657959
    8. ' ])' → logprob: -11.53842830657959
    9. ')
' → logprob: -11.66342830657959
    10. '])]' → logprob: -11.78842830657959

Token 15: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002380403922870755
    2. ' k' → logprob: -6.12738037109375
    3. '_k' → logprob: -9.12738037109375
    4. 'm' → logprob: -10.25238037109375
    5. ')' → logprob: -10.50238037109375
    6. 'n' → logprob: -12.37738037109375
    7. '```' → logprob: -12.37738037109375
    8. '_' → logprob: -12.75238037109375
    9. ',k' → logprob: -12.87738037109375
    10. ',' → logprob: -12.87738037109375

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7057604789733887
    2. ' =' → logprob: -0.9557604789733887
    3. '_' → logprob: -2.7057604789733887
    4. ')' → logprob: -3.5807604789733887
    5. ' ' → logprob: -4.080760478973389
    6. ''' → logprob: -5.830760478973389
    7. '<|end|>' → logprob: -6.080760478973389
    8. '[' → logprob: -6.205760478973389
    9. '_space' → logprob: -7.955760478973389
    10. '  ' → logprob: -8.080760955810547

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022443771362305
    2. ' int' → logprob: -1.910224437713623
    3. '=int' → logprob: -16.53522491455078
    4. ' n' → logprob: -16.78522491455078
    5. '(int' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.03522491455078
    7. '[int' → logprob: -18.41022491455078
    8. '<int' → logprob: -18.41022491455078
    9. 'n' → logprob: -18.66022491455078
    10. '	int' → logprob: -19.16022491455078

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6450917720794678
    2. '(' → logprob: -0.7700917720794678
    3. '(k' → logprob: -4.395092010498047
    4. ' (' → logprob: -11.270092010498047
    5. '((' → logprob: -11.270092010498047
    6. '("("' → logprob: -11.520092010498047
    7. '```' → logprob: -11.895092010498047
    8. '()' → logprob: -12.145092010498047
    9. '(input' → logprob: -13.270092010498047
    10. ')(' → logprob: -13.270092010498047

Token 19: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -6.110668618930504e-05
    2. '_' → logprob: -10.75006103515625
    3. ')' → logprob: -11.50006103515625
    4. '_)' → logprob: -11.62506103515625
    5. '[_' → logprob: -12.12506103515625
    6. '[' → logprob: -12.12506103515625
    7. ')_' → logprob: -12.50006103515625
    8. '[k' → logprob: -13.00006103515625
    9. '])' → logprob: -13.75006103515625
    10. '_j' → logprob: -14.87506103515625

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.625000953674316
    3. ')[' → logprob: -15.750000953674316
    4. ')' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '[
' → logprob: -17.25
    7. '1' → logprob: -17.5
    8. '   ' → logprob: -17.75
    9. '][' → logprob: -18.5
    10. '\[' → logprob: -18.75

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. '])' → logprob: -10.625025749206543
    3. '0' → logprob: -13.750025749206543
    4. '```' → logprob: -16.750024795532227
    5. ']' → logprob: -17.000024795532227
    6. ')' → logprob: -17.625024795532227
    7. ' ' → logprob: -17.750024795532227
    8. '2' → logprob: -18.375024795532227
    9. '])
' → logprob: -18.625024795532227
    10. '   ' → logprob: -19.375024795532227

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -15.125000953674316
    3. ']' → logprob: -15.500000953674316
    4. '')' → logprob: -16.000001907348633
    5. '])' → logprob: -16.125001907348633
    6. '`)' → logprob: -16.500001907348633
    7. ' )' → logprob: -16.625001907348633
    8. '）' → logprob: -17.000001907348633
    9. ')]' → logprob: -18.000001907348633
    10. '()' → logprob: -18.000001907348633

Token 23: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7189346551895142
    2. 'for' → logprob: -2.3439345359802246
    3. 'if' → logprob: -2.5939345359802246
    4. 'a' → logprob: -2.7189345359802246
    5. 'n' → logprob: -3.0939345359802246
    6. 's' → logprob: -3.2189345359802246
    7. 'x' → logprob: -3.8439345359802246
    8. 'f' → logprob: -3.8439345359802246
    9. 'r' → logprob: -3.8439345359802246
    10. '[' → logprob: -4.093934535980225

Token 24: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7889235615730286
    2. '[' → logprob: -1.2889235019683838
    3. '=' → logprob: -1.5389235019683838
    4. ' =' → logprob: -3.288923501968384
    5. '_' → logprob: -4.413923740386963
    6. '[:]' → logprob: -5.913923740386963
    7. '[:' → logprob: -7.413923740386963
    8. ' ' → logprob: -7.538923740386963
    9. 'paces' → logprob: -7.913923740386963
    10. ')' → logprob: -7.913923740386963

Token 25: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22565093636512756
    2. ' input' → logprob: -1.6006509065628052
    3. '"' → logprob: -9.475650787353516
    4. '""' → logprob: -9.975650787353516
    5. ''' → logprob: -10.350650787353516
    6. '(input' → logprob: -11.600650787353516
    7. '=input' → logprob: -11.600650787353516
    8. '	input' → logprob: -11.725650787353516
    9. 's' → logprob: -11.850650787353516
    10. '[input' → logprob: -11.975650787353516

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035973370540887117
    2. '(s' → logprob: -5.753597259521484
    3. 's' → logprob: -8.003597259521484
    4. '(
' → logprob: -10.878597259521484
    5. '(

' → logprob: -11.503597259521484
    6. '('' → logprob: -11.628597259521484
    7. '("("' → logprob: -11.628597259521484
    8. ' (' → logprob: -11.628597259521484
    9. '()' → logprob: -12.128597259521484
    10. '(input' → logprob: -12.753597259521484

Token 27: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.576278030872345
    2. '()' → logprob: -0.826278030872345
    3. '().' → logprob: -8.201277732849121
    4. ')' → logprob: -10.826277732849121
    5. '();)' → logprob: -11.326277732849121
    6. '(' → logprob: -11.451277732849121
    7. '()]' → logprob: -12.201277732849121
    8. '()))' → logprob: -12.701277732849121
    9. '());' → logprob: -12.826277732849121
    10. '()`' → logprob: -13.076277732849121

Token 28: 's' (ID: 82)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.576788067817688
    2. 's' → logprob: -1.826788067817688
    3. '.' → logprob: -2.7017879486083984
    4. '=' → logprob: -2.7017879486083984
    5. 'i' → logprob: -3.0767879486083984
    6. 'if' → logprob: -3.8267879486083984
    7. ':' → logprob: -4.576787948608398
    8. ')' → logprob: -4.701787948608398
    9. '[:]' → logprob: -4.701787948608398
    10. 'for' → logprob: -4.826787948608398

Token 29: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29526790976524353
    2. '.' → logprob: -1.420267939567566
    3. '<|end|>' → logprob: -5.4202680587768555
    4. '[:]' → logprob: -5.7952680587768555
    5. 's' → logprob: -6.4202680587768555
    6. '[::-' → logprob: -6.5452680587768555
    7. ')' → logprob: -7.5452680587768555
    8. '```' → logprob: -7.9202680587768555
    9. '.pop' → logprob: -8.045268058776855
    10. '[k' → logprob: -8.170268058776855

Token 30: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2928055226802826
    2. '=' → logprob: -1.667805552482605
    3. ')' → logprob: -3.5428054332733154
    4. ']' → logprob: -3.6678054332733154
    5. '<|end|>' → logprob: -5.4178056716918945
    6. '-=' → logprob: -5.9178056716918945
    7. '=k' → logprob: -7.1678056716918945
    8. '[' → logprob: -7.9178056716918945
    9. '.lower' → logprob: -7.9178056716918945
    10. '#' → logprob: -8.042805671691895

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -15.500004768371582
    4. ')' → logprob: -15.625004768371582
    5. '0' → logprob: -15.875004768371582
    6. ']' → logprob: -16.625003814697266
    7. '>' → logprob: -17.125003814697266
    8. '=' → logprob: -17.812503814697266
    9. '１' → logprob: -17.875003814697266
    10. 'to' → logprob: -18.250003814697266

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32632210850715637
    2. '=' → logprob: -1.326322078704834
    3. ']=' → logprob: -4.701322078704834
    4. ' =' → logprob: -6.701322078704834
    5. ')' → logprob: -6.701322078704834
    6. '.upper' → logprob: -7.951322078704834
    7. '']' → logprob: -8.326322555541992
    8. '[' → logprob: -9.201322555541992
    9. '='' → logprob: -9.326322555541992
    10. ' ]' → logprob: -9.451322555541992

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007924937643110752
    2. 'a' → logprob: -6.632925033569336
    3. '<|end|>' → logprob: -6.757925033569336
    4. 's' → logprob: -7.007925033569336
    5. ' =' → logprob: -7.257925033569336
    6. 'lower' → logprob: -7.632925033569336
    7. '```' → logprob: -7.632925033569336
    8. '.lower' → logprob: -8.007925033569336
    9. '.' → logprob: -8.132925033569336
    10. '='' → logprob: -8.132925033569336

Token 34: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011197074316442013
    2. ''s' → logprob: -4.511197090148926
    3. ''' → logprob: -9.136197090148926
    4. '"s' → logprob: -11.261197090148926
    5. ' s' → logprob: -11.636197090148926
    6. 'str' → logprob: -12.136197090148926
    7. ''a' → logprob: -13.761197090148926
    8. '   ' → logprob: -13.761197090148926
    9. 'tolower' → logprob: -14.136197090148926
    10. ''user' → logprob: -14.136197090148926

Token 35: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3720536530017853
    2. '.lower' → logprob: -1.372053623199463
    3. '[' → logprob: -3.122053623199463
    4. 'lower' → logprob: -5.747053623199463
    5. ''' → logprob: -5.997053623199463
    6. '[s' → logprob: -6.372053623199463
    7. 's' → logprob: -6.997053623199463
    8. '[n' → logprob: -7.622053623199463
    9. '```' → logprob: -7.622053623199463
    10. ''[' → logprob: -7.747053623199463

Token 36: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.39348191022872925
    2. ':].' → logprob: -1.768481969833374
    3. ''].' → logprob: -3.018481969833374
    4. '.lower' → logprob: -3.268481969833374
    5. '-' → logprob: -3.768481969833374
    6. '.upper' → logprob: -3.893481969833374
    7. ']' → logprob: -5.268481731414795
    8. '1' → logprob: -5.893481731414795
    9. 'lower' → logprob: -6.643481731414795
    10. '```' → logprob: -6.643481731414795

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.750024795532227
    3. ''' → logprob: -13.500024795532227
    4. '2' → logprob: -14.625024795532227
    5. ''s' → logprob: -14.625024795532227
    6. '0' → logprob: -14.875024795532227
    7. '```' → logprob: -15.687524795532227
    8. '=' → logprob: -16.000024795532227
    9. 'lower' → logprob: -16.125024795532227
    10. '}' → logprob: -16.500024795532227

Token 38: '].' (ID: 1651)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.05003982409834862
    2. '.upper' → logprob: -3.050039768218994
    3. '.' → logprob: -7.050039768218994
    4. '.capitalize' → logprob: -8.675040245056152
    5. ').' → logprob: -8.925040245056152
    6. '].' → logprob: -9.175040245056152
    7. ''.' → logprob: -9.550040245056152
    8. '.replace' → logprob: -9.925040245056152
    9. '.is' → logprob: -11.675040245056152
    10. ' .' → logprob: -11.925040245056152

Token 39: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.006286625750362873
    2. 'upper' → logprob: -5.38128662109375
    3. 'swap' → logprob: -6.50628662109375
    4. 'capitalize' → logprob: -9.63128662109375
    5. 'isl' → logprob: -9.75628662109375
    6. 'replace' → logprob: -10.13128662109375
    7. 'low' → logprob: -12.63128662109375
    8. '.lower' → logprob: -13.50628662109375
    9. 'clear' → logprob: -14.25628662109375
    10. 'isdigit' → logprob: -14.63128662109375

Token 40: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133745491504669
    2. '()' → logprob: -1.3133745193481445
    3. '(
' → logprob: -9.688374519348145
    4. '(

' → logprob: -10.813374519348145
    5. '()(' → logprob: -12.063374519348145
    6. '()`' → logprob: -12.438374519348145
    7. '('' → logprob: -13.063374519348145
    8. '()
' → logprob: -13.063374519348145
    9. '```' → logprob: -13.313374519348145
    10. '(**' → logprob: -13.438374519348145

Token 41: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013119110371917486
    2. '```' → logprob: -9.125131607055664
    3. ' print' → logprob: -12.125131607055664
    4. '#print' → logprob: -12.375131607055664
    5. '#' → logprob: -12.875131607055664
    6. '<|end|>' → logprob: -13.250131607055664
    7. '''' → logprob: -13.375131607055664
    8. '(print' → logprob: -13.875131607055664
    9. ')' → logprob: -13.875131607055664
    10. 'prin' → logprob: -14.000131607055664

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1056448444724083
    2. ' =' → logprob: -2.355644941329956
    3. '.append' → logprob: -6.605644702911377
    4. '(' → logprob: -6.855644702911377
    5. 's' → logprob: -7.105644702911377
    6. '.' → logprob: -7.105644702911377
    7. '+' → logprob: -7.605644702911377
    8. '+=' → logprob: -8.355645179748535
    9. '()' → logprob: -8.605645179748535
    10. '.extend' → logprob: -8.855645179748535

Token 43: ' ''
' (ID: 25366)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.3231145441532135
    2. '"' → logprob: -1.3231145143508911
    3. ' "".' → logprob: -5.448114395141602
    4. ' ''.' → logprob: -6.073114395141602
    5. '""' → logprob: -6.448114395141602
    6. 's' → logprob: -6.698114395141602
    7. '''' → logprob: -8.698114395141602
    8. '"s' → logprob: -9.073114395141602
    9. ''' → logprob: -9.823114395141602
    10. '   ' → logprob: -11.573114395141602

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003728774609044194
    2. 'print' → logprob: -8.125372886657715
    3. ' for' → logprob: -10.000372886657715
    4. '<|end|>' → logprob: -10.500372886657715
    5. '.' → logprob: -13.750372886657715
    6. '```' → logprob: -14.000372886657715
    7. '.for' → logprob: -14.125372886657715
    8. 's' → logprob: -15.125372886657715
    9. 'result' → logprob: -15.375372886657715
    10. '#' → logprob: -15.625372886657715

Token 45: ' ch' (ID: 549)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11761943995952606
    2. ' c' → logprob: -2.242619514465332
    3. 'i' → logprob: -6.242619514465332
    4. ' _' → logprob: -6.617619514465332
    5. 'c' → logprob: -7.117619514465332
    6. ' ' → logprob: -7.617619514465332
    7. '_' → logprob: -8.867619514465332
    8. ' char' → logprob: -10.617619514465332
    9. ' ch' → logprob: -10.867619514465332
    10. ' s' → logprob: -12.242619514465332

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005278107710182667
    2. 'in' → logprob: -5.25527811050415
    3. ' ' → logprob: -10.255277633666992
    4. '	in' → logprob: -12.505277633666992
    5. 's' → logprob: -13.005277633666992
    6. ' ' → logprob: -14.005277633666992
    7. '  ' → logprob: -14.505277633666992
    8. 'n' → logprob: -14.755277633666992
    9. '_in' → logprob: -15.630277633666992
    10. '   ' → logprob: -15.880277633666992

Token 47: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3132624924182892
    2. ' s' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.438262939453125
    4. '	s' → logprob: -15.688262939453125
    5. 'range' → logprob: -16.063262939453125
    6. ' range' → logprob: -16.063262939453125
    7. '(s' → logprob: -16.813262939453125
    8. '_s' → logprob: -17.313262939453125
    9. ' ' → logprob: -17.688262939453125
    10. '`s' → logprob: -18.188262939453125

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.575563020305708e-05
    2. ':
' → logprob: -9.750065803527832
    3. '):' → logprob: -13.000065803527832
    4. '{' → logprob: -13.500065803527832
    5. '<|end|>' → logprob: -13.750065803527832
    6. '+:' → logprob: -14.125065803527832
    7. 'result' → logprob: -14.750065803527832
    8. '+' → logprob: -15.000065803527832
    9. '```' → logprob: -15.375065803527832
    10. ':**' → logprob: -15.500065803527832

Token 49: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10104025900363922
    2. '   ' → logprob: -2.3510403633117676
    3. ' result' → logprob: -7.226040363311768
    4. '	result' → logprob: -9.22603988647461
    5. ' ' → logprob: -12.85103988647461
    6. '<|end|>' → logprob: -13.47603988647461
    7. '[result' → logprob: -13.60103988647461
    8. '```' → logprob: -14.35103988647461
    9. ',result' → logprob: -14.35103988647461
    10. '(result' → logprob: -15.22603988647461

Token 50: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -4.4849443838757e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' result' → logprob: -14.250004768371582
    4. '	result' → logprob: -16.625003814697266
    5. 'answer' → logprob: -18.250003814697266
    6. 'print' → logprob: -18.875003814697266
    7. ' ' → logprob: -19.750003814697266
    8. '[result' → logprob: -19.875003814697266
    9. 'response' → logprob: -20.000003814697266
    10. 'res' → logprob: -20.500003814697266

Token 51: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011689142556861043
    2. ' +=' → logprob: -6.876168727874756
    3. '+' → logprob: -9.626169204711914
    4. '+='' → logprob: -9.876169204711914
    5. '+="' → logprob: -11.126169204711914
    6. '+=(' → logprob: -12.751169204711914
    7. ']+=' → logprob: -14.626169204711914
    8. '=' → logprob: -14.751169204711914
    9. '.append' → logprob: -16.626169204711914
    10. '```' → logprob: -16.751169204711914

Token 52: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -4.842555426876061e-06
    2. ' ch' → logprob: -12.250004768371582
    3. 'chr' → logprob: -19.3750057220459
    4. '	ch' → logprob: -19.8750057220459
    5. '(ch' → logprob: -20.1250057220459
    6. '[ch' → logprob: -20.7500057220459
    7. '-ch' → logprob: -21.8750057220459
    8. 'str' → logprob: -22.0000057220459
    9. '   ' → logprob: -22.6250057220459
    10. 'c' → logprob: -23.2500057220459

Token 53: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.500000953674316
    3. '```' → logprob: -16.25
    4. '.print' → logprob: -16.75
    5. '#print' → logprob: -16.75
    6. '
' → logprob: -17.125
    7. '<|end|>' → logprob: -17.375
    8. 'pr' → logprob: -17.75
    9. '(print' → logprob: -18.125
    10. '-print' → logprob: -18.5

Token 54: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '```' → logprob: -17.875
    4. '.print' → logprob: -19.0
    5. '#print' → logprob: -19.0
    6. '(print' → logprob: -19.25
    7. '-print' → logprob: -19.25
    8. 'pr' → logprob: -19.375
    9. 'prin' → logprob: -19.5
    10. '<|end|>' → logprob: -19.75

Token 55: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023444974794983864
    2. '(result' → logprob: -3.773444890975952
    3. '('' → logprob: -8.773445129394531
    4. '()' → logprob: -10.648445129394531
    5. '("("' → logprob: -11.023445129394531
    6. 'result' → logprob: -13.523445129394531
    7. '(`' → logprob: -14.023445129394531
    8. '(
' → logprob: -14.273445129394531
    9. '((' → logprob: -15.148445129394531
    10. '(res' → logprob: -15.523445129394531

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.625000953674316
    3. ')`' → logprob: -16.375
    4. ')
' → logprob: -16.75
    5. '')' → logprob: -16.875
    6. ' )' → logprob: -16.875
    7. '`)' → logprob: -17.375
    8. '")' → logprob: -18.875
    9. '```' → logprob: -19.25
    10. ')")' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 35.19%
Précision (top 10): 79.63%
================================================================================
