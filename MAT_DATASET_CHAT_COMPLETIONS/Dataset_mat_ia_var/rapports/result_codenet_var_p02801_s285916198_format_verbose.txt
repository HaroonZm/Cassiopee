================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_next_character_and_display():
    user_input_character = input()
    
    ascii_value_of_input = ord(user_input_character)
    
    ascii_value_of_next_character = ascii_value_of_input + 1
    
    next_character = chr(ascii_value_of_next_character)
    
    print(next_character)

if __name__ == '__main__':
    get_next_character_and_display()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_next' (ID: 25436)
  → Token d'amorce (pas de prédiction)

Token 3: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4294862151145935
    2. '_token' → logprob: -1.0544862747192383
    3. '(' → logprob: -8.179486274719238
    4. '```' → logprob: -8.804486274719238
    5. '_char' → logprob: -9.054486274719238
    6. '_word' → logprob: -9.804486274719238
    7. '_character' → logprob: -9.929486274719238
    8. ' _' → logprob: -11.054486274719238
    9. '_(' → logprob: -11.179486274719238
    10. '__' → logprob: -11.679486274719238

Token 4: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008642955799587071
    2. '():' → logprob: -7.500864505767822
    3. '(:' → logprob: -9.250864028930664
    4. ':' → logprob: -9.500864028930664
    5. '```' → logprob: -10.125864028930664
    6. '_' → logprob: -10.250864028930664
    7. ' (' → logprob: -11.375864028930664
    8. '()' → logprob: -11.875864028930664
    9. '(_:' → logprob: -12.250864028930664
    10. '('' → logprob: -12.500864028930664

Token 5: '_display' (ID: 33613)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6180922389030457
    2. '_position' → logprob: -1.9930922985076904
    3. '_return' → logprob: -2.1180922985076904
    4. '_token' → logprob: -3.7430922985076904
    5. '_line' → logprob: -3.8680922985076904
    6. '_value' → logprob: -4.118092060089111
    7. '_input' → logprob: -4.118092060089111
    8. '_index' → logprob: -4.243092060089111
    9. '_count' → logprob: -4.493092060089111
    10. '_state' → logprob: -4.618092060089111

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008840723894536495
    2. '():' → logprob: -7.875884056091309
    3. '```' → logprob: -8.500884056091309
    4. '('' → logprob: -9.500884056091309
    5. '(:' → logprob: -9.625884056091309
    6. ':' → logprob: -10.375884056091309
    7. ' (' → logprob: -10.750884056091309
    8. '(`' → logprob: -11.000884056091309
    9. '(parent' → logprob: -11.500884056091309
    10. '("("' → logprob: -11.750884056091309

Token 7: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.825468122959137
    2. '   ' → logprob: -1.3254680633544922
    3. '\' → logprob: -1.7004680633544922
    4. '(' → logprob: -3.450468063354492
    5. '\n' → logprob: -4.325468063354492
    6. '    ' → logprob: -4.575468063354492
    7. ' 
' → logprob: -4.575468063354492
    8. ' ' → logprob: -4.700468063354492
    9. '    
' → logprob: -4.825468063354492
    10. ''' → logprob: -5.075468063354492

Token 8: ' user' (ID: 1825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3567225933074951
    2. 'c' → logprob: -1.7317225933074951
    3. '```' → logprob: -1.8567225933074951
    4. 'a' → logprob: -2.606722593307495
    5. 'x' → logprob: -2.731722593307495
    6. 'n' → logprob: -2.731722593307495
    7. '`' → logprob: -3.481722593307495
    8. 'character' → logprob: -3.606722593307495
    9. 'input' → logprob: -4.106722831726074
    10. 's' → logprob: -4.231722831726074

Token 9: '_input' (ID: 12507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0512431859970093
    2. '_input' → logprob: -1.4262431859970093
    3. '()' → logprob: -1.5512431859970093
    4. '_' → logprob: -2.676243305206299
    5. '_name' → logprob: -3.301243305206299
    6. '.' → logprob: -3.676243305206299
    7. '=' → logprob: -4.426243305206299
    8. 'name' → logprob: -4.676243305206299
    9. '(' → logprob: -4.801243305206299
    10. '   ' → logprob: -5.301243305206299

Token 10: '_character' (ID: 99888)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29791590571403503
    2. '()' → logprob: -1.7979159355163574
    3. '.' → logprob: -3.0479159355163574
    4. '(' → logprob: -4.297915935516357
    5. '[:]' → logprob: -4.547915935516357
    6. '_' → logprob: -4.922915935516357
    7. '[]' → logprob: -6.047915935516357
    8. '```' → logprob: -6.297915935516357
    9. '=' → logprob: -6.422915935516357
    10. '('.')' → logprob: -7.047915935516357

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5416136980056763
    2. '=' → logprob: -1.1666136980056763
    3. '_' → logprob: -2.4166135787963867
    4. '.' → logprob: -5.541613578796387
    5. '[' → logprob: -5.541613578796387
    6. 's' → logprob: -5.791613578796387
    7. ')' → logprob: -6.291613578796387
    8. '[:]' → logprob: -6.541613578796387
    9. '(' → logprob: -7.541613578796387
    10. '_space' → logprob: -7.666613578796387

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869456350803375
    2. 'input' → logprob: -1.1369456052780151
    3. ' ' → logprob: -9.761945724487305
    4. '<input' → logprob: -12.886945724487305
    5. ' ord' → logprob: -12.886945724487305
    6. '=input' → logprob: -13.261945724487305
    7. '(input' → logprob: -13.511945724487305
    8. ' ' → logprob: -13.886945724487305
    9. 'get' → logprob: -14.136945724487305
    10. '	input' → logprob: -14.386945724487305

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003923568408936262
    2. '('' → logprob: -5.753923416137695
    3. '()' → logprob: -8.128923416137695
    4. '("("' → logprob: -8.128923416137695
    5. '```' → logprob: -9.628923416137695
    6. '(`' → logprob: -11.128923416137695
    7. ''' → logprob: -11.253923416137695
    8. '("")' → logprob: -11.628923416137695
    9. '(
' → logprob: -11.628923416137695
    10. '`' → logprob: -11.878923416137695

Token 14: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6023095846176147
    2. '.' → logprob: -1.8523095846176147
    3. ' ' → logprob: -2.1023097038269043
    4. '    
' → logprob: -3.3523097038269043
    5. '```' → logprob: -3.6023097038269043
    6. ' if' → logprob: -3.8523097038269043
    7. 'if' → logprob: -4.227309703826904
    8. ':' → logprob: -4.727309703826904
    9. 'return' → logprob: -4.852309703826904
    10. ',' → logprob: -5.227309703826904

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3066025972366333
    2. 'p' → logprob: -2.3066024780273438
    3. ' if' → logprob: -3.3066024780273438
    4. 'c' → logprob: -3.4316024780273438
    5. 'n' → logprob: -3.5566024780273438
    6. 'if' → logprob: -3.8066024780273438
    7. 'i' → logprob: -4.181602478027344
    8. 'print' → logprob: -4.431602478027344
    9. ' next' → logprob: -5.681602478027344
    10. 'next' → logprob: -5.931602478027344

Token 16: ' ascii' (ID: 104363)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6933274865150452
    2. 'n' → logprob: -1.1933274269104004
    3. '   ' → logprob: -2.6933274269104004
    4. 'return' → logprob: -2.9433274269104004
    5. 'p' → logprob: -4.1933274269104
    6. 'print' → logprob: -4.4433274269104
    7. 'i' → logprob: -4.4433274269104
    8. 'if' → logprob: -4.5683274269104
    9. 'c' → logprob: -5.5683274269104
    10. ' next' → logprob: -5.6933274269104

Token 17: '_value' (ID: 6734)
  Prédit: '_code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.40538665652275085
    2. '_value' → logprob: -1.9053866863250732
    3. '_val' → logprob: -2.1553866863250732
    4. '_' → logprob: -2.9053866863250732
    5. '_char' → logprob: -4.655386447906494
    6. '_ord' → logprob: -6.780386447906494
    7. '(' → logprob: -7.280386447906494
    8. '_num' → logprob: -7.530386447906494
    9. '```' → logprob: -8.030386924743652
    10. '_codes' → logprob: -8.155386924743652

Token 18: '_of' (ID: 8023)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.028123140335083
    2. ' +' → logprob: -1.903123140335083
    3. ' =' → logprob: -2.028123140335083
    4. '(' → logprob: -2.153123140335083
    5. '_' → logprob: -2.278123140335083
    6. ' +=' → logprob: -2.778123140335083
    7. '=' → logprob: -3.403123140335083
    8. '   ' → logprob: -4.278122901916504
    9. '_ascii' → logprob: -5.278122901916504
    10. ')' → logprob: -5.528122901916504

Token 19: '_input' (ID: 12507)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.01132449321448803
    2. 'user' → logprob: -4.511324405670166
    3. '_user' → logprob: -8.511324882507324
    4. ' ' → logprob: -9.761324882507324
    5. '_' → logprob: -11.636324882507324
    6. '(user' → logprob: -12.011324882507324
    7. '"user' → logprob: -14.386324882507324
    8. ''user' → logprob: -15.011324882507324
    9. '	user' → logprob: -15.261324882507324
    10. '_character' → logprob: -15.511324882507324

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5280300378799438
    2. '_character' → logprob: -0.9030300378799438
    3. '_char' → logprob: -6.028029918670654
    4. '+' → logprob: -6.653029918670654
    5. '=' → logprob: -7.778029918670654
    6. ')' → logprob: -8.528030395507812
    7. 'character' → logprob: -8.653030395507812
    8. '[' → logprob: -9.528030395507812
    9. ' =' → logprob: -9.903030395507812
    10. '_=' → logprob: -10.028030395507812

Token 21: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.026367641985416412
    2. 'ord' → logprob: -3.651367664337158
    3. ' ' → logprob: -9.9013671875
    4. '(ord' → logprob: -11.5263671875
    5. ' user' → logprob: -12.6513671875
    6. '   ' → logprob: -13.7763671875
    7. ' ' → logprob: -14.0263671875
    8. 'user' → logprob: -14.2763671875
    9. ' input' → logprob: -14.4013671875
    10. '```' → logprob: -15.6513671875

Token 22: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.4746283292770386
    2. '(' → logprob: -0.9746283292770386
    3. 'user' → logprob: -7.849628448486328
    4. '('' → logprob: -9.224628448486328
    5. '(
' → logprob: -10.849628448486328
    6. '("("' → logprob: -10.974628448486328
    7. ' (' → logprob: -12.099628448486328
    8. ' user' → logprob: -12.724628448486328
    9. '(User' → logprob: -12.849628448486328
    10. '()' → logprob: -12.974628448486328

Token 23: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0031270908657461405
    2. 'put' → logprob: -6.628127098083496
    3. '_' → logprob: -6.878127098083496
    4. '_put' → logprob: -8.628127098083496
    5. ')' → logprob: -8.753127098083496
    6. 'input' → logprob: -9.628127098083496
    7. '_p' → logprob: -9.753127098083496
    8. '_user' → logprob: -9.878127098083496
    9. '_)' → logprob: -10.003127098083496
    10. 'p' → logprob: -10.128127098083496

Token 24: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.00011677479778882116
    2. 'character' → logprob: -10.000116348266602
    3. ')_' → logprob: -10.625116348266602
    4. '_char' → logprob: -11.125116348266602
    5. '_' → logprob: -11.500116348266602
    6. '_value' → logprob: -12.000116348266602
    7. ')' → logprob: -12.125116348266602
    8. '_CHARACTER' → logprob: -12.625116348266602
    9. '_)' → logprob: -12.750116348266602
    10. '_user' → logprob: -14.000116348266602

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021057340200059116
    2. '+' → logprob: -9.000210762023926
    3. ' )' → logprob: -10.375210762023926
    4. '   ' → logprob: -10.500210762023926
    5. ')+' → logprob: -10.875210762023926
    6. ')
' → logprob: -12.625210762023926
    7. ' +' → logprob: -13.625210762023926
    8. ' ' → logprob: -13.750210762023926
    9. '+)' → logprob: -13.875210762023926
    10. '[' → logprob: -14.125210762023926

Token 26: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9012758135795593
    2. '
' → logprob: -1.276275873184204
    3. '   ' → logprob: -1.901275873184204
    4. '\n' → logprob: -2.526275873184204
    5. '  
' → logprob: -3.776275873184204
    6. '```' → logprob: -3.776275873184204
    7. ' 
' → logprob: -4.401275634765625
    8. '   
' → logprob: -4.401275634765625
    9. '+' → logprob: -5.651275634765625
    10. '     
' → logprob: -5.901275634765625

Token 27: '   ' (ID: 271)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.11034734547138214
    2. ' next' → logprob: -3.360347270965576
    3. '   ' → logprob: -3.735347270965576
    4. 'n' → logprob: -3.860347270965576
    5. 'if' → logprob: -4.235347270965576
    6. 'return' → logprob: -4.985347270965576
    7. ' if' → logprob: -7.110347270965576
    8. '```' → logprob: -7.235347270965576
    9. 'ascii' → logprob: -7.485347270965576
    10. ' return' → logprob: -7.735347270965576

Token 28: ' ascii' (ID: 104363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2603267431259155
    2. 'next' → logprob: -1.5103267431259155
    3. '   ' → logprob: -5.260326862335205
    4. 'return' → logprob: -6.260326862335205
    5. ' next' → logprob: -7.135326862335205
    6. '```' → logprob: -8.385326385498047
    7. ' ' → logprob: -10.385326385498047
    8. 'if' → logprob: -10.510326385498047
    9. ' return' → logprob: -10.635326385498047
    10. 'r' → logprob: -10.760326385498047

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0009605350787751377
    2. '_' → logprob: -7.250960350036621
    3. '_val' → logprob: -8.625960350036621
    4. '```' → logprob: -10.875960350036621
    5. '<|end|>' → logprob: -11.250960350036621
    6. '_values' → logprob: -11.625960350036621
    7. 'value' → logprob: -12.375960350036621
    8. '_to' → logprob: -12.375960350036621
    9. '_code' → logprob: -12.875960350036621
    10. ' _' → logprob: -13.125960350036621

Token 30: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.1852690726518631
    2. '_' → logprob: -1.8102691173553467
    3. '_next' → logprob: -5.435268878936768
    4. '_for' → logprob: -8.310269355773926
    5. '+' → logprob: -8.560269355773926
    6. '_plus' → logprob: -8.685269355773926
    7. '_value' → logprob: -8.935269355773926
    8. '_to' → logprob: -9.185269355773926
    9. '+=' → logprob: -9.810269355773926
    10. ' +=' → logprob: -9.810269355773926

Token 31: '_next' (ID: 25436)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.25209271907806396
    2. 'input' → logprob: -1.502092719078064
    3. '_next' → logprob: -10.252092361450195
    4. 'user' → logprob: -10.627092361450195
    5. 'next' → logprob: -10.627092361450195
    6. '_' → logprob: -11.252092361450195
    7. 'the' → logprob: -11.377092361450195
    8. ' input' → logprob: -11.502092361450195
    9. '_character' → logprob: -11.627092361450195
    10. 'ascii' → logprob: -11.752092361450195

Token 32: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.011712318286299706
    2. '=' → logprob: -5.136712551116943
    3. '_' → logprob: -5.886712551116943
    4. ' =' → logprob: -6.011712551116943
    5. '_char' → logprob: -8.261712074279785
    6. 'character' → logprob: -8.386712074279785
    7. '_=' → logprob: -10.136712074279785
    8. '=_' → logprob: -12.386712074279785
    9. '_token' → logprob: -12.761712074279785
    10. 'Character' → logprob: -13.136712074279785

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16411523520946503
    2. '=' → logprob: -1.9141151905059814
    3. '+' → logprob: -5.7891154289245605
    4. ' +=' → logprob: -7.6641154289245605
    5. ' +' → logprob: -8.414114952087402
    6. '+=' → logprob: -9.289114952087402
    7. '_' → logprob: -10.539114952087402
    8. ' ' → logprob: -11.914114952087402
    9. '   ' → logprob: -13.039114952087402
    10. ')' → logprob: -13.914114952087402

Token 34: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.07889111340045929
    2. 'ascii' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.328890800476074
    4. '   ' → logprob: -15.453890800476074
    5. ' ASCII' → logprob: -15.703890800476074
    6. ' asci' → logprob: -15.953890800476074
    7. '_ascii' → logprob: -15.953890800476074
    8. ' ' → logprob: -16.57889175415039
    9. '  ' → logprob: -17.95389175415039
    10. '`' → logprob: -17.95389175415039

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.75000286102295
    3. '_val' → logprob: -15.12500286102295
    4. '_VALUE' → logprob: -17.500003814697266
    5. 'value' → logprob: -18.750003814697266
    6. '_v' → logprob: -18.875003814697266
    7. '_Value' → logprob: -18.875003814697266
    8. '```' → logprob: -19.000003814697266
    9. '_values' → logprob: -19.500003814697266
    10. 'Value' → logprob: -19.875003814697266

Token 36: '_of' (ID: 8023)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.5759661793708801
    2. '_of' → logprob: -0.8259661793708801
    3. '_to' → logprob: -11.200965881347656
    4. '_' → logprob: -11.575965881347656
    5. '_val' → logprob: -14.075965881347656
    6. '_for' → logprob: -14.325965881347656
    7. 'value' → logprob: -14.325965881347656
    8. '+' → logprob: -14.825965881347656
    9. '```' → logprob: -15.325965881347656
    10. '_plus' → logprob: -15.450965881347656

Token 37: '_input' (ID: 12507)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05289686098694801
    2. '_input' → logprob: -3.0528969764709473
    3. '_value' → logprob: -6.302896976470947
    4. 'put' → logprob: -7.177896976470947
    5. 'n' → logprob: -7.552896976470947
    6. 'value' → logprob: -7.802896976470947
    7. 'next' → logprob: -8.052896499633789
    8. '(input' → logprob: -8.302896499633789
    9. ' input' → logprob: -9.052896499633789
    10. 'x' → logprob: -10.802896499633789

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022492945194244
    2. ' +' → logprob: -1.9102249145507812
    3. ' +
' → logprob: -15.035224914550781
    4. ' plus' → logprob: -15.535224914550781
    5. '+i' → logprob: -15.910224914550781
    6. '+
' → logprob: -16.28522491455078
    7. '+[' → logprob: -17.66022491455078
    8. '()+' → logprob: -17.78522491455078
    9. '＋' → logprob: -18.28522491455078
    10. '+r' → logprob: -18.66022491455078

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163628220558167
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.389163970947266
    4. '   ' → logprob: -17.639163970947266
    5. '```' → logprob: -19.514163970947266
    6. '' → logprob: -19.764163970947266
    7. ' one' → logprob: -19.889163970947266
    8. '32' → logprob: -21.264163970947266
    9. '2' → logprob: -21.389163970947266
    10. '	' → logprob: -21.639163970947266

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.250003814697266
    4. '```' → logprob: -19.250003814697266
    5. '' → logprob: -20.250003814697266
    6. ' ' → logprob: -21.250003814697266
    7. '`' → logprob: -21.875003814697266
    8. '  ' → logprob: -21.875003814697266
    9. '１' → logprob: -22.000003814697266
    10. '
' → logprob: -22.875003814697266

Token 41: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6068664789199829
    2. '
' → logprob: -1.231866478919983
    3. '   ' → logprob: -2.2318663597106934
    4. '```' → logprob: -3.6068663597106934
    5. '\n' → logprob: -4.106866359710693
    6. '   
' → logprob: -5.481866359710693
    7. '  
' → logprob: -5.731866359710693
    8. ' return' → logprob: -6.856866359710693
    9. 'return' → logprob: -6.981866359710693
    10. ' 
' → logprob: -7.106866359710693

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20232780277729034
    2. ' next' → logprob: -1.827327847480774
    3. 'next' → logprob: -4.827327728271484
    4. '    
' → logprob: -4.952327728271484
    5. ' return' → logprob: -5.077327728271484
    6. 'return' → logprob: -7.952327728271484
    7. '
' → logprob: -8.202327728271484
    8. 'n' → logprob: -9.452327728271484
    9. ' 
' → logprob: -9.702327728271484
    10. '```' → logprob: -9.827327728271484

Token 43: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.011617477983236313
    2. ' next' → logprob: -4.886617660522461
    3. 'return' → logprob: -5.761617660522461
    4. 'print' → logprob: -7.386617660522461
    5. '   ' → logprob: -8.761617660522461
    6. 'n' → logprob: -10.761617660522461
    7. ' return' → logprob: -11.136617660522461
    8. 'try' → logprob: -11.386617660522461
    9. 'result' → logprob: -11.636617660522461
    10. '    
' → logprob: -11.886617660522461

Token 44: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.026904847472906113
    2. '_' → logprob: -3.651904821395874
    3. '_char' → logprob: -7.526905059814453
    4. '_value' → logprob: -11.776905059814453
    5. ' _' → logprob: -11.901905059814453
    6. '_user' → logprob: -11.901905059814453
    7. '_space' → logprob: -12.151905059814453
    8. '_c' → logprob: -12.276905059814453
    9. '_car' → logprob: -12.776905059814453
    10. '__' → logprob: -12.901905059814453

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13671401143074036
    2. ' =' → logprob: -2.136713981628418
    3. '_' → logprob: -4.636713981628418
    4. ')' → logprob: -11.261713981628418
    5. '(' → logprob: -11.386713981628418
    6. '_=' → logprob: -11.886713981628418
    7. '```' → logprob: -12.011713981628418
    8. '_to' → logprob: -13.386713981628418
    9. '()' → logprob: -13.511713981628418
    10. ' ' → logprob: -13.886713981628418

Token 46: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.061972279101610184
    2. ' chr' → logprob: -2.8119723796844482
    3. '(chr' → logprob: -12.311972618103027
    4. '_chr' → logprob: -15.686972618103027
    5. ' ' → logprob: -17.31197166442871
    6. 'char' → logprob: -18.18697166442871
    7. 'ch' → logprob: -18.93697166442871
    8. 'Chr' → logprob: -19.68697166442871
    9. '   ' → logprob: -19.68697166442871
    10. ' ' → logprob: -20.31197166442871

Token 47: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.1602407842874527
    2. '(' → logprob: -1.9102407693862915
    3. '(
' → logprob: -11.91024112701416
    4. '(at' → logprob: -13.03524112701416
    5. '(ast' → logprob: -13.41024112701416
    6. '(next' → logprob: -13.53524112701416
    7. '(ord' → logprob: -13.53524112701416
    8. '()' → logprob: -14.28524112701416
    9. '(ac' → logprob: -14.78524112701416
    10. 'ascii' → logprob: -14.78524112701416

Token 48: 'cii' (ID: 30278)
  Prédit: 'cii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cii' → logprob: -0.0011560549028217793
    2. 'c' → logprob: -7.501155853271484
    3. 'ci' → logprob: -8.251155853271484
    4. 'ii' → logprob: -8.876155853271484
    5. 'i' → logprob: -9.126155853271484
    6. '```' → logprob: -9.376155853271484
    7. 'ascii' → logprob: -13.126155853271484
    8. 'I' → logprob: -13.876155853271484
    9. '_' → logprob: -14.501155853271484
    10. 'iii' → logprob: -14.626155853271484

Token 49: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.041768160182983e-05
    2. '_val' → logprob: -9.750080108642578
    3. '_' → logprob: -10.875080108642578
    4. 'value' → logprob: -13.500080108642578
    5. '_va' → logprob: -14.625080108642578
    6. '_v' → logprob: -14.875080108642578
    7. 'val' → logprob: -15.250080108642578
    8. '_VALUE' → logprob: -15.500080108642578
    9. 'valu' → logprob: -15.625080108642578
    10. 'Value' → logprob: -16.375080108642578

Token 50: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.3868771195411682
    2. '_value' → logprob: -1.1368770599365234
    3. 'value' → logprob: -13.261877059936523
    4. '_' → logprob: -13.511877059936523
    5. 'of' → logprob: -13.636877059936523
    6. ')_' → logprob: -14.761877059936523
    7. '_val' → logprob: -15.511877059936523
    8. ')' → logprob: -15.511877059936523
    9. '_values' → logprob: -15.761877059936523
    10. '```' → logprob: -15.886877059936523

Token 51: '_next' (ID: 25436)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.05216571316123009
    2. '_next' → logprob: -3.1771657466888428
    3. '_value' → logprob: -4.802165508270264
    4. 'value' → logprob: -8.052165985107422
    5. 'input' → logprob: -8.427165985107422
    6. '_input' → logprob: -8.802165985107422
    7. 'n' → logprob: -9.427165985107422
    8. ' next' → logprob: -10.177165985107422
    9. '_' → logprob: -10.427165985107422
    10. 'ascii' → logprob: -10.552165985107422

Token 52: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.2523927688598633
    2. '_value' → logprob: -1.5023927688598633
    3. 'character' → logprob: -8.002392768859863
    4. 'value' → logprob: -9.502392768859863
    5. '_' → logprob: -10.127392768859863
    6. '_char' → logprob: -12.377392768859863
    7. ')' → logprob: -12.502392768859863
    8. '_)' → logprob: -12.752392768859863
    9. '_CHARACTER' → logprob: -13.877392768859863
    10. 'Character' → logprob: -14.627392768859863

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -15.250015258789062
    4. '()' → logprob: -19.250015258789062
    5. ')

' → logprob: -19.250015258789062
    6. ')return' → logprob: -19.500015258789062
    7. ')`' → logprob: -19.500015258789062
    8. '')' → logprob: -19.750015258789062
    9. '))' → logprob: -19.750015258789062
    10. ')
' → logprob: -20.000015258789062

Token 54: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10044561326503754
    2. '    
' → logprob: -2.350445508956909
    3. 'print' → logprob: -9.100445747375488
    4. '```' → logprob: -9.850445747375488
    5. '
' → logprob: -10.725445747375488
    6. '  
' → logprob: -11.725445747375488
    7. '<|end|>' → logprob: -11.975445747375488
    8. '    
    
' → logprob: -12.100445747375488
    9. '   
' → logprob: -12.100445747375488
    10. ' print' → logprob: -12.100445747375488

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02527051419019699
    2. 'print' → logprob: -3.775270462036133
    3. ' print' → logprob: -6.775270462036133
    4. '    
' → logprob: -7.150270462036133
    5. '```' → logprob: -9.275270462036133
    6. 'return' → logprob: -14.400270462036133
    7. '   ' → logprob: -14.775270462036133
    8. '
' → logprob: -14.775270462036133
    9. '  
' → logprob: -15.150270462036133
    10. '   
' → logprob: -15.150270462036133

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.584239938296378e-06
    2. ' print' → logprob: -12.250007629394531
    3. 'return' → logprob: -13.000007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '```' → logprob: -17.25000762939453
    6. 'pr' → logprob: -18.37500762939453
    7. 'prin' → logprob: -20.12500762939453
    8. '    
' → logprob: -20.25000762939453
    9. ' ' → logprob: -21.12500762939453
    10. 'p' → logprob: -21.87500762939453

Token 57: '(next' (ID: 28757)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47459110617637634
    2. '(next' → logprob: -0.9745911359786987
    3. '('' → logprob: -8.474591255187988
    4. '("("' → logprob: -8.474591255187988
    5. '()' → logprob: -10.099591255187988
    6. '(f' → logprob: -10.099591255187988
    7. '((' → logprob: -12.224591255187988
    8. ' (' → logprob: -13.099591255187988
    9. 'next' → logprob: -13.474591255187988
    10. '(
' → logprob: -14.099591255187988

Token 58: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -6.630610641877865e-06
    2. 'character' → logprob: -12.375006675720215
    3. '_char' → logprob: -13.625006675720215
    4. '_' → logprob: -14.750006675720215
    5. '_CHARACTER' → logprob: -14.750006675720215
    6. 'Character' → logprob: -15.125006675720215
    7. '(character' → logprob: -16.8750057220459
    8. 't' → logprob: -17.3750057220459
    9. ' character' → logprob: -18.7500057220459
    10. '<Character' → logprob: -18.8750057220459

Token 59: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. '')' → logprob: -15.000000953674316
    4. ')
' → logprob: -17.5
    5. '`)' → logprob: -17.5
    6. '))' → logprob: -17.625
    7. '")' → logprob: -17.875
    8. ')`' → logprob: -18.5
    9. '()' → logprob: -19.5
    10. '```' → logprob: -20.125

Token 60: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7524110078811646
    2. '\n' → logprob: -1.6274110078811646
    3. '
' → logprob: -2.002410888671875
    4. '<|end|>' → logprob: -2.252410888671875
    5. '#' → logprob: -3.502410888671875
    6. ')' → logprob: -3.877410888671875
    7. '```' → logprob: -4.877410888671875
    8. '\' → logprob: -5.127410888671875
    9. ' ' → logprob: -5.127410888671875
    10. 'newline' → logprob: -5.252410888671875

Token 61: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005587568040937185
    2. '__' → logprob: -5.755587577819824
    3. ' ' → logprob: -6.755587577819824
    4. '_' → logprob: -7.005587577819824
    5. ' _' → logprob: -8.755587577819824
    6. ' ' → logprob: -9.005587577819824
    7. ' True' → logprob: -11.255587577819824
    8. '  ' → logprob: -11.505587577819824
    9. ' ‌' → logprob: -11.755587577819824
    10. ' ___' → logprob: -12.505587577819824

Token 62: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06886418908834457
    2. ' __' → logprob: -3.068864107131958
    3. '.__' → logprob: -4.568864345550537
    4. '.' → logprob: -5.568864345550537
    5. ' ==' → logprob: -6.068864345550537
    6. ' .' → logprob: -6.318864345550537
    7. '__.__' → logprob: -7.318864345550537
    8. '_' → logprob: -7.568864345550537
    9. '__.' → logprob: -8.443863868713379
    10. '___' → logprob: -9.318863868713379

Token 63: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.778209353797138e-05
    2. '___' → logprob: -10.375067710876465
    3. '__.__' → logprob: -11.250067710876465
    4. '__
' → logprob: -11.375067710876465
    5. '____' → logprob: -11.875067710876465
    6. '_' → logprob: -13.625067710876465
    7. '__.' → logprob: -13.625067710876465
    8. '==' → logprob: -14.125067710876465
    9. '__

' → logprob: -14.625067710876465
    10. '__["' → logprob: -14.625067710876465

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.039833132177591324
    2. '==' → logprob: -3.2898330688476562
    3. '=="' → logprob: -6.789833068847656
    4. '=='' → logprob: -8.414833068847656
    5. '__' → logprob: -8.664833068847656
    6. ' =="' → logprob: -9.164833068847656
    7. '"' → logprob: -10.164833068847656
    8. '[' → logprob: -10.664833068847656
    9. ' =' → logprob: -11.039833068847656
    10. ' ' → logprob: -11.164833068847656

Token 65: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.576655387878418
    2. ''' → logprob: -0.826655387878418
    3. ' "' → logprob: -8.326655387878418
    4. '__' → logprob: -8.576655387878418
    5. ' "__' → logprob: -9.076655387878418
    6. ' '' → logprob: -9.076655387878418
    7. ' '__' → logprob: -10.076655387878418
    8. ' __' → logprob: -11.701655387878418
    9. ''s' → logprob: -13.201655387878418
    10. '"user' → logprob: -13.951655387878418

Token 66: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00034058792516589165
    2. 'name' → logprob: -8.000340461730957
    3. '_main' → logprob: -13.000340461730957
    4. 'm' → logprob: -13.875340461730957
    5. '__' → logprob: -14.250340461730957
    6. '_' → logprob: -14.250340461730957
    7. 'ma' → logprob: -14.625340461730957
    8. ' main' → logprob: -16.500341415405273
    9. 'mai' → logprob: -17.000341415405273
    10. 'maine' → logprob: -17.500341415405273

Token 67: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6932680606842041
    2. '__':
' → logprob: -0.6932680606842041
    3. '_' → logprob: -9.068267822265625
    4. '__:' → logprob: -12.568267822265625
    5. '__":
' → logprob: -13.443267822265625
    6. ''' → logprob: -15.693267822265625
    7. '__('' → logprob: -15.818267822265625
    8. '':' → logprob: -15.943267822265625
    9. '___' → logprob: -16.068267822265625
    10. '__
' → logprob: -16.693267822265625

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04890231415629387
    2. ' get' → logprob: -3.9239022731781006
    3. '    
' → logprob: -3.9239022731781006
    4. ' 
' → logprob: -5.04890251159668
    5. '    ' → logprob: -8.42390251159668
    6. '   
' → logprob: -8.54890251159668
    7. '  
' → logprob: -8.54890251159668
    8. '<|end|>' → logprob: -8.67390251159668
    9. ' ' → logprob: -8.79890251159668
    10. '
' → logprob: -9.04890251159668

Token 69: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.4740810692310333
    2. 'get' (adapté à ' get') → logprob: -0.9740810394287109
    3. '   ' → logprob: -12.599081039428711
    4. '	get' → logprob: -14.974081039428711
    5. ' ' → logprob: -16.47408103942871
    6. '[get' → logprob: -16.97408103942871
    7. '(get' → logprob: -17.09908103942871
    8. ' ' → logprob: -17.34908103942871
    9. ' getchar' → logprob: -17.34908103942871
    10. 'g' → logprob: -17.59908103942871

Token 70: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -5.574251918005757e-05
    2. '_' → logprob: -10.000055313110352
    3. ' _' → logprob: -11.750055313110352
    4. '._' → logprob: -14.125055313110352
    5. '_NEXT' → logprob: -14.625055313110352
    6. '_get' → logprob: -15.125055313110352
    7. '```' → logprob: -15.125055313110352
    8. '__' → logprob: -16.12505531311035
    9. ')_' → logprob: -16.12505531311035
    10. '_n' → logprob: -16.62505531311035

Token 71: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.029777804389595985
    2. '_' → logprob: -3.529777765274048
    3. ' _' → logprob: -11.029777526855469
    4. '_CHARACTER' → logprob: -12.154777526855469
    5. '_char' → logprob: -12.404777526855469
    6. '__' → logprob: -15.029777526855469
    7. '_user' → logprob: -15.279777526855469
    8. '_c' → logprob: -15.529777526855469
    9. '<Character' → logprob: -15.904777526855469
    10. ' ' → logprob: -16.15477752685547

Token 72: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0024865958839654922
    2. '_' → logprob: -6.127486705780029
    3. '_character' → logprob: -8.877486228942871
    4. '()' → logprob: -9.127486228942871
    5. '_or' → logprob: -10.877486228942871
    6. '_to' → logprob: -12.377486228942871
    7. 'and' → logprob: -12.627486228942871
    8. '_a' → logprob: -12.877486228942871
    9. '```' → logprob: -12.877486228942871
    10. '_char' → logprob: -13.002486228942871

Token 73: '_display' (ID: 33613)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'display' → logprob: -0.1280161440372467
    2. '_display' → logprob: -2.128016233444214
    3. 'is' → logprob: -7.128015995025635
    4. 'play' → logprob: -8.378016471862793
    5. '"display' → logprob: -10.628016471862793
    6. '	display' → logprob: -11.253016471862793
    7. ' display' → logprob: -11.753016471862793
    8. '_DISPLAY' → logprob: -13.128016471862793
    9. '(display' → logprob: -13.503016471862793
    10. 'print' → logprob: -14.003016471862793

Token 74: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.984787902794778e-05
    2. '(' → logprob: -9.375100135803223
    3. '()
' → logprob: -12.000100135803223
    4. ' ()' → logprob: -12.125100135803223
    5. '`()' → logprob: -13.875100135803223
    6. '()`' → logprob: -14.750100135803223
    7. '()

' → logprob: -15.000100135803223
    8. '```' → logprob: -15.375100135803223
    9. '()<' → logprob: -15.750100135803223
    10. ']()' → logprob: -15.875100135803223


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 47.22%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 80.56%
================================================================================
