================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def read_input():
    input = sys.stdin.readline
    N, Q = map(int, input().split())
    EDGE = [list(map(int, input().split())) for _ in range(N-1)]
    Query = [list(map(int, input().split())) for _ in range(Q)]
    return N, Q, EDGE, Query

def make_empty_edgelist(N):
    return [dict() for _ in range(N+1)]

def build_edgelist(EDGE, EDGELIST):
    for x, y, c, l in EDGE:
        EDGELIST[x][y] = (c, l)
        EDGELIST[y][x] = (c, l)

def init_depth_and_used(N):
    DEPTH = [-1]*(N+1)
    DEPTH[1] = 0
    USED = [0]*(N+1)
    return DEPTH, USED

def make_euler_tour(N, EDGELIST, DEPTH, USED):
    QUE = deque([1])
    QUE2 = deque()
    EULER = []
    while QUE:
        process_euler_tour(QUE, QUE2, EULER, DEPTH, EDGELIST, USED)
    return EULER

def process_euler_tour(QUE, QUE2, EULER, DEPTH, EDGELIST, USED):
    x = QUE.pop()
    EULER.append((DEPTH[x], x))
    if USED[x] == 1:
        return
    for to in EDGELIST[x]:
        handle_possible_move(x, to, DEPTH, USED, QUE2)
    extend_queue(QUE, QUE2)
    USED[x] = 1

def handle_possible_move(x, to, DEPTH, USED, QUE2):
    if USED[to] == 0:
        DEPTH[to] = DEPTH[x]+1
        QUE2.append(to)

def extend_queue(QUE, QUE2):
    QUE.extend(QUE2)
    QUE2.clear()

def min_max_p_from_euler(N, EULER):
    MINP = [(1<<30)]*(N+1)
    MAXP = [(-1)]*(N+1)
    for ind, (depth, p) in enumerate(EULER):
        MINP[p] = min(MINP[p], ind)
        MAXP[p] = max(MAXP[p], ind)
    return MINP, MAXP

def make_segment_elements(LEN):
    return 1<<(LEN.bit_length())

def init_segment(seg_el):
    return [(1<<30, 0)]*(2*seg_el)

def update_segment_base(SEG, seg_el, EULER):
    for i in range(len(EULER)):
        SEG[i+seg_el] = EULER[i]

def build_segment_tree(SEG, seg_el):
    for i in range(seg_el-1, 0, -1):
        SEG[i] = min(SEG[i*2], SEG[i*2+1])

def update(n, x, seg_el, SEG):
    i = n + seg_el
    SEG[i] = x
    i >>= 1
    while i != 0:
        SEG[i] = min(SEG[i*2], SEG[i*2+1])
        i >>= 1

def getvalues(l, r, seg_el, SEG):
    L = l + seg_el
    R = r + seg_el
    ANS = (1<<30, 0)
    while L < R:
        if L & 1:
            ANS = min(ANS, SEG[L])
            L += 1
        if R & 1:
            R -= 1
            ANS = min(ANS, SEG[R])
        L >>= 1
        R >>= 1
    return ANS

def LCA(l, r, MINP, MAXP, seg_el, SEG):
    return getvalues(min(MINP[l], MINP[r]), max(MAXP[l], MAXP[r])+1, seg_el, SEG)

def prepare_lca_queries(N, Query, LCA_func):
    check = [set() for _ in range(N+1)]
    for c, l, x, y in Query:
        check[x].add(c)
        check[y].add(c)
        lca = LCA_func(x, y)[1]
        check[lca].add(c)
    return check

def init_length_arrays(N):
    LENGTH = [0]*(N+1)
    LENG = 0
    C_LENGTH = [0]*N
    C_SUM = [0]*N
    C_LDICT = dict()
    C_SDICT = dict()
    return LENGTH, LENG, C_LENGTH, C_SUM, C_LDICT, C_SDICT

def reset_ind_dicts(check, C_LDICT, C_SDICT):
    for c in check[1]:
        C_LDICT[(1, c)] = 0
        C_SDICT[(1, c)] = 0

def process_euler_indices(EULER, EDGELIST, check, LENGTH, LENG, C_LENGTH, C_SUM, C_LDICT, C_SDICT):
    for i in range(1, len(EULER)):
        update_euler_index(i, EULER, EDGELIST, check, LENGTH, C_LENGTH, C_SUM, C_LDICT, C_SDICT)

def update_euler_index(i, EULER, EDGELIST, check, LENGTH, C_LENGTH, C_SUM, C_LDICT, C_SDICT):
    ind = EULER[i][1]
    c, l = EDGELIST[EULER[i-1][1]][ind]
    if EULER[i][0] > EULER[i-1][0]:
        update_euler_up(ind, l, c, LENGTH, C_LENGTH, C_SUM, check, C_LDICT, C_SDICT)
    else:
        update_euler_down(l, c, C_LENGTH, C_SUM)

def update_euler_up(ind, l, c, LENGTH, C_LENGTH, C_SUM, check, C_LDICT, C_SDICT):
    LENGTH[ind] += l if LENGTH[ind] == 0 else 0
    C_LENGTH[c] += l
    C_SUM[c] += 1
    LENGTH[ind] = sum_length_up(LENGTH, ind, l)
    for q_c in check[ind]:
        C_LDICT[(ind, q_c)] = C_LENGTH[q_c]
        C_SDICT[(ind, q_c)] = C_SUM[q_c]

def sum_length_up(LENGTH, ind, l):
    if LENGTH[ind] == 0:
        return l + LENGTH[ind]
    return LENGTH[ind]

def update_euler_down(l, c, C_LENGTH, C_SUM):
    C_LENGTH[c] -= l
    C_SUM[c] -= 1

def process_queries(Query, LCA_func, LENGTH, C_SDICT, C_LDICT):
    for c, pl, x, y in Query:
        process_single_query(c, pl, x, y, LCA_func, LENGTH, C_SDICT, C_LDICT)

def process_single_query(c, pl, x, y, LCA_func, LENGTH, C_SDICT, C_LDICT):
    ind = LCA_func(x, y)[1]
    ans = (LENGTH[x] + LENGTH[y] - LENGTH[ind]*2
           + (C_SDICT.get((x, c), 0) + C_SDICT.get((y, c), 0) - C_SDICT.get((ind, c), 0)*2) * pl
           - (C_LDICT.get((x, c), 0) + C_LDICT.get((y, c), 0) - C_LDICT.get((ind, c), 0)*2))
    print(ans)

def main():
    N, Q, EDGE, Query = read_input()
    mod = 10**9+7
    EDGELIST = make_empty_edgelist(N)
    build_edgelist(EDGE, EDGELIST)
    DEPTH, USED = init_depth_and_used(N)
    EULER = make_euler_tour(N, EDGELIST, DEPTH, USED)
    MINP, MAXP = min_max_p_from_euler(N, EULER)
    LEN = len(EULER)
    seg_el = make_segment_elements(LEN)
    SEG = init_segment(seg_el)
    update_segment_base(SEG, seg_el, EULER)
    build_segment_tree(SEG, seg_el)

    def LCA_func(l, r):
        return LCA(l, r, MINP, MAXP, seg_el, SEG)

    check = prepare_lca_queries(N, Query, LCA_func)
    LENGTH, LENG, C_LENGTH, C_SUM, C_LDICT, C_SDICT = init_length_arrays(N)
    reset_ind_dicts(check, C_LDICT, C_SDICT)
    process_euler_indices(EULER, EDGELIST, check, LENGTH, LENG, C_LENGTH, C_SUM, C_LDICT, C_SDICT)
    process_queries(Query, LCA_func, LENGTH, C_SDICT, C_LDICT)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7340998649597168
    2. ' import' → logprob: -0.7340998649597168
    3. '.' → logprob: -3.234099864959717
    4. ' ' → logprob: -8.859100341796875
    5. '.import' → logprob: -8.984100341796875
    6. '```' → logprob: -9.109100341796875
    7. '_' → logprob: -9.234100341796875
    8. '<|end|>' → logprob: -9.234100341796875
    9. '	import' → logprob: -10.109100341796875
    10. '_import' → logprob: -10.109100341796875

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9681236147880554
    2. '

' → logprob: -1.4681236743927002
    3. 'import' → logprob: -1.7181236743927002
    4. '
' → logprob: -2.0931236743927
    5. '```' → logprob: -3.4681236743927
    6. '\' → logprob: -3.8431236743927
    7. '<|end|>' → logprob: -3.8431236743927
    8. 'newline' → logprob: -5.593123435974121
    9. '<|end|>' → logprob: -5.968123435974121
    10. '' → logprob: -6.218123435974121

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1668646335601807
    2. 'b' → logprob: -1.4168646335601807
    3. '`' → logprob: -1.9168646335601807
    4. 'd' → logprob: -2.1668646335601807
    5. '.' → logprob: -3.1668646335601807
    6. '```' → logprob: -3.2918646335601807
    7. 'import' → logprob: -3.6668646335601807
    8. '\' → logprob: -4.291864395141602
    9. 'a' → logprob: -4.541864395141602
    10. 'data' → logprob: -5.041864395141602

Token 9: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029959555715322495
    2. ' bfs' → logprob: -3.9049594402313232
    3. ' process' → logprob: -5.279959678649902
    4. ' ' → logprob: -7.279959678649902
    5. ' dfs' → logprob: -7.279959678649902
    6. ' main' → logprob: -7.404959678649902
    7. ' BFS' → logprob: -8.154959678649902
    8. ' breadth' → logprob: -8.279959678649902
    9. ' a' → logprob: -8.904959678649902
    10. ' deque' → logprob: -9.029959678649902

Token 10: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.41361477971076965
    2. '_line' → logprob: -1.4136147499084473
    3. '_' → logprob: -3.0386147499084473
    4. '(' → logprob: -4.038614749908447
    5. '()' → logprob: -4.413614749908447
    6. ' ():' → logprob: -5.538614749908447
    7. 'line' → logprob: -6.038614749908447
    8. '(line' → logprob: -6.038614749908447
    9. '_input' → logprob: -6.288614749908447
    10. '_data' → logprob: -6.413614749908447

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030912011861801147
    2. '_' → logprob: -6.378091335296631
    3. '():' → logprob: -7.003091335296631
    4. ' (' → logprob: -8.753090858459473
    5. '("("' → logprob: -9.753090858459473
    6. ':' → logprob: -10.128090858459473
    7. '('' → logprob: -10.628090858459473
    8. '(:' → logprob: -10.878090858459473
    9. '(
' → logprob: -11.003090858459473
    10. '(token' → logprob: -11.253090858459473

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3922106921672821
    2. '\n' → logprob: -2.3922107219696045
    3. ' 
' → logprob: -2.5172107219696045
    4. '    
' → logprob: -3.1422107219696045
    5. '    ' → logprob: -3.6422107219696045
    6. '\' → logprob: -4.142210483551025
    7. '<|end|>' → logprob: -4.142210483551025
    8. ' return' → logprob: -4.267210483551025
    9. '```' → logprob: -4.267210483551025
    10. ' ' → logprob: -5.642210483551025

Token 13: ' input' (ID: 3422)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6474506258964539
    2. '   ' → logprob: -1.0224506855010986
    3. ' line' → logprob: -2.8974506855010986
    4. 'return' → logprob: -3.8974506855010986
    5. ' input' → logprob: -4.1474504470825195
    6. ' data' → logprob: -4.2724504470825195
    7. ' sys' → logprob: -5.6474504470825195
    8. 'data' → logprob: -5.8974504470825195
    9. ' lines' → logprob: -5.8974504470825195
    10. 'input' (adapté à ' input') → logprob: -6.7724504470825195

Token 14: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48287731409072876
    2. '(' → logprob: -0.9828773140907288
    3. '_data' → logprob: -5.607877254486084
    4. '().' → logprob: -6.857877254486084
    5. '_' → logprob: -6.982877254486084
    6. 'data' → logprob: -7.232877254486084
    7. '_line' → logprob: -7.607877254486084
    8. '('' → logprob: -7.857877254486084
    9. 's' → logprob: -7.982877254486084
    10. '())' → logprob: -8.607877731323242

Token 15: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12698280811309814
    2. 'sys' → logprob: -2.1269826889038086
    3. ' input' → logprob: -10.626982688903809
    4. 'input' → logprob: -11.501982688903809
    5. '	sys' → logprob: -11.501982688903809
    6. '=sys' → logprob: -12.001982688903809
    7. '(sys' → logprob: -12.876982688903809
    8. 'deque' → logprob: -14.501982688903809
    9. ' deque' → logprob: -14.626982688903809
    10. ' lambda' → logprob: -15.626982688903809

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20180536806583405
    2. '.stdin' → logprob: -1.7018053531646729
    3. ' .' → logprob: -8.576805114746094
    4. '.stdout' → logprob: -9.326805114746094
    5. '.readline' → logprob: -9.951805114746094
    6. '.argv' → logprob: -10.326805114746094
    7. '.input' → logprob: -11.076805114746094
    8. '.std' → logprob: -12.451805114746094
    9. '.exit' → logprob: -12.951805114746094
    10. '.import' → logprob: -13.076805114746094

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08658719062805176
    2. '.read' → logprob: -2.5865871906280518
    3. '.' → logprob: -4.961586952209473
    4. 'read' → logprob: -7.586586952209473
    5. '.readlines' → logprob: -8.836586952209473
    6. ' .' → logprob: -12.461586952209473
    7. '.buffer' → logprob: -12.836586952209473
    8. ' readline' → logprob: -13.211586952209473
    9. '.Read' → logprob: -13.336586952209473
    10. '_read' → logprob: -14.086586952209473

Token 18: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.058265671133995056
    2. '().' → logprob: -2.9332656860351562
    3. '(' → logprob: -5.933265686035156
    4. '()
' → logprob: -7.933265686035156
    5. ')' → logprob: -8.683265686035156
    6. '())' → logprob: -9.808265686035156
    7. ' ()' → logprob: -9.933265686035156
    8. '(
' → logprob: -10.433265686035156
    9. '()

' → logprob: -11.183265686035156
    10. '()`' → logprob: -11.558265686035156

Token 19: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019424419151619077
    2. '()
' → logprob: -6.8769426345825195
    3. '   ' → logprob: -7.6269426345825195
    4. 'return' → logprob: -9.12694263458252
    5. '()\' → logprob: -9.25194263458252
    6. '(' → logprob: -9.62694263458252
    7. ' ()' → logprob: -10.00194263458252
    8. ' ' → logprob: -10.87694263458252
    9. 'def' → logprob: -10.87694263458252
    10. '()

' → logprob: -11.25194263458252

Token 20: ' N' (ID: 478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024542496539652348
    2. '(' → logprob: -6.8774542808532715
    3. '   ' → logprob: -7.6274542808532715
    4. ' ()' → logprob: -7.8774542808532715
    5. '()
' → logprob: -8.002453804016113
    6. '()

' → logprob: -10.377453804016113
    7. '()\' → logprob: -10.502453804016113
    8. 'return' → logprob: -10.627453804016113
    9. 'def' → logprob: -10.627453804016113
    10. 'data' → logprob: -10.877453804016113

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01280180737376213
    2. '=' → logprob: -4.762801647186279
    3. ',' → logprob: -5.887801647186279
    4. ' ,' → logprob: -6.762801647186279
    5. ' ' → logprob: -8.512802124023438
    6. ' =
' → logprob: -11.012802124023438
    7. '=int' → logprob: -11.387802124023438
    8. ')' → logprob: -11.637802124023438
    9. ' )' → logprob: -13.262802124023438
    10. '   ' → logprob: -13.387802124023438

Token 22: ' Q' (ID: 1486)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.19263218343257904
    2. ' K' → logprob: -2.5676321983337402
    3. 'M' → logprob: -3.0676321983337402
    4. ' input' → logprob: -3.9426321983337402
    5. ' ' → logprob: -4.69263219833374
    6. 'input' → logprob: -4.94263219833374
    7. ' Q' → logprob: -5.44263219833374
    8. 'K' → logprob: -5.69263219833374
    9. ' T' → logprob: -6.31763219833374
    10. ' =' → logprob: -6.31763219833374

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020544691011309624
    2. '=' → logprob: -3.8955447673797607
    3. ' ' → logprob: -13.52054500579834
    4. ',' → logprob: -13.64554500579834
    5. '=input' → logprob: -16.520544052124023
    6. '   ' → logprob: -16.770544052124023
    7. '=int' → logprob: -16.895544052124023
    8. ')' → logprob: -16.895544052124023
    9. ' =
' → logprob: -17.270544052124023
    10. '=line' → logprob: -17.395544052124023

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004623799119144678
    2. 'map' → logprob: -5.379623889923096
    3. ' input' → logprob: -13.254623413085938
    4. ' ' → logprob: -14.379623413085938
    5. '	map' → logprob: -14.629623413085938
    6. ' list' → logprob: -15.379623413085938
    7. 'input' → logprob: -15.379623413085938
    8. ' tuple' → logprob: -15.629623413085938
    9. '(map' → logprob: -16.254623413085938
    10. ' [' → logprob: -16.629623413085938

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.33855047821998596
    2. '(' → logprob: -1.4635504484176636
    3. '(input' → logprob: -3.588550567626953
    4. '(lambda' → logprob: -4.213550567626953
    5. '(str' → logprob: -4.338550567626953
    6. '(sys' → logprob: -10.213550567626953
    7. '(list' → logprob: -10.463550567626953
    8. 'input' → logprob: -10.463550567626953
    9. '(
' → logprob: -10.463550567626953
    10. '(tuple' → logprob: -10.463550567626953

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27258142828941345
    2. ',input' → logprob: -1.5225814580917358
    3. '(input' → logprob: -4.147581577301025
    4. '(' → logprob: -5.897581577301025
    5. '(sys' → logprob: -6.897581577301025
    6. 'input' → logprob: -7.272581577301025
    7. ')' → logprob: -9.647581100463867
    8. ' ,' → logprob: -10.147581100463867
    9. '(),' → logprob: -11.022581100463867
    10. ',int' → logprob: -11.522581100463867

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12695425748825073
    2. 'input' → logprob: -2.1269543170928955
    3. ' sys' → logprob: -11.001954078674316
    4. ')' → logprob: -12.001954078674316
    5. 'sys' → logprob: -13.251954078674316
    6. ' )' → logprob: -14.376954078674316
    7. ' ' → logprob: -15.126954078674316
    8. ',input' → logprob: -15.376954078674316
    9. '=input' → logprob: -15.376954078674316
    10. '(input' → logprob: -15.626954078674316

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007339857402257621
    2. '()' → logprob: -7.250733852386475
    3. '())' → logprob: -11.375734329223633
    4. '()))' → logprob: -11.750734329223633
    5. ')' → logprob: -13.250734329223633
    6. ' ().' → logprob: -13.875734329223633
    7. '(' → logprob: -14.125734329223633
    8. '()
' → logprob: -14.750734329223633
    9. '()[' → logprob: -16.250734329223633
    10. '().'' → logprob: -16.250734329223633

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25386863946914673
    2. 'strip' → logprob: -1.503868579864502
    3. 'rstrip' → logprob: -6.253868579864502
    4. ')' → logprob: -11.50386905670166
    5. '(split' → logprob: -13.25386905670166
    6. '())' → logprob: -14.00386905670166
    7. 'read' → logprob: -14.12886905670166
    8. ' split' → logprob: -15.00386905670166
    9. '```' → logprob: -15.25386905670166
    10. '().' → logprob: -15.37886905670166

Token 30: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005626845522783697
    2. '))' → logprob: -7.50056266784668
    3. '()' → logprob: -12.75056266784668
    4. '(' → logprob: -12.87556266784668
    5. '())' → logprob: -13.25056266784668
    6. ')))' → logprob: -14.00056266784668
    7. ')
' → logprob: -14.75056266784668
    8. ' )' → logprob: -15.00056266784668
    9. '`)' → logprob: -15.25056266784668
    10. '),' → logprob: -15.37556266784668

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9191756248474121
    2. '   ' → logprob: -0.9191756248474121
    3. ')' → logprob: -2.544175624847412
    4. '    
' → logprob: -2.669175624847412
    5. ')
' → logprob: -4.544175624847412
    6. ' 
' → logprob: -4.794175624847412
    7. '```' → logprob: -4.794175624847412
    8. '  
' → logprob: -5.169175624847412
    9. '' → logprob: -5.419175624847412
    10. ',' → logprob: -5.544175624847412

Token 32: ' EDGE' (ID: 165368)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5304175019264221
    2. ')' → logprob: -1.2804174423217773
    3. '    
' → logprob: -3.7804174423217773
    4. ',' → logprob: -3.7804174423217773
    5. '
' → logprob: -3.9054174423217773
    6. '\n' → logprob: -4.030417442321777
    7. '\' → logprob: -4.780417442321777
    8. ' 
' → logprob: -5.030417442321777
    9. '' → logprob: -5.030417442321777
    10. '```' → logprob: -5.030417442321777

Token 33: ' =' (ID: 314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22805291414260864
    2. 's' → logprob: -1.6030528545379639
    3. '_list' → logprob: -6.853053092956543
    4. '_LIST' → logprob: -7.353053092956543
    5. '_s' → logprob: -7.478053092956543
    6. '_' → logprob: -9.103053092956543
    7. 'List' → logprob: -9.228053092956543
    8. 'LIST' → logprob: -9.853053092956543
    9. '_S' → logprob: -10.103053092956543
    10. '```' → logprob: -11.353053092956543

Token 34: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7047576308250427
    2. ' []' → logprob: -0.8297576308250427
    3. '[' → logprob: -3.3297576904296875
    4. ' [' → logprob: -3.9547576904296875
    5. 'deque' → logprob: -4.5797576904296875
    6. ' deque' → logprob: -5.8297576904296875
    7. ' [[]' → logprob: -6.9547576904296875
    8. ' defaultdict' → logprob: -8.704757690429688
    9. '{}' → logprob: -8.829757690429688
    10. ' {}' → logprob: -10.204757690429688

Token 35: 'list' (ID: 2641)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.013858349993824959
    2. 'list' → logprob: -4.513858318328857
    3. ' []' → logprob: -6.138858318328857
    4. 'deque' → logprob: -8.138858795166016
    5. '[' → logprob: -9.013858795166016
    6. 'tuple' → logprob: -9.513858795166016
    7. ']' → logprob: -10.013858795166016
    8. '[]
' → logprob: -10.388858795166016
    9. ' list' → logprob: -10.388858795166016
    10. '()]' → logprob: -11.138858795166016

Token 36: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005092510487884283
    2. '()' → logprob: -5.380092620849609
    3. '()]' → logprob: -8.13009262084961
    4. '(' → logprob: -9.25509262084961
    5. 'map' → logprob: -9.75509262084961
    6. '(range' → logprob: -12.00509262084961
    7. '(int' → logprob: -12.38009262084961
    8. ']' → logprob: -12.38009262084961
    9. '(input' → logprob: -12.75509262084961
    10. ' map' → logprob: -12.88009262084961

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023858259373810142
    2. '(' → logprob: -9.000238418579102
    3. ',int' → logprob: -9.750238418579102
    4. '(str' → logprob: -10.875238418579102
    5. 'int' → logprob: -11.750238418579102
    6. '(lambda' → logprob: -11.875238418579102
    7. ']int' → logprob: -12.000238418579102
    8. '[int' → logprob: -12.375238418579102
    9. '=int' → logprob: -12.625238418579102
    10. '<int' → logprob: -12.750238418579102

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09771628677845001
    2. ',input' → logprob: -2.4727163314819336
    3. ',int' → logprob: -5.347716331481934
    4. '<|end|>' → logprob: -5.972716331481934
    5. ',(' → logprob: -8.472716331481934
    6. '(' → logprob: -8.722716331481934
    7. '<|end|>' → logprob: -8.972716331481934
    8. ',line' → logprob: -8.972716331481934
    9. '(input' → logprob: -9.472716331481934
    10. ' ,' → logprob: -9.722716331481934

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.575981080532074
    2. ' input' → logprob: -0.825981080532074
    3. ')' → logprob: -10.825981140136719
    4. '(input' → logprob: -12.325981140136719
    5. '	input' → logprob: -12.450981140136719
    6. ' ' → logprob: -12.950981140136719
    7. ',input' → logprob: -12.950981140136719
    8. ' sys' → logprob: -13.450981140136719
    9. '=input' → logprob: -13.450981140136719
    10. 'sys' → logprob: -13.950981140136719

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011844364780699834
    2. '()' → logprob: -9.250118255615234
    3. ')' → logprob: -11.625118255615234
    4. '.readline' → logprob: -12.500118255615234
    5. '())' → logprob: -12.625118255615234
    6. '()))' → logprob: -13.000118255615234
    7. '(' → logprob: -13.625118255615234
    8. ' ().' → logprob: -14.500118255615234
    9. '.split' → logprob: -14.750118255615234
    10. '   ' → logprob: -15.250118255615234

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.2994620242971e-06
    2. 'strip' → logprob: -12.250008583068848
    3. 'rstrip' → logprob: -12.750008583068848
    4. 'read' → logprob: -15.500008583068848
    5. ' split' → logprob: -16.00000762939453
    6. '(split' → logprob: -16.00000762939453
    7. 'spl' → logprob: -16.62500762939453
    8. ')' → logprob: -17.87500762939453
    9. 'plit' → logprob: -20.25000762939453
    10. '.split' → logprob: -20.50000762939453

Token 42: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.056714978069067
    2. '()))' → logprob: -2.9317150115966797
    3. ')' → logprob: -6.68171501159668
    4. '()' → logprob: -8.18171501159668
    5. '())' → logprob: -9.05671501159668
    6. '(' → logprob: -9.18171501159668
    7. '),' → logprob: -10.80671501159668
    8. ')))' → logprob: -10.80671501159668
    9. ' ))' → logprob: -11.05671501159668
    10. ')]' → logprob: -11.93171501159668

Token 43: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15600988268852234
    2. ')' → logprob: -2.5310099124908447
    3. 'for' → logprob: -4.031009674072266
    4. '(' → logprob: -4.031009674072266
    5. ' for' → logprob: -4.281009674072266
    6. '   ' → logprob: -5.031009674072266
    7. '()]' → logprob: -5.656009674072266
    8. '(N' → logprob: -6.406009674072266
    9. '())' → logprob: -6.531009674072266
    10. ']' → logprob: -6.656009674072266

Token 44: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3244718313217163
    2. '_' → logprob: -1.3244718313217163
    3. ' _' → logprob: -4.824471950531006
    4. 'range' → logprob: -5.949471950531006
    5. '_range' → logprob: -7.949471950531006
    6. ' i' → logprob: -9.824471473693848
    7. '(range' → logprob: -9.824471473693848
    8. ' in' → logprob: -10.699471473693848
    9. ' ' → logprob: -11.574471473693848
    10. '(' → logprob: -12.074471473693848

Token 45: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000719222822226584
    2. ' range' → logprob: -7.50071907043457
    3. 'in' → logprob: -9.00071907043457
    4. '(range' → logprob: -10.50071907043457
    5. ' in' → logprob: -12.00071907043457
    6. '	range' → logprob: -12.12571907043457
    7. '_' → logprob: -12.87571907043457
    8. '_range' → logprob: -14.87571907043457
    9. 'ange' → logprob: -15.00071907043457
    10. '```' → logprob: -16.12571907043457

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006719759665429592
    2. ' range' → logprob: -5.006719589233398
    3. '	range' → logprob: -12.881719589233398
    4. ' ' → logprob: -13.881719589233398
    5. '(range' → logprob: -14.631719589233398
    6. '  ' → logprob: -15.131719589233398
    7. '   ' → logprob: -16.0067195892334
    8. 'rang' → logprob: -18.0067195892334
    9. '```' → logprob: -18.1317195892334
    10. '.range' → logprob: -18.6317195892334

Token 47: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003099599271081388
    2. '(' → logprob: -8.125309944152832
    3. '(Q' → logprob: -11.500309944152832
    4. ' (' → logprob: -13.500309944152832
    5. 'N' → logprob: -13.750309944152832
    6. '(n' → logprob: -14.125309944152832
    7. ' N' → logprob: -16.25031089782715
    8. '(
' → logprob: -16.25031089782715
    9. '(E' → logprob: -16.25031089782715
    10. '(int' → logprob: -16.37531089782715

Token 48: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012809454929083586
    2. ')' → logprob: -7.126280784606934
    3. ' )' → logprob: -7.751280784606934
    4. '-' → logprob: -11.126280784606934
    5. ')])' → logprob: -11.376280784606934
    6. '))' → logprob: -12.376280784606934
    7. ']' → logprob: -12.626280784606934
    8. ')],' → logprob: -13.001280784606934
    9. ')][' → logprob: -13.626280784606934
    10. ')}' → logprob: -13.626280784606934

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '１' → logprob: -14.750032424926758
    4. '۱' → logprob: -15.875032424926758
    5. '১' → logprob: -16.125032424926758
    6. '१' → logprob: -16.812532424926758
    7. '```' → logprob: -16.875032424926758
    8. '2' → logprob: -18.125032424926758
    9. '<|end|>' → logprob: -18.125032424926758
    10. '١' → logprob: -18.250032424926758

Token 50: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00046796895912848413
    2. ']' → logprob: -8.000468254089355
    3. ')' → logprob: -9.125468254089355
    4. ' )' → logprob: -11.250468254089355
    5. ' ]' → logprob: -12.875468254089355
    6. '])]' → logprob: -13.250468254089355
    7. ')])' → logprob: -13.375468254089355
    8. ')]
' → logprob: -13.500468254089355
    9. '   ' → logprob: -13.625468254089355
    10. ')],' → logprob: -14.125468254089355

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37854695320129395
    2. '   ' → logprob: -1.503546953201294
    3. '<|end|>' → logprob: -3.253546953201294
    4. '    
' → logprob: -3.628546953201294
    5. ')' → logprob: -4.003546714782715
    6. '\n' → logprob: -6.128546714782715
    7. '```' → logprob: -6.878546714782715
    8. '  
' → logprob: -7.003546714782715
    9. ' 
' → logprob: -7.128546714782715
    10. '' → logprob: -7.503546714782715

Token 52: ' Query' (ID: 18574)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07370305806398392
    2. ')' → logprob: -3.1987030506134033
    3. '    
' → logprob: -4.448703289031982
    4. 'return' → logprob: -5.448703289031982
    5. '
' → logprob: -5.698703289031982
    6. ' return' → logprob: -6.573703289031982
    7. '```' → logprob: -6.573703289031982
    8. 'Q' → logprob: -6.823703289031982
    9. 'def' → logprob: -7.448703289031982
    10. 'graph' → logprob: -7.448703289031982

Token 53: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0099790645763278
    2. ' =' → logprob: -5.259979248046875
    3. '=' → logprob: -5.509979248046875
    4. 'ies' → logprob: -7.634979248046875
    5. 'es' → logprob: -8.884979248046875
    6. ' ' → logprob: -10.634979248046875
    7. 'S' → logprob: -11.259979248046875
    8. ' s' → logprob: -12.134979248046875
    9. '[' → logprob: -12.634979248046875
    10. '_' → logprob: -12.759979248046875

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7649238705635071
    2. ' [' → logprob: -1.0149238109588623
    3. '[list' → logprob: -1.7649238109588623
    4. '[List' → logprob: -7.639924049377441
    5. '[int' → logprob: -8.389924049377441
    6. '[]' → logprob: -9.014924049377441
    7. '[input' → logprob: -10.389924049377441
    8. ' []' → logprob: -10.514924049377441
    9. '[len' → logprob: -10.514924049377441
    10. '[array' → logprob: -11.514924049377441

Token 55: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06355567276477814
    2. 'tuple' → logprob: -2.8135557174682617
    3. ' list' → logprob: -7.063555717468262
    4. ' tuple' → logprob: -7.313555717468262
    5. '(tuple' → logprob: -10.688555717468262
    6. '(list' → logprob: -11.313555717468262
    7. 'int' → logprob: -11.563555717468262
    8. ']' → logprob: -11.688555717468262
    9. 'input' → logprob: -12.063555717468262
    10. ')' → logprob: -13.938555717468262

Token 56: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001835141738411039
    2. '(' → logprob: -9.00018310546875
    3. '(int' → logprob: -10.00018310546875
    4. ' (' → logprob: -11.75018310546875
    5. '(lambda' → logprob: -12.37518310546875
    6. '(
' → logprob: -13.87518310546875
    7. 'map' → logprob: -14.25018310546875
    8. '(range' → logprob: -15.12518310546875
    9. ',map' → logprob: -15.50018310546875
    10. '(tuple' → logprob: -15.62518310546875

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0028625354170799255
    2. ',int' → logprob: -6.252862453460693
    3. 'int' → logprob: -7.877862453460693
    4. '=int' → logprob: -8.752862930297852
    5. ']int' → logprob: -8.877862930297852
    6. ' int' → logprob: -9.002862930297852
    7. '<int' → logprob: -10.127862930297852
    8. ',' → logprob: -10.502862930297852
    9. ' (' → logprob: -10.877862930297852
    10. ')' → logprob: -11.377862930297852

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001320596318691969
    2. ' ,' → logprob: -7.0013203620910645
    3. ',input' → logprob: -8.001320838928223
    4. ',int' → logprob: -9.876320838928223
    5. '(input' → logprob: -11.751320838928223
    6. '(int' → logprob: -12.001320838928223
    7. '(' → logprob: -12.376320838928223
    8. '(),' → logprob: -13.001320838928223
    9. '(sys' → logprob: -14.001320838928223
    10. 'input' → logprob: -14.751320838928223

Token 59: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20146410167217255
    2. 'input' → logprob: -1.701464056968689
    3. ' sys' → logprob: -10.07646369934082
    4. 'sys' → logprob: -11.70146369934082
    5. '(input' → logprob: -15.70146369934082
    6. ',input' → logprob: -16.32646369934082
    7. 'stdin' → logprob: -16.70146369934082
    8. ' ' → logprob: -16.70146369934082
    9. '	input' → logprob: -16.95146369934082
    10. '<input' → logprob: -17.45146369934082

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. ' ().' → logprob: -13.75000286102295
    3. '()' → logprob: -14.62500286102295
    4. '.readline' → logprob: -14.87500286102295
    5. '.' → logprob: -15.25000286102295
    6. '   ' → logprob: -15.37500286102295
    7. '()[' → logprob: -15.37500286102295
    8. '.split' → logprob: -16.625003814697266
    9. '()))' → logprob: -17.000003814697266
    10. '(),' → logprob: -17.000003814697266

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. ' split' → logprob: -13.00000286102295
    3. 'spl' → logprob: -15.50000286102295
    4. 'strip' → logprob: -15.87500286102295
    5. '(split' → logprob: -16.500001907348633
    6. 'rstrip' → logprob: -17.875001907348633
    7. 'read' → logprob: -18.000001907348633
    8. ')' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.875001907348633
    10. 'plit' → logprob: -19.875001907348633

Token 62: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.034093406051397324
    2. '))' → logprob: -3.4090933799743652
    3. '()' → logprob: -8.159093856811523
    4. '()))
' → logprob: -9.284093856811523
    5. '   ' → logprob: -10.659093856811523
    6. '())' → logprob: -10.659093856811523
    7. '())).' → logprob: -12.659093856811523
    8. '(' → logprob: -13.034093856811523
    9. '()
' → logprob: -13.034093856811523
    10. ' ))' → logprob: -13.159093856811523

Token 63: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027756720781326294
    2. 'for' → logprob: -3.652756690979004
    3. ' for' → logprob: -7.277756690979004
    4. '()' → logprob: -8.152756690979004
    5. '   ' → logprob: -9.027756690979004
    6. '(' → logprob: -9.027756690979004
    7. ')]' → logprob: -9.277756690979004
    8. ']' → logprob: -9.527756690979004
    9. ' )' → logprob: -11.402756690979004
    10. '))' → logprob: -11.527756690979004

Token 64: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0008515591034665704
    2. 'range' → logprob: -8.00085163116455
    3. ' _' → logprob: -8.12585163116455
    4. '(range' → logprob: -8.87585163116455
    5. '_' → logprob: -9.62585163116455
    6. ' in' → logprob: -12.25085163116455
    7. ' (' → logprob: -12.37585163116455
    8. '_range' → logprob: -12.87585163116455
    9. '(' → logprob: -14.50085163116455
    10. ' ' → logprob: -14.62585163116455

Token 65: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1929602175951004
    2. 'range' → logprob: -1.942960262298584
    3. '(range' → logprob: -3.442960262298584
    4. '(' → logprob: -8.817959785461426
    5. ' in' → logprob: -10.192959785461426
    6. '	range' → logprob: -10.567959785461426
    7. '_range' → logprob: -11.442959785461426
    8. ' (' → logprob: -11.567959785461426
    9. '(Q' → logprob: -13.067959785461426
    10. 'in' → logprob: -13.692959785461426

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740851819515228
    2. ' range' → logprob: -0.9740852117538452
    3. '(range' → logprob: -11.724084854125977
    4. '	range' → logprob: -16.724084854125977
    5. ' ' → logprob: -17.974084854125977
    6. '(' → logprob: -18.599084854125977
    7. ' xrange' → logprob: -19.849084854125977
    8. '.range' → logprob: -20.099084854125977
    9. '_range' → logprob: -20.349084854125977
    10. '[' → logprob: -20.599084854125977

Token 67: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.001851058448664844
    2. '(' → logprob: -6.3768510818481445
    3. ' range' → logprob: -9.376851081848145
    4. ' (' → logprob: -10.126851081848145
    5. '(range' → logprob: -11.376851081848145
    6. ' Q' → logprob: -12.001851081848145
    7. 'range' → logprob: -12.251851081848145
    8. 'Q' → logprob: -14.126851081848145
    9. '	Q' → logprob: -15.001851081848145
    10. '(int' → logprob: -15.501851081848145

Token 68: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014096579980105162
    2. ']' → logprob: -9.000141143798828
    3. ')' → logprob: -11.375141143798828
    4. ')]
' → logprob: -12.875141143798828
    5. '])]' → logprob: -13.500141143798828
    6. '')]' → logprob: -14.875141143798828
    7. ')])' → logprob: -15.000141143798828
    8. '()]' → logprob: -15.125141143798828
    9. '   ' → logprob: -15.625141143798828
    10. '))' → logprob: -15.875141143798828

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009278688579797745
    2. '    
' → logprob: -5.259278774261475
    3. '
' → logprob: -5.759278774261475
    4. '<|end|>' → logprob: -7.259278774261475
    5. ')' → logprob: -9.884278297424316
    6. 'return' → logprob: -10.509278297424316
    7. '<|end|>' → logprob: -10.509278297424316
    8. '  
' → logprob: -11.009278297424316
    9. '\n' → logprob: -11.384278297424316
    10. ' 
' → logprob: -12.009278297424316

Token 70: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08229157328605652
    2. '
' → logprob: -3.082291603088379
    3. '    
' → logprob: -3.582291603088379
    4. ')' → logprob: -6.207291603088379
    5. 'return' (adapté à ' return') → logprob: -7.457291603088379
    6. ' 
' → logprob: -7.582291603088379
    7. '```' → logprob: -8.207291603088379
    8. 'n' → logprob: -8.457291603088379
    9. '' → logprob: -8.582291603088379
    10. ' ' → logprob: -8.582291603088379

Token 71: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25289100408554077
    2. ' N' → logprob: -1.5028910636901855
    3. '(N' → logprob: -7.5028910636901855
    4. ' (' → logprob: -8.627890586853027
    5. '[N' → logprob: -9.002890586853027
    6. ' ' → logprob: -9.877890586853027
    7. '(' → logprob: -11.002890586853027
    8. '[' → logprob: -11.377890586853027
    9. '   ' → logprob: -11.627890586853027
    10. ' [' → logprob: -12.127890586853027

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001171652227640152
    2. ' ,' → logprob: -7.001171588897705
    3. ',Q' → logprob: -8.376172065734863
    4. ',N' → logprob: -10.876172065734863
    5. ',
' → logprob: -11.876172065734863
    6. ',C' → logprob: -14.626172065734863
    7. '<|end|>' → logprob: -14.751172065734863
    8. ',...' → logprob: -15.251172065734863
    9. '‌,' → logprob: -15.251172065734863
    10. ',K' → logprob: -15.376172065734863

Token 73: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.17975667119026184
    2. 'Q' → logprob: -1.8047566413879395
    3. ' ' → logprob: -12.304757118225098
    4. ' ' → logprob: -13.054757118225098
    5. ',Q' → logprob: -13.179757118225098
    6. '	Q' → logprob: -14.304757118225098
    7. 'space' → logprob: -14.992257118225098
    8. '```' → logprob: -15.179757118225098
    9. 'Query' → logprob: -15.242257118225098
    10. ',' → logprob: -15.367257118225098

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11427688598632812
    2. ' ,' → logprob: -2.239276885986328
    3. ',N' → logprob: -6.739276885986328
    4. ' N' → logprob: -8.864276885986328
    5. 'N' → logprob: -10.364276885986328
    6. 'EDGE' → logprob: -10.864276885986328
    7. ' ' → logprob: -11.364276885986328
    8. ' EDGE' → logprob: -11.364276885986328
    9. ',
' → logprob: -11.864276885986328
    10. ',Q' → logprob: -11.989276885986328

Token 75: ' EDGE' (ID: 165368)
  Prédit: ' EDGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EDGE' → logprob: -0.08902857452630997
    2. 'EDGE' → logprob: -2.4640285968780518
    3. 'ED' → logprob: -10.464028358459473
    4. ' ED' → logprob: -11.214028358459473
    5. '_EDGE' → logprob: -11.589028358459473
    6. ' ' → logprob: -11.589028358459473
    7. ' Edge' → logprob: -11.839028358459473
    8. ' edge' → logprob: -12.089028358459473
    9. ' ' → logprob: -12.589028358459473
    10. 'Edge' → logprob: -13.089028358459473

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1022229790687561
    2. ' ,' → logprob: -2.3522229194641113
    3. ' Query' → logprob: -6.352222919464111
    4. 'Query' → logprob: -8.85222339630127
    5. ',
' → logprob: -10.47722339630127
    6. '   ' → logprob: -10.72722339630127
    7. '	Query' → logprob: -11.47722339630127
    8. ',\
' → logprob: -11.60222339630127
    9. '<Query' → logprob: -11.72722339630127
    10. '`,' → logprob: -11.72722339630127

Token 77: ' Query' (ID: 18574)
  Prédit: ' Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Query' → logprob: -0.12694206833839417
    2. 'Query' → logprob: -2.1269421577453613
    3. '	Query' → logprob: -12.001941680908203
    4. '_Query' → logprob: -12.501941680908203
    5. ' ' → logprob: -13.501941680908203
    6. '(Query' → logprob: -14.001941680908203
    7. ' ' → logprob: -14.126941680908203
    8. '<Query' → logprob: -14.376941680908203
    9. '.Query' → logprob: -15.001941680908203
    10. ' query' → logprob: -16.626941680908203

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06704314798116684
    2. '<|end|>' → logprob: -2.9420430660247803
    3. '

' → logprob: -5.442043304443359
    4. 'def' → logprob: -5.567043304443359
    5. '```' → logprob: -6.567043304443359
    6. '\n' → logprob: -6.942043304443359
    7. '' → logprob: -7.692043304443359
    8. '    
' → logprob: -8.19204330444336
    9. '<|end|>' → logprob: -8.56704330444336
    10. '
' → logprob: -8.56704330444336

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40311720967292786
    2. '
' → logprob: -1.1531171798706055
    3. '

' → logprob: -4.2781171798706055
    4. '```' → logprob: -7.2781171798706055
    5. '<|end|>' → logprob: -8.028117179870605
    6. '' → logprob: -8.403117179870605
    7. '\' → logprob: -8.528117179870605
    8. '#' → logprob: -8.778117179870605
    9. '\n' → logprob: -8.778117179870605
    10. '
' → logprob: -8.903117179870605

Token 80: ' make' (ID: 1520)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.015098480507731438
    2. ' main' → logprob: -4.390098571777344
    3. ' solve' → logprob: -6.265098571777344
    4. ' dfs' → logprob: -8.015098571777344
    5. 'b' → logprob: -9.265098571777344
    6. '_b' → logprob: -9.515098571777344
    7. ' BFS' → logprob: -9.515098571777344
    8. ' shortest' → logprob: -10.640098571777344
    9. ' ' → logprob: -10.640098571777344
    10. ' solution' → logprob: -11.140098571777344

Token 81: '_empty' (ID: 35051)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.6775107383728027
    2. '_' → logprob: -1.4275107383728027
    3. '_graph' → logprob: -1.4275107383728027
    4. '_adj' → logprob: -5.052510738372803
    5. '_queue' → logprob: -7.302510738372803
    6. '_ad' → logprob: -7.427510738372803
    7. '_T' → logprob: -7.552510738372803
    8. '_space' → logprob: -7.677510738372803
    9. '```' → logprob: -7.927510738372803
    10. '_list' → logprob: -8.302511215209961

Token 82: '_ed' (ID: 92459)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.7319409251213074
    2. '_graph' → logprob: -1.3569409847259521
    3. '_' → logprob: -1.7319409847259521
    4. '_tree' → logprob: -3.356940984725952
    5. '_array' → logprob: -3.981940984725952
    6. '_dict' → logprob: -4.856940746307373
    7. '_lists' → logprob: -5.106940746307373
    8. '_queue' → logprob: -5.606940746307373
    9. '(' → logprob: -5.856940746307373
    10. '_adj' → logprob: -6.606940746307373

Token 83: 'gel' (ID: 9457)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.4368332624435425
    2. 'gel' → logprob: -1.0618332624435425
    3. 'ges' → logprob: -4.936833381652832
    4. 'g' → logprob: -7.686833381652832
    5. ' ge' → logprob: -8.561833381652832
    6. 'get' → logprob: -9.686833381652832
    7. ' gel' → logprob: -10.061833381652832
    8. 'GES' → logprob: -10.561833381652832
    9. 'j' → logprob: -10.936833381652832
    10. 'gest' → logprob: -11.436833381652832

Token 84: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00047106825513765216
    2. 'ists' → logprob: -8.125471115112305
    3. 'is' → logprob: -9.500471115112305
    4. 'st' → logprob: -10.250471115112305
    5. 'i' → logprob: -10.875471115112305
    6. ' ist' → logprob: -11.750471115112305
    7. '[' → logprob: -12.000471115112305
    8. '   ' → logprob: -12.250471115112305
    9. '_list' → logprob: -12.875471115112305
    10. '```' → logprob: -13.125471115112305

Token 85: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10760775953531265
    2. '(' → logprob: -2.857607841491699
    3. '(n' → logprob: -3.232607841491699
    4. '(size' → logprob: -5.732607841491699
    5. '(num' → logprob: -7.107607841491699
    6. ' (' → logprob: -8.2326078414917
    7. '(node' → logprob: -8.7326078414917
    8. '(s' → logprob: -8.7326078414917
    9. '((' → logprob: -9.1076078414917
    10. '():' → logprob: -9.6076078414917

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022400233894586563
    2. '):
' → logprob: -3.897400140762329
    3. ')' → logprob: -6.772400379180908
    4. ' ):' → logprob: -7.397400379180908
    5. '):
' → logprob: -9.52239990234375
    6. ' ):
' → logprob: -12.02239990234375
    7. '   ' → logprob: -12.14739990234375
    8. ' )' → logprob: -12.77239990234375
    9. ')：' → logprob: -12.77239990234375
    10. ',' → logprob: -13.02239990234375

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6535406112670898
    2. ' return' → logprob: -1.6535406112670898
    3. ' 
' → logprob: -2.77854061126709
    4. ' ' → logprob: -3.40354061126709
    5. ':' → logprob: -3.77854061126709
    6. ' :' → logprob: -3.90354061126709
    7. ' [[]' → logprob: -4.02854061126709
    8. '[]' → logprob: -4.15354061126709
    9. ' edges' → logprob: -4.15354061126709
    10. ' :
' → logprob: -4.27854061126709

Token 88: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7746776938438416
    2. ' ' → logprob: -1.0246777534484863
    3. ' 
' → logprob: -3.2746777534484863
    4. ' [[]' → logprob: -3.2746777534484863
    5. ' []' → logprob: -3.5246777534484863
    6. ' [' → logprob: -3.7746777534484863
    7. 'return' (adapté à ' return') → logprob: -4.649677753448486
    8. '    ' → logprob: -4.899677753448486
    9. ' edges' → logprob: -4.899677753448486
    10. ' [
' → logprob: -5.274677753448486

Token 89: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.694035530090332
    2. ' [[]' → logprob: -0.694035530090332
    3. ' [' → logprob: -7.069035530090332
    4. '[]' → logprob: -10.819035530090332
    5. '{' → logprob: -11.944035530090332
    6. ' {' → logprob: -12.819035530090332
    7. '[[' → logprob: -13.194035530090332
    8. ' ' → logprob: -13.194035530090332
    9. '[n' → logprob: -14.069035530090332
    10. '   ' → logprob: -14.194035530090332

Token 90: 'dict' (ID: 20993)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0052377874962985516
    2. ' []' → logprob: -5.255237579345703
    3. ']' → logprob: -13.755237579345703
    4. '[]
' → logprob: -13.755237579345703
    5. '[]}' → logprob: -14.005237579345703
    6. 'deque' → logprob: -14.880237579345703
    7. '][]' → logprob: -15.755237579345703
    8. '[])' → logprob: -16.005237579345703
    9. '[' → logprob: -16.005237579345703
    10. '[]

' → logprob: -16.130237579345703

Token 91: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07892768830060959
    2. '()]' → logprob: -2.578927755355835
    3. ' ()' → logprob: -10.828927993774414
    4. ']()' → logprob: -11.453927993774414
    5. '()
' → logprob: -13.703927993774414
    6. '（）' → logprob: -13.703927993774414
    7. '(' → logprob: -13.828927993774414
    8. '(),' → logprob: -14.328927993774414
    9. '()}' → logprob: -14.328927993774414
    10. '()=>' → logprob: -14.453927993774414

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038074083626270294
    2. 'for' → logprob: -3.288074016571045
    3. ')' → logprob: -11.038074493408203
    4. '	for' → logprob: -11.913074493408203
    5. ' ' → logprob: -12.288074493408203
    6. '   ' → logprob: -13.038074493408203
    7. ']' → logprob: -13.663074493408203
    8. '    ' → logprob: -13.663074493408203
    9. '()' → logprob: -15.288074493408203
    10. '  ' → logprob: -15.913074493408203

Token 93: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40256527066230774
    2. '_' → logprob: -1.5275652408599854
    3. ' _' → logprob: -2.6525652408599854
    4. 'range' → logprob: -3.9025652408599854
    5. '(' → logprob: -4.6525654792785645
    6. '(range' → logprob: -4.9025654792785645
    7. ' ' → logprob: -6.1525654792785645
    8. ' in' → logprob: -6.5275654792785645
    9. '_range' → logprob: -7.0275654792785645
    10. '	range' → logprob: -7.2775654792785645

Token 94: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7909154295921326
    2. 'in' → logprob: -0.9159154295921326
    3. ' in' → logprob: -2.0409154891967773
    4. ' range' → logprob: -4.540915489196777
    5. '(range' → logprob: -5.790915489196777
    6. ' xrange' → logprob: -7.290915489196777
    7. ' ' → logprob: -7.665915489196777
    8. '<|end|>' → logprob: -7.915915489196777
    9. '(' → logprob: -8.040915489196777
    10. '	range' → logprob: -8.040915489196777

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06201518699526787
    2. 'range' → logprob: -2.8120152950286865
    3. ' xrange' → logprob: -10.812015533447266
    4. '	range' → logprob: -10.937015533447266
    5. '(range' → logprob: -11.687015533447266
    6. ' ' → logprob: -14.312015533447266
    7. ' ran' → logprob: -15.437015533447266
    8. '_range' → logprob: -15.687015533447266
    9. ' rango' → logprob: -16.187015533447266
    10. 'rang' → logprob: -16.812015533447266

Token 96: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03806077316403389
    2. '(' → logprob: -3.2880606651306152
    3. ' (' → logprob: -11.288061141967773
    4. '(n' → logprob: -12.663061141967773
    5. '((' → logprob: -13.038061141967773
    6. ')' → logprob: -14.788061141967773
    7. ')(' → logprob: -15.913061141967773
    8. ']' → logprob: -15.913061141967773
    9. '(
' → logprob: -16.038061141967773
    10. '](' → logprob: -16.413061141967773

Token 97: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.3544423381972592e-05
    2. ']' → logprob: -11.62501335144043
    3. ')' → logprob: -13.12501335144043
    4. ' )' → logprob: -13.37501335144043
    5. ')]
' → logprob: -14.50001335144043
    6. ' ]' → logprob: -15.37501335144043
    7. '}]' → logprob: -16.12501335144043
    8. ' ' → logprob: -16.62501335144043
    9. '>]' → logprob: -16.87501335144043
    10. '')]' → logprob: -17.00001335144043

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009299254161305726
    2. ' ' → logprob: -7.000929832458496
    3. ')' → logprob: -11.250929832458496
    4. '0' → logprob: -12.250929832458496
    5. '2' → logprob: -14.750929832458496
    6. ' )' → logprob: -16.000930786132812
    7. ')]' → logprob: -16.125930786132812
    8. '(' → logprob: -16.625930786132812
    9. '  ' → logprob: -17.875930786132812
    10. '   ' → logprob: -18.250930786132812

Token 99: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009308716980740428
    2. ']' → logprob: -7.1259307861328125
    3. ')' → logprob: -9.000930786132812
    4. ')]
' → logprob: -13.500930786132812
    5. ']
' → logprob: -14.750930786132812
    6. '}]' → logprob: -15.250930786132812
    7. ' ]' → logprob: -15.500930786132812
    8. '])' → logprob: -15.625930786132812
    9. ' )' → logprob: -16.000930786132812
    10. '')]' → logprob: -16.250930786132812

Token 100: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0906575545668602
    2. '<|end|>' → logprob: -2.5906574726104736
    3. 'def' → logprob: -4.715657711029053
    4. '<|end|>' → logprob: -7.215657711029053
    5. '```' → logprob: -7.465657711029053
    6. '

' → logprob: -7.590657711029053
    7. ' 
' → logprob: -8.465657234191895
    8. '\n' → logprob: -8.590657234191895
    9. '  
' → logprob: -9.215657234191895
    10. '\' → logprob: -9.215657234191895

Token 101: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.3603791892528534
    2. ' make' → logprob: -1.2353792190551758
    3. ' add' → logprob: -4.985379219055176
    4. ' create' → logprob: -5.985379219055176
    5. ' connect' → logprob: -7.110379219055176
    6. ' bfs' → logprob: -7.610379219055176
    7. ' append' → logprob: -8.735379219055176
    8. ' initialize' → logprob: -8.860379219055176
    9. ' construct' → logprob: -9.110379219055176
    10. ' dfs' → logprob: -9.235379219055176

Token 102: '_ed' (ID: 92459)
  Prédit: '_ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ed' → logprob: -0.689828634262085
    2. '_' → logprob: -0.939828634262085
    3. '_edge' → logprob: -2.939828634262085
    4. '_edges' → logprob: -3.064828634262085
    5. '```' → logprob: -5.939828872680664
    6. '_ED' → logprob: -6.814828872680664
    7. '_tree' → logprob: -6.814828872680664
    8. '_e' → logprob: -7.189828872680664
    9. '(' → logprob: -7.814828872680664
    10. '(_' → logprob: -8.064828872680664

Token 103: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -0.07976853102445602
    2. 'ge' → logprob: -2.579768419265747
    3. 'g' → logprob: -7.704768657684326
    4. '_ge' → logprob: -8.579768180847168
    5. '_' → logprob: -9.204768180847168
    6. '_g' → logprob: -9.454768180847168
    7. 'get' → logprob: -10.954768180847168
    8. ' ge' → logprob: -11.954768180847168
    9. 'gest' → logprob: -12.079768180847168
    10. ' gel' → logprob: -12.579768180847168

Token 104: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00030817187507636845
    2. 'is' → logprob: -8.6253080368042
    3. 'i' → logprob: -9.8753080368042
    4. 'st' → logprob: -10.6253080368042
    5. '   ' → logprob: -11.5003080368042
    6. '_list' → logprob: -11.6253080368042
    7. '```' → logprob: -11.8753080368042
    8. ' ist' → logprob: -12.2503080368042
    9. '_' → logprob: -12.3753080368042
    10. 'ists' → logprob: -12.7503080368042

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34896257519721985
    2. '(N' → logprob: -1.2239625453948975
    3. ' (' → logprob: -8.473962783813477
    4. '(n' → logprob: -8.723962783813477
    5. '(
' → logprob: -9.973962783813477
    6. '(E' → logprob: -10.598962783813477
    7. '():' → logprob: -11.473962783813477
    8. '(:' → logprob: -11.473962783813477
    9. '(_' → logprob: -12.223962783813477
    10. '((' → logprob: -12.598962783813477

Token 106: 'EDGE' (ID: 185822)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.34923669695854187
    2. 'EDGE' → logprob: -1.9742367267608643
    3. '(N' → logprob: -2.8492367267608643
    4. ',' → logprob: -3.4742367267608643
    5. 'ED' → logprob: -3.9742367267608643
    6. 'edge' → logprob: -4.224236488342285
    7. 'edges' → logprob: -4.849236488342285
    8. ')(' → logprob: -5.224236488342285
    9. ')' → logprob: -5.599236488342285
    10. 'ed' → logprob: -5.599236488342285

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11455012112855911
    2. '):' → logprob: -2.2395501136779785
    3. ',N' → logprob: -6.8645501136779785
    4. ' ,' → logprob: -7.8645501136779785
    5. '):
' → logprob: -9.114550590515137
    6. ')' → logprob: -9.739550590515137
    7. ' ):' → logprob: -9.864550590515137
    8. ':' → logprob: -10.864550590515137
    9. ',n' → logprob: -10.989550590515137
    10. ',E' → logprob: -11.239550590515137

Token 108: ' ED' (ID: 36313)
  Prédit: ' ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ed' → logprob: -0.2598908543586731
    2. 'ed' → logprob: -2.6348907947540283
    3. ' N' → logprob: -3.3848907947540283
    4. ' G' → logprob: -4.009891033172607
    5. ' adj' → logprob: -4.009891033172607
    6. ' edge' → logprob: -4.134891033172607
    7. 'N' → logprob: -4.259891033172607
    8. ' edges' → logprob: -4.634891033172607
    9. ' graph' → logprob: -4.634891033172607
    10. 'adj' → logprob: -4.759891033172607

Token 109: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.2540470361709595
    2. 'GE' → logprob: -1.5040470361709595
    3. 'GL' → logprob: -6.87904691696167
    4. 'EL' → logprob: -8.879047393798828
    5. '_G' → logprob: -9.379047393798828
    6. ' GEL' → logprob: -9.379047393798828
    7. 'GES' → logprob: -9.504047393798828
    8. 'gel' → logprob: -9.504047393798828
    9. 'LE' → logprob: -9.629047393798828
    10. ' G' → logprob: -9.629047393798828

Token 110: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.17578472197055817
    2. 'E' → logprob: -1.925784707069397
    3. 'LE' → logprob: -4.425784587860107
    4. 'L' → logprob: -6.050784587860107
    5. 'ELE' → logprob: -7.800784587860107
    6. 'El' → logprob: -8.425785064697266
    7. '_EL' → logprob: -8.550785064697266
    8. ' EL' → logprob: -10.800785064697266
    9. 'List' → logprob: -10.800785064697266
    10. ')' → logprob: -10.800785064697266

Token 111: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -7.362307223957032e-05
    2. 'ST' → logprob: -10.375073432922363
    3. 'I' → logprob: -10.500073432922363
    4. 'ist' → logprob: -12.875073432922363
    5. 'IS' → logprob: -13.000073432922363
    6. '_' → logprob: -13.125073432922363
    7. ' IST' → logprob: -13.500073432922363
    8. '```' → logprob: -13.625073432922363
    9. 'Ist' → logprob: -14.125073432922363
    10. 'E' → logprob: -14.500073432922363

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00422703567892313
    2. ')' → logprob: -6.129227161407471
    3. ',' → logprob: -6.879227161407471
    4. ' ):' → logprob: -7.629227161407471
    5. '):
' → logprob: -7.629227161407471
    6. ':' → logprob: -11.254226684570312
    7. '):
' → logprob: -12.254226684570312
    8. ' )' → logprob: -12.504226684570312
    9. '[' → logprob: -12.879226684570312
    10. ' ,' → logprob: -13.254226684570312

Token 113: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007294608745723963
    2. ':
' → logprob: -5.757294654846191
    3. '):' → logprob: -6.257294654846191
    4. '   ' → logprob: -6.757294654846191
    5. '():' → logprob: -7.757294654846191
    6. ' :' → logprob: -8.007294654846191
    7. ',' → logprob: -10.132294654846191
    8. ' :
' → logprob: -10.257294654846191
    9. '):
' → logprob: -10.507294654846191
    10. '
' → logprob: -10.882294654846191

Token 114: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11438246071338654
    2. ' for' → logprob: -2.23938250541687
    3. '    
' → logprob: -6.739382266998291
    4. 'for' (adapté à ' for') → logprob: -9.23938274383545
    5. '
' → logprob: -9.36438274383545
    6. '    ' → logprob: -9.36438274383545
    7. '	for' → logprob: -9.86438274383545
    8. ' 
' → logprob: -10.23938274383545
    9. '   ' → logprob: -12.48938274383545
    10. ' ' → logprob: -12.98938274383545

Token 115: ' x' (ID: 1215)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.291325181722641
    2. ' a' → logprob: -2.041325092315674
    3. 'u' → logprob: -2.416325092315674
    4. 'a' → logprob: -3.541325092315674
    5. ' s' → logprob: -6.416325092315674
    6. ' x' → logprob: -7.416325092315674
    7. 'x' → logprob: -8.041325569152832
    8. 's' → logprob: -8.041325569152832
    9. ' v' → logprob: -8.416325569152832
    10. '(u' → logprob: -8.541325569152832

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06588944792747498
    2. ' ,' → logprob: -3.315889358520508
    3. ' in' → logprob: -3.690889358520508
    4. 'in' → logprob: -6.190889358520508
    5. '[' → logprob: -9.065889358520508
    6. ',x' → logprob: -9.065889358520508
    7. ',in' → logprob: -9.440889358520508
    8. ',y' → logprob: -10.565889358520508
    9. ' ' → logprob: -10.690889358520508
    10. ',_' → logprob: -11.315889358520508

Token 117: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132627606391907
    2. 'y' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.313262939453125
    4. '	y' → logprob: -14.938262939453125
    5. '<|end|>' → logprob: -17.813262939453125
    6. '_y' → logprob: -18.063262939453125
    7. ' t' → logprob: -18.188262939453125
    8. '  ' → logprob: -18.188262939453125
    9. ',y' → logprob: -18.188262939453125
    10. 't' → logprob: -18.313262939453125

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16574765741825104
    2. ' in' → logprob: -2.04074764251709
    3. ' ,' → logprob: -4.41574764251709
    4. 'in' → logprob: -4.54074764251709
    5. ' ' → logprob: -11.04074764251709
    6. ',in' → logprob: -11.41574764251709
    7. ',x' → logprob: -11.54074764251709
    8. ',y' → logprob: -11.79074764251709
    9. ',i' → logprob: -13.54074764251709
    10. '	in' → logprob: -13.66574764251709

Token 119: ' c' (ID: 274)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.876462459564209
    2. 'c' → logprob: -1.376462459564209
    3. ' z' → logprob: -2.126462459564209
    4. 'w' → logprob: -2.626462459564209
    5. ' c' → logprob: -3.126462459564209
    6. 'd' → logprob: -3.501462459564209
    7. ' w' → logprob: -3.626462459564209
    8. 'v' → logprob: -4.251462459564209
    9. ' d' → logprob: -4.626462459564209
    10. ' v' → logprob: -5.501462459564209

Token 120: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28449684381484985
    2. 'in' → logprob: -1.409496784210205
    3. ',' → logprob: -5.784496784210205
    4. ' ' → logprob: -9.909497261047363
    5. '  ' → logprob: -9.909497261047363
    6. '	in' → logprob: -10.409497261047363
    7. ')' → logprob: -10.534497261047363
    8. ' ,' → logprob: -11.034497261047363
    9. 'n' → logprob: -11.284497261047363
    10. '   ' → logprob: -12.034497261047363

Token 121: ' l' (ID: 305)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9354648590087891
    2. 'd' → logprob: -1.435464859008789
    3. ' w' → logprob: -3.060464859008789
    4. 'w' → logprob: -3.435464859008789
    5. ' in' → logprob: -3.435464859008789
    6. ' s' → logprob: -3.685464859008789
    7. ' ' → logprob: -3.810464859008789
    8. 'l' → logprob: -3.935464859008789
    9. ' z' → logprob: -3.935464859008789
    10. ' t' → logprob: -4.060464859008789

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1019471064209938
    2. 'in' → logprob: -2.351947069168091
    3. ',' → logprob: -6.72694730758667
    4. ' ' → logprob: -9.101946830749512
    5. '_' → logprob: -9.726946830749512
    6. '=' → logprob: -10.351946830749512
    7. 'a' → logprob: -10.476946830749512
    8. ')' → logprob: -10.476946830749512
    9. 'n' → logprob: -10.851946830749512
    10. 'e' → logprob: -10.851946830749512

Token 123: ' EDGE' (ID: 165368)
  Prédit: ' EDGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EDGE' → logprob: -0.005944444332271814
    2. 'EDGE' → logprob: -5.13094425201416
    3. '_EDGE' → logprob: -11.63094425201416
    4. ' ' → logprob: -13.25594425201416
    5. ' edge' → logprob: -13.25594425201416
    6. '<Edge' → logprob: -14.00594425201416
    7. ' Edge' → logprob: -14.00594425201416
    8. 'Edge' → logprob: -14.50594425201416
    9. 'ED' → logprob: -14.63094425201416
    10. ' ED' → logprob: -15.38094425201416

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.5954712075181305e-05
    2. ' :' → logprob: -10.875036239624023
    3. ':
' → logprob: -11.750036239624023
    4. '):' → logprob: -12.000036239624023
    5. ':**' → logprob: -13.375036239624023
    6. ',' → logprob: -14.500036239624023
    7. ':list' → logprob: -15.250036239624023
    8. '：' → logprob: -15.500036239624023
    9. ']:' → logprob: -16.000036239624023
    10. ':def' → logprob: -16.625036239624023

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.535088300704956
    2. ':' → logprob: -1.160088300704956
    3. '   ' → logprob: -2.410088300704956
    4. ',' → logprob: -5.285088539123535
    5. ':
' → logprob: -6.535088539123535
    6. '<|end|>' → logprob: -6.910088539123535
    7. '):' → logprob: -7.160088539123535
    8. ' ' → logprob: -7.160088539123535
    9. '    ' → logprob: -7.285088539123535
    10. '
' → logprob: -8.285088539123535

Token 126: ' ED' (ID: 36313)
  Prédit: ' ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ED' → logprob: -0.059375353157520294
    2. 'ED' (adapté à ' ED') → logprob: -2.934375286102295
    3. '       ' → logprob: -6.059375286102295
    4. '   ' → logprob: -6.559375286102295
    5. ' if' → logprob: -7.434375286102295
    6. '_ED' → logprob: -10.309375762939453
    7. 'if' → logprob: -10.434375762939453
    8. '	' → logprob: -11.559375762939453
    9. '           ' → logprob: -11.559375762939453
    10. '    ' → logprob: -11.809375762939453

Token 127: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3875552713871002
    2. 'EL' → logprob: -1.1375552415847778
    3. 'L' → logprob: -8.512555122375488
    4. 'GL' → logprob: -9.012555122375488
    5. 'LIST' → logprob: -9.887555122375488
    6. 'GE' → logprob: -10.012555122375488
    7. 'E' → logprob: -10.262555122375488
    8. ' GEL' → logprob: -10.637555122375488
    9. 'EG' → logprob: -10.762555122375488
    10. '   ' → logprob: -10.762555122375488

Token 128: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -5.455048449221067e-05
    2. 'LIST' → logprob: -11.250054359436035
    3. 'ELS' → logprob: -11.375054359436035
    4. ' EL' → logprob: -11.875054359436035
    5. 'ELE' → logprob: -12.250054359436035
    6. 'ELL' → logprob: -12.500054359436035
    7. '   ' → logprob: -13.000054359436035
    8. 'E' → logprob: -13.000054359436035
    9. 'ЕЛ' → logprob: -13.000054359436035
    10. '_EL' → logprob: -13.500054359436035

Token 129: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.002104221610352397
    2. 'ST' → logprob: -6.25210428237915
    3. ' IST' → logprob: -8.752103805541992
    4. 'IS' → logprob: -12.127103805541992
    5. 'I' → logprob: -12.252103805541992
    6. '[' → logprob: -13.502103805541992
    7. 'ISTS' → logprob: -13.627103805541992
    8. 'S' → logprob: -13.752103805541992
    9. 'LIST' → logprob: -14.002103805541992
    10. '   ' → logprob: -14.502103805541992

Token 130: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0490339994430542
    2. '[' → logprob: -3.0490341186523438
    3. '[c' → logprob: -8.549034118652344
    4. '[y' → logprob: -8.799034118652344
    5. '[l' → logprob: -9.299034118652344
    6. ' [' → logprob: -12.299034118652344
    7. '[int' → logprob: -13.674034118652344
    8. '[s' → logprob: -13.799034118652344
    9. '[u' → logprob: -14.549034118652344
    10. '[
' → logprob: -14.799034118652344

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0021259954664856195
    2. ' ][' → logprob: -7.002126216888428
    3. ']' → logprob: -7.252126216888428
    4. '].' → logprob: -7.877126216888428
    5. '"][' → logprob: -10.37712574005127
    6. ''][' → logprob: -10.62712574005127
    7. '[' → logprob: -10.87712574005127
    8. '[x' → logprob: -11.25212574005127
    9. '.setdefault' → logprob: -11.25212574005127
    10. '   ' → logprob: -12.50212574005127

Token 132: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001172129064798355
    2. ' y' → logprob: -6.751172065734863
    3. ''y' → logprob: -13.751172065734863
    4. '	y' → logprob: -15.001172065734863
    5. ')y' → logprob: -15.001172065734863
    6. ' ' → logprob: -16.50117301940918
    7. ')' → logprob: -16.87617301940918
    8. '<|end|>' → logprob: -17.37617301940918
    9. ']' → logprob: -17.62617301940918
    10. '‘y' → logprob: -18.00117301940918

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033902596682310104
    2. ' ]' → logprob: -3.408902645111084
    3. ']=' → logprob: -8.283902168273926
    4. ' :]' → logprob: -14.033902168273926
    5. ' =' → logprob: -14.158902168273926
    6. '=' → logprob: -14.408902168273926
    7. ' ' → logprob: -14.783902168273926
    8. '']' → logprob: -15.408902168273926
    9. '`]' → logprob: -15.658902168273926
    10. '[' → logprob: -15.908902168273926

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740879237651825
    2. ' =' → logprob: -0.9740879535675049
    3. '=c' → logprob: -12.224087715148926
    4. ' ' → logprob: -12.849087715148926
    5. ']' → logprob: -13.849087715148926
    6. ']=' → logprob: -14.599087715148926
    7. '[' → logprob: -14.849087715148926
    8. ')' → logprob: -14.974087715148926
    9. '.' → logprob: -14.974087715148926
    10. ',' → logprob: -15.224087715148926

Token 135: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.661358654499054
    2. ' (' → logprob: -1.0363585948944092
    3. 'c' → logprob: -2.286358594894409
    4. '(l' → logprob: -4.161358833312988
    5. ' c' → logprob: -4.911358833312988
    6. '[c' → logprob: -5.911358833312988
    7. '(' → logprob: -7.411358833312988
    8. 'l' → logprob: -8.036358833312988
    9. '[l' → logprob: -9.036358833312988
    10. '{' → logprob: -9.286358833312988

Token 136: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22572864592075348
    2. ' c' → logprob: -1.6007286310195923
    3. ')c' → logprob: -8.225728988647461
    4. '	c' → logprob: -11.100728988647461
    5. ' ' → logprob: -11.350728988647461
    6. ')' → logprob: -12.475728988647461
    7. '
' → logprob: -12.913228988647461
    8. 'l' → logprob: -12.975728988647461
    9. ' l' → logprob: -13.038228988647461
    10. ',c' → logprob: -13.163228988647461

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007428434211760759
    2. ' ,' → logprob: -5.3824286460876465
    3. ',l' → logprob: -5.8824286460876465
    4. ')' → logprob: -12.257428169250488
    5. ' ' → logprob: -12.382428169250488
    6. ',
' → logprob: -14.257428169250488
    7. ',y' → logprob: -14.257428169250488
    8. 'l' → logprob: -14.257428169250488
    9. '-' → logprob: -14.507428169250488
    10. '<|end|>' → logprob: -14.507428169250488

Token 138: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.08925841748714447
    2. 'l' → logprob: -2.4642584323883057
    3. ' ' → logprob: -8.964258193969727
    4. ' ' → logprob: -9.589258193969727
    5. ')' → logprob: -9.839258193969727
    6. ' 
' → logprob: -10.214258193969727
    7. '	l' → logprob: -11.214258193969727
    8. ' )' → logprob: -11.589258193969727
    9. ',l' → logprob: -13.589258193969727
    10. '[l' → logprob: -13.839258193969727

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019620591774582863
    2. ')
' → logprob: -6.251962184906006
    3. ' )' → logprob: -10.376961708068848
    4. '),' → logprob: -14.626961708068848
    5. ' )
' → logprob: -14.751961708068848
    6. ')
' → logprob: -15.126961708068848
    7. '<|end|>' → logprob: -15.501961708068848
    8. ')

' → logprob: -15.626961708068848
    9. ')#' → logprob: -15.751961708068848
    10. ');' → logprob: -15.876961708068848

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001586866332218051
    2. '
' → logprob: -6.8765869140625
    3. '<|end|>' → logprob: -7.6265869140625
    4. '   ' → logprob: -9.8765869140625
    5. '<|end|>' → logprob: -12.3765869140625
    6. '	' → logprob: -12.8765869140625
    7. ',' → logprob: -13.2515869140625
    8. '        
' → logprob: -13.5015869140625
    9. ' ' → logprob: -13.6265869140625
    10. '      ' → logprob: -14.2515869140625

Token 141: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' (adapté à ' ED') → logprob: -0.11293027549982071
    2. ' ED' → logprob: -2.2379302978515625
    3. '       ' → logprob: -9.987930297851562
    4. '   ' → logprob: -10.237930297851562
    5. '_ED' → logprob: -11.362930297851562
    6. ' ' → logprob: -11.862930297851562
    7. '[' → logprob: -13.737930297851562
    8. '    ' → logprob: -14.237930297851562
    9. '  ' → logprob: -14.237930297851562
    10. ' ' → logprob: -14.737930297851562

Token 142: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.0280383548888494e-06
    2. 'GL' → logprob: -14.625000953674316
    3. ' G' → logprob: -15.000000953674316
    4. 'EL' → logprob: -15.625000953674316
    5. 'GLE' → logprob: -17.375001907348633
    6. 'CEL' → logprob: -18.500001907348633
    7. ' GEL' → logprob: -18.625001907348633
    8. 'L' → logprob: -18.750001907348633
    9. 'GE' → logprob: -19.250001907348633
    10. '[' → logprob: -19.250001907348633

Token 143: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -1.1160349458805285e-05
    2. 'LIST' → logprob: -12.375011444091797
    3. 'LE' → logprob: -13.250011444091797
    4. 'ELS' → logprob: -13.875011444091797
    5. 'ЕЛ' → logprob: -14.125011444091797
    6. 'ELE' → logprob: -14.250011444091797
    7. 'E' → logprob: -14.375011444091797
    8. ' EL' → logprob: -14.625011444091797
    9. 'ELL' → logprob: -14.750011444091797
    10. '```' → logprob: -15.375011444091797

Token 144: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -1.27099974633893e-05
    2. 'IS' → logprob: -12.500012397766113
    3. 'ST' → logprob: -12.625012397766113
    4. ' IST' → logprob: -13.375012397766113
    5. 'LIST' → logprob: -13.500012397766113
    6. 'I' → logprob: -14.000012397766113
    7. 'EL' → logprob: -14.250012397766113
    8. 'ISTS' → logprob: -15.000012397766113
    9. 'ist' → logprob: -15.500012397766113
    10. '```' → logprob: -15.750012397766113

Token 145: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -10.625031471252441
    3. '[x' → logprob: -12.625031471252441
    4. '```' → logprob: -13.750031471252441
    5. ' [' → logprob: -14.125031471252441
    6. '][' → logprob: -14.750031471252441
    7. 'y' → logprob: -14.875031471252441
    8. '[l' → logprob: -15.375031471252441
    9. '[s' → logprob: -15.625031471252441
    10. ')[' → logprob: -15.875031471252441

Token 146: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03526006639003754
    2. '[x' → logprob: -3.535259962081909
    3. ' ][' → logprob: -5.285260200500488
    4. ']' → logprob: -8.285260200500488
    5. ')[' → logprob: -9.660260200500488
    6. '[' → logprob: -10.035260200500488
    7. ' [' → logprob: -10.160260200500488
    8. ' )[' → logprob: -11.660260200500488
    9. '}[' → logprob: -12.160260200500488
    10. '>[' → logprob: -12.410260200500488

Token 147: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015031080693006516
    2. '[x' → logprob: -4.640030860900879
    3. ' x' → logprob: -5.265030860900879
    4. '{x' → logprob: -9.640030860900879
    5. ' [' → logprob: -11.140030860900879
    6. ' ' → logprob: -12.140030860900879
    7. '	x' → logprob: -13.015030860900879
    8. '[' → logprob: -13.890030860900879
    9. '   ' → logprob: -14.390030860900879
    10. '[
' → logprob: -14.515030860900879

Token 148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016292650252580643
    2. ' ]' → logprob: -4.516292572021484
    3. ')' → logprob: -5.391292572021484
    4. ' )' → logprob: -8.016292572021484
    5. ']=' → logprob: -8.141292572021484
    6. ' =' → logprob: -11.016292572021484
    7. '=' → logprob: -11.266292572021484
    8. ']=(' → logprob: -11.891292572021484
    9. '])' → logprob: -12.266292572021484
    10. '[' → logprob: -12.641292572021484

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694027841091156
    2. ' =' → logprob: -0.694027841091156
    3. '[' → logprob: -7.069027900695801
    4. ' =(' → logprob: -11.8190279006958
    5. '[c' → logprob: -11.9440279006958
    6. ' [' → logprob: -12.3190279006958
    7. ']' → logprob: -12.5690279006958
    8. ' ' → logprob: -13.3190279006958
    9. ' =[' → logprob: -13.3190279006958
    10. ')' → logprob: -13.8190279006958

Token 150: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007614439819008112
    2. '(c' → logprob: -4.882614612579346
    3. ' ' → logprob: -12.257614135742188
    4. '(' → logprob: -13.007614135742188
    5. ' ' → logprob: -14.632614135742188
    6. '(C' → logprob: -14.757614135742188
    7. '(x' → logprob: -15.257614135742188
    8. '(s' → logprob: -15.882614135742188
    9. '<|end|>' → logprob: -17.507614135742188
    10. ' c' → logprob: -17.882614135742188

Token 151: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018204839900135994
    2. ' c' → logprob: -4.018204689025879
    3. '(c' → logprob: -10.018204689025879
    4. ')c' → logprob: -12.143204689025879
    5. ' (' → logprob: -12.893204689025879
    6. ' ' → logprob: -13.643204689025879
    7. '	c' → logprob: -14.768204689025879
    8. ')' → logprob: -15.518204689025879
    9. '
' → logprob: -15.768204689025879
    10. '<|end|>' → logprob: -16.268205642700195

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012451570364646614
    2. ' ,' → logprob: -9.00012493133545
    3. ',l' → logprob: -14.37512493133545
    4. ',c' → logprob: -15.50012493133545
    5. ',
' → logprob: -15.87512493133545
    6. '‌,' → logprob: -17.125123977661133
    7. '`,' → logprob: -17.625123977661133
    8. '```' → logprob: -17.750123977661133
    9. ')' → logprob: -17.875123977661133
    10. ' ' → logprob: -18.125123977661133

Token 153: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02077731490135193
    2. 'l' → logprob: -3.8957772254943848
    3. ' ' → logprob: -8.520777702331543
    4. ' 
' → logprob: -11.270777702331543
    5. ' ' → logprob: -11.770777702331543
    6. ' c' → logprob: -11.770777702331543
    7. 'c' → logprob: -12.520777702331543
    8. '
' → logprob: -13.645777702331543
    9. '	l' → logprob: -13.895777702331543
    10. ')' → logprob: -14.770777702331543

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.682846287731081e-05
    2. ')
' → logprob: -9.625066757202148
    3. ' )' → logprob: -14.875066757202148
    4. '}' → logprob: -16.37506675720215
    5. ')

' → logprob: -16.87506675720215
    6. ')return' → logprob: -17.12506675720215
    7. '   ' → logprob: -17.37506675720215
    8. '<|end|>' → logprob: -17.62506675720215
    9. ')}' → logprob: -18.12506675720215
    10. ')
' → logprob: -18.50006675720215

Token 155: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09422703832387924
    2. 'def' → logprob: -2.5942270755767822
    3. '

' → logprob: -4.344226837158203
    4. '<|end|>' → logprob: -6.219226837158203
    5. '
' → logprob: -9.344226837158203
    6. '\n' → logprob: -9.969226837158203
    7. ' def' → logprob: -9.969226837158203
    8. '<|end|>' → logprob: -11.094226837158203
    9. '    
' → logprob: -11.719226837158203
    10. '' → logprob: -11.844226837158203

Token 156: ' init' (ID: 6327)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.019228585064411163
    2. 'b' → logprob: -5.144228458404541
    3. ' dfs' → logprob: -5.394228458404541
    4. ' main' → logprob: -5.394228458404541
    5. ' solve' → logprob: -5.769228458404541
    6. 'dfs' → logprob: -8.0192289352417
    7. ' def' → logprob: -9.0192289352417
    8. 'solve' → logprob: -9.2692289352417
    9. ' calc' → logprob: -9.5192289352417
    10. ' find' → logprob: -9.6442289352417

Token 157: '_depth' (ID: 44220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2872313857078552
    2. '_dist' → logprob: -2.0372314453125
    3. '_distance' → logprob: -2.7872314453125
    4. '_ED' → logprob: -4.2872314453125
    5. '_graph' → logprob: -4.9122314453125
    6. '_parent' → logprob: -5.5372314453125
    7. '_(' → logprob: -5.6622314453125
    8. '_D' → logprob: -5.6622314453125
    9. '_ed' → logprob: -5.7872314453125
    10. '_d' → logprob: -6.0372314453125

Token 158: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.4044201672077179
    2. '(N' → logprob: -1.5294201374053955
    3. 's' → logprob: -3.1544201374053955
    4. 'and' → logprob: -3.7794201374053955
    5. '_parent' → logprob: -3.9044201374053955
    6. ',' → logprob: -4.529420375823975
    7. '(' → logprob: -4.904420375823975
    8. ' and' → logprob: -6.154420375823975
    9. '_depth' → logprob: -6.279420375823975
    10. ' (' → logprob: -6.779420375823975

Token 159: '_used' (ID: 67016)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.054331451654434204
    2. '_parent' → logprob: -3.3043315410614014
    3. 'par' → logprob: -4.929331302642822
    4. 'parents' → logprob: -5.429331302642822
    5. '_par' → logprob: -7.054331302642822
    6. 'ancestor' → logprob: -7.179331302642822
    7. 'dist' → logprob: -7.304331302642822
    8. 'distance' → logprob: -7.804331302642822
    9. ' parent' → logprob: -8.30433177947998
    10. 'root' → logprob: -8.42933177947998

Token 160: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009489613585174084
    2. '(' → logprob: -4.8844895362854
    3. '():' → logprob: -6.5094895362854
    4. '(n' → logprob: -8.509490013122559
    5. ' (' → logprob: -9.509490013122559
    6. '()' → logprob: -10.884490013122559
    7. '(size' → logprob: -11.009490013122559
    8. '(depth' → logprob: -11.259490013122559
    9. '()(' → logprob: -12.009490013122559
    10. '(
' → logprob: -12.009490013122559

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2893352210521698
    2. ',' → logprob: -1.4143352508544922
    3. '):
' → logprob: -5.039335250854492
    4. ' ):' → logprob: -7.164335250854492
    5. ')' → logprob: -7.289335250854492
    6. '):
' → logprob: -9.289335250854492
    7. ' ,' → logprob: -9.539335250854492
    8. '   ' → logprob: -11.164335250854492
    9. ' )' → logprob: -12.351835250854492
    10. '):

' → logprob: -12.351835250854492

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019282822031527758
    2. ' return' → logprob: -7.126928329467773
    3. ' depth' → logprob: -7.376928329467773
    4. 'depth' → logprob: -7.876928329467773
    5. '   ' → logprob: -9.501928329467773
    6. 'return' → logprob: -10.751928329467773
    7. '(depth' → logprob: -12.376928329467773
    8. '_depth' → logprob: -12.501928329467773
    9. '
' → logprob: -12.501928329467773
    10. ' depths' → logprob: -12.876928329467773

Token 163: ' DEP' (ID: 116549)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.3418017327785492
    2. '   ' → logprob: -2.091801643371582
    3. 'return' → logprob: -2.216801643371582
    4. ' depth' → logprob: -3.341801643371582
    5. ' return' → logprob: -3.841801643371582
    6. '
' → logprob: -9.841801643371582
    7. '_depth' → logprob: -10.216801643371582
    8. ' ' → logprob: -10.591801643371582
    9. '    
' → logprob: -10.591801643371582
    10. '	return' → logprob: -10.716801643371582

Token 164: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -2.9160102712921798e-05
    2. 'H' → logprob: -10.625029563903809
    3. 'T' → logprob: -12.625029563903809
    4. 'th' → logprob: -13.750029563903809
    5. '
' → logprob: -15.250029563903809
    6. 'HT' → logprob: -16.000028610229492
    7. '   ' → logprob: -17.750028610229492
    8. '_' → logprob: -18.125028610229492
    9. '

' → logprob: -18.250028610229492
    10. '=' → logprob: -18.750028610229492

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2259186953306198
    2. '=' → logprob: -1.6009186506271362
    3. ',' → logprob: -7.600918769836426
    4. ' ,' → logprob: -13.725918769836426
    5. ' ' → logprob: -14.225918769836426
    6. 's' → logprob: -14.350918769836426
    7. '=[]' → logprob: -14.350918769836426
    8. '[' → logprob: -14.475918769836426
    9. '=[' → logprob: -14.725918769836426
    10. '   ' → logprob: -14.725918769836426

Token 166: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06253379583358765
    2. ' [' → logprob: -3.0625338554382324
    3. '[-' → logprob: -4.312533855438232
    4. ' [-' → logprob: -7.937533855438232
    5. '[N' → logprob: -9.437533378601074
    6. '[n' → logprob: -12.062533378601074
    7. '[int' → logprob: -12.437533378601074
    8. '   ' → logprob: -13.312533378601074
    9. '[node' → logprob: -14.437533378601074
    10. '[len' → logprob: -15.187533378601074

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.750001907348633
    3. '2' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '-' → logprob: -16.250001907348633
    6. '１' → logprob: -16.812501907348633
    7. ' -' → logprob: -17.375001907348633
    8. '(' → logprob: -17.437501907348633
    9. '10' → logprob: -17.750001907348633
    10. '

' → logprob: -18.000001907348633

Token 168: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26576560735702515
    2. ' for' → logprob: -1.51576566696167
    3. ' ]' → logprob: -5.14076566696167
    4. ']*(' → logprob: -5.14076566696167
    5. ']*' → logprob: -6.51576566696167
    6. 'for' → logprob: -7.64076566696167
    7. ']+' → logprob: -10.390765190124512
    8. '(N' → logprob: -11.140765190124512
    9. ' ' → logprob: -12.015765190124512
    10. ')' → logprob: -12.015765190124512

Token 169: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011594036914175376
    2. ' N' → logprob: -9.125116348266602
    3. '(N' → logprob: -12.250116348266602
    4. '   ' → logprob: -13.750116348266602
    5. '	N' → logprob: -14.125116348266602
    6. ' ' → logprob: -16.1251163482666
    7. '```' → logprob: -17.0001163482666
    8. '
' → logprob: -17.1251163482666
    9. '_N' → logprob: -18.0001163482666
    10. ',N' → logprob: -18.0001163482666

Token 170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.468279752880335e-05
    2. '+
' → logprob: -9.875064849853516
    3. ' +' → logprob: -12.000064849853516
    4. ')' → logprob: -12.375064849853516
    5. '+)' → logprob: -13.125064849853516
    6. '<|end|>' → logprob: -14.750064849853516
    7. '1' → logprob: -15.875064849853516
    8. ')+' → logprob: -16.500064849853516
    9. '+

' → logprob: -16.750064849853516
    10. ' +
' → logprob: -17.375064849853516

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4060561776859686e-05
    2. ' ' → logprob: -10.125043869018555
    3. '2' → logprob: -12.875043869018555
    4. '
' → logprob: -15.187543869018555
    5. '```' → logprob: -15.625043869018555
    6. ')' → logprob: -15.812543869018555
    7. '   ' → logprob: -15.812543869018555
    8. '+' → logprob: -16.375043869018555
    9. '１' → logprob: -16.562543869018555
    10. '

' → logprob: -16.625043869018555

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006279678200371563
    2. ')
' → logprob: -7.3756279945373535
    3. ' )' → logprob: -14.250627517700195
    4. ')

' → logprob: -14.750627517700195
    5. ')
' → logprob: -16.000627517700195
    6. '   ' → logprob: -16.375627517700195
    7. '
' → logprob: -16.625627517700195
    8. '<|end|>' → logprob: -17.000627517700195
    9. ')return' → logprob: -17.625627517700195
    10. '),' → logprob: -17.750627517700195

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47638317942619324
    2. ' USED' → logprob: -1.4763832092285156
    3. 'USED' → logprob: -1.9763832092285156
    4. ' used' → logprob: -4.976383209228516
    5. 'used' → logprob: -6.226383209228516
    6. '_USED' → logprob: -6.976383209228516
    7. 'DEP' → logprob: -7.976383209228516
    8. 'Used' → logprob: -8.101383209228516
    9. '
' → logprob: -8.351383209228516
    10. ' DEP' → logprob: -8.476383209228516

Token 174: ' DEP' (ID: 116549)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.4712523818016052
    2. 'DEP' (adapté à ' DEP') → logprob: -1.47125244140625
    3. 'used' → logprob: -2.09625244140625
    4. ' USED' → logprob: -4.72125244140625
    5. ' used' → logprob: -5.09625244140625
    6. '   ' → logprob: -5.84625244140625
    7. ' DEP' → logprob: -5.97125244140625
    8. 'USE' → logprob: -7.22125244140625
    9. 'def' → logprob: -7.84625244140625
    10. 'Used' → logprob: -7.97125244140625

Token 175: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -5.512236498361744e-07
    2. 'H' → logprob: -15.625000953674316
    3. 'HT' → logprob: -16.25
    4. '
' → logprob: -16.25
    5. 'T' → logprob: -16.375
    6. 'th' → logprob: -17.625
    7. ' TH' → logprob: -18.25
    8. 'ETH' → logprob: -18.375
    9. '[' → logprob: -18.875
    10. '

' → logprob: -19.0

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6895233531831764e-05
    2. ' [' → logprob: -11.00002670288086
    3. '<|end|>' → logprob: -12.87502670288086
    4. '0' → logprob: -13.00002670288086
    5. '[
' → logprob: -13.12502670288086
    6. '=' → logprob: -13.87502670288086
    7. ',' → logprob: -14.87502670288086
    8. '```' → logprob: -15.00002670288086
    9. '
' → logprob: -15.25002670288086
    10. ' =' → logprob: -15.37502670288086

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014181028120219707
    2. '0' → logprob: -4.264181137084961
    3. ' ' → logprob: -11.014181137084961
    4. '
' → logprob: -14.639181137084961
    5. '   ' → logprob: -15.889181137084961
    6. ')' → logprob: -16.01418113708496
    7. '```' → logprob: -16.01418113708496
    8. '-' → logprob: -16.70168113708496
    9. '[' → logprob: -17.70168113708496
    10. '=' → logprob: -17.70168113708496

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.492120155598968e-05
    2. ']=' → logprob: -9.875064849853516
    3. ' ]' → logprob: -11.625064849853516
    4. ')' → logprob: -12.375064849853516
    5. '=' → logprob: -15.375064849853516
    6. ')]' → logprob: -17.000064849853516
    7. '[' → logprob: -17.625064849853516
    8. ']
' → logprob: -18.750064849853516
    9. ')=' → logprob: -19.375064849853516
    10. '])' → logprob: -19.375064849853516

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. ' ' → logprob: -15.849077224731445
    4. ' =
' → logprob: -16.724077224731445
    5. '[' → logprob: -16.974077224731445
    6. ' ' → logprob: -17.099077224731445
    7. ']' → logprob: -17.099077224731445
    8. '＝' → logprob: -17.224077224731445
    9. ']=' → logprob: -17.849077224731445
    10. '=
' → logprob: -18.099077224731445

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '00' → logprob: -18.125009536743164
    4. '۰' → logprob: -18.250009536743164
    5. '０' → logprob: -18.375009536743164
    6. '000' → logprob: -19.312509536743164
    7. '   ' → logprob: -19.562509536743164
    8. ' ' → logprob: -19.687509536743164
    9. '=' → logprob: -20.437509536743164
    10. '
' → logprob: -20.437509536743164

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '０' → logprob: -19.375
    4. '۰' → logprob: -19.875
    5. '00' → logprob: -20.125
    6. '   ' → logprob: -20.625
    7. '000' → logprob: -20.8125
    8. '=' → logprob: -21.0
    9. '1' → logprob: -21.375
    10. '
' → logprob: -21.4375

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019421862438321114
    2. '
' → logprob: -4.2694220542907715
    3. '	return' → logprob: -5.5194220542907715
    4. '<|end|>' → logprob: -7.0194220542907715
    5. '    
' → logprob: -8.769421577453613
    6. 'return' → logprob: -10.019421577453613
    7. '	
' → logprob: -10.394421577453613
    8. ' return' → logprob: -10.894421577453613
    9. '	' → logprob: -11.019421577453613
    10. '<|end|>' → logprob: -11.144421577453613

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020242169499397278
    2. '	return' → logprob: -4.395242214202881
    3. '	' → logprob: -5.645242214202881
    4. '
' → logprob: -6.270242214202881
    5. '<|end|>' → logprob: -7.020242214202881
    6. '    
' → logprob: -7.895242214202881
    7. '	
' → logprob: -8.395241737365723
    8. '\t' → logprob: -8.770241737365723
    9. '   ' → logprob: -9.395241737365723
    10. 'return' → logprob: -9.645241737365723

Token 184: ' USED' (ID: 129384)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.480391263961792
    2. ' used' → logprob: -1.730391263961792
    3. 'USED' (adapté à ' USED') → logprob: -2.105391263961792
    4. 'return' → logprob: -3.230391263961792
    5. '   ' → logprob: -3.730391263961792
    6. ' return' → logprob: -4.605391502380371
    7. ' USED' → logprob: -5.230391502380371
    8. 'def' → logprob: -6.605391502380371
    9. 'Used' → logprob: -7.480391502380371
    10. ' ' → logprob: -7.730391502380371

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016075309365987778
    2. '=' → logprob: -4.141075134277344
    3. '[' → logprob: -10.391075134277344
    4. '=[' → logprob: -12.641075134277344
    5. ' =[' → logprob: -12.766075134277344
    6. ' ' → logprob: -13.391075134277344
    7. '=[]' → logprob: -14.766075134277344
    8. '	' → logprob: -15.016075134277344
    9. ')' → logprob: -15.016075134277344
    10. ' ' → logprob: -15.391075134277344

Token 186: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31327956914901733
    2. ' [' → logprob: -1.313279628753662
    3. 'set' → logprob: -11.813279151916504
    4. '[N' → logprob: -12.563279151916504
    5. ' set' → logprob: -12.938279151916504
    6. '[n' → logprob: -14.063279151916504
    7. ' ' → logprob: -14.188279151916504
    8. '   ' → logprob: -14.313279151916504
    9. '[int' → logprob: -14.313279151916504
    10. '{' → logprob: -14.813279151916504

Token 187: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031803252641111612
    2. ' False' → logprob: -5.753180503845215
    3. '0' → logprob: -13.003180503845215
    4. 'True' → logprob: -15.753180503845215
    5. '(False' → logprob: -16.0031795501709
    6. '=False' → logprob: -17.1281795501709
    7. ']' → logprob: -17.3781795501709
    8. '.False' → logprob: -17.8781795501709
    9. 'F' → logprob: -18.5031795501709
    10. '
' → logprob: -18.8781795501709

Token 188: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.16035999357700348
    2. ']' → logprob: -1.9103599786758423
    3. ']*' → logprob: -9.035360336303711
    4. ' ]' → logprob: -11.660360336303711
    5. '](' → logprob: -12.410360336303711
    6. '*(' → logprob: -13.285360336303711
    7. ' for' → logprob: -13.910360336303711
    8. ']+' → logprob: -14.035360336303711
    9. ')*(' → logprob: -15.660360336303711
    10. '   ' → logprob: -15.785360336303711

Token 189: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017513417406007648
    2. '(N' → logprob: -6.87675142288208
    3. ' N' → logprob: -7.25175142288208
    4. ' (' → logprob: -12.251750946044922
    5. '(' → logprob: -13.501750946044922
    6. '	N' → logprob: -14.501750946044922
    7. ' ' → logprob: -14.501750946044922
    8. '   ' → logprob: -14.751750946044922
    9. 'len' → logprob: -15.126750946044922
    10. '[N' → logprob: -15.376750946044922

Token 190: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.173704271830502e-06
    2. '+
' → logprob: -13.37500286102295
    3. ' +' → logprob: -13.75000286102295
    4. '1' → logprob: -15.12500286102295
    5. '```' → logprob: -15.75000286102295
    6. '＋' → logprob: -18.000003814697266
    7. '()+' → logprob: -18.000003814697266
    8. '[' → logprob: -18.250003814697266
    9. '
' → logprob: -18.375003814697266
    10. ')+' → logprob: -19.000003814697266

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.500005722045898
    3. '<|end|>' → logprob: -13.250005722045898
    4. '0' → logprob: -16.3750057220459
    5. '```' → logprob: -16.3750057220459
    6. '+' → logprob: -16.8750057220459
    7. '2' → logprob: -17.0000057220459
    8. '6' → logprob: -17.6250057220459
    9. '...' → logprob: -18.0000057220459
    10. ')' → logprob: -18.6250057220459

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019336353288963437
    2. ')
' → logprob: -6.251933574676514
    3. ')
' → logprob: -13.001934051513672
    4. ' )' → logprob: -13.626934051513672
    5. ')

' → logprob: -14.251934051513672
    6. ')return' → logprob: -14.376934051513672
    7. '   ' → logprob: -16.126934051513672
    8. '
' → logprob: -16.501934051513672
    9. '<|end|>' → logprob: -17.376934051513672
    10. '),' → logprob: -17.626934051513672

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016009613871574402
    2. '	return' → logprob: -4.64100980758667
    3. '
' → logprob: -5.76600980758667
    4. '<|end|>' → logprob: -5.89100980758667
    5. ' return' → logprob: -9.141009330749512
    6. '    
' → logprob: -9.641009330749512
    7. 'return' → logprob: -10.016009330749512
    8. '<|end|>' → logprob: -10.391009330749512
    9. '	
' → logprob: -10.766009330749512
    10. '\t' → logprob: -11.016009330749512

Token 194: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8016321659088135
    2. 'return' (adapté à ' return') → logprob: -0.8016321659088135
    3. '   ' → logprob: -2.3016321659088135
    4. '	return' → logprob: -6.051631927490234
    5. 'eturn' → logprob: -9.426631927490234
    6. ' ' → logprob: -9.926631927490234
    7. 'def' → logprob: -10.051631927490234
    8. 'deque' → logprob: -10.176631927490234
    9. '<|end|>' → logprob: -10.551631927490234
    10. '
' → logprob: -10.676631927490234

Token 195: ' DEP' (ID: 116549)
  Prédit: ' DEP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DEP' → logprob: -0.5759466886520386
    2. 'DEP' → logprob: -0.8259466886520386
    3. 'DE' → logprob: -13.200946807861328
    4. 'N' → logprob: -13.325946807861328
    5. ' N' → logprob: -13.575946807861328
    6. ' DE' → logprob: -14.575946807861328
    7. 'DEPEND' → logprob: -14.825946807861328
    8. ' ' → logprob: -15.325946807861328
    9. '(' → logprob: -15.450946807861328
    10. 'DP' → logprob: -15.450946807861328

Token 196: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.9361264946837764e-07
    2. 'T' → logprob: -16.625
    3. ' TH' → logprob: -17.125
    4. 'HT' → logprob: -17.375
    5. '
' → logprob: -17.375
    6. 'H' → logprob: -18.75
    7. 'ETH' → logprob: -19.375
    8. '   ' → logprob: -19.75
    9. 'P' → logprob: -19.875
    10. 'th' → logprob: -20.125

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011534435179783031
    2. ' ,' → logprob: -9.500115394592285
    3. ',U' → logprob: -10.125115394592285
    4. '   ' → logprob: -15.750115394592285
    5. ',
' → logprob: -15.875115394592285
    6. ',\
' → logprob: -17.25011444091797
    7. '‌,' → logprob: -17.25011444091797
    8. '[' → logprob: -18.50011444091797
    9. '<|end|>' → logprob: -19.25011444091797
    10. ' USED' → logprob: -19.25011444091797

Token 198: ' USED' (ID: 129384)
  Prédit: ' USED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' USED' → logprob: -0.38691434264183044
    2. 'USED' → logprob: -1.1369143724441528
    3. '_USED' → logprob: -10.261914253234863
    4. 'US' → logprob: -12.886914253234863
    5. 'USE' → logprob: -13.386914253234863
    6. 'Used' → logprob: -13.636914253234863
    7. ' USE' → logprob: -13.761914253234863
    8. ' used' → logprob: -14.011914253234863
    9. 'used' → logprob: -14.886914253234863
    10. ' Used' → logprob: -15.511914253234863

Token 199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06642993539571762
    2. '<|end|>' → logprob: -2.816429853439331
    3. '
' → logprob: -5.69143009185791
    4. '<|end|>' → logprob: -7.56643009185791
    5. '

' → logprob: -7.81643009185791
    6. '```' → logprob: -9.56643009185791
    7. ' def' → logprob: -10.06643009185791
    8. ')' → logprob: -11.81643009185791
    9. '#' → logprob: -12.69143009185791
    10. '\' → logprob: -12.69143009185791

Token 201: ' make' (ID: 1520)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10136410593986511
    2. ' bfs' → logprob: -2.3513641357421875
    3. 'dfs' → logprob: -6.9763641357421875
    4. ' dfs' → logprob: -8.976364135742188
    5. 'solve' → logprob: -10.476364135742188
    6. 'calc' → logprob: -10.851364135742188
    7. 'make' → logprob: -11.601364135742188
    8. 'main' → logprob: -11.601364135742188
    9. 'B' → logprob: -12.476364135742188
    10. 'bread' → logprob: -12.476364135742188

Token 202: '_e' (ID: 4618)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.6611806750297546
    2. '_empty' → logprob: -2.0361807346343994
    3. '_b' → logprob: -2.6611807346343994
    4. '_' → logprob: -2.6611807346343994
    5. '_depth' → logprob: -2.7861807346343994
    6. '_path' → logprob: -3.1611807346343994
    7. '_d' → logprob: -3.9111807346343994
    8. '_distance' → logprob: -4.16118049621582
    9. '_dist' → logprob: -4.41118049621582
    10. '_stack' → logprob: -4.66118049621582

Token 203: 'uler' (ID: 11802)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15358825027942657
    2. 'm' → logprob: -2.40358829498291
    3. 'dge' → logprob: -3.15358829498291
    4. 'de' → logprob: -6.40358829498291
    5. 'deque' → logprob: -6.65358829498291
    6. 'dg' → logprob: -7.15358829498291
    7. 'deg' → logprob: -7.27858829498291
    8. 'dict' → logprob: -7.65358829498291
    9. 'D' → logprob: -7.65358829498291
    10. '_d' → logprob: -7.77858829498291

Token 204: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.028744671493768692
    2. 'tour' → logprob: -4.403744697570801
    3. 'Tour' → logprob: -5.028744697570801
    4. '_path' → logprob: -5.278744697570801
    5. '_walk' → logprob: -6.903744697570801
    6. '(' → logprob: -7.028744697570801
    7. '_' → logprob: -7.403744697570801
    8. '_sequence' → logprob: -8.0287446975708
    9. '_order' → logprob: -8.4037446975708
    10. '()' → logprob: -8.5287446975708

Token 205: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.005701246205717325
    2. 'tour' → logprob: -6.005701065063477
    3. 'ou' → logprob: -7.255701065063477
    4. 'o' → logprob: -7.380701065063477
    5. 'r' → logprob: -7.630701065063477
    6. 'ours' → logprob: -8.005701065063477
    7. 'rail' → logprob: -8.880701065063477
    8. '
' → logprob: -9.005701065063477
    9. 'Our' → logprob: -9.130701065063477
    10. '```' → logprob: -9.880701065063477

Token 206: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.698651134967804
    2. '(' → logprob: -1.0736510753631592
    3. '():' → logprob: -1.9486510753631592
    4. '()' → logprob: -4.323651313781738
    5. '(node' → logprob: -6.448651313781738
    6. '(n' → logprob: -7.698651313781738
    7. '(root' → logprob: -7.823651313781738
    8. '()(' → logprob: -8.073651313781738
    9. '(
' → logprob: -8.198651313781738
    10. '(Node' → logprob: -8.198651313781738

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006742723751813173
    2. '):' → logprob: -5.00674295425415
    3. ')' → logprob: -10.881742477416992
    4. ' ,' → logprob: -12.506742477416992
    5. ':' → logprob: -13.881742477416992
    6. ' ):' → logprob: -14.256742477416992
    7. '):
' → logprob: -14.506742477416992
    8. ',node' → logprob: -14.631742477416992
    9. ',
' → logprob: -15.069242477416992
    10. '   ' → logprob: -15.444242477416992

Token 208: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.14469696581363678
    2. ' ED' → logprob: -2.0196969509124756
    3. 'start' → logprob: -7.769697189331055
    4. 'root' → logprob: -7.769697189331055
    5. 'ed' → logprob: -8.644697189331055
    6. 'EDGE' → logprob: -8.644697189331055
    7. ' root' → logprob: -9.019697189331055
    8. ' start' → logprob: -9.394697189331055
    9. 'adj' → logprob: -9.644697189331055
    10. 'edge' → logprob: -10.019697189331055

Token 209: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0003291480534244329
    2. 'EL' → logprob: -8.12532901763916
    3. 'GL' → logprob: -11.25032901763916
    4. 'L' → logprob: -12.62532901763916
    5. ' G' → logprob: -12.62532901763916
    6. '```' → logprob: -13.50032901763916
    7. '_G' → logprob: -13.62532901763916
    8. '
' → logprob: -13.87532901763916
    9. 'GE' → logprob: -14.25032901763916
    10. 'EG' → logprob: -14.37532901763916

Token 210: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.003094293177127838
    2. 'LIST' → logprob: -5.87809419631958
    3. 'L' → logprob: -9.753094673156738
    4. 'E' → logprob: -10.128094673156738
    5. '_LIST' → logprob: -10.253094673156738
    6. 'ED' → logprob: -10.753094673156738
    7. 'LE' → logprob: -10.878094673156738
    8. '```' → logprob: -10.878094673156738
    9. '
' → logprob: -11.128094673156738
    10. 'ELS' → logprob: -11.628094673156738

Token 211: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0006396461394615471
    2. 'LIST' → logprob: -8.375639915466309
    3. 'EL' → logprob: -8.500639915466309
    4. 'I' → logprob: -10.125639915466309
    5. 'ST' → logprob: -10.250639915466309
    6. 'L' → logprob: -10.625639915466309
    7. '_' → logprob: -10.750639915466309
    8. 'IS' → logprob: -10.750639915466309
    9. 'ISTS' → logprob: -10.875639915466309
    10. '_LIST' → logprob: -11.500639915466309

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009118633344769478
    2. '):' → logprob: -4.759118556976318
    3. ' ,' → logprob: -8.259119033813477
    4. '):
' → logprob: -8.509119033813477
    5. ' ):' → logprob: -10.884119033813477
    6. ')' → logprob: -11.884119033813477
    7. '   ' → logprob: -12.259119033813477
    8. ',node' → logprob: -12.384119033813477
    9. '):
' → logprob: -13.134119033813477
    10. ':' → logprob: -13.884119033813477

Token 213: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.6008251905441284
    2. ' DEP' → logprob: -1.4758251905441284
    3. 'root' → logprob: -2.725825309753418
    4. ' root' → logprob: -2.975825309753418
    5. 'ROOT' → logprob: -3.350825309753418
    6. 'start' → logprob: -3.600825309753418
    7. ' start' → logprob: -3.975825309753418
    8. 'USED' → logprob: -5.350825309753418
    9. 'depth' → logprob: -5.475825309753418
    10. ' depth' → logprob: -5.850825309753418

Token 214: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.0325924449716695e-05
    2. 'H' → logprob: -12.25001049041748
    3. 'T' → logprob: -12.75001049041748
    4. '
' → logprob: -14.25001049041748
    5. ' TH' → logprob: -14.37501049041748
    6. 'HT' → logprob: -14.62501049041748
    7. '   ' → logprob: -14.75001049041748
    8. '_TH' → logprob: -16.500009536743164
    9. ' H' → logprob: -16.750009536743164
    10. '_T' → logprob: -17.000009536743164

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003442318644374609
    2. '):' → logprob: -5.753442287445068
    3. ' ,' → logprob: -8.628442764282227
    4. ')' → logprob: -9.753442764282227
    5. '):
' → logprob: -11.378442764282227
    6. ' ):' → logprob: -12.128442764282227
    7. '   ' → logprob: -12.628442764282227
    8. ',U' → logprob: -13.940942764282227
    9. ',
' → logprob: -14.065942764282227
    10. '  ' → logprob: -14.253442764282227

Token 216: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.35013914108276367
    2. ' USED' → logprob: -1.2251391410827637
    3. 'ROOT' → logprob: -7.850139141082764
    4. 'used' → logprob: -8.600139617919922
    5. 'root' → logprob: -8.975139617919922
    6. 'START' → logprob: -9.225139617919922
    7. 'start' → logprob: -9.225139617919922
    8. ' root' → logprob: -9.475139617919922
    9. ' start' → logprob: -9.600139617919922
    10. ')' → logprob: -9.850139617919922

Token 217: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04342091456055641
    2. '):' → logprob: -3.1684210300445557
    3. '):
' → logprob: -8.293420791625977
    4. ' ,' → logprob: -9.293420791625977
    5. ' ):' → logprob: -10.668420791625977
    6. ')' → logprob: -10.918420791625977
    7. ',node' → logprob: -10.918420791625977
    8. '):
' → logprob: -12.668420791625977
    9. ',v' → logprob: -12.793420791625977
    10. ',u' → logprob: -13.168420791625977

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010511936619877815
    2. ' stack' → logprob: -5.010511875152588
    3. ' e' → logprob: -6.385511875152588
    4. ' queue' → logprob: -7.385511875152588
    5. ' Q' → logprob: -8.510512351989746
    6. ' Euler' → logprob: -8.760512351989746
    7. ' deque' → logprob: -9.010512351989746
    8. ' que' → logprob: -9.135512351989746
    9. 'stack' → logprob: -9.135512351989746
    10. ' ' → logprob: -9.260512351989746

Token 219: ' QUE' (ID: 26977)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.48281553387641907
    2. ' stack' → logprob: -1.7328155040740967
    3. 'e' → logprob: -2.7328155040740967
    4. 'E' → logprob: -3.1078155040740967
    5. 'STACK' → logprob: -3.9828155040740967
    6. 'Q' → logprob: -3.9828155040740967
    7. ' e' → logprob: -4.232815742492676
    8. ' STACK' → logprob: -5.232815742492676
    9. '   ' → logprob: -5.607815742492676
    10. 'ST' → logprob: -5.857815742492676

Token 220: ' =' (ID: 314)
  Prédit: 'UE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UE' → logprob: -0.015754077583551407
    2. 'E' → logprob: -4.265754222869873
    3. 'U' → logprob: -6.890754222869873
    4. ' =' → logprob: -8.765753746032715
    5. '=' → logprob: -8.890753746032715
    6. '   ' → logprob: -9.015753746032715
    7. 'ue' → logprob: -9.640753746032715
    8. ' UE' → logprob: -10.265753746032715
    9. 'EU' → logprob: -11.390753746032715
    10. '  ' → logprob: -11.890753746032715

Token 221: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00861456897109747
    2. ' deque' → logprob: -4.758614540100098
    3. 'Deque' → logprob: -17.883615493774414
    4. 'de' → logprob: -17.883615493774414
    5. '	de' → logprob: -17.883615493774414
    6. '   ' → logprob: -18.883615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '	' → logprob: -21.008615493774414
    9. '[' → logprob: -21.258615493774414
    10. '  ' → logprob: -21.383615493774414

Token 222: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8994805216789246
    2. '([' → logprob: -1.1494805812835693
    3. '()
' → logprob: -1.3994805812835693
    4. '([(' → logprob: -3.5244805812835693
    5. '()

' → logprob: -9.649480819702148
    6. '([])
' → logprob: -9.774480819702148
    7. '([]' → logprob: -10.149480819702148
    8. '()\' → logprob: -10.649480819702148
    9. '(' → logprob: -10.899480819702148
    10. '()
' → logprob: -12.024480819702148

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005075189401395619
    2. ' ' → logprob: -7.625507354736328
    3. '(' → logprob: -11.000507354736328
    4. '   ' → logprob: -13.250507354736328
    5. ' (' → logprob: -14.375507354736328
    6. ')' → logprob: -17.000507354736328
    7. '  ' → logprob: -17.063007354736328
    8. '
' → logprob: -17.063007354736328
    9. '```' → logprob: -17.063007354736328
    10. '１' → logprob: -17.125507354736328

Token 224: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0013397661969065666
    2. '])
' → logprob: -6.626339912414551
    3. ' ])' → logprob: -11.62633991241455
    4. ')' → logprob: -13.00133991241455
    5. ')])' → logprob: -13.75133991241455
    6. '])
' → logprob: -14.75133991241455
    7. '])

' → logprob: -14.87633991241455
    8. ']);' → logprob: -15.87633991241455
    9. ']' → logprob: -16.126338958740234
    10. '])]' → logprob: -16.376338958740234

Token 225: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12508650124073029
    2. '   ' → logprob: -2.750086545944214
    3. ' while' → logprob: -3.875086545944214
    4. '	while' → logprob: -4.750086307525635
    5. '    
' → logprob: -4.875086307525635
    6. 'while' → logprob: -5.125086307525635
    7. ' 
' → logprob: -5.625086307525635
    8. '	
' → logprob: -5.625086307525635
    9. '  
' → logprob: -7.125086307525635
    10. '' → logprob: -7.625086307525635

Token 226: ' QUE' (ID: 26977)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13502180576324463
    2. ' while' → logprob: -2.510021686553955
    3. 'e' → logprob: -3.385021686553955
    4. 'idx' → logprob: -5.635021686553955
    5. 'res' → logprob: -6.510021686553955
    6. 'E' → logprob: -6.635021686553955
    7. ' e' → logprob: -6.885021686553955
    8. 'parent' → logprob: -7.760021686553955
    9. 'result' → logprob: -8.010022163391113
    10. 'pos' → logprob: -8.135022163391113

Token 227: '2' (ID: 17)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.011117145419120789
    2. '.append' → logprob: -5.386116981506348
    3. '.' → logprob: -5.761116981506348
    4. '.pop' → logprob: -5.761116981506348
    5. 'p' → logprob: -9.886116981506348
    6. ' .' → logprob: -10.386116981506348
    7. 'pop' → logprob: -10.636116981506348
    8. ' =' → logprob: -11.386116981506348
    9. 'append' → logprob: -11.636116981506348
    10. '.clear' → logprob: -11.636116981506348

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023494234308600426
    2. '=' → logprob: -3.773494243621826
    3. '.append' → logprob: -8.523493766784668
    4. '.' → logprob: -10.648493766784668
    5. ' ' → logprob: -11.523493766784668
    6. '=[]' → logprob: -12.648493766784668
    7. '.pop' → logprob: -13.023493766784668
    8. ')' → logprob: -13.148493766784668
    9. '.extend' → logprob: -13.148493766784668
    10. ',' → logprob: -13.523493766784668

Token 229: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.019067898392677307
    2. ' deque' → logprob: -4.394067764282227
    3. '[]' → logprob: -5.269067764282227
    4. '[' → logprob: -6.894067764282227
    5. ' []' → logprob: -8.394067764282227
    6. ' [' → logprob: -9.019067764282227
    7. 'de' → logprob: -11.519067764282227
    8. ' ' → logprob: -12.394067764282227
    9. '[]
' → logprob: -12.894067764282227
    10. '   ' → logprob: -13.644067764282227

Token 230: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6232036352157593
    2. '([' → logprob: -0.8732036352157593
    3. '([]' → logprob: -3.248203754425049
    4. '()
' → logprob: -5.748203754425049
    5. '([(' → logprob: -6.248203754425049
    6. '([])
' → logprob: -6.748203754425049
    7. '[]' → logprob: -7.123203754425049
    8. '[' → logprob: -8.99820327758789
    9. '(' → logprob: -10.24820327758789
    10. '()

' → logprob: -10.74820327758789

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19660505652427673
    2. ' while' → logprob: -2.8216049671173096
    3. '	while' → logprob: -2.9466049671173096
    4. 'while' → logprob: -3.5716049671173096
    5. '
' → logprob: -3.9466049671173096
    6. '    
' → logprob: -4.821605205535889
    7. '    ' → logprob: -5.196605205535889
    8. '	
' → logprob: -5.696605205535889
    9. ' 
' → logprob: -7.696605205535889
    10. '	' → logprob: -8.19660472869873

Token 232: ' E' (ID: 457)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3607994318008423
    2. 'while' → logprob: -1.3607994318008423
    3. '   ' → logprob: -3.1107993125915527
    4. '	while' → logprob: -7.110799312591553
    5. ' used' → logprob: -8.860799789428711
    6. ' ' → logprob: -9.360799789428711
    7. 'DEP' → logprob: -9.610799789428711
    8. ' visited' → logprob: -9.860799789428711
    9. ' USED' → logprob: -9.860799789428711
    10. 'e' → logprob: -9.985799789428711

Token 233: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.059194035828113556
    2. '_' → logprob: -4.684194087982178
    3. '[' → logprob: -5.309194087982178
    4. 'uler' → logprob: -5.434194087982178
    5. 'U' → logprob: -5.559194087982178
    6. 'ULE' → logprob: -5.684194087982178
    7. '```' → logprob: -5.684194087982178
    8. 'ULAR' → logprob: -5.809194087982178
    9. '_UL' → logprob: -6.059194087982178
    10. '   ' → logprob: -6.059194087982178

Token 234: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.0012735659256577492
    2. 'R' → logprob: -7.7512736320495605
    3. '[]' → logprob: -8.376273155212402
    4. 'E' → logprob: -8.876273155212402
    5. 'OR' → logprob: -9.001273155212402
    6. 'AR' → logprob: -9.376273155212402
    7. '_ER' → logprob: -9.626273155212402
    8. '_' → logprob: -9.751273155212402
    9. '[' → logprob: -10.626273155212402
    10. '=' → logprob: -11.001273155212402

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6429150700569153
    2. ' =' → logprob: -1.0179150104522705
    3. '_T' → logprob: -2.5179150104522705
    4. '=[]' → logprob: -3.6429150104522705
    5. '_' → logprob: -5.76791524887085
    6. '=[]
' → logprob: -7.39291524887085
    7. '=[' → logprob: -8.267914772033691
    8. '=_' → logprob: -8.392914772033691
    9. 'Tour' → logprob: -8.517914772033691
    10. 'T' → logprob: -8.517914772033691

Token 236: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000762691895943135
    2. '[' → logprob: -7.500762462615967
    3. ' []' → logprob: -8.625762939453125
    4. '[]
' → logprob: -10.500762939453125
    5. 'deque' → logprob: -13.750762939453125
    6. '[]}' → logprob: -13.875762939453125
    7. '[]

' → logprob: -15.500762939453125
    8. '[]>' → logprob: -15.625762939453125
    9. ' [' → logprob: -15.750762939453125
    10. '[],' → logprob: -16.750762939453125

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7944808602333069
    2. ' while' → logprob: -0.9194808602333069
    3. '	while' → logprob: -2.419480800628662
    4. 'while' → logprob: -3.669480800628662
    5. '
' → logprob: -4.169480800628662
    6. '<|end|>' → logprob: -5.044480800628662
    7. '	
' → logprob: -5.294480800628662
    8. '    
' → logprob: -6.169480800628662
    9. '    ' → logprob: -6.294480800628662
    10. ' ' → logprob: -6.544480800628662

Token 238: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5730187892913818
    2. ' while' → logprob: -0.9480187892913818
    3. '   ' → logprob: -3.073018789291382
    4. 'USED' → logprob: -6.948019027709961
    5. ' USED' → logprob: -7.448019027709961
    6. '	while' → logprob: -9.198019027709961
    7. 'visited' → logprob: -9.198019027709961
    8. 'parent' → logprob: -9.323019027709961
    9. 'DEP' → logprob: -9.448019027709961
    10. '    
' → logprob: -9.573019027709961

Token 239: ' QUE' (ID: 26977)
  Prédit: ' QUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' QUE' → logprob: -0.0052534411661326885
    2. 'QUE' → logprob: -5.255253314971924
    3. ' len' → logprob: -11.005253791809082
    4. ' que' → logprob: -13.380253791809082
    5. ' ' → logprob: -14.130253791809082
    6. 'len' → logprob: -15.255253791809082
    7. 'QUEUE' → logprob: -16.130252838134766
    8. 'que' → logprob: -16.255252838134766
    9. ' not' → logprob: -16.380252838134766
    10. '(' → logprob: -16.505252838134766

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008395231561735272
    2. ':
' → logprob: -7.625839710235596
    3. '):' → logprob: -8.250839233398438
    4. '.p' → logprob: -10.250839233398438
    5. '.pop' → logprob: -11.000839233398438
    6. '>:' → logprob: -11.125839233398438
    7. '[' → logprob: -12.250839233398438
    8. ' and' → logprob: -13.000839233398438
    9. '```' → logprob: -13.000839233398438
    10. '):
' → logprob: -13.125839233398438

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46552610397338867
    2. '   ' → logprob: -1.4655261039733887
    3. ' v' → logprob: -2.7155261039733887
    4. ' node' → logprob: -3.4655261039733887
    5. ' x' → logprob: -4.090526103973389
    6. 'v' → logprob: -4.465526103973389
    7. 'node' → logprob: -4.965526103973389
    8. ' u' → logprob: -5.715526103973389
    9. 'x' → logprob: -6.590526103973389
    10. '    ' → logprob: -7.090526103973389

Token 242: ' process' (ID: 2273)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08309493958950043
    2. ' v' → logprob: -3.458094835281372
    3. 'x' → logprob: -4.208095073699951
    4. 'node' → logprob: -4.333095073699951
    5. 'cur' → logprob: -4.833095073699951
    6. 'u' → logprob: -5.458095073699951
    7. ' node' → logprob: -5.833095073699951
    8. 'now' → logprob: -6.208095073699951
    9. ' now' → logprob: -7.333095073699951
    10. '   ' → logprob: -7.833095073699951

Token 243: '_e' (ID: 4618)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4671996533870697
    2. '=' → logprob: -1.092199683189392
    3. '_node' → logprob: -3.7171995639801025
    4. 'd' → logprob: -5.342199802398682
    5. '_' → logprob: -5.467199802398682
    6. 'node' → logprob: -5.842199802398682
    7. 'r' → logprob: -8.217199325561523
    8. ' ' → logprob: -8.717199325561523
    9. '_id' → logprob: -8.717199325561523
    10. 'ed' → logprob: -8.967199325561523

Token 244: 'uler' (ID: 11802)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.769235372543335
    2. ' =' → logprob: -0.894235372543335
    3. 'LEM' → logprob: -2.644235372543335
    4. 'LEMENT' → logprob: -4.019235610961914
    5. '[' → logprob: -5.019235610961914
    6. 'm' → logprob: -5.394235610961914
    7. 'LE' → logprob: -5.394235610961914
    8. '_' → logprob: -5.644235610961914
    9. 'M' → logprob: -6.019235610961914
    10. 'lement' → logprob: -6.144235610961914

Token 245: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5033627152442932
    2. '=' → logprob: -1.5033626556396484
    3. '_node' → logprob: -2.0033626556396484
    4. '_' → logprob: -4.503362655639648
    5. 'node' → logprob: -4.753362655639648
    6. '_NODE' → logprob: -5.503362655639648
    7. 'ED' → logprob: -6.003362655639648
    8. 'ed' → logprob: -6.253362655639648
    9. 'E' → logprob: -6.628362655639648
    10. 'ing' → logprob: -6.753362655639648

Token 246: 'our' (ID: 401)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03148045018315315
    2. 'ime' → logprob: -3.906480550765991
    3. 'mp' → logprob: -5.906480312347412
    4. 'OP' → logprob: -6.281480312347412
    5. '(' → logprob: -7.031480312347412
    6. '=' → logprob: -7.281480312347412
    7. 'ree' → logprob: -7.281480312347412
    8. 'pop' → logprob: -7.656480312347412
    9. ' =' → logprob: -7.906480312347412
    10. 'O' → logprob: -7.906480312347412

Token 247: '(' (ID: 7)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36633896827697754
    2. '=' → logprob: -1.2413389682769775
    3. '_node' → logprob: -4.116338729858398
    4. '_' → logprob: -6.866338729858398
    5. 'node' → logprob: -9.366338729858398
    6. '   ' → logprob: -9.491338729858398
    7. '=_' → logprob: -10.116338729858398
    8. '_item' → logprob: -10.241338729858398
    9. ' ' → logprob: -10.616338729858398
    10. '_=' → logprob: -10.741338729858398

Token 248: 'QUE' (ID: 10304)
  Prédit: 'QUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.015127609483897686
    2. ' QUE' → logprob: -4.765127658843994
    3. 'QUEUE' → logprob: -5.265127658843994
    4. ')' → logprob: -7.390127658843994
    5. 'QUES' → logprob: -7.890127658843994
    6. 'que' → logprob: -9.015127182006836
    7. '   ' → logprob: -9.890127182006836
    8. 'queue' → logprob: -10.140127182006836
    9. ' que' → logprob: -10.765127182006836
    10. 'E' → logprob: -11.265127182006836

Token 249: ',' (ID: 11)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.029247358441352844
    2. '[' → logprob: -4.279247283935547
    3. '.pop' → logprob: -4.279247283935547
    4. '[-' → logprob: -7.529247283935547
    5. '.' → logprob: -8.154247283935547
    6. ')' → logprob: -8.779247283935547
    7. '2' → logprob: -9.904247283935547
    8. ' .' → logprob: -10.029247283935547
    9. '   ' → logprob: -10.779247283935547
    10. ').' → logprob: -11.404247283935547

Token 250: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.12251511961221695
    2. ' QUE' → logprob: -2.3725152015686035
    3. 'E' → logprob: -4.7475152015686035
    4. 'ED' → logprob: -4.9975152015686035
    5. 'USED' → logprob: -5.7475152015686035
    6. 'QUEUE' → logprob: -6.6225152015686035
    7. ' E' → logprob: -7.3725152015686035
    8. ' USED' → logprob: -7.3725152015686035
    9. 'QUES' → logprob: -7.7475152015686035
    10. ' ED' → logprob: -8.997514724731445

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00041970983147621155
    2. '[' → logprob: -8.375419616699219
    3. ')' → logprob: -8.750419616699219
    4. '.p' → logprob: -11.625419616699219
    5. '.pop' → logprob: -12.750419616699219
    6. ',' → logprob: -13.000419616699219
    7. '
' → logprob: -13.062919616699219
    8. '.append' → logprob: -13.500419616699219
    9. '[-' → logprob: -13.625419616699219
    10. '.' → logprob: -13.687919616699219

Token 252: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014824859099462628
    2. ')
' → logprob: -6.8764824867248535
    3. ',' → logprob: -7.7514824867248535
    4. ' )' → logprob: -12.126482009887695
    5. '):
' → logprob: -12.751482009887695
    6. '.pop' → logprob: -12.876482009887695
    7. '[' → logprob: -13.251482009887695
    8. ')

' → logprob: -13.876482009887695
    9. '   ' → logprob: -13.876482009887695
    10. ');' → logprob: -14.001482009887695

Token 253: ' E' (ID: 457)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.12255465984344482
    2. 'E' → logprob: -2.6225547790527344
    3. ' ED' → logprob: -3.8725547790527344
    4. 'DEP' → logprob: -4.497554779052734
    5. ' E' → logprob: -5.122554779052734
    6. 'USED' → logprob: -5.747554779052734
    7. ' DEP' → logprob: -6.997554779052734
    8. ' USED' → logprob: -8.372554779052734
    9. 'N' → logprob: -8.497554779052734
    10. ' ' → logprob: -10.122554779052734

Token 254: 'UL' (ID: 1949)
  Prédit: 'ER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.05692233145236969
    2. 'UL' → logprob: -2.931922435760498
    3. 'LER' → logprob: -6.431922435760498
    4. 'L' → logprob: -8.18192195892334
    5. '```' → logprob: -10.05692195892334
    6. 'uler' → logprob: -10.80692195892334
    7. 'VER' → logprob: -11.05692195892334
    8. 'R' → logprob: -11.68192195892334
    9. 'UR' → logprob: -11.80692195892334
    10. '
' → logprob: -11.80692195892334

Token 255: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -4.961759259458631e-06
    2. 'R' → logprob: -13.250004768371582
    3. 'E' → logprob: -13.500004768371582
    4. '
' → logprob: -14.250004768371582
    5. '_ER' → logprob: -15.125004768371582
    6. '```' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.1250057220459
    8. ')' → logprob: -16.2500057220459
    9. 'ЕР' → logprob: -16.2500057220459
    10. '_' → logprob: -17.3750057220459

Token 256: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006354739889502525
    2. ')
' → logprob: -7.625635623931885
    3. ',' → logprob: -9.000635147094727
    4. ' )' → logprob: -11.250635147094727
    5. ')

' → logprob: -12.375635147094727
    6. '<|end|>' → logprob: -12.750635147094727
    7. '   ' → logprob: -13.500635147094727
    8. '
' → logprob: -14.000635147094727
    9. ' ' → logprob: -14.875635147094727
    10. ',)' → logprob: -15.500635147094727

Token 257: ' DEP' (ID: 116549)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.29545858502388
    2. 'DEP' → logprob: -1.5454585552215576
    3. 'USED' → logprob: -3.2954585552215576
    4. ' ED' → logprob: -5.795458793640137
    5. ' DEP' → logprob: -6.420458793640137
    6. ' USED' → logprob: -7.545458793640137
    7. 'N' → logprob: -9.170458793640137
    8. 'used' → logprob: -9.920458793640137
    9. 'DE' → logprob: -10.420458793640137
    10. 'USE' → logprob: -10.545458793640137

Token 258: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -15.000000953674316
    3. ' TH' → logprob: -15.375000953674316
    4. 'HT' → logprob: -15.375000953674316
    5. 'PH' → logprob: -15.875000953674316
    6. 'P' → logprob: -16.000001907348633
    7. 'ETH' → logprob: -16.125001907348633
    8. 'T' → logprob: -16.375001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '```' → logprob: -16.750001907348633

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017355133313685656
    2. ')' → logprob: -6.376735687255859
    3. ' ,' → logprob: -10.75173568725586
    4. ',)' → logprob: -12.37673568725586
    5. ' )' → logprob: -12.75173568725586
    6. ',
' → logprob: -12.75173568725586
    7. '<|end|>' → logprob: -14.37673568725586
    8. ',U' → logprob: -14.50173568725586
    9. '[' → logprob: -16.12673568725586
    10. '   ' → logprob: -16.37673568725586

Token 260: ' ED' (ID: 36313)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.095246322453022
    2. ' USED' → logprob: -2.4702463150024414
    3. 'ED' → logprob: -5.095246315002441
    4. '_USED' → logprob: -9.720246315002441
    5. ' ED' → logprob: -10.220246315002441
    6. 'US' → logprob: -11.345246315002441
    7. 'used' → logprob: -11.470246315002441
    8. '
' → logprob: -11.470246315002441
    9. 'USE' → logprob: -11.845246315002441
    10. 'Used' → logprob: -11.970246315002441

Token 261: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00038574778591282666
    2. 'EL' → logprob: -7.875385761260986
    3. '```' → logprob: -13.750385284423828
    4. 'EG' → logprob: -14.000385284423828
    5. ' G' → logprob: -14.000385284423828
    6. '
' → logprob: -14.375385284423828
    7. 'GL' → logprob: -15.125385284423828
    8. '   ' → logprob: -15.187885284423828
    9. '``' → logprob: -16.000385284423828
    10. 'CEL' → logprob: -16.125385284423828

Token 262: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -6.575563020305708e-05
    2. 'LIST' → logprob: -10.750065803527832
    3. '```' → logprob: -11.875065803527832
    4. '
' → logprob: -12.250065803527832
    5. 'ELE' → logprob: -12.375065803527832
    6. 'E' → logprob: -12.375065803527832
    7. 'LE' → logprob: -12.750065803527832
    8. 'ED' → logprob: -12.875065803527832
    9. '_EL' → logprob: -13.000065803527832
    10. 'ЕЛ' → logprob: -13.125065803527832

Token 263: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -2.618001053633634e-05
    2. 'ST' → logprob: -10.625025749206543
    3. 'ist' → logprob: -14.625025749206543
    4. 'I' → logprob: -14.875025749206543
    5. 'LIST' → logprob: -15.125025749206543
    6. ' IST' → logprob: -15.750025749206543
    7. '_' → logprob: -16.25002670288086
    8. '
' → logprob: -16.25002670288086
    9. 'ISTS' → logprob: -16.50002670288086
    10. 'Ist' → logprob: -16.75002670288086

Token 264: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005297077354043722
    2. ',' → logprob: -5.2552971839904785
    3. ' )' → logprob: -10.25529670715332
    4. ')
' → logprob: -10.88029670715332
    5. ',)' → logprob: -12.25529670715332
    6. '   ' → logprob: -13.00529670715332
    7. ' ' → logprob: -14.38029670715332
    8. '[' → logprob: -14.63029670715332
    9. ',
' → logprob: -15.75529670715332
    10. ')

' → logprob: -15.88029670715332

Token 265: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.160269632935524
    2. ' USED' → logprob: -1.9102696180343628
    3. '_USED' → logprob: -10.410269737243652
    4. 'US' → logprob: -12.660269737243652
    5. '
' → logprob: -12.785269737243652
    6. '   ' → logprob: -12.910269737243652
    7. 'Used' → logprob: -13.035269737243652
    8. 'USE' → logprob: -13.160269737243652
    9. ' ' → logprob: -14.160269737243652
    10. 'used' → logprob: -14.535269737243652

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021045419271104038
    2. ')
' → logprob: -8.500210762023926
    3. ' )' → logprob: -12.375210762023926
    4. '   ' → logprob: -13.875210762023926
    5. ',' → logprob: -14.500210762023926
    6. '[' → logprob: -15.000210762023926
    7. ')

' → logprob: -15.500210762023926
    8. ' ' → logprob: -16.12520980834961
    9. '
' → logprob: -16.25020980834961
    10. '),' → logprob: -16.37520980834961

Token 267: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0104783773422241
    2. '
' → logprob: -1.7604783773422241
    3. '<|end|>' → logprob: -1.7604783773422241
    4. '   ' → logprob: -1.8854783773422241
    5. '       ' → logprob: -2.1354784965515137
    6. '    ' → logprob: -4.885478496551514
    7. ' ' → logprob: -5.510478496551514
    8. ' def' → logprob: -6.260478496551514
    9. '<|end|>' → logprob: -6.260478496551514
    10. '    
' → logprob: -6.635478496551514

Token 268: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17207002639770508
    2. '   ' → logprob: -2.422070026397705
    3. '<|end|>' → logprob: -3.297070026397705
    4. '       ' → logprob: -3.922070026397705
    5. '    ' → logprob: -5.297070026397705
    6. ' def' → logprob: -6.047070026397705
    7. '
' → logprob: -6.297070026397705
    8. ' ' → logprob: -6.422070026397705
    9. '<|end|>' → logprob: -7.922070026397705
    10. '  ' → logprob: -8.672069549560547

Token 269: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.034102510660886765
    2. 'E' → logprob: -3.409102439880371
    3. ' ' → logprob: -7.784102439880371
    4. ' None' → logprob: -11.534102439880371
    5. '   ' → logprob: -12.034102439880371
    6. ' ' → logprob: -12.284102439880371
    7. '	E' → logprob: -12.284102439880371
    8. '  ' → logprob: -12.534102439880371
    9. 'None' → logprob: -12.659102439880371
    10. ' N' → logprob: -12.909102439880371

Token 270: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -4.246537173457909e-06
    2. 'U' → logprob: -13.000003814697266
    3. 'ULAR' → logprob: -14.500003814697266
    4. '[' → logprob: -14.625003814697266
    5. 'uler' → logprob: -15.250003814697266
    6. 'ULE' → logprob: -15.500003814697266
    7. '
' → logprob: -15.625003814697266
    8. ' UL' → logprob: -16.750003814697266
    9. 'ULL' → logprob: -17.000003814697266
    10. '_UL' → logprob: -17.000003814697266

Token 271: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -7.465036105713807e-06
    2. 'R' → logprob: -12.125007629394531
    3. 'E' → logprob: -13.750007629394531
    4. '
' → logprob: -14.875007629394531
    5. '_ER' → logprob: -15.375007629394531
    6. '   ' → logprob: -16.75000762939453
    7. ' ER' → logprob: -17.00000762939453
    8. '[' → logprob: -17.00000762939453
    9. '\' → logprob: -17.87500762939453
    10. '`' → logprob: -18.12500762939453

Token 272: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2059941440820694
    2. '<|end|>' → logprob: -1.8309941291809082
    3. '   ' → logprob: -4.580994129180908
    4. ' def' → logprob: -4.955994129180908
    5. '
' → logprob: -6.080994129180908
    6. '<|end|>' → logprob: -6.580994129180908
    7. ' ' → logprob: -6.955994129180908
    8. '    
' → logprob: -7.580994129180908
    9. '    ' → logprob: -7.580994129180908
    10. ':' → logprob: -7.830994129180908

Token 273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25503280758857727
    2. '   ' → logprob: -2.130032777786255
    3. '       ' → logprob: -3.380032777786255
    4. '    ' → logprob: -3.505032777786255
    5. ' ' → logprob: -4.005033016204834
    6. '<|end|>' → logprob: -4.880033016204834
    7. '        ' → logprob: -5.755033016204834
    8. ')' → logprob: -6.005033016204834
    9. ' def' → logprob: -6.005033016204834
    10. '  ' → logprob: -6.755033016204834

Token 274: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07889033854007721
    2. ' process' → logprob: -2.578890323638916
    3. 'def' → logprob: -15.703890800476074
    4. '_process' → logprob: -15.828890800476074
    5. 'proces' → logprob: -16.203889846801758
    6. '	process' → logprob: -16.328889846801758
    7. 'Process' → logprob: -17.078889846801758
    8. ' proces' → logprob: -17.203889846801758
    9. 'make' → logprob: -17.453889846801758
    10. '(process' → logprob: -18.078889846801758

Token 275: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0006532243569381535
    2. '_' → logprob: -7.375653266906738
    3. ' _' → logprob: -10.750653266906738
    4. '
' → logprob: -14.000653266906738
    5. '_a' → logprob: -14.500653266906738
    6. '```' → logprob: -14.750653266906738
    7. '##_' → logprob: -15.000653266906738
    8. '"_' → logprob: -15.125653266906738
    9. '_t' → logprob: -15.250653266906738
    10. '_
' → logprob: -15.500653266906738

Token 276: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.00023977462842594832
    2. 'ul' → logprob: -9.375239372253418
    3. 'ule' → logprob: -9.625239372253418
    4. '_' → logprob: -10.000239372253418
    5. 'u' → logprob: -10.500239372253418
    6. 'ular' → logprob: -12.875239372253418
    7. '
' → logprob: -13.125239372253418
    8. 'ulers' → logprob: -13.125239372253418
    9. 'UL' → logprob: -13.250239372253418
    10. '

' → logprob: -14.000239372253418

Token 277: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.1472419600977446e-06
    2. ' _' → logprob: -14.500000953674316
    3. '_' → logprob: -16.375001907348633
    4. '_turn' → logprob: -16.625001907348633
    5. '_to' → logprob: -16.875001907348633
    6. '_tr' → logprob: -17.250001907348633
    7. '_s' → logprob: -17.375001907348633
    8. '##_' → logprob: -17.625001907348633
    9. '_token' → logprob: -17.875001907348633
    10. '_visit' → logprob: -18.000001907348633

Token 278: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.004437120631337166
    2. 'ou' → logprob: -6.00443696975708
    3. 'o' → logprob: -6.25443696975708
    4. '
' → logprob: -11.879437446594238
    5. '_' → logprob: -11.879437446594238
    6. 'tour' → logprob: -12.504437446594238
    7. 'or' → logprob: -12.754437446594238
    8. 'Our' → logprob: -13.129437446594238
    9. 'ours' → logprob: -13.129437446594238
    10. '(' → logprob: -13.504437446594238

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.215330409351736e-05
    2. '(queue' → logprob: -10.500041961669922
    3. ' (' → logprob: -11.250041961669922
    4. '(
' → logprob: -14.000041961669922
    5. '():' → logprob: -15.625041961669922
    6. '(Q' → logprob: -16.000041961669922
    7. '(DE' → logprob: -16.500041961669922
    8. '(q' → logprob: -16.875041961669922
    9. '((' → logprob: -16.875041961669922
    10. '()' → logprob: -17.125041961669922

Token 280: 'QUE' (ID: 10304)
  Prédit: 'QUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.008025695569813251
    2. ' QUE' → logprob: -5.758025646209717
    3. 'QUEUE' → logprob: -6.133025646209717
    4. 'que' → logprob: -6.383025646209717
    5. 'QUES' → logprob: -7.383025646209717
    6. 'queue' → logprob: -8.883026123046875
    7. 'QU' → logprob: -10.133026123046875
    8. ' que' → logprob: -10.133026123046875
    9. 'Q' → logprob: -10.633026123046875
    10. 'ques' → logprob: -10.758026123046875

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019567293929867446
    2. '):' → logprob: -9.250195503234863
    3. ' ,' → logprob: -9.500195503234863
    4. '2' → logprob: -11.375195503234863
    5. ',
' → logprob: -12.125195503234863
    6. ':' → logprob: -13.375195503234863
    7. ',p' → logprob: -13.625195503234863
    8. ' ):' → logprob: -14.375195503234863
    9. ',Q' → logprob: -14.625195503234863
    10. '   ' → logprob: -14.750195503234863

Token 282: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.08906552940607071
    2. ' QUE' → logprob: -2.4640655517578125
    3. 'QUEUE' → logprob: -9.964065551757812
    4. 'QUES' → logprob: -10.339065551757812
    5. 'que' → logprob: -10.714065551757812
    6. 'QUI' → logprob: -11.714065551757812
    7. ' que' → logprob: -12.339065551757812
    8. ' ' → logprob: -12.339065551757812
    9. '
' → logprob: -13.464065551757812
    10. '```' → logprob: -14.464065551757812

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.747814349073451e-05
    2. ',' → logprob: -11.500017166137695
    3. '₂' → logprob: -13.625017166137695
    4. ')' → logprob: -13.750017166137695
    5. '_' → logprob: -14.062517166137695
    6. ' ' → logprob: -14.312517166137695
    7. '_,' → logprob: -14.375017166137695
    8. '```' → logprob: -14.437517166137695
    9. ' ,' → logprob: -14.562517166137695
    10. '[' → logprob: -14.687517166137695

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',
' → logprob: -15.875006675720215
    4. '):' → logprob: -17.5000057220459
    5. '‌,' → logprob: -17.5000057220459
    6. ',int' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.3750057220459
    8. 'def' → logprob: -18.7500057220459
    9. ',user' → logprob: -18.8750057220459
    10. ',input' → logprob: -18.8750057220459

Token 285: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6014887690544128
    2. ' E' → logprob: -1.1014888286590576
    3. ' DEP' → logprob: -2.9764888286590576
    4. 'DEP' → logprob: -3.2264888286590576
    5. 'ED' → logprob: -3.6014888286590576
    6. ' ED' → logprob: -6.8514885902404785
    7. 'QUE' → logprob: -8.101489067077637
    8. ' QUE' → logprob: -9.476489067077637
    9. ' ' → logprob: -10.101489067077637
    10. 'QUEUE' → logprob: -10.351489067077637

Token 286: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.0007813957636244595
    2. 'U' → logprob: -8.625781059265137
    3. 'L' → logprob: -9.000781059265137
    4. 'UEL' → logprob: -9.250781059265137
    5. 'ULAR' → logprob: -9.375781059265137
    6. 'uler' → logprob: -9.625781059265137
    7. 'ULE' → logprob: -10.375781059265137
    8. 'ULT' → logprob: -10.625781059265137
    9. 'UER' → logprob: -10.750781059265137
    10. '_UL' → logprob: -10.875781059265137

Token 287: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.00010676169040380046
    2. 'R' → logprob: -9.250106811523438
    3. 'ST' → logprob: -12.625106811523438
    4. '_ER' → logprob: -13.125106811523438
    5. '_R' → logprob: -14.250106811523438
    6. 'ERT' → logprob: -14.625106811523438
    7. 'TER' → logprob: -14.750106811523438
    8. '_' → logprob: -15.125106811523438
    9. 'E' → logprob: -15.125106811523438
    10. 'STER' → logprob: -15.250106811523438

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.6250057220459
    5. '‌,' → logprob: -18.0000057220459
    6. '_,' → logprob: -18.7500057220459
    7. ',\
' → logprob: -18.7500057220459
    8. 'def' → logprob: -19.2500057220459
    9. '‍,' → logprob: -19.3750057220459
    10. '
' → logprob: -20.1250057220459

Token 289: ' DEP' (ID: 116549)
  Prédit: ' DEP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DEP' → logprob: -0.5768110752105713
    2. 'DEP' → logprob: -0.8268110752105713
    3. 'ED' → logprob: -7.201810836791992
    4. ' USED' → logprob: -10.451810836791992
    5. 'USED' → logprob: -10.826810836791992
    6. ' ED' → logprob: -11.076810836791992
    7. 'QUE' → logprob: -11.076810836791992
    8. ' ' → logprob: -11.826810836791992
    9. ' QUE' → logprob: -12.326810836791992
    10. 'DE' → logprob: -12.451810836791992

Token 290: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -13.62500286102295
    3. 'P' → logprob: -14.00000286102295
    4. 'T' → logprob: -15.00000286102295
    5. '

' → logprob: -16.750001907348633
    6. 'ETH' → logprob: -17.125001907348633
    7. ' TH' → logprob: -17.250001907348633
    8. 'H' → logprob: -18.000001907348633
    9. 'EP' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.000001907348633

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -15.37500286102295
    4. '‌,' → logprob: -16.500003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '‍,' → logprob: -17.375003814697266
    7. '<|end|>' → logprob: -17.625003814697266
    8. ',\
' → logprob: -18.000003814697266
    9. ',

' → logprob: -18.750003814697266
    10. '_,' → logprob: -19.500003814697266

Token 292: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.5412079691886902
    2. ' ED' → logprob: -0.9162079691886902
    3. ' USED' → logprob: -4.666207790374756
    4. 'USED' → logprob: -4.791207790374756
    5. 'used' → logprob: -10.166208267211914
    6. 'Used' → logprob: -10.416208267211914
    7. '_ED' → logprob: -10.791208267211914
    8. ' used' → logprob: -11.166208267211914
    9. '```' → logprob: -11.291208267211914
    10. '   ' → logprob: -11.353708267211914

Token 293: 'G' (ID: 38)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5276914238929749
    2. 'TH' → logprob: -2.02769136428833
    3. 'PT' → logprob: -2.40269136428833
    4. 'L' → logprob: -2.52769136428833
    5. 'UL' → logprob: -3.27769136428833
    6. 'EP' → logprob: -4.40269136428833
    7. 'EL' → logprob: -5.02769136428833
    8. '
' → logprob: -5.15269136428833
    9. 'PER' → logprob: -5.40269136428833
    10. 'G' → logprob: -5.52769136428833

Token 294: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.0980309545993805
    2. 'ER' → logprob: -2.4730310440063477
    3. 'UEL' → logprob: -5.098031044006348
    4. 'UER' → logprob: -7.473031044006348
    5. 'L' → logprob: -8.223031044006348
    6. 'E' → logprob: -8.348031044006348
    7. 'LER' → logprob: -8.973031044006348
    8. '_EL' → logprob: -9.098031044006348
    9. 'NEL' → logprob: -9.098031044006348
    10. 'F' → logprob: -9.348031044006348

Token 295: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.18423287570476532
    2. 'ST' → logprob: -1.8092328310012817
    3. 'UR' → logprob: -6.434232711791992
    4. 'T' → logprob: -7.434232711791992
    5. 'TO' → logprob: -7.434232711791992
    6. '_' → logprob: -7.934232711791992
    7. 'st' → logprob: -8.059232711791992
    8. '_T' → logprob: -8.184232711791992
    9. 'ist' → logprob: -8.809232711791992
    10. '_t' → logprob: -9.184232711791992

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.125001907348633
    3. ',
' → logprob: -16.625001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '‌,' → logprob: -18.125001907348633
    6. ',U' → logprob: -18.750001907348633
    7. '<|end|>' → logprob: -18.750001907348633
    8. ',user' → logprob: -19.000001907348633
    9. '):' → logprob: -19.125001907348633
    10. ',\
' → logprob: -19.500001907348633

Token 297: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.5759928822517395
    2. ' USED' → logprob: -0.8259928822517395
    3. '_USED' → logprob: -9.950992584228516
    4. 'Used' → logprob: -13.575992584228516
    5. '
' → logprob: -13.700992584228516
    6. 'used' → logprob: -14.200992584228516
    7. '   ' → logprob: -14.325992584228516
    8. ' ' → logprob: -14.575992584228516
    9. ' used' → logprob: -14.575992584228516
    10. 'US' → logprob: -15.450992584228516

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004574863996822387
    2. '):
' → logprob: -7.750457286834717
    3. ')' → logprob: -11.000457763671875
    4. ',' → logprob: -11.875457763671875
    5. ' ):' → logprob: -13.750457763671875
    6. '):
' → logprob: -13.875457763671875
    7. '   ' → logprob: -14.000457763671875
    8. ':' → logprob: -16.000457763671875
    9. '():' → logprob: -16.750457763671875
    10. ')：' → logprob: -16.750457763671875

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19100023806095123
    2. ' node' → logprob: -2.31600022315979
    3. 'node' → logprob: -3.81600022315979
    4. ' v' → logprob: -3.94100022315979
    5. 'v' → logprob: -4.316000461578369
    6. ' u' → logprob: -4.816000461578369
    7. ' if' → logprob: -5.566000461578369
    8. ' x' → logprob: -6.066000461578369
    9. 'u' → logprob: -6.316000461578369
    10. 'x' → logprob: -6.441000461578369

Token 300: ' x' (ID: 1215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15555979311466217
    2. 'node' → logprob: -2.405559778213501
    3. 'cur' → logprob: -3.405559778213501
    4. 'u' → logprob: -4.90556001663208
    5. 'x' (adapté à ' x') → logprob: -5.28056001663208
    6. ' v' → logprob: -5.78056001663208
    7. ' node' → logprob: -6.40556001663208
    8. 'current' → logprob: -6.53056001663208
    9. 'curr' → logprob: -6.90556001663208
    10. 'now' → logprob: -7.90556001663208

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408327460289
    2. '=' → logprob: -0.9740833044052124
    3. ' ' → logprob: -12.349082946777344
    4. ',' → logprob: -13.974082946777344
    5. ' =
' → logprob: -15.224082946777344
    6. '=
' → logprob: -15.349082946777344
    7. '＝' → logprob: -15.724082946777344
    8. '   ' → logprob: -16.474082946777344
    9. ')' → logprob: -16.599082946777344
    10. ' ,' → logprob: -16.974082946777344

Token 302: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.002501579001545906
    2. ' QUE' → logprob: -6.002501487731934
    3. 'QUES' → logprob: -11.002501487731934
    4. 'QUEUE' → logprob: -11.627501487731934
    5. 'QU' → logprob: -15.752501487731934
    6. 'QUI' → logprob: -16.62750244140625
    7. 'que' → logprob: -16.87750244140625
    8. 'QUEST' → logprob: -17.25250244140625
    9. ' que' → logprob: -17.25250244140625
    10. '   ' → logprob: -17.62750244140625

Token 303: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0001366744691040367
    2. '.pop' → logprob: -9.000136375427246
    3. '.' → logprob: -11.250136375427246
    4. ' .' → logprob: -16.250137329101562
    5. '2' → logprob: -16.875137329101562
    6. '[' → logprob: -17.250137329101562
    7. 'p' → logprob: -17.750137329101562
    8. '   ' → logprob: -17.875137329101562
    9. '```' → logprob: -18.125137329101562
    10. '0' → logprob: -19.625137329101562

Token 304: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.861651490908116e-05
    2. '()
' → logprob: -9.875068664550781
    3. '(' → logprob: -11.000068664550781
    4. '()

' → logprob: -16.25006866455078
    5. '()
' → logprob: -16.87506866455078
    6. '())' → logprob: -16.87506866455078
    7. ')' → logprob: -17.00006866455078
    8. ' ()' → logprob: -17.25006866455078
    9. '();' → logprob: -17.62506866455078
    10. '()`' → logprob: -17.87506866455078

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07946821302175522
    2. '
' → logprob: -2.704468250274658
    3. 'E' → logprob: -5.204468250274658
    4. '    
' → logprob: -6.079468250274658
    5. ' E' → logprob: -7.829468250274658
    6. ' if' → logprob: -7.954468250274658
    7. '```' → logprob: -8.8294677734375
    8. '	E' → logprob: -8.9544677734375
    9. 'if' → logprob: -9.0794677734375
    10. ' 
' → logprob: -9.5794677734375

Token 306: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.6929173469543457
    2. 'USED' → logprob: -0.9429173469543457
    3. 'QUE' → logprob: -2.6929173469543457
    4. 'if' → logprob: -3.9429173469543457
    5. '   ' → logprob: -4.067917346954346
    6. 'for' → logprob: -6.442917346954346
    7. 'QUEUE' → logprob: -6.567917346954346
    8. ' if' → logprob: -7.317917346954346
    9. ' USED' → logprob: -7.692917346954346
    10. 'QUES' → logprob: -7.817917346954346

Token 307: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.004348940681666136
    2. 'U' → logprob: -5.5043487548828125
    3. ' U' → logprob: -9.879348754882812
    4. '[' → logprob: -10.254348754882812
    5. 'uler' → logprob: -10.254348754882812
    6. '
' → logprob: -10.629348754882812
    7. 'L' → logprob: -11.129348754882812
    8. '.append' → logprob: -11.129348754882812
    9. '```' → logprob: -11.129348754882812
    10. 'ULL' → logprob: -11.254348754882812

Token 308: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -1.9361264946837764e-07
    2. 'E' → logprob: -16.0
    3. 'R' → logprob: -18.25
    4. 'OR' → logprob: -18.375
    5. ' ER' → logprob: -18.875
    6. '
' → logprob: -19.125
    7. '_ER' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. 'AR' → logprob: -20.875
    10. ')' → logprob: -21.0

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. ' .' → logprob: -14.500007629394531
    4. '.app' → logprob: -15.375007629394531
    5. '.extend' → logprob: -15.500007629394531
    6. 'append' → logprob: -15.750007629394531
    7. '.ap' → logprob: -16.87500762939453
    8. '.push' → logprob: -19.12500762939453
    9. '_append' → logprob: -19.37500762939453
    10. ' append' → logprob: -19.75000762939453

Token 310: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.746380237629637e-05
    2. '(' → logprob: -9.250097274780273
    3. '(
' → logprob: -14.375097274780273
    4. '((' → logprob: -14.375097274780273
    5. 'x' → logprob: -16.125097274780273
    6. ' (' → logprob: -19.875097274780273
    7. '(

' → logprob: -19.875097274780273
    8. '('' → logprob: -20.625097274780273
    9. '(y' → logprob: -20.750097274780273
    10. '()' → logprob: -20.750097274780273

Token 311: 'DEP' (ID: 81990)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014180023572407663
    2. ' x' → logprob: -8.875142097473145
    3. '0' → logprob: -14.375142097473145
    4. '1' → logprob: -14.625142097473145
    5. ''x' → logprob: -15.500142097473145
    6. '   ' → logprob: -16.500141143798828
    7. 'DEP' → logprob: -16.625141143798828
    8. '-' → logprob: -16.625141143798828
    9. ')' → logprob: -16.750141143798828
    10. '(x' → logprob: -16.750141143798828

Token 312: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.9027791495318525e-05
    2. 'H' → logprob: -11.250019073486328
    3. 'HT' → logprob: -12.250019073486328
    4. 'ETH' → logprob: -14.625019073486328
    5. ' TH' → logprob: -14.875019073486328
    6. 'PH' → logprob: -16.000019073486328
    7. 'CH' → logprob: -17.375019073486328
    8. '   ' → logprob: -17.375019073486328
    9. ' H' → logprob: -17.625019073486328
    10. 'T' → logprob: -17.750019073486328

Token 313: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001442972687073052
    2. ',' → logprob: -7.376442909240723
    3. ',x' → logprob: -7.501442909240723
    4. '[' → logprob: -9.001442909240723
    5. 'x' → logprob: -9.126442909240723
    6. ' [' → logprob: -11.251442909240723
    7. ' ,' → logprob: -12.376442909240723
    8. ')' → logprob: -12.751442909240723
    9. ' x' → logprob: -13.126442909240723
    10. '[
' → logprob: -13.251442909240723

Token 314: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.17308500409126282
    2. ',' → logprob: -1.9230849742889404
    3. '[x' → logprob: -5.4230852127075195
    4. ']' → logprob: -5.5480852127075195
    5. ']))' → logprob: -6.4230852127075195
    6. ',x' → logprob: -6.6730852127075195
    7. ' ,' → logprob: -7.5480852127075195
    8. ' ],' → logprob: -8.29808521270752
    9. '],[' → logprob: -8.29808521270752
    10. '),' → logprob: -8.67308521270752

Token 315: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010275697568431497
    2. ' x' → logprob: -7.126027584075928
    3. '0' → logprob: -9.25102710723877
    4. 'USED' → logprob: -10.25102710723877
    5. '1' → logprob: -10.37602710723877
    6. '-' → logprob: -11.37602710723877
    7. ')' → logprob: -11.62602710723877
    8. '(x' → logprob: -12.00102710723877
    9. 'len' → logprob: -12.50102710723877
    10. ''x' → logprob: -12.50102710723877

Token 316: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007058234419673681
    2. ')' → logprob: -5.382058143615723
    3. '))
' → logprob: -6.257058143615723
    4. ',' → logprob: -7.632058143615723
    5. ')
' → logprob: -10.882058143615723
    6. ' ))' → logprob: -12.007058143615723
    7. '))

' → logprob: -13.632058143615723
    8. ' ' → logprob: -13.882058143615723
    9. ',
' → logprob: -13.882058143615723
    10. '   ' → logprob: -14.007058143615723

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5686314702033997
    2. ' if' → logprob: -1.4436314105987549
    3. 'if' → logprob: -1.9436314105987549
    4. 'USED' → logprob: -3.568631410598755
    5. ' for' → logprob: -4.318631649017334
    6. 'for' → logprob: -5.068631649017334
    7. ' USED' → logprob: -5.443631649017334
    8. '```' → logprob: -7.068631649017334
    9. 'QUE' → logprob: -7.693631649017334
    10. '    
' → logprob: -8.318631172180176

Token 318: ' if' (ID: 538)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.014468450099229813
    2. 'for' → logprob: -4.639468669891357
    3. 'if' (adapté à ' if') → logprob: -6.014468669891357
    4. '   ' → logprob: -6.514468669891357
    5. 'QUE' → logprob: -7.514468669891357
    6. ' USED' → logprob: -8.8894681930542
    7. '```' → logprob: -11.0144681930542
    8. 'used' → logprob: -11.1394681930542
    9. '    
' → logprob: -11.2644681930542
    10. ' for' → logprob: -11.5144681930542

Token 319: ' USED' (ID: 129384)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8013058304786682
    2. 'USED' → logprob: -1.4263057708740234
    3. 'not' → logprob: -1.5513057708740234
    4. ' USED' → logprob: -3.6763057708740234
    5. 'ED' → logprob: -4.051305770874023
    6. 'QUE' → logprob: -4.176305770874023
    7. 'x' → logprob: -4.176305770874023
    8. 'len' → logprob: -4.301305770874023
    9. ' len' → logprob: -5.676305770874023
    10. 'DEP' → logprob: -6.301305770874023

Token 320: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. 'x' → logprob: -15.125003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '[
' → logprob: -17.000003814697266
    6. '
' → logprob: -17.500003814697266
    7. '```' → logprob: -18.125003814697266
    8. ' x' → logprob: -18.500003814697266
    9. '   ' → logprob: -19.875003814697266
    10. '[u' → logprob: -20.125003814697266

Token 321: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40886494517326355
    2. ' ==' → logprob: -1.158864974975586
    3. ')' → logprob: -4.908864974975586
    4. '):' → logprob: -5.283864974975586
    5. ')==' → logprob: -5.408864974975586
    6. ']==' → logprob: -5.658864974975586
    7. ']' → logprob: -8.283864974975586
    8. '[' → logprob: -8.408864974975586
    9. '[x' → logprob: -8.658864974975586
    10. '):
' → logprob: -8.783864974975586

Token 322: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28544577956199646
    2. ' ==' → logprob: -1.4104458093643188
    3. ':' → logprob: -5.535445690155029
    4. '[' → logprob: -8.160446166992188
    5. '[x' → logprob: -11.535446166992188
    6. ']==' → logprob: -11.660446166992188
    7. '=' → logprob: -11.785446166992188
    8. ')==' → logprob: -11.910446166992188
    9. ':
' → logprob: -12.660446166992188
    10. ' ' → logprob: -12.660446166992188

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014145197346806526
    2. '1' → logprob: -6.8764142990112305
    3. ' ' → logprob: -8.00141429901123
    4. '2' → logprob: -10.00141429901123
    5. '   ' → logprob: -14.50141429901123
    6. '3' → logprob: -14.62641429901123
    7. '  ' → logprob: -16.313915252685547
    8. '4' → logprob: -16.626415252685547
    9. '    ' → logprob: -16.626415252685547
    10. '	' → logprob: -16.813915252685547

Token 324: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008057978004217148
    2. '1' → logprob: -5.133058071136475
    3. '2' → logprob: -6.633058071136475
    4. ' ' → logprob: -7.133058071136475
    5. '3' → logprob: -11.883057594299316
    6. '   ' → logprob: -13.008057594299316
    7. '4' → logprob: -14.320557594299316
    8. '  ' → logprob: -14.570557594299316
    9. 'len' → logprob: -14.695557594299316
    10. '-' → logprob: -14.820557594299316

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22785568237304688
    2. ':
' → logprob: -1.6028556823730469
    3. ':return' → logprob: -6.727855682373047
    4. '   ' → logprob: -6.852855682373047
    5. ' :
' → logprob: -9.477855682373047
    6. ' :' → logprob: -9.727855682373047
    7. ' and' → logprob: -11.102855682373047
    8. ' or' → logprob: -11.352855682373047
    9. '       ' → logprob: -11.852855682373047
    10. ':

' → logprob: -12.602855682373047

Token 326: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10323508083820343
    2. ' return' → logprob: -2.8532350063323975
    3. '       ' → logprob: -3.2282350063323975
    4. 'return' → logprob: -7.978235244750977
    5. '	return' → logprob: -8.728235244750977
    6. '   ' → logprob: -9.353235244750977
    7. ' for' → logprob: -9.478235244750977
    8. '```' → logprob: -10.478235244750977
    9. '\t' → logprob: -11.353235244750977
    10. '	   ' → logprob: -11.353235244750977

Token 327: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7286760807037354
    2. '   ' → logprob: -1.3536760807037354
    3. 'return' (adapté à ' return') → logprob: -1.6036760807037354
    4. ' QUE' → logprob: -3.6036760807037354
    5. 'QUE' → logprob: -3.6036760807037354
    6. 'QUEUE' → logprob: -7.353675842285156
    7. ' ' → logprob: -7.478675842285156
    8. 'USED' → logprob: -7.853675842285156
    9. '    ' → logprob: -8.103675842285156
    10. ' USED' → logprob: -8.228675842285156

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09409346431493759
    2. '
' → logprob: -2.9690935611724854
    3. '    
' → logprob: -3.5940935611724854
    4. ' for' → logprob: -5.469093322753906
    5. ' 
' → logprob: -6.344093322753906
    6. '	
' → logprob: -7.219093322753906
    7. '\t' → logprob: -7.344093322753906
    8. ' USED' → logprob: -7.469093322753906
    9. '  
' → logprob: -7.719093322753906
    10. 'for' → logprob: -7.969093322753906

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6339660882949829
    2. ' USED' → logprob: -0.8839660882949829
    3. 'USED' → logprob: -3.0089659690856934
    4. ' for' → logprob: -6.133965969085693
    5. ' ' → logprob: -7.133965969085693
    6. '    
' → logprob: -7.258965969085693
    7. '```' → logprob: -7.258965969085693
    8. ' used' → logprob: -7.508965969085693
    9. '  ' → logprob: -7.758965969085693
    10. '_USED' → logprob: -8.008966445922852

Token 330: ' for' (ID: 395)
  Prédit: ' USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' USED' → logprob: -0.23358449339866638
    2. 'USED' → logprob: -1.7335845232009888
    3. '   ' → logprob: -3.483584403991699
    4. ' used' → logprob: -8.1085844039917
    5. ' ' → logprob: -8.8585844039917
    6. '_USED' → logprob: -8.9835844039917
    7. '
' → logprob: -9.1085844039917
    8. ' USE' → logprob: -9.9835844039917
    9. ' for' → logprob: -9.9835844039917
    10. '  ' → logprob: -10.2335844039917

Token 331: ' to' (ID: 316)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08556702733039856
    2. 'nx' → logprob: -2.835566997528076
    3. 'to' → logprob: -4.835566997528076
    4. ' y' → logprob: -5.210566997528076
    5. 'w' → logprob: -6.460566997528076
    6. 'v' → logprob: -6.460566997528076
    7. 'k' → logprob: -6.585566997528076
    8. 'i' → logprob: -6.835566997528076
    9. 'n' → logprob: -7.210566997528076
    10. 't' → logprob: -7.335566997528076

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23657144606113434
    2. ',' → logprob: -1.6115714311599731
    3. 'in' → logprob: -4.611571311950684
    4. ' ,' → logprob: -7.236571311950684
    5. ' ' → logprob: -8.236571311950684
    6. 'n' → logprob: -10.361571311950684
    7. 's' → logprob: -10.486571311950684
    8. '  ' → logprob: -10.861571311950684
    9. '<|end|>' → logprob: -11.111571311950684
    10. '   ' → logprob: -11.361571311950684

Token 333: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.1799793541431427
    2. ' ED' → logprob: -1.8049793243408203
    3. 'sorted' → logprob: -8.92997932434082
    4. ' sorted' → logprob: -10.05497932434082
    5. 'list' → logprob: -10.55497932434082
    6. ' list' → logprob: -10.67997932434082
    7. 'ed' → logprob: -12.55497932434082
    8. '_ED' → logprob: -13.42997932434082
    9. '   ' → logprob: -13.55497932434082
    10. ' range' → logprob: -13.55497932434082

Token 334: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.008129963040119e-06
    2. 'EL' → logprob: -12.500003814697266
    3. ' G' → logprob: -16.125003814697266
    4. 'GL' → logprob: -16.750003814697266
    5. 'CEL' → logprob: -17.625003814697266
    6. '```' → logprob: -17.875003814697266
    7. '
' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.250003814697266
    9. ' GEL' → logprob: -18.250003814697266
    10. 'GES' → logprob: -18.375003814697266

Token 335: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.00012689977302215993
    2. 'LIST' → logprob: -9.375126838684082
    3. 'ED' → logprob: -11.125126838684082
    4. 'E' → logprob: -11.875126838684082
    5. 'LE' → logprob: -12.500126838684082
    6. 'L' → logprob: -12.625126838684082
    7. 'G' → logprob: -12.750126838684082
    8. '_EL' → logprob: -13.500126838684082
    9. 'ELE' → logprob: -13.875126838684082
    10. ' EL' → logprob: -14.125126838684082

Token 336: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -1.1994775377388578e-05
    2. 'ST' → logprob: -11.375012397766113
    3. 'LIST' → logprob: -15.500012397766113
    4. 'ISTS' → logprob: -16.125011444091797
    5. 'EL' → logprob: -16.750011444091797
    6. 'ist' → logprob: -17.000011444091797
    7. 'I' → logprob: -17.625011444091797
    8. 'IS' → logprob: -17.875011444091797
    9. ' IST' → logprob: -18.000011444091797
    10. '   ' → logprob: -18.125011444091797

Token 337: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.875005722045898
    3. ' [' → logprob: -12.875005722045898
    4. 'x' → logprob: -14.750005722045898
    5. '```' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.1250057220459
    7. '[
' → logprob: -17.5000057220459
    8. '[y' → logprob: -17.7500057220459
    9. '[s' → logprob: -17.8750057220459
    10. ' x' → logprob: -18.0000057220459

Token 338: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.007365609984844923
    2. ']' → logprob: -5.257365703582764
    3. ']:
' → logprob: -6.507365703582764
    4. '].' → logprob: -8.007365226745605
    5. '[x' → logprob: -9.382365226745605
    6. ' ]' → logprob: -9.382365226745605
    7. '[' → logprob: -10.132365226745605
    8. '],' → logprob: -10.507365226745605
    9. '][' → logprob: -11.132365226745605
    10. ']:

' → logprob: -11.632365226745605

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0577736422419548
    2. ' if' → logprob: -3.1827735900878906
    3. '   ' → logprob: -5.557773590087891
    4. '<|end|>' → logprob: -5.557773590087891
    5. '    ' → logprob: -5.807773590087891
    6. '        
' → logprob: -6.932773590087891
    7. ',' → logprob: -7.057773590087891
    8. ' ' → logprob: -7.557773590087891
    9. 'if' → logprob: -7.682773590087891
    10. '	if' → logprob: -8.30777359008789

Token 340: ' handle' (ID: 5318)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28246837854385376
    2. '       ' → logprob: -1.657468318939209
    3. 'if' → logprob: -2.907468318939209
    4. '   ' → logprob: -7.157468318939209
    5. '	if' → logprob: -10.282468795776367
    6. '    ' → logprob: -11.657468795776367
    7. '           ' → logprob: -11.907468795776367
    8. '	   ' → logprob: -12.282468795776367
    9. ' ' → logprob: -12.907468795776367
    10. '```' → logprob: -13.032468795776367

Token 341: '_possible' (ID: 185849)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5958414673805237
    2. 'to' → logprob: -1.470841407775879
    3. ' if' → logprob: -1.720841407775879
    4. '(to' → logprob: -3.970841407775879
    5. 'ED' → logprob: -5.220841407775879
    6. 'if' → logprob: -5.220841407775879
    7. ' (' → logprob: -5.845841407775879
    8. ' ED' → logprob: -6.845841407775879
    9. '_' → logprob: -6.970841407775879
    10. '   ' → logprob: -7.345841407775879

Token 342: '_move' (ID: 39414)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -1.109415054321289
    2. 'to' → logprob: -1.859415054321289
    3. '(to' → logprob: -2.359415054321289
    4. '_depth' → logprob: -2.484415054321289
    5. '_' → logprob: -2.609415054321289
    6. '_neighbors' → logprob: -2.984415054321289
    7. '_edge' → logprob: -3.484415054321289
    8. '_child' → logprob: -4.109415054321289
    9. ' ' → logprob: -4.234415054321289
    10. '_edges' → logprob: -4.359415054321289

Token 343: '(x' (ID: 4061)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.664484441280365
    2. '(' → logprob: -0.789484441280365
    3. 'to' → logprob: -4.53948450088501
    4. ' (' → logprob: -4.66448450088501
    5. '   ' → logprob: -5.41448450088501
    6. ' if' → logprob: -6.53948450088501
    7. '_to' → logprob: -6.53948450088501
    8. '(if' → logprob: -7.16448450088501
    9. '_' → logprob: -7.28948450088501
    10. ' to' → logprob: -7.91448450088501

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018554616253823042
    2. ' ,' → logprob: -7.001855373382568
    3. ',to' → logprob: -7.001855373382568
    4. 'to' → logprob: -10.501855850219727
    5. '   ' → logprob: -13.001855850219727
    6. ',
' → logprob: -13.126855850219727
    7. '[to' → logprob: -15.001855850219727
    8. '(to' → logprob: -15.376855850219727
    9. ')' → logprob: -15.626855850219727
    10. '       ' → logprob: -15.876855850219727

Token 345: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.004637673031538725
    2. ' to' → logprob: -5.379637718200684
    3. 'ED' → logprob: -11.629637718200684
    4. '
' → logprob: -13.379637718200684
    5. '<|end|>' → logprob: -13.504637718200684
    6. '	to' → logprob: -13.629637718200684
    7. ')' → logprob: -13.754637718200684
    8. 'toq' → logprob: -14.254637718200684
    9. '(to' → logprob: -14.504637718200684
    10. '[to' → logprob: -14.629637718200684

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03985844925045967
    2. ')' → logprob: -3.289858341217041
    3. ' ,' → logprob: -6.539858341217041
    4. '<|end|>' → logprob: -8.9148588180542
    5. ' )' → logprob: -9.0398588180542
    6. '   ' → logprob: -10.0398588180542
    7. ')
' → logprob: -10.7898588180542
    8. '):
' → logprob: -11.4148588180542
    9. '):' → logprob: -11.5398588180542
    10. '    ' → logprob: -12.2898588180542

Token 347: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.28358155488967896
    2. 'ED' → logprob: -1.7835814952850342
    3. ' DEP' → logprob: -2.658581495285034
    4. ' ED' → logprob: -5.033581733703613
    5. 'QUE' → logprob: -7.283581733703613
    6. '   ' → logprob: -8.158581733703613
    7. ' ' → logprob: -8.283581733703613
    8. 'DE' → logprob: -8.908581733703613
    9. 'USED' → logprob: -9.033581733703613
    10. 'QUEUE' → logprob: -9.033581733703613

Token 348: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -1.580929347255733e-05
    2. 'H' → logprob: -11.125016212463379
    3. 'HT' → logprob: -14.250016212463379
    4. 'ETH' → logprob: -15.750016212463379
    5. ' TH' → logprob: -16.750015258789062
    6. '
' → logprob: -16.875015258789062
    7. '```' → logprob: -17.250015258789062
    8. 'PH' → logprob: -17.875015258789062
    9. 'th' → logprob: -18.250015258789062
    10. 'T' → logprob: -18.375015258789062

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002089592395350337
    2. ')' → logprob: -6.502089500427246
    3. ' ,' → logprob: -7.502089500427246
    4. '   ' → logprob: -11.752089500427246
    5. ' )' → logprob: -11.752089500427246
    6. '<|end|>' → logprob: -11.877089500427246
    7. ',
' → logprob: -12.377089500427246
    8. '[' → logprob: -12.752089500427246
    9. ',)' → logprob: -13.502089500427246
    10. ')
' → logprob: -14.752089500427246

Token 350: ' USED' (ID: 129384)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.08079276233911514
    2. 'USED' → logprob: -2.7057926654815674
    3. ' ED' → logprob: -4.8307929039001465
    4. ' USED' → logprob: -6.4557929039001465
    5. 'QUE' → logprob: -7.5807929039001465
    6. 'EDGE' → logprob: -8.205792427062988
    7. 'QUEUE' → logprob: -9.580792427062988
    8. 'used' → logprob: -9.705792427062988
    9. '   ' → logprob: -10.080792427062988
    10. 'USE' → logprob: -10.205792427062988

Token 351: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14369240403175354
    2. ',' → logprob: -2.0186924934387207
    3. ' )' → logprob: -8.018692016601562
    4. ')
' → logprob: -8.268692016601562
    5. '       ' → logprob: -8.518692016601562
    6. '<|end|>' → logprob: -9.393692016601562
    7. '   ' → logprob: -9.518692016601562
    8. ' ,' → logprob: -10.268692016601562
    9. ');' → logprob: -12.518692016601562
    10. '        ' → logprob: -12.768692016601562

Token 352: ' QUE' (ID: 26977)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.2647389769554138
    2. ' ED' → logprob: -1.8897390365600586
    3. 'QUE' → logprob: -2.8897390365600586
    4. ' QUE' → logprob: -4.014739036560059
    5. 'E' → logprob: -5.639739036560059
    6. ' E' → logprob: -5.889739036560059
    7. 'QUEUE' → logprob: -7.014739036560059
    8. 'que' → logprob: -9.264739036560059
    9. '   ' → logprob: -9.764739036560059
    10. ' que' → logprob: -9.889739036560059

Token 353: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3177562654018402
    2. ',' → logprob: -1.3177562952041626
    3. '2' → logprob: -5.567756175994873
    4. ')
' → logprob: -7.567756175994873
    5. ' )' → logprob: -9.817756652832031
    6. ' ,' → logprob: -10.317756652832031
    7. '   ' → logprob: -10.567756652832031
    8. ')

' → logprob: -11.942756652832031
    9. ',)' → logprob: -11.942756652832031
    10. ',
' → logprob: -12.942756652832031

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002449734602123499
    2. ',' → logprob: -6.1274495124816895
    3. '   ' → logprob: -9.127449989318848
    4. ')
' → logprob: -9.752449989318848
    5. ' )' → logprob: -10.002449989318848
    6. '<|end|>' → logprob: -10.377449989318848
    7. '       ' → logprob: -11.627449989318848
    8. ')

' → logprob: -13.127449989318848
    9. '<|end|>' → logprob: -13.752449989318848
    10. '    ' → logprob: -13.752449989318848

Token 355: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.269426554441452
    2. '   ' → logprob: -2.2694265842437744
    3. '    ' → logprob: -3.2694265842437744
    4. '           ' → logprob: -3.2694265842437744
    5. '        ' → logprob: -4.144426345825195
    6. ' if' → logprob: -4.519426345825195
    7. '<|end|>' → logprob: -4.769426345825195
    8. '	   ' → logprob: -5.269426345825195
    9. ' ' → logprob: -5.769426345825195
    10. '	if' → logprob: -5.894426345825195

Token 356: ' extend' (ID: 20239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4309796690940857
    2. '       ' → logprob: -1.6809797286987305
    3. '    ' → logprob: -2.8059797286987305
    4. ' if' → logprob: -2.9309797286987305
    5. 'if' → logprob: -4.5559797286987305
    6. '	if' → logprob: -4.6809797286987305
    7. '	   ' → logprob: -4.6809797286987305
    8. '           ' → logprob: -4.8059797286987305
    9. '        ' → logprob: -6.0559797286987305
    10. '	' → logprob: -6.3059797286987305

Token 357: '_queue' (ID: 25622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04062416031956673
    2. ' QUE' → logprob: -3.9156241416931152
    3. ' =' → logprob: -5.540624141693115
    4. 'ed' → logprob: -5.790624141693115
    5. '_' → logprob: -5.915624141693115
    6. '_queue' → logprob: -6.540624141693115
    7. '_QUEUE' → logprob: -6.915624141693115
    8. 'QUE' → logprob: -6.915624141693115
    9. '=' → logprob: -7.040624141693115
    10. 'ED' → logprob: -7.415624141693115

Token 358: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001367857912555337
    2. ' =' → logprob: -7.501368045806885
    3. '   ' → logprob: -8.376367568969727
    4. '=' → logprob: -9.251367568969727
    5. '_with' → logprob: -9.376367568969727
    6. '(
' → logprob: -9.626367568969727
    7. '(Q' → logprob: -9.876367568969727
    8. '((' → logprob: -9.876367568969727
    9. '2' → logprob: -10.001367568969727
    10. 'with' → logprob: -10.626367568969727

Token 359: 'QUE' (ID: 10304)
  Prédit: 'QUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.002522626891732216
    2. ' QUE' → logprob: -6.6275224685668945
    3. 'QUEUE' → logprob: -7.2525224685668945
    4. 'QUES' → logprob: -7.8775224685668945
    5. 'QU' → logprob: -9.752522468566895
    6. 'que' → logprob: -11.127522468566895
    7. 'x' → logprob: -12.127522468566895
    8. 'Que' → logprob: -12.252522468566895
    9. 'Q' → logprob: -12.252522468566895
    10. '(' → logprob: -12.502522468566895

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009943449404090643
    2. '2' → logprob: -8.000994682312012
    3. '   ' → logprob: -8.375994682312012
    4. ' ,' → logprob: -8.375994682312012
    5. ',
' → logprob: -9.625994682312012
    6. '=' → logprob: -10.375994682312012
    7. '(),' → logprob: -10.875994682312012
    8. '(' → logprob: -11.125994682312012
    9. ')' → logprob: -11.375994682312012
    10. '```' → logprob: -11.625994682312012

Token 361: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.056401465088129044
    2. ' QUE' → logprob: -2.931401491165161
    3. 'QUEUE' → logprob: -6.806401252746582
    4. 'QUES' → logprob: -8.306401252746582
    5. 'QU' → logprob: -10.056401252746582
    6. 'QUI' → logprob: -10.556401252746582
    7. '   ' → logprob: -10.681401252746582
    8. ' que' → logprob: -10.931401252746582
    9. ' ' → logprob: -11.306401252746582
    10. 'que' → logprob: -11.431401252746582

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.172891830326989e-05
    2. ',' → logprob: -10.000082015991211
    3. ')' → logprob: -11.750082015991211
    4. ' ' → logprob: -11.750082015991211
    5. '```' → logprob: -12.625082015991211
    6. '
' → logprob: -12.687582015991211
    7. ' ,' → logprob: -13.125082015991211
    8. '   ' → logprob: -13.312582015991211
    9. ')
' → logprob: -13.437582015991211
    10. '۲' → logprob: -13.687582015991211

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067728073336184025
    2. ')
' → logprob: -5.006772994995117
    3. '<|end|>' → logprob: -10.256772994995117
    4. ',' → logprob: -11.381772994995117
    5. ' )' → logprob: -12.506772994995117
    6. '
' → logprob: -13.506772994995117
    7. ')

' → logprob: -13.631772994995117
    8. '),' → logprob: -14.381772994995117
    9. ')
' → logprob: -14.506772994995117
    10. ' ' → logprob: -14.506772994995117

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030514823272824287
    2. 'def' → logprob: -4.030514717102051
    3. '    ' → logprob: -5.280514717102051
    4. '       ' → logprob: -5.530514717102051
    5. ' USED' → logprob: -7.030514717102051
    6. 'USED' → logprob: -7.405514717102051
    7. '    
' → logprob: -7.780514717102051
    8. '```' → logprob: -8.28051471710205
    9. '_USED' → logprob: -8.53051471710205
    10. '  ' → logprob: -8.78051471710205

Token 365: ' USED' (ID: 129384)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002783600240945816
    2. '   ' → logprob: -6.25278377532959
    3. '
' → logprob: -7.75278377532959
    4. 'USED' (adapté à ' USED') → logprob: -8.87778377532959
    5. '    
' → logprob: -9.87778377532959
    6. '  ' → logprob: -10.12778377532959
    7. ' USED' → logprob: -10.37778377532959
    8. '       ' → logprob: -10.62778377532959
    9. '

' → logprob: -11.00278377532959
    10. '    ' → logprob: -11.00278377532959

Token 366: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005556552205234766
    2. '[' → logprob: -7.500555515289307
    3. ' [' → logprob: -13.625555992126465
    4. 'x' → logprob: -14.375555992126465
    5. '=' → logprob: -15.750555992126465
    6. '[to' → logprob: -16.25055503845215
    7. '[u' → logprob: -16.50055503845215
    8. '<|end|>' → logprob: -16.62555503845215
    9. '```' → logprob: -16.62555503845215
    10. '[
' → logprob: -16.75055503845215

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11590344458818436
    2. ']+=' → logprob: -2.865903377532959
    3. '=' → logprob: -3.115903377532959
    4. ']=' → logprob: -5.115903377532959
    5. '+=' → logprob: -6.615903377532959
    6. ')' → logprob: -7.865903377532959
    7. ' =' → logprob: -7.990903377532959
    8. ' +=' → logprob: -9.865903854370117
    9. ' ]' → logprob: -10.490903854370117
    10. '[' → logprob: -11.490903854370117

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889628410339355
    2. ' =' → logprob: -2.5788962841033936
    3. '+=' → logprob: -12.453896522521973
    4. ' +=' → logprob: -13.078896522521973
    5. '[' → logprob: -14.828896522521973
    6. ' |=' → logprob: -15.453896522521973
    7. ' ' → logprob: -17.578895568847656
    8. '.=' → logprob: -17.703895568847656
    9. '=True' → logprob: -18.078895568847656
    10. '＝' → logprob: -18.578895568847656

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001340123824775219
    2. ' ' → logprob: -6.626339912414551
    3. '   ' → logprob: -11.50133991241455
    4. '2' → logprob: -12.50133991241455
    5. '  ' → logprob: -15.25133991241455
    6. '    ' → logprob: -15.87633991241455
    7. ' True' → logprob: -19.063840866088867
    8. '	' → logprob: -19.126340866088867
    9. 'True' → logprob: -19.188840866088867
    10. '(' → logprob: -19.251340866088867

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -14.750021934509277
    4. '   ' → logprob: -16.125022888183594
    5. '  ' → logprob: -17.125022888183594
    6. '0' → logprob: -17.625022888183594
    7. '    ' → logprob: -19.125022888183594
    8. '(' → logprob: -19.187522888183594
    9. '+' → logprob: -19.312522888183594
    10. '-' → logprob: -19.562522888183594

Token 371: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.779951274394989
    2. '    ' → logprob: -1.2799513339996338
    3. 'def' → logprob: -1.7799513339996338
    4. ' ' → logprob: -3.404951333999634
    5. '    
' → logprob: -3.654951333999634
    6. '<|end|>' → logprob: -4.529951095581055
    7. ' 
' → logprob: -5.154951095581055
    8. '  ' → logprob: -5.279951095581055
    9. ' def' → logprob: -5.529951095581055
    10. '	' → logprob: -6.529951095581055

Token 372: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3680093288421631
    2. '    ' → logprob: -2.493009328842163
    3. '    
' → logprob: -2.743009328842163
    4. '       ' → logprob: -2.868009328842163
    5. 'def' → logprob: -3.743009328842163
    6. ' 
' → logprob: -4.243009567260742
    7. '<|end|>' → logprob: -4.243009567260742
    8. ' ' → logprob: -4.368009567260742
    9. '
' → logprob: -4.743009567260742
    10. '  
' → logprob: -5.368009567260742

Token 373: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.046359337866306305
    2. ' handle' → logprob: -3.6713593006134033
    3. 'extend' → logprob: -4.046359539031982
    4. 'def' → logprob: -6.671359539031982
    5. ' extend' → logprob: -6.921359539031982
    6. 'append' → logprob: -10.671359062194824
    7. ' def' → logprob: -10.671359062194824
    8. 'add' → logprob: -10.921359062194824
    9. 'enqueue' → logprob: -11.296359062194824
    10. 'process' → logprob: -11.796359062194824

Token 374: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.500001907348633
    3. 'possible' → logprob: -14.625001907348633
    4. '_move' → logprob: -15.875001907348633
    5. 'Possible' → logprob: -17.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. '
' → logprob: -18.125001907348633
    8. ' possible' → logprob: -18.250001907348633
    9. '_p' → logprob: -18.375001907348633
    10. '(x' → logprob: -18.500001907348633

Token 375: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -1.4617256056226324e-05
    2. '_possible' → logprob: -11.750014305114746
    3. 'move' → logprob: -12.250014305114746
    4. '_moves' → logprob: -13.875014305114746
    5. '_MOVE' → logprob: -15.625014305114746
    6. '_' → logprob: -15.875014305114746
    7. 'possible' → logprob: -15.875014305114746
    8. '(move' → logprob: -16.500015258789062
    9. '(x' → logprob: -16.625015258789062
    10. 'Move' → logprob: -16.875015258789062

Token 376: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00478123826906085
    2. '(' → logprob: -5.379781246185303
    3. ' (' → logprob: -8.879780769348145
    4. '(to' → logprob: -11.629780769348145
    5. '(
' → logprob: -12.379780769348145
    6. '(from' → logprob: -13.379780769348145
    7. 'def' → logprob: -13.504780769348145
    8. '   ' → logprob: -14.504780769348145
    9. '(parent' → logprob: -14.504780769348145
    10. ' =' → logprob: -14.754780769348145

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',to' → logprob: -12.750009536743164
    4. ',
' → logprob: -16.625009536743164
    5. 'to' → logprob: -18.375009536743164
    6. '   ' → logprob: -18.750009536743164
    7. '‌,' → logprob: -19.125009536743164
    8. '_,' → logprob: -19.500009536743164
    9. ',y' → logprob: -19.875009536743164
    10. ',

' → logprob: -20.250009536743164

Token 378: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.002810105914250016
    2. ' to' → logprob: -5.877810001373291
    3. '<|end|>' → logprob: -13.50281047821045
    4. '	to' → logprob: -14.00281047821045
    5. '(to' → logprob: -14.50281047821045
    6. 'toc' → logprob: -14.75281047821045
    7. '[to' → logprob: -14.87781047821045
    8. 'x' → logprob: -14.87781047821045
    9. 'y' → logprob: -15.12781047821045
    10. '
' → logprob: -15.50281047821045

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.87501335144043
    4. ',
' → logprob: -15.62501335144043
    5. '‌,' → logprob: -17.12501335144043
    6. ' ' → logprob: -17.50001335144043
    7. '_,' → logprob: -18.00001335144043
    8. '):' → logprob: -18.37501335144043
    9. '‍,' → logprob: -18.50001335144043
    10. '```' → logprob: -18.87501335144043

Token 380: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.0619967095553875
    2. ' DEP' → logprob: -2.8119966983795166
    3. 'DE' → logprob: -10.936996459960938
    4. 'ED' → logprob: -12.186996459960938
    5. '   ' → logprob: -13.561996459960938
    6. ' ' → logprob: -13.811996459960938
    7. 'depth' → logprob: -13.936996459960938
    8. ' depth' → logprob: -14.311996459960938
    9. 'DEPEND' → logprob: -14.561996459960938
    10. 'DEF' → logprob: -15.061996459960938

Token 381: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -2.1008713702030946e-06
    2. '
' → logprob: -14.500001907348633
    3. 'ETH' → logprob: -15.000001907348633
    4. 'P' → logprob: -15.000001907348633
    5. 'T' → logprob: -15.250001907348633
    6. 'HT' → logprob: -15.500001907348633
    7. '```' → logprob: -16.000001907348633
    8. ' TH' → logprob: -16.250001907348633
    9. 'H' → logprob: -17.000001907348633
    10. 'R' → logprob: -17.125001907348633

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -15.25001335144043
    4. '   ' → logprob: -16.50001335144043
    5. ',

' → logprob: -17.50001335144043
    6. '‌,' → logprob: -18.00001335144043
    7. '<|end|>' → logprob: -18.12501335144043
    8. '```' → logprob: -18.75001335144043
    9. '‍,' → logprob: -19.12501335144043
    10. ',
' → logprob: -19.50001335144043

Token 383: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.16027459502220154
    2. ' USED' → logprob: -1.910274624824524
    3. '_USED' → logprob: -10.410274505615234
    4. 'used' → logprob: -11.660274505615234
    5. '   ' → logprob: -12.660274505615234
    6. ' used' → logprob: -12.910274505615234
    7. ' ' → logprob: -13.160274505615234
    8. 'Used' → logprob: -13.910274505615234
    9. 'QUE' → logprob: -14.410274505615234
    10. '
' → logprob: -14.910274505615234

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.875015258789062
    3. '   ' → logprob: -12.250015258789062
    4. ',
' → logprob: -12.875015258789062
    5. '):' → logprob: -14.125015258789062
    6. ',

' → logprob: -16.500015258789062
    7. '):
' → logprob: -16.625015258789062
    8. ',y' → logprob: -17.625015258789062
    9. ',int' → logprob: -17.625015258789062
    10. '‌,' → logprob: -18.000015258789062

Token 385: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.38737189769744873
    2. ' QUE' → logprob: -1.1373718976974487
    3. 'QUEUE' → logprob: -7.762372016906738
    4. 'QUES' → logprob: -10.262372016906738
    5. ' que' → logprob: -11.387372016906738
    6. 'que' → logprob: -11.887372016906738
    7. ' ' → logprob: -12.012372016906738
    8. 'QU' → logprob: -12.137372016906738
    9. '   ' → logprob: -12.887372016906738
    10. 'QUI' → logprob: -13.137372016906738

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5941604690160602e-05
    2. '
' → logprob: -12.375025749206543
    3. '):' → logprob: -12.375025749206543
    4. ',' → logprob: -12.750025749206543
    5. '```' → logprob: -12.750025749206543
    6. ' ' → logprob: -13.000025749206543
    7. ')' → logprob: -13.125025749206543
    8. '   ' → logprob: -13.375025749206543
    9. '):
' → logprob: -13.500025749206543
    10. '_' → logprob: -13.500025749206543

Token 387: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134271800518036
    2. '):
' → logprob: -1.313427209854126
    3. '):
' → logprob: -9.063426971435547
    4. ')' → logprob: -10.188426971435547
    5. '   ' → logprob: -11.813426971435547
    6. '):

' → logprob: -12.688426971435547
    7. ' ):' → logprob: -14.313426971435547
    8. ':' → logprob: -14.813426971435547
    9. ' ):
' → logprob: -15.188426971435547
    10. ',' → logprob: -16.063426971435547

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2950519323348999
    2. ' if' → logprob: -1.5450519323349
    3. 'if' → logprob: -3.1700520515441895
    4. '	if' → logprob: -8.670051574707031
    5. 'global' → logprob: -11.170051574707031
    6. '   ' → logprob: -12.045051574707031
    7. ' global' → logprob: -12.170051574707031
    8. '    ' → logprob: -12.920051574707031
    9. ' ' → logprob: -13.670051574707031
    10. '    
' → logprob: -13.920051574707031

Token 389: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0682935044169426
    2. ' if' → logprob: -2.818293571472168
    3. '   ' → logprob: -5.068293571472168
    4. '	if' → logprob: -11.693293571472168
    5. '    ' → logprob: -13.818293571472168
    6. ' ' → logprob: -13.943293571472168
    7. 'global' → logprob: -14.068293571472168
    8. '```' → logprob: -14.068293571472168
    9. '  ' → logprob: -15.193293571472168
    10. '    
' → logprob: -16.06829261779785

Token 390: ' USED' (ID: 129384)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.20883871614933014
    2. ' DEP' → logprob: -2.208838701248169
    3. 'USED' → logprob: -2.708838701248169
    4. ' USED' → logprob: -4.458838939666748
    5. 'USE' → logprob: -9.20883846282959
    6. ' ' → logprob: -9.83383846282959
    7. 'used' → logprob: -9.83383846282959
    8. '   ' → logprob: -9.83383846282959
    9. ' not' → logprob: -10.45883846282959
    10. '(' → logprob: -10.70883846282959

Token 391: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.005365021526813507
    2. '[x' → logprob: -5.755364894866943
    3. '[' → logprob: -6.130364894866943
    4. ' [' → logprob: -12.380365371704102
    5. 'to' → logprob: -13.005365371704102
    6. '[t' → logprob: -13.505365371704102
    7. ' to' → logprob: -15.505365371704102
    8. '[token' → logprob: -16.0053653717041
    9. '[from' → logprob: -16.0053653717041
    10. '[temp' → logprob: -16.0053653717041

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11679162085056305
    2. ']==' → logprob: -2.2417917251586914
    3. '[x' → logprob: -5.991791725158691
    4. ' ]' → logprob: -6.866791725158691
    5. '==' → logprob: -8.116791725158691
    6. ' ==' → logprob: -9.866791725158691
    7. '[' → logprob: -10.491791725158691
    8. '[]' → logprob: -10.991791725158691
    9. '```' → logprob: -12.241791725158691
    10. ' ' → logprob: -12.866791725158691

Token 393: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602563112974167
    2. '==' → logprob: -1.910256266593933
    3. ' ' → logprob: -11.785256385803223
    4. '==
' → logprob: -11.910256385803223
    5. '[' → logprob: -12.035256385803223
    6. '0' → logprob: -12.410256385803223
    7. ']==' → logprob: -12.785256385803223
    8. '==-' → logprob: -13.035256385803223
    9. ')==' → logprob: -14.160256385803223
    10. ')' → logprob: -14.535256385803223

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025962304789572954
    2. ' ' → logprob: -6.002596378326416
    3. '-' → logprob: -9.252595901489258
    4. ' -' → logprob: -11.252595901489258
    5. '1' → logprob: -12.252595901489258
    6. '   ' → logprob: -12.252595901489258
    7. '	' → logprob: -13.752595901489258
    8. '  ' → logprob: -14.627595901489258
    9. '    ' → logprob: -15.815095901489258
    10. '2' → logprob: -16.440095901489258

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019678890239447355
    2. ' ' → logprob: -6.251967906951904
    3. '1' → logprob: -10.376967430114746
    4. '-' → logprob: -12.876967430114746
    5. ' -' → logprob: -13.251967430114746
    6. '   ' → logprob: -13.251967430114746
    7. '  ' → logprob: -14.376967430114746
    8. '2' → logprob: -14.751967430114746
    9. '    ' → logprob: -15.314467430114746
    10. '	' → logprob: -15.689467430114746

Token 396: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00835298653692007
    2. 'and' → logprob: -5.883352756500244
    3. ':
' → logprob: -6.133352756500244
    4. '       ' → logprob: -6.258352756500244
    5. ':' → logprob: -7.008352756500244
    6. '   ' → logprob: -7.883352756500244
    7. ' :
' → logprob: -9.883353233337402
    8. '    ' → logprob: -10.133353233337402
    9. ' ' → logprob: -10.508353233337402
    10. '	and' → logprob: -10.758353233337402

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010971423238515854
    2. ' and' → logprob: -4.760971546173096
    3. ':' → logprob: -7.010971546173096
    4. ':
' → logprob: -7.135971546173096
    5. '   ' → logprob: -8.385971069335938
    6. '	   ' → logprob: -9.385971069335938
    7. '    ' → logprob: -9.760971069335938
    8. ' :
' → logprob: -9.885971069335938
    9. '	' → logprob: -10.135971069335938
    10. ' :' → logprob: -10.260971069335938

Token 398: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' (adapté à ' DEP') → logprob: -0.029788676649332047
    2. ' DEP' → logprob: -4.029788494110107
    3. '   ' → logprob: -5.154788494110107
    4. 'if' → logprob: -5.529788494110107
    5. ' if' → logprob: -7.279788494110107
    6. '       ' → logprob: -7.529788494110107
    7. '           ' → logprob: -8.029788970947266
    8. 'QUE' → logprob: -9.529788970947266
    9. ' ' → logprob: -9.654788970947266
    10. 'DE' → logprob: -10.154788970947266

Token 399: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -2.339278580620885e-06
    2. 'HT' → logprob: -13.500001907348633
    3. 'H' → logprob: -14.250001907348633
    4. ' TH' → logprob: -16.000001907348633
    5. 'T' → logprob: -17.250001907348633
    6. 'ETH' → logprob: -17.375001907348633
    7. 'th' → logprob: -17.750001907348633
    8. 'RH' → logprob: -18.125001907348633
    9. '   ' → logprob: -19.375001907348633
    10. 'PH' → logprob: -19.625001907348633

Token 400: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.7491250875755213e-05
    2. '[' → logprob: -10.875027656555176
    3. 'to' → logprob: -12.125027656555176
    4. ' [' → logprob: -13.000027656555176
    5. '   ' → logprob: -15.000027656555176
    6. '(to' → logprob: -16.12502670288086
    7. ' to' → logprob: -16.25002670288086
    8. '=' → logprob: -16.37502670288086
    9. '```' → logprob: -16.75002670288086
    10. '    
' → logprob: -17.12502670288086

Token 401: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6406958103179932
    2. '=' → logprob: -1.3906958103179932
    3. ']' → logprob: -1.5156958103179932
    4. ']=' → logprob: -5.890695571899414
    5. ' ]' → logprob: -6.515695571899414
    6. '[' → logprob: -8.515695571899414
    7. ')' → logprob: -10.390695571899414
    8. ' ' → logprob: -10.765695571899414
    9. '<|end|>' → logprob: -12.140695571899414
    10. '   ' → logprob: -12.515695571899414

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689929246902466
    2. ' =' → logprob: -1.1368992328643799
    3. '[' → logprob: -10.5118989944458
    4. ' ' → logprob: -15.6368989944458
    5. '[:]' → logprob: -15.6368989944458
    6. ')' → logprob: -15.8868989944458
    7. '.=' → logprob: -16.261899948120117
    8. '=
' → logprob: -16.386899948120117
    9. '<|end|>' → logprob: -16.761899948120117
    10. '＝' → logprob: -17.136899948120117

Token 403: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.10022822767496109
    2. ' DEP' → logprob: -2.3502283096313477
    3. '   ' → logprob: -10.975228309631348
    4. 'DE' → logprob: -13.600228309631348
    5. 'DEPEND' → logprob: -14.350228309631348
    6. 'DP' → logprob: -14.475228309631348
    7. '    ' → logprob: -14.600228309631348
    8. '	' → logprob: -15.100228309631348
    9. ' ' → logprob: -15.100228309631348
    10. '0' → logprob: -15.600228309631348

Token 404: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -3.054500666621607e-06
    2. 'H' → logprob: -13.12500286102295
    3. ' TH' → logprob: -14.25000286102295
    4. 'HT' → logprob: -15.12500286102295
    5. '
' → logprob: -17.625003814697266
    6. 'T' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.750003814697266
    8. ' H' → logprob: -19.125003814697266
    9. 'th' → logprob: -20.500003814697266
    10. ' ' → logprob: -20.875003814697266

Token 405: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0003500050224829465
    2. 'x' → logprob: -8.000349998474121
    3. '[' → logprob: -11.500349998474121
    4. '[to' → logprob: -13.375349998474121
    5. ' x' → logprob: -13.750349998474121
    6. '```' → logprob: -14.125349998474121
    7. '	x' → logprob: -14.250349998474121
    8. '   ' → logprob: -16.000350952148438
    9. ' [' → logprob: -16.000350952148438
    10. '[
' → logprob: -16.500350952148438

Token 406: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018151935189962387
    2. ']+' → logprob: -4.018151760101318
    3. ' ]' → logprob: -13.268152236938477
    4. '[' → logprob: -15.768152236938477
    5. ']
' → logprob: -17.268152236938477
    6. ']+=' → logprob: -17.643152236938477
    7. '']' → logprob: -18.768152236938477
    8. '	' → logprob: -19.018152236938477
    9. '   ' → logprob: -19.018152236938477
    10. '][' → logprob: -19.643152236938477

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.250015258789062
    4. '
' → logprob: -18.375015258789062
    5. ',' → logprob: -19.437515258789062
    6. '```' → logprob: -19.625015258789062
    7. '2' → logprob: -19.750015258789062
    8. '[' → logprob: -19.937515258789062
    9. 'int' → logprob: -20.000015258789062
    10. '  ' → logprob: -20.000015258789062

Token 408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.555654105497524e-05
    2. '	' → logprob: -10.37509536743164
    3. '   ' → logprob: -10.50009536743164
    4. '
' → logprob: -11.25009536743164
    5. ',' → logprob: -11.75009536743164
    6. 'QUE' → logprob: -11.75009536743164
    7. '           ' → logprob: -13.12509536743164
    8. 'QUEUE' → logprob: -13.75009536743164
    9. ' QUE' → logprob: -13.87509536743164
    10. '	   ' → logprob: -14.37509536743164

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005531138274818659
    2. 'QUE' → logprob: -5.255531311035156
    3. 'QUEUE' → logprob: -9.005531311035156
    4. ' QUE' → logprob: -9.130531311035156
    5. '   ' → logprob: -10.255531311035156
    6. '           ' → logprob: -12.005531311035156
    7. 'QUES' → logprob: -12.130531311035156
    8. ',' → logprob: -12.255531311035156
    9. '	' → logprob: -12.630531311035156
    10. '        
' → logprob: -13.505531311035156

Token 410: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' (adapté à ' QUE') → logprob: -0.00017946491425391287
    2. 'QUEUE' → logprob: -8.750179290771484
    3. ' QUE' → logprob: -11.375179290771484
    4. 'QUES' → logprob: -11.750179290771484
    5. 'que' → logprob: -14.750179290771484
    6. 'QU' → logprob: -14.750179290771484
    7. '   ' → logprob: -15.000179290771484
    8. 'QUEST' → logprob: -15.750179290771484
    9. 'Que' → logprob: -16.125179290771484
    10. 'QUI' → logprob: -16.625179290771484

Token 411: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1160349458805285e-05
    2. '.append' → logprob: -12.125011444091797
    3. '```' → logprob: -12.375011444091797
    4. '   ' → logprob: -14.750011444091797
    5. '.' → logprob: -15.000011444091797
    6. '۲' → logprob: -15.812511444091797
    7. '
' → logprob: -16.000011444091797
    8. ' ' → logprob: -16.250011444091797
    9. '₂' → logprob: -16.625011444091797
    10. '２' → logprob: -16.875011444091797

Token 412: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.215330409351736e-05
    2. '.' → logprob: -10.500041961669922
    3. '.app' → logprob: -11.375041961669922
    4. '.ap' → logprob: -13.750041961669922
    5. 'append' → logprob: -14.125041961669922
    6. '.extend' → logprob: -14.875041961669922
    7. '.add' → logprob: -14.875041961669922
    8. '.push' → logprob: -16.125041961669922
    9. ' .' → logprob: -16.250041961669922
    10. '.Append' → logprob: -16.375041961669922

Token 413: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -4.008129963040119e-06
    2. 'left' → logprob: -13.250003814697266
    3. '(' → logprob: -13.375003814697266
    4. 'to' → logprob: -14.375003814697266
    5. '(
' → logprob: -18.250003814697266
    6. '[to' → logprob: -18.250003814697266
    7. '(left' → logprob: -18.375003814697266
    8. ' (' → logprob: -18.750003814697266
    9. ',to' → logprob: -19.000003814697266
    10. '(To' → logprob: -19.375003814697266

Token 414: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007480407948605716
    2. '<|end|>' → logprob: -8.125747680664062
    3. ' )' → logprob: -8.500747680664062
    4. ')
' → logprob: -8.500747680664062
    5. '
' → logprob: -10.125747680664062
    6. '   ' → logprob: -13.625747680664062
    7. ' ' → logprob: -14.000747680664062
    8. '```' → logprob: -14.500747680664062
    9. ')return' → logprob: -14.625747680664062
    10. ')#' → logprob: -14.875747680664062

Token 415: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44215127825737
    2. '<|end|>' → logprob: -1.0671513080596924
    3. '
' → logprob: -4.817151069641113
    4. ' ' → logprob: -6.442151069641113
    5. '<|end|>' → logprob: -6.567151069641113
    6. ')' → logprob: -7.567151069641113
    7. ' 
' → logprob: -7.817151069641113
    8. '  
' → logprob: -8.192151069641113
    9. ' def' → logprob: -8.442151069641113
    10. '    
' → logprob: -8.942151069641113

Token 416: ' extend' (ID: 20239)
  Prédit: ' extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extend' → logprob: -0.6007685661315918
    2. 'extend' → logprob: -1.1007685661315918
    3. ' process' → logprob: -2.600768566131592
    4. 'process' → logprob: -3.975768566131592
    5. 'def' → logprob: -4.600768566131592
    6. ' def' → logprob: -4.850768566131592
    7. ' make' → logprob: -6.225768566131592
    8. ' main' → logprob: -6.350768566131592
    9. 'make' → logprob: -6.725768566131592
    10. 'main' → logprob: -7.538268566131592

Token 417: '_queue' (ID: 25622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01545443944633007
    2. '_' → logprob: -4.265454292297363
    3. '_QUEUE' → logprob: -7.265454292297363
    4. '_queue' → logprob: -8.390454292297363
    5. ' (' → logprob: -9.390454292297363
    6. '(_' → logprob: -9.515454292297363
    7. '(queue' → logprob: -9.640454292297363
    8. '(
' → logprob: -10.765454292297363
    9. 'QUEUE' → logprob: -10.765454292297363
    10. '_(' → logprob: -11.015454292297363

Token 418: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.849109119386412e-06
    2. ' (' → logprob: -12.250009536743164
    3. '((' → logprob: -13.125009536743164
    4. '(Q' → logprob: -13.375009536743164
    5. '(
' → logprob: -14.625009536743164
    6. '(queue' → logprob: -14.750009536743164
    7. '(KEY' → logprob: -16.375009536743164
    8. '(lambda' → logprob: -16.875009536743164
    9. '(len' → logprob: -16.875009536743164
    10. '=(' → logprob: -17.125009536743164

Token 419: 'QUE' (ID: 10304)
  Prédit: 'QUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.0092075876891613
    2. 'QUEUE' → logprob: -5.259207725524902
    3. ' QUE' → logprob: -6.384207725524902
    4. 'QUES' → logprob: -6.509207725524902
    5. '(' → logprob: -7.634207725524902
    6. 'que' → logprob: -9.259207725524902
    7. 'QUEST' → logprob: -9.884207725524902
    8. 'Que' → logprob: -10.259207725524902
    9. ')' → logprob: -10.509207725524902
    10. 'QUI' → logprob: -10.509207725524902

Token 420: ',' (ID: 11)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.25248128175735474
    2. ',' → logprob: -1.50248122215271
    3. ' ,' → logprob: -8.627481460571289
    4. '   ' → logprob: -8.627481460571289
    5. '.' → logprob: -9.627481460571289
    6. ' +=' → logprob: -10.127481460571289
    7. '+=' → logprob: -10.627481460571289
    8. '.append' → logprob: -10.627481460571289
    9. 'extend' → logprob: -11.252481460571289
    10. ' .' → logprob: -12.252481460571289

Token 421: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' → logprob: -0.016110029071569443
    2. ' QUE' → logprob: -4.141109943389893
    3. 'QUEUE' → logprob: -10.26611042022705
    4. 'QUES' → logprob: -10.51611042022705
    5. 'que' → logprob: -12.39111042022705
    6. 'QU' → logprob: -12.76611042022705
    7. 'QUI' → logprob: -13.01611042022705
    8. ' que' → logprob: -13.01611042022705
    9. 'Que' → logprob: -14.64111042022705
    10. 'Q' → logprob: -14.89111042022705

Token 422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '```' → logprob: -14.750004768371582
    5. ',' → logprob: -15.187504768371582
    6. '_' → logprob: -15.437504768371582
    7. '   ' → logprob: -15.750004768371582
    8. 'QUE' → logprob: -15.937504768371582
    9. '[' → logprob: -16.0625057220459
    10. '
' → logprob: -16.4375057220459

Token 423: '):
' (ID: 1883)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.011465576477348804
    2. '):' → logprob: -4.886465549468994
    3. ',' → logprob: -6.011465549468994
    4. '):
' → logprob: -6.886465549468994
    5. ')' → logprob: -8.136466026306152
    6. ':' → logprob: -10.886466026306152
    7. ').' → logprob: -10.886466026306152
    8. '.append' → logprob: -11.386466026306152
    9. '   ' → logprob: -11.636466026306152
    10. 'extend' → logprob: -11.886466026306152

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14235468208789825
    2. 'while' → logprob: -2.767354726791382
    3. ' while' → logprob: -3.017354726791382
    4. 'if' → logprob: -4.767354488372803
    5. ' if' → logprob: -5.017354488372803
    6. 'QUE' → logprob: -6.392354488372803
    7. 'for' → logprob: -7.142354488372803
    8. '    
' → logprob: -7.142354488372803
    9. ' QUE' → logprob: -7.517354488372803
    10. ' for' → logprob: -7.517354488372803

Token 425: ' QUE' (ID: 26977)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.409659743309021
    2. 'while' → logprob: -1.159659743309021
    3. 'QUE' (adapté à ' QUE') → logprob: -4.2846598625183105
    4. '   ' → logprob: -5.2846598625183105
    5. ' if' → logprob: -6.6596598625183105
    6. ' while' → logprob: -6.9096598625183105
    7. 'for' → logprob: -6.9096598625183105
    8. ' QUE' → logprob: -9.659659385681152
    9. 'QUEUE' → logprob: -9.909659385681152
    10. '
' → logprob: -10.284659385681152

Token 426: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.002820920431986451
    2. '+=' → logprob: -6.62782096862793
    3. '.' → logprob: -7.50282096862793
    4. '.append' → logprob: -7.50282096862793
    5. '=' → logprob: -8.25282096862793
    6. ' +=' → logprob: -9.25282096862793
    7. '.=' → logprob: -11.00282096862793
    8. ',' → logprob: -11.25282096862793
    9. ' =' → logprob: -12.87782096862793
    10. '.clear' → logprob: -13.50282096862793

Token 427: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023607931507285684
    2. 'left' → logprob: -8.625236511230469
    3. '(list' → logprob: -10.500236511230469
    4. '(re' → logprob: -10.750236511230469
    5. '((' → logprob: -12.375236511230469
    6. '(
' → logprob: -13.000236511230469
    7. '([' → logprob: -15.125236511230469
    8. '(Q' → logprob: -15.375236511230469
    9. '(left' → logprob: -16.37523651123047
    10. 'list' → logprob: -16.75023651123047

Token 428: 'QUE' (ID: 10304)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022602694109082222
    2. '(re' → logprob: -4.147602558135986
    3. 'left' → logprob: -5.272602558135986
    4. 're' → logprob: -7.022602558135986
    5. 'QUE' → logprob: -8.772603034973145
    6. '(list' → logprob: -9.272603034973145
    7. '([' → logprob: -9.897603034973145
    8. 'list' → logprob: -10.022603034973145
    9. '(
' → logprob: -10.272603034973145
    10. ')' → logprob: -10.272603034973145

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.75
    3. ')' → logprob: -17.25
    4. '```' → logprob: -17.3125
    5. '   ' → logprob: -17.5625
    6. ')
' → logprob: -17.625
    7. '۲' → logprob: -18.0625
    8. '２' → logprob: -18.875
    9. '' → logprob: -18.875
    10. '[' → logprob: -18.9375

Token 430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00039063513395376503
    2. ')' → logprob: -8.125391006469727
    3. '.clear' → logprob: -9.375391006469727
    4. '   ' → logprob: -13.125391006469727
    5. ')
' → logprob: -13.125391006469727
    6. '[::-' → logprob: -13.250391006469727
    7. ' )
' → logprob: -13.625391006469727
    8. '())
' → logprob: -14.250391006469727
    9. ')

' → logprob: -14.750391006469727
    10. ');
' → logprob: -15.125391006469727

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046693988144397736
    2. '
' → logprob: -3.671694040298462
    3. '    
' → logprob: -5.171693801879883
    4. '<|end|>' → logprob: -5.296693801879883
    5. '	' → logprob: -6.046693801879883
    6. 'QUE' → logprob: -6.171693801879883
    7. '	
' → logprob: -6.546693801879883
    8. '\n' → logprob: -6.921693801879883
    9. '\t' → logprob: -7.046693801879883
    10. '<|end|>' → logprob: -7.921693801879883

Token 432: ' QUE' (ID: 26977)
  Prédit: 'QUE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QUE' (adapté à ' QUE') → logprob: -0.014548459090292454
    2. ' QUE' → logprob: -4.889548301696777
    3. '   ' → logprob: -5.264548301696777
    4. 'QUES' → logprob: -6.889548301696777
    5. 'QUEUE' → logprob: -8.139548301696777
    6. '
' → logprob: -8.514548301696777
    7. '[]' → logprob: -9.889548301696777
    8. '    
' → logprob: -10.014548301696777
    9. 'Que' → logprob: -10.889548301696777
    10. 'que' → logprob: -11.014548301696777

Token 433: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '.clear' → logprob: -13.125001907348633
    3. 'clear' → logprob: -17.125001907348633
    4. '₂' → logprob: -17.375001907348633
    5. '
' → logprob: -17.625001907348633
    6. ' ' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. ' .' → logprob: -18.125001907348633
    9. '۲' → logprob: -18.500001907348633
    10. '２' → logprob: -18.750001907348633

Token 434: '.clear' (ID: 13562)
  Prédit: '.clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.0017165892058983445
    2. '.' → logprob: -6.501716613769531
    3. '=' → logprob: -8.501716613769531
    4. 'clear' → logprob: -11.751716613769531
    5. ' .' → logprob: -13.001716613769531
    6. '.=' → logprob: -14.626716613769531
    7. '=.' → logprob: -15.126716613769531
    8. '.Clear' → logprob: -16.12671661376953
    9. ' clear' → logprob: -16.12671661376953
    10. ' =' → logprob: -16.75171661376953

Token 435: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003735945327207446
    2. '()
' → logprob: -5.6287360191345215
    3. '
' → logprob: -9.378735542297363
    4. '()\' → logprob: -11.128735542297363
    5. '<|end|>' → logprob: -11.253735542297363
    6. '(' → logprob: -11.378735542297363
    7. '()

' → logprob: -12.128735542297363
    8. '```' → logprob: -12.753735542297363
    9. '(
' → logprob: -13.753735542297363
    10. '\n' → logprob: -14.503735542297363

Token 436: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7368993759155273
    2. '<|end|>' → logprob: -0.8618993759155273
    3. ')' → logprob: -3.1118993759155273
    4. '#' → logprob: -3.3618993759155273
    5. '
' → logprob: -4.736899375915527
    6. '[' → logprob: -6.111899375915527
    7. ' def' → logprob: -6.111899375915527
    8. '```' → logprob: -6.361899375915527
    9. 'x' → logprob: -6.986899375915527
    10. 'd' → logprob: -7.486899375915527

Token 437: ' min' (ID: 1349)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.274466872215271
    2. ' main' → logprob: -2.0244669914245605
    3. 'build' → logprob: -3.2744669914245605
    4. 'dfs' → logprob: -4.0244669914245605
    5. 'make' → logprob: -4.7744669914245605
    6. ' build' → logprob: -4.7744669914245605
    7. 'process' → logprob: -4.8994669914245605
    8. 'segment' → logprob: -4.8994669914245605
    9. 'depth' → logprob: -5.6494669914245605
    10. 'binary' → logprob: -5.8994669914245605

Token 438: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18471583724021912
    2. '_depth' → logprob: -2.184715747833252
    3. '_query' → logprob: -4.434715747833252
    4. '_value' → logprob: -4.934715747833252
    5. '_val' → logprob: -5.684715747833252
    6. '(' → logprob: -5.684715747833252
    7. ' _' → logprob: -5.684715747833252
    8. '_max' → logprob: -5.934715747833252
    9. '_distance' → logprob: -6.059715747833252
    10. 'max' → logprob: -6.684715747833252

Token 439: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2100914716720581
    2. '_depth' → logprob: -2.9600915908813477
    3. '_query' → logprob: -3.0850915908813477
    4. '_range' → logprob: -4.085091590881348
    5. '(' → logprob: -4.710091590881348
    6. '_value' → logprob: -4.960091590881348
    7. '_segment' → logprob: -5.210091590881348
    8. ' _' → logprob: -5.460091590881348
    9. '<|end|>' → logprob: -5.585091590881348
    10. '_values' → logprob: -5.710091590881348

Token 440: '_from' (ID: 12526)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ath' → logprob: -0.12467280775308609
    2. 'art' → logprob: -3.3746728897094727
    3. 'refix' → logprob: -3.4996728897094727
    4. 'oint' → logprob: -4.124672889709473
    5. 'air' → logprob: -5.124672889709473
    6. 're' → logprob: -5.249672889709473
    7. 'ar' → logprob: -5.374672889709473
    8. 'ow' → logprob: -5.499672889709473
    9. 'osition' → logprob: -5.874672889709473
    10. 'os' → logprob: -5.999672889709473

Token 441: '_e' (ID: 4618)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.439331293106079
    2. 'Query' → logprob: -1.689331293106079
    3. '_query' → logprob: -1.939331293106079
    4. '_depth' → logprob: -3.064331293106079
    5. 'query' → logprob: -3.314331293106079
    6. '(' → logprob: -3.439331293106079
    7. 'def' → logprob: -3.439331293106079
    8. '_queries' → logprob: -3.439331293106079
    9. '(Query' → logprob: -3.689331293106079
    10. 'root' → logprob: -4.0643310546875

Token 442: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.00417444109916687
    2. 'ul' → logprob: -6.50417423248291
    3. 'ular' → logprob: -6.62917423248291
    4. '_' → logprob: -8.50417423248291
    5. 'iler' → logprob: -8.75417423248291
    6. 'r' → logprob: -9.37917423248291
    7. 'u' → logprob: -9.50417423248291
    8. 'ulers' → logprob: -9.50417423248291
    9. '```' → logprob: -9.87917423248291
    10. 'l' → logprob: -10.12917423248291

Token 443: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6419283747673035
    2. '_t' → logprob: -1.1419284343719482
    3. '(E' → logprob: -3.0169284343719482
    4. '():' → logprob: -3.8919284343719482
    5. '_list' → logprob: -4.141928195953369
    6. '_' → logprob: -4.141928195953369
    7. '()' → logprob: -4.266928195953369
    8. '(P' → logprob: -5.391928195953369
    9. 'tour' → logprob: -5.391928195953369
    10. '_p' → logprob: -5.766928195953369

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034118397161364555
    2. ' ,' → logprob: -9.125341415405273
    3. '):' → logprob: -9.125341415405273
    4. ',p' → logprob: -9.750341415405273
    5. ',P' → logprob: -10.625341415405273
    6. ',E' → logprob: -11.000341415405273
    7. ',N' → logprob: -12.875341415405273
    8. '_,' → logprob: -13.000341415405273
    9. ',
' → logprob: -13.125341415405273
    10. ',D' → logprob: -13.375341415405273

Token 445: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.08198565244674683
    2. 'ED' → logprob: -3.2069857120513916
    3. 'DEP' → logprob: -3.7069857120513916
    4. ' E' → logprob: -4.9569854736328125
    5. 'depth' → logprob: -6.3319854736328125
    6. 'P' → logprob: -7.2069854736328125
    7. 'K' → logprob: -7.7069854736328125
    8. ' DEP' → logprob: -7.7069854736328125
    9. 'L' → logprob: -7.8319854736328125
    10. 'e' → logprob: -8.144485473632812

Token 446: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.00806496012955904
    2. 'U' → logprob: -4.8830647468566895
    3. 'uler' → logprob: -9.008065223693848
    4. ' U' → logprob: -9.508065223693848
    5. '_UL' → logprob: -9.758065223693848
    6. 'ULAR' → logprob: -10.008065223693848
    7. '```' → logprob: -10.258065223693848
    8. '_' → logprob: -10.883065223693848
    9. '[' → logprob: -11.008065223693848
    10. 'ULE' → logprob: -11.133065223693848

Token 447: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.07037273794412613
    2. 'R' → logprob: -2.6953728199005127
    3. 'E' → logprob: -8.570372581481934
    4. '_R' → logprob: -9.445372581481934
    5. 'ST' → logprob: -10.570372581481934
    6. 'S' → logprob: -10.695372581481934
    7. '_' → logprob: -11.445372581481934
    8. '
' → logprob: -11.570372581481934
    9. '```' → logprob: -11.695372581481934
    10. '_ER' → logprob: -11.945372581481934

Token 448: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06304967403411865
    2. '):' → logprob: -2.813049793243408
    3. '):
' → logprob: -7.188049793243408
    4. ',p' → logprob: -9.06304931640625
    5. ' ,' → logprob: -9.18804931640625
    6. ' ):' → logprob: -10.31304931640625
    7. ')' → logprob: -10.93804931640625
    8. ',
' → logprob: -11.06304931640625
    9. ',P' → logprob: -12.18804931640625
    10. ':' → logprob: -12.31304931640625

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2236636877059937
    2. ' min' → logprob: -1.5986636877059937
    3. ' p' → logprob: -1.7236636877059937
    4. ' max' → logprob: -2.723663806915283
    5. ' dp' → logprob: -2.848663806915283
    6. ' P' → logprob: -2.973663806915283
    7. ' INF' → logprob: -3.973663806915283
    8. ' prefix' → logprob: -3.973663806915283
    9. ' seg' → logprob: -4.098663806915283
    10. 'p' → logprob: -4.723663806915283

Token 450: ' MIN' (ID: 27151)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.65897536277771
    2. 'DEP' → logprob: -2.65897536277771
    3. 'min' → logprob: -2.78397536277771
    4. ' min' → logprob: -3.03397536277771
    5. ' stack' → logprob: -3.03397536277771
    6. 'stack' → logprob: -3.03397536277771
    7. 'MIN' (adapté à ' MIN') → logprob: -3.03397536277771
    8. ' P' → logprob: -3.03397536277771
    9. 'ST' → logprob: -3.15897536277771
    10. 'E' → logprob: -3.40897536277771

Token 451: 'P' (ID: 47)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.088471919298172
    2. ',' → logprob: -3.5884718894958496
    3. '_,' → logprob: -3.9634718894958496
    4. '_VAL' → logprob: -4.21347188949585
    5. ' =' → logprob: -5.08847188949585
    6. '_=' → logprob: -5.58847188949585
    7. '=' → logprob: -5.71347188949585
    8. '_val' → logprob: -5.96347188949585
    9. '_DEPTH' → logprob: -6.46347188949585
    10. '(' → logprob: -7.08847188949585

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2788238525390625
    2. '=' → logprob: -1.9038238525390625
    3. ',' → logprob: -2.4038238525390625
    4. '   ' → logprob: -6.5288238525390625
    5. '=[' → logprob: -7.1538238525390625
    6. ' ,' → logprob: -7.9038238525390625
    7. ' =[' → logprob: -8.778823852539062
    8. ' ' → logprob: -8.903823852539062
    9. '=[]' → logprob: -8.903823852539062
    10. ',p' → logprob: -8.903823852539062

Token 453: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5223842859268188
    2. '[N' → logprob: -1.5223842859268188
    3. '[E' → logprob: -2.0223841667175293
    4. '[-' → logprob: -3.0223841667175293
    5. '[(' → logprob: -5.772384166717529
    6. '[[' → logprob: -6.647384166717529
    7. '[min' → logprob: -6.772384166717529
    8. '[int' → logprob: -7.772384166717529
    9. ' [' → logprob: -7.897384166717529
    10. '[len' → logprob: -8.022384643554688

Token 454: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3689543902873993
    2. '10' → logprob: -1.7439544200897217
    3. '0' → logprob: -2.8689544200897217
    4. '-' → logprob: -3.1189544200897217
    5. 'E' → logprob: -4.243954181671143
    6. 'N' → logprob: -5.368954181671143
    7. '1' → logprob: -5.368954181671143
    8. 'int' → logprob: -5.493954181671143
    9. '100' → logprob: -7.118954181671143
    10. 'sys' → logprob: -7.118954181671143

Token 455: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.007461450062692165
    2. ' <<' → logprob: -5.3824615478515625
    3. '0' → logprob: -7.0074615478515625
    4. 'e' → logprob: -7.5074615478515625
    5. '10' → logprob: -7.7574615478515625
    6. '<<(' → logprob: -7.8824615478515625
    7. ',' → logprob: -8.507461547851562
    8. '1' → logprob: -9.007461547851562
    9. '_' → logprob: -9.382461547851562
    10. ')<<' → logprob: -10.382461547851562

Token 456: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.592532217502594
    2. '60' → logprob: -1.4675321578979492
    3. '31' → logprob: -1.5925321578979492
    4. '20' → logprob: -4.967532157897949
    5. '61' → logprob: -5.592532157897949
    6. '40' → logprob: -7.467532157897949
    7. '18' → logprob: -7.967532157897949
    8. '29' → logprob: -7.967532157897949
    9. '17' → logprob: -8.34253215789795
    10. '50' → logprob: -8.59253215789795

Token 457: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4973066449165344
    2. ')' → logprob: -1.1223065853118896
    3. ',' → logprob: -2.8723065853118896
    4. ')-' → logprob: -4.997306823730469
    5. ',)' → logprob: -6.247306823730469
    6. ' )' → logprob: -8.122306823730469
    7. '),' → logprob: -8.497306823730469
    8. ']' → logprob: -8.872306823730469
    9. ' ,' → logprob: -9.622306823730469
    10. '-' → logprob: -9.622306823730469

Token 458: '*(' (ID: 14793)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8854676485061646
    2. ' for' → logprob: -0.8854676485061646
    3. 'for' → logprob: -2.135467529296875
    4. ',' → logprob: -3.885467529296875
    5. ']*' → logprob: -4.010467529296875
    6. ']*(' → logprob: -4.385467529296875
    7. '*' → logprob: -6.760467529296875
    8. '   ' → logprob: -6.885467529296875
    9. ' *' → logprob: -7.385467529296875
    10. '*(' → logprob: -7.760467529296875

Token 459: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000508591765537858
    2. 'len' → logprob: -8.250508308410645
    3. '(N' → logprob: -9.125508308410645
    4. '2' → logprob: -9.750508308410645
    5. ' N' → logprob: -10.375508308410645
    6. '(' → logprob: -10.750508308410645
    7. '0' → logprob: -12.375508308410645
    8. '4' → logprob: -12.625508308410645
    9. '   ' → logprob: -12.625508308410645
    10. '1' → logprob: -12.750508308410645

Token 460: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000838576874230057
    2. '+
' → logprob: -7.750838756561279
    3. '+)' → logprob: -8.125838279724121
    4. ')' → logprob: -9.250838279724121
    5. ' +' → logprob: -11.500838279724121
    6. ')+' → logprob: -13.250838279724121
    7. '1' → logprob: -14.125838279724121
    8. '+[' → logprob: -14.250838279724121
    9. '<|end|>' → logprob: -14.750838279724121
    10. '+

' → logprob: -15.250838279724121

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '0' → logprob: -14.375007629394531
    4. '```' → logprob: -14.750007629394531
    5. '   ' → logprob: -15.500007629394531
    6. '
' → logprob: -15.812507629394531
    7. '6' → logprob: -16.06250762939453
    8. ')' → logprob: -16.43750762939453
    9. '2' → logprob: -16.43750762939453
    10. '7' → logprob: -17.62500762939453

Token 462: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048599522560834885
    2. ')
' → logprob: -3.0485994815826416
    3. ')
' → logprob: -12.173599243164062
    4. ' )' → logprob: -12.923599243164062
    5. ' )
' → logprob: -13.798599243164062
    6. '<|end|>' → logprob: -14.048599243164062
    7. ')

' → logprob: -14.173599243164062
    8. '
' → logprob: -14.548599243164062
    9. ',' → logprob: -15.173599243164062
    10. '   ' → logprob: -15.423599243164062

Token 463: '   ' (ID: 271)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.09124661982059479
    2. '   ' → logprob: -2.4662466049194336
    3. ' MAX' → logprob: -6.091246604919434
    4. '_MAX' → logprob: -11.341246604919434
    5. '(MAX' → logprob: -12.341246604919434
    6. 'max' → logprob: -12.591246604919434
    7. 'and' → logprob: -12.716246604919434
    8. ' ' → logprob: -12.716246604919434
    9. 'for' → logprob: -12.841246604919434
    10. 'MIN' → logprob: -13.091246604919434

Token 464: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' (adapté à ' MAX') → logprob: -0.0008265409851446748
    2. 'MIN' → logprob: -8.375826835632324
    3. 'max' → logprob: -8.625826835632324
    4. 'for' → logprob: -9.000826835632324
    5. 'from' → logprob: -9.125826835632324
    6. 'import' → logprob: -9.125826835632324
    7. 'def' → logprob: -11.375826835632324
    8. ' MAX' → logprob: -11.750826835632324
    9. 'P' → logprob: -12.125826835632324
    10. 'stack' → logprob: -12.375826835632324

Token 465: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -8.947715832618997e-05
    2. ' =' → logprob: -10.125089645385742
    3. '=' → logprob: -10.625089645385742
    4. 'p' → logprob: -11.500089645385742
    5. '_P' → logprob: -12.875089645385742
    6. ' P' → logprob: -13.250089645385742
    7. '_' → logprob: -13.625089645385742
    8. ',' → logprob: -13.625089645385742
    9. '_p' → logprob: -13.750089645385742
    10. '=P' → logprob: -13.875089645385742

Token 466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10055752843618393
    2. '=' → logprob: -2.350557565689087
    3. '=[' → logprob: -8.100557327270508
    4. ' =[' → logprob: -10.225557327270508
    5. ' ' → logprob: -12.475557327270508
    6. '   ' → logprob: -13.100557327270508
    7. '[' → logprob: -13.725557327270508
    8. '=(' → logprob: -13.725557327270508
    9. ' =(' → logprob: -14.225557327270508
    10. '=[]' → logprob: -14.475557327270508

Token 467: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40253496170043945
    2. '[(' → logprob: -1.4025349617004395
    3. '[-' → logprob: -2.5275349617004395
    4. ' [' → logprob: -5.2775349617004395
    5. '0' → logprob: -8.902534484863281
    6. ' [(' → logprob: -9.277534484863281
    7. '[((' → logprob: -9.402534484863281
    8. '([' → logprob: -10.402534484863281
    9. '[N' → logprob: -11.152534484863281
    10. '-' → logprob: -11.152534484863281

Token 468: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14752046763896942
    2. '-(' → logprob: -2.3975205421447754
    3. '-' → logprob: -3.6475205421447754
    4. '[-' → logprob: -4.272520542144775
    5. '[' → logprob: -5.272520542144775
    6. '(-(' → logprob: -8.147520065307617
    7. '-[' → logprob: -8.147520065307617
    8. '(-' → logprob: -8.647520065307617
    9. '(' → logprob: -9.272520065307617
    10. ' ' → logprob: -9.397520065307617

Token 469: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03371451422572136
    2. '1' → logprob: -3.408714532852173
    3. ' (' → logprob: -9.783714294433594
    4. 'float' → logprob: -12.033714294433594
    5. '((' → logprob: -13.283714294433594
    6. '(float' → logprob: -13.408714294433594
    7. '
' → logprob: -14.033714294433594
    8. 'int' → logprob: -14.158714294433594
    9. '10' → logprob: -14.658714294433594
    10. '(int' → logprob: -14.783714294433594

Token 470: ')]' (ID: 15710)
  Prédit: ')<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')<<' → logprob: -0.24585093557834625
    2. '<<' → logprob: -1.745850920677185
    3. '1' → logprob: -3.2458510398864746
    4. '<<(' → logprob: -6.495851039886475
    5. '(' → logprob: -6.620851039886475
    6. ')' → logprob: -6.745851039886475
    7. ')*(' → logprob: -8.370850563049316
    8. ']<<' → logprob: -9.120850563049316
    9. ')>>' → logprob: -9.995850563049316
    10. '*(' → logprob: -10.745850563049316

Token 471: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00017016702622640878
    2. ']*(' → logprob: -8.87516975402832
    3. ')*(' → logprob: -11.12516975402832
    4. '*' → logprob: -11.75016975402832
    5. '   ' → logprob: -12.75016975402832
    6. ' *' → logprob: -13.00016975402832
    7. ' *(' → logprob: -13.87516975402832
    8. '	' → logprob: -14.25016975402832
    9. '*[' → logprob: -15.25016975402832
    10. '```' → logprob: -15.25016975402832

Token 472: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.531315314830863e-06
    2. ' N' → logprob: -13.625003814697266
    3. '(N' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.125003814697266
    5. ' ' → logprob: -16.250003814697266
    6. '1' → logprob: -16.250003814697266
    7. '0' → logprob: -17.000003814697266
    8. '
' → logprob: -17.125003814697266
    9. '	N' → logprob: -17.250003814697266
    10. '  ' → logprob: -17.750003814697266

Token 473: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. '+
' → logprob: -13.875001907348633
    3. ' +' → logprob: -14.250001907348633
    4. '1' → logprob: -16.375001907348633
    5. '```' → logprob: -17.125001907348633
    6. '
' → logprob: -17.750001907348633
    7. ')+' → logprob: -18.500001907348633
    8. '()+' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '[' → logprob: -19.625001907348633

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00902530550956726
    2. 'N' → logprob: -5.1340250968933105
    3. '+' → logprob: -6.0090250968933105
    4. '(N' → logprob: -7.7590250968933105
    5. ' ' → logprob: -9.884025573730469
    6. '   ' → logprob: -9.884025573730469
    7. '(' → logprob: -10.134025573730469
    8. ' N' → logprob: -10.884025573730469
    9. '```' → logprob: -11.259025573730469
    10. '
' → logprob: -12.009025573730469

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011038987431675196
    2. ')
' → logprob: -7.12610387802124
    3. '   ' → logprob: -8.126104354858398
    4. ' )' → logprob: -13.251104354858398
    5. 'def' → logprob: -14.376104354858398
    6. ' ' → logprob: -15.001104354858398
    7. '<|end|>' → logprob: -15.626104354858398
    8. ')return' → logprob: -15.751104354858398
    9. ')
' → logprob: -15.876104354858398
    10. '
' → logprob: -16.0011043548584

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034671444445848465
    2. ' for' → logprob: -6.503467082977295
    3. 'for' → logprob: -6.878467082977295
    4. '<|end|>' → logprob: -7.128467082977295
    5. '    
' → logprob: -10.378467559814453
    6. ')' → logprob: -10.503467559814453
    7. '
' → logprob: -10.878467559814453
    8. 'return' → logprob: -11.628467559814453
    9. ' return' → logprob: -12.128467559814453
    10. ' ' → logprob: -12.128467559814453

Token 477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005096426233649254
    2. 'stack' → logprob: -6.255096435546875
    3. ' for' → logprob: -6.755096435546875
    4. 'return' → logprob: -7.505096435546875
    5. '   ' → logprob: -7.505096435546875
    6. 'p' → logprob: -7.630096435546875
    7. 'depth' → logprob: -8.630096435546875
    8. 'pos' → logprob: -9.755096435546875
    9. 'last' → logprob: -10.880096435546875
    10. 'from' → logprob: -10.880096435546875

Token 478: ' ind' (ID: 1383)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.4140474200248718
    2. 'd' → logprob: -1.6640474796295166
    3. '_,' → logprob: -2.0390474796295166
    4. ' depth' → logprob: -5.1640472412109375
    5. 'dep' → logprob: -5.2890472412109375
    6. ' d' → logprob: -6.6640472412109375
    7. '_depth' → logprob: -6.6640472412109375
    8. '_' → logprob: -6.6640472412109375
    9. 'i' → logprob: -6.7890472412109375
    10. ' _,' → logprob: -7.0390472412109375

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11149782687425613
    2. ' ,' → logprob: -2.6114978790283203
    3. ' in' → logprob: -3.4864978790283203
    4. 'p' → logprob: -7.23649787902832
    5. 'in' → logprob: -8.11149787902832
    6. '_,' → logprob: -9.11149787902832
    7. ',(' → logprob: -9.23649787902832
    8. ',p' → logprob: -10.11149787902832
    9. 'x' → logprob: -10.11149787902832
    10. ' ' → logprob: -10.36149787902832

Token 480: ' (' (ID: 350)
  Prédit: '(_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_,' → logprob: -0.3598847985267639
    2. '(depth' → logprob: -1.6098847389221191
    3. '(' → logprob: -3.609884738922119
    4. '(_' → logprob: -3.984884738922119
    5. '(x' → logprob: -4.234884738922119
    6. ' (' → logprob: -4.609884738922119
    7. '(token' → logprob: -4.609884738922119
    8. '(t' → logprob: -5.109884738922119
    9. '(p' → logprob: -5.359884738922119
    10. ' (_,' → logprob: -6.109884738922119

Token 481: 'depth' (ID: 41022)
  Prédit: 'depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.38441434502601624
    2. 'd' → logprob: -1.3844143152236938
    3. '_,' → logprob: -2.8844144344329834
    4. 'dep' → logprob: -5.134414196014404
    5. '_depth' → logprob: -5.259414196014404
    6. '_' → logprob: -7.634414196014404
    7. ' depth' → logprob: -7.884414196014404
    8. '_d' → logprob: -8.384414672851562
    9. ' d' → logprob: -8.884414672851562
    10. 'dp' → logprob: -9.259414672851562

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006768120219931006
    2. ' ,' → logprob: -7.62567663192749
    3. '[' → logprob: -9.500677108764648
    4. '_,' → logprob: -10.125677108764648
    5. ')' → logprob: -10.875677108764648
    6. ',p' → logprob: -11.250677108764648
    7. ',)' → logprob: -12.250677108764648
    8. ',x' → logprob: -12.375677108764648
    9. ' ' → logprob: -12.625677108764648
    10. '   ' → logprob: -12.750677108764648

Token 483: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4409447908401489
    2. 'node' → logprob: -1.315944790840149
    3. 'v' → logprob: -2.6909446716308594
    4. ' node' → logprob: -4.940944671630859
    5. 'p' → logprob: -5.190944671630859
    6. ' x' → logprob: -5.315944671630859
    7. ' v' → logprob: -6.690944671630859
    8. 'u' → logprob: -7.315944671630859
    9. 'vertex' → logprob: -7.940944671630859
    10. 'pos' → logprob: -8.56594467163086

Token 484: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. 'token' → logprob: -12.625011444091797
    3. ' )' → logprob: -13.250011444091797
    4. ' in' → logprob: -13.500011444091797
    5. ')
' → logprob: -13.750011444091797
    6. ')=' → logprob: -13.750011444091797
    7. 'in' → logprob: -14.500011444091797
    8. '_token' → logprob: -14.875011444091797
    9. 'x' → logprob: -15.500011444091797
    10. 'p' → logprob: -15.875011444091797

Token 485: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14268630743026733
    2. 'in' → logprob: -2.017686367034912
    3. '	in' → logprob: -12.642685890197754
    4. '   ' → logprob: -13.142685890197754
    5. ' ' → logprob: -13.267685890197754
    6. ',' → logprob: -13.892685890197754
    7. 'p' → logprob: -14.642685890197754
    8. ')' → logprob: -15.017685890197754
    9. '  ' → logprob: -15.142685890197754
    10. 'n' → logprob: -15.267685890197754

Token 486: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4953936040401459
    2. ' enumerate' → logprob: -0.9953936338424683
    3. 'E' → logprob: -3.8703935146331787
    4. ' E' → logprob: -8.370393753051758
    5. 'range' → logprob: -12.745393753051758
    6. 'enum' → logprob: -12.870393753051758
    7. 'sorted' → logprob: -14.120393753051758
    8. 'Enumer' → logprob: -14.495393753051758
    9. ' enumer' → logprob: -15.245393753051758
    10. ' ' → logprob: -15.245393753051758

Token 487: '(E' (ID: 20882)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.014710106886923313
    2. ' E' → logprob: -4.264709949493408
    3. '(E' → logprob: -7.514709949493408
    4. '   ' → logprob: -13.764710426330566
    5. '[E' → logprob: -15.389710426330566
    6. ',E' → logprob: -15.764710426330566
    7. '	E' → logprob: -16.38970947265625
    8. '(' → logprob: -18.51470947265625
    9. ')' → logprob: -18.63970947265625
    10. '\E' → logprob: -18.76470947265625

Token 488: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.00019769940990954638
    2. 'U' → logprob: -8.875197410583496
    3. 'ULAR' → logprob: -10.750197410583496
    4. 'UR' → logprob: -11.500197410583496
    5. 'uler' → logprob: -12.000197410583496
    6. '_' → logprob: -12.000197410583496
    7. '[' → logprob: -12.375197410583496
    8. '_UL' → logprob: -13.375197410583496
    9. 'ULE' → logprob: -14.375197410583496
    10. '```' → logprob: -14.375197410583496

Token 489: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -9.849109119386412e-06
    2. 'R' → logprob: -11.875009536743164
    3. 'OR' → logprob: -13.375009536743164
    4. 'E' → logprob: -14.875009536743164
    5. ')' → logprob: -15.250009536743164
    6. '   ' → logprob: -15.875009536743164
    7. '[' → logprob: -16.250009536743164
    8. '_ER' → logprob: -16.750009536743164
    9. '
' → logprob: -17.000009536743164
    10. 'er' → logprob: -17.000009536743164

Token 490: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004671610891819
    2. '):
' → logprob: -5.379671573638916
    3. ':' → logprob: -10.004672050476074
    4. ' ):' → logprob: -12.379672050476074
    5. '):
' → logprob: -13.629672050476074
    6. '   ' → logprob: -15.004672050476074
    7. ')' → logprob: -15.254672050476074
    8. '}:' → logprob: -16.504671096801758
    9. ',' → logprob: -16.629671096801758
    10. '():' → logprob: -16.754671096801758

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12870468199253082
    2. '   ' → logprob: -2.128704786300659
    3. ' if' → logprob: -6.75370454788208
    4. 'if' → logprob: -7.87870454788208
    5. ',' → logprob: -9.503705024719238
    6. '<|end|>' → logprob: -10.253705024719238
    7. '    
' → logprob: -10.503705024719238
    8. '
' → logprob: -10.753705024719238
    9. ')' → logprob: -11.378705024719238
    10. '        
' → logprob: -11.628705024719238

Token 492: ' MIN' (ID: 27151)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16335611045360565
    2. '   ' → logprob: -2.163356065750122
    3. 'MIN' (adapté à ' MIN') → logprob: -3.538356065750122
    4. ' if' → logprob: -5.163356304168701
    5. '       ' → logprob: -7.788356304168701
    6. ' MIN' → logprob: -8.163355827331543
    7. 'MAX' → logprob: -9.663355827331543
    8. 'min' → logprob: -10.038355827331543
    9. '
' → logprob: -10.038355827331543
    10. '	if' → logprob: -10.538355827331543

Token 493: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00023524489370174706
    2. 'p' → logprob: -9.250235557556152
    3. '[' → logprob: -9.875235557556152
    4. '[P' → logprob: -10.250235557556152
    5. 'if' → logprob: -10.750235557556152
    6. '[ind' → logprob: -12.000235557556152
    7. '[p' → logprob: -12.000235557556152
    8. '[min' → logprob: -12.375235557556152
    9. 'MIN' → logprob: -12.875235557556152
    10. '   ' → logprob: -13.000235557556152

Token 494: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0006054567056708038
    2. '[min' → logprob: -7.875605583190918
    3. '[' → logprob: -8.750605583190918
    4. 'p' → logprob: -11.000605583190918
    5. ' =' → logprob: -11.000605583190918
    6. '=' → logprob: -11.375605583190918
    7. ' [' → logprob: -11.875605583190918
    8. '[
' → logprob: -12.500605583190918
    9. '[P' → logprob: -12.875605583190918
    10. '=p' → logprob: -13.000605583190918

Token 495: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3241529166698456
    2. ' =' → logprob: -1.824152946472168
    3. ']' → logprob: -2.449152946472168
    4. ']=' → logprob: -3.699152946472168
    5. '=min' → logprob: -6.199152946472168
    6. ')' → logprob: -6.324152946472168
    7. ')=' → logprob: -7.824152946472168
    8. 'min' → logprob: -9.574152946472168
    9. ' ]' → logprob: -10.199152946472168
    10. '[' → logprob: -11.324152946472168

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10308335721492767
    2. ' =' → logprob: -2.353083372116089
    3. '=min' → logprob: -5.85308313369751
    4. 'min' → logprob: -13.728083610534668
    5. ' min' → logprob: -16.10308265686035
    6. '.=' → logprob: -16.35308265686035
    7. '=max' → logprob: -16.35308265686035
    8. '=
' → logprob: -16.72808265686035
    9. '＝' → logprob: -16.85308265686035
    10. '=

' → logprob: -17.35308265686035

Token 497: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001775618875399232
    2. 'ind' → logprob: -6.751775741577148
    3. ' min' → logprob: -7.501775741577148
    4. 'depth' → logprob: -10.001775741577148
    5. '	min' → logprob: -12.376775741577148
    6. ' ind' → logprob: -13.751775741577148
    7. 'p' → logprob: -14.126775741577148
    8. '(min' → logprob: -14.876775741577148
    9. '=min' → logprob: -15.376775741577148
    10. ' depth' → logprob: -15.501775741577148

Token 498: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00024251631111837924
    2. '(' → logprob: -8.375242233276367
    3. '(min' → logprob: -12.625242233276367
    4. '(
' → logprob: -13.125242233276367
    5. '(MAX' → logprob: -13.125242233276367
    6. 'MIN' → logprob: -13.250242233276367
    7. '   ' → logprob: -13.750242233276367
    8. '((' → logprob: -14.250242233276367
    9. ' (' → logprob: -14.750242233276367
    10. '(

' → logprob: -16.250242233276367

Token 499: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.000622845720499754
    2. 'MIN' → logprob: -8.000622749328613
    3. 'NP' → logprob: -8.500622749328613
    4. 'N' → logprob: -10.500622749328613
    5. 'IP' → logprob: -11.000622749328613
    6. 'I' → logprob: -11.625622749328613
    7. 'P' → logprob: -11.750622749328613
    8. 'in' → logprob: -12.250622749328613
    9. 'inp' → logprob: -12.250622749328613
    10. '   ' → logprob: -13.125622749328613

Token 500: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002653774805366993
    2. 'MIN' → logprob: -6.3776535987854
    3. 'p' → logprob: -7.1276535987854
    4. '(min' → logprob: -10.627654075622559
    5. '(ind' → logprob: -10.627654075622559
    6. '(M' → logprob: -10.877654075622559
    7. '(P' → logprob: -11.002654075622559
    8. ')' → logprob: -11.502654075622559
    9. '   ' → logprob: -12.002654075622559
    10. 'ind' → logprob: -12.002654075622559

Token 501: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0001645644661039114
    2. 'p' → logprob: -8.875164985656738
    3. '[' → logprob: -10.875164985656738
    4. '[
' → logprob: -12.625164985656738
    5. '<p' → logprob: -14.625164985656738
    6. '[P' → logprob: -14.750164985656738
    7. ')[' → logprob: -15.125164985656738
    8. ',p' → logprob: -15.125164985656738
    9. ',' → logprob: -15.500164985656738
    10. '(p' → logprob: -15.625164985656738

Token 502: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004326741676777601
    2. ' ,' → logprob: -5.879326820373535
    3. '[ind' → logprob: -6.754326820373535
    4. 'ind' → logprob: -8.379326820373535
    5. ' ind' → logprob: -10.129326820373535
    6. '],' → logprob: -10.254326820373535
    7. ',
' → logprob: -10.754326820373535
    8. '),' → logprob: -11.754326820373535
    9. ',p' → logprob: -12.004326820373535
    10. '(ind' → logprob: -12.879326820373535

Token 503: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.00043233807082287967
    2. ' ind' → logprob: -7.75043249130249
    3. 'depth' → logprob: -13.500432014465332
    4. 'indent' → logprob: -16.37543296813965
    5. ' depth' → logprob: -16.87543296813965
    6. '[ind' → logprob: -17.37543296813965
    7. '(ind' → logprob: -17.62543296813965
    8. ')' → logprob: -18.37543296813965
    9. 'indt' → logprob: -19.12543296813965
    10. '_ind' → logprob: -19.25043296813965

Token 504: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47413015365600586
    2. ')
' → logprob: -0.9741301536560059
    3. ' )
' → logprob: -11.099130630493164
    4. '   ' → logprob: -11.349130630493164
    5. ')
' → logprob: -11.474130630493164
    6. ' )' → logprob: -11.474130630493164
    7. ')

' → logprob: -13.224130630493164
    8. '       ' → logprob: -13.349130630493164
    9. '<|end|>' → logprob: -13.724130630493164
    10. '),' → logprob: -15.849130630493164

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01518396195024252
    2. '   ' → logprob: -4.265183925628662
    3. 'MAX' → logprob: -7.640183925628662
    4. '```' → logprob: -8.01518440246582
    5. '           ' → logprob: -10.01518440246582
    6. '
' → logprob: -10.26518440246582
    7. ' MAX' → logprob: -10.39018440246582
    8. '     ' → logprob: -11.14018440246582
    9. ',' → logprob: -11.26518440246582
    10. '    ' → logprob: -11.39018440246582

Token 506: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' (adapté à ' MAX') → logprob: -7.822646693966817e-06
    2. ' MAX' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.250007629394531
    4. 'max' → logprob: -13.875007629394531
    5. 'Max' → logprob: -15.625007629394531
    6. '```' → logprob: -16.37500762939453
    7. '_MAX' → logprob: -17.25000762939453
    8. '
' → logprob: -17.87500762939453
    9. ' ' → logprob: -18.00000762939453
    10. '       ' → logprob: -18.12500762939453

Token 507: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00012999906903132796
    2. 'p' → logprob: -9.000129699707031
    3. '_p' → logprob: -12.500129699707031
    4. ' P' → logprob: -14.625129699707031
    5. '[P' → logprob: -14.625129699707031
    6. '[' → logprob: -14.875129699707031
    7. '(P' → logprob: -14.875129699707031
    8. '(p' → logprob: -15.125129699707031
    9. '[p' → logprob: -15.125129699707031
    10. '```' → logprob: -15.875129699707031

Token 508: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.3213025744771585e-05
    2. '[' → logprob: -11.125033378601074
    3. ' [' → logprob: -12.125033378601074
    4. '=' → logprob: -12.125033378601074
    5. '=p' → logprob: -13.375033378601074
    6. 'p' → logprob: -13.500033378601074
    7. '```' → logprob: -13.500033378601074
    8. '=[' → logprob: -13.750033378601074
    9. ' =' → logprob: -14.250033378601074
    10. '[P' → logprob: -14.500033378601074

Token 509: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31400594115257263
    2. ' =' → logprob: -1.314005970954895
    3. ')' → logprob: -8.064005851745605
    4. ']' → logprob: -8.189005851745605
    5. ']=' → logprob: -9.689005851745605
    6. '[p' → logprob: -9.939005851745605
    7. ')=' → logprob: -10.314005851745605
    8. '=p' → logprob: -12.189005851745605
    9. '[' → logprob: -13.814005851745605
    10. '=max' → logprob: -14.814005851745605

Token 510: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889562100172043
    2. ' =' → logprob: -2.5788955688476562
    3. '=max' → logprob: -12.078895568847656
    4. '=
' → logprob: -16.953895568847656
    5. ' ' → logprob: -17.953895568847656
    6. '[' → logprob: -17.953895568847656
    7. ')' → logprob: -18.078895568847656
    8. '   ' → logprob: -18.328895568847656
    9. ')=' → logprob: -18.703895568847656
    10. '[ind' → logprob: -18.703895568847656

Token 511: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014168561436235905
    2. ' max' → logprob: -4.264168739318848
    3. 'ind' → logprob: -12.264168739318848
    4. ' ind' → logprob: -15.389168739318848
    5. '	max' → logprob: -15.639168739318848
    6. '   ' → logprob: -18.01416778564453
    7. '(max' → logprob: -19.01416778564453
    8. ' ' → logprob: -19.51416778564453
    9. '=max' → logprob: -19.51416778564453
    10. ' ' → logprob: -20.01416778564453

Token 512: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00033081689616665244
    2. '(M' → logprob: -8.250330924987793
    3. 'MAX' → logprob: -10.000330924987793
    4. '(' → logprob: -10.750330924987793
    5. '[MAX' → logprob: -13.375330924987793
    6. ' (' → logprob: -14.375330924987793
    7. '(max' → logprob: -15.500330924987793
    8. '(
' → logprob: -16.250329971313477
    9. ' MAX' → logprob: -16.375329971313477
    10. '/MAX' → logprob: -16.500329971313477

Token 513: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00294465571641922
    2. 'p' → logprob: -6.627944469451904
    3. 'MAX' → logprob: -6.877944469451904
    4. '(MAX' → logprob: -7.752944469451904
    5. '_MAX' → logprob: -9.627944946289062
    6. '(M' → logprob: -10.502944946289062
    7. 'M' → logprob: -10.627944946289062
    8. '[MAX' → logprob: -10.877944946289062
    9. '/MAX' → logprob: -13.002944946289062
    10. '_p' → logprob: -13.002944946289062

Token 514: '[p' (ID: 23234)
  Prédit: '[MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[MAX' → logprob: -0.06255798786878586
    2. '[p' → logprob: -2.9375579357147217
    3. '[M' → logprob: -5.437558174133301
    4. '[' → logprob: -6.812558174133301
    5. 'MAX' → logprob: -7.187558174133301
    6. '[P' → logprob: -7.187558174133301
    7. 'p' → logprob: -7.687558174133301
    8. '(MAX' → logprob: -8.8125581741333
    9. ' [' → logprob: -11.4375581741333
    10. '   ' → logprob: -11.8125581741333

Token 515: '],' (ID: 2155)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.108399398624897
    2. ',' → logprob: -2.3583993911743164
    3. '],' → logprob: -5.858399391174316
    4. 'p' → logprob: -6.108399391174316
    5. ',p' → logprob: -6.483399391174316
    6. '),' → logprob: -7.108399391174316
    7. ' ,' → logprob: -7.983399391174316
    8. '<p' → logprob: -9.608399391174316
    9. ',[' → logprob: -9.983399391174316
    10. '[' → logprob: -9.983399391174316

Token 516: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.023245712742209435
    2. ' ind' → logprob: -3.7732458114624023
    3. 'indent' → logprob: -16.773244857788086
    4. '[ind' → logprob: -16.898244857788086
    5. '(ind' → logprob: -17.148244857788086
    6. ' ' → logprob: -18.273244857788086
    7. '_ind' → logprob: -18.648244857788086
    8. 'int' → logprob: -19.273244857788086
    9. 'indt' → logprob: -19.273244857788086
    10. ')' → logprob: -19.398244857788086

Token 517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004698307253420353
    2. ')
' → logprob: -5.379698276519775
    3. '   ' → logprob: -9.754698753356934
    4. ' )' → logprob: -11.379698753356934
    5. ')return' → logprob: -11.879698753356934
    6. ')
' → logprob: -14.379698753356934
    7. '       ' → logprob: -15.254698753356934
    8. ')

' → logprob: -15.379698753356934
    9. ' )
' → logprob: -15.379698753356934
    10. '<|end|>' → logprob: -16.379697799682617

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0823228657245636
    2. '<|end|>' → logprob: -2.707322835922241
    3. '
' → logprob: -5.08232307434082
    4. 'return' → logprob: -6.20732307434082
    5. '	return' → logprob: -6.33232307434082
    6. ' return' → logprob: -6.45732307434082
    7. '<|end|>' → logprob: -8.33232307434082
    8. '    
' → logprob: -8.45732307434082
    9. ')' → logprob: -10.08232307434082
    10. ' ' → logprob: -10.33232307434082

Token 519: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3348141014575958
    2. ' return' → logprob: -1.8348140716552734
    3. '   ' → logprob: -2.0848140716552734
    4. '	return' → logprob: -8.334814071655273
    5. ' ' → logprob: -8.834814071655273
    6. '<|end|>' → logprob: -9.334814071655273
    7. '  ' → logprob: -11.084814071655273
    8. '    
' → logprob: -11.084814071655273
    9. '
' → logprob: -11.584814071655273
    10. 'def' → logprob: -11.709814071655273

Token 520: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0019294669618830085
    2. ' MIN' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.62692928314209
    4. 'min' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.751930236816406
    6. '(M' → logprob: -17.001930236816406
    7. 'MAX' → logprob: -17.251930236816406
    8. 'M' → logprob: -17.501930236816406
    9. 'MN' → logprob: -17.626930236816406
    10. ' ' → logprob: -18.376930236816406

Token 521: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.6166903151315637e-05
    2. 'MIN' → logprob: -11.875016212463379
    3. 'p' → logprob: -12.000016212463379
    4. ',' → logprob: -14.500016212463379
    5. '[P' → logprob: -14.750016212463379
    6. 'MAX' → logprob: -15.000016212463379
    7. '[' → logprob: -15.250016212463379
    8. '```' → logprob: -15.375016212463379
    9. '`' → logprob: -15.750016212463379
    10. ' P' → logprob: -16.125015258789062

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',
' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.375001907348633
    5. 'MAX' → logprob: -15.750001907348633
    6. 'def' → logprob: -17.250001907348633
    7. '(MAX' → logprob: -17.750001907348633
    8. '<|end|>' → logprob: -18.375001907348633
    9. ',\
' → logprob: -18.625001907348633
    10. '[MAX' → logprob: -19.000001907348633

Token 523: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.12698763608932495
    2. ' MAX' → logprob: -2.1269876956939697
    3. 'MIN' → logprob: -9.87698745727539
    4. '_MAX' → logprob: -12.50198745727539
    5. '(MAX' → logprob: -13.37698745727539
    6. '[MAX' → logprob: -14.00198745727539
    7. ' MIN' → logprob: -14.12698745727539
    8. ' ' → logprob: -14.62698745727539
    9. '   ' → logprob: -14.87698745727539
    10. 'max' → logprob: -15.87698745727539

Token 524: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.4855663721391466e-05
    2. 'MAX' → logprob: -11.125015258789062
    3. '(MAX' → logprob: -16.875015258789062
    4. 'p' → logprob: -17.000015258789062
    5. '
' → logprob: -19.000015258789062
    6. 'ax' → logprob: -19.625015258789062
    7. 'AX' → logprob: -19.625015258789062
    8. '_MAX' → logprob: -19.750015258789062
    9. ' P' → logprob: -19.875015258789062
    10. '[MAX' → logprob: -20.000015258789062

Token 525: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004362829029560089
    2. '<|end|>' → logprob: -5.504363059997559
    3. '
' → logprob: -8.754363059997559
    4. '```' → logprob: -9.879363059997559
    5. 'import' → logprob: -10.754363059997559
    6. 'from' → logprob: -11.129363059997559
    7. '<|end|>' → logprob: -11.379363059997559
    8. '[' → logprob: -11.879363059997559
    9. '#' → logprob: -12.504363059997559
    10. ' def' → logprob: -12.879363059997559

Token 526: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.8126592193730175e-05
    2. 'import' → logprob: -10.3750581741333
    3. '#' → logprob: -11.1250581741333
    4. 'from' → logprob: -12.5000581741333
    5. 'class' → logprob: -12.5000581741333
    6. '```' → logprob: -13.6250581741333
    7. '<|end|>' → logprob: -14.0000581741333
    8. '[' → logprob: -14.3750581741333
    9. '[]' → logprob: -14.5000581741333
    10. ' def' → logprob: -15.0000581741333

Token 527: ' make' (ID: 1520)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.48130306601524353
    2. ' main' → logprob: -1.606303095817566
    3. 'dfs' → logprob: -2.9813029766082764
    4. 'l' → logprob: -3.4813029766082764
    5. 'build' → logprob: -3.9813029766082764
    6. 'solve' → logprob: -4.1063032150268555
    7. ' dfs' → logprob: -4.8563032150268555
    8. 'process' → logprob: -4.9813032150268555
    9. ' build' → logprob: -4.9813032150268555
    10. ' solve' → logprob: -5.1063032150268555

Token 528: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.3109690546989441
    2. '_sparse' → logprob: -2.810969114303589
    3. '_p' → logprob: -3.185969114303589
    4. '_seg' → logprob: -3.935969114303589
    5. '_empty' → logprob: -4.18596887588501
    6. '_depth' → logprob: -4.56096887588501
    7. '_query' → logprob: -4.68596887588501
    8. 'segment' → logprob: -5.06096887588501
    9. '_prefix' → logprob: -5.06096887588501
    10. '_' → logprob: -5.18596887588501

Token 529: '_elements' (ID: 53344)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.010531053878366947
    2. 'tree' → logprob: -4.635530948638916
    3. '_t' → logprob: -7.885530948638916
    4. '_' → logprob: -9.510531425476074
    5. ' tree' → logprob: -9.635531425476074
    6. '_TREE' → logprob: -9.635531425476074
    7. ' _' → logprob: -9.760531425476074
    8. '_array' → logprob: -10.760531425476074
    9. '_T' → logprob: -11.135531425476074
    10. '<Tree' → logprob: -11.510531425476074

Token 530: '(L' (ID: 11075)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.026851240545511246
    2. '(' → logprob: -3.776851177215576
    3. '(n' → logprob: -6.901851177215576
    4. '():' → logprob: -7.151851177215576
    5. '(size' → logprob: -7.401851177215576
    6. ' (' → logprob: -8.026851654052734
    7. '((' → logprob: -9.026851654052734
    8. '(Q' → logprob: -9.401851654052734
    9. 'def' → logprob: -9.526851654052734
    10. '(
' → logprob: -9.651851654052734

Token 531: 'EN' (ID: 1262)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21719159185886383
    2. '):
' → logprob: -2.217191696166992
    3. 'ist' → logprob: -2.592191696166992
    4. ',' → logprob: -5.467191696166992
    5. 'en' → logprob: -6.342191696166992
    6. 'ength' → logprob: -6.592191696166992
    7. ')' → logprob: -6.592191696166992
    8. 'IST' → logprob: -7.467191696166992
    9. '):
' → logprob: -7.592191696166992
    10. 'EN' → logprob: -7.967191696166992

Token 532: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07125134021043777
    2. ',' → logprob: -3.196251392364502
    3. ')' → logprob: -3.821251392364502
    4. '):
' → logprob: -5.321251392364502
    5. ' ):' → logprob: -8.071250915527344
    6. '(N' → logprob: -8.821250915527344
    7. ',N' → logprob: -9.821250915527344
    8. '=' → logprob: -9.946250915527344
    9. ' ,' → logprob: -10.071250915527344
    10. 'p' → logprob: -10.071250915527344

Token 533: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8184587359428406
    2. '   ' → logprob: -0.8184587359428406
    3. '[L' → logprob: -2.5684587955474854
    4. ' [' → logprob: -3.8184587955474854
    5. '[(' → logprob: -5.193458557128906
    6. 'return' → logprob: -5.443458557128906
    7. '[]' → logprob: -5.818458557128906
    8. ' return' → logprob: -6.443458557128906
    9. '[-' → logprob: -6.818458557128906
    10. '[N' → logprob: -6.943458557128906

Token 534: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38239648938179016
    2. 'return' (adapté à ' return') → logprob: -1.6323964595794678
    3. '[' → logprob: -2.5073964595794678
    4. ' [' → logprob: -4.382396697998047
    5. '   ' → logprob: -4.632396697998047
    6. ' size' → logprob: -4.757396697998047
    7. 'size' → logprob: -6.007396697998047
    8. '1' → logprob: -6.132396697998047
    9. '[(' → logprob: -7.382396697998047
    10. ' ' → logprob: -7.507396697998047

Token 535: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007018822245299816
    2. '[(' → logprob: -5.25701904296875
    3. '[L' → logprob: -7.38201904296875
    4. '[]' → logprob: -7.63201904296875
    5. '[-' → logprob: -7.88201904296875
    6. ' [' → logprob: -8.88201904296875
    7. '[[' → logprob: -10.50701904296875
    8. '[N' → logprob: -10.88201904296875
    9. '[n' → logprob: -11.13201904296875
    10. '[((' → logprob: -11.38201904296875

Token 536: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07498621195554733
    2. '[(' → logprob: -2.699986219406128
    3. '[L' → logprob: -5.949985980987549
    4. '[-' → logprob: -6.324985980987549
    5. '[[' → logprob: -8.449986457824707
    6. '[N' → logprob: -9.324986457824707
    7. '[]' → logprob: -9.699986457824707
    8. '[((' → logprob: -10.074986457824707
    9. '[int' → logprob: -10.199986457824707
    10. '[len' → logprob: -10.324986457824707

Token 537: '<<(' (ID: 82331)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20402729511260986
    2. ' <<' → logprob: -1.7040272951126099
    3. '<<(' → logprob: -6.07902717590332
    4. ' <<=' → logprob: -8.70402717590332
    5. '<<<' → logprob: -10.20402717590332
    6. '<' → logprob: -10.32902717590332
    7. '
' → logprob: -10.70402717590332
    8. '0' → logprob: -11.70402717590332
    9. '<<"' → logprob: -12.20402717590332
    10. ' ' → logprob: -12.32902717590332

Token 538: 'LEN' (ID: 83946)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.2545006573200226
    2. 'LEN' → logprob: -1.5045006275177002
    3. '(len' → logprob: -6.504500865936279
    4. ' LEN' → logprob: -7.879500865936279
    5. '(' → logprob: -8.379500389099121
    6. 'len' → logprob: -8.629500389099121
    7. '_LEN' → logprob: -9.504500389099121
    8. ' (' → logprob: -10.004500389099121
    9. '
' → logprob: -10.129500389099121
    10. '((' → logprob: -10.129500389099121

Token 539: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.3896680176258087
    2. '-' → logprob: -1.1396679878234863
    3. ').' → logprob: -6.764667987823486
    4. ' -' → logprob: -7.139667987823486
    5. '.' → logprob: -7.389667987823486
    6. ' .' → logprob: -9.639668464660645
    7. ')' → logprob: -10.264668464660645
    8. '   ' → logprob: -10.389668464660645
    9. 'bit' → logprob: -10.514668464660645
    10. '
' → logprob: -11.014668464660645

Token 540: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0011038987431675196
    2. 'length' → logprob: -7.00110387802124
    3. 'ength' → logprob: -8.626104354858398
    4. '_LENGTH' → logprob: -12.626104354858398
    5. '```' → logprob: -13.251104354858398
    6. 'L' → logprob: -13.251104354858398
    7. 'Length' → logprob: -13.376104354858398
    8. 'l' → logprob: -13.501104354858398
    9. '
' → logprob: -14.001104354858398
    10. 'leng' → logprob: -14.126104354858398

Token 541: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23093470931053162
    2. ')' → logprob: -2.1059346199035645
    3. '()' → logprob: -2.4809346199035645
    4. ' ())' → logprob: -8.105935096740723
    5. '()-' → logprob: -8.355935096740723
    6. ' )' → logprob: -8.730935096740723
    7. '())
' → logprob: -10.230935096740723
    8. '()
' → logprob: -11.105935096740723
    9. '();)' → logprob: -11.480935096740723
    10. '<|end|>' → logprob: -11.480935096740723

Token 542: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' init' (ID: 6327)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.4089083969593048
    2. ' main' → logprob: -2.2839083671569824
    3. 'build' → logprob: -2.9089083671569824
    4. ' make' → logprob: -3.0339083671569824
    5. 'make' → logprob: -3.5339083671569824
    6. 'main' → logprob: -4.033908367156982
    7. ' init' → logprob: -4.408908367156982
    8. ' process' → logprob: -5.158908367156982
    9. ' read' → logprob: -5.283908367156982
    10. ' segment' → logprob: -5.283908367156982

Token 544: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.30756282806396484
    2. '_' → logprob: -1.9325628280639648
    3. '_seg' → logprob: -2.932562828063965
    4. '_sparse' → logprob: -3.557562828063965
    5. '_segments' → logprob: -4.932562828063965
    6. '_S' → logprob: -5.682562828063965
    7. '_p' → logprob: -5.807562828063965
    8. '_SEG' → logprob: -5.807562828063965
    9. '_depth' → logprob: -6.057562828063965
    10. '_min' → logprob: -6.182562828063965

Token 545: '(seg' (ID: 140462)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.005591840948909521
    2. 'tree' → logprob: -5.505591869354248
    3. '_array' → logprob: -7.630591869354248
    4. '_t' → logprob: -8.13059139251709
    5. '_TREE' → logprob: -8.25559139251709
    6. '_data' → logprob: -9.00559139251709
    7. '_elements' → logprob: -9.50559139251709
    8. '_' → logprob: -9.63059139251709
    9. '_nodes' → logprob: -10.25559139251709
    10. '(L' → logprob: -10.63059139251709

Token 546: '_el' (ID: 55168)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.4722144305706024
    2. 'tree' → logprob: -1.2222144603729248
    3. '_tree' → logprob: -3.472214460372925
    4. ')' → logprob: -3.847214460372925
    5. '[' → logprob: -5.347214221954346
    6. 'MENT' → logprob: -5.597214221954346
    7. '=' → logprob: -5.722214221954346
    8. '_TREE' → logprob: -5.722214221954346
    9. '=[]' → logprob: -6.472214221954346
    10. '```' → logprob: -6.472214221954346

Token 547: '):
' (ID: 1883)
  Prédit: 'ements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.4891888499259949
    2. 'ems' → logprob: -1.4891889095306396
    3. 'em' → logprob: -2.3641889095306396
    4. 'ments' → logprob: -3.3641889095306396
    5. 'ents' → logprob: -4.3641886711120605
    6. 'ement' → logprob: -4.9891886711120605
    7. '```' → logprob: -5.1141886711120605
    8. 'EMENTS' → logprob: -6.2391886711120605
    9. 'ms' → logprob: -7.1141886711120605
    10. 'm' → logprob: -7.2391886711120605

Token 548: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25661972165107727
    2. '   ' → logprob: -1.5066196918487549
    3. '[size' → logprob: -6.631619930267334
    4. '[-' → logprob: -7.131619930267334
    5. 'seg' → logprob: -7.631619930267334
    6. '[N' → logprob: -8.131619453430176
    7. 'size' → logprob: -8.131619453430176
    8. ' [' → logprob: -8.256619453430176
    9. '=[' → logprob: -8.756619453430176
    10. '[(' → logprob: -9.256619453430176

Token 549: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0057359784841537476
    2. 'seg' → logprob: -6.505735874176025
    3. '[-' → logprob: -6.880735874176025
    4. 'INF' → logprob: -6.880735874176025
    5. ' [' → logprob: -7.005735874176025
    6. 'return' (adapté à ' return') → logprob: -8.130736351013184
    7. ' seg' → logprob: -8.380736351013184
    8. '[(' → logprob: -8.630736351013184
    9. 'inf' → logprob: -8.880736351013184
    10. '   ' → logprob: -9.130736351013184

Token 550: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005320638883858919
    2. '[-' → logprob: -7.625532150268555
    3. '[(' → logprob: -10.500532150268555
    4. ' [' → logprob: -11.375532150268555
    5. '[int' → logprob: -12.875532150268555
    6. '[]' → logprob: -14.875532150268555
    7. '[n' → logprob: -15.000532150268555
    8. '0' → logprob: -15.250532150268555
    9. '[max' → logprob: -15.375532150268555
    10. 'float' → logprob: -15.625532150268555

Token 551: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6712504625320435
    2. '0' → logprob: -1.4212504625320435
    3. 'float' → logprob: -2.046250343322754
    4. '1' → logprob: -2.796250343322754
    5. '-' → logprob: -3.296250343322754
    6. '(float' → logprob: -5.171250343322754
    7. '(-' → logprob: -5.421250343322754
    8. '10' → logprob: -5.671250343322754
    9. '[' → logprob: -6.796250343322754
    10. '[]' → logprob: -7.421250343322754

Token 552: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00010223194840364158
    2. ' <<' → logprob: -9.375102043151855
    3. ')<<' → logprob: -11.500102043151855
    4. '1' → logprob: -12.250102043151855
    5. '<<(' → logprob: -13.875102043151855
    6. '
' → logprob: -15.250102043151855
    7. ',' → logprob: -15.500102043151855
    8. '()<<' → logprob: -15.625102043151855
    9. 'e' → logprob: -15.750102043151855
    10. '0' → logprob: -15.875102043151855

Token 553: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.01969939097762108
    2. '60' → logprob: -4.144699573516846
    3. '31' → logprob: -5.644699573516846
    4. '61' → logprob: -10.144699096679688
    5. '29' → logprob: -10.769699096679688
    6. '40' → logprob: -10.894699096679688
    7. '62' → logprob: -11.144699096679688
    8. '50' → logprob: -11.769699096679688
    9. '63' → logprob: -11.769699096679688
    10. '35' → logprob: -12.144699096679688

Token 554: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5590653419494629
    2. ')' → logprob: -0.9340653419494629
    3. ',' → logprob: -3.809065341949463
    4. ',)' → logprob: -4.559065341949463
    5. ' )' → logprob: -6.184065341949463
    6. ')][' → logprob: -8.309064865112305
    7. ' ,' → logprob: -9.184064865112305
    8. ')*' → logprob: -10.059064865112305
    9. '),' → logprob: -10.184064865112305
    10. ')-' → logprob: -10.434064865112305

Token 555: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26351767778396606
    2. '-(' → logprob: -1.5135176181793213
    3. '0' → logprob: -5.1385178565979
    4. ' -' → logprob: -5.3885178565979
    5. ' -(' → logprob: -7.6385178565979
    6. '(-' → logprob: -8.263517379760742
    7. ' ' → logprob: -8.888517379760742
    8. '   ' → logprob: -9.638517379760742
    9. '  ' → logprob: -10.888517379760742
    10. '-s' → logprob: -11.263517379760742

Token 556: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15509174764156342
    2. '-(' → logprob: -2.0300917625427246
    3. '0' → logprob: -4.780091762542725
    4. ' -' → logprob: -6.030091762542725
    5. '(-' → logprob: -7.030091762542725
    6. ' -(' → logprob: -8.905091285705566
    7. ' ' → logprob: -9.155091285705566
    8. '   ' → logprob: -9.780091285705566
    9. '1' → logprob: -10.530091285705566
    10. '-s' → logprob: -10.842591285705566

Token 557: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08910086005926132
    2. ')]' → logprob: -2.4641008377075195
    3. ' )' → logprob: -8.83910083770752
    4. ',' → logprob: -11.96410083770752
    5. '),' → logprob: -12.21410083770752
    6. ']' → logprob: -12.96410083770752
    7. ')
' → logprob: -14.08910083770752
    8. ',)' → logprob: -14.33910083770752
    9. '),(' → logprob: -15.08910083770752
    10. '))' → logprob: -15.33910083770752

Token 558: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08657428622245789
    2. ' *' → logprob: -2.5865743160247803
    3. '*(' → logprob: -5.211574077606201
    4. ',' → logprob: -6.836574077606201
    5. '*[' → logprob: -8.21157455444336
    6. '<|end|>' → logprob: -8.21157455444336
    7. '[' → logprob: -8.46157455444336
    8. ')' → logprob: -9.21157455444336
    9. '[]' → logprob: -9.96157455444336
    10. '+' → logprob: -10.58657455444336

Token 559: '2' (ID: 17)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -4.246537173457909e-06
    2. ' seg' → logprob: -12.625003814697266
    3. '(seg' → logprob: -14.625003814697266
    4. 'segment' → logprob: -15.875003814697266
    5. '2' → logprob: -16.125003814697266
    6. 'se' → logprob: -17.000003814697266
    7. 'sec' → logprob: -17.000003814697266
    8. 'sig' → logprob: -18.125003814697266
    9. 'sem' → logprob: -18.375003814697266
    10. 'sel' → logprob: -18.750003814697266

Token 560: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00014036978245712817
    2. ' *' → logprob: -8.875140190124512
    3. '(seg' → logprob: -16.125141143798828
    4. ' ' → logprob: -16.375141143798828
    5. '```' → logprob: -16.500141143798828
    6. 'seg' → logprob: -16.625141143798828
    7. '**' → logprob: -17.500141143798828
    8. '
' → logprob: -18.000141143798828
    9. ' seg' → logprob: -18.125141143798828
    10. '*object' → logprob: -18.125141143798828

Token 561: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -9.014684110297821e-06
    2. '(seg' → logprob: -12.000008583068848
    3. ' seg' → logprob: -13.000008583068848
    4. 'segment' → logprob: -15.250008583068848
    5. '<|end|>' → logprob: -15.500008583068848
    6. 'segments' → logprob: -17.125009536743164
    7. '_seg' → logprob: -17.625009536743164
    8. '```' → logprob: -19.250009536743164
    9. 'se' → logprob: -19.875009536743164
    10. 'segu' → logprob: -20.000009536743164

Token 562: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.002264090348035097
    2. 'el' → logprob: -6.127264022827148
    3. '_seg' → logprob: -10.627264022827148
    4. 'seg' → logprob: -11.002264022827148
    5. '	el' → logprob: -11.127264022827148
    6. 'El' → logprob: -11.377264022827148
    7. 's' → logprob: -13.002264022827148
    8. '<|end|>' → logprob: -13.252264022827148
    9. 'g' → logprob: -13.627264022827148
    10. '_ent' → logprob: -13.877264022827148

Token 563: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -15.00000286102295
    4. '<|end|>' → logprob: -16.000003814697266
    5. '))' → logprob: -16.625003814697266
    6. '),' → logprob: -17.000003814697266
    7. ')return' → logprob: -17.125003814697266
    8. ')

' → logprob: -17.625003814697266
    9. ')`' → logprob: -17.750003814697266
    10. ')}' → logprob: -17.875003814697266

Token 564: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006242761737667024
    2. '<|end|>' → logprob: -7.625624179840088
    3. '
' → logprob: -9.250624656677246
    4. '```' → logprob: -11.000624656677246
    5. '<|end|>' → logprob: -12.375624656677246
    6. ')' → logprob: -12.500624656677246
    7. 'import' → logprob: -12.500624656677246
    8. ' def' → logprob: -12.625624656677246
    9. '  
' → logprob: -13.125624656677246
    10. '[' → logprob: -13.625624656677246

Token 565: ' update' (ID: 4027)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.5877344608306885
    2. 'update' → logprob: -1.2127344608306885
    3. 'main' → logprob: -3.2127344608306885
    4. 'segment' → logprob: -3.3377344608306885
    5. 'make' → logprob: -3.8377344608306885
    6. ' build' → logprob: -4.087734222412109
    7. ' update' → logprob: -4.962734222412109
    8. 'seg' → logprob: -4.962734222412109
    9. 'init' → logprob: -5.712734222412109
    10. 'push' → logprob: -6.212734222412109

Token 566: '_segment' (ID: 71041)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11732085794210434
    2. '_segment' → logprob: -2.6173207759857178
    3. '_' → logprob: -4.242321014404297
    4. ' (' → logprob: -4.867321014404297
    5. '(seg' → logprob: -5.117321014404297
    6. '(segment' → logprob: -5.867321014404297
    7. '_seg' → logprob: -6.117321014404297
    8. '(_' → logprob: -6.367321014404297
    9. '_segments' → logprob: -6.992321014404297
    10. ' _' → logprob: -8.117321014404297

Token 567: '_base' (ID: 17096)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.013531235978007317
    2. '(segment' → logprob: -4.63853120803833
    3. '(' → logprob: -6.26353120803833
    4. '(idx' → logprob: -7.26353120803833
    5. '(index' → logprob: -8.263531684875488
    6. ' (' → logprob: -8.263531684875488
    7. '(node' → logprob: -8.388531684875488
    8. '(se' → logprob: -9.263531684875488
    9. '(tree' → logprob: -9.388531684875488
    10. '(s' → logprob: -9.763531684875488

Token 568: '(' (ID: 7)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.1058998629450798
    2. '(' → logprob: -2.4808998107910156
    3. '(segment' → logprob: -4.480899810791016
    4. '(index' → logprob: -5.855899810791016
    5. '(idx' → logprob: -6.980899810791016
    6. '(s' → logprob: -8.105899810791016
    7. '(se' → logprob: -8.105899810791016
    8. '(node' → logprob: -8.730899810791016
    9. ' (' → logprob: -8.855899810791016
    10. '(S' → logprob: -9.230899810791016

Token 569: 'SEG' (ID: 128217)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.030613558366894722
    2. 'SEG' → logprob: -4.155613422393799
    3. 'segment' → logprob: -4.905613422393799
    4. 'idx' → logprob: -6.405613422393799
    5. 'se' → logprob: -6.655613422393799
    6. 'index' → logprob: -7.155613422393799
    7. 'pos' → logprob: -7.530613422393799
    8. ' seg' → logprob: -7.655613422393799
    9. 'i' → logprob: -7.905613422393799
    10. 's' → logprob: -8.155613899230957

Token 570: ',' (ID: 11)
  Prédit: 'MENT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -0.009352742694318295
    2. 'M' → logprob: -6.009352684020996
    3. 'EMENT' → logprob: -6.634352684020996
    4. ')' → logprob: -6.759352684020996
    5. '```' → logprob: -6.884352684020996
    6. 'EL' → logprob: -7.009352684020996
    7. 'ENT' → logprob: -7.634352684020996
    8. 'MENTS' → logprob: -8.009352684020996
    9. '_' → logprob: -8.134352684020996
    10. 'MEN' → logprob: -8.384352684020996

Token 571: ' seg' (ID: 3055)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5496667623519897
    2. 'pos' → logprob: -1.7996667623519897
    3. 'idx' → logprob: -2.1746668815612793
    4. 'ind' → logprob: -2.4246668815612793
    5. 'index' → logprob: -3.5496668815612793
    6. ' i' → logprob: -4.924666881561279
    7. ' ind' → logprob: -5.049666881561279
    8. 'k' → logprob: -6.049666881561279
    9. 'p' → logprob: -6.174666881561279
    10. ' idx' → logprob: -6.174666881561279

Token 572: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.0022020016331225634
    2. '_EL' → logprob: -6.627202033996582
    3. 'EL' → logprob: -8.502202033996582
    4. 'el' → logprob: -8.502202033996582
    5. '_idx' → logprob: -9.002202033996582
    6. '_index' → logprob: -9.877202033996582
    7. '```' → logprob: -9.877202033996582
    8. '_' → logprob: -10.002202033996582
    9. '	el' → logprob: -10.502202033996582
    10. 'El' → logprob: -10.752202033996582

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015599739272147417
    2. ' ,' → logprob: -6.751560211181641
    3. ',index' → logprob: -8.75156021118164
    4. ',p' → logprob: -9.87656021118164
    5. 'p' → logprob: -10.25156021118164
    6. ',pos' → logprob: -10.50156021118164
    7. 'index' → logprob: -10.87656021118164
    8. '
' → logprob: -11.37656021118164
    9. ',i' → logprob: -11.50156021118164
    10. ',
' → logprob: -11.75156021118164

Token 574: ' E' (ID: 457)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0592749118804932
    2. 'i' → logprob: -1.1842749118804932
    3. 'ind' → logprob: -1.5592749118804932
    4. 'idx' → logprob: -2.684274911880493
    5. 'index' → logprob: -3.059274911880493
    6. ' ind' → logprob: -4.934274673461914
    7. ' i' → logprob: -5.684274673461914
    8. 'k' → logprob: -5.809274673461914
    9. ' pos' → logprob: -6.059274673461914
    10. 'p' → logprob: -6.434274673461914

Token 575: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.000552555953618139
    2. 'LER' → logprob: -8.1255521774292
    3. 'uler' → logprob: -9.3755521774292
    4. 'L' → logprob: -9.3755521774292
    5. 'UR' → logprob: -10.8755521774292
    6. 'LEMENT' → logprob: -10.8755521774292
    7. 'UEL' → logprob: -11.8755521774292
    8. 'ULE' → logprob: -11.8755521774292
    9. '```' → logprob: -12.0005521774292
    10. 'ULAR' → logprob: -12.1255521774292

Token 576: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.0001805377542041242
    2. 'R' → logprob: -8.6251802444458
    3. 'E' → logprob: -15.2501802444458
    4. '_ER' → logprob: -15.3751802444458
    5. ' ER' → logprob: -16.000181198120117
    6. '   ' → logprob: -17.000181198120117
    7. '[' → logprob: -17.250181198120117
    8. 'OR' → logprob: -17.375181198120117
    9. 'AR' → logprob: -17.500181198120117
    10. 'er' → logprob: -17.875181198120117

Token 577: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14030426740646362
    2. '):
' → logprob: -2.6403043270111084
    3. '):' → logprob: -3.3903043270111084
    4. 'ind' → logprob: -4.890304088592529
    5. '_ind' → logprob: -5.140304088592529
    6. ' ,' → logprob: -5.640304088592529
    7. '
' → logprob: -6.765304088592529
    8. '_IND' → logprob: -6.890304088592529
    9. '[ind' → logprob: -6.890304088592529
    10. 'index' → logprob: -7.515304088592529

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007162281312048435
    2. ',' → logprob: -6.132162094116211
    3. ':' → logprob: -7.007162094116211
    4. '[' → logprob: -7.132162094116211
    5. '    
' → logprob: -7.382162094116211
    6. ' for' → logprob: -7.632162094116211
    7. '
' → logprob: -7.882162094116211
    8. '[i' → logprob: -8.007162094116211
    9. '(' → logprob: -9.007162094116211
    10. '```' → logprob: -9.007162094116211

Token 579: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.991464786347933e-05
    2. ' for' → logprob: -10.375060081481934
    3. '   ' → logprob: -10.625060081481934
    4. 'i' → logprob: -12.500060081481934
    5. 'n' → logprob: -14.875060081481934
    6. 'def' → logprob: -15.500060081481934
    7. '```' → logprob: -16.125059127807617
    8. '	for' → logprob: -16.750059127807617
    9. 'idx' → logprob: -17.250059127807617
    10. 'seg' → logprob: -17.500059127807617

Token 580: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.189620703458786
    2. ' i' → logprob: -1.8146207332611084
    3. 'ind' → logprob: -4.814620494842529
    4. ' ind' → logprob: -6.439620494842529
    5. 'idx' → logprob: -9.564620971679688
    6. ' idx' → logprob: -10.689620971679688
    7. 'index' → logprob: -11.314620971679688
    8. 'k' → logprob: -12.564620971679688
    9. '	i' → logprob: -12.814620971679688
    10. ' index' → logprob: -13.189620971679688

Token 581: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024174731224775314
    2. 'in' → logprob: -4.274174690246582
    3. ',' → logprob: -4.649174690246582
    4. ' ,' → logprob: -8.399174690246582
    5. ' ' → logprob: -8.774174690246582
    6. 'range' → logprob: -13.024174690246582
    7. ',in' → logprob: -13.524174690246582
    8. ' range' → logprob: -14.024174690246582
    9. '0' → logprob: -14.149174690246582
    10. 'n' → logprob: -14.149174690246582

Token 582: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324605919420719
    2. ' range' → logprob: -3.7732460498809814
    3. '(range' → logprob: -15.648245811462402
    4. '	range' → logprob: -15.773245811462402
    5. 'ange' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.39824676513672
    7. '   ' → logprob: -16.52324676513672
    8. '  ' → logprob: -16.77324676513672
    9. '
' → logprob: -17.89824676513672
    10. ',' → logprob: -18.02324676513672

Token 583: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.7848862373502925e-05
    2. '(seg' → logprob: -10.750027656555176
    3. 'len' → logprob: -12.125027656555176
    4. ',len' → logprob: -15.375027656555176
    5. '(' → logprob: -15.375027656555176
    6. '[len' → logprob: -15.625027656555176
    7. ' len' → logprob: -15.875027656555176
    8. ' (' → logprob: -16.375028610229492
    9. '	len' → logprob: -16.875028610229492
    10. '<len' → logprob: -17.625028610229492

Token 584: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0006438109558075666
    2. '(' → logprob: -7.500643730163574
    3. 'E' → logprob: -9.500643730163574
    4. '(SE' → logprob: -11.750643730163574
    5. '(
' → logprob: -12.250643730163574
    6. ' (' → logprob: -13.875643730163574
    7. ')' → logprob: -14.500643730163574
    8. ' E' → logprob: -14.875643730163574
    9. '(EFFECT' → logprob: -15.625643730163574
    10. '(e' → logprob: -15.625643730163574

Token 585: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -2.7372048862162046e-05
    2. 'UR' → logprob: -11.750027656555176
    3. 'UEL' → logprob: -11.875027656555176
    4. 'U' → logprob: -12.625027656555176
    5. 'ULAR' → logprob: -13.250027656555176
    6. 'uler' → logprob: -13.500027656555176
    7. 'UER' → logprob: -13.625027656555176
    8. 'L' → logprob: -14.000027656555176
    9. ' UL' → logprob: -14.125027656555176
    10. 'ULE' → logprob: -14.375027656555176

Token 586: 'ER' (ID: 866)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.22453314065933228
    2. 'R' → logprob: -2.4745330810546875
    3. 'RL' → logprob: -3.0995330810546875
    4. 'UR' → logprob: -3.3495330810546875
    5. 'ER' → logprob: -4.2245330810546875
    6. 'LER' → logprob: -4.4745330810546875
    7. 'L' → logprob: -5.2245330810546875
    8. 'EL' → logprob: -6.3495330810546875
    9. 'LR' → logprob: -7.0995330810546875
    10. 'E' → logprob: -7.2245330810546875

Token 587: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3871171176433563
    2. '):' → logprob: -1.1371171474456787
    3. '):
' → logprob: -8.512117385864258
    4. ' ):
' → logprob: -10.887117385864258
    5. ' ):' → logprob: -10.887117385864258
    6. ')' → logprob: -12.262117385864258
    7. '   ' → logprob: -13.512117385864258
    8. ':' → logprob: -15.262117385864258
    9. '):

' → logprob: -15.262117385864258
    10. '):(' → logprob: -15.262117385864258

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025327812880277634
    2. '   ' → logprob: -4.400327682495117
    3. ',' → logprob: -4.650327682495117
    4. ' SEG' → logprob: -6.400327682495117
    5. ' s' → logprob: -7.775327682495117
    6. ' ,' → logprob: -8.650327682495117
    7. '    
' → logprob: -9.150327682495117
    8. '        
' → logprob: -9.150327682495117
    9. '_SEG' → logprob: -9.150327682495117
    10. 'SEG' → logprob: -10.025327682495117

Token 589: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.28983113169670105
    2. 'depth' → logprob: -2.4148311614990234
    3. 'p' → logprob: -2.6648311614990234
    4. 'DEP' → logprob: -3.1648311614990234
    5. 'node' → logprob: -3.5398311614990234
    6. 'd' → logprob: -5.414831161499023
    7. '   ' → logprob: -5.539831161499023
    8. 'val' → logprob: -6.164831161499023
    9. 'c' → logprob: -6.289831161499023
    10. 'x' → logprob: -6.539831161499023

Token 590: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14371800422668457
    2. '[' → logprob: -2.0187180042266846
    3. '=' → logprob: -7.8937177658081055
    4. ' [' → logprob: -8.268717765808105
    5. ' =' → logprob: -8.643717765808105
    6. '=[' → logprob: -9.143717765808105
    7. '   ' → logprob: -11.018717765808105
    8. ' ' → logprob: -11.518717765808105
    9. '[len' → logprob: -11.518717765808105
    10. ')[' → logprob: -11.518717765808105

Token 591: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027671942953020334
    2. ']=' → logprob: -6.002767086029053
    3. '=' → logprob: -8.877767562866211
    4. ']=(' → logprob: -9.127767562866211
    5. ' ]' → logprob: -10.627767562866211
    6. ' =' → logprob: -11.002767562866211
    7. ')' → logprob: -13.752767562866211
    8. ']={' → logprob: -15.127767562866211
    9. ']
' → logprob: -15.627767562866211
    10. 's' → logprob: -16.37776756286621

Token 592: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.225939872208983e-05
    2. '(seg' → logprob: -10.625032424926758
    3. 'segment' → logprob: -12.875032424926758
    4. '<|end|>' → logprob: -13.375032424926758
    5. '_seg' → logprob: -13.500032424926758
    6. ' seg' → logprob: -13.875032424926758
    7. 's' → logprob: -14.375032424926758
    8. 'se' → logprob: -15.625032424926758
    9. '_SEG' → logprob: -16.125032424926758
    10. 'sem' → logprob: -16.250032424926758

Token 593: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.0019801415037363768
    2. 'el' → logprob: -6.251980304718018
    3. '	el' → logprob: -10.25197982788086
    4. 'El' → logprob: -12.00197982788086
    5. '   ' → logprob: -13.62697982788086
    6. '_seg' → logprob: -14.00197982788086
    7. '_' → logprob: -14.12697982788086
    8. '_ent' → logprob: -14.50197982788086
    9. '_ele' → logprob: -14.50197982788086
    10. '```' → logprob: -14.75197982788086

Token 594: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026474790647625923
    2. ']=' → logprob: -6.252647399902344
    3. ']=(' → logprob: -7.627647399902344
    4. ' ]' → logprob: -8.752647399902344
    5. ')' → logprob: -10.002647399902344
    6. '=' → logprob: -11.002647399902344
    7. '])' → logprob: -13.002647399902344
    8. ')]' → logprob: -13.252647399902344
    9. '   ' → logprob: -13.502647399902344
    10. '][' → logprob: -13.877647399902344

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975720353424549
    2. ' =' → logprob: -3.529757261276245
    3. '=(' → logprob: -12.654757499694824
    4. ' =(' → logprob: -14.279757499694824
    5. '=i' → logprob: -14.654757499694824
    6. '＝' → logprob: -15.154757499694824
    7. '=int' → logprob: -15.404757499694824
    8. '=((' → logprob: -15.654757499694824
    9. '=f' → logprob: -15.904757499694824
    10. '=
' → logprob: -15.904757499694824

Token 596: ' E' (ID: 457)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39006200432777405
    2. '(E' → logprob: -1.7650619745254517
    3. 'E' → logprob: -1.8900619745254517
    4. ' (' → logprob: -7.890061855316162
    5. ' E' → logprob: -8.76506233215332
    6. '(-' → logprob: -9.14006233215332
    7. '((' → logprob: -10.64006233215332
    8. '(None' → logprob: -11.39006233215332
    9. '(
' → logprob: -11.51506233215332
    10. '(min' → logprob: -12.39006233215332

Token 597: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.00019257364328950644
    2. '(' → logprob: -10.250192642211914
    3. 'U' → logprob: -10.250192642211914
    4. 'UR' → logprob: -10.875192642211914
    5. 'LER' → logprob: -11.000192642211914
    6. 'UER' → logprob: -11.250192642211914
    7. '((' → logprob: -11.375192642211914
    8. 'uler' → logprob: -11.375192642211914
    9. 'ULE' → logprob: -11.500192642211914
    10. ' (' → logprob: -11.875192642211914

Token 598: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.125021934509277
    3. 'R' → logprob: -12.250021934509277
    4. '(R' → logprob: -14.375021934509277
    5. '((' → logprob: -14.375021934509277
    6. 'E' → logprob: -15.125021934509277
    7. '[' → logprob: -15.375021934509277
    8. '[(' → logprob: -15.875021934509277
    9. '(E' → logprob: -16.00002098083496
    10. '_ER' → logprob: -16.50002098083496

Token 599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -11.875012397766113
    3. ' [' → logprob: -12.375012397766113
    4. '[
' → logprob: -14.500012397766113
    5. '   ' → logprob: -15.750012397766113
    6. '```' → logprob: -16.12501335144043
    7. '[(' → logprob: -16.37501335144043
    8. 'i' → logprob: -16.37501335144043
    9. '[I' → logprob: -16.62501335144043
    10. ' i' → logprob: -16.62501335144043

Token 600: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023007621988654137
    2. '<|end|>' → logprob: -4.023007392883301
    3. ' )' → logprob: -5.398007392883301
    4. ')return' → logprob: -9.0230073928833
    5. '<|end|>' → logprob: -9.2730073928833
    6. ' ' → logprob: -10.7730073928833
    7. '[' → logprob: -10.8980073928833
    8. ']' → logprob: -11.1480073928833
    9. ')
' → logprob: -11.3980073928833
    10. ')[' → logprob: -12.3980073928833

Token 601: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012708000838756561
    2. '<|end|>' → logprob: -5.0127081871032715
    3. 'for' → logprob: -5.6377081871032715
    4. '   ' → logprob: -6.5127081871032715
    5. '
' → logprob: -7.5127081871032715
    6. ' for' → logprob: -8.637707710266113
    7. '```' → logprob: -9.012707710266113
    8. '<|end|>' → logprob: -10.762707710266113
    9. '    
' → logprob: -11.512707710266113
    10. '  
' → logprob: -11.512707710266113

Token 602: ' build' (ID: 3024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0539264678955078
    2. ' for' → logprob: -1.6789264678955078
    3. ' def' → logprob: -1.6789264678955078
    4. 'for' → logprob: -1.9289264678955078
    5. ' update' → logprob: -3.053926467895508
    6. 'update' → logprob: -3.303926467895508
    7. 'build' → logprob: -4.553926467895508
    8. ' build' → logprob: -4.678926467895508
    9. '
' → logprob: -5.303926467895508
    10. ' i' → logprob: -6.053926467895508

Token 603: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.32037994265556335
    2. '_SEG' → logprob: -1.3203799724578857
    3. '_' → logprob: -5.320379734039307
    4. '_seg' → logprob: -6.695379734039307
    5. '_segments' → logprob: -7.445379734039307
    6. '_S' → logprob: -8.820380210876465
    7. '_SE' → logprob: -9.945380210876465
    8. '```' → logprob: -9.945380210876465
    9. '(' → logprob: -10.570380210876465
    10. '_se' → logprob: -11.195380210876465

Token 604: '_tree' (ID: 27118)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46914511919021606
    2. '_tree' → logprob: -1.4691450595855713
    3. '_TREE' → logprob: -2.5941450595855713
    4. 'tree' → logprob: -4.09414529800415
    5. '_SEG' → logprob: -4.46914529800415
    6. '_base' → logprob: -4.71914529800415
    7. '_segment' → logprob: -4.71914529800415
    8. '_' → logprob: -5.21914529800415
    9. '(
' → logprob: -5.21914529800415
    10. '(seg' → logprob: -5.46914529800415

Token 605: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013357517309486866
    2. '(seg' → logprob: -9.125133514404297
    3. ' (' → logprob: -11.625133514404297
    4. '(SE' → logprob: -11.875133514404297
    5. '(
' → logprob: -12.000133514404297
    6. '_SEG' → logprob: -13.875133514404297
    7. '(segment' → logprob: -14.875133514404297
    8. '_(' → logprob: -15.250133514404297
    9. '(SIG' → logprob: -15.500133514404297
    10. '((' → logprob: -16.125133514404297

Token 606: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00021486106561496854
    2. ' SEG' → logprob: -9.000214576721191
    3. 'seg' → logprob: -9.625214576721191
    4. '_SEG' → logprob: -11.625214576721191
    5. ')' → logprob: -12.250214576721191
    6. 'SE' → logprob: -12.375214576721191
    7. '(' → logprob: -13.625214576721191
    8. 'SEQ' → logprob: -13.875214576721191
    9. 'SG' → logprob: -14.125214576721191
    10. '   ' → logprob: -14.250214576721191

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039825684507377446
    2. ' ,' → logprob: -8.375398635864258
    3. '):
' → logprob: -9.125398635864258
    4. '):' → logprob: -10.125398635864258
    5. ')' → logprob: -12.250398635864258
    6. '   ' → logprob: -12.875398635864258
    7. '_,' → logprob: -13.375398635864258
    8. ',
' → logprob: -13.750398635864258
    9. 'def' → logprob: -13.937898635864258
    10. 'seg' → logprob: -14.125398635864258

Token 608: ' seg' (ID: 3055)
  Prédit: ' seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.4747112989425659
    2. 'seg' → logprob: -0.9747112989425659
    3. '   ' → logprob: -7.4747114181518555
    4. 'len' → logprob: -11.599711418151855
    5. '(seg' → logprob: -11.599711418151855
    6. 'se' → logprob: -11.974711418151855
    7. ' len' → logprob: -12.224711418151855
    8. 'segment' → logprob: -12.349711418151855
    9. ' ' → logprob: -12.412211418151855
    10. '```' → logprob: -12.912211418151855

Token 609: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.00016921341011766344
    2. 'el' → logprob: -8.750168800354004
    3. '_' → logprob: -12.750168800354004
    4. '	el' → logprob: -13.125168800354004
    5. '_ele' → logprob: -13.250168800354004
    6. '_elements' → logprob: -14.000168800354004
    7. ' _' → logprob: -14.250168800354004
    8. '_element' → logprob: -14.375168800354004
    9. 'El' → logprob: -14.625168800354004
    10. '_e' → logprob: -15.000168800354004

Token 610: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017452111467719078
    2. '):' → logprob: -4.142452239990234
    3. ',' → logprob: -7.267452239990234
    4. '):
' → logprob: -7.392452239990234
    5. '   ' → logprob: -9.517452239990234
    6. ')' → logprob: -11.392452239990234
    7. 'def' → logprob: -11.892452239990234
    8. '):

' → logprob: -12.017452239990234
    9. ' ):
' → logprob: -13.142452239990234
    10. ')
' → logprob: -14.267452239990234

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4206031262874603
    2. 'for' → logprob: -1.1706031560897827
    3. ' for' → logprob: -3.420603036880493
    4. '	for' → logprob: -7.670603275299072
    5. 'def' → logprob: -12.045602798461914
    6. ' ' → logprob: -13.545602798461914
    7. '  ' → logprob: -13.795602798461914
    8. '```' → logprob: -13.920602798461914
    9. '
' → logprob: -14.545602798461914
    10. 'from' → logprob: -14.920602798461914

Token 612: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026632217690348625
    2. ' for' → logprob: -4.026632308959961
    3. '   ' → logprob: -4.776632308959961
    4. '	for' → logprob: -11.151632308959961
    5. 'n' → logprob: -12.276632308959961
    6. ' ' → logprob: -13.776632308959961
    7. 'def' → logprob: -14.276632308959961
    8. 'i' → logprob: -14.276632308959961
    9. ' n' → logprob: -15.276632308959961
    10. '  ' → logprob: -15.776632308959961

Token 613: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38688236474990845
    2. ' i' → logprob: -1.1368823051452637
    3. '	i' → logprob: -12.386882781982422
    4. 's' → logprob: -13.011882781982422
    5. ' range' → logprob: -13.886882781982422
    6. 'x' → logprob: -14.011882781982422
    7. ' ' → logprob: -14.386882781982422
    8. '   ' → logprob: -14.886882781982422
    9. 'idx' → logprob: -15.011882781982422
    10. 'v' → logprob: -15.136882781982422

Token 614: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006066017784178257
    2. 'in' → logprob: -5.131065845489502
    3. ' range' → logprob: -9.38106632232666
    4. 'range' → logprob: -10.38106632232666
    5. '   ' → logprob: -12.00606632232666
    6. 'seg' → logprob: -12.38106632232666
    7. ' =' → logprob: -12.88106632232666
    8. 's' → logprob: -13.00606632232666
    9. ' ' → logprob: -13.50606632232666
    10. ' reversed' → logprob: -13.88106632232666

Token 615: ' range' (ID: 3352)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1594211906194687
    2. 'range' → logprob: -2.03442120552063
    3. ' range' → logprob: -4.534420967102051
    4. ' seg' → logprob: -5.159420967102051
    5. '(seg' → logprob: -9.78442096710205
    6. 'segment' → logprob: -10.65942096710205
    7. '   ' → logprob: -10.90942096710205
    8. 're' → logprob: -11.40942096710205
    9. 'se' → logprob: -12.28442096710205
    10. ' reversed' → logprob: -12.53442096710205

Token 616: '(seg' (ID: 140462)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.001237848773598671
    2. '(seg' → logprob: -6.751237869262695
    3. ' seg' → logprob: -9.626237869262695
    4. '   ' → logprob: -13.751237869262695
    5. '_seg' → logprob: -15.376237869262695
    6. 'SEG' → logprob: -15.626237869262695
    7. 'segment' → logprob: -16.376237869262695
    8. '(' → logprob: -16.876237869262695
    9. '.seg' → logprob: -17.626237869262695
    10. 'Seg' → logprob: -17.876237869262695

Token 617: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.00039659533649683
    2. '_seg' → logprob: -8.000396728515625
    3. 'el' → logprob: -10.000396728515625
    4. 'El' → logprob: -12.375396728515625
    5. 'seg' → logprob: -12.375396728515625
    6. '_EL' → logprob: -13.625396728515625
    7. '_' → logprob: -13.750396728515625
    8. '_elem' → logprob: -14.125396728515625
    9. '_ent' → logprob: -14.250396728515625
    10. '_ele' → logprob: -14.250396728515625

Token 618: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05489705875515938
    2. ' -' → logprob: -2.9298970699310303
    3. '   ' → logprob: -12.30489730834961
    4. '1' → logprob: -12.42989730834961
    5. ' ' → logprob: -12.42989730834961
    6. '2' → logprob: -14.17989730834961
    7. ',' → logprob: -14.17989730834961
    8. '  ' → logprob: -14.42989730834961
    9. ' ' → logprob: -16.55489730834961
    10. ')-' → logprob: -16.80489730834961

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '2' → logprob: -10.875022888183594
    3. ' ' → logprob: -12.625022888183594
    4. '   ' → logprob: -14.625022888183594
    5. '
' → logprob: -16.750022888183594
    6. ',' → logprob: -17.250022888183594
    7. '```' → logprob: -17.250022888183594
    8. '１' → logprob: -17.437522888183594
    9. '    ' → logprob: -17.875022888183594
    10. '       ' → logprob: -17.875022888183594

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006562844850122929
    2. ',-' → logprob: -5.38156270980835
    3. ' ,' → logprob: -6.63156270980835
    4. '-' → logprob: -8.256563186645508
    5. ' ,-' → logprob: -8.881563186645508
    6. ' -' → logprob: -9.006563186645508
    7. '0' → logprob: -9.381563186645508
    8. '   ' → logprob: -11.256563186645508
    9. '1' → logprob: -13.506563186645508
    10. '```' → logprob: -14.006563186645508

Token 621: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003267639840487391
    2. ' ' → logprob: -8.125327110290527
    3. '-' → logprob: -10.500327110290527
    4. ' -' → logprob: -13.000327110290527
    5. '   ' → logprob: -14.250327110290527
    6. '
' → logprob: -16.00032615661621
    7. '    ' → logprob: -17.12532615661621
    8. '  ' → logprob: -17.12532615661621
    9. '	' → logprob: -17.37532615661621
    10. ',' → logprob: -17.50032615661621

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. '-' → logprob: -13.250020980834961
    4. ' -' → logprob: -16.50002098083496
    5. '
' → logprob: -16.87502098083496
    6. '   ' → logprob: -18.50002098083496
    7. '۰' → logprob: -18.50002098083496
    8. '０' → logprob: -18.62502098083496
    9. '1' → logprob: -19.37502098083496
    10. '  ' → logprob: -19.50002098083496

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04871624708175659
    2. '-' → logprob: -3.1737163066864014
    3. ',-' → logprob: -5.798716068267822
    4. ' ,' → logprob: -6.673716068267822
    5. ' -' → logprob: -6.923716068267822
    6. '   ' → logprob: -8.04871654510498
    7. ' ,-' → logprob: -9.29871654510498
    8. '-,' → logprob: -12.29871654510498
    9. '  ' → logprob: -13.17371654510498
    10. '0' → logprob: -13.79871654510498

Token 624: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048594869673252106
    2. ' -' → logprob: -3.0485949516296387
    3. '   ' → logprob: -13.04859447479248
    4. '0' → logprob: -13.17359447479248
    5. '	' → logprob: -13.79859447479248
    6. '-i' → logprob: -13.79859447479248
    7. ' ' → logprob: -13.92359447479248
    8. '    ' → logprob: -15.29859447479248
    9. '  ' → logprob: -15.29859447479248
    10. '−' → logprob: -16.923595428466797

Token 625: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7041501402854919
    2. '1' → logprob: -0.7041501402854919
    3. 'i' → logprob: -5.204150199890137
    4. ' -' → logprob: -5.329150199890137
    5. ')' → logprob: -7.579150199890137
    6. '):
' → logprob: -10.579150199890137
    7. '-i' → logprob: -10.704150199890137
    8. '   ' → logprob: -11.704150199890137
    9. ' i' → logprob: -11.704150199890137
    10. ',' → logprob: -12.204150199890137

Token 626: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21080777049064636
    2. '):' → logprob: -1.8358078002929688
    3. ',' → logprob: -4.335807800292969
    4. '):
' → logprob: -5.085807800292969
    5. ' -' → logprob: -5.210807800292969
    6. ' ):' → logprob: -5.835807800292969
    7. ',-' → logprob: -5.960807800292969
    8. ')' → logprob: -8.960807800292969
    9. ' ,' → logprob: -9.710807800292969
    10. '):-' → logprob: -9.835807800292969

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041132718324661255
    2. '   ' → logprob: -3.541132688522339
    3. ' SEG' → logprob: -4.791132926940918
    4. 'SEG' → logprob: -6.166132926940918
    5. '_SEG' → logprob: -7.916132926940918
    6. ',' → logprob: -8.291132926940918
    7. '    ' → logprob: -9.791132926940918
    8. '(seg' → logprob: -10.541132926940918
    9. '_seg' → logprob: -10.666132926940918
    10. ' ' → logprob: -10.791132926940918

Token 628: ' SEG' (ID: 90192)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36033695936203003
    2. 'SEG' (adapté à ' SEG') → logprob: -1.8603370189666748
    3. '   ' → logprob: -2.735337018966675
    4. 'l' → logprob: -3.235337018966675
    5. 'left' → logprob: -3.985337018966675
    6. ' SEG' → logprob: -4.485336780548096
    7. 'seg' → logprob: -5.860336780548096
    8. '           ' → logprob: -6.110336780548096
    9. 'if' → logprob: -6.235336780548096
    10. ' left' → logprob: -6.360336780548096

Token 629: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.375008583068848
    3. ' [' → logprob: -13.375008583068848
    4. '[I' → logprob: -14.375008583068848
    5. 'i' → logprob: -14.500008583068848
    6. '```' → logprob: -15.000008583068848
    7. '=' → logprob: -15.500008583068848
    8. ')[' → logprob: -15.750008583068848
    9. '
' → logprob: -15.875008583068848
    10. '(i' → logprob: -16.000009536743164

Token 630: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5776429772377014
    2. '=' → logprob: -0.8276429772377014
    3. ')' → logprob: -7.327642917633057
    4. '=min' → logprob: -7.452642917633057
    5. ')=' → logprob: -8.202643394470215
    6. ']' → logprob: -9.327643394470215
    7. ']=' → logprob: -9.827643394470215
    8. '=max' → logprob: -10.827643394470215
    9. ',' → logprob: -11.827643394470215
    10. '=lambda' → logprob: -12.452643394470215

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008700020611286163
    2. ' =' → logprob: -4.758699893951416
    3. '=min' → logprob: -9.383700370788574
    4. '=max' → logprob: -13.883700370788574
    5. '=
' → logprob: -16.758699417114258
    6. '=lambda' → logprob: -17.008699417114258
    7. '＝' → logprob: -17.383699417114258
    8. '=index' → logprob: -17.383699417114258
    9. ')=' → logprob: -17.508699417114258
    10. '=re' → logprob: -17.508699417114258

Token 632: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.015323680825531483
    2. '(min' → logprob: -4.265323638916016
    3. ' min' → logprob: -7.265323638916016
    4. '(' → logprob: -9.015323638916016
    5. 'max' → logprob: -9.265323638916016
    6. 'seg' → logprob: -9.640323638916016
    7. 'tuple' → logprob: -10.265323638916016
    8. 'MIN' → logprob: -10.765323638916016
    9. 'SEG' → logprob: -10.890323638916016
    10. '(
' → logprob: -11.390323638916016

Token 633: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.008129963040119e-06
    2. '((' → logprob: -12.500003814697266
    3. '(SE' → logprob: -16.000003814697266
    4. '(seg' → logprob: -16.125003814697266
    5. '(
' → logprob: -17.000003814697266
    6. '([' → logprob: -17.250003814697266
    7. '[' → logprob: -18.750003814697266
    8. 'SEG' → logprob: -18.875003814697266
    9. ' (' → logprob: -19.625003814697266
    10. 'a' → logprob: -19.875003814697266

Token 634: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.5765720009803772
    2. '(' → logprob: -0.8265720009803772
    3. ' SEG' → logprob: -7.826571941375732
    4. '[' → logprob: -9.07657241821289
    5. '_SEG' → logprob: -9.70157241821289
    6. 'seg' → logprob: -10.70157241821289
    7. ')' → logprob: -11.20157241821289
    8. 'SE' → logprob: -11.70157241821289
    9. '   ' → logprob: -12.95157241821289
    10. '(
' → logprob: -13.20157241821289

Token 635: '[i' (ID: 1768)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.569152295589447
    2. '[' → logprob: -0.944152295589447
    3. 'SEG' → logprob: -3.444152355194092
    4. '[i' → logprob: -4.569152355194092
    5. '2' → logprob: -7.569152355194092
    6. 'i' → logprob: -7.694152355194092
    7. ' SEG' → logprob: -7.819152355194092
    8. '(i' → logprob: -8.319151878356934
    9. '[
' → logprob: -8.569151878356934
    10. '(SE' → logprob: -8.569151878356934

Token 636: '*' (ID: 9)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10360720753669739
    2. '*' → logprob: -2.478607177734375
    3. '],' → logprob: -4.728607177734375
    4. 'i' → logprob: -5.728607177734375
    5. '[i' → logprob: -6.978607177734375
    6. ' <<' → logprob: -7.478607177734375
    7. ',' → logprob: -8.478607177734375
    8. '[' → logprob: -8.978607177734375
    9. '   ' → logprob: -9.103607177734375
    10. '2' → logprob: -9.228607177734375

Token 637: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ',' → logprob: -17.125019073486328
    4. '  ' → logprob: -18.125019073486328
    5. '   ' → logprob: -18.500019073486328
    6. '    ' → logprob: -18.500019073486328
    7. ')' → logprob: -18.500019073486328
    8. 'i' → logprob: -18.625019073486328
    9. '	' → logprob: -19.125019073486328
    10. '```' → logprob: -19.750019073486328

Token 638: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10093507915735245
    2. ',' → logprob: -2.8509349822998047
    3. ']' → logprob: -3.3509349822998047
    4. ' ],' → logprob: -6.350934982299805
    5. ' ,' → logprob: -6.725934982299805
    6. '),' → logprob: -10.100934982299805
    7. 'i' → logprob: -10.350934982299805
    8. '1' → logprob: -10.475934982299805
    9. '   ' → logprob: -10.725934982299805
    10. ' ' → logprob: -11.100934982299805

Token 639: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.3869159519672394
    2. ' SEG' → logprob: -1.136915922164917
    3. 'SE' → logprob: -10.636916160583496
    4. ' ' → logprob: -12.011916160583496
    5. ' SE' → logprob: -12.136916160583496
    6. '_SEG' → logprob: -12.261916160583496
    7. '   ' → logprob: -13.636916160583496
    8. 'SEQ' → logprob: -13.761916160583496
    9. '  ' → logprob: -14.011916160583496
    10. 'seg' → logprob: -14.386916160583496

Token 640: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00022082125360611826
    2. '[' → logprob: -8.625221252441406
    3. 'i' → logprob: -10.375221252441406
    4. '[
' → logprob: -12.625221252441406
    5. ' [' → logprob: -12.625221252441406
    6. ' i' → logprob: -14.375221252441406
    7. '
' → logprob: -14.375221252441406
    8. '   ' → logprob: -14.500221252441406
    9. ' ' → logprob: -14.625221252441406
    10. '(i' → logprob: -14.625221252441406

Token 641: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5757418274879456
    2. 'i' → logprob: -1.2007417678833008
    3. '[i' → logprob: -2.325741767883301
    4. '*i' → logprob: -4.075741767883301
    5. '[' → logprob: -5.325741767883301
    6. ' i' → logprob: -5.450741767883301
    7. '+' → logprob: -5.825741767883301
    8. '+i' → logprob: -5.950741767883301
    9. ' ' → logprob: -6.325741767883301
    10. '2' → logprob: -6.575741767883301

Token 642: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015921075828373432
    2. '1' → logprob: -6.75159215927124
    3. ' ' → logprob: -8.626591682434082
    4. 'i' → logprob: -9.126591682434082
    5. '   ' → logprob: -10.001591682434082
    6. '+' → logprob: -10.251591682434082
    7. '  ' → logprob: -11.626591682434082
    8. '    ' → logprob: -11.751591682434082
    9. ' i' → logprob: -12.001591682434082
    10. '(i' → logprob: -12.126591682434082

Token 643: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01822357438504696
    2. '+i' → logprob: -4.768223762512207
    3. ' +' → logprob: -5.018223762512207
    4. '])' → logprob: -6.018223762512207
    5. 'i' → logprob: -8.143223762512207
    6. ' ' → logprob: -9.268223762512207
    7. ')' → logprob: -10.143223762512207
    8. ']' → logprob: -10.768223762512207
    9. '   ' → logprob: -10.893223762512207
    10. '1' → logprob: -11.268223762512207

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '])' → logprob: -18.375001907348633
    4. 'i' → logprob: -18.750001907348633
    5. ')' → logprob: -19.625001907348633
    6. '１' → logprob: -19.875001907348633
    7. '2' → logprob: -20.000001907348633
    8. '```' → logprob: -20.125001907348633
    9. '0' → logprob: -20.437501907348633
    10. '+' → logprob: -21.000001907348633

Token 645: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030400342075154185
    2. ' )' → logprob: -8.125304222106934
    3. ')
' → logprob: -12.000304222106934
    4. '   ' → logprob: -14.000304222106934
    5. ')

' → logprob: -15.875304222106934
    6. '))' → logprob: -15.875304222106934
    7. ' ' → logprob: -16.375303268432617
    8. ')
' → logprob: -16.375303268432617
    9. ')`' → logprob: -16.375303268432617
    10. '	' → logprob: -16.750303268432617

Token 646: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023865913972258568
    2. '<|end|>' → logprob: -6.252386569976807
    3. '```' → logprob: -7.877386569976807
    4. ')' → logprob: -11.127387046813965
    5. '   ' → logprob: -11.627387046813965
    6. '<|end|>' → logprob: -11.627387046813965
    7. '
' → logprob: -12.002387046813965
    8. '#' → logprob: -12.127387046813965
    9. '[' → logprob: -12.252387046813965
    10. '  
' → logprob: -12.377387046813965

Token 647: ' update' (ID: 4027)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -1.264897108078003
    2. ' query' → logprob: -1.389897108078003
    3. ' segment' → logprob: -2.014897108078003
    4. 'segment' → logprob: -2.389897108078003
    5. 'range' → logprob: -3.514897108078003
    6. ' update' → logprob: -3.514897108078003
    7. 'l' → logprob: -3.514897108078003
    8. 'update' → logprob: -3.764897108078003
    9. ' e' → logprob: -4.014897346496582
    10. 'e' → logprob: -4.389897346496582

Token 648: '(n' (ID: 2406)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0006502442411147058
    2. '(' → logprob: -7.750650405883789
    3. '_' → logprob: -9.375650405883789
    4. '_segments' → logprob: -10.125650405883789
    5. 'segment' → logprob: -10.750650405883789
    6. '_seg' → logprob: -11.250650405883789
    7. '(segment' → logprob: -11.375650405883789
    8. '_SEG' → logprob: -11.625650405883789
    9. '_token' → logprob: -11.750650405883789
    10. 'Segment' → logprob: -12.000650405883789

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055740658193826675
    2. ' ,' → logprob: -3.5557405948638916
    3. ')' → logprob: -4.055740833282471
    4. '):' → logprob: -5.305740833282471
    5. '):
' → logprob: -6.805740833282471
    6. ' )' → logprob: -7.430740833282471
    7. ',
' → logprob: -7.930740833282471
    8. '+' → logprob: -8.305740356445312
    9. '<|end|>' → logprob: -8.305740356445312
    10. ' +' → logprob: -8.805740356445312

Token 650: ' x' (ID: 1215)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0364222526550293
    2. 'x' → logprob: -1.4114222526550293
    3. 'val' → logprob: -1.5364222526550293
    4. 'v' → logprob: -2.0364222526550293
    5. 'p' → logprob: -4.536422252655029
    6. 'k' → logprob: -4.911422252655029
    7. ' value' → logprob: -4.911422252655029
    8. ' val' → logprob: -5.161422252655029
    9. 'seg' → logprob: -5.161422252655029
    10. ' v' → logprob: -5.411422252655029

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016468495596200228
    2. '):' → logprob: -6.876646995544434
    3. ' ,' → logprob: -7.876646995544434
    4. '):
' → logprob: -8.501646995544434
    5. ',x' → logprob: -11.376646995544434
    6. '   ' → logprob: -12.251646995544434
    7. ')' → logprob: -12.626646995544434
    8. ',value' → logprob: -13.251646995544434
    9. 'value' → logprob: -13.501646995544434
    10. ' ' → logprob: -13.751646995544434

Token 652: ' seg' (ID: 3055)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5586314797401428
    2. 'value' → logprob: -1.683631420135498
    3. 'SEG' → logprob: -1.683631420135498
    4. 'v' → logprob: -3.433631420135498
    5. 'seg' → logprob: -5.183631420135498
    6. ' val' → logprob: -5.683631420135498
    7. 'y' → logprob: -5.933631420135498
    8. 'E' → logprob: -5.933631420135498
    9. ' value' → logprob: -6.058631420135498
    10. 'p' → logprob: -6.808631420135498

Token 653: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.1299976259469986
    2. 'el' → logprob: -2.379997730255127
    3. '_val' → logprob: -4.504997730255127
    4. ',' → logprob: -4.879997730255127
    5. 'val' → logprob: -6.504997730255127
    6. 'x' → logprob: -6.629997730255127
    7. '):
' → logprob: -7.129997730255127
    8. ')' → logprob: -7.254997730255127
    9. '_idx' → logprob: -7.254997730255127
    10. 'v' → logprob: -7.504997730255127

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005463610286824405
    2. '):' → logprob: -8.2505464553833
    3. '):
' → logprob: -8.8755464553833
    4. ' ,' → logprob: -9.5005464553833
    5. '   ' → logprob: -10.0005464553833
    6. '):
' → logprob: -11.3755464553833
    7. '=' → logprob: -12.6255464553833
    8. ')' → logprob: -13.5005464553833
    9. '_,' → logprob: -13.7505464553833
    10. '  ' → logprob: -13.9380464553833

Token 655: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.6374372839927673
    2. 'val' → logprob: -1.262437343597412
    3. 'value' → logprob: -2.137437343597412
    4. 'x' → logprob: -3.887437343597412
    5. 'E' → logprob: -4.137437343597412
    6. 'v' → logprob: -4.387437343597412
    7. ' SEG' → logprob: -5.137437343597412
    8. ' val' → logprob: -5.137437343597412
    9. ' value' → logprob: -5.887437343597412
    10. 'VAL' → logprob: -6.512437343597412

Token 656: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8341181874275208
    2. '):
' → logprob: -0.9591181874275208
    3. '):' → logprob: -1.709118127822876
    4. '):
' → logprob: -7.334118366241455
    5. '   ' → logprob: -7.959118366241455
    6. ')' → logprob: -8.584117889404297
    7. ',x' → logprob: -8.959117889404297
    8. ' ,' → logprob: -10.209117889404297
    9. ' ):
' → logprob: -10.334117889404297
    10. ' ):' → logprob: -10.584117889404297

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6600614190101624
    2. ':' → logprob: -1.2850613594055176
    3. ':
' → logprob: -1.9100613594055176
    4. '):' → logprob: -3.5350613594055176
    5. '):
' → logprob: -4.035061359405518
    6. ' :' → logprob: -5.660061359405518
    7. ',' → logprob: -6.410061359405518
    8. '
' → logprob: -6.535061359405518
    9. ' ' → logprob: -6.785061359405518
    10. ' :
' → logprob: -6.910061359405518

Token 658: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010836871340870857
    2. '   ' → logprob: -4.760837078094482
    3. ' n' → logprob: -6.510837078094482
    4. 'x' → logprob: -7.635837078094482
    5. '	n' → logprob: -8.385836601257324
    6. ' ' → logprob: -11.635836601257324
    7. 'i' (adapté à ' i') → logprob: -12.135836601257324
    8. '  ' → logprob: -13.635836601257324
    9. '   ' → logprob: -13.760836601257324
    10. ' x' → logprob: -13.885836601257324

Token 659: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17209592461585999
    2. ' =' → logprob: -1.9220958948135376
    3. '=i' → logprob: -4.672095775604248
    4. 'nd' → logprob: -7.172095775604248
    5. 'n' → logprob: -7.422095775604248
    6. '=n' → logprob: -7.547095775604248
    7. 'nt' → logprob: -8.922096252441406
    8. 'dx' → logprob: -9.422096252441406
    9. '=
' → logprob: -9.547096252441406
    10. '+=' → logprob: -9.672096252441406

Token 660: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018716610968112946
    2. 'x' → logprob: -4.018716812133789
    3. 'seg' → logprob: -7.518716812133789
    4. ' n' → logprob: -11.143716812133789
    5. '	n' → logprob: -12.643716812133789
    6. '   ' → logprob: -12.643716812133789
    7. ' x' → logprob: -14.393716812133789
    8. 'i' → logprob: -14.518716812133789
    9. '[n' → logprob: -14.643716812133789
    10. '(n' → logprob: -14.768716812133789

Token 661: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09446925669908524
    2. ' +' → logprob: -3.0944693088531494
    3. '+=' → logprob: -3.2194693088531494
    4. '=' → logprob: -5.84446907043457
    5. ' +=' → logprob: -6.34446907043457
    6. ' =' → logprob: -8.84446907043457
    7. '+i' → logprob: -10.21946907043457
    8. '   ' → logprob: -11.21946907043457
    9. '+
' → logprob: -11.71946907043457
    10. 'i' → logprob: -12.71946907043457

Token 662: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.106736039626412e-05
    2. ' seg' → logprob: -10.500031471252441
    3. 'x' → logprob: -12.875031471252441
    4. '(seg' → logprob: -14.375031471252441
    5. '   ' → logprob: -15.375031471252441
    6. ' ' → logprob: -17.125030517578125
    7. 's' → logprob: -17.500030517578125
    8. '_seg' → logprob: -17.750030517578125
    9. '```' → logprob: -17.750030517578125
    10. 'sig' → logprob: -18.000030517578125

Token 663: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.016158005222678185
    2. 'el' → logprob: -4.141158103942871
    3. '	el' → logprob: -9.141158103942871
    4. 'El' → logprob: -12.516158103942871
    5. '_' → logprob: -12.891158103942871
    6. ' el' → logprob: -13.141158103942871
    7. '   ' → logprob: -13.391158103942871
    8. '```' → logprob: -13.391158103942871
    9. ' _' → logprob: -14.516158103942871
    10. ' ' → logprob: -14.891158103942871

Token 664: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017818007618188858
    2. 'SEG' → logprob: -5.267817974090576
    3. '  
' → logprob: -6.017817974090576
    4. '   ' → logprob: -6.017817974090576
    5. '    
' → logprob: -6.392817974090576
    6. ' 
' → logprob: -6.892817974090576
    7. '=' → logprob: -7.017817974090576
    8. 'x' → logprob: -7.267817974090576
    9. '[' → logprob: -7.517817974090576
    10. '   
' → logprob: -7.642817974090576

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15789398550987244
    2. '=' → logprob: -3.4078938961029053
    3. 'SEG' → logprob: -3.4078938961029053
    4. '
' → logprob: -3.7828938961029053
    5. '    
' → logprob: -4.282894134521484
    6. ',' → logprob: -4.282894134521484
    7. '[' → logprob: -4.532894134521484
    8. ' =' → logprob: -5.782894134521484
    9. '  
' → logprob: -6.282894134521484
    10. '   
' → logprob: -6.282894134521484

Token 666: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.01839480921626091
    2. '   ' → logprob: -4.143394947052002
    3. 'while' → logprob: -6.268394947052002
    4. ' SEG' → logprob: -8.018394470214844
    5. 'i' → logprob: -10.393394470214844
    6. '_SEG' → logprob: -10.518394470214844
    7. 'x' → logprob: -10.518394470214844
    8. 'seg' → logprob: -11.643394470214844
    9. '    
' → logprob: -12.143394470214844
    10. 'SE' → logprob: -12.268394470214844

Token 667: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.375008583068848
    4. '```' → logprob: -15.000008583068848
    5. '[I' → logprob: -15.500008583068848
    6. '[n' → logprob: -15.750008583068848
    7. '[
' → logprob: -16.000009536743164
    8. '
' → logprob: -16.375009536743164
    9. '[x' → logprob: -17.000009536743164
    10. '\[' → logprob: -17.625009536743164

Token 668: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25221434235572815
    2. ' =' → logprob: -1.5022143125534058
    3. ')' → logprob: -8.502214431762695
    4. ')=' → logprob: -9.752214431762695
    5. ']=' → logprob: -11.502214431762695
    6. ']' → logprob: -12.002214431762695
    7. '	' → logprob: -13.377214431762695
    8. '>' → logprob: -13.377214431762695
    9. '<|end|>' → logprob: -14.252214431762695
    10. '＝' → logprob: -14.502214431762695

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005929505452513695
    2. ' =' → logprob: -5.130929470062256
    3. '=x' → logprob: -15.130929946899414
    4. '=(' → logprob: -15.380929946899414
    5. '＝' → logprob: -16.130929946899414
    6. '=
' → logprob: -16.880929946899414
    7. '.=' → logprob: -17.255929946899414
    8. ')=' → logprob: -17.380929946899414
    9. '_=' → logprob: -17.380929946899414
    10. '=min' → logprob: -17.630929946899414

Token 670: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00047214110963977873
    2. ' x' → logprob: -8.125472068786621
    3. '(' → logprob: -9.000472068786621
    4. '(x' → logprob: -10.250472068786621
    5. 'min' → logprob: -11.625472068786621
    6. ' (' → logprob: -12.000472068786621
    7. '(min' → logprob: -13.375472068786621
    8. '(
' → logprob: -15.375472068786621
    9. ' min' → logprob: -15.750472068786621
    10. '(E' → logprob: -16.375473022460938

Token 671: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8557013273239136
    2. '   ' → logprob: -1.3557013273239136
    3. ' while' → logprob: -2.355701446533203
    4. ' i' → logprob: -2.480701446533203
    5. 'while' → logprob: -2.480701446533203
    6. ';i' → logprob: -3.855701446533203
    7. ',i' → logprob: -3.855701446533203
    8. ';' → logprob: -5.730701446533203
    9. '	i' → logprob: -5.980701446533203
    10. '	while' → logprob: -6.480701446533203

Token 672: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7825892567634583
    2. '   ' → logprob: -0.7825892567634583
    3. 'while' → logprob: -3.2825891971588135
    4. ' while' → logprob: -3.5325891971588135
    5. ' i' → logprob: -4.032589435577393
    6. '  ' → logprob: -8.282588958740234
    7. ',i' → logprob: -8.407588958740234
    8. ';i' → logprob: -9.032588958740234
    9. '	i' → logprob: -9.282588958740234
    10. '	while' → logprob: -9.532588958740234

Token 673: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.025141945108771324
    2. 'while' → logprob: -3.775141954421997
    3. '   ' → logprob: -6.275141716003418
    4. ' while' → logprob: -12.150141716003418
    5. ' i' → logprob: -12.275141716003418
    6. '```' → logprob: -13.400141716003418
    7. '	while' → logprob: -15.900141716003418
    8. '
' → logprob: -16.150142669677734
    9. '	i' → logprob: -16.150142669677734
    10. '`' → logprob: -16.400142669677734

Token 674: ' >>=' (ID: 81952)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.46912631392478943
    2. ' //' → logprob: -1.7191263437271118
    3. '>>' → logprob: -2.0941262245178223
    4. ' >>=' → logprob: -2.8441262245178223
    5. '//' → logprob: -4.344126224517822
    6. '=' → logprob: -7.719126224517822
    7. '   ' → logprob: -8.96912670135498
    8. '>' → logprob: -8.96912670135498
    9. '	' → logprob: -9.71912670135498
    10. ' ' → logprob: -10.34412670135498

Token 675: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.75
    4. '=' → logprob: -17.0
    5. 'i' → logprob: -17.875
    6. '
' → logprob: -18.125
    7. '0' → logprob: -18.125
    8. '１' → logprob: -18.375
    9. '   ' → logprob: -18.75
    10. '' → logprob: -18.875

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. '```' → logprob: -16.75
    4. '0' → logprob: -17.125
    5. '   ' → logprob: -17.625
    6. '
' → logprob: -17.75
    7. 'i' → logprob: -18.0
    8. '１' → logprob: -18.5
    9. '``' → logprob: -18.75
    10. '' → logprob: -18.75

Token 677: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00543367350474
    2. 'while' → logprob: -5.505433559417725
    3. ' while' → logprob: -6.880433559417725
    4. '	while' → logprob: -8.505434036254883
    5. '
' → logprob: -9.880434036254883
    6. '  ' → logprob: -10.130434036254883
    7. ' ' → logprob: -11.130434036254883
    8. ',' → logprob: -11.880434036254883
    9. '    
' → logprob: -12.255434036254883
    10. '    ' → logprob: -13.505434036254883

Token 678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5357431173324585
    2. 'while' → logprob: -0.9107431173324585
    3. ' while' → logprob: -4.410743236541748
    4. '	while' → logprob: -8.28574275970459
    5. 'i' → logprob: -9.66074275970459
    6. ' ' → logprob: -10.91074275970459
    7. '```' → logprob: -10.91074275970459
    8. '  ' → logprob: -11.03574275970459
    9. '
' → logprob: -12.16074275970459
    10. 'While' → logprob: -12.41074275970459

Token 679: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0016738721169531345
    2. '   ' → logprob: -6.501673698425293
    3. ' while' → logprob: -8.751673698425293
    4. '	while' → logprob: -11.251673698425293
    5. 'While' → logprob: -15.626673698425293
    6. '```' → logprob: -16.25167465209961
    7. ' ' → logprob: -17.75167465209961
    8. '
' → logprob: -18.50167465209961
    9. '    
' → logprob: -18.62667465209961
    10. '  ' → logprob: -19.25167465209961

Token 680: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0788901224732399
    2. ' i' → logprob: -2.578890085220337
    3. '	i' → logprob: -15.578889846801758
    4. ' ' → logprob: -15.953889846801758
    5. '(i' → logprob: -17.078889846801758
    6. '   ' → logprob: -17.328889846801758
    7. ' ' → logprob: -17.703889846801758
    8. '  ' → logprob: -18.203889846801758
    9. '0' → logprob: -18.703889846801758
    10. '1' → logprob: -20.078889846801758

Token 681: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007423464208841324
    2. ' >' → logprob: -5.132423400878906
    3. '>=' → logprob: -6.632423400878906
    4. '   ' → logprob: -9.007423400878906
    5. ' >=' → logprob: -10.382423400878906
    6. ':' → logprob: -11.757423400878906
    7. '&gt' → logprob: -12.507423400878906
    8. '>:' → logprob: -12.507423400878906
    9. ' ' → logprob: -13.007423400878906
    10. '≥' → logprob: -13.882423400878906

Token 682: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.375335693359375
    4. ' ' → logprob: -17.625335693359375
    5. '	' → logprob: -17.875335693359375
    6. '  ' → logprob: -18.000335693359375
    7. '```' → logprob: -18.750335693359375
    8. '０' → logprob: -19.000335693359375
    9. '۰' → logprob: -19.000335693359375
    10. '    ' → logprob: -19.812835693359375

Token 683: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.000028610229492
    4. '  ' → logprob: -18.250028610229492
    5. '	' → logprob: -18.875028610229492
    6. '０' → logprob: -19.375028610229492
    7. ' ' → logprob: -19.437528610229492
    8. '۰' → logprob: -19.500028610229492
    9. '1' → logprob: -19.562528610229492
    10. '00' → logprob: -19.687528610229492

Token 684: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3946855366230011
    2. ':' → logprob: -1.1446855068206787
    3. '   ' → logprob: -6.019685745239258
    4. ' and' → logprob: -6.019685745239258
    5. ' :
' → logprob: -6.394685745239258
    6. ' :' → logprob: -7.894685745239258
    7. 'and' → logprob: -7.894685745239258
    8. '=' → logprob: -9.269685745239258
    9. ',' → logprob: -9.269685745239258
    10. '):
' → logprob: -9.519685745239258

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028622967656701803
    2. '   ' → logprob: -6.502862453460693
    3. 'SEG' → logprob: -8.127861976623535
    4. ' if' → logprob: -8.252861976623535
    5. 'if' → logprob: -8.502861976623535
    6. ' SEG' → logprob: -8.877861976623535
    7. 's' → logprob: -9.002861976623535
    8. ',' → logprob: -9.252861976623535
    9. '1' → logprob: -9.252861976623535
    10. '    ' → logprob: -10.752861976623535

Token 686: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.005655487067997456
    2. ' SEG' → logprob: -5.755655288696289
    3. '       ' → logprob: -6.255655288696289
    4. '   ' → logprob: -7.755655288696289
    5. '           ' → logprob: -9.630655288696289
    6. '_SEG' → logprob: -10.880655288696289
    7. 'seg' → logprob: -11.505655288696289
    8. 'SE' → logprob: -12.130655288696289
    9. 'SEQ' → logprob: -12.255655288696289
    10. 'SEC' → logprob: -12.880655288696289

Token 687: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.292571485042572
    2. ' =' → logprob: -1.4175715446472168
    3. '   ' → logprob: -4.792571544647217
    4. '[' → logprob: -6.792571544647217
    5. '    ' → logprob: -7.917571544647217
    6. 'SEG' → logprob: -8.167571067810059
    7. ' ' → logprob: -8.792571067810059
    8. '=
' → logprob: -9.042571067810059
    9. ',' → logprob: -9.042571067810059
    10. ' SEG' → logprob: -9.167571067810059

Token 688: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198161602020264
    2. '=' → logprob: -1.5019816160202026
    3. '=min' → logprob: -9.876981735229492
    4. 'min' → logprob: -14.751981735229492
    5. '   ' → logprob: -15.001981735229492
    6. ')' → logprob: -16.001981735229492
    7. '>' → logprob: -16.126981735229492
    8. ' min' → logprob: -16.626981735229492
    9. ' ' → logprob: -16.751981735229492
    10. ']' → logprob: -16.751981735229492

Token 689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132634460926056
    2. '=' → logprob: -1.3132634162902832
    3. '=min' → logprob: -13.313263893127441
    4. 'min' → logprob: -17.063262939453125
    5. ' min' → logprob: -17.188262939453125
    6. '=
' → logprob: -18.938262939453125
    7. ' ' → logprob: -19.313262939453125
    8. '   ' → logprob: -19.563262939453125
    9. '＝' → logprob: -19.938262939453125
    10. ')' → logprob: -19.938262939453125

Token 690: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029750604182481766
    2. ' min' → logprob: -3.5297505855560303
    3. '	min' → logprob: -16.27975082397461
    4. 'max' → logprob: -17.77975082397461
    5. '(min' → logprob: -18.77975082397461
    6. ' ' → logprob: -19.02975082397461
    7. 'm' → logprob: -19.15475082397461
    8. '_min' → logprob: -20.52975082397461
    9. '   ' → logprob: -20.65475082397461
    10. 'mini' → logprob: -20.90475082397461

Token 691: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'SEG' → logprob: -16.25
    3. '((' → logprob: -16.75
    4. '(
' → logprob: -17.125
    5. '(SE' → logprob: -17.875
    6. '(S' → logprob: -19.25
    7. '(seg' → logprob: -19.25
    8. '	' → logprob: -20.75
    9. ' SEG' → logprob: -21.375
    10. 'a' → logprob: -21.5

Token 692: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.005236360710114241
    2. '(' → logprob: -5.2552361488342285
    3. ' SEG' → logprob: -12.880236625671387
    4. '_SEG' → logprob: -16.75523567199707
    5. 'SE' → logprob: -18.50523567199707
    6. '[' → logprob: -18.75523567199707
    7. 'seg' → logprob: -19.00523567199707
    8. '(seg' → logprob: -19.00523567199707
    9. 'SEQ' → logprob: -20.13023567199707
    10. '(S' → logprob: -20.13023567199707

Token 693: '[i' (ID: 1768)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02731568180024624
    2. '[' → logprob: -4.152315616607666
    3. '[i' → logprob: -5.527315616607666
    4. 'SEG' → logprob: -5.777315616607666
    5. '(i' → logprob: -5.902315616607666
    6. 'i' → logprob: -7.152315616607666
    7. '(SE' → logprob: -8.277316093444824
    8. '2' → logprob: -8.902316093444824
    9. ' SEG' → logprob: -10.277316093444824
    10. '(seg' → logprob: -10.277316093444824

Token 694: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001666015712544322
    2. '2' → logprob: -7.251666069030762
    3. '[' → logprob: -7.251666069030762
    4. '[i' → logprob: -9.126666069030762
    5. '<<' → logprob: -9.251666069030762
    6. ' *' → logprob: -10.751666069030762
    7. 'i' → logprob: -11.126666069030762
    8. '   ' → logprob: -14.001666069030762
    9. ']' → logprob: -14.251666069030762
    10. ' ' → logprob: -14.251666069030762

Token 695: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.567575034452602e-05
    2. '*' → logprob: -9.87509536743164
    3. 'i' → logprob: -10.25009536743164
    4. ' ' → logprob: -13.25009536743164
    5. '1' → logprob: -13.62509536743164
    6. '   ' → logprob: -13.75009536743164
    7. ',' → logprob: -14.12509536743164
    8. 'x' → logprob: -14.12509536743164
    9. 'index' → logprob: -14.37509536743164
    10. '<<' → logprob: -14.37509536743164

Token 696: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012018970446661115
    2. ' ,' → logprob: -6.75120210647583
    3. '],' → logprob: -10.626201629638672
    4. '),' → logprob: -13.126201629638672
    5. ',i' → logprob: -13.251201629638672
    6. '   ' → logprob: -14.126201629638672
    7. ' ' → logprob: -14.126201629638672
    8. '>,' → logprob: -14.126201629638672
    9. ',
' → logprob: -14.626201629638672
    10. '‌,' → logprob: -14.876201629638672

Token 697: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.1269386112689972
    2. ' SEG' → logprob: -2.126938581466675
    3. '_SEG' → logprob: -12.251938819885254
    4. 'SE' → logprob: -13.001938819885254
    5. '   ' → logprob: -13.376938819885254
    6. ' ' → logprob: -14.501938819885254
    7. '       ' → logprob: -15.001938819885254
    8. '  ' → logprob: -15.126938819885254
    9. 'SEQ' → logprob: -15.376938819885254
    10. '    ' → logprob: -15.751938819885254

Token 698: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00034261439577676356
    2. 'i' → logprob: -8.12534236907959
    3. '[' → logprob: -10.12534236907959
    4. '*i' → logprob: -13.12534236907959
    5. '2' → logprob: -13.62534236907959
    6. '   ' → logprob: -14.00034236907959
    7. '{i' → logprob: -14.12534236907959
    8. '(i' → logprob: -14.75034236907959
    9. '1' → logprob: -14.87534236907959
    10. '_i' → logprob: -15.50034236907959

Token 699: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2887721061706543
    2. '+' → logprob: -2.6637721061706543
    3. 'i' → logprob: -2.6637721061706543
    4. '*i' → logprob: -2.9137721061706543
    5. '])' → logprob: -4.038772106170654
    6. ']' → logprob: -4.163772106170654
    7. '+i' → logprob: -4.413772106170654
    8. ' i' → logprob: -5.663772106170654
    9. ' ' → logprob: -6.163772106170654
    10. '  ' → logprob: -6.413772106170654

Token 700: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.040331777185201645
    2. 'i' → logprob: -3.2903318405151367
    3. '+' → logprob: -6.665331840515137
    4. '2' → logprob: -7.665331840515137
    5. ' ' → logprob: -8.415331840515137
    6. ' i' → logprob: -9.415331840515137
    7. '+i' → logprob: -9.415331840515137
    8. '(i' → logprob: -9.915331840515137
    9. '   ' → logprob: -9.915331840515137
    10. '  ' → logprob: -10.790331840515137

Token 701: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005916363443247974
    2. '+)' → logprob: -8.250591278076172
    3. '])' → logprob: -8.625591278076172
    4. ' +' → logprob: -9.125591278076172
    5. '1' → logprob: -10.750591278076172
    6. '+i' → logprob: -11.375591278076172
    7. ']+' → logprob: -13.250591278076172
    8. ')' → logprob: -13.250591278076172
    9. '+]' → logprob: -13.500591278076172
    10. ']' → logprob: -13.625591278076172

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'i' → logprob: -15.25000286102295
    4. '(i' → logprob: -17.625001907348633
    5. '+' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ']' → logprob: -18.625001907348633
    8. '
' → logprob: -19.312501907348633
    9. '])' → logprob: -19.312501907348633
    10. ')' → logprob: -19.500001907348633

Token 703: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023297889158129692
    2. ')
' → logprob: -3.7732977867126465
    3. ' )' → logprob: -10.273298263549805
    4. ')i' → logprob: -12.023298263549805
    5. '   ' → logprob: -12.648298263549805
    6. ' )
' → logprob: -12.773298263549805
    7. '       ' → logprob: -12.898298263549805
    8. ')
' → logprob: -13.898298263549805
    9. ')`
' → logprob: -14.398298263549805
    10. ')`' → logprob: -14.523298263549805

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8351892473874614e-05
    2. '   ' → logprob: -10.375048637390137
    3. '      ' → logprob: -12.500048637390137
    4. '	' → logprob: -12.750048637390137
    5. 'i' → logprob: -13.000048637390137
    6. '           ' → logprob: -13.500048637390137
    7. '<|end|>' → logprob: -13.625048637390137
    8. '    ' → logprob: -13.750048637390137
    9. '     ' → logprob: -13.875048637390137
    10. ' i' → logprob: -14.000048637390137

Token 705: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6861740350723267
    2. ' i' → logprob: -1.1861740350723267
    3. '       ' → logprob: -1.6861740350723267
    4. '   ' → logprob: -5.186173915863037
    5. '	i' → logprob: -8.311174392700195
    6. '  ' → logprob: -11.436174392700195
    7. '    ' → logprob: -11.936174392700195
    8. '      ' → logprob: -11.936174392700195
    9. 'x' → logprob: -12.186174392700195
    10. '     ' → logprob: -12.436174392700195

Token 706: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.004116392694413662
    2. ' >>=' → logprob: -5.504116535186768
    3. '=' → logprob: -11.00411605834961
    4. '>' → logprob: -11.25411605834961
    5. '//=' → logprob: -12.25411605834961
    6. ' >>' → logprob: -12.75411605834961
    7. '≫' → logprob: -14.75411605834961
    8. '/=' → logprob: -16.00411605834961
    9. ' //' → logprob: -16.62911605834961
    10. ' ' → logprob: -17.12911605834961

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -16.875139236450195
    4. '   ' → logprob: -18.750139236450195
    5. '2' → logprob: -19.250139236450195
    6. '0' → logprob: -19.687639236450195
    7. 'One' → logprob: -19.875139236450195
    8. '=' → logprob: -19.937639236450195
    9. '`' → logprob: -20.062639236450195
    10. '01' → logprob: -20.125139236450195

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.25
    5. '۱' → logprob: -21.375
    6. '１' → logprob: -21.5
    7. '<|end|>' → logprob: -21.625
    8. '0' → logprob: -21.75
    9. '' → logprob: -22.25
    10. '01' → logprob: -22.5

Token 709: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028893377631902695
    2. '(' → logprob: -3.65389347076416
    3. ')' → logprob: -6.15389347076416
    4. '#' → logprob: -9.27889347076416
    5. 'de' → logprob: -9.27889347076416
    6. '[' → logprob: -9.52889347076416
    7. '```' → logprob: -9.52889347076416
    8. '_' → logprob: -9.77889347076416
    9. '\' → logprob: -11.65389347076416
    10. '(def' → logprob: -11.77889347076416

Token 711: ' get' (ID: 717)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.2990795969963074
    2. 'query' → logprob: -1.7990796566009521
    3. ' l' → logprob: -3.549079656600952
    4. ' get' → logprob: -4.049079418182373
    5. 'l' → logprob: -4.049079418182373
    6. ' segment' → logprob: -4.924079418182373
    7. ' range' → logprob: -5.424079418182373
    8. 'range' → logprob: -5.424079418182373
    9. 'segment' → logprob: -6.049079418182373
    10. ' seg' → logprob: -6.049079418182373

Token 712: 'values' (ID: 7222)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.013222336769104
    2. 'min' → logprob: -1.638222336769104
    3. '(min' → logprob: -1.888222336769104
    4. '_min' → logprob: -2.1382222175598145
    5. '(l' → logprob: -2.2632222175598145
    6. '(n' → logprob: -3.6382222175598145
    7. '_range' → logprob: -4.5132222175598145
    8. 'range' → logprob: -5.1382222175598145
    9. '(i' → logprob: -5.8882222175598145
    10. 'token' → logprob: -6.2632222175598145

Token 713: '(l' (ID: 4179)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17126376926898956
    2. '(' → logprob: -2.2962636947631836
    3. '(l' → logprob: -3.0462636947631836
    4. '(i' → logprob: -6.046263694763184
    5. '(s' → logprob: -6.171263694763184
    6. ' (' → logprob: -6.171263694763184
    7. '(a' → logprob: -7.046263694763184
    8. '(seg' → logprob: -7.671263694763184
    9. '(node' → logprob: -7.796263694763184
    10. '(p' → logprob: -8.421263694763184

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037567326799035072
    2. ',r' → logprob: -6.128756523132324
    3. ' ,' → logprob: -6.503756523132324
    4. 'r' → logprob: -10.253756523132324
    5. 'eft' → logprob: -10.753756523132324
    6. 'f' → logprob: -12.753756523132324
    7. ',int' → logprob: -13.128756523132324
    8. 'def' → logprob: -13.253756523132324
    9. 'ft' → logprob: -13.753756523132324
    10. ',
' → logprob: -13.753756523132324

Token 715: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009756204672157764
    2. ' r' → logprob: -4.634756088256836
    3. 'def' → logprob: -16.134756088256836
    4. '   ' → logprob: -16.384756088256836
    5. ' ' → logprob: -17.259756088256836
    6. '	r' → logprob: -17.884756088256836
    7. ',' → logprob: -18.384756088256836
    8. 'rans' → logprob: -18.634756088256836
    9. ')' → logprob: -19.259756088256836
    10. '_r' → logprob: -19.322256088256836

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.908022285439074e-05
    2. ' ,' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '_,' → logprob: -15.875059127807617
    5. 'def' → logprob: -17.000059127807617
    6. ',
' → logprob: -17.500059127807617
    7. ',n' → logprob: -17.875059127807617
    8. ',int' → logprob: -18.000059127807617
    9. '1' → logprob: -18.500059127807617
    10. '‌,' → logprob: -19.125059127807617

Token 717: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1128648966550827
    2. ' seg' → logprob: -2.2378649711608887
    3. ',' → logprob: -11.11286449432373
    4. '   ' → logprob: -11.86286449432373
    5. 'r' → logprob: -12.23786449432373
    6. '(seg' → logprob: -12.23786449432373
    7. 'segment' → logprob: -13.11286449432373
    8. ' ' → logprob: -13.23786449432373
    9. ' r' → logprob: -13.86286449432373
    10. 's' → logprob: -13.98786449432373

Token 718: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.001584258396178484
    2. 'el' → logprob: -6.501584053039551
    3. ',' → logprob: -10.25158405303955
    4. 'l' → logprob: -11.25158405303955
    5. ',_' → logprob: -11.25158405303955
    6. 'El' → logprob: -11.62658405303955
    7. '_,' → logprob: -12.62658405303955
    8. '	el' → logprob: -12.62658405303955
    9. '_l' → logprob: -13.37658405303955
    10. '_' → logprob: -14.50158405303955

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',
' → logprob: -16.125015258789062
    4. '   ' → logprob: -17.875015258789062
    5. '_,' → logprob: -18.375015258789062
    6. '‌,' → logprob: -18.500015258789062
    7. 'def' → logprob: -20.125015258789062
    8. '):
' → logprob: -20.250015258789062
    9. ',s' → logprob: -20.375015258789062
    10. '1' → logprob: -20.625015258789062

Token 720: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.07894332706928253
    2. ' SEG' → logprob: -2.5789432525634766
    3. '_SEG' → logprob: -10.328943252563477
    4. 'seg' → logprob: -11.828943252563477
    5. 'SE' → logprob: -12.328943252563477
    6. 'SEQ' → logprob: -12.578943252563477
    7. '   ' → logprob: -13.328943252563477
    8. ' ' → logprob: -13.328943252563477
    9. 'SG' → logprob: -14.703943252563477
    10. ' seg' → logprob: -15.328943252563477

Token 721: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38699451088905334
    2. '):' → logprob: -1.136994481086731
    3. ')' → logprob: -9.511994361877441
    4. '):
' → logprob: -10.636994361877441
    5. '   ' → logprob: -10.761994361877441
    6. ',' → logprob: -13.511994361877441
    7. ' ):
' → logprob: -13.511994361877441
    8. ' ):' → logprob: -14.011994361877441
    9. '):

' → logprob: -14.636994361877441
    10. ' ' → logprob: -16.011995315551758

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016066044569015503
    2. 'res' → logprob: -4.891066074371338
    3. ' res' → logprob: -5.141066074371338
    4. '	l' → logprob: -6.641066074371338
    5. '	res' → logprob: -7.266066074371338
    6. 'l' → logprob: -8.39106559753418
    7. ' l' → logprob: -8.39106559753418
    8. 'result' → logprob: -9.51606559753418
    9. ' result' → logprob: -11.51606559753418
    10. '	result' → logprob: -12.01606559753418

Token 723: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16055352985858917
    2. 'res' → logprob: -1.9105535745620728
    3. '   ' → logprob: -8.410553932189941
    4. 'ret' → logprob: -10.410553932189941
    5. ' res' → logprob: -10.410553932189941
    6. 's' → logprob: -11.410553932189941
    7. 'r' → logprob: -11.785553932189941
    8. '	l' → logprob: -11.910553932189941
    9. 'result' → logprob: -11.910553932189941
    10. '(l' → logprob: -12.660553932189941

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893473654985428
    2. ' =' → logprob: -2.578934669494629
    3. ',' → logprob: -10.078934669494629
    4. '=l' → logprob: -13.328934669494629
    5. ' ,' → logprob: -14.828934669494629
    6. 'l' → logprob: -15.203934669494629
    7. ' ' → logprob: -15.453934669494629
    8. '=int' → logprob: -16.453935623168945
    9. '=i' → logprob: -16.703935623168945
    10. '   ' → logprob: -16.953935623168945

Token 725: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.263011578586884e-05
    2. ' l' → logprob: -10.250042915344238
    3. '   ' → logprob: -12.750042915344238
    4. 'r' → logprob: -13.125042915344238
    5. '	l' → logprob: -13.500042915344238
    6. '[l' → logprob: -15.375042915344238
    7. 'L' → logprob: -15.625042915344238
    8. '_l' → logprob: -16.000041961669922
    9. 'ltr' → logprob: -16.375041961669922
    10. '=l' → logprob: -16.500041961669922

Token 726: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029911428689956665
    2. ' +' → logprob: -3.529911518096924
    3. '+l' → logprob: -9.029911041259766
    4. '+r' → logprob: -10.904911041259766
    5. '   ' → logprob: -11.279911041259766
    6. '+=' → logprob: -12.154911041259766
    7. '+
' → logprob: -13.279911041259766
    8. '+i' → logprob: -13.654911041259766
    9. '+s' → logprob: -14.029911041259766
    10. ' +=' → logprob: -15.029911041259766

Token 727: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.8624639324116288e-06
    2. ' seg' → logprob: -13.500001907348633
    3. '(seg' → logprob: -15.375001907348633
    4. '   ' → logprob: -16.625001907348633
    5. 'segment' → logprob: -16.750001907348633
    6. '_seg' → logprob: -18.875001907348633
    7. 'sig' → logprob: -19.125001907348633
    8. 'se' → logprob: -20.000001907348633
    9. '```' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 728: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.47412803769111633
    2. 'el' → logprob: -0.974128007888794
    3. 'El' → logprob: -10.349127769470215
    4. '	el' → logprob: -11.099127769470215
    5. '-el' → logprob: -14.099127769470215
    6. '   ' → logprob: -15.099127769470215
    7. '<|end|>' → logprob: -15.349127769470215
    8. '_elements' → logprob: -15.474127769470215
    9. 'l' → logprob: -15.474127769470215
    10. 'elf' → logprob: -15.599127769470215

Token 729: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07023639231920242
    2. 'R' → logprob: -2.6952364444732666
    3. ' R' → logprob: -8.820236206054688
    4. ';' → logprob: -9.820236206054688
    5. ',R' → logprob: -10.320236206054688
    6. ',' → logprob: -10.445236206054688
    7. '	R' → logprob: -10.945236206054688
    8. ':R' → logprob: -11.695236206054688
    9. '    
' → logprob: -13.195236206054688
    10. 'r' → logprob: -13.445236206054688

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03259717673063278
    2. 'R' → logprob: -4.532597064971924
    3. ',' → logprob: -4.907597064971924
    4. 'r' → logprob: -5.032597064971924
    5. ' R' → logprob: -6.157597064971924
    6. '<|end|>' → logprob: -6.157597064971924
    7. ' ' → logprob: -6.657597064971924
    8. ' r' → logprob: -7.407597064971924
    9. '	R' → logprob: -8.157597541809082
    10. '	r' → logprob: -8.657597541809082

Token 731: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.0008147508488036692
    2. ' R' → logprob: -7.500814914703369
    3. '   ' → logprob: -8.250814437866211
    4. 'r' → logprob: -14.625814437866211
    5. '	R' → logprob: -16.62581443786621
    6. ' ' → logprob: -17.00081443786621
    7. ' =' → logprob: -17.75081443786621
    8. '=' → logprob: -17.75081443786621
    9. 'Answer' → logprob: -17.87581443786621
    10. 'B' → logprob: -17.87581443786621

Token 732: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. 'r' → logprob: -15.751928329467773
    4. '=r' → logprob: -15.751928329467773
    5. ' r' → logprob: -17.751928329467773
    6. '=
' → logprob: -18.126928329467773
    7. ' ' → logprob: -18.501928329467773
    8. '＝' → logprob: -19.751928329467773
    9. ',' → logprob: -19.876928329467773
    10. ' =
' → logprob: -19.876928329467773

Token 733: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009115827269852161
    2. ' r' → logprob: -7.000911712646484
    3. '	r' → logprob: -17.250911712646484
    4. '   ' → logprob: -17.375911712646484
    5. '=r' → logprob: -19.875911712646484
    6. '(r' → logprob: -19.875911712646484
    7. '[r' → logprob: -20.250911712646484
    8. 'rstrip' → logprob: -21.125911712646484
    9. '_r' → logprob: -21.750911712646484
    10. '+r' → logprob: -21.875911712646484

Token 734: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519306540489197
    2. ' +' → logprob: -1.5019307136535645
    3. '+r' → logprob: -13.501930236816406
    4. '+
' → logprob: -16.501930236816406
    5. '   ' → logprob: -17.251930236816406
    6. ' +
' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '＋' → logprob: -17.876930236816406
    9. '1' → logprob: -18.501930236816406
    10. '+l' → logprob: -18.626930236816406

Token 735: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3078274726867676
    2. '1' → logprob: -1.5578274726867676
    3. ' seg' → logprob: -2.9328274726867676
    4. 'r' → logprob: -6.932827472686768
    5. ' ' → logprob: -9.55782699584961
    6. '(seg' → logprob: -9.80782699584961
    7. ' r' → logprob: -11.30782699584961
    8. 's' → logprob: -13.80782699584961
    9. '+' → logprob: -13.93282699584961
    10. '_seg' → logprob: -14.05782699584961

Token 736: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.2521006762981415
    2. 'el' → logprob: -1.5021007061004639
    3. '1' → logprob: -9.252100944519043
    4. 'l' → logprob: -10.002100944519043
    5. 'El' → logprob: -11.252100944519043
    6. '+' → logprob: -12.502100944519043
    7. '	el' → logprob: -13.127100944519043
    8. '```' → logprob: -13.502100944519043
    9. ' ' → logprob: -13.752100944519043
    10. '=' → logprob: -14.002100944519043

Token 737: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001733848126605153
    2. ',' → logprob: -6.751733779907227
    3. '    
' → logprob: -8.126733779907227
    4. '
' → logprob: -9.001733779907227
    5. ' ,' → logprob: -10.626733779907227
    6. '    ' → logprob: -10.876733779907227
    7. '```' → logprob: -11.501733779907227
    8. ' ' → logprob: -11.626733779907227
    9. '	while' → logprob: -11.626733779907227
    10. '[' → logprob: -11.626733779907227

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000665375788230449
    2. 'res' → logprob: -7.375665187835693
    3. '	res' → logprob: -11.375665664672852
    4. 'result' → logprob: -11.625665664672852
    5. ' res' → logprob: -11.875665664672852
    6. '```' → logprob: -12.625665664672852
    7. '
' → logprob: -12.875665664672852
    8. 'r' → logprob: -13.500665664672852
    9. ' ' → logprob: -14.000665664672852
    10. '	result' → logprob: -14.500665664672852

Token 739: ' AN' (ID: 3473)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010093786753714085
    2. ' res' → logprob: -5.385093688964844
    3. '   ' → logprob: -5.385093688964844
    4. 'ret' → logprob: -7.885093688964844
    5. 'ans' → logprob: -8.760093688964844
    6. 'result' → logprob: -8.885093688964844
    7. 's' → logprob: -9.510093688964844
    8. 'r' → logprob: -9.760093688964844
    9. 'v' → logprob: -10.760093688964844
    10. '	res' → logprob: -11.885093688964844

Token 740: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -8.537868779967539e-06
    2. 'SW' → logprob: -12.625008583068848
    3. 'swer' → logprob: -13.125008583068848
    4. ' S' → logprob: -13.500008583068848
    5. 'W' → logprob: -14.625008583068848
    6. '
' → logprob: -15.125008583068848
    7. '   ' → logprob: -16.00000762939453
    8. 'Sw' → logprob: -16.12500762939453
    9. '1' → logprob: -16.37500762939453
    10. '_S' → logprob: -16.62500762939453

Token 741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741196632385254
    2. ' =' → logprob: -0.9741196632385254
    3. '=(' → logprob: -10.724119186401367
    4. ' =(' → logprob: -11.099119186401367
    5. ' ' → logprob: -12.849119186401367
    6. '=
' → logprob: -14.099119186401367
    7. '_' → logprob: -14.349119186401367
    8. ',' → logprob: -14.349119186401367
    9. '_=' → logprob: -15.474119186401367
    10. '=((' → logprob: -16.349119186401367

Token 742: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036123052705079317
    2. ' (' → logprob: -5.628612518310547
    3. '((' → logprob: -11.878612518310547
    4. '[(' → logprob: -12.753612518310547
    5. ' ' → logprob: -13.878612518310547
    6. '   ' → logprob: -14.378612518310547
    7. '(int' → logprob: -14.628612518310547
    8. '(None' → logprob: -16.128612518310547
    9. '(min' → logprob: -16.503612518310547
    10. '1' → logprob: -16.503612518310547

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029757659882307053
    2. '(' → logprob: -3.5297577381134033
    3. ' (' → logprob: -12.279757499694824
    4. ' ' → logprob: -13.404757499694824
    5. '((' → logprob: -14.404757499694824
    6. '10' → logprob: -16.65475845336914
    7. '100' → logprob: -16.77975845336914
    8. '   ' → logprob: -16.90475845336914
    9. '
' → logprob: -16.90475845336914
    10. 'float' → logprob: -17.15475845336914

Token 744: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.1472419600977446e-06
    2. ' <<' → logprob: -13.750000953674316
    3. '1' → logprob: -18.875001907348633
    4. ')<<' → logprob: -19.500001907348633
    5. '```' → logprob: -19.875001907348633
    6. '<<(' → logprob: -19.875001907348633
    7. '<<"' → logprob: -20.250001907348633
    8. 'e' → logprob: -21.250001907348633
    9. '<<<' → logprob: -21.250001907348633
    10. '()<<' → logprob: -21.250001907348633

Token 745: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.9266199160483666e-05
    2. '31' → logprob: -10.875019073486328
    3. '60' → logprob: -15.125019073486328
    4. '29' → logprob: -17.625019073486328
    5. '40' → logprob: -18.000019073486328
    6. '３０' → logprob: -18.375019073486328
    7. '32' → logprob: -18.750019073486328
    8. '50' → logprob: -19.250019073486328
    9. '۳۰' → logprob: -19.250019073486328
    10. '35' → logprob: -19.500019073486328

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -10.875019073486328
    3. '0' → logprob: -16.625019073486328
    4. ',None' → logprob: -16.750019073486328
    5. ',
' → logprob: -17.125019073486328
    6. ')' → logprob: -17.250019073486328
    7. '_,' → logprob: -17.875019073486328
    8. 'None' → logprob: -18.125019073486328
    9. '),' → logprob: -18.125019073486328
    10. '{},' → logprob: -18.250019073486328

Token 747: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02022254653275013
    2. ' ' → logprob: -4.5202226638793945
    3. '-' → logprob: -4.7702226638793945
    4. ' -' → logprob: -7.3952226638793945
    5. ')' → logprob: -10.520222663879395
    6. 'None' → logprob: -11.645222663879395
    7. ' None' → logprob: -13.270222663879395
    8. '   ' → logprob: -14.895222663879395
    9. '(-' → logprob: -14.895222663879395
    10. '1' → logprob: -15.020222663879395

Token 748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025981341022998095
    2. '-' → logprob: -6.002598285675049
    3. ' ' → logprob: -9.12759780883789
    4. ' -' → logprob: -12.00259780883789
    5. '1' → logprob: -12.62759780883789
    6. ')' → logprob: -13.25259780883789
    7. 'None' → logprob: -13.75259780883789
    8. 'N' → logprob: -14.50259780883789
    9. 'sys' → logprob: -16.00259780883789
    10. '100' → logprob: -16.12759780883789

Token 749: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3132745027542114
    2. ')' → logprob: -1.3132745027542114
    3. ')
' → logprob: -11.563274383544922
    4. ' )
' → logprob: -13.438274383544922
    5. '   ' → logprob: -13.563274383544922
    6. ' )' → logprob: -15.313274383544922
    7. ')

' → logprob: -15.688274383544922
    8. ')`
' → logprob: -16.438274383544922
    9. ')\
' → logprob: -17.688274383544922
    10. ' ' → logprob: -17.688274383544922

Token 750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027632713317871094
    2. ' while' → logprob: -6.627763271331787
    3. '	while' → logprob: -7.252763271331787
    4. '
' → logprob: -8.127763748168945
    5. '    
' → logprob: -8.502763748168945
    6. 'while' → logprob: -8.502763748168945
    7. '	
' → logprob: -11.627763748168945
    8. '<|end|>' → logprob: -12.377763748168945
    9. '    ' → logprob: -12.877763748168945
    10. ' 
' → logprob: -13.002763748168945

Token 751: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.31351789832115173
    2. '   ' → logprob: -1.3135179281234741
    3. ' while' → logprob: -8.313517570495605
    4. '	while' → logprob: -11.438517570495605
    5. 'While' → logprob: -16.688518524169922
    6. '
' → logprob: -17.688518524169922
    7. '  ' → logprob: -17.813518524169922
    8. ' ' → logprob: -18.438518524169922
    9. '    
' → logprob: -19.188518524169922
    10. '```' → logprob: -19.563518524169922

Token 752: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.006716079078614712
    2. ' L' → logprob: -5.006716251373291
    3. '(L' → logprob: -14.631715774536133
    4. '	L' → logprob: -16.131715774536133
    5. ' ' → logprob: -16.506715774536133
    6. ' ' → logprob: -16.756715774536133
    7. 'l' → logprob: -17.006715774536133
    8. '   ' → logprob: -17.381715774536133
    9. 'R' → logprob: -18.631715774536133
    10. '_L' → logprob: -18.631715774536133

Token 753: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1617671400308609
    2. '<' → logprob: -2.1617672443389893
    3. ' <=' → logprob: -3.5367672443389893
    4. ' <' → logprob: -5.28676700592041
    5. '<L' → logprob: -10.78676700592041
    6. '<len' → logprob: -11.28676700592041
    7. '<R' → logprob: -11.53676700592041
    8. '<int' → logprob: -12.03676700592041
    9. '<size' → logprob: -12.53676700592041
    10. '<th' → logprob: -12.78676700592041

Token 754: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00033546582562848926
    2. ' R' → logprob: -8.000335693359375
    3. '	R' → logprob: -18.625335693359375
    4. '   ' → logprob: -20.000335693359375
    5. ' ' → logprob: -20.250335693359375
    6. '=' → logprob: -20.250335693359375
    7. 'Q' → logprob: -20.375335693359375
    8. ':R' → logprob: -20.500335693359375
    9. '<R' → logprob: -21.250335693359375
    10. 'r' → logprob: -21.250335693359375

Token 755: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.639907956123352
    2. ':' → logprob: -0.764907956123352
    3. '   ' → logprob: -5.7649078369140625
    4. '       ' → logprob: -5.8899078369140625
    5. ',' → logprob: -7.3899078369140625
    6. ' :
' → logprob: -8.139907836914062
    7. '):
' → logprob: -8.889907836914062
    8. ' :' → logprob: -9.514907836914062
    9. ',
' → logprob: -10.014907836914062
    10. '<|end|>' → logprob: -10.139907836914062

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007142199319787323
    2. ' if' → logprob: -7.750714302062988
    3. '    ' → logprob: -10.000714302062988
    4. '```' → logprob: -10.000714302062988
    5. '   ' → logprob: -10.375714302062988
    6. '	' → logprob: -10.375714302062988
    7. '
' → logprob: -10.500714302062988
    8. '	   ' → logprob: -10.875714302062988
    9. '        
' → logprob: -11.000714302062988
    10. 'if' → logprob: -11.125714302062988

Token 757: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12910613417625427
    2. 'if' (adapté à ' if') → logprob: -2.379106044769287
    3. ' if' → logprob: -3.629106044769287
    4. '   ' → logprob: -6.629106044769287
    5. '	if' → logprob: -8.004106521606445
    6. ' ' → logprob: -9.379106521606445
    7. '	' → logprob: -9.504106521606445
    8. 'If' → logprob: -10.129106521606445
    9. '	   ' → logprob: -10.379106521606445
    10. '    ' → logprob: -11.004106521606445

Token 758: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04859066382050514
    2. ' L' → logprob: -3.048590660095215
    3. '(L' → logprob: -13.673590660095215
    4. ' (' → logprob: -13.798590660095215
    5. ' ' → logprob: -14.298590660095215
    6. 'R' → logprob: -15.298590660095215
    7. '(' → logprob: -16.04859161376953
    8. '   ' → logprob: -16.29859161376953
    9. '	L' → logprob: -16.92359161376953
    10. '#' → logprob: -18.54859161376953

Token 759: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.023309649899601936
    2. ' &' → logprob: -3.7733097076416016
    3. '&
' → logprob: -10.148309707641602
    4. '&amp' → logprob: -11.523309707641602
    5. '&I' → logprob: -13.273309707641602
    6. '%' → logprob: -13.273309707641602
    7. '&i' → logprob: -13.523309707641602
    8. '&B' → logprob: -13.523309707641602
    9. '&p' → logprob: -13.648309707641602
    10. ' &
' → logprob: -13.898309707641602

Token 760: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '１' → logprob: -20.1250057220459
    4. '
' → logprob: -21.5000057220459
    5. '   ' → logprob: -21.5000057220459
    6. '۱' → logprob: -21.6250057220459
    7. '-' → logprob: -21.7500057220459
    8. '01' → logprob: -22.1250057220459
    9. '' → logprob: -22.3750057220459
    10. '  ' → logprob: -22.8750057220459

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '１' → logprob: -20.625
    4. '۱' → logprob: -21.0
    5. '' → logprob: -21.25
    6. '१' → logprob: -21.625
    7. '
' → logprob: -21.75
    8. '১' → logprob: -21.75
    9. '-' → logprob: -21.875
    10. '{' → logprob: -22.5

Token 762: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5780577063560486
    2. ':
' → logprob: -0.8280577063560486
    3. '==' → logprob: -6.328057765960693
    4. ' ==' → logprob: -8.828057289123535
    5. ' :' → logprob: -9.703057289123535
    6. ' :
' → logprob: -9.828057289123535
    7. '=' → logprob: -10.453057289123535
    8. '!=' → logprob: -11.578057289123535
    9. ')' → logprob: -11.703057289123535
    10. '):
' → logprob: -12.328057289123535

Token 763: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23886537551879883
    2. ' if' → logprob: -1.7388653755187988
    3. '
' → logprob: -4.363865375518799
    4. 'ANS' → logprob: -4.363865375518799
    5. 'if' → logprob: -4.988865375518799
    6. ' AN' → logprob: -5.613865375518799
    7. '           ' → logprob: -7.988865375518799
    8. ',' → logprob: -9.23886489868164
    9. ':
' → logprob: -9.61386489868164
    10. '   ' → logprob: -9.86386489868164

Token 764: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.020958026871085167
    2. ' AN' → logprob: -4.395957946777344
    3. '   ' → logprob: -5.395957946777344
    4. 'AN' (adapté à ' AN') → logprob: -6.145957946777344
    5. 'if' → logprob: -7.145957946777344
    6. '       ' → logprob: -7.770957946777344
    7. ' if' → logprob: -7.895957946777344
    8. '           ' → logprob: -9.270957946777344
    9. ' ' → logprob: -11.520957946777344
    10. 'ANK' → logprob: -11.770957946777344

Token 765: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9361264946837764e-07
    2. ' S' → logprob: -16.25
    3. '=S' → logprob: -17.75
    4. '=' → logprob: -18.125
    5. '	S' → logprob: -18.5
    6. 'SOR' → logprob: -18.75
    7. '[S' → logprob: -19.75
    8. 'SR' → logprob: -19.875
    9. '
' → logprob: -20.375
    10. '(S' → logprob: -20.625

Token 766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006755394395440817
    2. ' =' → logprob: -5.006755352020264
    3. '=min' → logprob: -10.131755828857422
    4. '=
' → logprob: -15.881755828857422
    5. '   ' → logprob: -16.631755828857422
    6. 'min' → logprob: -17.131755828857422
    7. '.=' → logprob: -17.756755828857422
    8. '_=' → logprob: -18.131755828857422
    9. '＝' → logprob: -18.256755828857422
    10. '=

' → logprob: -18.756755828857422

Token 767: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009114635176956654
    2. ' min' → logprob: -7.000911235809326
    3. '	min' → logprob: -16.750911712646484
    4. '   ' → logprob: -18.000911712646484
    5. '(min' → logprob: -19.750911712646484
    6. '_min' → logprob: -20.750911712646484
    7. 'mini' → logprob: -20.875911712646484
    8. ' ' → logprob: -21.250911712646484
    9. 'minimum' → logprob: -22.250911712646484
    10. '  ' → logprob: -22.375911712646484

Token 768: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '((' → logprob: -14.000000953674316
    3. '(ans' → logprob: -15.500000953674316
    4. '	' → logprob: -17.000001907348633
    5. '(
' → logprob: -18.125001907348633
    6. 'ANS' → logprob: -18.250001907348633
    7. '(Q' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '()' → logprob: -19.500001907348633

Token 769: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0011749862460419536
    2. '(' → logprob: -6.7511749267578125
    3. '(ans' → logprob: -12.876174926757812
    4. 'ANSWER' → logprob: -13.501174926757812
    5. 'Ans' → logprob: -15.376174926757812
    6. ' AN' → logprob: -15.376174926757812
    7. 'SEG' → logprob: -16.126174926757812
    8. '   ' → logprob: -16.501174926757812
    9. 'ans' → logprob: -16.876174926757812
    10. 'AN' → logprob: -17.126174926757812

Token 770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1536434441804886
    2. 'ANS' → logprob: -2.5286433696746826
    3. '(' → logprob: -2.7786433696746826
    4. '(ans' → logprob: -8.278643608093262
    5. 'ans' → logprob: -9.403643608093262
    6. ' ,' → logprob: -9.403643608093262
    7. 'ANSWER' → logprob: -10.528643608093262
    8. '[' → logprob: -10.653643608093262
    9. 'Ans' → logprob: -11.778643608093262
    10. '   ' → logprob: -11.778643608093262

Token 771: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -9.615255839889869e-05
    2. ' SEG' → logprob: -9.250096321105957
    3. 'SE' → logprob: -17.87509536743164
    4. '_SEG' → logprob: -18.00009536743164
    5. 'SEQ' → logprob: -19.25009536743164
    6. 'seg' → logprob: -20.25009536743164
    7. '   ' → logprob: -20.25009536743164
    8. 'SG' → logprob: -21.62509536743164
    9. 'SIG' → logprob: -21.87509536743164
    10. 'SEP' → logprob: -22.25009536743164

Token 772: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -3.15441757265944e-05
    2. 'L' → logprob: -10.375031471252441
    3. '[' → logprob: -15.750031471252441
    4. '[
' → logprob: -16.625032424926758
    5. '	L' → logprob: -16.875032424926758
    6. '(L' → logprob: -18.500032424926758
    7. ',L' → logprob: -18.500032424926758
    8. '"L' → logprob: -18.625032424926758
    9. '   ' → logprob: -19.000032424926758
    10. '```' → logprob: -19.750032424926758

Token 773: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.3138219118118286
    2. '])' → logprob: -1.3138219118118286
    3. ')
' → logprob: -7.813821792602539
    4. ')' → logprob: -9.313821792602539
    5. ' ])
' → logprob: -10.688821792602539
    6. ']);' → logprob: -11.063821792602539
    7. '])
' → logprob: -11.938821792602539
    8. ']' → logprob: -12.063821792602539
    9. ' ])' → logprob: -12.438821792602539
    10. '))
' → logprob: -12.813821792602539

Token 774: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3892081081867218
    2. '           ' → logprob: -1.1392080783843994
    3. '	       ' → logprob: -6.5142083168029785
    4. '	   ' → logprob: -8.38920783996582
    5. '   ' → logprob: -8.51420783996582
    6. '```' → logprob: -9.51420783996582
    7. ' L' → logprob: -9.63920783996582
    8. ',' → logprob: -9.76420783996582
    9. '​' → logprob: -10.01420783996582
    10. 'L' → logprob: -10.26420783996582

Token 775: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5149547457695007
    2. 'L' (adapté à ' L') → logprob: -1.1399548053741455
    3. '       ' → logprob: -2.6399548053741455
    4. '           ' → logprob: -4.514954566955566
    5. '   ' → logprob: -9.014954566955566
    6. '	L' → logprob: -9.514954566955566
    7. '	       ' → logprob: -10.264954566955566
    8. '	' → logprob: -10.514954566955566
    9. '	   ' → logprob: -11.264954566955566
    10. '```' → logprob: -11.639954566955566

Token 776: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -9.65101717156358e-05
    2. ' +=' → logprob: -9.250096321105957
    3. ']+=' → logprob: -15.250096321105957
    4. '+' → logprob: -17.625097274780273
    5. '=' → logprob: -18.250097274780273
    6. '|' → logprob: -18.500097274780273
    7. '```' → logprob: -19.125097274780273
    8. '   ' → logprob: -20.625097274780273
    9. '1' → logprob: -20.750097274780273
    10. '+=(' → logprob: -20.750097274780273

Token 777: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -21.0
    5. '１' → logprob: -23.75
    6. '۱' → logprob: -23.75
    7. '<|end|>' → logprob: -24.0
    8. '  ' → logprob: -24.125
    9. '`' → logprob: -24.4375
    10. '
' → logprob: -24.625

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -23.0
    5. '１' → logprob: -23.625
    6. '
' → logprob: -24.0
    7. '۱' → logprob: -24.125
    8. '  ' → logprob: -24.625
    9. '१' → logprob: -25.375
    10. '	' → logprob: -25.5

Token 779: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2246291337069124e-05
    2. '   ' → logprob: -11.625021934509277
    3. '
' → logprob: -12.375021934509277
    4. '<|end|>' → logprob: -12.375021934509277
    5. '```' → logprob: -13.250021934509277
    6. '	' → logprob: -13.625021934509277
    7. ' ' → logprob: -14.000021934509277
    8. '      ' → logprob: -15.750021934509277
    9. '           ' → logprob: -15.750021934509277
    10. '	   ' → logprob: -15.875021934509277

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006384541047737002
    2. '   ' → logprob: -7.375638484954834
    3. '```' → logprob: -11.875638008117676
    4. '
' → logprob: -13.500638008117676
    5. ' ' → logprob: -14.250638008117676
    6. '           ' → logprob: -14.375638008117676
    7. '``' → logprob: -14.375638008117676
    8. '     ' → logprob: -15.000638008117676
    9. '      ' → logprob: -15.125638008117676
    10. '	' → logprob: -15.250638008117676

Token 781: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04402853175997734
    2. 'R' → logprob: -3.5440285205841064
    3. '       ' → logprob: -4.2940287590026855
    4. ' if' → logprob: -7.6690287590026855
    5. '   ' → logprob: -9.919028282165527
    6. ' R' → logprob: -12.294028282165527
    7. 'If' → logprob: -12.919028282165527
    8. '```' → logprob: -12.919028282165527
    9. '#' → logprob: -15.169028282165527
    10. '``' → logprob: -15.669028282165527

Token 782: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005235648714005947
    2. ' R' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.63023567199707
    4. ' ' → logprob: -15.25523567199707
    5. '	R' → logprob: -15.63023567199707
    6. 'r' → logprob: -16.63023567199707
    7. 'not' → logprob: -16.88023567199707
    8. '  ' → logprob: -17.13023567199707
    9. '```' → logprob: -17.69273567199707
    10. '
' → logprob: -17.88023567199707

Token 783: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.062496837228536606
    2. ' &' → logprob: -2.8124969005584717
    3. '>' → logprob: -7.937496662139893
    4. '-' → logprob: -10.56249713897705
    5. '-=' → logprob: -10.56249713897705
    6. '&
' → logprob: -10.56249713897705
    7. ' >' → logprob: -10.81249713897705
    8. ')' → logprob: -10.93749713897705
    9. ' -=' → logprob: -11.18749713897705
    10. '&R' → logprob: -11.68749713897705

Token 784: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '-' → logprob: -15.627185821533203
    4. '>' → logprob: -16.502185821533203
    5. '#' → logprob: -16.877185821533203
    6. '   ' → logprob: -17.127185821533203
    7. '
' → logprob: -17.252185821533203
    8. 'r' → logprob: -17.814685821533203
    9. '	' → logprob: -18.314685821533203
    10. '  ' → logprob: -18.377185821533203

Token 785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.250006675720215
    3. '-' → logprob: -13.375006675720215
    4. '>' → logprob: -18.2500057220459
    5. '
' → logprob: -19.0000057220459
    6. '~' → logprob: -19.2500057220459
    7. '   ' → logprob: -20.2500057220459
    8. ' -' → logprob: -20.2500057220459
    9. '```' → logprob: -20.6250057220459
    10. '--' → logprob: -20.8750057220459

Token 786: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1824423372745514
    2. ':' → logprob: -2.0574424266815186
    3. '==' → logprob: -3.4324424266815186
    4. '       ' → logprob: -5.9324421882629395
    5. ' ==' → logprob: -6.8074421882629395
    6. '```' → logprob: -7.5574421882629395
    7. '           ' → logprob: -7.8074421882629395
    8. '-' → logprob: -8.057442665100098
    9. '>' → logprob: -8.182442665100098
    10. '   ' → logprob: -8.307442665100098

Token 787: '           ' (ID: 352)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.9399798512458801
    2. '-=' → logprob: -1.1899797916412354
    3. '-' → logprob: -2.1899797916412354
    4. '       ' → logprob: -2.6899797916412354
    5. '>' → logprob: -3.4399797916412354
    6. '==' → logprob: -3.8149797916412354
    7. ' -' → logprob: -3.8149797916412354
    8. ':' → logprob: -3.9399797916412354
    9. ':
' → logprob: -4.8149800300598145
    10. '```' → logprob: -5.3149800300598145

Token 788: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -6.704273118884885e-07
    2. ' R' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.5
    4. 'r' → logprob: -18.25
    5. '
' → logprob: -19.0
    6. '	R' → logprob: -19.25
    7. '--' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. '  ' → logprob: -20.125
    10. '#' → logprob: -20.25

Token 789: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00085678935283795
    2. '-' → logprob: -7.500856876373291
    3. ' -=' → logprob: -8.125856399536133
    4. '=' → logprob: -11.875856399536133
    5. '+=' → logprob: -14.625856399536133
    6. '   ' → logprob: -15.125856399536133
    7. '```' → logprob: -15.500856399536133
    8. '>' → logprob: -17.625856399536133
    9. '−' → logprob: -18.625856399536133
    10. '
' → logprob: -18.750856399536133

Token 790: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -18.25002670288086
    4. '   ' → logprob: -19.75002670288086
    5. '<|end|>' → logprob: -19.87502670288086
    6. ',' → logprob: -21.25002670288086
    7. ')' → logprob: -22.00002670288086
    8. '0' → logprob: -22.12502670288086
    9. 'R' → logprob: -22.56252670288086
    10. '       ' → logprob: -22.75002670288086

Token 791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -23.5
    5. 'R' → logprob: -23.625
    6. '<|end|>' → logprob: -23.875
    7. '۱' → logprob: -24.0
    8. '`' → logprob: -24.375
    9. '2' → logprob: -24.5
    10. '１' → logprob: -24.75

Token 792: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002081620506942272
    2. '       ' → logprob: -6.252081394195557
    3. '
' → logprob: -10.002081871032715
    4. ',' → logprob: -10.127081871032715
    5. '   ' → logprob: -11.002081871032715
    6. '<|end|>' → logprob: -11.127081871032715
    7. '	       ' → logprob: -12.002081871032715
    8. '               ' → logprob: -12.252081871032715
    9. '<|end|>' → logprob: -12.502081871032715
    10. '```' → logprob: -13.127081871032715

Token 793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1132788360118866
    2. '       ' → logprob: -2.238278865814209
    3. '
' → logprob: -8.48827838897705
    4. '   ' → logprob: -9.61327838897705
    5. '	       ' → logprob: -9.61327838897705
    6. ',' → logprob: -10.61327838897705
    7. '```' → logprob: -11.11327838897705
    8. '               ' → logprob: -11.48827838897705
    9. '	   ' → logprob: -11.73827838897705
    10. ':
' → logprob: -11.98827838897705

Token 794: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0001987722353078425
    2. '           ' → logprob: -9.500198364257812
    3. '       ' → logprob: -9.750198364257812
    4. 'ANSWER' → logprob: -10.125198364257812
    5. ' AN' → logprob: -10.750198364257812
    6. '   ' → logprob: -13.375198364257812
    7. '               ' → logprob: -13.875198364257812
    8. 'AN' (adapté à ' AN') → logprob: -14.375198364257812
    9. ' ANSW' → logprob: -15.375198364257812
    10. ' ' → logprob: -15.750198364257812

Token 795: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.088346359931165e-07
    2. '[S' → logprob: -15.250000953674316
    3. 's' → logprob: -15.500000953674316
    4. '(S' → logprob: -16.25
    5. '[' → logprob: -16.625
    6. ' S' → logprob: -17.125
    7. '=' → logprob: -18.5
    8. '   ' → logprob: -19.125
    9. 'SOR' → logprob: -19.125
    10. '    ' → logprob: -19.5

Token 796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. '=min' → logprob: -13.386873245239258
    4. 'min' → logprob: -15.886873245239258
    5. ')' → logprob: -16.136873245239258
    6. '=
' → logprob: -17.636873245239258
    7. ' ' → logprob: -18.136873245239258
    8. '   ' → logprob: -18.261873245239258
    9. ' =
' → logprob: -19.136873245239258
    10. ' min' → logprob: -19.636873245239258

Token 797: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019286326132714748
    2. ' min' → logprob: -6.251928806304932
    3. '(min' → logprob: -19.751928329467773
    4. '	min' → logprob: -20.126928329467773
    5. '_min' → logprob: -21.251928329467773
    6. 'max' → logprob: -22.751928329467773
    7. 'minimum' → logprob: -23.126928329467773
    8. '.min' → logprob: -23.126928329467773
    9. '=min' → logprob: -23.126928329467773
    10. '[min' → logprob: -23.376928329467773

Token 798: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '(ans' → logprob: -15.250000953674316
    3. '(min' → logprob: -15.750000953674316
    4. '((' → logprob: -16.625
    5. '(
' → logprob: -17.25
    6. '(EXIT' → logprob: -18.0
    7. ' (' → logprob: -18.25
    8. '(KERN' → logprob: -18.375
    9. '```' → logprob: -19.0
    10. '<|end|>' → logprob: -19.0

Token 799: 'ANS' (ID: 18850)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010145947337150574
    2. 'ANS' → logprob: -4.635146141052246
    3. '(ans' → logprob: -7.885146141052246
    4. 'ANSWER' → logprob: -11.635146141052246
    5. '(M' → logprob: -13.760146141052246
    6. '((' → logprob: -14.135146141052246
    7. '(min' → logprob: -14.635146141052246
    8. '(
' → logprob: -15.260146141052246
    9. '(SE' → logprob: -15.260146141052246
    10. '(EXPR' → logprob: -15.385146141052246

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016084343194961548
    2. '(' → logprob: -4.14108419418335
    3. 'ANS' → logprob: -10.891084671020508
    4. '(ans' → logprob: -10.891084671020508
    5. '(SE' → logprob: -12.516084671020508
    6. ' ,' → logprob: -12.891084671020508
    7. 'ans' → logprob: -13.516084671020508
    8. '(min' → logprob: -13.641084671020508
    9. ')' → logprob: -13.766084671020508
    10. '),' → logprob: -15.141084671020508

Token 801: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -3.583550642360933e-05
    2. ' SEG' → logprob: -10.250036239624023
    3. '_SEG' → logprob: -15.000036239624023
    4. 'SEQ' → logprob: -18.250036239624023
    5. 'SE' → logprob: -19.250036239624023
    6. 'seg' → logprob: -19.750036239624023
    7. '   ' → logprob: -21.000036239624023
    8. 'SIG' → logprob: -21.125036239624023
    9. 'SEP' → logprob: -21.125036239624023
    10. '(' → logprob: -21.375036239624023

Token 802: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.0677238330245018
    2. 'R' → logprob: -2.8177237510681152
    3. '[' → logprob: -5.317723751068115
    4. '(R' → logprob: -7.317723751068115
    5. ',R' → logprob: -9.567724227905273
    6. ' R' → logprob: -10.192724227905273
    7. ')' → logprob: -10.442724227905273
    8. ',' → logprob: -10.567724227905273
    9. ')[' → logprob: -12.692724227905273
    10. '   ' → logprob: -13.692724227905273

Token 803: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011104060336947441
    2. ')
' → logprob: -4.511104106903076
    3. '       ' → logprob: -9.886103630065918
    4. '   ' → logprob: -12.886103630065918
    5. ')
' → logprob: -13.511103630065918
    6. ' )' → logprob: -13.886103630065918
    7. ')return' → logprob: -16.136104583740234
    8. ')

' → logprob: -16.511104583740234
    9. ')`
' → logprob: -16.636104583740234
    10. ' )
' → logprob: -16.886104583740234

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020687808864749968
    2. '   ' → logprob: -8.50020694732666
    3. ' return' → logprob: -13.62520694732666
    4. '           ' → logprob: -14.12520694732666
    5. '```' → logprob: -14.62520694732666
    6. '      ' → logprob: -15.00020694732666
    7. 'return' → logprob: -15.25020694732666
    8. ' ' → logprob: -15.75020694732666
    9. '<|end|>' → logprob: -16.000205993652344
    10. '     ' → logprob: -16.375205993652344

Token 805: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028202086687088013
    2. '   ' → logprob: -6.377820014953613
    3. ' L' → logprob: -7.252820014953613
    4. 'L' (adapté à ' L') → logprob: -8.002820014953613
    5. ' R' → logprob: -10.752820014953613
    6. 'R' → logprob: -11.127820014953613
    7. ' return' → logprob: -11.127820014953613
    8. '           ' → logprob: -12.127820014953613
    9. 'return' → logprob: -12.252820014953613
    10. '```' → logprob: -12.502820014953613

Token 806: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.2026847004890442
    2. ' >>=' → logprob: -1.7026846408843994
    3. '+=' → logprob: -6.9526848793029785
    4. '//=' → logprob: -8.57768440246582
    5. ',' → logprob: -9.95268440246582
    6. ' +=' → logprob: -10.57768440246582
    7. '=' → logprob: -11.20268440246582
    8. ' >>' → logprob: -11.20268440246582
    9. ' <<=' → logprob: -11.57768440246582
    10. ' //' → logprob: -12.20268440246582

Token 807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.750036239624023
    3. '0' → logprob: -11.125036239624023
    4. '   ' → logprob: -18.750036239624023
    5. '
' → logprob: -20.250036239624023
    6. '```' → logprob: -22.125036239624023
    7. '    ' → logprob: -22.500036239624023
    8. ' ' → logprob: -22.500036239624023
    9. '       ' → logprob: -22.875036239624023
    10. '  ' → logprob: -23.500036239624023

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -19.25
    4. '   ' → logprob: -21.25
    5. '
' → logprob: -21.625
    6. '```' → logprob: -21.75
    7. '１' → logprob: -23.0
    8. '۱' → logprob: -23.375
    9. '<|end|>' → logprob: -23.5
    10. '01' → logprob: -23.625

Token 809: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017111169872805476
    2. '<|end|>' → logprob: -7.001710891723633
    3. '   ' → logprob: -8.126710891723633
    4. ',' → logprob: -8.126710891723633
    5. '```' → logprob: -9.501710891723633
    6. ' ' → logprob: -11.001710891723633
    7. ',
' → logprob: -11.001710891723633
    8. '<|end|>' → logprob: -11.126710891723633
    9. '        
' → logprob: -11.251710891723633
    10. '
' → logprob: -11.376710891723633

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06674355268478394
    2. '<|end|>' → logprob: -3.4417436122894287
    3. '```' → logprob: -4.06674337387085
    4. '[' → logprob: -5.06674337387085
    5. ' ' → logprob: -5.56674337387085
    6. '   ' → logprob: -6.44174337387085
    7. '        ' → logprob: -6.69174337387085
    8. ',' → logprob: -7.69174337387085
    9. '        
' → logprob: -8.566743850708008
    10. '<|end|>' → logprob: -8.566743850708008

Token 811: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.0002613358374219388
    2. ' R' → logprob: -8.250261306762695
    3. '   ' → logprob: -21.625261306762695
    4. ' ' → logprob: -22.125261306762695
    5. '#' → logprob: -22.875261306762695
    6. '	R' → logprob: -23.125261306762695
    7. '```' → logprob: -24.000261306762695
    8. '
' → logprob: -24.250261306762695
    9. '       ' → logprob: -24.375261306762695
    10. '_R' → logprob: -24.625261306762695

Token 812: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -2.339278580620885e-06
    2. ' >>=' → logprob: -13.000001907348633
    3. '>>&' → logprob: -17.500001907348633
    4. '//=' → logprob: -17.625001907348633
    5. ')>>' → logprob: -18.000001907348633
    6. '>' → logprob: -18.375001907348633
    7. '=' → logprob: -18.875001907348633
    8. '≫' → logprob: -19.125001907348633
    9. '>>
' → logprob: -20.000001907348633
    10. '```' → logprob: -20.000001907348633

Token 813: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.62502098083496
    4. '```' → logprob: -19.12502098083496
    5. '2' → logprob: -19.87502098083496
    6. '0' → logprob: -19.87502098083496
    7. '<|end|>' → logprob: -20.87502098083496
    8. '１' → logprob: -21.00002098083496
    9. '۱' → logprob: -21.12502098083496
    10. '
' → logprob: -21.62502098083496

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -19.375001907348633
    5. '
' → logprob: -20.125001907348633
    6. '0' → logprob: -20.125001907348633
    7. '۱' → logprob: -20.875001907348633
    8. '１' → logprob: -20.875001907348633
    9. '2' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.500001907348633

Token 815: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001337147317826748
    2. 'return' → logprob: -6.626337051391602
    3. ' return' → logprob: -11.876337051391602
    4. '
' → logprob: -13.501337051391602
    5. '<|end|>' → logprob: -14.001337051391602
    6. '	return' → logprob: -14.626337051391602
    7. '```' → logprob: -14.876337051391602
    8. '    
' → logprob: -15.376337051391602
    9. ':return' → logprob: -15.376337051391602
    10. '       ' → logprob: -15.501337051391602

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015002528380136937
    2. 'return' → logprob: -8.875149726867676
    3. '<|end|>' → logprob: -12.375149726867676
    4. '```' → logprob: -12.500149726867676
    5. ' return' → logprob: -14.375149726867676
    6. '       ' → logprob: -14.625149726867676
    7. '	return' → logprob: -14.875149726867676
    8. '{return' → logprob: -15.250149726867676
    9. ':return' → logprob: -16.000150680541992
    10. '[' → logprob: -16.375150680541992

Token 817: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008636434562504292
    2. '   ' → logprob: -4.758636474609375
    3. ' return' → logprob: -10.758636474609375
    4. '	return' → logprob: -14.633636474609375
    5. '{return' → logprob: -16.383636474609375
    6. '```' → logprob: -16.383636474609375
    7. ':return' → logprob: -17.258636474609375
    8. 'print' → logprob: -18.383636474609375
    9. 'def' → logprob: -18.383636474609375
    10. '       ' → logprob: -18.633636474609375

Token 818: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.3425219549390022e-05
    2. ' AN' → logprob: -11.25001335144043
    3. 'ANSWER' → logprob: -15.12501335144043
    4. '(' → logprob: -16.50001335144043
    5. '(ans' → logprob: -17.37501335144043
    6. 'ans' → logprob: -18.12501335144043
    7. ' ans' → logprob: -18.37501335144043
    8. 'AN' → logprob: -18.37501335144043
    9. 'ANTS' → logprob: -18.50001335144043
    10. 'ANCE' → logprob: -19.62501335144043

Token 819: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.842555426876061e-06
    2. '(S' → logprob: -12.500004768371582
    3. 'SOR' → logprob: -14.500004768371582
    4. 's' → logprob: -15.375004768371582
    5. '(' → logprob: -15.625004768371582
    6. '[S' → logprob: -17.1250057220459
    7. '[' → logprob: -17.1250057220459
    8. 'SR' → logprob: -17.3750057220459
    9. 'SP' → logprob: -17.6250057220459
    10. '
' → logprob: -18.2500057220459

Token 820: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011224760673940182
    2. '<|end|>' → logprob: -7.37612247467041
    3. '#' → logprob: -9.12612247467041
    4. ')' → logprob: -9.25112247467041
    5. '(' → logprob: -9.25112247467041
    6. '[' → logprob: -9.87612247467041
    7. '
' → logprob: -10.37612247467041
    8. '```' → logprob: -11.00112247467041
    9. '.' → logprob: -11.12612247467041
    10. ' def' → logprob: -11.50112247467041

Token 821: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.4849443838757e-06
    2. 'import' → logprob: -12.875004768371582
    3. 'if' → logprob: -14.125004768371582
    4. '#' → logprob: -14.875004768371582
    5. '```' → logprob: -15.250004768371582
    6. 'for' → logprob: -15.375004768371582
    7. 'class' → logprob: -15.625004768371582
    8. ' def' → logprob: -16.250003814697266
    9. 'from' → logprob: -16.625003814697266
    10. 'N' → logprob: -18.375003814697266

Token 822: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.131411612033844
    2. 'l' → logprob: -2.381411552429199
    3. 'solve' → logprob: -4.506411552429199
    4. 'lowest' → logprob: -5.131411552429199
    5. 'dfs' → logprob: -5.256411552429199
    6. 'process' → logprob: -5.756411552429199
    7. 'query' → logprob: -6.631411552429199
    8. 'find' → logprob: -6.881411552429199
    9. ' main' → logprob: -7.506411552429199
    10. 'get' → logprob: -7.506411552429199

Token 823: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.05503574386239052
    2. 'C' → logprob: -2.9300358295440674
    3. 'ca' → logprob: -9.430035591125488
    4. ' C' → logprob: -11.180035591125488
    5. 'R' → logprob: -11.555035591125488
    6. '   ' → logprob: -12.180035591125488
    7. '
' → logprob: -12.305035591125488
    8. 'CP' → logprob: -12.430035591125488
    9. 'E' → logprob: -12.555035591125488
    10. '```' → logprob: -12.555035591125488

Token 824: '(l' (ID: 4179)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7022793292999268
    2. '(p' → logprob: -1.3272793292999268
    3. '(' → logprob: -2.0772793292999268
    4. '(u' → logprob: -2.8272793292999268
    5. '(a' → logprob: -3.2022793292999268
    6. '(l' → logprob: -5.577279090881348
    7. '(L' → logprob: -5.827279090881348
    8. '(node' → logprob: -5.952279090881348
    9. '(n' → logprob: -6.202279090881348
    10. '(_' → logprob: -7.202279090881348

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004997024778276682
    2. ' ,' → logprob: -6.004997253417969
    3. ',r' → logprob: -7.004997253417969
    4. 'eft' → logprob: -7.129997253417969
    5. ',a' → logprob: -8.254997253417969
    6. 'a' → logprob: -8.879997253417969
    7. ',l' → logprob: -8.879997253417969
    8. 'ef' → logprob: -9.504997253417969
    9. ',p' → logprob: -10.504997253417969
    10. '   ' → logprob: -10.754997253417969

Token 826: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007189844618551433
    2. ' r' → logprob: -7.25071907043457
    3. '   ' → logprob: -13.12571907043457
    4. '```' → logprob: -13.12571907043457
    5. '
' → logprob: -13.87571907043457
    6. ' ' → logprob: -14.00071907043457
    7. 'p' → logprob: -14.00071907043457
    8. '	r' → logprob: -14.50071907043457
    9. 'a' → logprob: -15.25071907043457
    10. 'x' → logprob: -15.37571907043457

Token 827: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005070568062365055
    2. ',' → logprob: -6.005070686340332
    3. '):
' → logprob: -6.005070686340332
    4. ')' → logprob: -9.130070686340332
    5. '   ' → logprob: -11.505070686340332
    6. ' ):' → logprob: -12.755070686340332
    7. '):
' → logprob: -12.880070686340332
    8. ':' → logprob: -14.380070686340332
    9. ' ' → logprob: -15.005070686340332
    10. ')：' → logprob: -16.130069732666016

Token 828: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.16355937719345093
    2. 'seg' → logprob: -1.9135594367980957
    3. ' MIN' → logprob: -6.288559436798096
    4. ' seg' → logprob: -7.163559436798096
    5. 'min' → logprob: -7.788559436798096
    6. 'SEG' → logprob: -8.788558959960938
    7. 'MAX' → logprob: -9.663558959960938
    8. 'se' → logprob: -11.413558959960938
    9. 'MI' → logprob: -11.913558959960938
    10. 'segment' → logprob: -12.038558959960938

Token 829: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.012250972911715508
    2. 'p' → logprob: -4.512250900268555
    3. ',' → logprob: -6.762250900268555
    4. '_p' → logprob: -10.637250900268555
    5. '_,' → logprob: -12.262250900268555
    6. ',P' → logprob: -12.887250900268555
    7. 'l' → logprob: -12.887250900268555
    8. 's' → logprob: -13.637250900268555
    9. ' ,' → logprob: -13.887250900268555
    10. ')' → logprob: -14.012250900268555

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021826191805303097
    2. '):' → logprob: -6.502182483673096
    3. ' ,' → logprob: -8.627182960510254
    4. 'p' → logprob: -8.627182960510254
    5. '):
' → logprob: -9.002182960510254
    6. '   ' → logprob: -9.877182960510254
    7. ',p' → logprob: -10.252182960510254
    8. ',P' → logprob: -10.502182960510254
    9. 'P' → logprob: -10.627182960510254
    10. 'MIN' → logprob: -11.377182960510254

Token 831: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0007736549014225602
    2. ' MAX' → logprob: -7.7507734298706055
    3. 'seg' → logprob: -8.625773429870605
    4. 'SEG' → logprob: -9.000773429870605
    5. 'MIN' → logprob: -10.875773429870605
    6. 'max' → logprob: -11.250773429870605
    7. '   ' → logprob: -13.000773429870605
    8. ' seg' → logprob: -13.250773429870605
    9. '_MAX' → logprob: -14.250773429870605
    10. ' ' → logprob: -14.250773429870605

Token 832: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.7372048862162046e-05
    2. ',' → logprob: -11.125027656555176
    3. 'p' → logprob: -11.375027656555176
    4. '_p' → logprob: -15.000027656555176
    5. ')' → logprob: -15.625027656555176
    6. ' P' → logprob: -15.750027656555176
    7. '),' → logprob: -16.37502670288086
    8. ',P' → logprob: -16.75002670288086
    9. '_,' → logprob: -16.87502670288086
    10. '_P' → logprob: -17.25002670288086

Token 833: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16109643876552582
    2. '):' → logprob: -1.911096453666687
    3. ',' → logprob: -8.286096572875977
    4. '   ' → logprob: -8.286096572875977
    5. '):
' → logprob: -8.286096572875977
    6. '):

' → logprob: -9.661096572875977
    7. ')' → logprob: -10.661096572875977
    8. ' ):
' → logprob: -11.536096572875977
    9. ' ):' → logprob: -12.536096572875977
    10. 'p' → logprob: -12.536096572875977

Token 834: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.008379113860428333
    2. 'SEG' → logprob: -4.883378982543945
    3. ' seg' → logprob: -7.383378982543945
    4. '   ' → logprob: -10.008378982543945
    5. 'E' → logprob: -10.633378982543945
    6. 'segment' → logprob: -10.758378982543945
    7. ' SEG' → logprob: -11.008378982543945
    8. 'SE' → logprob: -12.008378982543945
    9. '(seg' → logprob: -12.008378982543945
    10. 'Seg' → logprob: -12.008378982543945

Token 835: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.006067206151783466
    2. 'el' → logprob: -5.131067276000977
    3. '_,' → logprob: -9.881067276000977
    4. ',' → logprob: -10.131067276000977
    5. 'El' → logprob: -11.131067276000977
    6. ',_' → logprob: -11.256067276000977
    7. '	el' → logprob: -12.256067276000977
    8. '   ' → logprob: -13.006067276000977
    9. ')_' → logprob: -13.256067276000977
    10. '_' → logprob: -13.256067276000977

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022201328829396516
    2. ' ,' → logprob: -8.625222206115723
    3. '   ' → logprob: -10.250222206115723
    4. ',
' → logprob: -12.500222206115723
    5. '):
' → logprob: -12.875222206115723
    6. '):' → logprob: -15.250222206115723
    7. 'def' → logprob: -15.625222206115723
    8. ' ' → logprob: -16.125221252441406
    9. '  ' → logprob: -16.125221252441406
    10. '_,' → logprob: -17.500221252441406

Token 837: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.0445127372804563e-05
    2. ' SEG' → logprob: -11.50001049041748
    3. '_SEG' → logprob: -16.000009536743164
    4. 'SEQ' → logprob: -16.750009536743164
    5. 'SE' → logprob: -17.125009536743164
    6. 'seg' → logprob: -17.250009536743164
    7. 'SEC' → logprob: -18.375009536743164
    8. '   ' → logprob: -19.000009536743164
    9. '
' → logprob: -20.000009536743164
    10. 'get' → logprob: -20.250009536743164

Token 838: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02330394648015499
    2. '):
' → logprob: -3.773303985595703
    3. ')' → logprob: -10.773303985595703
    4. '):
' → logprob: -10.773303985595703
    5. '   ' → logprob: -11.273303985595703
    6. ' ):' → logprob: -13.023303985595703
    7. ',' → logprob: -14.523303985595703
    8. ' ' → logprob: -14.648303985595703
    9. ')：' → logprob: -14.898303985595703
    10. '):

' → logprob: -16.023303985595703

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21974600851535797
    2. 'l' → logprob: -2.3447461128234863
    3. '	l' → logprob: -2.7197461128234863
    4. ' l' → logprob: -3.8447461128234863
    5. 'a' → logprob: -5.344746112823486
    6. '	min' → logprob: -6.469746112823486
    7. 'start' → logprob: -7.219746112823486
    8. 'min' → logprob: -7.469746112823486
    9. 'v' → logprob: -7.594746112823486
    10. 'p' → logprob: -7.719746112823486

Token 840: ' return' (ID: 622)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48432832956314087
    2. 'pl' → logprob: -1.484328269958496
    3. 'min' → logprob: -2.734328269958496
    4. 'li' → logprob: -2.859328269958496
    5. 'ml' → logprob: -4.359328269958496
    6. 'lp' → logprob: -4.859328269958496
    7. 'il' → logprob: -4.984328269958496
    8. 'a' → logprob: -6.484328269958496
    9. 'p' → logprob: -6.609328269958496
    10. 'left' → logprob: -7.109328269958496

Token 841: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06376317143440247
    2. 'min' → logprob: -3.18876314163208
    3. ' get' → logprob: -4.06376314163208
    4. ' min' → logprob: -5.93876314163208
    5. 'MIN' → logprob: -8.188763618469238
    6. '0' → logprob: -8.813763618469238
    7. '(get' → logprob: -9.563763618469238
    8. 'E' → logprob: -10.063763618469238
    9. '(min' → logprob: -10.063763618469238
    10. '   ' → logprob: -10.688763618469238

Token 842: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.005291988607496023
    2. '(min' → logprob: -5.255291938781738
    3. '(values' → logprob: -10.130291938781738
    4. '(M' → logprob: -11.505291938781738
    5. 'min' → logprob: -12.380291938781738
    6. '(max' → logprob: -13.630291938781738
    7. '(' → logprob: -14.005291938781738
    8. 'value' → logprob: -14.880291938781738
    9. '[min' → logprob: -15.255291938781738
    10. 'val' → logprob: -15.380291938781738

Token 843: '(min' (ID: 26035)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.3213656544685364
    2. '(min' → logprob: -1.3213655948638916
    3. '(' → logprob: -4.946365833282471
    4. '(
' → logprob: -7.571365833282471
    5. '((' → logprob: -7.821365833282471
    6. '(MAX' → logprob: -10.321365356445312
    7. '(L' → logprob: -12.446365356445312
    8. '(max' → logprob: -12.696365356445312
    9. '(

' → logprob: -13.196365356445312
    10. ' (' → logprob: -13.571365356445312

Token 844: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00845547765493393
    2. '(' → logprob: -5.633455276489258
    3. '(MAX' → logprob: -5.758455276489258
    4. '(
' → logprob: -6.633455276489258
    5. '((' → logprob: -8.508455276489258
    6. '(min' → logprob: -9.008455276489258
    7. '(

' → logprob: -10.508455276489258
    8. '(L' → logprob: -11.883455276489258
    9. 'MIN' → logprob: -12.508455276489258
    10. ' (' → logprob: -12.758455276489258

Token 845: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -3.292907877039397e-06
    2. 'MIN' → logprob: -13.62500286102295
    3. '
' → logprob: -14.62500286102295
    4. '{' → logprob: -15.12500286102295
    5. '(M' → logprob: -15.12500286102295
    6. 'AX' → logprob: -15.37500286102295
    7. '   ' → logprob: -15.87500286102295
    8. '(IN' → logprob: -15.87500286102295
    9. '[' → logprob: -16.375003814697266
    10. 'INVAL' → logprob: -16.625003814697266

Token 846: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.1398757123970427e-05
    2. 'MAX' → logprob: -12.250011444091797
    3. '(MAX' → logprob: -13.250011444091797
    4. 'p' → logprob: -13.500011444091797
    5. '(P' → logprob: -14.375011444091797
    6. '(M' → logprob: -14.750011444091797
    7. '[P' → logprob: -14.750011444091797
    8. '(max' → logprob: -15.250011444091797
    9. ' P' → logprob: -15.500011444091797
    10. 'X' → logprob: -15.875011444091797

Token 847: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.000365259445970878
    2. 'l' → logprob: -8.000365257263184
    3. '(l' → logprob: -12.250365257263184
    4. ',l' → logprob: -12.250365257263184
    5. '[' → logprob: -12.375365257263184
    6. '[r' → logprob: -12.500365257263184
    7. '[
' → logprob: -13.250365257263184
    8. ',' → logprob: -13.375365257263184
    9. '[p' → logprob: -13.500365257263184
    10. '   ' → logprob: -13.500365257263184

Token 848: '],' (ID: 2155)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.20387166738510132
    2. '[r' → logprob: -1.703871726989746
    3. '[' → logprob: -6.703871726989746
    4. '],' → logprob: -7.828871726989746
    5. ',' → logprob: -8.078871726989746
    6. '[m' → logprob: -9.578871726989746
    7. '[min' → logprob: -9.578871726989746
    8. '[L' → logprob: -9.703871726989746
    9. ',l' → logprob: -10.078871726989746
    10. 'l' → logprob: -10.453871726989746

Token 849: ' MIN' (ID: 27151)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.018306564539670944
    2. 'MIN' → logprob: -4.018306732177734
    3. ' MAX' → logprob: -9.268306732177734
    4. 'max' → logprob: -9.768306732177734
    5. 'Max' → logprob: -13.393306732177734
    6. '   ' → logprob: -13.518306732177734
    7. ' max' → logprob: -13.893306732177734
    8. ' MIN' → logprob: -14.268306732177734
    9. '_MAX' → logprob: -14.893306732177734
    10. '(MAX' → logprob: -16.018306732177734

Token 850: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00013250234769657254
    2. 'MAX' → logprob: -9.25013256072998
    3. 'p' → logprob: -11.00013256072998
    4. '[MAX' → logprob: -12.12513256072998
    5. '(MAX' → logprob: -12.12513256072998
    6. '[max' → logprob: -13.12513256072998
    7. 'Q' → logprob: -13.62513256072998
    8. '[l' → logprob: -14.00013256072998
    9. '/MAX' → logprob: -14.12513256072998
    10. '_MAX' → logprob: -15.00013256072998

Token 851: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0010361451422795653
    2. 'r' → logprob: -6.876036167144775
    3. '[l' → logprob: -13.251035690307617
    4. '	r' → logprob: -14.126035690307617
    5. '   ' → logprob: -15.626035690307617
    6. '[' → logprob: -15.876035690307617
    7. ',r' → logprob: -16.001035690307617
    8. ' r' → logprob: -16.001035690307617
    9. '[
' → logprob: -16.001035690307617
    10. '(r' → logprob: -16.626035690307617

Token 852: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01729724556207657
    2. ',' → logprob: -4.142297267913818
    3. ' ),' → logprob: -6.892297267913818
    4. ' ,' → logprob: -9.01729679107666
    5. ')+' → logprob: -10.51729679107666
    6. ')' → logprob: -10.51729679107666
    7. '+' → logprob: -10.64229679107666
    8. '],' → logprob: -10.89229679107666
    9. '   ' → logprob: -11.64229679107666
    10. ' ' → logprob: -12.01729679107666

Token 853: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '(max' → logprob: -17.125911712646484
    4. '	max' → logprob: -17.250911712646484
    5. '   ' → logprob: -18.500911712646484
    6. '[max' → logprob: -20.000911712646484
    7. 'min' → logprob: -21.000911712646484
    8. '1' → logprob: -21.125911712646484
    9. ',max' → logprob: -21.125911712646484
    10. '=max' → logprob: -21.125911712646484

Token 854: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00017421995289623737
    2. '(M' → logprob: -8.750174522399902
    3. 'MAX' → logprob: -11.500174522399902
    4. '(' → logprob: -12.250174522399902
    5. '(max' → logprob: -15.000174522399902
    6. '(
' → logprob: -15.625174522399902
    7. '[MAX' → logprob: -16.125173568725586
    8. '((' → logprob: -16.125173568725586
    9. '(Max' → logprob: -17.125173568725586
    10. '```' → logprob: -17.250173568725586

Token 855: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.1756367712223437e-05
    2. 'MAX' → logprob: -11.875011444091797
    3. 'p' → logprob: -13.500011444091797
    4. '[MAX' → logprob: -13.750011444091797
    5. '[' → logprob: -14.125011444091797
    6. '[max' → logprob: -14.375011444091797
    7. '[P' → logprob: -15.000011444091797
    8. 'MIN' → logprob: -15.375011444091797
    9. '(MAX' → logprob: -15.750011444091797
    10. 'max' → logprob: -16.625011444091797

Token 856: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00011284107313258573
    2. 'l' → logprob: -9.125112533569336
    3. '[
' → logprob: -13.625112533569336
    4. '(l' → logprob: -14.375112533569336
    5. '[' → logprob: -14.625112533569336
    6. '	l' → logprob: -14.750112533569336
    7. '
' → logprob: -14.875112533569336
    8. '```' → logprob: -15.500112533569336
    9. ' [' → logprob: -16.000112533569336
    10. ')' → logprob: -16.625112533569336

Token 857: '],' (ID: 2155)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.008842768147587776
    2. 'r' → logprob: -4.758842945098877
    3. ',' → logprob: -9.133842468261719
    4. '[' → logprob: -9.633842468261719
    5. ',r' → logprob: -10.258842468261719
    6. '[
' → logprob: -12.383842468261719
    7. '],' → logprob: -12.758842468261719
    8. '	r' → logprob: -12.883842468261719
    9. '(r' → logprob: -13.258842468261719
    10. ' r' → logprob: -13.258842468261719

Token 858: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -8.375538163818419e-05
    2. ' MAX' → logprob: -9.500083923339844
    3. 'MIN' → logprob: -12.250083923339844
    4. 'max' → logprob: -12.500083923339844
    5. '(MAX' → logprob: -15.750083923339844
    6. '_MAX' → logprob: -16.375083923339844
    7. '   ' → logprob: -17.375083923339844
    8. '[MAX' → logprob: -17.875083923339844
    9. 'Max' → logprob: -18.500083923339844
    10. ' max' → logprob: -19.125083923339844

Token 859: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.02586720883846283
    2. 'r' → logprob: -3.775867223739624
    3. '[r' → logprob: -6.025866985321045
    4. 'p' → logprob: -8.525867462158203
    5. '[P' → logprob: -13.650867462158203
    6. '[' → logprob: -14.150867462158203
    7. ' P' → logprob: -14.400867462158203
    8. '{' → logprob: -14.650867462158203
    9. '[l' → logprob: -15.275867462158203
    10. ' r' → logprob: -15.650867462158203

Token 860: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.005930813029408455
    2. 'r' → logprob: -5.1309309005737305
    3. '	r' → logprob: -13.75593090057373
    4. '[' → logprob: -14.38093090057373
    5. '(r' → logprob: -15.88093090057373
    6. '[
' → logprob: -16.005929946899414
    7. '```' → logprob: -16.255929946899414
    8. '
' → logprob: -16.380929946899414
    9. ' r' → logprob: -16.755929946899414
    10. '   ' → logprob: -16.880929946899414

Token 861: '])+' (ID: 119485)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.6958894729614258
    2. ']' → logprob: -2.195889472961426
    3. '])' → logprob: -2.195889472961426
    4. ']),' → logprob: -2.445889472961426
    5. ')+' → logprob: -2.570889472961426
    6. '])+' → logprob: -3.070889472961426
    7. ']))' → logprob: -3.320889472961426
    8. ')' → logprob: -3.945889472961426
    9. '+' → logprob: -5.570889472961426
    10. 'r' → logprob: -6.195889472961426

Token 862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.500051498413086
    4. '+' → logprob: -18.000051498413086
    5. ')' → logprob: -18.625051498413086
    6. '```' → logprob: -19.125051498413086
    7. '{' → logprob: -20.375051498413086
    8. '2' → logprob: -21.000051498413086
    9. '
' → logprob: -21.125051498413086
    10. ' ' → logprob: -21.875051498413086

Token 863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1810320019721985
    2. ')' → logprob: -1.8060319423675537
    3. '   ' → logprob: -6.806032180786133
    4. ' ,' → logprob: -9.181032180786133
    5. ' )' → logprob: -10.806032180786133
    6. ')[' → logprob: -11.181032180786133
    7. ',)' → logprob: -11.556032180786133
    8. ')
' → logprob: -11.556032180786133
    9. '  ' → logprob: -11.681032180786133
    10. '),' → logprob: -12.556032180786133

Token 864: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.023245712742209435
    2. ' seg' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.648245811462402
    4. '(seg' → logprob: -16.273244857788086
    5. 'segment' → logprob: -19.148244857788086
    6. '_seg' → logprob: -20.023244857788086
    7. ' ' → logprob: -20.523244857788086
    8. '```' → logprob: -20.648244857788086
    9. 'se' → logprob: -20.773244857788086
    10. '    ' → logprob: -20.773244857788086

Token 865: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.01816398836672306
    2. 'el' → logprob: -4.018164157867432
    3. '	el' → logprob: -11.393163681030273
    4. 'El' → logprob: -13.018163681030273
    5. ' el' → logprob: -16.268163681030273
    6. ''el' → logprob: -16.518163681030273
    7. '-el' → logprob: -16.768163681030273
    8. '.el' → logprob: -17.268163681030273
    9. '_ele' → logprob: -17.393163681030273
    10. '```' → logprob: -17.518163681030273

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.289473822107539e-05
    2. '   ' → logprob: -9.750062942504883
    3. ')' → logprob: -13.250062942504883
    4. ' ,' → logprob: -13.375062942504883
    5. ',
' → logprob: -13.750062942504883
    6. '‌,' → logprob: -17.500062942504883
    7. '```' → logprob: -17.750062942504883
    8. '	' → logprob: -18.125062942504883
    9. '       ' → logprob: -18.500062942504883
    10. '  ' → logprob: -18.500062942504883

Token 867: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00026169343618676066
    2. ' SEG' → logprob: -8.250261306762695
    3. 'SE' → logprob: -15.250261306762695
    4. '_SEG' → logprob: -16.250261306762695
    5. 'SEQ' → logprob: -17.375261306762695
    6. '   ' → logprob: -19.000261306762695
    7. 'SIG' → logprob: -20.250261306762695
    8. 'SEP' → logprob: -20.500261306762695
    9. ' ' → logprob: -20.625261306762695
    10. 'SEC' → logprob: -20.875261306762695

Token 868: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.375005722045898
    4. ')
' → logprob: -15.500005722045898
    5. ')return' → logprob: -15.750005722045898
    6. '))' → logprob: -16.0000057220459
    7. ')#' → logprob: -17.7500057220459
    8. ' ' → logprob: -18.0000057220459
    9. '')' → logprob: -18.1250057220459
    10. 'def' → logprob: -18.2500057220459

Token 869: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004385252017527819
    2. '#' → logprob: -6.129385471343994
    3. '(' → logprob: -7.379385471343994
    4. ')' → logprob: -7.504385471343994
    5. 'for' → logprob: -8.004384994506836
    6. '<|end|>' → logprob: -8.379384994506836
    7. '[' → logprob: -8.879384994506836
    8. '0' → logprob: -10.004384994506836
    9. '```' → logprob: -10.129384994506836
    10. '.' → logprob: -10.129384994506836

Token 870: ' prepare' (ID: 13708)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5292788147926331
    2. 'def' → logprob: -1.0292787551879883
    3. ' main' → logprob: -3.0292787551879883
    4. 'read' → logprob: -5.779278755187988
    5. ' def' → logprob: -6.904278755187988
    6. '__' → logprob: -7.904278755187988
    7. 'sys' → logprob: -8.029278755187988
    8. 'build' → logprob: -8.529278755187988
    9. ' sys' → logprob: -8.904278755187988
    10. ' read' → logprob: -9.779278755187988

Token 871: '_l' (ID: 1478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5877108573913574
    2. 'def' → logprob: -2.2127108573913574
    3. '_data' → logprob: -2.4627108573913574
    4. '_tree' → logprob: -2.7127108573913574
    5. '_code' → logprob: -2.9627108573913574
    6. '(' → logprob: -3.4627108573913574
    7. '_query' → logprob: -3.9627108573913574
    8. '_input' → logprob: -4.587710857391357
    9. '_queries' → logprob: -4.587710857391357
    10. '_graph' → logprob: -4.712710857391357

Token 872: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.010840763337910175
    2. 'ist' → logprob: -6.260840892791748
    3. 'c' → logprob: -6.510840892791748
    4. 'e' → logprob: -6.635840892791748
    5. 'CA' → logprob: -6.635840892791748
    6. 'ink' → logprob: -6.635840892791748
    7. 'eft' → logprob: -7.760840892791748
    8. 'oad' → logprob: -7.885840892791748
    9. 'a' → logprob: -8.26084041595459
    10. 'cas' → logprob: -8.26084041595459

Token 873: '_queries' (ID: 172558)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005236041033640504
    2. 'def' → logprob: -8.625523567199707
    3. '(' → logprob: -8.875523567199707
    4. '():' → logprob: -9.125523567199707
    5. ' (' → logprob: -10.125523567199707
    6. '(
' → logprob: -11.125523567199707
    7. '(n' → logprob: -11.625523567199707
    8. '(L' → logprob: -12.125523567199707
    9. '(def' → logprob: -12.500523567199707
    10. '():
' → logprob: -12.750523567199707

Token 874: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05009198561310768
    2. '():' → logprob: -3.1750919818878174
    3. '(Q' → logprob: -5.3000922203063965
    4. '():
' → logprob: -6.9250922203063965
    5. '(' → logprob: -7.0500922203063965
    6. '(
' → logprob: -9.800091743469238
    7. '()' → logprob: -10.050091743469238
    8. '(...' → logprob: -10.800091743469238
    9. '(*' → logprob: -10.925091743469238
    10. '(def' → logprob: -11.050091743469238

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011874916963279247
    2. '):' → logprob: -6.751187324523926
    3. ' ,' → logprob: -11.626187324523926
    4. ')' → logprob: -13.126187324523926
    5. '):
' → logprob: -13.126187324523926
    6. '   ' → logprob: -13.751187324523926
    7. ',N' → logprob: -13.876187324523926
    8. ',
' → logprob: -14.001187324523926
    9. ' ):' → logprob: -14.751187324523926
    10. ',List' → logprob: -15.751187324523926

Token 876: ' Query' (ID: 18574)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.45058977603912354
    2. 'EDGE' → logprob: -1.2005897760391235
    3. 'E' → logprob: -3.075589656829834
    4. ' ED' → logprob: -4.950589656829834
    5. ' EDGE' → logprob: -5.575589656829834
    6. 'Q' → logprob: -6.200589656829834
    7. 'N' → logprob: -6.575589656829834
    8. ' E' → logprob: -6.950589656829834
    9. ' Q' → logprob: -10.200590133666992
    10. ' N' → logprob: -10.450590133666992

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060721199959516525
    2. '):' → logprob: -3.0607211589813232
    3. '):
' → logprob: -4.435721397399902
    4. ' ,' → logprob: -9.810721397399902
    5. ')' → logprob: -10.060721397399902
    6. '):
' → logprob: -10.310721397399902
    7. ',
' → logprob: -10.560721397399902
    8. ',Q' → logprob: -10.935721397399902
    9. ',N' → logprob: -11.310721397399902
    10. '   ' → logprob: -11.935721397399902

Token 878: ' L' (ID: 451)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.24508525431156158
    2. 'MIN' → logprob: -1.7450852394104004
    3. 'EDGE' → logprob: -3.6200852394104004
    4. 'E' → logprob: -4.3700852394104
    5. ' ED' → logprob: -6.1200852394104
    6. ' MIN' → logprob: -8.245085716247559
    7. 'DEP' → logprob: -8.495085716247559
    8. ' E' → logprob: -8.995085716247559
    9. 'N' → logprob: -9.245085716247559
    10. 'MAX' → logprob: -9.245085716247559

Token 879: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.20748001337051392
    2. 'C' → logprob: -2.207479953765869
    3. 'A' → logprob: -3.207479953765869
    4. ',' → logprob: -4.582479953765869
    5. 'ist' → logprob: -5.207479953765869
    6. 'EN' → logprob: -5.207479953765869
    7. 'E' → logprob: -5.582479953765869
    8. 'MIN' → logprob: -5.707479953765869
    9. 'IST' → logprob: -5.957479953765869
    10. 'P' → logprob: -6.957479953765869

Token 880: '_func' (ID: 22252)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6423331499099731
    2. '):' → logprob: -0.7673331499099731
    3. ',' → logprob: -5.017333030700684
    4. ')' → logprob: -6.517333030700684
    5. '):
' → logprob: -7.017333030700684
    6. '   ' → logprob: -8.392333030700684
    7. '
' → logprob: -9.767333030700684
    8. '=' → logprob: -9.767333030700684
    9. '_list' → logprob: -10.017333030700684
    10. '):

' → logprob: -10.142333030700684

Token 881: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39074626564979553
    2. '):' → logprob: -1.1407462358474731
    3. '):
' → logprob: -6.140746116638184
    4. ')' → logprob: -6.640746116638184
    5. ',' → logprob: -8.140746116638184
    6. '):

' → logprob: -9.265746116638184
    7. 'def' → logprob: -12.140746116638184
    8. '   ' → logprob: -13.015746116638184
    9. ')
' → logprob: -13.015746116638184
    10. '):

' → logprob: -13.140746116638184

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08792631328105927
    2. 'def' → logprob: -3.7129263877868652
    3. ':' → logprob: -3.8379263877868652
    4. ':
' → logprob: -5.212926387786865
    5. '(N' → logprob: -5.212926387786865
    6. '```' → logprob: -5.337926387786865
    7. '():
' → logprob: -5.462926387786865
    8. '):
' → logprob: -5.837926387786865
    9. '(
' → logprob: -6.712926387786865
    10. '[' → logprob: -6.712926387786865

Token 883: ' check' (ID: 2371)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.9243664741516113
    2. '   ' → logprob: -1.6743664741516113
    3. 'res' → logprob: -1.7993664741516113
    4. 'answers' → logprob: -2.5493664741516113
    5. 'result' → logprob: -2.9243664741516113
    6. 'RES' → logprob: -3.1743664741516113
    7. 'RESULT' → logprob: -3.4243664741516113
    8. ' results' → logprob: -4.049366474151611
    9. 'ans' → logprob: -5.424366474151611
    10. 'ANS' → logprob: -5.549366474151611

Token 884: ' =' (ID: 314)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.6218084692955017
    2. 's' → logprob: -1.3718085289001465
    3. '_results' → logprob: -2.1218085289001465
    4. ' =' → logprob: -3.7468085289001465
    5. '_list' → logprob: -4.9968085289001465
    6. '_answers' → logprob: -4.9968085289001465
    7. '_values' → logprob: -5.1218085289001465
    8. '_queries' → logprob: -5.3718085289001465
    9. 'results' → logprob: -5.7468085289001465
    10. 'sum' → logprob: -5.8718085289001465

Token 885: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13588373363018036
    2. '[]' → logprob: -2.6358838081359863
    3. '{}' → logprob: -3.2608838081359863
    4. '[N' → logprob: -4.760883808135986
    5. 'set' → logprob: -5.510883808135986
    6. '[len' → logprob: -6.010883808135986
    7. '{' → logprob: -8.010883331298828
    8. 'lambda' → logprob: -8.260883331298828
    9. '[-' → logprob: -8.260883331298828
    10. '[]
' → logprob: -8.385883331298828

Token 886: 'set' (ID: 977)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6425673365592957
    2. '0' → logprob: -0.7675673365592957
    3. 'True' → logprob: -5.767567157745361
    4. '[' → logprob: -6.017567157745361
    5. '[]' → logprob: -6.392567157745361
    6. '-' → logprob: -7.267567157745361
    7. '1' → logprob: -7.392567157745361
    8. 'q' → logprob: -8.64256763458252
    9. 'len' → logprob: -8.89256763458252
    10. ']' → logprob: -8.89256763458252

Token 887: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012548385187983513
    2. '()]' → logprob: -4.387548446655273
    3. '(range' → logprob: -11.512548446655273
    4. '()
' → logprob: -11.637548446655273
    5. '()]
' → logprob: -12.012548446655273
    6. '(),' → logprob: -12.387548446655273
    7. '([' → logprob: -12.762548446655273
    8. ' ()' → logprob: -13.012548446655273
    9. '([]' → logprob: -14.012548446655273
    10. '()=>' → logprob: -14.762548446655273

Token 888: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00750736752524972
    2. 'for' → logprob: -5.38250732421875
    3. '()]' → logprob: -6.63250732421875
    4. '()
' → logprob: -7.13250732421875
    5. ' for' → logprob: -7.88250732421875
    6. '(range' → logprob: -8.38250732421875
    7. '(' → logprob: -10.25750732421875
    8. '   ' → logprob: -10.38250732421875
    9. '([' → logprob: -10.63250732421875
    10. '()]
' → logprob: -11.13250732421875

Token 889: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35105493664741516
    2. 'range' → logprob: -1.6010549068450928
    3. ' range' → logprob: -3.2260549068450928
    4. ' _' → logprob: -3.8510549068450928
    5. 'in' → logprob: -3.9760549068450928
    6. ' in' → logprob: -4.476055145263672
    7. '_range' → logprob: -6.101055145263672
    8. '(range' → logprob: -7.476055145263672
    9. '_N' → logprob: -8.976055145263672
    10. '_in' → logprob: -9.226055145263672

Token 890: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4177935719490051
    2. 'range' → logprob: -1.7927935123443604
    3. ' in' → logprob: -1.7927935123443604
    4. ' range' → logprob: -4.7927937507629395
    5. '(range' → logprob: -9.292793273925781
    6. '(N' → logprob: -10.042793273925781
    7. '_' → logprob: -10.167793273925781
    8. ' ' → logprob: -11.417793273925781
    9. '0' → logprob: -11.542793273925781
    10. '(' → logprob: -11.917793273925781

Token 891: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806031122803688
    2. ' range' → logprob: -3.288060426712036
    3. '_' → logprob: -10.913060188293457
    4. '(range' → logprob: -14.913060188293457
    5. '_range' → logprob: -15.913060188293457
    6. '	range' → logprob: -16.163061141967773
    7. ' ' → logprob: -17.538061141967773
    8. '
' → logprob: -17.663061141967773
    9. '   ' → logprob: -17.788061141967773
    10. ' _' → logprob: -17.913061141967773

Token 892: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002767094410955906
    2. '(Q' → logprob: -8.500276565551758
    3. 'range' → logprob: -10.625276565551758
    4. 'N' → logprob: -10.875276565551758
    5. '(' → logprob: -11.000276565551758
    6. '(range' → logprob: -11.750276565551758
    7. '((' → logprob: -13.625276565551758
    8. '(n' → logprob: -13.625276565551758
    9. '(len' → logprob: -13.750276565551758
    10. 'Q' → logprob: -14.375276565551758

Token 893: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009432652732357383
    2. '()+' → logprob: -8.000943183898926
    3. '(N' → logprob: -8.500943183898926
    4. ')]' → logprob: -8.500943183898926
    5. '()]' → logprob: -9.750943183898926
    6. '+
' → logprob: -9.875943183898926
    7. ' +' → logprob: -10.375943183898926
    8. '(' → logprob: -10.875943183898926
    9. '()' → logprob: -11.625943183898926
    10. '```' → logprob: -11.875943183898926

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003996477462351322
    2. '(N' → logprob: -5.7539963722229
    3. '(' → logprob: -7.5039963722229
    4. 'N' → logprob: -9.253996849060059
    5. 'range' → logprob: -9.628996849060059
    6. '2' → logprob: -9.628996849060059
    7. ' ' → logprob: -11.753996849060059
    8. ')' → logprob: -12.128996849060059
    9. '   ' → logprob: -12.128996849060059
    10. ' (' → logprob: -12.753996849060059

Token 895: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14144347608089447
    2. ')]' → logprob: -2.1414434909820557
    3. ')' → logprob: -4.891443252563477
    4. ']
' → logprob: -5.016443252563477
    5. ')]
' → logprob: -9.016443252563477
    6. '()]' → logprob: -9.641443252563477
    7. ']
' → logprob: -10.516443252563477
    8. ')
' → logprob: -10.516443252563477
    9. '   ' → logprob: -11.391443252563477
    10. ' ]' → logprob: -11.641443252563477

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002168698003515601
    2. 'for' → logprob: -6.377168655395508
    3. ' for' → logprob: -7.752168655395508
    4. '
' → logprob: -10.877168655395508
    5. '	for' → logprob: -11.877168655395508
    6. '```' → logprob: -11.877168655395508
    7. '    
' → logprob: -12.752168655395508
    8. 'def' → logprob: -14.252168655395508
    9. '``' → logprob: -16.127168655395508
    10. '       ' → logprob: -16.127168655395508

Token 897: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.623023271560669
    2. 'for' (adapté à ' for') → logprob: -0.873023271560669
    3. ' for' → logprob: -3.123023271560669
    4. '	for' → logprob: -6.24802303314209
    5. '
' → logprob: -11.12302303314209
    6. 'def' → logprob: -11.62302303314209
    7. '```' → logprob: -11.74802303314209
    8. '    
' → logprob: -13.49802303314209
    9. '``' → logprob: -15.24802303314209
    10. 'idx' → logprob: -15.37302303314209

Token 898: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8445532321929932
    2. 'u' → logprob: -1.7195532321929932
    3. 'a' → logprob: -1.9695532321929932
    4. 'l' → logprob: -2.219553232192993
    5. 'q' → logprob: -2.719553232192993
    6. 'p' → logprob: -3.594553232192993
    7. 'i' → logprob: -3.719553232192993
    8. 'v' → logprob: -5.094552993774414
    9. 's' → logprob: -5.719552993774414
    10. 't' → logprob: -6.219552993774414

Token 899: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.521630585193634
    2. ',' → logprob: -1.0216305255889893
    3. 'in' → logprob: -3.3966305255889893
    4. 'c' → logprob: -6.271630764007568
    5. '   ' → logprob: -6.271630764007568
    6. 'q' → logprob: -6.521630764007568
    7. ',c' → logprob: -6.646630764007568
    8. ' ,' → logprob: -7.021630764007568
    9. ',q' → logprob: -7.396630764007568
    10. 'i' → logprob: -7.396630764007568

Token 900: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.53638756275177
    2. 'x' → logprob: -1.53638756275177
    3. 'p' → logprob: -2.1613874435424805
    4. 'u' → logprob: -3.5363874435424805
    5. 'v' → logprob: -4.1613874435424805
    6. 'd' → logprob: -4.4113874435424805
    7. 'a' → logprob: -4.7863874435424805
    8. 'q' → logprob: -5.5363874435424805
    9. 'i' → logprob: -5.5363874435424805
    10. 'k' → logprob: -5.7863874435424805

Token 901: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20821751654148102
    2. ' in' → logprob: -1.7082175016403198
    3. ',' → logprob: -5.083217620849609
    4. ' ' → logprob: -8.58321762084961
    5. '   ' → logprob: -9.83321762084961
    6. ' ,' → logprob: -10.08321762084961
    7. '```' → logprob: -10.08321762084961
    8. 'c' → logprob: -10.45821762084961
    9. 'i' → logprob: -10.70821762084961
    10. '1' → logprob: -10.83321762084961

Token 902: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9998267889022827
    2. 'p' → logprob: -1.3748267889022827
    3. 'r' → logprob: -1.6248267889022827
    4. 'u' → logprob: -2.7498269081115723
    5. 'v' → logprob: -2.8748269081115723
    6. 'a' → logprob: -4.124826908111572
    7. 'd' → logprob: -4.124826908111572
    8. 's' → logprob: -5.124826908111572
    9. 'i' → logprob: -5.499826908111572
    10. 'k' → logprob: -5.624826908111572

Token 903: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12755034863948822
    2. ' in' → logprob: -2.1275503635406494
    3. ',' → logprob: -7.75255012512207
    4. 'n' → logprob: -9.50255012512207
    5. ' ' → logprob: -10.37755012512207
    6. '   ' → logprob: -10.87755012512207
    7. 'x' → logprob: -10.87755012512207
    8. ')' → logprob: -11.87755012512207
    9. '  ' → logprob: -11.87755012512207
    10. '1' → logprob: -12.37755012512207

Token 904: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009906481020152569
    2. 'd' → logprob: -5.88490629196167
    3. 'p' → logprob: -6.50990629196167
    4. 'r' → logprob: -6.88490629196167
    5. ' y' → logprob: -6.88490629196167
    6. 'k' → logprob: -7.25990629196167
    7. 'v' → logprob: -7.38490629196167
    8. 'a' → logprob: -8.259906768798828
    9. '_' → logprob: -8.259906768798828
    10. 'z' → logprob: -8.384906768798828

Token 905: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822158508002758
    2. 'in' → logprob: -4.018221378326416
    3. '   ' → logprob: -9.893221855163574
    4. ',' → logprob: -11.768221855163574
    5. ' ' → logprob: -12.143221855163574
    6. '	in' → logprob: -13.018221855163574
    7. '  ' → logprob: -13.518221855163574
    8. '_in' → logprob: -13.893221855163574
    9. ':' → logprob: -14.393221855163574
    10. '    ' → logprob: -14.518221855163574

Token 906: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -6.015305552864447e-05
    2. ' Query' → logprob: -10.125060081481934
    3. '(Query' → logprob: -11.375060081481934
    4. '[' → logprob: -12.500060081481934
    5. '	Query' → logprob: -13.375060081481934
    6. '<Query' → logprob: -14.250060081481934
    7. ' ' → logprob: -14.375060081481934
    8. '.Query' → logprob: -14.500060081481934
    9. '
' → logprob: -14.625060081481934
    10. '   ' → logprob: -14.750060081481934

Token 907: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6333811283111572
    2. ':' → logprob: -0.7583811283111572
    3. '   ' → logprob: -7.758380889892578
    4. '       ' → logprob: -8.133380889892578
    5. ',' → logprob: -11.133380889892578
    6. '():
' → logprob: -11.258380889892578
    7. '[' → logprob: -11.383380889892578
    8. ':
' → logprob: -11.633380889892578
    9. '):
' → logprob: -11.883380889892578
    10. ' :
' → logprob: -13.383380889892578

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014716439181938767
    2. ',' → logprob: -9.875146865844727
    3. '   ' → logprob: -10.125146865844727
    4. '```' → logprob: -11.125146865844727
    5. '<|end|>' → logprob: -11.250146865844727
    6. '	   ' → logprob: -12.500146865844727
    7. ' check' → logprob: -12.500146865844727
    8. ' if' → logprob: -12.750146865844727
    9. '        
' → logprob: -13.000146865844727
    10. '           ' → logprob: -13.375146865844727

Token 909: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9486638903617859
    2. 'check' (adapté à ' check') → logprob: -0.9486638903617859
    3. '   ' → logprob: -2.1986639499664307
    4. ' check' → logprob: -2.3236639499664307
    5. 'if' → logprob: -4.323663711547852
    6. ' if' → logprob: -5.823663711547852
    7. '```' → logprob: -8.698663711547852
    8. '           ' → logprob: -9.323663711547852
    9. 'for' → logprob: -10.323663711547852
    10. '	check' → logprob: -10.448663711547852

Token 910: '[x' (ID: 17295)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.024047883227467537
    2. '[l' → logprob: -4.0240478515625
    3. '[x' → logprob: -5.1490478515625
    4. '[y' → logprob: -10.0240478515625
    5. '[' → logprob: -11.0240478515625
    6. '   ' → logprob: -12.6490478515625
    7. '[int' → logprob: -12.7740478515625
    8. '```' → logprob: -13.2740478515625
    9. 'c' → logprob: -13.8990478515625
    10. '
' → logprob: -14.2740478515625

Token 911: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.018509265035390854
    2. '[x' → logprob: -4.018509387969971
    3. '][' → logprob: -8.393508911132812
    4. ']' → logprob: -9.518508911132812
    5. '[c' → logprob: -10.643508911132812
    6. '.add' → logprob: -11.643508911132812
    7. '   ' → logprob: -11.768508911132812
    8. ' ].' → logprob: -11.893508911132812
    9. '[' → logprob: -12.143508911132812
    10. '[i' → logprob: -14.018508911132812

Token 912: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.6405310816480778e-05
    2. ' add' → logprob: -12.250016212463379
    3. 'append' → logprob: -12.250016212463379
    4. 'update' → logprob: -12.500016212463379
    5. '.add' → logprob: -13.250016212463379
    6. '```' → logprob: -14.500016212463379
    7. '   ' → logprob: -15.500016212463379
    8. '(add' → logprob: -15.875016212463379
    9. ')add' → logprob: -16.000017166137695
    10. '	add' → logprob: -16.500017166137695

Token 913: '(c' (ID: 2410)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.17825032770633698
    2. '((' → logprob: -2.053250312805176
    3. '(l' → logprob: -3.428250312805176
    4. '(c' → logprob: -6.553250312805176
    5. '(' → logprob: -7.303250312805176
    6. '(x' → logprob: -8.803250312805176
    7. '(L' → logprob: -9.178250312805176
    8. 'y' → logprob: -9.553250312805176
    9. '(((' → logprob: -10.553250312805176
    10. '(r' → logprob: -10.928250312805176

Token 914: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022753889206796885
    2. ')
' → logprob: -6.377275466918945
    3. ',' → logprob: -8.502275466918945
    4. ',y' → logprob: -9.252275466918945
    5. ' )' → logprob: -9.502275466918945
    6. '       ' → logprob: -9.752275466918945
    7. '   ' → logprob: -9.752275466918945
    8. ')y' → logprob: -10.877275466918945
    9. '())' → logprob: -11.502275466918945
    10. '<|end|>' → logprob: -11.627275466918945

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001770139206200838
    2. '<|end|>' → logprob: -6.50177001953125
    3. 'check' → logprob: -8.75177001953125
    4. ' check' → logprob: -9.62677001953125
    5. '   ' → logprob: -11.00177001953125
    6. '```' → logprob: -11.62677001953125
    7. ' and' → logprob: -12.75177001953125
    8. '<|end|>' → logprob: -13.00177001953125
    9. ' ' → logprob: -13.25177001953125
    10. '(check' → logprob: -13.25177001953125

Token 916: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.0003936152206733823
    2. '       ' → logprob: -8.625393867492676
    3. ' check' → logprob: -8.625393867492676
    4. '   ' → logprob: -10.500393867492676
    5. 'y' → logprob: -12.375393867492676
    6. '	check' → logprob: -14.625393867492676
    7. ' ' → logprob: -14.875393867492676
    8. ' y' → logprob: -15.375393867492676
    9. '```' → logprob: -15.500393867492676
    10. '
' → logprob: -15.625393867492676

Token 917: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00012594614236149937
    2. '[' → logprob: -9.250125885009766
    3. '[x' → logprob: -11.500125885009766
    4. 'y' → logprob: -12.250125885009766
    5. '```' → logprob: -12.750125885009766
    6. '[l' → logprob: -12.875125885009766
    7. '       ' → logprob: -13.000125885009766
    8. ' [' → logprob: -13.125125885009766
    9. '[c' → logprob: -13.750125885009766
    10. '   ' → logprob: -13.750125885009766

Token 918: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.003190309274941683
    2. ').' → logprob: -6.378190517425537
    3. '.' → logprob: -7.128190517425537
    4. '.add' → logprob: -7.753190517425537
    5. ' .' → logprob: -9.503190040588379
    6. '>.' → logprob: -9.878190040588379
    7. '}.' → logprob: -9.878190040588379
    8. ']' → logprob: -10.628190040588379
    9. '[' → logprob: -11.628190040588379
    10. '       ' → logprob: -11.628190040588379

Token 919: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.896309739408025e-07
    2. ' add' → logprob: -14.250000953674316
    3. '.add' → logprob: -17.0
    4. '(add' → logprob: -17.125
    5. '```' → logprob: -18.25
    6. 'remove' → logprob: -18.375
    7. '	add' → logprob: -18.625
    8. ')add' → logprob: -19.0
    9. '_add' → logprob: -19.625
    10. ' ' → logprob: -19.625

Token 920: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.2352385965641588e-05
    2. 'c' → logprob: -11.375012397766113
    3. '(' → logprob: -14.375012397766113
    4. ')c' → logprob: -16.375011444091797
    5. '<|end|>' → logprob: -16.500011444091797
    6. '[c' → logprob: -16.750011444091797
    7. '(
' → logprob: -17.250011444091797
    8. ' (' → logprob: -17.375011444091797
    9. '```' → logprob: -18.375011444091797
    10. '	c' → logprob: -18.625011444091797

Token 921: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003765727742575109
    2. '<|end|>' → logprob: -8.37537670135498
    3. ')
' → logprob: -9.25037670135498
    4. '       ' → logprob: -10.12537670135498
    5. ' )' → logprob: -12.75037670135498
    6. ')return' → logprob: -13.50037670135498
    7. '   ' → logprob: -13.87537670135498
    8. ')}' → logprob: -14.50037670135498
    9. '())' → logprob: -14.62537670135498
    10. ',' → logprob: -14.87537670135498

Token 922: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: ' l' (ID: 305)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.33766287565231323
    2. 'for' → logprob: -2.087662935256958
    3. 'return' → logprob: -2.337662935256958
    4. '   ' → logprob: -3.587662935256958
    5. 'def' → logprob: -4.837662696838379
    6. 'if' → logprob: -5.212662696838379
    7. '       ' → logprob: -5.337662696838379
    8. ' for' → logprob: -5.712662696838379
    9. '<|end|>' → logprob: -5.712662696838379
    10. 'x' → logprob: -5.837662696838379

Token 924: 'ca' (ID: 3743)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7148722410202026
    2. '   ' → logprob: -1.4648722410202026
    3. '=' → logprob: -2.339872360229492
    4. ' +=' → logprob: -2.589872360229492
    5. '       ' → logprob: -3.964872360229492
    6. '+=' → logprob: -4.089872360229492
    7. ' ' → logprob: -4.214872360229492
    8. ',' → logprob: -4.339872360229492
    9. '<|end|>' → logprob: -4.964872360229492
    10. ' -=' → logprob: -5.214872360229492

Token 925: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2403283715248108
    2. '_val' → logprob: -2.240328311920166
    3. '_node' → logprob: -3.365328311920166
    4. '=' → logprob: -3.740328311920166
    5. '_' → logprob: -4.365328311920166
    6. '_value' → logprob: -4.990328311920166
    7. '_p' → logprob: -4.990328311920166
    8. '_token' → logprob: -5.615328311920166
    9. '_result' → logprob: -5.865328311920166
    10. '_x' → logprob: -6.240328311920166

Token 926: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0006271334132179618
    2. ' L' → logprob: -7.375627040863037
    3. '   ' → logprob: -14.625627517700195
    4. '(L' → logprob: -16.375627517700195
    5. '	L' → logprob: -17.125627517700195
    6. '`' → logprob: -17.250627517700195
    7. 'l' → logprob: -17.625627517700195
    8. '
' → logprob: -18.375627517700195
    9. '_L' → logprob: -18.875627517700195
    10. '(' → logprob: -19.375627517700195

Token 927: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.0017546684248372912
    2. 'C' → logprob: -6.5017547607421875
    3. 'A' → logprob: -8.751754760742188
    4. 'c' → logprob: -9.751754760742188
    5. 'ca' → logprob: -11.501754760742188
    6. 'L' → logprob: -11.751754760742188
    7. 'l' → logprob: -11.876754760742188
    8. 'AC' → logprob: -12.751754760742188
    9. ' CA' → logprob: -13.751754760742188
    10. '(l' → logprob: -14.001754760742188

Token 928: '_func' (ID: 22252)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0009489760850556195
    2. 'x' → logprob: -7.375948905944824
    3. '(l' → logprob: -8.500948905944824
    4. '(' → logprob: -9.750948905944824
    5. '(
' → logprob: -10.625948905944824
    6. ' (' → logprob: -11.000948905944824
    7. 'def' → logprob: -12.250948905944824
    8. '
' → logprob: -12.375948905944824
    9. 'l' → logprob: -13.250948905944824
    10. '(c' → logprob: -13.375948905944824

Token 929: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009830111637711525
    2. 'x' → logprob: -4.634829998016357
    3. '(' → logprob: -10.259830474853516
    4. '(
' → logprob: -10.759830474853516
    5. ' (' → logprob: -11.884830474853516
    6. '(l' → logprob: -12.384830474853516
    7. '   ' → logprob: -13.384830474853516
    8. '
' → logprob: -13.759830474853516
    9. ' x' → logprob: -14.009830474853516
    10. '((' → logprob: -14.259830474853516

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02128204144537449
    2. ',y' → logprob: -4.021282196044922
    3. ' ,' → logprob: -5.896282196044922
    4. ',l' → logprob: -8.271282196044922
    5. '       ' → logprob: -10.146282196044922
    6. ',
' → logprob: -10.771282196044922
    7. ',x' → logprob: -10.771282196044922
    8. ',m' → logprob: -12.146282196044922
    9. ',r' → logprob: -12.271282196044922
    10. '   ' → logprob: -12.271282196044922

Token 931: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004338877333793789
    2. ' y' → logprob: -7.750433921813965
    3. '   ' → logprob: -13.125433921813965
    4. '    ' → logprob: -14.875433921813965
    5. ' ' → logprob: -15.500433921813965
    6. '  ' → logprob: -16.25043296813965
    7. 'x' → logprob: -16.50043296813965
    8. '       ' → logprob: -16.50043296813965
    9. '	y' → logprob: -16.87543296813965
    10. 'y's' → logprob: -17.12543296813965

Token 932: ')[' (ID: 13637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021743135526776314
    2. ')' → logprob: -4.021743297576904
    3. ')
' → logprob: -6.396743297576904
    4. ' ,' → logprob: -6.521743297576904
    5. '       ' → logprob: -8.896742820739746
    6. '[' → logprob: -9.146742820739746
    7. ',l' → logprob: -9.521742820739746
    8. ',c' → logprob: -10.521742820739746
    9. ',N' → logprob: -10.646742820739746
    10. '   ' → logprob: -11.521742820739746

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. '
' → logprob: -11.500025749206543
    3. '0' → logprob: -12.500025749206543
    4. '-' → logprob: -12.625025749206543
    5. '2' → logprob: -12.750025749206543
    6. '```' → logprob: -13.375025749206543
    7. ' ' → logprob: -14.000025749206543
    8. '   ' → logprob: -14.125025749206543
    9. '::-' → logprob: -14.750025749206543
    10. '`' → logprob: -15.562525749206543

Token 934: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7068828344345093
    2. '<|end|>' → logprob: -0.7068828344345093
    3. '       ' → logprob: -5.831882953643799
    4. ']' → logprob: -5.831882953643799
    5. ')
' → logprob: -6.081882953643799
    6. '
' → logprob: -6.081882953643799
    7. '<|end|>' → logprob: -6.206882953643799
    8. '   ' → logprob: -8.08188247680664
    9. '```' → logprob: -8.45688247680664
    10. ')]' → logprob: -9.33188247680664

Token 935: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520120680332184
    2. '<|end|>' → logprob: -1.227012038230896
    3. '
' → logprob: -6.6020121574401855
    4. ')' → logprob: -7.1020121574401855
    5. '```' → logprob: -7.2270121574401855
    6. '   ' → logprob: -8.352011680603027
    7. '<|end|>' → logprob: -9.102011680603027
    8. '#' → logprob: -9.977011680603027
    9. '...' → logprob: -10.727011680603027
    10. '\' → logprob: -10.727011680603027

Token 936: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.009158804081380367
    2. 'for' → logprob: -4.884158611297607
    3. 'if' → logprob: -6.759158611297607
    4. '   ' → logprob: -8.509159088134766
    5. '       ' → logprob: -9.009159088134766
    6. ' check' → logprob: -10.259159088134766
    7. 'c' → logprob: -11.634159088134766
    8. '
' → logprob: -12.009159088134766
    9. '	check' → logprob: -13.259159088134766
    10. 'l' → logprob: -13.384159088134766

Token 937: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0001146291324403137
    2. '[c' → logprob: -9.375114440917969
    3. '[' → logprob: -11.375114440917969
    4. 'l' → logprob: -11.375114440917969
    5. '```' → logprob: -13.000114440917969
    6. '
' → logprob: -13.250114440917969
    7. '	l' → logprob: -14.000114440917969
    8. '[L' → logprob: -14.625114440917969
    9. '[x' → logprob: -14.875114440917969
    10. '`' → logprob: -15.250114440917969

Token 938: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.03253729268908501
    2. '[l' → logprob: -3.6575372219085693
    3. 'c' → logprob: -6.157537460327148
    4. 'a' → logprob: -6.157537460327148
    5. '[c' → logprob: -7.157537460327148
    6. '[a' → logprob: -7.782537460327148
    7. 'l' → logprob: -8.157537460327148
    8. '[' → logprob: -8.782537460327148
    9. 'aca' → logprob: -9.032537460327148
    10. '[x' → logprob: -9.032537460327148

Token 939: '].' (ID: 1651)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.35635679960250854
    2. '].' → logprob: -1.2313568592071533
    3. '[l' → logprob: -5.731356620788574
    4. '[c' → logprob: -6.231356620788574
    5. '][' → logprob: -6.606356620788574
    6. '[' → logprob: -7.731356620788574
    7. '.add' → logprob: -8.106356620788574
    8. ']' → logprob: -8.856356620788574
    9. '(x' → logprob: -9.356356620788574
    10. '{x' → logprob: -9.606356620788574

Token 940: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.56102097814437e-05
    2. 'discard' → logprob: -10.125045776367188
    3. 'remove' → logprob: -13.250045776367188
    4. 'update' → logprob: -13.375045776367188
    5. ' add' → logprob: -13.625045776367188
    6. '.add' → logprob: -15.000045776367188
    7. 'append' → logprob: -16.000045776367188
    8. 'clear' → logprob: -16.125045776367188
    9. '```' → logprob: -16.375045776367188
    10. '
' → logprob: -16.625045776367188

Token 941: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.016105452552437782
    2. 'c' → logprob: -4.141105651855469
    3. '(' → logprob: -10.141105651855469
    4. '0' → logprob: -11.391105651855469
    5. 'l' → logprob: -11.891105651855469
    6. '©' → logprob: -12.641105651855469
    7. '1' → logprob: -12.891105651855469
    8. '((' → logprob: -13.266105651855469
    9. ')c' → logprob: -13.641105651855469
    10. '	c' → logprob: -14.266105651855469

Token 942: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000633566698525101
    2. ')
' → logprob: -7.625633716583252
    3. '())' → logprob: -9.250633239746094
    4. '()' → logprob: -10.625633239746094
    5. ' )' → logprob: -12.250633239746094
    6. '<|end|>' → logprob: -12.250633239746094
    7. '   ' → logprob: -12.375633239746094
    8. ')return' → logprob: -13.000633239746094
    9. '       ' → logprob: -13.375633239746094
    10. ')

' → logprob: -13.625633239746094

Token 943: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0005532711511477828
    2. ' check' → logprob: -7.500553131103516
    3. '[' → logprob: -15.500553131103516
    4. '(check' → logprob: -16.875553131103516
    5. '	check' → logprob: -17.625553131103516
    6. '```' → logprob: -19.875553131103516
    7. 'chec' → logprob: -20.750553131103516
    8. ' [' → logprob: -21.000553131103516
    9. 'c' → logprob: -21.125553131103516
    10. '[N' → logprob: -21.125553131103516

Token 946: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001047339290380478
    2. '<|end|>' → logprob: -7.376047134399414
    3. '```' → logprob: -8.126047134399414
    4. '
' → logprob: -9.626047134399414
    5. 'import' → logprob: -10.376047134399414
    6. '#' → logprob: -11.001047134399414
    7. 'from' → logprob: -13.376047134399414
    8. '\' → logprob: -13.751047134399414
    9. '[]' → logprob: -13.876047134399414
    10. '<|end|>' → logprob: -14.001047134399414

Token 948: ' init' (ID: 6327)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7211601138114929
    2. 'process' → logprob: -1.5961601734161377
    3. 'solve' → logprob: -1.9711601734161377
    4. 'dfs' → logprob: -2.8461601734161377
    5. 'def' → logprob: -3.2211601734161377
    6. 'update' → logprob: -3.7211601734161377
    7. ' main' → logprob: -4.096159934997559
    8. ' solve' → logprob: -5.346159934997559
    9. 'calc' → logprob: -5.471159934997559
    10. ' process' → logprob: -5.596159934997559

Token 949: '_length' (ID: 11514)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.152704954147339
    2. 'def' → logprob: -2.402704954147339
    3. '_used' → logprob: -2.402704954147339
    4. '_cost' → logprob: -2.527704954147339
    5. '_color' → logprob: -2.652704954147339
    6. '_check' → logprob: -2.902704954147339
    7. '_colors' → logprob: -3.152704954147339
    8. '_c' → logprob: -3.402704954147339
    9. '_dist' → logprob: -3.402704954147339
    10. '_counter' → logprob: -3.527704954147339

Token 950: '_arrays' (ID: 182581)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.108608603477478
    2. '_and' → logprob: -1.233608603477478
    3. '_list' → logprob: -2.1086087226867676
    4. '():' → logprob: -2.3586087226867676
    5. '()' → logprob: -3.2336087226867676
    6. 'and' → logprob: -3.7336087226867676
    7. '_counts' → logprob: -3.7336087226867676
    8. '():
' → logprob: -4.233608722686768
    9. '_array' → logprob: -4.358608722686768
    10. '_count' → logprob: -4.608608722686768

Token 951: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002214250387623906
    2. 'def' → logprob: -6.252214431762695
    3. '(' → logprob: -9.002214431762695
    4. '(L' → logprob: -9.502214431762695
    5. ' (' → logprob: -10.002214431762695
    6. '(n' → logprob: -10.877214431762695
    7. '   ' → logprob: -12.127214431762695
    8. '```' → logprob: -12.252214431762695
    9. ' def' → logprob: -12.752214431762695
    10. '(size' → logprob: -13.377214431762695

Token 952: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021029122173786163
    2. '):' → logprob: -3.896029233932495
    3. '):
' → logprob: -8.021029472351074
    4. '():
' → logprob: -9.146029472351074
    5. ')' → logprob: -10.771029472351074
    6. ',' → logprob: -11.396029472351074
    7. '()):
' → logprob: -11.896029472351074
    8. '   ' → logprob: -12.146029472351074
    9. '():' → logprob: -13.146029472351074
    10. '(N' → logprob: -13.396029472351074

Token 953: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04688168689608574
    2. 'return' → logprob: -3.171881675720215
    3. 'def' → logprob: -5.921881675720215
    4. ' return' → logprob: -7.796881675720215
    5. '```' → logprob: -8.296881675720215
    6. 'L' → logprob: -9.046881675720215
    7. 'C' → logprob: -9.546881675720215
    8. 'LEN' → logprob: -9.796881675720215
    9. 'import' → logprob: -10.171881675720215
    10. 'CNT' → logprob: -10.671881675720215

Token 954: ' LENGTH' (ID: 173737)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11398684978485107
    2. 'def' → logprob: -3.7389869689941406
    3. 'L' → logprob: -3.9889869689941406
    4. 'LEN' → logprob: -4.113986968994141
    5. '   ' → logprob: -4.613986968994141
    6. 'C' → logprob: -5.238986968994141
    7. 'length' → logprob: -5.238986968994141
    8. 'INF' → logprob: -5.738986968994141
    9. '[' → logprob: -5.738986968994141
    10. ' return' → logprob: -5.863986968994141

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3140190839767456
    2. '=' → logprob: -1.3140190839767456
    3. '   ' → logprob: -9.064019203186035
    4. 'A' → logprob: -9.564019203186035
    5. '_' → logprob: -9.689019203186035
    6. 'C' → logprob: -9.814019203186035
    7. 'S' → logprob: -9.939019203186035
    8. '1' → logprob: -9.939019203186035
    9. '=[' → logprob: -10.064019203186035
    10. 'L' → logprob: -10.189019203186035

Token 956: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.058211568742990494
    2. '[[' → logprob: -2.9332115650177
    3. '[-' → logprob: -6.058211803436279
    4. '[(' → logprob: -7.808211803436279
    5. '[{' → logprob: -8.558211326599121
    6. ' [' → logprob: -9.058211326599121
    7. '{' → logprob: -9.183211326599121
    8. '{}' → logprob: -10.308211326599121
    9. '[n' → logprob: -10.808211326599121
    10. ' [[' → logprob: -10.933211326599121

Token 957: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0282328128814697
    2. '[' → logprob: -1.4032328128814697
    3. '{}' → logprob: -1.7782328128814697
    4. 'dict' → logprob: -2.0282328128814697
    5. '[]' → logprob: -3.2782328128814697
    6. '[-' → logprob: -3.5282328128814697
    7. '(' → logprob: -4.653232574462891
    8. 'default' → logprob: -5.278232574462891
    9. '[(' → logprob: -5.778232574462891
    10. '{' → logprob: -5.903232574462891

Token 958: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.01820976287126541
    2. ']' → logprob: -4.018209934234619
    3. '*(' → logprob: -10.143209457397461
    4. ']*' → logprob: -11.018209457397461
    5. ' for' → logprob: -13.268209457397461
    6. ']+' → logprob: -14.018209457397461
    7. 'for' → logprob: -14.143209457397461
    8. '   ' → logprob: -14.268209457397461
    9. '(N' → logprob: -15.643209457397461
    10. '](' → logprob: -16.14320945739746

Token 959: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007627092767506838
    2. '(N' → logprob: -4.882627010345459
    3. ' N' → logprob: -11.882627487182617
    4. '   ' → logprob: -12.257627487182617
    5. '(' → logprob: -12.632627487182617
    6. ' (' → logprob: -13.382627487182617
    7. '```' → logprob: -14.382627487182617
    8. '[N' → logprob: -14.632627487182617
    9. ' ' → logprob: -14.757627487182617
    10. '`' → logprob: -15.007627487182617

Token 960: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4021237802808173e-05
    2. ' +' → logprob: -11.875014305114746
    3. '+
' → logprob: -12.000014305114746
    4. '1' → logprob: -15.125014305114746
    5. '
' → logprob: -15.500014305114746
    6. '<|end|>' → logprob: -16.25001335144043
    7. '```' → logprob: -16.50001335144043
    8. ')' → logprob: -16.87501335144043
    9. '+)' → logprob: -17.00001335144043
    10. '[' → logprob: -17.25001335144043

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. '+' → logprob: -10.625033378601074
    3. ' ' → logprob: -12.125033378601074
    4. '```' → logprob: -13.000033378601074
    5. '2' → logprob: -14.750033378601074
    6. '   ' → logprob: -15.000033378601074
    7. '`' → logprob: -15.750033378601074
    8. '7' → logprob: -15.937533378601074
    9. 'import' → logprob: -16.25003433227539
    10. '(' → logprob: -16.50003433227539

Token 962: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741157293319702
    2. ')' → logprob: -0.9741157293319702
    3. ')
' → logprob: -10.724115371704102
    4. '   ' → logprob: -11.349115371704102
    5. ')L' → logprob: -13.599115371704102
    6. ')

' → logprob: -13.724115371704102
    7. 'def' → logprob: -13.974115371704102
    8. ' )
' → logprob: -14.474115371704102
    9. ')return' → logprob: -14.724115371704102
    10. '),' → logprob: -15.599115371704102

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25464242696762085
    2. 'def' → logprob: -3.1296424865722656
    3. 'return' → logprob: -3.7546424865722656
    4. 'COUNT' → logprob: -3.8796424865722656
    5. 'MAX' → logprob: -3.8796424865722656
    6. 'P' → logprob: -4.379642486572266
    7. 'L' → logprob: -4.504642486572266
    8. 'DEP' → logprob: -4.504642486572266
    9. 'DIST' → logprob: -4.879642486572266
    10. 'MIN' → logprob: -5.004642486572266

Token 964: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -2.243708610534668
    2. 'def' → logprob: -2.243708610534668
    3. 'MAX' → logprob: -2.618708610534668
    4. 'return' → logprob: -2.868708610534668
    5. 'P' → logprob: -3.118708610534668
    6. 'COUNT' → logprob: -3.118708610534668
    7. 'DEP' → logprob: -3.368708610534668
    8. 'DIST' → logprob: -3.618708610534668
    9. 'SUM' → logprob: -3.743708610534668
    10. 'RETURN' → logprob: -3.868708610534668

Token 965: 'ENG' (ID: 12674)
  Prédit: 'AST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AST' → logprob: -1.038319706916809
    2. 'EN' → logprob: -1.913319706916809
    3. 'ENGTH' → logprob: -1.913319706916809
    4. 'IMIT' → logprob: -2.4133195877075195
    5. 'MAX' → logprob: -3.1633195877075195
    6. 'COUNT' → logprob: -3.4133195877075195
    7. 'C' → logprob: -3.7883195877075195
    8. 'L' → logprob: -4.0383195877075195
    9. 'IST' → logprob: -4.4133195877075195
    10. 'MIN' → logprob: -4.6633195877075195

Token 966: ' =' (ID: 314)
  Prédit: 'TH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TH' → logprob: -0.00048119694110937417
    2. 'H' → logprob: -8.375481605529785
    3. 'HT' → logprob: -9.375481605529785
    4. 'T' → logprob: -9.750481605529785
    5. '```' → logprob: -10.500481605529785
    6. '[' → logprob: -11.500481605529785
    7. '=' → logprob: -12.000481605529785
    8. '
' → logprob: -12.000481605529785
    9. 'th' → logprob: -12.000481605529785
    10. '1' → logprob: -12.125481605529785

Token 967: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04453260079026222
    2. ' [' → logprob: -3.169532537460327
    3. '[(' → logprob: -7.169532775878906
    4. '[-' → logprob: -8.669532775878906
    5. '[[' → logprob: -9.044532775878906
    6. '[N' → logprob: -9.044532775878906
    7. '   ' → logprob: -9.169532775878906
    8. ' [(' → logprob: -9.544532775878906
    9. ' ' → logprob: -10.794532775878906
    10. ' [[' → logprob: -10.919532775878906

Token 968: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009008648805320263
    2. '[[' → logprob: -5.759008884429932
    3. '[N' → logprob: -6.384008884429932
    4. '[(' → logprob: -7.009008884429932
    5. '[L' → logprob: -7.259008884429932
    6. ' [' → logprob: -7.634008884429932
    7. '[{' → logprob: -7.759008884429932
    8. '{}' → logprob: -7.759008884429932
    9. '[-' → logprob: -8.259008407592773
    10. '{' → logprob: -9.134008407592773

Token 969: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 971: ' C' (ID: 363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: '_LENGTH' (ID: 33289)
  Prédit: 'OUNT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OUNT' → logprob: -0.688110888004303
    2. ' =' → logprob: -1.1881108283996582
    3. 'OUN' → logprob: -2.563110828399658
    4. 'URRENT' → logprob: -3.688110828399658
    5. 'ENGTH' → logprob: -3.813110828399658
    6. '=' → logprob: -4.063110828399658
    7. 'UR' → logprob: -5.063110828399658
    8. 'L' → logprob: -5.313110828399658
    9. 'EN' → logprob: -5.438110828399658
    10. 'C' → logprob: -5.688110828399658

Token 973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43787094950675964
    2. '=' → logprob: -1.062870979309082
    3. 'S' → logprob: -5.312870979309082
    4. 's' → logprob: -5.687870979309082
    5. '   ' → logprob: -8.187870979309082
    6. '=[' → logprob: -9.687870979309082
    7. ',' → logprob: -9.687870979309082
    8. '[' → logprob: -9.812870979309082
    9. '[]' → logprob: -9.937870979309082
    10. '=[]' → logprob: -9.937870979309082

Token 974: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13447612524032593
    2. '{}' → logprob: -2.1344761848449707
    3. ' [' → logprob: -5.384476184844971
    4. '[]' → logprob: -6.634476184844971
    5. '{' → logprob: -7.759476184844971
    6. 'dict' → logprob: -7.759476184844971
    7. ' {}' → logprob: -8.009475708007812
    8. '0' → logprob: -9.009475708007812
    9. '{}
' → logprob: -9.384475708007812
    10. '[[' → logprob: -10.134475708007812

Token 975: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2129334807395935
    2. '{}' → logprob: -1.9629335403442383
    3. '[' → logprob: -3.5879335403442383
    4. '(' → logprob: -4.712933540344238
    5. '[]' → logprob: -4.837933540344238
    6. 'dict' → logprob: -5.337933540344238
    7. 'default' → logprob: -7.462933540344238
    8. 'None' → logprob: -7.962933540344238
    9. '{' → logprob: -8.212933540344238
    10. '{}
' → logprob: -8.837933540344238

Token 976: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.005265649873763323
    2. ']' → logprob: -5.630265712738037
    3. ']*' → logprob: -6.630265712738037
    4. '*(' → logprob: -8.005265235900879
    5. '](' → logprob: -11.755265235900879
    6. ']+' → logprob: -14.380265235900879
    7. '*' → logprob: -14.380265235900879
    8. ' for' → logprob: -15.380265235900879
    9. '   ' → logprob: -15.380265235900879
    10. '(' → logprob: -15.380265235900879

Token 977: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1446332186460495
    2. '(' → logprob: -2.0196332931518555
    3. '100' → logprob: -7.8946332931518555
    4. '101' → logprob: -8.269633293151855
    5. '(len' → logprob: -8.269633293151855
    6. '0' → logprob: -8.894633293151855
    7. '((' → logprob: -8.894633293151855
    8. '21' → logprob: -9.019633293151855
    9. 'N' → logprob: -9.769633293151855
    10. '501' → logprob: -9.769633293151855

Token 978: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022277824580669403
    2. '<|end|>' → logprob: -4.02227783203125
    3. '   ' → logprob: -6.14727783203125
    4. '[' → logprob: -8.02227783203125
    5. '    
' → logprob: -8.39727783203125
    6. ' ' → logprob: -8.39727783203125
    7. ')
' → logprob: -8.64727783203125
    8. ')' → logprob: -8.64727783203125
    9. '[]' → logprob: -9.52227783203125
    10. '
' → logprob: -9.52227783203125

Token 979: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9660938382148743
    2. '   ' → logprob: -1.2160937786102295
    3. '<|end|>' → logprob: -1.2160937786102295
    4. ' ' → logprob: -4.091094017028809
    5. ' return' → logprob: -5.841094017028809
    6. '	return' → logprob: -5.966094017028809
    7. 'return' → logprob: -6.841094017028809
    8. '    
' → logprob: -7.341094017028809
    9. ')' → logprob: -7.591094017028809
    10. ' 
' → logprob: -7.591094017028809

Token 980: ' C' (ID: 363)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.409427672624588
    2. '   ' → logprob: -1.1594276428222656
    3. ' return' → logprob: -4.159427642822266
    4. 'def' → logprob: -6.034427642822266
    5. '	return' → logprob: -6.659427642822266
    6. 'L' → logprob: -7.034427642822266
    7. '<|end|>' → logprob: -7.284427642822266
    8. ' ' → logprob: -8.034427642822266
    9. 'for' → logprob: -8.159427642822266
    10. '
' → logprob: -8.784427642822266

Token 981: '_SUM' (ID: 121371)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.015328837558627129
    2. '_L' → logprob: -4.515328884124756
    3. '_length' → logprob: -6.515328884124756
    4. 'L' → logprob: -7.015328884124756
    5. '_LEN' → logprob: -7.265328884124756
    6. '_' → logprob: -7.390328884124756
    7. '_LE' → logprob: -8.265328407287598
    8. '_Length' → logprob: -9.640328407287598
    9. '[' → logprob: -10.515328407287598
    10. '```' → logprob: -10.890328407287598

Token 982: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47556883096694946
    2. '=' → logprob: -0.9755688309669495
    3. '=[]' → logprob: -7.350568771362305
    4. '=[' → logprob: -7.600568771362305
    5. '   ' → logprob: -8.975568771362305
    6. '[' → logprob: -10.475568771362305
    7. 's' → logprob: -10.725568771362305
    8. ',' → logprob: -10.850568771362305
    9. ']' → logprob: -10.850568771362305
    10. '  ' → logprob: -10.850568771362305

Token 983: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012522541219368577
    2. ' [' → logprob: -7.251252174377441
    3. '0' → logprob: -7.876252174377441
    4. '{}' → logprob: -9.751252174377441
    5. '{' → logprob: -10.501252174377441
    6. '[[' → logprob: -11.376252174377441
    7. '[N' → logprob: -11.376252174377441
    8. '[-' → logprob: -11.626252174377441
    9. '[]' → logprob: -11.751252174377441
    10. '   ' → logprob: -12.001252174377441

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019989686086773872
    2. '[' → logprob: -4.019989490509033
    3. '(' → logprob: -6.519989490509033
    4. '[N' → logprob: -9.019989967346191
    5. ' [' → logprob: -10.144989967346191
    6. '{}' → logprob: -10.144989967346191
    7. ' ' → logprob: -10.144989967346191
    8. '(N' → logprob: -10.769989967346191
    9. '[]' → logprob: -10.769989967346191
    10. 'N' → logprob: -10.894989967346191

Token 985: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2276925891637802
    2. ']*(' → logprob: -1.6026926040649414
    3. ']' → logprob: -6.227692604064941
    4. '*' → logprob: -8.727692604064941
    5. '*(' → logprob: -9.477692604064941
    6. '](' → logprob: -10.227692604064941
    7. ' ]' → logprob: -11.602692604064941
    8. '*N' → logprob: -11.977692604064941
    9. ']+' → logprob: -12.727692604064941
    10. '   ' → logprob: -12.977692604064941

Token 986: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020213313400745392
    2. '(' → logprob: -4.2702131271362305
    3. '(N' → logprob: -5.2702131271362305
    4. 'len' → logprob: -8.02021312713623
    5. '100' → logprob: -8.27021312713623
    6. '(len' → logprob: -9.02021312713623
    7. '((' → logprob: -10.39521312713623
    8. '101' → logprob: -10.64521312713623
    9. '10' → logprob: -11.02021312713623
    10. 'max' → logprob: -11.27021312713623

Token 987: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06670653074979782
    2. '   ' → logprob: -2.816706418991089
    3. '<|end|>' → logprob: -5.566706657409668
    4. '    
' → logprob: -8.191706657409668
    5. '  
' → logprob: -9.066706657409668
    6. ' ' → logprob: -9.441706657409668
    7. '	return' → logprob: -9.441706657409668
    8. ' return' → logprob: -9.691706657409668
    9. ' 
' → logprob: -9.816706657409668
    10. '
' → logprob: -9.941706657409668

Token 988: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03597733750939369
    2. '
' → logprob: -3.660977363586426
    3. 'def' → logprob: -5.785977363586426
    4. '<|end|>' → logprob: -5.910977363586426
    5. ' return' → logprob: -6.160977363586426
    6. 'return' → logprob: -6.785977363586426
    7. '	return' → logprob: -7.910977363586426
    8. ' ' → logprob: -9.410977363586426
    9. '    
' → logprob: -9.785977363586426
    10. '  ' → logprob: -10.785977363586426

Token 989: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013467011973261833
    2. 'return' → logprob: -4.763466835021973
    3. '	return' → logprob: -5.513466835021973
    4. ' return' → logprob: -7.263466835021973
    5. 'def' → logprob: -10.138466835021973
    6. '<|end|>' → logprob: -11.513466835021973
    7. '   ' → logprob: -11.638466835021973
    8. '	' → logprob: -11.888466835021973
    9. '    ' → logprob: -12.013466835021973
    10. ' ' → logprob: -12.263466835021973

Token 990: '_L' (ID: 4258)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.16667523980140686
    2. '_length' → logprob: -2.541675329208374
    3. '_L' → logprob: -3.541675329208374
    4. '_COUNT' → logprob: -4.791675090789795
    5. '_lengths' → logprob: -5.166675090789795
    6. ' =' → logprob: -5.666675090789795
    7. '_LEN' → logprob: -5.666675090789795
    8. 'L' → logprob: -5.791675090789795
    9. '_SUM' → logprob: -5.916675090789795
    10. '_Length' → logprob: -6.166675090789795

Token 991: 'DICT' (ID: 175657)
  Prédit: 'ENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ENGTH' → logprob: -0.06448319554328918
    2. 'EN' → logprob: -3.564483165740967
    3. 'IST' → logprob: -3.689483165740967
    4. 'ength' → logprob: -5.689483165740967
    5. 'ENG' → logprob: -5.689483165740967
    6. 'E' → logprob: -7.439483165740967
    7. 'L' → logprob: -7.689483165740967
    8. '_LENGTH' → logprob: -8.064483642578125
    9. 'ENT' → logprob: -8.814483642578125
    10. 'C' → logprob: -9.314483642578125

Token 992: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741846024990082
    2. ' =' → logprob: -0.9741846323013306
    3. '={}' → logprob: -10.2241849899292
    4. ',' → logprob: -10.7241849899292
    5. '=[]' → logprob: -11.0991849899292
    6. '[' → logprob: -11.4741849899292
    7. '<|end|>' → logprob: -12.8491849899292
    8. '=[' → logprob: -12.8491849899292
    9. ')' → logprob: -12.9741849899292
    10. '={' → logprob: -13.0991849899292

Token 993: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031015971675515175
    2. '{}' → logprob: -3.5310158729553223
    3. ' [{}' → logprob: -7.906015872955322
    4. 'dict' → logprob: -8.28101634979248
    5. 'default' → logprob: -8.40601634979248
    6. '[]' → logprob: -8.65601634979248
    7. '[{' → logprob: -9.15601634979248
    8. '{' → logprob: -10.15601634979248
    9. '   ' → logprob: -10.40601634979248
    10. ' [' → logprob: -10.65601634979248

Token 994: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008578622946515679
    2. '()
' → logprob: -7.125857830047607
    3. '()\' → logprob: -11.375858306884766
    4. '(' → logprob: -11.750858306884766
    5. '()}' → logprob: -12.125858306884766
    6. '()<' → logprob: -12.250858306884766
    7. '()]' → logprob: -12.250858306884766
    8. '()

' → logprob: -12.375858306884766
    9. '()</' → logprob: -12.625858306884766
    10. ' ()' → logprob: -12.875858306884766

Token 995: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001457139616832137
    2. '<|end|>' → logprob: -6.876457214355469
    3. 'def' → logprob: -8.126457214355469
    4. ' return' → logprob: -10.501457214355469
    5. 'return' → logprob: -10.626457214355469
    6. '	return' → logprob: -11.001457214355469
    7. '
' → logprob: -11.126457214355469
    8. ')' → logprob: -11.626457214355469
    9. ' ' → logprob: -11.876457214355469
    10. '[]' → logprob: -12.251457214355469

Token 996: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007761957589536905
    2. ' return' → logprob: -5.5077619552612305
    3. 'return' → logprob: -6.2577619552612305
    4. '	return' → logprob: -6.5077619552612305
    5. 'def' → logprob: -8.88276195526123
    6. '<|end|>' → logprob: -10.00776195526123
    7. '```' → logprob: -10.63276195526123
    8. ' ' → logprob: -11.63276195526123
    9. '[]' → logprob: -12.00776195526123
    10. '    ' → logprob: -12.13276195526123

Token 997: '_S' (ID: 1875)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.13246768712997437
    2. '_L' → logprob: -2.882467746734619
    3. '_length' → logprob: -4.007467746734619
    4. '_LEN' → logprob: -4.632467746734619
    5. '_COUNT' → logprob: -5.132467746734619
    6. '_INDEX' → logprob: -5.257467746734619
    7. '_KEYS' → logprob: -5.507467746734619
    8. '_IDX' → logprob: -6.007467746734619
    9. '_COUNTER' → logprob: -6.132467746734619
    10. '_SUM' → logprob: -6.257467746734619

Token 998: 'DICT' (ID: 175657)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8984505534172058
    2. 'UM' → logprob: -1.2734506130218506
    3. '_LENGTH' → logprob: -1.7734506130218506
    4. 'DICT' → logprob: -2.6484506130218506
    5. '_DICT' → logprob: -3.7734506130218506
    6. '_L' → logprob: -4.1484503746032715
    7. '_' → logprob: -4.8984503746032715
    8. '_length' → logprob: -5.3984503746032715
    9. 'dict' → logprob: -6.0234503746032715
    10. '_LEN' → logprob: -6.2734503746032715

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04907916858792305
    2. ' =' → logprob: -3.049079179763794
    3. '={}' → logprob: -7.674078941345215
    4. '={}
' → logprob: -11.299078941345215
    5. '={' → logprob: -11.674078941345215
    6. '=[]' → logprob: -13.174078941345215
    7. '{}' → logprob: -13.674078941345215
    8. ' ={' → logprob: -13.799078941345215
    9. '[' → logprob: -14.799078941345215
    10. '=dict' → logprob: -15.174078941345215

Token 1000: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.10070585459470749
    2. '{}' → logprob: -2.350705862045288
    3. ' dict' → logprob: -7.975705623626709
    4. '{' → logprob: -9.600706100463867
    5. 'default' → logprob: -10.475706100463867
    6. '{}
' → logprob: -10.600706100463867
    7. '(dict' → logprob: -11.225706100463867
    8. ' {}' → logprob: -11.850706100463867
    9. '{})' → logprob: -13.225706100463867
    10. '   ' → logprob: -13.225706100463867

Token 1001: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030356520786881447
    2. '()
' → logprob: -3.5303564071655273
    3. '   ' → logprob: -8.030356407165527
    4. '<|end|>' → logprob: -9.155356407165527
    5. ')' → logprob: -10.030356407165527
    6. '
' → logprob: -10.280356407165527
    7. '()\' → logprob: -10.905356407165527
    8. '(' → logprob: -11.030356407165527
    9. 'def' → logprob: -11.280356407165527
    10. '()

' → logprob: -11.530356407165527

Token 1002: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006948007503524423
    2. 'def' → logprob: -7.750694751739502
    3. '<|end|>' → logprob: -8.62569522857666
    4. '	return' → logprob: -10.50069522857666
    5. 'return' → logprob: -10.87569522857666
    6. ' return' → logprob: -11.12569522857666
    7. '
' → logprob: -11.37569522857666
    8. ' def' → logprob: -13.25069522857666
    9. ' ' → logprob: -13.50069522857666
    10. '    ' → logprob: -13.87569522857666

Token 1003: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12433262169361115
    2. 'def' → logprob: -2.8743326663970947
    3. 'return' (adapté à ' return') → logprob: -2.8743326663970947
    4. ' return' → logprob: -6.499332427978516
    5. '```' → logprob: -6.999332427978516
    6. '<|end|>' → logprob: -6.999332427978516
    7. '	return' → logprob: -8.124332427978516
    8. '[]' → logprob: -9.749332427978516
    9. '
' → logprob: -10.124332427978516
    10. ' ' → logprob: -10.249332427978516

Token 1004: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.598551332950592
    2. 'N' → logprob: -0.973551332950592
    3. ' LENGTH' → logprob: -2.7235512733459473
    4. ' N' → logprob: -5.598551273345947
    5. ' L' → logprob: -6.473551273345947
    6. 'length' → logprob: -7.348551273345947
    7. '   ' → logprob: -8.223551750183105
    8. ' length' → logprob: -8.848551750183105
    9. ' ' → logprob: -8.973551750183105
    10. '(N' → logprob: -9.223551750183105

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018001272110268474
    2. '<|end|>' → logprob: -6.501800060272217
    3. ',L' → logprob: -8.626800537109375
    4. ',
' → logprob: -10.501800537109375
    5. 'def' → logprob: -10.626800537109375
    6. '[' → logprob: -10.751800537109375
    7. ' ,' → logprob: -11.251800537109375
    8. 'L' → logprob: -12.501800537109375
    9. '```' → logprob: -12.626800537109375
    10. ',C' → logprob: -12.626800537109375

Token 1006: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00043460296001285315
    2. ' L' → logprob: -7.875434398651123
    3. 'C' → logprob: -9.875434875488281
    4. 'N' → logprob: -13.375434875488281
    5. '	L' → logprob: -15.250434875488281
    6. 'LEN' → logprob: -15.500434875488281
    7. '   ' → logprob: -15.750434875488281
    8. 'l' → logprob: -16.00043487548828
    9. 'length' → logprob: -16.25043487548828
    10. '0' → logprob: -16.50043487548828

Token 1007: 'ENG' (ID: 12674)
  Prédit: 'ENG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENG' → logprob: -0.07467041164636612
    2. 'ENGTH' → logprob: -3.3246703147888184
    3. 'EN' → logprob: -3.4496703147888184
    4. 'E' → logprob: -5.949670314788818
    5. 'C' → logprob: -8.074670791625977
    6. 'L' → logprob: -8.199670791625977
    7. 'eng' → logprob: -8.699670791625977
    8. 'ength' → logprob: -8.824670791625977
    9. 'ENT' → logprob: -8.824670791625977
    10. 'EG' → logprob: -9.199670791625977

Token 1008: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1009: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003837213444057852
    2. ' C' → logprob: -7.8753838539123535
    3. '   ' → logprob: -13.250383377075195
    4. '
' → logprob: -14.250383377075195
    5. ' ' → logprob: -15.500383377075195
    6. '0' → logprob: -15.625383377075195
    7. '\
' → logprob: -15.875383377075195
    8. '	C' → logprob: -15.875383377075195
    9. 'CL' → logprob: -16.125383377075195
    10. '[C' → logprob: -16.375383377075195

Token 1010: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.0002988776541315019
    2. '_L' → logprob: -8.375298500061035
    3. '_SUM' → logprob: -10.375298500061035
    4. '_S' → logprob: -11.000298500061035
    5. 'L' → logprob: -11.000298500061035
    6. '_LEN' → logprob: -13.375298500061035
    7. '_length' → logprob: -14.375298500061035
    8. '_' → logprob: -15.000298500061035
    9. '_Length' → logprob: -15.125298500061035
    10. '_DEPTH' → logprob: -15.125298500061035

Token 1011: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016909420082811266
    2. ',C' → logprob: -9.250168800354004
    3. ' ,' → logprob: -9.875168800354004
    4. 'C' → logprob: -11.125168800354004
    5. '_,' → logprob: -13.125168800354004
    6. ',
' → logprob: -13.500168800354004
    7. 'def' → logprob: -14.000168800354004
    8. '<|end|>' → logprob: -14.625168800354004
    9. '```' → logprob: -14.875168800354004
    10. ' C' → logprob: -15.250168800354004

Token 1012: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.006716674659401178
    2. ' C' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.75671672821045
    4. '
' → logprob: -14.75671672821045
    5. ' ' → logprob: -15.00671672821045
    6. '	C' → logprob: -16.256715774536133
    7. '  ' → logprob: -16.881715774536133
    8. ',' → logprob: -17.381715774536133
    9. '_C' → logprob: -17.506715774536133
    10. '\
' → logprob: -17.756715774536133

Token 1013: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.0004035017918795347
    2. 'SUM' → logprob: -8.12540340423584
    3. '_S' → logprob: -9.37540340423584
    4. '_LENGTH' → logprob: -11.00040340423584
    5. '_sum' → logprob: -13.50040340423584
    6. '_LEN' → logprob: -13.62540340423584
    7. '_' → logprob: -14.25040340423584
    8. 'sum' → logprob: -14.75040340423584
    9. '_SIZE' → logprob: -14.87540340423584
    10. '_SU' → logprob: -15.25040340423584

Token 1014: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3258002698421478
    2. '<|end|>' → logprob: -1.3258002996444702
    3. ',' → logprob: -4.45080041885376
    4. '[]' → logprob: -7.95080041885376
    5. '
' → logprob: -8.950799942016602
    6. '<|end|>' → logprob: -9.575799942016602
    7. '```' → logprob: -9.700799942016602
    8. ' def' → logprob: -10.325799942016602
    9. '[' → logprob: -10.700799942016602
    10. ',
' → logprob: -10.700799942016602

Token 1015: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005930574145168066
    2. ' C' → logprob: -5.130930423736572
    3. '   ' → logprob: -14.13093090057373
    4. ' ' → logprob: -14.50593090057373
    5. '	C' → logprob: -15.25593090057373
    6. '  ' → logprob: -15.88093090057373
    7. '
' → logprob: -16.005929946899414
    8. '(C' → logprob: -17.005929946899414
    9. '\
' → logprob: -17.130929946899414
    10. '    ' → logprob: -17.255929946899414

Token 1016: '_L' (ID: 4258)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10698486864566803
    2. '_L' → logprob: -2.981984853744507
    3. 'LD' → logprob: -3.356984853744507
    4. 'DICT' → logprob: -4.606985092163086
    5. '_LENGTH' → logprob: -5.606985092163086
    6. '_DICT' → logprob: -7.481985092163086
    7. 'SD' → logprob: -8.106985092163086
    8. 'S' → logprob: -8.106985092163086
    9. 'LS' → logprob: -8.981985092163086
    10. '
' → logprob: -9.481985092163086

Token 1017: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.08252792805433273
    2. 'IST' → logprob: -2.7075278759002686
    3. 'ICT' → logprob: -4.707528114318848
    4. 'ENGTH' → logprob: -6.707528114318848
    5. 'EN' → logprob: -7.832528114318848
    6. '_DICT' → logprob: -8.082528114318848
    7. 'ENG' → logprob: -8.207528114318848
    8. 'DIST' → logprob: -8.332528114318848
    9. 'ST' → logprob: -8.957528114318848
    10. 'DI' → logprob: -9.207528114318848

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018567692022770643
    2. 'def' → logprob: -6.376856803894043
    3. ',C' → logprob: -9.126856803894043
    4. 'C' → logprob: -10.126856803894043
    5. ',
' → logprob: -13.251856803894043
    6. '```' → logprob: -13.376856803894043
    7. ' ,' → logprob: -14.251856803894043
    8. ' def' → logprob: -14.501856803894043
    9. '_,' → logprob: -14.626856803894043
    10. '   ' → logprob: -14.751856803894043

Token 1019: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008616345934569836
    2. ' C' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.75861644744873
    4. ' ' → logprob: -15.13361644744873
    5. '
' → logprob: -15.13361644744873
    6. '	C' → logprob: -15.63361644744873
    7. '_C' → logprob: -16.883615493774414
    8. '  ' → logprob: -16.883615493774414
    9. '    ' → logprob: -17.633615493774414
    10. '\
' → logprob: -17.758615493774414

Token 1020: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0005964008742012084
    2. 'SD' → logprob: -8.000596046447754
    3. 'S' → logprob: -8.750596046447754
    4. '_SD' → logprob: -9.750596046447754
    5. 'DICT' → logprob: -11.375596046447754
    6. '_s' → logprob: -11.500596046447754
    7. '_L' → logprob: -11.875596046447754
    8. '_DICT' → logprob: -12.250596046447754
    9. '_' → logprob: -12.625596046447754
    10. '_LENGTH' → logprob: -12.750596046447754

Token 1021: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0010574605548754334
    2. 'ICT' → logprob: -7.3760576248168945
    3. '_DICT' → logprob: -8.126057624816895
    4. 'DI' → logprob: -9.501057624816895
    5. 'D' → logprob: -10.751057624816895
    6. '_dict' → logprob: -11.251057624816895
    7. 'Dict' → logprob: -12.376057624816895
    8. '
' → logprob: -12.376057624816895
    9. 'dict' → logprob: -12.376057624816895
    10. 'ID' → logprob: -12.501057624816895

Token 1022: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018138210289180279
    2. '<|end|>' → logprob: -6.376813888549805
    3. 'from' → logprob: -10.626813888549805
    4. '```' → logprob: -10.626813888549805
    5. 'import' → logprob: -10.876813888549805
    6. '
' → logprob: -10.876813888549805
    7. '#' → logprob: -11.376813888549805
    8. 'class' → logprob: -12.501813888549805
    9. '<|end|>' → logprob: -13.001813888549805
    10. 'return' → logprob: -13.751813888549805

Token 1023: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009059838484972715
    2. '
' → logprob: -7.250905990600586
    3. '<|end|>' → logprob: -8.875905990600586
    4. 'class' → logprob: -11.000905990600586
    5. 'import' → logprob: -11.500905990600586
    6. '#' → logprob: -11.750905990600586
    7. 'from' → logprob: -12.000905990600586
    8. '```' → logprob: -12.000905990600586
    9. '<|end|>' → logprob: -12.250905990600586
    10. ' def' → logprob: -14.625905990600586

Token 1024: ' reset' (ID: 12820)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.7400233745574951
    2. ' process' → logprob: -1.6150233745574951
    3. 'dfs' → logprob: -2.365023374557495
    4. 'build' → logprob: -3.115023374557495
    5. 'solve' → logprob: -3.365023374557495
    6. 'main' → logprob: -3.865023374557495
    7. ' build' → logprob: -3.990023374557495
    8. ' dfs' → logprob: -4.115023612976074
    9. 'update' → logprob: -4.115023612976074
    10. ' main' → logprob: -4.365023612976074

Token 1025: '_ind' (ID: 20261)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0534930229187012
    2. '()' → logprob: -1.8034930229187012
    3. '(L' → logprob: -1.8034930229187012
    4. '_LENGTH' → logprob: -2.553493022918701
    5. '_' → logprob: -2.803493022918701
    6. '_L' → logprob: -3.428493022918701
    7. '(C' → logprob: -3.553493022918701
    8. '_lengths' → logprob: -3.803493022918701
    9. '_arrays' → logprob: -3.928493022918701
    10. '(' → logprob: -4.053493022918701

Token 1026: '_dict' (ID: 11295)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011574821546673775
    2. 'ices' → logprob: -4.636574745178223
    3. 'ent' → logprob: -7.636574745178223
    4. '(' → logprob: -7.886574745178223
    5. '(ex' → logprob: -8.136574745178223
    6. 'icies' → logprob: -10.011574745178223
    7. '(int' → logprob: -10.136574745178223
    8. 'e' → logprob: -10.136574745178223
    9. '(e' → logprob: -10.386574745178223
    10. '()' → logprob: -10.511574745178223

Token 1027: 's' (ID: 82)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47625309228897095
    2. '():
' → logprob: -1.7262530326843262
    3. 's' → logprob: -2.226253032684326
    4. '():' → logprob: -2.851253032684326
    5. 'ex' → logprob: -4.601253032684326
    6. 'ection' → logprob: -5.101253032684326
    7. '_' → logprob: -5.351253032684326
    8. 'x' → logprob: -6.101253032684326
    9. '(' → logprob: -6.351253032684326
    10. ' ()' → logprob: -6.601253032684326

Token 1028: '(check' (ID: 40506)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.49290263652801514
    2. '(C' → logprob: -1.6179026365280151
    3. '(N' → logprob: -2.3679027557373047
    4. '():
' → logprob: -2.9929027557373047
    5. '()' → logprob: -3.1179027557373047
    6. '(' → logprob: -6.492902755737305
    7. 'def' → logprob: -8.242902755737305
    8. '(
' → logprob: -8.617902755737305
    9. '(L' → logprob: -8.742902755737305
    10. '(*' → logprob: -8.867902755737305

Token 1029: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14840631186962128
    2. '):' → logprob: -2.0234062671661377
    3. ')' → logprob: -6.148406505584717
    4. '):
' → logprob: -6.148406505584717
    5. '(check' → logprob: -6.648406505584717
    6. ',C' → logprob: -10.023406028747559
    7. 'check' → logprob: -10.898406028747559
    8. '(' → logprob: -11.023406028747559
    9. ',
' → logprob: -11.148406028747559
    10. '):
' → logprob: -11.523406028747559

Token 1030: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.547515332698822
    2. 'N' → logprob: -0.922515332698822
    3. 'check' → logprob: -4.422515392303467
    4. 'L' → logprob: -4.922515392303467
    5. ')' → logprob: -6.672515392303467
    6. 'length' → logprob: -7.047515392303467
    7. ' C' → logprob: -7.672515392303467
    8. 'LEN' → logprob: -7.797515392303467
    9. '[]' → logprob: -8.422514915466309
    10. 'len' → logprob: -8.547514915466309

Token 1031: '_L' (ID: 4258)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.18062666058540344
    2. '_L' → logprob: -1.805626630783081
    3. '_length' → logprob: -7.68062686920166
    4. 'L' → logprob: -8.68062686920166
    5. '_S' → logprob: -9.43062686920166
    6. '_DICT' → logprob: -9.80562686920166
    7. '_LEN' → logprob: -10.05562686920166
    8. '_D' → logprob: -10.93062686920166
    9. '_DEPTH' → logprob: -11.30562686920166
    10. '_IND' → logprob: -11.80562686920166

Token 1032: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.05143402889370918
    2. 'ICT' → logprob: -3.05143404006958
    3. 'dict' → logprob: -6.42643404006958
    4. '_DICT' → logprob: -8.301433563232422
    5. 'IST' → logprob: -8.551433563232422
    6. 'Dict' → logprob: -8.551433563232422
    7. 'ict' → logprob: -8.551433563232422
    8. '_dict' → logprob: -9.426433563232422
    9. 'IND' → logprob: -9.551433563232422
    10. 'D' → logprob: -9.676433563232422

Token 1033: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04954599589109421
    2. '):
' → logprob: -3.174546003341675
    3. '):' → logprob: -5.049545764923096
    4. ',C' → logprob: -10.174546241760254
    5. ',
' → logprob: -10.924546241760254
    6. '):
' → logprob: -10.924546241760254
    7. ' ,' → logprob: -11.549546241760254
    8. '):

' → logprob: -11.549546241760254
    9. ')' → logprob: -11.674546241760254
    10. 'def' → logprob: -11.924546241760254

Token 1034: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0008143932209350169
    2. ' C' → logprob: -7.125814437866211
    3. '   ' → logprob: -13.250814437866211
    4. ')' → logprob: -13.250814437866211
    5. '
' → logprob: -13.750814437866211
    6. 'def' → logprob: -14.125814437866211
    7. ' ' → logprob: -14.125814437866211
    8. 'check' → logprob: -14.500814437866211
    9. '...' → logprob: -15.000814437866211
    10. ',' → logprob: -15.125814437866211

Token 1035: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -7.922563963802531e-05
    2. '_LENGTH' → logprob: -10.125079154968262
    3. 'S' → logprob: -11.125079154968262
    4. '_DICT' → logprob: -11.375079154968262
    5. '_SD' → logprob: -12.375079154968262
    6. 'DICT' → logprob: -12.875079154968262
    7. '_' → logprob: -13.125079154968262
    8. 'SD' → logprob: -13.875079154968262
    9. '_s' → logprob: -14.000079154968262
    10. '
' → logprob: -14.750079154968262

Token 1036: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -8.160971628967673e-05
    2. '_DICT' → logprob: -10.000082015991211
    3. 'ICT' → logprob: -10.875082015991211
    4. 'dict' → logprob: -11.500082015991211
    5. 'ID' → logprob: -13.500082015991211
    6. '_dict' → logprob: -13.750082015991211
    7. 'D' → logprob: -13.750082015991211
    8. 'Dict' → logprob: -13.875082015991211
    9. '
' → logprob: -13.875082015991211
    10. 'DI' → logprob: -14.000082015991211

Token 1037: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24704350531101227
    2. '):' → logprob: -1.622043490409851
    3. ',' → logprob: -3.8720436096191406
    4. '):
' → logprob: -7.747043609619141
    5. ')' → logprob: -9.24704360961914
    6. '):

' → logprob: -10.87204360961914
    7. '   ' → logprob: -11.74704360961914
    8. ' ):
' → logprob: -12.12204360961914
    9. 'def' → logprob: -12.37204360961914
    10. ' ,' → logprob: -12.87204360961914

Token 1038: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6937955617904663
    2. 'for' → logprob: -0.6937955617904663
    3. ' for' → logprob: -7.568795680999756
    4. 'C' → logprob: -10.068795204162598
    5. 'def' → logprob: -10.318795204162598
    6. '```' → logprob: -10.318795204162598
    7. '	for' → logprob: -10.943795204162598
    8. '``' → logprob: -13.068795204162598
    9. '
' → logprob: -13.568795204162598
    10. '       ' → logprob: -14.068795204162598

Token 1039: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.554558515548706
    2. 'C' → logprob: -0.929558515548706
    3. '   ' → logprob: -3.554558515548706
    4. ' for' → logprob: -6.429558753967285
    5. 'def' → logprob: -7.929558753967285
    6. ' C' → logprob: -7.929558753967285
    7. '```' → logprob: -12.304558753967285
    8. 'global' → logprob: -12.554558753967285
    9. '	C' → logprob: -13.179558753967285
    10. '	for' → logprob: -13.179558753967285

Token 1040: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5036598443984985
    2. 'key' → logprob: -1.7536598443984985
    3. 'k' → logprob: -2.253659725189209
    4. 'i' → logprob: -2.753659725189209
    5. 'x' → logprob: -3.253659725189209
    6. 'node' → logprob: -5.878659725189209
    7. 'p' → logprob: -6.128659725189209
    8. 'd' → logprob: -6.128659725189209
    9. 'v' → logprob: -6.378659725189209
    10. 'color' → logprob: -6.753659725189209

Token 1041: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12792561948299408
    2. 'in' → logprob: -2.1279256343841553
    3. ',' → logprob: -7.002925395965576
    4. '_in' → logprob: -11.252925872802734
    5. ' ' → logprob: -11.502925872802734
    6. ' ,' → logprob: -11.752925872802734
    7. ',in' → logprob: -11.752925872802734
    8. 'n' → logprob: -11.877925872802734
    9. ',c' → logprob: -11.877925872802734
    10. '	in' → logprob: -12.002925872802734

Token 1042: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00988783035427332
    2. 'range' → logprob: -4.7598876953125
    3. 'C' → logprob: -7.5098876953125
    4. 'list' → logprob: -7.6348876953125
    5. ' check' → logprob: -8.6348876953125
    6. '(check' → logprob: -11.0098876953125
    7. 'set' → logprob: -11.2598876953125
    8. ' range' → logprob: -11.2598876953125
    9. 'c' → logprob: -12.3848876953125
    10. '[' → logprob: -12.6348876953125

Token 1043: '[' (ID: 58)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5312442779541016
    2. ':' → logprob: -1.0312442779541016
    3. '[c' → logprob: -2.9062442779541016
    4. '   ' → logprob: -7.406244277954102
    5. '.keys' → logprob: -8.656244277954102
    6. ':
' → logprob: -9.781244277954102
    7. '[C' → logprob: -11.281244277954102
    8. ':c' → logprob: -11.656244277954102
    9. '[:' → logprob: -12.281244277954102
    10. '[:]' → logprob: -12.531244277954102

Token 1044: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7031288146972656
    2. 'c' → logprob: -1.8281288146972656
    3. '0' → logprob: -2.3281288146972656
    4. ']:' → logprob: -2.4531288146972656
    5. '1' → logprob: -3.3281288146972656
    6. '_:' → logprob: -3.3281288146972656
    7. 'range' → logprob: -3.9531288146972656
    8. 'len' → logprob: -4.078128814697266
    9. 'i' → logprob: -4.578128814697266
    10. '   ' → logprob: -4.828128814697266

Token 1045: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.25635048747062683
    2. ']:
' → logprob: -1.5063505172729492
    3. '[' → logprob: -5.756350517272949
    4. ']:
' → logprob: -7.381350517272949
    5. ':' → logprob: -8.13135051727295
    6. ']' → logprob: -8.88135051727295
    7. '][' → logprob: -9.63135051727295
    8. ' ]' → logprob: -10.00635051727295
    9. ']:

' → logprob: -10.38135051727295
    10. '   ' → logprob: -12.13135051727295

Token 1046: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01819559559226036
    2. '   ' → logprob: -4.268195629119873
    3. 'C' → logprob: -5.643195629119873
    4. ' C' → logprob: -8.393195152282715
    5. '```' → logprob: -9.768195152282715
    6. '	   ' → logprob: -10.018195152282715
    7. ':' → logprob: -10.393195152282715
    8. '	C' → logprob: -10.893195152282715
    9. ',' → logprob: -11.518195152282715
    10. ':
' → logprob: -11.518195152282715

Token 1047: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0003217574267182499
    2. '   ' → logprob: -8.375321388244629
    3. ' C' → logprob: -9.500321388244629
    4. '       ' → logprob: -12.000321388244629
    5. 'del' → logprob: -12.375321388244629
    6. 'if' → logprob: -12.875321388244629
    7. '           ' → logprob: -13.125321388244629
    8. ' ' → logprob: -14.750321388244629
    9. '  ' → logprob: -15.000321388244629
    10. 'c' → logprob: -15.125321388244629

Token 1048: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0007659103139303625
    2. '_S' → logprob: -7.250765800476074
    3. 'L' → logprob: -9.875765800476074
    4. '_C' → logprob: -13.000765800476074
    5. '_LENGTH' → logprob: -14.750765800476074
    6. 'S' → logprob: -14.875765800476074
    7. '_D' → logprob: -15.375765800476074
    8. 'c' → logprob: -15.625765800476074
    9. '```' → logprob: -15.750765800476074
    10. '_' → logprob: -15.875765800476074

Token 1049: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0010867553064599633
    2. 'L' → logprob: -6.876086711883545
    3. '_DICT' → logprob: -10.626087188720703
    4. 'dict' → logprob: -11.751087188720703
    5. 'ICT' → logprob: -12.251087188720703
    6. 'LD' → logprob: -12.751087188720703
    7. 'DI' → logprob: -12.751087188720703
    8. 'D' → logprob: -12.876087188720703
    9. 'LEN' → logprob: -13.126087188720703
    10. 'C' → logprob: -14.501087188720703

Token 1050: '[(' (ID: 20542)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0050318981520831585
    2. '.pop' → logprob: -5.630032062530518
    3. '.clear' → logprob: -6.630032062530518
    4. 'pop' → logprob: -10.13003158569336
    5. '.setdefault' → logprob: -10.50503158569336
    6. 'clear' → logprob: -10.75503158569336
    7. ' [' → logprob: -12.13003158569336
    8. ' =' → logprob: -12.88003158569336
    9. '
' → logprob: -13.13003158569336
    10. '[' → logprob: -13.13003158569336

Token 1051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015330369584262371
    2. 'c' → logprob: -4.2653303146362305
    3. '0' → logprob: -6.8903303146362305
    4. ' ' → logprob: -9.64033031463623
    5. '(' → logprob: -10.76533031463623
    6. ')' → logprob: -11.01533031463623
    7. ')c' → logprob: -11.76533031463623
    8. 'None' → logprob: -11.82783031463623
    9. ',' → logprob: -12.32783031463623
    10. ' c' → logprob: -12.32783031463623

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3137975335121155
    2. ',c' → logprob: -1.3137974739074707
    3. ' ,' → logprob: -7.938797473907471
    4. 'c' → logprob: -8.938797950744629
    5. ',
' → logprob: -10.938797950744629
    6. '),' → logprob: -12.563797950744629
    7. '
' → logprob: -12.688797950744629
    8. '[c' → logprob: -13.063797950744629
    9. ')' → logprob: -13.188797950744629
    10. ')c' → logprob: -13.438797950744629

Token 1053: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00038360210601240396
    2. ' c' → logprob: -7.875383377075195
    3. ')c' → logprob: -13.250383377075195
    4. '
' → logprob: -15.000383377075195
    5. ')' → logprob: -15.125383377075195
    6. '   ' → logprob: -15.375383377075195
    7. '0' → logprob: -15.625383377075195
    8. ' ' → logprob: -15.750383377075195
    9. '	c' → logprob: -16.000383377075195
    10. '_c' → logprob: -16.125383377075195

Token 1054: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009667198173701763
    2. ']' → logprob: -4.75966739654541
    3. ')' → logprob: -7.50966739654541
    4. ',' → logprob: -8.00966739654541
    5. ']=' → logprob: -8.88466739654541
    6. ' )' → logprob: -11.50966739654541
    7. '=' → logprob: -12.13466739654541
    8. ')=' → logprob: -12.25966739654541
    9. '   ' → logprob: -13.13466739654541
    10. '])' → logprob: -13.25966739654541

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016040820628404617
    2. ' =' → logprob: -4.141040802001953
    3. '=None' → logprob: -13.641040802001953
    4. '   ' → logprob: -13.891040802001953
    5. ',' → logprob: -14.266040802001953
    6. '    ' → logprob: -14.391040802001953
    7. '[:]' → logprob: -15.266040802001953
    8. '[' → logprob: -15.516040802001953
    9. '=[]' → logprob: -15.516040802001953
    10. ')' → logprob: -15.516040802001953

Token 1056: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018794061616063118
    2. '(' → logprob: -4.643794059753418
    3. '-' → logprob: -5.143794059753418
    4. '[' → logprob: -6.643794059753418
    5. 'float' → logprob: -7.518794059753418
    6. '1' → logprob: -7.893794059753418
    7. '(-' → logprob: -8.393794059753418
    8. '[]' → logprob: -8.518794059753418
    9. '[-' → logprob: -9.893794059753418
    10. '[]
' → logprob: -9.893794059753418

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008746940642595291
    2. '(' → logprob: -5.508747100830078
    3. '-' → logprob: -5.883747100830078
    4. '[' → logprob: -7.008747100830078
    5. 'float' → logprob: -7.883747100830078
    6. '1' → logprob: -8.758747100830078
    7. '[]' → logprob: -9.258747100830078
    8. '(-' → logprob: -9.633747100830078
    9. '[]
' → logprob: -10.133747100830078
    10. '[-' → logprob: -10.508747100830078

Token 1058: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24927248060703278
    2. '   ' → logprob: -1.7492724657058716
    3. '
' → logprob: -3.124272584915161
    4. '<|end|>' → logprob: -6.624272346496582
    5. ' ' → logprob: -7.374272346496582
    6. '	' → logprob: -8.124272346496582
    7. ' for' → logprob: -8.624272346496582
    8. 'def' → logprob: -9.874272346496582
    9. 'for' → logprob: -9.874272346496582
    10. '	for' → logprob: -10.124272346496582

Token 1059: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008025458082556725
    2. 'def' → logprob: -5.633025646209717
    3. 'for' → logprob: -6.383025646209717
    4. '       ' → logprob: -6.383025646209717
    5. '<|end|>' → logprob: -7.383025646209717
    6. ' for' → logprob: -8.258025169372559
    7. '
' → logprob: -9.383025169372559
    8. ' ' → logprob: -10.133025169372559
    9. '	for' → logprob: -11.508025169372559
    10. '  ' → logprob: -12.258025169372559

Token 1060: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.003332187421619892
    2. ' C' → logprob: -5.753332138061523
    3. '   ' → logprob: -8.878332138061523
    4. '       ' → logprob: -11.253332138061523
    5. ' ' → logprob: -13.253332138061523
    6. '  ' → logprob: -15.628332138061523
    7. '           ' → logprob: -16.503332138061523
    8. '	C' → logprob: -17.253332138061523
    9. '0' → logprob: -17.628332138061523
    10. '    ' → logprob: -17.753332138061523

Token 1061: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -3.5597102396423e-05
    2. '_L' → logprob: -10.500035285949707
    3. 'S' → logprob: -12.500035285949707
    4. '_' → logprob: -13.625035285949707
    5. '_LENGTH' → logprob: -13.750035285949707
    6. '_SD' → logprob: -14.125035285949707
    7. 'L' → logprob: -15.625035285949707
    8. '_I' → logprob: -16.375036239624023
    9. 'length' → logprob: -16.375036239624023
    10. '_D' → logprob: -16.375036239624023

Token 1062: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0003542926860973239
    2. '_DICT' → logprob: -8.375354766845703
    3. 'dict' → logprob: -9.500354766845703
    4. 'ICT' → logprob: -11.500354766845703
    5. 'D' → logprob: -11.625354766845703
    6. '[' → logprob: -11.750354766845703
    7. 'DI' → logprob: -12.250354766845703
    8. '(dict' → logprob: -12.250354766845703
    9. '[(' → logprob: -12.375354766845703
    10. '_dict' → logprob: -13.000354766845703

Token 1063: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.696889623621246e-06
    2. '.pop' → logprob: -13.50000286102295
    3. '
' → logprob: -15.12500286102295
    4. '(' → logprob: -15.25000286102295
    5. '[' → logprob: -15.87500286102295
    6. ' [(' → logprob: -15.87500286102295
    7. '.clear' → logprob: -16.125001907348633
    8. '((' → logprob: -16.375001907348633
    9. '[((' → logprob: -16.750001907348633
    10. '[
' → logprob: -16.875001907348633

Token 1064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.250008583068848
    3. '(' → logprob: -13.250008583068848
    4. '0' → logprob: -14.750008583068848
    5. ')' → logprob: -14.750008583068848
    6. '<|end|>' → logprob: -14.875008583068848
    7. '
' → logprob: -15.250008583068848
    8. ',' → logprob: -16.62500762939453
    9. '`' → logprob: -16.62500762939453
    10. ''' → logprob: -16.81250762939453

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027813989436253905
    2. ' ,' → logprob: -8.62527847290039
    3. ',c' → logprob: -9.25027847290039
    4. ',
' → logprob: -13.50027847290039
    5. 'c' → logprob: -14.62527847290039
    6. '
' → logprob: -16.62527847290039
    7. '‌,' → logprob: -16.62527847290039
    8. ' ' → logprob: -17.12527847290039
    9. '`,' → logprob: -17.62527847290039
    10. ',\
' → logprob: -17.87527847290039

Token 1066: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023071514442563057
    2. ' c' → logprob: -8.37523078918457
    3. ')c' → logprob: -16.87523078918457
    4. '0' → logprob: -17.12523078918457
    5. ' ' → logprob: -18.00023078918457
    6. '   ' → logprob: -18.12523078918457
    7. '	c' → logprob: -18.75023078918457
    8. 'с' → logprob: -19.12523078918457
    9. ')' → logprob: -19.12523078918457
    10. '
' → logprob: -19.25023078918457

Token 1067: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021736434428021312
    2. ']' → logprob: -8.62521743774414
    3. ')' → logprob: -10.62521743774414
    4. ' )' → logprob: -11.50021743774414
    5. '=' → logprob: -13.75021743774414
    6. ']=' → logprob: -14.25021743774414
    7. '')]' → logprob: -15.00021743774414
    8. ')=' → logprob: -15.50021743774414
    9. '   ' → logprob: -15.62521743774414
    10. ',' → logprob: -15.62521743774414

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. ']=' → logprob: -17.256715774536133
    4. '=
' → logprob: -17.381715774536133
    5. ')' → logprob: -17.506715774536133
    6. ')=' → logprob: -17.756715774536133
    7. '[' → logprob: -18.131715774536133
    8. ']' → logprob: -18.506715774536133
    9. '＝' → logprob: -18.881715774536133
    10. '<|end|>' → logprob: -19.256715774536133

Token 1069: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0053847068920731544
    2. ' ' → logprob: -6.130384922027588
    3. '[]' → logprob: -6.755384922027588
    4. '[' → logprob: -7.130384922027588
    5. '-' → logprob: -7.255384922027588
    6. '(' → logprob: -8.50538444519043
    7. '[]
' → logprob: -9.50538444519043
    8. ' []' → logprob: -10.25538444519043
    9. 'False' → logprob: -10.25538444519043
    10. '1' → logprob: -10.25538444519043

Token 1070: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005643874406814575
    2. '[]' → logprob: -6.130643844604492
    3. '-' → logprob: -6.505643844604492
    4. '(' → logprob: -7.130643844604492
    5. '[' → logprob: -7.130643844604492
    6. '[]
' → logprob: -9.005643844604492
    7. 'False' → logprob: -10.005643844604492
    8. '1' → logprob: -10.130643844604492
    9. 'None' → logprob: -11.005643844604492
    10. 'set' → logprob: -11.005643844604492

Token 1071: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05398567020893097
    2. '<|end|>' → logprob: -3.178985595703125
    3. 'def' → logprob: -4.553985595703125
    4. '   ' → logprob: -8.553985595703125
    5. '    
' → logprob: -10.303985595703125
    6. '

' → logprob: -10.303985595703125
    7. 'for' → logprob: -10.428985595703125
    8. '
' → logprob: -10.803985595703125
    9. '<|end|>' → logprob: -10.928985595703125
    10. '' → logprob: -11.178985595703125

Token 1072: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14322878420352936
    2. '
' → logprob: -2.018228769302368
    3. '<|end|>' → logprob: -7.643229007720947
    4. '```' → logprob: -10.518228530883789
    5. 'for' → logprob: -11.143228530883789
    6. '

' → logprob: -11.518228530883789
    7. '
' → logprob: -11.768228530883789
    8. '#' → logprob: -12.518228530883789
    9. 'import' → logprob: -12.643228530883789
    10. '\' → logprob: -13.768228530883789

Token 1073: ' process' (ID: 2273)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.888346791267395
    2. 'def' → logprob: -2.0133466720581055
    3. 'process' → logprob: -2.1383466720581055
    4. 'calc' → logprob: -2.2633466720581055
    5. 'dfs' → logprob: -2.5133466720581055
    6. 'update' → logprob: -2.7633466720581055
    7. 'reset' → logprob: -2.8883466720581055
    8. 'build' → logprob: -3.0133466720581055
    9. 'initialize' → logprob: -3.3883466720581055
    10. 'main' → logprob: -3.6383466720581055

Token 1074: '_e' (ID: 4618)
  Prédit: '_queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queries' → logprob: -1.208217740058899
    2. '_query' → logprob: -1.333217740058899
    3. 'check' → logprob: -2.2082176208496094
    4. 'def' → logprob: -2.3332176208496094
    5. '_length' → logprob: -2.7082176208496094
    6. '_check' → logprob: -2.8332176208496094
    7. 'queries' → logprob: -3.8332176208496094
    8. 'length' → logprob: -4.083217620849609
    9. 'query' → logprob: -4.083217620849609
    10. '_lengths' → logprob: -4.708217620849609

Token 1075: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.017495926469564438
    2. 'd' → logprob: -5.017496109008789
    3. 'xt' → logprob: -5.767496109008789
    4. 'dge' → logprob: -6.392496109008789
    5. 'lement' → logprob: -7.142496109008789
    6. 'ul' → logprob: -7.642496109008789
    7. 'ach' → logprob: -7.767496109008789
    8. 'x' → logprob: -8.142496109008789
    9. 'lse' → logprob: -8.267496109008789
    10. 'ular' → logprob: -8.267496109008789

Token 1076: '_indices' (ID: 43508)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.008469192311167717
    2. 'def' → logprob: -4.883469104766846
    3. 'tour' → logprob: -9.508469581604004
    4. '```' → logprob: -9.633469581604004
    5. '_segment' → logprob: -9.883469581604004
    6. '_element' → logprob: -10.008469581604004
    7. '_step' → logprob: -10.383469581604004
    8. '_' → logprob: -10.508469581604004
    9. '_def' → logprob: -10.633469581604004
    10. '_to' → logprob: -10.633469581604004

Token 1077: '(E' (ID: 20882)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08283347636461258
    2. '(E' → logprob: -2.9578335285186768
    3. '(N' → logprob: -4.082833290100098
    4. '(check' → logprob: -6.207833290100098
    5. '(def' → logprob: -6.457833290100098
    6. '(x' → logprob: -6.582833290100098
    7. 'def' → logprob: -6.832833290100098
    8. '(L' → logprob: -6.957833290100098
    9. '(DE' → logprob: -6.957833290100098
    10. '(C' → logprob: -7.207833290100098

Token 1078: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -6.337155355140567e-05
    2. 'U' → logprob: -11.125062942504883
    3. 'uler' → logprob: -11.125062942504883
    4. 'ULAR' → logprob: -11.500062942504883
    5. '_UL' → logprob: -11.750062942504883
    6. '[' → logprob: -12.875062942504883
    7. '```' → logprob: -12.875062942504883
    8. 'ULL' → logprob: -13.375062942504883
    9. 'ULE' → logprob: -13.500062942504883
    10. '_' → logprob: -13.625062942504883

Token 1079: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.5788819789886475
    2. 'R' → logprob: -0.8288819789886475
    3. 'E' → logprob: -6.078882217407227
    4. '_R' → logprob: -8.578882217407227
    5. '
' → logprob: -9.203882217407227
    6. 'def' → logprob: -9.328882217407227
    7. 'OR' → logprob: -9.703882217407227
    8. '```' → logprob: -10.578882217407227
    9. '__' → logprob: -11.078882217407227
    10. '_' → logprob: -11.203882217407227

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14481857419013977
    2. '):' → logprob: -2.0198185443878174
    3. '):
' → logprob: -6.2698187828063965
    4. ')' → logprob: -9.769818305969238
    5. '   ' → logprob: -10.019818305969238
    6. ' ,' → logprob: -10.144818305969238
    7. ':' → logprob: -10.519818305969238
    8. ',N' → logprob: -10.769818305969238
    9. ',p' → logprob: -11.144818305969238
    10. '):
' → logprob: -12.269818305969238

Token 1081: ' ED' (ID: 36313)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.613856852054596
    2. 'C' → logprob: -1.3638567924499512
    3. 'check' → logprob: -2.863856792449951
    4. 'N' → logprob: -2.988856792449951
    5. ' MIN' → logprob: -3.738856792449951
    6. 'L' → logprob: -3.988856792449951
    7. ' C' → logprob: -4.238856792449951
    8. ' check' → logprob: -4.988856792449951
    9. ')' → logprob: -5.738856792449951
    10. 'CHECK' → logprob: -5.863856792449951

Token 1082: 'G' (ID: 38)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.3626161515712738
    2. 'G' → logprob: -1.2376161813735962
    3. 'uler' → logprob: -5.487616062164307
    4. 'L' → logprob: -5.862616062164307
    5. 'UEL' → logprob: -6.112616062164307
    6. 'LER' → logprob: -6.737616062164307
    7. 'U' → logprob: -7.362616062164307
    8. 'EL' → logprob: -7.487616062164307
    9. '```' → logprob: -7.487616062164307
    10. 'GER' → logprob: -7.862616062164307

Token 1083: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.014350365847349167
    2. 'G' → logprob: -4.264350414276123
    3. 'L' → logprob: -9.014349937438965
    4. 'LIST' → logprob: -11.639349937438965
    5. '```' → logprob: -11.889349937438965
    6. 'E' → logprob: -12.014349937438965
    7. '
' → logprob: -12.139349937438965
    8. '_EL' → logprob: -12.389349937438965
    9. 'CEL' → logprob: -12.514349937438965
    10. 'LE' → logprob: -12.639349937438965

Token 1084: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -2.7252845029579476e-05
    2. 'ST' → logprob: -11.250027656555176
    3. 'I' → logprob: -12.750027656555176
    4. 'ist' → logprob: -12.875027656555176
    5. 'LIST' → logprob: -13.125027656555176
    6. 'ISTS' → logprob: -13.500027656555176
    7. '_' → logprob: -13.875027656555176
    8. 'Ist' → logprob: -14.375027656555176
    9. '
' → logprob: -14.500027656555176
    10. 'EL' → logprob: -14.625027656555176

Token 1085: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30676907300949097
    2. '):' → logprob: -1.6817691326141357
    3. '):
' → logprob: -2.5567691326141357
    4. 'def' → logprob: -8.306769371032715
    5. '   ' → logprob: -8.681769371032715
    6. ')' → logprob: -9.806769371032715
    7. ',
' → logprob: -10.056769371032715
    8. '):
' → logprob: -10.431769371032715
    9. ' ,' → logprob: -11.806769371032715
    10. ',N' → logprob: -11.806769371032715

Token 1086: ' check' (ID: 2371)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.648145318031311
    2. 'DEP' → logprob: -1.523145318031311
    3. 'C' → logprob: -2.2731451988220215
    4. 'USED' → logprob: -2.7731451988220215
    5. 'L' → logprob: -3.1481451988220215
    6. 'check' → logprob: -4.2731451988220215
    7. 'MIN' → logprob: -4.6481451988220215
    8. ' DEP' → logprob: -5.0231451988220215
    9. 'CHECK' → logprob: -5.3981451988220215
    10. ' USED' → logprob: -5.7731451988220215

Token 1087: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7452347874641418
    2. ',' → logprob: -0.8702347874641418
    3. '):
' → logprob: -2.245234727859497
    4. '):
' → logprob: -8.745234489440918
    5. 'def' → logprob: -8.745234489440918
    6. ')' → logprob: -9.120234489440918
    7. '   ' → logprob: -9.120234489440918
    8. ',N' → logprob: -10.245234489440918
    9. ',
' → logprob: -11.620234489440918
    10. ' ,' → logprob: -12.370234489440918

Token 1088: ' LENGTH' (ID: 173737)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.5381175875663757
    2. 'C' → logprob: -1.7881176471710205
    3. 'N' → logprob: -2.0381176471710205
    4. 'L' → logprob: -2.9131176471710205
    5. 'USED' → logprob: -3.5381176471710205
    6. ' DEP' → logprob: -3.6631176471710205
    7. ' USED' → logprob: -6.413117408752441
    8. ' C' → logprob: -6.913117408752441
    9. 'x' → logprob: -6.913117408752441
    10. 'E' → logprob: -6.913117408752441

Token 1089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03334343060851097
    2. '):
' → logprob: -3.7833433151245117
    3. '):' → logprob: -4.658343315124512
    4. '   ' → logprob: -8.158343315124512
    5. ',
' → logprob: -9.283343315124512
    6. ' ,' → logprob: -9.908343315124512
    7. 'def' → logprob: -9.908343315124512
    8. '):
' → logprob: -10.158343315124512
    9. ')' → logprob: -11.158343315124512
    10. '_,' → logprob: -12.033343315124512

Token 1090: ' L' (ID: 451)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -1.141767978668213
    2. 'DEP' → logprob: -1.641767978668213
    3. 'C' → logprob: -1.766767978668213
    4. 'N' → logprob: -2.016767978668213
    5. 'L' → logprob: -2.016767978668213
    6. ' USED' → logprob: -3.891767978668213
    7. ' DEP' → logprob: -4.641767978668213
    8. 'ED' → logprob: -4.766767978668213
    9. ' N' → logprob: -6.016767978668213
    10. ' C' → logprob: -6.141767978668213

Token 1091: 'ENG' (ID: 12674)
  Prédit: 'ENG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENG' → logprob: -0.00020020268857479095
    2. 'Eng' → logprob: -9.875200271606445
    3. 'ENGTH' → logprob: -10.000200271606445
    4. 'EN' → logprob: -10.250200271606445
    5. 'eng' → logprob: -11.500200271606445
    6. 'E' → logprob: -11.750200271606445
    7. '
' → logprob: -11.750200271606445
    8. '#' → logprob: -12.250200271606445
    9. 'EG' → logprob: -12.500200271606445
    10. '   ' → logprob: -12.750200271606445

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009744402021169662
    2. '):
' → logprob: -4.759744167327881
    3. '):' → logprob: -7.509744167327881
    4. '   ' → logprob: -8.384744644165039
    5. ',
' → logprob: -9.009744644165039
    6. 'def' → logprob: -9.134744644165039
    7. ' ,' → logprob: -10.134744644165039
    8. ')' → logprob: -11.509744644165039
    9. '):
' → logprob: -11.509744644165039
    10. '
' → logprob: -12.134744644165039

Token 1093: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.24332840740680695
    2. 'USED' → logprob: -1.9933284521102905
    3. ' C' → logprob: -3.493328332901001
    4. ' USED' → logprob: -3.493328332901001
    5. 'DEP' → logprob: -4.86832857131958
    6. 'ED' → logprob: -5.49332857131958
    7. 'L' → logprob: -6.24332857131958
    8. ' DEP' → logprob: -6.49332857131958
    9. 'N' → logprob: -6.86832857131958
    10. 'used' → logprob: -7.86832857131958

Token 1094: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.14639581739902496
    2. 'ENGTH' → logprob: -2.1463959217071533
    3. '_L' → logprob: -4.771395683288574
    4. 'ength' → logprob: -5.646395683288574
    5. 'ENG' → logprob: -5.646395683288574
    6. 'EN' → logprob: -6.771395683288574
    7. 'L' → logprob: -7.021395683288574
    8. '_S' → logprob: -7.521395683288574
    9. '_length' → logprob: -8.521395683288574
    10. 'eng' → logprob: -9.021395683288574

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005006087594665587
    2. '):
' → logprob: -8.375500679016113
    3. ',
' → logprob: -9.750500679016113
    4. '   ' → logprob: -9.875500679016113
    5. ' ,' → logprob: -9.875500679016113
    6. 'def' → logprob: -9.875500679016113
    7. '):' → logprob: -10.500500679016113
    8. '_,' → logprob: -11.875500679016113
    9. '
' → logprob: -12.750500679016113
    10. '  ' → logprob: -12.875500679016113

Token 1096: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008707110770046711
    2. ' C' → logprob: -4.758707046508789
    3. '   ' → logprob: -10.008707046508789
    4. '
' → logprob: -11.008707046508789
    5. ' ' → logprob: -11.758707046508789
    6. '  ' → logprob: -12.758707046508789
    7. 'c' → logprob: -12.883707046508789
    8. ',' → logprob: -12.883707046508789
    9. '
' → logprob: -13.133707046508789
    10. 'ED' → logprob: -13.258707046508789

Token 1097: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.0445394404232502
    2. 'SUM' → logprob: -3.169539451599121
    3. '_S' → logprob: -6.794539451599121
    4. '_LENGTH' → logprob: -8.169539451599121
    5. '_sum' → logprob: -10.669539451599121
    6. ' SUM' → logprob: -11.044539451599121
    7. '_DICT' → logprob: -11.044539451599121
    8. 'sum' → logprob: -11.044539451599121
    9. '_LEN' → logprob: -11.294539451599121
    10. '_' → logprob: -11.544539451599121

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021843716967850924
    2. '   ' → logprob: -9.875218391418457
    3. ' ,' → logprob: -10.000218391418457
    4. '):
' → logprob: -10.000218391418457
    5. ',
' → logprob: -10.250218391418457
    6. 'def' → logprob: -10.625218391418457
    7. ',C' → logprob: -12.500218391418457
    8. '):' → logprob: -12.875218391418457
    9. '_,' → logprob: -13.625218391418457
    10. 'C' → logprob: -14.062718391418457

Token 1099: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.010200592689216137
    2. ' C' → logprob: -4.635200500488281
    3. 'ED' → logprob: -9.010200500488281
    4. '   ' → logprob: -9.260200500488281
    5. 'check' → logprob: -9.385200500488281
    6. ' ' → logprob: -10.135200500488281
    7. 'L' → logprob: -10.510200500488281
    8. 'N' → logprob: -11.010200500488281
    9. '  ' → logprob: -11.760200500488281
    10. 'def' → logprob: -11.885200500488281

Token 1100: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.004789191763848066
    2. '_LENGTH' → logprob: -5.879789352416992
    3. '_DICT' → logprob: -6.504789352416992
    4. '_S' → logprob: -7.754789352416992
    5. '_LEN' → logprob: -10.754789352416992
    6. '```' → logprob: -12.129789352416992
    7. 'L' → logprob: -12.379789352416992
    8. '_D' → logprob: -12.754789352416992
    9. '_DI' → logprob: -12.879789352416992
    10. '
' → logprob: -13.129789352416992

Token 1101: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0007654334767721593
    2. 'IST' → logprob: -7.500765323638916
    3. 'ICT' → logprob: -9.625765800476074
    4. '_DICT' → logprob: -10.125765800476074
    5. 'dict' → logprob: -10.500765800476074
    6. 'O' → logprob: -10.875765800476074
    7. '
' → logprob: -10.875765800476074
    8. 'DI' → logprob: -11.125765800476074
    9. 'D' → logprob: -12.250765800476074
    10. 'Dict' → logprob: -12.750765800476074

Token 1102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.815280696377158e-05
    2. ',
' → logprob: -9.875078201293945
    3. ' ,' → logprob: -11.125078201293945
    4. 'def' → logprob: -12.375078201293945
    5. '   ' → logprob: -12.500078201293945
    6. '):
' → logprob: -13.375078201293945
    7. ',C' → logprob: -13.750078201293945
    8. '_,' → logprob: -15.250078201293945
    9. '
' → logprob: -15.750078201293945
    10. ',
' → logprob: -15.875078201293945

Token 1103: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000563042180147022
    2. ' C' → logprob: -7.500563144683838
    3. '   ' → logprob: -12.62556266784668
    4. ' ' → logprob: -12.75056266784668
    5. '
' → logprob: -13.12556266784668
    6. '  ' → logprob: -14.25056266784668
    7. 'def' → logprob: -15.12556266784668
    8. '    ' → logprob: -16.00056266784668
    9. '
' → logprob: -16.06306266784668
    10. '\
' → logprob: -16.50056266784668

Token 1104: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -3.5716304410016164e-05
    2. 'S' → logprob: -11.000035285949707
    3. '_SD' → logprob: -11.625035285949707
    4. '_s' → logprob: -12.500035285949707
    5. '_' → logprob: -13.750035285949707
    6. '
' → logprob: -13.750035285949707
    7. '_DICT' → logprob: -13.750035285949707
    8. ')' → logprob: -14.125035285949707
    9. 'SD' → logprob: -14.500035285949707
    10. 'DICT' → logprob: -15.250035285949707

Token 1105: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.00048524985322728753
    2. 'ICT' → logprob: -7.875485420227051
    3. '_DICT' → logprob: -10.50048542022705
    4. 'DI' → logprob: -10.62548542022705
    5. '
' → logprob: -10.75048542022705
    6. 'ID' → logprob: -11.00048542022705
    7. 'D' → logprob: -13.25048542022705
    8. 'dict' → logprob: -13.50048542022705
    9. 'DIST' → logprob: -13.75048542022705
    10. '{' → logprob: -14.00048542022705

Token 1106: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1692090630531311
    2. '):' → logprob: -2.2942090034484863
    3. ',' → logprob: -2.9192090034484863
    4. '   ' → logprob: -7.544209003448486
    5. '):
' → logprob: -8.419209480285645
    6. 'def' → logprob: -9.794209480285645
    7. ')' → logprob: -11.544209480285645
    8. '):

' → logprob: -11.669209480285645
    9. ' ' → logprob: -12.169209480285645
    10. ',
' → logprob: -12.544209480285645

Token 1107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011237268336117268
    2. ' for' → logprob: -4.886237144470215
    3. 'for' → logprob: -5.636237144470215
    4. '```' → logprob: -11.386237144470215
    5. 'n' → logprob: -11.636237144470215
    6. 'def' → logprob: -12.011237144470215
    7. 'x' → logprob: -12.011237144470215
    8. '
' → logprob: -12.386237144470215
    9. 'idx' → logprob: -12.511237144470215
    10. 'i' → logprob: -12.511237144470215

Token 1108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10277955234050751
    2. '   ' → logprob: -2.9777796268463135
    3. 'prev' → logprob: -4.102779388427734
    4. 'length' → logprob: -5.102779388427734
    5. ' for' → logprob: -5.477779388427734
    6. 'last' → logprob: -5.727779388427734
    7. 'pos' → logprob: -5.727779388427734
    8. 'used' → logprob: -6.102779388427734
    9. 'x' → logprob: -6.102779388427734
    10. 'L' → logprob: -6.477779388427734

Token 1109: ' i' (ID: 575)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.08391672372817993
    2. 'ind' → logprob: -3.583916664123535
    3. 'i' → logprob: -3.833916664123535
    4. '(depth' → logprob: -4.458916664123535
    5. 'dep' → logprob: -4.708916664123535
    6. 'd' → logprob: -5.708916664123535
    7. '_,' → logprob: -6.583916664123535
    8. 'p' → logprob: -6.583916664123535
    9. 'idx' → logprob: -6.833916664123535
    10. 'x' → logprob: -7.333916664123535

Token 1110: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41655439138412476
    2. ' in' → logprob: -1.6665544509887695
    3. 'in' → logprob: -1.9165544509887695
    4. ' ,' → logprob: -5.4165544509887695
    5. '_,' → logprob: -9.29155445098877
    6. ',(' → logprob: -10.29155445098877
    7. '(' → logprob: -10.91655445098877
    8. ',p' → logprob: -11.41655445098877
    9. ',_' → logprob: -11.79155445098877
    10. ',x' → logprob: -12.04155445098877

Token 1111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00022046364028938115
    2. ' range' → logprob: -8.62522029876709
    3. 'E' → logprob: -10.12522029876709
    4. '(range' → logprob: -14.62522029876709
    5. 'enumer' → logprob: -16.000221252441406
    6. 'in' → logprob: -16.500221252441406
    7. 'len' → logprob: -16.750221252441406
    8. 're' → logprob: -17.375221252441406
    9. '
' → logprob: -18.000221252441406
    10. '(E' → logprob: -18.125221252441406

Token 1112: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.23301465809345245
    2. '(' → logprob: -1.858014702796936
    3. 'len' → logprob: -3.4830145835876465
    4. '1' → logprob: -3.8580145835876465
    5. '2' → logprob: -10.733015060424805
    6. ',len' → logprob: -12.358015060424805
    7. ' len' → logprob: -12.483015060424805
    8. '(i' → logprob: -12.858015060424805
    9. '[len' → logprob: -12.983015060424805
    10. '(-' → logprob: -13.358015060424805

Token 1113: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25244998931884766
    2. '1' → logprob: -1.5024499893188477
    3. '2' → logprob: -8.627449989318848
    4. '(len' → logprob: -8.752449989318848
    5. '0' → logprob: -10.127449989318848
    6. 'i' → logprob: -10.252449989318848
    7. ' len' → logprob: -10.502449989318848
    8. '-' → logprob: -10.502449989318848
    9. '(' → logprob: -10.752449989318848
    10. '[len' → logprob: -12.877449989318848

Token 1114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012135679135099053
    2. ',len' → logprob: -6.751213550567627
    3. ' ,' → logprob: -10.126214027404785
    4. 'len' → logprob: -13.251214027404785
    5. '(len' → logprob: -14.251214027404785
    6. ',
' → logprob: -14.751214027404785
    7. '<len' → logprob: -15.751214027404785
    8. '1' → logprob: -16.12621307373047
    9. '   ' → logprob: -16.37621307373047
    10. '0' → logprob: -17.00121307373047

Token 1115: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.289473822107539e-05
    2. 'N' → logprob: -10.500062942504883
    3. ' len' → logprob: -10.750062942504883
    4. 'L' → logprob: -12.625062942504883
    5. 'i' → logprob: -12.750062942504883
    6. '(len' → logprob: -12.750062942504883
    7. 'LEN' → logprob: -13.625062942504883
    8. '
' → logprob: -13.625062942504883
    9. 'E' → logprob: -14.625062942504883
    10. '1' → logprob: -15.000062942504883

Token 1116: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -5.383526149671525e-05
    2. 'E' → logprob: -10.125053405761719
    3. '(C' → logprob: -12.250053405761719
    4. '(' → logprob: -12.500053405761719
    5. '(L' → logprob: -13.125053405761719
    6. '
' → logprob: -13.875053405761719
    7. '(
' → logprob: -14.500053405761719
    8. '```' → logprob: -15.625053405761719
    9. ' (' → logprob: -15.750053405761719
    10. '(EFFECT' → logprob: -15.875053405761719

Token 1117: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -6.134509021649137e-05
    2. 'ULAR' → logprob: -10.50006103515625
    3. 'UR' → logprob: -11.62506103515625
    4. '_UL' → logprob: -11.62506103515625
    5. ')' → logprob: -12.87506103515625
    6. '[' → logprob: -13.00006103515625
    7. '(' → logprob: -13.12506103515625
    8. '_' → logprob: -13.25006103515625
    9. '```' → logprob: -13.50006103515625
    10. ' UL' → logprob: -13.50006103515625

Token 1118: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.004151649307459593
    2. 'R' → logprob: -6.254151821136475
    3. 'UR' → logprob: -6.379151821136475
    4. 'UL' → logprob: -7.629151821136475
    5. 'OR' → logprob: -10.754151344299316
    6. 'E' → logprob: -12.379151344299316
    7. 'LER' → logprob: -13.504151344299316
    8. '```' → logprob: -13.629151344299316
    9. '   ' → logprob: -13.879151344299316
    10. ')' → logprob: -14.129151344299316

Token 1119: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25200775265693665
    2. '):' → logprob: -1.5020077228546143
    3. '   ' → logprob: -10.377007484436035
    4. '):
' → logprob: -11.252007484436035
    5. ' ):
' → logprob: -11.627007484436035
    6. ')' → logprob: -11.752007484436035
    7. ' ):' → logprob: -11.877007484436035
    8. '()):
' → logprob: -12.252007484436035
    9. '-' → logprob: -13.377007484436035
    10. '():
' → logprob: -13.752007484436035

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07262135297060013
    2. 'depth' → logprob: -3.6976213455200195
    3. ' depth' → logprob: -4.0726213455200195
    4. 'x' → logprob: -4.9476213455200195
    5. ' x' → logprob: -5.1976213455200195
    6. '   ' → logprob: -5.3226213455200195
    7. '(depth' → logprob: -5.5726213455200195
    8. ' p' → logprob: -5.9476213455200195
    9. ',' → logprob: -6.1976213455200195
    10. 'p' → logprob: -7.3226213455200195

Token 1121: ' update' (ID: 4027)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.04335677996277809
    2. 'd' → logprob: -3.4183568954467773
    3. 'p' → logprob: -5.168356895446777
    4. 'v' → logprob: -6.918356895446777
    5. 'dep' → logprob: -7.043356895446777
    6. 'node' → logprob: -7.668356895446777
    7. '   ' → logprob: -8.043356895446777
    8. ' depth' → logprob: -8.168356895446777
    9. 'x' → logprob: -8.293356895446777
    10. '_,' → logprob: -8.918356895446777

Token 1122: '_e' (ID: 4618)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3064085841178894
    2. '(' → logprob: -2.681408643722534
    3. 'def' → logprob: -2.931408643722534
    4. 'i' → logprob: -3.556408643722534
    5. '(E' → logprob: -3.556408643722534
    6. 'E' → logprob: -4.056408405303955
    7. ' =' → logprob: -4.681408405303955
    8. '<|end|>' → logprob: -4.806408405303955
    9. '_index' → logprob: -5.306408405303955
    10. '<|end|>' → logprob: -5.806408405303955

Token 1123: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0053513976745307446
    2. 'UL' → logprob: -5.880351543426514
    3. 'lement' → logprob: -7.505351543426514
    4. 'LEMENT' → logprob: -7.880351543426514
    5. 'ul' → logprob: -8.630351066589355
    6. 'L' → logprob: -8.755351066589355
    7. 'LER' → logprob: -9.130351066589355
    8. '```' → logprob: -9.255351066589355
    9. 'u' → logprob: -9.380351066589355
    10. '_length' → logprob: -9.942851066589355

Token 1124: '_index' (ID: 7748)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.17573632299900055
    2. '(i' → logprob: -2.300736427307129
    3. '_length' → logprob: -3.925736427307129
    4. '_index' → logprob: -4.425736427307129
    5. 'indices' → logprob: -5.050736427307129
    6. '_e' → logprob: -5.550736427307129
    7. '_lengths' → logprob: -5.800736427307129
    8. '_i' → logprob: -6.300736427307129
    9. '_ind' → logprob: -6.800736427307129
    10. '(_' → logprob: -6.925736427307129

Token 1125: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03395041823387146
    2. '(E' → logprob: -4.033950328826904
    3. '(' → logprob: -5.158950328826904
    4. '(L' → logprob: -6.158950328826904
    5. 'def' → logprob: -6.158950328826904
    6. 's' → logprob: -6.283950328826904
    7. '(
' → logprob: -7.283950328826904
    8. ' =' → logprob: -7.783950328826904
    9. 'i' → logprob: -7.783950328826904
    10. '_length' → logprob: -8.283950805664062

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09480609744787216
    2. ')' → logprob: -2.46980619430542
    3. ' ,' → logprob: -6.09480619430542
    4. '-' → logprob: -6.71980619430542
    5. ',E' → logprob: -7.71980619430542
    6. '   ' → logprob: -8.219805717468262
    7. ' -' → logprob: -8.344805717468262
    8. ')
' → logprob: -8.344805717468262
    9. ',
' → logprob: -8.469805717468262
    10. 'def' → logprob: -8.594805717468262

Token 1127: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.024990925565361977
    2. ' E' → logprob: -4.399991035461426
    3. 'ED' → logprob: -4.524991035461426
    4. ')' → logprob: -7.274991035461426
    5. 'N' → logprob: -8.274991035461426
    6. 'L' → logprob: -8.524991035461426
    7. 'i' → logprob: -9.524991035461426
    8. ' ED' → logprob: -9.524991035461426
    9. 'DEP' → logprob: -10.524991035461426
    10. 'C' → logprob: -10.649991035461426

Token 1128: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -5.538490950129926e-05
    2. 'UR' → logprob: -10.875055313110352
    3. 'UM' → logprob: -12.125055313110352
    4. 'ULAR' → logprob: -12.125055313110352
    5. '[' → logprob: -12.500055313110352
    6. '```' → logprob: -12.500055313110352
    7. 'ULL' → logprob: -13.000055313110352
    8. 'uler' → logprob: -13.250055313110352
    9. 'ULE' → logprob: -13.375055313110352
    10. 'LER' → logprob: -13.750055313110352

Token 1129: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.00023882099776528776
    2. 'R' → logprob: -8.500238418579102
    3. 'OR' → logprob: -10.500238418579102
    4. 'E' → logprob: -13.250238418579102
    5. '   ' → logprob: -13.750238418579102
    6. 'AR' → logprob: -14.500238418579102
    7. '```' → logprob: -14.500238418579102
    8. 'UR' → logprob: -14.625238418579102
    9. '[i' → logprob: -15.000238418579102
    10. '[' → logprob: -15.000238418579102

Token 1130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7102234363555908
    2. '[i' → logprob: -0.7102234363555908
    3. ')' → logprob: -4.960223197937012
    4. '[' → logprob: -5.710223197937012
    5. '   ' → logprob: -6.085223197937012
    6. ',i' → logprob: -6.085223197937012
    7. '-' → logprob: -7.460223197937012
    8. ' ,' → logprob: -8.085223197937012
    9. '[E' → logprob: -8.585223197937012
    10. '       ' → logprob: -9.085223197937012

Token 1131: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.023452309891581535
    2. 'E' → logprob: -4.273452281951904
    3. ' ED' → logprob: -5.398452281951904
    4. 'L' → logprob: -5.648452281951904
    5. 'C' → logprob: -8.023452758789062
    6. 'EDGE' → logprob: -8.148452758789062
    7. 'check' → logprob: -8.398452758789062
    8. '   ' → logprob: -9.523452758789062
    9. ' E' → logprob: -10.023452758789062
    10. 'DEP' → logprob: -10.273452758789062

Token 1132: 'G' (ID: 38)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.0117444833740592
    2. 'LER' → logprob: -5.261744499206543
    3. 'UR' → logprob: -5.886744499206543
    4. 'ER' → logprob: -6.761744499206543
    5. 'L' → logprob: -7.261744499206543
    6. 'UER' → logprob: -7.761744499206543
    7. 'uler' → logprob: -7.886744499206543
    8. 'EL' → logprob: -8.386744499206543
    9. 'U' → logprob: -8.511744499206543
    10. 'ULAR' → logprob: -9.136744499206543

Token 1133: 'EL' (ID: 3651)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.9643663763999939
    2. 'ER' → logprob: -1.3393664360046387
    3. 'EL' → logprob: -1.4643664360046387
    4. 'LER' → logprob: -2.8393664360046387
    5. 'UR' → logprob: -3.4643664360046387
    6. 'OR' → logprob: -4.339366436004639
    7. 'L' → logprob: -5.214366436004639
    8. 'uler' → logprob: -5.464366436004639
    9. 'ULAR' → logprob: -6.339366436004639
    10. 'R' → logprob: -6.464366436004639

Token 1134: 'IST' (ID: 6258)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.5007796287536621
    2. 'ER' → logprob: -1.125779628753662
    3. 'UR' → logprob: -2.750779628753662
    4. 'IST' → logprob: -5.750779628753662
    5. 'R' → logprob: -6.375779628753662
    6. 'ROR' → logprob: -8.87578010559082
    7. 'ST' → logprob: -9.12578010559082
    8. 'st' → logprob: -9.50078010559082
    9. '[i' → logprob: -9.75078010559082
    10. 'ON' → logprob: -10.00078010559082

Token 1135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15407824516296387
    2. ')' → logprob: -2.029078245162964
    3. ')
' → logprob: -5.154078483581543
    4. '   ' → logprob: -6.279078483581543
    5. '       ' → logprob: -6.279078483581543
    6. '[i' → logprob: -7.529078483581543
    7. ',
' → logprob: -8.279078483581543
    8. '[' → logprob: -8.404078483581543
    9. ',i' → logprob: -9.279078483581543
    10. '):
' → logprob: -9.279078483581543

Token 1136: ' check' (ID: 2371)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.11835918575525284
    2. ' LENGTH' → logprob: -2.743359088897705
    3. 'check' → logprob: -3.618359088897705
    4. 'C' → logprob: -4.118359088897705
    5. ' check' → logprob: -6.743359088897705
    6. 'CHECK' → logprob: -7.368359088897705
    7. ' L' → logprob: -7.493359088897705
    8. 'length' → logprob: -7.618359088897705
    9. 'E' → logprob: -7.993359088897705
    10. '   ' → logprob: -8.618359565734863

Token 1137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045154571533203125
    2. ')' → logprob: -3.170154571533203
    3. '   ' → logprob: -6.795154571533203
    4. '       ' → logprob: -8.420154571533203
    5. ',i' → logprob: -8.420154571533203
    6. ',
' → logprob: -8.545154571533203
    7. '[i' → logprob: -8.920154571533203
    8. ',)' → logprob: -9.670154571533203
    9. ' ,' → logprob: -9.670154571533203
    10. '[' → logprob: -10.545154571533203

Token 1138: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04891117289662361
    2. ' LENGTH' → logprob: -3.0489110946655273
    3. 'C' → logprob: -8.298911094665527
    4. 'length' → logprob: -10.798911094665527
    5. 'DEP' → logprob: -11.423911094665527
    6. '   ' → logprob: -11.798911094665527
    7. 'Length' → logprob: -12.048911094665527
    8. '
' → logprob: -12.173911094665527
    9. ' L' → logprob: -12.423911094665527
    10. ' ' → logprob: -12.423911094665527

Token 1139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019507692195475101
    2. ' ,' → logprob: -9.625195503234863
    3. '   ' → logprob: -9.875195503234863
    4. '       ' → logprob: -10.625195503234863
    5. ')' → logprob: -10.750195503234863
    6. ',
' → logprob: -11.125195503234863
    7. '[i' → logprob: -12.500195503234863
    8. ',i' → logprob: -12.500195503234863
    9. '[' → logprob: -13.500195503234863
    10. '  ' → logprob: -13.875195503234863

Token 1140: ' C' (ID: 363)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.013010449707508087
    2. ' L' → logprob: -4.388010501861572
    3. 'C' → logprob: -7.763010501861572
    4. 'i' → logprob: -9.888010025024414
    5. ' C' → logprob: -11.638010025024414
    6. '   ' → logprob: -11.888010025024414
    7. ' i' → logprob: -12.638010025024414
    8. '
' → logprob: -13.263010025024414
    9. ' ' → logprob: -14.013010025024414
    10. '    ' → logprob: -14.513010025024414

Token 1141: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.0006990921101532876
    2. '_L' → logprob: -7.500699043273926
    3. 'L' → logprob: -9.625699043273926
    4. '_S' → logprob: -10.000699043273926
    5. '_SUM' → logprob: -10.500699043273926
    6. '_LEN' → logprob: -12.500699043273926
    7. '_length' → logprob: -13.875699043273926
    8. '_Length' → logprob: -14.625699043273926
    9. '_DEPTH' → logprob: -15.250699043273926
    10. 'Length' → logprob: -15.375699043273926

Token 1142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.263011578586884e-05
    2. ' ,' → logprob: -10.875042915344238
    3. ')' → logprob: -11.125042915344238
    4. '   ' → logprob: -12.125042915344238
    5. ',C' → logprob: -13.250042915344238
    6. ',i' → logprob: -15.000042915344238
    7. '  ' → logprob: -15.125042915344238
    8. '       ' → logprob: -15.125042915344238
    9. '```' → logprob: -15.625042915344238
    10. ',
' → logprob: -15.875042915344238

Token 1143: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011259667575359344
    2. ' C' → logprob: -4.63625955581665
    3. 'i' → logprob: -6.76125955581665
    4. 'L' → logprob: -9.011260032653809
    5. '   ' → logprob: -9.261260032653809
    6. ' i' → logprob: -9.386260032653809
    7. ' ' → logprob: -11.011260032653809
    8. '       ' → logprob: -11.886260032653809
    9. 'E' → logprob: -12.386260032653809
    10. '  ' → logprob: -12.511260032653809

Token 1144: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.026596589013934135
    2. 'SUM' → logprob: -3.6515965461730957
    3. '_S' → logprob: -8.526597023010254
    4. ',' → logprob: -10.401597023010254
    5. 'i' → logprob: -10.526597023010254
    6. ')' → logprob: -11.776597023010254
    7. '   ' → logprob: -11.901597023010254
    8. '_sum' → logprob: -12.276597023010254
    9. '```' → logprob: -12.401597023010254
    10. ' SUM' → logprob: -12.901597023010254

Token 1145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.625017166137695
    3. ',C' → logprob: -12.875017166137695
    4. '   ' → logprob: -13.000017166137695
    5. ')' → logprob: -13.375017166137695
    6. ',
' → logprob: -14.500017166137695
    7. 'def' → logprob: -14.625017166137695
    8. '_,' → logprob: -16.250017166137695
    9. '       ' → logprob: -16.375017166137695
    10. ')
' → logprob: -16.625017166137695

Token 1146: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009321830002591014
    2. ' C' → logprob: -7.000932216644287
    3. '   ' → logprob: -11.625931739807129
    4. '
' → logprob: -12.875931739807129
    5. 'i' → logprob: -12.875931739807129
    6. ')' → logprob: -13.750931739807129
    7. '       ' → logprob: -13.875931739807129
    8. ' ' → logprob: -14.000931739807129
    9. '           ' → logprob: -14.750931739807129
    10. ',' → logprob: -14.750931739807129

Token 1147: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0012727351859211922
    2. '_S' → logprob: -7.001272678375244
    3. '_LENGTH' → logprob: -8.626273155212402
    4. '_DICT' → logprob: -9.251273155212402
    5. 'L' → logprob: -10.001273155212402
    6. '_LEN' → logprob: -11.001273155212402
    7. '```' → logprob: -12.376273155212402
    8. 'LD' → logprob: -12.626273155212402
    9. '_SD' → logprob: -13.251273155212402
    10. '
' → logprob: -13.251273155212402

Token 1148: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.011374711990356445
    2. 'IST' → logprob: -4.761374473571777
    3. 'ICT' → logprob: -6.011374473571777
    4. '_DICT' → logprob: -9.386374473571777
    5. 'dict' → logprob: -10.136374473571777
    6. 'ECT' → logprob: -10.386374473571777
    7. 'DI' → logprob: -10.636374473571777
    8. 'D' → logprob: -11.261374473571777
    9. 'ict' → logprob: -11.261374473571777
    10. 'DIST' → logprob: -11.261374473571777

Token 1149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. '   ' → logprob: -11.250028610229492
    3. ' ,' → logprob: -11.375028610229492
    4. ',
' → logprob: -13.250028610229492
    5. ',C' → logprob: -13.375028610229492
    6. '       ' → logprob: -16.375028610229492
    7. ' ' → logprob: -16.625028610229492
    8. '  ' → logprob: -16.625028610229492
    9. '‌,' → logprob: -16.625028610229492
    10. 'C' → logprob: -16.750028610229492

Token 1150: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01603800244629383
    2. ' C' → logprob: -4.141037940979004
    3. ' ' → logprob: -13.266037940979004
    4. '   ' → logprob: -13.641037940979004
    5. '
' → logprob: -14.641037940979004
    6. '  ' → logprob: -16.14103889465332
    7. '```' → logprob: -16.51603889465332
    8. ')' → logprob: -16.89103889465332
    9. '       ' → logprob: -17.14103889465332
    10. '    ' → logprob: -17.26603889465332

Token 1151: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -1.3544423381972592e-05
    2. '_SD' → logprob: -11.87501335144043
    3. 'S' → logprob: -12.50001335144043
    4. '_L' → logprob: -14.12501335144043
    5. 'SD' → logprob: -15.37501335144043
    6. '_' → logprob: -15.37501335144043
    7. '\' → logprob: -15.50001335144043
    8. '```' → logprob: -15.62501335144043
    9. ')' → logprob: -15.75001335144043
    10. '_s' → logprob: -15.87501335144043

Token 1152: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.003174740821123123
    2. '_DICT' → logprob: -6.878174781799316
    3. 'ICT' → logprob: -7.003174781799316
    4. 'DI' → logprob: -7.378174781799316
    5. 'D' → logprob: -7.753174781799316
    6. 'ID' → logprob: -9.628174781799316
    7. 'I' → logprob: -10.253174781799316
    8. '_dict' → logprob: -10.628174781799316
    9. 'dict' → logprob: -10.878174781799316
    10. 'Dict' → logprob: -12.253174781799316

Token 1153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002776466542854905
    2. ',' → logprob: -6.127776622772217
    3. '[i' → logprob: -8.127776145935059
    4. '   ' → logprob: -9.127776145935059
    5. '):' → logprob: -9.502776145935059
    6. ')
' → logprob: -9.627776145935059
    7. '(i' → logprob: -11.502776145935059
    8. ',i' → logprob: -12.127776145935059
    9. ' )' → logprob: -12.377776145935059
    10. '):
' → logprob: -12.377776145935059

Token 1154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010914575977949426
    2. '```' → logprob: -9.62510871887207
    3. ' def' → logprob: -10.25010871887207
    4. '   ' → logprob: -12.87510871887207
    5. 'x' → logprob: -13.12510871887207
    6. 'i' → logprob: -13.12510871887207
    7. ':def' → logprob: -14.87510871887207
    8. '	def' → logprob: -16.00010871887207
    9. 'for' → logprob: -16.00010871887207
    10. 'c' → logprob: -16.25010871887207

Token 1155: ' update' (ID: 4027)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35170498490333557
    2. 'update' → logprob: -1.2267049551010132
    3. ' update' → logprob: -6.601705074310303
    4. ' def' → logprob: -6.851705074310303
    5. 'define' → logprob: -8.976704597473145
    6. 'for' → logprob: -9.101704597473145
    7. 'process' → logprob: -9.226704597473145
    8. '
' → logprob: -9.351704597473145
    9. '_update' → logprob: -9.601704597473145
    10. '(update' → logprob: -9.851704597473145

Token 1156: '_e' (ID: 4618)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6683765053749084
    2. '_e' → logprob: -0.7933765053749084
    3. 'e' → logprob: -3.9183764457702637
    4. '(i' → logprob: -4.543376445770264
    5. '(' → logprob: -6.293376445770264
    6. '(n' → logprob: -7.418376445770264
    7. ' def' → logprob: -7.543376445770264
    8. '```' → logprob: -8.043376922607422
    9. '_index' → logprob: -8.543376922607422
    10. 'E' → logprob: -8.543376922607422

Token 1157: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -3.607391408877447e-05
    2. 'ler' → logprob: -11.375036239624023
    3. 'ulers' → logprob: -12.000036239624023
    4. 'ul' → logprob: -12.250036239624023
    5. 'ule' → logprob: -13.000036239624023
    6. 'iler' → logprob: -13.125036239624023
    7. 'lement' → logprob: -13.875036239624023
    8. 'uel' → logprob: -13.875036239624023
    9. 'uer' → logprob: -14.000036239624023
    10. 'ular' → logprob: -14.000036239624023

Token 1158: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006688326830044389
    2. '_indices' → logprob: -7.375669002532959
    3. '_e' → logprob: -11.0006685256958
    4. '_ind' → logprob: -11.8756685256958
    5. '_indexes' → logprob: -12.3756685256958
    6. 'index' → logprob: -12.5006685256958
    7. '(i' → logprob: -12.7506685256958
    8. '_i' → logprob: -13.2506685256958
    9. '```' → logprob: -13.7506685256958
    10. '_' → logprob: -14.0006685256958

Token 1159: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.696077227592468e-05
    2. '(' → logprob: -10.500077247619629
    3. '(idx' → logprob: -10.500077247619629
    4. '(index' → logprob: -11.375077247619629
    5. 'def' → logprob: -12.000077247619629
    6. '(n' → logprob: -13.750077247619629
    7. '(ind' → logprob: -13.875077247619629
    8. '(I' → logprob: -14.625077247619629
    9. '(
' → logprob: -14.750077247619629
    10. '(x' → logprob: -15.875077247619629

Token 1160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.420598219847307e-05
    2. ' ,' → logprob: -10.0000638961792
    3. ',E' → logprob: -12.0000638961792
    4. '   ' → logprob: -12.1250638961792
    5. ',
' → logprob: -12.8750638961792
    6. ',i' → logprob: -13.5000638961792
    7. '```' → logprob: -14.5000638961792
    8. 'E' → logprob: -14.5000638961792
    9. '_,' → logprob: -14.8750638961792
    10. '):' → logprob: -14.8750638961792

Token 1161: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.011075885966420174
    2. ' E' → logprob: -4.511075973510742
    3. ')' → logprob: -11.636075973510742
    4. 'i' → logprob: -12.011075973510742
    5. '(E' → logprob: -12.511075973510742
    6. 'def' → logprob: -13.386075973510742
    7. '   ' → logprob: -13.761075973510742
    8. '	E' → logprob: -13.886075973510742
    9. '...' → logprob: -14.136075973510742
    10. '>E' → logprob: -14.386075973510742

Token 1162: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -2.248469718324486e-05
    2. 'uler' → logprob: -12.000022888183594
    3. 'U' → logprob: -12.125022888183594
    4. 'ULAR' → logprob: -12.750022888183594
    5. 'UR' → logprob: -14.000022888183594
    6. 'OL' → logprob: -14.250022888183594
    7. '_UL' → logprob: -14.250022888183594
    8. '```' → logprob: -14.375022888183594
    9. '(' → logprob: -14.500022888183594
    10. 'ULE' → logprob: -14.625022888183594

Token 1163: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -1.6405310816480778e-05
    2. 'R' → logprob: -11.750016212463379
    3. 'OR' → logprob: -12.250016212463379
    4. '[i' → logprob: -14.500016212463379
    5. '_ER' → logprob: -14.500016212463379
    6. 'E' → logprob: -14.875016212463379
    7. '[' → logprob: -15.000016212463379
    8. '   ' → logprob: -15.125016212463379
    9. '_i' → logprob: -15.500016212463379
    10. 'UR' → logprob: -15.625016212463379

Token 1164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.281485836254433e-05
    2. ',E' → logprob: -10.375092506408691
    3. ' ,' → logprob: -10.500092506408691
    4. '   ' → logprob: -10.500092506408691
    5. 'E' → logprob: -12.750092506408691
    6. ',
' → logprob: -14.000092506408691
    7. '```' → logprob: -14.125092506408691
    8. '):' → logprob: -14.750092506408691
    9. ',i' → logprob: -14.875092506408691
    10. ' ' → logprob: -15.625092506408691

Token 1165: ' ED' (ID: 36313)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0010977147612720728
    2. ' E' → logprob: -6.876097679138184
    3. 'ED' → logprob: -10.626097679138184
    4. ')' → logprob: -11.876097679138184
    5. 'i' → logprob: -12.001097679138184
    6. 'def' → logprob: -12.251097679138184
    7. '   ' → logprob: -12.501097679138184
    8. '(E' → logprob: -12.626097679138184
    9. 'L' → logprob: -12.751097679138184
    10. 'C' → logprob: -13.001097679138184

Token 1166: 'G' (ID: 38)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.046474162489175797
    2. 'LER' → logprob: -3.4214742183685303
    3. 'L' → logprob: -5.046473979949951
    4. 'ER' → logprob: -5.421473979949951
    5. 'uler' → logprob: -6.796473979949951
    6. 'UR' → logprob: -8.17147445678711
    7. 'EL' → logprob: -8.79647445678711
    8. 'U' → logprob: -10.04647445678711
    9. 'ULAR' → logprob: -10.04647445678711
    10. 'UER' → logprob: -10.04647445678711

Token 1167: 'EL' (ID: 3651)
  Prédit: 'UL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.39207303524017334
    2. 'ER' → logprob: -1.1420730352401733
    3. 'EL' → logprob: -6.142073154449463
    4. 'LER' → logprob: -6.392073154449463
    5. 'UR' → logprob: -7.642073154449463
    6. 'L' → logprob: -8.017072677612305
    7. 'uler' → logprob: -8.892072677612305
    8. '```' → logprob: -9.892072677612305
    9. '
' → logprob: -10.017072677612305
    10. 'OR' → logprob: -10.142072677612305

Token 1168: 'IST' (ID: 6258)
  Prédit: 'ER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.5232508182525635
    2. 'UR' → logprob: -1.1482508182525635
    3. 'OR' → logprob: -3.1482508182525635
    4. '_indices' → logprob: -3.6482508182525635
    5. 'R' → logprob: -5.023250579833984
    6. 'indices' → logprob: -5.523250579833984
    7. ' indices' → logprob: -5.648250579833984
    8. '_index' → logprob: -6.523250579833984
    9. 'UL' → logprob: -6.773250579833984
    10. '_INDEX' → logprob: -7.148250579833984

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012773419439326972
    2. ',E' → logprob: -10.000127792358398
    3. '   ' → logprob: -10.250127792358398
    4. ' ,' → logprob: -10.375127792358398
    5. ',
' → logprob: -11.625127792358398
    6. 'E' → logprob: -13.250127792358398
    7. '```' → logprob: -13.375127792358398
    8. '):
' → logprob: -14.375127792358398
    9. '):' → logprob: -14.750127792358398
    10. ',i' → logprob: -15.000127792358398

Token 1170: ' check' (ID: 2371)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.17664222419261932
    2. 'C' → logprob: -2.5516421794891357
    3. ' LENGTH' → logprob: -2.6766421794891357
    4. 'CHECK' → logprob: -5.176642417907715
    5. 'check' → logprob: -5.426642417907715
    6. ' L' → logprob: -6.426642417907715
    7. ' C' → logprob: -7.301642417907715
    8. 'length' → logprob: -7.426642417907715
    9. ' check' → logprob: -7.676642417907715
    10. '
' → logprob: -8.051642417907715

Token 1171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006332091288641095
    2. '   ' → logprob: -7.750633239746094
    3. ',i' → logprob: -9.125633239746094
    4. ' ,' → logprob: -9.875633239746094
    5. ',E' → logprob: -11.000633239746094
    6. ',
' → logprob: -11.500633239746094
    7. '(i' → logprob: -12.250633239746094
    8. '
' → logprob: -13.250633239746094
    9. '```' → logprob: -13.375633239746094
    10. 'E' → logprob: -13.750633239746094

Token 1172: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.007621653378009796
    2. ' LENGTH' → logprob: -5.257621765136719
    3. ' L' → logprob: -6.382621765136719
    4. 'C' → logprob: -7.382621765136719
    5. '   ' → logprob: -10.757621765136719
    6. ' ' → logprob: -11.132621765136719
    7. 'length' → logprob: -11.507621765136719
    8. ' C' → logprob: -11.882621765136719
    9. 'LEN' → logprob: -12.007621765136719
    10. '  ' → logprob: -12.632621765136719

Token 1173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ',i' → logprob: -11.625016212463379
    3. ' ,' → logprob: -12.500016212463379
    4. ',
' → logprob: -13.125016212463379
    5. '   ' → logprob: -13.750016212463379
    6. ',p' → logprob: -15.625016212463379
    7. ',C' → logprob: -16.375017166137695
    8. '[i' → logprob: -16.375017166137695
    9. ',E' → logprob: -16.625017166137695
    10. ',
' → logprob: -17.125017166137695

Token 1174: ' C' (ID: 363)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.24128660559654236
    2. 'C' → logprob: -1.7412866353988647
    3. ' L' → logprob: -3.741286516189575
    4. 'i' → logprob: -4.741286754608154
    5. ' C' → logprob: -5.116286754608154
    6. ' i' → logprob: -7.741286754608154
    7. '   ' → logprob: -8.991286277770996
    8. ' ' → logprob: -10.491286277770996
    9. 'E' → logprob: -10.991286277770996
    10. '  ' → logprob: -11.366286277770996

Token 1175: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.014938433654606342
    2. '_L' → logprob: -4.3899383544921875
    3. '_LEN' → logprob: -7.1399383544921875
    4. 'L' → logprob: -7.1399383544921875
    5. '_S' → logprob: -7.7649383544921875
    6. '_SUM' → logprob: -8.264938354492188
    7. ',L' → logprob: -10.389938354492188
    8. 'LEN' → logprob: -10.764938354492188
    9. ',' → logprob: -11.014938354492188
    10. '_length' → logprob: -11.264938354492188

Token 1176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ',i' → logprob: -13.625008583068848
    4. ',
' → logprob: -15.125008583068848
    5. ',C' → logprob: -15.125008583068848
    6. ',E' → logprob: -15.250008583068848
    7. '   ' → logprob: -15.375008583068848
    8. '):
' → logprob: -17.37500762939453
    9. ',c' → logprob: -17.37500762939453
    10. 'i' → logprob: -17.87500762939453

Token 1177: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0026772029232233763
    2. ' C' → logprob: -6.0026774406433105
    3. '   ' → logprob: -9.377676963806152
    4. 'i' → logprob: -10.002676963806152
    5. '
' → logprob: -10.502676963806152
    6. 'L' → logprob: -11.002676963806152
    7. ' ' → logprob: -11.502676963806152
    8. '  ' → logprob: -12.877676963806152
    9. '
' → logprob: -13.002676963806152
    10. '       ' → logprob: -13.377676963806152

Token 1178: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.1045648381114006
    2. 'SUM' → logprob: -2.354564905166626
    3. '_S' → logprob: -5.604564666748047
    4. 'i' → logprob: -8.229564666748047
    5. '_sum' → logprob: -9.604564666748047
    6. '_LENGTH' → logprob: -9.979564666748047
    7. 'sum' → logprob: -10.354564666748047
    8. '[i' → logprob: -10.479564666748047
    9. '   ' → logprob: -10.479564666748047
    10. '_i' → logprob: -10.729564666748047

Token 1179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8802491215174086e-05
    2. ',C' → logprob: -11.000028610229492
    3. ' ,' → logprob: -11.375028610229492
    4. ',
' → logprob: -15.875028610229492
    5. '   ' → logprob: -16.000028610229492
    6. 'def' → logprob: -16.625028610229492
    7. '```' → logprob: -16.625028610229492
    8. 'C' → logprob: -17.125028610229492
    9. ',S' → logprob: -17.125028610229492
    10. ',c' → logprob: -17.625028610229492

Token 1180: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00025764419115148485
    2. ' C' → logprob: -8.37525749206543
    3. '   ' → logprob: -11.37525749206543
    4. 'i' → logprob: -11.62525749206543
    5. ' ' → logprob: -13.12525749206543
    6. '
' → logprob: -13.12525749206543
    7. 'L' → logprob: -14.12525749206543
    8. '  ' → logprob: -14.25025749206543
    9. ',' → logprob: -15.37525749206543
    10. '     ' → logprob: -16.00025749206543

Token 1181: '_L' (ID: 4258)
  Prédit: 'DICT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.9233615398406982
    2. 'L' → logprob: -1.2983615398406982
    3. '_S' → logprob: -1.6733615398406982
    4. 'S' → logprob: -2.2983615398406982
    5. '_L' → logprob: -4.048361778259277
    6. '_DICT' → logprob: -4.673361778259277
    7. 'SUM' → logprob: -5.173361778259277
    8. 'SD' → logprob: -6.298361778259277
    9. 'LEN' → logprob: -6.298361778259277
    10. 'dict' → logprob: -6.673361778259277

Token 1182: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.002997196977958083
    2. 'ICT' → logprob: -6.502997398376465
    3. 'IST' → logprob: -6.627997398376465
    4. '_DICT' → logprob: -10.127997398376465
    5. 'dict' → logprob: -10.252997398376465
    6. 'DIST' → logprob: -10.627997398376465
    7. 'ict' → logprob: -11.502997398376465
    8. 'C' → logprob: -11.752997398376465
    9. 'D' → logprob: -11.877997398376465
    10. '   ' → logprob: -12.252997398376465

Token 1183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010318557906430215
    2. ',C' → logprob: -9.375102996826172
    3. ' ,' → logprob: -11.000102996826172
    4. ',E' → logprob: -14.625102996826172
    5. '   ' → logprob: -15.375102996826172
    6. 'C' → logprob: -15.500102996826172
    7. ',
' → logprob: -15.750102996826172
    8. ',S' → logprob: -15.875102996826172
    9. ',c' → logprob: -16.625102996826172
    10. ',A' → logprob: -16.750102996826172

Token 1184: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0008691829279996455
    2. ' C' → logprob: -7.125869274139404
    3. '   ' → logprob: -10.250868797302246
    4. ' ' → logprob: -10.875868797302246
    5. '
' → logprob: -12.250868797302246
    6. '  ' → logprob: -13.125868797302246
    7. '       ' → logprob: -13.375868797302246
    8. '     ' → logprob: -15.000868797302246
    9. '           ' → logprob: -15.000868797302246
    10. '    ' → logprob: -15.125868797302246

Token 1185: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0015800900291651487
    2. 'S' → logprob: -6.626580238342285
    3. '_SD' → logprob: -8.751580238342285
    4. 'SD' → logprob: -10.001580238342285
    5. '_DICT' → logprob: -10.751580238342285
    6. 'DICT' → logprob: -11.626580238342285
    7. '_SUM' → logprob: -12.751580238342285
    8. '_s' → logprob: -12.876580238342285
    9. '
' → logprob: -12.876580238342285
    10. '_LENGTH' → logprob: -13.126580238342285

Token 1186: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0006981384940445423
    2. 'ICT' → logprob: -8.12569808959961
    3. '_DICT' → logprob: -8.12569808959961
    4. 'dict' → logprob: -10.25069808959961
    5. '_dict' → logprob: -10.75069808959961
    6. 'DI' → logprob: -11.62569808959961
    7. '
' → logprob: -12.00069808959961
    8. '   ' → logprob: -12.25069808959961
    9. 'S' → logprob: -12.50069808959961
    10. 'ID' → logprob: -12.62569808959961

Token 1187: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31567883491516113
    2. '):' → logprob: -1.3156788349151611
    3. '):
' → logprob: -6.690678596496582
    4. '   ' → logprob: -6.815678596496582
    5. '):

' → logprob: -10.190678596496582
    6. ')' → logprob: -11.065678596496582
    7. '(i' → logprob: -11.565678596496582
    8. ' ' → logprob: -12.565678596496582
    9. ',' → logprob: -12.690678596496582
    10. 'def' → logprob: -13.940678596496582

Token 1188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28528106212615967
    2. 'depth' → logprob: -1.5352810621261597
    3. 'p' → logprob: -4.160281181335449
    4. 'd' → logprob: -4.660281181335449
    5. '_,' → logprob: -5.660281181335449
    6. ' depth' → logprob: -6.785281181335449
    7. 'x' → logprob: -7.285281181335449
    8. 'prev' → logprob: -7.535281181335449
    9. '(depth' → logprob: -7.785281181335449
    10. ' p' → logprob: -7.910281181335449

Token 1189: ' ind' (ID: 1383)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5954182147979736
    2. 'p' → logprob: -0.9704182147979736
    3. 'x' → logprob: -3.7204182147979736
    4. 'd' → logprob: -3.8454182147979736
    5. 'prev' → logprob: -4.5954179763793945
    6. '_,' → logprob: -5.4704179763793945
    7. 'v' → logprob: -6.0954179763793945
    8. '   ' → logprob: -6.8454179763793945
    9. 'cur' → logprob: -6.9704179763793945
    10. 'dep' → logprob: -6.9704179763793945

Token 1190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46507447957992554
    2. ',' → logprob: -1.2150745391845703
    3. '=' → logprob: -2.7150745391845703
    4. '   ' → logprob: -6.21507453918457
    5. ' ,' → logprob: -6.34007453918457
    6. 'p' → logprob: -6.46507453918457
    7. '_,' → logprob: -6.71507453918457
    8. 'depth' → logprob: -7.21507453918457
    9. 'x' → logprob: -7.96507453918457
    10. ',p' → logprob: -8.09007453918457

Token 1191: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07103872299194336
    2. 'i' → logprob: -2.6960387229919434
    3. ' E' → logprob: -7.196038722991943
    4. '   ' → logprob: -8.946039199829102
    5. ' i' → logprob: -9.446039199829102
    6. 'e' → logprob: -10.321039199829102
    7. 'ind' → logprob: -10.321039199829102
    8. 'len' → logprob: -11.696039199829102
    9. '(E' → logprob: -11.946039199829102
    10. '0' → logprob: -12.196039199829102

Token 1192: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -3.416665640543215e-05
    2. 'U' → logprob: -10.87503433227539
    3. 'UR' → logprob: -11.75003433227539
    4. 'uler' → logprob: -13.12503433227539
    5. 'ULAR' → logprob: -13.62503433227539
    6. '_UL' → logprob: -14.12503433227539
    7. 'ULL' → logprob: -14.75003433227539
    8. '[' → logprob: -15.00003433227539
    9. '```' → logprob: -15.12503433227539
    10. 'ULE' → logprob: -15.12503433227539

Token 1193: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -1.3856492842023727e-06
    2. 'OR' → logprob: -14.750000953674316
    3. 'R' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '[' → logprob: -16.000001907348633
    6. 'E' → logprob: -16.250001907348633
    7. '
' → logprob: -16.625001907348633
    8. '_ER' → logprob: -16.625001907348633
    9. '...' → logprob: -17.375001907348633
    10. ' ER' → logprob: -17.500001907348633

Token 1194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017337289173156023
    2. '[' → logprob: -6.751733779907227
    3. 'i' → logprob: -8.626733779907227
    4. '[
' → logprob: -9.751733779907227
    5. '[ind' → logprob: -9.876733779907227
    6. '```' → logprob: -9.876733779907227
    7. '   ' → logprob: -10.001733779907227
    8. '][' → logprob: -10.501733779907227
    9. '
' → logprob: -10.501733779907227
    10. 'index' → logprob: -11.251733779907227

Token 1195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012463049497455359
    2. '[' → logprob: -7.001246452331543
    3. '-' → logprob: -8.376246452331543
    4. ']' → logprob: -9.751246452331543
    5. ' ][' → logprob: -11.501246452331543
    6. ']
' → logprob: -11.501246452331543
    7. '   ' → logprob: -12.126246452331543
    8. '][-' → logprob: -12.751246452331543
    9. '
' → logprob: -13.126246452331543
    10. '()][' → logprob: -13.438746452331543

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.75000286102295
    3. '::-' → logprob: -14.25000286102295
    4. '```' → logprob: -15.62500286102295
    5. '0' → logprob: -15.81250286102295
    6. '-' → logprob: -16.250001907348633
    7. ' ' → logprob: -16.625001907348633
    8. '' → logprob: -16.812501907348633
    9. '   ' → logprob: -17.000001907348633
    10. '[' → logprob: -17.312501907348633

Token 1197: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.18896931409835815
    2. '   ' → logprob: -2.438969373703003
    3. ']' → logprob: -2.813969373703003
    4. '
' → logprob: -3.938969373703003
    5. ')
' → logprob: -5.813969135284424
    6. 'def' → logprob: -7.313969135284424
    7. '-' → logprob: -7.563969135284424
    8. ')' → logprob: -7.688969135284424
    9. ',' → logprob: -8.813969612121582
    10. ' ]
' → logprob: -8.813969612121582

Token 1198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011258258484303951
    2. 'prev' → logprob: -4.761258125305176
    3. 'if' → logprob: -6.886258125305176
    4. 'c' → logprob: -7.886258125305176
    5. 'p' → logprob: -8.011258125305176
    6. 'x' → logprob: -8.761258125305176
    7. 'l' → logprob: -9.261258125305176
    8. 'length' → logprob: -9.386258125305176
    9. ' prev' → logprob: -9.511258125305176
    10. '```' → logprob: -10.136258125305176

Token 1199: ' c' (ID: 274)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.12859094142913818
    2. 'par' → logprob: -2.7535910606384277
    3. 'p' → logprob: -4.128591060638428
    4. 'if' → logprob: -4.628591060638428
    5. 'parent' → logprob: -4.878591060638428
    6. 'pre' → logprob: -5.128591060638428
    7. 'depth' → logprob: -5.128591060638428
    8. 'pr' → logprob: -6.128591060638428
    9. 'dist' → logprob: -6.753591060638428
    10. 'for' → logprob: -6.878591060638428

Token 1200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2778346538543701
    2. ' =' → logprob: -1.9028346538543701
    3. '=' → logprob: -2.52783465385437
    4. 'for' → logprob: -6.402834892272949
    5. ' ,' → logprob: -6.527834892272949
    6. ',l' → logprob: -6.527834892272949
    7. 'urrent' → logprob: -6.652834892272949
    8. '_,' → logprob: -6.777834892272949
    9. '_' → logprob: -7.152834892272949
    10. ' for' → logprob: -7.527834892272949

Token 1201: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008157667703926563
    2. ' l' → logprob: -4.883157730102539
    3. 'length' → logprob: -8.883157730102539
    4. '_' → logprob: -9.133157730102539
    5. '_=' → logprob: -9.258157730102539
    6. 'x' → logprob: -9.383157730102539
    7. 'L' → logprob: -10.633157730102539
    8. '_l' → logprob: -11.133157730102539
    9. 'd' → logprob: -11.758157730102539
    10. ' =' → logprob: -11.883157730102539

Token 1202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4412488639354706
    2. ' =' → logprob: -1.191248893737793
    3. ',' → logprob: -2.941248893737793
    4. ' ,' → logprob: -9.316248893737793
    5. ' ' → logprob: -11.566248893737793
    6. '   ' → logprob: -12.191248893737793
    7. '	' → logprob: -12.441248893737793
    8. 'x' → logprob: -12.441248893737793
    9. '    ' → logprob: -13.316248893737793
    10. '_' → logprob: -13.691248893737793

Token 1203: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.001003155019134283
    2. ' ED' → logprob: -7.376003265380859
    3. '0' → logprob: -8.62600326538086
    4. 'next' → logprob: -9.62600326538086
    5. '-' → logprob: -10.12600326538086
    6. 'None' → logprob: -10.75100326538086
    7. 'list' → logprob: -10.75100326538086
    8. '_ED' → logprob: -11.37600326538086
    9. '(' → logprob: -11.87600326538086
    10. '   ' → logprob: -11.87600326538086

Token 1204: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.5048530030981055e-06
    2. 'gel' → logprob: -14.250001907348633
    3. ' G' → logprob: -15.000001907348633
    4. '
' → logprob: -15.500001907348633
    5. 'EL' → logprob: -16.000001907348633
    6. 'g' → logprob: -16.625001907348633
    7. '[' → logprob: -17.000001907348633
    8. 'GE' → logprob: -17.500001907348633
    9. 'get' → logprob: -17.625001907348633
    10. '```' → logprob: -17.625001907348633

Token 1205: 'EL' (ID: 3651)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.023247575387358665
    2. 'EL' → logprob: -3.773247480392456
    3. 'gel' → logprob: -14.773247718811035
    4. 'L' → logprob: -14.898247718811035
    5. 'GL' → logprob: -15.898247718811035
    6. 'GE' → logprob: -16.14824676513672
    7. '[' → logprob: -16.14824676513672
    8. 'ED' → logprob: -16.14824676513672
    9. '
' → logprob: -16.27324676513672
    10. 'E' → logprob: -16.27324676513672

Token 1206: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -6.034592388459714e-06
    2. 'ST' → logprob: -12.125005722045898
    3. 'ist' → logprob: -14.750005722045898
    4. 'LIST' → logprob: -16.1250057220459
    5. 'ISTS' → logprob: -16.5000057220459
    6. ' IST' → logprob: -17.7500057220459
    7. 'Ist' → logprob: -18.2500057220459
    8. 'IS' → logprob: -18.8750057220459
    9. '
' → logprob: -19.1250057220459
    10. 'I' → logprob: -19.3750057220459

Token 1207: '[E' (ID: 145915)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.5832570195198059
    2. '[E' → logprob: -0.8332570195198059
    3. '[' → logprob: -6.08325719833374
    4. 'E' → logprob: -6.45825719833374
    5. '
' → logprob: -7.45825719833374
    6. 'ind' → logprob: -7.58325719833374
    7. '[_' → logprob: -8.458256721496582
    8. 'get' → logprob: -9.083256721496582
    9. '[i' → logprob: -9.458256721496582
    10. '=' → logprob: -9.458256721496582

Token 1208: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.024488748982548714
    2. 'uler' → logprob: -3.774488687515259
    3. 'L' → logprob: -8.52448844909668
    4. '[' → logprob: -8.64948844909668
    5. 'UR' → logprob: -9.14948844909668
    6. '[ind' → logprob: -9.27448844909668
    7. 'UEL' → logprob: -9.27448844909668
    8. 'LER' → logprob: -9.39948844909668
    9. 'ULAR' → logprob: -9.64948844909668
    10. ' UL' → logprob: -9.64948844909668

Token 1209: 'ER' (ID: 866)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.6743811964988708
    2. 'ind' → logprob: -1.1743812561035156
    3. 'R' → logprob: -2.5493812561035156
    4. 'ER' → logprob: -3.2993812561035156
    5. 'uler' → logprob: -4.299381256103516
    6. 'UR' → logprob: -4.549381256103516
    7. ' ind' → logprob: -4.674381256103516
    8. 'UL' → logprob: -4.924381256103516
    9. 'ist' → logprob: -5.549381256103516
    10. 'index' → logprob: -5.549381256103516

Token 1210: '[i' (ID: 1768)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.0056263236328959465
    2. '[i' → logprob: -5.380626201629639
    3. '[E' → logprob: -7.505626201629639
    4. 'ind' → logprob: -8.380626678466797
    5. '[' → logprob: -9.630626678466797
    6. ' ind' → logprob: -10.005626678466797
    7. 'i' → logprob: -10.505626678466797
    8. '(ind' → logprob: -10.630626678466797
    9. '```' → logprob: -11.630626678466797
    10. '[
' → logprob: -11.755626678466797

Token 1211: '-' (ID: 12)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.01216005440801382
    2. 'ind' → logprob: -4.762159824371338
    3. '[' → logprob: -6.387159824371338
    4. '[i' → logprob: -7.512159824371338
    5. '][' → logprob: -7.512159824371338
    6. 'i' → logprob: -8.012160301208496
    7. '[E' → logprob: -8.637160301208496
    8. ' ind' → logprob: -9.762160301208496
    9. 'indent' → logprob: -10.137160301208496
    10. '
' → logprob: -10.637160301208496

Token 1212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00962209515273571
    2. '[' → logprob: -5.384622097015381
    3. 'E' → logprob: -5.884622097015381
    4. 'i' → logprob: -7.759622097015381
    5. ' ' → logprob: -8.009621620178223
    6. '```' → logprob: -8.509621620178223
    7. 'Euler' → logprob: -8.509621620178223
    8. 'e' → logprob: -8.634621620178223
    9. '   ' → logprob: -9.009621620178223
    10. '0' → logprob: -9.009621620178223

Token 1213: '][' (ID: 2696)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.0025691180489957333
    2. '[' → logprob: -6.627569198608398
    3. '][' → logprob: -7.002569198608398
    4. 'ind' → logprob: -9.002569198608398
    5. '[i' → logprob: -9.127569198608398
    6. ''s' → logprob: -10.377569198608398
    7. '(ind' → logprob: -11.752569198608398
    8. 'x' → logprob: -11.877569198608398
    9. '   ' → logprob: -12.002569198608398
    10. '
' → logprob: -12.002569198608398

Token 1214: '1' (ID: 16)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0006650181603617966
    2. '1' → logprob: -7.625665187835693
    3. 'i' → logprob: -9.375664710998535
    4. 'E' → logprob: -10.375664710998535
    5. '
' → logprob: -10.500664710998535
    6. ' ind' → logprob: -11.375664710998535
    7. 'index' → logprob: -12.625664710998535
    8. 'indent' → logprob: -12.625664710998535
    9. '[ind' → logprob: -12.750664710998535
    10. '(ind' → logprob: -12.750664710998535

Token 1215: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009675608016550541
    2. '].' → logprob: -7.375967502593994
    3. ']' → logprob: -9.000967979431152
    4. ' ][' → logprob: -9.125967979431152
    5. '[ind' → logprob: -10.125967979431152
    6. '   ' → logprob: -11.000967979431152
    7. ']][' → logprob: -11.500967979431152
    8. '][_' → logprob: -11.875967979431152
    9. ']
' → logprob: -12.125967979431152
    10. '[' → logprob: -12.375967979431152

Token 1216: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0009756630170159042
    2. 'E' → logprob: -7.125975608825684
    3. ' ind' → logprob: -9.125975608825684
    4. '[ind' → logprob: -9.875975608825684
    5. '(ind' → logprob: -12.875975608825684
    6. '
' → logprob: -13.000975608825684
    7. '   ' → logprob: -13.250975608825684
    8. 'indent' → logprob: -13.375975608825684
    9. 'i' → logprob: -14.375975608825684
    10. 'index' → logprob: -14.625975608825684

Token 1217: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011775822378695011
    2. ']' → logprob: -4.511775970458984
    3. ']
' → logprob: -7.386775970458984
    4. '[' → logprob: -9.386775970458984
    5. '   ' → logprob: -11.636775970458984
    6. '0' → logprob: -12.136775970458984
    7. ' ][' → logprob: -12.386775970458984
    8. '][-' → logprob: -13.511775970458984
    9. '
' → logprob: -13.636775970458984
    10. ']

' → logprob: -14.136775970458984

Token 1218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06257545202970505
    2. 'if' → logprob: -3.062575340270996
    3. ' if' → logprob: -5.062575340270996
    4. 'length' → logprob: -5.437575340270996
    5. 'L' → logprob: -6.562575340270996
    6. '
' → logprob: -7.937575340270996
    7. '    
' → logprob: -8.062575340270996
    8. '+' → logprob: -8.312575340270996
    9. ' length' → logprob: -8.812575340270996
    10. 'prev' → logprob: -8.812575340270996

Token 1219: ' if' (ID: 538)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.38532814383506775
    2. 'if' (adapté à ' if') → logprob: -2.0103280544281006
    3. '   ' → logprob: -2.5103280544281006
    4. 'length' → logprob: -2.8853280544281006
    5. 'for' → logprob: -4.01032829284668
    6. ' if' → logprob: -4.26032829284668
    7. ' LENGTH' → logprob: -5.76032829284668
    8. ' length' → logprob: -6.01032829284668
    9. 'new' → logprob: -6.38532829284668
    10. ' for' → logprob: -6.51032829284668

Token 1220: ' E' (ID: 457)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3787805736064911
    2. 'l' → logprob: -1.3787806034088135
    3. '(c' → logprob: -3.7537806034088135
    4. 'ind' → logprob: -4.253780364990234
    5. '(l' → logprob: -4.878780364990234
    6. '(E' → logprob: -5.503780364990234
    7. '(ind' → logprob: -5.503780364990234
    8. ' c' → logprob: -6.003780364990234
    9. 'L' → logprob: -6.128780364990234
    10. ' l' → logprob: -7.128780364990234

Token 1221: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.021259985864162445
    2. 'uler' → logprob: -4.271259784698486
    3. '_UL' → logprob: -6.271259784698486
    4. '```' → logprob: -6.771259784698486
    5. 'L' → logprob: -7.021259784698486
    6. ' ' → logprob: -7.521259784698486
    7. 'ULAR' → logprob: -7.646259784698486
    8. '   ' → logprob: -8.271260261535645
    9. 'ul' → logprob: -8.396260261535645
    10. '[' → logprob: -8.396260261535645

Token 1222: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.012566042132675648
    2. 'R' → logprob: -4.387566089630127
    3. '_R' → logprob: -10.387565612792969
    4. '   ' → logprob: -11.512565612792969
    5. 'OR' → logprob: -12.262565612792969
    6. '```' → logprob: -13.137565612792969
    7. '
' → logprob: -13.262565612792969
    8. '_ER' → logprob: -13.887565612792969
    9. '(R' → logprob: -14.262565612792969
    10. 'AR' → logprob: -14.637565612792969

Token 1223: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005066845333203673
    2. '[' → logprob: -8.125506401062012
    3. ' [' → logprob: -9.375506401062012
    4. '```' → logprob: -9.875506401062012
    5. 'i' → logprob: -10.375506401062012
    6. '   ' → logprob: -11.250506401062012
    7. '
' → logprob: -11.750506401062012
    8. ' i' → logprob: -12.500506401062012
    9. '[
' → logprob: -12.500506401062012
    10. '[I' → logprob: -12.625506401062012

Token 1224: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09065798670053482
    2. '][' → logprob: -2.715657949447632
    3. '-' → logprob: -4.465658187866211
    4. '==' → logprob: -5.965658187866211
    5. ']' → logprob: -6.590658187866211
    6. '   ' → logprob: -7.090658187866211
    7. '```' → logprob: -7.090658187866211
    8. ' [' → logprob: -7.965658187866211
    9. '0' → logprob: -8.090658187866211
    10. ' ==' → logprob: -8.215658187866211

Token 1225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009267346933484077
    2. '1' → logprob: -4.759267330169678
    3. '2' → logprob: -8.384267807006836
    4. '<|end|>' → logprob: -9.634267807006836
    5. '(' → logprob: -9.884267807006836
    6. ' ' → logprob: -10.009267807006836
    7. '
' → logprob: -10.384267807006836
    8. 'depth' → logprob: -10.384267807006836
    9. '[' → logprob: -10.446767807006836
    10. 'Depth' → logprob: -10.759267807006836

Token 1226: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34483957290649414
    2. ' ==' → logprob: -1.4698395729064941
    3. '>' → logprob: -2.969839572906494
    4. '==' → logprob: -4.594839572906494
    5. ' >
' → logprob: -9.094839096069336
    6. ' !=' → logprob: -9.219839096069336
    7. ' ' → logprob: -10.844839096069336
    8. '   ' → logprob: -11.469839096069336
    9. ' -' → logprob: -12.219839096069336
    10. '=' → logprob: -12.219839096069336

Token 1227: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6591023802757263
    2. ' ==' → logprob: -1.159102439880371
    3. '>' → logprob: -2.034102439880371
    4. '==' → logprob: -3.284102439880371
    5. ' <' → logprob: -8.034102439880371
    6. ' !=' → logprob: -9.034102439880371
    7. ' <=' → logprob: -10.159102439880371
    8. '<' → logprob: -10.284102439880371
    9. '!=' → logprob: -10.784102439880371
    10. '   ' → logprob: -10.909102439880371

Token 1228: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0006477446295320988
    2. '   ' → logprob: -7.37564754486084
    3. ' E' → logprob: -11.25064754486084
    4. '  ' → logprob: -13.00064754486084
    5. '	E' → logprob: -13.25064754486084
    6. ' ' → logprob: -13.50064754486084
    7. '       ' → logprob: -14.00064754486084
    8. '0' → logprob: -14.62564754486084
    9. '>E' → logprob: -14.87564754486084
    10. '
' → logprob: -15.37564754486084

Token 1229: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.0009354014764539897
    2. 'UR' → logprob: -7.0009355545043945
    3. 'ULAR' → logprob: -11.000935554504395
    4. '[i' → logprob: -12.625935554504395
    5. 'ULL' → logprob: -13.875935554504395
    6. 'URL' → logprob: -14.500935554504395
    7. 'uler' → logprob: -14.875935554504395
    8. 'ULO' → logprob: -15.000935554504395
    9. 'UEL' → logprob: -15.000935554504395
    10. 'URE' → logprob: -15.250935554504395

Token 1230: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.0003213997988495976
    2. 'E' → logprob: -8.125321388244629
    3. 'OR' → logprob: -11.875321388244629
    4. 'R' → logprob: -12.125321388244629
    5. '
' → logprob: -12.500321388244629
    6. '[' → logprob: -12.625321388244629
    7. '   ' → logprob: -14.250321388244629
    8. '

' → logprob: -14.375321388244629
    9. '(' → logprob: -14.625321388244629
    10. '[(' → logprob: -14.625321388244629

Token 1231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003832445072475821
    2. 'i' → logprob: -7.875383377075195
    3. '   ' → logprob: -13.625383377075195
    4. ' i' → logprob: -14.375383377075195
    5. '```' → logprob: -14.625383377075195
    6. '
' → logprob: -15.875383377075195
    7. '{i' → logprob: -15.875383377075195
    8. '[' → logprob: -16.500383377075195
    9. ' ' → logprob: -16.500383377075195
    10. 'E' → logprob: -16.625383377075195

Token 1232: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5669801831245422
    2. 'i' → logprob: -1.0669801235198975
    3. '-' → logprob: -2.4419801235198975
    4. '[' → logprob: -6.441980361938477
    5. '   ' → logprob: -10.316980361938477
    6. ' i' → logprob: -10.941980361938477
    7. '```' → logprob: -11.066980361938477
    8. '(i' → logprob: -11.316980361938477
    9. '{i' → logprob: -11.941980361938477
    10. 'I' → logprob: -12.066980361938477

Token 1233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02084992453455925
    2. 'i' → logprob: -3.8958499431610107
    3. ' ' → logprob: -8.64585018157959
    4. '(i' → logprob: -10.27085018157959
    5. '-' → logprob: -10.77085018157959
    6. '```' → logprob: -10.77085018157959
    7. '[i' → logprob: -11.64585018157959
    8. 'prev' → logprob: -11.64585018157959
    9. '   ' → logprob: -11.77085018157959
    10. ' i' → logprob: -11.89585018157959

Token 1234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07393645495176315
    2. '[' → logprob: -2.6989364624023438
    3. '[i' → logprob: -5.823936462402344
    4. ' ][' → logprob: -7.573936462402344
    5. '   ' → logprob: -8.823936462402344
    6. 'i' → logprob: -9.198936462402344
    7. '```' → logprob: -9.698936462402344
    8. '0' → logprob: -9.948936462402344
    9. ' [' → logprob: -10.698936462402344
    10. '`' → logprob: -10.948936462402344

Token 1235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.125007629394531
    3. 'i' → logprob: -14.000007629394531
    4. '[' → logprob: -14.375007629394531
    5. '```' → logprob: -14.875007629394531
    6. '
' → logprob: -15.250007629394531
    7. '1' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.00000762939453
    9. '][' → logprob: -16.62500762939453
    10. '`' → logprob: -17.37500762939453

Token 1236: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24295271933078766
    2. ':
' → logprob: -2.117952823638916
    3. ' and' → logprob: -2.617952823638916
    4. '   ' → logprob: -4.117952823638916
    5. '       ' → logprob: -6.492952823638916
    6. '):
' → logprob: -6.617952823638916
    7. ' :' → logprob: -7.242952823638916
    8. '):' → logprob: -7.367952823638916
    9. ')' → logprob: -7.992952823638916
    10. '<|end|>' → logprob: -7.992952823638916

Token 1237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009220578707754612
    2. '   ' → logprob: -4.759220600128174
    3. 'L' → logprob: -8.634220123291016
    4. ':' → logprob: -9.384220123291016
    5. '
' → logprob: -9.884220123291016
    6. ':
' → logprob: -10.134220123291016
    7. '        
' → logprob: -10.384220123291016
    8. '+' → logprob: -10.634220123291016
    9. ' L' → logprob: -10.634220123291016
    10. '):
' → logprob: -10.759220123291016

Token 1238: ' update' (ID: 4027)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06560022383928299
    2. '   ' → logprob: -3.1906001567840576
    3. '       ' → logprob: -3.9406001567840576
    4. 'if' → logprob: -6.940600395202637
    5. 'for' → logprob: -7.690600395202637
    6. 'length' → logprob: -7.940600395202637
    7. '           ' → logprob: -8.190600395202637
    8. 'C' → logprob: -8.190600395202637
    9. ' LENGTH' → logprob: -8.315600395202637
    10. ' L' → logprob: -8.940600395202637

Token 1239: '_e' (ID: 4618)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2840772569179535
    2. '(L' → logprob: -2.9090771675109863
    3. '_length' → logprob: -3.1590771675109863
    4. 'length' → logprob: -3.1590771675109863
    5. 'ind' → logprob: -4.034077167510986
    6. ' =' → logprob: -4.284077167510986
    7. '_LENGTH' → logprob: -4.409077167510986
    8. 'c' → logprob: -4.659077167510986
    9. 'C' → logprob: -4.659077167510986
    10. '(c' → logprob: -5.034077167510986

Token 1240: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.3750181496143341
    2. '_length' → logprob: -1.5000181198120117
    3. '_c' → logprob: -4.000018119812012
    4. 'length' → logprob: -4.125018119812012
    5. 'L' → logprob: -4.750018119812012
    6. 'ind' → logprob: -5.000018119812012
    7. '_lengths' → logprob: -5.000018119812012
    8. 'len' → logprob: -5.750018119812012
    9. '_segment' → logprob: -5.750018119812012
    10. '(L' → logprob: -6.250018119812012

Token 1241: '_up' (ID: 18721)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00044425477972254157
    2. '_length' → logprob: -8.500444412231445
    3. 'index' → logprob: -8.750444412231445
    4. '_ind' → logprob: -10.750444412231445
    5. '_indices' → logprob: -11.875444412231445
    6. '```' → logprob: -11.875444412231445
    7. 'Index' → logprob: -12.000444412231445
    8. '(i' → logprob: -12.250444412231445
    9. '_INDEX' → logprob: -12.250444412231445
    10. '_i' → logprob: -12.750444412231445

Token 1242: '(ind' (ID: 50964)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06098075583577156
    2. '_index' → logprob: -3.435980796813965
    3. '(' → logprob: -4.060980796813965
    4. '_length' → logprob: -6.060980796813965
    5. '_segment' → logprob: -6.310980796813965
    6. 'index' → logprob: -6.810980796813965
    7. '_indices' → logprob: -7.560980796813965
    8. 'date' → logprob: -7.810980796813965
    9. '_ind' → logprob: -7.810980796813965
    10. '(index' → logprob: -7.810980796813965

Token 1243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015844968147575855
    2. ',c' → logprob: -7.001584529876709
    3. ' ,' → logprob: -8.12658405303955
    4. '   ' → logprob: -8.75158405303955
    5. ')' → logprob: -9.25158405303955
    6. 'c' → logprob: -10.12658405303955
    7. '‌,' → logprob: -11.62658405303955
    8. '  ' → logprob: -11.87658405303955
    9. '       ' → logprob: -12.00158405303955
    10. ',
' → logprob: -12.00158405303955

Token 1244: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002491118386387825
    2. 'l' → logprob: -6.502490997314453
    3. ' c' → logprob: -7.377490997314453
    4. 'check' → logprob: -8.752490997314453
    5. 'L' → logprob: -9.377490997314453
    6. 'i' → logprob: -10.377490997314453
    7. '(c' → logprob: -11.002490997314453
    8. 'x' → logprob: -11.252490997314453
    9. '   ' → logprob: -11.377490997314453
    10. 'E' → logprob: -11.502490997314453

Token 1245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050109218806028366
    2. ')' → logprob: -3.0501091480255127
    3. '   ' → logprob: -7.050109386444092
    4. '       ' → logprob: -8.175108909606934
    5. ' ,' → logprob: -8.675108909606934
    6. ')
' → logprob: -9.550108909606934
    7. ',c' → logprob: -9.925108909606934
    8. ',
' → logprob: -11.050108909606934
    9. '    ' → logprob: -11.925108909606934
    10. '  ' → logprob: -11.925108909606934

Token 1246: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3317398130893707
    2. 'C' → logprob: -1.7067397832870483
    3. 'check' → logprob: -2.956739902496338
    4. 'L' → logprob: -3.081739902496338
    5. ' c' → logprob: -7.206739902496338
    6. 'length' → logprob: -7.331739902496338
    7. 'CHECK' → logprob: -7.956739902496338
    8. ' LENGTH' → logprob: -8.08173942565918
    9. ' check' → logprob: -8.58173942565918
    10. ' C' → logprob: -8.58173942565918

Token 1247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48873236775398254
    2. ')' → logprob: -1.3637323379516602
    3. '   ' → logprob: -2.36373233795166
    4. '       ' → logprob: -3.73873233795166
    5. ')
' → logprob: -4.48873233795166
    6. 'def' → logprob: -6.98873233795166
    7. '<|end|>' → logprob: -8.11373233795166
    8. 'else' → logprob: -8.73873233795166
    9. ',
' → logprob: -9.61373233795166
    10. '
' → logprob: -9.73873233795166

Token 1248: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1313583105802536
    2. 'C' → logprob: -2.7563583850860596
    3. 'check' → logprob: -3.2563583850860596
    4. ' LENGTH' → logprob: -4.0063581466674805
    5. 'CHECK' → logprob: -6.8813581466674805
    6. 'length' → logprob: -7.2563581466674805
    7. ' check' → logprob: -8.50635814666748
    8. 'N' → logprob: -8.63135814666748
    9. '   ' → logprob: -9.00635814666748
    10. ' L' → logprob: -9.13135814666748

Token 1249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005300374468788505
    2. '   ' → logprob: -8.375530242919922
    3. ')' → logprob: -8.750530242919922
    4. ',C' → logprob: -9.875530242919922
    5. ' ,' → logprob: -9.875530242919922
    6. '       ' → logprob: -11.000530242919922
    7. 'C' → logprob: -11.750530242919922
    8. ',
' → logprob: -12.250530242919922
    9. '[' → logprob: -13.125530242919922
    10. '[C' → logprob: -13.125530242919922

Token 1250: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.45356109738349915
    2. 'L' → logprob: -1.0785610675811768
    3. ' C' → logprob: -4.078561305999756
    4. ' L' → logprob: -4.953561305999756
    5. '   ' → logprob: -8.703560829162598
    6. 'check' → logprob: -8.828560829162598
    7. ' ' → logprob: -9.703560829162598
    8. '
' → logprob: -10.703560829162598
    9. 'N' → logprob: -10.953560829162598
    10. '  ' → logprob: -11.016060829162598

Token 1251: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.01662074401974678
    2. 'L' → logprob: -4.141620635986328
    3. '_L' → logprob: -7.516620635986328
    4. 'S' → logprob: -11.141620635986328
    5. '_S' → logprob: -11.516620635986328
    6. 'length' → logprob: -12.266620635986328
    7. 'C' → logprob: -12.641620635986328
    8. '_length' → logprob: -12.766620635986328
    9. '_LEN' → logprob: -13.641620635986328
    10. ' LENGTH' → logprob: -13.641620635986328

Token 1252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010235115041723475
    2. ' ,' → logprob: -10.125102043151855
    3. '   ' → logprob: -10.750102043151855
    4. ')' → logprob: -10.875102043151855
    5. 'C' → logprob: -11.500102043151855
    6. ',C' → logprob: -11.875102043151855
    7. '       ' → logprob: -13.500102043151855
    8. ',S' → logprob: -14.375102043151855
    9. '_,' → logprob: -14.750102043151855
    10. '[' → logprob: -14.750102043151855

Token 1253: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009579126490280032
    2. ' C' → logprob: -7.12595796585083
    3. 'c' → logprob: -9.125957489013672
    4. 'L' → logprob: -10.375957489013672
    5. '   ' → logprob: -12.125957489013672
    6. '
' → logprob: -13.125957489013672
    7. 'l' → logprob: -13.750957489013672
    8. 'i' → logprob: -14.000957489013672
    9. ' ' → logprob: -14.375957489013672
    10. ')' → logprob: -14.500957489013672

Token 1254: '_SUM' (ID: 121371)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.02872486598789692
    2. '_SUM' → logprob: -3.9037249088287354
    3. '_S' → logprob: -5.153724670410156
    4. 'S' → logprob: -6.278724670410156
    5. 'L' → logprob: -7.903724670410156
    6. '_LENGTH' → logprob: -9.778724670410156
    7. 'c' → logprob: -10.903724670410156
    8. 'DICT' → logprob: -11.778724670410156
    9. 'C' → logprob: -12.153724670410156
    10. '
' → logprob: -12.403724670410156

Token 1255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006171276327222586
    2. ')' → logprob: -7.750617027282715
    3. '       ' → logprob: -9.375617027282715
    4. '   ' → logprob: -9.750617027282715
    5. ' ,' → logprob: -10.500617027282715
    6. ')
' → logprob: -11.625617027282715
    7. ',C' → logprob: -13.125617027282715
    8. ',
' → logprob: -13.750617027282715
    9. '           ' → logprob: -14.625617027282715
    10. '  ' → logprob: -14.625617027282715

Token 1256: ' check' (ID: 2371)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.003912169020622969
    2. 'c' → logprob: -5.753911972045898
    3. ' C' → logprob: -7.253911972045898
    4. 'l' → logprob: -12.128911972045898
    5. ' c' → logprob: -12.128911972045898
    6. '
' → logprob: -12.253911972045898
    7. '   ' → logprob: -12.253911972045898
    8. 'CL' → logprob: -13.878911972045898
    9. ')' → logprob: -14.003911972045898
    10. 'L' → logprob: -14.128911972045898

Token 1257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35039082169532776
    2. ')' → logprob: -1.3503907918930054
    3. '   ' → logprob: -4.100390911102295
    4. '       ' → logprob: -4.100390911102295
    5. ')
' → logprob: -5.850390911102295
    6. 'def' → logprob: -8.350390434265137
    7. ' ,' → logprob: -9.725390434265137
    8. ' ' → logprob: -10.225390434265137
    9. ')

' → logprob: -10.600390434265137
    10. '  ' → logprob: -10.850390434265137

Token 1258: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010889010736718774
    2. ' C' → logprob: -7.251089096069336
    3. 'L' → logprob: -8.501089096069336
    4. 'c' → logprob: -9.251089096069336
    5. 'i' → logprob: -10.501089096069336
    6. '   ' → logprob: -11.126089096069336
    7. ')' → logprob: -11.876089096069336
    8. '
' → logprob: -12.376089096069336
    9. 'l' → logprob: -12.501089096069336
    10. 'E' → logprob: -12.626089096069336

Token 1259: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.001274758018553257
    2. '_S' → logprob: -7.251274585723877
    3. 'L' → logprob: -7.501274585723877
    4. 'LD' → logprob: -12.376275062561035
    5. '_LENGTH' → logprob: -13.126275062561035
    6. 'S' → logprob: -13.126275062561035
    7. '
' → logprob: -13.501275062561035
    8. '	L' → logprob: -14.876275062561035
    9. '_LEN' → logprob: -14.876275062561035
    10. '```' → logprob: -14.876275062561035

Token 1260: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -4.024604277219623e-05
    2. 'D' → logprob: -11.500040054321289
    3. 'DI' → logprob: -11.750040054321289
    4. 'ICT' → logprob: -12.375040054321289
    5. '_DICT' → logprob: -12.375040054321289
    6. 'dict' → logprob: -12.375040054321289
    7. 'IST' → logprob: -12.750040054321289
    8. 'O' → logprob: -12.750040054321289
    9. '
' → logprob: -14.250040054321289
    10. '   ' → logprob: -14.625040054321289

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -11.375021934509277
    3. '       ' → logprob: -12.750021934509277
    4. ',C' → logprob: -12.750021934509277
    5. '   ' → logprob: -13.125021934509277
    6. ',
' → logprob: -13.625021934509277
    7. ')' → logprob: -15.000021934509277
    8. '           ' → logprob: -15.000021934509277
    9. 'C' → logprob: -15.500021934509277
    10. '  ' → logprob: -16.87502098083496

Token 1262: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.009758212603628635
    2. ' C' → logprob: -4.634757995605469
    3. '   ' → logprob: -13.509757995605469
    4. ' ' → logprob: -14.384757995605469
    5. '  ' → logprob: -16.00975799560547
    6. '
' → logprob: -16.00975799560547
    7. '       ' → logprob: -17.25975799560547
    8. '    ' → logprob: -17.50975799560547
    9. '	C' → logprob: -17.63475799560547
    10. 'c' → logprob: -18.00975799560547

Token 1263: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -2.641841820150148e-05
    2. 'S' → logprob: -11.00002670288086
    3. '_SD' → logprob: -12.87502670288086
    4. '_' → logprob: -13.12502670288086
    5. ')' → logprob: -14.12502670288086
    6. '
' → logprob: -14.12502670288086
    7. '\' → logprob: -14.25002670288086
    8. '_L' → logprob: -14.37502670288086
    9. '```' → logprob: -14.37502670288086
    10. ' _' → logprob: -15.12502670288086

Token 1264: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.00046713458141312003
    2. 'DI' → logprob: -8.375467300415039
    3. '_DICT' → logprob: -8.875467300415039
    4. 'ICT' → logprob: -9.500467300415039
    5. 'D' → logprob: -11.750467300415039
    6. 'dict' → logprob: -12.875467300415039
    7. 'ID' → logprob: -13.000467300415039
    8. 'DIT' → logprob: -13.500467300415039
    9. 'DIST' → logprob: -13.500467300415039
    10. 'RICT' → logprob: -13.625467300415039

Token 1265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12295839935541153
    2. '   ' → logprob: -2.6229584217071533
    3. ')
' → logprob: -3.3729584217071533
    4. '       ' → logprob: -5.247958183288574
    5. 'def' → logprob: -6.372958183288574
    6. '
' → logprob: -6.497958183288574
    7. '<|end|>' → logprob: -8.622958183288574
    8. ')return' → logprob: -9.747958183288574
    9. ' )' → logprob: -10.622958183288574
    10. '```' → logprob: -10.622958183288574

Token 1266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009391002357006073
    2. 'else' → logprob: -5.634390830993652
    3. 'def' → logprob: -6.009390830993652
    4. '       ' → logprob: -6.509390830993652
    5. 'elif' → logprob: -6.634390830993652
    6. '
' → logprob: -9.134390830993652
    7. '```' → logprob: -9.134390830993652
    8. '	elif' → logprob: -9.509390830993652
    9. '	else' → logprob: -9.759390830993652
    10. '<|end|>' → logprob: -9.759390830993652

Token 1267: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13038694858551025
    2. '   ' → logprob: -2.1303868293762207
    3. 'elif' → logprob: -5.755386829376221
    4. 'def' → logprob: -8.505387306213379
    5. ' else' → logprob: -9.505387306213379
    6. '	else' → logprob: -12.380387306213379
    7. '```' → logprob: -12.880387306213379
    8. '       ' → logprob: -13.255387306213379
    9. ' elif' → logprob: -14.755387306213379
    10. '
' → logprob: -14.880387306213379

Token 1268: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07216252386569977
    2. '       ' → logprob: -2.947162628173828
    3. ':' → logprob: -4.197162628173828
    4. '   ' → logprob: -6.197162628173828
    5. '```' → logprob: -11.322162628173828
    6. '):
' → logprob: -11.822162628173828
    7. ' :
' → logprob: -11.822162628173828
    8. ':

' → logprob: -12.197162628173828
    9. ',' → logprob: -12.572162628173828
    10. 'def' → logprob: -12.822162628173828

Token 1269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19083192944526672
    2. 'update' → logprob: -1.8158318996429443
    3. '   ' → logprob: -4.565832138061523
    4. ' update' → logprob: -7.815832138061523
    5. 'reset' → logprob: -9.565832138061523
    6. '```' → logprob: -9.565832138061523
    7. '	update' → logprob: -9.940832138061523
    8. '
' → logprob: -11.690832138061523
    9. '           ' → logprob: -12.065832138061523
    10. ' ' → logprob: -13.065832138061523

Token 1270: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.00685236556455493
    2. 'reverse' → logprob: -5.756852149963379
    3. 'remove' → logprob: -7.381852149963379
    4. 're' → logprob: -7.381852149963379
    5. 'de' → logprob: -7.631852149963379
    6. 'reset' → logprob: -8.131852149963379
    7. 'undo' → logprob: -8.256852149963379
    8. 'rev' → logprob: -8.506852149963379
    9. '   ' → logprob: -8.756852149963379
    10. 'subtract' → logprob: -9.131852149963379

Token 1271: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0009496912243776023
    2. 'e' → logprob: -7.125949859619141
    3. '_length' → logprob: -9.62594985961914
    4. 'Euler' → logprob: -10.00094985961914
    5. '_' → logprob: -11.75094985961914
    6. 'length' → logprob: -12.37594985961914
    7. '_l' → logprob: -12.50094985961914
    8. 'ind' → logprob: -12.62594985961914
    9. '_c' → logprob: -13.00094985961914
    10. 's' → logprob: -13.25094985961914

Token 1272: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.003008011495694518
    2. '_e' → logprob: -6.503007888793945
    3. 'ler' → logprob: -7.378007888793945
    4. 'ul' → logprob: -8.003007888793945
    5. 'e' → logprob: -8.378007888793945
    6. 'Euler' → logprob: -9.378007888793945
    7. 'uer' → logprob: -10.003007888793945
    8. '_l' → logprob: -10.503007888793945
    9. 'ulers' → logprob: -10.753007888793945
    10. 'u' → logprob: -11.128007888793945

Token 1273: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.0066161309368908405
    2. '_index' → logprob: -5.506616115570068
    3. '_up' → logprob: -6.506616115570068
    4. '_dn' → logprob: -7.131616115570068
    5. 'down' → logprob: -9.256616592407227
    6. '_d' → logprob: -9.881616592407227
    7. '_ind' → logprob: -10.006616592407227
    8. '_low' → logprob: -11.381616592407227
    9. 'index' → logprob: -11.631616592407227
    10. '(ind' → logprob: -12.506616592407227

Token 1274: '(l' (ID: 4179)
  Prédit: '(ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ind' → logprob: -8.900034299585968e-05
    2. '(E' → logprob: -9.625088691711426
    3. '(index' → logprob: -12.250088691711426
    4. '(' → logprob: -12.500088691711426
    5. '(indent' → logprob: -12.500088691711426
    6. 'ind' → logprob: -12.750088691711426
    7. '(i' → logprob: -13.250088691711426
    8. ' (' → logprob: -13.500088691711426
    9. '(indices' → logprob: -13.750088691711426
    10. '(idx' → logprob: -14.875088691711426

Token 1275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. ' ,' → logprob: -10.000073432922363
    3. ')' → logprob: -11.000073432922363
    4. '   ' → logprob: -12.375073432922363
    5. ',c' → logprob: -13.000073432922363
    6. 'c' → logprob: -13.750073432922363
    7. ',
' → logprob: -14.000073432922363
    8. '_,' → logprob: -14.875073432922363
    9. '       ' → logprob: -15.000073432922363
    10. '=' → logprob: -15.250073432922363

Token 1276: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21627938747406006
    2. ' c' → logprob: -2.0912795066833496
    3. 'ind' → logprob: -3.3412795066833496
    4. ' ind' → logprob: -3.8412795066833496
    5. 'C' → logprob: -5.21627950668335
    6. '-' → logprob: -5.84127950668335
    7. 'L' → logprob: -6.34127950668335
    8. 'l' → logprob: -6.34127950668335
    9. 'length' → logprob: -7.84127950668335
    10. ' -' → logprob: -8.091279029846191

Token 1277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026503115077503026
    2. ' ,' → logprob: -8.875265121459961
    3. ',L' → logprob: -9.750265121459961
    4. ')' → logprob: -10.375265121459961
    5. '       ' → logprob: -11.750265121459961
    6. ',
' → logprob: -12.000265121459961
    7. ',length' → logprob: -12.375265121459961
    8. '   ' → logprob: -12.375265121459961
    9. 'L' → logprob: -12.500265121459961
    10. '           ' → logprob: -13.250265121459961

Token 1278: ' C' (ID: 363)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.35922521352767944
    2. ' LENGTH' → logprob: -1.2342252731323242
    3. 'C' → logprob: -4.859225273132324
    4. ' L' → logprob: -7.484225273132324
    5. 'ind' → logprob: -7.484225273132324
    6. '-' → logprob: -8.109225273132324
    7. 'check' → logprob: -8.234225273132324
    8. ' ind' → logprob: -8.359225273132324
    9. 'length' → logprob: -9.109225273132324
    10. ' C' → logprob: -9.109225273132324

Token 1279: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.05466683954000473
    2. '_L' → logprob: -3.429666757583618
    3. '_S' → logprob: -3.929666757583618
    4. 'L' → logprob: -6.929666996002197
    5. 'S' → logprob: -9.804666519165039
    6. '_LEN' → logprob: -10.304666519165039
    7. '_length' → logprob: -11.054666519165039
    8. '_SUM' → logprob: -11.054666519165039
    9. '_' → logprob: -11.429666519165039
    10. 'Length' → logprob: -11.554666519165039

Token 1280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -12.375009536743164
    3. ',C' → logprob: -13.125009536743164
    4. ',
' → logprob: -13.875009536743164
    5. ',c' → logprob: -14.000009536743164
    6. '   ' → logprob: -14.875009536743164
    7. '       ' → logprob: -15.875009536743164
    8. '_,' → logprob: -15.875009536743164
    9. '```' → logprob: -15.875009536743164
    10. ')' → logprob: -16.125009536743164

Token 1281: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.024523992091417313
    2. ' C' → logprob: -3.774523973464966
    3. 'L' → logprob: -7.524524211883545
    4. 'c' → logprob: -8.899523735046387
    5. 'ind' → logprob: -9.024523735046387
    6. 'check' → logprob: -9.024523735046387
    7. '-' → logprob: -9.399523735046387
    8. ' ind' → logprob: -9.899523735046387
    9. 'length' → logprob: -10.399523735046387
    10. 'IND' → logprob: -10.524523735046387

Token 1282: '_SUM' (ID: 121371)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.7535704970359802
    2. '_S' → logprob: -1.253570556640625
    3. 'S' → logprob: -1.503570556640625
    4. '_SUM' → logprob: -3.878570556640625
    5. '_LENGTH' → logprob: -7.878570556640625
    6. 'L' → logprob: -8.128570556640625
    7. 'SD' → logprob: -11.003570556640625
    8. '_sum' → logprob: -11.003570556640625
    9. 'sum' → logprob: -11.003570556640625
    10. 'DICT' → logprob: -11.503570556640625

Token 1283: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024078846909105778
    2. ')' → logprob: -6.127408027648926
    3. '       ' → logprob: -8.877408027648926
    4. '   ' → logprob: -10.127408027648926
    5. ' ,' → logprob: -10.377408027648926
    6. ')
' → logprob: -12.502408027648926
    7. '           ' → logprob: -13.252408027648926
    8. ',
' → logprob: -13.627408027648926
    9. ',)' → logprob: -13.877408027648926
    10. '[' → logprob: -14.377408027648926

Token 1284: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017314712749794126
    2. '   ' → logprob: -9.125173568725586
    3. '```' → logprob: -10.000173568725586
    4. '
' → logprob: -11.500173568725586
    5. '       ' → logprob: -12.375173568725586
    6. 'elif' → logprob: -13.875173568725586
    7. ' def' → logprob: -14.000173568725586
    8. 'else' → logprob: -14.500173568725586
    9. '    
' → logprob: -14.500173568725586
    10. '``' → logprob: -14.875173568725586

Token 1285: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.000993272173218429
    2. 'def' → logprob: -7.250993251800537
    3. ' update' → logprob: -8.250993728637695
    4. 'reset' → logprob: -12.625993728637695
    5. 'process' → logprob: -12.750993728637695
    6. 'reverse' → logprob: -13.000993728637695
    7. '
' → logprob: -13.125993728637695
    8. '	update' → logprob: -13.250993728637695
    9. '(update' → logprob: -14.250993728637695
    10. 'upd' → logprob: -14.250993728637695

Token 1286: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.00023369524569716305
    2. '_down' → logprob: -8.87523365020752
    3. '_up' → logprob: -9.50023365020752
    4. '_length' → logprob: -11.87523365020752
    5. 'e' → logprob: -12.25023365020752
    6. '_s' → logprob: -13.00023365020752
    7. '_segment' → logprob: -13.62523365020752
    8. '_u' → logprob: -14.25023365020752
    9. 'Euler' → logprob: -14.37523365020752
    10. 'def' → logprob: -14.75023365020752

Token 1287: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0006892018136568367
    2. 'ler' → logprob: -7.3756890296936035
    3. 'ul' → logprob: -10.500689506530762
    4. 'iler' → logprob: -12.375689506530762
    5. 'ulers' → logprob: -12.625689506530762
    6. '_l' → logprob: -13.000689506530762
    7. '_' → logprob: -13.125689506530762
    8. 'l' → logprob: -13.250689506530762
    9. 'ular' → logprob: -13.250689506530762
    10. 'ule' → logprob: -13.375689506530762

Token 1288: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.17976175248622894
    2. '_down' → logprob: -1.8047617673873901
    3. 'up' → logprob: -12.17976188659668
    4. 'down' → logprob: -12.80476188659668
    5. '_' → logprob: -13.67976188659668
    6. '_index' → logprob: -14.17976188659668
    7. '(up' → logprob: -14.67976188659668
    8. '(_' → logprob: -14.80476188659668
    9. '_d' → logprob: -14.80476188659668
    10. '_UP' → logprob: -14.80476188659668

Token 1289: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.00028302724240347743
    2. '(index' → logprob: -8.625283241271973
    3. '(p' → logprob: -10.125283241271973
    4. '(idx' → logprob: -10.625283241271973
    5. '(' → logprob: -11.625283241271973
    6. '(indent' → logprob: -11.875283241271973
    7. '(id' → logprob: -12.250283241271973
    8. '(def' → logprob: -12.875283241271973
    9. '(i' → logprob: -13.000283241271973
    10. 'def' → logprob: -13.125283241271973

Token 1290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.913265239447355e-05
    2. ',l' → logprob: -10.125099182128906
    3. ' ,' → logprob: -10.250099182128906
    4. '   ' → logprob: -10.750099182128906
    5. '(l' → logprob: -13.875099182128906
    6. '(' → logprob: -15.125099182128906
    7. ',
' → logprob: -15.500099182128906
    8. 'l' → logprob: -16.250099182128906
    9. '    ' → logprob: -16.375099182128906
    10. '       ' → logprob: -16.500099182128906

Token 1291: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09968511760234833
    2. ' l' → logprob: -2.9746851921081543
    3. 'L' → logprob: -3.4746851921081543
    4. '<|end|>' → logprob: -5.099685192108154
    5. ' L' → logprob: -6.349685192108154
    6. 'length' → logprob: -6.599685192108154
    7. 'c' → logprob: -6.974685192108154
    8. '1' → logprob: -7.349685192108154
    9. ' ' → logprob: -7.849685192108154
    10. ')' → logprob: -7.849685192108154

Token 1292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.764977686339989e-05
    2. ' ,' → logprob: -10.000057220458984
    3. ',c' → logprob: -11.875057220458984
    4. ',
' → logprob: -12.875057220458984
    5. '   ' → logprob: -13.750057220458984
    6. 'c' → logprob: -14.375057220458984
    7. '‌,' → logprob: -14.875057220458984
    8. '_,' → logprob: -16.250057220458984
    9. '+,' → logprob: -16.625057220458984
    10. ')' → logprob: -17.250057220458984

Token 1293: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006677598576061428
    2. ' c' → logprob: -7.875667572021484
    3. 'l' → logprob: -8.625667572021484
    4. '<|end|>' → logprob: -9.375667572021484
    5. 'ind' → logprob: -12.250667572021484
    6. 'C' → logprob: -12.375667572021484
    7. '1' → logprob: -12.500667572021484
    8. ' ' → logprob: -13.125667572021484
    9. ' l' → logprob: -13.625667572021484
    10. ')' → logprob: -13.750667572021484

Token 1294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.982165698194876e-05
    2. ' ,' → logprob: -9.875080108642578
    3. ',l' → logprob: -11.375080108642578
    4. ',c' → logprob: -11.875080108642578
    5. ',
' → logprob: -12.500080108642578
    6. ',L' → logprob: -13.375080108642578
    7. '   ' → logprob: -13.375080108642578
    8. ',C' → logprob: -14.375080108642578
    9. '+,' → logprob: -14.750080108642578
    10. ',len' → logprob: -15.625080108642578

Token 1295: ' LENGTH' (ID: 173737)
  Prédit: ' LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LENGTH' → logprob: -0.6368178725242615
    2. 'L' → logprob: -0.7618178725242615
    3. ' L' → logprob: -6.136817932128906
    4. 'length' → logprob: -6.386817932128906
    5. ' length' → logprob: -8.511817932128906
    6. '_LENGTH' → logprob: -9.886817932128906
    7. '.LENGTH' → logprob: -10.511817932128906
    8. '	L' → logprob: -10.636817932128906
    9. 'Length' → logprob: -11.011817932128906
    10. 'C' → logprob: -11.386817932128906

Token 1296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.255023956531659e-05
    2. ' ,' → logprob: -9.875072479248047
    3. '   ' → logprob: -11.500072479248047
    4. ',C' → logprob: -12.125072479248047
    5. ',L' → logprob: -13.125072479248047
    6. ',c' → logprob: -13.250072479248047
    7. ',l' → logprob: -14.500072479248047
    8. ',
' → logprob: -14.625072479248047
    9. ',",' → logprob: -16.125072479248047
    10. ' ' → logprob: -16.625072479248047

Token 1297: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00331852282397449
    2. ' C' → logprob: -5.7533183097839355
    3. 'L' → logprob: -9.003318786621094
    4. '   ' → logprob: -12.253318786621094
    5. 'c' → logprob: -12.378318786621094
    6. ' ' → logprob: -12.878318786621094
    7. ',' → logprob: -13.253318786621094
    8. ' L' → logprob: -14.003318786621094
    9. '	C' → logprob: -14.253318786621094
    10. '[C' → logprob: -15.003318786621094

Token 1298: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -1.9862216504407115e-05
    2. 'L' → logprob: -11.500020027160645
    3. '_length' → logprob: -12.375020027160645
    4. '_L' → logprob: -13.125020027160645
    5. 'length' → logprob: -13.125020027160645
    6. 'Length' → logprob: -14.000020027160645
    7. '_Length' → logprob: -15.375020027160645
    8. '_LEN' → logprob: -16.000019073486328
    9. '```' → logprob: -16.250019073486328
    10. ',' → logprob: -16.875019073486328

Token 1299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2603901015827432e-05
    2. ' ,' → logprob: -11.125022888183594
    3. ',c' → logprob: -13.125022888183594
    4. ',C' → logprob: -13.250022888183594
    5. '   ' → logprob: -13.500022888183594
    6. ',
' → logprob: -14.125022888183594
    7. ',s' → logprob: -14.500022888183594
    8. ',S' → logprob: -14.500022888183594
    9. ',x' → logprob: -16.125022888183594
    10. ',n' → logprob: -16.375022888183594

Token 1300: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00977462437003851
    2. ' C' → logprob: -4.634774684906006
    3. 'c' → logprob: -11.134774208068848
    4. '0' → logprob: -14.009774208068848
    5. '   ' → logprob: -14.009774208068848
    6. ' ' → logprob: -14.884774208068848
    7. ',' → logprob: -15.009774208068848
    8. '[' → logprob: -15.384774208068848
    9. ')' → logprob: -15.509774208068848
    10. '>C' → logprob: -15.509774208068848

Token 1301: '_SUM' (ID: 121371)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.28199079632759094
    2. '_SUM' → logprob: -1.4069907665252686
    3. '_LENGTH' → logprob: -7.906991004943848
    4. 'c' → logprob: -8.281991004943848
    5. 'l' → logprob: -9.156991004943848
    6. 'L' → logprob: -10.531991004943848
    7. '
' → logprob: -10.906991004943848
    8. '_S' → logprob: -11.156991004943848
    9. ' SUM' → logprob: -11.656991004943848
    10. 'length' → logprob: -11.656991004943848

Token 1302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4060561776859686e-05
    2. '   ' → logprob: -10.875043869018555
    3. ',c' → logprob: -11.500043869018555
    4. ',
' → logprob: -12.375043869018555
    5. ' ,' → logprob: -12.375043869018555
    6. ',C' → logprob: -13.625043869018555
    7. '):' → logprob: -13.625043869018555
    8. ',l' → logprob: -13.875043869018555
    9. '):
' → logprob: -14.000043869018555
    10. ',L' → logprob: -14.250043869018555

Token 1303: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.005245379637926817
    2. ' check' → logprob: -5.255245208740234
    3. '   ' → logprob: -12.255245208740234
    4. 'C' → logprob: -12.630245208740234
    5. ' ' → logprob: -14.005245208740234
    6. '	check' → logprob: -14.005245208740234
    7. 'CHECK' → logprob: -14.380245208740234
    8. 'L' → logprob: -14.380245208740234
    9. '  ' → logprob: -15.380245208740234
    10. ' C' → logprob: -16.255245208740234

Token 1304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.615255839889869e-05
    2. '   ' → logprob: -9.500096321105957
    3. '[ind' → logprob: -11.000096321105957
    4. ' ,' → logprob: -12.875096321105957
    5. ',
' → logprob: -13.875096321105957
    6. ',c' → logprob: -15.875096321105957
    7. '(ind' → logprob: -16.25009536743164
    8. '
' → logprob: -16.37509536743164
    9. '[' → logprob: -16.50009536743164
    10. ' ' → logprob: -16.50009536743164

Token 1305: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.009807087481021881
    2. ' C' → logprob: -4.634807109832764
    3. 'L' → logprob: -11.134806632995605
    4. '   ' → logprob: -11.259806632995605
    5. 'c' → logprob: -11.509806632995605
    6. '
' → logprob: -11.509806632995605
    7. ' ' → logprob: -13.509806632995605
    8. '	C' → logprob: -14.384806632995605
    9. ' ind' → logprob: -15.634806632995605
    10. '    ' → logprob: -15.634806632995605

Token 1306: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -3.619311974034645e-05
    2. '_S' → logprob: -10.750036239624023
    3. 'L' → logprob: -12.000036239624023
    4. '_LENGTH' → logprob: -12.750036239624023
    5. '
' → logprob: -13.125036239624023
    6. '```' → logprob: -14.125036239624023
    7. '_LEN' → logprob: -14.375036239624023
    8. '\' → logprob: -14.500036239624023
    9. '_' → logprob: -15.125036239624023
    10. '	L' → logprob: -15.750036239624023

Token 1307: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -3.941161776310764e-05
    2. '_DICT' → logprob: -10.875039100646973
    3. 'dict' → logprob: -12.000039100646973
    4. 'DI' → logprob: -12.500039100646973
    5. 'ICT' → logprob: -12.625039100646973
    6. 'D' → logprob: -12.750039100646973
    7. 'Dict' → logprob: -14.000039100646973
    8. '
' → logprob: -14.375039100646973
    9. 'O' → logprob: -14.625039100646973
    10. 'L' → logprob: -15.000039100646973

Token 1308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. ',C' → logprob: -11.00003433227539
    3. ',c' → logprob: -11.37503433227539
    4. ' ,' → logprob: -12.37503433227539
    5. ',S' → logprob: -14.37503433227539
    6. ',
' → logprob: -14.75003433227539
    7. '   ' → logprob: -14.75003433227539
    8. 'C' → logprob: -16.62503433227539
    9. '_,' → logprob: -17.87503433227539
    10. ',s' → logprob: -18.00003433227539

Token 1309: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007101670489646494
    2. ' C' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.500710487365723
    4. ' ' → logprob: -16.875709533691406
    5. '  ' → logprob: -17.250709533691406
    6. '    ' → logprob: -18.250709533691406
    7. '       ' → logprob: -19.125709533691406
    8. 'c' → logprob: -19.625709533691406
    9. '	C' → logprob: -19.625709533691406
    10. '     ' → logprob: -19.750709533691406

Token 1310: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.008785688318312168
    2. 'S' → logprob: -4.758785724639893
    3. 'SD' → logprob: -8.883785247802734
    4. '_SD' → logprob: -11.133785247802734
    5. '_s' → logprob: -11.758785247802734
    6. '
' → logprob: -12.883785247802734
    7. ' S' → logprob: -13.383785247802734
    8. 'DICT' → logprob: -13.758785247802734
    9. '	S' → logprob: -15.008785247802734
    10. '_' → logprob: -15.008785247802734

Token 1311: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0011998742120340466
    2. 'ICT' → logprob: -7.626199722290039
    3. '_DICT' → logprob: -7.626199722290039
    4. 'ID' → logprob: -8.751199722290039
    5. 'DI' → logprob: -10.376199722290039
    6. 'dict' → logprob: -11.626199722290039
    7. '_dict' → logprob: -12.001199722290039
    8. 'D' → logprob: -12.126199722290039
    9. '   ' → logprob: -13.001199722290039
    10. 'RICT' → logprob: -13.126199722290039

Token 1312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762475728988647
    2. '):
' → logprob: -0.8262475728988647
    3. '   ' → logprob: -8.451247215270996
    4. '):
' → logprob: -9.576247215270996
    5. ',' → logprob: -11.451247215270996
    6. '):

' → logprob: -11.826247215270996
    7. ')' → logprob: -12.076247215270996
    8. ' ' → logprob: -14.701247215270996
    9. ' ):' → logprob: -15.451247215270996
    10. '  ' → logprob: -16.076248168945312

Token 1313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6643874645233154
    2. 'L' → logprob: -0.7893874645233154
    3. 'if' → logprob: -3.5393874645233154
    4. 'for' → logprob: -6.6643877029418945
    5. 'length' → logprob: -8.039387702941895
    6. ' if' → logprob: -8.414387702941895
    7. 'C' → logprob: -9.039387702941895
    8. '```' → logprob: -9.664387702941895
    9. ' LENGTH' → logprob: -9.664387702941895
    10. '	L' → logprob: -9.914387702941895

Token 1314: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07995057106018066
    2. 'if' → logprob: -2.5799505710601807
    3. 'for' → logprob: -7.829950332641602
    4. 'length' → logprob: -8.204950332641602
    5. '   ' → logprob: -8.454950332641602
    6. 'C' → logprob: -8.829950332641602
    7. 'import' → logprob: -11.704950332641602
    8. 'Length' → logprob: -12.204950332641602
    9. '       ' → logprob: -12.829950332641602
    10. ' LENGTH' → logprob: -12.829950332641602

Token 1315: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -4.36574100604048e-06
    2. '=' → logprob: -13.375004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '[' → logprob: -14.500004768371582
    5. ' =' → logprob: -15.125004768371582
    6. '
' → logprob: -15.750004768371582
    7. ' [' → logprob: -15.875004768371582
    8. 'ind' → logprob: -16.000003814697266
    9. '=[' → logprob: -16.000003814697266
    10. '[L' → logprob: -16.500003814697266

Token 1316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051905084401369095
    2. ']+=' → logprob: -3.5519051551818848
    3. ']=' → logprob: -4.051905155181885
    4. '=' → logprob: -5.551905155181885
    5. '+=' → logprob: -7.801905155181885
    6. '-' → logprob: -8.926904678344727
    7. ' ]' → logprob: -10.676904678344727
    8. ']+' → logprob: -10.801904678344727
    9. '   ' → logprob: -11.051904678344727
    10. '[' → logprob: -11.176904678344727

Token 1317: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4774448871612549
    2. '+=' → logprob: -0.9774448871612549
    3. ' +=' → logprob: -6.102444648742676
    4. ' =' → logprob: -6.977444648742676
    5. '=L' → logprob: -8.602444648742676
    6. 'L' → logprob: -12.852444648742676
    7. '+' → logprob: -13.352444648742676
    8. ']+=' → logprob: -13.602444648742676
    9. '   ' → logprob: -14.602444648742676
    10. '.=' → logprob: -14.602444648742676

Token 1318: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0003132976416964084
    2. ' l' → logprob: -8.125313758850098
    3. '1' → logprob: -11.125313758850098
    4. 'length' → logprob: -13.875313758850098
    5. 'L' → logprob: -14.125313758850098
    6. '   ' → logprob: -14.625313758850098
    7. '	l' → logprob: -15.250313758850098
    8. ' ' → logprob: -16.37531280517578
    9. 'C' → logprob: -17.25031280517578
    10. '
' → logprob: -17.25031280517578

Token 1319: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018544958904385567
    2. 'C' → logprob: -4.143545150756836
    3. 'if' → logprob: -6.518545150756836
    4. '
' → logprob: -7.018545150756836
    5. 'for' → logprob: -9.143545150756836
    6. 'def' → logprob: -11.643545150756836
    7. ' if' → logprob: -11.893545150756836
    8. ' C' → logprob: -12.893545150756836
    9. '```' → logprob: -13.143545150756836
    10. '  ' → logprob: -13.518545150756836

Token 1320: ' LENGTH' (ID: 173737)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4925549328327179
    2. 'ind' → logprob: -1.8675549030303955
    3. '(ind' → logprob: -1.9925549030303955
    4. '(c' → logprob: -2.4925549030303955
    5. 'check' → logprob: -5.242555141448975
    6. '(check' → logprob: -5.867555141448975
    7. ' ind' → logprob: -6.617555141448975
    8. ' c' → logprob: -7.117555141448975
    9. ' (' → logprob: -7.242555141448975
    10. '(' → logprob: -7.367555141448975

Token 1321: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.00020818933262489736
    2. 'ind' → logprob: -9.625207901000977
    3. 'else' → logprob: -10.375207901000977
    4. '==' → logprob: -10.625207901000977
    5. '   ' → logprob: -10.875207901000977
    6. '
' → logprob: -10.875207901000977
    7. '>' → logprob: -11.500207901000977
    8. ' else' → logprob: -12.500207901000977
    9. '[' → logprob: -12.625207901000977
    10. '!=' → logprob: -12.750207901000977

Token 1322: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27567750215530396
    2. ' ==' → logprob: -2.275677442550659
    3. ' is' → logprob: -2.400677442550659
    4. 'else' → logprob: -4.150677680969238
    5. '!=' → logprob: -4.650677680969238
    6. '>' → logprob: -5.150677680969238
    7. ' !=' → logprob: -5.275677680969238
    8. ' else' → logprob: -5.400677680969238
    9. '[ind' → logprob: -6.525677680969238
    10. ' >' → logprob: -6.650677680969238

Token 1323: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.136689692735672
    2. ' ==' → logprob: -2.5116896629333496
    3. 'else' → logprob: -3.6366896629333496
    4. ' else' → logprob: -4.63668966293335
    5. '!=' → logprob: -5.51168966293335
    6. ' is' → logprob: -6.01168966293335
    7. '>' → logprob: -6.51168966293335
    8. ' !=' → logprob: -7.26168966293335
    9. '>=' → logprob: -7.38668966293335
    10. '=' → logprob: -8.261690139770508

Token 1324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020783171930816025
    2. ' ' → logprob: -8.500207901000977
    3. '   ' → logprob: -12.375207901000977
    4. '    ' → logprob: -17.250207901000977
    5. '```' → logprob: -18.000207901000977
    6. '  ' → logprob: -18.125207901000977
    7. '	' → logprob: -18.500207901000977
    8. '[' → logprob: -19.125207901000977
    9. '=' → logprob: -19.500207901000977
    10. '       ' → logprob: -20.125207901000977

Token 1325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '[' → logprob: -15.625123977661133
    4. '   ' → logprob: -16.000123977661133
    5. '  ' → logprob: -17.500123977661133
    6. '```' → logprob: -18.000123977661133
    7. '1' → logprob: -18.250123977661133
    8. '    ' → logprob: -18.375123977661133
    9. 'len' → logprob: -18.500123977661133
    10. '=' → logprob: -18.875123977661133

Token 1326: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.28142839670181274
    2. 'else' → logprob: -1.406428337097168
    3. '+' → logprob: -8.531428337097168
    4. '	else' → logprob: -9.656428337097168
    5. '   ' → logprob: -11.906428337097168
    6. ' ' → logprob: -12.781428337097168
    7. ' +' → logprob: -12.781428337097168
    8. '    ' → logprob: -13.656428337097168
    9. '-' → logprob: -13.781428337097168
    10. ' ' → logprob: -14.781428337097168

Token 1327: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.111781544983387
    2. ' l' → logprob: -2.486781597137451
    3. '+' → logprob: -4.736781597137451
    4. 'L' → logprob: -5.736781597137451
    5. 'length' → logprob: -5.736781597137451
    6. '0' → logprob: -6.236781597137451
    7. ' +' → logprob: -6.736781597137451
    8. ' ' → logprob: -7.611781597137451
    9. '-length' → logprob: -7.674281597137451
    10. ' length' → logprob: -8.049281120300293

Token 1328: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39564457535743713
    2. 'L' → logprob: -1.3956445455551147
    3. '0' → logprob: -3.6456446647644043
    4. '+' → logprob: -3.7706446647644043
    5. 'max' → logprob: -4.895644664764404
    6. ' l' → logprob: -5.270644664764404
    7. 'length' → logprob: -5.270644664764404
    8. 'min' → logprob: -6.145644664764404
    9. '-' → logprob: -6.145644664764404
    10. '-length' → logprob: -6.645644664764404

Token 1329: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0935865119099617
    2. '
' → logprob: -2.4685864448547363
    3. 'for' → logprob: -6.218586444854736
    4. 'C' → logprob: -7.218586444854736
    5. '<|end|>' → logprob: -7.593586444854736
    6. ' for' → logprob: -7.843586444854736
    7. '    
' → logprob: -7.968586444854736
    8. ' ' → logprob: -8.718586921691895
    9. '```' → logprob: -9.718586921691895
    10. '  ' → logprob: -9.968586921691895

Token 1330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18834997713565826
    2. '
' → logprob: -1.813349962234497
    3. '<|end|>' → logprob: -5.313350200653076
    4. 'C' → logprob: -6.813350200653076
    5. 'for' → logprob: -7.188350200653076
    6. '    
' → logprob: -7.438350200653076
    7. '```' → logprob: -8.438349723815918
    8. ' for' → logprob: -8.938349723815918
    9. ' ' → logprob: -8.938349723815918
    10. '       ' → logprob: -9.438349723815918

Token 1331: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.054492443799972534
    2. 'if' → logprob: -3.179492473602295
    3. '   ' → logprob: -5.054492473602295
    4. 'for' → logprob: -5.429492473602295
    5. 'L' → logprob: -8.679491996765137
    6. ' if' → logprob: -9.054491996765137
    7. 'idx' → logprob: -9.304491996765137
    8. 'length' → logprob: -9.429491996765137
    9. ' C' → logprob: -10.554491996765137
    10. 'c' → logprob: -10.554491996765137

Token 1332: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.011485133320093155
    2. '_L' → logprob: -4.5114850997924805
    3. '_S' → logprob: -8.26148509979248
    4. '_' → logprob: -9.13648509979248
    5. '_LEN' → logprob: -10.26148509979248
    6. 'L' → logprob: -11.13648509979248
    7. '_Length' → logprob: -12.13648509979248
    8. '_SUM' → logprob: -12.26148509979248
    9. '_length' → logprob: -12.38648509979248
    10. '_LE' → logprob: -13.51148509979248

Token 1333: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.004320810548961163
    2. '[ind' → logprob: -5.6293206214904785
    3. '[C' → logprob: -8.504321098327637
    4. 'c' → logprob: -8.879321098327637
    5. '[' → logprob: -9.379321098327637
    6. 'index' → logprob: -9.504321098327637
    7. '[(' → logprob: -9.629321098327637
    8. 'ind' → logprob: -10.879321098327637
    9. ' =' → logprob: -11.004321098327637
    10. '
' → logprob: -11.129321098327637

Token 1334: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.6870314478874207
    2. ']' → logprob: -1.0620315074920654
    3. '+=' → logprob: -2.1870315074920654
    4. '[ind' → logprob: -3.3120315074920654
    5. '[' → logprob: -6.437031269073486
    6. '=' → logprob: -8.187031745910645
    7. ']=' → logprob: -8.437031745910645
    8. ']+' → logprob: -8.937031745910645
    9. ' +=' → logprob: -9.187031745910645
    10. '[c' → logprob: -10.187031745910645

Token 1335: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005194620694965124
    2. ' +=' → logprob: -5.505194664001465
    3. '=' → logprob: -6.880194664001465
    4. '[' → logprob: -10.505194664001465
    5. '[ind' → logprob: -10.880194664001465
    6. ']+=' → logprob: -11.255194664001465
    7. '+' → logprob: -11.880194664001465
    8. ' =' → logprob: -12.130194664001465
    9. '   ' → logprob: -12.130194664001465
    10. '-=' → logprob: -12.505194664001465

Token 1336: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004081009421497583
    2. ' l' → logprob: -5.504080772399902
    3. '1' → logprob: -13.129080772399902
    4. '	l' → logprob: -15.254080772399902
    5. '   ' → logprob: -16.00408172607422
    6. 'length' → logprob: -16.25408172607422
    7. ' ' → logprob: -16.62908172607422
    8. '+' → logprob: -17.50408172607422
    9. '```' → logprob: -17.75408172607422
    10. ' ' → logprob: -17.75408172607422

Token 1337: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6415367722511292
    2. '
' → logprob: -0.7665367722511292
    3. '<|end|>' → logprob: -4.766536712646484
    4. '<|end|>' → logprob: -9.641536712646484
    5. 'def' → logprob: -9.891536712646484
    6. ' ' → logprob: -9.891536712646484
    7. '    
' → logprob: -10.016536712646484
    8. '  ' → logprob: -10.766536712646484
    9. ')' → logprob: -10.766536712646484
    10. '
' → logprob: -10.891536712646484

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10040809214115143
    2. 'C' → logprob: -2.3504080772399902
    3. '```' → logprob: -9.475408554077148
    4. ' C' → logprob: -9.975408554077148
    5. 'for' → logprob: -10.475408554077148
    6. 'def' → logprob: -10.850408554077148
    7. '<|end|>' → logprob: -11.600408554077148
    8. '
' → logprob: -12.225408554077148
    9. '       ' → logprob: -12.850408554077148
    10. '	C' → logprob: -13.100408554077148

Token 1339: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0028853563126176596
    2. 'for' → logprob: -6.127885341644287
    3. '   ' → logprob: -7.877885341644287
    4. 'if' → logprob: -8.127885818481445
    5. ' C' → logprob: -11.877885818481445
    6. 'def' → logprob: -12.127885818481445
    7. 'idx' → logprob: -12.252885818481445
    8. '#' → logprob: -13.502885818481445
    9. ' for' → logprob: -13.627885818481445
    10. ' ' → logprob: -14.127885818481445

Token 1340: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.029370876029133797
    2. '_LENGTH' → logprob: -4.0293707847595215
    3. 'SUM' → logprob: -4.5293707847595215
    4. '_S' → logprob: -8.02937126159668
    5. '_LEN' → logprob: -11.52937126159668
    6. 'L' → logprob: -12.40437126159668
    7. '_SIZE' → logprob: -12.40437126159668
    8. 'C' → logprob: -12.52937126159668
    9. '_C' → logprob: -12.65437126159668
    10. 'sum' → logprob: -13.02937126159668

Token 1341: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.629921436891891e-05
    2. 'c' → logprob: -11.37502670288086
    3. '[' → logprob: -12.37502670288086
    4. ' =' → logprob: -12.62502670288086
    5. '=c' → logprob: -12.75002670288086
    6. '[
' → logprob: -14.12502670288086
    7. '```' → logprob: -14.37502670288086
    8. ' [' → logprob: -14.62502670288086
    9. '
' → logprob: -14.62502670288086
    10. '   ' → logprob: -14.75002670288086

Token 1342: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0040987045504152775
    2. ' +=' → logprob: -5.504098892211914
    3. '+' → logprob: -11.504098892211914
    4. '=' → logprob: -11.879098892211914
    5. ']+=' → logprob: -13.129098892211914
    6. '-=' → logprob: -13.754098892211914
    7. '+=(' → logprob: -16.379098892211914
    8. '+='' → logprob: -17.254098892211914
    9. ' =' → logprob: -17.379098892211914
    10. '[' → logprob: -17.754098892211914

Token 1343: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019520643400028348
    2. ' +=' → logprob: -6.251952171325684
    3. '=' → logprob: -10.876952171325684
    4. '+' → logprob: -13.126952171325684
    5. '-=' → logprob: -13.126952171325684
    6. ']+=' → logprob: -15.126952171325684
    7. '+=(' → logprob: -15.751952171325684
    8. '   ' → logprob: -16.501951217651367
    9. '[' → logprob: -16.876951217651367
    10. ' -=' → logprob: -17.876951217651367

Token 1344: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0009066991042345762
    2. ' l' → logprob: -7.250906467437744
    3. '1' → logprob: -8.625906944274902
    4. '0' → logprob: -12.375906944274902
    5. 'c' → logprob: -13.000906944274902
    6. 'L' → logprob: -13.125906944274902
    7. 'length' → logprob: -13.375906944274902
    8. 'C' → logprob: -13.500906944274902
    9. ' ' → logprob: -13.875906944274902
    10. '   ' → logprob: -14.000906944274902

Token 1345: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004902417422272265
    2. '1' → logprob: -7.750490188598633
    3. ' l' → logprob: -11.125490188598633
    4. 'L' → logprob: -11.250490188598633
    5. '0' → logprob: -11.500490188598633
    6. 'length' → logprob: -12.375490188598633
    7. 'C' → logprob: -12.625490188598633
    8. 'c' → logprob: -12.750490188598633
    9. '(l' → logprob: -12.875490188598633
    10. '-' → logprob: -13.187990188598633

Token 1346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32044804096221924
    2. 'def' → logprob: -1.4454480409622192
    3. '<|end|>' → logprob: -3.3204479217529297
    4. 'for' → logprob: -6.57044792175293
    5. '
' → logprob: -7.69544792175293
    6. '```' → logprob: -8.82044792175293
    7. 'C' → logprob: -9.07044792175293
    8. 'if' → logprob: -9.69544792175293
    9. ' for' → logprob: -10.57044792175293
    10. '       ' → logprob: -10.57044792175293

Token 1347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03020188957452774
    2. 'def' → logprob: -3.9052019119262695
    3. 'for' → logprob: -5.2802019119262695
    4. '<|end|>' → logprob: -5.9052019119262695
    5. 'C' → logprob: -7.1552019119262695
    6. '```' → logprob: -7.5302019119262695
    7. 'if' → logprob: -8.53020191192627
    8. '       ' → logprob: -9.78020191192627
    9. '
' → logprob: -9.90520191192627
    10. ' for' → logprob: -10.03020191192627

Token 1348: ' LENGTH' (ID: 173737)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03017275035381317
    2. 'key' → logprob: -4.530172824859619
    3. '   ' → logprob: -4.780172824859619
    4. 'C' → logprob: -5.030172824859619
    5. 'for' → logprob: -5.655172824859619
    6. 'idx' → logprob: -8.405172348022461
    7. 'def' → logprob: -9.405172348022461
    8. 'L' → logprob: -9.530172348022461
    9. ' if' → logprob: -10.030172348022461
    10. 'index' → logprob: -11.030172348022461

Token 1349: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.002087450586259365
    2. '<|end|>' → logprob: -6.752087593078613
    3. 'ind' → logprob: -7.252087593078613
    4. '[' → logprob: -10.127087593078613
    5. ',' → logprob: -10.502087593078613
    6. ' ind' → logprob: -10.752087593078613
    7. '
' → logprob: -11.002087593078613
    8. '[
' → logprob: -11.002087593078613
    9. '<|end|>' → logprob: -11.502087593078613
    10. ')' → logprob: -11.752087593078613

Token 1350: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.32965579628944397
    2. ' +=' → logprob: -1.7046557664871216
    3. '=' → logprob: -2.454655885696411
    4. '-=' → logprob: -5.454655647277832
    5. ' -=' → logprob: -5.954655647277832
    6. '[' → logprob: -6.954655647277832
    7. ' =' → logprob: -7.079655647277832
    8. ']+=' → logprob: -7.079655647277832
    9. ')' → logprob: -7.204655647277832
    10. '   ' → logprob: -7.704655647277832

Token 1351: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4498607814311981
    2. '=' → logprob: -1.0748608112335205
    3. ' +=' → logprob: -5.199860572814941
    4. '-=' → logprob: -5.199860572814941
    5. ',' → logprob: -5.949860572814941
    6. '<|end|>' → logprob: -6.449860572814941
    7. ' =' → logprob: -6.949860572814941
    8. '*=' → logprob: -6.949860572814941
    9. '-' → logprob: -7.324860572814941
    10. '%=' → logprob: -7.324860572814941

Token 1352: ' sum' (ID: 4215)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14165571331977844
    2. 'max' → logprob: -2.641655683517456
    3. '0' → logprob: -3.391655683517456
    4. 'length' → logprob: -4.016655921936035
    5. 'l' → logprob: -5.141655921936035
    6. ' LENGTH' → logprob: -7.141655921936035
    7. 'sum' → logprob: -7.391655921936035
    8. 'min' → logprob: -7.641655921936035
    9. 'C' → logprob: -8.016655921936035
    10. ' max' → logprob: -8.516655921936035

Token 1353: '_length' (ID: 11514)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7651571035385132
    2. '([' → logprob: -1.0151571035385132
    3. '(L' → logprob: -2.0151572227478027
    4. '(' → logprob: -4.390157222747803
    5. '((' → logprob: -4.890157222747803
    6. '(
' → logprob: -4.890157222747803
    7. '(length' → logprob: -5.390157222747803
    8. '(l' → logprob: -6.140157222747803
    9. '([
' → logprob: -6.765157222747803
    10. '([(' → logprob: -7.015157222747803

Token 1354: '_up' (ID: 18721)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.37212005257606506
    2. '(ind' → logprob: -2.2471201419830322
    3. ' +' → logprob: -2.8721201419830322
    4. '+' → logprob: -3.1221201419830322
    5. '(L' → logprob: -3.7471201419830322
    6. '[L' → logprob: -4.122119903564453
    7. '   ' → logprob: -4.622119903564453
    8. '([' → logprob: -4.747119903564453
    9. '(C' → logprob: -4.997119903564453
    10. '[l' → logprob: -5.247119903564453

Token 1355: '(L' (ID: 11075)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.3394203186035156
    2. '(ind' → logprob: -1.8394203186035156
    3. '(L' → logprob: -3.4644203186035156
    4. '   ' → logprob: -4.089420318603516
    5. '[L' → logprob: -4.339420318603516
    6. '<|end|>' → logprob: -4.589420318603516
    7. '
' → logprob: -4.589420318603516
    8. 'def' → logprob: -4.839420318603516
    9. '()' → logprob: -5.089420318603516
    10. ' +' → logprob: -5.714420318603516

Token 1356: 'ENGTH' (ID: 15789)
  Prédit: 'ENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENGTH' → logprob: -0.023061560466885567
    2. 'ength' → logprob: -4.523061752319336
    3. '[ind' → logprob: -4.898061752319336
    4. '(ind' → logprob: -6.148061752319336
    5. 'EN' → logprob: -6.898061752319336
    6. 'ENG' → logprob: -7.773061752319336
    7. 'IND' → logprob: -8.023061752319336
    8. '(length' → logprob: -8.398061752319336
    9. '[length' → logprob: -9.398061752319336
    10. 'ENT' → logprob: -9.523061752319336

Token 1357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7070740461349487
    2. '[ind' → logprob: -0.7070740461349487
    3. ')' → logprob: -4.582074165344238
    4. '[' → logprob: -6.832074165344238
    5. '(ind' → logprob: -7.957074165344238
    6. ' ,' → logprob: -7.957074165344238
    7. ',
' → logprob: -8.082074165344238
    8. '   ' → logprob: -8.457074165344238
    9. ',[' → logprob: -8.457074165344238
    10. ')[' → logprob: -8.457074165344238

Token 1358: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.033974844962358475
    2. 'C' → logprob: -3.6589748859405518
    3. ' ind' → logprob: -5.158974647521973
    4. 'L' → logprob: -6.783974647521973
    5. 'IND' → logprob: -8.533974647521973
    6. ' C' → logprob: -8.908974647521973
    7. '[ind' → logprob: -9.158974647521973
    8. 'length' → logprob: -9.908974647521973
    9. 'ED' → logprob: -10.158974647521973
    10. 'check' → logprob: -10.158974647521973

Token 1359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4712243378162384
    2. ')' → logprob: -1.096224308013916
    3. '-' → logprob: -3.721224308013916
    4. ' -' → logprob: -4.471224308013916
    5. '   ' → logprob: -5.721224308013916
    6. ')
' → logprob: -7.221224308013916
    7. '       ' → logprob: -7.596224308013916
    8. ',c' → logprob: -7.971224308013916
    9. ' ,' → logprob: -8.221224784851074
    10. '+' → logprob: -8.846224784851074

Token 1360: ' l' (ID: 305)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12797512114048004
    2. 'check' → logprob: -2.7529752254486084
    3. 'L' → logprob: -3.6279752254486084
    4. 'ED' → logprob: -4.377974987030029
    5. 'c' → logprob: -5.002974987030029
    6. ' check' → logprob: -5.752974987030029
    7. ' C' → logprob: -5.877974987030029
    8. 'CHECK' → logprob: -6.252974987030029
    9. ' LENGTH' → logprob: -7.127974987030029
    10. 'IND' → logprob: -7.877974987030029

Token 1361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11373399198055267
    2. ',' → logprob: -2.363734006881714
    3. '+' → logprob: -5.363733768463135
    4. '   ' → logprob: -5.613733768463135
    5. '-' → logprob: -6.363733768463135
    6. ' +' → logprob: -6.988733768463135
    7. ' )' → logprob: -7.113733768463135
    8. ' -' → logprob: -7.238733768463135
    9. ')
' → logprob: -7.488733768463135
    10. ' ,' → logprob: -9.113734245300293

Token 1362: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1363: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45280560851097107
    2. 'C' → logprob: -1.9528056383132935
    3. '   ' → logprob: -2.202805519104004
    4. 'if' → logprob: -2.577805519104004
    5. 'def' → logprob: -3.452805519104004
    6. ' for' → logprob: -6.327805519104004
    7. '#' → logprob: -7.202805519104004
    8. 'L' → logprob: -7.327805519104004
    9. ' if' → logprob: -7.827805519104004
    10. '```' → logprob: -8.827805519104004

Token 1364: ' q' (ID: 2335)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11462751775979996
    2. 'x' → logprob: -3.4896275997161865
    3. 'cc' → logprob: -4.239627361297607
    4. 'color' → logprob: -4.364627361297607
    5. 'i' → logprob: -4.739627361297607
    6. 'key' → logprob: -4.989627361297607
    7. 'k' → logprob: -5.364627361297607
    8. 'col' → logprob: -5.614627361297607
    9. 'v' → logprob: -5.614627361297607
    10. ' c' → logprob: -5.739627361297607

Token 1365: '_c' (ID: 1303)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012153579853475094
    2. 'c' → logprob: -4.762153625488281
    3. 'in' → logprob: -6.637153625488281
    4. ',' → logprob: -6.887153625488281
    5. '_c' → logprob: -7.887153625488281
    6. ' c' → logprob: -8.262153625488281
    7. ' ' → logprob: -8.512153625488281
    8. 'u' → logprob: -8.762153625488281
    9. ',c' → logprob: -9.137153625488281
    10. ' ,' → logprob: -10.262153625488281

Token 1366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3874094486236572
    2. 'in' → logprob: -1.1374094486236572
    3. ' ' → logprob: -8.512409210205078
    4. 'c' → logprob: -8.637409210205078
    5. ',' → logprob: -9.262409210205078
    6. ',c' → logprob: -10.512409210205078
    7. '	in' → logprob: -11.762409210205078
    8. ' ,' → logprob: -12.262409210205078
    9. '  ' → logprob: -12.887409210205078
    10. '   ' → logprob: -12.887409210205078

Token 1367: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.012049345299601555
    2. ' check' → logprob: -4.512049198150635
    3. '[' → logprob: -7.512049198150635
    4. 'range' → logprob: -8.387049674987793
    5. '(check' → logprob: -9.262049674987793
    6. ' range' → logprob: -10.512049674987793
    7. '   ' → logprob: -10.637049674987793
    8. ' [' → logprob: -10.762049674987793
    9. 'c' → logprob: -11.137049674987793
    10. 'C' → logprob: -11.262049674987793

Token 1368: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.00010020548506872728
    2. '[L' → logprob: -9.875100135803223
    3. '[' → logprob: -11.000100135803223
    4. '[c' → logprob: -11.000100135803223
    5. 'ind' → logprob: -12.000100135803223
    6. 'L' → logprob: -12.750100135803223
    7. '[C' → logprob: -13.625100135803223
    8. '[
' → logprob: -14.250100135803223
    9. '[(' → logprob: -14.375100135803223
    10. '(ind' → logprob: -14.375100135803223

Token 1369: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6395103335380554
    2. ']:
' → logprob: -0.7645103335380554
    3. ']' → logprob: -5.389510154724121
    4. ']:
' → logprob: -7.264510154724121
    5. '   ' → logprob: -7.514510154724121
    6. ':' → logprob: -8.514510154724121
    7. '[c' → logprob: -8.639510154724121
    8. '       ' → logprob: -8.889510154724121
    9. '{' → logprob: -9.014510154724121
    10. '[' → logprob: -9.514510154724121

Token 1370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002270198310725391
    2. '           ' → logprob: -10.000226974487305
    3. '	' → logprob: -10.125226974487305
    4. '```' → logprob: -10.125226974487305
    5. '	   ' → logprob: -10.625226974487305
    6. '   ' → logprob: -10.875226974487305
    7. '<|end|>' → logprob: -11.875226974487305
    8. '	       ' → logprob: -12.125226974487305
    9. '`' → logprob: -12.250226974487305
    10. ':' → logprob: -12.250226974487305

Token 1371: ' C' (ID: 363)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8372736573219299
    2. '       ' → logprob: -1.3372735977172852
    3. 'if' → logprob: -2.087273597717285
    4. '           ' → logprob: -2.337273597717285
    5. 'C' (adapté à ' C') → logprob: -2.837273597717285
    6. ' C' → logprob: -4.462273597717285
    7. '   ' → logprob: -5.712273597717285
    8. 'for' → logprob: -5.837273597717285
    9. ' for' → logprob: -5.962273597717285
    10. 'key' → logprob: -6.337273597717285

Token 1372: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0013722646981477737
    2. '_S' → logprob: -6.751372337341309
    3. 'L' → logprob: -8.751372337341309
    4. '_LENGTH' → logprob: -10.251372337341309
    5. '```' → logprob: -13.626372337341309
    6. 'S' → logprob: -13.876372337341309
    7. '_LEN' → logprob: -13.876372337341309
    8. '_D' → logprob: -14.126372337341309
    9. 'Length' → logprob: -14.626372337341309
    10. '_Length' → logprob: -14.626372337341309

Token 1373: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -6.992775888647884e-05
    2. '_DICT' → logprob: -10.500069618225098
    3. 'L' → logprob: -10.625069618225098
    4. 'ICT' → logprob: -12.000069618225098
    5. 'dict' → logprob: -12.375069618225098
    6. 'DI' → logprob: -12.500069618225098
    7. 'D' → logprob: -13.750069618225098
    8. 'DIST' → logprob: -14.125069618225098
    9. '(dict' → logprob: -15.125069618225098
    10. 'Dict' → logprob: -15.250069618225098

Token 1374: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.054486919194459915
    2. '.setdefault' → logprob: -3.1794869899749756
    3. '.pop' → logprob: -4.6794867515563965
    4. '.__' → logprob: -7.1794867515563965
    5. '.get' → logprob: -7.6794867515563965
    6. '((' → logprob: -8.429487228393555
    7. '[' → logprob: -8.804487228393555
    8. '.update' → logprob: -9.179487228393555
    9. '(' → logprob: -9.304487228393555
    10. '   ' → logprob: -9.929487228393555

Token 1375: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.00019889144459739327
    2. '(ind' → logprob: -8.625199317932129
    3. ' ind' → logprob: -11.375199317932129
    4. '1' → logprob: -12.625199317932129
    5. '[ind' → logprob: -12.750199317932129
    6. 'indent' → logprob: -14.875199317932129
    7. 'indt' → logprob: -15.125199317932129
    8. '(' → logprob: -15.500199317932129
    9. '
' → logprob: -15.625199317932129
    10. 'i' → logprob: -15.625199317932129

Token 1376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006569160032086074
    2. ',q' → logprob: -8.000657081604004
    3. ',c' → logprob: -8.375657081604004
    4. ' ,' → logprob: -9.500657081604004
    5. '`,' → logprob: -12.625657081604004
    6. '<|end|>' → logprob: -12.750657081604004
    7. ',
' → logprob: -13.125657081604004
    8. '       ' → logprob: -13.875657081604004
    9. ',user' → logprob: -14.125657081604004
    10. '),' → logprob: -14.125657081604004

Token 1377: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0032187069300562143
    2. ' q' → logprob: -5.753218650817871
    3. 'c' → logprob: -10.128218650817871
    4. '	q' → logprob: -15.003218650817871
    5. '   ' → logprob: -15.378218650817871
    6. ' c' → logprob: -15.378218650817871
    7. ')' → logprob: -15.753218650817871
    8. ' ' → logprob: -16.878219604492188
    9. '
' → logprob: -17.003219604492188
    10. ''q' → logprob: -17.503219604492188

Token 1378: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -15.875
    3. '_' → logprob: -17.375
    4. ')' → logprob: -18.875
    5. '_,' → logprob: -19.375
    6. '```' → logprob: -20.125
    7. '...' → logprob: -20.25
    8. '<|end|>' → logprob: -20.375
    9. ',' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 1379: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018243594095110893
    2. ']' → logprob: -4.018243789672852
    3. ']=' → logprob: -9.893243789672852
    4. ')' → logprob: -10.643243789672852
    5. '])' → logprob: -12.018243789672852
    6. ']]' → logprob: -12.768243789672852
    7. '],' → logprob: -13.018243789672852
    8. ' ]' → logprob: -13.643243789672852
    9. ',' → logprob: -13.768243789672852
    10. '=' → logprob: -14.018243789672852

Token 1380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013352400856092572
    2. ' =' → logprob: -6.626335144042969
    3. '+=' → logprob: -11.626335144042969
    4. 'if' → logprob: -16.00133514404297
    5. '[' → logprob: -16.87633514404297
    6. '0' → logprob: -17.12633514404297
    7. ']=' → logprob: -17.50133514404297
    8. ' ' → logprob: -17.50133514404297
    9. '=
' → logprob: -17.62633514404297
    10. '=C' → logprob: -17.75133514404297

Token 1381: ' C' (ID: 363)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.09692448377609253
    2. 'C' → logprob: -2.8469245433807373
    3. ' LENGTH' → logprob: -3.7219245433807373
    4. 'length' → logprob: -4.971924304962158
    5. '0' → logprob: -6.096924304962158
    6. ' L' → logprob: -8.721924781799316
    7. ' ' → logprob: -9.346924781799316
    8. ' C' → logprob: -9.471924781799316
    9. 'Length' → logprob: -9.596924781799316
    10. '   ' → logprob: -9.596924781799316

Token 1382: '_LENGTH' (ID: 33289)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8331915140151978
    2. '_LENGTH' → logprob: -0.9581915140151978
    3. '_L' → logprob: -1.7081915140151978
    4. 'Length' → logprob: -9.208191871643066
    5. '_LEN' → logprob: -9.458191871643066
    6. 'ENGTH' → logprob: -9.583191871643066
    7. 'length' → logprob: -10.083191871643066
    8. ' LENGTH' → logprob: -10.083191871643066
    9. 'ength' → logprob: -10.208191871643066
    10. 'S' → logprob: -10.583191871643066

Token 1383: '[q' (ID: 99278)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0358063206076622
    2. '[c' → logprob: -3.41080641746521
    3. '.get' → logprob: -6.410806179046631
    4. '[q' → logprob: -8.660806655883789
    5. '(c' → logprob: -8.910806655883789
    6. '[' → logprob: -9.160806655883789
    7. 'c' → logprob: -10.660806655883789
    8. '<|end|>' → logprob: -11.160806655883789
    9. '[C' → logprob: -11.285806655883789
    10. '   ' → logprob: -11.410806655883789

Token 1384: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00024287392443511635
    2. '[(' → logprob: -9.625243186950684
    3. 'c' → logprob: -10.000243186950684
    4. '(c' → logprob: -10.125243186950684
    5. '(' → logprob: -11.000243186950684
    6. '(ind' → logprob: -11.000243186950684
    7. 'C' → logprob: -11.125243186950684
    8. '((' → logprob: -11.625243186950684
    9. '   ' → logprob: -12.250243186950684
    10. '[c' → logprob: -12.375243186950684

Token 1385: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1386: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5350531339645386
    2. 'C' → logprob: -1.2850531339645386
    3. '       ' → logprob: -2.285053253173828
    4. '	C' → logprob: -4.410053253173828
    5. '```' → logprob: -5.160053253173828
    6. '           ' → logprob: -5.285053253173828
    7. '<|end|>' → logprob: -5.660053253173828
    8. 'for' → logprob: -6.035053253173828
    9. ' C' → logprob: -6.285053253173828
    10. '	' → logprob: -6.535053253173828

Token 1387: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.4742676913738251
    2. '       ' → logprob: -0.9742677211761475
    3. ' C' → logprob: -9.099267959594727
    4. '   ' → logprob: -10.099267959594727
    5. 'for' → logprob: -10.599267959594727
    6. ' ' → logprob: -12.224267959594727
    7. '           ' → logprob: -12.224267959594727
    8. '               ' → logprob: -13.599267959594727
    9. 'def' → logprob: -15.099267959594727
    10. '      ' → logprob: -15.224267959594727

Token 1388: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.00010962257510982454
    2. 'SD' → logprob: -10.000109672546387
    3. 'S' → logprob: -10.375109672546387
    4. '_SD' → logprob: -10.375109672546387
    5. '_s' → logprob: -14.500109672546387
    6. '	S' → logprob: -15.625109672546387
    7. '
' → logprob: -15.750109672546387
    8. '```' → logprob: -15.875109672546387
    9. '_' → logprob: -16.12510871887207
    10. '   ' → logprob: -16.25010871887207

Token 1389: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -7.541112427134067e-05
    2. 'dict' → logprob: -10.250075340270996
    3. '_DICT' → logprob: -10.375075340270996
    4. 'DI' → logprob: -12.375075340270996
    5. 'D' → logprob: -12.875075340270996
    6. 'Dict' → logprob: -15.125075340270996
    7. 'S' → logprob: -15.375075340270996
    8. '[' → logprob: -15.375075340270996
    9. '(dict' → logprob: -15.375075340270996
    10. '_dict' → logprob: -15.500075340270996

Token 1390: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -9.372294698550832e-06
    2. '((' → logprob: -12.500009536743164
    3. '.setdefault' → logprob: -12.750009536743164
    4. '[((' → logprob: -13.250009536743164
    5. '.pop' → logprob: -15.000009536743164
    6. '([(' → logprob: -15.375009536743164
    7. '[
' → logprob: -15.625009536743164
    8. '[' → logprob: -16.125009536743164
    9. '.get' → logprob: -17.125009536743164
    10. ' [(' → logprob: -17.500009536743164

Token 1391: 'ind' (ID: 521)
  Prédit: '(ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.014198064804077148
    2. 'ind' → logprob: -4.264198303222656
    3. '[ind' → logprob: -10.764198303222656
    4. ' (' → logprob: -11.639198303222656
    5. ' ind' → logprob: -12.514198303222656
    6. '   ' → logprob: -15.139198303222656
    7. '
' → logprob: -15.389198303222656
    8. '  ' → logprob: -16.014198303222656
    9. '(' → logprob: -16.139198303222656
    10. ' ' → logprob: -16.639198303222656

Token 1392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -13.375004768371582
    3. ',q' → logprob: -13.625004768371582
    4. ',(' → logprob: -13.875004768371582
    5. ',
' → logprob: -15.250004768371582
    6. ',c' → logprob: -15.375004768371582
    7. '`,' → logprob: -16.250003814697266
    8. '(ind' → logprob: -16.375003814697266
    9. '[ind' → logprob: -16.375003814697266
    10. '‌,' → logprob: -17.000003814697266

Token 1393: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009140860638581216
    2. ' q' → logprob: -7.000914096832275
    3. '   ' → logprob: -14.500913619995117
    4. '	q' → logprob: -14.625913619995117
    5. '(q' → logprob: -15.250913619995117
    6. ' ' → logprob: -15.375913619995117
    7. 'c' → logprob: -15.500913619995117
    8. '  ' → logprob: -15.750913619995117
    9. '    ' → logprob: -15.875913619995117
    10. '     ' → logprob: -16.375913619995117

Token 1394: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.32392441527918e-05
    2. 'c' → logprob: -9.875053405761719
    3. 'C' → logprob: -15.375053405761719
    4. '```' → logprob: -15.500053405761719
    5. '   ' → logprob: -16.00005340576172
    6. ')' → logprob: -16.18755340576172
    7. '
' → logprob: -16.25005340576172
    8. '_s' → logprob: -16.43755340576172
    9. '	c' → logprob: -16.62505340576172
    10. '[' → logprob: -16.87505340576172

Token 1395: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01822146773338318
    2. ']' → logprob: -4.018221378326416
    3. ']=' → logprob: -10.268221855163574
    4. ')' → logprob: -10.518221855163574
    5. '=' → logprob: -12.268221855163574
    6. ']
' → logprob: -13.518221855163574
    7. '```' → logprob: -14.018221855163574
    8. '])' → logprob: -14.143221855163574
    9. '   ' → logprob: -14.268221855163574
    10. ']]' → logprob: -14.893221855163574

Token 1396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. '+=' → logprob: -14.393150329589844
    4. ')' → logprob: -16.643150329589844
    5. ')=' → logprob: -17.518150329589844
    6. '[' → logprob: -17.768150329589844
    7. '   ' → logprob: -17.893150329589844
    8. ' +=' → logprob: -17.893150329589844
    9. ' ' → logprob: -18.768150329589844
    10. ']=' → logprob: -19.018150329589844

Token 1397: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001730040879920125
    2. ' C' → logprob: -6.501729965209961
    3. '   ' → logprob: -9.876729965209961
    4. '0' → logprob: -10.126729965209961
    5. 'sum' → logprob: -10.376729965209961
    6. 'L' → logprob: -10.501729965209961
    7. 'length' → logprob: -10.751729965209961
    8. ' ' → logprob: -12.001729965209961
    9. '
' → logprob: -12.126729965209961
    10. '(C' → logprob: -12.126729965209961

Token 1398: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.004741145297884941
    2. '_LENGTH' → logprob: -5.879741191864014
    3. 'SUM' → logprob: -6.254741191864014
    4. '_S' → logprob: -11.879740715026855
    5. 'L' → logprob: -13.629740715026855
    6. 'sum' → logprob: -13.754740715026855
    7. '_LEN' → logprob: -14.004740715026855
    8. 'S' → logprob: -14.379740715026855
    9. '_sum' → logprob: -14.504740715026855
    10. 'C' → logprob: -14.629740715026855

Token 1399: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.020597364753484726
    2. '[c' → logprob: -3.895597457885742
    3. '[(' → logprob: -10.520597457885742
    4. 'q' → logprob: -11.395597457885742
    5. '[
' → logprob: -12.020597457885742
    6. '(q' → logprob: -12.145597457885742
    7. '[' → logprob: -12.895597457885742
    8. 'c' → logprob: -13.520597457885742
    9. '```' → logprob: -13.895597457885742
    10. '
' → logprob: -14.395597457885742

Token 1400: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.392202976712724e-06
    2. '_q' → logprob: -12.500006675720215
    3. '[q' → logprob: -13.625006675720215
    4. 'c' → logprob: -15.000006675720215
    5. '[c' → logprob: -15.500006675720215
    6. '[' → logprob: -15.500006675720215
    7. 'q' → logprob: -15.750006675720215
    8. '   ' → logprob: -16.1250057220459
    9. ']' → logprob: -16.7500057220459
    10. '[
' → logprob: -16.8750057220459

Token 1401: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2934340238571167
    2. ']' → logprob: -1.5434340238571167
    3. '<|end|>' → logprob: -3.5434341430664062
    4. '+' → logprob: -5.043434143066406
    5. '   ' → logprob: -5.793434143066406
    6. ' +' → logprob: -7.918434143066406
    7. '<|end|>' → logprob: -7.918434143066406
    8. ')]' → logprob: -8.043434143066406
    9. '()' → logprob: -8.168434143066406
    10. '}' → logprob: -8.918434143066406

Token 1402: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03537215292453766
    2. '   ' → logprob: -3.785372257232666
    3. '<|end|>' → logprob: -5.160372257232666
    4. '```' → logprob: -5.410372257232666
    5. 'return' → logprob: -7.410372257232666
    6. ')' → logprob: -8.285371780395508
    7. '       ' → logprob: -8.410371780395508
    8. '...' → logprob: -8.410371780395508
    9. 'L' → logprob: -8.410371780395508
    10. 'else' → logprob: -9.910371780395508

Token 1403: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5544297695159912
    2. 'update' → logprob: -1.1794297695159912
    3. 'sum' → logprob: -2.679429769515991
    4. 'for' → logprob: -4.05443000793457
    5. 'process' → logprob: -4.80443000793457
    6. 'return' → logprob: -5.05443000793457
    7. ' update' → logprob: -5.17943000793457
    8. ' sum' → logprob: -6.17943000793457
    9. 'de' → logprob: -6.80443000793457
    10. 'pass' → logprob: -6.80443000793457

Token 1404: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.05899234116077423
    2. '(L' → logprob: -3.058992385864258
    3. 'length' → logprob: -5.433992385864258
    4. '_LENGTH' → logprob: -5.683992385864258
    5. '(length' → logprob: -7.058992385864258
    6. 'def' → logprob: -7.808992385864258
    7. '(
' → logprob: -7.933992385864258
    8. 'L' → logprob: -8.308992385864258
    9. 'up' → logprob: -9.058992385864258
    10. '(' → logprob: -9.183992385864258

Token 1405: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.029222125187516212
    2. 'up' → logprob: -4.154222011566162
    3. 'def' → logprob: -4.529222011566162
    4. '_UP' → logprob: -6.779222011566162
    5. '(L' → logprob: -7.654222011566162
    6. '   ' → logprob: -8.52922248840332
    7. '=' → logprob: -8.77922248840332
    8. ' =' → logprob: -9.15422248840332
    9. '_' → logprob: -9.77922248840332
    10. 'Up' → logprob: -10.15422248840332

Token 1406: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0006795499939471483
    2. '(' → logprob: -7.6256794929504395
    3. '(length' → logprob: -8.625679969787598
    4. '(
' → logprob: -11.875679969787598
    5. '(len' → logprob: -13.000679969787598
    6. '(l' → logprob: -13.500679969787598
    7. ' (' → logprob: -14.125679969787598
    8. '(lambda' → logprob: -14.875679969787598
    9. '((' → logprob: -16.50067901611328
    10. 'def' → logprob: -17.12567901611328

Token 1407: 'ENGTH' (ID: 15789)
  Prédit: 'ENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENGTH' → logprob: -0.008354521356523037
    2. 'ength' → logprob: -5.758354663848877
    3. 'EN' → logprob: -6.633354663848877
    4. '[ind' → logprob: -6.758354663848877
    5. 'ENG' → logprob: -6.883354663848877
    6. 'IST' → logprob: -7.258354663848877
    7. '(ind' → logprob: -7.758354663848877
    8. 'IND' → logprob: -8.883354187011719
    9. 'L' → logprob: -9.258354187011719
    10. '   ' → logprob: -9.383354187011719

Token 1408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.250015258789062
    3. '[ind' → logprob: -14.250015258789062
    4. '   ' → logprob: -14.500015258789062
    5. ',
' → logprob: -15.250015258789062
    6. 'def' → logprob: -16.375015258789062
    7. ',n' → logprob: -16.500015258789062
    8. '[],' → logprob: -16.625015258789062
    9. ',index' → logprob: -16.625015258789062
    10. ',L' → logprob: -17.750015258789062

Token 1409: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.000527534110005945
    2. ' ind' → logprob: -7.625527381896973
    3. 'len' → logprob: -11.500527381896973
    4. '<|end|>' → logprob: -12.000527381896973
    5. 'lambda' → logprob: -12.125527381896973
    6. '0' → logprob: -12.250527381896973
    7. '   ' → logprob: -12.875527381896973
    8. 'L' → logprob: -13.125527381896973
    9. ')' → logprob: -13.250527381896973
    10. '_ind' → logprob: -13.750527381896973

Token 1410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019936825265176594
    2. '   ' → logprob: -8.625199317932129
    3. ' ,' → logprob: -11.000199317932129
    4. '[ind' → logprob: -13.625199317932129
    5. ',index' → logprob: -14.875199317932129
    6. 'def' → logprob: -15.000199317932129
    7. ',
' → logprob: -15.125199317932129
    8. '[' → logprob: -15.250199317932129
    9. ',L' → logprob: -16.125200271606445
    10. '[],' → logprob: -16.625200271606445

Token 1411: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.40625420212745667
    2. 'L' → logprob: -1.2812541723251343
    3. ' l' → logprob: -3.656254291534424
    4. ' L' → logprob: -3.656254291534424
    5. ' LENGTH' → logprob: -5.656254291534424
    6. 'lambda' → logprob: -7.781254291534424
    7. 'length' → logprob: -8.781253814697266
    8. ' lambda' → logprob: -8.781253814697266
    9. '	L' → logprob: -10.156253814697266
    10. '```' → logprob: -10.281253814697266

Token 1412: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01860768161714077
    2. '):' → logprob: -4.0186076164245605
    3. '):
' → logprob: -8.018608093261719
    4. '   ' → logprob: -9.518608093261719
    5. ')' → logprob: -10.018608093261719
    6. ')+' → logprob: -12.518608093261719
    7. '+' → logprob: -13.143608093261719
    8. '):

' → logprob: -13.643608093261719
    9. '
' → logprob: -14.018608093261719
    10. ')
' → logprob: -14.393608093261719

Token 1413: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5928657054901123
    2. '   ' → logprob: -0.8428657054901123
    3. 'L' → logprob: -4.092865943908691
    4. 'length' → logprob: -10.092865943908691
    5. ' return' → logprob: -10.592865943908691
    6. 'if' → logprob: -11.092865943908691
    7. '	return' → logprob: -12.467865943908691
    8. '```' → logprob: -12.967865943908691
    9. 'Length' → logprob: -13.217865943908691
    10. '
' → logprob: -14.592865943908691

Token 1414: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00651641795411706
    2. 'L' → logprob: -5.506516456604004
    3. '   ' → logprob: -6.131516456604004
    4. ' return' → logprob: -8.756516456604004
    5. 'if' (adapté à ' if') → logprob: -9.756516456604004
    6. 'length' → logprob: -10.506516456604004
    7. 'res' → logprob: -12.006516456604004
    8. '```' → logprob: -12.256516456604004
    9. 'result' → logprob: -12.881516456604004
    10. 'ret' → logprob: -13.006516456604004

Token 1415: ' LENGTH' (ID: 173737)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.1614701896905899
    2. 'L' → logprob: -1.9114701747894287
    3. 'length' → logprob: -7.661470413208008
    4. ' LENGTH' → logprob: -8.536470413208008
    5. 'IND' → logprob: -8.911470413208008
    6. ' ind' → logprob: -9.161470413208008
    7. '(ind' → logprob: -9.286470413208008
    8. '0' → logprob: -9.911470413208008
    9. 'l' → logprob: -10.161470413208008
    10. 'LEN' → logprob: -10.411470413208008

Token 1416: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.00021212305000517517
    2. 'ind' → logprob: -9.000211715698242
    3. '[' → logprob: -10.625211715698242
    4. ' ind' → logprob: -11.125211715698242
    5. '   ' → logprob: -11.250211715698242
    6. '==' → logprob: -11.375211715698242
    7. '(ind' → logprob: -11.750211715698242
    8. '>' → logprob: -12.375211715698242
    9. '=' → logprob: -13.125211715698242
    10. '[max' → logprob: -13.875211715698242

Token 1417: ']' (ID: 60)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.1621357798576355
    2. ']' → logprob: -2.0371358394622803
    3. '==' → logprob: -4.412135601043701
    4. ']==' → logprob: -5.162135601043701
    5. '   ' → logprob: -7.662135601043701
    6. ' ==' → logprob: -8.16213607788086
    7. ']+' → logprob: -8.28713607788086
    8. '
' → logprob: -9.41213607788086
    9. '[' → logprob: -9.53713607788086
    10. '```' → logprob: -9.91213607788086

Token 1418: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1544121503829956
    2. ' ==' → logprob: -2.029412269592285
    3. '>' → logprob: -5.529412269592285
    4. '!=' → logprob: -5.529412269592285
    5. ' is' → logprob: -6.654412269592285
    6. ' !=' → logprob: -6.779412269592285
    7. ' >' → logprob: -7.404412269592285
    8. 'is' → logprob: -9.154412269592285
    9. '==-' → logprob: -9.154412269592285
    10. '[' → logprob: -9.279412269592285

Token 1419: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002314526354894042
    2. 'l' → logprob: -6.627314567565918
    3. ' ' → logprob: -7.002314567565918
    4. 'L' → logprob: -10.127314567565918
    5. ' l' → logprob: -10.877314567565918
    6. '   ' → logprob: -12.127314567565918
    7. '```' → logprob: -12.627314567565918
    8. '1' → logprob: -12.752314567565918
    9. ' L' → logprob: -13.127314567565918
    10. '(' → logprob: -14.439814567565918

Token 1420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007891403511166573
    2. ' ' → logprob: -7.250789165496826
    3. 'l' → logprob: -9.625788688659668
    4. '1' → logprob: -11.625788688659668
    5. ' l' → logprob: -13.938288688659668
    6. '-' → logprob: -14.375788688659668
    7. ' -' → logprob: -15.313288688659668
    8. '[' → logprob: -15.375788688659668
    9. '(' → logprob: -15.438288688659668
    10. '2' → logprob: -15.500788688659668

Token 1421: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.689699113368988
    2. ':' → logprob: -0.814699113368988
    3. '       ' → logprob: -3.689699172973633
    4. ':return' → logprob: -4.189699172973633
    5. '+' → logprob: -4.814699172973633
    6. '   ' → logprob: -5.564699172973633
    7. ' +' → logprob: -5.939699172973633
    8. ' or' → logprob: -7.439699172973633
    9. 'return' → logprob: -9.814699172973633
    10. '    ' → logprob: -10.814699172973633

Token 1422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011769699864089489
    2. '   ' → logprob: -5.261769771575928
    3. ' return' → logprob: -5.636769771575928
    4. 'return' → logprob: -7.011769771575928
    5. ' +' → logprob: -7.886769771575928
    6. '+' → logprob: -7.886769771575928
    7. '	' → logprob: -8.01176929473877
    8. '0' → logprob: -8.26176929473877
    9. '    ' → logprob: -8.26176929473877
    10. '	   ' → logprob: -8.88676929473877

Token 1423: ' return' (ID: 622)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8256440758705139
    2. 'l' → logprob: -0.9506440758705139
    3. '0' → logprob: -1.8256440162658691
    4. 'return' (adapté à ' return') → logprob: -4.700644016265869
    5. '   ' → logprob: -5.950644016265869
    6. ' L' → logprob: -7.325644016265869
    7. ' l' → logprob: -7.450644016265869
    8. 'length' → logprob: -7.825644016265869
    9. ' LENGTH' → logprob: -8.075644493103027
    10. ' return' → logprob: -8.575644493103027

Token 1424: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5854505300521851
    2. 'L' → logprob: -0.8354505300521851
    3. '0' → logprob: -5.210450649261475
    4. ' l' → logprob: -6.335450649261475
    5. ' L' → logprob: -6.710450649261475
    6. ' LENGTH' → logprob: -7.460450649261475
    7. 'length' → logprob: -8.585450172424316
    8. '   ' → logprob: -9.835450172424316
    9. ' ' → logprob: -10.522950172424316
    10. 'Length' → logprob: -11.022950172424316

Token 1425: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08500668406486511
    2. ' else' → logprob: -3.4600067138671875
    3. '+' → logprob: -3.7100067138671875
    4. 'else' → logprob: -4.3350067138671875
    5. '
' → logprob: -4.9600067138671875
    6. ' +' → logprob: -5.9600067138671875
    7. 'return' → logprob: -7.3350067138671875
    8. '+
' → logprob: -7.4600067138671875
    9. ' return' → logprob: -7.5850067138671875
    10. '    
' → logprob: -7.7100067138671875

Token 1426: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12161563336849213
    2. 'sum' → logprob: -2.6216156482696533
    3. '0' → logprob: -3.2466156482696533
    4. ' LENGTH' → logprob: -6.996615409851074
    5. '(L' → logprob: -7.496615409851074
    6. 'max' → logprob: -7.746615409851074
    7. 'length' → logprob: -7.871615409851074
    8. '(sum' → logprob: -7.996615409851074
    9. '(' → logprob: -8.871615409851074
    10. 'Length' → logprob: -10.121615409851074

Token 1427: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.016808554530143738
    2. 'ind' → logprob: -4.14180850982666
    3. '[' → logprob: -7.64180850982666
    4. '[E' → logprob: -8.76680850982666
    5. '
' → logprob: -10.64180850982666
    6. '0' → logprob: -10.76680850982666
    7. '(ind' → logprob: -11.14180850982666
    8. '[parent' → logprob: -11.51680850982666
    9. 'indent' → logprob: -11.76680850982666
    10. '[-' → logprob: -11.89180850982666

Token 1428: ']
' (ID: 1592)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.13692018389701843
    2. '
' → logprob: -2.261920213699341
    3. '   ' → logprob: -4.136919975280762
    4. '-' → logprob: -5.011919975280762
    5. '<|end|>' → logprob: -8.011919975280762
    6. ' -' → logprob: -8.636919975280762
    7. '[' → logprob: -8.636919975280762
    8. ' ' → logprob: -9.261919975280762
    9. '(ind' → logprob: -9.511919975280762
    10. 'else' → logprob: -9.636919975280762

Token 1429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9168395400047302
    2. 'else' → logprob: -1.166839599609375
    3. ' else' → logprob: -1.541839599609375
    4. '-' → logprob: -3.916839599609375
    5. '+' → logprob: -4.041839599609375
    6. '0' → logprob: -4.916839599609375
    7. '```' → logprob: -4.916839599609375
    8. '<|end|>' → logprob: -5.166839599609375
    9. '
' → logprob: -5.541839599609375
    10. 'return' → logprob: -5.791839599609375

Token 1430: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013662108220160007
    2. ' else' → logprob: -5.138662338256836
    3. 'else' → logprob: -5.263662338256836
    4. '+' → logprob: -6.888662338256836
    5. '
' → logprob: -7.138662338256836
    6. 'return' (adapté à ' return') → logprob: -8.638662338256836
    7. ' return' → logprob: -8.888662338256836
    8. ' +' → logprob: -8.888662338256836
    9. '	else' → logprob: -9.388662338256836
    10. '	return' → logprob: -9.888662338256836

Token 1431: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0025896925944834948
    2. 'l' → logprob: -6.877589702606201
    3. 'length' → logprob: -7.502589702606201
    4. '0' → logprob: -7.627589702606201
    5. ' LENGTH' → logprob: -7.627589702606201
    6. 'Length' → logprob: -11.377589225769043
    7. '-length' → logprob: -12.377589225769043
    8. '   ' → logprob: -12.752589225769043
    9. 'len' → logprob: -13.002589225769043
    10. 'LEN' → logprob: -13.127589225769043

Token 1432: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. '<|end|>' → logprob: -17.5
    4. 'ind' → logprob: -17.625
    5. ' [' → logprob: -17.625
    6. ' +' → logprob: -17.75
    7. '[
' → logprob: -18.0
    8. ' ind' → logprob: -18.0
    9. '```' → logprob: -18.0
    10. '
' → logprob: -18.5

Token 1433: ']

' (ID: 3144)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6360912322998047
    2. '+' → logprob: -0.7610912322998047
    3. '+l' → logprob: -5.886091232299805
    4. '<|end|>' → logprob: -7.386091232299805
    5. ' -' → logprob: -10.011091232299805
    6. '-' → logprob: -10.761091232299805
    7. ')' → logprob: -12.511091232299805
    8. '+
' → logprob: -12.636091232299805
    9. '<|end|>' → logprob: -12.636091232299805
    10. '
' → logprob: -13.386091232299805

Token 1434: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045876797288656235
    2. '<|end|>' → logprob: -3.1708767414093018
    3. '```' → logprob: -6.170876979827881
    4. '   ' → logprob: -7.795876979827881
    5. '
' → logprob: -8.420876502990723
    6. '<|end|>' → logprob: -10.045876502990723
    7. ')' → logprob: -10.170876502990723
    8. ' def' → logprob: -10.670876502990723
    9. '...' → logprob: -11.045876502990723
    10. '#' → logprob: -12.420876502990723

Token 1435: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.3526743948459625
    2. 'sum' → logprob: -1.9776743650436401
    3. 'main' → logprob: -2.1026744842529297
    4. 'def' → logprob: -4.22767448425293
    5. 'process' → logprob: -4.97767448425293
    6. ' update' → logprob: -5.35267448425293
    7. 'solve' → logprob: -6.22767448425293
    8. 'get' → logprob: -6.35267448425293
    9. ' main' → logprob: -6.85267448425293
    10. ' sum' → logprob: -6.97767448425293

Token 1436: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0002354832977289334
    2. 'e' → logprob: -8.500235557556152
    3. '_down' → logprob: -10.500235557556152
    4. 'Euler' → logprob: -13.500235557556152
    5. '```' → logprob: -13.875235557556152
    6. 'def' → logprob: -14.375235557556152
    7. '
' → logprob: -14.875235557556152
    8. 'down' → logprob: -14.875235557556152
    9. '_segment' → logprob: -15.875235557556152
    10. '_segments' → logprob: -16.500234603881836

Token 1437: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.00042054426739923656
    2. 'ule' → logprob: -9.250420570373535
    3. 'ler' → logprob: -9.250420570373535
    4. 'ul' → logprob: -9.625420570373535
    5. 'ulers' → logprob: -11.125420570373535
    6. 'UL' → logprob: -11.250420570373535
    7. 'up' → logprob: -11.250420570373535
    8. '_' → logprob: -11.250420570373535
    9. 'u' → logprob: -11.500420570373535
    10. 'iler' → logprob: -11.625420570373535

Token 1438: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -2.3080716346157715e-05
    2. '_up' → logprob: -10.750022888183594
    3. 'down' → logprob: -13.875022888183594
    4. '_DOWN' → logprob: -15.750022888183594
    5. '```' → logprob: -15.750022888183594
    6. '_dn' → logprob: -16.000022888183594
    7. '_d' → logprob: -16.125022888183594
    8. '
' → logprob: -16.500022888183594
    9. '_do' → logprob: -17.125022888183594
    10. '_' → logprob: -17.625022888183594

Token 1439: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.001912457519210875
    2. '(' → logprob: -6.501912593841553
    3. '(L' → logprob: -8.126912117004395
    4. '(length' → logprob: -11.001912117004395
    5. '(lambda' → logprob: -11.251912117004395
    6. '((' → logprob: -11.251912117004395
    7. '(c' → logprob: -11.626912117004395
    8. ' (' → logprob: -12.001912117004395
    9. '(_' → logprob: -12.001912117004395
    10. '()' → logprob: -12.251912117004395

Token 1440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.750208854675293
    3. ',c' → logprob: -10.625208854675293
    4. ',
' → logprob: -11.250208854675293
    5. 'c' → logprob: -12.000208854675293
    6. 'def' → logprob: -13.000208854675293
    7. ')' → logprob: -13.875208854675293
    8. '):
' → logprob: -14.750208854675293
    9. '<|end|>' → logprob: -14.750208854675293
    10. ' c' → logprob: -15.000208854675293

Token 1441: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.635421097278595
    2. 'l' → logprob: -1.2604210376739502
    3. ' l' → logprob: -2.13542103767395
    4. ' c' → logprob: -2.76042103767395
    5. 'C' → logprob: -6.385421276092529
    6. ' -' → logprob: -7.260421276092529
    7. '0' → logprob: -7.260421276092529
    8. '-' → logprob: -7.760421276092529
    9. ' ' → logprob: -7.760421276092529
    10. ' C' → logprob: -7.885421276092529

Token 1442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03948276489973068
    2. '   ' → logprob: -3.414482831954956
    3. '-' → logprob: -5.789482593536377
    4. 'C' → logprob: -6.789482593536377
    5. ',
' → logprob: -8.414483070373535
    6. '(c' → logprob: -8.539483070373535
    7. 'def' → logprob: -8.539483070373535
    8. '(C' → logprob: -8.789483070373535
    9. '-=' → logprob: -8.789483070373535
    10. ' -=' → logprob: -9.039483070373535

Token 1443: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0046592652797698975
    2. ' C' → logprob: -5.379659175872803
    3. '   ' → logprob: -10.379659652709961
    4. 'c' → logprob: -13.129659652709961
    5. ' ' → logprob: -13.504659652709961
    6. '	C' → logprob: -14.004659652709961
    7. 'L' → logprob: -14.129659652709961
    8. '-' → logprob: -14.379659652709961
    9. '-C' → logprob: -14.629659652709961
    10. '  ' → logprob: -14.629659652709961

Token 1444: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.0031869823578745127
    2. 'L' → logprob: -5.75318717956543
    3. '_L' → logprob: -12.62818717956543
    4. '_length' → logprob: -12.62818717956543
    5. 'length' → logprob: -13.62818717956543
    6. '_LEN' → logprob: -15.00318717956543
    7. 'ENGTH' → logprob: -15.12818717956543
    8. 'Length' → logprob: -15.50318717956543
    9. ' LENGTH' → logprob: -15.50318717956543
    10. '.LENGTH' → logprob: -15.75318717956543

Token 1445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016292404616251588
    2. ',c' → logprob: -6.87662935256958
    3. '```' → logprob: -8.376628875732422
    4. '   ' → logprob: -9.126628875732422
    5. '[c' → logprob: -9.251628875732422
    6. '[' → logprob: -10.251628875732422
    7. '-' → logprob: -10.376628875732422
    8. ',C' → logprob: -11.126628875732422
    9. ' ,' → logprob: -11.251628875732422
    10. '-=' → logprob: -11.376628875732422

Token 1446: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010336418636143208
    2. ' C' → logprob: -6.876033782958984
    3. 'c' → logprob: -14.626033782958984
    4. '   ' → logprob: -15.876033782958984
    5. '-C' → logprob: -16.001033782958984
    6. ' ' → logprob: -16.126033782958984
    7. '-' → logprob: -16.876033782958984
    8. '	C' → logprob: -17.376033782958984
    9. '  ' → logprob: -17.626033782958984
    10. '
' → logprob: -18.501033782958984

Token 1447: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.07897119969129562
    2. 'SUM' → logprob: -2.5789711475372314
    3. '_S' → logprob: -9.453970909118652
    4. ' SUM' → logprob: -13.703970909118652
    5. '_LENGTH' → logprob: -14.328970909118652
    6. 'S' → logprob: -14.578970909118652
    7. '_SUP' → logprob: -15.453970909118652
    8. 'c' → logprob: -15.828970909118652
    9. 'sum' → logprob: -16.32897186279297
    10. '_' → logprob: -16.45397186279297

Token 1448: '):
' (ID: 1883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8677948117256165
    2. ',' → logprob: -1.3677947521209717
    3. '[c' → logprob: -1.3677947521209717
    4. '-' → logprob: -3.2427947521209717
    5. ',c' → logprob: -4.242794990539551
    6. '):
' → logprob: -4.992794990539551
    7. '[-' → logprob: -5.492794990539551
    8. '[C' → logprob: -6.742794990539551
    9. '[' → logprob: -6.992794990539551
    10. '-=' → logprob: -7.242794990539551

Token 1449: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20151790976524353
    2. '   ' → logprob: -1.701517939567566
    3. ' C' → logprob: -9.451518058776855
    4. '	C' → logprob: -10.826518058776855
    5. '```' → logprob: -12.701518058776855
    6. '
' → logprob: -13.701518058776855
    7. '  ' → logprob: -14.326518058776855
    8. ' ' → logprob: -14.701518058776855
    9. '   ' → logprob: -14.826518058776855
    10. '       ' → logprob: -15.076518058776855

Token 1450: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -2.856408536899835e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' C' → logprob: -13.875028610229492
    4. '	C' → logprob: -18.000028610229492
    5. 'c' → logprob: -20.000028610229492
    6. '```' → logprob: -20.250028610229492
    7. 'L' → logprob: -20.500028610229492
    8. '  ' → logprob: -20.625028610229492
    9. ' ' → logprob: -20.750028610229492
    10. 'Ｃ' → logprob: -21.000028610229492

Token 1451: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.0003392767102923244
    2. '_SUM' → logprob: -8.00033950805664
    3. '_S' → logprob: -13.12533950805664
    4. '_L' → logprob: -13.75033950805664
    5. '_LEN' → logprob: -15.50033950805664
    6. 'L' → logprob: -15.62533950805664
    7. '_length' → logprob: -15.87533950805664
    8. '_Length' → logprob: -16.00033950805664
    9. 'Length' → logprob: -17.25033950805664
    10. '_' → logprob: -17.50033950805664

Token 1452: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.0
    3. '[' → logprob: -17.625
    4. '
' → logprob: -17.875
    5. ' [' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '[
' → logprob: -19.0
    8. '   ' → logprob: -19.5
    9. '=c' → logprob: -19.625
    10. '[C' → logprob: -19.75

Token 1453: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0026956244837492704
    2. '-' → logprob: -6.502695560455322
    3. ' -=' → logprob: -6.752695560455322
    4. '   ' → logprob: -10.87769603729248
    5. '=' → logprob: -12.87769603729248
    6. '[c' → logprob: -13.50269603729248
    7. '+=' → logprob: -13.75269603729248
    8. '[-' → logprob: -14.25269603729248
    9. '```' → logprob: -15.50269603729248
    10. '[' → logprob: -16.502695083618164

Token 1454: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00022523177904076874
    2. '-' → logprob: -8.500225067138672
    3. ' -=' → logprob: -10.750225067138672
    4. '+=' → logprob: -15.375225067138672
    5. '=' → logprob: -16.625225067138672
    6. '   ' → logprob: -17.625225067138672
    7. ' -' → logprob: -20.375225067138672
    8. '```' → logprob: -21.875225067138672
    9. '[-' → logprob: -22.375225067138672
    10. '>' → logprob: -22.500225067138672

Token 1455: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.493430894101039e-05
    2. ' l' → logprob: -9.500075340270996
    3. '1' → logprob: -17.12507438659668
    4. '   ' → logprob: -19.50007438659668
    5. '	l' → logprob: -19.87507438659668
    6. '```' → logprob: -21.87507438659668
    7. '<|end|>' → logprob: -22.62507438659668
    8. ' л' → logprob: -23.25007438659668
    9. ' ' → logprob: -24.00007438659668
    10. '_l' → logprob: -24.12507438659668

Token 1456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002375534735620022
    2. '
' → logprob: -6.127375602722168
    3. 'C' → logprob: -8.627375602722168
    4. '```' → logprob: -12.627375602722168
    5. '<|end|>' → logprob: -13.002375602722168
    6. '       ' → logprob: -13.877375602722168
    7. ' ' → logprob: -14.127375602722168
    8. '	C' → logprob: -14.127375602722168
    9. ' C' → logprob: -14.252375602722168
    10. ',' → logprob: -14.377375602722168

Token 1457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006034619174897671
    2. 'C' → logprob: -5.131034851074219
    3. ' ' → logprob: -10.131034851074219
    4. '```' → logprob: -10.881034851074219
    5. ' C' → logprob: -11.256034851074219
    6. '
' → logprob: -11.256034851074219
    7. '<|end|>' → logprob: -11.506034851074219
    8. '       ' → logprob: -12.631034851074219
    9. '  ' → logprob: -12.756034851074219
    10. '	C' → logprob: -13.006034851074219

Token 1458: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.00010807292710524052
    2. '   ' → logprob: -9.250107765197754
    3. ' C' → logprob: -11.375107765197754
    4. ' ' → logprob: -16.50010871887207
    5. '
' → logprob: -16.50010871887207
    6. '	C' → logprob: -16.62510871887207
    7. '  ' → logprob: -17.12510871887207
    8. 'c' → logprob: -17.37510871887207
    9. '0' → logprob: -19.37510871887207
    10. '*C' → logprob: -19.50010871887207

Token 1459: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.0013346440391615033
    2. 'SUM' → logprob: -6.6263346672058105
    3. '_LENGTH' → logprob: -11.876334190368652
    4. '_S' → logprob: -14.251334190368652
    5. '   ' → logprob: -15.376334190368652
    6. '_' → logprob: -15.626334190368652
    7. '_SUP' → logprob: -15.626334190368652
    8. ' SUM' → logprob: -16.12633514404297
    9. '_LEN' → logprob: -16.12633514404297
    10. '_sum' → logprob: -16.12633514404297

Token 1460: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.704273118884885e-07
    2. 'c' → logprob: -14.375000953674316
    3. '[' → logprob: -18.375
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.5
    6. '	c' → logprob: -20.75
    7. '(c' → logprob: -20.875
    8. '[
' → logprob: -21.0
    9. ' [' → logprob: -21.0
    10. '[C' → logprob: -21.5

Token 1461: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.31649959087371826
    2. '-=' → logprob: -1.3164995908737183
    3. '   ' → logprob: -6.566499710083008
    4. '+=' → logprob: -7.441499710083008
    5. '-' → logprob: -7.441499710083008
    6. ' +=' → logprob: -8.316499710083008
    7. '[' → logprob: -8.566499710083008
    8. '[-' → logprob: -8.691499710083008
    9. '[c' → logprob: -10.816499710083008
    10. '=' → logprob: -11.441499710083008

Token 1462: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0007542393868789077
    2. ' -=' → logprob: -7.250754356384277
    3. '-' → logprob: -10.625754356384277
    4. '=' → logprob: -11.125754356384277
    5. '+=' → logprob: -12.250754356384277
    6. '   ' → logprob: -14.750754356384277
    7. '[' → logprob: -16.87575340270996
    8. '[-' → logprob: -18.37575340270996
    9. '  ' → logprob: -19.12575340270996
    10. ' ' → logprob: -19.62575340270996

Token 1463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.250036239624023
    4. '```' → logprob: -18.750036239624023
    5. '  ' → logprob: -19.250036239624023
    6. '0' → logprob: -20.000036239624023
    7. '       ' → logprob: -20.625036239624023
    8. '<|end|>' → logprob: -21.062536239624023
    9. '-' → logprob: -21.125036239624023
    10. '[' → logprob: -21.312536239624023

Token 1464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -19.375
    5. '<|end|>' → logprob: -19.75
    6. '[' → logprob: -21.625
    7. '0' → logprob: -21.75
    8. '１' → logprob: -21.875
    9. '       ' → logprob: -22.0
    10. '-' → logprob: -22.25

Token 1465: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22871434688568115
    2. '<|end|>' → logprob: -1.6037143468856812
    3. 'for' → logprob: -7.103714466094971
    4. ')' → logprob: -7.103714466094971
    5. '#' → logprob: -7.728714466094971
    6. '<|end|>' → logprob: -7.728714466094971
    7. '```' → logprob: -8.728713989257812
    8. '   ' → logprob: -8.853713989257812
    9. 'c' → logprob: -9.728713989257812
    10. 'x' → logprob: -9.853713989257812

Token 1466: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2676504850387573
    2. '<|end|>' → logprob: -2.142650604248047
    3. ')' → logprob: -2.392650604248047
    4. '#' → logprob: -4.142650604248047
    5. '```' → logprob: -5.267650604248047
    6. 'return' → logprob: -6.767650604248047
    7. 'L' → logprob: -7.392650604248047
    8. '
' → logprob: -7.642650604248047
    9. '<|end|>' → logprob: -7.642650604248047
    10. '...' → logprob: -8.267650604248047

Token 1467: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2038634866476059
    2. ' main' → logprob: -1.703863501548767
    3. 'solve' → logprob: -6.828863620758057
    4. 'def' → logprob: -7.328863620758057
    5. ' solve' → logprob: -8.328863143920898
    6. 'process' → logprob: -8.453863143920898
    7. 'query' → logprob: -9.578863143920898
    8. 'calculate' → logprob: -10.078863143920898
    9. 'compute' → logprob: -10.703863143920898
    10. ' process' → logprob: -10.828863143920898

Token 1468: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.5907186269760132
    2. '_query' → logprob: -0.8407186269760132
    3. 'queries' → logprob: -5.340718746185303
    4. '_answer' → logprob: -5.840718746185303
    5. 'query' → logprob: -6.715718746185303
    6. 'Query' → logprob: -6.840718746185303
    7. '_answers' → logprob: -7.090718746185303
    8. '_Query' → logprob: -7.590718746185303
    9. '_results' → logprob: -7.590718746185303
    10. '_length' → logprob: -7.715718746185303

Token 1469: '(Query' (ID: 97126)
  Prédit: '(Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Query' → logprob: -0.06744150072336197
    2. 'def' → logprob: -3.067441463470459
    3. '(N' → logprob: -4.442441463470459
    4. '(Q' → logprob: -5.067441463470459
    5. '(def' → logprob: -8.192441940307617
    6. '(' → logprob: -8.317441940307617
    7. ' def' → logprob: -10.567441940307617
    8. '(query' → logprob: -10.942441940307617
    9. '(
' → logprob: -11.567441940307617
    10. '(Check' → logprob: -11.567441940307617

Token 1470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00907469354569912
    2. '):' → logprob: -4.884074687957764
    3. '):
' → logprob: -6.759074687957764
    4. '   ' → logprob: -8.509075164794922
    5. 'def' → logprob: -10.259075164794922
    6. ',
' → logprob: -10.759075164794922
    7. ',Q' → logprob: -11.509075164794922
    8. ',i' → logprob: -12.134075164794922
    9. ' ,' → logprob: -12.259075164794922
    10. 'for' → logprob: -12.509075164794922

Token 1471: ' L' (ID: 451)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.06158452481031418
    2. 'N' → logprob: -4.31158447265625
    3. 'C' → logprob: -4.43658447265625
    4. 'check' → logprob: -4.56158447265625
    5. ' MIN' → logprob: -4.68658447265625
    6. 'ED' → logprob: -4.93658447265625
    7. 'L' → logprob: -5.18658447265625
    8. 'LEN' → logprob: -7.56158447265625
    9. 'E' → logprob: -8.43658447265625
    10. 'min' → logprob: -8.56158447265625

Token 1472: 'CA' (ID: 6781)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5109476447105408
    2. 'C' → logprob: -1.8859477043151855
    3. 'EN' → logprob: -2.0109477043151855
    4. 'ENG' → logprob: -2.6359477043151855
    5. 'ENGTH' → logprob: -4.5109477043151855
    6. ',' → logprob: -4.7609477043151855
    7. '   ' → logprob: -5.7609477043151855
    8. 'eng' → logprob: -6.0109477043151855
    9. '_,' → logprob: -6.6359477043151855
    10. 'ength' → logprob: -6.6359477043151855

Token 1473: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.13711529970169067
    2. ',' → logprob: -2.762115240097046
    3. 'func' → logprob: -2.762115240097046
    4. 'def' → logprob: -7.262115478515625
    5. '_FUNC' → logprob: -8.137115478515625
    6. '
' → logprob: -8.387115478515625
    7. ')' → logprob: -9.012115478515625
    8. '):
' → logprob: -9.137115478515625
    9. ' func' → logprob: -9.637115478515625
    10. '   ' → logprob: -9.762115478515625

Token 1474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02272646315395832
    2. '):
' → logprob: -4.147726535797119
    3. '):' → logprob: -5.022726535797119
    4. '   ' → logprob: -10.397726058959961
    5. ',
' → logprob: -10.897726058959961
    6. ' ,' → logprob: -11.397726058959961
    7. 'def' → logprob: -12.022726058959961
    8. ')' → logprob: -12.522726058959961
    9. '```' → logprob: -13.272726058959961
    10. ',N' → logprob: -13.397726058959961

Token 1475: ' LENGTH' (ID: 173737)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.03336615115404129
    2. ' MIN' → logprob: -4.5333662033081055
    3. 'ED' → logprob: -4.7833662033081055
    4. 'N' → logprob: -5.4083662033081055
    5. 'C' → logprob: -5.6583662033081055
    6. 'L' → logprob: -6.0333662033081055
    7. 'check' → logprob: -7.2833662033081055
    8. 'E' → logprob: -7.5333662033081055
    9. 'min' → logprob: -7.6583662033081055
    10. 'LEN' → logprob: -8.408366203308105

Token 1476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013729690108448267
    2. '):
' → logprob: -6.876372814178467
    3. '):' → logprob: -9.126373291015625
    4. ' ,' → logprob: -9.376373291015625
    5. ',C' → logprob: -9.501373291015625
    6. ',
' → logprob: -10.376373291015625
    7. '   ' → logprob: -11.126373291015625
    8. 'def' → logprob: -11.751373291015625
    9. '):

' → logprob: -12.001373291015625
    10. '):
' → logprob: -13.001373291015625

Token 1477: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16415490210056305
    2. ' C' → logprob: -2.4141550064086914
    3. 'L' → logprob: -3.6641550064086914
    4. 'ED' → logprob: -4.289155006408691
    5. 'check' → logprob: -4.539155006408691
    6. ' check' → logprob: -5.414155006408691
    7. ' ED' → logprob: -5.789155006408691
    8. ' L' → logprob: -6.289155006408691
    9. 'CHECK' → logprob: -7.664155006408691
    10. 'E' → logprob: -7.789155006408691

Token 1478: '_S' (ID: 1875)
  Prédit: '_LENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -0.18400602042675018
    2. '_L' → logprob: -1.8090059757232666
    3. '_S' → logprob: -5.559006214141846
    4. 'L' → logprob: -8.309005737304688
    5. '_DICT' → logprob: -9.434005737304688
    6. '_length' → logprob: -10.684005737304688
    7. '_LEN' → logprob: -10.809005737304688
    8. 'Length' → logprob: -12.184005737304688
    9. '_Length' → logprob: -12.309005737304688
    10. 'ength' → logprob: -12.434005737304688

Token 1479: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.021202221512794495
    2. 'UM' → logprob: -4.021202087402344
    3. '_DICT' → logprob: -6.396202087402344
    4. 'dict' → logprob: -7.396202087402344
    5. 'D' → logprob: -8.896202087402344
    6. 'ICT' → logprob: -9.021202087402344
    7. '_dict' → logprob: -9.146202087402344
    8. 'IZE' → logprob: -9.271202087402344
    9. '
' → logprob: -10.396202087402344
    10. 'Q' → logprob: -10.646202087402344

Token 1480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ' ,' → logprob: -10.750041007995605
    3. ',C' → logprob: -11.750041007995605
    4. '):
' → logprob: -12.000041007995605
    5. '   ' → logprob: -12.625041007995605
    6. 'def' → logprob: -14.750041007995605
    7. ',
' → logprob: -14.750041007995605
    8. '):' → logprob: -15.625041007995605
    9. '_,' → logprob: -15.875041007995605
    10. ' ' → logprob: -16.12504005432129

Token 1481: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.057498395442962646
    2. ' C' → logprob: -2.9324984550476074
    3. 'check' → logprob: -6.682498455047607
    4. 'L' → logprob: -7.307498455047607
    5. ' check' → logprob: -7.682498455047607
    6. 'CHECK' → logprob: -9.80749797821045
    7. '   ' → logprob: -10.18249797821045
    8. ' ' → logprob: -10.55749797821045
    9. ' L' → logprob: -10.68249797821045
    10. 'Check' → logprob: -11.43249797821045

Token 1482: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.033866867423057556
    2. '_LENGTH' → logprob: -3.4088668823242188
    3. '_S' → logprob: -8.908866882324219
    4. 'L' → logprob: -10.283866882324219
    5. '_LEN' → logprob: -10.283866882324219
    6. '_Length' → logprob: -12.158866882324219
    7. 'Length' → logprob: -12.533866882324219
    8. '_DICT' → logprob: -13.158866882324219
    9. '_length' → logprob: -13.783866882324219
    10. '_' → logprob: -13.908866882324219

Token 1483: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.05552777647972107
    2. 'IST' → logprob: -3.555527687072754
    3. 'ENGTH' → logprob: -4.680527687072754
    4. 'ENG' → logprob: -5.305527687072754
    5. 'EN' → logprob: -5.680527687072754
    6. 'ICT' → logprob: -5.805527687072754
    7. 'E' → logprob: -5.930527687072754
    8. '
' → logprob: -8.055527687072754
    9. 'dict' → logprob: -8.305527687072754
    10. 'ENT' → logprob: -8.430527687072754

Token 1484: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35317111015319824
    2. ',' → logprob: -1.2281711101531982
    3. '):' → logprob: -5.728171348571777
    4. '   ' → logprob: -6.853171348571777
    5. '):
' → logprob: -8.853171348571777
    6. 'def' → logprob: -9.228171348571777
    7. '):

' → logprob: -9.978171348571777
    8. ',
' → logprob: -10.228171348571777
    9. ')' → logprob: -10.978171348571777
    10. ' ,' → logprob: -11.228171348571777

Token 1485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029787179082632065
    2. 'for' → logprob: -3.654787063598633
    3. 'def' → logprob: -6.029787063598633
    4. ' for' → logprob: -7.029787063598633
    5. '	for' → logprob: -9.154787063598633
    6. '
' → logprob: -9.654787063598633
    7. '```' → logprob: -11.904787063598633
    8. '(' → logprob: -13.029787063598633
    9. '    
' → logprob: -13.029787063598633
    10. ' def' → logprob: -13.279787063598633

Token 1486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018582642078399658
    2. 'res' → logprob: -4.768582820892334
    3. 'results' → logprob: -5.518582820892334
    4. '   ' → logprob: -5.768582820892334
    5. 'result' → logprob: -6.143582820892334
    6. 'ans' → logprob: -8.018582344055176
    7. 'answers' → logprob: -8.893582344055176
    8. ' for' → logprob: -9.018582344055176
    9. 'answer' → logprob: -11.393582344055176
    10. 'def' → logprob: -11.393582344055176

Token 1487: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10189543664455414
    2. ' c' → logprob: -2.351895332336426
    3. '   ' → logprob: -6.976895332336426
    4. '_,' → logprob: -8.351895332336426
    5. '_' → logprob: -9.226895332336426
    6. '_c' → logprob: -9.226895332336426
    7. '(c' → logprob: -9.351895332336426
    8. 'q' → logprob: -10.226895332336426
    9. ' ' → logprob: -10.226895332336426
    10. '	c' → logprob: -10.476895332336426

Token 1488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003981376066803932
    2. ',x' → logprob: -8.875397682189941
    3. ' ,' → logprob: -9.125397682189941
    4. ',y' → logprob: -9.750397682189941
    5. ',l' → logprob: -9.750397682189941
    6. ' in' → logprob: -10.875397682189941
    7. '_,' → logprob: -12.500397682189941
    8. ',q' → logprob: -12.750397682189941
    9. '   ' → logprob: -13.875397682189941
    10. 'in' → logprob: -13.875397682189941

Token 1489: ' pl' (ID: 633)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006831290200352669
    2. ' l' → logprob: -5.381831169128418
    3. 'x' → logprob: -6.131831169128418
    4. ' x' → logprob: -10.506831169128418
    5. '	l' → logprob: -13.381831169128418
    6. '_,' → logprob: -13.506831169128418
    7. '   ' → logprob: -13.631831169128418
    8. ' ' → logprob: -13.881831169128418
    9. '_l' → logprob: -13.881831169128418
    10. ',' → logprob: -14.131831169128418

Token 1490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012862174771726131
    2. ' ,' → logprob: -4.512862205505371
    3. '   ' → logprob: -6.637862205505371
    4. 'en' → logprob: -9.387862205505371
    5. 'r' → logprob: -9.512862205505371
    6. ' ' → logprob: -9.887862205505371
    7. 'ayers' → logprob: -10.262862205505371
    8. '  ' → logprob: -10.637862205505371
    9. '```' → logprob: -10.762862205505371
    10. '[' → logprob: -11.262862205505371

Token 1491: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.059410300105810165
    2. 'l' → logprob: -2.934410333633423
    3. 'xl' → logprob: -5.809410095214844
    4. ' x' → logprob: -7.434410095214844
    5. 'ql' → logprob: -8.559410095214844
    6. 'cl' → logprob: -9.059410095214844
    7. 'p' → logprob: -9.309410095214844
    8. ' l' → logprob: -9.434410095214844
    9. 'lx' → logprob: -9.434410095214844
    10. 'pl' → logprob: -9.559410095214844

Token 1492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.718606891809031e-05
    2. ' ,' → logprob: -9.750066757202148
    3. ',y' → logprob: -11.875066757202148
    4. '   ' → logprob: -14.500066757202148
    5. 'y' → logprob: -14.750066757202148
    6. ',x' → logprob: -14.750066757202148
    7. '_,' → logprob: -15.500066757202148
    8. 'x' → logprob: -17.00006675720215
    9. ' y' → logprob: -17.12506675720215
    10. ',
' → logprob: -17.37506675720215

Token 1493: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026258619502186775
    2. 'pr' → logprob: -4.77625846862793
    3. 'q' → logprob: -4.90125846862793
    4. 'py' → logprob: -4.90125846862793
    5. 'p' → logprob: -6.90125846862793
    6. ' y' → logprob: -7.27625846862793
    7. 'r' → logprob: -7.65125846862793
    8. 'ql' → logprob: -9.02625846862793
    9. 'cl' → logprob: -9.40125846862793
    10. 'pl' → logprob: -10.02625846862793

Token 1494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031985121313482523
    2. 'in' → logprob: -5.878198623657227
    3. '   ' → logprob: -8.378198623657227
    4. ':
' → logprob: -9.003198623657227
    5. ',' → logprob: -10.753198623657227
    6. ':' → logprob: -11.503198623657227
    7. '  ' → logprob: -12.628198623657227
    8. '       ' → logprob: -13.378198623657227
    9. ' ' → logprob: -13.503198623657227
    10. '
' → logprob: -14.253198623657227

Token 1495: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.00010807292710524052
    2. ' Query' → logprob: -9.250107765197754
    3. '
' → logprob: -12.625107765197754
    4. '	Query' → logprob: -12.625107765197754
    5. '(Query' → logprob: -13.625107765197754
    6. '<Query' → logprob: -13.750107765197754
    7. '_Query' → logprob: -13.875107765197754
    8. '.Query' → logprob: -14.625107765197754
    9. '   ' → logprob: -15.000107765197754
    10. ' ' → logprob: -15.250107765197754

Token 1496: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06602916866540909
    2. ':' → logprob: -2.8160290718078613
    3. '       ' → logprob: -6.191029071807861
    4. '   ' → logprob: -6.441029071807861
    5. ',' → logprob: -8.31602954864502
    6. '):
' → logprob: -9.06602954864502
    7. '():
' → logprob: -11.44102954864502
    8. ':

' → logprob: -11.81602954864502
    9. ' :
' → logprob: -11.94102954864502
    10. ':
' → logprob: -12.06602954864502

Token 1497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02910854108631611
    2. '   ' → logprob: -4.02910852432251
    3. '
' → logprob: -4.77910852432251
    4. 'l' → logprob: -6.65410852432251
    5. '```' → logprob: -7.40410852432251
    6. ':
' → logprob: -8.904109001159668
    7. ' l' → logprob: -9.654109001159668
    8. ':' → logprob: -10.029109001159668
    9. '        
' → logprob: -10.154109001159668
    10. ',' → logprob: -10.529109001159668

Token 1498: ' process' (ID: 2273)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03641572594642639
    2. '       ' → logprob: -3.5364158153533936
    3. '   ' → logprob: -6.9114155769348145
    4. 'ans' → logprob: -7.0364155769348145
    5. '           ' → logprob: -7.1614155769348145
    6. 'lc' → logprob: -7.2864155769348145
    7. 'lx' → logprob: -7.4114155769348145
    8. 'if' → logprob: -7.5364155769348145
    9. ' l' → logprob: -8.036416053771973
    10. 'min' → logprob: -8.286416053771973

Token 1499: '_single' (ID: 46053)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.12653197348117828
    2. '(c' → logprob: -4.001532077789307
    3. '_l' → logprob: -4.376532077789307
    4. '(x' → logprob: -4.376532077789307
    5. '_length' → logprob: -4.376532077789307
    6. '_c' → logprob: -5.001532077789307
    7. 'def' → logprob: -5.001532077789307
    8. '   ' → logprob: -5.251532077789307
    9. 'query' → logprob: -5.251532077789307
    10. '_queries' → logprob: -5.251532077789307

Token 1500: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.03321797400712967
    2. 'query' → logprob: -3.7832179069519043
    3. '(c' → logprob: -4.658217906951904
    4. '((' → logprob: -9.533218383789062
    5. '_' → logprob: -9.658218383789062
    6. '```' → logprob: -9.783218383789062
    7. '(' → logprob: -9.908218383789062
    8. '(x' → logprob: -10.158218383789062
    9. '_line' → logprob: -10.783218383789062
    10. '
' → logprob: -10.783218383789062

Token 1501: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10768184065818787
    2. '(' → logprob: -2.3576817512512207
    3. '(x' → logprob: -5.107681751251221
    4. '((' → logprob: -7.357681751251221
    5. '(
' → logprob: -8.482682228088379
    6. ' (' → logprob: -8.732682228088379
    7. '(p' → logprob: -9.232682228088379
    8. '_' → logprob: -9.607682228088379
    9. '_(' → logprob: -10.232682228088379
    10. '   ' → logprob: -10.357682228088379

Token 1502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017301602056249976
    2. ' ,' → logprob: -6.626729965209961
    3. '       ' → logprob: -8.251729965209961
    4. ',x' → logprob: -9.501729965209961
    5. ',p' → logprob: -10.376729965209961
    6. '   ' → logprob: -11.626729965209961
    7. ')' → logprob: -12.376729965209961
    8. ',y' → logprob: -12.751729965209961
    9. '```' → logprob: -12.876729965209961
    10. ',
' → logprob: -13.001729965209961

Token 1503: ' pl' (ID: 633)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.01645800843834877
    2. ' pl' → logprob: -4.141458034515381
    3. 'x' → logprob: -7.891458034515381
    4. ' x' → logprob: -11.016457557678223
    5. 'L' → logprob: -11.641457557678223
    6. '	pl' → logprob: -12.016457557678223
    7. '   ' → logprob: -12.766457557678223
    8. 'l' → logprob: -13.141457557678223
    9. 'PL' → logprob: -13.641457557678223
    10. 'plen' → logprob: -13.641457557678223

Token 1504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037621514638885856
    2. ' ,' → logprob: -8.125375747680664
    3. ',x' → logprob: -9.625375747680664
    4. '       ' → logprob: -12.250375747680664
    5. '```' → logprob: -12.375375747680664
    6. '   ' → logprob: -13.125375747680664
    7. ',y' → logprob: -14.125375747680664
    8. ',
' → logprob: -14.250375747680664
    9. '`,' → logprob: -15.250375747680664
    10. 'x' → logprob: -15.375375747680664

Token 1505: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009756559506058693
    2. ' x' → logprob: -4.634756565093994
    3. '	x' → logprob: -15.759756088256836
    4. '   ' → logprob: -16.009756088256836
    5. ' ' → logprob: -16.384756088256836
    6. '
' → logprob: -16.634756088256836
    7. ',' → logprob: -17.134756088256836
    8. ')x' → logprob: -18.009756088256836
    9. '    ' → logprob: -18.009756088256836
    10. '[' → logprob: -18.134756088256836

Token 1506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004067359026521444
    2. ',y' → logprob: -5.754067420959473
    3. ' ,' → logprob: -7.129067420959473
    4. '       ' → logprob: -10.004067420959473
    5. '```' → logprob: -11.129067420959473
    6. ',
' → logprob: -11.254067420959473
    7. '   ' → logprob: -12.754067420959473
    8. ',x' → logprob: -13.129067420959473
    9. 'y' → logprob: -13.129067420959473
    10. ',user' → logprob: -13.254067420959473

Token 1507: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.836499985889532e-05
    2. ' y' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.125059127807617
    4. '<|end|>' → logprob: -19.500059127807617
    5. '	y' → logprob: -19.750059127807617
    6. '       ' → logprob: -20.250059127807617
    7. '    ' → logprob: -20.250059127807617
    8. ' ' → logprob: -20.500059127807617
    9. '```' → logprob: -21.500059127807617
    10. 'x' → logprob: -21.625059127807617

Token 1508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07438572496175766
    2. ')' → logprob: -2.699385643005371
    3. '       ' → logprob: -5.699385643005371
    4. ')
' → logprob: -8.074385643005371
    5. '   ' → logprob: -8.449385643005371
    6. '):' → logprob: -8.699385643005371
    7. ',L' → logprob: -9.199385643005371
    8. '):
' → logprob: -9.824385643005371
    9. ',
' → logprob: -10.324385643005371
    10. ',)' → logprob: -10.449385643005371

Token 1509: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0013560713268816471
    2. 'C' → logprob: -7.00135612487793
    3. ' L' → logprob: -8.37635612487793
    4. ' LENGTH' → logprob: -9.12635612487793
    5. '   ' → logprob: -10.12635612487793
    6. 'length' → logprob: -10.75135612487793
    7. '  ' → logprob: -11.62635612487793
    8. '    ' → logprob: -11.75135612487793
    9. 'LEN' → logprob: -11.87635612487793
    10. 'MIN' → logprob: -12.25135612487793

Token 1510: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.005691284313797951
    2. 'C' → logprob: -5.255691051483154
    3. 'A' → logprob: -8.380691528320312
    4. ')' → logprob: -9.255691528320312
    5. '_C' → logprob: -9.880691528320312
    6. '_CA' → logprob: -10.630691528320312
    7. '_c' → logprob: -11.505691528320312
    8. ',' → logprob: -12.130691528320312
    9. ')
' → logprob: -12.630691528320312
    10. '_' → logprob: -12.755691528320312

Token 1511: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0022624251432716846
    2. ')' → logprob: -6.752262592315674
    3. ',' → logprob: -7.252262592315674
    4. 'func' → logprob: -8.502262115478516
    5. '_,' → logprob: -10.377262115478516
    6. ',_' → logprob: -10.502262115478516
    7. ')_' → logprob: -10.752262115478516
    8. '   ' → logprob: -10.877262115478516
    9. '```' → logprob: -11.377262115478516
    10. ')
' → logprob: -11.502262115478516

Token 1512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43017154932022095
    2. ')' → logprob: -1.0551714897155762
    3. '   ' → logprob: -7.055171489715576
    4. '       ' → logprob: -8.180171966552734
    5. ')
' → logprob: -9.430171966552734
    6. ',L' → logprob: -9.555171966552734
    7. ',)' → logprob: -9.805171966552734
    8. ' )' → logprob: -10.930171966552734
    9. ' ,' → logprob: -10.930171966552734
    10. ')L' → logprob: -11.305171966552734

Token 1513: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13379926979541779
    2. ' LENGTH' → logprob: -2.5087993144989014
    3. 'C' → logprob: -3.1337993144989014
    4. 'length' → logprob: -8.75879955291748
    5. ' L' → logprob: -10.00879955291748
    6. ' C' → logprob: -10.50879955291748
    7. 'LEN' → logprob: -10.63379955291748
    8. '.LENGTH' → logprob: -11.50879955291748
    9. '   ' → logprob: -11.50879955291748
    10. ' ' → logprob: -11.88379955291748

Token 1514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018852073117159307
    2. ')' → logprob: -9.125188827514648
    3. ' ,' → logprob: -10.125188827514648
    4. '       ' → logprob: -11.000188827514648
    5. ',
' → logprob: -12.125188827514648
    6. '           ' → logprob: -12.500188827514648
    7. 'def' → logprob: -12.625188827514648
    8. '   ' → logprob: -13.125188827514648
    9. ',C' → logprob: -13.500188827514648
    10. ',L' → logprob: -13.500188827514648

Token 1515: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009132515988312662
    2. ' C' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.500913619995117
    4. ' ' → logprob: -15.000913619995117
    5. '  ' → logprob: -15.250913619995117
    6. '
' → logprob: -15.750913619995117
    7. 'c' → logprob: -16.125913619995117
    8. '	C' → logprob: -16.250913619995117
    9. '    ' → logprob: -17.000913619995117
    10. ')' → logprob: -17.375913619995117

Token 1516: '_S' (ID: 1875)
  Prédit: '_L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.005448497366160154
    2. '_S' → logprob: -5.380448341369629
    3. '_DICT' → logprob: -7.380448341369629
    4. 'L' → logprob: -8.755448341369629
    5. 'DICT' → logprob: -11.380448341369629
    6. '_LENGTH' → logprob: -11.880448341369629
    7. '```' → logprob: -12.005448341369629
    8. 'LD' → logprob: -12.130448341369629
    9. '_D' → logprob: -12.505448341369629
    10. 'dict' → logprob: -12.755448341369629

Token 1517: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.00012880703434348106
    2. '_DICT' → logprob: -10.000128746032715
    3. 'DI' → logprob: -10.875128746032715
    4. 'DIST' → logprob: -10.875128746032715
    5. 'ICT' → logprob: -11.125128746032715
    6. 'dict' → logprob: -11.750128746032715
    7. 'S' → logprob: -12.250128746032715
    8. '
' → logprob: -12.250128746032715
    9. '_dict' → logprob: -13.000128746032715
    10. 'D' → logprob: -13.375128746032715

Token 1518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.50003433227539
    3. '   ' → logprob: -12.87503433227539
    4. ',C' → logprob: -13.50003433227539
    5. ',
' → logprob: -13.62503433227539
    6. '       ' → logprob: -14.25003433227539
    7. ',c' → logprob: -15.12503433227539
    8. '           ' → logprob: -15.62503433227539
    9. '_,' → logprob: -15.62503433227539
    10. ')' → logprob: -15.87503433227539

Token 1519: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01251376885920763
    2. ' C' → logprob: -4.387513637542725
    3. ' ' → logprob: -13.637514114379883
    4. '   ' → logprob: -13.637514114379883
    5. '
' → logprob: -14.637514114379883
    6. 'L' → logprob: -14.762514114379883
    7. '  ' → logprob: -14.887514114379883
    8. '       ' → logprob: -15.387514114379883
    9. '    ' → logprob: -16.137514114379883
    10. '     ' → logprob: -16.637514114379883

Token 1520: '_L' (ID: 4258)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04008007422089577
    2. 'LD' → logprob: -3.4150800704956055
    3. '_L' → logprob: -5.1650800704956055
    4. 'DICT' → logprob: -7.2900800704956055
    5. ' L' → logprob: -12.665080070495605
    6. 'dict' → logprob: -12.915080070495605
    7. '```' → logprob: -12.915080070495605
    8. '_DICT' → logprob: -13.165080070495605
    9. '
' → logprob: -13.540080070495605
    10. 'LObject' → logprob: -14.165080070495605

Token 1521: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.4742867052555084
    2. 'ICT' → logprob: -0.974286675453186
    3. '_DICT' → logprob: -9.224287033081055
    4. 'ECT' → logprob: -10.349287033081055
    5. 'IST' → logprob: -11.099287033081055
    6. 'dict' → logprob: -11.349287033081055
    7. '
' → logprob: -11.474287033081055
    8. 'DI' → logprob: -12.349287033081055
    9. '_dict' → logprob: -12.349287033081055
    10. 'ict' → logprob: -12.474287033081055

Token 1522: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025694756768643856
    2. '):' → logprob: -7.127569675445557
    3. ')
' → logprob: -7.252569675445557
    4. '   ' → logprob: -7.377569675445557
    5. ',' → logprob: -8.127569198608398
    6. '):
' → logprob: -9.252569198608398
    7. '       ' → logprob: -11.127569198608398
    8. ' )' → logprob: -12.252569198608398
    9. '[' → logprob: -12.627569198608398
    10. '  ' → logprob: -13.377569198608398

Token 1523: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005379011854529381
    2. '```' → logprob: -8.250537872314453
    3. ' def' → logprob: -9.000537872314453
    4. '   ' → logprob: -9.625537872314453
    5. '\' → logprob: -10.500537872314453
    6. '       ' → logprob: -10.875537872314453
    7. '
' → logprob: -11.000537872314453
    8. ':def' → logprob: -12.000537872314453
    9. '``' → logprob: -12.250537872314453
    10. '    
' → logprob: -13.000537872314453

Token 1524: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.028393179178237915
    2. 'def' → logprob: -3.778393268585205
    3. ' process' → logprob: -5.403393268585205
    4. 'for' → logprob: -8.028392791748047
    5. '
' → logprob: -9.528392791748047
    6. 'print' → logprob: -9.528392791748047
    7. 'pass' → logprob: -9.903392791748047
    8. ' def' → logprob: -10.528392791748047
    9. '_process' → logprob: -11.153392791748047
    10. ' for' → logprob: -11.528392791748047

Token 1525: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -3.8889261304575484e-06
    2. 'single' → logprob: -13.000003814697266
    3. '_' → logprob: -14.625003814697266
    4. 'Single' → logprob: -15.250003814697266
    5. '_SINGLE' → logprob: -15.250003814697266
    6. '_s' → logprob: -15.625003814697266
    7. '```' → logprob: -16.000003814697266
    8. '_multiple' → logprob: -16.250003814697266
    9. 'def' → logprob: -16.750003814697266
    10. '_queries' → logprob: -17.000003814697266

Token 1526: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -4.4849443838757e-06
    2. 'query' → logprob: -12.375004768371582
    3. '```' → logprob: -17.125003814697266
    4. '_question' → logprob: -17.250003814697266
    5. 'def' → logprob: -17.500003814697266
    6. 'Query' → logprob: -17.750003814697266
    7. '_token' → logprob: -17.875003814697266
    8. '$query' → logprob: -18.250003814697266
    9. '(query' → logprob: -18.250003814697266
    10. ' _' → logprob: -18.250003814697266

Token 1527: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003382038848940283
    2. '(' → logprob: -8.000338554382324
    3. '(
' → logprob: -13.375338554382324
    4. 'def' → logprob: -15.125338554382324
    5. '(q' → logprob: -16.000337600708008
    6. '(code' → logprob: -16.250337600708008
    7. '(def' → logprob: -16.375337600708008
    8. '(a' → logprob: -16.375337600708008
    9. '(C' → logprob: -16.500337600708008
    10. ' (' → logprob: -16.625337600708008

Token 1528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.62500286102295
    3. ',c' → logprob: -13.87500286102295
    4. ',p' → logprob: -15.50000286102295
    5. ',
' → logprob: -15.62500286102295
    6. '_,' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '‌,' → logprob: -18.625001907348633
    9. ',l' → logprob: -19.125001907348633
    10. ',n' → logprob: -19.500001907348633

Token 1529: ' pl' (ID: 633)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0619848296046257
    2. ' pl' → logprob: -2.8119847774505615
    3. '(pl' → logprob: -12.18698501586914
    4. '	pl' → logprob: -12.43698501586914
    5. 'p' → logprob: -13.06198501586914
    6. '<|end|>' → logprob: -13.18698501586914
    7. 'c' → logprob: -13.68698501586914
    8. 'l' → logprob: -14.18698501586914
    9. 'pluck' → logprob: -14.18698501586914
    10. '_pl' → logprob: -15.06198501586914

Token 1530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ',c' → logprob: -10.500036239624023
    3. ' ,' → logprob: -11.750036239624023
    4. ',x' → logprob: -14.750036239624023
    5. ',l' → logprob: -15.625036239624023
    6. 'c' → logprob: -15.750036239624023
    7. '_,' → logprob: -15.750036239624023
    8. ',p' → logprob: -16.125036239624023
    9. '   ' → logprob: -16.875036239624023
    10. ',
' → logprob: -17.750036239624023

Token 1531: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09711186587810516
    2. ' x' → logprob: -2.472111940383911
    3. 'l' → logprob: -5.097111701965332
    4. 'c' → logprob: -6.847111701965332
    5. ' l' → logprob: -7.222111701965332
    6. ' c' → logprob: -9.097111701965332
    7. 'p' → logprob: -10.347111701965332
    8. 'pl' → logprob: -10.722111701965332
    9. 'L' → logprob: -11.097111701965332
    10. ' pl' → logprob: -11.222111701965332

Token 1532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.721228368813172e-05
    2. ' ,' → logprob: -9.625086784362793
    3. ',y' → logprob: -10.875086784362793
    4. '   ' → logprob: -14.500086784362793
    5. ',l' → logprob: -14.625086784362793
    6. ',
' → logprob: -14.875086784362793
    7. '```' → logprob: -15.250086784362793
    8. '_,' → logprob: -15.750086784362793
    9. ',x' → logprob: -16.12508773803711
    10. 'def' → logprob: -17.00008773803711

Token 1533: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004309076175559312
    2. ' y' → logprob: -7.750431060791016
    3. 'x' → logprob: -15.875431060791016
    4. '   ' → logprob: -17.375431060791016
    5. ' ' → logprob: -18.250431060791016
    6. '  ' → logprob: -19.500431060791016
    7. '    ' → logprob: -19.625431060791016
    8. '<|end|>' → logprob: -19.875431060791016
    9. '	y' → logprob: -20.000431060791016
    10. 'L' → logprob: -20.375431060791016

Token 1534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003015001420862973
    2. '   ' → logprob: -9.000301361083984
    3. '):' → logprob: -9.125301361083984
    4. '):
' → logprob: -10.875301361083984
    5. ',l' → logprob: -11.125301361083984
    6. ',c' → logprob: -11.250301361083984
    7. ' ,' → logprob: -12.000301361083984
    8. ',
' → logprob: -13.125301361083984
    9. '_,' → logprob: -13.250301361083984
    10. '
' → logprob: -13.375301361083984

Token 1535: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01819770224392414
    2. ' L' → logprob: -4.018197536468506
    3. '   ' → logprob: -11.018198013305664
    4. 'def' → logprob: -11.893198013305664
    5. ' ' → logprob: -12.393198013305664
    6. 'length' → logprob: -12.893198013305664
    7. '	L' → logprob: -13.143198013305664
    8. 'lambda' → logprob: -13.143198013305664
    9. '  ' → logprob: -13.268198013305664
    10. '    ' → logprob: -13.393198013305664

Token 1536: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.0022219838574528694
    2. ',' → logprob: -6.627222061157227
    3. 'C' → logprob: -7.627222061157227
    4. '   ' → logprob: -8.752222061157227
    5. 'A' → logprob: -9.252222061157227
    6. '
' → logprob: -10.627222061157227
    7. ',
' → logprob: -11.002222061157227
    8. ',C' → logprob: -11.002222061157227
    9. '_CA' → logprob: -11.127222061157227
    10. '_C' → logprob: -11.127222061157227

Token 1537: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0015341434627771378
    2. 'func' → logprob: -6.6265339851379395
    3. ',' → logprob: -9.251534461975098
    4. 'Func' → logprob: -10.001534461975098
    5. 'def' → logprob: -11.001534461975098
    6. '_FUNC' → logprob: -11.376534461975098
    7. '_,' → logprob: -11.376534461975098
    8. '):
' → logprob: -12.126534461975098
    9. '```' → logprob: -12.126534461975098
    10. ')' → logprob: -12.626534461975098

Token 1538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039472561329603195
    2. '):' → logprob: -4.039472579956055
    3. '):
' → logprob: -4.039472579956055
    4. '   ' → logprob: -5.789472579956055
    5. 'def' → logprob: -9.039472579956055
    6. ')' → logprob: -9.914472579956055
    7. ',l' → logprob: -10.289472579956055
    8. '):
' → logprob: -10.789472579956055
    9. ',L' → logprob: -10.789472579956055
    10. ' ,' → logprob: -10.789472579956055

Token 1539: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01828584633767605
    2. ' LENGTH' → logprob: -4.393285751342773
    3. 'C' → logprob: -6.143285751342773
    4. 'length' → logprob: -6.393285751342773
    5. 'MIN' → logprob: -7.143285751342773
    6. ' L' → logprob: -7.518285751342773
    7. 'LEN' → logprob: -9.268285751342773
    8. ' length' → logprob: -9.518285751342773
    9. 'c' → logprob: -9.643285751342773
    10. 'Length' → logprob: -10.018285751342773

Token 1540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. ' ,' → logprob: -10.875036239624023
    3. ',c' → logprob: -12.500036239624023
    4. '   ' → logprob: -12.625036239624023
    5. 'def' → logprob: -13.000036239624023
    6. '):
' → logprob: -13.375036239624023
    7. ',L' → logprob: -13.500036239624023
    8. ',
' → logprob: -14.125036239624023
    9. ',y' → logprob: -14.500036239624023
    10. ',x' → logprob: -14.750036239624023

Token 1541: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09578471630811691
    2. ' C' → logprob: -2.5957846641540527
    3. 'L' → logprob: -4.220784664154053
    4. ' L' → logprob: -7.470784664154053
    5. '
' → logprob: -7.720784664154053
    6. 'x' → logprob: -8.220785140991211
    7. ' ' → logprob: -8.720785140991211
    8. '   ' → logprob: -8.845785140991211
    9. 'MIN' → logprob: -9.595785140991211
    10. 'MAX' → logprob: -9.595785140991211

Token 1542: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.05282403528690338
    2. '_DICT' → logprob: -3.052824020385742
    3. '_L' → logprob: -6.177824020385742
    4. 'DICT' → logprob: -6.427824020385742
    5. 'dict' → logprob: -8.177824020385742
    6. '_D' → logprob: -8.677824020385742
    7. '```' → logprob: -11.177824020385742
    8. '   ' → logprob: -11.302824020385742
    9. 'S' → logprob: -11.552824020385742
    10. '_dict' → logprob: -11.927824020385742

Token 1543: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0007872331188991666
    2. '_DICT' → logprob: -7.250787258148193
    3. 'ICT' → logprob: -10.250786781311035
    4. '_dict' → logprob: -11.000786781311035
    5. 'dict' → logprob: -11.625786781311035
    6. 'DEF' → logprob: -12.125786781311035
    7. 'DI' → logprob: -13.375786781311035
    8. 'Dict' → logprob: -13.625786781311035
    9. '
' → logprob: -14.125786781311035
    10. 'IST' → logprob: -14.250786781311035

Token 1544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.117345684382599e-05
    2. ',c' → logprob: -11.250020980834961
    3. ' ,' → logprob: -12.250020980834961
    4. ',C' → logprob: -13.000020980834961
    5. ',
' → logprob: -15.625020980834961
    6. 'c' → logprob: -15.625020980834961
    7. ',y' → logprob: -16.00002098083496
    8. '_,' → logprob: -16.25002098083496
    9. ',x' → logprob: -16.75002098083496
    10. 'C' → logprob: -16.87502098083496

Token 1545: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00863336119800806
    2. ' C' → logprob: -4.758633136749268
    3. '
' → logprob: -11.758633613586426
    4. ' ' → logprob: -12.383633613586426
    5. '   ' → logprob: -12.883633613586426
    6. 'L' → logprob: -13.883633613586426
    7. '  ' → logprob: -13.883633613586426
    8. '
' → logprob: -14.633633613586426
    9. '    ' → logprob: -15.008633613586426
    10. '	C' → logprob: -15.258633613586426

Token 1546: '_L' (ID: 4258)
  Prédit: 'DICT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.18541081249713898
    2. '_L' → logprob: -2.310410737991333
    3. '_DICT' → logprob: -2.810410737991333
    4. 'L' → logprob: -5.060410976409912
    5. '_D' → logprob: -5.935410976409912
    6. 'LD' → logprob: -8.060410499572754
    7. 'DI' → logprob: -8.560410499572754
    8. 'dict' → logprob: -8.685410499572754
    9. '
' → logprob: -10.310410499572754
    10. '_dict' → logprob: -10.810410499572754

Token 1547: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.090602345764637
    2. 'ICT' → logprob: -2.465602397918701
    3. 'ECT' → logprob: -7.715602397918701
    4. 'IST' → logprob: -7.840602397918701
    5. 'C' → logprob: -8.590601921081543
    6. '_DICT' → logprob: -8.590601921081543
    7. '
' → logprob: -9.590601921081543
    8. '   ' → logprob: -9.715601921081543
    9. '_dict' → logprob: -9.715601921081543
    10. 'dict' → logprob: -9.840601921081543

Token 1548: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520921528339386
    2. '):' → logprob: -1.5020921230316162
    3. '):
' → logprob: -8.877092361450195
    4. '   ' → logprob: -11.502092361450195
    5. ',' → logprob: -12.127092361450195
    6. '):

' → logprob: -12.377092361450195
    7. ')' → logprob: -13.002092361450195
    8. 'def' → logprob: -14.127092361450195
    9. ':' → logprob: -15.877092361450195
    10. '():
' → logprob: -16.127092361450195

Token 1549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02795473113656044
    2. 'l' → logprob: -3.6529548168182373
    3. '	l' → logprob: -7.652954578399658
    4. 'if' → logprob: -7.902954578399658
    5. ' l' → logprob: -8.527955055236816
    6. 'L' → logprob: -8.652955055236816
    7. 'lc' → logprob: -8.902955055236816
    8. ' if' → logprob: -10.152955055236816
    9. 'p' → logprob: -10.527955055236816
    10. 'ans' → logprob: -10.777955055236816

Token 1550: ' ind' (ID: 1383)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.060296282172203064
    2. '   ' → logprob: -2.9352962970733643
    3. 'lc' → logprob: -6.185296058654785
    4. 'if' → logprob: -6.685296058654785
    5. ' l' → logprob: -6.810296058654785
    6. 'p' → logprob: -8.935296058654785
    7. 'ans' → logprob: -9.060296058654785
    8. 'pl' → logprob: -9.310296058654785
    9. '
' → logprob: -9.935296058654785
    10. 'res' → logprob: -10.060296058654785

Token 1551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025491569191217422
    2. '=' → logprob: -3.90049147605896
    3. '_x' → logprob: -6.150491714477539
    4. '_' → logprob: -6.525491714477539
    5. 'x' → logprob: -7.025491714477539
    6. '_l' → logprob: -8.900491714477539
    7. '   ' → logprob: -9.025491714477539
    8. '_c' → logprob: -10.275491714477539
    9. '1' → logprob: -10.525491714477539
    10. ',' → logprob: -10.900491714477539

Token 1552: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00694139814004302
    2. ' L' → logprob: -5.006941318511963
    3. '   ' → logprob: -9.131941795349121
    4. 'x' → logprob: -10.006941795349121
    5. 'c' → logprob: -10.756941795349121
    6. '(L' → logprob: -11.506941795349121
    7. '[L' → logprob: -12.131941795349121
    8. 'pl' → logprob: -12.381941795349121
    9. '0' → logprob: -12.631941795349121
    10. 'y' → logprob: -12.819441795349121

Token 1553: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.0067501855082809925
    2. 'C' → logprob: -5.131750106811523
    3. 'x' → logprob: -8.131750106811523
    4. '(x' → logprob: -9.006750106811523
    5. '[x' → logprob: -9.506750106811523
    6. 'c' → logprob: -9.756750106811523
    7. ' x' → logprob: -10.381750106811523
    8. 'A' → logprob: -10.381750106811523
    9. '[' → logprob: -10.506750106811523
    10. 'ca' → logprob: -10.756750106811523

Token 1554: '_func' (ID: 22252)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.25254324078559875
    2. '_func' → logprob: -1.6275432109832764
    3. '(' → logprob: -3.8775432109832764
    4. 'func' → logprob: -6.0025434494018555
    5. ' (' → logprob: -7.3775434494018555
    6. 'x' → logprob: -7.6275434494018555
    7. '(
' → logprob: -7.7525434494018555
    8. '(c' → logprob: -7.8775434494018555
    9. '(func' → logprob: -8.502543449401855
    10. '(l' → logprob: -8.502543449401855

Token 1555: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008620307198725641
    2. 'x' → logprob: -7.250862121582031
    3. '(' → logprob: -9.125862121582031
    4. '(
' → logprob: -10.750862121582031
    5. ' (' → logprob: -11.125862121582031
    6. ' x' → logprob: -12.750862121582031
    7. '((' → logprob: -13.875862121582031
    8. '   ' → logprob: -14.500862121582031
    9. '(pl' → logprob: -14.500862121582031
    10. '(int' → logprob: -15.250862121582031

Token 1556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017372341826558113
    2. ',y' → logprob: -5.392372131347656
    3. '(x' → logprob: -5.392372131347656
    4. '(y' → logprob: -5.767372131347656
    5. ' ,' → logprob: -6.392372131347656
    6. ')[' → logprob: -7.017372131347656
    7. '(' → logprob: -7.392372131347656
    8. ',[' → logprob: -7.767372131347656
    9. '[' → logprob: -8.517372131347656
    10. ',x' → logprob: -8.642372131347656

Token 1557: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0025906353257596493
    2. ' y' → logprob: -6.002590656280518
    3. 'c' → logprob: -9.62759017944336
    4. 'x' → logprob: -10.25259017944336
    5. '   ' → logprob: -12.00259017944336
    6. '
' → logprob: -12.62759017944336
    7. '    ' → logprob: -14.00259017944336
    8. 'ind' → logprob: -14.50259017944336
    9. '  ' → logprob: -14.87759017944336
    10. ' ' → logprob: -14.87759017944336

Token 1558: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.06044475734233856
    2. ',' → logprob: -3.6854448318481445
    3. '(c' → logprob: -4.3104448318481445
    4. '(' → logprob: -5.0604448318481445
    5. '[' → logprob: -5.6854448318481445
    6. '   ' → logprob: -5.9354448318481445
    7. ')
' → logprob: -6.6854448318481445
    8. ' )[' → logprob: -6.8104448318481445
    9. '(x' → logprob: -6.9354448318481445
    10. '()[' → logprob: -6.9354448318481445

Token 1559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '
' → logprob: -13.375003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '0' → logprob: -14.875003814697266
    5. '```' → logprob: -14.875003814697266
    6. '   ' → logprob: -15.625003814697266
    7. '' → logprob: -15.937503814697266
    8. '-' → logprob: -16.062503814697266
    9. '
' → logprob: -17.000003814697266
    10. '2' → logprob: -17.125003814697266

Token 1560: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9070990681648254
    2. ']' → logprob: -1.4070990085601807
    3. '   ' → logprob: -1.4070990085601807
    4. ']
' → logprob: -2.7820990085601807
    5. ')' → logprob: -3.5320990085601807
    6. ')
' → logprob: -4.40709924697876
    7. ',' → logprob: -7.03209924697876
    8. 'def' → logprob: -7.78209924697876
    9. '<|end|>' → logprob: -7.90709924697876
    10. ')]' → logprob: -8.282098770141602

Token 1561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04558062180876732
    2. 'if' → logprob: -3.9205806255340576
    3. '
' → logprob: -4.1705803871154785
    4. ' if' → logprob: -5.0455803871154785
    5. 'p' → logprob: -7.6705803871154785
    6. '```' → logprob: -7.9205803871154785
    7. '    
' → logprob: -8.170580863952637
    8. 'val' → logprob: -8.295580863952637
    9. 'x' → logprob: -8.795580863952637
    10. 'c' → logprob: -8.795580863952637

Token 1562: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6500551700592041
    2. 'ans' (adapté à ' ans') → logprob: -2.025055170059204
    3. '   ' → logprob: -2.150055170059204
    4. 'res' → logprob: -2.650055170059204
    5. 'length' → logprob: -3.525055170059204
    6. 'val' → logprob: -4.025054931640625
    7. 'total' → logprob: -4.025054931640625
    8. 'dist' → logprob: -4.150054931640625
    9. 'key' → logprob: -4.525054931640625
    10. 'pl' → logprob: -4.525054931640625

Token 1563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28540679812431335
    2. '=' → logprob: -1.4104068279266357
    3. '   ' → logprob: -5.910406589508057
    4. '_' → logprob: -6.910406589508057
    5. '```' → logprob: -8.785407066345215
    6. '    ' → logprob: -9.285407066345215
    7. '_space' → logprob: -9.535407066345215
    8. ' ' → logprob: -9.785407066345215
    9. ',' → logprob: -10.535407066345215
    10. ')' → logprob: -11.285407066345215

Token 1564: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6709814667701721
    2. '0' → logprob: -0.7959814667701721
    3. 'pl' → logprob: -4.170981407165527
    4. 'length' → logprob: -5.045981407165527
    5. 'max' → logprob: -5.795981407165527
    6. '-' → logprob: -5.795981407165527
    7. 'float' → logprob: -6.170981407165527
    8. '(' → logprob: -6.295981407165527
    9. '"L' → logprob: -7.420981407165527
    10. '(L' → logprob: -7.670981407165527

Token 1565: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12539835274219513
    2. 'pl' → logprob: -2.7503983974456787
    3. '0' → logprob: -3.8753983974456787
    4. 'length' → logprob: -4.5003981590271
    5. 'C' → logprob: -5.2503981590271
    6. ' LENGTH' → logprob: -5.5003981590271
    7. 'max' → logprob: -6.1253981590271
    8. 'PL' → logprob: -6.5003981590271
    9. '(' → logprob: -6.7503981590271
    10. '-' → logprob: -6.7503981590271

Token 1566: 'ENGTH' (ID: 15789)
  Prédit: 'ENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENGTH' → logprob: -0.11594048887491226
    2. '[ind' → logprob: -2.365940570831299
    3. 'EN' → logprob: -4.865940570831299
    4. 'ength' → logprob: -5.115940570831299
    5. 'ENG' → logprob: -6.990940570831299
    6. 'IND' → logprob: -8.74094009399414
    7. '(ind' → logprob: -8.86594009399414
    8. '[length' → logprob: -8.99094009399414
    9. '   ' → logprob: -9.49094009399414
    10. 'E' → logprob: -9.49094009399414

Token 1567: '[x' (ID: 17295)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.0005931860650889575
    2. '[' → logprob: -8.500593185424805
    3. ')' → logprob: -9.000593185424805
    4. 'ind' → logprob: -9.875593185424805
    5. ')[' → logprob: -10.000593185424805
    6. '   ' → logprob: -10.500593185424805
    7. '
' → logprob: -10.625593185424805
    8. ' [' → logprob: -10.750593185424805
    9. '[x' → logprob: -11.000593185424805
    10. '+' → logprob: -11.500593185424805

Token 1568: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014499826356768608
    2. '-' → logprob: -4.639499664306641
    3. ' +' → logprob: -5.889499664306641
    4. '+' → logprob: -7.014499664306641
    5. ')' → logprob: -7.764499664306641
    6. ' if' → logprob: -8.51449966430664
    7. ' -
' → logprob: -9.13949966430664
    8. 'if' → logprob: -9.51449966430664
    9. ' ' → logprob: -10.01449966430664
    10. ',' → logprob: -10.26449966430664

Token 1569: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020153148099780083
    2. '-' → logprob: -4.020153045654297
    3. ' +' → logprob: -6.770153045654297
    4. '+' → logprob: -7.770153045654297
    5. ' if' → logprob: -8.020153045654297
    6. '-c' → logprob: -10.895153045654297
    7. ' ' → logprob: -11.270153045654297
    8. 'if' → logprob: -11.270153045654297
    9. '-pl' → logprob: -11.395153045654297
    10. ' -
' → logprob: -11.770153045654297

Token 1570: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06226063147187233
    2. ' LENGTH' → logprob: -2.812260627746582
    3. '_LENGTH' → logprob: -10.187260627746582
    4. ''' → logprob: -10.312260627746582
    5. 'length' → logprob: -10.437260627746582
    6. '.LENGTH' → logprob: -10.687260627746582
    7. '"' → logprob: -10.937260627746582
    8. '   ' → logprob: -10.937260627746582
    9. ' L' → logprob: -10.937260627746582
    10. ' ' → logprob: -11.062260627746582

Token 1571: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.010957857593894005
    2. '[x' → logprob: -4.760957717895508
    3. '[ind' → logprob: -6.260957717895508
    4. '[' → logprob: -8.010957717895508
    5. 'y' → logprob: -10.260957717895508
    6. ')' → logprob: -11.135957717895508
    7. '   ' → logprob: -11.260957717895508
    8. '+y' → logprob: -11.885957717895508
    9. '[c' → logprob: -12.010957717895508
    10. '```' → logprob: -12.135957717895508

Token 1572: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01285595167428255
    2. '-' → logprob: -4.5128560066223145
    3. ')' → logprob: -6.3878560066223145
    4. '   ' → logprob: -9.387855529785156
    5. ' ' → logprob: -11.262855529785156
    6. ')-' → logprob: -11.887855529785156
    7. ')-(' → logprob: -12.012855529785156
    8. '    ' → logprob: -12.262855529785156
    9. ' )' → logprob: -12.512855529785156
    10. '  ' → logprob: -13.762855529785156

Token 1573: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016506429761648178
    2. '-' → logprob: -4.141506195068359
    3. '   ' → logprob: -8.26650619506836
    4. ')' → logprob: -8.76650619506836
    5. ' ' → logprob: -10.64150619506836
    6. ')-(' → logprob: -11.39150619506836
    7. '    ' → logprob: -12.26650619506836
    8. ' +' → logprob: -12.51650619506836
    9. ')-' → logprob: -12.51650619506836
    10. '+' → logprob: -12.64150619506836

Token 1574: ' LENGTH' (ID: 173737)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06964604556560516
    2. ' ' → logprob: -2.819646120071411
    3. '(' → logprob: -5.944645881652832
    4. 'L' → logprob: -6.194645881652832
    5. ' (' → logprob: -6.569645881652832
    6. ' LENGTH' → logprob: -7.069645881652832
    7. '(L' → logprob: -7.944645881652832
    8. ' L' → logprob: -8.694645881652832
    9. '   ' → logprob: -9.444645881652832
    10. 'C' → logprob: -10.819645881652832

Token 1575: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -1.0564331205387134e-05
    2. 'ind' → logprob: -11.75001049041748
    3. '[' → logprob: -13.37501049041748
    4. '(ind' → logprob: -15.25001049041748
    5. '
' → logprob: -15.50001049041748
    6. '[
' → logprob: -15.62501049041748
    7. ' [' → logprob: -16.125011444091797
    8. ' ind' → logprob: -16.750011444091797
    9. '```' → logprob: -17.000011444091797
    10. '[l' → logprob: -17.125011444091797

Token 1576: ']*' (ID: 18579)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08762135356664658
    2. '-' → logprob: -2.7126214504241943
    3. '[ind' → logprob: -4.462621212005615
    4. '*' → logprob: -5.462621212005615
    5. '[' → logprob: -7.212621212005615
    6. '   ' → logprob: -7.837621212005615
    7. ')' → logprob: -8.337621688842773
    8. ' *' → logprob: -8.712621688842773
    9. ' ' → logprob: -9.712621688842773
    10. '    ' → logprob: -10.462621688842773

Token 1577: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020663968462031335
    2. ' ' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.00020694732666
    4. '  ' → logprob: -14.87520694732666
    5. '
' → logprob: -15.87520694732666
    6. '3' → logprob: -16.500205993652344
    7. ' ' → logprob: -17.000205993652344
    8. '	' → logprob: -17.500205993652344
    9. '```' → logprob: -17.562705993652344
    10. '1' → logprob: -17.687705993652344

Token 1578: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.825387716293335
    2. ' +' → logprob: -1.200387716293335
    3. ' -' → logprob: -1.575387716293335
    4. ' if' → logprob: -3.575387716293335
    5. '+' → logprob: -4.575387954711914
    6. ')
' → logprob: -4.825387954711914
    7. ' )' → logprob: -6.450387954711914
    8. '   ' → logprob: -6.700387954711914
    9. 'if' → logprob: -6.825387954711914
    10. ')+' → logprob: -6.825387954711914

Token 1579: '          ' (ID: 3550)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8823218941688538
    2. ' -' → logprob: -1.007321834564209
    3. ' +' → logprob: -1.757321834564209
    4. '+' → logprob: -3.757321834564209
    5. '-' → logprob: -4.632321834564209
    6. '   ' → logprob: -5.132321834564209
    7. ' if' → logprob: -5.632321834564209
    8. ')+' → logprob: -6.507321834564209
    9. '```' → logprob: -6.757321834564209
    10. ')
' → logprob: -6.757321834564209

Token 1580: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2901338040828705
    2. ' +' → logprob: -1.9151338338851929
    3. ')' → logprob: -3.4151337146759033
    4. '+' (adapté à ' +') → logprob: -3.5401337146759033
    5. '-' → logprob: -3.7901337146759033
    6. ' if' → logprob: -4.915133953094482
    7. '   ' → logprob: -5.665133953094482
    8. '           ' → logprob: -6.290133953094482
    9. '          ' → logprob: -6.415133953094482
    10. ')
' → logprob: -6.665133953094482

Token 1581: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7752498388290405
    2. 'C' → logprob: -0.9002498388290405
    3. '(pl' → logprob: -3.15024995803833
    4. 'pl' → logprob: -3.27524995803833
    5. 'max' → logprob: -4.27524995803833
    6. ' (' → logprob: -4.77524995803833
    7. '(' → logprob: -4.77524995803833
    8. ' C' → logprob: -5.40024995803833
    9. '(max' → logprob: -6.02524995803833
    10. '((' → logprob: -6.02524995803833

Token 1582: 'C' (ID: 34)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.6393346786499023
    2. 'C' → logprob: -0.8893346786499023
    3. '(pl' → logprob: -3.3893346786499023
    4. '(C' → logprob: -4.264334678649902
    5. '0' → logprob: -6.014334678649902
    6. 'L' → logprob: -6.139334678649902
    7. '(' → logprob: -6.264334678649902
    8. 'PL' → logprob: -6.639334678649902
    9. ' C' → logprob: -6.764334678649902
    10. ' pl' → logprob: -7.514334678649902

Token 1583: '_S' (ID: 1875)
  Prédit: '_L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.28411370515823364
    2. '_S' → logprob: -1.4091136455535889
    3. '_' → logprob: -6.534113883972168
    4. '_LENGTH' → logprob: -7.159113883972168
    5. '```' → logprob: -8.409113883972168
    6. '[_' → logprob: -9.534113883972168
    7. ' _' → logprob: -9.784113883972168
    8. '_C' → logprob: -10.159113883972168
    9. '_[' → logprob: -10.409113883972168
    10. 'L' → logprob: -10.659113883972168

Token 1584: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.029033496975898743
    2. '[(' → logprob: -3.9040334224700928
    3. '_DICT' → logprob: -5.279033660888672
    4. '[' → logprob: -6.029033660888672
    5. '_dict' → logprob: -8.404033660888672
    6. 'DI' → logprob: -8.904033660888672
    7. '[c' → logprob: -9.529033660888672
    8. '   ' → logprob: -9.904033660888672
    9. 'D' → logprob: -10.029033660888672
    10. '[_' → logprob: -10.154033660888672

Token 1585: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.030047018080949783
    2. '.get' → logprob: -3.5300469398498535
    3. '[
' → logprob: -9.280047416687012
    4. '[' → logprob: -9.655047416687012
    5. ' [(' → logprob: -9.655047416687012
    6. '[((' → logprob: -11.030047416687012
    7. '((' → logprob: -11.405047416687012
    8. 'get' → logprob: -11.780047416687012
    9. '   ' → logprob: -12.030047416687012
    10. '.' → logprob: -12.405047416687012

Token 1586: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0027014471124857664
    2. ' ((' → logprob: -6.002701282501221
    3. ' (' → logprob: -9.502701759338379
    4. '(x' → logprob: -10.002701759338379
    5. '(' → logprob: -10.127701759338379
    6. '   ' → logprob: -10.877701759338379
    7. '[(' → logprob: -11.002701759338379
    8. ')((' → logprob: -11.877701759338379
    9. '(((' → logprob: -12.127701759338379
    10. ' ' → logprob: -12.627701759338379

Token 1587: 'x' (ID: 87)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.007746579125523567
    2. '(ind' → logprob: -5.257746696472168
    3. 'x' → logprob: -6.257746696472168
    4. ' ind' → logprob: -7.757746696472168
    5. '[ind' → logprob: -9.007746696472168
    6. '(x' → logprob: -11.632746696472168
    7. ''ind' → logprob: -11.882746696472168
    8. 'indent' → logprob: -12.007746696472168
    9. 'indt' → logprob: -12.507746696472168
    10. '(' → logprob: -13.007746696472168

Token 1588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017021162435412407
    2. ',c' → logprob: -4.142021179199219
    3. ' ,' → logprob: -7.017021179199219
    4. '),' → logprob: -10.767021179199219
    5. '',' → logprob: -11.392021179199219
    6. '`,' → logprob: -11.767021179199219
    7. ',(' → logprob: -12.017021179199219
    8. 'c' → logprob: -12.267021179199219
    9. ',x' → logprob: -12.267021179199219
    10. '),(' → logprob: -12.392021179199219

Token 1589: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005653033731505275
    2. ' c' → logprob: -7.500565528869629
    3. '(c' → logprob: -12.125565528869629
    4. '   ' → logprob: -12.875565528869629
    5. ')c' → logprob: -13.625565528869629
    6. '	c' → logprob: -14.750565528869629
    7. ' ' → logprob: -14.813065528869629
    8. '  ' → logprob: -14.938065528869629
    9. ')' → logprob: -15.375565528869629
    10. '(' → logprob: -15.563065528869629

Token 1590: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00012558852904476225
    2. '       ' → logprob: -10.500125885009766
    3. ' ),' → logprob: -10.625125885009766
    4. '))' → logprob: -10.875125885009766
    5. ''),' → logprob: -11.375125885009766
    6. '           ' → logprob: -11.500125885009766
    7. ')' → logprob: -11.625125885009766
    8. '   ' → logprob: -12.000125885009766
    9. ',),' → logprob: -12.375125885009766
    10. '          ' → logprob: -12.875125885009766

Token 1591: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012020161375403404
    2. ' ' → logprob: -6.75120210647583
    3. ')' → logprob: -10.876201629638672
    4. '   ' → logprob: -12.501201629638672
    5. '          ' → logprob: -13.626201629638672
    6. '           ' → logprob: -13.938701629638672
    7. '1' → logprob: -14.251201629638672
    8. '  ' → logprob: -14.313701629638672
    9. '       ' → logprob: -14.376201629638672
    10. '         ' → logprob: -14.626201629638672

Token 1592: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002820736262947321
    2. ' ' → logprob: -8.250282287597656
    3. ')' → logprob: -11.125282287597656
    4. '   ' → logprob: -13.375282287597656
    5. '           ' → logprob: -14.125282287597656
    6. '          ' → logprob: -14.250282287597656
    7. '       ' → logprob: -14.500282287597656
    8. '         ' → logprob: -15.187782287597656
    9. '  ' → logprob: -15.250282287597656
    10. '        ' → logprob: -15.375282287597656

Token 1593: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010204474441707134
    2. ' -' → logprob: -5.385204315185547
    3. '-' → logprob: -5.635204315185547
    4. ' )' → logprob: -7.635204315185547
    5. '-)' → logprob: -7.635204315185547
    6. '))' → logprob: -8.135204315185547
    7. '          ' → logprob: -8.635204315185547
    8. ')-' → logprob: -8.760204315185547
    9. '+' → logprob: -9.135204315185547
    10. '   ' → logprob: -9.260204315185547

Token 1594: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10242550075054169
    2. '-' → logprob: -2.3524255752563477
    3. '+' → logprob: -7.102425575256348
    4. ' +' → logprob: -7.352425575256348
    5. '          ' → logprob: -8.727425575256348
    6. ')' → logprob: -8.852425575256348
    7. '   ' → logprob: -9.227425575256348
    8. '```' → logprob: -9.727425575256348
    9. '*' → logprob: -9.852425575256348
    10. ' ' → logprob: -10.227425575256348

Token 1595: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03515522554516792
    2. ' C' → logprob: -3.4101552963256836
    3. '0' → logprob: -8.035155296325684
    4. '-C' → logprob: -8.160155296325684
    5. '-' → logprob: -8.285155296325684
    6. ' -' → logprob: -9.160155296325684
    7. '          ' → logprob: -9.285155296325684
    8. '   ' → logprob: -9.660155296325684
    9. ' ' → logprob: -9.910155296325684
    10. '(C' → logprob: -10.535155296325684

Token 1596: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0008594118990004063
    2. '_L' → logprob: -7.250859260559082
    3. ''_' → logprob: -9.250859260559082
    4. '```' → logprob: -10.875859260559082
    5. '`' → logprob: -11.375859260559082
    6. 'L' → logprob: -12.625859260559082
    7. '``' → logprob: -12.625859260559082
    8. 'get' → logprob: -12.875859260559082
    9. 'S' → logprob: -12.875859260559082
    10. ''S' → logprob: -13.250859260559082

Token 1597: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0016719686100259423
    2. '_DICT' → logprob: -6.87667179107666
    3. '_S' → logprob: -9.00167179107666
    4. 'S' → logprob: -9.37667179107666
    5. 'dict' → logprob: -9.50167179107666
    6. 'SD' → logprob: -9.87667179107666
    7. 'DI' → logprob: -9.87667179107666
    8. 'L' → logprob: -9.87667179107666
    9. '_dict' → logprob: -10.00167179107666
    10. '_D' → logprob: -10.37667179107666

Token 1598: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -11.37502384185791
    3. 'get' → logprob: -11.62502384185791
    4. ' .' → logprob: -12.75002384185791
    5. '   ' → logprob: -14.87502384185791
    6. ').' → logprob: -16.750024795532227
    7. '[(' → logprob: -16.875024795532227
    8. '`.' → logprob: -17.375024795532227
    9. '
' → logprob: -17.500024795532227
    10. '>.' → logprob: -17.625024795532227

Token 1599: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.012224478647112846
    2. '(' → logprob: -5.2622246742248535
    3. ' ((' → logprob: -5.6372246742248535
    4. ' (' → logprob: -5.8872246742248535
    5. ''' → logprob: -7.8872246742248535
    6. ')' → logprob: -9.637224197387695
    7. '(space' → logprob: -9.637224197387695
    8. '[(' → logprob: -10.512224197387695
    9. '(x' → logprob: -10.762224197387695
    10. '(
' → logprob: -11.137224197387695

Token 1600: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018123905174434185
    2. '(y' → logprob: -6.75181245803833
    3. ' y' → logprob: -7.75181245803833
    4. 'x' → logprob: -9.626811981201172
    5. '(ind' → logprob: -9.626811981201172
    6. 'ind' → logprob: -10.251811981201172
    7. '(x' → logprob: -11.126811981201172
    8. ' (' → logprob: -11.751811981201172
    9. '
' → logprob: -12.876811981201172
    10. ''y' → logprob: -13.001811981201172

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005465993890538812
    2. ',c' → logprob: -7.625546455383301
    3. ' ,' → logprob: -10.0005464553833
    4. ',x' → logprob: -12.0005464553833
    5. 'c' → logprob: -12.8755464553833
    6. '   ' → logprob: -13.5005464553833
    7. '`,' → logprob: -14.0005464553833
    8. ' ' → logprob: -15.0005464553833
    9. '',' → logprob: -15.0005464553833
    10. '       ' → logprob: -15.2505464553833

Token 1602: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007175540085881948
    2. ' c' → logprob: -7.250717639923096
    3. ',' → logprob: -12.125717163085938
    4. ',c' → logprob: -14.125717163085938
    5. '
' → logprob: -15.125717163085938
    6. ' ' → logprob: -15.250717163085938
    7. '   ' → logprob: -15.375717163085938
    8. ')c' → logprob: -15.625717163085938
    9. '```' → logprob: -16.000717163085938
    10. '	c' → logprob: -16.000717163085938

Token 1603: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0038024536333978176
    2. ',' → logprob: -5.628802299499512
    3. 'c' → logprob: -9.003802299499512
    4. '   ' → logprob: -10.628802299499512
    5. '       ' → logprob: -11.378802299499512
    6. ')' → logprob: -11.503802299499512
    7. '},' → logprob: -11.878802299499512
    8. ',),' → logprob: -12.253802299499512
    9. '1' → logprob: -12.753802299499512
    10. '-' → logprob: -13.128802299499512

Token 1604: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005933775100857019
    2. ' ' → logprob: -5.13093376159668
    3. 'c' → logprob: -13.38093376159668
    4. '   ' → logprob: -13.50593376159668
    5. '       ' → logprob: -14.13093376159668
    6. ' c' → logprob: -14.50593376159668
    7. ')' → logprob: -15.38093376159668
    8. '    ' → logprob: -16.00593376159668
    9. '     ' → logprob: -16.00593376159668
    10. '  ' → logprob: -16.00593376159668

Token 1605: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001733855315251276
    2. ' ' → logprob: -8.750173568725586
    3. 'c' → logprob: -11.500173568725586
    4. '   ' → logprob: -13.875173568725586
    5. ')' → logprob: -14.500173568725586
    6. '-c' → logprob: -14.500173568725586
    7. ' c' → logprob: -14.625173568725586
    8. '-' → logprob: -14.750173568725586
    9. '       ' → logprob: -15.000173568725586
    10. ')c' → logprob: -15.562673568725586

Token 1606: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03827202320098877
    2. '-' → logprob: -3.788271903991699
    3. '          ' → logprob: -4.413271903991699
    4. ')' → logprob: -6.538271903991699
    5. '           ' → logprob: -7.163271903991699
    6. '              ' → logprob: -9.4132719039917
    7. '         ' → logprob: -9.5382719039917
    8. '       ' → logprob: -9.6632719039917
    9. ',' → logprob: -10.0382719039917
    10. '   ' → logprob: -10.0382719039917

Token 1607: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09523851424455643
    2. '-' → logprob: -2.845238447189331
    3. '          ' → logprob: -3.470238447189331
    4. '           ' → logprob: -6.97023868560791
    5. ')' → logprob: -7.84523868560791
    6. '```' → logprob: -9.72023868560791
    7. ')-(' → logprob: -10.22023868560791
    8. '              ' → logprob: -10.22023868560791
    9. '         ' → logprob: -10.34523868560791
    10. '       ' → logprob: -10.59523868560791

Token 1608: ' C' (ID: 363)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040213488042354584
    2. 'C' → logprob: -3.4152135848999023
    3. ' ' → logprob: -5.290213584899902
    4. ' C' → logprob: -6.665213584899902
    5. '(C' → logprob: -8.915213584899902
    6. '   ' → logprob: -9.915213584899902
    7. '(' → logprob: -11.040213584899902
    8. ' (' → logprob: -11.540213584899902
    9. '  ' → logprob: -12.040213584899902
    10. '       ' → logprob: -13.290213584899902

Token 1609: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.6326414346694946
    2. 'S' → logprob: -0.7576414346694946
    3. ' S' → logprob: -11.132641792297363
    4. '	S' → logprob: -11.757641792297363
    5. 'SD' → logprob: -12.132641792297363
    6. '   ' → logprob: -12.632641792297363
    7. '(S' → logprob: -13.007641792297363
    8. ''S' → logprob: -14.007641792297363
    9. '```' → logprob: -14.007641792297363
    10. '  ' → logprob: -14.132641792297363

Token 1610: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0011861803941428661
    2. '_DICT' → logprob: -7.376186370849609
    3. 'dict' → logprob: -8.75118637084961
    4. 'S' → logprob: -8.87618637084961
    5. 'DI' → logprob: -9.50118637084961
    6. 'D' → logprob: -9.75118637084961
    7. '_S' → logprob: -10.12618637084961
    8. 'L' → logprob: -10.37618637084961
    9. '_D' → logprob: -11.37618637084961
    10. 'SD' → logprob: -11.62618637084961

Token 1611: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010545044642640278
    2. 'get' → logprob: -9.750105857849121
    3. ' .' → logprob: -10.500105857849121
    4. '[(' → logprob: -11.500105857849121
    5. '.' → logprob: -11.875105857849121
    6. '```' → logprob: -14.000105857849121
    7. '   ' → logprob: -14.375105857849121
    8. '.setdefault' → logprob: -15.375105857849121
    9. ' ' → logprob: -15.625105857849121
    10. '_get' → logprob: -16.000104904174805

Token 1612: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.943783253314905e-05
    2. ' ((' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.000059127807617
    4. '```' → logprob: -15.250059127807617
    5. ' ' → logprob: -15.750059127807617
    6. '  ' → logprob: -16.875059127807617
    7. ' (' → logprob: -16.875059127807617
    8. '``' → logprob: -17.375059127807617
    9. '(x' → logprob: -17.750059127807617
    10. '(' → logprob: -17.875059127807617

Token 1613: 'ind' (ID: 521)
  Prédit: '(ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.00024822709383443
    2. 'ind' → logprob: -8.500247955322266
    3. ' (' → logprob: -10.500247955322266
    4. '[ind' → logprob: -12.000247955322266
    5. '((' → logprob: -12.500247955322266
    6. '   ' → logprob: -13.125247955322266
    7. '(' → logprob: -13.375247955322266
    8. '(indent' → logprob: -13.500247955322266
    9. '  ' → logprob: -14.625247955322266
    10. '
' → logprob: -14.875247955322266

Token 1614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043561991304159164
    2. '(ind' → logprob: -3.2935619354248047
    3. '(x' → logprob: -6.168561935424805
    4. ' (' → logprob: -6.543561935424805
    5. ',x' → logprob: -6.793561935424805
    6. ',(' → logprob: -8.543561935424805
    7. '(' → logprob: -8.543561935424805
    8. '[ind' → logprob: -9.168561935424805
    9. ' ,' → logprob: -9.293561935424805
    10. ',c' → logprob: -9.418561935424805

Token 1615: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005542247672565281
    2. ' c' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.250554084777832
    4. '  ' → logprob: -15.875554084777832
    5. ' ' → logprob: -16.12555503845215
    6. 'ind' → logprob: -16.25055503845215
    7. ')c' → logprob: -16.75055503845215
    8. '    ' → logprob: -16.87555503845215
    9. '       ' → logprob: -17.00055503845215
    10. '	c' → logprob: -17.12555503845215

Token 1616: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.5822400857578032e-05
    2. '   ' → logprob: -11.875025749206543
    3. '       ' → logprob: -12.250025749206543
    4. ')' → logprob: -13.125025749206543
    5. ',),' → logprob: -13.375025749206543
    6. ' ),' → logprob: -13.375025749206543
    7. '[' → logprob: -13.375025749206543
    8. ',' → logprob: -13.500025749206543
    9. ''),' → logprob: -14.000025749206543
    10. '],' → logprob: -14.250025749206543

Token 1617: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002833848411682993
    2. ' ' → logprob: -8.750283241271973
    3. '2' → logprob: -9.250283241271973
    4. ')' → logprob: -10.625283241271973
    5. '1' → logprob: -13.250283241271973
    6. '   ' → logprob: -13.500283241271973
    7. ')*' → logprob: -14.625283241271973
    8. '       ' → logprob: -15.250283241271973
    9. '    ' → logprob: -16.00028419494629
    10. '  ' → logprob: -16.12528419494629

Token 1618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008118899422697723
    2. ' ' → logprob: -7.12581205368042
    3. ')' → logprob: -12.250811576843262
    4. 'c' → logprob: -14.375811576843262
    5. '   ' → logprob: -14.625811576843262
    6. ',' → logprob: -14.875811576843262
    7. '  ' → logprob: -15.688311576843262
    8. '1' → logprob: -15.875811576843262
    9. '    ' → logprob: -15.875811576843262
    10. 'None' → logprob: -16.063312530517578

Token 1619: ')*' (ID: 11043)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9779139161109924
    2. ')' → logprob: -1.2279138565063477
    3. ',' → logprob: -1.3529138565063477
    4. '*' → logprob: -3.6029138565063477
    5. '-' → logprob: -4.227913856506348
    6. ')*' → logprob: -4.227913856506348
    7. ' *' → logprob: -5.477913856506348
    8. '       ' → logprob: -6.102913856506348
    9. ' ,' → logprob: -6.352913856506348
    10. '   ' → logprob: -6.602913856506348

Token 1620: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.000020027160645
    3. '   ' → logprob: -13.125020027160645
    4. '```' → logprob: -14.000020027160645
    5. '
' → logprob: -16.000019073486328
    6. '1' → logprob: -16.500019073486328
    7. '``' → logprob: -16.500019073486328
    8. '3' → logprob: -16.750019073486328
    9. '	' → logprob: -17.375019073486328
    10. '  ' → logprob: -18.000019073486328

Token 1621: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0882282257080078
    2. ' +' → logprob: -1.0882282257080078
    3. ')' → logprob: -2.088228225708008
    4. ' -' → logprob: -2.213228225708008
    5. '          ' → logprob: -3.088228225708008
    6. '-' → logprob: -3.838228225708008
    7. '))' → logprob: -4.713228225708008
    8. '       ' → logprob: -5.463228225708008
    9. '           ' → logprob: -5.963228225708008
    10. '```' → logprob: -5.963228225708008

Token 1622: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4289812445640564
    2. ' -' → logprob: -1.5539813041687012
    3. ' +' → logprob: -3.428981304168701
    4. '+' → logprob: -3.803981304168701
    5. '          ' → logprob: -3.928981304168701
    6. '-' → logprob: -4.303981304168701
    7. ' *' → logprob: -4.428981304168701
    8. ')*' → logprob: -4.553981304168701
    9. '*' → logprob: -5.178981304168701
    10. '<|end|>' → logprob: -5.428981304168701

Token 1623: ' pl' (ID: 633)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.05525347217917442
    2. ' pl' → logprob: -2.930253505706787
    3. '(pl' → logprob: -8.305253028869629
    4. '	pl' → logprob: -9.430253028869629
    5. ' -' → logprob: -11.430253028869629
    6. '-pl' → logprob: -11.805253028869629
    7. '-' → logprob: -12.305253028869629
    8. '
' → logprob: -12.805253028869629
    9. '(' → logprob: -13.055253028869629
    10. '_pl' → logprob: -13.305253028869629

Token 1624: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2619953453540802
    2. ')
' → logprob: -2.386995315551758
    3. ' -' → logprob: -3.011995315551758
    4. '-' → logprob: -3.386995315551758
    5. '          ' → logprob: -3.511995315551758
    6. '   ' → logprob: -4.011995315551758
    7. '+' → logprob: -5.886995315551758
    8. '       ' → logprob: -7.386995315551758
    9. ' )' → logprob: -7.636995315551758
    10. '           ' → logprob: -7.636995315551758

Token 1625: '          ' (ID: 3550)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17276853322982788
    2. '   ' → logprob: -2.0477685928344727
    3. ')
' → logprob: -3.6727685928344727
    4. '          ' → logprob: -6.422768592834473
    5. '       ' → logprob: -6.922768592834473
    6. ' )' → logprob: -7.672768592834473
    7. '+' → logprob: -8.297768592834473
    8. ' +' → logprob: -8.797768592834473
    9. '```' → logprob: -8.797768592834473
    10. '  ' → logprob: -8.922768592834473

Token 1626: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' (adapté à ' -') → logprob: -0.4392957091331482
    2. ')
' → logprob: -1.939295768737793
    3. 'print' → logprob: -2.564295768737793
    4. ' -' → logprob: -2.939295768737793
    5. '   ' → logprob: -3.064295768737793
    6. '-print' → logprob: -4.189295768737793
    7. '+' → logprob: -4.689295768737793
    8. ')' → logprob: -4.939295768737793
    9. '```' → logprob: -7.439295768737793
    10. ' +' → logprob: -7.814295768737793

Token 1627: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.1461031287908554
    2. ' (' → logprob: -2.1461031436920166
    3. '(L' → logprob: -4.8961029052734375
    4. '(' → logprob: -5.0211029052734375
    5. '((' → logprob: -6.5211029052734375
    6. '   ' → logprob: -7.0211029052734375
    7. '2' → logprob: -7.6461029052734375
    8. 'L' → logprob: -7.8961029052734375
    9. '  ' → logprob: -8.396102905273438
    10. 'C' → logprob: -8.396102905273438

Token 1628: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12861180305480957
    2. '(C' → logprob: -2.1286118030548096
    3. '2' → logprob: -7.6286115646362305
    4. 'L' → logprob: -7.7536115646362305
    5. ' C' → logprob: -8.50361156463623
    6. ' (' → logprob: -8.87861156463623
    7. '(' → logprob: -9.25361156463623
    8. '((' → logprob: -9.50361156463623
    9. '   ' → logprob: -9.50361156463623
    10. '(L' → logprob: -10.12861156463623

Token 1629: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.000344044849043712
    2. '_S' → logprob: -8.500344276428223
    3. 'L' → logprob: -9.125344276428223
    4. '_LENGTH' → logprob: -10.875344276428223
    5. '	L' → logprob: -13.500344276428223
    6. 'Length' → logprob: -13.750344276428223
    7. '_length' → logprob: -14.000344276428223
    8. '\' → logprob: -14.062844276428223
    9. '```' → logprob: -14.062844276428223
    10. '_LEN' → logprob: -14.187844276428223

Token 1630: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0027275984175503254
    2. '_DICT' → logprob: -6.377727508544922
    3. '[(' → logprob: -7.502727508544922
    4. 'dict' → logprob: -9.252727508544922
    5. 'SD' → logprob: -9.502727508544922
    6. '(dict' → logprob: -10.002727508544922
    7. 'ICT' → logprob: -10.502727508544922
    8. '[' → logprob: -10.627727508544922
    9. 'DI' → logprob: -10.752727508544922
    10. '((' → logprob: -10.752727508544922

Token 1631: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0014405922265723348
    2. '[(' → logprob: -7.001440525054932
    3. ' .' → logprob: -8.50144100189209
    4. '.' → logprob: -8.62644100189209
    5. 'get' → logprob: -10.00144100189209
    6. '   ' → logprob: -10.25144100189209
    7. ').' → logprob: -10.75144100189209
    8. '
' → logprob: -11.00144100189209
    9. '((' → logprob: -11.62644100189209
    10. '  ' → logprob: -12.37644100189209

Token 1632: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020509003661572933
    2. '(x' → logprob: -9.000205039978027
    3. ' ((' → logprob: -10.375205039978027
    4. '[(' → logprob: -11.375205039978027
    5. '(ind' → logprob: -11.625205039978027
    6. '   ' → logprob: -11.750205039978027
    7. '
' → logprob: -12.500205039978027
    8. ' ' → logprob: -12.750205039978027
    9. '```' → logprob: -12.750205039978027
    10. ' (' → logprob: -13.250205039978027

Token 1633: 'x' (ID: 87)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.07804843038320541
    2. 'x' → logprob: -2.8280484676361084
    3. '(ind' → logprob: -4.203048229217529
    4. ' ind' → logprob: -7.328048229217529
    5. '(x' → logprob: -8.703048706054688
    6. 'y' → logprob: -9.578048706054688
    7. '[ind' → logprob: -10.328048706054688
    8. ' x' → logprob: -10.453048706054688
    9. ' (' → logprob: -10.953048706054688
    10. 'indt' → logprob: -12.703048706054688

Token 1634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021736434428021312
    2. ',c' → logprob: -8.50021743774414
    3. ' ,' → logprob: -11.37521743774414
    4. 'c' → logprob: -14.37521743774414
    5. '`,' → logprob: -15.00021743774414
    6. ',(' → logprob: -15.50021743774414
    7. '   ' → logprob: -15.50021743774414
    8. ',
' → logprob: -15.75021743774414
    9. '',' → logprob: -16.00021743774414
    10. ',x' → logprob: -16.00021743774414

Token 1635: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024768433067947626
    2. ' c' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.502476692199707
    4. ')c' → logprob: -15.502476692199707
    5. '<|end|>' → logprob: -15.627476692199707
    6. '...' → logprob: -16.627477645874023
    7. '
' → logprob: -16.939977645874023
    8. '(c' → logprob: -17.002477645874023
    9. '  ' → logprob: -17.127477645874023
    10. '```' → logprob: -17.252477645874023

Token 1636: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00043007321073673666
    2. '],' → logprob: -8.8754301071167
    3. ',' → logprob: -9.1254301071167
    4. '   ' → logprob: -10.0004301071167
    5. '       ' → logprob: -10.1254301071167
    6. ',),' → logprob: -10.5004301071167
    7. ')' → logprob: -11.1254301071167
    8. '[' → logprob: -11.8754301071167
    9. ' ),' → logprob: -12.1254301071167
    10. '           ' → logprob: -12.1254301071167

Token 1637: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02634849026799202
    2. ' ' → logprob: -3.65134859085083
    3. '1' → logprob: -11.026348114013672
    4. '   ' → logprob: -11.276348114013672
    5. '    ' → logprob: -12.463848114013672
    6. '  ' → logprob: -12.901348114013672
    7. 'pl' → logprob: -13.088848114013672
    8. '     ' → logprob: -13.276348114013672
    9. ',' → logprob: -13.401348114013672
    10. '
' → logprob: -13.776348114013672

Token 1638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013346440391615033
    2. ' ' → logprob: -6.6263346672058105
    3. '1' → logprob: -12.001334190368652
    4. 'pl' → logprob: -14.001334190368652
    5. '-' → logprob: -15.001334190368652
    6. '   ' → logprob: -15.126334190368652
    7. 'c' → logprob: -15.376334190368652
    8. ')' → logprob: -15.376334190368652
    9. '  ' → logprob: -15.626334190368652
    10. '(pl' → logprob: -16.75133514404297

Token 1639: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00795958936214447
    2. ')' → logprob: -5.132959365844727
    3. ' ,' → logprob: -6.382959365844727
    4. '   ' → logprob: -8.507959365844727
    5. ')*' → logprob: -10.882959365844727
    6. ' )' → logprob: -11.132959365844727
    7. '```' → logprob: -11.132959365844727
    8. '*' → logprob: -11.257959365844727
    9. ' ' → logprob: -11.382959365844727
    10. ' +' → logprob: -11.507959365844727

Token 1640: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868478834629059
    2. ' -' → logprob: -1.2618478536605835
    3. '+' → logprob: -3.511847972869873
    4. '-' → logprob: -6.261847972869873
    5. ' *' → logprob: -6.261847972869873
    6. ' ' → logprob: -6.386847972869873
    7. '*' → logprob: -6.511847972869873
    8. '   ' → logprob: -8.386847496032715
    9. ',' → logprob: -8.761847496032715
    10. '    ' → logprob: -9.011847496032715

Token 1641: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.17977309226989746
    2. ' C' → logprob: -1.8047730922698975
    3. '(C' → logprob: -11.554773330688477
    4. ' (' → logprob: -11.679773330688477
    5. ' ' → logprob: -13.054773330688477
    6. '(' → logprob: -13.554773330688477
    7. '```' → logprob: -14.054773330688477
    8. '
' → logprob: -14.304773330688477
    9. '   ' → logprob: -14.429773330688477
    10. '_C' → logprob: -14.429773330688477

Token 1642: '_L' (ID: 4258)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0072611127980053425
    2. '_L' → logprob: -5.007261276245117
    3. 'S' → logprob: -7.882261276245117
    4. 'L' → logprob: -9.132261276245117
    5. '```' → logprob: -11.007261276245117
    6. 'get' → logprob: -11.132261276245117
    7. '[S' → logprob: -12.382261276245117
    8. '_s' → logprob: -12.757261276245117
    9. '[(' → logprob: -12.882261276245117
    10. '\' → logprob: -13.132261276245117

Token 1643: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.003754829056560993
    2. '_DICT' → logprob: -5.753754615783691
    3. 'L' → logprob: -8.503754615783691
    4. 'DI' → logprob: -9.378754615783691
    5. '_dict' → logprob: -9.503754615783691
    6. 'ICT' → logprob: -9.628754615783691
    7. 'dict' → logprob: -9.753754615783691
    8. '_L' → logprob: -10.253754615783691
    9. '(dict' → logprob: -11.503754615783691
    10. '_D' → logprob: -12.253754615783691

Token 1644: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -9.329167369287461e-05
    2. 'get' → logprob: -9.375093460083008
    3. '.' → logprob: -12.625093460083008
    4. '[(' → logprob: -12.625093460083008
    5. ' .' → logprob: -13.875093460083008
    6. '
' → logprob: -15.375093460083008
    7. '```' → logprob: -15.375093460083008
    8. '   ' → logprob: -15.750093460083008
    9. '((' → logprob: -16.125093460083008
    10. 'def' → logprob: -16.375093460083008

Token 1645: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.7120533811976202e-05
    2. ' ((' → logprob: -11.375017166137695
    3. '.get' → logprob: -13.125017166137695
    4. '[(' → logprob: -14.000017166137695
    5. ' ' → logprob: -14.625017166137695
    6. '```' → logprob: -14.625017166137695
    7. '   ' → logprob: -15.000017166137695
    8. 'get' → logprob: -15.125017166137695
    9. '`' → logprob: -15.875017166137695
    10. '``' → logprob: -16.000017166137695

Token 1646: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.28599023818969727
    2. '(ind' → logprob: -1.5359902381896973
    3. 'y' → logprob: -3.4109902381896973
    4. ' (' → logprob: -8.660989761352539
    5. 'ind' → logprob: -8.660989761352539
    6. '(' → logprob: -10.035989761352539
    7. ' y' → logprob: -10.785989761352539
    8. '[ind' → logprob: -11.535989761352539
    9. '(x' → logprob: -11.910989761352539
    10. '(
' → logprob: -11.910989761352539

Token 1647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012713817704934627
    2. ',c' → logprob: -9.750126838684082
    3. ' ,' → logprob: -10.000126838684082
    4. ',(' → logprob: -11.000126838684082
    5. 'c' → logprob: -12.875126838684082
    6. '(' → logprob: -13.625126838684082
    7. '[' → logprob: -14.875126838684082
    8. '(c' → logprob: -14.875126838684082
    9. ',
' → logprob: -15.250126838684082
    10. '[(' → logprob: -15.500126838684082

Token 1648: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023252349346876144
    2. ' c' → logprob: -3.773252248764038
    3. '```' → logprob: -12.773252487182617
    4. ')c' → logprob: -14.023252487182617
    5. '	c' → logprob: -14.273252487182617
    6. ' ' → logprob: -14.273252487182617
    7. '   ' → logprob: -14.398252487182617
    8. '(c' → logprob: -16.148252487182617
    9. '``' → logprob: -16.273252487182617
    10. '<c' → logprob: -16.273252487182617

Token 1649: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014895245840307325
    2. ',c' → logprob: -8.87514877319336
    3. ' ,' → logprob: -12.00014877319336
    4. 'c' → logprob: -13.25014877319336
    5. '),' → logprob: -15.00014877319336
    6. '<|end|>' → logprob: -16.12514877319336
    7. '‌,' → logprob: -16.12514877319336
    8. ',
' → logprob: -17.00014877319336
    9. 'Let's' → logprob: -17.37514877319336
    10. '```' → logprob: -17.50014877319336

Token 1650: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21023744344711304
    2. ' ' → logprob: -1.7102375030517578
    3. 'c' → logprob: -4.960237503051758
    4. ' c' → logprob: -6.335237503051758
    5. ' ' → logprob: -14.210237503051758
    6. ')c' → logprob: -15.335237503051758
    7. '	c' → logprob: -16.460237503051758
    8. ')' → logprob: -16.585237503051758
    9. '```' → logprob: -16.710237503051758
    10. '   ' → logprob: -16.960237503051758

Token 1651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47781801223754883
    2. 'c' → logprob: -0.9778180122375488
    3. ' c' → logprob: -6.227818012237549
    4. ' ' → logprob: -6.352818012237549
    5. '(' → logprob: -12.60281753540039
    6. '1' → logprob: -12.72781753540039
    7. '```' → logprob: -12.72781753540039
    8. '   ' → logprob: -13.85281753540039
    9. ')c' → logprob: -13.85281753540039
    10. ' (' → logprob: -14.22781753540039

Token 1652: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003933768020942807
    2. ' ,' → logprob: -8.00039291381836
    3. ')' → logprob: -10.50039291381836
    4. '-' → logprob: -11.37539291381836
    5. ' -' → logprob: -11.50039291381836
    6. '```' → logprob: -12.75039291381836
    7. '   ' → logprob: -14.00039291381836
    8. '          ' → logprob: -14.25039291381836
    9. '           ' → logprob: -14.37539291381836
    10. ' ' → logprob: -14.62539291381836

Token 1653: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04421593248844147
    2. '-' → logprob: -3.1692159175872803
    3. ',' → logprob: -6.919216156005859
    4. '```' → logprob: -8.79421615600586
    5. ' ' → logprob: -10.29421615600586
    6. '          ' → logprob: -11.66921615600586
    7. '           ' → logprob: -11.66921615600586
    8. ')' → logprob: -12.41921615600586
    9. '``' → logprob: -12.54421615600586
    10. '[' → logprob: -12.54421615600586

Token 1654: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0756443589925766
    2. ' C' → logprob: -2.7006442546844482
    3. '(C' → logprob: -5.575644493103027
    4. ' (' → logprob: -6.325644493103027
    5. '2' → logprob: -10.200644493103027
    6. ' ' → logprob: -10.575644493103027
    7. '(' → logprob: -10.700644493103027
    8. '   ' → logprob: -11.700644493103027
    9. '```' → logprob: -11.950644493103027
    10. '(
' → logprob: -12.950644493103027

Token 1655: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.474566787481308
    2. '_S' → logprob: -0.9745668172836304
    3. 'L' → logprob: -7.72456693649292
    4. 'S' → logprob: -10.974566459655762
    5. '```' → logprob: -12.349566459655762
    6. 'get' → logprob: -12.474566459655762
    7. '\' → logprob: -12.849566459655762
    8. '_C' → logprob: -13.349566459655762
    9. '[(' → logprob: -13.474566459655762
    10. '   ' → logprob: -13.474566459655762

Token 1656: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0013705958845093846
    2. '_DICT' → logprob: -6.876370429992676
    3. 'dict' → logprob: -8.751370429992676
    4. 'DI' → logprob: -9.251370429992676
    5. 'ICT' → logprob: -10.876370429992676
    6. '_dict' → logprob: -11.001370429992676
    7. 'L' → logprob: -11.501370429992676
    8. 'D' → logprob: -11.626370429992676
    9. '(dict' → logprob: -12.501370429992676
    10. '(D' → logprob: -12.626370429992676

Token 1657: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00022535098833031952
    2. 'get' → logprob: -8.500225067138672
    3. '[(' → logprob: -11.500225067138672
    4. '.' → logprob: -11.625225067138672
    5. ' .' → logprob: -13.125225067138672
    6. '((' → logprob: -15.750225067138672
    7. '
' → logprob: -15.875225067138672
    8. '   ' → logprob: -16.125225067138672
    9. '```' → logprob: -16.625225067138672
    10. 'def' → logprob: -16.875225067138672

Token 1658: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.024604277219623e-05
    2. '(ind' → logprob: -10.250040054321289
    3. ' ((' → logprob: -13.625040054321289
    4. '```' → logprob: -14.250040054321289
    5. '`' → logprob: -14.375040054321289
    6. '   ' → logprob: -14.375040054321289
    7. '``' → logprob: -15.000040054321289
    8. '
' → logprob: -15.250040054321289
    9. '[(' → logprob: -15.375040054321289
    10. '(
' → logprob: -15.750040054321289

Token 1659: 'ind' (ID: 521)
  Prédit: '(ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.009929967112839222
    2. 'ind' → logprob: -4.75993013381958
    3. '[ind' → logprob: -7.25993013381958
    4. ' (' → logprob: -7.50993013381958
    5. ' ind' → logprob: -10.634929656982422
    6. '((' → logprob: -11.509929656982422
    7. 'indent' → logprob: -12.259929656982422
    8. '
' → logprob: -12.384929656982422
    9. '(indent' → logprob: -12.509929656982422
    10. '(' → logprob: -13.009929656982422

Token 1660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028278882382437587
    2. ',c' → logprob: -8.500283241271973
    3. ',(' → logprob: -10.875283241271973
    4. ',x' → logprob: -11.750283241271973
    5. 'c' → logprob: -11.875283241271973
    6. ' ,' → logprob: -12.125283241271973
    7. '(' → logprob: -12.125283241271973
    8. ',n' → logprob: -12.500283241271973
    9. ',s' → logprob: -12.625283241271973
    10. '(c' → logprob: -12.875283241271973

Token 1661: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14268775284290314
    2. ' c' → logprob: -2.0176877975463867
    3. '(c' → logprob: -11.892687797546387
    4. '```' → logprob: -13.517687797546387
    5. ' ' → logprob: -14.267687797546387
    6. '	c' → logprob: -14.642687797546387
    7. '   ' → logprob: -15.017687797546387
    8. '...' → logprob: -15.017687797546387
    9. '_c' → logprob: -15.267687797546387
    10. '(' → logprob: -15.517687797546387

Token 1662: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0214366614818573
    2. '],' → logprob: -4.39643669128418
    3. ',' → logprob: -4.77143669128418
    4. ')],' → logprob: -9.27143669128418
    5. '[' → logprob: -9.39643669128418
    6. '(' → logprob: -10.39643669128418
    7. '       ' → logprob: -10.52143669128418
    8. '},' → logprob: -10.52143669128418
    9. '),(' → logprob: -11.02143669128418
    10. '           ' → logprob: -11.02143669128418

Token 1663: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021799057722092
    2. ' ' → logprob: -2.3502180576324463
    3. 'c' → logprob: -12.350217819213867
    4. '1' → logprob: -12.725217819213867
    5. ' c' → logprob: -13.225217819213867
    6. 'def' → logprob: -14.350217819213867
    7. '   ' → logprob: -14.600217819213867
    8. ' ' → logprob: -14.850217819213867
    9. '```' → logprob: -15.600217819213867
    10. '2' → logprob: -16.100217819213867

Token 1664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003214784199371934
    2. ' ' → logprob: -5.7532148361206055
    3. '1' → logprob: -10.628214836120605
    4. 'c' → logprob: -11.753214836120605
    5. '2' → logprob: -13.628214836120605
    6. '   ' → logprob: -14.003214836120605
    7. '```' → logprob: -14.253214836120605
    8. ' c' → logprob: -14.690714836120605
    9. 'def' → logprob: -15.003214836120605
    10. '  ' → logprob: -15.628214836120605

Token 1665: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3662673234939575
    2. ')*' → logprob: -1.7412673234939575
    3. ',' → logprob: -2.116267204284668
    4. ']*' → logprob: -5.116267204284668
    5. ']' → logprob: -5.866267204284668
    6. ')]' → logprob: -6.866267204284668
    7. '```' → logprob: -8.366267204284668
    8. '),' → logprob: -8.741267204284668
    9. '))' → logprob: -9.491267204284668
    10. '*' → logprob: -9.491267204284668

Token 1666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -10.75002384185791
    3. '1' → logprob: -13.75002384185791
    4. '```' → logprob: -14.50002384185791
    5. '
' → logprob: -14.87502384185791
    6. '   ' → logprob: -15.25002384185791
    7. ')' → logprob: -16.562524795532227
    8. '۲' → logprob: -16.812524795532227
    9. '２' → logprob: -17.437524795532227
    10. '  ' → logprob: -17.500024795532227

Token 1667: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13450780510902405
    2. '))' → logprob: -2.134507894515991
    3. ')))' → logprob: -5.384507656097412
    4. ' )' → logprob: -6.884507656097412
    5. ')
' → logprob: -7.009507656097412
    6. '))
' → logprob: -7.884507656097412
    7. '   ' → logprob: -8.50950813293457
    8. '+' → logprob: -9.63450813293457
    9. ' ))' → logprob: -9.75950813293457
    10. ')*' → logprob: -10.00950813293457

Token 1668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09377224743366241
    2. ')' → logprob: -3.3437721729278564
    3. '<|end|>' → logprob: -3.4687721729278564
    4. '
' → logprob: -4.0937724113464355
    5. 'print' → logprob: -5.5937724113464355
    6. '```' → logprob: -7.5937724113464355
    7. ')
' → logprob: -7.7187724113464355
    8. '       ' → logprob: -7.7187724113464355
    9. ' ' → logprob: -8.718771934509277
    10. '  ' → logprob: -9.093771934509277

Token 1669: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01219774130731821
    2. '<|end|>' → logprob: -5.387197971343994
    3. ')' → logprob: -5.512197971343994
    4. '
' → logprob: -5.762197971343994
    5. 'return' → logprob: -9.762197494506836
    6. ')
' → logprob: -10.012197494506836
    7. '```' → logprob: -10.262197494506836
    8. ' return' → logprob: -10.387197494506836
    9. 'print' (adapté à ' print') → logprob: -10.512197494506836
    10. 'def' → logprob: -10.637197494506836

Token 1670: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.2246291337069124e-05
    2. 'ans' → logprob: -10.750021934509277
    3. '(f' → logprob: -15.250021934509277
    4. '(int' → logprob: -15.500021934509277
    5. '(' → logprob: -15.750021934509277
    6. '(abs' → logprob: -16.000022888183594
    7. '(answer' → logprob: -17.125022888183594
    8. ' (' → logprob: -17.375022888183594
    9. '((' → logprob: -17.375022888183594
    10. '()' → logprob: -17.500022888183594

Token 1671: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.79811754100956e-05
    2. ')
' → logprob: -10.375038146972656
    3. '`)' → logprob: -13.250038146972656
    4. ')`' → logprob: -13.500038146972656
    5. ' )' → logprob: -13.625038146972656
    6. '')' → logprob: -14.125038146972656
    7. '   ' → logprob: -14.250038146972656
    8. '")' → logprob: -15.375038146972656
    9. '```' → logprob: -15.625038146972656
    10. '))' → logprob: -15.750038146972656

Token 1672: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3604825735092163
    2. '<|end|>' → logprob: -1.2354825735092163
    3. 'if' → logprob: -4.860482692718506
    4. 'def' → logprob: -6.860482692718506
    5. '
' → logprob: -7.110482692718506
    6. '#' → logprob: -7.485482692718506
    7. '<|end|>' → logprob: -7.485482692718506
    8. '```' → logprob: -7.610482692718506
    9. '[' → logprob: -9.110482215881348
    10. 'x' → logprob: -9.235482215881348

Token 1673: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0034708285238593817
    2. 'def' → logprob: -6.0034708976745605
    3. ' main' → logprob: -7.0034708976745605
    4. 'if' → logprob: -9.378470420837402
    5. ' def' → logprob: -14.878470420837402
    6. 'read' → logprob: -15.003470420837402
    7. '__' → logprob: -15.128470420837402
    8. '_main' → logprob: -15.378470420837402
    9. '
' → logprob: -15.753470420837402
    10. 'run' → logprob: -16.62847137451172

Token 1674: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.061975300312042236
    2. '():
' → logprob: -2.8119752407073975
    3. '():
' → logprob: -12.561975479125977
    4. ' ():' → logprob: -12.936975479125977
    5. '()' → logprob: -13.311975479125977
    6. '():

' → logprob: -16.811975479125977
    7. '_' → logprob: -18.936975479125977
    8. 'def' → logprob: -19.061975479125977
    9. ':' → logprob: -19.311975479125977
    10. '(' → logprob: -19.311975479125977

Token 1675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007924780366010964
    2. '	N' → logprob: -8.125792503356934
    3. '    
' → logprob: -9.000792503356934
    4. '(N' → logprob: -9.250792503356934
    5. '()' → logprob: -9.375792503356934
    6. '```' → logprob: -9.750792503356934
    7. '   ' → logprob: -10.250792503356934
    8. '
' → logprob: -11.125792503356934
    9. '	n' → logprob: -11.625792503356934
    10. 'N' → logprob: -11.750792503356934

Token 1676: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.316275030374527
    2. '   ' → logprob: -1.3162750005722046
    3. ' N' → logprob: -5.816275119781494
    4. '	N' → logprob: -11.066274642944336
    5. '```' → logprob: -11.816274642944336
    6. '  ' → logprob: -12.691274642944336
    7. ' ' → logprob: -12.941274642944336
    8. '(N' → logprob: -14.441274642944336
    9. '    ' → logprob: -15.316274642944336
    10. '_N' → logprob: -15.816274642944336

Token 1677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.304016228066757e-05
    2. ',Q' → logprob: -10.000082969665527
    3. ' ,' → logprob: -11.125082969665527
    4. '   ' → logprob: -11.625082969665527
    5. '=' → logprob: -11.875082969665527
    6. ',
' → logprob: -12.500082969665527
    7. ',N' → logprob: -13.250082969665527
    8. ' =' → logprob: -15.125082969665527
    9. ',q' → logprob: -15.625082969665527
    10. '<|end|>' → logprob: -15.750082969665527

Token 1678: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019286326132714748
    2. ' Q' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.751928329467773
    4. '	Q' → logprob: -20.251928329467773
    5. ',Q' → logprob: -20.626928329467773
    6. '    ' → logprob: -20.876928329467773
    7. ' ' → logprob: -20.876928329467773
    8. '  ' → logprob: -22.126928329467773
    9. 'Qs' → logprob: -22.501928329467773
    10. '    
' → logprob: -22.626928329467773

Token 1679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. '=' → logprob: -11.50001335144043
    3. ' ,' → logprob: -13.62501335144043
    4. ',Q' → logprob: -14.37501335144043
    5. ' =' → logprob: -14.75001335144043
    6. '   ' → logprob: -15.12501335144043
    7. '‌,' → logprob: -16.00001335144043
    8. ',
' → logprob: -16.87501335144043
    9. '<|end|>' → logprob: -17.62501335144043
    10. ',N' → logprob: -17.75001335144043

Token 1680: ' EDGE' (ID: 165368)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.13958311080932617
    2. 'Query' → logprob: -2.264583110809326
    3. 'QUERY' → logprob: -3.764583110809326
    4. ' Query' → logprob: -6.389583110809326
    5. ' EDGE' → logprob: -6.764583110809326
    6. '   ' → logprob: -8.514583587646484
    7. 'Edge' → logprob: -9.514583587646484
    8. ' QUERY' → logprob: -9.889583587646484
    9. '
' → logprob: -11.014583587646484
    10. ' ' → logprob: -11.514583587646484

Token 1681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.750006675720215
    3. '=' → logprob: -13.375006675720215
    4. '   ' → logprob: -13.625006675720215
    5. ' =' → logprob: -14.625006675720215
    6. ',Q' → logprob: -15.500006675720215
    7. '‌,' → logprob: -16.1250057220459
    8. ',
' → logprob: -17.0000057220459
    9. '_,' → logprob: -17.1250057220459
    10. '،' → logprob: -18.3750057220459

Token 1682: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.0015349778113886714
    2. ' Query' → logprob: -6.501534938812256
    3. '   ' → logprob: -11.251535415649414
    4. '	Query' → logprob: -11.751535415649414
    5. 'QUERY' → logprob: -11.751535415649414
    6. '_Query' → logprob: -13.751535415649414
    7. 'query' → logprob: -14.251535415649414
    8. '
' → logprob: -14.251535415649414
    9. '<Query' → logprob: -15.126535415649414
    10. '.Query' → logprob: -15.126535415649414

Token 1683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387052059173584
    2. ' =' → logprob: -1.137052059173584
    3. '   ' → logprob: -8.637052536010742
    4. ',' → logprob: -13.637052536010742
    5. '	' → logprob: -14.387052536010742
    6. '=
' → logprob: -14.387052536010742
    7. ' ' → logprob: -14.512052536010742
    8. ' =
' → logprob: -15.262052536010742
    9. '  ' → logprob: -16.012052536010742
    10. '```' → logprob: -16.012052536010742

Token 1684: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004078401252627373
    2. ' read' → logprob: -5.504078388214111
    3. '	read' → logprob: -22.004077911376953
    4. '   ' → logprob: -24.504077911376953
    5. '(read' → logprob: -24.629077911376953
    6. ' ' → logprob: -25.504077911376953
    7. '
' → logprob: -25.629077911376953
    8. 'import' → logprob: -25.879077911376953
    9. 're' → logprob: -26.254077911376953
    10. 'sys' → logprob: -26.254077911376953

Token 1685: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -8.399378566537052e-05
    2. '_' → logprob: -10.500083923339844
    3. '_inputs' → logprob: -10.750083923339844
    4. '```' → logprob: -11.375083923339844
    5. 'input' → logprob: -11.875083923339844
    6. '_in' → logprob: -12.625083923339844
    7. '
' → logprob: -12.750083923339844
    8. '(' → logprob: -13.375083923339844
    9. '_data' → logprob: -13.375083923339844
    10. '()' → logprob: -14.000083923339844

Token 1686: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7174697518348694
    2. '   ' → logprob: -0.7174697518348694
    3. '    
' → logprob: -4.467469692230225
    4. '```' → logprob: -4.467469692230225
    5. 'ED' → logprob: -7.592469692230225
    6. '  
' → logprob: -8.467470169067383
    7. '``' → logprob: -8.592470169067383
    8. '
' → logprob: -10.217470169067383
    9. '<|end|>' → logprob: -10.217470169067383
    10. '   
' → logprob: -10.717470169067383

Token 1687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5775942802429199
    2. 'ED' → logprob: -0.9525942802429199
    3. ' ED' → logprob: -2.95259428024292
    4. '
' → logprob: -8.077594757080078
    5. '```' → logprob: -8.827594757080078
    6. '_ED' → logprob: -8.952594757080078
    7. '    
' → logprob: -9.827594757080078
    8. '   ' → logprob: -10.452594757080078
    9. ' ' → logprob: -10.577594757080078
    10. '    ' → logprob: -10.952594757080078

Token 1688: ' mod' (ID: 1812)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.07967904210090637
    2. '   ' → logprob: -3.204679012298584
    3. ' ED' → logprob: -3.329679012298584
    4. 'ed' → logprob: -9.829679489135742
    5. ' ' → logprob: -10.079679489135742
    6. '
' → logprob: -10.829679489135742
    7. '```' → logprob: -10.954679489135742
    8. 'E' → logprob: -11.079679489135742
    9. '_ED' → logprob: -11.579679489135742
    10. '  ' → logprob: -11.704679489135742

Token 1689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1614738404750824
    2. '=' → logprob: -2.0364737510681152
    3. 'ule' → logprob: -4.161473751068115
    4. '_' → logprob: -7.536473751068115
    5. '```' → logprob: -7.536473751068115
    6. '   ' → logprob: -7.661473751068115
    7. ' ' → logprob: -8.411474227905273
    8. 'e' → logprob: -8.661474227905273
    9. 'el' → logprob: -8.911474227905273
    10. 'def' → logprob: -9.161474227905273

Token 1690: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.022519830614328384
    2. ' ' → logprob: -3.897519826889038
    3. '100' → logprob: -6.397520065307617
    4. '0' → logprob: -9.272520065307617
    5. '1' → logprob: -9.772520065307617
    6. '998' → logprob: -9.772520065307617
    7. '(' → logprob: -9.897520065307617
    8. ' (' → logprob: -10.522520065307617
    9. 'int' → logprob: -11.147520065307617
    10. ' ' → logprob: -13.397520065307617

Token 1691: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012452320661395788
    2. '998' → logprob: -7.251245021820068
    3. '100' → logprob: -8.126245498657227
    4. '(' → logprob: -8.501245498657227
    5. 'int' → logprob: -11.001245498657227
    6. '0' → logprob: -11.376245498657227
    7. '1' → logprob: -12.251245498657227
    8. '2' → logprob: -14.001245498657227
    9. 'None' → logprob: -14.626245498657227
    10. '[' → logprob: -15.001245498657227

Token 1692: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.005093818064779043
    2. '**' → logprob: -5.380094051361084
    3. ' ' → logprob: -8.380093574523926
    4. '```' → logprob: -8.755093574523926
    5. '09' → logprob: -9.505093574523926
    6. ' **' → logprob: -12.755093574523926
    7. '7' → logprob: -13.005093574523926
    8. '``' → logprob: -13.255093574523926
    9. '+' → logprob: -13.755093574523926
    10. ' ' → logprob: -14.380093574523926

Token 1693: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -16.875
    3. '15' → logprob: -19.5
    4. '
' → logprob: -20.25
    5. '18' → logprob: -20.625
    6. '10' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. ' ' → logprob: -21.5
    9. '_' → logprob: -21.5
    10. '+' → logprob: -21.875

Token 1694: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8325677703833207e-05
    2. ' +' → logprob: -10.625028610229492
    3. '+
' → logprob: -12.500028610229492
    4. '```' → logprob: -15.500028610229492
    5. '＋' → logprob: -17.500028610229492
    6. '7' → logprob: -17.625028610229492
    7. '
' → logprob: -19.250028610229492
    8. '-' → logprob: -19.500028610229492
    9. ' +
' → logprob: -19.500028610229492
    10. '+</' → logprob: -20.250028610229492

Token 1695: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1637164789135568e-05
    2. '+' → logprob: -11.375011444091797
    3. '```' → logprob: -16.250011444091797
    4. '9' → logprob: -17.250011444091797
    5. '``' → logprob: -19.250011444091797
    6. '07' → logprob: -19.375011444091797
    7. '
' → logprob: -19.875011444091797
    8. '   ' → logprob: -21.000011444091797
    9. '

' → logprob: -21.375011444091797
    10. ' +' → logprob: -21.625011444091797

Token 1696: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13033650815486908
    2. 'ED' → logprob: -2.3803365230560303
    3. '
' → logprob: -3.6303365230560303
    4. ' ED' → logprob: -6.505336284637451
    5. '    
' → logprob: -7.005336284637451
    6. '```' → logprob: -8.00533676147461
    7. '_ED' → logprob: -9.38033676147461
    8. '  ' → logprob: -9.75533676147461
    9. '
' → logprob: -9.88033676147461
    10. 'ed' → logprob: -9.88033676147461

Token 1697: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3073073923587799
    2. 'ED' → logprob: -1.4323073625564575
    3. ' ED' → logprob: -3.932307481765747
    4. '
' → logprob: -5.432307243347168
    5. '    
' → logprob: -7.182307243347168
    6. '```' → logprob: -7.307307243347168
    7. '_ED' → logprob: -8.682307243347168
    8. '   ' → logprob: -9.807307243347168
    9. ',' → logprob: -11.057307243347168
    10. 'E' → logprob: -11.182307243347168

Token 1698: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' (adapté à ' ED') → logprob: -0.0005699523026123643
    2. '   ' → logprob: -8.125570297241211
    3. ' ED' → logprob: -8.500570297241211
    4. 'ed' → logprob: -10.000570297241211
    5. 'EDGE' → logprob: -12.125570297241211
    6. '
' → logprob: -12.375570297241211
    7. '```' → logprob: -12.625570297241211
    8. '  ' → logprob: -13.250570297241211
    9. 'E' → logprob: -13.500570297241211
    10. '    
' → logprob: -13.500570297241211

Token 1699: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -3.292907877039397e-06
    2. 'EL' → logprob: -12.75000286102295
    3. ' G' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.875003814697266
    5. '
' → logprob: -16.875003814697266
    6. 'GL' → logprob: -18.125003814697266
    7. 'L' → logprob: -18.375003814697266
    8. '```' → logprob: -18.625003814697266
    9. ' GEL' → logprob: -19.250003814697266
    10. 'GE' → logprob: -19.250003814697266

Token 1700: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -5.796184723294573e-06
    2. 'ELE' → logprob: -12.625005722045898
    3. 'LIST' → logprob: -13.375005722045898
    4. 'LE' → logprob: -14.750005722045898
    5. 'E' → logprob: -15.500005722045898
    6. 'ELL' → logprob: -16.1250057220459
    7. '
' → logprob: -16.6250057220459
    8. ' EL' → logprob: -16.7500057220459
    9. 'ЕЛ' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.2500057220459

Token 1701: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -2.2200749754119897e-06
    2. 'LIST' → logprob: -14.000001907348633
    3. 'ST' → logprob: -14.375001907348633
    4. 'ist' → logprob: -15.125001907348633
    5. 'ISTS' → logprob: -15.500001907348633
    6. 'I' → logprob: -16.250001907348633
    7. ' IST' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.500001907348633
    9. 'EL' → logprob: -17.000001907348633
    10. '
' → logprob: -17.750001907348633

Token 1702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519344687461853
    2. '=' → logprob: -1.50193452835083
    3. '[' → logprob: -13.126934051513672
    4. ',' → logprob: -14.626934051513672
    5. '   ' → logprob: -14.626934051513672
    6. '=[]' → logprob: -14.876934051513672
    7. '```' → logprob: -15.126934051513672
    8. ' =[' → logprob: -15.126934051513672
    9. '=[' → logprob: -15.251934051513672
    10. '＝' → logprob: -15.251934051513672

Token 1703: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.01416750717908144
    2. ' make' → logprob: -4.264167308807373
    3. '(make' → logprob: -13.139167785644531
    4. '	make' → logprob: -13.264167785644531
    5. '[' → logprob: -15.764167785644531
    6. '   ' → logprob: -15.889167785644531
    7. '.make' → logprob: -17.26416778564453
    8. '_make' → logprob: -17.76416778564453
    9. '[]' → logprob: -17.76416778564453
    10. ' ' → logprob: -18.26416778564453

Token 1704: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -2.451116051815916e-05
    2. 'empty' → logprob: -10.625024795532227
    3. '_ed' → logprob: -16.375024795532227
    4. 'Empty' → logprob: -16.875024795532227
    5. '```' → logprob: -16.875024795532227
    6. '_EMPTY' → logprob: -17.125024795532227
    7. '_edge' → logprob: -17.375024795532227
    8. ' empty' → logprob: -18.625024795532227
    9. '_' → logprob: -18.625024795532227
    10. 'e' → logprob: -18.875024795532227

Token 1705: '_ed' (ID: 92459)
  Prédit: '_ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ed' → logprob: -5.0020742492051795e-05
    2. 'ed' → logprob: -10.125049591064453
    3. '_' → logprob: -11.875049591064453
    4. '```' → logprob: -13.375049591064453
    5. '_ED' → logprob: -15.125049591064453
    6. '`' → logprob: -15.625049591064453
    7. '(ed' → logprob: -16.250049591064453
    8. '_edges' → logprob: -16.375049591064453
    9. '_edge' → logprob: -16.375049591064453
    10. ' ' → logprob: -16.750049591064453

Token 1706: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -0.023833028972148895
    2. 'del' → logprob: -4.39883279800415
    3. '_' → logprob: -6.14883279800415
    4. 'g' → logprob: -6.39883279800415
    5. 'G' → logprob: -6.52383279800415
    6. ' _' → logprob: -6.89883279800415
    7. 'ge' → logprob: -7.02383279800415
    8. '_g' → logprob: -7.52383279800415
    9. 'd' → logprob: -7.64883279800415
    10. '[' → logprob: -7.77383279800415

Token 1707: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.1756367712223437e-05
    2. '_list' → logprob: -12.125011444091797
    3. 'list' → logprob: -13.000011444091797
    4. 'st' → logprob: -13.750011444091797
    5. '_' → logprob: -13.875011444091797
    6. 'is' → logprob: -14.250011444091797
    7. 'IST' → logprob: -14.375011444091797
    8. ' ist' → logprob: -15.875011444091797
    9. '```' → logprob: -15.875011444091797
    10. 'ists' → logprob: -16.000011444091797

Token 1708: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.0339031834737398e-05
    2. '(' → logprob: -10.875020027160645
    3. 'N' → logprob: -14.625020027160645
    4. ' (' → logprob: -14.750020027160645
    5. '```' → logprob: -15.125020027160645
    6. '=' → logprob: -16.12502098083496
    7. '(n' → logprob: -17.50002098083496
    8. '[N' → logprob: -18.00002098083496
    9. '(len' → logprob: -18.12502098083496
    10. '\(' → logprob: -18.25002098083496

Token 1709: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975662797689438
    2. ')
' → logprob: -3.529756546020508
    3. ')
' → logprob: -12.404756546020508
    4. '   ' → logprob: -13.529756546020508
    5. ')

' → logprob: -15.029756546020508
    6. ' )' → logprob: -15.654756546020508
    7. ')#' → logprob: -16.904756546020508
    8. ' )
' → logprob: -17.529756546020508
    9. ')`
' → logprob: -17.529756546020508
    10. '())' → logprob: -17.654756546020508

Token 1710: '   ' (ID: 271)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.05095889791846275
    2. '   ' → logprob: -3.0509588718414307
    3. ' build' → logprob: -6.05095911026001
    4. '```' → logprob: -12.175958633422852
    5. '	build' → logprob: -12.300958633422852
    6. '(build' → logprob: -13.425958633422852
    7. ' ' → logprob: -14.800958633422852
    8. '  ' → logprob: -14.800958633422852
    9. '.build' → logprob: -15.050958633422852
    10. '
' → logprob: -15.300958633422852

Token 1711: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.0006788347964175045
    2. ' build' → logprob: -7.375679016113281
    3. '   ' → logprob: -9.875679016113281
    4. '```' → logprob: -14.500679016113281
    5. '	build' → logprob: -15.750679016113281
    6. '(build' → logprob: -16.37567901611328
    7. '.build' → logprob: -17.00067901611328
    8. '
' → logprob: -17.12567901611328
    9. ' ' → logprob: -17.50067901611328
    10. '_build' → logprob: -18.12567901611328

Token 1712: '_ed' (ID: 92459)
  Prédit: '_ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ed' → logprob: -0.0031615570187568665
    2. '_ED' → logprob: -6.253161430358887
    3. 'ED' → logprob: -6.753161430358887
    4. 'ed' → logprob: -9.878161430358887
    5. '(' → logprob: -11.878161430358887
    6. '```' → logprob: -12.878161430358887
    7. '(ed' → logprob: -13.253161430358887
    8. 'Ed' → logprob: -14.003161430358887
    9. '_edge' → logprob: -14.878161430358887
    10. '`' → logprob: -15.128161430358887

Token 1713: 'gel' (ID: 9457)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.2521068751811981
    2. 'gel' → logprob: -1.5021069049835205
    3. 'EL' → logprob: -9.377106666564941
    4. 'GL' → logprob: -10.002106666564941
    5. 'GE' → logprob: -11.502106666564941
    6. 'Gel' → logprob: -11.627106666564941
    7. 'g' → logprob: -11.752106666564941
    8. ' GEL' → logprob: -12.252106666564941
    9. '
' → logprob: -12.502106666564941
    10. 'L' → logprob: -13.377106666564941

Token 1714: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0010869937250390649
    2. 'IST' → logprob: -6.876087188720703
    3. 'st' → logprob: -10.376087188720703
    4. '_list' → logprob: -11.751087188720703
    5. 'list' → logprob: -11.876087188720703
    6. '_' → logprob: -13.251087188720703
    7. 'el' → logprob: -13.876087188720703
    8. '[' → logprob: -13.876087188720703
    9. 'EL' → logprob: -14.001087188720703
    10. 'is' → logprob: -14.376087188720703

Token 1715: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -18.875
    3. '(EXIT' → logprob: -19.75
    4. '(DE' → logprob: -20.0
    5. ' (' → logprob: -20.375
    6. '(edge' → logprob: -20.5
    7. '   ' → logprob: -20.75
    8. '```' → logprob: -21.375
    9. '(E' → logprob: -21.5
    10. '(ARG' → logprob: -22.0

Token 1716: 'EDGE' (ID: 185822)
  Prédit: 'EDGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -1.0445127372804563e-05
    2. 'ED' → logprob: -11.62501049041748
    3. ' EDGE' → logprob: -13.75001049041748
    4. '_EDGE' → logprob: -15.62501049041748
    5. '(' → logprob: -16.125009536743164
    6. 'edge' → logprob: -17.500009536743164
    7. ')' → logprob: -17.750009536743164
    8. 'Edge' → logprob: -18.500009536743164
    9. '[' → logprob: -18.750009536743164
    10. '   ' → logprob: -19.000009536743164

Token 1717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ' ,' → logprob: -11.625014305114746
    3. ',
' → logprob: -12.875014305114746
    4. '   ' → logprob: -13.125014305114746
    5. ')' → logprob: -14.250014305114746
    6. '
' → logprob: -16.500015258789062
    7. '(' → logprob: -16.875015258789062
    8. '<|end|>' → logprob: -17.375015258789062
    9. '```' → logprob: -17.500015258789062
    10. 'import' → logprob: -17.750015258789062

Token 1718: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.048587486147880554
    2. ' ED' → logprob: -3.0485875606536865
    3. '_ED' → logprob: -16.298587799072266
    4. '   ' → logprob: -19.048587799072266
    5. 'EG' → logprob: -20.173587799072266
    6. 'ed' → logprob: -20.298587799072266
    7. ' ' → logprob: -20.423587799072266
    8. 'EDD' → logprob: -20.548587799072266
    9. 'EDGE' → logprob: -20.548587799072266
    10. 'AD' → logprob: -21.298587799072266

Token 1719: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0001238004770129919
    2. 'EL' → logprob: -9.000123977661133
    3. 'GL' → logprob: -15.125123977661133
    4. ' G' → logprob: -18.500123977661133
    5. ' GEL' → logprob: -18.625123977661133
    6. 'GLE' → logprob: -19.250123977661133
    7. 'GEST' → logprob: -19.500123977661133
    8. 'L' → logprob: -19.500123977661133
    9. '_G' → logprob: -19.750123977661133
    10. 'LIST' → logprob: -19.875123977661133

Token 1720: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.00015014449309092015
    2. 'LIST' → logprob: -9.000149726867676
    3. 'E' → logprob: -11.500149726867676
    4. 'L' → logprob: -11.750149726867676
    5. 'IST' → logprob: -13.000149726867676
    6. '_LIST' → logprob: -13.625149726867676
    7. 'G' → logprob: -13.750149726867676
    8. '_EL' → logprob: -14.500149726867676
    9. 'LE' → logprob: -14.625149726867676
    10. 'ELE' → logprob: -14.625149726867676

Token 1721: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0005707867676392198
    2. 'ST' → logprob: -7.500570774078369
    3. 'ist' → logprob: -11.750571250915527
    4. 'LIST' → logprob: -11.875571250915527
    5. 'EL' → logprob: -13.875571250915527
    6. 'L' → logprob: -14.375571250915527
    7. '   ' → logprob: -14.500571250915527
    8. ' IST' → logprob: -15.625571250915527
    9. 'IL' → logprob: -15.875571250915527
    10. '[' → logprob: -16.12557029724121

Token 1722: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053683727979660034
    2. ')
' → logprob: -3.3036837577819824
    3. '   ' → logprob: -4.178683757781982
    4. '
' → logprob: -8.803683280944824
    5. 'def' → logprob: -11.053683280944824
    6. '<|end|>' → logprob: -11.178683280944824
    7. ')
' → logprob: -12.803683280944824
    8. 'import' → logprob: -12.803683280944824
    9. '    
' → logprob: -12.803683280944824
    10. ' )' → logprob: -12.928683280944824

Token 1723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15204058587551117
    2. 'DEP' → logprob: -2.652040481567383
    3. ' DEP' → logprob: -2.652040481567383
    4. '
' → logprob: -11.027040481567383
    5. '   ' → logprob: -12.527040481567383
    6. '```' → logprob: -12.777040481567383
    7. '    
' → logprob: -12.902040481567383
    8. ' ' → logprob: -13.152040481567383
    9. 'DE' → logprob: -14.027040481567383
    10. '	' → logprob: -14.027040481567383

Token 1724: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' (adapté à ' DEP') → logprob: -1.759734732331708e-05
    2. '   ' → logprob: -11.000017166137695
    3. ' DEP' → logprob: -14.125017166137695
    4. 'DEPEND' → logprob: -17.250017166137695
    5. '#' → logprob: -18.250017166137695
    6. 'depth' → logprob: -18.375017166137695
    7. 'DE' → logprob: -18.750017166137695
    8. '
' → logprob: -19.250017166137695
    9. '    
' → logprob: -19.625017166137695
    10. ' ' → logprob: -19.625017166137695

Token 1725: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -2.339278580620885e-06
    2. 'H' → logprob: -13.625001907348633
    3. 'HT' → logprob: -14.125001907348633
    4. 'T' → logprob: -15.875001907348633
    5. '
' → logprob: -16.375001907348633
    6. ' TH' → logprob: -17.125001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'ETH' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'THON' → logprob: -18.625001907348633

Token 1726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ' ,' → logprob: -10.750039100646973
    3. ' =' → logprob: -11.250039100646973
    4. '=' → logprob: -12.750039100646973
    5. '```' → logprob: -15.125039100646973
    6. '[' → logprob: -15.250039100646973
    7. '_,' → logprob: -15.500039100646973
    8. ',
' → logprob: -15.500039100646973
    9. '<|end|>' → logprob: -15.750039100646973
    10. '‌,' → logprob: -16.625038146972656

Token 1727: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.1602344810962677
    2. ' USED' → logprob: -1.9102344512939453
    3. '_USED' → logprob: -11.785234451293945
    4. 'used' → logprob: -13.910234451293945
    5. ' used' → logprob: -14.410234451293945
    6. 'USE' → logprob: -14.785234451293945
    7. ' ' → logprob: -15.035234451293945
    8. 'Used' → logprob: -15.285234451293945
    9. 'US' → logprob: -16.285234451293945
    10. '   ' → logprob: -16.785234451293945

Token 1728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '=create' → logprob: -16.511871337890625
    4. '＝' → logprob: -18.261871337890625
    5. '=N' → logprob: -18.261871337890625
    6. ' ' → logprob: -18.386871337890625
    7. '=
' → logprob: -18.636871337890625
    8. '=get' → logprob: -19.636871337890625
    9. '=_' → logprob: -20.136871337890625
    10. ',' → logprob: -20.261871337890625

Token 1729: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.493430894101039e-05
    2. ' init' → logprob: -9.500075340270996
    3. '	init' → logprob: -19.00007438659668
    4. '(init' → logprob: -19.12507438659668
    5. '   ' → logprob: -20.75007438659668
    6. '_init' → logprob: -21.25007438659668
    7. ' ' → logprob: -21.37507438659668
    8. '.init' → logprob: -22.00007438659668
    9. '  ' → logprob: -22.50007438659668
    10. '-init' → logprob: -23.75007438659668

Token 1730: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -7.541112427134067e-05
    2. 'depth' → logprob: -9.625075340270996
    3. '_DEPTH' → logprob: -11.750075340270996
    4. 'DEP' → logprob: -14.500075340270996
    5. 'Depth' → logprob: -14.750075340270996
    6. '(depth' → logprob: -15.500075340270996
    7. '_de' → logprob: -16.000076293945312
    8. ' depth' → logprob: -17.125076293945312
    9. 'def' → logprob: -17.625076293945312
    10. '```' → logprob: -17.875076293945312

Token 1731: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -3.392824874026701e-05
    2. 'and' → logprob: -10.37503433227539
    3. '_depth' → logprob: -14.25003433227539
    4. '_AND' → logprob: -14.50003433227539
    5. '(N' → logprob: -14.62503433227539
    6. 'And' → logprob: -15.25003433227539
    7. '   ' → logprob: -15.87503433227539
    8. '```' → logprob: -15.87503433227539
    9. ',' → logprob: -16.12503433227539
    10. 'depth' → logprob: -16.50003433227539

Token 1732: '_used' (ID: 67016)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0005985465249978006
    2. '_used' → logprob: -7.500598430633545
    3. 'Used' → logprob: -10.750598907470703
    4. '0' → logprob: -10.875598907470703
    5. 'USED' → logprob: -13.000598907470703
    6. ' used' → logprob: -14.000598907470703
    7. '1' → logprob: -14.500598907470703
    8. 'init' → logprob: -14.750598907470703
    9. 'use' → logprob: -15.125598907470703
    10. '
' → logprob: -15.375598907470703

Token 1733: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.054500666621607e-06
    2. 'N' → logprob: -14.00000286102295
    3. '(' → logprob: -14.62500286102295
    4. '<|end|>' → logprob: -14.75000286102295
    5. 'def' → logprob: -14.87500286102295
    6. ' (' → logprob: -15.00000286102295
    7. '   ' → logprob: -15.12500286102295
    8. '```' → logprob: -16.000003814697266
    9. '
' → logprob: -16.500003814697266
    10. '(
' → logprob: -16.750003814697266

Token 1734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030891617760062218
    2. ')
' → logprob: -3.5308916568756104
    3. '   ' → logprob: -6.780891418457031
    4. ')
' → logprob: -12.655891418457031
    5. ' )' → logprob: -14.030891418457031
    6. ' ' → logprob: -14.780891418457031
    7. '
' → logprob: -15.655891418457031
    8. ' )
' → logprob: -15.780891418457031
    9. ')

' → logprob: -15.780891418457031
    10. '  ' → logprob: -16.40589141845703

Token 1735: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00041398804751224816
    2. '   ' → logprob: -8.37541389465332
    3. ' E' → logprob: -8.62541389465332
    4. '```' → logprob: -14.00041389465332
    5. ' ' → logprob: -14.12541389465332
    6. '	E' → logprob: -14.37541389465332
    7. '  ' → logprob: -14.50041389465332
    8. 'def' → logprob: -15.25041389465332
    9. '>E' → logprob: -15.37541389465332
    10. '
' → logprob: -15.87541389465332

Token 1736: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -1.981667537620524e-06
    2. ' E' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '#' → logprob: -16.250001907348633
    5. 'def' → logprob: -16.250001907348633
    6. '```' → logprob: -16.375001907348633
    7. 'process' → logprob: -17.500001907348633
    8. '`' → logprob: -17.750001907348633
    9. '>E' → logprob: -17.750001907348633
    10. 'return' → logprob: -18.000001907348633

Token 1737: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -1.8624639324116288e-06
    2. 'ULAR' → logprob: -14.000001907348633
    3. 'uler' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '_UL' → logprob: -15.875001907348633
    6. 'ULL' → logprob: -16.250001907348633
    7. 'UEL' → logprob: -16.250001907348633
    8. 'UR' → logprob: -17.250001907348633
    9. '```' → logprob: -17.500001907348633
    10. '
' → logprob: -17.500001907348633

Token 1738: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -3.128163257315464e-07
    2. '_ER' → logprob: -16.125
    3. '   ' → logprob: -17.625
    4. '
' → logprob: -17.625
    5. 'ЕР' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. ' ER' → logprob: -18.5
    8. 'E' → logprob: -19.0
    9. '=' → logprob: -19.625
    10. '\' → logprob: -20.0

Token 1739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629096508026
    2. '=' → logprob: -1.313262939453125
    3. '_' → logprob: -15.063262939453125
    4. '=create' → logprob: -15.438262939453125
    5. '＝' → logprob: -15.938262939453125
    6. ' +=' → logprob: -16.313262939453125
    7. ',' → logprob: -16.688262939453125
    8. '.extend' → logprob: -16.688262939453125
    9. '_=' → logprob: -16.938262939453125
    10. ' ' → logprob: -16.938262939453125

Token 1740: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.07888978719711304
    2. ' make' → logprob: -2.578889846801758
    3. '(make' → logprob: -18.203889846801758
    4. '	make' → logprob: -18.203889846801758
    5. ' ' → logprob: -21.203889846801758
    6. '   ' → logprob: -21.328889846801758
    7. '.make' → logprob: -21.578889846801758
    8. '_make' → logprob: -23.078889846801758
    9. ' ' → logprob: -23.828889846801758
    10. '  ' → logprob: -23.953889846801758

Token 1741: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.004142507445067167
    2. 'e' → logprob: -5.5041422843933105
    3. 'Euler' → logprob: -10.129142761230469
    4. 'E' → logprob: -12.379142761230469
    5. '```' → logprob: -12.629142761230469
    6. '_t' → logprob: -13.004142761230469
    7. 'uler' → logprob: -13.379142761230469
    8. '_empty' → logprob: -13.504142761230469
    9. 'empty' → logprob: -13.629142761230469
    10. '.euler' → logprob: -13.879142761230469

Token 1742: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -1.6405310816480778e-05
    2. '_' → logprob: -12.125016212463379
    3. 'ul' → logprob: -12.250016212463379
    4. 'ler' → logprob: -13.375016212463379
    5. 'ule' → logprob: -13.500016212463379
    6. '[' → logprob: -14.750016212463379
    7. 'ulers' → logprob: -14.750016212463379
    8. 'u' → logprob: -15.000016212463379
    9. '
' → logprob: -15.000016212463379
    10. '{' → logprob: -15.375016212463379

Token 1743: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00015514736878685653
    2. ' _' → logprob: -9.000155448913574
    3. '_' → logprob: -11.000155448913574
    4. 'tour' → logprob: -11.625155448913574
    5. '_T' → logprob: -13.250155448913574
    6. 'Tour' → logprob: -13.500155448913574
    7. '(_' → logprob: -14.375155448913574
    8. '```' → logprob: -15.500155448913574
    9. 't' → logprob: -15.625155448913574
    10. '(' → logprob: -15.625155448913574

Token 1744: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00019507692195475101
    2. 'tour' → logprob: -9.125195503234863
    3. 'ur' → logprob: -10.125195503234863
    4. 'Our' → logprob: -11.375195503234863
    5. 'ou' → logprob: -11.625195503234863
    6. 'OUR' → logprob: -11.875195503234863
    7. 'or' → logprob: -12.000195503234863
    8. '
' → logprob: -13.375195503234863
    9. 'Tour' → logprob: -13.625195503234863
    10. 'ours' → logprob: -13.750195503234863

Token 1745: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012761499965563416
    2. '(' → logprob: -9.000127792358398
    3. ' (' → logprob: -13.250127792358398
    4. '```' → logprob: -13.875127792358398
    5. '(
' → logprob: -14.000127792358398
    6. '   ' → logprob: -15.125127792358398
    7. 'N' → logprob: -16.0001277923584
    8. '\(' → logprob: -16.6251277923584
    9. '(n' → logprob: -17.1251277923584
    10. '
' → logprob: -17.2501277923584

Token 1746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ',
' → logprob: -11.250016212463379
    3. ' ,' → logprob: -13.375016212463379
    4. '   ' → logprob: -13.875016212463379
    5. ')' → logprob: -14.875016212463379
    6. '(' → logprob: -16.125017166137695
    7. '‌,' → logprob: -16.250017166137695
    8. ',N' → logprob: -16.625017166137695
    9. ',E' → logprob: -16.625017166137695
    10. '<|end|>' → logprob: -16.750017166137695

Token 1747: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.007610413245856762
    2. ' ED' → logprob: -4.882610321044922
    3. '_ED' → logprob: -13.257610321044922
    4. '   ' → logprob: -13.632610321044922
    5. ' ' → logprob: -14.757610321044922
    6. '
' → logprob: -15.757610321044922
    7. '    ' → logprob: -16.007610321044922
    8. '
' → logprob: -16.007610321044922
    9. 'EG' → logprob: -16.132610321044922
    10. 'E' → logprob: -16.632610321044922

Token 1748: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.961759259458631e-06
    2. 'EL' → logprob: -12.625004768371582
    3. ' G' → logprob: -14.875004768371582
    4. 'EG' → logprob: -15.000004768371582
    5. '
' → logprob: -15.125004768371582
    6. 'GL' → logprob: -15.750004768371582
    7. '   ' → logprob: -16.6250057220459
    8. 'LIST' → logprob: -16.6250057220459
    9. 'UEL' → logprob: -16.7500057220459
    10. '```' → logprob: -16.8750057220459

Token 1749: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.0006533435662277043
    2. 'LIST' → logprob: -7.750653266906738
    3. 'IST' → logprob: -9.125653266906738
    4. 'G' → logprob: -9.500653266906738
    5. 'ED' → logprob: -11.375653266906738
    6. 'L' → logprob: -11.875653266906738
    7. 'E' → logprob: -12.500653266906738
    8. '_LIST' → logprob: -12.875653266906738
    9. '_EL' → logprob: -13.000653266906738
    10. 'UEL' → logprob: -13.125653266906738

Token 1750: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.00046284322161227465
    2. 'ST' → logprob: -8.125462532043457
    3. 'ist' → logprob: -9.500462532043457
    4. 'LIST' → logprob: -10.000462532043457
    5. 'T' → logprob: -12.000462532043457
    6. 'EL' → logprob: -12.125462532043457
    7. 'ISTS' → logprob: -12.375462532043457
    8. '   ' → logprob: -12.500462532043457
    9. '
' → logprob: -12.625462532043457
    10. 'I' → logprob: -12.750462532043457

Token 1751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. '   ' → logprob: -11.000036239624023
    3. ' ,' → logprob: -11.125036239624023
    4. ',
' → logprob: -13.125036239624023
    5. ')' → logprob: -13.125036239624023
    6. 'def' → logprob: -15.125036239624023
    7. ',U' → logprob: -15.625036239624023
    8. '[' → logprob: -16.500036239624023
    9. '<|end|>' → logprob: -16.875036239624023
    10. '_,' → logprob: -17.000036239624023

Token 1752: ' DEP' (ID: 116549)
  Prédit: 'DEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEP' → logprob: -0.0019317318219691515
    2. ' DEP' → logprob: -6.251931667327881
    3. 'USED' → logprob: -12.751932144165039
    4. 'DEPEND' → logprob: -16.00193214416504
    5. 'DE' → logprob: -16.62693214416504
    6. '
' → logprob: -17.87693214416504
    7. ' USED' → logprob: -18.12693214416504
    8. 'DEF' → logprob: -18.50193214416504
    9. '_DEP' → logprob: -18.62693214416504
    10. 'used' → logprob: -18.62693214416504

Token 1753: 'TH' (ID: 4867)
  Prédit: 'TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TH' → logprob: -5.12127808178775e-05
    2. 'H' → logprob: -10.000051498413086
    3. 'HT' → logprob: -12.125051498413086
    4. ' TH' → logprob: -15.875051498413086
    5. 'ETH' → logprob: -16.625051498413086
    6. '```' → logprob: -16.750051498413086
    7. '
' → logprob: -17.375051498413086
    8. 'T' → logprob: -18.250051498413086
    9. 'th' → logprob: -18.375051498413086
    10. ' H' → logprob: -18.625051498413086

Token 1754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ',U' → logprob: -12.250011444091797
    3. ' ,' → logprob: -12.875011444091797
    4. ',
' → logprob: -13.125011444091797
    5. '   ' → logprob: -13.125011444091797
    6. ')' → logprob: -16.000011444091797
    7. '[' → logprob: -16.375011444091797
    8. '‌,' → logprob: -16.500011444091797
    9. ',\
' → logprob: -16.875011444091797
    10. '<|end|>' → logprob: -17.250011444091797

Token 1755: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.0003365350130479783
    2. ' USED' → logprob: -8.000336647033691
    3. '_USED' → logprob: -14.250336647033691
    4. 'used' → logprob: -15.625336647033691
    5. 'USE' → logprob: -16.000335693359375
    6. 'US' → logprob: -16.500335693359375
    7. 'Used' → logprob: -16.875335693359375
    8. '   ' → logprob: -17.500335693359375
    9. '
' → logprob: -17.750335693359375
    10. '0' → logprob: -18.250335693359375

Token 1756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '   ' → logprob: -11.500014305114746
    3. ')
' → logprob: -12.500014305114746
    4. ' )' → logprob: -14.500014305114746
    5. '))' → logprob: -16.750015258789062
    6. ',' → logprob: -16.750015258789062
    7. ')#' → logprob: -17.125015258789062
    8. '),' → logprob: -18.125015258789062
    9. ')}' → logprob: -18.250015258789062
    10. ' ' → logprob: -18.375015258789062

Token 1757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1858283281326294
    2. 'MIN' → logprob: -1.8108283281326294
    3. ' MIN' → logprob: -5.68582820892334
    4. 'seg' → logprob: -6.18582820892334
    5. ' seg' → logprob: -8.31082820892334
    6. ' ' → logprob: -9.43582820892334
    7. 'SEG' → logprob: -9.43582820892334
    8. '```' → logprob: -9.43582820892334
    9. '  ' → logprob: -9.56082820892334
    10. '
' → logprob: -11.68582820892334

Token 1758: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -0.02423105388879776
    2. 'seg' → logprob: -3.77423095703125
    3. '   ' → logprob: -7.14923095703125
    4. 'SEG' → logprob: -8.64923095703125
    5. ' MIN' → logprob: -10.89923095703125
    6. ' seg' → logprob: -13.02423095703125
    7. '```' → logprob: -14.39923095703125
    8. ' ' → logprob: -14.39923095703125
    9. 'segment' → logprob: -14.64923095703125
    10. 'LEN' → logprob: -14.77423095703125

Token 1759: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.9361264946837764e-07
    2. ',' → logprob: -15.75
    3. 'p' → logprob: -17.5
    4. ' P' → logprob: -18.5
    5. '_P' → logprob: -18.875
    6. '_' → logprob: -19.0
    7. '```' → logprob: -19.75
    8. ',P' → logprob: -20.125
    9. '
' → logprob: -20.25
    10. '=' → logprob: -20.25

Token 1760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ' ,' → logprob: -10.000055313110352
    3. ',P' → logprob: -12.500055313110352
    4. '=' → logprob: -13.000055313110352
    5. ',p' → logprob: -13.500055313110352
    6. ' =' → logprob: -13.875055313110352
    7. '_,' → logprob: -14.625055313110352
    8. ',
' → logprob: -15.000055313110352
    9. '‌,' → logprob: -15.250055313110352
    10. '   ' → logprob: -15.375055313110352

Token 1761: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.002475777640938759
    2. ' MAX' → logprob: -6.002475738525391
    3. '(MAX' → logprob: -17.37747573852539
    4. '_MAX' → logprob: -18.25247573852539
    5. 'MIN' → logprob: -18.87747573852539
    6. 'Max' → logprob: -19.87747573852539
    7. ' ' → logprob: -20.25247573852539
    8. 'max' → logprob: -20.50247573852539
    9. '
' → logprob: -21.00247573852539
    10. '.MAX' → logprob: -21.37747573852539

Token 1762: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0280383548888494e-06
    2. ',' → logprob: -15.500000953674316
    3. '=' → logprob: -15.750000953674316
    4. '_P' → logprob: -15.750000953674316
    5. '```' → logprob: -16.250001907348633
    6. ' =' → logprob: -16.250001907348633
    7. '<|end|>' → logprob: -16.250001907348633
    8. '_p' → logprob: -16.500001907348633
    9. ' P' → logprob: -16.625001907348633
    10. '_' → logprob: -16.875001907348633

Token 1763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520163953304291
    2. ' =' → logprob: -1.5020164251327515
    3. ',' → logprob: -9.377016067504883
    4. '=p' → logprob: -13.752016067504883
    5. '   ' → logprob: -14.252016067504883
    6. ',p' → logprob: -14.877016067504883
    7. ' ' → logprob: -15.752016067504883
    8. '	' → logprob: -16.127016067504883
    9. '=create' → logprob: -16.502016067504883
    10. '＝' → logprob: -17.252016067504883

Token 1764: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01814994215965271
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -19.518150329589844
    4. '(min' → logprob: -19.893150329589844
    5. ' ' → logprob: -20.143150329589844
    6. '   ' → logprob: -21.143150329589844
    7. 'max' → logprob: -21.268150329589844
    8. '
' → logprob: -21.393150329589844
    9. '[min' → logprob: -21.893150329589844
    10. 'm' → logprob: -22.268150329589844

Token 1765: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.000156577822053805
    2. 'max' → logprob: -9.00015640258789
    3. 'p' → logprob: -10.62515640258789
    4. '_p' → logprob: -13.00015640258789
    5. '_min' → logprob: -13.00015640258789
    6. '_MAX' → logprob: -13.62515640258789
    7. 'MAX' → logprob: -14.50015640258789
    8. '(max' → logprob: -14.87515640258789
    9. 'P' → logprob: -15.12515640258789
    10. 'Max' → logprob: -15.25015640258789

Token 1766: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00029232146334834397
    2. 'p' → logprob: -8.250292778015137
    3. '_from' → logprob: -10.875292778015137
    4. 'from' → logprob: -11.625292778015137
    5. '```' → logprob: -13.750292778015137
    6. '_max' → logprob: -14.375292778015137
    7. 'P' → logprob: -14.875292778015137
    8. '_per' → logprob: -15.750292778015137
    9. '_pr' → logprob: -15.875292778015137
    10. 'def' → logprob: -16.00029182434082

Token 1767: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0006316631333902478
    2. 'from' → logprob: -7.375631809234619
    3. 'From' → logprob: -12.875631332397461
    4. '_FROM' → logprob: -13.500631332397461
    5. 's' → logprob: -14.875631332397461
    6. '```' → logprob: -15.125631332397461
    7. '从' → logprob: -16.25063133239746
    8. 'FROM' → logprob: -16.87563133239746
    9. 'rom' → logprob: -16.87563133239746
    10. 'f' → logprob: -17.25063133239746

Token 1768: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.04875575006008148
    2. 'e' → logprob: -3.048755645751953
    3. 'E' → logprob: -8.798755645751953
    4. 'def' → logprob: -11.673755645751953
    5. '```' → logprob: -12.423755645751953
    6. 'the' → logprob: -13.548755645751953
    7. 'Euler' → logprob: -14.798755645751953
    8. '_E' → logprob: -15.173755645751953
    9. 's' → logprob: -15.423755645751953
    10. '(e' → logprob: -15.423755645751953

Token 1769: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.00011641718447208405
    2. 'ler' → logprob: -9.750116348266602
    3. 'ul' → logprob: -10.375116348266602
    4. 'uer' → logprob: -11.750116348266602
    5. 'ule' → logprob: -12.750116348266602
    6. '```' → logprob: -12.875116348266602
    7. 'E' → logprob: -13.375116348266602
    8. 'ulers' → logprob: -13.500116348266602
    9. 'e' → logprob: -13.750116348266602
    10. 'uel' → logprob: -14.000116348266602

Token 1770: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009183663059957325
    2. '(E' → logprob: -7.375918388366699
    3. '(' → logprob: -9.2509183883667
    4. 'E' → logprob: -9.5009183883667
    5. 'N' → logprob: -10.1259183883667
    6. 'from' → logprob: -10.6259183883667
    7. ',' → logprob: -11.1259183883667
    8. ',N' → logprob: -11.7509183883667
    9. 'def' → logprob: -11.8759183883667
    10. ' (' → logprob: -12.6259183883667

Token 1771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004285195842385292
    2. ',E' → logprob: -5.5042853355407715
    3. '(E' → logprob: -8.629284858703613
    4. ' ,' → logprob: -11.004284858703613
    5. '   ' → logprob: -11.754284858703613
    6. ',
' → logprob: -13.629284858703613
    7. 'E' → logprob: -13.754284858703613
    8. ')' → logprob: -14.129284858703613
    9. '```' → logprob: -15.879284858703613
    10. '=' → logprob: -16.12928581237793

Token 1772: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0015024791937321424
    2. ' E' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. '	E' → logprob: -18.751502990722656
    5. '>E' → logprob: -19.501502990722656
    6. '[E' → logprob: -19.751502990722656
    7. ')' → logprob: -20.001502990722656
    8. '(E' → logprob: -20.251502990722656
    9. ',E' → logprob: -20.501502990722656
    10. ' ' → logprob: -20.751502990722656

Token 1773: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -3.8889261304575484e-06
    2. 'UR' → logprob: -13.625003814697266
    3. 'ULAR' → logprob: -14.250003814697266
    4. 'ULL' → logprob: -14.625003814697266
    5. 'uler' → logprob: -14.625003814697266
    6. '_UL' → logprob: -15.750003814697266
    7. '```' → logprob: -15.750003814697266
    8. 'U' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.500003814697266
    10. 'UEL' → logprob: -16.625003814697266

Token 1774: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -9.610702363715973e-06
    2. 'R' → logprob: -12.125009536743164
    3. 'E' → logprob: -14.375009536743164
    4. 'OR' → logprob: -14.500009536743164
    5. '
' → logprob: -14.625009536743164
    6. 'EL' → logprob: -14.750009536743164
    7. '[' → logprob: -14.750009536743164
    8. '   ' → logprob: -15.000009536743164
    9. '_ER' → logprob: -15.500009536743164
    10. '```' → logprob: -15.750009536743164

Token 1775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20765690505504608
    2. ')
' → logprob: -1.7076568603515625
    3. '   ' → logprob: -5.0826568603515625
    4. ')
' → logprob: -11.082656860351562
    5. ',' → logprob: -13.082656860351562
    6. ' ' → logprob: -14.082656860351562
    7. '  ' → logprob: -14.332656860351562
    8. '()' → logprob: -14.832656860351562
    9. 'def' → logprob: -15.082656860351562
    10. ' )' → logprob: -15.957656860351562

Token 1776: '   ' (ID: 271)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.10751570016145706
    2. '   ' → logprob: -2.357515811920166
    3. 'SEG' → logprob: -4.982515811920166
    4. '```' → logprob: -8.482515335083008
    5. ' seg' → logprob: -8.982515335083008
    6. '
' → logprob: -10.857515335083008
    7. '(seg' → logprob: -11.482515335083008
    8. ' ' → logprob: -11.607515335083008
    9. ' SEG' → logprob: -11.607515335083008
    10. 'SE' → logprob: -11.732515335083008

Token 1777: ' LEN' (ID: 187408)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.017449883744120598
    2. '   ' → logprob: -4.267449855804443
    3. 'SEG' → logprob: -6.142449855804443
    4. ' seg' → logprob: -6.892449855804443
    5. '```' → logprob: -9.892450332641602
    6. '
' → logprob: -10.892450332641602
    7. ' SEG' → logprob: -11.642450332641602
    8. 'def' → logprob: -12.142450332641602
    9. '``' → logprob: -12.392450332641602
    10. 'segment' → logprob: -12.642450332641602

Token 1778: ' =' (ID: 314)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.13595521450042725
    2. 'P' → logprob: -2.135955333709717
    3. ' =' → logprob: -5.760955333709717
    4. 'seg' → logprob: -6.135955333709717
    5. '=' → logprob: -7.135955333709717
    6. 'g' → logprob: -7.135955333709717
    7. 'EG' → logprob: -8.260954856872559
    8. 'EL' → logprob: -8.260954856872559
    9. 'p' → logprob: -8.510954856872559
    10. 'SEG' → logprob: -8.635954856872559

Token 1779: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6162712574005127
    2. 'N' → logprob: -0.8662712574005127
    3. 'make' → logprob: -3.9912712574005127
    4. ' len' → logprob: -5.116271018981934
    5. '(len' → logprob: -5.366271018981934
    6. ' N' → logprob: -5.616271018981934
    7. 'min' → logprob: -5.741271018981934
    8. '(N' → logprob: -6.866271018981934
    9. 'E' → logprob: -7.366271018981934
    10. '(make' → logprob: -8.116271018981934

Token 1780: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -4.453737710718997e-05
    2. 'E' → logprob: -10.500044822692871
    3. '(' → logprob: -11.625044822692871
    4. '(M' → logprob: -12.500044822692871
    5. 'str' → logprob: -14.375044822692871
    6. '(L' → logprob: -14.625044822692871
    7. '(A' → logprob: -14.750044822692871
    8. '(S' → logprob: -14.750044822692871
    9. '
' → logprob: -14.875044822692871
    10. '(P' → logprob: -15.125044822692871

Token 1781: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -1.7835754988482222e-05
    2. 'UR' → logprob: -11.625018119812012
    3. 'ULAR' → logprob: -12.250018119812012
    4. 'uler' → logprob: -14.000018119812012
    5. 'U' → logprob: -14.625018119812012
    6. ' UL' → logprob: -14.750018119812012
    7. 'UEL' → logprob: -15.000018119812012
    8. '_UL' → logprob: -15.000018119812012
    9. '```' → logprob: -15.375018119812012
    10. 'ULL' → logprob: -15.375018119812012

Token 1782: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.003345017321407795
    2. 'R' → logprob: -5.878345012664795
    3. 'E' → logprob: -7.753345012664795
    4. 'OR' → logprob: -9.253345489501953
    5. 'UR' → logprob: -12.753345489501953
    6. 'er' → logprob: -13.003345489501953
    7. '(R' → logprob: -14.253345489501953
    8. 'EL' → logprob: -14.378345489501953
    9. 'AR' → logprob: -14.628345489501953
    10. 'UL' → logprob: -14.628345489501953

Token 1783: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16675183176994324
    2. ')
' → logprob: -1.9167518615722656
    3. '   ' → logprob: -5.041751861572266
    4. '
' → logprob: -11.041751861572266
    5. 'def' → logprob: -11.791751861572266
    6. ' )' → logprob: -12.791751861572266
    7. '```' → logprob: -13.166751861572266
    8. ')
' → logprob: -13.291751861572266
    9. '()' → logprob: -13.291751861572266
    10. '#' → logprob: -13.541751861572266

Token 1784: '   ' (ID: 271)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.06400081515312195
    2. '   ' → logprob: -2.8140008449554443
    3. ' seg' → logprob: -6.564000606536865
    4. 'SEG' → logprob: -8.064001083374023
    5. '```' → logprob: -8.189001083374023
    6. ' SEG' → logprob: -11.814001083374023
    7. '
' → logprob: -12.439001083374023
    8. 'Seg' → logprob: -12.689001083374023
    9. '(seg' → logprob: -12.814001083374023
    10. 'segment' → logprob: -13.064001083374023

Token 1785: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.0022000980097800493
    2. 'SEG' → logprob: -6.752200126647949
    3. '   ' → logprob: -7.377200126647949
    4. ' seg' → logprob: -7.877200126647949
    5. ' SEG' → logprob: -11.87720012664795
    6. 'segment' → logprob: -12.37720012664795
    7. '```' → logprob: -12.37720012664795
    8. '
' → logprob: -12.37720012664795
    9. 'Seg' → logprob: -13.25220012664795
    10. '(seg' → logprob: -14.25220012664795

Token 1786: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -6.420598219847307e-05
    2. '_' → logprob: -10.5000638961792
    3. 'el' → logprob: -11.6250638961792
    4. '_elements' → logprob: -11.8750638961792
    5. '_ent' → logprob: -12.2500638961792
    6. '_e' → logprob: -12.5000638961792
    7. '_ele' → logprob: -13.1250638961792
    8. '_en' → logprob: -13.3750638961792
    9. '	el' → logprob: -13.3750638961792
    10. ' _' → logprob: -13.3750638961792

Token 1787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510355561971664
    2. '=' → logprob: -4.387510299682617
    3. ' ' → logprob: -14.762510299682617
    4. '   ' → logprob: -15.887510299682617
    5. '	' → logprob: -16.512510299682617
    6. 's' → logprob: -16.637510299682617
    7. '＝' → logprob: -17.012510299682617
    8. ' ' → logprob: -17.262510299682617
    9. '_' → logprob: -17.512510299682617
    10. ' =)' → logprob: -17.887510299682617

Token 1788: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.002103625563904643
    2. ' make' → logprob: -6.252103805541992
    3. '1' → logprob: -8.752103805541992
    4. '(make' → logprob: -11.627103805541992
    5. '   ' → logprob: -12.252103805541992
    6. '	make' → logprob: -12.877103805541992
    7. ' ' → logprob: -15.252103805541992
    8. '2' → logprob: -15.502103805541992
    9. '(' → logprob: -16.752103805541992
    10. '128' → logprob: -17.377103805541992

Token 1789: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.07080885022878647
    2. 'segment' → logprob: -2.6958088874816895
    3. 'ment' → logprob: -7.8208088874816895
    4. 'gment' → logprob: -8.570808410644531
    5. '_length' → logprob: -9.820808410644531
    6. 'egment' → logprob: -10.195808410644531
    7. 'seg' → logprob: -10.445808410644531
    8. 'ent' → logprob: -11.070808410644531
    9. '_segments' → logprob: -11.195808410644531
    10. 'Segment' → logprob: -11.320808410644531

Token 1790: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0016698228428140283
    2. 'elements' → logprob: -6.501669883728027
    3. '_el' → logprob: -10.001669883728027
    4. '_len' → logprob: -10.626669883728027
    5. '_length' → logprob: -10.876669883728027
    6. '```' → logprob: -10.876669883728027
    7. '_ELEMENTS' → logprob: -11.376669883728027
    8. '_element' → logprob: -11.876669883728027
    9. '_segments' → logprob: -12.251669883728027
    10. '_ele' → logprob: -12.251669883728027

Token 1791: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0008526319288648665
    2. 'LEN' → logprob: -7.375852584838867
    3. 'L' → logprob: -9.000852584838867
    4. '(len' → logprob: -9.500852584838867
    5. ' LEN' → logprob: -11.125852584838867
    6. 'len' → logprob: -12.000852584838867
    7. 'Len' → logprob: -12.125852584838867
    8. '	L' → logprob: -14.875852584838867
    9. '(' → logprob: -14.875852584838867
    10. '_LEN' → logprob: -15.750852584838867

Token 1792: 'EN' (ID: 1262)
  Prédit: 'EN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EN' → logprob: -0.0005006087594665587
    2. 'E' → logprob: -7.625500679016113
    3. 'en' → logprob: -12.375500679016113
    4. 'EL' → logprob: -13.000500679016113
    5. 'LEN' → logprob: -13.250500679016113
    6. 'En' → logprob: -14.250500679016113
    7. 'ET' → logprob: -14.875500679016113
    8. 'L' → logprob: -15.125500679016113
    9. ')' → logprob: -15.250500679016113
    10. 'N' → logprob: -15.250500679016113

Token 1793: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010365027701482177
    2. ')
' → logprob: -6.876036643981934
    3. '   ' → logprob: -13.626036643981934
    4. '<|end|>' → logprob: -14.751036643981934
    5. ' )' → logprob: -15.001036643981934
    6. '())' → logprob: -15.001036643981934
    7. ')
' → logprob: -15.251036643981934
    8. ')L' → logprob: -15.376036643981934
    9. '<|end|>' → logprob: -15.501036643981934
    10. ')#' → logprob: -15.626036643981934

Token 1794: '   ' (ID: 271)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.20574553310871124
    2. '   ' → logprob: -1.7057455778121948
    3. ' SEG' → logprob: -5.830745697021484
    4. '```' → logprob: -6.830745697021484
    5. '
' → logprob: -8.955745697021484
    6. 'seg' → logprob: -9.580745697021484
    7. '_SEG' → logprob: -9.955745697021484
    8. '``' → logprob: -11.080745697021484
    9. 'SE' → logprob: -11.205745697021484
    10. '    
' → logprob: -11.705745697021484

Token 1795: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.0003980184264946729
    2. ' SEG' → logprob: -7.8753981590271
    3. '```' → logprob: -11.625397682189941
    4. '   ' → logprob: -13.000397682189941
    5. 'seg' → logprob: -13.000397682189941
    6. '
' → logprob: -13.500397682189941
    7. '_SEG' → logprob: -13.750397682189941
    8. 'SE' → logprob: -13.875397682189941
    9. 'SEQ' → logprob: -15.000397682189941
    10. '``' → logprob: -16.250398635864258

Token 1796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023257939144968987
    2. '=' → logprob: -3.7732579708099365
    3. ',' → logprob: -12.023258209228516
    4. '[' → logprob: -12.773258209228516
    5. '_' → logprob: -14.398258209228516
    6. ' =[' → logprob: -14.398258209228516
    7. '	' → logprob: -14.523258209228516
    8. '=[' → logprob: -15.523258209228516
    9. '   ' → logprob: -15.523258209228516
    10. '  ' → logprob: -15.523258209228516

Token 1797: ' init' (ID: 6327)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.001763359410688281
    2. 'init' → logprob: -6.501763343811035
    3. ' [(' → logprob: -8.376763343811035
    4. '[' → logprob: -10.751763343811035
    5. '[((' → logprob: -12.126763343811035
    6. ' init' → logprob: -12.626763343811035
    7. '[]' → logprob: -15.001763343811035
    8. '([(' → logprob: -15.751763343811035
    9. ' [' → logprob: -16.50176429748535
    10. '(init' → logprob: -16.62676429748535

Token 1798: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.415778785943985
    2. '_SEG' → logprob: -1.1657787561416626
    3. 'SEG' → logprob: -4.165778636932373
    4. '[(' → logprob: -5.540778636932373
    5. '[' → logprob: -5.665778636932373
    6. 'segment' → logprob: -5.915778636932373
    7. '_seg' → logprob: -6.915778636932373
    8. 'seg' → logprob: -7.540778636932373
    9. '_' → logprob: -8.415779113769531
    10. '_segments' → logprob: -8.540779113769531

Token 1799: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.0002997120900545269
    2. 'seg' → logprob: -8.125299453735352
    3. '(' → logprob: -13.250299453735352
    4. '(se' → logprob: -13.625299453735352
    5. ' seg' → logprob: -15.625299453735352
    6. 'Seg' → logprob: -15.750299453735352
    7. '_seg' → logprob: -16.12529945373535
    8. ',' → logprob: -16.62529945373535
    9. '```' → logprob: -16.87529945373535
    10. '(
' → logprob: -17.75029945373535

Token 1800: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.1615714132785797
    2. 'el' → logprob: -1.9115713834762573
    3. 'seg' → logprob: -6.786571502685547
    4. '_seg' → logprob: -8.536571502685547
    5. 'El' → logprob: -11.411571502685547
    6. '```' → logprob: -12.911571502685547
    7. 'eg' → logprob: -13.286571502685547
    8. '	el' → logprob: -13.286571502685547
    9. '   ' → logprob: -14.786571502685547
    10. '(seg' → logprob: -14.911571502685547

Token 1801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891038805246353
    2. ')
' → logprob: -2.5789103507995605
    3. '   ' → logprob: -11.078910827636719
    4. ')
' → logprob: -12.703910827636719
    5. ' )' → logprob: -14.328910827636719
    6. '
' → logprob: -14.828910827636719
    7. ')

' → logprob: -15.203910827636719
    8. ' )
' → logprob: -15.828910827636719
    9. ')set' → logprob: -16.20391082763672
    10. ' ' → logprob: -16.20391082763672

Token 1802: '   ' (ID: 271)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.020057814195752144
    2. ' update' → logprob: -4.020057678222656
    3. '   ' → logprob: -6.270057678222656
    4. '	update' → logprob: -11.645057678222656
    5. '```' → logprob: -12.645057678222656
    6. '(update' → logprob: -14.020057678222656
    7. '.update' → logprob: -14.895057678222656
    8. '
' → logprob: -15.145057678222656
    9. '_update' → logprob: -16.145057678222656
    10. '    
' → logprob: -16.395057678222656

Token 1803: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0001242772996192798
    2. ' update' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.750123977661133
    4. '```' → logprob: -15.000123977661133
    5. 'for' → logprob: -16.250123977661133
    6. '	update' → logprob: -18.125123977661133
    7. '(update' → logprob: -18.250123977661133
    8. '
' → logprob: -18.375123977661133
    9. '.update' → logprob: -18.625123977661133
    10. '`' → logprob: -19.000123977661133

Token 1804: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -2.45848218582978e-06
    2. '_segments' → logprob: -13.00000286102295
    3. '_base' → logprob: -16.125001907348633
    4. 'segment' → logprob: -17.375001907348633
    5. '_' → logprob: -17.500001907348633
    6. '_seg' → logprob: -17.625001907348633
    7. '_sequence' → logprob: -19.250001907348633
    8. '_section' → logprob: -19.375001907348633
    9. 'Segment' → logprob: -19.625001907348633
    10. '_s' → logprob: -19.875001907348633

Token 1805: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.7432603272027336e-06
    2. '_bas' → logprob: -13.875001907348633
    3. '_basis' → logprob: -14.875001907348633
    4. '_' → logprob: -15.625001907348633
    5. '_BASE' → logprob: -16.375001907348633
    6. '```' → logprob: -16.625001907348633
    7. '_basic' → logprob: -16.875001907348633
    8. 'base' → logprob: -17.125001907348633
    9. '
' → logprob: -17.375001907348633
    10. '\' → logprob: -17.875001907348633

Token 1806: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.931863051955588e-05
    2. '(SE' → logprob: -9.750059127807617
    3. '(SIG' → logprob: -15.250059127807617
    4. '(seg' → logprob: -15.875059127807617
    5. '(TAG' → logprob: -15.875059127807617
    6. '(
' → logprob: -16.000059127807617
    7. 'SEG' → logprob: -16.125059127807617
    8. '(ARG' → logprob: -16.625059127807617
    9. '(MSG' → logprob: -16.875059127807617
    10. ' (' → logprob: -17.625059127807617

Token 1807: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -3.128163257315464e-07
    2. ' SEG' → logprob: -16.25
    3. 'SE' → logprob: -16.5
    4. 'SEQ' → logprob: -17.375
    5. '_SEG' → logprob: -18.875
    6. '(' → logprob: -20.125
    7. 'seg' → logprob: -20.125
    8. 'SEM' → logprob: -21.0
    9. 'SEP' → logprob: -21.375
    10. '
' → logprob: -21.75

Token 1808: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035846480750478804
    2. '(' → logprob: -8.250358581542969
    3. ' ,' → logprob: -10.125358581542969
    4. '(SE' → logprob: -10.750358581542969
    5. ',(' → logprob: -11.125358581542969
    6. ',E' → logprob: -11.875358581542969
    7. '(E' → logprob: -12.125358581542969
    8. '   ' → logprob: -12.375358581542969
    9. '(seg' → logprob: -13.875358581542969
    10. ')' → logprob: -14.125358581542969

Token 1809: ' seg' (ID: 3055)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.01189163513481617
    2. 'seg' → logprob: -4.761891841888428
    3. ' E' → logprob: -5.761891841888428
    4. ' seg' → logprob: -9.63689136505127
    5. '[E' → logprob: -11.63689136505127
    6. '	E' → logprob: -11.76189136505127
    7. '   ' → logprob: -12.13689136505127
    8. 'len' → logprob: -12.26189136505127
    9. '(seg' → logprob: -12.26189136505127
    10. 'segment' → logprob: -12.26189136505127

Token 1810: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.0302980225533247
    2. 'el' → logprob: -3.5302979946136475
    3. 'El' → logprob: -8.405298233032227
    4. 'EL' → logprob: -8.780298233032227
    5. 'l' → logprob: -10.655298233032227
    6. 'uel' → logprob: -10.780298233032227
    7. 'ul' → logprob: -11.217798233032227
    8. '	el' → logprob: -11.342798233032227
    9. '
' → logprob: -11.967798233032227
    10. '_l' → logprob: -12.030298233032227

Token 1811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009442188893444836
    2. ',E' → logprob: -7.000944137573242
    3. ' ,' → logprob: -10.500944137573242
    4. '   ' → logprob: -12.750944137573242
    5. 'E' → logprob: -13.375944137573242
    6. '(E' → logprob: -14.750944137573242
    7. ',
' → logprob: -15.125944137573242
    8. ' E' → logprob: -15.875944137573242
    9. '```' → logprob: -18.750944137573242
    10. '[E' → logprob: -19.125944137573242

Token 1812: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.5491004129871726e-05
    2. ' E' → logprob: -10.000045776367188
    3. '>E' → logprob: -19.125045776367188
    4. '	E' → logprob: -19.625045776367188
    5. '   ' → logprob: -19.750045776367188
    6. '[E' → logprob: -19.875045776367188
    7. '<E' → logprob: -19.875045776367188
    8. ',E' → logprob: -20.625045776367188
    9. '(E' → logprob: -20.750045776367188
    10. ')' → logprob: -20.875045776367188

Token 1813: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -1.0280383548888494e-06
    2. 'uler' → logprob: -14.500000953674316
    3. 'UR' → logprob: -15.250000953674316
    4. 'ULAR' → logprob: -16.250001907348633
    5. 'LER' → logprob: -16.750001907348633
    6. 'ULL' → logprob: -16.875001907348633
    7. 'U' → logprob: -17.375001907348633
    8. ' UL' → logprob: -17.750001907348633
    9. '_UL' → logprob: -17.875001907348633
    10. 'ULE' → logprob: -18.125001907348633

Token 1814: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.00014597235713154078
    2. 'R' → logprob: -9.12514591217041
    3. 'E' → logprob: -10.37514591217041
    4. 'OR' → logprob: -12.50014591217041
    5. '[' → logprob: -15.25014591217041
    6. 'AR' → logprob: -15.75014591217041
    7. '   ' → logprob: -15.75014591217041
    8. '_ER' → logprob: -16.000146865844727
    9. '
' → logprob: -16.125146865844727
    10. 'er' → logprob: -16.250146865844727

Token 1815: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010001139715313911
    2. ')
' → logprob: -5.260001182556152
    3. '   ' → logprob: -5.385001182556152
    4. '<|end|>' → logprob: -9.135001182556152
    5. 'build' → logprob: -10.510001182556152
    6. '
' → logprob: -11.385001182556152
    7. '.build' → logprob: -12.135001182556152
    8. ',' → logprob: -12.635001182556152
    9. 'def' → logprob: -12.760001182556152
    10. '(build' → logprob: -13.260001182556152

Token 1816: '   ' (ID: 271)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.043154701590538025
    2. '   ' → logprob: -3.418154716491699
    3. ' build' → logprob: -4.668154716491699
    4. '	build' → logprob: -9.9181547164917
    5. '```' → logprob: -11.4181547164917
    6. '(build' → logprob: -11.6681547164917
    7. '
' → logprob: -13.1681547164917
    8. '.build' → logprob: -13.4181547164917
    9. '_build' → logprob: -14.6681547164917
    10. '  ' → logprob: -14.7931547164917

Token 1817: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.0001495484757469967
    2. ' build' → logprob: -8.875149726867676
    3. '```' → logprob: -12.125149726867676
    4. '   ' → logprob: -12.500149726867676
    5. '	build' → logprob: -15.250149726867676
    6. '
' → logprob: -16.00014877319336
    7. '(build' → logprob: -16.62514877319336
    8. ' ' → logprob: -17.12514877319336
    9. '.build' → logprob: -17.50014877319336
    10. '``' → logprob: -17.50014877319336

Token 1818: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00014084660506341606
    2. 'segment' → logprob: -8.875141143798828
    3. 'Segment' → logprob: -14.375141143798828
    4. '_segments' → logprob: -15.875141143798828
    5. '(segment' → logprob: -16.625141143798828
    6. 'seg' → logprob: -16.875141143798828
    7. '_seg' → logprob: -17.375141143798828
    8. '_SEG' → logprob: -17.875141143798828
    9. ' segment' → logprob: -18.125141143798828
    10. '_' → logprob: -18.500141143798828

Token 1819: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.00014180023572407663
    2. 'tree' → logprob: -8.875142097473145
    3. ' tree' → logprob: -14.750142097473145
    4. '_TREE' → logprob: -14.750142097473145
    5. '```' → logprob: -15.500142097473145
    6. 'Tree' → logprob: -15.750142097473145
    7. '_segment' → logprob: -16.125141143798828
    8. '	tree' → logprob: -16.125141143798828
    9. '_t' → logprob: -16.500141143798828
    10. '_stack' → logprob: -16.750141143798828

Token 1820: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4021237802808173e-05
    2. '(SE' → logprob: -11.250014305114746
    3. '(seg' → logprob: -14.750014305114746
    4. '(
' → logprob: -15.750014305114746
    5. '(SIG' → logprob: -15.750014305114746
    6. '(ARG' → logprob: -17.12501335144043
    7. '(MSG' → logprob: -17.25001335144043
    8. ' (' → logprob: -17.50001335144043
    9. '((' → logprob: -18.00001335144043
    10. '```' → logprob: -19.25001335144043

Token 1821: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -2.339278580620885e-06
    2. ' SEG' → logprob: -13.000001907348633
    3. '_SEG' → logprob: -17.000001907348633
    4. 'SEQ' → logprob: -18.625001907348633
    5. 'SE' → logprob: -18.750001907348633
    6. 'seg' → logprob: -20.625001907348633
    7. '(' → logprob: -20.750001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '
' → logprob: -20.875001907348633
    10. ',' → logprob: -20.875001907348633

Token 1822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.125014305114746
    4. ',
' → logprob: -14.125014305114746
    5. ')' → logprob: -16.000015258789062
    6. '
' → logprob: -16.625015258789062
    7. '```' → logprob: -17.000015258789062
    8. '(seg' → logprob: -17.125015258789062
    9. 'def' → logprob: -17.625015258789062
    10. 'seg' → logprob: -17.625015258789062

Token 1823: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0009118211455643177
    2. ' seg' → logprob: -7.000911712646484
    3. '(seg' → logprob: -15.000911712646484
    4. '   ' → logprob: -17.625911712646484
    5. 'segment' → logprob: -18.000911712646484
    6. ' ' → logprob: -18.875911712646484
    7. '_seg' → logprob: -19.125911712646484
    8. 'sel' → logprob: -19.125911712646484
    9. '```' → logprob: -19.125911712646484
    10. 'se' → logprob: -19.125911712646484

Token 1824: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.002477677771821618
    2. 'el' → logprob: -6.002477645874023
    3. 'El' → logprob: -13.627477645874023
    4. '	el' → logprob: -14.252477645874023
    5. '-el' → logprob: -17.002477645874023
    6. ' el' → logprob: -17.377477645874023
    7. '
' → logprob: -17.752477645874023
    8. '_ele' → logprob: -17.752477645874023
    9. '```' → logprob: -17.877477645874023
    10. ''el' → logprob: -18.002477645874023

Token 1825: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.875007629394531
    3. ')
' → logprob: -13.250007629394531
    4. '<|end|>' → logprob: -13.375007629394531
    5. '   ' → logprob: -13.625007629394531
    6. ')#' → logprob: -16.12500762939453
    7. '())' → logprob: -16.37500762939453
    8. ')return' → logprob: -17.12500762939453
    9. '),' → logprob: -17.12500762939453
    10. ')add' → logprob: -17.62500762939453

Token 1826: '   ' (ID: 271)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.527578592300415
    2. '   ' → logprob: -0.902578592300415
    3. ' check' → logprob: -5.902578353881836
    4. 'prepare' → logprob: -7.527578353881836
    5. 'L' → logprob: -8.152578353881836
    6. '	check' → logprob: -8.152578353881836
    7. '
' → logprob: -8.777578353881836
    8. ' ' → logprob: -9.027578353881836
    9. '```' → logprob: -9.402578353881836
    10. 'def' → logprob: -9.652578353881836

Token 1827: ' def' (ID: 1056)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.016001636162400246
    2. 'L' → logprob: -4.2660017013549805
    3. '   ' → logprob: -6.7660017013549805
    4. 'def' (adapté à ' def') → logprob: -7.8910017013549805
    5. 'prepare' → logprob: -8.39100170135498
    6. 'LC' → logprob: -10.89100170135498
    7. 'l' → logprob: -11.14100170135498
    8. '#' → logprob: -11.64100170135498
    9. 'CHECK' → logprob: -11.64100170135498
    10. 'global' → logprob: -11.89100170135498

Token 1828: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24127565324306488
    2. 'L' → logprob: -1.741275668144226
    3. ' l' → logprob: -3.6162755489349365
    4. ' L' → logprob: -4.616275787353516
    5. 'query' → logprob: -7.241275787353516
    6. '_l' → logprob: -8.241275787353516
    7. 'get' → logprob: -8.366275787353516
    8. 'func' → logprob: -8.741275787353516
    9. 'lc' → logprob: -8.741275787353516
    10. '_L' → logprob: -8.866275787353516

Token 1829: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -9.305326966568828e-05
    2. 'C' → logprob: -10.000093460083008
    3. '   ' → logprob: -10.375093460083008
    4. 'ambda' → logprob: -11.375093460083008
    5. ' CA' → logprob: -13.375093460083008
    6. 'BA' → logprob: -15.000093460083008
    7. '```' → logprob: -15.125093460083008
    8. 'A' → logprob: -15.500093460083008
    9. '_CA' → logprob: -15.500093460083008
    10. '=' → logprob: -15.625093460083008

Token 1830: '_func' (ID: 22252)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06088687852025032
    2. '(u' → logprob: -3.435886859893799
    3. '(x' → logprob: -4.310886859893799
    4. '(a' → logprob: -4.435886859893799
    5. '(n' → logprob: -6.685886859893799
    6. '(node' → logprob: -8.810887336730957
    7. ' (' → logprob: -9.810887336730957
    8. '(' → logprob: -10.060887336730957
    9. '_func' → logprob: -10.935887336730957
    10. 'def' → logprob: -11.185887336730957

Token 1831: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0006410692585632205
    2. '(x' → logprob: -8.375640869140625
    3. '(u' → logprob: -8.375640869140625
    4. '(' → logprob: -9.250640869140625
    5. '(a' → logprob: -10.250640869140625
    6. '(node' → logprob: -10.750640869140625
    7. ' (' → logprob: -11.750640869140625
    8. '(n' → logprob: -11.875640869140625
    9. '(i' → logprob: -12.250640869140625
    10. '(p' → logprob: -13.250640869140625

Token 1832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016349162615370005
    2. ' ,' → logprob: -9.250163078308105
    3. ',r' → logprob: -9.625163078308105
    4. ',l' → logprob: -14.250163078308105
    5. '   ' → logprob: -15.500163078308105
    6. 'r' → logprob: -15.875163078308105
    7. '_,' → logprob: -16.000164031982422
    8. 'a' → logprob: -16.875164031982422
    9. ',
' → logprob: -17.000164031982422
    10. ',a' → logprob: -17.500164031982422

Token 1833: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011705794604495168
    2. ' r' → logprob: -6.751170635223389
    3. '
' → logprob: -15.87617015838623
    4. '   ' → logprob: -16.126171112060547
    5. '	r' → logprob: -17.126171112060547
    6. '```' → logprob: -17.751171112060547
    7. ' ' → logprob: -18.251171112060547
    8. '    ' → logprob: -18.751171112060547
    9. '
' → logprob: -18.876171112060547
    10. '  ' → logprob: -19.126171112060547

Token 1834: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007224413566291332
    2. '):
' → logprob: -7.250722408294678
    3. ')' → logprob: -11.375722885131836
    4. '   ' → logprob: -15.250722885131836
    5. '):
' → logprob: -15.375722885131836
    6. ' ):' → logprob: -15.500722885131836
    7. ':' → logprob: -16.250722885131836
    8. '=' → logprob: -16.250722885131836
    9. '):

' → logprob: -16.875722885131836
    10. ' ' → logprob: -17.250722885131836

Token 1835: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04196066036820412
    2. ' return' → logprob: -3.2919607162475586
    3. '<|end|>' → logprob: -5.791960716247559
    4. '   ' → logprob: -8.416960716247559
    5. 'return' → logprob: -8.666960716247559
    6. '    ' → logprob: -9.041960716247559
    7. '     ' → logprob: -9.041960716247559
    8. '	return' → logprob: -9.416960716247559
    9. ' ' → logprob: -10.166960716247559
    10. '      ' → logprob: -10.666960716247559

Token 1836: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48024189472198486
    2. '       ' → logprob: -1.2302418947219849
    3. '   ' → logprob: -2.4802417755126953
    4. ' return' → logprob: -5.230241775512695
    5. '	return' → logprob: -10.605241775512695
    6. '     ' → logprob: -11.355241775512695
    7. '    ' → logprob: -11.355241775512695
    8. ' ' → logprob: -11.605241775512695
    9. '      ' → logprob: -12.605241775512695
    10. 'result' → logprob: -12.855241775512695

Token 1837: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0031828247010707855
    2. ' L' → logprob: -5.753182888031006
    3. 'get' → logprob: -13.003182411193848
    4. '   ' → logprob: -13.128182411193848
    5. '	L' → logprob: -14.878182411193848
    6. '(L' → logprob: -15.378182411193848
    7. ' get' → logprob: -16.253183364868164
    8. '  ' → logprob: -16.628183364868164
    9. ' ' → logprob: -17.003183364868164
    10. '_L' → logprob: -17.253183364868164

Token 1838: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.0002844576956704259
    2. 'C' → logprob: -8.250284194946289
    3. 'A' → logprob: -12.750284194946289
    4. 'CAE' → logprob: -12.875284194946289
    5. ')' → logprob: -13.562784194946289
    6. 'ca' → logprob: -13.625284194946289
    7. '(' → logprob: -13.687784194946289
    8. '(C' → logprob: -13.750284194946289
    9. ' CA' → logprob: -14.000284194946289
    10. '[' → logprob: -14.187784194946289

Token 1839: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.01013981457799673
    2. '(' → logprob: -4.7601399421691895
    3. '_func' → logprob: -6.5101399421691895
    4. ' (' → logprob: -11.260139465332031
    5. ')' → logprob: -12.010139465332031
    6. '(_' → logprob: -12.885139465332031
    7. '(
' → logprob: -13.135139465332031
    8. 'func' → logprob: -13.510139465332031
    9. '((' → logprob: -13.635139465332031
    10. '(L' → logprob: -13.760139465332031

Token 1840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003236297983676195
    2. ',r' → logprob: -6.128236293792725
    3. ' ,' → logprob: -6.878236293792725
    4. 'r' → logprob: -11.753236770629883
    5. ',
' → logprob: -12.878236770629883
    6. ',l' → logprob: -13.378236770629883
    7. ' ' → logprob: -13.503236770629883
    8. '[' → logprob: -13.878236770629883
    9. ',n' → logprob: -14.003236770629883
    10. ' r' → logprob: -14.128236770629883

Token 1841: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011053125374019146
    2. ' r' → logprob: -4.511053085327148
    3. '   ' → logprob: -12.761053085327148
    4. '    ' → logprob: -13.886053085327148
    5. '       ' → logprob: -15.136053085327148
    6. ' ' → logprob: -15.136053085327148
    7. '     ' → logprob: -16.01105308532715
    8. '	r' → logprob: -16.13605308532715
    9. '           ' → logprob: -16.51105308532715
    10. '  ' → logprob: -16.51105308532715

Token 1842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ' ,' → logprob: -9.250112533569336
    3. '   ' → logprob: -11.750112533569336
    4. ')' → logprob: -12.500112533569336
    5. ',N' → logprob: -13.875112533569336
    6. '       ' → logprob: -14.000112533569336
    7. '```' → logprob: -14.750112533569336
    8. ',
' → logprob: -15.125112533569336
    9. 'MIN' → logprob: -15.375112533569336
    10. 'def' → logprob: -15.500112533569336

Token 1843: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -2.935296834039036e-06
    2. ' MIN' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.875003814697266
    4. '_MIN' → logprob: -19.000003814697266
    5. 'min' → logprob: -19.750003814697266
    6. ' ' → logprob: -20.375003814697266
    7. '
' → logprob: -20.750003814697266
    8. '    ' → logprob: -21.125003814697266
    9. '  ' → logprob: -21.750003814697266
    10. 'MAX' → logprob: -21.875003814697266

Token 1844: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -9.968312951968983e-06
    2. ',' → logprob: -11.625009536743164
    3. 'p' → logprob: -14.375009536743164
    4. ',P' → logprob: -15.500009536743164
    5. '(P' → logprob: -16.750009536743164
    6. ' P' → logprob: -17.250009536743164
    7. '_P' → logprob: -18.000009536743164
    8. '<|end|>' → logprob: -18.000009536743164
    9. ',
' → logprob: -18.125009536743164
    10. ')' → logprob: -18.250009536743164

Token 1845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.76628842484206e-05
    2. ' ,' → logprob: -9.750067710876465
    3. '   ' → logprob: -12.000067710876465
    4. ',
' → logprob: -12.875067710876465
    5. '```' → logprob: -14.750067710876465
    6. '‌,' → logprob: -17.37506675720215
    7. ')' → logprob: -17.62506675720215
    8. '`,' → logprob: -18.00006675720215
    9. '<|end|>' → logprob: -18.00006675720215
    10. ' ' → logprob: -18.12506675720215

Token 1846: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -1.723973582556937e-05
    2. ' MAX' → logprob: -11.000017166137695
    3. 'max' → logprob: -15.500017166137695
    4. '
' → logprob: -15.750017166137695
    5. '_MAX' → logprob: -16.750017166137695
    6. 'Max' → logprob: -17.250017166137695
    7. '(MAX' → logprob: -17.500017166137695
    8. '   ' → logprob: -17.625017166137695
    9. 'MIN' → logprob: -18.500017166137695
    10. ' ' → logprob: -19.375017166137695

Token 1847: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002817954868078232
    2. 'p' → logprob: -6.0028181076049805
    3. 'seg' → logprob: -9.00281810760498
    4. 'MAX' → logprob: -9.00281810760498
    5. 'el' → logprob: -9.37781810760498
    6. '_p' → logprob: -13.37781810760498
    7. '
' → logprob: -13.37781810760498
    8. '(MAX' → logprob: -13.50281810760498
    9. '(seg' → logprob: -13.62781810760498
    10. '_P' → logprob: -14.00281810760498

Token 1848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '   ' → logprob: -12.25002670288086
    4. ',
' → logprob: -15.75002670288086
    5. '```' → logprob: -15.75002670288086
    6. '‌,' → logprob: -17.12502670288086
    7. '`,' → logprob: -17.50002670288086
    8. ' ' → logprob: -18.00002670288086
    9. '
' → logprob: -18.25002670288086
    10. 'seg' → logprob: -18.62502670288086

Token 1849: ' seg' (ID: 3055)
  Prédit: ' seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.313263863325119
    2. 'seg' → logprob: -1.3132638931274414
    3. '(seg' → logprob: -13.188263893127441
    4. 'se' → logprob: -15.438263893127441
    5. '_seg' → logprob: -18.188262939453125
    6. '```' → logprob: -18.438262939453125
    7. ' segmented' → logprob: -18.938262939453125
    8. 'segment' → logprob: -18.938262939453125
    9. 'Seg' → logprob: -18.938262939453125
    10. '.seg' → logprob: -19.438262939453125

Token 1850: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.20268724858760834
    2. 'el' → logprob: -1.7026872634887695
    3. 'seg' → logprob: -6.7026872634887695
    4. '_seg' → logprob: -10.57768726348877
    5. '   ' → logprob: -11.95268726348877
    6. 'El' → logprob: -12.07768726348877
    7. '```' → logprob: -13.20268726348877
    8. '	el' → logprob: -13.32768726348877
    9. ' seg' → logprob: -14.95268726348877
    10. '_ele' → logprob: -15.07768726348877

Token 1851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.250006675720215
    4. ',
' → logprob: -15.750006675720215
    5. '```' → logprob: -17.12500762939453
    6. '       ' → logprob: -18.12500762939453
    7. '‌,' → logprob: -18.12500762939453
    8. '
' → logprob: -19.12500762939453
    9. '‍,' → logprob: -19.62500762939453
    10. '`,' → logprob: -20.12500762939453

Token 1852: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -2.165027217415627e-05
    2. ' SEG' → logprob: -10.750021934509277
    3. '_SEG' → logprob: -16.37502098083496
    4. 'SE' → logprob: -18.00002098083496
    5. 'seg' → logprob: -20.00002098083496
    6. 'SEQ' → logprob: -20.50002098083496
    7. '   ' → logprob: -21.37502098083496
    8. 'Seg' → logprob: -21.75002098083496
    9. '
' → logprob: -21.87502098083496
    10. 'SEC' → logprob: -23.00002098083496

Token 1853: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.553032628493384e-05
    2. '   ' → logprob: -9.500075340270996
    3. ')
' → logprob: -15.250075340270996
    4. ' )' → logprob: -15.500075340270996
    5. '       ' → logprob: -17.125076293945312
    6. ' ' → logprob: -17.750076293945312
    7. '))' → logprob: -17.875076293945312
    8. '  ' → logprob: -19.500076293945312
    9. ')`' → logprob: -19.625076293945312
    10. '	' → logprob: -19.750076293945312

Token 1854: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026294492185115814
    2. 'check' → logprob: -4.151294708251953
    3. ' check' → logprob: -5.526294708251953
    4. 'reset' → logprob: -5.776294708251953
    5. '
' → logprob: -6.526294708251953
    6. ' reset' → logprob: -7.401294708251953
    7. '	check' → logprob: -8.276294708251953
    8. '  ' → logprob: -8.776294708251953
    9. '    
' → logprob: -9.026294708251953
    10. ' ' → logprob: -9.276294708251953

Token 1855: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.011204145848751068
    2. '   ' → logprob: -4.511204242706299
    3. '
' → logprob: -9.01120376586914
    4. ' check' → logprob: -11.13620376586914
    5. '    
' → logprob: -11.76120376586914
    6. 'length' → logprob: -12.88620376586914
    7. '```' → logprob: -13.13620376586914
    8. '	check' → logprob: -13.26120376586914
    9. 'chec' → logprob: -13.38620376586914
    10. 'CHECK' → logprob: -14.13620376586914

Token 1856: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8244469165802002
    2. '=' → logprob: -1.1994469165802002
    3. ' =' → logprob: -1.5744469165802002
    4. '<|end|>' → logprob: -3.1994469165802
    5. ',' → logprob: -5.199446678161621
    6. ')' → logprob: -6.324446678161621
    7. '<|end|>' → logprob: -6.699446678161621
    8. '(' → logprob: -7.199446678161621
    9. '=[' → logprob: -7.574446678161621
    10. '[
' → logprob: -8.199446678161621

Token 1857: ' prepare' (ID: 13708)
  Prédit: ' prepare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prepare' → logprob: -0.6558358073234558
    2. 'prepare' → logprob: -1.5308358669281006
    3. '[' → logprob: -1.9058358669281006
    4. ' [' → logprob: -2.1558358669281006
    5. '[[' → logprob: -10.53083610534668
    6. ' [[]' → logprob: -10.65583610534668
    7. ' [[' → logprob: -11.03083610534668
    8. '.prepare' → logprob: -11.40583610534668
    9. ' ' → logprob: -11.90583610534668
    10. ' ' → logprob: -12.03083610534668

Token 1858: '_l' (ID: 1478)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.3968575894832611
    2. 'check' → logprob: -1.1468576192855835
    3. '_check' → logprob: -4.646857738494873
    4. ' check' → logprob: -8.771857261657715
    5. '(' → logprob: -9.146857261657715
    6. ' (' → logprob: -10.896857261657715
    7. '(N' → logprob: -11.271857261657715
    8. '```' → logprob: -11.771857261657715
    9. '	check' → logprob: -11.896857261657715
    10. '`' → logprob: -12.271857261657715

Token 1859: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -2.6656825866666622e-05
    2. 'ist' → logprob: -11.87502670288086
    3. 'check' → logprob: -12.00002670288086
    4. 'case' → logprob: -12.50002670288086
    5. 'cat' → logprob: -13.00002670288086
    6. 'cal' → logprob: -13.62502670288086
    7. '```' → logprob: -13.75002670288086
    8. 'c' → logprob: -14.25002670288086
    9. 'aca' → logprob: -14.37502670288086
    10. '_ca' → logprob: -14.62502670288086

Token 1860: '_queries' (ID: 172558)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.12641578912734985
    2. ',' → logprob: -2.251415729522705
    3. '(' → logprob: -5.501415729522705
    4. 'check' → logprob: -6.001415729522705
    5. ')' → logprob: -6.126415729522705
    6. ' check' → logprob: -6.626415729522705
    7. '_queries' → logprob: -6.751415729522705
    8. '_check' → logprob: -7.001415729522705
    9. ' (' → logprob: -7.876415729522705
    10. '
' → logprob: -8.751416206359863

Token 1861: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001999642699956894
    2. '(' → logprob: -9.125200271606445
    3. '(Query' → logprob: -9.625200271606445
    4. ' (' → logprob: -11.500200271606445
    5. '(Q' → logprob: -11.875200271606445
    6. '```' → logprob: -13.250200271606445
    7. '((' → logprob: -13.750200271606445
    8. '(
' → logprob: -14.250200271606445
    9. '(Check' → logprob: -14.250200271606445
    10. '(check' → logprob: -14.250200271606445

Token 1862: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002346488763578236
    2. '(Query' → logprob: -8.375234603881836
    3. ' ,' → logprob: -12.750234603881836
    4. '(' → logprob: -14.500234603881836
    5. ',
' → logprob: -15.000234603881836
    6. '   ' → logprob: -15.625234603881836
    7. '<Query' → logprob: -16.375234603881836
    8. 'Query' → logprob: -17.750234603881836
    9. '```' → logprob: -18.000234603881836
    10. '	Query' → logprob: -18.125234603881836

Token 1863: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.0031830633524805307
    2. ' Query' → logprob: -5.753182888031006
    3. '   ' → logprob: -13.003183364868164
    4. '	Query' → logprob: -13.378183364868164
    5. '(Query' → logprob: -13.753183364868164
    6. '<Query' → logprob: -15.378183364868164
    7. '_Query' → logprob: -16.253183364868164
    8. '.Query' → logprob: -16.378183364868164
    9. '
' → logprob: -16.878183364868164
    10. ' ' → logprob: -18.128183364868164

Token 1864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ')' → logprob: -11.250020027160645
    3. '   ' → logprob: -12.500020027160645
    4. ' ,' → logprob: -13.500020027160645
    5. ',
' → logprob: -13.750020027160645
    6. '(check' → logprob: -14.750020027160645
    7. '<|end|>' → logprob: -15.000020027160645
    8. ')
' → logprob: -15.500020027160645
    9. '(Query' → logprob: -16.00002098083496
    10. '```' → logprob: -17.12502098083496

Token 1865: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002613358374219388
    2. ' L' → logprob: -8.250261306762695
    3. ')L' → logprob: -17.250261306762695
    4. ')' → logprob: -18.250261306762695
    5. '   ' → logprob: -18.375261306762695
    6. 'LC' → logprob: -18.625261306762695
    7. '>L' → logprob: -18.625261306762695
    8. '	L' → logprob: -18.625261306762695
    9. 'lambda' → logprob: -19.125261306762695
    10. '
' → logprob: -19.500261306762695

Token 1866: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.0002481078845448792
    2. 'C' → logprob: -8.375247955322266
    3. 'A' → logprob: -12.500247955322266
    4. 'L' → logprob: -12.750247955322266
    5. 'ambda' → logprob: -13.250247955322266
    6. 'c' → logprob: -13.625247955322266
    7. 'ca' → logprob: -13.750247955322266
    8. 'LA' → logprob: -14.562747955322266
    9. ' CA' → logprob: -14.687747955322266
    10. ')' → logprob: -14.875247955322266

Token 1867: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -9.245724504580721e-05
    2. 'func' → logprob: -9.625092506408691
    3. ')' → logprob: -10.750092506408691
    4. ')_' → logprob: -12.750092506408691
    5. 'Func' → logprob: -14.500092506408691
    6. '_FUNC' → logprob: -15.000092506408691
    7. '_fun' → logprob: -15.625092506408691
    8. '```' → logprob: -15.750092506408691
    9. ' _' → logprob: -16.125091552734375
    10. '_' → logprob: -16.375091552734375

Token 1868: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008036340586841106
    2. ')
' → logprob: -5.008036136627197
    3. '   ' → logprob: -6.633036136627197
    4. ' )' → logprob: -14.133036613464355
    5. '
' → logprob: -14.633036613464355
    6. ',' → logprob: -14.633036613464355
    7. ')
' → logprob: -14.883036613464355
    8. '```' → logprob: -15.133036613464355
    9. '())' → logprob: -15.508036613464355
    10. ' ' → logprob: -15.508036613464355

Token 1869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08991442620754242
    2. 'reset' → logprob: -2.589914321899414
    3. ' reset' → logprob: -4.714914321899414
    4. '```' → logprob: -6.339914321899414
    5. 'L' → logprob: -8.714914321899414
    6. '`' → logprob: -11.214914321899414
    7. '
' → logprob: -11.464914321899414
    8. 'length' → logprob: -11.714914321899414
    9. '``' → logprob: -11.839914321899414
    10. '(reset' → logprob: -11.964914321899414

Token 1870: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.244413766078651e-05
    2. '   ' → logprob: -10.000082015991211
    3. ' LENGTH' → logprob: -11.000082015991211
    4. 'reset' → logprob: -11.625082015991211
    5. 'length' → logprob: -12.375082015991211
    6. 'init' → logprob: -12.750082015991211
    7. 'for' → logprob: -12.875082015991211
    8. 'def' → logprob: -14.000082015991211
    9. '```' → logprob: -14.750082015991211
    10. '
' → logprob: -15.750082015991211

Token 1871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6875951290130615
    2. ' =' → logprob: -0.8125951290130615
    3. '=' → logprob: -2.9375951290130615
    4. '[' → logprob: -8.31259536743164
    5. '   ' → logprob: -9.68759536743164
    6. '<|end|>' → logprob: -9.81259536743164
    7. ' ,' → logprob: -10.81259536743164
    8. '=[' → logprob: -10.93759536743164
    9. '[:]' → logprob: -10.93759536743164
    10. '```' → logprob: -11.06259536743164

Token 1872: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.29127272963523865
    2. ' L' → logprob: -1.416272759437561
    3. 'C' → logprob: -4.7912726402282715
    4. ' C' → logprob: -6.4162726402282715
    5. ' ' → logprob: -9.41627311706543
    6. '   ' → logprob: -10.66627311706543
    7. '
' → logprob: -11.54127311706543
    8. '    ' → logprob: -11.91627311706543
    9. '  ' → logprob: -12.54127311706543
    10. '0' → logprob: -13.16627311706543

Token 1873: 'ENG' (ID: 12674)
  Prédit: 'ENGTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENGTH' → logprob: -0.14945173263549805
    2. 'ENG' → logprob: -2.024451732635498
    3. 'EN' → logprob: -5.274451732635498
    4. ',' → logprob: -7.149451732635498
    5. 'E' → logprob: -8.649452209472656
    6. '=' → logprob: -8.649452209472656
    7. 'ength' → logprob: -9.024452209472656
    8. '[' → logprob: -10.024452209472656
    9. ' =' → logprob: -10.274452209472656
    10. 'EG' → logprob: -10.399452209472656

Token 1874: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024946516379714012
    2. '=' → logprob: -4.399946689605713
    3. ' =' → logprob: -4.399946689605713
    4. ' ,' → logprob: -9.899946212768555
    5. '   ' → logprob: -10.649946212768555
    6. ',C' → logprob: -12.899946212768555
    7. ',L' → logprob: -13.274946212768555
    8. '```' → logprob: -14.149946212768555
    9. ',N' → logprob: -14.649946212768555
    10. ' ' → logprob: -15.024946212768555

Token 1875: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3869584798812866
    2. ' C' → logprob: -1.1369584798812866
    3. ' ' → logprob: -10.011958122253418
    4. '   ' → logprob: -10.136958122253418
    5. '    ' → logprob: -14.511958122253418
    6. '  ' → logprob: -14.511958122253418
    7. ' ' → logprob: -14.636958122253418
    8. '	C' → logprob: -14.636958122253418
    9. ',' → logprob: -14.761958122253418
    10. '
' → logprob: -15.511958122253418

Token 1876: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -2.7014437364414334e-05
    2. '_L' → logprob: -10.75002670288086
    3. 'ENGTH' → logprob: -12.75002670288086
    4. 'L' → logprob: -13.75002670288086
    5. 'ength' → logprob: -14.25002670288086
    6. '_length' → logprob: -15.25002670288086
    7. '_LEN' → logprob: -15.25002670288086
    8. '_LE' → logprob: -16.12502670288086
    9. '_Length' → logprob: -16.25002670288086
    10. '```' → logprob: -16.75002670288086

Token 1877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027730545843951404
    2. '=' → logprob: -8.375277519226074
    3. ' =' → logprob: -10.250277519226074
    4. ',C' → logprob: -11.625277519226074
    5. ' ,' → logprob: -13.000277519226074
    6. 'C' → logprob: -16.375276565551758
    7. ',c' → logprob: -16.875276565551758
    8. '   ' → logprob: -17.250276565551758
    9. '=C' → logprob: -17.250276565551758
    10. ',
' → logprob: -18.000276565551758

Token 1878: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.014180317521095276
    2. ' C' → logprob: -4.2641801834106445
    3. '   ' → logprob: -11.389180183410645
    4. ' ' → logprob: -12.514180183410645
    5. '  ' → logprob: -14.139180183410645
    6. '
' → logprob: -14.389180183410645
    7. '    ' → logprob: -15.639180183410645
    8. '```' → logprob: -15.889180183410645
    9. '[' → logprob: -16.76418113708496
    10. '	C' → logprob: -16.88918113708496

Token 1879: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.030695529654622078
    2. 'SUM' → logprob: -3.7806954383850098
    3. '_S' → logprob: -4.90569543838501
    4. '_LENGTH' → logprob: -12.030695915222168
    5. '_SD' → logprob: -13.405695915222168
    6. ' SUM' → logprob: -13.405695915222168
    7. '_SU' → logprob: -13.655695915222168
    8. 'S' → logprob: -13.655695915222168
    9. '_sum' → logprob: -13.655695915222168
    10. '_' → logprob: -13.905695915222168

Token 1880: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10444875806570053
    2. '=' → logprob: -2.3544487953186035
    3. ' =' → logprob: -5.4794487953186035
    4. ',C' → logprob: -10.354448318481445
    5. ' ,' → logprob: -10.479448318481445
    6. 'C' → logprob: -14.729448318481445
    7. ',c' → logprob: -14.854448318481445
    8. '=C' → logprob: -15.229448318481445
    9. '   ' → logprob: -16.229448318481445
    10. '```' → logprob: -16.479448318481445

Token 1881: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0028141476213932037
    2. ' C' → logprob: -5.877814292907715
    3. '   ' → logprob: -11.752814292907715
    4. ' ' → logprob: -14.252814292907715
    5. '    ' → logprob: -15.127814292907715
    6. '  ' → logprob: -16.0028133392334
    7. '	C' → logprob: -16.0028133392334
    8. '=C' → logprob: -16.3778133392334
    9. '       ' → logprob: -16.5028133392334
    10. '     ' → logprob: -16.6278133392334

Token 1882: '_L' (ID: 4258)
  Prédit: 'DICT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.8528015613555908
    2. '_DICT' → logprob: -1.1028015613555908
    3. '_L' → logprob: -1.4778015613555908
    4. 'L' → logprob: -4.977801322937012
    5. '_S' → logprob: -5.602801322937012
    6. 'dict' → logprob: -6.227801322937012
    7. '_LENGTH' → logprob: -7.727801322937012
    8. '_D' → logprob: -8.477801322937012
    9. '_DI' → logprob: -9.727801322937012
    10. 'DI' → logprob: -9.727801322937012

Token 1883: 'DICT' (ID: 175657)
  Prédit: 'ICT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICT' → logprob: -0.015263698995113373
    2. 'DICT' → logprob: -4.640263557434082
    3. 'IST' → logprob: -5.265263557434082
    4. 'I' → logprob: -9.140263557434082
    5. 'ECT' → logprob: -9.515263557434082
    6. 'ict' → logprob: -9.640263557434082
    7. 'IC' → logprob: -10.265263557434082
    8. '
' → logprob: -11.515263557434082
    9. '_DICT' → logprob: -12.140263557434082
    10. 'dict' → logprob: -12.140263557434082

Token 1884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ',C' → logprob: -11.250017166137695
    3. '=' → logprob: -13.000017166137695
    4. ' ,' → logprob: -13.500017166137695
    5. ',
' → logprob: -15.875017166137695
    6. ' =' → logprob: -16.125017166137695
    7. 'C' → logprob: -16.500017166137695
    8. '```' → logprob: -16.750017166137695
    9. ',\
' → logprob: -17.375017166137695
    10. ',c' → logprob: -17.750017166137695

Token 1885: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005238736979663372
    2. ' C' → logprob: -5.2552385330200195
    3. ' ' → logprob: -12.38023853302002
    4. '_C' → logprob: -15.50523853302002
    5. '   ' → logprob: -15.88023853302002
    6. '  ' → logprob: -16.755239486694336
    7. '
' → logprob: -17.005239486694336
    8. '	C' → logprob: -17.380239486694336
    9. 'c' → logprob: -17.630239486694336
    10. '```' → logprob: -17.755239486694336

Token 1886: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -2.696889623621246e-06
    2. 'S' → logprob: -13.50000286102295
    3. 'DICT' → logprob: -14.37500286102295
    4. '_DICT' → logprob: -14.50000286102295
    5. '_s' → logprob: -16.125001907348633
    6. '_SD' → logprob: -16.250001907348633
    7. 'SD' → logprob: -18.375001907348633
    8. '\' → logprob: -18.500001907348633
    9. 'dict' → logprob: -18.625001907348633
    10. '	S' → logprob: -18.875001907348633

Token 1887: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -1.9623810658231378e-05
    2. 'DI' → logprob: -12.000020027160645
    3. '_DICT' → logprob: -12.000020027160645
    4. 'dict' → logprob: -12.125020027160645
    5. 'D' → logprob: -14.000020027160645
    6. 'DIST' → logprob: -15.125020027160645
    7. 'Dict' → logprob: -15.125020027160645
    8. 'DS' → logprob: -16.125019073486328
    9. '_dict' → logprob: -16.375019073486328
    10. '_D' → logprob: -16.500019073486328

Token 1888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0868317037820816
    2. ' =' → logprob: -2.83683180809021
    3. ',' → logprob: -3.71183180809021
    4. '   ' → logprob: -9.086832046508789
    5. ' ,' → logprob: -12.461832046508789
    6. '=
' → logprob: -12.461832046508789
    7. ')' → logprob: -14.086832046508789
    8. ' =
' → logprob: -14.711832046508789
    9. ' ' → logprob: -14.836832046508789
    10. '```' → logprob: -14.836832046508789

Token 1889: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002613358374219388
    2. ' init' → logprob: -8.250261306762695
    3. '[' → logprob: -17.500261306762695
    4. '(init' → logprob: -19.625261306762695
    5. '_init' → logprob: -20.250261306762695
    6. '.init' → logprob: -21.375261306762695
    7. '	init' → logprob: -22.125261306762695
    8. ' [' → logprob: -22.125261306762695
    9. '   ' → logprob: -23.000261306762695
    10. '0' → logprob: -23.375261306762695

Token 1890: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0280383548888494e-06
    2. 'length' → logprob: -13.875000953674316
    3. '_lengths' → logprob: -17.125001907348633
    4. '_LENGTH' → logprob: -17.625001907348633
    5. '_l' → logprob: -17.875001907348633
    6. '```' → logprob: -19.000001907348633
    7. '_' → logprob: -19.125001907348633
    8. 'Length' → logprob: -19.875001907348633
    9. '_L' → logprob: -20.000001907348633
    10. '_Length' → logprob: -20.375001907348633

Token 1891: '_arrays' (ID: 182581)
  Prédit: '_arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arrays' → logprob: -6.504040356958285e-05
    2. '_' → logprob: -10.125064849853516
    3. 'Arrays' → logprob: -11.625064849853516
    4. 'arrays' → logprob: -12.000064849853516
    5. ' arrays' → logprob: -12.125064849853516
    6. '```' → logprob: -12.875064849853516
    7. '_lengths' → logprob: -14.875064849853516
    8. '	Arrays' → logprob: -15.500064849853516
    9. '_buffers' → logprob: -15.750064849853516
    10. 's' → logprob: -16.250064849853516

Token 1892: '(N' (ID: 10564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007618102710694075
    2. 'reset' → logprob: -5.132617950439453
    3. ' reset' → logprob: -7.882617950439453
    4. '<|end|>' → logprob: -8.007617950439453
    5. '	reset' → logprob: -8.132617950439453
    6. '
' → logprob: -8.257617950439453
    7. 'for' → logprob: -9.257617950439453
    8. '(reset' → logprob: -9.382617950439453
    9. ' for' → logprob: -9.507617950439453
    10. '    
' → logprob: -9.757617950439453

Token 1893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0381661131978035
    2. ')
' → logprob: -3.288166046142578
    3. '   ' → logprob: -9.038166046142578
    4. ',' → logprob: -13.038166046142578
    5. ' )' → logprob: -13.663166046142578
    6. ')

' → logprob: -14.413166046142578
    7. ')
' → logprob: -14.538166046142578
    8. '
' → logprob: -15.163166046142578
    9. ' )
' → logprob: -15.413166046142578
    10. '),' → logprob: -15.663166046142578

Token 1894: '   ' (ID: 271)
  Prédit: 'reset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reset' → logprob: -0.31718823313713074
    2. '   ' → logprob: -1.3171882629394531
    3. ' reset' → logprob: -5.942188262939453
    4. '	reset' → logprob: -7.442188262939453
    5. 'for' → logprob: -7.567188262939453
    6. '```' → logprob: -8.942188262939453
    7. ' for' → logprob: -10.317188262939453
    8. '(reset' → logprob: -11.692188262939453
    9. '.reset' → logprob: -12.442188262939453
    10. '_reset' → logprob: -13.192188262939453

Token 1895: ' reset' (ID: 12820)
  Prédit: 'reset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reset' (adapté à ' reset') → logprob: -0.0009134899592027068
    2. 'for' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.375913619995117
    4. ' reset' → logprob: -15.750913619995117
    5. '```' → logprob: -15.750913619995117
    6. 'def' → logprob: -17.125913619995117
    7. '#' → logprob: -17.500913619995117
    8. 'update' → logprob: -17.500913619995117
    9. '	reset' → logprob: -17.500913619995117
    10. '
' → logprob: -18.125913619995117

Token 1896: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -2.4272752852994017e-05
    2. 'ind' → logprob: -11.00002384185791
    3. '_indent' → logprob: -12.25002384185791
    4. '(ind' → logprob: -14.37502384185791
    5. 'indent' → logprob: -14.37502384185791
    6. '_inds' → logprob: -15.25002384185791
    7. '_' → logprob: -15.50002384185791
    8. '\' → logprob: -16.000024795532227
    9. '`' → logprob: -16.000024795532227
    10. 'check' → logprob: -16.000024795532227

Token 1897: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00016945181414484978
    2. 'dict' → logprob: -8.87516975402832
    3. 'ict' → logprob: -11.37516975402832
    4. '_dic' → logprob: -11.87516975402832
    5. 'ent' → logprob: -12.50016975402832
    6. '_def' → logprob: -13.75016975402832
    7. 'edict' → logprob: -13.87516975402832
    8. 'x' → logprob: -14.00016975402832
    9. '\' → logprob: -14.25016975402832
    10. 'ex' → logprob: -14.37516975402832

Token 1898: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00019257364328950644
    2. '_dict' → logprob: -9.125192642211914
    3. 'icts' → logprob: -9.625192642211914
    4. 'dict' → logprob: -12.000192642211914
    5. 'cts' → logprob: -12.500192642211914
    6. 'ects' → logprob: -13.125192642211914
    7. '(s' → logprob: -13.500192642211914
    8. 'cs' → logprob: -14.500192642211914
    9. 'efs' → logprob: -14.625192642211914
    10. '(' → logprob: -14.875192642211914

Token 1899: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.00020377879263833165
    2. 'check' → logprob: -8.500204086303711
    3. '(' → logprob: -16.25020408630371
    4. ' check' → logprob: -17.00020408630371
    5. '```' → logprob: -17.00020408630371
    6. '	check' → logprob: -17.25020408630371
    7. '(
' → logprob: -17.25020408630371
    8. '_check' → logprob: -18.87520408630371
    9. '(Check' → logprob: -19.25020408630371
    10. '.check' → logprob: -19.37520408630371

Token 1900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. '   ' → logprob: -9.875089645385742
    3. ',
' → logprob: -11.125089645385742
    4. ' ,' → logprob: -12.000089645385742
    5. '[' → logprob: -12.125089645385742
    6. '<|end|>' → logprob: -12.500089645385742
    7. '(' → logprob: -12.875089645385742
    8. ',C' → logprob: -13.500089645385742
    9. 'for' → logprob: -13.750089645385742
    10. '(check' → logprob: -14.375089645385742

Token 1901: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.505351095460355e-05
    2. ' C' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.50007438659668
    4. '>C' → logprob: -17.62507438659668
    5. ' ' → logprob: -17.75007438659668
    6. '	C' → logprob: -18.37507438659668
    7. '[C' → logprob: -19.00007438659668
    8. '```' → logprob: -19.50007438659668
    9. ')' → logprob: -20.00007438659668
    10. '*C' → logprob: -20.12507438659668

Token 1902: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.00044926130794920027
    2. 'L' → logprob: -7.875449180603027
    3. '_S' → logprob: -9.625449180603027
    4. 'LD' → logprob: -13.125449180603027
    5. '```' → logprob: -15.125449180603027
    6. '_LENGTH' → logprob: -15.250449180603027
    7. '\' → logprob: -15.750449180603027
    8. 'S' → logprob: -16.625450134277344
    9. '	L' → logprob: -16.750450134277344
    10. '_LEN' → logprob: -17.000450134277344

Token 1903: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -8.2994620242971e-06
    2. 'DI' → logprob: -12.500008583068848
    3. 'D' → logprob: -12.750008583068848
    4. '_DICT' → logprob: -14.500008583068848
    5. 'DIST' → logprob: -14.500008583068848
    6. 'Dict' → logprob: -15.375008583068848
    7. 'dict' → logprob: -16.00000762939453
    8. 'DIT' → logprob: -16.62500762939453
    9. 'ID' → logprob: -17.12500762939453
    10. 'ICT' → logprob: -17.25000762939453

Token 1904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. ',C' → logprob: -11.500014305114746
    3. ' ,' → logprob: -12.375014305114746
    4. '   ' → logprob: -16.250015258789062
    5. ',
' → logprob: -16.500015258789062
    6. 'C' → logprob: -17.125015258789062
    7. '```' → logprob: -19.125015258789062
    8. '‌,' → logprob: -19.375015258789062
    9. ',\
' → logprob: -20.500015258789062
    10. ',c' → logprob: -20.625015258789062

Token 1905: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001170460251159966
    2. ' C' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.62617015838623
    4. '   ' → logprob: -16.876171112060547
    5. '```' → logprob: -19.001171112060547
    6. '  ' → logprob: -19.251171112060547
    7. '
' → logprob: -19.251171112060547
    8. '	C' → logprob: -20.626171112060547
    9. '``' → logprob: -20.876171112060547
    10. ' ' → logprob: -21.001171112060547

Token 1906: '_S' (ID: 1875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4745974838733673
    2. '_S' → logprob: -0.9745974540710449
    3. 'SD' → logprob: -7.599597454071045
    4. ' S' → logprob: -11.474597930908203
    5. 'DICT' → logprob: -12.599597930908203
    6. '_SD' → logprob: -13.724597930908203
    7. '_s' → logprob: -13.724597930908203
    8. '	S' → logprob: -14.349597930908203
    9. 'DS' → logprob: -14.599597930908203
    10. 'SG' → logprob: -14.974597930908203

Token 1907: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -5.68153518543113e-05
    2. 'DI' → logprob: -10.250057220458984
    3. '_DICT' → logprob: -11.125057220458984
    4. 'ICT' → logprob: -12.375057220458984
    5. 'DIST' → logprob: -13.750057220458984
    6. 'D' → logprob: -14.500057220458984
    7. 'dict' → logprob: -15.125057220458984
    8. 'ID' → logprob: -15.750057220458984
    9. 'S' → logprob: -15.750057220458984
    10. 'IST' → logprob: -16.375057220458984

Token 1908: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.567472517490387
    2. ')' → logprob: -0.942472517490387
    3. '
' → logprob: -3.567472457885742
    4. '<|end|>' → logprob: -4.817472457885742
    5. ')
' → logprob: -5.567472457885742
    6. ' process' → logprob: -6.067472457885742
    7. 'process' → logprob: -7.567472457885742
    8. ' for' → logprob: -9.317472457885742
    9. '	process' → logprob: -9.942472457885742
    10. ',' → logprob: -10.317472457885742

Token 1909: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.16144788265228271
    2. '   ' → logprob: -1.9114478826522827
    3. ' process' → logprob: -6.911448001861572
    4. '	process' → logprob: -8.786447525024414
    5. 'for' → logprob: -9.786447525024414
    6. '```' → logprob: -11.536447525024414
    7. '(process' → logprob: -12.286447525024414
    8. ' for' → logprob: -13.911447525024414
    9. '.process' → logprob: -14.661447525024414
    10. 'def' → logprob: -15.036447525024414

Token 1910: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -1.3856492842023727e-06
    2. ' process' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.250000953674316
    4. 'for' → logprob: -17.750001907348633
    5. '	process' → logprob: -18.000001907348633
    6. '(process' → logprob: -18.750001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'proces' → logprob: -20.750001907348633
    9. '.process' → logprob: -21.250001907348633
    10. '
' → logprob: -21.750001907348633

Token 1911: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.000488811288960278
    2. 'e' → logprob: -7.625488758087158
    3. 'Euler' → logprob: -15.500489234924316
    4. '(e' → logprob: -15.750489234924316
    5. 'process' → logprob: -15.750489234924316
    6. '
' → logprob: -16.12548828125
    7. '```' → logprob: -17.12548828125
    8. '\' → logprob: -17.50048828125
    9. 'for' → logprob: -18.00048828125
    10. '_process' → logprob: -18.37548828125

Token 1912: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -1.2471589798224159e-05
    2. 'ul' → logprob: -12.125012397766113
    3. 'ler' → logprob: -12.500012397766113
    4. 'ule' → logprob: -13.500012397766113
    5. 'UL' → logprob: -14.000012397766113
    6. 'ulers' → logprob: -14.625012397766113
    7. '_' → logprob: -15.625012397766113
    8. 'ular' → logprob: -15.875012397766113
    9. 'uller' → logprob: -16.37501335144043
    10. 'u' → logprob: -16.87501335144043

Token 1913: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -8.061054359131958e-06
    2. '_index' → logprob: -12.375007629394531
    3. 'indices' → logprob: -13.375007629394531
    4. '
' → logprob: -15.000007629394531
    5. '_ind' → logprob: -15.250007629394531
    6. '__' → logprob: -15.250007629394531
    7. '_' → logprob: -15.375007629394531
    8. '\' → logprob: -15.500007629394531
    9. '```' → logprob: -15.500007629394531
    10. '"indices' → logprob: -15.500007629394531

Token 1914: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.019491545855998993
    2. '(' → logprob: -4.394491672515869
    3. '(len' → logprob: -5.019491672515869
    4. '(range' → logprob: -9.144491195678711
    5. '(
' → logprob: -9.394491195678711
    6. '(L' → logprob: -9.519491195678711
    7. '```' → logprob: -10.644491195678711
    8. '(N' → logprob: -11.019491195678711
    9. '(`' → logprob: -11.144491195678711
    10. '((' → logprob: -11.394491195678711

Token 1915: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -3.128163257315464e-07
    2. 'ULAR' → logprob: -15.25
    3. '_UL' → logprob: -17.75
    4. 'uler' → logprob: -18.25
    5. 'UR' → logprob: -18.625
    6. 'UEL' → logprob: -18.75
    7. '[' → logprob: -19.125
    8. '_' → logprob: -19.25
    9. 'ULL' → logprob: -19.375
    10. 'ul' → logprob: -19.5

Token 1916: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -7.696077227592468e-05
    2. 'OR' → logprob: -10.375077247619629
    3. 'UL' → logprob: -11.000077247619629
    4. 'R' → logprob: -11.125077247619629
    5. 'LER' → logprob: -11.875077247619629
    6. 'UR' → logprob: -13.375077247619629
    7. 'EL' → logprob: -13.750077247619629
    8. '
' → logprob: -14.000077247619629
    9. 'E' → logprob: -14.125077247619629
    10. '_R' → logprob: -14.750077247619629

Token 1917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.833878508885391e-05
    2. ' ,' → logprob: -10.625038146972656
    3. ',E' → logprob: -12.000038146972656
    4. ',
' → logprob: -12.375038146972656
    5. '   ' → logprob: -12.750038146972656
    6. '[' → logprob: -15.125038146972656
    7. '```' → logprob: -15.750038146972656
    8. ',N' → logprob: -16.625038146972656
    9. ',\
' → logprob: -17.125038146972656
    10. '‌,' → logprob: -17.250038146972656

Token 1918: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.00861930102109909
    2. ' ED' → logprob: -4.75861930847168
    3. '   ' → logprob: -13.00861930847168
    4. '_ED' → logprob: -13.63361930847168
    5. 'EDGE' → logprob: -14.75861930847168
    6. ' ' → logprob: -15.38361930847168
    7. '
' → logprob: -15.75861930847168
    8. '    ' → logprob: -16.38361930847168
    9. '```' → logprob: -16.38361930847168
    10. 'E' → logprob: -16.50861930847168

Token 1919: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0006421420839615166
    2. 'D' → logprob: -8.125641822814941
    3. 'UL' → logprob: -8.750641822814941
    4. 'DG' → logprob: -9.625641822814941
    5. 'DL' → logprob: -10.625641822814941
    6. 'ULE' → logprob: -11.125641822814941
    7. 'UG' → logprob: -11.500641822814941
    8. 'GL' → logprob: -11.625641822814941
    9. '```' → logprob: -11.750641822814941
    10. '[' → logprob: -11.750641822814941

Token 1920: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.40172895789146423
    2. 'ER' → logprob: -1.1517289876937866
    3. 'LIST' → logprob: -4.526729106903076
    4. 'G' → logprob: -6.776729106903076
    5. 'OR' → logprob: -7.651729106903076
    6. 'LER' → logprob: -8.026728630065918
    7. '_' → logprob: -8.026728630065918
    8. 'ED' → logprob: -8.401728630065918
    9. 'L' → logprob: -8.651728630065918
    10. '_LIST' → logprob: -8.901728630065918

Token 1921: 'IST' (ID: 6258)
  Prédit: 'ER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.6920507550239563
    2. 'R' → logprob: -1.1920506954193115
    3. 'OR' → logprob: -1.6920506954193115
    4. 'UR' → logprob: -4.942050933837891
    5. '_R' → logprob: -5.692050933837891
    6. 'ROR' → logprob: -7.317050933837891
    7. '   ' → logprob: -8.81705093383789
    8. '(R' → logprob: -9.31705093383789
    9. '
' → logprob: -9.56705093383789
    10. '[R' → logprob: -10.31705093383789

Token 1922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001354824344161898
    2. ' ,' → logprob: -9.00013542175293
    3. '   ' → logprob: -11.37513542175293
    4. ',
' → logprob: -15.00013542175293
    5. ',C' → logprob: -16.50013542175293
    6. '```' → logprob: -16.62513542175293
    7. '  ' → logprob: -16.75013542175293
    8. ' ' → logprob: -17.00013542175293
    9. ',N' → logprob: -17.12513542175293
    10. 'check' → logprob: -18.12513542175293

Token 1923: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -7.5649528298527e-05
    2. ' check' → logprob: -9.500075340270996
    3. '
' → logprob: -14.500075340270996
    4. '
' → logprob: -16.750076293945312
    5. ' ' → logprob: -17.500076293945312
    6. '```' → logprob: -17.500076293945312
    7. '   ' → logprob: -17.875076293945312
    8. 'query' → logprob: -18.000076293945312
    9. '	check' → logprob: -18.625076293945312
    10. 'chec' → logprob: -19.125076293945312

Token 1924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007523320964537561
    2. ',L' → logprob: -7.3757524490356445
    3. ' ,' → logprob: -9.125752449035645
    4. '   ' → logprob: -11.250752449035645
    5. 'L' → logprob: -12.750752449035645
    6. '```' → logprob: -14.375752449035645
    7. ',
' → logprob: -15.250752449035645
    8. ',N' → logprob: -16.250751495361328
    9. ',E' → logprob: -16.500751495361328
    10. ',length' → logprob: -17.250751495361328

Token 1925: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005234356038272381
    2. ' LENGTH' → logprob: -5.255234241485596
    3. '_LENGTH' → logprob: -15.880234718322754
    4. ' ' → logprob: -16.005233764648438
    5. 'length' → logprob: -16.130233764648438
    6. '   ' → logprob: -16.630233764648438
    7. '.LENGTH' → logprob: -16.755233764648438
    8. 'Length' → logprob: -16.755233764648438
    9. 'LEN' → logprob: -17.630233764648438
    10. '
' → logprob: -18.630233764648438

Token 1926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011272187111899257
    2. ',L' → logprob: -9.750112533569336
    3. ' ,' → logprob: -9.875112533569336
    4. '   ' → logprob: -13.500112533569336
    5. ',
' → logprob: -13.625112533569336
    6. 'L' → logprob: -15.625112533569336
    7. ' L' → logprob: -16.250112533569336
    8. '```' → logprob: -16.500112533569336
    9. ',\
' → logprob: -17.625112533569336
    10. ',l' → logprob: -17.625112533569336

Token 1927: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005234002135694027
    2. ' L' → logprob: -5.2552337646484375
    3. '0' → logprob: -15.880233764648438
    4. '   ' → logprob: -16.880233764648438
    5. '
' → logprob: -17.380233764648438
    6. '	L' → logprob: -18.630233764648438
    7. '    ' → logprob: -18.755233764648438
    8. ' ' → logprob: -19.130233764648438
    9. 'LEN' → logprob: -19.255233764648438
    10. '>L' → logprob: -20.130233764648438

Token 1928: 'ENG' (ID: 12674)
  Prédit: 'ENG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENG' → logprob: -0.0001640876434976235
    2. 'EN' → logprob: -8.750164031982422
    3. 'eng' → logprob: -13.750164031982422
    4. 'E' → logprob: -13.875164031982422
    5. 'EG' → logprob: -13.875164031982422
    6. 'Eng' → logprob: -14.000164031982422
    7. '
' → logprob: -14.875164031982422
    8. 'END' → logprob: -15.125164031982422
    9. 'G' → logprob: -15.875164031982422
    10. 'ENGTH' → logprob: -15.875164031982422

Token 1929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001733855315251276
    2. ' ,' → logprob: -9.375173568725586
    3. ',C' → logprob: -9.625173568725586
    4. 'C' → logprob: -11.125173568725586
    5. '   ' → logprob: -12.125173568725586
    6. ',
' → logprob: -13.250173568725586
    7. ' C' → logprob: -15.000173568725586
    8. '```' → logprob: -15.625173568725586
    9. ' ' → logprob: -16.750173568725586
    10. '_,' → logprob: -18.125173568725586

Token 1930: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00018077615823131055
    2. ' C' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.750181198120117
    4. ' ' → logprob: -16.750181198120117
    5. '
' → logprob: -17.000181198120117
    6. '	C' → logprob: -17.875181198120117
    7. '  ' → logprob: -18.250181198120117
    8. '    ' → logprob: -18.500181198120117
    9. '
' → logprob: -19.000181198120117
    10. '```' → logprob: -19.375181198120117

Token 1931: '_LENGTH' (ID: 33289)
  Prédit: '_LENGTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LENGTH' → logprob: -4.692145012086257e-05
    2. 'L' → logprob: -10.250046730041504
    3. '_L' → logprob: -11.750046730041504
    4. '_LEN' → logprob: -13.125046730041504
    5. '_length' → logprob: -14.750046730041504
    6. '_Length' → logprob: -14.875046730041504
    7. 'ENGTH' → logprob: -15.250046730041504
    8. 'length' → logprob: -16.37504768371582
    9. '_SUM' → logprob: -16.50004768371582
    10. '_S' → logprob: -16.62504768371582

Token 1932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.517272024415433e-05
    2. ',C' → logprob: -9.625075340270996
    3. ' ,' → logprob: -11.750075340270996
    4. 'C' → logprob: -14.000075340270996
    5. ',
' → logprob: -15.375075340270996
    6. '   ' → logprob: -16.37507438659668
    7. ' C' → logprob: -17.25007438659668
    8. '```' → logprob: -17.75007438659668
    9. '`,' → logprob: -18.50007438659668
    10. ',\
' → logprob: -18.87507438659668

Token 1933: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00029720881138928235
    2. ' C' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.625297546386719
    4. ' ' → logprob: -14.750297546386719
    5. '  ' → logprob: -15.625297546386719
    6. '
' → logprob: -16.37529754638672
    7. '
' → logprob: -17.50029754638672
    8. '	C' → logprob: -18.87529754638672
    9. '    ' → logprob: -19.25029754638672
    10. '     ' → logprob: -19.62529754638672

Token 1934: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.0015185497468337417
    2. 'SUM' → logprob: -6.501518726348877
    3. '_LENGTH' → logprob: -11.251518249511719
    4. '_LEN' → logprob: -13.501518249511719
    5. '_S' → logprob: -13.751518249511719
    6. 'sum' → logprob: -15.376518249511719
    7. ' SUM' → logprob: -15.501518249511719
    8. '_' → logprob: -16.75151824951172
    9. '_SUP' → logprob: -16.87651824951172
    10. '_sum' → logprob: -17.00151824951172

Token 1935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000253591249929741
    2. ',C' → logprob: -8.875253677368164
    3. ' ,' → logprob: -9.500253677368164
    4. '   ' → logprob: -10.625253677368164
    5. 'C' → logprob: -11.250253677368164
    6. ',
' → logprob: -13.750253677368164
    7. ' C' → logprob: -15.250253677368164
    8. ' ' → logprob: -16.125253677368164
    9. '```' → logprob: -16.125253677368164
    10. '  ' → logprob: -17.250253677368164

Token 1936: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007108822464942932
    2. ' C' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.625710487365723
    4. ' ' → logprob: -14.750710487365723
    5. '    ' → logprob: -16.87571144104004
    6. '  ' → logprob: -16.87571144104004
    7. '	C' → logprob: -16.87571144104004
    8. '
' → logprob: -17.25071144104004
    9. '     ' → logprob: -17.50071144104004
    10. '>C' → logprob: -17.87571144104004

Token 1937: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.00028934504371136427
    2. '_DICT' → logprob: -8.875288963317871
    3. 'L' → logprob: -9.000288963317871
    4. 'LD' → logprob: -10.875288963317871
    5. 'DICT' → logprob: -12.375288963317871
    6. '_LENGTH' → logprob: -13.250288963317871
    7. '_S' → logprob: -15.250288963317871
    8. '\' → logprob: -15.375288963317871
    9. '```' → logprob: -15.625288963317871
    10. '	L' → logprob: -16.250289916992188

Token 1938: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.0006070063100196421
    2. 'ICT' → logprob: -7.500607013702393
    3. 'DI' → logprob: -10.375606536865234
    4. 'IST' → logprob: -11.625606536865234
    5. '_DICT' → logprob: -11.625606536865234
    6. '
' → logprob: -13.875606536865234
    7. 'Dict' → logprob: -14.125606536865234
    8. 'dict' → logprob: -14.250606536865234
    9. 'D' → logprob: -14.750606536865234
    10. '\' → logprob: -14.875606536865234

Token 1939: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.623244553338736e-05
    2. ',C' → logprob: -10.125065803527832
    3. ' ,' → logprob: -10.875065803527832
    4. 'C' → logprob: -12.125065803527832
    5. '   ' → logprob: -14.000065803527832
    6. ',
' → logprob: -14.375065803527832
    7. '```' → logprob: -15.125065803527832
    8. ' C' → logprob: -17.37506675720215
    9. '_,' → logprob: -18.00006675720215
    10. '`,' → logprob: -18.37506675720215

Token 1940: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004898841143585742
    2. ' C' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.500490188598633
    4. ' ' → logprob: -15.375490188598633
    5. '  ' → logprob: -16.125490188598633
    6. '    ' → logprob: -16.250490188598633
    7. '	C' → logprob: -16.875490188598633
    8. '
' → logprob: -17.125490188598633
    9. '     ' → logprob: -17.500490188598633
    10. '       ' → logprob: -17.625490188598633

Token 1941: '_S' (ID: 1875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16555897891521454
    2. '_S' → logprob: -2.0405590534210205
    3. 'SD' → logprob: -3.7905590534210205
    4. ' S' → logprob: -10.665558815002441
    5. '_SD' → logprob: -11.665558815002441
    6. 'SG' → logprob: -13.540558815002441
    7. 'DICT' → logprob: -13.665558815002441
    8. '	S' → logprob: -13.790558815002441
    9. '_s' → logprob: -13.915558815002441
    10. '
' → logprob: -14.290558815002441

Token 1942: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.00033832306507974863
    2. 'ICT' → logprob: -8.625338554382324
    3. 'ID' → logprob: -9.500338554382324
    4. 'dict' → logprob: -10.500338554382324
    5. '_DICT' → logprob: -10.625338554382324
    6. 'DI' → logprob: -11.500338554382324
    7. 'D' → logprob: -11.625338554382324
    8. 'Dict' → logprob: -11.750338554382324
    9. 'IC' → logprob: -14.125338554382324
    10. '_dict' → logprob: -14.375338554382324

Token 1943: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008957733400166035
    2. '<|end|>' → logprob: -4.758957862854004
    3. '   ' → logprob: -8.758957862854004
    4. ')
' → logprob: -9.258957862854004
    5. '```' → logprob: -10.008957862854004
    6. '<|end|>' → logprob: -11.133957862854004
    7. '
' → logprob: -11.758957862854004
    8. ' )' → logprob: -12.133957862854004
    9. 'process' → logprob: -13.258957862854004
    10. ')return' → logprob: -13.258957862854004

Token 1944: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.22675210237503052
    2. '   ' → logprob: -1.8517520427703857
    3. '```' → logprob: -3.7267520427703857
    4. 'for' → logprob: -4.101752281188965
    5. 'def' → logprob: -5.351752281188965
    6. ' process' → logprob: -8.226752281188965
    7. ' for' → logprob: -8.976752281188965
    8. 'if' → logprob: -9.976752281188965
    9. '``' → logprob: -10.226752281188965
    10. '	process' → logprob: -10.601752281188965

Token 1945: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.000555416801944375
    2. '   ' → logprob: -7.500555515289307
    3. ' process' → logprob: -13.375555038452148
    4. '```' → logprob: -14.375555038452148
    5. 'for' → logprob: -15.000555038452148
    6. '	process' → logprob: -16.87555503845215
    7. '
' → logprob: -17.75055503845215
    8. '(process' → logprob: -18.00055503845215
    9. '``' → logprob: -19.37555503845215
    10. 'def' → logprob: -19.87555503845215

Token 1946: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -3.4121114822482923e-06
    2. 'queries' → logprob: -12.750003814697266
    3. 'Queries' → logprob: -14.750003814697266
    4. '_query' → logprob: -16.750003814697266
    5. '_' → logprob: -17.375003814697266
    6. '_questions' → logprob: -17.875003814697266
    7. ' queries' → logprob: -18.500003814697266
    8. '_single' → logprob: -18.750003814697266
    9. ' Queries' → logprob: -18.750003814697266
    10. '_requests' → logprob: -19.125003814697266

Token 1947: '(Query' (ID: 97126)
  Prédit: '(Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Query' → logprob: 0.0
    2. '(' → logprob: -18.375
    3. 'Query' → logprob: -19.125
    4. '<Query' → logprob: -19.5
    5. '	Query' → logprob: -20.0
    6. ' (' → logprob: -20.25
    7. ' Query' → logprob: -21.875
    8. '(Command' → logprob: -22.0
    9. '(Q' → logprob: -22.125
    10. '(Request' → logprob: -22.375

Token 1948: ',' (ID: 11)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0033622467890381813
    2. '(' → logprob: -6.50336217880249
    3. ')' → logprob: -6.87836217880249
    4. ',' → logprob: -8.128362655639648
    5. '   ' → logprob: -8.628362655639648
    6. '(C' → logprob: -9.003362655639648
    7. '(None' → logprob: -9.003362655639648
    8. '(N' → logprob: -10.003362655639648
    9. ' (' → logprob: -11.378362655639648
    10. '(c' → logprob: -11.503362655639648

Token 1949: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002036595979006961
    2. ' L' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.625204086303711
    4. '	L' → logprob: -17.37520408630371
    5. '    ' → logprob: -19.37520408630371
    6. '
' → logprob: -19.62520408630371
    7. '>L' → logprob: -19.62520408630371
    8. ')L' → logprob: -20.00020408630371
    9. ' ' → logprob: -20.37520408630371
    10. '    
' → logprob: -20.62520408630371

Token 1950: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -1.3544423381972592e-05
    2. 'C' → logprob: -11.37501335144043
    3. 'CAE' → logprob: -15.00001335144043
    4. 'A' → logprob: -15.12501335144043
    5. '```' → logprob: -15.50001335144043
    6. ' CA' → logprob: -15.50001335144043
    7. '   ' → logprob: -15.87501335144043
    8. '_CA' → logprob: -16.12501335144043
    9. 'CAA' → logprob: -16.37501335144043
    10. 'LA' → logprob: -16.62501335144043

Token 1951: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0009117019944824278
    2. 'func' → logprob: -7.000911712646484
    3. 'Func' → logprob: -16.000911712646484
    4. '```' → logprob: -16.125911712646484
    5. '_fun' → logprob: -17.250911712646484
    6. '_function' → logprob: -17.625911712646484
    7. '_FUNC' → logprob: -18.000911712646484
    8. ' func' → logprob: -18.375911712646484
    9. '	func' → logprob: -18.625911712646484
    10. '`' → logprob: -18.875911712646484

Token 1952: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5399062633514404
    2. ',' → logprob: -0.9149062633514404
    3. '(L' → logprob: -4.2899065017700195
    4. '(' → logprob: -6.5399065017700195
    5. '   ' → logprob: -7.2899065017700195
    6. ',L' → logprob: -7.7899065017700195
    7. ')
' → logprob: -8.28990650177002
    8. ' ,' → logprob: -9.66490650177002
    9. '<|end|>' → logprob: -11.28990650177002
    10. ' )' → logprob: -11.66490650177002

Token 1953: ' LENGTH' (ID: 173737)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019289902411401272
    2. ' LENGTH' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.00192928314209
    4. ' ' → logprob: -17.376928329467773
    5. '.LENGTH' → logprob: -17.626928329467773
    6. '_LENGTH' → logprob: -17.876928329467773
    7. 'length' → logprob: -18.001928329467773
    8. 'LEN' → logprob: -18.126928329467773
    9. '  ' → logprob: -18.501928329467773
    10. '	L' → logprob: -18.876928329467773

Token 1954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ',C' → logprob: -9.375099182128906
    3. 'C' → logprob: -11.750099182128906
    4. ' ,' → logprob: -12.250099182128906
    5. '   ' → logprob: -13.500099182128906
    6. ',
' → logprob: -14.875099182128906
    7. '```' → logprob: -18.250099182128906
    8. ',c' → logprob: -18.625099182128906
    9. ' C' → logprob: -19.500099182128906
    10. '`,' → logprob: -19.625099182128906

Token 1955: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00020354038861114532
    2. ' C' → logprob: -8.500203132629395
    3. '	C' → logprob: -18.50020408630371
    4. ' ' → logprob: -18.62520408630371
    5. '
' → logprob: -19.25020408630371
    6. '   ' → logprob: -19.37520408630371
    7. '>C' → logprob: -19.50020408630371
    8. ' ' → logprob: -19.50020408630371
    9. '_C' → logprob: -20.62520408630371
    10. '  ' → logprob: -20.75020408630371

Token 1956: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -1.723973582556937e-05
    2. '_SD' → logprob: -11.000017166137695
    3. 'S' → logprob: -15.375017166137695
    4. 'SD' → logprob: -15.875017166137695
    5. '\' → logprob: -16.625017166137695
    6. '_' → logprob: -17.250017166137695
    7. '_s' → logprob: -17.625017166137695
    8. '_DICT' → logprob: -17.625017166137695
    9. '_SY' → logprob: -17.750017166137695
    10. ' _' → logprob: -17.875017166137695

Token 1957: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -5.836499985889532e-05
    2. 'DI' → logprob: -10.7500581741333
    3. 'DIST' → logprob: -11.0000581741333
    4. 'D' → logprob: -11.2500581741333
    5. 'dict' → logprob: -13.0000581741333
    6. '_DICT' → logprob: -13.5000581741333
    7. 'ID' → logprob: -13.5000581741333
    8. '_D' → logprob: -14.3750581741333
    9. 'Dict' → logprob: -14.8750581741333
    10. 'DIS' → logprob: -15.1250581741333

Token 1958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.469590491382405e-05
    2. ',C' → logprob: -9.62507438659668
    3. ' ,' → logprob: -12.25007438659668
    4. 'C' → logprob: -12.62507438659668
    5. ',
' → logprob: -15.37507438659668
    6. '   ' → logprob: -15.87507438659668
    7. '```' → logprob: -16.75007438659668
    8. ')' → logprob: -16.87507438659668
    9. ' C' → logprob: -18.62507438659668
    10. '`,' → logprob: -18.87507438659668

Token 1959: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9027791495318525e-05
    2. ' C' → logprob: -10.875019073486328
    3. '   ' → logprob: -21.750019073486328
    4. ' ' → logprob: -21.875019073486328
    5. '	C' → logprob: -22.125019073486328
    6. '>C' → logprob: -22.500019073486328
    7. '
' → logprob: -22.750019073486328
    8. 'c' → logprob: -23.000019073486328
    9. '```' → logprob: -23.000019073486328
    10. '*C' → logprob: -23.250019073486328

Token 1960: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.04957480728626251
    2. 'L' → logprob: -3.049574851989746
    3. 'LD' → logprob: -6.924574851989746
    4. 'DICT' → logprob: -13.424574851989746
    5. '_DICT' → logprob: -14.299574851989746
    6. '```' → logprob: -14.924574851989746
    7. '\' → logprob: -15.049574851989746
    8. '	L' → logprob: -15.924574851989746
    9. 'LObject' → logprob: -16.17457389831543
    10. 'dict' → logprob: -16.17457389831543

Token 1961: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.00015812745550647378
    2. 'ICT' → logprob: -9.500158309936523
    3. '_DICT' → logprob: -9.500158309936523
    4. 'DI' → logprob: -12.250158309936523
    5. '_D' → logprob: -13.375158309936523
    6. 'dict' → logprob: -14.250158309936523
    7. 'Dict' → logprob: -14.875158309936523
    8. 'IST' → logprob: -15.250158309936523
    9. 'DIT' → logprob: -15.375158309936523
    10. 'D' → logprob: -15.875158309936523

Token 1962: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. ')
' → logprob: -10.375051498413086
    3. '())' → logprob: -11.125051498413086
    4. '()' → logprob: -12.625051498413086
    5. ' )' → logprob: -13.625051498413086
    6. '   ' → logprob: -14.625051498413086
    7. ')#' → logprob: -14.625051498413086
    8. ')

' → logprob: -15.875051498413086
    9. '
' → logprob: -16.375051498413086
    10. '```' → logprob: -16.500051498413086

Token 1963: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020187612622976303
    2. '<|end|>' → logprob: -4.0201873779296875
    3. '[' → logprob: -7.5201873779296875
    4. '#' → logprob: -7.6451873779296875
    5. '```' → logprob: -8.145187377929688
    6. ']' → logprob: -8.520187377929688
    7. '   ' → logprob: -8.895187377929688
    8. '<|end|>' → logprob: -9.395187377929688
    9. '...' → logprob: -10.020187377929688
    10. '
' → logprob: -10.270187377929688

Token 1964: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1962
Tokens correctement prédits (1ère position, stricte): 994
Tokens correctement prédits (1ère position, avec adaptation): 1051
Tokens correctement prédits (top 10): 1742
Précision stricte (1ère position): 50.66%
Précision adaptée (1ère position): 53.57%
Précision (top 10): 88.79%
================================================================================
