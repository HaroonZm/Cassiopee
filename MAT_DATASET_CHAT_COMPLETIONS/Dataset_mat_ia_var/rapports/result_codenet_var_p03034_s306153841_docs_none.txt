================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline
N = int(input())
S = list(map(int, input().split()))
N -= 1
ans = 0
for d in range(1,N+1):
    a = N-d
    res = 0
    p,q = N,0
    while a >= d:
        if a <= N-a and N%d == 0:
            break
        p -= d
        q += d
        res += S[p] + S[q]
        if res > ans:
            ans = res
        a -= d
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014013137842994183
    2. '[' → logprob: -10.000140190124512
    3. '.readline' → logprob: -10.625140190124512
    4. ' .' → logprob: -10.875140190124512
    5. '.
' → logprob: -11.750140190124512
    6. '.import' → logprob: -12.625140190124512
    7. '.[' → logprob: -12.750140190124512
    8. '.`' → logprob: -12.750140190124512
    9. '.stdin' → logprob: -12.875140190124512
    10. '.)' → logprob: -13.000140190124512

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28699058294296265
    2. '.readline' → logprob: -1.4119906425476074
    3. '.read' → logprob: -5.161990642547607
    4. '```' → logprob: -10.78699016571045
    5. '.Read' → logprob: -11.16199016571045
    6. 'read' → logprob: -11.28699016571045
    7. '.readlines' → logprob: -11.66199016571045
    8. '.\' → logprob: -12.03699016571045
    9. '.

' → logprob: -12.16199016571045
    10. '.
' → logprob: -12.28699016571045

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17210766673088074
    2. '(' → logprob: -1.9221076965332031
    3. '()
' → logprob: -5.797107696533203
    4. '(
' → logprob: -6.047107696533203
    5. '\' → logprob: -6.297107696533203
    6. '\n' → logprob: -6.797107696533203
    7. '
' → logprob: -6.797107696533203
    8. '()\' → logprob: -7.047107696533203
    9. '().' → logprob: -7.297107696533203
    10. '()

' → logprob: -8.922107696533203

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10097215324640274
    2. '(' → logprob: -2.3509721755981445
    3. '().' → logprob: -8.100972175598145
    4. '()
' → logprob: -8.350972175598145
    5. '(
' → logprob: -9.725972175598145
    6. '()

' → logprob: -10.100972175598145
    7. '()\' → logprob: -10.100972175598145
    8. '#' → logprob: -11.600972175598145
    9. '())' → logprob: -11.725972175598145
    10. ')' → logprob: -11.725972175598145

Token 10: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45105382800102234
    2. ' =' → logprob: -1.5760538578033447
    3. '=' → logprob: -2.7010538578033447
    4. ')' → logprob: -2.9510538578033447
    5. '.' → logprob: -4.576053619384766
    6. '[' → logprob: -5.076053619384766
    7. '  ' → logprob: -5.326053619384766
    8. ',' → logprob: -5.951053619384766
    9. '_' → logprob: -6.076053619384766
    10. ' )' → logprob: -6.201053619384766

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.016669049859046936
    2. 'int' → logprob: -4.141669273376465
    3. ' ' → logprob: -7.516669273376465
    4. ' input' → logprob: -9.641669273376465
    5. 'input' → logprob: -11.766669273376465
    6. '10' → logprob: -11.891669273376465
    7. '=int' → logprob: -12.016669273376465
    8. '(int' → logprob: -13.766669273376465
    9. '20' → logprob: -14.266669273376465
    10. '0' → logprob: -14.266669273376465

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006923011387698352
    2. '(input' → logprob: -7.375692367553711
    3. '('' → logprob: -10.500692367553711
    4. '(N' → logprob: -10.875692367553711
    5. '(sys' → logprob: -12.625692367553711
    6. '()' → logprob: -13.125692367553711
    7. '(user' → logprob: -13.250692367553711
    8. '(
' → logprob: -13.250692367553711
    9. '(open' → logprob: -13.375692367553711
    10. '("("' → logprob: -13.750692367553711

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023497028276324272
    2. ')' → logprob: -4.398497104644775
    3. '()' → logprob: -4.523497104644775
    4. '(' → logprob: -9.898496627807617
    5. ' ())' → logprob: -11.523496627807617
    6. '())
' → logprob: -12.273496627807617
    7. '().' → logprob: -12.648496627807617
    8. '()))' → logprob: -12.773496627807617
    9. '`)' → logprob: -14.023496627807617
    10. '))' → logprob: -14.148496627807617

Token 14: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42350345849990845
    2. ' ' → logprob: -2.1735033988952637
    3. '\n' → logprob: -2.7985033988952637
    4. 'a' → logprob: -3.4235033988952637
    5. 'data' → logprob: -3.9235033988952637
    6. ' for' → logprob: -4.048503398895264
    7. ' 
' → logprob: -4.048503398895264
    8. ')' → logprob: -4.298503398895264
    9. '[' → logprob: -4.298503398895264
    10. '\' → logprob: -4.548503398895264

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34042391180992126
    2. '.' → logprob: -1.8404239416122437
    3. '=' → logprob: -2.090423822402954
    4. '[' → logprob: -5.840424060821533
    5. ' ' → logprob: -6.465424060821533
    6. '=input' → logprob: -7.465424060821533
    7. '_' → logprob: -8.215423583984375
    8. ')' → logprob: -8.840423583984375
    9. '[:]' → logprob: -8.965423583984375
    10. ',' → logprob: -9.465423583984375

Token 16: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5766263008117676
    2. ' input' → logprob: -0.8266263008117676
    3. ' list' → logprob: -8.32662582397461
    4. 'list' → logprob: -8.57662582397461
    5. ' ' → logprob: -8.95162582397461
    6. '[input' → logprob: -10.57662582397461
    7. ' []' → logprob: -10.95162582397461
    8. '[]' → logprob: -10.95162582397461
    9. '(input' → logprob: -11.32662582397461
    10. 'int' → logprob: -11.57662582397461

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020939919631928205
    2. '(input' → logprob: -6.75209379196167
    3. '(S' → logprob: -7.75209379196167
    4. '()' → logprob: -8.127094268798828
    5. '(str' → logprob: -9.377094268798828
    6. '('' → logprob: -10.627094268798828
    7. '(int' → logprob: -10.877094268798828
    8. '(s' → logprob: -11.002094268798828
    9. '("("' → logprob: -11.877094268798828
    10. '(
' → logprob: -12.002094268798828

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10144121944904327
    2. '(str' → logprob: -2.9764411449432373
    3. '(' → logprob: -3.1014411449432373
    4. '(lambda' → logprob: -8.101441383361816
    5. '(input' → logprob: -8.976441383361816
    6. 'int' → logprob: -11.351441383361816
    7. '(float' → logprob: -11.351441383361816
    8. '(eval' → logprob: -11.476441383361816
    9. 'str' → logprob: -11.726441383361816
    10. '(
' → logprob: -12.101441383361816

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09604152292013168
    2. ',input' → logprob: -3.096041440963745
    3. '(' → logprob: -3.221041440963745
    4. ',' → logprob: -5.096041679382324
    5. 'input' → logprob: -8.846041679382324
    6. ')' → logprob: -9.596041679382324
    7. ' (' → logprob: -10.346041679382324
    8. '(int' → logprob: -11.346041679382324
    9. ' input' → logprob: -11.721041679382324
    10. ' ,' → logprob: -11.721041679382324

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023257475346326828
    2. ' input' → logprob: -3.7732574939727783
    3. '(input' → logprob: -11.3982572555542
    4. ',input' → logprob: -14.5232572555542
    5. ' ' → logprob: -16.648258209228516
    6. '	input' → logprob: -16.773258209228516
    7. ')' → logprob: -16.898258209228516
    8. '=input' → logprob: -16.898258209228516
    9. 'list' → logprob: -17.148258209228516
    10. '<input' → logprob: -18.148258209228516

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020246754866093397
    2. '()' → logprob: -9.000202178955078
    3. '()))' → logprob: -9.500202178955078
    4. '())' → logprob: -12.750202178955078
    5. '(' → logprob: -14.875202178955078
    6. '())))' → logprob: -14.875202178955078
    7. '()));' → logprob: -15.250202178955078
    8. ' ().' → logprob: -15.875202178955078
    9. '()
' → logprob: -16.625202178955078
    10. '()[' → logprob: -17.000202178955078

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16187088191509247
    2. 'strip' → logprob: -1.9118708372116089
    3. 'rstrip' → logprob: -6.411870956420898
    4. ' split' → logprob: -13.661870956420898
    5. ' strip' → logprob: -13.911870956420898
    6. ')' → logprob: -14.411870956420898
    7. '(split' → logprob: -15.286870956420898
    8. '().' → logprob: -15.786870956420898
    9. 'replace' → logprob: -16.1618709564209
    10. '.split' → logprob: -16.7868709564209

Token 23: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.41723811626434326
    2. '))' → logprob: -1.4172381162643433
    3. '())' → logprob: -2.667238235473633
    4. ')' → logprob: -3.667238235473633
    5. '()' → logprob: -6.292238235473633
    6. '(' → logprob: -6.292238235473633
    7. '()))
' → logprob: -10.292238235473633
    8. ')))' → logprob: -12.417238235473633
    9. '())))' → logprob: -12.792238235473633
    10. '()));' → logprob: -12.792238235473633

Token 24: 'N' (ID: 45)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1809229701757431
    2. ')' → logprob: -3.0559229850769043
    3. '#' → logprob: -3.3059229850769043
    4. 'a' → logprob: -4.555922985076904
    5. 'for' → logprob: -4.680922985076904
    6. '.' → logprob: -4.930922985076904
    7. 's' → logprob: -5.055922985076904
    8. 'M' → logprob: -5.305922985076904
    9. '\' → logprob: -5.305922985076904
    10. 'A' → logprob: -5.305922985076904

Token 25: ' -=' (ID: 12583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326013207435608
    2. ' ' → logprob: -0.7576013207435608
    3. '2' → logprob: -14.257601737976074
    4. '0' → logprob: -14.882601737976074
    5. ' N' → logprob: -15.257601737976074
    6. ' len' → logprob: -15.382601737976074
    7. ' S' → logprob: -15.757601737976074
    8. ' ' → logprob: -16.007600784301758
    9. 'S' → logprob: -16.195100784301758
    10. 'N' → logprob: -16.320100784301758

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015074820257723331
    2. ' ' → logprob: -6.50150728225708
    3. 'len' → logprob: -12.251507759094238
    4. ' len' → logprob: -15.751507759094238
    5. '2' → logprob: -16.001506805419922
    6. 'S' → logprob: -17.251506805419922
    7. '  ' → logprob: -17.501506805419922
    8. '0' → logprob: -17.626506805419922
    9. '3' → logprob: -18.001506805419922
    10. '10' → logprob: -18.251506805419922

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4288265109062195
    2. '\n' → logprob: -1.8038265705108643
    3. 'while' → logprob: -2.4288265705108643
    4. 'for' → logprob: -3.8038265705108643
    5. ' while' → logprob: -4.178826332092285
    6. 'if' → logprob: -5.303826332092285
    7. ' for' → logprob: -5.428826332092285
    8. 's' → logprob: -5.428826332092285
    9. '```' → logprob: -5.428826332092285
    10. '+' → logprob: -5.553826332092285

Token 29: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41217413544654846
    2. 'while' → logprob: -1.412174105644226
    3. '
' → logprob: -4.037174224853516
    4. 'S' → logprob: -4.037174224853516
    5. '\n' → logprob: -4.787174224853516
    6. ' for' → logprob: -4.912174224853516
    7. ' while' → logprob: -5.162174224853516
    8. 'i' → logprob: -5.662174224853516
    9. 'if' → logprob: -5.787174224853516
    10. '\' → logprob: -5.787174224853516

Token 30: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.594284176826477
    2. ' =' → logprob: -0.969284176826477
    3. '=' → logprob: -3.0942840576171875
    4. '+' → logprob: -5.2192840576171875
    5. '+=' → logprob: -5.2192840576171875
    6. ' ' → logprob: -5.3442840576171875
    7. '[' → logprob: -5.4692840576171875
    8. ',' → logprob: -6.0942840576171875
    9. '_' → logprob: -7.5942840576171875
    10. ' -=' → logprob: -8.344284057617188

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13870519399642944
    2. '0' → logprob: -2.138705253601074
    3. ' S' → logprob: -5.138705253601074
    4. ' []' → logprob: -6.388705253601074
    5. ' max' → logprob: -7.013705253601074
    6. 'S' → logprob: -7.138705253601074
    7. ' abs' → logprob: -7.763705253601074
    8. ' float' → logprob: -7.888705253601074
    9. '[]' → logprob: -7.888705253601074
    10. 'abs' → logprob: -8.013705253601074

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12608765065670013
    2. 'S' → logprob: -2.3760876655578613
    3. 'abs' → logprob: -4.626087665557861
    4. 'max' → logprob: -4.751087665557861
    5. 'float' → logprob: -6.126087665557861
    6. '[]' → logprob: -6.501087665557861
    7. '1' → logprob: -7.501087665557861
    8. '100' → logprob: -7.626087665557861
    9. '10' → logprob: -7.751087665557861
    10. 'sum' → logprob: -8.001087188720703

Token 33: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6112305521965027
    2. '
' → logprob: -1.6112306118011475
    3. ' for' → logprob: -2.2362306118011475
    4. '\n' → logprob: -2.7362306118011475
    5. 'while' → logprob: -3.4862306118011475
    6. '\' → logprob: -4.361230373382568
    7. ' while' → logprob: -4.611230373382568
    8. ' 
' → logprob: -4.986230373382568
    9. '```' → logprob: -5.236230373382568
    10. ' ' → logprob: -5.236230373382568

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10702589899301529
    2. 'while' → logprob: -2.9820258617401123
    3. '
' → logprob: -3.9820258617401123
    4. ' for' → logprob: -4.107026100158691
    5. '+' → logprob: -5.857026100158691
    6. ' while' → logprob: -5.982026100158691
    7. '\n' → logprob: -5.982026100158691
    8. ',' → logprob: -6.732026100158691
    9. ' ' → logprob: -6.732026100158691
    10. ':' → logprob: -7.107026100158691

Token 35: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3933853209018707
    2. ' ' → logprob: -1.1433852910995483
    3. ' _' → logprob: -5.768385410308838
    4. '_' → logprob: -6.018385410308838
    5. 'i' → logprob: -7.268385410308838
    6. '  ' → logprob: -9.26838493347168
    7. ' ‌' → logprob: -9.89338493347168
    8. ' I' → logprob: -10.76838493347168
    9. ' S' → logprob: -11.14338493347168
    10. ' s' → logprob: -11.64338493347168

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068169585429131985
    2. ' ' → logprob: -6.256816864013672
    3. 'in' → logprob: -6.381816864013672
    4. 'i' → logprob: -6.631816864013672
    5. ' i' → logprob: -6.756816864013672
    6. ',' → logprob: -8.756816864013672
    7. 'e' → logprob: -9.131816864013672
    8. '  ' → logprob: -9.506816864013672
    9. '   ' → logprob: -10.131816864013672
    10. 'o' → logprob: -10.131816864013672

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.714478075504303
    2. 'range' → logprob: -0.714478075504303
    3. 'S' → logprob: -4.214478015899658
    4. ' S' → logprob: -5.089478015899658
    5. '(range' → logprob: -9.464478492736816
    6. ' ' → logprob: -9.964478492736816
    7. '[' → logprob: -11.964478492736816
    8. '	range' → logprob: -12.089478492736816
    9. ' xrange' → logprob: -12.464478492736816
    10. '  ' → logprob: -12.714478492736816

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11317078769207001
    2. '(N' → logprob: -2.238170862197876
    3. '(len' → logprob: -8.363170623779297
    4. ' (' → logprob: -10.113170623779297
    5. '(S' → logprob: -10.863170623779297
    6. '(n' → logprob: -10.863170623779297
    7. '((' → logprob: -11.238170623779297
    8. '(s' → logprob: -12.238170623779297
    9. '(-' → logprob: -13.238170623779297
    10. '(M' → logprob: -13.363170623779297

Token 39: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18960818648338318
    2. '1' → logprob: -1.8146082162857056
    3. '10' → logprob: -5.689608097076416
    4. '2' → logprob: -6.439608097076416
    5. 'len' → logprob: -6.689608097076416
    6. '100' → logprob: -6.814608097076416
    7. '0' → logprob: -7.939608097076416
    8. '9' → logprob: -8.064608573913574
    9. '(' → logprob: -8.064608573913574
    10. '3' → logprob: -8.689608573913574

Token 40: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014607790857553482
    2. ' ,' → logprob: -4.264607906341553
    3. ',N' → logprob: -7.764607906341553
    4. ' ' → logprob: -11.264607429504395
    5. ',len' → logprob: -12.139607429504395
    6. 'N' → logprob: -14.764607429504395
    7. ' N' → logprob: -14.764607429504395
    8. '，' → logprob: -16.13960838317871
    9. '(' → logprob: -16.51460838317871
    10. ',n' → logprob: -16.76460838317871

Token 41: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10481754690408707
    2. ' +' → logprob: -2.4798176288604736
    3. '):' → logprob: -4.2298173904418945
    4. ' ):' → logprob: -7.3548173904418945
    5. ',' → logprob: -7.8548173904418945
    6. ' ' → logprob: -9.229817390441895
    7. ')' → logprob: -11.229817390441895
    8. '):
' → logprob: -11.729817390441895
    9. ' ,' → logprob: -11.854817390441895
    10. '-' → logprob: -11.979817390441895

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018816311785485595
    2. '2' → logprob: -9.000187873840332
    3. ' ' → logprob: -9.875187873840332
    4. '):' → logprob: -11.500187873840332
    5. ')' → logprob: -14.000187873840332
    6. '):
' → logprob: -14.750187873840332
    7. '```' → logprob: -14.812687873840332
    8. ',' → logprob: -14.875187873840332
    9. '

' → logprob: -15.562687873840332
    10. '   ' → logprob: -16.00018882751465

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11994368582963943
    2. ':' → logprob: -2.244943618774414
    3. ')' → logprob: -5.119943618774414
    4. ' ):' → logprob: -6.994943618774414
    5. ':)' → logprob: -9.369943618774414
    6. ' :' → logprob: -9.744943618774414
    7. '):
' → logprob: -10.494943618774414
    8. ' )' → logprob: -11.244943618774414
    9. ',' → logprob: -11.494943618774414
    10. '+:' → logprob: -13.119943618774414

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11171885579824448
    2. '   ' → logprob: -2.6117188930511475
    3. '<|end|>' → logprob: -4.486718654632568
    4. '    ' → logprob: -4.736718654632568
    5. ' if' → logprob: -5.236718654632568
    6. ' 
' → logprob: -6.236718654632568
    7. '  ' → logprob: -7.111718654632568
    8. ' ans' → logprob: -7.236718654632568
    9. ' for' → logprob: -7.361718654632568
    10. ' i' → logprob: -7.486718654632568

Token 45: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7252715229988098
    2. ' i' → logprob: -0.9752715229988098
    3. ' if' → logprob: -2.600271463394165
    4. '   ' → logprob: -3.725271463394165
    5. ' for' → logprob: -4.225271701812744
    6. '    ' → logprob: -4.975271701812744
    7. 'i' → logprob: -5.350271701812744
    8. ' ans' → logprob: -6.350271701812744
    9. 'if' → logprob: -6.600271701812744
    10. ' max' → logprob: -6.975271701812744

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08689214289188385
    2. '=' → logprob: -2.5868921279907227
    3. 'ns' → logprob: -5.586892127990723
    4. ',' → logprob: -6.711892127990723
    5. ',b' → logprob: -7.461892127990723
    6. ' +=' → logprob: -7.586892127990723
    7. ' ' → logprob: -7.711892127990723
    8. '+=' → logprob: -8.461892127990723
    9. 's' → logprob: -8.961892127990723
    10. 'll' → logprob: -9.086892127990723

Token 47: ' N' (ID: 478)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5931301712989807
    2. '0' → logprob: -1.218130111694336
    3. 'N' → logprob: -2.968130111694336
    4. 'd' → logprob: -3.843130111694336
    5. ' ' → logprob: -4.343130111694336
    6. ' S' → logprob: -4.468130111694336
    7. '[' → logprob: -4.593130111694336
    8. '[S' → logprob: -4.718130111694336
    9. '[N' → logprob: -5.093130111694336
    10. '[]' → logprob: -5.468130111694336

Token 48: '-d' (ID: 2469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7936627864837646
    2. '-d' → logprob: -1.0436627864837646
    3. ' -' → logprob: -1.7936627864837646
    4. '//' → logprob: -4.168663024902344
    5. '+' → logprob: -4.543663024902344
    6. 'd' → logprob: -6.668663024902344
    7. ' //' → logprob: -7.293663024902344
    8. '-div' → logprob: -7.918663024902344
    9. '-k' → logprob: -9.418663024902344
    10. '-j' → logprob: -9.668663024902344

Token 49: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6926328539848328
    2. '
' → logprob: -1.3176329135894775
    3. '<|end|>' → logprob: -1.5676329135894775
    4. '<|end|>' → logprob: -4.692632675170898
    5. '-' → logprob: -5.692632675170898
    6. ' ' → logprob: -5.692632675170898
    7. ' +' → logprob: -5.817632675170898
    8. '  
' → logprob: -7.192632675170898
    9. 'a' → logprob: -7.442632675170898
    10. ' 
' → logprob: -7.817632675170898

Token 50: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48220130801200867
    2. ' ' → logprob: -1.232201337814331
    3. '-' → logprob: -3.732201337814331
    4. ' +' → logprob: -4.357201099395752
    5. '<|end|>' → logprob: -4.482201099395752
    6. ' 
' → logprob: -4.607201099395752
    7. '
' → logprob: -4.732201099395752
    8. ')' → logprob: -5.357201099395752
    9. '  
' → logprob: -5.982201099395752
    10. ' for' → logprob: -5.982201099395752

Token 51: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5573384165763855
    2. '+' → logprob: -1.3073384761810303
    3. ' for' → logprob: -3.5573384761810303
    4. ')' → logprob: -3.8073384761810303
    5. 'for' → logprob: -4.057338237762451
    6. 'b' → logprob: -4.182338237762451
    7. ' b' → logprob: -4.932338237762451
    8. 's' → logprob: -5.057338237762451
    9. '-' → logprob: -5.057338237762451
    10. 'a' → logprob: -5.307338237762451

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27741968631744385
    2. '=' → logprob: -1.6524196863174438
    3. ' +=' → logprob: -3.1524195671081543
    4. '+=' → logprob: -4.902419567108154
    5. '+' → logprob: -8.902420043945312
    6. 'ult' → logprob: -9.402420043945312
    7. ' -=' → logprob: -9.527420043945312
    8. ' ' → logprob: -9.652420043945312
    9. 's' → logprob: -10.152420043945312
    10. 't' → logprob: -10.777420043945312

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8552899956703186
    2. ' ' → logprob: -1.4802899360656738
    3. ' max' → logprob: -2.730289936065674
    4. 'max' → logprob: -2.730289936065674
    5. 'S' → logprob: -3.105289936065674
    6. ' S' → logprob: -3.230289936065674
    7. ' min' → logprob: -3.605289936065674
    8. 'a' → logprob: -3.980289936065674
    9. 'min' → logprob: -3.980289936065674
    10. 'abs' → logprob: -4.105289936065674

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0057905912399292
    2. 'S' → logprob: -1.8807905912399292
    3. 'max' → logprob: -1.8807905912399292
    4. 'abs' → logprob: -2.3807907104492188
    5. 'ans' → logprob: -2.6307907104492188
    6. 'min' → logprob: -2.8807907104492188
    7. 'a' → logprob: -3.2557907104492188
    8. '[a' → logprob: -4.380790710449219
    9. 'sum' → logprob: -4.505790710449219
    10. '[' → logprob: -4.880790710449219

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03869540989398956
    2. ' for' → logprob: -3.5386953353881836
    3. 'b' → logprob: -6.038695335388184
    4. 'i' → logprob: -6.288695335388184
    5. 'while' → logprob: -6.288695335388184
    6. 'j' → logprob: -6.913695335388184
    7. '   ' → logprob: -7.538695335388184
    8. ' ' → logprob: -8.163695335388184
    9. 'a' → logprob: -8.913695335388184
    10. 'if' → logprob: -9.038695335388184

Token 58: ',q' (ID: 86188)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3453516364097595
    2. '=' → logprob: -1.5953516960144043
    3. 'r' → logprob: -3.0953516960144043
    4. '1' → logprob: -3.9703516960144043
    5. '2' → logprob: -5.345351696014404
    6. 'refix' → logprob: -5.720351696014404
    7. 'rev' → logprob: -5.720351696014404
    8. 'a' → logprob: -5.845351696014404
    9. 'os' → logprob: -5.970351696014404
    10. 'for' → logprob: -6.970351696014404

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146061480045319
    2. ' =' → logprob: -1.701460599899292
    3. ',' → logprob: -10.451460838317871
    4. ' ' → logprob: -11.326460838317871
    5. '=p' → logprob: -13.451460838317871
    6. '  ' → logprob: -14.326460838317871
    7. '＝' → logprob: -14.451460838317871
    8. '=int' → logprob: -14.576460838317871
    9. '=i' → logprob: -14.701460838317871
    10. 'for' → logprob: -14.826460838317871

Token 60: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09140296280384064
    2. ' ' → logprob: -2.591403007507324
    3. 'a' → logprob: -4.966403007507324
    4. 'd' → logprob: -6.591403007507324
    5. ' a' → logprob: -6.591403007507324
    6. '1' → logprob: -6.841403007507324
    7. ' d' → logprob: -7.591403007507324
    8. '(' → logprob: -8.341403007507324
    9. 'N' → logprob: -8.841403007507324
    10. ' (' → logprob: -8.841403007507324

Token 61: ',' (ID: 11)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.4339696168899536
    2. '-' → logprob: -1.4339696168899536
    3. ' -' → logprob: -2.558969497680664
    4. ',' → logprob: -3.683969497680664
    5. ',d' → logprob: -4.808969497680664
    6. '-q' → logprob: -7.308969497680664
    7. '-a' → logprob: -7.558969497680664
    8. ' ' → logprob: -7.933969497680664
    9. ',a' → logprob: -8.308969497680664
    10. '+' → logprob: -8.308969497680664

Token 62: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2777242362499237
    2. 'a' → logprob: -2.277724266052246
    3. ' N' → logprob: -2.402724266052246
    4. 'd' → logprob: -3.902724266052246
    5. ' a' → logprob: -4.152724266052246
    6. ' d' → logprob: -5.277724266052246
    7. ' ' → logprob: -5.652724266052246
    8. '0' → logprob: -5.652724266052246
    9. 'p' → logprob: -7.902724266052246
    10. ' -' → logprob: -8.777724266052246

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3428662121295929
    2. '<|end|>' → logprob: -1.3428661823272705
    3. '\n' → logprob: -4.71786642074585
    4. ':' → logprob: -5.21786642074585
    5. ':
' → logprob: -5.34286642074585
    6. '<|end|>' → logprob: -5.84286642074585
    7. '   ' → logprob: -6.21786642074585
    8. '  
' → logprob: -6.84286642074585
    9. ' ' → logprob: -7.59286642074585
    10. '+' → logprob: -7.59286642074585

Token 64: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1254695653915405
    2. '<|end|>' → logprob: -1.2504695653915405
    3. '
' → logprob: -2.12546968460083
    4. '   ' → logprob: -2.25046968460083
    5. '\n' → logprob: -2.62546968460083
    6. ' 
' → logprob: -3.50046968460083
    7. '+' → logprob: -4.62546968460083
    8. '  
' → logprob: -5.00046968460083
    9. '  ' → logprob: -5.12546968460083
    10. ':' → logprob: -5.25046968460083

Token 65: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1969300508499146
    2. ' ' → logprob: -1.3219300508499146
    3. '   ' → logprob: -1.5719300508499146
    4. 'while' (adapté à ' while') → logprob: -2.446929931640625
    5. '\n' → logprob: -3.571929931640625
    6. '<|end|>' → logprob: -3.946929931640625
    7. '	while' → logprob: -3.946929931640625
    8. '
' → logprob: -4.071929931640625
    9. ' 
' → logprob: -4.321929931640625
    10. ' for' → logprob: -4.821929931640625

Token 66: ' a' (ID: 261)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6868751049041748
    2. 'p' → logprob: -1.0618751049041748
    3. ' q' → logprob: -2.561875104904175
    4. 'q' → logprob: -2.686875104904175
    5. ' a' → logprob: -6.686875343322754
    6. '(p' → logprob: -6.811875343322754
    7. ' True' → logprob: -6.936875343322754
    8. 'a' → logprob: -7.061875343322754
    9. ' ' → logprob: -7.561875343322754
    10. 'True' → logprob: -7.936875343322754

Token 67: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.35560914874076843
    2. ' >' → logprob: -1.8556091785430908
    3. '>=' → logprob: -2.480609178543091
    4. '>' → logprob: -2.855609178543091
    5. '-' → logprob: -7.355608940124512
    6. ' ' → logprob: -8.355608940124512
    7. '+' → logprob: -8.355608940124512
    8. ' -' → logprob: -8.730608940124512
    9. ' <' → logprob: -9.605608940124512
    10. ' +' → logprob: -10.230608940124512

Token 68: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029899979010224342
    2. ' ' → logprob: -3.529900074005127
    3. 'p' → logprob: -10.029899597167969
    4. '1' → logprob: -10.154899597167969
    5. 'd' → logprob: -10.654899597167969
    6. 'q' → logprob: -10.779899597167969
    7. ' p' → logprob: -12.029899597167969
    8. ' d' → logprob: -12.529899597167969
    9. '   ' → logprob: -12.654899597167969
    10. ' q' → logprob: -13.029899597167969

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1054222583770752
    2. ' and' → logprob: -2.355422258377075
    3. ':
' → logprob: -6.105422019958496
    4. 'and' → logprob: -6.105422019958496
    5. ' :' → logprob: -7.480422019958496
    6. ' or' → logprob: -9.230422019958496
    7. '   ' → logprob: -11.105422019958496
    8. '<|end|>' → logprob: -11.105422019958496
    9. '):' → logprob: -11.855422019958496
    10. ',' → logprob: -12.230422019958496

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0127228498458862
    2. 'p' → logprob: -1.6377228498458862
    3. ' p' → logprob: -1.7627228498458862
    4. 'if' (adapté à ' if') → logprob: -2.637722969055176
    5. 'q' → logprob: -3.012722969055176
    6. ' ' → logprob: -3.637722969055176
    7. ' res' → logprob: -4.012722969055176
    8. '       ' → logprob: -4.012722969055176
    9. ' q' → logprob: -4.387722969055176
    10. 'a' → logprob: -4.512722969055176

Token 72: ' a' (ID: 261)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19350716471672058
    2. ' S' → logprob: -1.818507194519043
    3. 'p' → logprob: -5.318507194519043
    4. ' p' → logprob: -5.568507194519043
    5. ' ' → logprob: -6.693507194519043
    6. 'a' → logprob: -6.818507194519043
    7. 'q' → logprob: -7.068507194519043
    8. ' a' → logprob: -8.318507194519043
    9. ' q' → logprob: -8.568507194519043
    10. '   ' → logprob: -8.568507194519043

Token 73: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4563794732093811
    2. '>=' → logprob: -1.3313794136047363
    3. '%' → logprob: -3.2063794136047363
    4. '>' → logprob: -4.581379413604736
    5. ' >' → logprob: -4.581379413604736
    6. ' ==' → logprob: -4.831379413604736
    7. '==' → logprob: -4.831379413604736
    8. ' -' → logprob: -5.206379413604736
    9. '-' → logprob: -5.206379413604736
    10. ' %' → logprob: -5.456379413604736

Token 74: ' N' (ID: 478)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.874875009059906
    2. 'q' → logprob: -0.999875009059906
    3. ' p' → logprob: -2.249875068664551
    4. ' q' → logprob: -2.874875068664551
    5. 'S' → logprob: -3.749875068664551
    6. ' ' → logprob: -4.874875068664551
    7. 'N' → logprob: -4.874875068664551
    8. '0' → logprob: -4.874875068664551
    9. ' S' → logprob: -6.249875068664551
    10. 'b' → logprob: -6.499875068664551

Token 75: '-a' (ID: 8575)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0648016706109047
    2. 'and' → logprob: -3.3148016929626465
    3. ':' → logprob: -4.9398016929626465
    4. ' -' → logprob: -4.9398016929626465
    5. '-' → logprob: -5.0648016929626465
    6. ' ' → logprob: -5.3148016929626465
    7. '<|end|>' → logprob: -8.439801216125488
    8. ' :' → logprob: -8.814801216125488
    9. '   ' → logprob: -9.939801216125488
    10. '0' → logprob: -10.064801216125488

Token 76: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15633945167064667
    2. ':' → logprob: -2.156339406967163
    3. 'and' → logprob: -3.906339406967163
    4. ' :' → logprob: -5.656339645385742
    5. ' or' → logprob: -5.781339645385742
    6. ' ' → logprob: -6.781339645385742
    7. '+' → logprob: -8.406339645385742
    8. ' +' → logprob: -8.656339645385742
    9. '-' → logprob: -9.406339645385742
    10. '   ' → logprob: -9.531339645385742

Token 77: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.47284963726997375
    2. 'S' → logprob: -1.4728496074676514
    3. ' p' → logprob: -3.2228496074676514
    4. ' a' → logprob: -3.4728496074676514
    5. ' q' → logprob: -3.7228496074676514
    6. 'q' → logprob: -4.3478498458862305
    7. 'a' → logprob: -4.3478498458862305
    8. 'p' → logprob: -5.0978498458862305
    9. ' (' → logprob: -5.7228498458862305
    10. ' ' → logprob: -5.8478498458862305

Token 78: '%d' (ID: 34150)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7244805693626404
    2. '+' → logprob: -1.3494806289672852
    3. '-a' → logprob: -1.9744806289672852
    4. ' -' → logprob: -2.849480628967285
    5. '-d' → logprob: -4.849480628967285
    6. ' ' → logprob: -4.849480628967285
    7. 'a' → logprob: -4.974480628967285
    8. ' and' → logprob: -5.224480628967285
    9. '-q' → logprob: -5.724480628967285
    10. '>' → logprob: -5.911980628967285

Token 79: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5776660442352295
    2. ' ==' → logprob: -0.9526660442352295
    3. ' !=' → logprob: -3.9526660442352295
    4. '!=' → logprob: -4.327666282653809
    5. ':' → logprob: -4.577666282653809
    6. ' and' → logprob: -5.702666282653809
    7. '=' → logprob: -5.827666282653809
    8. ' ' → logprob: -6.077666282653809
    9. '>' → logprob: -7.452666282653809
    10. ' :' → logprob: -7.952666282653809

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07896535843610764
    2. ' ' → logprob: -2.578965425491333
    3. 'a' → logprob: -10.078965187072754
    4. '1' → logprob: -11.453965187072754
    5. 'q' → logprob: -11.953965187072754
    6. ' a' → logprob: -12.703965187072754
    7. '  ' → logprob: -13.078965187072754
    8. '   ' → logprob: -13.391465187072754
    9. 'p' → logprob: -13.453965187072754
    10. 'd' → logprob: -13.516465187072754

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034059707541018724
    2. ' ' → logprob: -5.878406047821045
    3. 'a' → logprob: -7.753406047821045
    4. 'q' → logprob: -9.503405570983887
    5. 'd' → logprob: -10.253405570983887
    6. 'p' → logprob: -10.253405570983887
    7. '1' → logprob: -11.628405570983887
    8. ' a' → logprob: -12.378405570983887
    9. 'N' → logprob: -13.315905570983887
    10. ' q' → logprob: -13.315905570983887

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021899950224906206
    2. ' and' → logprob: -6.252190113067627
    3. ':
' → logprob: -9.002189636230469
    4. 'and' → logprob: -9.627189636230469
    5. '):' → logprob: -10.502189636230469
    6. ' :' → logprob: -11.002189636230469
    7. ',' → logprob: -12.377189636230469
    8. ')' → logprob: -12.502189636230469
    9. ':return' → logprob: -12.502189636230469
    10. '   ' → logprob: -12.627189636230469

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5578489899635315
    2. ':' → logprob: -1.6828489303588867
    3. '       ' → logprob: -2.0578489303588867
    4. ':
' → logprob: -3.4328489303588867
    5. '<|end|>' → logprob: -4.307848930358887
    6. '   ' → logprob: -4.432848930358887
    7. ' ' → logprob: -4.682848930358887
    8. '\n' → logprob: -4.807848930358887
    9. ' :' → logprob: -4.932848930358887
    10. '               ' → logprob: -5.057848930358887

Token 84: ' break' (ID: 2338)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5493543744087219
    2. 'res' → logprob: -1.5493543148040771
    3. ' ans' → logprob: -2.799354314804077
    4. ' p' → logprob: -3.424354314804077
    5. ' break' → logprob: -3.424354314804077
    6. ' q' → logprob: -3.549354314804077
    7. '               ' → logprob: -4.174354553222656
    8. 'break' (adapté à ' break') → logprob: -4.799354553222656
    9. '           ' → logprob: -5.174354553222656
    10. 'p' → logprob: -5.424354553222656

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38245004415512085
    2. '<|end|>' → logprob: -2.0074501037597656
    3. '       ' → logprob: -2.1324501037597656
    4. '\n' → logprob: -3.7574501037597656
    5. ' 
' → logprob: -4.132450103759766
    6. '        
' → logprob: -4.882450103759766
    7. '   ' → logprob: -5.757450103759766
    8. '  
' → logprob: -5.757450103759766
    9. ' ' → logprob: -5.757450103759766
    10. '    
' → logprob: -5.882450103759766

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5659691691398621
    2. '
' → logprob: -1.4409692287445068
    3. '<|end|>' → logprob: -2.065969228744507
    4. '   ' → logprob: -3.940969228744507
    5. '\n' → logprob: -4.190968990325928
    6. '        
' → logprob: -4.565968990325928
    7. ' 
' → logprob: -5.190968990325928
    8. ' ' → logprob: -5.315968990325928
    9. '    
' → logprob: -5.940968990325928
    10. '        ' → logprob: -6.190968990325928

Token 87: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6310569047927856
    2. ' ' → logprob: -1.7560569047927856
    3. '<|end|>' → logprob: -1.7560569047927856
    4. '       ' → logprob: -1.8810569047927856
    5. '    ' → logprob: -2.381056785583496
    6. ' if' → logprob: -3.506056785583496
    7. '
' → logprob: -4.006056785583496
    8. '        ' → logprob: -4.006056785583496
    9. '<|end|>' → logprob: -4.256056785583496
    10. ':' → logprob: -4.256056785583496

Token 88: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3914068341255188
    2. '-=' → logprob: -1.266406774520874
    3. '=' → logprob: -4.641407012939453
    4. ',' → logprob: -4.641407012939453
    5. ' =' → logprob: -4.891407012939453
    6. '-' → logprob: -5.141407012939453
    7. '+=' → logprob: -5.391407012939453
    8. ' +=' → logprob: -6.266407012939453
    9. ',p' → logprob: -7.266407012939453
    10. ' -' → logprob: -7.266407012939453

Token 89: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1828337162733078
    2. 'd' → logprob: -1.8078336715698242
    3. ' ' → logprob: -6.682833671569824
    4. ' d' → logprob: -7.557833671569824
    5. '2' → logprob: -7.807833671569824
    6. 'a' → logprob: -8.057833671569824
    7. 'q' → logprob: -8.182833671569824
    8. 'p' → logprob: -8.307833671569824
    9. 'N' → logprob: -11.182833671569824
    10. '   ' → logprob: -11.307833671569824

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.013180581852793694
    2. '1' → logprob: -5.013180732727051
    3. ' q' → logprob: -5.763180732727051
    4. 'if' → logprob: -6.513180732727051
    5. 'p' → logprob: -7.013180732727051
    6. 'res' → logprob: -8.38818073272705
    7. ' if' → logprob: -8.63818073272705
    8. ' ' → logprob: -9.01318073272705
    9. '       ' → logprob: -9.13818073272705
    10. 's' → logprob: -9.76318073272705

Token 93: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2819577753543854
    2. ' +=' → logprob: -1.406957745552063
    3. '+' → logprob: -7.906957626342773
    4. '=' → logprob: -7.906957626342773
    5. ' =' → logprob: -10.031957626342773
    6. ' +' → logprob: -11.031957626342773
    7. ']+=' → logprob: -12.656957626342773
    8. '++' → logprob: -13.281957626342773
    9. '<|end|>' → logprob: -13.656957626342773
    10. ' ' → logprob: -13.906957626342773

Token 94: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1552489548921585
    2. '1' → logprob: -2.0302488803863525
    3. ' d' → logprob: -4.655249118804932
    4. ' ' → logprob: -5.905249118804932
    5. '2' → logprob: -9.155248641967773
    6. 'q' → logprob: -9.905248641967773
    7. 'p' → logprob: -11.155248641967773
    8. '10' → logprob: -11.530248641967773
    9. '3' → logprob: -11.780248641967773
    10. '4' → logprob: -11.905248641967773

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1291896253824234
    2. '<|end|>' → logprob: -2.1291897296905518
    3. '<|end|>' → logprob: -7.129189491271973
    4. '       ' → logprob: -7.129189491271973
    5. '```' → logprob: -8.879189491271973
    6. '
' → logprob: -9.004189491271973
    7. '        
' → logprob: -9.129189491271973
    8. ' 
' → logprob: -9.504189491271973
    9. '  
' → logprob: -9.879189491271973
    10. '\n' → logprob: -10.379189491271973

Token 96: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7852124571800232
    2. 'res' (adapté à ' res') → logprob: -1.035212516784668
    3. ' if' → logprob: -2.535212516784668
    4. ' res' → logprob: -2.660212516784668
    5. 'a' → logprob: -3.785212516784668
    6. 'p' → logprob: -5.160212516784668
    7. 'ans' → logprob: -5.910212516784668
    8. ' ' → logprob: -6.410212516784668
    9. ' a' → logprob: -6.660212516784668
    10. 's' → logprob: -7.035212516784668

Token 98: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.034721117466688156
    2. '+=' → logprob: -3.4097211360931396
    3. ' =' → logprob: -7.0347208976745605
    4. '+' → logprob: -8.909721374511719
    5. '=' → logprob: -10.284721374511719
    6. ' +' → logprob: -11.159721374511719
    7. ' |=' → logprob: -12.284721374511719
    8. ' ^=' → logprob: -13.284721374511719
    9. '++' → logprob: -13.284721374511719
    10. ' -=' → logprob: -14.784721374511719

Token 99: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10056722909212112
    2. '1' → logprob: -3.47556734085083
    3. ' S' → logprob: -3.85056734085083
    4. 'abs' → logprob: -4.35056734085083
    5. 'max' → logprob: -4.97556734085083
    6. ' ' → logprob: -5.72556734085083
    7. '(S' → logprob: -5.72556734085083
    8. 'q' → logprob: -5.72556734085083
    9. ' abs' → logprob: -5.72556734085083
    10. 'min' → logprob: -5.85056734085083

Token 100: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.01199505664408207
    2. '[q' → logprob: -4.5119948387146
    3. 'p' → logprob: -7.3869948387146
    4. '[' → logprob: -8.886995315551758
    5. '[a' → logprob: -9.261995315551758
    6. 'q' → logprob: -9.761995315551758
    7. ' [' → logprob: -11.386995315551758
    8. '   ' → logprob: -12.511995315551758
    9. '[N' → logprob: -12.511995315551758
    10. '(p' → logprob: -12.636995315551758

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020956608932465315
    2. ']*' → logprob: -7.127095699310303
    3. ' ]' → logprob: -7.627095699310303
    4. ']+' → logprob: -7.627095699310303
    5. '+' → logprob: -8.752095222473145
    6. ']-' → logprob: -9.252095222473145
    7. '-' → logprob: -10.252095222473145
    8. ']
' → logprob: -12.502095222473145
    9. '+]' → logprob: -12.752095222473145
    10. ' ' → logprob: -13.002095222473145

Token 102: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8899325132369995
    2. '+' → logprob: -1.1399325132369995
    3. '<|end|>' → logprob: -2.264932632446289
    4. ' -' → logprob: -3.139932632446289
    5. '   ' → logprob: -3.389932632446289
    6. '*' → logprob: -3.639932632446289
    7. ' ' → logprob: -4.264932632446289
    8. '
' → logprob: -4.389932632446289
    9. ' +' → logprob: -4.514932632446289
    10. '<|end|>' → logprob: -5.014932632446289

Token 103: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31332671642303467
    2. ' S' → logprob: -1.3133267164230347
    3. ' ' → logprob: -9.938326835632324
    4. '   ' → logprob: -12.313326835632324
    5. 'q' → logprob: -12.688326835632324
    6. '       ' → logprob: -13.188326835632324
    7. '	S' → logprob: -13.313326835632324
    8. '+' → logprob: -13.438326835632324
    9. ' q' → logprob: -13.813326835632324
    10. '  ' → logprob: -13.938326835632324

Token 104: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0014309515245258808
    2. '[' → logprob: -6.751430988311768
    3. '   ' → logprob: -9.37643051147461
    4. ' [' → logprob: -9.75143051147461
    5. '[N' → logprob: -10.00143051147461
    6. '[a' → logprob: -10.37643051147461
    7. '[p' → logprob: -11.37643051147461
    8. 'q' → logprob: -11.62643051147461
    9. '```' → logprob: -12.00143051147461
    10. '  ' → logprob: -12.87643051147461

Token 105: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8405519723892212
    2. 'if' (adapté à ' if') → logprob: -1.0905519723892212
    3. '   ' → logprob: -1.7155519723892212
    4. '       ' → logprob: -4.465551853179932
    5. 'p' → logprob: -4.715551853179932
    6. ' ' → logprob: -4.965551853179932
    7. ' p' → logprob: -5.590551853179932
    8. 'a' → logprob: -5.715551853179932
    9. 'd' → logprob: -5.965551853179932
    10. '1' → logprob: -6.090551853179932

Token 108: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.39898261427879333
    2. ' p' → logprob: -1.6489826440811157
    3. ' a' → logprob: -3.398982524871826
    4. ' q' → logprob: -3.398982524871826
    5. 'res' → logprob: -3.648982524871826
    6. ' S' → logprob: -3.773982524871826
    7. 'p' → logprob: -5.273982524871826
    8. ' N' → logprob: -6.023982524871826
    9. ' ' → logprob: -6.148982524871826
    10. 'S' → logprob: -6.148982524871826

Token 109: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.051929645240306854
    2. ' >=' → logprob: -3.9269297122955322
    3. '>' → logprob: -4.176929473876953
    4. ' ==' → logprob: -4.301929473876953
    5. ' <' → logprob: -7.176929473876953
    6. ' <=' → logprob: -7.551929473876953
    7. '>=' → logprob: -8.301929473876953
    8. '==' → logprob: -8.426929473876953
    9. ' ' → logprob: -8.926929473876953
    10. ' %' → logprob: -10.301929473876953

Token 110: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20153602957725525
    2. 'ans' → logprob: -1.7015360593795776
    3. '	ans' → logprob: -10.201536178588867
    4. '0' → logprob: -10.326536178588867
    5. ' ' → logprob: -10.826536178588867
    6. '(ans' → logprob: -11.326536178588867
    7. '100' → logprob: -11.826536178588867
    8. '10' → logprob: -12.701536178588867
    9. '   ' → logprob: -13.826536178588867
    10. '1' → logprob: -13.951536178588867

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07010626792907715
    2. ':
' → logprob: -2.695106267929077
    3. '           ' → logprob: -9.945106506347656
    4. ' :' → logprob: -10.445106506347656
    5. '       ' → logprob: -10.570106506347656
    6. '   ' → logprob: -10.695106506347656
    7. ' :
' → logprob: -11.445106506347656
    8. ' and' → logprob: -11.695106506347656
    9. ':
' → logprob: -11.820106506347656
    10. ',' → logprob: -12.945106506347656

Token 112: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5902817845344543
    2. '           ' → logprob: -0.8402817845344543
    3. 'ans' → logprob: -4.340281963348389
    4. '	ans' → logprob: -7.465281963348389
    5. '               ' → logprob: -8.21528148651123
    6. '(ans' → logprob: -8.96528148651123
    7. '```' → logprob: -9.46528148651123
    8. '       ' → logprob: -9.59028148651123
    9. '   ' → logprob: -9.96528148651123
    10. '                   ' → logprob: -11.21528148651123

Token 113: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.004163756500929594
    2. 'ans' (adapté à ' ans') → logprob: -5.50416374206543
    3. '           ' → logprob: -9.62916374206543
    4. '	ans' → logprob: -11.62916374206543
    5. '(ans' → logprob: -12.25416374206543
    6. '```' → logprob: -13.37916374206543
    7. '               ' → logprob: -13.62916374206543
    8. '_ans' → logprob: -13.75416374206543
    9. ' res' → logprob: -14.50416374206543
    10. '            ' → logprob: -14.62916374206543

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017031522002071142
    2. '=' → logprob: -6.376703262329102
    3. ' +=' → logprob: -14.626703262329102
    4. ' ' → logprob: -14.876703262329102
    5. ' =)' → logprob: -16.1267032623291
    6. '<|end|>' → logprob: -17.8767032623291
    7. ',' → logprob: -18.5017032623291
    8. ' =
' → logprob: -18.6267032623291
    9. ' >' → logprob: -19.0017032623291
    10. '+=' → logprob: -19.2517032623291

Token 115: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.0059289163909852505
    2. 'res' → logprob: -5.130928993225098
    3. ' ans' → logprob: -16.25592803955078
    4. ' ' → logprob: -16.50592803955078
    5. ' ' → logprob: -16.63092803955078
    6. '	res' → logprob: -17.38092803955078
    7. '(res' → logprob: -17.50592803955078
    8. ' re' → logprob: -18.50592803955078
    9. '$res' → logprob: -18.63092803955078
    10. '```' → logprob: -18.88092803955078

Token 116: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28184717893600464
    2. '<|end|>' → logprob: -1.9068472385406494
    3. '\n' → logprob: -3.0318472385406494
    4. ' ' → logprob: -4.03184700012207
    5. ' print' → logprob: -5.03184700012207
    6. ')' → logprob: -5.03184700012207
    7. '
' → logprob: -5.28184700012207
    8. '+' → logprob: -5.40684700012207
    9. '```' → logprob: -6.53184700012207
    10. '   ' → logprob: -7.03184700012207

Token 117: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5056080222129822
    2. '
' → logprob: -2.005608081817627
    3. 'print' → logprob: -2.130608081817627
    4. '<|end|>' → logprob: -2.130608081817627
    5. '+' → logprob: -5.005608081817627
    6. ' ' → logprob: -5.130608081817627
    7. ')' → logprob: -5.505608081817627
    8. ' 
' → logprob: -6.380608081817627
    9. '```' → logprob: -6.505608081817627
    10. '\' → logprob: -7.380608081817627

Token 118: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.32673880457878113
    2. ' -=' → logprob: -1.3267388343811035
    3. '-' → logprob: -4.3267388343811035
    4. '=' → logprob: -9.076738357543945
    5. ' -' → logprob: -10.326738357543945
    6. ' ' → logprob: -11.201738357543945
    7. '+=' → logprob: -11.951738357543945
    8. '   ' → logprob: -12.701738357543945
    9. '  ' → logprob: -13.576738357543945
    10. ' =' → logprob: -13.951738357543945

Token 120: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23229625821113586
    2. '1' → logprob: -1.6072962284088135
    3. ' d' → logprob: -5.232296466827393
    4. ' ' → logprob: -7.107296466827393
    5. '2' → logprob: -7.357296466827393
    6. 'q' → logprob: -10.732295989990234
    7. '   ' → logprob: -11.107295989990234
    8. '4' → logprob: -12.482295989990234
    9. '	d' → logprob: -12.857295989990234
    10. '10' → logprob: -13.357295989990234

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008621077984571457
    2. '(' → logprob: -4.7586212158203125
    3. '()' → logprob: -12.508621215820312
    4. ' (' → logprob: -13.508621215820312
    5. '(
' → logprob: -14.508621215820312
    6. 'ans' → logprob: -14.883621215820312
    7. '(answer' → logprob: -15.133621215820312
    8. '(a' → logprob: -16.383621215820312
    9. '('' → logprob: -16.633621215820312
    10. '(`' → logprob: -16.758621215820312

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. '+' → logprob: -12.625006675720215
    3. ')
' → logprob: -13.250006675720215
    4. ' )' → logprob: -14.625006675720215
    5. '))' → logprob: -14.750006675720215
    6. ')`' → logprob: -14.875006675720215
    7. '+)' → logprob: -15.375006675720215
    8. '`)' → logprob: -16.50000762939453
    9. ')}' → logprob: -17.12500762939453
    10. '）' → logprob: -17.37500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 35.25%
Précision adaptée (1ère position): 36.07%
Précision (top 10): 72.13%
================================================================================
