================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Perso je préfère input directement, trop de lambda c'est pas clair
def my_input():
    return sys.stdin.readline().strip()

N = int(my_input())

# Les couleurs mais je mets tout à -1, ok
C = []
for a in my_input().split():
    C.append(int(a) - 1)

# X c'est le graphe
X = []
for _ in range(N):
    X.append([])

for i in range(N-1):
    # Attention x,y sont 1-indexés
    x, y = my_input().split()
    x = int(x) - 1
    y = int(y) - 1
    X[x].append(y)
    X[y].append(x)

def EulerTour(n, X, i0):
    def f(k):
        return k * (k + 1) // 2
    USED = [0] * n
    ORG = [0]*n
    TMP = []
    for _ in range(n):
        TMP.append(0)

    P = [-1 for _ in range(n)]
    Q = [~i0, i0]
    ct = -1
    ET1 = [0]*n
    ET2 = [0]*n
    ANS = []
    for _ in range(n):
        ANS.append(f(n))

    while Q:
        i = Q.pop()
        if i < 0:
            j = ~i
            ET2[j] = ct
            USED[C[j]] += 1 + TMP[j]
            if j > 0:
                p = P[j]
                k = ET2[j] - ET1[j] + 1 - USED[C[p]] + ORG[j]
                ANS[C[p]] -= f(k)
                TMP[p] += k
            continue
        if i >= 0:
            if i > 0:
                ORG[i] = USED[C[P[i]]]
            ct += 1
            if not ET1[i]:  # 0 == False mais c'est plus clair comme ça
                ET1[i] = ct
            # c'est peut-être pas optimal de faire ça ici
        # On renverse pour un parcours profond mais c’est pas obligé
        for a in reversed(X[i]):
            if a != P[i]:
                P[a] = i
                # C’est sale de modifier la liste en cours mais bon…
                for k in range(len(X[a])):
                    if X[a][k] == i:
                        del X[a][k]
                        break
                Q.append(~a)
                Q.append(a)

    for i in range(n):
        ANS[i] -= f(n - USED[i])
    return ANS

results = EulerTour(N, X, 0)
for val in results:
    print(val)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Pers' (ID: 23032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24100935459136963
    2. ' This' → logprob: -2.86600923538208
    3. ' The' → logprob: -3.74100923538208
    4. ' argparse' → logprob: -3.99100923538208
    5. ' is' → logprob: -4.61600923538208
    6. 'def' → logprob: -4.61600923538208
    7. ' argv' → logprob: -4.86600923538208
    8. ' def' → logprob: -4.99100923538208
    9. 'argv' → logprob: -4.99100923538208
    10. 'This' → logprob: -4.99100923538208

Token 5: 'o' (ID: 78)
  Prédit: 'onal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onal' → logprob: -0.10207648575305939
    2. 'on' → logprob: -2.352076530456543
    3. 'pective' → logprob: -6.602076530456543
    4. 'o' → logprob: -8.352076530456543
    5. 'istence' → logprob: -9.102076530456543
    6. 'on's' → logprob: -9.977076530456543
    7. 'ona' → logprob: -10.977076530456543
    8. 'onn' → logprob: -11.102076530456543
    9. 'pectives' → logprob: -11.102076530456543
    10. 'ons' → logprob: -11.227076530456543

Token 6: ' je' (ID: 1264)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -0.1604226529598236
    2. 'n' → logprob: -1.910422682762146
    3. 'na' → logprob: -9.285422325134277
    4. 'nale' → logprob: -10.410422325134277
    5. '#' → logprob: -11.035422325134277
    6. 'ns' → logprob: -11.535422325134277
    7. ' nal' → logprob: -11.910422325134277
    8. '```' → logprob: -11.910422325134277
    9. 'nable' → logprob: -11.910422325134277
    10. 'nt' → logprob: -12.410422325134277

Token 7: ' préfère' (ID: 141784)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7386638522148132
    2. 'rs' → logprob: -1.363663911819458
    3. 'r' → logprob: -1.988663911819458
    4. 'ns' → logprob: -3.113663911819458
    5. '```' → logprob: -3.738663911819458
    6. 'rv' → logprob: -4.488663673400879
    7. 'nt' → logprob: -4.863663673400879
    8. 'urs' → logprob: -4.863663673400879
    9. 'ux' → logprob: -4.988663673400879
    10. 's' → logprob: -5.238663673400879

Token 8: ' input' (ID: 3422)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1474748849868774
    2. ''' → logprob: -1.6474748849868774
    3. '_' → logprob: -1.7724748849868774
    4. ' ' → logprob: -1.7724748849868774
    5. ',' → logprob: -3.397474765777588
    6. '=' → logprob: -4.147474765777588
    7. 'import' → logprob: -4.647474765777588
    8. ':' → logprob: -5.022474765777588
    9. ' de' → logprob: -5.022474765777588
    10. ' .' → logprob: -5.022474765777588

Token 9: ' directement' (ID: 52317)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25278666615486145
    2. '.' → logprob: -1.752786636352539
    3. '_' → logprob: -3.752786636352539
    4. '()' → logprob: -4.627786636352539
    5. ' (' → logprob: -6.002786636352539
    6. 's' → logprob: -6.252786636352539
    7. ',' → logprob: -6.252786636352539
    8. ''' → logprob: -6.627786636352539
    9. ':' → logprob: -6.752786636352539
    10. '=' → logprob: -6.752786636352539

Token 10: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8419674634933472
    2. '(' → logprob: -0.9669674634933472
    3. '=' → logprob: -2.8419675827026367
    4. ',' → logprob: -2.9669675827026367
    5. '()' → logprob: -3.9669675827026367
    6. ':' → logprob: -4.091967582702637
    7. ' =' → logprob: -4.341967582702637
    8. ' ' → logprob: -5.091967582702637
    9. '_' → logprob: -5.091967582702637
    10. '\' → logprob: -5.091967582702637

Token 11: ' trop' (ID: 14765)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4125547409057617
    2. '=' → logprob: -1.7875547409057617
    3. ',' → logprob: -1.7875547409057617
    4. '(' → logprob: -2.0375547409057617
    5. ' =' → logprob: -2.6625547409057617
    6. '()' → logprob: -2.7875547409057617
    7. ' ' → logprob: -3.1625547409057617
    8. '#' → logprob: -3.2875547409057617
    9. ' mais' → logprob: -4.662554740905762
    10. '_' → logprob: -4.787554740905762

Token 12: ' de' (ID: 334)
  Prédit: ' long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.12212218344211578
    2. ' fast' → logprob: -3.497122287750244
    3. ' verbose' → logprob: -3.747122287750244
    4. 'long' → logprob: -4.747122287750244
    5. ' compliqué' → logprob: -4.997122287750244
    6. ' simple' → logprob: -5.122122287750244
    7. ' complexe' → logprob: -5.372122287750244
    8. ' de' → logprob: -5.497122287750244
    9. 'd' → logprob: -5.622122287750244
    10. ' lourd' → logprob: -5.747122287750244

Token 13: ' lambda' (ID: 27871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8960303068161011
    2. 'l' → logprob: -1.771030306816101
    3. '\n' → logprob: -2.1460304260253906
    4. ' lignes' → logprob: -3.7710304260253906
    5. '```' → logprob: -4.021030426025391
    6. ' code' → logprob: -4.021030426025391
    7. 'n' → logprob: -4.146030426025391
    8. ' ' → logprob: -4.396030426025391
    9. 'r' → logprob: -4.583530426025391
    10. ' ' → logprob: -4.646030426025391

Token 14: ' c' (ID: 274)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4302160441875458
    2. '\' → logprob: -1.8052160739898682
    3. '(' → logprob: -2.430216073989868
    4. '_' → logprob: -3.430216073989868
    5. ')' → logprob: -4.055215835571289
    6. ' ' → logprob: -4.680215835571289
    7. ',' → logprob: -4.805215835571289
    8. '#' → logprob: -5.430215835571289
    9. '=' → logprob: -5.430215835571289
    10. ':' → logprob: -5.555215835571289

Token 15: ''est' (ID: 6616)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5147411823272705
    2. 'o' → logprob: -2.2647411823272705
    3. ',' → logprob: -2.3897411823272705
    4. '=' → logprob: -2.5147411823272705
    5. ')' → logprob: -2.6397411823272705
    6. '#' → logprob: -2.6397411823272705
    7. ''' → logprob: -2.8897411823272705
    8. '`' → logprob: -3.3897411823272705
    9. ' =' → logprob: -3.5147411823272705
    10. ':' → logprob: -3.7647411823272705

Token 16: ' pas' (ID: 2173)
  Prédit: ' chi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chi' → logprob: -1.0372501611709595
    2. 'chi' → logprob: -1.9122501611709595
    3. 'com' → logprob: -2.66225004196167
    4. ' compliqué' → logprob: -3.03725004196167
    5. ' pén' → logprob: -3.16225004196167
    6. ' lourd' → logprob: -3.28725004196167
    7. 'moins' → logprob: -3.91225004196167
    8. 'pas' → logprob: -3.91225004196167
    9. 'g' → logprob: -3.91225004196167
    10. 'conf' → logprob: -4.28725004196167

Token 17: ' clair' (ID: 71396)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0416923761367798
    2. 'pr' → logprob: -2.4166922569274902
    3. 'user' → logprob: -3.2916922569274902
    4. 'bon' → logprob: -3.2916922569274902
    5. 'top' → logprob: -3.4166922569274902
    6. 'ou' → logprob: -3.4166922569274902
    7. 'lé' → logprob: -3.5416922569274902
    8. 'clair' → logprob: -3.5416922569274902
    9. 'f' → logprob: -3.7916922569274902
    10. 'very' → logprob: -3.7916922569274902

Token 18: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.244526982307434
    2. '(' → logprob: -1.994526982307434
    3. ' ' → logprob: -1.994526982307434
    4. '.' → logprob: -2.1195268630981445
    5. '_' → logprob: -2.2445268630981445
    6. ',' → logprob: -2.3695268630981445
    7. '\n' → logprob: -3.7445268630981445
    8. '=' → logprob: -3.9945268630981445
    9. 'input' → logprob: -4.3695268630981445
    10. ')' → logprob: -4.3695268630981445

Token 19: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9644244909286499
    2. '.' → logprob: -1.71442449092865
    3. ',' → logprob: -1.96442449092865
    4. ' ' → logprob: -2.2144246101379395
    5. '\n' → logprob: -2.7144246101379395
    6. 'import' → logprob: -4.2144246101379395
    7. 'input' → logprob: -4.2144246101379395
    8. '#' → logprob: -4.2144246101379395
    9. '
' → logprob: -4.4644246101379395
    10. ')' → logprob: -4.8394246101379395

Token 20: ' my' (ID: 922)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18892835080623627
    2. ' input' → logprob: -2.0639283657073975
    3. ' main' → logprob: -3.6889283657073975
    4. ' user' → logprob: -4.938928127288818
    5. ' my' → logprob: -5.938928127288818
    6. ' read' → logprob: -6.063928127288818
    7. ' parser' → logprob: -6.688928127288818
    8. ' parse' → logprob: -6.688928127288818
    9. ' get' → logprob: -7.563928127288818
    10. ' test' → logprob: -7.688928127288818

Token 21: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04789375886321068
    2. '_' → logprob: -3.547893762588501
    3. ' _' → logprob: -4.797893524169922
    4. '_function' → logprob: -5.172893524169922
    5. '_put' → logprob: -6.297893524169922
    6. '_func' → logprob: -6.797893524169922
    7. '_in' → logprob: -8.172893524169922
    8. '_print' → logprob: -8.547893524169922
    9. '_n' → logprob: -9.922893524169922
    10. 'input' → logprob: -10.172893524169922

Token 22: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013376446440815926
    2. '():' → logprob: -4.388376235961914
    3. ' (' → logprob: -7.888376235961914
    4. '_' → logprob: -8.763376235961914
    5. '()' → logprob: -9.013376235961914
    6. '(prompt' → logprob: -9.638376235961914
    7. ' ():' → logprob: -10.388376235961914
    8. '(input' → logprob: -11.138376235961914
    9. '(`' → logprob: -11.138376235961914
    10. '(
' → logprob: -11.388376235961914

Token 23: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.35549986362457275
    2. '   ' → logprob: -2.230499744415283
    3. 'return' → logprob: -2.230499744415283
    4. '()' → logprob: -2.980499744415283
    5. '(' → logprob: -3.980499744415283
    6. 'input' → logprob: -5.980499744415283
    7. ' ' → logprob: -6.230499744415283
    8. ' ()' → logprob: -6.230499744415283
    9. ' input' → logprob: -6.480499744415283
    10. '    ' → logprob: -6.855499744415283

Token 24: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019326699897646904
    2. 'try' → logprob: -4.394326686859131
    3. ' return' → logprob: -5.394326686859131
    4. '   ' → logprob: -6.394326686859131
    5. 'user' → logprob: -8.769327163696289
    6. 'value' → logprob: -8.769327163696289
    7. ' try' → logprob: -9.769327163696289
    8. 'line' → logprob: -9.894327163696289
    9. 'text' → logprob: -10.394327163696289
    10. 'input' → logprob: -10.394327163696289

Token 25: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23781564831733704
    2. 'input' → logprob: -1.6128156185150146
    3. ' sys' → logprob: -4.487815856933594
    4. 'sys' → logprob: -6.862815856933594
    5. ' ' → logprob: -10.487815856933594
    6. 'int' → logprob: -13.487815856933594
    7. '   ' → logprob: -13.862815856933594
    8. ' int' → logprob: -13.987815856933594
    9. '(input' → logprob: -14.112815856933594
    10. '_input' → logprob: -14.362815856933594

Token 26: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.019079243764281273
    2. '.' → logprob: -4.019079208374023
    3. '.stdout' → logprob: -7.269079208374023
    4. '.argv' → logprob: -8.644079208374023
    5. '.std' → logprob: -10.269079208374023
    6. ' .' → logprob: -11.769079208374023
    7. '.stderr' → logprob: -12.394079208374023
    8. '.input' → logprob: -12.519079208374023
    9. '.readline' → logprob: -12.769079208374023
    10. '.exit' → logprob: -13.644079208374023

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002454011235386133
    2. '.read' → logprob: -6.127453804016113
    3. '.' → logprob: -8.252453804016113
    4. '.readlines' → logprob: -11.877453804016113
    5. '.buffer' → logprob: -14.502453804016113
    6. 'read' → logprob: -15.377453804016113
    7. '.write' → logprob: -15.502453804016113
    8. ' readline' → logprob: -15.877453804016113
    9. '.Read' → logprob: -16.25245475769043
    10. ' .' → logprob: -16.62745475769043

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014227439649403095
    2. '().' → logprob: -4.264227390289307
    3. ' ()' → logprob: -10.639227867126465
    4. '()
' → logprob: -11.639227867126465
    5. '())' → logprob: -11.764227867126465
    6. '(' → logprob: -12.139227867126465
    7. '()\' → logprob: -12.264227867126465
    8. '()(' → logprob: -12.889227867126465
    9. '()]' → logprob: -13.514227867126465
    10. '()`' → logprob: -13.514227867126465

Token 29: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014163747429847717
    2. 'rstrip' → logprob: -4.264163970947266
    3. ' strip' → logprob: -16.014163970947266
    4. 'rst' → logprob: -16.389163970947266
    5. '_strip' → logprob: -17.139163970947266
    6. 'replace' → logprob: -18.889163970947266
    7. 'str' → logprob: -19.139163970947266
    8. '(strip' → logprob: -19.139163970947266
    9. '.rstrip' → logprob: -19.389163970947266
    10. '-strip' → logprob: -19.389163970947266

Token 30: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05498281866312027
    2. '(' → logprob: -2.929982900619507
    3. '()
' → logprob: -10.304983139038086
    4. '(
' → logprob: -10.554983139038086
    5. ' ()' → logprob: -11.679983139038086
    6. '()

' → logprob: -12.179983139038086
    7. '(

' → logprob: -12.304983139038086
    8. '()`' → logprob: -12.429983139038086
    9. '(\' → logprob: -12.804983139038086
    10. '()\' → logprob: -12.929983139038086

Token 31: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2424372285604477
    2. '\n' → logprob: -2.3674371242523193
    3. '

' → logprob: -2.6174371242523193
    4. '#' → logprob: -4.117437362670898
    5. '<|end|>' → logprob: -5.242437362670898
    6. 'def' → logprob: -5.367437362670898
    7. '\' → logprob: -5.617437362670898
    8. '```' → logprob: -5.867437362670898
    9. '(' → logprob: -5.992437362670898
    10. '  
' → logprob: -6.492437362670898

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10213957726955414
    2. '=' → logprob: -2.477139472961426
    3. ' ' → logprob: -4.727139472961426
    4. ')' → logprob: -6.852139472961426
    5. '<|end|>' → logprob: -6.852139472961426
    6. '.' → logprob: -7.477139472961426
    7. ',' → logprob: -7.852139472961426
    8. '  ' → logprob: -8.477139472961426
    9. ' )' → logprob: -8.477139472961426
    10. '=int' → logprob: -8.977139472961426

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31556499004364014
    2. ' my' → logprob: -1.9405649900436401
    3. 'int' → logprob: -2.1905651092529297
    4. 'my' → logprob: -4.56556510925293
    5. ' ' → logprob: -5.69056510925293
    6. '10' → logprob: -6.81556510925293
    7. '5' → logprob: -9.56556510925293
    8. ' input' → logprob: -9.94056510925293
    9. '20' → logprob: -10.06556510925293
    10. '0' → logprob: -10.19056510925293

Token 34: '(my' (ID: 23725)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6336279511451721
    2. '(my' → logprob: -0.8836279511451721
    3. '(input' → logprob: -2.8836278915405273
    4. 'my' → logprob: -9.508627891540527
    5. '()' → logprob: -11.133627891540527
    6. '(m' → logprob: -11.883627891540527
    7. '('' → logprob: -11.883627891540527
    8. '(
' → logprob: -12.258627891540527
    9. 'input' → logprob: -12.258627891540527
    10. '(sys' → logprob: -12.633627891540527

Token 35: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.726595241460018e-05
    2. '_' → logprob: -10.25003719329834
    3. '_in' → logprob: -14.37503719329834
    4. 'input' → logprob: -14.62503719329834
    5. '(input' → logprob: -15.37503719329834
    6. ' _' → logprob: -16.000038146972656
    7. '_INPUT' → logprob: -16.000038146972656
    8. '(_' → logprob: -16.125038146972656
    9. '_inputs' → logprob: -16.625038146972656
    10. '(' → logprob: -16.625038146972656

Token 36: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023290082812309265
    2. '()' → logprob: -3.7732901573181152
    3. ')' → logprob: -11.023289680480957
    4. '(' → logprob: -11.523289680480957
    5. '()))' → logprob: -11.773289680480957
    6. ' ())' → logprob: -12.023289680480957
    7. '())
' → logprob: -13.023289680480957
    8. '()
' → logprob: -14.148289680480957
    9. '();)' → logprob: -14.773289680480957
    10. '()]' → logprob: -15.023289680480957

Token 37: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0562481880187988
    2. ' ' → logprob: -1.9312481880187988
    3. '[' → logprob: -2.181248188018799
    4. ')' → logprob: -2.556248188018799
    5. 'a' → logprob: -2.931248188018799
    6. '
' → logprob: -3.181248188018799
    7. '#' → logprob: -3.306248188018799
    8. ' for' → logprob: -3.431248188018799
    9. '\n' → logprob: -3.431248188018799
    10. ' 
' → logprob: -3.681248188018799

Token 38: ' Les' (ID: 7029)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30316612124443054
    2. 'for' → logprob: -2.053166151046753
    3. ' for' → logprob: -3.178166151046753
    4. 'a' → logprob: -3.678166151046753
    5. 'd' → logprob: -4.178165912628174
    6. 'data' → logprob: -4.553165912628174
    7. 'f' → logprob: -5.428165912628174
    8. '[' → logprob: -5.553165912628174
    9. 's' → logprob: -5.553165912628174
    10. ')' → logprob: -5.553165912628174

Token 39: ' couleurs' (ID: 54001)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.24888119101524353
    2. ' items' → logprob: -3.8738811016082764
    3. ' lines' → logprob: -3.8738811016082764
    4. ' nombres' → logprob: -4.1238813400268555
    5. ' a' → logprob: -4.2488813400268555
    6. ' scores' → logprob: -4.3738813400268555
    7. ' numbers' → logprob: -4.3738813400268555
    8. 'data' → logprob: -4.6238813400268555
    9. ' notes' → logprob: -4.7488813400268555
    10. ' codes' → logprob: -4.7488813400268555

Token 40: ' mais' (ID: 2899)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020883090794086456
    2. '=' → logprob: -4.020883083343506
    3. 's' → logprob: -6.895883083343506
    4. '_colors' → logprob: -7.270883083343506
    5. ' ' → logprob: -8.020883560180664
    6. '_' → logprob: -8.645883560180664
    7. 'colors' → logprob: -9.020883560180664
    8. ':' → logprob: -9.520883560180664
    9. ',' → logprob: -9.895883560180664
    10. ')' → logprob: -10.020883560180664

Token 41: ' je' (ID: 1264)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.062709927558899
    2. 'pas' → logprob: -1.312709927558899
    3. '#' → logprob: -2.4377098083496094
    4. 'le' → logprob: -2.5627098083496094
    5. ' la' → logprob: -3.8127098083496094
    6. ' les' → logprob: -3.9377098083496094
    7. '...' → logprob: -4.062709808349609
    8. 'c' → logprob: -4.187709808349609
    9. 'sans' → logprob: -4.437709808349609
    10. 'les' → logprob: -4.687709808349609

Token 42: ' mets' (ID: 87155)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7714382410049438
    2. ' n' → logprob: -1.2714382410049438
    3. 's' → logprob: -1.8964382410049438
    4. 'm' → logprob: -4.271438121795654
    5. '#' → logprob: -4.521438121795654
    6. ' préfère' → logprob: -4.771438121795654
    7. ' m' → logprob: -5.396438121795654
    8. ' continue' → logprob: -5.521438121795654
    9. 'veux' → logprob: -5.521438121795654
    10. ' suis' → logprob: -5.521438121795654

Token 43: ' tout' (ID: 5501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8699830770492554
    2. '_' → logprob: -1.2449830770492554
    3. 'a' → logprob: -3.619983196258545
    4. '[]' → logprob: -3.619983196258545
    5. 'le' → logprob: -3.869983196258545
    6. 'les' → logprob: -4.369983196258545
    7. ' ' → logprob: -4.369983196258545
    8. 'la' → logprob: -4.494983196258545
    9. ' à' → logprob: -4.619983196258545
    10. 'au' → logprob: -4.619983196258545

Token 44: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27868279814720154
    2. '_colors' → logprob: -1.778682827949524
    3. ' =' → logprob: -3.7786827087402344
    4. '_' → logprob: -4.028682708740234
    5. 'colors' → logprob: -4.403682708740234
    6. 's' → logprob: -5.403682708740234
    7. '  ' → logprob: -5.653682708740234
    8. '_color' → logprob: -6.153682708740234
    9. ' colors' → logprob: -6.403682708740234
    10. ' _' → logprob: -6.528682708740234

Token 45: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5012627840042114
    2. 'jour' → logprob: -2.251262664794922
    3. '1' → logprob: -3.126262664794922
    4. ' jour' → logprob: -3.251262664794922
    5. 'None' → logprob: -3.501262664794922
    6. '-' → logprob: -3.876262664794922
    7. '[]' → logprob: -4.001262664794922
    8. 'l' → logprob: -4.126262664794922
    9. 'lower' → logprob: -4.126262664794922
    10. '```' → logprob: -4.251262664794922

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. ' ' → logprob: -10.750035285949707
    3. '-' → logprob: -11.750035285949707
    4. '```' → logprob: -13.125035285949707
    5. ' -' → logprob: -13.250035285949707
    6. '2' → logprob: -15.000035285949707
    7. '_' → logprob: -15.750035285949707
    8. '256' → logprob: -15.937535285949707
    9. 'inf' → logprob: -15.937535285949707
    10. '`' → logprob: -16.12503433227539

Token 47: ',' (ID: 11)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.28911134600639343
    2. '_colors' → logprob: -2.164111375808716
    3. 's' → logprob: -3.164111375808716
    4. ',' → logprob: -3.414111375808716
    5. 'color' → logprob: -4.164111137390137
    6. '_' → logprob: -4.289111137390137
    7. ' ' → logprob: -4.789111137390137
    8. ' colors' → logprob: -5.039111137390137
    9. ' couleurs' → logprob: -5.414111137390137
    10. 'c' → logprob: -5.914111137390137

Token 48: ' ok' (ID: 4763)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.4759613275527954
    2. ' colors' → logprob: -1.3509613275527954
    3. ' couleurs' → logprob: -2.725961208343506
    4. 'color' → logprob: -4.850961208343506
    5. 'cou' → logprob: -4.850961208343506
    6. ' color' → logprob: -4.850961208343506
    7. 'visited' → logprob: -5.350961208343506
    8. ' couleur' → logprob: -5.600961208343506
    9. 'c' → logprob: -5.975961208343506
    10. ' c' → logprob: -6.475961208343506

Token 49: '
' (ID: 198)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.04976224899292
    2. ',' → logprob: -1.17476224899292
    3. 's' → logprob: -1.67476224899292
    4. '?' → logprob: -2.92476224899292
    5. ' ' → logprob: -3.17476224899292
    6. '_colors' → logprob: -4.42476224899292
    7. 'color' → logprob: -4.67476224899292
    8. ' colors' → logprob: -5.17476224899292
    9. '```' → logprob: -5.54976224899292
    10. ' for' → logprob: -5.54976224899292

Token 50: 'C' (ID: 34)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.04895930364727974
    2. ' colors' → logprob: -3.923959255218506
    3. '_colors' → logprob: -4.173959255218506
    4. '
' → logprob: -5.423959255218506
    5. ' couleurs' → logprob: -5.798959255218506
    6. 'color' → logprob: -6.548959255218506
    7. 's' → logprob: -6.923959255218506
    8. ',' → logprob: -7.423959255218506
    9. 'c' → logprob: -7.548959255218506
    10. '_' → logprob: -8.173959732055664

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32333534955978394
    2. '=' → logprob: -1.3233354091644287
    3. 'ol' → logprob: -4.94833517074585
    4. 'olor' → logprob: -6.19833517074585
    5. '=[]' → logprob: -8.198335647583008
    6. 'ols' → logprob: -8.698335647583008
    7. '[:]' → logprob: -9.198335647583008
    8. '=[' → logprob: -9.198335647583008
    9. '[]' → logprob: -10.198335647583008
    10. ' ' → logprob: -10.448335647583008

Token 52: ' []
' (ID: 8911)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.474106103181839
    2. ' [-' → logprob: -0.9741060733795166
    3. '[' → logprob: -11.349105834960938
    4. ' ' → logprob: -11.599105834960938
    5. ' [' → logprob: -11.974105834960938
    6. '[]' → logprob: -14.599105834960938
    7. '-' → logprob: -14.599105834960938
    8. '[:]' → logprob: -15.099105834960938
    9. ' ' → logprob: -15.849105834960938
    10. '[:-' → logprob: -15.974105834960938

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01443954836577177
    2. ' for' → logprob: -4.264439582824707
    3. '
' → logprob: -8.264439582824707
    4. '[' → logprob: -12.139439582824707
    5. ' 
' → logprob: -13.014439582824707
    6. ' ' → logprob: -13.389439582824707
    7. 'f' → logprob: -13.389439582824707
    8. '_' → logprob: -13.389439582824707
    9. '<|end|>' → logprob: -13.764439582824707
    10. '

' → logprob: -14.264439582824707

Token 54: ' a' (ID: 261)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0637715607881546
    2. '_' → logprob: -2.8137714862823486
    3. ' i' → logprob: -6.438771724700928
    4. ' ' → logprob: -8.56377124786377
    5. ' ' → logprob: -11.81377124786377
    6. 'i' → logprob: -12.68877124786377
    7. '_i' → logprob: -13.06377124786377
    8. ' ‌' → logprob: -15.56377124786377
    9. ' in' → logprob: -16.813772201538086
    10. '  ' → logprob: -16.938772201538086

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007057403679937124
    2. 'in' → logprob: -5.507057189941406
    3. '_' → logprob: -6.382057189941406
    4. ' ' → logprob: -7.132057189941406
    5. 'range' → logprob: -8.882057189941406
    6. 'n' → logprob: -9.507057189941406
    7. '_in' → logprob: -10.007057189941406
    8. 's' → logprob: -10.382057189941406
    9. ' _' → logprob: -10.882057189941406
    10. ',' → logprob: -11.382057189941406

Token 56: ' my' (ID: 922)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016046686097979546
    2. ' range' → logprob: -4.141046524047852
    3. 'rang' → logprob: -12.516046524047852
    4. 'C' → logprob: -12.641046524047852
    5. 'ran' → logprob: -13.891046524047852
    6. 'r' → logprob: -13.891046524047852
    7. ' ' → logprob: -14.016046524047852
    8. 'ra' → logprob: -14.266046524047852
    9. 'input' → logprob: -14.641046524047852
    10. '	range' → logprob: -14.891046524047852

Token 57: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.17400407791137695
    2. '(' → logprob: -2.924004077911377
    3. '(C' → logprob: -3.674004077911377
    4. ':' → logprob: -3.674004077911377
    5. '(range' → logprob: -4.299004077911377
    6. 'range' → logprob: -5.049004077911377
    7. 'put' → logprob: -5.424004077911377
    8. ')' → logprob: -5.424004077911377
    9. '(_' → logprob: -5.549004077911377
    10. '():' → logprob: -5.799004077911377

Token 58: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10117439925670624
    2. '():' → logprob: -2.3511743545532227
    3. '().' → logprob: -7.976174354553223
    4. '(' → logprob: -7.976174354553223
    5. '())' → logprob: -8.351174354553223
    6. ' ()' → logprob: -11.476174354553223
    7. '():
' → logprob: -12.476174354553223
    8. '()`' → logprob: -12.601174354553223
    9. '()[' → logprob: -12.726174354553223
    10. '()"' → logprob: -12.851174354553223

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012725738633889705
    2. 'strip' → logprob: -9.000126838684082
    3. 'rstrip' → logprob: -13.375126838684082
    4. ' split' → logprob: -13.500126838684082
    5. 'spl' → logprob: -14.250126838684082
    6. 's' → logprob: -15.750126838684082
    7. 'sp' → logprob: -16.5001277923584
    8. '(split' → logprob: -17.6251277923584
    9. 'replace' → logprob: -18.2501277923584
    10. 'plit' → logprob: -18.7501277923584

Token 60: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.332630455493927
    2. '(' → logprob: -1.9576303958892822
    3. '('' → logprob: -1.9576303958892822
    4. '()]' → logprob: -8.457630157470703
    5. '("("' → logprob: -8.707630157470703
    6. '())' → logprob: -8.957630157470703
    7. '("' → logprob: -10.832630157470703
    8. '(',' → logprob: -11.332630157470703
    9. '(),' → logprob: -12.207630157470703
    10. '()?>' → logprob: -12.582630157470703

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6733579635620117
    2. ' C' → logprob: -1.0483579635620117
    3. 'C' → logprob: -2.5483579635620117
    4. ' ' → logprob: -3.2983579635620117
    5. '    
' → logprob: -4.798357963562012
    6. '-' → logprob: -4.923357963562012
    7. ' 
' → logprob: -5.798357963562012
    8. '	C' → logprob: -6.423357963562012
    9. ' -' → logprob: -6.798357963562012
    10. '  ' → logprob: -6.923357963562012

Token 62: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.027482930570840836
    2. ' C' → logprob: -3.6524829864501953
    3. '   ' → logprob: -6.777482986450195
    4. ' ' → logprob: -11.027482986450195
    5. '-' → logprob: -11.652482986450195
    6. '0' → logprob: -12.277482986450195
    7. '	C' → logprob: -12.277482986450195
    8. 'c' → logprob: -12.527482986450195
    9. '  ' → logprob: -13.777482986450195
    10. '    
' → logprob: -14.277482986450195

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003281929297372699
    2. '.' → logprob: -5.753282070159912
    3. '.app' → logprob: -10.253281593322754
    4. '.ap' → logprob: -10.253281593322754
    5. ' .' → logprob: -11.003281593322754
    6. '.extend' → logprob: -11.628281593322754
    7. '.py' → logprob: -12.128281593322754
    8. '.a' → logprob: -14.253281593322754
    9. 'append' → logprob: -14.628281593322754
    10. '​.' → logprob: -14.753281593322754

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5782747864723206
    2. '(-' → logprob: -0.8282747864723206
    3. '(' → logprob: -6.078274726867676
    4. 'int' → logprob: -10.703274726867676
    5. '-' → logprob: -11.453274726867676
    6. '(
' → logprob: -12.453274726867676
    7. '(i' → logprob: -13.953274726867676
    8. '((' → logprob: -14.828274726867676
    9. '(s' → logprob: -14.953274726867676
    10. '(in' → logprob: -15.328274726867676

Token 65: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16043341159820557
    2. '(' → logprob: -1.9104334115982056
    3. '()' → logprob: -9.035433769226074
    4. '(-' → logprob: -10.285433769226074
    5. ')(' → logprob: -10.910433769226074
    6. '('' → logprob: -11.910433769226074
    7. '(
' → logprob: -12.410433769226074
    8. '((' → logprob: -12.535433769226074
    9. ')' → logprob: -12.535433769226074
    10. '("("' → logprob: -12.535433769226074

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31482627987861633
    2. '))' → logprob: -1.314826250076294
    3. ')-' → logprob: -6.689826488494873
    4. '-' → logprob: -8.439826011657715
    5. ' )' → logprob: -10.564826011657715
    6. '-)' → logprob: -10.939826011657715
    7. ' ))' → logprob: -11.064826011657715
    8. ')))' → logprob: -11.064826011657715
    9. ' -' → logprob: -11.564826011657715
    10. '),' → logprob: -12.439826011657715

Token 67: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021064257249236107
    2. '))' → logprob: -3.896064281463623
    3. '-' → logprob: -7.896064281463623
    4. '-)' → logprob: -9.646063804626465
    5. ' )' → logprob: -10.021063804626465
    6. ' -' → logprob: -10.771063804626465
    7. ')))' → logprob: -11.396063804626465
    8. ')
' → logprob: -13.521063804626465
    9. ' ))' → logprob: -13.771063804626465
    10. ')-' → logprob: -13.771063804626465

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.250158309936523
    4. '<|end|>' → logprob: -18.250158309936523
    5. '0' → logprob: -19.000158309936523
    6. '１' → logprob: -19.125158309936523
    7. '```' → logprob: -19.250158309936523
    8. '`' → logprob: -19.500158309936523
    9. '  ' → logprob: -19.875158309936523
    10. '' → logprob: -20.500158309936523

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '0' → logprob: -18.875009536743164
    4. '2' → logprob: -19.000009536743164
    5. '１' → logprob: -19.625009536743164
    6. '```' → logprob: -19.875009536743164
    7. '   ' → logprob: -20.125009536743164
    8. '<|end|>' → logprob: -20.312509536743164
    9. '`' → logprob: -20.375009536743164
    10. '-' → logprob: -20.687509536743164

Token 70: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.250005722045898
    4. '))' → logprob: -16.8750057220459
    5. ')`' → logprob: -18.5000057220459
    6. ')a' → logprob: -18.8750057220459
    7. ')#' → logprob: -19.0000057220459
    8. ')return' → logprob: -19.2500057220459
    9. ')
' → logprob: -19.2500057220459
    10. ')

' → logprob: -19.3750057220459

Token 71: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5250000953674316
    2. '#' → logprob: -1.6500000953674316
    3. '<|end|>' → logprob: -2.4000000953674316
    4. ' for' → logprob: -3.2750000953674316
    5. ')' → logprob: -3.6500000953674316
    6. 'for' → logprob: -4.025000095367432
    7. ' #' → logprob: -5.150000095367432
    8. 'colors' → logprob: -5.150000095367432
    9. ' 
' → logprob: -5.525000095367432
    10. ' colors' → logprob: -5.650000095367432

Token 73: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027771329507231712
    2. '=' → logprob: -3.777771234512329
    3. ',' → logprob: -5.777771472930908
    4. '.' → logprob: -7.902771472930908
    5. ')' → logprob: -8.27777099609375
    6. '=[]' → logprob: -8.77777099609375
    7. '[' → logprob: -9.02777099609375
    8. '_' → logprob: -9.52777099609375
    9. 's' → logprob: -9.52777099609375
    10. 'X' → logprob: -10.15277099609375

Token 74: ''est' (ID: 6616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5480034947395325
    2. '=' → logprob: -0.9230034947395325
    3. '=[]' → logprob: -4.423003673553467
    4. 'ont' → logprob: -5.298003673553467
    5. 'ount' → logprob: -6.048003673553467
    6. ',' → logprob: -6.798003673553467
    7. 'urrent' → logprob: -7.423003673553467
    8. '_' → logprob: -7.798003673553467
    9. 'olor' → logprob: -7.923003673553467
    10. ' ' → logprob: -8.298003196716309

Token 75: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2318426370620728
    2. 'le' → logprob: -1.3568426370620728
    3. ' le' → logprob: -1.3568426370620728
    4. '[]' → logprob: -3.356842517852783
    5. ' un' → logprob: -3.356842517852783
    6. 'la' → logprob: -3.731842517852783
    7. '...' → logprob: -4.356842517852783
    8. 'the' → logprob: -4.356842517852783
    9. 'l' → logprob: -4.731842517852783
    10. ' l' → logprob: -4.856842517852783

Token 76: ' grap' (ID: 60955)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.40862444043159485
    2. 'nombre' → logprob: -1.2836244106292725
    3. 's' → logprob: -5.533624649047852
    4. 'nb' → logprob: -5.533624649047852
    5. ' tableau' → logprob: -5.658624649047852
    6. ' code' → logprob: -5.908624649047852
    7. ' maximum' → logprob: -6.158624649047852
    8. 'maximum' → logprob: -6.158624649047852
    9. ' nb' → logprob: -6.283624649047852
    10. 'max' → logprob: -6.283624649047852

Token 77: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.057625800371170044
    2. 'h' → logprob: -3.4326257705688477
    3. 'he' → logprob: -4.057625770568848
    4. 'aph' → logprob: -5.682625770568848
    5. 'a' → logprob: -6.682625770568848
    6. 'phe' → logprob: -7.557625770568848
    7. '#' → logprob: -8.182625770568848
    8. 'ah' → logprob: -8.557625770568848
    9. 'ph' → logprob: -9.182625770568848
    10. 'heme' → logprob: -9.432625770568848

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07746432721614838
    2. ' X' → logprob: -2.7024643421173096
    3. 'G' → logprob: -5.7024641036987305
    4. ' graph' → logprob: -6.7024641036987305
    5. ' G' → logprob: -6.8274641036987305
    6. ' ' → logprob: -8.20246410369873
    7. '
' → logprob: -8.20246410369873
    8. ' 
' → logprob: -8.45246410369873
    9. ' =' → logprob: -8.70246410369873
    10. '<|end|>' → logprob: -8.70246410369873

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255532294511795
    2. '=' → logprob: -1.600553274154663
    3. '[' → logprob: -10.100553512573242
    4. '=[]' → logprob: -10.225553512573242
    5. ',' → logprob: -10.850553512573242
    6. '[]' → logprob: -11.225553512573242
    7. ' ' → logprob: -11.975553512573242
    8. 's' → logprob: -12.350553512573242
    9. '[:]' → logprob: -12.350553512573242
    10. '_' → logprob: -12.725553512573242

Token 81: ' []
' (ID: 8911)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.0971793606877327
    2. '[' → logprob: -3.097179412841797
    3. '[]' → logprob: -4.097179412841797
    4. ' []' → logprob: -4.097179412841797
    5. '{}' → logprob: -4.972179412841797
    6. ' {}' → logprob: -5.597179412841797
    7. ' [' → logprob: -5.722179412841797
    8. ' [{}' → logprob: -8.347179412841797
    9. ' defaultdict' → logprob: -10.347179412841797
    10. ' ' → logprob: -13.097179412841797

Token 82: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0076570347882807255
    2. ' for' → logprob: -4.882657051086426
    3. '[' → logprob: -10.632657051086426
    4. '[]' → logprob: -11.007657051086426
    5. '
' → logprob: -12.382657051086426
    6. '[]
' → logprob: -13.382657051086426
    7. '<|end|>' → logprob: -14.007657051086426
    8. '[
' → logprob: -14.632657051086426
    9. ' 
' → logprob: -14.882657051086426
    10. '_' → logprob: -15.007657051086426

Token 83: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004393559880554676
    2. ' _' → logprob: -5.504393577575684
    3. '_i' → logprob: -8.754393577575684
    4. ' i' → logprob: -8.879393577575684
    5. ' ' → logprob: -11.379393577575684
    6. 'i' → logprob: -12.004393577575684
    7. ' in' → logprob: -15.754393577575684
    8. ' ' → logprob: -15.754393577575684
    9. '_a' → logprob: -16.879392623901367
    10. '  ' → logprob: -17.504392623901367

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010585333220660686
    2. 'in' → logprob: -7.001058578491211
    3. ' ' → logprob: -9.001058578491211
    4. ' i' → logprob: -11.751058578491211
    5. 'i' → logprob: -12.001058578491211
    6. ' _' → logprob: -12.751058578491211
    7. 'range' → logprob: -13.001058578491211
    8. '  ' → logprob: -14.376058578491211
    9. 'a' → logprob: -14.626058578491211
    10. 'n' → logprob: -14.626058578491211

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029887596145272255
    2. ' range' → logprob: -3.5298876762390137
    3. ' ' → logprob: -11.029887199401855
    4. '(range' → logprob: -11.279887199401855
    5. 'input' → logprob: -11.279887199401855
    6. 'my' → logprob: -11.529887199401855
    7. '	range' → logprob: -11.529887199401855
    8. '  ' → logprob: -11.654887199401855
    9. 'C' → logprob: -11.654887199401855
    10. 'ange' → logprob: -11.904887199401855

Token 86: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001617035741219297
    2. '(' → logprob: -8.750162124633789
    3. '(n' → logprob: -13.625162124633789
    4. 'N' → logprob: -13.750162124633789
    5. '(
' → logprob: -15.125162124633789
    6. '(int' → logprob: -15.625162124633789
    7. ' (' → logprob: -15.625162124633789
    8. '(M' → logprob: -16.50016212463379
    9. ')' → logprob: -17.25016212463379
    10. ' ' → logprob: -17.37516212463379

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015325936255976558
    2. '):
' → logprob: -7.001532554626465
    3. ')' → logprob: -7.501532554626465
    4. ' ):' → logprob: -9.751532554626465
    5. '):
' → logprob: -12.126532554626465
    6. ':' → logprob: -13.376532554626465
    7. ' ' → logprob: -14.251532554626465
    8. '():' → logprob: -14.501532554626465
    9. '   ' → logprob: -14.751532554626465
    10. '+' → logprob: -14.876532554626465

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09333343058824539
    2. ' X' → logprob: -2.4683334827423096
    3. 'X' → logprob: -5.5933332443237305
    4. '	X' → logprob: -7.8433332443237305
    5. '    
' → logprob: -9.59333324432373
    6. ' ' → logprob: -9.96833324432373
    7. '  ' → logprob: -10.09333324432373
    8. '    ' → logprob: -10.46833324432373
    9. '   ' → logprob: -10.71833324432373
    10. ' x' → logprob: -11.96833324432373

Token 89: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.06210627406835556
    2. ' X' → logprob: -3.0621063709259033
    3. '   ' → logprob: -4.687106132507324
    4. 'x' → logprob: -5.812106132507324
    5. 'a' → logprob: -8.312106132507324
    6. 'u' → logprob: -8.687106132507324
    7. 'l' → logprob: -9.187106132507324
    8. 'v' → logprob: -9.312106132507324
    9. ' x' → logprob: -9.437106132507324
    10. ' ' → logprob: -9.437106132507324

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004638980142772198
    2. '.' → logprob: -5.379639148712158
    3. ' .' → logprob: -11.254638671875
    4. '.app' → logprob: -12.504638671875
    5. 'append' → logprob: -14.129638671875
    6. '.ap' → logprob: -14.504638671875
    7. ',' → logprob: -15.504638671875
    8. '.extend' → logprob: -15.629638671875
    9. '.a' → logprob: -16.254638671875
    10. ' +=' → logprob: -16.254638671875

Token 91: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.00836823508143425
    2. '([' → logprob: -5.008368015289307
    3. '(list' → logprob: -6.508368015289307
    4. '(' → logprob: -8.883368492126465
    5. '([])
' → logprob: -11.008368492126465
    6. '[]' → logprob: -13.508368492126465
    7. '((' → logprob: -13.758368492126465
    8. '({' → logprob: -14.883368492126465
    9. ' ([]' → logprob: -14.883368492126465
    10. 'list' → logprob: -14.883368492126465

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.833878508885391e-05
    2. ' )' → logprob: -10.375038146972656
    3. ')
' → logprob: -12.000038146972656
    4. ')

' → logprob: -14.750038146972656
    5. '))' → logprob: -16.000038146972656
    6. ' ' → logprob: -16.625038146972656
    7. '())' → logprob: -17.000038146972656
    8. ')
' → logprob: -17.000038146972656
    9. '   ' → logprob: -17.750038146972656
    10. ')#' → logprob: -17.875038146972656

Token 93: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10754299908876419
    2. '_' → logprob: -2.7325429916381836
    3. ' range' → logprob: -3.6075429916381836
    4. ' ' → logprob: -4.732542991638184
    5. ' i' → logprob: -7.482542991638184
    6. 'range' → logprob: -7.982542991638184
    7. '_range' → logprob: -10.607542991638184
    8. ' ▁' → logprob: -11.232542991638184
    9. 'i' → logprob: -11.982542991638184
    10. ' xrange' → logprob: -11.982542991638184

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026833945885300636
    2. 'in' → logprob: -3.651834011077881
    3. ' ' → logprob: -7.651834011077881
    4. '_' → logprob: -10.526833534240723
    5. 'range' → logprob: -12.026833534240723
    6. ',' → logprob: -12.151833534240723
    7. '  ' → logprob: -12.151833534240723
    8. 'n' → logprob: -12.901833534240723
    9. ' _' → logprob: -13.151833534240723
    10. '_in' → logprob: -13.651833534240723

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048588961362838745
    2. ' range' → logprob: -3.048588991165161
    3. ' ' → logprob: -14.548588752746582
    4. '	range' → logprob: -15.048588752746582
    5. 'rang' → logprob: -15.298588752746582
    6. '  ' → logprob: -16.1735897064209
    7. '(range' → logprob: -16.2985897064209
    8. '```' → logprob: -16.4235897064209
    9. ' xrange' → logprob: -16.5485897064209
    10. '   ' → logprob: -16.5485897064209

Token 97: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0141762038692832
    2. '(' → logprob: -4.264176368713379
    3. '(n' → logprob: -11.889176368713379
    4. ' (' → logprob: -12.639176368713379
    5. '(
' → logprob: -13.389176368713379
    6. '(len' → logprob: -14.889176368713379
    7. '(int' → logprob: -16.139175415039062
    8. '(M' → logprob: -16.264175415039062
    9. '(

' → logprob: -16.389175415039062
    10. 'N' → logprob: -16.639175415039062

Token 98: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20569546520709991
    2. '):
' → logprob: -1.9556955099105835
    3. '-' → logprob: -3.205695390701294
    4. ' -' → logprob: -5.955695629119873
    5. '):
' → logprob: -7.455695629119873
    6. ')' → logprob: -7.830695629119873
    7. '+' → logprob: -8.955695152282715
    8. '   ' → logprob: -9.330695152282715
    9. ' ):' → logprob: -9.580695152282715
    10. ' ' → logprob: -10.205695152282715

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011200665176147595
    2. ' ' → logprob: -9.12511157989502
    3. ')' → logprob: -13.75011157989502
    4. '   ' → logprob: -14.25011157989502
    5. '-' → logprob: -15.06261157989502
    6. '2' → logprob: -15.06261157989502
    7. '```' → logprob: -15.56261157989502
    8. '  ' → logprob: -15.93761157989502
    9. '１' → logprob: -16.562612533569336
    10. '১' → logprob: -16.937612533569336

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006627504713833332
    2. ' ):' → logprob: -5.256627559661865
    3. '):
' → logprob: -7.256627559661865
    4. ')' → logprob: -7.381627559661865
    5. ':' → logprob: -10.506627082824707
    6. '):
' → logprob: -10.881627082824707
    7. ' )' → logprob: -11.631627082824707
    8. ' ):
' → logprob: -12.381627082824707
    9. ',' → logprob: -13.131627082824707
    10. '   ' → logprob: -14.131627082824707

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8065243363380432
    2. ' u' → logprob: -0.9315243363380432
    3. 'a' → logprob: -2.9315242767333984
    4. 'u' → logprob: -2.9315242767333984
    5. ' line' → logprob: -3.5565242767333984
    6. ' a' → logprob: -4.181524276733398
    7. '    
' → logprob: -6.181524276733398
    8. '	u' → logprob: -6.556524276733398
    9. ',u' → logprob: -7.181524276733398
    10. ' from' → logprob: -7.681524276733398

Token 102: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28808993101119995
    2. 'a' → logprob: -1.4130899906158447
    3. ' u' → logprob: -5.288089752197266
    4. ' a' → logprob: -7.538089752197266
    5. 'A' → logprob: -7.788089752197266
    6. '   ' → logprob: -7.913089752197266
    7. 'v' → logprob: -9.038089752197266
    8. 'x' → logprob: -9.038089752197266
    9. 'p' → logprob: -9.288089752197266
    10. 's' → logprob: -9.788089752197266

Token 103: ' Attention' (ID: 81932)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18420493602752686
    2. 'a' → logprob: -1.9342049360275269
    3. ' u' → logprob: -4.309205055236816
    4. 'A' → logprob: -6.059205055236816
    5. 'v' → logprob: -6.184205055236816
    6. 'x' → logprob: -6.309205055236816
    7. 'p' → logprob: -6.934205055236816
    8. ' a' → logprob: -7.059205055236816
    9. 's' → logprob: -7.684205055236816
    10. 'f' → logprob: -7.934205055236816

Token 104: ' x' (ID: 1215)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.15785285830497742
    2. '   ' → logprob: -2.9078528881073
    3. ' a' → logprob: -3.1578528881073
    4. 'u' → logprob: -3.2828528881073
    5. 'a' → logprob: -4.782852649688721
    6. ' line' → logprob: -7.032852649688721
    7. ',' → logprob: -7.907852649688721
    8. ' U' → logprob: -8.407853126525879
    9. ',u' → logprob: -8.407853126525879
    10. ' A' → logprob: -8.657853126525879

Token 105: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07023818045854568
    2. ',y' → logprob: -3.5702381134033203
    3. ' ,' → logprob: -3.9452381134033203
    4. '1' → logprob: -4.32023811340332
    5. '_,' → logprob: -5.69523811340332
    6. 'y' → logprob: -6.69523811340332
    7. ' =' → logprob: -6.82023811340332
    8. 's' → logprob: -8.32023811340332
    9. '_y' → logprob: -8.69523811340332
    10. 'Y' → logprob: -9.19523811340332

Token 106: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11235031485557556
    2. ',' → logprob: -2.3623502254486084
    3. '=' → logprob: -4.8623504638671875
    4. ' ,' → logprob: -5.4873504638671875
    5. ',x' → logprob: -9.362350463867188
    6. ' ' → logprob: -9.612350463867188
    7. ',y' → logprob: -11.112350463867188
    8. '=input' → logprob: -12.112350463867188
    9. 'x' → logprob: -12.237350463867188
    10. ' x' → logprob: -12.487350463867188

Token 107: ' ' (ID: 220)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06402496248483658
    2. 'map' → logprob: -3.3140249252319336
    3. ' =' → logprob: -4.064024925231934
    4. ' ' → logprob: -5.564024925231934
    5. '=' → logprob: -6.314024925231934
    6. ' list' → logprob: -7.564024925231934
    7. '  ' → logprob: -7.564024925231934
    8. ' [' → logprob: -8.189024925231934
    9. '   ' → logprob: -8.564024925231934
    10. '	map' → logprob: -8.564024925231934

Token 108: '1' (ID: 16)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12144186347723007
    2. ' map' → logprob: -2.2464418411254883
    3. 'list' → logprob: -5.371441841125488
    4. '[' → logprob: -5.996441841125488
    5. ' [' → logprob: -7.371441841125488
    6. ' list' → logprob: -8.246441841125488
    7. ' ' → logprob: -9.246441841125488
    8. '=' → logprob: -9.746441841125488
    9. '	map' → logprob: -9.996441841125488
    10. ' =' → logprob: -10.121441841125488

Token 109: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.07240671664476395
    2. ' -' → logprob: -3.572406768798828
    3. 'based' → logprob: -3.572406768798828
    4. '-index' → logprob: -4.572406768798828
    5. '-' → logprob: -6.322406768798828
    6. ' based' → logprob: -7.947406768798828
    7. 'indexed' → logprob: -8.072406768798828
    8. '-base' → logprob: -8.197406768798828
    9. ']-' → logprob: -8.822406768798828
    10. ')-' → logprob: -9.072406768798828

Token 110: 'és' (ID: 1756)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22750262916088104
    2. ' ,' → logprob: -1.9775025844573975
    3. 'ed' → logprob: -3.3525025844573975
    4. 's' → logprob: -4.102502822875977
    5. ' ' → logprob: -5.477502822875977
    6. '_,' → logprob: -5.977502822875977
    7. '   ' → logprob: -6.602502822875977
    8. 'd' → logprob: -6.852502822875977
    9. ' x' → logprob: -6.977502822875977
    10. ' =' → logprob: -7.602502822875977

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7662874460220337
    2. ':' → logprob: -1.2662874460220337
    3. ',' → logprob: -1.7662874460220337
    4. 'x' → logprob: -4.016287326812744
    5. ' :' → logprob: -4.016287326812744
    6. ' ' → logprob: -4.266287326812744
    7. ' ,' → logprob: -4.641287326812744
    8. ' x' → logprob: -5.016287326812744
    9. ',x' → logprob: -5.391287326812744
    10. ':
' → logprob: -6.266287326812744

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8578717112541199
    2. 'x' → logprob: -1.1078717708587646
    3. ' x' → logprob: -1.7328717708587646
    4. ',' → logprob: -3.1078717708587646
    5. ' ' → logprob: -5.1078715324401855
    6. ' ,' → logprob: -5.4828715324401855
    7. ',x' → logprob: -5.4828715324401855
    8. ':' → logprob: -5.8578715324401855
    9. ' line' → logprob: -6.7328715324401855
    10. '  ' → logprob: -6.9828715324401855

Token 113: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0017990543274208903
    2. ' x' → logprob: -6.3767991065979
    3. '   ' → logprob: -9.251798629760742
    4. 'line' → logprob: -15.001798629760742
    5. ' line' → logprob: -15.626798629760742
    6. '	x' → logprob: -16.126798629760742
    7. '```' → logprob: -16.751798629760742
    8. ' ' → logprob: -16.876798629760742
    9. 's' → logprob: -17.001798629760742
    10. '    
' → logprob: -17.126798629760742

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017190849408507347
    2. ',y' → logprob: -4.142190933227539
    3. ' ,' → logprob: -6.767190933227539
    4. 'y' → logprob: -12.642190933227539
    5. '_,' → logprob: -14.642190933227539
    6. ',x' → logprob: -15.142190933227539
    7. ' y' → logprob: -15.392190933227539
    8. '‌,' → logprob: -15.892190933227539
    9. ' ' → logprob: -16.01719093322754
    10. 's' → logprob: -16.01719093322754

Token 115: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38689306378364563
    2. 'y' → logprob: -1.1368930339813232
    3. '<|end|>' → logprob: -11.011893272399902
    4. ' ' → logprob: -12.386893272399902
    5. '	y' → logprob: -14.511893272399902
    6. ' 
' → logprob: -16.011892318725586
    7. '<|end|>' → logprob: -16.011892318725586
    8. '  ' → logprob: -16.136892318725586
    9. ' =' → logprob: -16.261892318725586
    10. '    ' → logprob: -16.511892318725586

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132679760456085
    2. '=' → logprob: -1.3132679462432861
    3. ' ' → logprob: -13.063267707824707
    4. ',' → logprob: -13.688267707824707
    5. '=input' → logprob: -13.813267707824707
    6. '=int' → logprob: -14.813267707824707
    7. '=line' → logprob: -14.813267707824707
    8. '   ' → logprob: -15.438267707824707
    9. ')' → logprob: -15.813267707824707
    10. ' =)' → logprob: -16.063268661499023

Token 117: ' my' (ID: 922)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0181843563914299
    2. 'map' → logprob: -4.018184185028076
    3. ' list' → logprob: -10.768184661865234
    4. ' my' → logprob: -11.893184661865234
    5. '[' → logprob: -13.143184661865234
    6. ' ' → logprob: -13.393184661865234
    7. ' [' → logprob: -13.768184661865234
    8. 'list' → logprob: -14.018184661865234
    9. 'my' → logprob: -14.393184661865234
    10. '(map' → logprob: -14.893184661865234

Token 118: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.580929347255733e-05
    2. 'input' → logprob: -11.375016212463379
    3. 'put' → logprob: -13.000016212463379
    4. '_INPUT' → logprob: -14.000016212463379
    5. 'Input' → logprob: -14.500016212463379
    6. 'puts' → logprob: -15.750016212463379
    7. '_inputs' → logprob: -16.000015258789062
    8. 'p' → logprob: -16.250015258789062
    9. '-input' → logprob: -16.250015258789062
    10. '入力' → logprob: -17.125015258789062

Token 119: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023250021040439606
    2. '()' → logprob: -3.773250102996826
    3. '()
' → logprob: -14.273249626159668
    4. '()).' → logprob: -14.523249626159668
    5. '()].' → logprob: -14.523249626159668
    6. ' ().' → logprob: -14.648249626159668
    7. '()`' → logprob: -14.773249626159668
    8. '())' → logprob: -15.023249626159668
    9. '().'' → logprob: -15.148249626159668
    10. '()[' → logprob: -15.273249626159668

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7385154428193346e-05
    2. 'strip' → logprob: -10.25003719329834
    3. ' split' → logprob: -13.25003719329834
    4. 'rstrip' → logprob: -16.500038146972656
    5. 'spl' → logprob: -17.125038146972656
    6. '(split' → logprob: -17.500038146972656
    7. '.split' → logprob: -19.125038146972656
    8. 'plit' → logprob: -20.750038146972656
    9. '_split' → logprob: -20.875038146972656
    10. ' ' → logprob: -21.875038146972656

Token 121: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001605197903700173
    2. '(' → logprob: -6.501605033874512
    3. '(),' → logprob: -10.001605033874512
    4. '('' → logprob: -10.501605033874512
    5. '(',' → logprob: -12.001605033874512
    6. '()]' → logprob: -12.376605033874512
    7. '())' → logprob: -12.626605033874512
    8. '()
' → logprob: -12.626605033874512
    9. '("("' → logprob: -13.126605033874512
    10. '();' → logprob: -13.376605033874512

Token 122: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6934065818786621
    2. ' x' → logprob: -0.6934065818786621
    3. ' ' → logprob: -9.19340705871582
    4. '   ' → logprob: -9.69340705871582
    5. ' 
' → logprob: -9.94340705871582
    6. '<|end|>' → logprob: -11.06840705871582
    7. ',' → logprob: -11.31840705871582
    8. '	x' → logprob: -11.69340705871582
    9. ' =' → logprob: -12.94340705871582
    10. ' (' → logprob: -13.56840705871582

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07147777825593948
    2. '=' → logprob: -2.6964778900146484
    3. ',' → logprob: -6.946477890014648
    4. '=int' → logprob: -7.571477890014648
    5. ')' → logprob: -9.821477890014648
    6. ' ' → logprob: -12.571477890014648
    7. 'int' → logprob: -12.946477890014648
    8. ' ,' → logprob: -14.446477890014648
    9. '<|end|>' → logprob: -14.446477890014648
    10. ' =
' → logprob: -14.696477890014648

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -20.500335693359375
    4. '=int' → logprob: -21.125335693359375
    5. '(int' → logprob: -21.500335693359375
    6. '<int' → logprob: -22.875335693359375
    7. ':int' → logprob: -24.125335693359375
    8. '	int' → logprob: -24.250335693359375
    9. '  ' → logprob: -25.000335693359375
    10. '   ' → logprob: -25.250335693359375

Token 126: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001239196863025427
    2. '(' → logprob: -9.000123977661133
    3. 'x' → logprob: -15.250123977661133
    4. ' (' → logprob: -16.250123977661133
    5. '(
' → logprob: -17.250123977661133
    6. ')' → logprob: -19.625123977661133
    7. ')x' → logprob: -19.750123977661133
    8. '()' → logprob: -20.500123977661133
    9. '((' → logprob: -20.750123977661133
    10. '(y' → logprob: -20.875123977661133

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018971276585943997
    2. ')-' → logprob: -9.125189781188965
    3. '-' → logprob: -9.875189781188965
    4. ' -' → logprob: -11.000189781188965
    5. '-)' → logprob: -12.000189781188965
    6. ' )' → logprob: -12.375189781188965
    7. '[' → logprob: -13.500189781188965
    8. ')
' → logprob: -15.250189781188965
    9. '.strip' → logprob: -15.375189781188965
    10. 'x' → logprob: -17.00018882751465

Token 128: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17986442148685455
    2. ' -' → logprob: -1.8048644065856934
    3. '<|end|>' → logprob: -9.179864883422852
    4. '()-' → logprob: -12.429864883422852
    5. ' ' → logprob: -12.554864883422852
    6. ')' → logprob: -12.804864883422852
    7. '()' → logprob: -13.429864883422852
    8. '<|end|>' → logprob: -14.179864883422852
    9. '–' → logprob: -14.304864883422852
    10. '#' → logprob: -14.429864883422852

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.6250057220459
    5. '```' → logprob: -20.0000057220459
    6. '0' → logprob: -21.3750057220459
    7. '１' → logprob: -21.6250057220459
    8. '১' → logprob: -22.2500057220459
    9. '[' → logprob: -22.3750057220459
    10. '<|end|>' → logprob: -22.5000057220459

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.875001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '```' → logprob: -20.125001907348633
    6. '
' → logprob: -21.000001907348633
    7. '１' → logprob: -21.000001907348633
    8. '2' → logprob: -21.625001907348633
    9. '`' → logprob: -21.750001907348633
    10. '0' → logprob: -21.875001907348633

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8880738615989685
    2. ' y' → logprob: -0.8880738615989685
    3. 'y' → logprob: -1.7630739212036133
    4. ',y' → logprob: -6.138073921203613
    5. '<|end|>' → logprob: -7.138073921203613
    6. '	y' → logprob: -7.388073921203613
    7. ' ' → logprob: -7.638073921203613
    8. '    
' → logprob: -7.638073921203613
    9. ',' → logprob: -7.888073921203613
    10. '  
' → logprob: -8.388073921203613

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.38692471385002136
    2. ' y' → logprob: -1.1369247436523438
    3. 'int' → logprob: -10.511924743652344
    4. '   ' → logprob: -11.261924743652344
    5. ' ' → logprob: -12.636924743652344
    6. '<|end|>' → logprob: -12.761924743652344
    7. ' int' → logprob: -13.386924743652344
    8. ',' → logprob: -13.511924743652344
    9. ',y' → logprob: -13.761924743652344
    10. 'x' → logprob: -13.761924743652344

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011187282390892506
    2. '=' → logprob: -4.5111870765686035
    3. '<|end|>' → logprob: -9.261187553405762
    4. '=int' → logprob: -10.136187553405762
    5. ' ' → logprob: -13.261187553405762
    6. ')' → logprob: -13.386187553405762
    7. '<|end|>' → logprob: -14.386187553405762
    8. ' =
' → logprob: -14.511187553405762
    9. ' =)' → logprob: -15.511187553405762
    10. ' ' → logprob: -16.636186599731445

Token 135: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023247340694069862
    2. ' int' → logprob: -3.773247241973877
    3. '(int' → logprob: -14.148247718811035
    4. '<int' → logprob: -14.523247718811035
    5. '=int' → logprob: -15.273247718811035
    6. '[int' → logprob: -15.773247718811035
    7. ':int' → logprob: -16.02324676513672
    8. '	int' → logprob: -16.89824676513672
    9. '   ' → logprob: -19.14824676513672
    10. ']int' → logprob: -19.39824676513672

Token 136: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.013555699028074741
    2. 'int' → logprob: -5.013555526733398
    3. '(int' → logprob: -5.013555526733398
    4. '(x' → logprob: -8.763555526733398
    5. '(' → logprob: -12.138555526733398
    6. '<int' → logprob: -12.388555526733398
    7. '(s' → logprob: -13.763555526733398
    8. 'y' → logprob: -15.013555526733398
    9. 'Int' → logprob: -15.013555526733398
    10. ' int' → logprob: -15.138555526733398

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008673948468640447
    2. '-' → logprob: -7.3758673667907715
    3. ' -' → logprob: -8.62586784362793
    4. ')-' → logprob: -9.87586784362793
    5. '-)' → logprob: -12.25086784362793
    6. ' )' → logprob: -12.75086784362793
    7. '   ' → logprob: -14.50086784362793
    8. '[' → logprob: -14.75086784362793
    9. '#' → logprob: -15.37586784362793
    10. '()' → logprob: -15.37586784362793

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16029570996761322
    2. ' -' → logprob: -1.9102957248687744
    3. ' ' → logprob: -9.785295486450195
    4. ')' → logprob: -12.410295486450195
    5. '<|end|>' → logprob: -12.410295486450195
    6. '-
' → logprob: -13.035295486450195
    7. '   ' → logprob: -13.410295486450195
    8. '–' → logprob: -14.035295486450195
    9. ' -
' → logprob: -14.160295486450195
    10. '  ' → logprob: -15.160295486450195

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001503313542343676
    2. ' ' → logprob: -6.5015034675598145
    3. '2' → logprob: -14.126502990722656
    4. 'int' → logprob: -16.001502990722656
    5. '```' → logprob: -16.626502990722656
    6. '<|end|>' → logprob: -16.751502990722656
    7. '0' → logprob: -17.251502990722656
    8. '   ' → logprob: -17.626502990722656
    9. '`' → logprob: -19.501502990722656
    10. '-' → logprob: -19.501502990722656

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.37500286102295
    3. '2' → logprob: -14.25000286102295
    4. '<|end|>' → logprob: -15.75000286102295
    5. 'int' → logprob: -17.375001907348633
    6. '0' → logprob: -18.000001907348633
    7. '```' → logprob: -18.250001907348633
    8. '   ' → logprob: -20.125001907348633
    9. '(' → logprob: -20.750001907348633
    10. '[' → logprob: -20.875001907348633

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00834742747247219
    2. '
' → logprob: -4.883347511291504
    3. 'X' → logprob: -7.883347511291504
    4. '    
' → logprob: -8.758347511291504
    5. ')' → logprob: -9.133347511291504
    6. '<|end|>' → logprob: -9.883347511291504
    7. '  
' → logprob: -11.758347511291504
    8. ',' → logprob: -11.883347511291504
    9. ')
' → logprob: -11.883347511291504
    10. '  ' → logprob: -11.883347511291504

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01170819066464901
    2. '
' → logprob: -5.0117082595825195
    3. 'X' → logprob: -5.3867082595825195
    4. '    
' → logprob: -8.38670825958252
    5. '<|end|>' → logprob: -9.63670825958252
    6. '	X' → logprob: -10.26170825958252
    7. '  
' → logprob: -10.88670825958252
    8. ' X' → logprob: -11.01170825958252
    9. ' ' → logprob: -12.01170825958252
    10. '  ' → logprob: -12.13670825958252

Token 143: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -12.750003814697266
    3. ' X' → logprob: -14.250003814697266
    4. 'x' → logprob: -16.375003814697266
    5. '#' → logprob: -17.500003814697266
    6. '
' → logprob: -17.500003814697266
    7. '```' → logprob: -18.625003814697266
    8. '    
' → logprob: -18.750003814697266
    9. ' ' → logprob: -20.125003814697266
    10. '	X' → logprob: -21.000003814697266

Token 144: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'x' → logprob: -16.0
    4. '[y' → logprob: -16.375
    5. ' [' → logprob: -18.875
    6. '[i' → logprob: -19.125
    7. '```' → logprob: -19.75
    8. '[X' → logprob: -21.0
    9. '\[' → logprob: -21.0
    10. '[s' → logprob: -21.25

Token 145: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00010020548506872728
    2. '.append' → logprob: -9.250100135803223
    3. ').' → logprob: -12.875100135803223
    4. '.' → logprob: -14.125100135803223
    5. ']' → logprob: -14.625100135803223
    6. ' ].' → logprob: -15.500100135803223
    7. ''].' → logprob: -17.12510108947754
    8. '}.' → logprob: -17.62510108947754
    9. '"].' → logprob: -18.62510108947754
    10. '   ' → logprob: -20.12510108947754

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.5
    3. '.append' → logprob: -17.25
    4. 'appen' → logprob: -20.875
    5. 'add' → logprob: -22.0
    6. '_append' → logprob: -22.0
    7. 'app' → logprob: -22.5
    8. 'Append' → logprob: -22.75
    9. '	append' → logprob: -22.875
    10. 'push' → logprob: -25.875

Token 147: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.981667537620524e-06
    2. 'y' → logprob: -13.500001907348633
    3. '(' → logprob: -14.375001907348633
    4. '((' → logprob: -20.250001907348633
    5. '(
' → logprob: -20.750001907348633
    6. '(x' → logprob: -21.125001907348633
    7. ')y' → logprob: -22.250001907348633
    8. ' (' → logprob: -22.750001907348633
    9. ' y' → logprob: -22.875001907348633
    10. '(Y' → logprob: -23.000001907348633

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046412344090640545
    2. ')
' → logprob: -5.379641056060791
    3. '   ' → logprob: -11.00464153289795
    4. ' )' → logprob: -13.12964153289795
    5. '<|end|>' → logprob: -13.37964153289795
    6. ')

' → logprob: -15.50464153289795
    7. '),' → logprob: -15.87964153289795
    8. ')
' → logprob: -16.004640579223633
    9. ' )
' → logprob: -16.754640579223633
    10. ')#' → logprob: -16.754640579223633

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004418743774294853
    2. 'X' → logprob: -7.750442028045654
    3. ' X' → logprob: -12.500441551208496
    4. '<|end|>' → logprob: -12.500441551208496
    5. '    
' → logprob: -13.250441551208496
    6. '	X' → logprob: -14.625441551208496
    7. '
' → logprob: -15.125441551208496
    8. ' ' → logprob: -15.125441551208496
    9. '  ' → logprob: -15.625441551208496
    10. '       ' → logprob: -15.875441551208496

Token 150: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.5489174127578735
    2. '   ' → logprob: -0.9239174127578735
    3. ' X' → logprob: -3.673917293548584
    4. ' ' → logprob: -10.048917770385742
    5. '  ' → logprob: -10.423917770385742
    6. '	X' → logprob: -12.673917770385742
    7. '    ' → logprob: -12.923917770385742
    8. '```' → logprob: -13.423917770385742
    9. '[' → logprob: -13.798917770385742
    10. 'x' → logprob: -13.923917770385742

Token 151: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.625001907348633
    3. '[x' → logprob: -14.625001907348633
    4. 'y' → logprob: -15.000001907348633
    5. '[Y' → logprob: -17.000001907348633
    6. ' [' → logprob: -17.250001907348633
    7. '][' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. '[u' → logprob: -19.125001907348633
    10. ')[' → logprob: -19.250001907348633

Token 152: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004782780539244413
    2. ').' → logprob: -5.379782676696777
    3. ']' → logprob: -9.754782676696777
    4. '.' → logprob: -9.754782676696777
    5. '.append' → logprob: -10.129782676696777
    6. ')' → logprob: -12.754782676696777
    7. ' ].' → logprob: -13.379782676696777
    8. '}.' → logprob: -13.629782676696777
    9. '[' → logprob: -15.504782676696777
    10. '>.' → logprob: -16.129783630371094

Token 153: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. 'appen' → logprob: -16.125
    3. '.append' → logprob: -16.25
    4. ' append' → logprob: -16.75
    5. '	append' → logprob: -17.875
    6. 'app' → logprob: -18.0
    7. 'Append' → logprob: -20.125
    8. 'add' → logprob: -20.125
    9. '_append' → logprob: -20.5
    10. 'prepend' → logprob: -21.75

Token 154: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.961759259458631e-06
    2. 'x' → logprob: -12.625004768371582
    3. '(' → logprob: -13.375004768371582
    4. '(
' → logprob: -18.1250057220459
    5. ' (' → logprob: -20.0000057220459
    6. '(s' → logprob: -21.1250057220459
    7. '((' → logprob: -22.3750057220459
    8. ')' → logprob: -22.5000057220459
    9. ',x' → logprob: -22.5000057220459
    10. ')x' → logprob: -22.6250057220459

Token 155: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. ')
' → logprob: -10.500027656555176
    3. ' )' → logprob: -15.500027656555176
    4. ')

' → logprob: -16.625028610229492
    5. '<|end|>' → logprob: -16.750028610229492
    6. ')return' → logprob: -17.125028610229492
    7. ')#' → logprob: -17.875028610229492
    8. '))' → logprob: -18.375028610229492
    9. ')
' → logprob: -18.500028610229492
    10. '#' → logprob: -18.500028610229492

Token 156: 'def' (ID: 1314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.705999493598938
    2. 'dp' → logprob: -1.205999493598938
    3. '#' → logprob: -3.2059993743896484
    4. 'colors' → logprob: -3.4559993743896484
    5. 'color' → logprob: -3.7059993743896484
    6. 'used' → logprob: -4.205999374389648
    7. 'from' → logprob: -4.330999374389648
    8. 'dist' → logprob: -4.830999374389648
    9. 'depth' → logprob: -4.830999374389648
    10. 'def' → logprob: -5.205999374389648

Token 157: ' Euler' (ID: 167577)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0018470091745257378
    2. 'dfs' → logprob: -6.376846790313721
    3. ' bfs' → logprob: -8.876847267150879
    4. ' DFS' → logprob: -13.126847267150879
    5. ' solve' → logprob: -13.626847267150879
    6. ' color' → logprob: -14.501847267150879
    7. 'DFS' → logprob: -14.751847267150879
    8. ' main' → logprob: -15.126847267150879
    9. ' paint' → logprob: -15.251847267150879
    10. ' ' → logprob: -16.126846313476562

Token 158: 'Tour' (ID: 48485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33989498019218445
    2. 'Tour' → logprob: -1.3398950099945068
    3. '_T' → logprob: -4.339894771575928
    4. '_t' → logprob: -5.839894771575928
    5. '(T' → logprob: -5.964894771575928
    6. '_path' → logprob: -6.714894771575928
    7. 'tour' → logprob: -6.839894771575928
    8. 'ian' → logprob: -7.089894771575928
    9. 'Traversal' → logprob: -7.339894771575928
    10. '(
' → logprob: -7.464894771575928

Token 159: '(n' (ID: 2406)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.8623843193054199
    2. '(u' → logprob: -1.23738431930542
    3. '(' → logprob: -1.98738431930542
    4. '(root' → logprob: -1.98738431930542
    5. '(v' → logprob: -5.11238431930542
    6. '(T' → logprob: -6.11238431930542
    7. '(x' → logprob: -6.86238431930542
    8. '(n' → logprob: -7.11238431930542
    9. '(graph' → logprob: -7.36238431930542
    10. '(tree' → logprob: -7.61238431930542

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006652565789408982
    2. '):' → logprob: -7.875665187835693
    3. ',node' → logprob: -9.250665664672852
    4. ',u' → logprob: -9.500665664672852
    5. ' ,' → logprob: -9.750665664672852
    6. ',v' → logprob: -11.250665664672852
    7. ',start' → logprob: -11.625665664672852
    8. ',current' → logprob: -12.500665664672852
    9. 'u' → logprob: -12.750665664672852
    10. ',parent' → logprob: -12.875665664672852

Token 161: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5243100523948669
    2. 'graph' → logprob: -1.1493101119995117
    3. 'adj' → logprob: -2.8993101119995117
    4. 'g' → logprob: -4.274310111999512
    5. ' graph' → logprob: -5.024310111999512
    6. ' X' → logprob: -5.774310111999512
    7. 'x' → logprob: -6.149310111999512
    8. 'parent' → logprob: -6.274310111999512
    9. 'p' → logprob: -6.649310111999512
    10. 'start' → logprob: -6.774310111999512

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006166490260511637
    2. '):' → logprob: -5.131166458129883
    3. ' ,' → logprob: -9.131166458129883
    4. ',n' → logprob: -9.881166458129883
    5. '):
' → logprob: -10.131166458129883
    6. ')' → logprob: -11.756166458129883
    7. '   ' → logprob: -12.881166458129883
    8. ',u' → logprob: -12.881166458129883
    9. ',node' → logprob: -13.131166458129883
    10. ',start' → logprob: -13.381166458129883

Token 163: ' i' (ID: 575)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7007989287376404
    2. 'root' → logprob: -1.2007989883422852
    3. 'c' → logprob: -2.700798988342285
    4. 'start' → logprob: -3.200798988342285
    5. 'colors' → logprob: -3.450798988342285
    6. 'u' → logprob: -4.200798988342285
    7. 'v' → logprob: -4.450798988342285
    8. 'cur' → logprob: -4.700798988342285
    9. 'visited' → logprob: -4.825798988342285
    10. 'node' → logprob: -5.950798988342285

Token 164: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028950704261660576
    2. '):' → logprob: -3.6539506912231445
    3. '):
' → logprob: -6.7789506912231445
    4. 'nt' → logprob: -7.4039506912231445
    5. 'nd' → logprob: -8.653950691223145
    6. ' ,' → logprob: -8.903950691223145
    7. 'n' → logprob: -9.028950691223145
    8. ')' → logprob: -9.278950691223145
    9. 'd' → logprob: -9.528950691223145
    10. 'x' → logprob: -9.653950691223145

Token 165: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06402015686035156
    2. '):' → logprob: -3.0640201568603516
    3. '=' → logprob: -4.564020156860352
    4. '):
' → logprob: -5.439020156860352
    5. ')' → logprob: -8.439020156860352
    6. ' ,' → logprob: -8.689020156860352
    7. '):

' → logprob: -10.314020156860352
    8. '0' → logprob: -10.814020156860352
    9. ' ):' → logprob: -11.064020156860352
    10. ' =' → logprob: -11.314020156860352

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037466554204002023
    2. 'stack' → logprob: -8.625374794006348
    3. '	stack' → logprob: -9.875374794006348
    4. ' ' → logprob: -10.000374794006348
    5. 'visited' → logprob: -10.375374794006348
    6. ' stack' → logprob: -11.500374794006348
    7. 'parent' → logprob: -11.750374794006348
    8. ':
' → logprob: -12.250374794006348
    9. ' visited' → logprob: -12.500374794006348
    10. ':' → logprob: -12.750374794006348

Token 167: ' def' (ID: 1056)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.20933698117733002
    2. 'res' → logprob: -3.334336996078491
    3. ' stack' → logprob: -3.459336996078491
    4. 'tour' → logprob: -3.459336996078491
    5. '   ' → logprob: -3.834336996078491
    6. 'visited' → logprob: -4.084336757659912
    7. 'e' → logprob: -4.584336757659912
    8. 'order' → logprob: -4.834336757659912
    9. 'depth' → logprob: -4.959336757659912
    10. 'parent' → logprob: -5.834336757659912

Token 168: ' f' (ID: 285)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.009328768588602543
    2. 'dfs' → logprob: -4.759328842163086
    3. 'Euler' → logprob: -8.259328842163086
    4. ' e' → logprob: -8.509328842163086
    5. ' DFS' → logprob: -8.884328842163086
    6. 'DFS' → logprob: -9.884328842163086
    7. 'e' → logprob: -11.134328842163086
    8. '(e' → logprob: -11.509328842163086
    9. ' Euler' → logprob: -11.509328842163086
    10. 'D' → logprob: -11.884328842163086

Token 169: '(k' (ID: 12125)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.39367353916168213
    2. '(i' → logprob: -1.2686735391616821
    3. '(v' → logprob: -4.768673419952393
    4. '(n' → logprob: -4.893673419952393
    5. '(node' → logprob: -4.893673419952393
    6. 'or' → logprob: -5.393673419952393
    7. '(x' → logprob: -6.143673419952393
    8. 'unction' → logprob: -6.143673419952393
    9. '(a' → logprob: -6.268673419952393
    10. 'unc' → logprob: -6.518673419952393

Token 170: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02868003025650978
    2. '):' → logprob: -3.7786800861358643
    3. ',u' → logprob: -5.653679847717285
    4. ',v' → logprob: -7.278679847717285
    5. ',x' → logprob: -8.778679847717285
    6. 'u' → logprob: -8.778679847717285
    7. '):
' → logprob: -8.903679847717285
    8. ',n' → logprob: -9.153679847717285
    9. ',k' → logprob: -9.153679847717285
    10. ',i' → logprob: -9.528679847717285

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1720997542142868
    2. '   ' → logprob: -2.1720998287200928
    3. ' return' → logprob: -4.047099590301514
    4. 'return' → logprob: -4.547099590301514
    5. ' if' → logprob: -4.797099590301514
    6. '<|end|>' → logprob: -6.297099590301514
    7. '[]' → logprob: -6.672099590301514
    8. ' for' → logprob: -6.797099590301514
    9. 'if' → logprob: -7.172099590301514
    10. ' pass' → logprob: -7.672099590301514

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2949731945991516
    2. '   ' → logprob: -2.669973134994507
    3. ' return' → logprob: -3.044973134994507
    4. 'if' → logprob: -3.044973134994507
    5. ' if' → logprob: -3.419973134994507
    6. 'for' → logprob: -3.919973134994507
    7. ' for' → logprob: -4.419973373413086
    8. '       ' → logprob: -5.419973373413086
    9. 'def' → logprob: -5.544973373413086
    10. 'print' → logprob: -6.044973373413086

Token 173: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9194939732551575
    2. 'X' → logprob: -1.1694939136505127
    3. 'len' → logprob: -1.7944939136505127
    4. 'lambda' → logprob: -3.4194939136505127
    5. 'C' → logprob: -3.7944939136505127
    6. 'n' → logprob: -4.044494152069092
    7. '[n' → logprob: -5.044494152069092
    8. '[' → logprob: -5.169494152069092
    9. '[X' → logprob: -5.169494152069092
    10. '[k' → logprob: -5.294494152069092

Token 174: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38083314895629883
    2. '*' → logprob: -2.505833148956299
    3. ')' → logprob: -3.630833148956299
    4. ' +' → logprob: -3.630833148956299
    5. '<|end|>' → logprob: -3.880833148956299
    6. '(n' → logprob: -4.005833148956299
    7. '%' → logprob: -4.130833148956299
    8. '-' → logprob: -4.505833148956299
    9. '(k' → logprob: -4.505833148956299
    10. '(i' → logprob: -4.505833148956299

Token 175: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00540616549551487
    2. ' ' → logprob: -5.255406379699707
    3. '3' → logprob: -9.630406379699707
    4. '4' → logprob: -10.380406379699707
    5. 'k' → logprob: -10.630406379699707
    6. '(' → logprob: -11.505406379699707
    7. 'n' → logprob: -11.880406379699707
    8. '1' → logprob: -12.005406379699707
    9. 'N' → logprob: -12.505406379699707
    10. '10' → logprob: -12.880406379699707

Token 176: 'k' (ID: 74)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008789466228336096
    2. 'k' → logprob: -8.625879287719727
    3. 'n' → logprob: -8.750879287719727
    4. '4' → logprob: -9.125879287719727
    5. '3' → logprob: -9.125879287719727
    6. ' ' → logprob: -9.125879287719727
    7. 'N' → logprob: -9.250879287719727
    8. '(n' → logprob: -10.125879287719727
    9. 'len' → logprob: -11.250879287719727
    10. '10' → logprob: -11.500879287719727

Token 177: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010065814480185509
    2. '-' → logprob: -4.885066032409668
    3. ' +' → logprob: -6.135066032409668
    4. '+k' → logprob: -9.010066032409668
    5. ' -' → logprob: -9.510066032409668
    6. '1' → logprob: -10.135066032409668
    7. 'k' → logprob: -10.510066032409668
    8. '2' → logprob: -11.510066032409668
    9. '*' → logprob: -12.385066032409668
    10. ')' → logprob: -12.885066032409668

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. ' ' → logprob: -9.875055313110352
    3. '
' → logprob: -13.375055313110352
    4. ')' → logprob: -13.750055313110352
    5. '   ' → logprob: -14.875055313110352
    6. '2' → logprob: -15.875055313110352
    7. '```' → logprob: -16.25005531311035
    8. '  ' → logprob: -16.56255531311035
    9. '...' → logprob: -16.56255531311035
    10. '

' → logprob: -16.68755531311035

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.500031471252441
    3. '2' → logprob: -13.250031471252441
    4. '
' → logprob: -14.000031471252441
    5. '   ' → logprob: -15.312531471252441
    6. ')' → logprob: -15.437531471252441
    7. '...' → logprob: -15.437531471252441
    8. '#' → logprob: -15.875031471252441
    9. '```' → logprob: -16.187532424926758
    10. 'def' → logprob: -16.312532424926758

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026673313230276108
    2. ')//' → logprob: -3.6516733169555664
    3. ' )' → logprob: -8.401673316955566
    4. '//' → logprob: -9.276673316955566
    5. ' //' → logprob: -9.901673316955566
    6. ')>>' → logprob: -12.776673316955566
    7. ')
' → logprob: -14.401673316955566
    8. ')#' → logprob: -14.776673316955566
    9. ')/' → logprob: -15.276673316955566
    10. ')`' → logprob: -15.651673316955566

Token 181: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6484711170196533
    2. ' //' → logprob: -1.1484711170196533
    3. '   ' → logprob: -2.1484711170196533
    4. 'def' → logprob: -4.148470878601074
    5. '
' → logprob: -4.898470878601074
    6. ' /' → logprob: -5.148470878601074
    7. '       ' → logprob: -5.648470878601074
    8. ' ' → logprob: -6.273470878601074
    9. '<|end|>' → logprob: -6.523470878601074
    10. '/' → logprob: -6.523470878601074

Token 182: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -14.000036239624023
    4. '   ' → logprob: -16.187536239624023
    5. '4' → logprob: -16.500036239624023
    6. '

' → logprob: -16.687536239624023
    7. '
' → logprob: -17.437536239624023
    8. '```' → logprob: -17.937536239624023
    9. '  ' → logprob: -18.312536239624023
    10. '22' → logprob: -18.687536239624023

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '
' → logprob: -17.2500057220459
    5. '   ' → logprob: -18.3750057220459
    6. '

' → logprob: -18.4375057220459
    7. '202' → logprob: -18.5625057220459
    8. '22' → logprob: -18.8125057220459
    9. '```' → logprob: -18.8125057220459
    10. '20' → logprob: -19.3125057220459

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5734159350395203
    2. '<|end|>' → logprob: -1.448415994644165
    3. '
' → logprob: -1.698415994644165
    4. '    
' → logprob: -5.073415756225586
    5. '<|end|>' → logprob: -5.448415756225586
    6. ')' → logprob: -5.698415756225586
    7. 'return' → logprob: -7.448415756225586
    8. '

' → logprob: -7.448415756225586
    9. 'n' → logprob: -7.448415756225586
    10. ',' → logprob: -7.698415756225586

Token 185: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' USED' (ID: 129384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22570906579494476
    2. 'res' → logprob: -3.3507089614868164
    3. 'e' → logprob: -3.8507089614868164
    4. ' res' → logprob: -3.8507089614868164
    5. 'stack' → logprob: -3.8507089614868164
    6. '    
' → logprob: -4.975708961486816
    7. 'tour' → logprob: -4.975708961486816
    8. ' stack' → logprob: -5.100708961486816
    9. 'sub' → logprob: -5.100708961486816
    10. 'depth' → logprob: -5.475708961486816

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10069723427295685
    2. '=' → logprob: -2.3506972789764404
    3. '   ' → logprob: -8.97569751739502
    4. 'd' → logprob: -9.22569751739502
    5. ' ' → logprob: -9.72569751739502
    6. '[' → logprob: -9.97569751739502
    7. ',' → logprob: -10.47569751739502
    8. ')' → logprob: -10.72569751739502
    9. '=[]' → logprob: -10.97569751739502
    10. '  ' → logprob: -11.10069751739502

Token 188: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004721207078546286
    2. ' [' → logprob: -5.629721164703369
    3. 'set' → logprob: -7.129721164703369
    4. '[]' → logprob: -9.004721641540527
    5. '[n' → logprob: -9.629721641540527
    6. '[N' → logprob: -9.879721641540527
    7. ' set' → logprob: -10.254721641540527
    8. '[i' → logprob: -10.629721641540527
    9. '[-' → logprob: -12.254721641540527
    10. '[s' → logprob: -12.754721641540527

Token 189: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.735893965815194e-05
    2. '0' → logprob: -11.125017166137695
    3. ' False' → logprob: -13.125017166137695
    4. 'True' → logprob: -15.125017166137695
    5. '-' → logprob: -15.750017166137695
    6. '(False' → logprob: -16.375017166137695
    7. '[' → logprob: -18.625017166137695
    8. '   ' → logprob: -19.375017166137695
    9. ']' → logprob: -19.500017166137695
    10. 'F' → logprob: -19.750017166137695

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018288150895386934
    2. ']*' → logprob: -6.376828670501709
    3. ']*(' → logprob: -9.001829147338867
    4. ' ]' → logprob: -13.376829147338867
    5. ' for' → logprob: -13.876829147338867
    6. 'for' → logprob: -15.001829147338867
    7. '   ' → logprob: -15.376829147338867
    8. ',' → logprob: -16.126829147338867
    9. ')' → logprob: -16.376829147338867
    10. ']+' → logprob: -16.876829147338867

Token 191: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17954601347446442
    2. '<|end|>' → logprob: -2.0545461177825928
    3. 'def' → logprob: -4.804545879364014
    4. ',' → logprob: -5.054545879364014
    5. '*' → logprob: -5.429545879364014
    6. ')' → logprob: -5.679545879364014
    7. ']' → logprob: -5.804545879364014
    8. '
' → logprob: -6.804545879364014
    9. '[' → logprob: -6.929545879364014
    10. '0' → logprob: -7.304545879364014

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2766762673854828
    2. 'N' → logprob: -1.5266762971878052
    3. '(' → logprob: -4.651676177978516
    4. '(n' → logprob: -4.651676177978516
    5. '(N' → logprob: -5.276676177978516
    6. 'len' → logprob: -8.901676177978516
    7. '(len' → logprob: -10.401676177978516
    8. ' (' → logprob: -10.901676177978516
    9. '   ' → logprob: -11.026676177978516
    10. ' n' → logprob: -11.151676177978516

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6227559447288513
    2. '   ' → logprob: -0.8727559447288513
    3. '<|end|>' → logprob: -4.122756004333496
    4. 'visited' → logprob: -4.872756004333496
    5. '    
' → logprob: -5.622756004333496
    6. ',' → logprob: -5.622756004333496
    7. 'stack' → logprob: -5.997756004333496
    8. 'def' → logprob: -5.997756004333496
    9. '  
' → logprob: -6.997756004333496
    10. ' stack' → logprob: -7.122756004333496

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009851736249402165
    2. 'stack' → logprob: -7.375985145568848
    3. ' stack' → logprob: -8.875985145568848
    4. 'def' → logprob: -9.875985145568848
    5. '    
' → logprob: -10.875985145568848
    6. 'E' → logprob: -10.875985145568848
    7. 'tour' → logprob: -11.125985145568848
    8. 'order' → logprob: -11.125985145568848
    9. 'e' → logprob: -11.250985145568848
    10. '	stack' → logprob: -11.375985145568848

Token 195: ' OR' (ID: 4917)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.1068631410598755
    2. 'E' → logprob: -1.7318631410598755
    3. 'res' → logprob: -2.106863021850586
    4. 'tour' → logprob: -2.481863021850586
    5. 'order' → logprob: -2.606863021850586
    6. 'P' → logprob: -2.606863021850586
    7. 'R' → logprob: -4.106863021850586
    8. 'S' → logprob: -4.106863021850586
    9. 'path' → logprob: -4.481863021850586
    10. 'e' → logprob: -4.606863021850586

Token 196: 'G' (ID: 38)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.637596070766449
    2. 'DER' → logprob: -0.887596070766449
    3. 'I' → logprob: -3.2625961303710938
    4. '[' → logprob: -5.137596130371094
    5. 'IGINAL' → logprob: -5.387596130371094
    6. 'IG' → logprob: -6.637596130371094
    7. 'ID' → logprob: -6.637596130371094
    8. 'DEN' → logprob: -7.137596130371094
    9. '[]' → logprob: -7.512596130371094
    10. 'Der' → logprob: -7.512596130371094

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033108193427324295
    2. '=' → logprob: -4.158108234405518
    3. 'INAL' → logprob: -6.033108234405518
    4. 'IN' → logprob: -6.283108234405518
    5. '[]' → logprob: -6.533108234405518
    6. '[' → logprob: -6.533108234405518
    7. '=[' → logprob: -6.533108234405518
    8. 'AL' → logprob: -6.908108234405518
    9. '_' → logprob: -7.158108234405518
    10. 'I' → logprob: -7.158108234405518

Token 198: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1651078164577484
    2. '[' → logprob: -1.9151078462600708
    3. '[i' → logprob: -5.915107727050781
    4. '[-' → logprob: -6.665107727050781
    5. '[]
' → logprob: -7.915107727050781
    6. '[n' → logprob: -8.165107727050781
    7. '[]

' → logprob: -9.915107727050781
    8. '[:]' → logprob: -10.415107727050781
    9. '[]}' → logprob: -10.540107727050781
    10. ' []' → logprob: -10.665107727050781

Token 199: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26046648621559143
    2. 'i' → logprob: -2.0104665756225586
    3. '0' → logprob: -2.3854665756225586
    4. ']' → logprob: -6.135466575622559
    5. '[]' → logprob: -7.760466575622559
    6. '-i' → logprob: -8.010466575622559
    7. 'None' → logprob: -9.260466575622559
    8. '[' → logprob: -9.885466575622559
    9. ' -' → logprob: -10.260466575622559
    10. '()]' → logprob: -10.510466575622559

Token 200: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032226298935711384
    2. ']*' → logprob: -5.753222465515137
    3. ')' → logprob: -11.503222465515137
    4. ' ]' → logprob: -11.628222465515137
    5. ',' → logprob: -12.003222465515137
    6. '*' → logprob: -12.128222465515137
    7. ']*(' → logprob: -12.128222465515137
    8. '])' → logprob: -13.253222465515137
    9. ' *' → logprob: -13.378222465515137
    10. ']+' → logprob: -13.628222465515137

Token 201: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08646254986524582
    2. '(' → logprob: -3.0864624977111816
    3. '(n' → logprob: -3.3364624977111816
    4. 'N' → logprob: -7.211462497711182
    5. '(N' → logprob: -7.836462497711182
    6. '2' → logprob: -8.58646297454834
    7. 'len' → logprob: -8.58646297454834
    8. '(len' → logprob: -9.96146297454834
    9. ' (' → logprob: -11.71146297454834
    10. ' n' → logprob: -11.96146297454834

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7815230488777161
    2. '<|end|>' → logprob: -1.2815229892730713
    3. '
' → logprob: -1.5315229892730713
    4. ',' → logprob: -3.5315229892730713
    5. '<|end|>' → logprob: -5.03152322769165
    6. 'def' → logprob: -6.03152322769165
    7. '    
' → logprob: -6.28152322769165
    8. ')' → logprob: -6.40652322769165
    9. '[]' → logprob: -7.03152322769165
    10. ',
' → logprob: -7.28152322769165

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005156210972927511
    2. 'def' → logprob: -8.625515937805176
    3. ' stack' → logprob: -9.250515937805176
    4. 'stack' → logprob: -9.750515937805176
    5. '    
' → logprob: -9.875515937805176
    6. '<|end|>' → logprob: -10.375515937805176
    7. ' def' → logprob: -10.875515937805176
    8. '
' → logprob: -10.875515937805176
    9. '	stack' → logprob: -11.750515937805176
    10. '<|end|>' → logprob: -12.000515937805176

Token 204: ' TMP' (ID: 121022)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.526128888130188
    2. 'stk' → logprob: -2.2761287689208984
    3. 'S' → logprob: -2.4011287689208984
    4. 'ST' → logprob: -3.4011287689208984
    5. '   ' → logprob: -3.5261287689208984
    6. 'res' → logprob: -3.9011287689208984
    7. 'P' → logprob: -4.276128768920898
    8. 'st' → logprob: -4.276128768920898
    9. 'E' → logprob: -4.401128768920898
    10. 'STACK' → logprob: -4.526128768920898

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1021580696105957
    2. '=' → logprob: -2.3521580696105957
    3. '=[]' → logprob: -6.477158069610596
    4. 'def' → logprob: -8.727157592773438
    5. ',' → logprob: -9.602157592773438
    6. '   ' → logprob: -9.977157592773438
    7. '=[]
' → logprob: -10.227157592773438
    8. ' ' → logprob: -11.102157592773438
    9. '[]' → logprob: -11.602157592773438
    10. '=[' → logprob: -11.602157592773438

Token 206: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.49213871359825134
    2. '[' → logprob: -0.9921387434005737
    3. '[n' → logprob: -4.367138862609863
    4. '[-' → logprob: -5.742138862609863
    5. '[]
' → logprob: -6.742138862609863
    6. '0' → logprob: -8.242138862609863
    7. '[i' → logprob: -8.867138862609863
    8. 'n' → logprob: -8.867138862609863
    9. '[N' → logprob: -10.617138862609863
    10. '[]

' → logprob: -10.617138862609863

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006451221415773034
    2. 'def' → logprob: -8.62564468383789
    3. 'stack' → logprob: -8.62564468383789
    4. '    
' → logprob: -9.12564468383789
    5. ' stack' → logprob: -9.12564468383789
    6. ' def' → logprob: -10.62564468383789
    7. '	stack' → logprob: -11.25064468383789
    8. '
' → logprob: -11.50064468383789
    9. 'STACK' → logprob: -12.37564468383789
    10. '  ' → logprob: -13.25064468383789

Token 208: ' for' (ID: 395)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07427064329385757
    2. '   ' → logprob: -3.699270725250244
    3. 'def' → logprob: -3.699270725250244
    4. 'STACK' → logprob: -4.574270725250244
    5. ' stack' → logprob: -5.324270725250244
    6. 'stk' → logprob: -5.699270725250244
    7. 'S' → logprob: -7.449270725250244
    8. 'P' → logprob: -7.574270725250244
    9. 'ST' → logprob: -7.824270725250244
    10. 'from' → logprob: -8.449270248413086

Token 209: ' _' (ID: 1175)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4572209119796753
    2. 'i' → logprob: -1.5822209119796753
    3. 'u' → logprob: -1.5822209119796753
    4. 'k' → logprob: -1.5822209119796753
    5. 'x' → logprob: -3.082221031188965
    6. 'j' → logprob: -3.332221031188965
    7. 'e' → logprob: -4.207221031188965
    8. 's' → logprob: -4.582221031188965
    9. '_' → logprob: -5.082221031188965
    10. 'start' → logprob: -5.332221031188965

Token 210: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3449239134788513
    2. 'in' → logprob: -1.719923973083496
    3. ' range' → logprob: -2.844923973083496
    4. ' in' → logprob: -3.094923973083496
    5. 'i' → logprob: -5.469923973083496
    6. '(' → logprob: -6.344923973083496
    7. '(range' → logprob: -6.469923973083496
    8. ' i' → logprob: -7.469923973083496
    9. '(i' → logprob: -8.094923973083496
    10. '()' → logprob: -8.219923973083496

Token 211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001200231839902699
    2. ' range' → logprob: -6.876200199127197
    3. 'X' → logprob: -8.751200675964355
    4. '(range' → logprob: -12.376200675964355
    5. 'in' → logprob: -13.501200675964355
    6. '[' → logprob: -14.001200675964355
    7. 'C' → logprob: -14.376200675964355
    8. '	range' → logprob: -15.501200675964355
    9. '0' → logprob: -15.626200675964355
    10. '(' → logprob: -15.626200675964355

Token 212: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5454117059707642
    2. 'n' → logprob: -0.9204117059707642
    3. '(' → logprob: -4.295411586761475
    4. 'N' → logprob: -5.795411586761475
    5. '(N' → logprob: -6.045411586761475
    6. '2' → logprob: -6.670411586761475
    7. ' n' → logprob: -7.795411586761475
    8. '1' → logprob: -8.670412063598633
    9. ' ' → logprob: -8.795412063598633
    10. '(len' → logprob: -9.045412063598633

Token 213: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35535064339637756
    2. '):' → logprob: -1.2303506135940552
    3. '   ' → logprob: -5.855350494384766
    4. ')' → logprob: -6.355350494384766
    5. '+' → logprob: -6.855350494384766
    6. '*' → logprob: -7.605350494384766
    7. ':' → logprob: -8.230350494384766
    8. '-' → logprob: -9.105350494384766
    9. ':
' → logprob: -9.480350494384766
    10. '):
' → logprob: -10.105350494384766

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6395475268363953
    2. '   ' → logprob: -0.8895475268363953
    3. 'TMP' → logprob: -3.01454758644104
    4. ' TMP' → logprob: -5.014547348022461
    5. 'def' → logprob: -6.389547348022461
    6. 'T' → logprob: -6.514547348022461
    7. 'tmp' → logprob: -8.702047348022461
    8. '	T' → logprob: -8.952047348022461
    9. 'TPS' → logprob: -9.014547348022461
    10. 'USR' → logprob: -9.077047348022461

Token 215: ' TMP' (ID: 121022)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TMP' (adapté à ' TMP') → logprob: -0.026744574308395386
    2. '   ' → logprob: -4.651744365692139
    3. ' TMP' → logprob: -5.401744365692139
    4. 'ORG' → logprob: -5.526744365692139
    5. 'USR' → logprob: -6.276744365692139
    6. 'k' → logprob: -6.276744365692139
    7. 'tmp' → logprob: -7.276744365692139
    8. 'i' → logprob: -7.776744365692139
    9. 'T' → logprob: -7.776744365692139
    10. 'USED' → logprob: -7.901744365692139

Token 216: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003149319440126419
    2. '.' → logprob: -6.378149509429932
    3. '.clear' → logprob: -6.753149509429932
    4. '.pop' → logprob: -8.378149032592773
    5. '=' → logprob: -10.628149032592773
    6. '=[]' → logprob: -11.628149032592773
    7. '.app' → logprob: -12.128149032592773
    8. 'append' → logprob: -12.128149032592773
    9. ' .' → logprob: -12.878149032592773
    10. '.=' → logprob: -14.378149032592773

Token 217: '(' (ID: 7)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.20096978545188904
    2. '(-' → logprob: -2.200969696044922
    3. '(' → logprob: -2.825969696044922
    4. '[]' → logprob: -4.825969696044922
    5. '0' → logprob: -6.825969696044922
    6. '([' → logprob: -6.950969696044922
    7. '(None' → logprob: -7.200969696044922
    8. '-' → logprob: -7.825969696044922
    9. '([])
' → logprob: -8.200969696044922
    10. '([-' → logprob: -8.325969696044922

Token 218: '0' (ID: 15)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.309242308139801
    2. '[]' → logprob: -2.1842422485351562
    3. '-' → logprob: -2.5592422485351562
    4. '0' → logprob: -2.6842422485351562
    5. ')' → logprob: -5.934242248535156
    6. '[])
' → logprob: -6.059242248535156
    7. '[]
' → logprob: -7.184242248535156
    8. '[' → logprob: -7.434242248535156
    9. 'False' → logprob: -7.559242248535156
    10. '[-' → logprob: -8.559242248535156

Token 219: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005138330743648112
    2. ')
' → logprob: -7.625514030456543
    3. ' )' → logprob: -10.875514030456543
    4. ')

' → logprob: -12.250514030456543
    5. '   ' → logprob: -13.750514030456543
    6. ')return' → logprob: -15.500514030456543
    7. ' ' → logprob: -15.750514030456543
    8. '0' → logprob: -16.125513076782227
    9. ')n' → logprob: -16.125513076782227
    10. ' )
' → logprob: -16.500513076782227

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26451775431632996
    2. ' stack' → logprob: -1.8895177841186523
    3. 'stack' → logprob: -2.6395177841186523
    4. '	stack' → logprob: -6.639517784118652
    5. 'def' → logprob: -6.639517784118652
    6. ' i' → logprob: -6.889517784118652
    7. 'i' → logprob: -7.264517784118652
    8. ' def' → logprob: -7.514517784118652
    9. 'STACK' → logprob: -7.514517784118652
    10. 'stk' → logprob: -7.639517784118652

Token 221: ' P' (ID: 398)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.1913866251707077
    2. 'stk' → logprob: -3.0663866996765137
    3. 'S' → logprob: -3.1913866996765137
    4. '   ' → logprob: -4.066386699676514
    5. 'STACK' → logprob: -4.191386699676514
    6. 'ST' → logprob: -4.316386699676514
    7. 'def' → logprob: -4.316386699676514
    8. 'st' → logprob: -5.316386699676514
    9. 'P' (adapté à ' P') → logprob: -5.441386699676514
    10. 'Q' → logprob: -5.816386699676514

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08246371150016785
    2. '=' → logprob: -4.08246374130249
    3. 'stack' → logprob: -4.83246374130249
    4. 'AR' → logprob: -5.08246374130249
    5. 'OP' → logprob: -5.20746374130249
    6. 'ar' → logprob: -5.58246374130249
    7. 'USH' → logprob: -5.58246374130249
    8. 'ARENT' → logprob: -5.58246374130249
    9. 'I' → logprob: -5.83246374130249
    10. 'os' → logprob: -6.08246374130249

Token 223: ' [-' (ID: 20191)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.24483489990234375
    2. '[' → logprob: -1.7448348999023438
    3. '[-' → logprob: -3.4948348999023438
    4. '[i' → logprob: -4.744834899902344
    5. '[(' → logprob: -6.244834899902344
    6. '[n' → logprob: -7.494834899902344
    7. '[int' → logprob: -8.119834899902344
    8. ' []' → logprob: -9.119834899902344
    9. '[I' → logprob: -9.119834899902344
    10. '[]
' → logprob: -9.369834899902344

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.375004768371582
    3. '-' → logprob: -15.250004768371582
    4. '11' → logprob: -16.6875057220459
    5. ' ' → logprob: -16.7500057220459
    6. '10' → logprob: -17.1875057220459
    7. '999' → logprob: -17.4375057220459
    8. 'n' → logprob: -17.6875057220459
    9. '100' → logprob: -17.7500057220459
    10. '111' → logprob: -17.8750057220459

Token 225: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0301666259765625
    2. ']*' → logprob: -3.5301666259765625
    3. ' for' → logprob: -8.405166625976562
    4. ']*(' → logprob: -8.780166625976562
    5. 'for' → logprob: -10.405166625976562
    6. ' ]' → logprob: -12.655166625976562
    7. ')' → logprob: -12.780166625976562
    8. ',' → logprob: -13.405166625976562
    9. ']+' → logprob: -15.030166625976562
    10. '"]' → logprob: -16.280166625976562

Token 226: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2563115358352661
    2. 'range' → logprob: -2.0063114166259766
    3. '_' → logprob: -2.5063114166259766
    4. '(range' → logprob: -4.756311416625977
    5. ' _' → logprob: -6.881311416625977
    6. ' in' → logprob: -8.381311416625977
    7. '_range' → logprob: -9.006311416625977
    8. ' i' → logprob: -10.506311416625977
    9. 'in' → logprob: -11.131311416625977
    10. 'i' → logprob: -11.131311416625977

Token 227: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.051530495285987854
    2. ' range' → logprob: -3.676530599594116
    3. 'in' → logprob: -4.051530361175537
    4. ' in' → logprob: -4.926530361175537
    5. '_' → logprob: -8.676530838012695
    6. '(range' → logprob: -9.426530838012695
    7. 'x' → logprob: -12.301530838012695
    8. 'ange' → logprob: -12.551530838012695
    9. '_range' → logprob: -13.176530838012695
    10. ' ' → logprob: -13.551530838012695

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502598519437015
    2. ' range' → logprob: -6.501502513885498
    3. 'X' → logprob: -15.626502990722656
    4. '(range' → logprob: -16.501502990722656
    5. '	range' → logprob: -19.376502990722656
    6. ' ' → logprob: -19.501502990722656
    7. '
' → logprob: -20.251502990722656
    8. '_' → logprob: -20.376502990722656
    9. 'ran' → logprob: -20.626502990722656
    10. '[' → logprob: -20.751502990722656

Token 229: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1856527030467987
    2. ' range' → logprob: -1.935652732849121
    3. '(range' → logprob: -3.685652732849121
    4. '(X' → logprob: -11.560652732849121
    5. 'X' → logprob: -12.060652732849121
    6. ' ' → logprob: -12.810652732849121
    7. '(' → logprob: -12.810652732849121
    8. '	range' → logprob: -13.310652732849121
    9. '(n' → logprob: -13.435652732849121
    10. 'n' → logprob: -14.185652732849121

Token 230: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0792991891503334
    2. ']' → logprob: -2.579299211502075
    3. ')' → logprob: -8.204298973083496
    4. '])' → logprob: -9.204298973083496
    5. ')]
' → logprob: -11.204298973083496
    6. ']
' → logprob: -11.329298973083496
    7. '])]' → logprob: -12.204298973083496
    8. ' ]' → logprob: -13.204298973083496
    9. ')])' → logprob: -14.454298973083496
    10. ']]' → logprob: -14.829298973083496

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001894841087050736
    2. '<|end|>' → logprob: -7.251894950866699
    3. 'stack' → logprob: -7.626894950866699
    4. ' stack' → logprob: -8.2518949508667
    5. '	stack' → logprob: -8.6268949508667
    6. '    
' → logprob: -8.8768949508667
    7. '
' → logprob: -10.2518949508667
    8. '<|end|>' → logprob: -11.2518949508667
    9. 'def' → logprob: -11.3768949508667
    10. '_stack' → logprob: -12.0018949508667

Token 232: ' Q' (ID: 1486)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7141677141189575
    2. 'S' → logprob: -0.9641677141189575
    3. 'stk' → logprob: -3.339167594909668
    4. 'ST' → logprob: -3.589167594909668
    5. 'Q' (adapté à ' Q') → logprob: -3.714167594909668
    6. 'P' → logprob: -4.839167594909668
    7. 'STACK' → logprob: -4.839167594909668
    8. 'st' → logprob: -5.089167594909668
    9. '   ' → logprob: -5.839167594909668
    10. 's' → logprob: -6.214167594909668

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764110684394836
    2. '=' → logprob: -0.8264110684394836
    3. '=[]' → logprob: -7.701411247253418
    4. '=[' → logprob: -11.701411247253418
    5. '=[]
' → logprob: -12.451411247253418
    6. '.append' → logprob: -12.951411247253418
    7. 'import' → logprob: -13.326411247253418
    8. ' =[' → logprob: -14.701411247253418
    9. ',' → logprob: -14.826411247253418
    10. '.' → logprob: -14.826411247253418

Token 234: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.48004040122032166
    2. '[' → logprob: -0.980040431022644
    3. '[]' → logprob: -5.230040550231934
    4. ' [' → logprob: -8.480040550231934
    5. '[I' → logprob: -8.980040550231934
    6. '[n' → logprob: -9.480040550231934
    7. '[int' → logprob: -9.605040550231934
    8. '[ind' → logprob: -10.980040550231934
    9. '[-' → logprob: -10.980040550231934
    10. 'deque' → logprob: -11.230040550231934

Token 235: '~' (ID: 93)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00022690063633490354
    2. '0' → logprob: -8.625226974487305
    3. ' i' → logprob: -10.875226974487305
    4. '(i' → logprob: -11.250226974487305
    5. '-' → logprob: -11.625226974487305
    6. '(' → logprob: -12.500226974487305
    7. ']' → logprob: -13.875226974487305
    8. 'int' → logprob: -15.250226974487305
    9. '   ' → logprob: -15.375226974487305
    10. '
' → logprob: -16.000226974487305

Token 236: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013172623002901673
    2. '0' → logprob: -6.751317024230957
    3. '(' → logprob: -9.126317024230957
    4. '(i' → logprob: -10.751317024230957
    5. '1' → logprob: -12.251317024230957
    6. '-' → logprob: -13.001317024230957
    7. ' i' → logprob: -13.001317024230957
    8. 'x' → logprob: -13.501317024230957
    9. 'int' → logprob: -13.876317024230957
    10. 'n' → logprob: -14.251317024230957

Token 237: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6823459267616272
    2. '0' → logprob: -1.0573458671569824
    3. ' ' → logprob: -3.1823458671569824
    4. ' i' → logprob: -3.5573458671569824
    5. ' for' → logprob: -3.5573458671569824
    6. 'for' → logprob: -3.8073458671569824
    7. 'n' → logprob: -5.307345867156982
    8. ']' → logprob: -5.307345867156982
    9. '(i' → logprob: -5.557345867156982
    10. '<|end|>' → logprob: -5.807345867156982

Token 238: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016117468476295471
    2. ' ]' → logprob: -7.001611709594727
    3. ')]' → logprob: -7.751611709594727
    4. ')' → logprob: -8.376611709594727
    5. '])' → logprob: -10.501611709594727
    6. ',' → logprob: -12.251611709594727
    7. '0' → logprob: -13.751611709594727
    8. '()]' → logprob: -13.876611709594727
    9. ']
' → logprob: -13.876611709594727
    10. '`]' → logprob: -14.251611709594727

Token 239: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03368661552667618
    2. ' i' → logprob: -3.408686637878418
    3. ' ' → logprob: -10.908686637878418
    4. '0' → logprob: -11.533686637878418
    5. ']' → logprob: -12.658686637878418
    6. '   ' → logprob: -13.283686637878418
    7. '
' → logprob: -13.783686637878418
    8. '-i' → logprob: -14.033686637878418
    9. ',i' → logprob: -14.283686637878418
    10. '  ' → logprob: -14.533686637878418

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3358446166384965e-05
    2. '])' → logprob: -10.875053405761719
    3. ']' → logprob: -11.375053405761719
    4. ')]' → logprob: -11.875053405761719
    5. ')' → logprob: -12.125053405761719
    6. ' ' → logprob: -12.750053405761719
    7. '_' → logprob: -13.625053405761719
    8. ' ])' → logprob: -14.125053405761719
    9. '-' → logprob: -14.375053405761719
    10. ')])' → logprob: -14.500053405761719

Token 241: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003171533579006791
    2. ')' → logprob: -6.378171443939209
    3. '])' → logprob: -7.003171443939209
    4. ']
' → logprob: -8.253171920776367
    5. ')]' → logprob: -9.128171920776367
    6. ' ]' → logprob: -9.253171920776367
    7. ',' → logprob: -9.378171920776367
    8. ']

' → logprob: -12.878171920776367
    9. ')
' → logprob: -13.378171920776367
    10. '<|end|>' → logprob: -13.628171920776367

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27209988236427307
    2. 'while' → logprob: -2.1470999717712402
    3. ' while' → logprob: -2.1470999717712402
    4. '
' → logprob: -5.64709997177124
    5. '    
' → logprob: -8.272099494934082
    6. ')' → logprob: -8.397099494934082
    7. '[' → logprob: -8.897099494934082
    8. '<|end|>' → logprob: -9.397099494934082
    9. '	while' → logprob: -9.522099494934082
    10. ',' → logprob: -10.022099494934082

Token 243: ' ct' (ID: 40541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18094812333583832
    2. ' while' → logprob: -1.8059481382369995
    3. '   ' → logprob: -6.805948257446289
    4. ' ' → logprob: -10.055948257446289
    5. '	while' → logprob: -10.805948257446289
    6. '
' → logprob: -11.805948257446289
    7. 'i' → logprob: -12.930948257446289
    8. ' i' → logprob: -13.055948257446289
    9. 'While' → logprob: -13.055948257446289
    10. ' 
' → logprob: -13.180948257446289

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05623199790716171
    2. ' =' → logprob: -2.93123197555542
    3. 'r' → logprob: -7.18123197555542
    4. 'p' → logprob: -8.806232452392578
    5. ' ' → logprob: -8.806232452392578
    6. 'c' → logprob: -9.056232452392578
    7. 'x' → logprob: -9.681232452392578
    8. 'oken' → logprob: -11.556232452392578
    9. 'd' → logprob: -11.681232452392578
    10. 'okens' → logprob: -11.681232452392578

Token 245: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067828623577952385
    2. '1' → logprob: -5.2567830085754395
    3. ' ' → logprob: -6.6317830085754395
    4. '2' → logprob: -8.756782531738281
    5. '-' → logprob: -9.631782531738281
    6. ' -' → logprob: -12.631782531738281
    7. '   ' → logprob: -13.881782531738281
    8. '  ' → logprob: -14.006782531738281
    9. '[' → logprob: -15.131782531738281
    10. 'int' → logprob: -15.506782531738281

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022387548815459013
    2. '2' → logprob: -6.127238750457764
    3. ' ' → logprob: -10.127239227294922
    4. '   ' → logprob: -11.752239227294922
    5. '-' → logprob: -12.502239227294922
    6. '0' → logprob: -14.377239227294922
    7. '  ' → logprob: -15.314739227294922
    8. '```' → logprob: -15.877239227294922
    9. 'len' → logprob: -16.002239227294922
    10. '
' → logprob: -16.189739227294922

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024552617222070694
    2. '   ' → logprob: -4.274552822113037
    3. '<|end|>' → logprob: -5.149552822113037
    4. ' 
' → logprob: -6.774552822113037
    5. ' while' → logprob: -6.774552822113037
    6. '  
' → logprob: -7.024552822113037
    7. '    
' → logprob: -8.149552345275879
    8. '<|end|>' → logprob: -8.274552345275879
    9. '
' → logprob: -8.649552345275879
    10. 'while' → logprob: -8.649552345275879

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07318247109651566
    2. ' while' → logprob: -2.6981825828552246
    3. 'while' → logprob: -6.198182582855225
    4. '
' → logprob: -7.698182582855225
    5. '<|end|>' → logprob: -8.198182106018066
    6. '    
' → logprob: -8.573182106018066
    7. '	while' → logprob: -9.448182106018066
    8. ' for' → logprob: -9.948182106018066
    9. ')' → logprob: -10.323182106018066
    10. '  
' → logprob: -10.823182106018066

Token 249: ' ET' (ID: 23345)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.31733888387680054
    2. 'while' → logprob: -1.3173389434814453
    3. '   ' → logprob: -5.817338943481445
    4. 'ct' → logprob: -7.442338943481445
    5. ' ct' → logprob: -8.192338943481445
    6. 'Q' → logprob: -9.692338943481445
    7. '	while' → logprob: -10.067338943481445
    8. 'While' → logprob: -10.442338943481445
    9. ' Q' → logprob: -10.692338943481445
    10. ')' → logprob: -10.942338943481445

Token 250: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43651437759399414
    2. '=' → logprob: -1.0615143775939941
    3. '=[]' → logprob: -5.186514377593994
    4. '[' → logprob: -7.811514377593994
    5. ',' → logprob: -8.186513900756836
    6. '_' → logprob: -8.186513900756836
    7. '[]' → logprob: -8.311513900756836
    8. ' ' → logprob: -8.561513900756836
    9. '=[' → logprob: -8.561513900756836
    10. '=[]
' → logprob: -9.311513900756836

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43167153000831604
    2. ' =' → logprob: -1.0566715002059937
    3. '=[]' → logprob: -5.931671619415283
    4. ',' → logprob: -8.306671142578125
    5. '=[' → logprob: -11.056671142578125
    6. '_' → logprob: -11.431671142578125
    7. 'idx' → logprob: -12.181671142578125
    8. '[]' → logprob: -12.431671142578125
    9. '[' → logprob: -12.556671142578125
    10. '.append' → logprob: -12.681671142578125

Token 252: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0061087897047400475
    2. '[' → logprob: -5.13110876083374
    3. '[]
' → logprob: -9.381109237670898
    4. ' []' → logprob: -9.506109237670898
    5. '[-' → logprob: -11.506109237670898
    6. '[n' → logprob: -12.006109237670898
    7. '[]

' → logprob: -13.006109237670898
    8. '[]}' → logprob: -13.506109237670898
    9. '[:]' → logprob: -14.506109237670898
    10. '[],' → logprob: -15.506109237670898

Token 253: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7747610807418823
    2. '0' → logprob: -0.8997610807418823
    3. ']' → logprob: -2.024761199951172
    4. ']*' → logprob: -8.524761199951172
    5. ']
' → logprob: -8.899761199951172
    6. 'None' → logprob: -10.649761199951172
    7. ')' → logprob: -10.649761199951172
    8. ']

' → logprob: -11.024761199951172
    9. ' -' → logprob: -11.149761199951172
    10. '-i' → logprob: -11.524761199951172

Token 254: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006361250765621662
    2. ']*' → logprob: -5.506361484527588
    3. ']*(' → logprob: -6.256361484527588
    4. ' for' → logprob: -8.25636100769043
    5. 'for' → logprob: -9.50636100769043
    6. ' ]' → logprob: -11.13136100769043
    7. ')' → logprob: -12.38136100769043
    8. '*' → logprob: -12.63136100769043
    9. ',' → logprob: -13.50636100769043
    10. ']+' → logprob: -14.38136100769043

Token 255: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2101457715034485
    2. 'n' → logprob: -1.9601457118988037
    3. '(n' → logprob: -3.4601457118988037
    4. '2' → logprob: -4.085145950317383
    5. ' (' → logprob: -8.710145950317383
    6. 'N' → logprob: -9.460145950317383
    7. '(N' → logprob: -9.585145950317383
    8. ' n' → logprob: -10.460145950317383
    9. '0' → logprob: -11.085145950317383
    10. '   ' → logprob: -11.210145950317383

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08660347014665604
    2. '
' → logprob: -2.7116034030914307
    3. ' ET' → logprob: -4.96160364151001
    4. '<|end|>' → logprob: -5.58660364151001
    5. '<|end|>' → logprob: -5.83660364151001
    6. '    
' → logprob: -6.46160364151001
    7. ',' → logprob: -7.83660364151001
    8. 'ET' → logprob: -7.83660364151001
    9. ' 
' → logprob: -9.086603164672852
    10. '	
' → logprob: -9.586603164672852

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15254557132720947
    2. ' while' → logprob: -2.40254545211792
    3. ' ET' → logprob: -3.52754545211792
    4. '<|end|>' → logprob: -4.65254545211792
    5. 'ET' → logprob: -5.52754545211792
    6. 'while' → logprob: -5.52754545211792
    7. ',' → logprob: -7.02754545211792
    8. '
' → logprob: -7.40254545211792
    9. '<|end|>' → logprob: -7.40254545211792
    10. '    
' → logprob: -7.40254545211792

Token 258: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' (adapté à ' ET') → logprob: -0.2043275237083435
    2. 'while' → logprob: -2.0793275833129883
    3. '   ' → logprob: -3.2043275833129883
    4. ' while' → logprob: -5.079327583312988
    5. 'def' → logprob: -5.204327583312988
    6. 'for' → logprob: -6.704327583312988
    7. 'ct' → logprob: -6.829327583312988
    8. ' ET' → logprob: -6.829327583312988
    9. 'et' → logprob: -7.329327583312988
    10. 'i' → logprob: -7.329327583312988

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009487835690379143
    2. ' =' → logprob: -5.884487628936768
    3. '1' → logprob: -6.134487628936768
    4. 'I' → logprob: -7.134487628936768
    5. 'idx' → logprob: -7.384487628936768
    6. 'O' → logprob: -7.759487628936768
    7. '0' → logprob: -7.759487628936768
    8. '=' → logprob: -8.259488105773926
    9. 'pos' → logprob: -8.384488105773926
    10. '[' → logprob: -8.634488105773926

Token 260: ' =' (ID: 314)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.2746766805648804
    2. ' =' → logprob: -1.6496766805648804
    3. '*n' → logprob: -1.8996766805648804
    4. '[' → logprob: -2.27467679977417
    5. '=' → logprob: -2.39967679977417
    6. '[n' → logprob: -2.77467679977417
    7. '*' → logprob: -2.77467679977417
    8. '*[' → logprob: -3.52467679977417
    9. '=n' → logprob: -4.39967679977417
    10. ' =[' → logprob: -5.14967679977417

Token 261: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036292888689786196
    2. ' [' → logprob: -5.753629207611084
    3. '[n' → logprob: -8.628629684448242
    4. '[-' → logprob: -8.753629684448242
    5. '0' → logprob: -9.753629684448242
    6. 'n' → logprob: -9.878629684448242
    7. '[]' → logprob: -13.753629684448242
    8. ' ' → logprob: -13.753629684448242
    9. '   ' → logprob: -14.003629684448242
    10. ' [-' → logprob: -14.003629684448242

Token 262: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03424708917737007
    2. '0' → logprob: -3.4092471599578857
    3. '2' → logprob: -7.784246921539307
    4. '-n' → logprob: -9.284247398376465
    5. ' n' → logprob: -10.534247398376465
    6. '-' → logprob: -10.534247398376465
    7. 'N' → logprob: -11.159247398376465
    8. '(' → logprob: -12.159247398376465
    9. ']' → logprob: -12.659247398376465
    10. ' ' → logprob: -12.909247398376465

Token 263: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4845331311225891
    2. '*n' → logprob: -1.4845330715179443
    3. ']' → logprob: -1.8595330715179443
    4. '*' → logprob: -6.609533309936523
    5. ']*(' → logprob: -9.484533309936523
    6. '*num' → logprob: -10.109533309936523
    7. 'n' → logprob: -10.359533309936523
    8. ']
' → logprob: -10.484533309936523
    9. '*N' → logprob: -10.609533309936523
    10. '   ' → logprob: -10.984533309936523

Token 264: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025096019729971886
    2. '(' → logprob: -3.7750959396362305
    3. '(n' → logprob: -6.4000959396362305
    4. 'N' → logprob: -9.15009593963623
    5. '2' → logprob: -10.65009593963623
    6. '(N' → logprob: -11.02509593963623
    7. ' (' → logprob: -11.52509593963623
    8. '0' → logprob: -12.65009593963623
    9. '
' → logprob: -12.77509593963623
    10. ' n' → logprob: -12.96259593963623

Token 265: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0557594820857048
    2. '   ' → logprob: -3.0557594299316406
    3. '<|end|>' → logprob: -6.305759429931641
    4. '    
' → logprob: -6.430759429931641
    5. ' while' → logprob: -6.680759429931641
    6. '  
' → logprob: -7.305759429931641
    7. 'while' → logprob: -7.680759429931641
    8. '
' → logprob: -8.43075942993164
    9. '	
' → logprob: -8.43075942993164
    10. ' 
' → logprob: -8.43075942993164

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5087317824363708
    2. ' while' → logprob: -1.7587318420410156
    3. '
' → logprob: -2.1337318420410156
    4. 'while' → logprob: -2.2587318420410156
    5. '	while' → logprob: -6.758731842041016
    6. '<|end|>' → logprob: -7.258731842041016
    7. 'def' → logprob: -7.383731842041016
    8. '    
' → logprob: -7.883731842041016
    9. 'ct' → logprob: -9.008731842041016
    10. '  
' → logprob: -9.633731842041016

Token 267: ' AN' (ID: 3473)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06464400142431259
    2. ' while' → logprob: -3.1896440982818604
    3. '   ' → logprob: -3.9396440982818604
    4. 'ct' → logprob: -6.689643859863281
    5. 'i' → logprob: -8.064643859863281
    6. '	while' → logprob: -9.064643859863281
    7. 'stack' → logprob: -9.314643859863281
    8. 'idx' → logprob: -10.064643859863281
    9. 'def' → logprob: -10.314643859863281
    10. ' i' → logprob: -11.064643859863281

Token 268: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03485962748527527
    2. 'C' → logprob: -3.5348596572875977
    3. 'T' → logprob: -6.659859657287598
    4. 'CT' → logprob: -7.284859657287598
    5. 'CH' → logprob: -7.409859657287598
    6. ' =' → logprob: -7.784859657287598
    7. '=' → logprob: -7.909859657287598
    8. '=[]
' → logprob: -8.034859657287598
    9. 'N' → logprob: -8.159859657287598
    10. 'SW' → logprob: -8.284859657287598

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231501460075378
    2. '=' → logprob: -0.8981501460075378
    3. '=[]' → logprob: -11.023150444030762
    4. ',' → logprob: -12.523150444030762
    5. '=[' → logprob: -13.148150444030762
    6. '[' → logprob: -13.523150444030762
    7. ']' → logprob: -13.898150444030762
    8. ':' → logprob: -14.773150444030762
    9. ' ' → logprob: -15.148150444030762
    10. '[:]' → logprob: -15.148150444030762

Token 270: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6572015285491943
    2. '[]' → logprob: -0.7822015285491943
    3. '[-' → logprob: -4.032201766967773
    4. '0' → logprob: -5.907201766967773
    5. '[n' → logprob: -6.532201766967773
    6. '[]
' → logprob: -6.657201766967773
    7. ' []' → logprob: -8.032201766967773
    8. '{}' → logprob: -8.282201766967773
    9. ' [' → logprob: -8.907201766967773
    10. '[]

' → logprob: -9.782201766967773

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10160750150680542
    2. ' while' → logprob: -2.85160756111145
    3. 'while' → logprob: -3.72660756111145
    4. '
' → logprob: -4.476607322692871
    5. '	while' → logprob: -6.351607322692871
    6. '<|end|>' → logprob: -7.226607322692871
    7. '    
' → logprob: -7.351607322692871
    8. 'While' → logprob: -9.101607322692871
    9. '  
' → logprob: -10.601607322692871
    10. ')' → logprob: -10.726607322692871

Token 272: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10968855768442154
    2. ' while' → logprob: -2.3596885204315186
    3. '   ' → logprob: -4.734688758850098
    4. 'ct' → logprob: -8.109688758850098
    5. '	while' → logprob: -8.484688758850098
    6. 'def' → logprob: -9.734688758850098
    7. 'While' → logprob: -10.984688758850098
    8. ')' → logprob: -11.609688758850098
    9. ' ' → logprob: -11.609688758850098
    10. 'Q' → logprob: -11.859688758850098

Token 273: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5916788578033447
    2. 'i' → logprob: -1.7166788578033447
    3. 'u' → logprob: -2.5916788578033447
    4. 'v' → logprob: -3.0916788578033447
    5. ' i' → logprob: -3.2166788578033447
    6. 'k' → logprob: -3.4666788578033447
    7. ' _' → logprob: -3.7166788578033447
    8. ' u' → logprob: -4.091678619384766
    9. ' v' → logprob: -4.841678619384766
    10. 'q' → logprob: -5.216678619384766

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40860581398010254
    2. 'in' → logprob: -1.9086058139801025
    3. 'range' → logprob: -1.9086058139801025
    4. ' range' → logprob: -3.9086058139801025
    5. 'Q' → logprob: -4.408605575561523
    6. 'i' → logprob: -6.158605575561523
    7. '_' → logprob: -6.533605575561523
    8. 'ET' → logprob: -6.658605575561523
    9. '0' → logprob: -8.033605575561523
    10. 'P' → logprob: -8.783605575561523

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007918547838926315
    2. ' range' → logprob: -5.132918357849121
    3. 'Q' → logprob: -6.257918357849121
    4. '(range' → logprob: -10.007918357849121
    5. 'ET' → logprob: -11.257918357849121
    6. 'P' → logprob: -12.382918357849121
    7. '(' → logprob: -12.757918357849121
    8. '[' → logprob: -13.382918357849121
    9. 'X' → logprob: -13.757918357849121
    10. 'TMP' → logprob: -14.007918357849121

Token 276: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00495800469070673
    2. 'n' → logprob: -5.629958152770996
    3. '(' → logprob: -6.879958152770996
    4. '(N' → logprob: -8.754958152770996
    5. ' (' → logprob: -9.504958152770996
    6. '(len' → logprob: -10.129958152770996
    7. '(
' → logprob: -11.379958152770996
    8. '(_' → logprob: -11.504958152770996
    9. '((' → logprob: -12.004958152770996
    10. 'N' → logprob: -12.254958152770996

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10152027755975723
    2. '):' → logprob: -2.351520299911499
    3. '   ' → logprob: -7.10152006149292
    4. '+' → logprob: -8.976520538330078
    5. ':
' → logprob: -9.351520538330078
    6. ')' → logprob: -9.476520538330078
    7. '):
' → logprob: -10.226520538330078
    8. ':' → logprob: -10.226520538330078
    9. ' ):
' → logprob: -10.351520538330078
    10. '*' → logprob: -10.726520538330078

Token 278: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008093342185020447
    2. '       ' → logprob: -5.008093357086182
    3. 'ANS' → logprob: -6.883093357086182
    4. ' AN' → logprob: -8.133092880249023
    5. 'ET' → logprob: -11.008092880249023
    6. 'AN' → logprob: -11.508092880249023
    7. 'ANTLR' → logprob: -11.883092880249023
    8. ' ET' → logprob: -12.383092880249023
    9. '<|end|>' → logprob: -13.133092880249023
    10. ' ' → logprob: -13.383092880249023

Token 279: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.031642843037843704
    2. '   ' → logprob: -3.5316429138183594
    3. ' AN' → logprob: -7.281642913818359
    4. 'ET' → logprob: -8.03164291381836
    5. 'ANSWER' → logprob: -9.03164291381836
    6. ' ' → logprob: -9.53164291381836
    7. '  ' → logprob: -10.03164291381836
    8. '       ' → logprob: -10.03164291381836
    9. 'PASS' → logprob: -10.03164291381836
    10. '0' → logprob: -10.15664291381836

Token 280: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.676292231422849e-05
    2. '.append' → logprob: -13.500017166137695
    3. '   ' → logprob: -13.562517166137695
    4. ' S' → logprob: -13.812517166137695
    5. '(S' → logprob: -13.875017166137695
    6. '[S' → logprob: -14.000017166137695
    7. '=' → logprob: -14.187517166137695
    8. '
' → logprob: -14.375017166137695
    9. '```' → logprob: -14.375017166137695
    10. ' =' → logprob: -14.500017166137695

Token 281: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.908022285439074e-05
    2. '.' → logprob: -9.750059127807617
    3. 'append' → logprob: -14.625059127807617
    4. '.app' → logprob: -15.500059127807617
    5. ' .' → logprob: -17.750059127807617
    6. '.clear' → logprob: -17.875059127807617
    7. '.ap' → logprob: -17.875059127807617
    8. '.extend' → logprob: -18.000059127807617
    9. '=' → logprob: -18.375059127807617
    10. '   ' → logprob: -19.000059127807617

Token 282: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045772403478622437
    2. '(-' → logprob: -3.5457723140716553
    3. '([]' → logprob: -4.795772552490234
    4. '0' → logprob: -5.045772552490234
    5. '(None' → logprob: -7.045772552490234
    6. '-' → logprob: -9.420772552490234
    7. '[]' → logprob: -9.420772552490234
    8. '(False' → logprob: -9.920772552490234
    9. '([' → logprob: -10.045772552490234
    10. '((' → logprob: -10.920772552490234

Token 283: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5438339114189148
    2. '(ct' → logprob: -1.5438339710235596
    3. '(_' → logprob: -1.7938339710235596
    4. '(_)' → logprob: -3.7938339710235596
    5. '(n' → logprob: -5.0438337326049805
    6. '_)' → logprob: -6.2938337326049805
    7. '(len' → logprob: -6.4188337326049805
    8. '_' → logprob: -6.5438337326049805
    9. '_(' → logprob: -6.6688337326049805
    10. ')' → logprob: -6.9188337326049805

Token 284: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2003379464149475
    2. '-' → logprob: -2.2003378868103027
    3. ')' → logprob: -2.8253378868103027
    4. ' -' → logprob: -5.450337886810303
    5. ')))' → logprob: -6.450337886810303
    6. ')+' → logprob: -7.200337886810303
    7. '+' → logprob: -7.200337886810303
    8. '_' → logprob: -7.200337886810303
    9. '(n' → logprob: -7.700337886810303
    10. ')-' → logprob: -7.825337886810303

Token 285: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7579279541969299
    2. 'while' → logprob: -1.1329278945922852
    3. '   ' → logprob: -1.6329278945922852
    4. '
' → logprob: -4.882927894592285
    5. '<|end|>' → logprob: -5.757927894592285
    6. '	while' → logprob: -7.007927894592285
    7. ' ' → logprob: -7.507927894592285
    8. ')' → logprob: -7.757927894592285
    9. '```' → logprob: -8.257927894592285
    10. 'While' → logprob: -8.632927894592285

Token 286: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.034210339188575745
    2. ' while' → logprob: -3.409210443496704
    3. '   ' → logprob: -8.034210205078125
    4. 'ct' → logprob: -8.659210205078125
    5. ')' → logprob: -10.659210205078125
    6. 'def' → logprob: -11.159210205078125
    7. 'While' → logprob: -11.909210205078125
    8. ' ' → logprob: -12.409210205078125
    9. '	while' → logprob: -12.534210205078125
    10. '
' → logprob: -12.784210205078125

Token 287: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.05440777540206909
    2. 'Q' → logprob: -3.429407835006714
    3. ' len' → logprob: -3.929407835006714
    4. 'len' → logprob: -7.429407596588135
    5. '(Q' → logprob: -8.929408073425293
    6. '(len' → logprob: -9.054408073425293
    7. ' ' → logprob: -10.304408073425293
    8. '	Q' → logprob: -11.929408073425293
    9. '   ' → logprob: -12.679408073425293
    10. ' not' → logprob: -13.679408073425293

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0228887852281332
    2. ':
' → logprob: -4.147888660430908
    3. '.pop' → logprob: -5.522888660430908
    4. '[-' → logprob: -6.147888660430908
    5. 'pop' → logprob: -7.522888660430908
    6. '!=' → logprob: -10.147889137268066
    7. '```' → logprob: -10.647889137268066
    8. 'and' → logprob: -10.772889137268066
    9. '):' → logprob: -11.147889137268066
    10. '):
' → logprob: -11.147889137268066

Token 289: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2225888967514038
    2. '       ' → logprob: -1.4725888967514038
    3. 'i' → logprob: -1.7225888967514038
    4. '   ' → logprob: -2.3475890159606934
    5. ' i' → logprob: -2.5975890159606934
    6. 'k' → logprob: -2.9725890159606934
    7. ' v' → logprob: -3.3475890159606934
    8. 'q' → logprob: -4.722589015960693
    9. 'u' → logprob: -4.722589015960693
    10. ' k' → logprob: -4.972589015960693

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.7648484110832214
    2. 'k' → logprob: -1.7648484706878662
    3. 'v' → logprob: -1.8898484706878662
    4. 'x' → logprob: -2.139848470687866
    5. 'a' → logprob: -4.139848232269287
    6. 'u' → logprob: -4.139848232269287
    7. 't' → logprob: -4.389848232269287
    8. 'c' → logprob: -4.639848232269287
    9. 'p' → logprob: -4.639848232269287
    10. 'q' → logprob: -4.764848232269287

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5343083143234253
    2. ' =' → logprob: -0.9093083143234253
    3. '0' → logprob: -4.534308433532715
    4. 'd' → logprob: -9.159308433532715
    5. '   ' → logprob: -9.534308433532715
    6. '=i' → logprob: -10.159308433532715
    7. ' ' → logprob: -10.159308433532715
    8. 's' → logprob: -10.659308433532715
    9. '1' → logprob: -10.909308433532715
    10. '_' → logprob: -11.784308433532715

Token 292: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.003178901970386505
    2. ' Q' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.378178596496582
    4. ' ' → logprob: -14.378178596496582
    5. '  ' → logprob: -17.3781795501709
    6. '	Q' → logprob: -17.6281795501709
    7. '    ' → logprob: -19.3781795501709
    8. 'q' → logprob: -19.5031795501709
    9. 'len' → logprob: -20.0031795501709
    10. 'int' → logprob: -20.1281795501709

Token 293: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.309382373117842e-05
    2. '.' → logprob: -11.000033378601074
    3. 'pop' → logprob: -11.375033378601074
    4. ' .' → logprob: -12.625033378601074
    5. '[-' → logprob: -13.750033378601074
    6. '=' → logprob: -15.000033378601074
    7. '.append' → logprob: -16.750032424926758
    8. '   ' → logprob: -17.750032424926758
    9. ' =' → logprob: -18.125032424926758
    10. '].' → logprob: -18.250032424926758

Token 294: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2246291337069124e-05
    2. '()
' → logprob: -10.750021934509277
    3. '(' → logprob: -14.375021934509277
    4. '()

' → logprob: -16.125022888183594
    5. '()\' → logprob: -18.250022888183594
    6. '();' → logprob: -18.375022888183594
    7. '()`' → logprob: -19.125022888183594
    8. '()]' → logprob: -19.125022888183594
    9. '())' → logprob: -19.625022888183594
    10. '()
' → logprob: -19.750022888183594

Token 295: '       ' (ID: 309)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3446302115917206
    2. 'if' → logprob: -2.094630241394043
    3. '   ' → logprob: -2.469630241394043
    4. '       ' → logprob: -3.094630241394043
    5. ' if' → logprob: -3.719630241394043
    6. ' ct' → logprob: -4.594630241394043
    7. '	ct' → logprob: -5.594630241394043
    8. '(ct' → logprob: -8.594630241394043
    9. ' ' → logprob: -9.219630241394043
    10. '
' → logprob: -10.469630241394043

Token 296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05059709772467613
    2. 'ct' → logprob: -3.0505971908569336
    3. '   ' → logprob: -6.425597190856934
    4. '       ' → logprob: -8.050597190856934
    5. ' if' → logprob: -10.050597190856934
    6. 'ANS' → logprob: -12.175597190856934
    7. 'USED' → logprob: -12.425597190856934
    8. '	ct' → logprob: -12.425597190856934
    9. '	if' → logprob: -12.800597190856934
    10. 'cts' → logprob: -13.425597190856934

Token 297: ' i' (ID: 575)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.6419416069984436
    2. 'i' → logprob: -0.7669416069984436
    3. 'not' → logprob: -5.766941547393799
    4. '~' → logprob: -6.141941547393799
    5. ' USED' → logprob: -7.016941547393799
    6. 'USE' → logprob: -7.391941547393799
    7. ' i' → logprob: -7.516941547393799
    8. 'used' → logprob: -7.641941547393799
    9. 'NOT' → logprob: -8.016942024230957
    10. ' not' → logprob: -8.391942024230957

Token 298: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.013302345760166645
    2. '<' → logprob: -4.513302326202393
    3. ' >=' → logprob: -6.138302326202393
    4. ' <' → logprob: -9.76330280303955
    5. '==' → logprob: -11.51330280303955
    6. '&' → logprob: -11.76330280303955
    7. '>' → logprob: -12.13830280303955
    8. '≥' → logprob: -12.63830280303955
    9. '[' → logprob: -12.76330280303955
    10. ']>=' → logprob: -13.26330280303955

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.87504005432129
    4. 'O' → logprob: -18.50004005432129
    5. 'n' → logprob: -18.75004005432129
    6. '۰' → logprob: -18.75004005432129
    7. '000' → logprob: -18.87504005432129
    8. '-' → logprob: -19.31254005432129
    9. '=' → logprob: -19.56254005432129
    10. 'i' → logprob: -19.62504005432129

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -16.8750057220459
    4. '000' → logprob: -17.5000057220459
    5. '۰' → logprob: -17.6250057220459
    6. 'O' → logprob: -18.0000057220459
    7. 'n' → logprob: -18.1250057220459
    8. '00' → logprob: -18.3750057220459
    9. '```' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.6250057220459

Token 301: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22560594975948334
    2. ':' → logprob: -1.6006059646606445
    3. '       ' → logprob: -8.975605964660645
    4. '):
' → logprob: -10.725605964660645
    5. ' :
' → logprob: -10.975605964660645
    6. '   ' → logprob: -11.350605964660645
    7. ':

' → logprob: -12.600605964660645
    8. ' and' → logprob: -12.725605964660645
    9. ':
' → logprob: -12.850605964660645
    10. ' :' → logprob: -13.225605964660645

Token 302: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6938429474830627
    2. 'ct' → logprob: -0.8188429474830627
    3. '           ' → logprob: -2.943842887878418
    4. '   ' → logprob: -5.568842887878418
    5. ' ct' → logprob: -7.068842887878418
    6. 'continue' → logprob: -7.443842887878418
    7. 'P' → logprob: -8.068842887878418
    8. 'i' → logprob: -8.193842887878418
    9. 'CT' → logprob: -8.318842887878418
    10. 'ET' → logprob: -8.568842887878418

Token 303: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18174223601818085
    2. 'ct' → logprob: -1.9317421913146973
    3. 'ANS' → logprob: -4.681742191314697
    4. 'ET' → logprob: -6.056742191314697
    5. '   ' → logprob: -6.431742191314697
    6. 'idx' → logprob: -6.556742191314697
    7. 'v' → logprob: -6.931742191314697
    8. 'ans' → logprob: -7.181742191314697
    9. 'x' → logprob: -7.306742191314697
    10. 'u' → logprob: -7.431742191314697

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22555114328861237
    2. ' =' → logprob: -1.6005511283874512
    3. '=i' → logprob: -8.97555160522461
    4. ']' → logprob: -13.10055160522461
    5. '=int' → logprob: -13.10055160522461
    6. '=index' → logprob: -13.35055160522461
    7. ')' → logprob: -14.47555160522461
    8. ',' → logprob: -14.60055160522461
    9. '=end' → logprob: -14.85055160522461
    10. '=j' → logprob: -14.97555160522461

Token 305: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.0026051488239318132
    2. 'Q' → logprob: -6.252604961395264
    3. 'i' → logprob: -8.502605438232422
    4. ' ~' → logprob: -8.627605438232422
    5. 'P' → logprob: -8.877605438232422
    6. '~-' → logprob: -10.252605438232422
    7. '-' → logprob: -10.502605438232422
    8. '-Q' → logprob: -10.627605438232422
    9. '(~' → logprob: -11.002605438232422
    10. 'abs' → logprob: -11.377605438232422

Token 306: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.935296834039036e-06
    2. ' i' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.50000286102295
    4. ' ' → logprob: -16.250003814697266
    5. '
' → logprob: -17.125003814697266
    6. '           ' → logprob: -17.375003814697266
    7. '       ' → logprob: -17.500003814697266
    8. '	i' → logprob: -17.875003814697266
    9. '(i' → logprob: -18.000003814697266
    10. '[' → logprob: -18.312503814697266

Token 307: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007880675257183611
    2. '
' → logprob: -8.250787734985352
    3. ' ET' → logprob: -9.125787734985352
    4. '<|end|>' → logprob: -9.375787734985352
    5. 'ET' → logprob: -9.625787734985352
    6. '       ' → logprob: -9.625787734985352
    7. '   ' → logprob: -10.375787734985352
    8. '#' → logprob: -10.875787734985352
    9. ' ' → logprob: -10.875787734985352
    10. '            
' → logprob: -11.000787734985352

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018265005201101303
    2. '       ' → logprob: -4.2682647705078125
    3. '   ' → logprob: -6.3932647705078125
    4. 'ET' → logprob: -6.7682647705078125
    5. ' ET' → logprob: -7.2682647705078125
    6. '
' → logprob: -8.393264770507812
    7. ',' → logprob: -10.018264770507812
    8. '#' → logprob: -10.268264770507812
    9. 'else' → logprob: -10.643264770507812
    10. '            
' → logprob: -10.893264770507812

Token 309: ' ET' (ID: 23345)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.2090801000595093
    2. 'ANS' → logprob: -1.4590801000595093
    3. 'USED' → logprob: -1.5840801000595093
    4. 'ET' (adapté à ' ET') → logprob: -1.7090801000595093
    5. 'P' → logprob: -3.334080219268799
    6. 'if' → logprob: -3.459080219268799
    7. 'for' → logprob: -5.459080219268799
    8. 'ORG' → logprob: -5.584080219268799
    9. 'CT' → logprob: -6.334080219268799
    10. '   ' → logprob: -6.334080219268799

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759401917457581
    2. '1' → logprob: -0.8259401917457581
    3. '[' → logprob: -15.575940132141113
    4. '

' → logprob: -16.38844108581543
    5. '```' → logprob: -16.63844108581543
    6. '１' → logprob: -17.01344108581543
    7. '２' → logprob: -17.32594108581543
    8. '₂' → logprob: -17.63844108581543
    9. '   ' → logprob: -17.70094108581543
    10. '۲' → logprob: -17.82594108581543

Token 311: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.25001335144043
    3. 'j' → logprob: -15.00001335144043
    4. '[i' → logprob: -15.50001335144043
    5. ' [' → logprob: -17.62501335144043
    6. '][' → logprob: -18.37501335144043
    7. '[js' → logprob: -18.75001335144043
    8. '[q' → logprob: -18.75001335144043
    9. ',j' → logprob: -18.87501335144043
    10. ']' → logprob: -19.00001335144043

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4632398188114166
    2. '=' → logprob: -1.2132397890090942
    3. ' =' → logprob: -2.963239908218384
    4. ']=' → logprob: -3.838239908218384
    5. ')' → logprob: -8.588239669799805
    6. ' ]' → logprob: -9.213239669799805
    7. ')=' → logprob: -10.213239669799805
    8. '=j' → logprob: -11.588239669799805
    9. ']+=' → logprob: -12.838239669799805
    10. ',' → logprob: -13.463239669799805

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020752996206284
    2. ' =' → logprob: -2.350207567214966
    3. '=j' → logprob: -14.725207328796387
    4. ')' → logprob: -15.975207328796387
    5. '=i' → logprob: -15.975207328796387
    6. '[' → logprob: -16.475208282470703
    7. ',' → logprob: -17.100208282470703
    8. '+=' → logprob: -17.350208282470703
    9. ']' → logprob: -17.600208282470703
    10. '=int' → logprob: -17.600208282470703

Token 314: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -7.584239938296378e-06
    2. ' ct' → logprob: -11.875007629394531
    3. '	ct' → logprob: -15.500007629394531
    4. 'len' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.50000762939453
    6. 'c' → logprob: -16.50000762939453
    7. '(ct' → logprob: -16.50000762939453
    8. ' ' → logprob: -17.75000762939453
    9. '++' → logprob: -17.87500762939453
    10. '  ' → logprob: -19.00000762939453

Token 315: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.553463876247406
    2. '<|end|>' → logprob: -1.8034639358520508
    3. '           ' → logprob: -2.428463935852051
    4. '       ' → logprob: -2.428463935852051
    5. '<|end|>' → logprob: -2.803463935852051
    6. '   ' → logprob: -4.053463935852051
    7. '
' → logprob: -6.678463935852051
    8. '\n' → logprob: -6.928463935852051
    9. ' 
' → logprob: -7.928463935852051
    10. '               ' → logprob: -8.05346393585205

Token 316: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6211430430412292
    2. '<|end|>' → logprob: -1.871143102645874
    3. '
' → logprob: -2.246143102645874
    4. '           ' → logprob: -2.371143102645874
    5. '   ' → logprob: -2.496143102645874
    6. '<|end|>' → logprob: -5.246142864227295
    7. '+' → logprob: -5.621142864227295
    8. '	ct' → logprob: -5.871142864227295
    9. ' 
' → logprob: -6.246142864227295
    10. 'ct' → logprob: -6.246142864227295

Token 317: ' USED' (ID: 129384)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5440170764923096
    2. ' continue' → logprob: -0.9190170764923096
    3. '       ' → logprob: -4.2940168380737305
    4. 'ct' → logprob: -5.5440168380737305
    5. '   ' → logprob: -6.4190168380737305
    6. ' ct' → logprob: -7.4190168380737305
    7. 'else' → logprob: -7.7940168380737305
    8. '	continue' → logprob: -8.66901683807373
    9. ' else' → logprob: -8.79401683807373
    10. '           ' → logprob: -9.91901683807373

Token 318: '[C' (ID: 107876)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00685805082321167
    2. '[i' → logprob: -5.006857872009277
    3. '[' → logprob: -8.881857872009277
    4. 'j' → logprob: -12.881857872009277
    5. ' [' → logprob: -15.006857872009277
    6. '=' → logprob: -15.506857872009277
    7. '=j' → logprob: -16.131858825683594
    8. '[t' → logprob: -16.756858825683594
    9. '[q' → logprob: -17.006858825683594
    10. ',j' → logprob: -17.256858825683594

Token 319: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0023678012657910585
    2. ']' → logprob: -7.002367973327637
    3. 'j' → logprob: -7.252367973327637
    4. '[i' → logprob: -7.877367973327637
    5. '[' → logprob: -8.002367973327637
    6. '][' → logprob: -11.252367973327637
    7. '[C' → logprob: -12.002367973327637
    8. ']==' → logprob: -13.127367973327637
    9. '])' → logprob: -13.252367973327637
    10. ' [' → logprob: -13.377367973327637

Token 320: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004445431753993034
    2. ']+=' → logprob: -6.379445552825928
    3. ']==' → logprob: -6.504445552825928
    4. ']]' → logprob: -6.879445552825928
    5. ']+' → logprob: -9.37944507598877
    6. ']=' → logprob: -9.75444507598877
    7. ' ]' → logprob: -10.00444507598877
    8. ']!=' → logprob: -11.12944507598877
    9. ']-' → logprob: -12.87944507598877
    10. ']]=' → logprob: -13.12944507598877

Token 321: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8282233476638794
    2. ' +=' → logprob: -1.4532233476638794
    3. '=' → logprob: -1.7032233476638794
    4. ' -=' → logprob: -2.45322322845459
    5. '-=' → logprob: -3.32822322845459
    6. ' =' → logprob: -3.70322322845459
    7. ' |=' → logprob: -7.45322322845459
    8. '==' → logprob: -10.32822322845459
    9. ' ^=' → logprob: -10.32822322845459
    10. '-' → logprob: -10.57822322845459

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012451570364646614
    2. '-' → logprob: -9.12512493133545
    3. ' ' → logprob: -11.12512493133545
    4. ' -' → logprob: -14.75012493133545
    5. '2' → logprob: -15.37512493133545
    6. '0' → logprob: -15.75012493133545
    7. '   ' → logprob: -17.125123977661133
    8. '+' → logprob: -17.875123977661133
    9. 'ct' → logprob: -17.875123977661133
    10. '3' → logprob: -19.125123977661133

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001036383560858667
    2. '-' → logprob: -6.876036167144775
    3. ' ' → logprob: -12.751036643981934
    4. ' -' → logprob: -14.376036643981934
    5. 'ct' → logprob: -16.751035690307617
    6. '2' → logprob: -16.876035690307617
    7. '0' → logprob: -17.376035690307617
    8. '+' → logprob: -18.751035690307617
    9. '   ' → logprob: -19.001035690307617
    10. ')' → logprob: -19.626035690307617

Token 324: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03269270062446594
    2. '<|end|>' → logprob: -3.9076926708221436
    3. '\n' → logprob: -5.282692909240723
    4. ' 
' → logprob: -6.407692909240723
    5. '
' → logprob: -6.532692909240723
    6. '   ' → logprob: -6.782692909240723
    7. '  
' → logprob: -6.907692909240723
    8. '<|end|>' → logprob: -7.907692909240723
    9. '    
' → logprob: -8.157692909240723
    10. '' → logprob: -8.407692909240723

Token 325: ' TMP' (ID: 121022)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23737458884716034
    2. 'TMP' → logprob: -2.7373745441436768
    3. ' TMP' → logprob: -2.8623745441436768
    4. ' ' → logprob: -3.1123745441436768
    5. 'ET' → logprob: -4.112374782562256
    6. '1' → logprob: -4.987374782562256
    7. 'ct' → logprob: -5.487374782562256
    8. 'CT' → logprob: -6.112374782562256
    9. 'ANS' → logprob: -6.362374782562256
    10. ' ET' → logprob: -6.362374782562256

Token 326: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5920268893241882
    2. '[C' → logprob: -0.8420268893241882
    3. '[i' → logprob: -4.842026710510254
    4. '[' → logprob: -5.467026710510254
    5. '[c' → logprob: -5.717026710510254
    6. 'j' → logprob: -8.342026710510254
    7. 'C' → logprob: -8.717026710510254
    8. '[
' → logprob: -10.842026710510254
    9. '[-' → logprob: -11.717026710510254
    10. ' [' → logprob: -11.842026710510254

Token 327: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01344749890267849
    2. '[j' → logprob: -5.013447284698486
    3. ']
' → logprob: -5.638447284698486
    4. '[' → logprob: -7.138447284698486
    5. ' ]' → logprob: -7.388447284698486
    6. '[i' → logprob: -7.513447284698486
    7. '
' → logprob: -7.888447284698486
    8. '-' → logprob: -8.138447761535645
    9. '<|end|>' → logprob: -8.763447761535645
    10. '[
' → logprob: -9.638447761535645

Token 328: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014151754789054394
    2. '<|end|>' → logprob: -4.764151573181152
    3. '
' → logprob: -6.389151573181152
    4. '	ct' → logprob: -6.764151573181152
    5. '           ' → logprob: -7.514151573181152
    6. 'ct' → logprob: -7.764151573181152
    7. '       ' → logprob: -8.139151573181152
    8. '   ' → logprob: -8.139151573181152
    9. '<|end|>' → logprob: -8.389151573181152
    10. ' 
' → logprob: -8.764151573181152

Token 329: ' if' (ID: 538)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.12063493579626083
    2. ' ct' → logprob: -2.2456350326538086
    3. '	ct' → logprob: -5.620635032653809
    4. 'continue' → logprob: -6.745635032653809
    5. '   ' → logprob: -6.870635032653809
    6. 'ANS' → logprob: -7.870635032653809
    7. 'ET' → logprob: -8.495635032653809
    8. ' continue' → logprob: -8.495635032653809
    9. '(ct' → logprob: -8.620635032653809
    10. 'CT' → logprob: -8.620635032653809

Token 330: ' j' (ID: 441)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.9789285659790039
    2. ' TMP' → logprob: -0.9789285659790039
    3. 'USED' → logprob: -2.353928565979004
    4. ' USED' → logprob: -2.728928565979004
    5. 'C' → logprob: -3.728928565979004
    6. 'CT' → logprob: -4.728928565979004
    7. ' C' → logprob: -4.853928565979004
    8. ' not' → logprob: -5.103928565979004
    9. 'tmp' → logprob: -5.478928565979004
    10. ' CT' → logprob: -5.853928565979004

Token 331: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8322392106056213
    2. '!=' → logprob: -1.8322391510009766
    3. ' in' → logprob: -1.8322391510009766
    4. ' ==' → logprob: -2.3322391510009766
    5. ' !=' → logprob: -2.5822391510009766
    6. ' not' → logprob: -3.5822391510009766
    7. ']' → logprob: -3.8322391510009766
    8. ']==' → logprob: -5.207239151000977
    9. 'in' → logprob: -5.457239151000977
    10. ')' → logprob: -5.707239151000977

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0071765948086977005
    2. ' ' → logprob: -5.007176399230957
    3. '=' → logprob: -8.132176399230957
    4. '-' → logprob: -9.382176399230957
    5. 'i' → logprob: -9.757176399230957
    6. ' -' → logprob: -11.507176399230957
    7. ' i' → logprob: -11.757176399230957
    8. 'ct' → logprob: -13.507176399230957
    9. '_' → logprob: -13.507176399230957
    10. '1' → logprob: -13.882176399230957

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003582263889256865
    2. '-' → logprob: -8.125358581542969
    3. ' ' → logprob: -10.125358581542969
    4. 'i' → logprob: -11.000358581542969
    5. '1' → logprob: -13.625358581542969
    6. ' -' → logprob: -13.625358581542969
    7. '=' → logprob: -14.125358581542969
    8. '   ' → logprob: -14.250358581542969
    9. 'N' → logprob: -15.500358581542969
    10. 'ct' → logprob: -15.937858581542969

Token 334: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38576728105545044
    2. ':' → logprob: -1.5107672214508057
    3. ':
' → logprob: -2.3857672214508057
    4. '       ' → logprob: -6.260767459869385
    5. '   ' → logprob: -6.510767459869385
    6. 'and' → logprob: -6.635767459869385
    7. ' :' → logprob: -7.135767459869385
    8. '==' → logprob: -7.510767459869385
    9. ' :
' → logprob: -7.635767459869385
    10. ' or' → logprob: -8.385766983032227

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008109898306429386
    2. ' ET' → logprob: -6.133110046386719
    3. ' CT' → logprob: -6.633110046386719
    4. '           ' → logprob: -6.758110046386719
    5. '                   ' → logprob: -7.008110046386719
    6. ' P' → logprob: -7.133110046386719
    7. ' AN' → logprob: -7.508110046386719
    8. '   ' → logprob: -8.633110046386719
    9. ' for' → logprob: -8.633110046386719
    10. ' Q' → logprob: -9.133110046386719

Token 336: ' p' (ID: 275)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.6171437501907349
    2. ' TMP' → logprob: -1.6171437501907349
    3. '               ' → logprob: -2.4921436309814453
    4. '                   ' → logprob: -2.7421436309814453
    5. 'tmp' → logprob: -3.3671436309814453
    6. '   ' → logprob: -3.9921436309814453
    7. 'k' → logprob: -4.242143630981445
    8. ' tmp' → logprob: -4.742143630981445
    9. 'P' → logprob: -5.242143630981445
    10. ' k' → logprob: -5.242143630981445

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44459453225135803
    2. '=' → logprob: -1.0695945024490356
    3. '=P' → logprob: -4.569594383239746
    4. 'P' → logprob: -5.694594383239746
    5. 'p' → logprob: -6.694594383239746
    6. '=C' → logprob: -8.319594383239746
    7. '   ' → logprob: -9.194594383239746
    8. 'j' → logprob: -9.319594383239746
    9. 'i' → logprob: -9.694594383239746
    10. '=j' → logprob: -10.069594383239746

Token 338: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.4987974029500037e-05
    2. ' P' → logprob: -11.500024795532227
    3. '   ' → logprob: -12.125024795532227
    4. 'p' → logprob: -12.250024795532227
    5. 'j' → logprob: -12.625024795532227
    6. 'C' → logprob: -15.125024795532227
    7. '           ' → logprob: -15.375024795532227
    8. 'i' → logprob: -15.875024795532227
    9. '       ' → logprob: -15.875024795532227
    10. '	P' → logprob: -16.375024795532227

Token 339: '[j' (ID: 7895)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.538490950129926e-05
    2. '[j' → logprob: -9.875055313110352
    3. ' j' → logprob: -13.125055313110352
    4. 'i' → logprob: -13.750055313110352
    5. '   ' → logprob: -15.500055313110352
    6. 'p' → logprob: -15.625055313110352
    7. '[' → logprob: -15.750055313110352
    8. '	j' → logprob: -15.875055313110352
    9. '       ' → logprob: -17.62505531311035
    10. '           ' → logprob: -18.00005531311035

Token 340: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0393677949905396
    2. '[j' → logprob: -1.0393677949905396
    3. 'j' → logprob: -1.4143677949905396
    4. ']
' → logprob: -3.03936767578125
    5. '           ' → logprob: -7.16436767578125
    6. '       ' → logprob: -8.91436767578125
    7. '[i' → logprob: -9.16436767578125
    8. '               ' → logprob: -9.16436767578125
    9. '   ' → logprob: -9.28936767578125
    10. '[' → logprob: -9.53936767578125

Token 341: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010813522152602673
    2. '           ' → logprob: -5.1358137130737305
    3. 'if' → logprob: -6.3858137130737305
    4. 'TMP' → logprob: -6.6358137130737305
    5. '       ' → logprob: -7.0108137130737305
    6. '                   ' → logprob: -8.13581371307373
    7. '   ' → logprob: -8.63581371307373
    8. 'for' → logprob: -8.76081371307373
    9. 'ET' → logprob: -9.76081371307373
    10. 'T' → logprob: -9.88581371307373

Token 342: ' k' (ID: 372)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.06539031863212585
    2. 'USED' → logprob: -3.4403903484344482
    3. 'if' → logprob: -3.6903903484344482
    4. '   ' → logprob: -5.690390110015869
    5. '           ' → logprob: -7.065390110015869
    6. ' TMP' → logprob: -7.940390110015869
    7. 'tmp' → logprob: -8.065390586853027
    8. '               ' → logprob: -8.440390586853027
    9. ' if' → logprob: -8.440390586853027
    10. 'TEMP' → logprob: -8.690390586853027

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12487345933914185
    2. '=' → logprob: -2.249873399734497
    3. '=C' → logprob: -4.874873638153076
    4. 'p' → logprob: -6.374873638153076
    5. 'TMP' → logprob: -7.499873638153076
    6. 'C' → logprob: -7.874873638153076
    7. '   ' → logprob: -8.874873161315918
    8. 'k' → logprob: -8.874873161315918
    9. 'j' → logprob: -8.999873161315918
    10. ' ' → logprob: -8.999873161315918

Token 344: ' ET' (ID: 23345)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.2789943218231201
    2. 'C' → logprob: -2.02899432182312
    3. 'TMP' → logprob: -2.52899432182312
    4. ' USED' → logprob: -3.77899432182312
    5. 'CT' → logprob: -6.278994560241699
    6. 'ET' → logprob: -6.278994560241699
    7. '1' → logprob: -7.278994560241699
    8. ' TMP' → logprob: -7.528994560241699
    9. '(' → logprob: -7.653994560241699
    10. 'used' → logprob: -7.653994560241699

Token 345: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858986660838127
    2. '2' → logprob: -3.0485899448394775
    3. 'p' → logprob: -14.861089706420898
    4. ' ' → logprob: -15.548589706420898
    5. '```' → logprob: -15.611089706420898
    6. '[' → logprob: -15.986089706420898
    7. '' → logprob: -16.2360897064209
    8. '１' → logprob: -16.4235897064209
    9. '(' → logprob: -16.4860897064209
    10. 'P' → logprob: -16.7360897064209

Token 346: '[j' (ID: 7895)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.011790191754698753
    2. 'p' → logprob: -4.8867902755737305
    3. '[j' → logprob: -5.5117902755737305
    4. 'j' → logprob: -9.63679027557373
    5. '[' → logprob: -10.26179027557373
    6. '[P' → logprob: -10.76179027557373
    7. '[i' → logprob: -12.13679027557373
    8. '	p' → logprob: -13.51179027557373
    9. '(p' → logprob: -13.76179027557373
    10. '[k' → logprob: -13.88679027557373

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017174800857901573
    2. ']-' → logprob: -4.26717472076416
    3. ']
' → logprob: -6.26717472076416
    4. ']+' → logprob: -7.26717472076416
    5. '[' → logprob: -9.26717472076416
    6. '-' → logprob: -9.26717472076416
    7. ' ]' → logprob: -9.64217472076416
    8. '[p' → logprob: -9.89217472076416
    9. '[j' → logprob: -10.26717472076416
    10. 'p' → logprob: -10.76717472076416

Token 348: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12795615196228027
    2. ' -' → logprob: -2.2529561519622803
    3. '+' → logprob: -4.252956390380859
    4. ' +' → logprob: -7.627956390380859
    5. '
' → logprob: -9.50295639038086
    6. '   ' → logprob: -9.50295639038086
    7. '       ' → logprob: -10.62795639038086
    8. ' ' → logprob: -10.75295639038086
    9. '           ' → logprob: -10.87795639038086
    10. '[' → logprob: -11.00295639038086

Token 349: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.011088382452726364
    2. '(' → logprob: -4.6360883712768555
    3. '   ' → logprob: -7.7610883712768555
    4. 'ct' → logprob: -7.8860883712768555
    5. '1' → logprob: -9.011088371276855
    6. ' ET' → logprob: -9.011088371276855
    7. '       ' → logprob: -9.511088371276855
    8. 'CT' → logprob: -9.761088371276855
    9. '(ct' → logprob: -10.136088371276855
    10. '           ' → logprob: -10.386088371276855

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. '2' → logprob: -10.375033378601074
    3. 'l' → logprob: -15.750033378601074
    4. '１' → logprob: -16.062532424926758
    5. 'k' → logprob: -16.125032424926758
    6. 'T' → logprob: -16.250032424926758
    7. '۱' → logprob: -16.250032424926758
    8. '' → logprob: -16.500032424926758
    9. '0' → logprob: -16.562532424926758
    10. '১' → logprob: -16.875032424926758

Token 351: '[j' (ID: 7895)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13826832175254822
    2. '[p' → logprob: -2.263268232345581
    3. '[j' → logprob: -4.26326847076416
    4. 'j' → logprob: -4.51326847076416
    5. '[' → logprob: -10.76326847076416
    6. '	p' → logprob: -11.01326847076416
    7. ' p' → logprob: -11.51326847076416
    8. '   ' → logprob: -11.63826847076416
    9. '[i' → logprob: -12.76326847076416
    10. '<p' → logprob: -12.95076847076416

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.057901229709386826
    2. ']
' → logprob: -3.55790114402771
    3. '-' → logprob: -4.432901382446289
    4. ']+' → logprob: -5.432901382446289
    5. ' -' → logprob: -5.682901382446289
    6. '[j' → logprob: -5.932901382446289
    7. ']-' → logprob: -6.307901382446289
    8. ' ]' → logprob: -7.307901382446289
    9. '[' → logprob: -7.307901382446289
    10. '[p' → logprob: -7.432901382446289

Token 353: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3838285505771637
    2. '
' → logprob: -1.7588285207748413
    3. '+' → logprob: -2.758828639984131
    4. '<|end|>' → logprob: -2.758828639984131
    5. ' +' → logprob: -5.258828639984131
    6. '-' → logprob: -5.383828639984131
    7. '                
' → logprob: -6.383828639984131
    8. ' 
' → logprob: -6.508828639984131
    9. ' -' → logprob: -7.383828639984131
    10. '           ' → logprob: -7.508828639984131

Token 354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027087211492471397
    2. ' ' → logprob: -9.00027084350586
    3. '0' → logprob: -9.75027084350586
    4. 'f' → logprob: -10.12527084350586
    5. '2' → logprob: -11.12527084350586
    6. 'TMP' → logprob: -11.62527084350586
    7. '(' → logprob: -12.25027084350586
    8. 'ct' → logprob: -12.50027084350586
    9. 'tmp' → logprob: -12.62527084350586
    10. '   ' → logprob: -13.12527084350586

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001972765428945422
    2. 'f' → logprob: -7.126972675323486
    3. 'TMP' → logprob: -7.376972675323486
    4. ' ' → logprob: -8.751973152160645
    5. '0' → logprob: -9.501973152160645
    6. '(' → logprob: -9.751973152160645
    7. '2' → logprob: -10.126973152160645
    8. '   ' → logprob: -10.501973152160645
    9. 'USED' → logprob: -10.501973152160645
    10. 'C' → logprob: -10.501973152160645

Token 356: ' -' (ID: 533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08067234605550766
    2. '
' → logprob: -2.580672264099121
    3. '<|end|>' → logprob: -7.080672264099121
    4. '                
' → logprob: -8.080672264099121
    5. '
' → logprob: -8.330672264099121
    6. '           ' → logprob: -8.955672264099121
    7. '              ' → logprob: -10.205672264099121
    8. '       ' → logprob: -10.455672264099121
    9. '                ' → logprob: -10.580672264099121
    10. ')
' → logprob: -10.580672264099121

Token 357: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.29520660638809204
    2. '(' → logprob: -1.9202065467834473
    3. 'TMP' → logprob: -3.2952065467834473
    4. '1' → logprob: -3.7952065467834473
    5. '(T' → logprob: -4.420206546783447
    6. ' USED' → logprob: -4.670206546783447
    7. '   ' → logprob: -5.170206546783447
    8. 'ET' → logprob: -5.545206546783447
    9. 'f' → logprob: -5.670206546783447
    10. '(U' → logprob: -5.670206546783447

Token 358: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.00020663968462031335
    2. '[' → logprob: -9.37520694732666
    3. '[c' → logprob: -10.12520694732666
    4. '[P' → logprob: -10.25020694732666
    5. '(C' → logprob: -11.25020694732666
    6. 'C' → logprob: -11.37520694732666
    7. '[T' → logprob: -12.50020694732666
    8. ' [' → logprob: -12.62520694732666
    9. '[p' → logprob: -12.75020694732666
    10. '[j' → logprob: -12.87520694732666

Token 359: '[p' (ID: 23234)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04022253304719925
    2. '[p' → logprob: -3.290222644805908
    3. 'j' → logprob: -6.290222644805908
    4. 'p' → logprob: -8.29022216796875
    5. '[P' → logprob: -10.91522216796875
    6. '[' → logprob: -11.04022216796875
    7. ']' → logprob: -11.66522216796875
    8. ' [' → logprob: -11.79022216796875
    9. '[i' → logprob: -12.29022216796875
    10. '][' → logprob: -12.66522216796875

Token 360: ']]' (ID: 8928)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.26413795351982117
    2. ']' → logprob: -2.3891379833221436
    3. 'p' → logprob: -2.5141379833221436
    4. ']]' → logprob: -3.1391379833221436
    5. '[j' → logprob: -4.5141377449035645
    6. '])' → logprob: -6.7641377449035645
    7. ']])' → logprob: -6.8891377449035645
    8. '[' → logprob: -6.8891377449035645
    9. 'j' → logprob: -7.3891377449035645
    10. '][' → logprob: -7.7641377449035645

Token 361: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0401235967874527
    2. '               ' → logprob: -4.540123462677002
    3. ' 
' → logprob: -4.540123462677002
    4. '<|end|>' → logprob: -5.290123462677002
    5. ')' → logprob: -5.915123462677002
    6. ')
' → logprob: -6.165123462677002
    7. '  
' → logprob: -6.540123462677002
    8. '+' → logprob: -6.540123462677002
    9. '
' → logprob: -6.915123462677002
    10. '           ' → logprob: -7.290123462677002

Token 362: ' OR' (ID: 4917)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.017092300578951836
    2. ' TMP' → logprob: -4.642092227935791
    3. '1' → logprob: -6.517092227935791
    4. 'f' → logprob: -6.642092227935791
    5. '(T' → logprob: -6.767092227935791
    6. '(' → logprob: -7.017092227935791
    7. 'USED' → logprob: -7.142092227935791
    8. 'tmp' → logprob: -7.642092227935791
    9. '   ' → logprob: -8.39209270477295
    10. 'T' → logprob: -8.76709270477295

Token 363: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.26781895756721497
    2. 'P' → logprob: -1.7678189277648926
    3. '[p' → logprob: -3.1428189277648926
    4. '[P' → logprob: -4.392818927764893
    5. 'GP' → logprob: -5.892818927764893
    6. 'R' → logprob: -5.892818927764893
    7. '[G' → logprob: -6.642818927764893
    8. '[j' → logprob: -7.392818927764893
    9. '[' → logprob: -8.26781940460205
    10. 'O' → logprob: -8.26781940460205

Token 364: '[j' (ID: 7895)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.04367268830537796
    2. '[j' → logprob: -4.168672561645508
    3. '[C' → logprob: -4.293672561645508
    4. '[P' → logprob: -4.418672561645508
    5. '[' → logprob: -6.668672561645508
    6. '[c' → logprob: -9.668672561645508
    7. '[i' → logprob: -9.793672561645508
    8. 'p' → logprob: -9.918672561645508
    9. '[k' → logprob: -10.418672561645508
    10. 'j' → logprob: -10.543672561645508

Token 365: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45496442914009094
    2. '[j' → logprob: -1.2049643993377686
    3. '[p' → logprob: -2.8299643993377686
    4. ']
' → logprob: -5.704964637756348
    5. '[' → logprob: -6.829964637756348
    6. '])' → logprob: -7.329964637756348
    7. '   ' → logprob: -7.329964637756348
    8. ' ]' → logprob: -8.579964637756348
    9. '[
' → logprob: -8.829964637756348
    10. '       ' → logprob: -8.954964637756348

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10994831472635269
    2. '
' → logprob: -2.6099483966827393
    3. '                
' → logprob: -4.35994815826416
    4. ')
' → logprob: -5.73494815826416
    5. '           ' → logprob: -6.10994815826416
    6. ')' → logprob: -6.10994815826416
    7. '<|end|>' → logprob: -6.35994815826416
    8. '```' → logprob: -6.60994815826416
    9. '                   ' → logprob: -6.85994815826416
    10. ' 
' → logprob: -6.85994815826416

Token 367: ' AN' (ID: 3473)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.18073703348636627
    2. '               ' → logprob: -2.305737018585205
    3. 'TMP' → logprob: -3.805737018585205
    4. 'USED' → logprob: -4.055737018585205
    5. 'OR' → logprob: -4.180737018585205
    6. '           ' → logprob: -6.180737018585205
    7. ' USED' → logprob: -6.430737018585205
    8. ' OR' → logprob: -6.680737018585205
    9. 'if' → logprob: -6.930737018585205
    10. 'ANS' → logprob: -7.180737018585205

Token 368: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.512236498361744e-07
    2. ' S' → logprob: -15.375000953674316
    3. 'SOR' → logprob: -16.125
    4. '[S' → logprob: -16.5
    5. '	S' → logprob: -17.75
    6. '(S' → logprob: -18.125
    7. 's' → logprob: -18.25
    8. '
' → logprob: -18.625
    9. 'Ｓ' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 369: '[C' (ID: 107876)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.09398474544286728
    2. '[P' → logprob: -2.968984842300415
    3. '[C' → logprob: -3.718984842300415
    4. '[j' → logprob: -4.343984603881836
    5. '[k' → logprob: -7.718984603881836
    6. '[' → logprob: -8.093984603881836
    7. '[c' → logprob: -9.093984603881836
    8. '.append' → logprob: -9.593984603881836
    9. '[i' → logprob: -9.843984603881836
    10. '[parent' → logprob: -11.218984603881836

Token 370: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.057731568813323975
    2. '[j' → logprob: -2.9327316284179688
    3. '[' → logprob: -6.807731628417969
    4. 'p' → logprob: -6.807731628417969
    5. ']' → logprob: -8.682731628417969
    6. '[
' → logprob: -9.182731628417969
    7. '][' → logprob: -9.557731628417969
    8. '[i' → logprob: -9.557731628417969
    9. 'j' → logprob: -9.807731628417969
    10. '[P' → logprob: -10.682731628417969

Token 371: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.11503104120492935
    2. ']' → logprob: -2.2400310039520264
    3. ']+' → logprob: -7.1150312423706055
    4. '[p' → logprob: -7.6150312423706055
    5. ')]' → logprob: -8.365031242370605
    6. '[j' → logprob: -8.365031242370605
    7. '][' → logprob: -8.990031242370605
    8. ']
' → logprob: -9.740031242370605
    9. '])' → logprob: -10.115031242370605
    10. ']][' → logprob: -10.490031242370605

Token 372: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5392353534698486
    2. '=' → logprob: -1.2892353534698486
    3. ' =' → logprob: -2.4142353534698486
    4. ' +=' → logprob: -3.5392353534698486
    5. '-=' → logprob: -4.0392351150512695
    6. ' -=' → logprob: -5.5392351150512695
    7. '   ' → logprob: -7.7892351150512695
    8. '-' → logprob: -8.66423511505127
    9. '[' → logprob: -8.78923511505127
    10. ',' → logprob: -9.41423511505127

Token 373: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14760994911193848
    2. 'k' → logprob: -2.0226099491119385
    3. ' f' → logprob: -5.397609710693359
    4. ' k' → logprob: -8.02260971069336
    5. '   ' → logprob: -10.27260971069336
    6. ' ' → logprob: -11.14760971069336
    7. '  ' → logprob: -12.39760971069336
    8. '(k' → logprob: -13.14760971069336
    9. ' (' → logprob: -13.39760971069336
    10. '    ' → logprob: -13.39760971069336

Token 374: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.750009536743164
    3. 'k' → logprob: -13.375009536743164
    4. '(abs' → logprob: -16.875009536743164
    5. '<|end|>' → logprob: -16.875009536743164
    6. '(
' → logprob: -17.125009536743164
    7. '((' → logprob: -17.625009536743164
    8. '(f' → logprob: -17.625009536743164
    9. '(T' → logprob: -17.750009536743164
    10. '[k' → logprob: -18.500009536743164

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009265335276722908
    2. ')
' → logprob: -5.134265422821045
    3. '(' → logprob: -6.884265422821045
    4. '())' → logprob: -6.884265422821045
    5. '()' → logprob: -7.259265422821045
    6. '(k' → logprob: -8.259264945983887
    7. '(
' → logprob: -9.009264945983887
    8. ' )' → logprob: -9.759264945983887
    9. '())
' → logprob: -10.259264945983887
    10. '))' → logprob: -10.759264945983887

Token 376: '               ' (ID: 506)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.026852011680603
    2. '<|end|>' → logprob: -1.276852011680603
    3. ' ' → logprob: -1.526852011680603
    4. '
' → logprob: -2.4018521308898926
    5. '  
' → logprob: -3.9018521308898926
    6. ')' → logprob: -4.776852130889893
    7. '' → logprob: -5.526852130889893
    8. '\n' → logprob: -5.776852130889893
    9. ' ' → logprob: -5.901852130889893
    10. '    
' → logprob: -6.151852130889893

Token 377: ' TMP' (ID: 121022)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2266407310962677
    2. '       ' → logprob: -2.2266407012939453
    3. '               ' → logprob: -2.6016407012939453
    4. 'TMP' (adapté à ' TMP') → logprob: -5.101640701293945
    5. 'ORG' → logprob: -5.726640701293945
    6. 'ET' → logprob: -5.851640701293945
    7. 'else' → logprob: -5.976640701293945
    8. ' else' → logprob: -6.851640701293945
    9. ' TMP' → logprob: -7.476640701293945
    10. 'Q' → logprob: -7.601640701293945

Token 378: '[p' (ID: 23234)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.22635586559772491
    2. '[p' → logprob: -1.6013559103012085
    3. '[P' → logprob: -7.601356029510498
    4. '[' → logprob: -8.22635555267334
    5. '[k' → logprob: -9.47635555267334
    6. '[i' → logprob: -10.22635555267334
    7. '[parent' → logprob: -11.22635555267334
    8. 'j' → logprob: -11.72635555267334
    9. ' [' → logprob: -11.97635555267334
    10. '[q' → logprob: -12.22635555267334

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015471219085156918
    2. ']+=' → logprob: -6.501547336578369
    3. '[j' → logprob: -10.751546859741211
    4. ']+' → logprob: -11.126546859741211
    5. ' ]' → logprob: -12.751546859741211
    6. '[' → logprob: -13.376546859741211
    7. ']=' → logprob: -13.501546859741211
    8. ')' → logprob: -13.626546859741211
    9. ']
' → logprob: -14.876546859741211
    10. '])' → logprob: -15.251546859741211

Token 380: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.034896351397037506
    2. ' +=' → logprob: -3.6598963737487793
    3. '=' → logprob: -5.284896373748779
    4. '-=' → logprob: -5.784896373748779
    5. ']+=' → logprob: -8.284895896911621
    6. ' -=' → logprob: -9.534895896911621
    7. '+' → logprob: -10.659895896911621
    8. '   ' → logprob: -10.909895896911621
    9. '[' → logprob: -11.159895896911621
    10. ' =' → logprob: -11.159895896911621

Token 381: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5090478658676147
    2. 'TMP' → logprob: -1.8840478658676147
    3. '1' → logprob: -2.1340479850769043
    4. 'f' → logprob: -2.6340479850769043
    5. 'USED' → logprob: -3.3840479850769043
    6. 'ET' → logprob: -5.259047985076904
    7. ' ' → logprob: -5.509047985076904
    8. '   ' → logprob: -6.009047985076904
    9. ' USED' → logprob: -6.384047985076904
    10. ' f' → logprob: -6.509047985076904

Token 382: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6759553551673889
    2. '
' → logprob: -2.175955295562744
    3. '<|end|>' → logprob: -2.300955295562744
    4. 'else' → logprob: -2.425955295562744
    5. '\n' → logprob: -3.175955295562744
    6. ' else' → logprob: -3.300955295562744
    7. '       ' → logprob: -3.925955295562744
    8. '               ' → logprob: -3.925955295562744
    9. '[' → logprob: -4.425955295562744
    10. '            
' → logprob: -4.800955295562744

Token 384: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0080913305282593
    2. '   ' → logprob: -1.1330913305282593
    3. 'else' → logprob: -1.8830913305282593
    4. 'ct' → logprob: -2.633091449737549
    5. '           ' → logprob: -3.508091449737549
    6. ' else' → logprob: -4.383091449737549
    7. 'ET' → logprob: -4.508091449737549
    8. 'continue' (adapté à ' continue') → logprob: -4.883091449737549
    9. '	ct' → logprob: -5.008091449737549
    10. ' ct' → logprob: -5.383091449737549

Token 385: '
' (ID: 198)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6510608792304993
    2. '   ' → logprob: -0.7760608792304993
    3. ' ct' → logprob: -5.026061058044434
    4. '	ct' → logprob: -5.026061058044434
    5. '    
' → logprob: -6.401061058044434
    6. 'ET' → logprob: -7.151061058044434
    7. '
' → logprob: -7.276061058044434
    8. '  
' → logprob: -8.151061058044434
    9. 'else' → logprob: -8.151061058044434
    10. '       ' → logprob: -8.276061058044434

Token 386: '       ' (ID: 309)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.09186578541994095
    2. '   ' → logprob: -2.8418657779693604
    3. ' ct' → logprob: -3.9668657779693604
    4. '	ct' → logprob: -4.5918660163879395
    5. '(ct' → logprob: -9.841865539550781
    6. '    
' → logprob: -9.841865539550781
    7. '       ' → logprob: -10.091865539550781
    8. 'ET' → logprob: -10.091865539550781
    9. ' ' → logprob: -10.341865539550781
    10. '
' → logprob: -10.466865539550781

Token 387: ' if' (ID: 538)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0006008113850839436
    2. '   ' → logprob: -7.625600814819336
    3. '	ct' → logprob: -9.750600814819336
    4. ' ct' → logprob: -9.875600814819336
    5. '
' → logprob: -13.500600814819336
    6. '       ' → logprob: -14.750600814819336
    7. '(ct' → logprob: -15.250600814819336
    8. 'ET' → logprob: -15.375600814819336
    9. '    
' → logprob: -16.250600814819336
    10. 'cnt' → logprob: -16.250600814819336

Token 388: ' i' (ID: 575)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.1163499653339386
    2. ' ct' → logprob: -3.116349935531616
    3. 'i' → logprob: -3.366349935531616
    4. 'USED' → logprob: -3.991349935531616
    5. ' USED' → logprob: -5.866350173950195
    6. ' i' → logprob: -6.116350173950195
    7. 'ET' → logprob: -6.491350173950195
    8. 'used' → logprob: -6.616350173950195
    9. 'ANS' → logprob: -6.991350173950195
    10. 'CT' → logprob: -6.991350173950195

Token 389: ' >=' (ID: 5064)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22714762389659882
    2. '==' → logprob: -2.9771475791931152
    3. ' ==' → logprob: -3.1021475791931152
    4. ' in' → logprob: -3.4771475791931152
    5. 'not' → logprob: -3.4771475791931152
    6. '0' → logprob: -4.477147579193115
    7. 'ct' → logprob: -5.727147579193115
    8. '=' → logprob: -5.852147579193115
    9. '>=' → logprob: -5.852147579193115
    10. '!=' → logprob: -6.102147579193115

Token 390: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0589444637298584
    2. 'N' → logprob: -2.9339444637298584
    3. '0' → logprob: -5.5589447021484375
    4. 'len' → logprob: -9.058944702148438
    5. ' n' → logprob: -10.308944702148438
    6. 'ct' → logprob: -10.808944702148438
    7. '1' → logprob: -11.058944702148438
    8. ' N' → logprob: -12.808944702148438
    9. ' ' → logprob: -13.183944702148438
    10. '   ' → logprob: -13.308944702148438

Token 391: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03305467963218689
    2. 'N' → logprob: -3.9080545902252197
    3. '0' → logprob: -4.408054828643799
    4. '1' → logprob: -9.15805435180664
    5. 'len' → logprob: -9.15805435180664
    6. ' n' → logprob: -11.15805435180664
    7. 'sys' → logprob: -12.28305435180664
    8. ' ' → logprob: -12.53305435180664
    9. '   ' → logprob: -12.90805435180664
    10. '2' → logprob: -12.90805435180664

Token 392: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07218359410762787
    2. ':' → logprob: -2.822183609008789
    3. ' and' → logprob: -4.947183609008789
    4. 'and' → logprob: -5.947183609008789
    5. '       ' → logprob: -8.572183609008789
    6. '   ' → logprob: -8.822183609008789
    7. ':

' → logprob: -10.322183609008789
    8. '==' → logprob: -10.947183609008789
    9. ' :
' → logprob: -11.072183609008789
    10. 'ct' → logprob: -11.197183609008789

Token 393: '           ' (ID: 352)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.03687058761715889
    2. '   ' → logprob: -3.5368704795837402
    3. '	ct' → logprob: -5.78687047958374
    4. '       ' → logprob: -6.16187047958374
    5. ' ct' → logprob: -6.28687047958374
    6. '(ct' → logprob: -11.661870956420898
    7. '  ' → logprob: -11.661870956420898
    8. ' ' → logprob: -11.911870956420898
    9. 'cts' → logprob: -12.161870956420898
    10. 'CT' → logprob: -12.161870956420898

Token 394: ' if' (ID: 538)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0002273774443892762
    2. '   ' → logprob: -9.125226974487305
    3. 'if' (adapté à ' if') → logprob: -10.125226974487305
    4. 'USED' → logprob: -10.375226974487305
    5. 'ANS' → logprob: -11.500226974487305
    6. 'P' → logprob: -11.500226974487305
    7. ' ct' → logprob: -12.000226974487305
    8. 'used' → logprob: -12.250226974487305
    9. '
' → logprob: -12.500226974487305
    10. '	ct' → logprob: -12.750226974487305

Token 395: ' i' (ID: 575)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.04315870255231857
    2. 'not' → logprob: -3.418158769607544
    3. 'ct' → logprob: -5.418158531188965
    4. 'used' → logprob: -5.793158531188965
    5. 'i' → logprob: -6.668158531188965
    6. ' USED' → logprob: -8.543158531188965
    7. ' not' → logprob: -8.668158531188965
    8. 'NOT' → logprob: -9.043158531188965
    9. 'Used' → logprob: -9.418158531188965
    10. 'CT' → logprob: -10.168158531188965

Token 396: ' >' (ID: 1424)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5482236742973328
    2. ' in' → logprob: -1.2982237339019775
    3. '==' → logprob: -2.5482237339019775
    4. '>=' → logprob: -3.7982237339019775
    5. ' not' → logprob: -3.9232237339019775
    6. ' ==' → logprob: -4.298223495483398
    7. 'not' → logprob: -5.423223495483398
    8. '   ' → logprob: -5.923223495483398
    9. '!=' → logprob: -5.923223495483398
    10. 'used' → logprob: -7.173223495483398

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003591756336390972
    2. '=' → logprob: -5.753591537475586
    3. ' ' → logprob: -8.378591537475586
    4. 'i' → logprob: -9.378591537475586
    5. '-' → logprob: -10.128591537475586
    6. 'ct' → logprob: -10.503591537475586
    7. 'N' → logprob: -10.878591537475586
    8. 'n' → logprob: -12.253591537475586
    9. '1' → logprob: -12.878591537475586
    10. '=i' → logprob: -14.378591537475586

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040338258258998394
    2. ' ' → logprob: -8.00040340423584
    3. '-' → logprob: -10.37540340423584
    4. 'i' → logprob: -11.00040340423584
    5. 'ct' → logprob: -11.62540340423584
    6. 'n' → logprob: -12.87540340423584
    7. '=' → logprob: -13.12540340423584
    8. 'N' → logprob: -13.37540340423584
    9. '   ' → logprob: -14.06290340423584
    10. ' -' → logprob: -14.25040340423584

Token 399: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5835782289505005
    2. 'and' → logprob: -0.8335782289505005
    3. ':
' → logprob: -5.333578109741211
    4. ':' → logprob: -6.583578109741211
    5. '           ' → logprob: -6.833578109741211
    6. '               ' → logprob: -8.583578109741211
    7. '<|end|>' → logprob: -10.208578109741211
    8. '   ' → logprob: -10.833578109741211
    9. '==' → logprob: -10.958578109741211
    10. '       ' → logprob: -11.083578109741211

Token 400: '               ' (ID: 506)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.16706952452659607
    2. ' P' → logprob: -2.292069435119629
    3. '               ' → logprob: -3.917069435119629
    4. '   ' → logprob: -4.667069435119629
    5. '       ' → logprob: -4.667069435119629
    6. '           ' → logprob: -4.792069435119629
    7. ' if' → logprob: -6.292069435119629
    8. 'if' → logprob: -6.417069435119629
    9. ' continue' → logprob: -7.417069435119629
    10. 'continue' → logprob: -7.792069435119629

Token 401: ' OR' (ID: 4917)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.7030047178268433
    2. 'p' → logprob: -0.7030047178268433
    3. ' p' → logprob: -5.203004837036133
    4. ' P' → logprob: -5.953004837036133
    5. '           ' → logprob: -6.953004837036133
    6. '   ' → logprob: -8.203004837036133
    7. 'if' → logprob: -8.328004837036133
    8. 'ct' → logprob: -9.703004837036133
    9. '       ' → logprob: -10.453004837036133
    10. 'continue' → logprob: -10.578004837036133

Token 402: 'G' (ID: 38)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038705902989022434
    2. '[j' → logprob: -7.875387191772461
    3. '[' → logprob: -12.375387191772461
    4. 'i' → logprob: -13.750387191772461
    5. '[I' → logprob: -13.875387191772461
    6. '[P' → logprob: -15.375387191772461
    7. '[p' → logprob: -16.37538719177246
    8. '=' → logprob: -17.00038719177246
    9. '=i' → logprob: -17.12538719177246
    10. ' [' → logprob: -17.62538719177246

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003342521144077182
    2. '[P' → logprob: -5.878342628479004
    3. '[' → logprob: -8.003342628479004
    4. '[C' → logprob: -8.878342628479004
    5. '[j' → logprob: -10.878342628479004
    6. 'i' → logprob: -11.253342628479004
    7. '[T' → logprob: -11.628342628479004
    8. '[I' → logprob: -11.878342628479004
    9. '[X' → logprob: -13.128342628479004
    10. '[p' → logprob: -13.253342628479004

Token 404: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17033472657203674
    2. '+=' → logprob: -2.920334815979004
    3. ']' → logprob: -3.170334815979004
    4. ' =' → logprob: -3.545334815979004
    5. ' +=' → logprob: -3.920334815979004
    6. ']+=' → logprob: -4.795334815979004
    7. ']=' → logprob: -5.920334815979004
    8. '[i' → logprob: -7.670334815979004
    9. '[' → logprob: -7.795334815979004
    10. '   ' → logprob: -10.045334815979004

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01415281556546688
    2. '+=' → logprob: -4.514153003692627
    3. ' =' → logprob: -5.889153003692627
    4. ' +=' → logprob: -8.139152526855469
    5. '-=' → logprob: -10.264152526855469
    6. ' -=' → logprob: -14.264152526855469
    7. '=C' → logprob: -14.639152526855469
    8. '   ' → logprob: -14.764152526855469
    9. '=i' → logprob: -15.014152526855469
    10. '.=' → logprob: -15.139152526855469

Token 406: ' USED' (ID: 129384)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.8287768959999084
    2. 'USED' → logprob: -1.2037768363952637
    3. 'ET' → logprob: -1.8287768363952637
    4. '1' → logprob: -3.4537768363952637
    5. '-' → logprob: -3.9537768363952637
    6. 'ORG' → logprob: -4.078776836395264
    7. 'f' → logprob: -5.328776836395264
    8. 'ANS' → logprob: -5.328776836395264
    9. 'CT' → logprob: -5.328776836395264
    10. 'len' → logprob: -5.828776836395264

Token 407: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.00405987910926342
    2. '[' → logprob: -5.629059791564941
    3. '[:]' → logprob: -8.379059791564941
    4. 'C' → logprob: -8.754059791564941
    5. '<|end|>' → logprob: -10.379059791564941
    6. '(C' → logprob: -10.879059791564941
    7. '[c' → logprob: -12.004059791564941
    8. '[i' → logprob: -12.629059791564941
    9. '[...]' → logprob: -13.254059791564941
    10. '[
' → logprob: -13.379059791564941

Token 408: '[P' (ID: 132164)
  Prédit: '[P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.20895835757255554
    2. '[i' → logprob: -1.958958387374878
    3. 'i' → logprob: -3.208958387374878
    4. 'P' → logprob: -5.583958148956299
    5. '[p' → logprob: -6.708958148956299
    6. '[' → logprob: -6.833958148956299
    7. ']' → logprob: -7.333958148956299
    8. 'p' → logprob: -8.208958625793457
    9. '[j' → logprob: -9.833958625793457
    10. '[
' → logprob: -10.708958625793457

Token 409: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003049723571166396
    2. 'i' → logprob: -6.128049850463867
    3. '[P' → logprob: -7.128049850463867
    4. '[j' → logprob: -11.003049850463867
    5. ']' → logprob: -11.003049850463867
    6. 'P' → logprob: -11.878049850463867
    7. '[p' → logprob: -12.253049850463867
    8. '[' → logprob: -12.253049850463867
    9. '][' → logprob: -13.003049850463867
    10. ' i' → logprob: -13.128049850463867

Token 410: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.06802681088447571
    2. '[i' → logprob: -3.0680267810821533
    3. '[P' → logprob: -4.068027019500732
    4. '[p' → logprob: -7.068027019500732
    5. '[' → logprob: -7.068027019500732
    6. ']' → logprob: -8.318026542663574
    7. 'i' → logprob: -10.318026542663574
    8. '[-' → logprob: -10.818026542663574
    9. ' ]]' → logprob: -10.943026542663574
    10. ']])' → logprob: -11.068026542663574

Token 411: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005159284919500351
    2. ']+' → logprob: -6.255159378051758
    3. '<|end|>' → logprob: -6.630159378051758
    4. '+' → logprob: -7.005159378051758
    5. ']
' → logprob: -8.005159378051758
    6. '-' → logprob: -8.630159378051758
    7. ' ]' → logprob: -8.755159378051758
    8. ']-' → logprob: -9.505159378051758
    9. ' -' → logprob: -9.755159378051758
    10. '[' → logprob: -9.755159378051758

Token 412: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' (adapté à ' ct') → logprob: -0.00827956572175026
    2. '   ' → logprob: -5.258279800415039
    3. ' ct' → logprob: -5.883279800415039
    4. '	ct' → logprob: -8.758279800415039
    5. 'P' → logprob: -9.758279800415039
    6. '       ' → logprob: -11.883279800415039
    7. 'ET' → logprob: -11.883279800415039
    8. 'ANS' → logprob: -12.008279800415039
    9. '           ' → logprob: -12.258279800415039
    10. 'CT' → logprob: -12.758279800415039

Token 414: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03807569295167923
    2. ' +=' → logprob: -3.2880756855010986
    3. '=' → logprob: -10.28807544708252
    4. ']+=' → logprob: -15.66307544708252
    5. ' =' → logprob: -17.538076400756836
    6. '   ' → logprob: -17.788076400756836
    7. '+' → logprob: -18.913076400756836
    8. '	' → logprob: -19.788076400756836
    9. '+=(' → logprob: -20.288076400756836
    10. '+='' → logprob: -21.038076400756836

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.50004005432129
    4. '+' → logprob: -18.50004005432129
    5. '<|end|>' → logprob: -18.62504005432129
    6. '2' → logprob: -20.37504005432129
    7. '0' → logprob: -20.87504005432129
    8. '
' → logprob: -21.12504005432129
    9. '  ' → logprob: -21.25004005432129
    10. ' +' → logprob: -21.87504005432129

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -17.0
    4. '<|end|>' → logprob: -17.625
    5. '0' → logprob: -19.125
    6. '+' → logprob: -19.625
    7. '```' → logprob: -19.875
    8. '   ' → logprob: -20.875
    9. '10' → logprob: -21.375
    10. '3' → logprob: -21.6875

Token 417: '
' (ID: 198)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.7552815675735474
    2. '           ' → logprob: -0.8802815675735474
    3. '       ' → logprob: -3.630281448364258
    4. '<|end|>' → logprob: -3.630281448364258
    5. ' ET' → logprob: -3.880281448364258
    6. '   ' → logprob: -3.880281448364258
    7. '
' → logprob: -4.505281448364258
    8. '<|end|>' → logprob: -5.630281448364258
    9. ';' → logprob: -7.255281448364258
    10. ',' → logprob: -7.380281448364258

Token 418: '           ' (ID: 352)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.15063799917697906
    2. '           ' → logprob: -2.1506381034851074
    3. '       ' → logprob: -4.275638103485107
    4. '   ' → logprob: -5.275638103485107
    5. ' ET' → logprob: -5.525638103485107
    6. '```' → logprob: -8.90063762664795
    7. '	   ' → logprob: -10.02563762664795
    8. ',' → logprob: -10.65063762664795
    9. '_ET' → logprob: -10.65063762664795
    10. 'import' → logprob: -10.90063762664795

Token 419: ' if' (ID: 538)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.0008497710223309696
    2. 'i' → logprob: -7.250849723815918
    3. 'ANS' → logprob: -9.375849723815918
    4. 'Q' → logprob: -10.875849723815918
    5. '   ' → logprob: -11.750849723815918
    6. '       ' → logprob: -12.125849723815918
    7. 'P' → logprob: -12.625849723815918
    8. 'if' (adapté à ' if') → logprob: -12.625849723815918
    9. 'Euler' → logprob: -12.625849723815918
    10. ' ET' → logprob: -13.000849723815918

Token 420: ' not' (ID: 625)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.30642202496528625
    2. 'i' → logprob: -1.5564219951629639
    3. 'P' → logprob: -4.181422233581543
    4. 'not' → logprob: -4.556422233581543
    5. 'C' → logprob: -5.056422233581543
    6. 'ET' → logprob: -5.306422233581543
    7. 'len' → logprob: -5.431422233581543
    8. 'used' → logprob: -6.056422233581543
    9. ' USED' → logprob: -6.181422233581543
    10. 'ct' → logprob: -6.431422233581543

Token 421: ' ET' (ID: 23345)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.06204364821314812
    2. ' USED' → logprob: -2.8120436668395996
    3. 'i' → logprob: -9.937043190002441
    4. '_USED' → logprob: -11.812043190002441
    5. 'P' → logprob: -12.062043190002441
    6. 'used' → logprob: -12.562043190002441
    7. 'Used' → logprob: -12.937043190002441
    8. '(i' → logprob: -13.312043190002441
    9. ' i' → logprob: -13.562043190002441
    10. 'US' → logprob: -13.687043190002441

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '[i' → logprob: -15.500000953674316
    3. '' → logprob: -15.812500953674316
    4. 'ET' → logprob: -16.625
    5. '１' → logprob: -16.875
    6. '
' → logprob: -17.25
    7. '```' → logprob: -17.375
    8. '2' → logprob: -17.5625
    9. '۱' → logprob: -17.5625
    10. '१' → logprob: -18.1875

Token 423: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009683952084742486
    2. '[j' → logprob: -7.3759684562683105
    3. '[' → logprob: -8.000967979431152
    4. '[C' → logprob: -12.875967979431152
    5. '[I' → logprob: -13.750967979431152
    6. '[P' → logprob: -14.375967979431152
    7. '[S' → logprob: -15.000967979431152
    8. ' [' → logprob: -15.125967979431152
    9. 'i' → logprob: -15.125967979431152
    10. '[
' → logprob: -15.375967979431152

Token 424: ']:' (ID: 12433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00027611342375166714
    2. ':' → logprob: -8.500276565551758
    3. ':
' → logprob: -10.250276565551758
    4. '):' → logprob: -11.375276565551758
    5. '):
' → logprob: -11.875276565551758
    6. '[' → logprob: -12.000276565551758
    7. 'i' → logprob: -12.125276565551758
    8. '(i' → logprob: -13.500276565551758
    9. ':i' → logprob: -14.000276565551758
    10. ')' → logprob: -14.125276565551758

Token 425: ' ' (ID: 220)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.7816165089607239
    2. ' ET' → logprob: -0.7816165089607239
    3. '               ' → logprob: -3.156616449356079
    4. '           ' → logprob: -3.906616449356079
    5. '       ' → logprob: -4.406616687774658
    6. '   ' → logprob: -5.406616687774658
    7. '<|end|>' → logprob: -5.781616687774658
    8. '_ET' → logprob: -6.781616687774658
    9. '<|end|>' → logprob: -7.656616687774658
    10. '	       ' → logprob: -8.7816162109375

Token 426: ' #' (ID: 1069)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.024347754195332527
    2. ' ET' → logprob: -4.39934778213501
    3. '           ' → logprob: -5.39934778213501
    4. '       ' → logprob: -5.64934778213501
    5. '               ' → logprob: -5.89934778213501
    6. '   ' → logprob: -7.64934778213501
    7. '_ET' → logprob: -7.77434778213501
    8. '	       ' → logprob: -11.274347305297852
    9. '	' → logprob: -11.774347305297852
    10. ' ' → logprob: -11.774347305297852

Token 427: ' ' (ID: 220)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.31753605604171753
    2. ' ET' → logprob: -1.3175361156463623
    3. '           ' → logprob: -5.942535877227783
    4. '       ' → logprob: -6.942535877227783
    5. '_ET' → logprob: -7.942535877227783
    6. '               ' → logprob: -8.692536354064941
    7. '   ' → logprob: -9.692536354064941
    8. '<|end|>' → logprob: -10.442536354064941
    9. '<|end|>' → logprob: -11.317536354064941
    10. '```' → logprob: -11.817536354064941

Token 428: '0' (ID: 15)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -8.339776832144707e-05
    2. ' ET' → logprob: -10.500082969665527
    3. '_ET' → logprob: -10.500082969665527
    4. 'if' → logprob: -11.500082969665527
    5. '           ' → logprob: -12.250082969665527
    6. '<|end|>' → logprob: -12.500082969665527
    7. '#' → logprob: -13.375082969665527
    8. '       ' → logprob: -13.375082969665527
    9. '<|end|>' → logprob: -13.500082969665527
    10. 'continue' → logprob: -13.875082969665527

Token 429: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012443842366337776
    2. '==' → logprob: -4.887444019317627
    3. ' =' → logprob: -5.512444019317627
    4. ':' → logprob: -7.762444019317627
    5. '=True' → logprob: -9.387443542480469
    6. ' ==' → logprob: -9.512443542480469
    7. '=
' → logprob: -9.637443542480469
    8. '+=' → logprob: -10.012443542480469
    9. ':
' → logprob: -10.887443542480469
    10. '!=' → logprob: -11.137443542480469

Token 430: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.253395676612854
    2. 'False' → logprob: -1.503395676612854
    3. 'ct' → logprob: -6.7533955574035645
    4. ' True' → logprob: -9.003396034240723
    5. 'i' → logprob: -9.628396034240723
    6. 'ET' → logprob: -10.503396034240723
    7. ' False' → logprob: -10.878396034240723
    8. '0' → logprob: -11.253396034240723
    9. '           ' → logprob: -11.378396034240723
    10. 'et' → logprob: -11.878396034240723

Token 431: ' mais' (ID: 2899)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31263116002082825
    2. ':' → logprob: -1.5626311302185059
    3. '           ' → logprob: -3.437631130218506
    4. '               ' → logprob: -4.562631130218506
    5. '       ' → logprob: -4.812631130218506
    6. ' or' → logprob: -5.812631130218506
    7. ' and' → logprob: -6.562631130218506
    8. ',' → logprob: -6.562631130218506
    9. '   ' → logprob: -7.312631130218506
    10. ' :
' → logprob: -8.062631607055664

Token 432: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8204016089439392
    2. ' i' → logprob: -1.820401668548584
    3. 'True' → logprob: -1.820401668548584
    4. 'False' → logprob: -2.445401668548584
    5. ' True' → logprob: -3.445401668548584
    6. 'not' → logprob: -3.820401668548584
    7. ' not' → logprob: -3.945401668548584
    8. 'ET' → logprob: -4.070401668548584
    9. ' False' → logprob: -4.445401668548584
    10. 'ct' → logprob: -4.570401668548584

Token 433: ''est' (ID: 6616)
  Prédit: 'ould'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ould' → logprob: -0.2793706953525543
    2. 'an' → logprob: -1.654370665550232
    3. 'annot' → logprob: -4.0293707847595215
    4. 'ont' → logprob: -4.6543707847595215
    5. 'and' → logprob: -4.6543707847595215
    6. 'orrect' → logprob: -5.6543707847595215
    7. ''est' → logprob: -6.0293707847595215
    8. 'on' → logprob: -6.0293707847595215
    9. 'le' → logprob: -6.2793707847595215
    10. 'ertain' → logprob: -7.1543707847595215

Token 434: ' plus' (ID: 2932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.8195608854293823
    2. 'True' → logprob: -1.8195608854293823
    3. 'ok' → logprob: -1.9445608854293823
    4. 'correct' → logprob: -2.069561004638672
    5. '0' → logprob: -2.694561004638672
    6. 'frag' → logprob: -2.944561004638672
    7. 'b' → logprob: -3.319561004638672
    8. 'amb' → logprob: -3.444561004638672
    9. 'un' → logprob: -3.694561004638672
    10. 'problem' → logprob: -3.944561004638672

Token 435: ' clair' (ID: 71396)
  Prédit: 'clair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clair' → logprob: -0.8607236742973328
    2. ' clair' → logprob: -1.2357237339019775
    3. 'clear' → logprob: -2.1107237339019775
    4. 'safe' → logprob: -3.1107237339019775
    5. ' clear' → logprob: -3.1107237339019775
    6. ' safe' → logprob: -3.8607237339019775
    7. ' claire' → logprob: -4.360723495483398
    8. 'cl' → logprob: -5.110723495483398
    9. 'clar' → logprob: -5.235723495483398
    10. 'prec' → logprob: -5.485723495483398

Token 436: ' comme' (ID: 7971)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3524823486804962
    2. '           ' → logprob: -2.227482318878174
    3. ':' → logprob: -2.352482318878174
    4. '       ' → logprob: -3.352482318878174
    5. '               ' → logprob: -3.352482318878174
    6. ' and' → logprob: -4.727482318878174
    7. ',' → logprob: -5.477482318878174
    8. 'ET' → logprob: -5.727482318878174
    9. ' ET' → logprob: -5.852482318878174
    10. ' or' → logprob: -6.227482318878174

Token 437: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.5234124064445496
    2. 'cela' → logprob: -1.7734124660491943
    3. 'that' → logprob: -2.1484124660491943
    4. 'this' → logprob: -2.2734124660491943
    5. ' ça' → logprob: -5.023412227630615
    6. 'cel' → logprob: -5.648412227630615
    7. 'ç' → logprob: -5.773412227630615
    8. '```' → logprob: -6.648412227630615
    9. ' that' → logprob: -6.773412227630615
    10. 'ca' → logprob: -7.523412227630615

Token 438: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4235612154006958
    2. '           ' → logprob: -1.7985612154006958
    3. ':' → logprob: -2.2985610961914062
    4. '               ' → logprob: -2.6735610961914062
    5. ',' → logprob: -5.298561096191406
    6. ' and' → logprob: -6.298561096191406
    7. '       ' → logprob: -7.173561096191406
    8. ' :
' → logprob: -7.548561096191406
    9. '):
' → logprob: -7.673561096191406
    10. ' ET' → logprob: -7.923561096191406

Token 439: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1885787397623062
    2. '               ' → logprob: -1.938578724861145
    3. '       ' → logprob: -4.4385786056518555
    4. 'ET' → logprob: -4.6885786056518555
    5. ' ET' → logprob: -5.4385786056518555
    6. '   ' → logprob: -6.1885786056518555
    7. '_ET' → logprob: -8.938578605651855
    8. '	       ' → logprob: -9.438578605651855
    9. '		' → logprob: -9.688578605651855
    10. '```' → logprob: -9.813578605651855

Token 440: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' (adapté à ' ET') → logprob: -0.03696812316775322
    2. ' ET' → logprob: -3.536968231201172
    3. '           ' → logprob: -5.161968231201172
    4. '       ' → logprob: -7.161968231201172
    5. '               ' → logprob: -8.036968231201172
    6. '   ' → logprob: -8.536968231201172
    7. '_ET' → logprob: -9.411968231201172
    8. ' ' → logprob: -11.286968231201172
    9. '                   ' → logprob: -11.786968231201172
    10. '	' → logprob: -11.911968231201172

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[i' → logprob: -15.125000953674316
    3. '_' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '[' → logprob: -17.0
    6. '' → logprob: -17.75
    7. '(i' → logprob: -17.875
    8. '   ' → logprob: -18.0625
    9. 'def' → logprob: -18.5625
    10. '
' → logprob: -18.625

Token 442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.250036239624023
    3. '```' → logprob: -15.875036239624023
    4. '[I' → logprob: -16.125036239624023
    5. '[int' → logprob: -16.625036239624023
    6. '[
' → logprob: -16.750036239624023
    7. '=' → logprob: -17.125036239624023
    8. '[j' → logprob: -17.250036239624023
    9. '=i' → logprob: -17.750036239624023
    10. ' [' → logprob: -17.875036239624023

Token 443: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27226686477661133
    2. ']' → logprob: -1.7722668647766113
    3. ' =' → logprob: -3.2722668647766113
    4. ']=' → logprob: -3.8972668647766113
    5. '[i' → logprob: -4.647266864776611
    6. '=i' → logprob: -8.147266387939453
    7. ')' → logprob: -8.397266387939453
    8. ')=' → logprob: -10.022266387939453
    9. 'i' → logprob: -11.397266387939453
    10. '[' → logprob: -11.647266387939453

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019297054968774319
    2. ' =' → logprob: -6.251929759979248
    3. '=i' → logprob: -13.87692928314209
    4. '[' → logprob: -17.001930236816406
    5. '=
' → logprob: -17.501930236816406
    6. '=int' → logprob: -17.501930236816406
    7. '＝' → logprob: -17.626930236816406
    8. '[i' → logprob: -17.626930236816406
    9. ',' → logprob: -18.001930236816406
    10. '+=' → logprob: -18.126930236816406

Token 445: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -2.4987974029500037e-05
    2. ' ct' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.125024795532227
    4. '	ct' → logprob: -15.500024795532227
    5. '1' → logprob: -16.125024795532227
    6. '(ct' → logprob: -17.000024795532227
    7. 'cnt' → logprob: -17.625024795532227
    8. 'cts' → logprob: -17.750024795532227
    9. '       ' → logprob: -18.250024795532227
    10. 'ctr' → logprob: -18.250024795532227

Token 446: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004735803231596947
    2. '               ' → logprob: -5.379735946655273
    3. 'P' → logprob: -10.379735946655273
    4. '       ' → logprob: -10.629735946655273
    5. '   ' → logprob: -11.004735946655273
    6. ',' → logprob: -11.129735946655273
    7. 'Q' → logprob: -11.754735946655273
    8. '                   ' → logprob: -12.504735946655273
    9. '            
' → logprob: -12.754735946655273
    10. ' P' → logprob: -12.754735946655273

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027057272382080555
    2. '       ' → logprob: -6.3777055740356445
    3. '   ' → logprob: -7.8777055740356445
    4. '               ' → logprob: -8.377705574035645
    5. ' for' → logprob: -8.627705574035645
    6. 'P' → logprob: -9.127705574035645
    7. 'for' → logprob: -9.377705574035645
    8. ' P' → logprob: -11.502705574035645
    9. '```' → logprob: -12.002705574035645
    10. ',' → logprob: -14.002705574035645

Token 448: ' #' (ID: 1069)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.28016337752342224
    2. 'for' → logprob: -1.9051634073257446
    3. '   ' → logprob: -2.905163288116455
    4. '           ' → logprob: -3.405163288116455
    5. '       ' → logprob: -5.530163288116455
    6. 'if' → logprob: -5.780163288116455
    7. ' for' → logprob: -8.905163764953613
    8. 'Q' → logprob: -9.405163764953613
    9. 'ANS' → logprob: -9.655163764953613
    10. '               ' → logprob: -9.905163764953613

Token 449: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014420046471059322
    2. 'P' → logprob: -4.389420032501221
    3. '   ' → logprob: -6.764420032501221
    4. 'if' → logprob: -8.014420509338379
    5. '       ' → logprob: -8.764420509338379
    6. ' for' → logprob: -9.014420509338379
    7. '           ' → logprob: -9.514420509338379
    8. 'used' → logprob: -10.139420509338379
    9. 'USED' → logprob: -11.264420509338379
    10. 'p' → logprob: -12.639420509338379

Token 450: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027586298529058695
    2. ' for' → logprob: -6.752758502960205
    3. 'ont' → logprob: -7.127758502960205
    4. '   ' → logprob: -8.502758979797363
    5. 'f' → logprob: -8.877758979797363
    6. '	for' → logprob: -9.377758979797363
    7. '       ' → logprob: -9.502758979797363
    8. '=' → logprob: -10.002758979797363
    9. 'h' → logprob: -10.002758979797363
    10. '
' → logprob: -10.377758979797363

Token 451: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24068677425384521
    2. ' for' → logprob: -1.9906867742538452
    3. 'Q' → logprob: -3.2406868934631348
    4. '   ' → logprob: -4.115686893463135
    5. 'P' → logprob: -4.740686893463135
    6. ' Q' → logprob: -5.115686893463135
    7. ' P' → logprob: -5.740686893463135
    8. 'X' → logprob: -6.865686893463135
    9. 'len' → logprob: -6.990686893463135
    10. ' not' → logprob: -7.365686893463135

Token 452: '-être' (ID: 33599)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -1.4740519523620605
    2. '   ' → logprob: -1.9740519523620605
    3. ' tout' → logprob: -2.2240519523620605
    4. '       ' → logprob: -2.3490519523620605
    5. 'u' → logprob: -2.7240519523620605
    6. '#' → logprob: -2.8490519523620605
    7. 'pas' → logprob: -3.3490519523620605
    8. ' que' → logprob: -3.5990519523620605
    9. '    ' → logprob: -3.5990519523620605
    10. '```' → logprob: -3.7240519523620605

Token 453: ' pas' (ID: 2173)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' P' → logprob: -1.101083517074585
    2. ' not' → logprob: -1.351083517074585
    3. 'P' → logprob: -1.476083517074585
    4. ' True' → logprob: -3.226083517074585
    5. ' for' → logprob: -3.601083517074585
    6. 'not' → logprob: -3.726083517074585
    7. '   ' → logprob: -3.726083517074585
    8. 'True' → logprob: -3.976083517074585
    9. 'len' → logprob: -4.101083755493164
    10. 'for' → logprob: -4.476083755493164

Token 454: ' optimal' (ID: 24174)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5469030141830444
    2. ' Q' → logprob: -2.421903133392334
    3. 'i' → logprob: -2.921903133392334
    4. '   ' → logprob: -3.171903133392334
    5. 'le' → logprob: -3.171903133392334
    6. 'len' → logprob: -3.921903133392334
    7. ' i' → logprob: -3.921903133392334
    8. ' correct' → logprob: -3.921903133392334
    9. 'P' → logprob: -4.046903133392334
    10. 'for' → logprob: -4.421903133392334

Token 455: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.614861249923706
    2. ' for' → logprob: -0.989861249923706
    3. '           ' → logprob: -3.489861249923706
    4. 'for' → logprob: -4.239861488342285
    5. '```' → logprob: -4.364861488342285
    6. '
' → logprob: -4.489861488342285
    7. 'Q' → logprob: -4.614861488342285
    8. ' Q' → logprob: -6.114861488342285
    9. '       ' → logprob: -6.364861488342285
    10. ',' → logprob: -6.614861488342285

Token 456: ' faire' (ID: 8119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6599356532096863
    2. ' for' → logprob: -1.159935712814331
    3. '   ' → logprob: -2.909935712814331
    4. '           ' → logprob: -2.909935712814331
    5. 'Q' → logprob: -3.659935712814331
    6. ' Q' → logprob: -3.909935712814331
    7. '       ' → logprob: -5.409935474395752
    8. '
' → logprob: -6.159935474395752
    9. ' P' → logprob: -6.534935474395752
    10. ' ' → logprob: -6.784935474395752

Token 457: ' ça' (ID: 13590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04555078223347664
    2. '   ' → logprob: -3.79555082321167
    3. ' for' → logprob: -4.17055082321167
    4. 'Q' → logprob: -5.29555082321167
    5. 'X' → logprob: -7.54555082321167
    6. '```' → logprob: -7.79555082321167
    7. '       ' → logprob: -8.170550346374512
    8. 'P' → logprob: -8.420550346374512
    9. ' Q' → logprob: -9.670550346374512
    10. '           ' → logprob: -10.670550346374512

Token 458: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6666828989982605
    2. ' for' → logprob: -1.0416829586029053
    3. 'for' → logprob: -2.7916829586029053
    4. '           ' → logprob: -2.7916829586029053
    5. '       ' → logprob: -5.291682720184326
    6. '
' → logprob: -5.916682720184326
    7. '    
' → logprob: -6.791682720184326
    8. ',' → logprob: -7.041682720184326
    9. 'Q' → logprob: -7.916682720184326
    10. '            
' → logprob: -8.291683197021484

Token 459: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6069901585578918
    2. '   ' → logprob: -0.9819901585578918
    3. ' for' → logprob: -2.731990098953247
    4. 'for' → logprob: -5.106990337371826
    5. 'P' → logprob: -5.606990337371826
    6. '       ' → logprob: -5.856990337371826
    7. ' P' → logprob: -6.106990337371826
    8. ',' → logprob: -8.481989860534668
    9. 'Q' → logprob: -9.106989860534668
    10. '```' → logprob: -9.731989860534668

Token 460: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9406778216362
    2. '   ' → logprob: -1.1906778812408447
    3. '       ' → logprob: -1.5656778812408447
    4. '           ' → logprob: -2.8156778812408447
    5. 'P' → logprob: -3.9406778812408447
    6. ' for' → logprob: -4.065677642822266
    7. ' P' → logprob: -9.565677642822266
    8. '	for' → logprob: -9.815677642822266
    9. '               ' → logprob: -10.815677642822266
    10. '```' → logprob: -11.065677642822266

Token 461: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8636825084686279
    2. 'P' → logprob: -1.238682508468628
    3. 'for' → logprob: -1.488682508468628
    4. ' for' → logprob: -3.238682508468628
    5. '       ' → logprob: -4.113682746887207
    6. ' P' → logprob: -5.488682746887207
    7. '           ' → logprob: -5.988682746887207
    8. 'if' → logprob: -7.863682746887207
    9. '```' → logprob: -9.738682746887207
    10. '	for' → logprob: -9.863682746887207

Token 462: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.837117075920105
    2. '   ' → logprob: -1.212117075920105
    3. 'P' → logprob: -2.3371171951293945
    4. 'if' → logprob: -2.4621171951293945
    5. '       ' → logprob: -2.7121171951293945
    6. ' for' → logprob: -4.3371171951293945
    7. '           ' → logprob: -5.2121171951293945
    8. ' if' → logprob: -6.7121171951293945
    9. ' P' → logprob: -6.9621171951293945
    10. '```' → logprob: -9.462117195129395

Token 463: ' ren' (ID: 5427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5403479933738708
    2. ' for' → logprob: -0.9153479933738708
    3. '   ' → logprob: -4.290348052978516
    4. '       ' → logprob: -6.790348052978516
    5. 'if' → logprob: -7.290348052978516
    6. ' P' → logprob: -8.290348052978516
    7. ' if' → logprob: -8.540348052978516
    8. '	for' → logprob: -8.790348052978516
    9. 'P' → logprob: -8.915348052978516
    10. '    ' → logprob: -9.040348052978516

Token 464: 'verse' (ID: 7093)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9312615990638733
    2. '   ' → logprob: -1.1812615394592285
    3. 'for' → logprob: -1.6812615394592285
    4. 'ext' → logprob: -2.9312615394592285
    5. '       ' → logprob: -4.8062615394592285
    6. 'Q' → logprob: -4.8062615394592285
    7. 'er' → logprob: -4.8062615394592285
    8. 'forcer' → logprob: -5.5562615394592285
    9. ' Q' → logprob: -5.8062615394592285
    10. 's' → logprob: -6.0562615394592285

Token 465: ' pour' (ID: 1930)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.17281365394592285
    2. '   ' → logprob: -2.297813653945923
    3. ' Q' → logprob: -3.922813653945923
    4. '(Q' → logprob: -4.047813415527344
    5. 'for' → logprob: -4.297813415527344
    6. 'range' → logprob: -6.047813415527344
    7. '       ' → logprob: -6.172813415527344
    8. ' for' → logprob: -6.172813415527344
    9. ' range' → logprob: -8.172813415527344
    10. 'X' → logprob: -8.297813415527344

Token 466: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3757812976837158
    2. ' for' → logprob: -1.8757812976837158
    3. 'Q' → logprob: -2.000781297683716
    4. 'X' → logprob: -4.750781059265137
    5. '   ' → logprob: -5.000781059265137
    6. ' Q' → logprob: -5.250781059265137
    7. 'range' → logprob: -6.625781059265137
    8. 'q' → logprob: -7.125781059265137
    9. ' range' → logprob: -7.750781059265137
    10. 'x' → logprob: -7.875781059265137

Token 467: ' parcours' (ID: 62625)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2727166414260864
    2. ' Q' → logprob: -2.272716522216797
    3. 'for' → logprob: -3.147716522216797
    4. 'i' → logprob: -3.772716522216797
    5. ' for' → logprob: -3.897716522216797
    6. ' reversed' → logprob: -3.897716522216797
    7. ' i' → logprob: -4.772716522216797
    8. ' range' → logprob: -5.397716522216797
    9. 'append' → logprob: -5.772716522216797
    10. 'range' → logprob: -5.897716522216797

Token 468: ' profond' (ID: 82671)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.2273104041814804
    2. 'Q' → logprob: -2.6023104190826416
    3. 'for' → logprob: -2.7273104190826416
    4. '   ' → logprob: -3.3523104190826416
    5. '(X' → logprob: -4.7273101806640625
    6. '(i' → logprob: -4.9773101806640625
    7. 'X' → logprob: -5.4773101806640625
    8. '([' → logprob: -5.9773101806640625
    9. '(re' → logprob: -6.8523101806640625
    10. '       ' → logprob: -6.8523101806640625

Token 469: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27198144793510437
    2. '       ' → logprob: -1.8969814777374268
    3. 'for' → logprob: -3.1469814777374268
    4. 'Q' → logprob: -3.5219814777374268
    5. ' for' → logprob: -4.771981239318848
    6. '(Q' → logprob: -5.896981239318848
    7. '[::-' → logprob: -6.771981239318848
    8. 'while' → logprob: -6.896981239318848
    9. ' Q' → logprob: -7.271981239318848
    10. '           ' → logprob: -7.646981239318848

Token 470: ' c' (ID: 274)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.40490031242370605
    2. ' Q' → logprob: -1.779900312423706
    3. '   ' → logprob: -2.029900312423706
    4. '       ' → logprob: -4.404900550842285
    5. 'for' → logprob: -5.029900550842285
    6. ' for' → logprob: -5.279900550842285
    7. 'X' → logprob: -5.904900550842285
    8. '	Q' → logprob: -6.279900550842285
    9. '#' → logprob: -6.404900550842285
    10. ' not' → logprob: -7.529900550842285

Token 471: '’est' (ID: 6838)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.01857503317296505
    2. 'on' → logprob: -5.018575191497803
    3. 'orrect' → logprob: -6.518575191497803
    4. 'continue' → logprob: -6.643575191497803
    5. 'om' → logprob: -6.893575191497803
    6. 'ounter' → logprob: -7.018575191497803
    7. ''est' → logprob: -7.018575191497803
    8. 'omme' → logprob: -7.268575191497803
    9. 'a' → logprob: -7.268575191497803
    10. 'e' → logprob: -8.268574714660645

Token 472: ' pas' (ID: 2173)
  Prédit: ' ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ok' → logprob: -1.1570216417312622
    2. ' OK' → logprob: -2.1570215225219727
    3. ' correct' → logprob: -2.1570215225219727
    4. ' bien' → logprob: -2.5320215225219727
    5. 'bien' → logprob: -2.7820215225219727
    6. 'ok' → logprob: -3.0320215225219727
    7. 'OK' → logprob: -3.4070215225219727
    8. ' okay' → logprob: -3.7820215225219727
    9. ' vrai' → logprob: -3.9070215225219727
    10. 'tout' → logprob: -3.9070215225219727

Token 473: ' obligé' (ID: 187574)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.2722765803337097
    2. 'Q' → logprob: -3.3972766399383545
    3. 'stack' → logprob: -3.3972766399383545
    4. 'la' → logprob: -3.8972766399383545
    5. 'for' → logprob: -4.272276401519775
    6. 'le' → logprob: -4.522276401519775
    7. 'X' → logprob: -4.897276401519775
    8. 'comme' → logprob: -5.022276401519775
    9. 'optimal' → logprob: -5.022276401519775
    10. 'à' → logprob: -5.272276401519775

Token 474: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14441625773906708
    2. '<|end|>' → logprob: -2.144416332244873
    3. ' for' → logprob: -5.144416332244873
    4. ',' → logprob: -6.019416332244873
    5. 'for' → logprob: -6.269416332244873
    6. '       ' → logprob: -6.519416332244873
    7. '    
' → logprob: -6.644416332244873
    8. ')' → logprob: -6.894416332244873
    9. ' ' → logprob: -7.144416332244873
    10. '  
' → logprob: -7.644416332244873

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025576278567314148
    2. 'for' → logprob: -4.275576114654541
    3. ' for' → logprob: -4.650576114654541
    4. '	for' → logprob: -7.775576114654541
    5. '	Q' → logprob: -7.775576114654541
    6. '       ' → logprob: -7.900576114654541
    7. 'Q' → logprob: -8.2755765914917
    8. '<|end|>' → logprob: -9.5255765914917
    9. '    
' → logprob: -10.4005765914917
    10. '(Q' → logprob: -10.5255765914917

Token 476: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5509175062179565
    2. '   ' → logprob: -1.0509175062179565
    3. 'Q' → logprob: -3.175917625427246
    4. ' for' → logprob: -3.550917625427246
    5. 'X' → logprob: -6.300917625427246
    6. 'P' → logprob: -7.175917625427246
    7. '       ' → logprob: -7.675917625427246
    8. ' Q' → logprob: -8.675917625427246
    9. 'if' → logprob: -8.800917625427246
    10. '    
' → logprob: -11.050917625427246

Token 477: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7436325550079346
    2. 'v' → logprob: -1.2436325550079346
    3. 'w' → logprob: -2.8686325550079346
    4. 'u' → logprob: -3.1186325550079346
    5. 'x' → logprob: -3.2436325550079346
    6. 'e' → logprob: -3.2436325550079346
    7. ' j' → logprob: -4.4936323165893555
    8. 'k' → logprob: -4.6186323165893555
    9. 'c' → logprob: -4.7436323165893555
    10. ' v' → logprob: -4.9936323165893555

Token 478: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20144179463386536
    2. ' in' → logprob: -1.701441764831543
    3. ' ' → logprob: -11.326441764831543
    4. '	in' → logprob: -11.826441764831543
    5. 'a' → logprob: -12.326441764831543
    6. '   ' → logprob: -13.326441764831543
    7. '  ' → logprob: -13.451441764831543
    8. 'n' → logprob: -14.951441764831543
    9. '_in' → logprob: -15.201441764831543
    10. ' a' → logprob: -15.326441764831543

Token 479: ' reversed' (ID: 57184)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12590478360652924
    2. 're' → logprob: -2.2509047985076904
    3. 'sorted' → logprob: -4.375904560089111
    4. ' reversed' → logprob: -8.25090503692627
    5. ' X' → logprob: -9.62590503692627
    6. 'range' → logprob: -10.12590503692627
    7. 'reverse' → logprob: -10.62590503692627
    8. 'list' → logprob: -12.00090503692627
    9. '[X' → logprob: -12.37590503692627
    10. 'rev' → logprob: -12.62590503692627

Token 480: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. 'X' → logprob: -15.000001907348633
    4. '(x' → logprob: -18.750001907348633
    5. '((' → logprob: -18.875001907348633
    6. ' (' → logprob: -19.250001907348633
    7. '(
' → logprob: -19.750001907348633
    8. '[X' → logprob: -19.875001907348633
    9. '(range' → logprob: -20.625001907348633
    10. '(Q' → logprob: -21.000001907348633

Token 481: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.375003814697266
    3. '[a' → logprob: -13.875003814697266
    4. ' [' → logprob: -14.125003814697266
    5. 'i' → logprob: -15.750003814697266
    6. ')' → logprob: -16.000003814697266
    7. ')[' → logprob: -16.250003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '[
' → logprob: -17.000003814697266
    10. '[j' → logprob: -17.500003814697266

Token 482: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.042968250811100006
    2. '):' → logprob: -3.292968273162842
    3. ']):
' → logprob: -5.542968273162842
    4. ']:' → logprob: -7.292968273162842
    5. ']' → logprob: -8.542967796325684
    6. '):
' → logprob: -9.667967796325684
    7. '>):' → logprob: -10.792967796325684
    8. '])' → logprob: -11.167967796325684
    9. ')' → logprob: -11.917967796325684
    10. '）：' → logprob: -11.917967796325684

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008034920319914818
    2. ' if' → logprob: -5.383034706115723
    3. 'if' → logprob: -6.133034706115723
    4. '       ' → logprob: -7.008034706115723
    5. '   ' → logprob: -8.383034706115723
    6. 'P' → logprob: -9.508034706115723
    7. 'Q' → logprob: -11.258034706115723
    8. '               ' → logprob: -12.383034706115723
    9. ' P' → logprob: -12.883034706115723
    10. '          ' → logprob: -12.883034706115723

Token 484: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003158707171678543
    2. '       ' → logprob: -6.5031585693359375
    3. '   ' → logprob: -7.2531585693359375
    4. '           ' → logprob: -7.3781585693359375
    5. 'P' → logprob: -8.628158569335938
    6. ' if' → logprob: -8.878158569335938
    7. '               ' → logprob: -13.003158569335938
    8. '	if' → logprob: -14.378158569335938
    9. '```' → logprob: -15.128158569335938
    10. 'If' → logprob: -15.378158569335938

Token 485: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05227150022983551
    2. ' a' → logprob: -3.052271604537964
    3. 'P' → logprob: -6.177271366119385
    4. ' not' → logprob: -7.802271366119385
    5. 'USED' → logprob: -8.052271842956543
    6. ' P' → logprob: -8.302271842956543
    7. '   ' → logprob: -8.677271842956543
    8. ' USED' → logprob: -8.802271842956543
    9. 'not' → logprob: -9.052271842956543
    10. 'used' → logprob: -9.802271842956543

Token 486: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3135696351528168
    2. ' !=' → logprob: -1.3135696649551392
    3. '==' → logprob: -8.813570022583008
    4. ' not' → logprob: -9.063570022583008
    5. ' ==' → logprob: -11.063570022583008
    6. 'not' → logprob: -11.813570022583008
    7. '()!=' → logprob: -12.188570022583008
    8. ')!=' → logprob: -12.563570022583008
    9. ']!=' → logprob: -12.938570022583008
    10. '!=-' → logprob: -13.063570022583008

Token 487: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -9.007317567011341e-05
    2. ' P' → logprob: -9.375089645385742
    3. '   ' → logprob: -12.875089645385742
    4. ' ' → logprob: -13.875089645385742
    5. 'i' → logprob: -14.125089645385742
    6. 'p' → logprob: -14.500089645385742
    7. '  ' → logprob: -15.750089645385742
    8. '	P' → logprob: -15.750089645385742
    9. '       ' → logprob: -16.875089645385742
    10. '    ' → logprob: -17.000089645385742

Token 488: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002671376569196582
    2. 'i' → logprob: -6.002671241760254
    3. '[j' → logprob: -8.627671241760254
    4. ' i' → logprob: -12.377671241760254
    5. '[' → logprob: -12.627671241760254
    6. '   ' → logprob: -13.127671241760254
    7. 'j' → logprob: -13.377671241760254
    8. ' [' → logprob: -13.877671241760254
    9. '[a' → logprob: -13.877671241760254
    10. 'a' → logprob: -14.252671241760254

Token 489: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0570814311504364
    2. '[i' → logprob: -3.807081460952759
    3. ']:' → logprob: -4.05708122253418
    4. ']' → logprob: -4.30708122253418
    5. '[a' → logprob: -6.93208122253418
    6. ':
' → logprob: -7.68208122253418
    7. ' and' → logprob: -8.05708122253418
    8. 'and' → logprob: -8.80708122253418
    9. 'a' → logprob: -8.93208122253418
    10. ']:

' → logprob: -9.05708122253418

Token 490: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25491592288017273
    2. 'P' → logprob: -2.004915952682495
    3. ' P' → logprob: -3.129915952682495
    4. '       ' → logprob: -3.254915952682495
    5. '   ' → logprob: -5.629915714263916
    6. '           ' → logprob: -6.504915714263916
    7. '<|end|>' → logprob: -6.879915714263916
    8. '```' → logprob: -7.129915714263916
    9. ',' → logprob: -8.004916191101074
    10. ',P' → logprob: -8.629916191101074

Token 491: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.00026205103495158255
    2. ' P' → logprob: -8.625262260437012
    3. '               ' → logprob: -9.500262260437012
    4. '   ' → logprob: -12.250262260437012
    5. '           ' → logprob: -13.625262260437012
    6. '       ' → logprob: -14.875262260437012
    7. ' ' → logprob: -14.875262260437012
    8. '	P' → logprob: -15.125262260437012
    9. '                   ' → logprob: -15.750262260437012
    10. '```' → logprob: -15.750262260437012

Token 492: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.014187601394951344
    2. 'a' → logprob: -4.264187812805176
    3. ' a' → logprob: -10.764187812805176
    4. '(a' → logprob: -14.389187812805176
    5. '[' → logprob: -14.889187812805176
    6. '               ' → logprob: -15.014187812805176
    7. '   ' → logprob: -15.014187812805176
    8. ' [' → logprob: -15.389187812805176
    9. '[i' → logprob: -15.389187812805176
    10. '#a' → logprob: -15.514187812805176

Token 493: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07061759382486343
    2. ' =' → logprob: -2.82061767578125
    3. ']' → logprob: -4.82061767578125
    4. ']=' → logprob: -7.57061767578125
    5. '=i' → logprob: -10.44561767578125
    6. ')' → logprob: -12.82061767578125
    7. '[i' → logprob: -13.82061767578125
    8. ',' → logprob: -14.57061767578125
    9. '[' → logprob: -14.57061767578125
    10. '=a' → logprob: -15.07061767578125

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804321587085724
    2. ' =' → logprob: -3.288043260574341
    3. '=i' → logprob: -13.413043022155762
    4. ')' → logprob: -15.663043022155762
    5. ')=' → logprob: -16.788043975830078
    6. ']=' → logprob: -16.913043975830078
    7. '=
' → logprob: -17.163043975830078
    8. '=a' → logprob: -17.163043975830078
    9. ']' → logprob: -17.538043975830078
    10. ' ' → logprob: -18.413043975830078

Token 495: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031777136027812958
    2. ' i' → logprob: -5.753177642822266
    3. '	i' → logprob: -17.003177642822266
    4. '   ' → logprob: -19.378177642822266
    5. ' ' → logprob: -20.003177642822266
    6. '_i' → logprob: -20.628177642822266
    7. '{i' → logprob: -21.003177642822266
    8. ',i' → logprob: -21.253177642822266
    9. ')i' → logprob: -21.378177642822266
    10. '[i' → logprob: -21.628177642822266

Token 496: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008541669230908155
    2. '
' → logprob: -7.375854015350342
    3. 'Q' → logprob: -9.5008544921875
    4. ' Q' → logprob: -10.1258544921875
    5. '
' → logprob: -10.2508544921875
    6. ',Q' → logprob: -10.8758544921875
    7. '                
' → logprob: -11.1258544921875
    8. '   ' → logprob: -11.7508544921875
    9. ',' → logprob: -12.0008544921875
    10. '<|end|>' → logprob: -12.2508544921875

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.2987729102605954e-05
    2. 'Q' → logprob: -11.250042915344238
    3. '```' → logprob: -11.750042915344238
    4. '           ' → logprob: -12.250042915344238
    5. '   ' → logprob: -12.375042915344238
    6. ' Q' → logprob: -12.625042915344238
    7. '       ' → logprob: -12.875042915344238
    8. '              ' → logprob: -13.125042915344238
    9. '``' → logprob: -13.875042915344238
    10. '                   ' → logprob: -14.250042915344238

Token 498: ' #' (ID: 1069)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00012928384239785373
    2. ' Q' → logprob: -9.000129699707031
    3. '               ' → logprob: -12.125129699707031
    4. '   ' → logprob: -15.500129699707031
    5. '	Q' → logprob: -15.750129699707031
    6. '           ' → logprob: -17.87512969970703
    7. ' ' → logprob: -17.87512969970703
    8. '       ' → logprob: -19.25012969970703
    9. ',Q' → logprob: -19.25012969970703
    10. '                   ' → logprob: -19.37512969970703

Token 499: ' C' (ID: 363)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -6.392202976712724e-06
    2. '               ' → logprob: -12.625006675720215
    3. ' Q' → logprob: -12.750006675720215
    4. '   ' → logprob: -16.2500057220459
    5. '           ' → logprob: -17.2500057220459
    6. '                   ' → logprob: -18.7500057220459
    7. '	Q' → logprob: -19.0000057220459
    8. '       ' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.3750057220459
    10. '```' → logprob: -20.0000057220459

Token 500: '’est' (ID: 6838)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0012035658583045006
    2. ' Q' → logprob: -7.126203536987305
    3. '               ' → logprob: -7.876203536987305
    4. '	Q' → logprob: -12.001203536987305
    5. '           ' → logprob: -12.751203536987305
    6. '=' → logprob: -13.001203536987305
    7. '   ' → logprob: -13.126203536987305
    8. '              ' → logprob: -13.251203536987305
    9. ' ' → logprob: -14.126203536987305
    10. '  ' → logprob: -14.376203536987305

Token 501: ' sale' (ID: 7357)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.07725569605827332
    2. '               ' → logprob: -2.9522557258605957
    3. ' Q' → logprob: -3.8272557258605957
    4. '                   ' → logprob: -8.577255249023438
    5. '           ' → logprob: -10.577255249023438
    6. ' ' → logprob: -10.827255249023438
    7. '                ' → logprob: -11.202255249023438
    8. '(Q' → logprob: -11.327255249023438
    9. '              ' → logprob: -11.452255249023438
    10. '0' → logprob: -11.577255249023438

Token 502: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007131471065804362
    2. 'Q' → logprob: -7.625713348388672
    3. ' Q' → logprob: -8.750713348388672
    4. '       ' → logprob: -11.125713348388672
    5. '   ' → logprob: -11.625713348388672
    6. '	Q' → logprob: -11.750713348388672
    7. '              ' → logprob: -12.000713348388672
    8. '           ' → logprob: -12.000713348388672
    9. ',Q' → logprob: -12.000713348388672
    10. '<|end|>' → logprob: -12.750713348388672

Token 503: ' modifier' (ID: 37684)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.029870126396417618
    2. ' Q' → logprob: -3.52987003326416
    3. 'True' → logprob: -9.90487003326416
    4. '   ' → logprob: -11.27987003326416
    5. 'not' → logprob: -11.52987003326416
    6. ' not' → logprob: -12.15487003326416
    7. '```' → logprob: -12.27987003326416
    8. ' True' → logprob: -12.52987003326416
    9. 'continue' → logprob: -12.52987003326416
    10. '	Q' → logprob: -12.65487003326416

Token 504: ' la' (ID: 557)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9244363307952881
    2. 'X' → logprob: -1.299436330795288
    3. ' Q' → logprob: -1.924436330795288
    4. 'a' → logprob: -2.549436330795288
    5. ' a' → logprob: -2.924436330795288
    6. ' X' → logprob: -3.299436330795288
    7. ' ' → logprob: -5.799436569213867
    8. 'i' → logprob: -6.049436569213867
    9. '               ' → logprob: -6.299436569213867
    10. 'C' → logprob: -6.549436569213867

Token 505: ' liste' (ID: 31719)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.019100768491625786
    2. 'X' → logprob: -4.269100666046143
    3. ' Q' → logprob: -5.519100666046143
    4. 'i' → logprob: -9.1441011428833
    5. ' code' → logprob: -9.3941011428833
    6. 'C' → logprob: -9.5191011428833
    7. 'a' → logprob: -9.7691011428833
    8. 'list' → logprob: -9.8941011428833
    9. 'for' → logprob: -10.0191011428833
    10. ' queue' → logprob: -10.0191011428833

Token 506: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08632674813270569
    2. '                
' → logprob: -2.586326837539673
    3. ',' → logprob: -6.211326599121094
    4. '               
' → logprob: -6.586326599121094
    5. '                    
' → logprob: -7.836326599121094
    6. '```' → logprob: -8.086326599121094
    7. '  
' → logprob: -8.211326599121094
    8. '                   ' → logprob: -8.336326599121094
    9. '                ' → logprob: -8.336326599121094
    10. ' ' → logprob: -8.336326599121094

Token 507: ' cours' (ID: 10138)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.07716332376003265
    2. 'cours' → logprob: -3.4521632194519043
    3. 'm' → logprob: -3.9521632194519043
    4. 'plein' → logprob: -4.202163219451904
    5. 'plac' → logprob: -6.202163219451904
    6. ' place' → logprob: -6.702163219451904
    7. '```' → logprob: -6.827163219451904
    8. 'ple' → logprob: -7.202163219451904
    9. 'P' → logprob: -7.202163219451904
    10. '   ' → logprob: -8.452163696289062

Token 508: ' mais' (ID: 2899)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013810492237098515
    2. ',' → logprob: -10.000138282775879
    3. '                
' → logprob: -10.750138282775879
    4. ' Q' → logprob: -11.125138282775879
    5. ',Q' → logprob: -11.125138282775879
    6. '              ' → logprob: -11.750138282775879
    7. '			' → logprob: -12.000138282775879
    8. '<|end|>' → logprob: -12.125138282775879
    9. 'Q' → logprob: -12.875138282775879
    10. ')' → logprob: -13.000138282775879

Token 509: ' bon' (ID: 4846)
  Prédit: ' Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.5833051800727844
    2. '               ' → logprob: -0.8333051800727844
    3. '                ' → logprob: -5.583305358886719
    4. 'Q' → logprob: -6.083305358886719
    5. '```' → logprob: -7.208305358886719
    6. '``' → logprob: -8.708305358886719
    7. '                
' → logprob: -8.958305358886719
    8. '              ' → logprob: -9.458305358886719
    9. ' ' → logprob: -10.208305358886719
    10. '                   ' → logprob: -10.708305358886719

Token 510: '…
' (ID: 15849)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024812210351228714
    2. ' Q' → logprob: -4.0248122215271
    3. 'Q' → logprob: -5.0248122215271
    4. ',Q' → logprob: -11.149811744689941
    5. '                ' → logprob: -11.274811744689941
    6. '              ' → logprob: -11.399811744689941
    7. '                   ' → logprob: -11.899811744689941
    8. '                
' → logprob: -12.274811744689941
    9. '           ' → logprob: -12.649811744689941
    10. ' ' → logprob: -12.899811744689941

Token 511: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2073747217655182
    2. 'Q' → logprob: -1.9573746919631958
    3. ' Q' → logprob: -3.0823748111724854
    4. '   ' → logprob: -9.832374572753906
    5. '       ' → logprob: -10.082374572753906
    6. '           ' → logprob: -10.332374572753906
    7. ',Q' → logprob: -10.582374572753906
    8. ' ' → logprob: -11.207374572753906
    9. '                   ' → logprob: -11.457374572753906
    10. '	Q' → logprob: -11.832374572753906

Token 512: ' for' (ID: 395)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0501798577606678
    2. 'X' → logprob: -3.050179958343506
    3. '               ' → logprob: -7.175179958343506
    4. ' Q' → logprob: -7.925179958343506
    5. '           ' → logprob: -8.800179481506348
    6. 'while' → logprob: -9.050179481506348
    7. 'if' → logprob: -9.550179481506348
    8. '   ' → logprob: -10.300179481506348
    9. 'C' → logprob: -10.675179481506348
    10. 'del' → logprob: -11.050179481506348

Token 513: ' k' (ID: 372)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6083306670188904
    2. ' a' → logprob: -1.7333307266235352
    3. ' _' → logprob: -2.108330726623535
    4. 'b' → logprob: -2.608330726623535
    5. 'a' → logprob: -3.858330726623535
    6. '_' → logprob: -3.983330726623535
    7. ' j' → logprob: -4.483330726623535
    8. ' ' → logprob: -5.358330726623535
    9. ' x' → logprob: -5.358330726623535
    10. ' idx' → logprob: -6.233330726623535

Token 514: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7021222710609436
    2. ' in' → logprob: -0.7021222710609436
    3. ' ' → logprob: -6.077122211456299
    4. 'X' → logprob: -6.327122211456299
    5. 'a' → logprob: -6.327122211456299
    6. ' X' → logprob: -7.452122211456299
    7. '  ' → logprob: -7.577122211456299
    8. 'k' → logprob: -7.952122211456299
    9. ' k' → logprob: -8.077122688293457
    10. ' a' → logprob: -8.452122688293457

Token 515: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6469180583953857
    2. 'X' → logprob: -1.5219180583953857
    3. ' range' → logprob: -1.5219180583953857
    4. 'Q' → logprob: -4.146918296813965
    5. 're' → logprob: -4.396918296813965
    6. 'ET' → logprob: -5.646918296813965
    7. 'C' → logprob: -6.396918296813965
    8. ' X' → logprob: -6.396918296813965
    9. ' reversed' → logprob: -6.896918296813965
    10. '[' → logprob: -7.271918296813965

Token 516: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.034250658005476
    2. '(len' → logprob: -3.5342507362365723
    3. ' len' → logprob: -5.909250736236572
    4. 'a' → logprob: -7.659250736236572
    5. 'n' → logprob: -7.784250736236572
    6. 'i' → logprob: -8.284250259399414
    7. 'N' → logprob: -8.909250259399414
    8. '(' → logprob: -9.409250259399414
    9. 'ET' → logprob: -9.534250259399414
    10. '2' → logprob: -9.784250259399414

Token 517: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.009730944409966469
    2. '(Q' → logprob: -5.009730815887451
    3. '(C' → logprob: -6.509730815887451
    4. '(T' → logprob: -7.009730815887451
    5. '(' → logprob: -7.634730815887451
    6. 'X' → logprob: -9.88473129272461
    7. '(A' → logprob: -10.00973129272461
    8. '(P' → logprob: -10.38473129272461
    9. 'Q' → logprob: -12.50973129272461
    10. '(a' → logprob: -14.50973129272461

Token 518: '[a' (ID: 32035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4754718840122223
    2. '[a' → logprob: -0.9754718542098999
    3. '[X' → logprob: -7.1004719734191895
    4. 'a' → logprob: -8.100471496582031
    5. 'i' → logprob: -9.600471496582031
    6. ' [' → logprob: -9.600471496582031
    7. '[' → logprob: -10.600471496582031
    8. '[x' → logprob: -10.600471496582031
    9. '[P' → logprob: -10.850471496582031
    10. ')' → logprob: -11.475471496582031

Token 519: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.005719504784792662
    2. ')):' → logprob: -5.5057196617126465
    3. '))' → logprob: -7.6307196617126465
    4. '[i' → logprob: -8.130719184875488
    5. ' ' → logprob: -8.380719184875488
    6. '[a' → logprob: -8.630719184875488
    7. ')' → logprob: -9.255719184875488
    8. ')-' → logprob: -9.380719184875488
    9. '()))' → logprob: -9.380719184875488
    10. ')):
' → logprob: -9.630719184875488

Token 520: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04260778799653053
    2. ' if' → logprob: -3.9176077842712402
    3. 'if' → logprob: -4.16760778427124
    4. '   ' → logprob: -5.91760778427124
    5. 'X' → logprob: -6.54260778427124
    6. '                       ' → logprob: -7.16760778427124
    7. '<|end|>' → logprob: -7.79260778427124
    8. ' X' → logprob: -8.167608261108398
    9. '               ' → logprob: -8.417608261108398
    10. ' ' → logprob: -9.167608261108398

Token 521: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005733483005315065
    2. '                   ' → logprob: -5.755733489990234
    3. 'X' → logprob: -6.380733489990234
    4. '   ' → logprob: -8.005733489990234
    5. ' if' → logprob: -8.255733489990234
    6. '       ' → logprob: -9.005733489990234
    7. '                       ' → logprob: -9.130733489990234
    8. '               ' → logprob: -10.880733489990234
    9. '           ' → logprob: -11.880733489990234
    10. ' X' → logprob: -12.505733489990234

Token 522: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0008092674543149769
    2. ' X' → logprob: -7.625809192657471
    3. '   ' → logprob: -8.125809669494629
    4. 'P' → logprob: -11.375809669494629
    5. ' ' → logprob: -12.000809669494629
    6. '  ' → logprob: -12.375809669494629
    7. '	X' → logprob: -14.000809669494629
    8. '    ' → logprob: -14.750809669494629
    9. 'not' → logprob: -14.875809669494629
    10. 'x' → logprob: -15.000809669494629

Token 523: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007185076246969402
    2. 'a' → logprob: -7.250718593597412
    3. '[i' → logprob: -12.875718116760254
    4. '   ' → logprob: -13.375718116760254
    5. ' [' → logprob: -14.125718116760254
    6. '[' → logprob: -14.250718116760254
    7. '<a' → logprob: -14.500718116760254
    8. ' a' → logprob: -14.875718116760254
    9. '[X' → logprob: -15.000718116760254
    10. '(a' → logprob: -15.250718116760254

Token 524: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.09528762102127075
    2. '[a' → logprob: -2.595287561416626
    3. '[i' → logprob: -4.720287799835205
    4. '][' → logprob: -5.345287799835205
    5. 'k' → logprob: -6.720287799835205
    6. 'a' → logprob: -8.095287322998047
    7. ')[' → logprob: -8.345287322998047
    8. '[' → logprob: -8.470287322998047
    9. '[j' → logprob: -9.220287322998047
    10. '   ' → logprob: -9.720287322998047

Token 525: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.47495681833243e-05
    2. '[k' → logprob: -10.875024795532227
    3. '   ' → logprob: -12.625024795532227
    4. ' k' → logprob: -13.625024795532227
    5. '           ' → logprob: -14.875024795532227
    6. '	k' → logprob: -15.375024795532227
    7. ' ' → logprob: -16.000024795532227
    8. '       ' → logprob: -16.125024795532227
    9. '```' → logprob: -16.125024795532227
    10. '
' → logprob: -16.250024795532227

Token 526: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.4905913770198822
    2. ']' → logprob: -0.9905914068222046
    3. '==' → logprob: -4.115591526031494
    4. ' ==' → logprob: -10.240591049194336
    5. '']==' → logprob: -11.990591049194336
    6. ')==' → logprob: -12.240591049194336
    7. '```' → logprob: -12.490591049194336
    8. '}' → logprob: -12.490591049194336
    9. ')' → logprob: -13.865591049194336
    10. '===' → logprob: -13.990591049194336

Token 527: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002085308311507106
    2. ' ==' → logprob: -6.252085208892822
    3. ']==' → logprob: -8.87708568572998
    4. '==
' → logprob: -12.12708568572998
    5. '==-' → logprob: -12.37708568572998
    6. ']' → logprob: -13.50208568572998
    7. '===' → logprob: -13.87708568572998
    8. '=' → logprob: -13.87708568572998
    9. ')==' → logprob: -14.00208568572998
    10. '()==' → logprob: -14.12708568572998

Token 528: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006855101673863828
    2. 'P' → logprob: -8.250685691833496
    3. ' i' → logprob: -8.250685691833496
    4. '   ' → logprob: -9.000685691833496
    5. 'p' → logprob: -10.875685691833496
    6. ' ' → logprob: -11.500685691833496
    7. 'j' → logprob: -12.750685691833496
    8. ' P' → logprob: -13.250685691833496
    9. '  ' → logprob: -13.875685691833496
    10. '                   ' → logprob: -14.563185691833496

Token 529: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4564087688922882
    2. ':
' → logprob: -1.2064087390899658
    3. ':' → logprob: -3.831408739089966
    4. '):
' → logprob: -3.831408739089966
    5. ' =' → logprob: -4.456408977508545
    6. '=' → logprob: -5.831408977508545
    7. '                   ' → logprob: -6.331408977508545
    8. '<|end|>' → logprob: -6.331408977508545
    9. 'X' → logprob: -6.456408977508545
    10. ',' → logprob: -7.081408977508545

Token 530: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002553307916969061
    2. ' X' → logprob: -6.877553462982178
    3. ' =' → logprob: -7.627553462982178
    4. ',' → logprob: -8.25255298614502
    5. '                   ' → logprob: -8.87755298614502
    6. ':' → logprob: -9.12755298614502
    7. ':
' → logprob: -9.25255298614502
    8. '                        
' → logprob: -9.37755298614502
    9. '<|end|>' → logprob: -9.62755298614502
    10. 'X' → logprob: -10.00255298614502

Token 531: ' del' (ID: 1083)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.04158245399594307
    2. ' X' → logprob: -3.5415823459625244
    3. '                           ' → logprob: -4.6665825843811035
    4. '                       ' → logprob: -6.6665825843811035
    5. '                               ' → logprob: -7.1665825843811035
    6. 'x' → logprob: -9.916582107543945
    7. ' ' → logprob: -9.916582107543945
    8. ',X' → logprob: -10.416582107543945
    9. '   ' → logprob: -10.666582107543945
    10. ',' → logprob: -10.791582107543945

Token 532: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.07890113443136215
    2. 'X' → logprob: -2.5789010524749756
    3. '	X' → logprob: -12.453901290893555
    4. ' ' → logprob: -12.578901290893555
    5. '                       ' → logprob: -13.453901290893555
    6. '(X' → logprob: -14.203901290893555
    7. '>X' → logprob: -14.328901290893555
    8. '   ' → logprob: -14.828901290893555
    9. '[X' → logprob: -15.203901290893555
    10. '                   ' → logprob: -15.953901290893555

Token 533: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0001105762057704851
    2. 'a' → logprob: -9.125110626220703
    3. 'X' → logprob: -13.875110626220703
    4. '[X' → logprob: -14.875110626220703
    5. '[' → logprob: -15.750110626220703
    6. '[A' → logprob: -16.750110626220703
    7. '#a' → logprob: -17.375110626220703
    8. ' a' → logprob: -17.500110626220703
    9. '(a' → logprob: -17.875110626220703
    10. '   ' → logprob: -18.375110626220703

Token 534: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030183380469679832
    2. '[k' → logprob: -3.5301833152770996
    3. '[' → logprob: -9.030183792114258
    4. '[a' → logprob: -9.405183792114258
    5. 'k' → logprob: -9.530183792114258
    6. 'a' → logprob: -9.530183792114258
    7. ']' → logprob: -10.405183792114258
    8. '   ' → logprob: -11.780183792114258
    9. ' ][' → logprob: -11.905183792114258
    10. ' [' → logprob: -12.030183792114258

Token 535: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.3458322731312364e-06
    2. ' k' → logprob: -11.875007629394531
    3. '[k' → logprob: -16.12500762939453
    4. '                       ' → logprob: -16.50000762939453
    5. '                   ' → logprob: -17.00000762939453
    6. 'x' → logprob: -17.62500762939453
    7. '   ' → logprob: -17.75000762939453
    8. 'kx' → logprob: -17.75000762939453
    9. ',k' → logprob: -18.00000762939453
    10. '{k' → logprob: -18.37500762939453

Token 536: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00018899753922596574
    2. '               ' → logprob: -9.875188827514648
    3. '                   ' → logprob: -10.250188827514648
    4. ',' → logprob: -10.500188827514648
    5. '<|end|>' → logprob: -10.625188827514648
    6. ')' → logprob: -11.375188827514648
    7. '                        
' → logprob: -11.625188827514648
    8. '       ' → logprob: -12.000188827514648
    9. '           ' → logprob: -12.000188827514648
    10. '                        ' → logprob: -12.750188827514648

Token 537: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001366744691040367
    2. '               ' → logprob: -9.250136375427246
    3. '                   ' → logprob: -10.625136375427246
    4. '                        
' → logprob: -12.000136375427246
    5. 'break' → logprob: -13.125136375427246
    6. '                        ' → logprob: -13.250136375427246
    7. '       ' → logprob: -13.500136375427246
    8. '           ' → logprob: -13.750136375427246
    9. '                      ' → logprob: -14.125136375427246
    10. '                     ' → logprob: -14.250136375427246

Token 538: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007460273336619139
    2. 'break' (adapté à ' break') → logprob: -5.257460117340088
    3. ' break' → logprob: -6.132460117340088
    4. '                   ' → logprob: -10.757460594177246
    5. '               ' → logprob: -11.007460594177246
    6. '                        
' → logprob: -12.132460594177246
    7. '	break' → logprob: -12.382460594177246
    8. '                        ' → logprob: -13.632460594177246
    9. ' ' → logprob: -13.632460594177246
    10. '       ' → logprob: -14.507460594177246

Token 539: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000782826216891408
    2. '                       ' → logprob: -7.6257829666137695
    3. '       ' → logprob: -8.75078296661377
    4. '<|end|>' → logprob: -9.75078296661377
    5. '```' → logprob: -10.50078296661377
    6. ' Q' → logprob: -11.50078296661377
    7. '                   ' → logprob: -11.75078296661377
    8. '           ' → logprob: -12.00078296661377
    9. '   ' → logprob: -12.12578296661377
    10. '<|end|>' → logprob: -12.62578296661377

Token 540: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010205440921708941
    2. 'Q' → logprob: -7.126020431518555
    3. ' Q' → logprob: -9.001020431518555
    4. '                       ' → logprob: -9.751020431518555
    5. '```' → logprob: -11.751020431518555
    6. '       ' → logprob: -11.876020431518555
    7. ',Q' → logprob: -12.126020431518555
    8. '                   ' → logprob: -12.251020431518555
    9. '           ' → logprob: -13.376020431518555
    10. '	Q' → logprob: -13.751020431518555

Token 541: ' Q' (ID: 1486)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002553784754127264
    2. 'Q' (adapté à ' Q') → logprob: -6.002553939819336
    3. ' Q' → logprob: -10.377553939819336
    4. '   ' → logprob: -10.502553939819336
    5. '       ' → logprob: -11.127553939819336
    6. '```' → logprob: -13.252553939819336
    7. ',Q' → logprob: -14.502553939819336
    8. '           ' → logprob: -14.627553939819336
    9. ' ' → logprob: -14.627553939819336
    10. '	Q' → logprob: -14.877553939819336

Token 542: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024817234370857477
    2. '.extend' → logprob: -6.002481937408447
    3. '.' → logprob: -12.127481460571289
    4. 'append' → logprob: -14.502481460571289
    5. '.pop' → logprob: -18.25248146057129
    6. '+=' → logprob: -19.25248146057129
    7. '.push' → logprob: -19.50248146057129
    8. 'Append' → logprob: -19.50248146057129
    9. ' .' → logprob: -20.00248146057129
    10. '[-' → logprob: -20.25248146057129

Token 543: '(~' (ID: 114991)
  Prédit: '(~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(~' → logprob: -0.008161921985447407
    2. '(a' → logprob: -4.883162021636963
    3. '(-' → logprob: -8.133161544799805
    4. '~' → logprob: -8.758161544799805
    5. 'a' → logprob: -10.383161544799805
    6. '(x' → logprob: -10.633161544799805
    7. '(i' → logprob: -10.883161544799805
    8. '(' → logprob: -11.508161544799805
    9. '((' → logprob: -11.633161544799805
    10. '(+' → logprob: -12.508161544799805

Token 544: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008503671269863844
    2. 'i' → logprob: -7.125850200653076
    3. 'x' → logprob: -10.625850677490234
    4. ' a' → logprob: -11.125850677490234
    5. 'X' → logprob: -12.750850677490234
    6. '(a' → logprob: -13.625850677490234
    7. '(' → logprob: -14.625850677490234
    8. ')' → logprob: -15.063350677490234
    9. ')a' → logprob: -15.063350677490234
    10. '(i' → logprob: -15.375850677490234

Token 545: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023325489833950996
    2. ')' → logprob: -3.7733254432678223
    3. ')
' → logprob: -10.02332592010498
    4. ',' → logprob: -10.77332592010498
    5. ' )
' → logprob: -11.77332592010498
    6. '               ' → logprob: -13.77332592010498
    7. ')

' → logprob: -14.02332592010498
    8. '       ' → logprob: -14.14832592010498
    9. ');
' → logprob: -14.39832592010498
    10. '),' → logprob: -14.52332592010498

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00035083942930214107
    2. 'Q' → logprob: -9.250350952148438
    3. '```' → logprob: -9.375350952148438
    4. ' Q' → logprob: -9.500350952148438
    5. '       ' → logprob: -10.750350952148438
    6. ',' → logprob: -10.875350952148438
    7. ',Q' → logprob: -11.625350952148438
    8. '<|end|>' → logprob: -11.875350952148438
    9. '			' → logprob: -12.000350952148438
    10. '   ' → logprob: -12.000350952148438

Token 547: ' Q' (ID: 1486)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -19.75002098083496
    4. 'Q' (adapté à ' Q') → logprob: -21.50002098083496
    5. '#a' → logprob: -21.87502098083496
    6. ' ' → logprob: -22.00002098083496
    7. '   ' → logprob: -22.25002098083496
    8. ',a' → logprob: -22.37502098083496
    9. ''a' → logprob: -22.62502098083496
    10. '               ' → logprob: -23.37502098083496

Token 548: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.313314952421933e-05
    2. '.' → logprob: -9.875062942504883
    3. 'append' → logprob: -11.500062942504883
    4. ' .' → logprob: -14.250062942504883
    5. '           ' → logprob: -15.250062942504883
    6. '       ' → logprob: -15.500062942504883
    7. '.extend' → logprob: -16.500062942504883
    8. 'app' → logprob: -16.625062942504883
    9. '.Append' → logprob: -16.625062942504883
    10. '.app' → logprob: -16.625062942504883

Token 549: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007230373448692262
    2. '(a' → logprob: -7.375722885131836
    3. ' a' → logprob: -9.250722885131836
    4. '(' → logprob: -15.875722885131836
    5. '	a' → logprob: -16.125722885131836
    6. ',a' → logprob: -17.250722885131836
    7. ''a' → logprob: -17.375722885131836
    8. '#a' → logprob: -17.375722885131836
    9. '[a' → logprob: -17.625722885131836
    10. '>a' → logprob: -17.875722885131836

Token 550: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047356789582408965
    2. ')
' → logprob: -7.750473499298096
    3. ' )' → logprob: -10.375473976135254
    4. '<|end|>' → logprob: -11.625473976135254
    5. ')return' → logprob: -14.500473976135254
    6. '<|end|>' → logprob: -14.625473976135254
    7. ')}' → logprob: -15.000473976135254
    8. ')#' → logprob: -15.125473976135254
    9. '   ' → logprob: -15.500473976135254
    10. ')

' → logprob: -15.500473976135254

Token 551: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20270681381225586
    2. 'return' → logprob: -1.7027068138122559
    3. ' return' → logprob: -6.702706813812256
    4. '	return' → logprob: -10.077707290649414
    5. '       ' → logprob: -11.577707290649414
    6. ' ' → logprob: -12.702707290649414
    7. ')' → logprob: -12.952707290649414
    8. '```' → logprob: -13.577707290649414
    9. '  ' → logprob: -13.702707290649414
    10. '[]' → logprob: -13.952707290649414

Token 553: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8913384675979614
    2. 'i' → logprob: -1.7663384675979614
    3. ' c' → logprob: -1.7663384675979614
    4. 'c' → logprob: -2.516338348388672
    5. ' k' → logprob: -3.016338348388672
    6. 'k' → logprob: -3.391338348388672
    7. ' x' → logprob: -4.016338348388672
    8. 'x' → logprob: -4.266338348388672
    9. 'a' → logprob: -4.766338348388672
    10. 'v' → logprob: -4.891338348388672

Token 554: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25271713733673096
    2. 'in' → logprob: -1.502717137336731
    3. ',' → logprob: -7.877717018127441
    4. ' ' → logprob: -8.002717018127441
    5. '_' → logprob: -10.752717018127441
    6. '  ' → logprob: -11.252717018127441
    7. 'C' → logprob: -11.877717018127441
    8. ' ,' → logprob: -11.877717018127441
    9. ' C' → logprob: -12.377717018127441
    10. '   ' → logprob: -12.377717018127441

Token 555: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17984789609909058
    2. ' range' → logprob: -1.8048479557037354
    3. 'C' → logprob: -10.304847717285156
    4. 'ANS' → logprob: -10.804847717285156
    5. ' ' → logprob: -11.304847717285156
    6. ' C' → logprob: -11.554847717285156
    7. 'ran' → logprob: -12.554847717285156
    8. 'ET' → logprob: -12.679847717285156
    9. '   ' → logprob: -12.804847717285156
    10. 'ans' → logprob: -13.304847717285156

Token 556: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.361182302236557
    2. '(N' → logprob: -1.4861823320388794
    3. 'n' → logprob: -3.23618221282959
    4. 'N' → logprob: -4.23618221282959
    5. '(len' → logprob: -4.23618221282959
    6. '(' → logprob: -4.86118221282959
    7. 'len' → logprob: -7.48618221282959
    8. '1' → logprob: -8.98618221282959
    9. ' (' → logprob: -9.48618221282959
    10. ' N' → logprob: -9.61118221282959

Token 557: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038385823369026184
    2. '):' → logprob: -3.2883858680725098
    3. '):
' → logprob: -9.038385391235352
    4. '   ' → logprob: -9.038385391235352
    5. ' ):
' → logprob: -10.038385391235352
    6. '-' → logprob: -11.413385391235352
    7. '+' → logprob: -11.788385391235352
    8. ' ' → logprob: -12.038385391235352
    9. ')' → logprob: -12.163385391235352
    10. '():
' → logprob: -12.288385391235352

Token 558: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033898331224918365
    2. '       ' → logprob: -3.53389835357666
    3. 'print' → logprob: -6.15889835357666
    4. ' print' → logprob: -6.28389835357666
    5. ' if' → logprob: -9.53389835357666
    6. ' for' → logprob: -10.40889835357666
    7. '	print' → logprob: -11.40889835357666
    8. '```' → logprob: -11.53389835357666
    9. ' ' → logprob: -11.90889835357666
    10. '    ' → logprob: -12.28389835357666

Token 559: ' AN' (ID: 3473)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05787006393074989
    2. 'ANS' → logprob: -3.5578701496124268
    3. '   ' → logprob: -4.057869911193848
    4. 'if' → logprob: -4.932869911193848
    5. ' print' → logprob: -6.057869911193848
    6. 'for' → logprob: -7.807869911193848
    7. 'sys' → logprob: -8.432869911193848
    8. ' if' → logprob: -8.932869911193848
    9. '       ' → logprob: -10.432869911193848
    10. 'ans' → logprob: -10.807869911193848

Token 560: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0010798488510772586
    2. '[S' → logprob: -6.87608003616333
    3. '[i' → logprob: -10.876079559326172
    4. '[' → logprob: -12.001079559326172
    5. '[C' → logprob: -12.126079559326172
    6. 'ANS' → logprob: -13.001079559326172
    7. '```' → logprob: -13.126079559326172
    8. 'SOR' → logprob: -13.251079559326172
    9. ' S' → logprob: -13.376079559326172
    10. '1' → logprob: -13.876079559326172

Token 561: '[i' (ID: 1768)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.5371723771095276
    2. '[i' → logprob: -1.1621723175048828
    3. '[' → logprob: -2.287172317504883
    4. '[c' → logprob: -7.537172317504883
    5. '\[' → logprob: -8.787172317504883
    6. '[
' → logprob: -9.162172317504883
    7. '```' → logprob: -9.287172317504883
    8. ' [' → logprob: -9.662172317504883
    9. '   ' → logprob: -10.287172317504883
    10. '[:]' → logprob: -10.537172317504883

Token 562: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16541217267513275
    2. ']+=' → logprob: -3.165412187576294
    3. ')' → logprob: -3.290412187576294
    4. ']=' → logprob: -3.790412187576294
    5. '=' → logprob: -4.290411949157715
    6. '+=' → logprob: -4.790411949157715
    7. ' =' → logprob: -5.290411949157715
    8. ' -=' → logprob: -5.290411949157715
    9. '   ' → logprob: -5.415411949157715
    10. ' +=' → logprob: -5.540411949157715

Token 563: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48503878712654114
    2. '+=' → logprob: -1.4850387573242188
    3. 'print' → logprob: -3.2350387573242188
    4. ' +=' → logprob: -3.2350387573242188
    5. ' =' → logprob: -3.6100387573242188
    6. ',' → logprob: -3.6100387573242188
    7. '   ' → logprob: -4.860038757324219
    8. '%=' → logprob: -4.985038757324219
    9. ' -=' → logprob: -6.360038757324219
    10. '-=' → logprob: -6.360038757324219

Token 564: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04702829569578171
    2. 'C' → logprob: -4.297028064727783
    3. 'N' → logprob: -5.172028064727783
    4. 'USED' → logprob: -5.547028064727783
    5. 'CT' → logprob: -5.797028064727783
    6. '1' → logprob: -5.922028064727783
    7. 'TMP' → logprob: -5.922028064727783
    8. 'ET' → logprob: -6.047028064727783
    9. '(' → logprob: -6.172028064727783
    10. ' f' → logprob: -6.297028064727783

Token 565: '(n' (ID: 2406)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.2079789936542511
    2. '(N' → logprob: -2.4579789638519287
    3. '(' → logprob: -2.9579789638519287
    4. '(C' → logprob: -3.3329789638519287
    5. '(n' → logprob: -4.832979202270508
    6. '(T' → logprob: -5.582979202270508
    7. '(i' → logprob: -6.582979202270508
    8. '(ct' → logprob: -7.332979202270508
    9. '(len' → logprob: -8.082979202270508
    10. '((' → logprob: -9.207979202270508

Token 566: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3697313070297241
    2. '-' → logprob: -1.3697313070297241
    3. ' -' → logprob: -3.2447314262390137
    4. '-i' → logprob: -5.494731426239014
    5. '   ' → logprob: -5.744731426239014
    6. '+' → logprob: -5.744731426239014
    7. ')
' → logprob: -6.244731426239014
    8. '[i' → logprob: -6.744731426239014
    9. '(i' → logprob: -7.494731426239014
    10. '))' → logprob: -7.869731426239014

Token 567: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.14007321000099182
    2. ' USED' → logprob: -2.640073299407959
    3. 'ET' → logprob: -3.390073299407959
    4. 'i' → logprob: -4.765073299407959
    5. '1' → logprob: -5.515073299407959
    6. ' ' → logprob: -6.140073299407959
    7. '   ' → logprob: -6.640073299407959
    8. 'C' → logprob: -6.640073299407959
    9. 'used' → logprob: -6.765073299407959
    10. ' i' → logprob: -6.765073299407959

Token 568: '[i' (ID: 1768)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.0011108051985502243
    2. '[i' → logprob: -7.876111030578613
    3. ')' → logprob: -8.376111030578613
    4. '[' → logprob: -8.501111030578613
    5. '(C' → logprob: -8.751111030578613
    6. '[c' → logprob: -9.751111030578613
    7. 'C' → logprob: -11.251111030578613
    8. '[
' → logprob: -11.376111030578613
    9. ')[' → logprob: -11.376111030578613
    10. ' [' → logprob: -12.001111030578613

Token 569: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004775787703692913
    2. ')' → logprob: -5.7547760009765625
    3. '])
' → logprob: -7.5047760009765625
    4. ']' → logprob: -8.254776000976562
    5. '+' → logprob: -8.879776000976562
    6. ' ])' → logprob: -8.879776000976562
    7. ')])' → logprob: -9.129776000976562
    8. '))' → logprob: -9.379776000976562
    9. ')]' → logprob: -9.754776000976562
    10. '()' → logprob: -9.754776000976562

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22246307134628296
    2. 'return' → logprob: -1.8474631309509277
    3. '<|end|>' → logprob: -3.8474631309509277
    4. ' return' → logprob: -4.097463130950928
    5. '	return' → logprob: -5.847463130950928
    6. ')' → logprob: -8.34746265411377
    7. '```' → logprob: -8.72246265411377
    8. '[' → logprob: -9.22246265411377
    9. '
' → logprob: -9.22246265411377
    10. '    
' → logprob: -9.34746265411377

Token 571: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4815371632575989
    2. '   ' → logprob: -0.9815371632575989
    3. ' return' → logprob: -5.481537342071533
    4. '	return' → logprob: -5.856537342071533
    5. '<|end|>' → logprob: -7.981537342071533
    6. '```' → logprob: -11.231536865234375
    7. '    
' → logprob: -11.856536865234375
    8. ')' → logprob: -12.106536865234375
    9. '[' → logprob: -12.106536865234375
    10. '
' → logprob: -12.356536865234375

Token 572: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -3.666993507067673e-05
    2. ' AN' → logprob: -10.250036239624023
    3. 'AN' → logprob: -14.000036239624023
    4. 'ANSWER' → logprob: -14.750036239624023
    5. 'ANTS' → logprob: -16.750036239624023
    6. '[' → logprob: -17.625036239624023
    7. 'ans' → logprob: -18.125036239624023
    8. 'ANT' → logprob: -19.375036239624023
    9. 'ANTLR' → logprob: -19.500036239624023
    10. '(ans' → logprob: -19.625036239624023

Token 573: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.36574100604048e-06
    2. '[S' → logprob: -13.375004768371582
    3. ' S' → logprob: -14.500004768371582
    4. '
' → logprob: -14.750004768371582
    5. '(S' → logprob: -14.875004768371582
    6. '	S' → logprob: -15.250004768371582
    7. '_S' → logprob: -15.500004768371582
    8. '[' → logprob: -15.750004768371582
    9. '{' → logprob: -16.375003814697266
    10. 'Ｓ' → logprob: -16.625003814697266

Token 574: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3886845111846924
    2. '<|end|>' → logprob: -1.2636845111846924
    3. '[' → logprob: -4.388684272766113
    4. ']' → logprob: -4.513684272766113
    5. '(' → logprob: -4.513684272766113
    6. '#' → logprob: -6.513684272766113
    7. '```' → logprob: -7.013684272766113
    8. '<|end|>' → logprob: -7.138684272766113
    9. '
' → logprob: -7.638684272766113
    10. '(
' → logprob: -8.388684272766113

Token 575: 'results' (ID: 16570)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.1938313245773315
    2. 'result' → logprob: -1.3188313245773315
    3. 'print' → logprob: -1.5688313245773315
    4. 'res' → logprob: -1.8188313245773315
    5. 'ans' → logprob: -3.193831443786621
    6. 'results' → logprob: -5.193831443786621
    7. 'answer' → logprob: -5.318831443786621
    8. 'answers' → logprob: -5.318831443786621
    9. 'r' → logprob: -6.818831443786621
    10. 'RESULT' → logprob: -8.318831443786621

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44493383169174194
    2. '=' → logprob: -1.3199338912963867
    3. '(' → logprob: -2.5699338912963867
    4. '[' → logprob: -5.069933891296387
    5. ',' → logprob: -5.569933891296387
    6. '[:]' → logprob: -6.194933891296387
    7. '<|end|>' → logprob: -7.569933891296387
    8. '.' → logprob: -7.819933891296387
    9. '   ' → logprob: -8.069933891296387
    10. '(
' → logprob: -8.194933891296387

Token 577: ' Euler' (ID: 167577)
  Prédit: 'Euler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Euler' → logprob: -0.003178782993927598
    2. ' Euler' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.503178596496582
    4. '(E' → logprob: -15.628178596496582
    5. '   ' → logprob: -16.2531795501709
    6. 'E' → logprob: -16.3781795501709
    7. 'list' → logprob: -16.5031795501709
    8. '```' → logprob: -17.2531795501709
    9. 'Eigen' → logprob: -17.3781795501709
    10. '[E' → logprob: -17.6281795501709

Token 578: 'Tour' (ID: 48485)
  Prédit: 'Tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tour' → logprob: -3.128163257315464e-07
    2. 'Tours' → logprob: -15.75
    3. ' Tour' → logprob: -16.75
    4. 'tour' → logprob: -18.25
    5. 'Tou' → logprob: -18.375
    6. 'Euler' → logprob: -19.0
    7. 'Tor' → logprob: -19.75
    8. 'T' → logprob: -20.75
    9. 'Tur' → logprob: -20.75
    10. 'Tournament' → logprob: -21.125

Token 579: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04514124244451523
    2. '(' → logprob: -3.1701412200927734
    3. '(n' → logprob: -6.295141220092773
    4. '(
' → logprob: -8.795141220092773
    5. '<|end|>' → logprob: -10.045141220092773
    6. ' (' → logprob: -10.545141220092773
    7. ')(' → logprob: -10.920141220092773
    8. ')' → logprob: -11.295141220092773
    9. '```' → logprob: -11.795141220092773
    10. ',' → logprob: -12.670141220092773

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.519893501419574e-05
    2. '(' → logprob: -9.50009536743164
    3. ',N' → logprob: -12.00009536743164
    4. ',C' → logprob: -12.12509536743164
    5. '(N' → logprob: -12.37509536743164
    6. ')' → logprob: -13.00009536743164
    7. ' ,' → logprob: -13.50009536743164
    8. '(C' → logprob: -14.50009536743164
    9. 'C' → logprob: -16.12509536743164
    10. ',n' → logprob: -16.87509536743164

Token 581: ' X' (ID: 2127)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20148701965808868
    2. 'X' → logprob: -1.7014870643615723
    3. ' C' → logprob: -9.701486587524414
    4. ' X' → logprob: -11.451486587524414
    5. ')' → logprob: -13.451486587524414
    6. '   ' → logprob: -15.076486587524414
    7. ' ' → logprob: -17.326486587524414
    8. '[' → logprob: -17.451486587524414
    9. 'x' → logprob: -17.576486587524414
    10. ',' → logprob: -17.701486587524414

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. '0' → logprob: -11.750014305114746
    3. '(' → logprob: -12.750014305114746
    4. ')' → logprob: -13.125014305114746
    5. ',N' → logprob: -14.250014305114746
    6. ' ,' → logprob: -14.375014305114746
    7. '(N' → logprob: -16.000015258789062
    8. '1' → logprob: -16.750015258789062
    9. '```' → logprob: -17.125015258789062
    10. ',
' → logprob: -17.125015258789062

Token 583: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '۰' → logprob: -18.750001907348633
    5. '00' → logprob: -19.125001907348633
    6. '000' → logprob: -19.625001907348633
    7. ')' → logprob: -20.000001907348633
    8. '```' → logprob: -20.750001907348633
    9. '  ' → logprob: -21.062501907348633
    10. '０' → logprob: -21.125001907348633

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.375
    4. '۰' → logprob: -18.75
    5. '00' → logprob: -18.875
    6. '000' → logprob: -19.625
    7. '０' → logprob: -20.625
    8. 'C' → logprob: -20.75
    9. ')' → logprob: -20.8125
    10. '1' → logprob: -21.0625

Token 585: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -16.000001907348633
    4. '))' → logprob: -16.500001907348633
    5. ')#' → logprob: -16.500001907348633
    6. ')

' → logprob: -18.000001907348633
    7. ')`' → logprob: -18.000001907348633
    8. ')...' → logprob: -18.875001907348633
    9. ').' → logprob: -19.000001907348633
    10. '),' → logprob: -19.125001907348633

Token 586: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05085999146103859
    2. 'for' → logprob: -3.0508599281311035
    3. '<|end|>' → logprob: -6.3008599281311035
    4. '[' → logprob: -8.550860404968262
    5. ')' → logprob: -9.425860404968262
    6. '```' → logprob: -9.925860404968262
    7. ' for' → logprob: -10.175860404968262
    8. 'results' → logprob: -10.925860404968262
    9. '[
' → logprob: -11.300860404968262
    10. ']' → logprob: -11.925860404968262

Token 587: ' val' (ID: 1459)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.628884494304657
    2. 'res' → logprob: -1.3788845539093018
    3. ' res' → logprob: -2.3788845539093018
    4. ' r' → logprob: -2.6288845539093018
    5. 'i' → logprob: -3.2538845539093018
    6. ' i' → logprob: -5.003884315490723
    7. 'c' → logprob: -7.003884315490723
    8. 'x' → logprob: -7.003884315490723
    9. 'result' → logprob: -7.003884315490723
    10. 'color' → logprob: -7.253884315490723

Token 588: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016052084043622017
    2. 'in' → logprob: -4.14105224609375
    3. ' ' → logprob: -11.14105224609375
    4. 'i' → logprob: -13.89105224609375
    5. '  ' → logprob: -14.14105224609375
    6. '	in' → logprob: -14.26605224609375
    7. '   ' → logprob: -15.76605224609375
    8. 'ine' → logprob: -15.76605224609375
    9. 's' → logprob: -16.01605224609375
    10. '_in' → logprob: -16.26605224609375

Token 589: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0007099286303855479
    2. ' results' → logprob: -7.2507100105285645
    3. '(results' → logprob: -18.750709533691406
    4. '	results' → logprob: -19.375709533691406
    5. 'result' → logprob: -19.875709533691406
    6. 'Results' → logprob: -22.875709533691406
    7. '
' → logprob: -23.125709533691406
    8. '.results' → logprob: -23.250709533691406
    9. '_results' → logprob: -23.750709533691406
    10. 'values' → logprob: -24.250709533691406

Token 590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4922788441181183
    2. 'print' → logprob: -1.242278814315796
    3. ':
' → logprob: -2.617278814315796
    4. '   ' → logprob: -4.492279052734375
    5. ' print' → logprob: -4.742279052734375
    6. '.print' → logprob: -5.617279052734375
    7. ',' → logprob: -6.742279052734375
    8. '(print' → logprob: -7.117279052734375
    9. '	print' → logprob: -8.117279052734375
    10. '_print' → logprob: -8.117279052734375

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006003925576806068
    2. ' print' → logprob: -5.5060038566589355
    3. 'print' → logprob: -6.2560038566589355
    4. '	print' → logprob: -12.881004333496094
    5. '```' → logprob: -13.381004333496094
    6. '       ' → logprob: -15.131004333496094
    7. '<|end|>' → logprob: -15.756004333496094
    8. '.print' → logprob: -16.881004333496094
    9. '    
' → logprob: -16.881004333496094
    10. '    ' → logprob: -17.631004333496094

Token 592: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005537479883059859
    2. ' print' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.125554084777832
    4. '```' → logprob: -19.000553131103516
    5. '
' → logprob: -20.000553131103516
    6. '    
' → logprob: -20.000553131103516
    7. 'pr' → logprob: -20.125553131103516
    8. 'sys' → logprob: -20.625553131103516
    9. '	print' → logprob: -21.000553131103516
    10. 'prin' → logprob: -21.500553131103516

Token 593: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -9.662937372922897e-05
    2. 'val' → logprob: -9.250096321105957
    3. '(' → logprob: -14.750096321105957
    4. '[val' → logprob: -17.625097274780273
    5. '()' → logprob: -18.000097274780273
    6. ',val' → logprob: -18.375097274780273
    7. ' val' → logprob: -18.875097274780273
    8. '(f' → logprob: -19.750097274780273
    9. '(
' → logprob: -20.000097274780273
    10. '	val' → logprob: -20.250097274780273

Token 594: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. '()' → logprob: -10.875029563903809
    3. '())' → logprob: -12.000029563903809
    4. '(' → logprob: -12.750029563903809
    5. ')
' → logprob: -14.125029563903809
    6. ' )' → logprob: -15.500029563903809
    7. ')`' → logprob: -16.250028610229492
    8. '))' → logprob: -16.500028610229492
    9. '[' → logprob: -17.125028610229492
    10. ')#' → logprob: -17.750028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 592
Tokens correctement prédits (1ère position, stricte): 190
Tokens correctement prédits (1ère position, avec adaptation): 212
Tokens correctement prédits (top 10): 423
Précision stricte (1ère position): 32.09%
Précision adaptée (1ère position): 35.81%
Précision (top 10): 71.45%
================================================================================
