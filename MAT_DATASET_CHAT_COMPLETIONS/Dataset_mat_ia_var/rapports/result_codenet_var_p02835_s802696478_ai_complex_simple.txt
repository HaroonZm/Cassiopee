================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, gt

a, b, c = map(int, __import__('sys').stdin.readline().split())

print(('win', 'bust')[gt(reduce(add, (a, b, c)), 21)])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.1991090178489685
    2. 'partial' → logprob: -1.9491090774536133
    3. 'reduce' → logprob: -3.4491090774536133
    4. 'l' → logprob: -5.699109077453613
    5. ' wraps' → logprob: -6.199109077453613
    6. 'cached' → logprob: -7.574109077453613
    7. 'cache' → logprob: -8.824109077453613
    8. 'cmp' → logprob: -9.074109077453613
    9. '```' → logprob: -9.449109077453613
    10. '`' → logprob: -9.824109077453613

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1674761325120926
    2. ' itertools' → logprob: -2.292476177215576
    3. ' math' → logprob: -3.917476177215576
    4. ' collections' → logprob: -3.917476177215576
    5. 'operator' → logprob: -4.417476177215576
    6. 'collections' → logprob: -7.792476177215576
    7. ' typing' → logprob: -8.042475700378418
    8. 'math' → logprob: -8.167475700378418
    9. ' os' → logprob: -8.667475700378418
    10. ' ' → logprob: -9.667475700378418

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: ' gt' (ID: 47532)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.6506623029708862
    2. 'mul' → logprob: -0.7756623029708862
    3. ' sub' → logprob: -4.775662422180176
    4. 'sub' → logprob: -4.775662422180176
    5. '```' → logprob: -8.650662422180176
    6. 'getitem' → logprob: -8.775662422180176
    7. ' i' → logprob: -8.900662422180176
    8. 'item' → logprob: -9.025662422180176
    9. ' ' → logprob: -9.275662422180176
    10. 'i' → logprob: -9.525662422180176

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1164725199341774
    2. ',' → logprob: -2.6164724826812744
    3. '(
' → logprob: -3.9914724826812744
    4. '\' → logprob: -5.2414727210998535
    5. ',
' → logprob: -5.9914727210998535
    6. '\n' → logprob: -6.1164727210998535
    7. '#' → logprob: -6.2414727210998535
    8. '`' → logprob: -6.8664727210998535
    9. 'def' → logprob: -7.2414727210998535
    10. '```' → logprob: -7.2414727210998535

Token 12: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035192862153053284
    2. ',' → logprob: -3.9101929664611816
    3. '(
' → logprob: -4.660192966461182
    4. '#' → logprob: -6.410192966461182
    5. 'def' → logprob: -7.285192966461182
    6. '=' → logprob: -7.535192966461182
    7. '[' → logprob: -8.035192489624023
    8. '(lambda' → logprob: -8.410192489624023
    9. ')' → logprob: -8.535192489624023
    10. 'a' → logprob: -8.910192489624023

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4752008318901062
    2. ',' → logprob: -2.100200891494751
    3. '=' → logprob: -2.600200891494751
    4. 'dd' → logprob: -3.475200891494751
    5. ' ' → logprob: -3.475200891494751
    6. '[' → logprob: -3.600200891494751
    7. '_' → logprob: -4.100200653076172
    8. 'b' → logprob: -4.225200653076172
    9. 'r' → logprob: -4.350200653076172
    10. 's' → logprob: -4.475200653076172

Token 14: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5233752727508545
    2. 'b' → logprob: -0.8983752727508545
    3. ' =' → logprob: -9.023375511169434
    4. ' ' → logprob: -9.523375511169434
    5. '=' → logprob: -10.648375511169434
    6. 'a' → logprob: -11.898375511169434
    7. ' [' → logprob: -12.523375511169434
    8. '_b' → logprob: -12.773375511169434
    9. ',b' → logprob: -13.023375511169434
    10. ' a' → logprob: -13.148375511169434

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011485133320093155
    2. '=' → logprob: -4.5114850997924805
    3. ',' → logprob: -8.01148509979248
    4. ' ' → logprob: -9.88648509979248
    5. ' ,' → logprob: -10.51148509979248
    6. ')' → logprob: -11.63648509979248
    7. '  ' → logprob: -12.13648509979248
    8. '_' → logprob: -12.76148509979248
    9. '[' → logprob: -13.26148509979248
    10. '.' → logprob: -13.63648509979248

Token 16: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.712493896484375
    2. ' c' → logprob: -0.712493896484375
    3. ' =' → logprob: -4.587493896484375
    4. ' ' → logprob: -5.212493896484375
    5. '=' → logprob: -6.087493896484375
    6. '_' → logprob: -7.587493896484375
    7. '_c' → logprob: -8.462493896484375
    8. ',' → logprob: -8.587493896484375
    9. ' and' → logprob: -9.587493896484375
    10. ',c' → logprob: -9.962493896484375

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0349729023873806
    2. '=' → logprob: -3.409972906112671
    3. ',' → logprob: -6.659972667694092
    4. ')' → logprob: -11.53497314453125
    5. ' ,' → logprob: -11.90997314453125
    6. '<|end|>' → logprob: -12.03497314453125
    7. '  ' → logprob: -12.28497314453125
    8. 's' → logprob: -12.40997314453125
    9. '>' → logprob: -12.65997314453125
    10. '_' → logprob: -12.78497314453125

Token 18: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1474492847919464
    2. '0' → logprob: -2.647449254989624
    3. '1' → logprob: -2.772449254989624
    4. ' (' → logprob: -6.647449493408203
    5. '5' → logprob: -7.022449493408203
    6. '(' → logprob: -7.522449493408203
    7. '[' → logprob: -8.272449493408203
    8. ' [' → logprob: -8.522449493408203
    9. '10' → logprob: -8.647449493408203
    10. '2' → logprob: -8.647449493408203

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5941499471664429
    2. '(' → logprob: -0.8441499471664429
    3. '(str' → logprob: -4.719150066375732
    4. '(lambda' → logprob: -4.844150066375732
    5. '(list' → logprob: -7.594150066375732
    6. 'int' → logprob: -8.219149589538574
    7. 'list' → logprob: -8.594149589538574
    8. '(input' → logprob: -9.094149589538574
    9. '(
' → logprob: -10.344149589538574
    10. 'str' → logprob: -10.719149589538574

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6541938185691833
    2. ')' → logprob: -1.5291938781738281
    3. ',' → logprob: -1.6541938781738281
    4. 'input' → logprob: -3.279193878173828
    5. '(' → logprob: -3.779193878173828
    6. ',input' → logprob: -4.654193878173828
    7. '),' → logprob: -7.404193878173828
    8. ' input' → logprob: -7.904193878173828
    9. ')(' → logprob: -8.404193878173828
    10. '```' → logprob: -8.904193878173828

Token 21: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3496427536010742
    2. ' input' → logprob: -1.2246427536010742
    3. ')' → logprob: -6.974642753601074
    4. '(input' → logprob: -8.724642753601074
    5. ' )' → logprob: -10.849642753601074
    6. ',input' → logprob: -11.474642753601074
    7. ' ' → logprob: -11.599642753601074
    8. '[input' → logprob: -11.974642753601074
    9. '))' → logprob: -12.099642753601074
    10. 'range' → logprob: -12.474642753601074

Token 22: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0022386356722563505
    2. ' input' → logprob: -6.127238750457764
    3. '__' → logprob: -10.127238273620605
    4. '(input' → logprob: -12.377238273620605
    5. ')' → logprob: -12.627238273620605
    6. '___' → logprob: -14.127238273620605
    7. '(' → logprob: -14.252238273620605
    8. '_input' → logprob: -14.377238273620605
    9. ' __' → logprob: -14.627238273620605
    10. 'range' → logprob: -14.752238273620605

Token 23: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11072488129138947
    2. '(' → logprob: -2.360724925994873
    3. '("' → logprob: -5.110724925994873
    4. '__('' → logprob: -5.985724925994873
    5. '("("' → logprob: -7.610724925994873
    6. '('__' → logprob: -7.735724925994873
    7. '<|end|>' → logprob: -8.485724449157715
    8. ')' → logprob: -9.110724449157715
    9. '('(' → logprob: -9.860724449157715
    10. ''s' → logprob: -10.110724449157715

Token 24: 'sys' (ID: 17324)
  Prédit: 'built'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.10136496275663376
    2. 'sys' → logprob: -2.351364850997925
    3. '__' → logprob: -7.351365089416504
    4. ' built' → logprob: -8.226365089416504
    5. 'math' → logprob: -8.476365089416504
    6. 'b' → logprob: -11.101365089416504
    7. 'input' → logprob: -11.851365089416504
    8. '-built' → logprob: -12.726365089416504
    9. ' sys' → logprob: -12.976365089416504
    10. 're' → logprob: -13.101365089416504

Token 25: '').' (ID: 3426)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -1.1234710216522217
    2. '.stdin' → logprob: -1.1234710216522217
    3. ').' → logprob: -1.8734710216522217
    4. '').' → logprob: -2.1234710216522217
    5. '.' → logprob: -3.7484710216522217
    6. ')' → logprob: -4.248471260070801
    7. '.stdout' → logprob: -4.248471260070801
    8. '')' → logprob: -4.498471260070801
    9. 'import' → logprob: -5.998471260070801
    10. '.readline' → logprob: -6.373471260070801

Token 26: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.16025742888450623
    2. 'argv' → logprob: -1.9102574586868286
    3. 'std' → logprob: -11.410257339477539
    4. '.stdin' → logprob: -12.160257339477539
    5. '.argv' → logprob: -12.535257339477539
    6. '__' → logprob: -12.910257339477539
    7. 'args' → logprob: -13.410257339477539
    8. 'stderr' → logprob: -13.410257339477539
    9. '(stdin' → logprob: -13.660257339477539
    10. 'arg' → logprob: -13.660257339477539

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.014807598665356636
    2. '.read' → logprob: -4.26480770111084
    3. '.' → logprob: -8.26480770111084
    4. '.readlines' → logprob: -8.63980770111084
    5. ')' → logprob: -9.13980770111084
    6. ').' → logprob: -9.38980770111084
    7. '.buffer' → logprob: -11.88980770111084
    8. ' .' → logprob: -12.13980770111084
    9. 'read' → logprob: -13.13980770111084
    10. '().' → logprob: -13.88980770111084

Token 28: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004108796361833811
    2. '()' → logprob: -5.629108905792236
    3. '().' → logprob: -8.379108428955078
    4. ')' → logprob: -8.379108428955078
    5. '(),' → logprob: -10.629108428955078
    6. ' ())' → logprob: -11.629108428955078
    7. '()))' → logprob: -12.254108428955078
    8. '(' → logprob: -12.504108428955078
    9. '();)' → logprob: -13.254108428955078
    10. '()),' → logprob: -13.379108428955078

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20856061577796936
    2. 'strip' → logprob: -1.708560585975647
    3. 'rstrip' → logprob: -4.958560466766357
    4. ' split' → logprob: -9.458560943603516
    5. 'read' → logprob: -11.208560943603516
    6. ' strip' → logprob: -12.708560943603516
    7. 'rs' → logprob: -12.958560943603516
    8. ' ' → logprob: -13.958560943603516
    9. ')' → logprob: -14.958560943603516
    10. 'spl' → logprob: -15.708560943603516

Token 30: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.33908942341804504
    2. '()))' → logprob: -1.3390893936157227
    3. '))' → logprob: -4.339089393615723
    4. ')' → logprob: -4.464089393615723
    5. '()' → logprob: -7.214089393615723
    6. '())
' → logprob: -9.839089393615723
    7. '()))
' → logprob: -9.964089393615723
    8. '()),' → logprob: -10.714089393615723
    9. '())))' → logprob: -11.214089393615723
    10. '()));' → logprob: -11.464089393615723

Token 31: 'print' (ID: 1598)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4809857606887817
    2. 'a' → logprob: -1.6059857606887817
    3. 'if' → logprob: -1.6059857606887817
    4. '[' → logprob: -2.230985641479492
    5. ''' → logprob: -2.980985641479492
    6. 'range' → logprob: -3.480985641479492
    7. 'add' → logprob: -3.730985641479492
    8. '+' → logprob: -3.730985641479492
    9. 'print' → logprob: -3.855985641479492
    10. 'map' → logprob: -4.230985641479492

Token 32: '(('' (ID: 122195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30794858932495117
    2. '(gt' → logprob: -1.9329485893249512
    3. '(max' → logprob: -2.682948589324951
    4. '(add' → logprob: -3.682948589324951
    5. '(sum' → logprob: -3.932948589324951
    6. '(a' → logprob: -5.432948589324951
    7. '((' → logprob: -6.932948589324951
    8. '(min' → logprob: -7.307948589324951
    9. '(re' → logprob: -8.05794906616211
    10. '('' → logprob: -8.55794906616211

Token 33: 'win' (ID: 11668)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5705985426902771
    2. ''' → logprob: -2.445598602294922
    3. 'gt' → logprob: -2.695598602294922
    4. 'b' → logprob: -2.945598602294922
    5. '>'' → logprob: -3.195598602294922
    6. '>' → logprob: -3.195598602294922
    7. 'c' → logprob: -3.945598602294922
    8. 'max' → logprob: -4.195598602294922
    9. 'Yes' → logprob: -4.320598602294922
    10. 'YES' → logprob: -4.695598602294922

Token 34: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6537642478942871
    2. '',' → logprob: -0.9037642478942871
    3. '','' → logprob: -3.653764247894287
    4. ' '' → logprob: -4.028764247894287
    5. '')' → logprob: -4.778764247894287
    6. ' ',' → logprob: -4.903764247894287
    7. ' if' → logprob: -5.778764247894287
    8. ''))' → logprob: -6.278764247894287
    9. 'if' → logprob: -6.403764247894287
    10. ''),' → logprob: -6.653764247894287

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01706639677286148
    2. ' '' → logprob: -4.142066478729248
    3. '('' → logprob: -7.767066478729248
    4. ''d' → logprob: -8.26706600189209
    5. ''t' → logprob: -9.14206600189209
    6. ''ll' → logprob: -10.26706600189209
    7. '"' → logprob: -10.64206600189209
    8. ''end' → logprob: -10.76706600189209
    9. ' ('' → logprob: -11.01706600189209
    10. ''l' → logprob: -11.01706600189209

Token 36: 'b' (ID: 65)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.48420804738998413
    2. ''' → logprob: -1.109208106994629
    3. ''d' → logprob: -3.734208106994629
    4. '',' → logprob: -4.484208106994629
    5. 'loss' → logprob: -4.859208106994629
    6. ''t' → logprob: -5.484208106994629
    7. 'draw' → logprob: -6.484208106994629
    8. '','' → logprob: -6.734208106994629
    9. ' lose' → logprob: -6.984208106994629
    10. 'fail' → logprob: -7.484208106994629

Token 37: 'ust' (ID: 570)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21285100281238556
    2. 'ust' → logprob: -2.837851047515869
    3. ''i' → logprob: -4.212851047515869
    4. ''d' → logprob: -4.337851047515869
    5. ''e' → logprob: -4.337851047515869
    6. ''a' → logprob: -4.587851047515869
    7. ''t' → logprob: -4.962851047515869
    8. 'etter' → logprob: -5.087851047515869
    9. ''us' → logprob: -5.087851047515869
    10. ''y' → logprob: -5.212851047515869

Token 38: '')[' (ID: 28534)
  Prédit: '')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')[' → logprob: -0.027530020102858543
    2. '')' → logprob: -3.7775299549102783
    3. ''' → logprob: -6.777530193328857
    4. ')[' → logprob: -7.152530193328857
    5. '',' → logprob: -7.277530193328857
    6. ''))' → logprob: -8.0275297164917
    7. 'a' → logprob: -8.0275297164917
    8. ')' → logprob: -8.2775297164917
    9. ' ')[' → logprob: -8.2775297164917
    10. '')['' → logprob: -8.2775297164917

Token 39: 'gt' (ID: 5115)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21774527430534363
    2. 'b' → logprob: -2.717745304107666
    3. 'gt' → logprob: -2.842745304107666
    4. 'c' → logprob: -3.217745304107666
    5. 'not' → logprob: -4.592745304107666
    6. ' a' → logprob: -5.342745304107666
    7. 'add' → logprob: -5.842745304107666
    8. '(gt' → logprob: -5.842745304107666
    9. ' gt' → logprob: -5.842745304107666
    10. 'sum' → logprob: -6.092745304107666

Token 40: '(re' (ID: 8178)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.045933835208415985
    2. '(b' → logprob: -3.670933723449707
    3. '(c' → logprob: -4.420933723449707
    4. '(' → logprob: -5.795933723449707
    5. '](' → logprob: -6.170933723449707
    6. '(sum' → logprob: -6.920933723449707
    7. 'a' → logprob: -7.420933723449707
    8. '((' → logprob: -8.170933723449707
    9. ' (' → logprob: -9.420933723449707
    10. '(add' → logprob: -9.420933723449707

Token 41: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.2526620626449585
    2. 'd' → logprob: -1.5026620626449585
    3. 'dc' → logprob: -8.62766170501709
    4. 'ad' → logprob: -8.87766170501709
    5. '(a' → logprob: -9.00266170501709
    6. 'du' → logprob: -9.37766170501709
    7. 'dux' → logprob: -10.37766170501709
    8. 'duc' → logprob: -10.87766170501709
    9. 'a' → logprob: -10.87766170501709
    10. 'duced' → logprob: -11.00266170501709

Token 42: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.1339516043663025
    2. '(a' → logprob: -2.5089516639709473
    3. '(' → logprob: -3.2589516639709473
    4. '(lambda' → logprob: -6.133951663970947
    5. '((' → logprob: -6.508951663970947
    6. ' (' → logprob: -6.633951663970947
    7. ')' → logprob: -9.258951187133789
    8. ')add' → logprob: -10.008951187133789
    9. '(sum' → logprob: -10.133951187133789
    10. '(b' → logprob: -10.133951187133789

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6491193771362305
    2. '([' → logprob: -1.0241193771362305
    3. '(a' → logprob: -2.7741193771362305
    4. ',(' → logprob: -3.6491193771362305
    5. '((' → logprob: -4.3991193771362305
    6. ',[' → logprob: -4.6491193771362305
    7. '(' → logprob: -5.6491193771362305
    8. ',a' → logprob: -6.6491193771362305
    9. ' ,' → logprob: -7.3991193771362305
    10. ')' → logprob: -7.8991193771362305

Token 44: ' (' (ID: 350)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3150925040245056
    2. '[a' → logprob: -1.5650925636291504
    3. '(a' → logprob: -3.3150925636291504
    4. ' [' → logprob: -4.19009256362915
    5. '[' → logprob: -5.56509256362915
    6. ' (' → logprob: -5.81509256362915
    7. '((' → logprob: -7.06509256362915
    8. '(' → logprob: -7.31509256362915
    9. ' ([' → logprob: -7.69009256362915
    10. ' ' → logprob: -8.190092086791992

Token 45: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.17217400670051575
    2. '(a' → logprob: -1.9221739768981934
    3. '[' → logprob: -5.672173976898193
    4. '([' → logprob: -5.797173976898193
    5. ' [' → logprob: -6.047173976898193
    6. '[int' → logprob: -6.922173976898193
    7. ' (' → logprob: -7.422173976898193
    8. '(' → logprob: -7.547173976898193
    9. '[i' → logprob: -9.047174453735352
    10. 'a' → logprob: -9.047174453735352

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15329886972904205
    2. ',b' → logprob: -2.028298854827881
    3. ',c' → logprob: -5.153298854827881
    4. ' ,' → logprob: -6.528298854827881
    5. ' ' → logprob: -7.153298854827881
    6. 'b' → logprob: -7.278298854827881
    7. '+b' → logprob: -7.403298854827881
    8. 'c' → logprob: -8.528299331665039
    9. ' b' → logprob: -8.778299331665039
    10. '  ' → logprob: -8.903299331665039

Token 47: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2525050640106201
    2. ' b' → logprob: -1.5025050640106201
    3. ' ' → logprob: -7.752505302429199
    4. '  ' → logprob: -9.8775053024292
    5. '	b' → logprob: -10.5025053024292
    6. '   ' → logprob: -10.7525053024292
    7. 'c' → logprob: -11.6275053024292
    8. ' c' → logprob: -12.0025053024292
    9. ' ' → logprob: -12.3775053024292
    10. ')b' → logprob: -12.5650053024292

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00678038876503706
    2. ',c' → logprob: -5.256780624389648
    3. '),' → logprob: -7.381780624389648
    4. ' ,' → logprob: -7.881780624389648
    5. 'c' → logprob: -8.131780624389648
    6. ')),' → logprob: -9.256780624389648
    7. '+c' → logprob: -9.881780624389648
    8. ')' → logprob: -10.381780624389648
    9. ' ' → logprob: -10.881780624389648
    10. '+' → logprob: -10.881780624389648

Token 49: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14319026470184326
    2. ' c' → logprob: -2.018190383911133
    3. ' ' → logprob: -7.893190383911133
    4. '  ' → logprob: -10.393190383911133
    5. ')c' → logprob: -10.893190383911133
    6. ')' → logprob: -11.518190383911133
    7. '(c' → logprob: -11.643190383911133
    8. '   ' → logprob: -11.768190383911133
    9. ' [' → logprob: -11.830690383911133
    10. '1' → logprob: -11.830690383911133

Token 50: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.009017866104841232
    2. ',' → logprob: -4.8840179443359375
    3. ')),' → logprob: -7.1340179443359375
    4. ' ),' → logprob: -8.259017944335938
    5. ',),' → logprob: -9.009017944335938
    6. ')' → logprob: -9.384017944335938
    7. ')))' → logprob: -10.884017944335938
    8. '))' → logprob: -11.009017944335938
    9. ' ' → logprob: -11.384017944335938
    10. '100' → logprob: -11.759017944335938

Token 51: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.13173943758010864
    2. ' ' → logprob: -2.256739377975464
    3. '20' → logprob: -4.006739616394043
    4. '__' → logprob: -9.506739616394043
    5. '  ' → logprob: -9.631739616394043
    6. '2' → logprob: -9.631739616394043
    7. '19' → logprob: -9.756739616394043
    8. '   ' → logprob: -10.006739616394043
    9. '18' → logprob: -10.881739616394043
    10. '10' → logprob: -11.006739616394043

Token 52: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0026610277127474546
    2. ' ' → logprob: -6.377661228179932
    3. '2' → logprob: -7.752661228179932
    4. '20' → logprob: -7.877661228179932
    5. '10' → logprob: -10.752660751342773
    6. '1' → logprob: -10.877660751342773
    7. '7' → logprob: -11.377660751342773
    8. '19' → logprob: -11.377660751342773
    9. '9' → logprob: -11.627660751342773
    10. '11' → logprob: -11.752660751342773

Token 53: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.00278776534833014
    2. ')]' → logprob: -6.2527875900268555
    3. ')' → logprob: -7.2527875900268555
    4. ')])
' → logprob: -9.377787590026855
    5. '))' → logprob: -10.627787590026855
    6. ')])

' → logprob: -11.002787590026855
    7. '])' → logprob: -11.627787590026855
    8. ')],' → logprob: -12.127787590026855
    9. ' )' → logprob: -12.627787590026855
    10. ')))' → logprob: -13.002787590026855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 74.51%
================================================================================
