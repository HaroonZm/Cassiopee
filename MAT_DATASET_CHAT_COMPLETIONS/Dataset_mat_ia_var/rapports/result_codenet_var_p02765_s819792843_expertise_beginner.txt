================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_r = input().split()
n = int(n_r[0])
r = int(n_r[1])

if n < 10:
    diff = 10 - n
    x = 100 * diff
    total = x + r
    print(total)
else:
    print(r)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_r' (ID: 3442)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07563706487417221
    2. '0' → logprob: -3.825637102127075
    3. '1' → logprob: -3.950637102127075
    4. '10' → logprob: -4.075636863708496
    5. '5' → logprob: -5.450636863708496
    6. '32' → logprob: -5.825636863708496
    7. '"' → logprob: -6.450636863708496
    8. '3' → logprob: -7.200636863708496
    9. ' []' → logprob: -7.200636863708496
    10. ' n' → logprob: -7.450636863708496

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0577211007475853
    2. ''' → logprob: -3.1827211380004883
    3. '"' → logprob: -4.432721138000488
    4. '('' → logprob: -6.682721138000488
    5. '_' → logprob: -7.307721138000488
    6. '[' → logprob: -8.307721138000488
    7. '(
' → logprob: -8.682721138000488
    8. '("("' → logprob: -9.432721138000488
    9. '`' → logprob: -9.682721138000488
    10. '```' → logprob: -10.307721138000488

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5963054299354553
    2. '+' → logprob: -1.9713053703308105
    3. '()' → logprob: -2.3463053703308105
    4. '(' → logprob: -2.5963053703308105
    5. '.strip' → logprob: -3.3463053703308105
    6. '_' → logprob: -3.5963053703308105
    7. '*' → logprob: -4.3463053703308105
    8. ')' → logprob: -4.3463053703308105
    9. '\' → logprob: -4.7213053703308105
    10. '\n' → logprob: -4.8463053703308105

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013460656628012657
    2. '('' → logprob: -7.001346111297607
    3. '("("' → logprob: -8.62634563446045
    4. '()' → logprob: -9.62634563446045
    5. '`' → logprob: -9.75134563446045
    6. '(
' → logprob: -10.37634563446045
    7. ''' → logprob: -10.62634563446045
    8. '"' → logprob: -10.87634563446045
    9. ' (' → logprob: -11.50134563446045
    10. '(`' → logprob: -11.62634563446045

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004082909319549799
    2. '[n' → logprob: -6.129082679748535
    3. '.' → logprob: -7.379082679748535
    4. '=' → logprob: -8.004082679748535
    5. 'n' → logprob: -8.254082679748535
    6. '[int' → logprob: -8.629082679748535
    7. '#' → logprob: -9.504082679748535
    8. '\[' → logprob: -9.754082679748535
    9. '[:]' → logprob: -9.879082679748535
    10. '_' → logprob: -9.879082679748535

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14819438755512238
    2. '_r' → logprob: -2.0231943130493164
    3. '[' → logprob: -5.273194313049316
    4. '[_' → logprob: -8.898194313049316
    5. '_[' → logprob: -9.398194313049316
    6. 'r' → logprob: -9.898194313049316
    7. '_n' → logprob: -10.648194313049316
    8. '_s' → logprob: -11.273194313049316
    9. '[]' → logprob: -11.398194313049316
    10. '```' → logprob: -12.023194313049316

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16117964684963226
    2. ' int' → logprob: -1.9111796617507935
    3. 'len' → logprob: -8.036179542541504
    4. '[int' → logprob: -8.161179542541504
    5. ' n' → logprob: -9.161179542541504
    6. 'n' → logprob: -9.536179542541504
    7. ' len' → logprob: -10.161179542541504
    8. 'map' → logprob: -10.286179542541504
    9. 'list' → logprob: -10.411179542541504
    10. ' map' → logprob: -10.911179542541504

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023342963308095932
    2. '(n' → logprob: -3.7733428478240967
    3. '("("' → logprob: -10.148343086242676
    4. '('' → logprob: -10.398343086242676
    5. 'n' → logprob: -11.398343086242676
    6. '_n' → logprob: -12.773343086242676
    7. '("' → logprob: -13.023343086242676
    8. '```' → logprob: -13.523343086242676
    9. '(
' → logprob: -13.648343086242676
    10. '(

' → logprob: -13.773343086242676

Token 11: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.14304965734481812
    2. '[' → logprob: -2.018049716949463
    3. ')' → logprob: -9.268049240112305
    4. ')_' → logprob: -9.643049240112305
    5. '[_' → logprob: -9.643049240112305
    6. '_[' → logprob: -10.268049240112305
    7. '_' → logprob: -10.268049240112305
    8. '_n' → logprob: -10.518049240112305
    9. '_)' → logprob: -10.893049240112305
    10. '_s' → logprob: -12.018049240112305

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. ')' → logprob: -12.750004768371582
    3. '[n' → logprob: -14.250004768371582
    4. '[
' → logprob: -14.625004768371582
    5. ' [' → logprob: -16.000003814697266
    6. '```' → logprob: -16.250003814697266
    7. '['' → logprob: -16.625003814697266
    8. '\[' → logprob: -16.625003814697266
    9. '(' → logprob: -18.500003814697266
    10. ')[' → logprob: -18.500003814697266

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7835754988482222e-05
    2. '1' → logprob: -11.125018119812012
    3. ' ' → logprob: -12.750018119812012
    4. ')' → logprob: -16.125017166137695
    5. '])' → logprob: -17.750017166137695
    6. ']' → logprob: -18.250017166137695
    7. ''' → logprob: -18.375017166137695
    8. '```' → logprob: -19.125017166137695
    9. '   ' → logprob: -19.312517166137695
    10. '-' → logprob: -19.375017166137695

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007693694904446602
    2. ')' → logprob: -5.132693767547607
    3. ']' → logprob: -6.382693767547607
    4. '])
' → logprob: -10.25769329071045
    5. ')]' → logprob: -11.38269329071045
    6. ''])' → logprob: -12.00769329071045
    7. ' ])' → logprob: -12.00769329071045
    8. ')])' → logprob: -12.75769329071045
    9. '],' → logprob: -13.00769329071045
    10. ']);' → logprob: -13.38269329071045

Token 15: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005650628358125687
    2. ' r' → logprob: -6.005650520324707
    3. ')' → logprob: -6.130650520324707
    4. '_r' → logprob: -7.380650520324707
    5. '<|end|>' → logprob: -9.130650520324707
    6. 'm' → logprob: -9.255650520324707
    7. 'n' → logprob: -9.755650520324707
    8. ' ' → logprob: -11.130650520324707
    9. '_' → logprob: -11.255650520324707
    10. '#' → logprob: -11.380650520324707

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5240724086761475
    2. '[' → logprob: -1.8990724086761475
    3. '=' → logprob: -2.1490724086761475
    4. ' =' → logprob: -2.1490724086761475
    5. ')' → logprob: -4.524072647094727
    6. '<|end|>' → logprob: -5.024072647094727
    7. '_space' → logprob: -6.649072647094727
    8. ' ' → logprob: -6.649072647094727
    9. '[]' → logprob: -7.024072647094727
    10. '_r' → logprob: -7.149072647094727

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4741648733615875
    2. ' int' → logprob: -0.9741648435592651
    3. ' n' → logprob: -9.474164962768555
    4. 'n' → logprob: -11.724164962768555
    5. ' ' → logprob: -13.474164962768555
    6. '=int' → logprob: -14.599164962768555
    7. '(int' → logprob: -14.849164962768555
    8. '<int' → logprob: -16.224164962768555
    9. '[int' → logprob: -16.349164962768555
    10. '"' → logprob: -16.599164962768555

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23546874523162842
    2. '(n' → logprob: -1.6104687452316284
    3. '(r' → logprob: -4.610468864440918
    4. '("("' → logprob: -11.235468864440918
    5. '((' → logprob: -11.735468864440918
    6. 'r' → logprob: -11.860468864440918
    7. ' (' → logprob: -12.110468864440918
    8. '```' → logprob: -12.860468864440918
    9. ''' → logprob: -13.110468864440918
    10. '_r' → logprob: -13.485468864440918

Token 19: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0005711443373002112
    2. '[' → logprob: -7.750571250915527
    3. '_' → logprob: -9.375571250915527
    4. '[_' → logprob: -10.500571250915527
    5. 'r' → logprob: -11.625571250915527
    6. ')' → logprob: -12.000571250915527
    7. '```' → logprob: -12.500571250915527
    8. ' _' → logprob: -13.625571250915527
    9. '_R' → logprob: -13.875571250915527
    10. '_)' → logprob: -14.000571250915527

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -14.125001907348633
    3. '```' → logprob: -14.625001907348633
    4. ')[' → logprob: -15.250001907348633
    5. ')' → logprob: -15.500001907348633
    6. '][' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '[
' → logprob: -16.750001907348633
    9. '1' → logprob: -16.875001907348633
    10. '\[' → logprob: -17.375001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '])' → logprob: -11.625014305114746
    3. '0' → logprob: -12.375014305114746
    4. ' ' → logprob: -15.000014305114746
    5. ')' → logprob: -15.750014305114746
    6. ']' → logprob: -16.37501335144043
    7. '```' → logprob: -16.37501335144043
    8. ')]' → logprob: -18.12501335144043
    9. '+' → logprob: -18.25001335144043
    10. '2' → logprob: -18.37501335144043

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '')' → logprob: -13.75000286102295
    3. '`)' → logprob: -13.75000286102295
    4. ']' → logprob: -15.12500286102295
    5. '）' → logprob: -15.50000286102295
    6. ' )' → logprob: -15.87500286102295
    7. '))' → logprob: -16.250003814697266
    8. '])' → logprob: -16.750003814697266
    9. '")' → logprob: -16.875003814697266
    10. '()' → logprob: -17.000003814697266

Token 23: 'if' (ID: 366)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4293158054351807
    2. 'a' → logprob: -1.9293158054351807
    3. 's' → logprob: -2.4293158054351807
    4. '_' → logprob: -2.6793158054351807
    5. ''' → logprob: -2.8043158054351807
    6. 'result' → logprob: -3.0543158054351807
    7. 'if' → logprob: -3.1793158054351807
    8. 'c' → logprob: -3.3043158054351807
    9. 'p' → logprob: -3.5543158054351807
    10. '+' → logprob: -3.8043158054351807

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.44458797574043274
    2. ' r' → logprob: -1.1945879459381104
    3. 'n' → logprob: -3.6945879459381104
    4. ' ' → logprob: -3.6945879459381104
    5. 'r' → logprob: -5.1945881843566895
    6. ' ' → logprob: -7.9445881843566895
    7. ' (' → logprob: -8.694587707519531
    8. '(' → logprob: -9.694587707519531
    9. ''' → logprob: -9.819587707519531
    10. ' a' → logprob: -9.944587707519531

Token 25: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08723393082618713
    2. ' >=' → logprob: -3.2122340202331543
    3. '>' → logprob: -3.7122340202331543
    4. ' <=' → logprob: -4.962234020233154
    5. ' ' → logprob: -5.462234020233154
    6. ' <' → logprob: -5.712234020233154
    7. ' ==' → logprob: -5.837234020233154
    8. '>=' → logprob: -7.462234020233154
    9. '<' → logprob: -8.462233543395996
    10. '==' → logprob: -9.337233543395996

Token 26: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26285451650619507
    2. ' r' → logprob: -1.6378545761108398
    3. '=' → logprob: -3.38785457611084
    4. '0' → logprob: -7.51285457611084
    5. ' ' → logprob: -7.51285457611084
    6. '=r' → logprob: -7.63785457611084
    7. '1' → logprob: -8.01285457611084
    8. '5' → logprob: -8.13785457611084
    9. '10' → logprob: -8.13785457611084
    10. ' =' → logprob: -9.26285457611084

Token 27: '10' (ID: 702)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019353225827217102
    2. '=' → logprob: -4.64435338973999
    3. ' r' → logprob: -4.89435338973999
    4. '0' → logprob: -6.89435338973999
    5. '=r' → logprob: -7.51935338973999
    6. '1' → logprob: -8.769352912902832
    7. '10' → logprob: -9.144352912902832
    8. '5' → logprob: -9.769352912902832
    9. ' ' → logprob: -10.144352912902832
    10. '100' → logprob: -10.269352912902832

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008111746865324676
    2. ' :' → logprob: -7.3758111000061035
    3. ' and' → logprob: -9.250811576843262
    4. ' or' → logprob: -10.500811576843262
    5. '>' → logprob: -10.750811576843262
    6. '>:' → logprob: -12.375811576843262
    7. '.' → logprob: -12.625811576843262
    8. 'and' → logprob: -12.750811576843262
    9. ' ' → logprob: -12.750811576843262
    10. ',' → logprob: -12.875811576843262

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8244420289993286
    2. '    ' → logprob: -1.4494420289993286
    3. ' ' → logprob: -2.074441909790039
    4. '\n' → logprob: -2.949441909790039
    5. ':' → logprob: -3.199441909790039
    6. '\' → logprob: -3.449441909790039
    7. '    
' → logprob: -3.699441909790039
    8. ' 
' → logprob: -4.449441909790039
    9. ' :' → logprob: -4.699441909790039
    10. '     
' → logprob: -5.449441909790039

Token 30: ' diff' (ID: 8868)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.13608475029468536
    2. 'print' → logprob: -2.261084794998169
    3. ' n' → logprob: -5.13608455657959
    4. '   ' → logprob: -5.26108455657959
    5. 'r' → logprob: -5.51108455657959
    6. ' r' → logprob: -5.88608455657959
    7. '    ' → logprob: -6.51108455657959
    8. 'n' → logprob: -6.63608455657959
    9. ' ' → logprob: -6.76108455657959
    10. ' pass' → logprob: -7.51108455657959

Token 31: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.19022782146930695
    2. ' =' → logprob: -1.9402278661727905
    3. '_' → logprob: -4.19022798538208
    4. '=' → logprob: -4.44022798538208
    5. '_er' → logprob: -7.31522798538208
    6. ' er' → logprob: -8.065227508544922
    7. 'érence' → logprob: -8.315227508544922
    8. 'rence' → logprob: -8.565227508544922
    9. 'eren' → logprob: -8.690227508544922
    10. 'ere' → logprob: -9.190227508544922

Token 32: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5504644513130188
    2. ' ' → logprob: -1.050464391708374
    3. 'r' → logprob: -3.050464391708374
    4. '1' → logprob: -4.675464630126953
    5. ' r' → logprob: -4.675464630126953
    6. 'n' → logprob: -5.675464630126953
    7. '0' → logprob: -6.550464630126953
    8. ' n' → logprob: -6.925464630126953
    9. 'abs' → logprob: -7.050464630126953
    10. ' abs' → logprob: -8.550464630126953

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4373480975627899
    2. 'r' → logprob: -1.1873481273651123
    3. 'n' → logprob: -3.8123481273651123
    4. '1' → logprob: -4.562347888946533
    5. 'abs' → logprob: -5.062347888946533
    6. '0' → logprob: -5.687347888946533
    7. ' ' → logprob: -5.812347888946533
    8. ' r' → logprob: -6.437347888946533
    9. '100' → logprob: -7.312347888946533
    10. '9' → logprob: -7.937347888946533

Token 34: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14051270484924316
    2. ' -' → logprob: -2.140512704849243
    3. 'else' → logprob: -4.640512466430664
    4. ' else' → logprob: -6.140512466430664
    5. '-n' → logprob: -8.390512466430664
    6. 'elif' → logprob: -8.515512466430664
    7. ':' → logprob: -8.640512466430664
    8. '   ' → logprob: -8.765512466430664
    9. '.' → logprob: -9.015512466430664
    10. '*' → logprob: -9.140512466430664

Token 35: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016036715358495712
    2. ' n' → logprob: -4.141036510467529
    3. '	n' → logprob: -13.266036987304688
    4. ' ' → logprob: -14.766036987304688
    5. '(n' → logprob: -16.391036987304688
    6. '   ' → logprob: -16.516036987304688
    7. '10' → logprob: -16.766036987304688
    8. 'len' → logprob: -17.141036987304688
    9. 'r' → logprob: -17.891036987304688
    10. '  ' → logprob: -17.891036987304688

Token 36: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0224993228912354
    2. '
' → logprob: -2.0224993228912354
    3. 'n' → logprob: -2.0224993228912354
    4. 'else' → logprob: -2.0224993228912354
    5. ' else' → logprob: -2.3974993228912354
    6. '<|end|>' → logprob: -2.5224993228912354
    7. ' ' → logprob: -3.0224993228912354
    8. 'print' → logprob: -3.1474993228912354
    9. 'elif' → logprob: -3.1474993228912354
    10. '-' → logprob: -4.022499084472656

Token 37: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.112208604812622
    2. ')' → logprob: -1.987208604812622
    3. '   ' → logprob: -2.362208604812622
    4. 'n' → logprob: -2.612208604812622
    5. '*' → logprob: -2.862208604812622
    6. '<|end|>' → logprob: -3.112208604812622
    7. ' 
' → logprob: -3.237208604812622
    8. '    
' → logprob: -3.487208604812622
    9. ',' → logprob: -3.612208604812622
    10. '.' → logprob: -4.112208366394043

Token 38: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.27045610547065735
    2. 'print' → logprob: -2.520456075668335
    3. '   ' → logprob: -3.270456075668335
    4. ' if' → logprob: -3.645456075668335
    5. ' r' → logprob: -3.645456075668335
    6. 'n' → logprob: -4.270456314086914
    7. 'if' → logprob: -4.520456314086914
    8. ' for' → logprob: -4.520456314086914
    9. ' print' → logprob: -4.895456314086914
    10. 'for' → logprob: -5.145456314086914

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20974203944206238
    2. '=' → logprob: -2.3347420692443848
    3. ' +=' → logprob: -2.7097420692443848
    4. '+=' → logprob: -4.584742069244385
    5. ' *=' → logprob: -4.834742069244385
    6. ' -=' → logprob: -5.334742069244385
    7. '_' → logprob: -6.584742069244385
    8. '-=' → logprob: -7.834742069244385
    9. '*=' → logprob: -7.959742069244385
    10. '*' → logprob: -8.709741592407227

Token 40: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5536928176879883
    2. 'diff' → logprob: -0.9286928176879883
    3. 'n' → logprob: -4.678692817687988
    4. ' diff' → logprob: -5.053692817687988
    5. '10' → logprob: -5.178692817687988
    6. ' r' → logprob: -5.553692817687988
    7. 'min' → logprob: -6.553692817687988
    8. 'int' → logprob: -6.928692817687988
    9. 'max' → logprob: -7.303692817687988
    10. '0' → logprob: -8.178692817687988

Token 41: '100' (ID: 1353)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.36369267106056213
    2. 'r' → logprob: -1.2386926412582397
    3. 'n' → logprob: -4.863692760467529
    4. '10' → logprob: -5.988692760467529
    5. 'min' → logprob: -6.738692760467529
    6. ' diff' → logprob: -7.113692760467529
    7. 'max' → logprob: -7.363692760467529
    8. '(diff' → logprob: -7.363692760467529
    9. 'abs' → logprob: -7.863692760467529
    10. 'int' → logprob: -8.363692283630371

Token 42: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7918421030044556
    2. ' *' → logprob: -0.9168421030044556
    3. '**' → logprob: -3.541841983795166
    4. '+' → logprob: -3.791841983795166
    5. ' ' → logprob: -3.916841983795166
    6. '-' → logprob: -4.041841983795166
    7. ' -' → logprob: -4.166841983795166
    8. '<|end|>' → logprob: -4.416841983795166
    9. ' +' → logprob: -4.666841983795166
    10. ' **' → logprob: -5.041841983795166

Token 43: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06494088470935822
    2. 'r' → logprob: -2.939940929412842
    3. '(diff' → logprob: -5.064940929412842
    4. ' diff' → logprob: -6.814940929412842
    5. '(r' → logprob: -7.314940929412842
    6. 'n' → logprob: -7.564940929412842
    7. '10' → logprob: -7.689940929412842
    8. '(' → logprob: -8.064940452575684
    9. '(n' → logprob: -8.189940452575684
    10. 'x' → logprob: -9.064940452575684

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' total' (ID: 3609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06888855248689651
    2. '=' → logprob: -3.3188886642456055
    3. ' +=' → logprob: -3.9438886642456055
    4. '_' → logprob: -5.0688886642456055
    5. '_cost' → logprob: -6.3188886642456055
    6. '_price' → logprob: -6.8188886642456055
    7. '+=' → logprob: -7.5688886642456055
    8. '_amount' → logprob: -8.318888664245605
    9. 'cost' → logprob: -8.818888664245605
    10. '+' → logprob: -8.818888664245605

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1237473338842392
    2. 'r' → logprob: -2.8737473487854004
    3. ' x' → logprob: -3.3737473487854004
    4. '100' → logprob: -4.2487473487854
    5. 'n' → logprob: -5.3737473487854
    6. ' r' → logprob: -5.7487473487854
    7. ' ' → logprob: -7.1237473487854
    8. 'total' → logprob: -7.2487473487854
    9. '10' → logprob: -7.3737473487854
    10. ' n' → logprob: -7.9987473487854

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23087140917778015
    2. ' +' → logprob: -1.6058714389801025
    3. '*' → logprob: -6.230871200561523
    4. '+r' → logprob: -6.605871200561523
    5. ' *' → logprob: -7.230871200561523
    6. '<|end|>' → logprob: -7.480871200561523
    7. '-' → logprob: -8.230871200561523
    8. ' ' → logprob: -8.855871200561523
    9. ' -' → logprob: -9.355871200561523
    10. '+n' → logprob: -9.605871200561523

Token 50: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007475420832633972
    2. ' r' → logprob: -5.63247537612915
    3. '100' → logprob: -6.13247537612915
    4. '(r' → logprob: -7.13247537612915
    5. '10' → logprob: -8.007475852966309
    6. ' ' → logprob: -9.132475852966309
    7. '(' → logprob: -9.382475852966309
    8. 'n' → logprob: -9.757475852966309
    9. '   ' → logprob: -10.132475852966309
    10. ' (' → logprob: -10.632475852966309

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5594454407691956
    2. '<|end|>' → logprob: -1.8094453811645508
    3. 'else' → logprob: -1.9344453811645508
    4. ')' → logprob: -3.059445381164551
    5. '
' → logprob: -3.934445381164551
    6. '.' → logprob: -4.434445381164551
    7. ' else' → logprob: -4.559445381164551
    8. '#' → logprob: -5.434445381164551
    9. 'elif' → logprob: -5.434445381164551
    10. ' print' → logprob: -5.809445381164551

Token 54: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25205323100090027
    2. '(total' → logprob: -1.5020532608032227
    3. '()' → logprob: -9.752053260803223
    4. 'total' → logprob: -10.002053260803223
    5. '('' → logprob: -11.502053260803223
    6. '("("' → logprob: -12.127053260803223
    7. '((' → logprob: -14.002053260803223
    8. '("' → logprob: -14.502053260803223
    9. ' (' → logprob: -14.752053260803223
    10. '(`' → logprob: -14.877053260803223

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -16.875
    5. '')' → logprob: -17.5
    6. ')`' → logprob: -18.625
    7. '`)' → logprob: -19.5
    8. ')#' → logprob: -19.625
    9. '）' → logprob: -19.75
    10. '()' → logprob: -19.875

Token 56: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.719917630311102e-05
    2. ':
' → logprob: -9.500077247619629
    3. ' :' → logprob: -13.125077247619629
    4. ':
' → logprob: -16.375076293945312
    5. ':

' → logprob: -17.125076293945312
    6. ':def' → logprob: -17.250076293945312
    7. '   ' → logprob: -17.375076293945312
    8. '.' → logprob: -17.750076293945312
    9. ',' → logprob: -18.000076293945312
    10. '```' → logprob: -18.125076293945312

Token 58: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20327140390872955
    2. '   ' → logprob: -2.3282713890075684
    3. ' print' → logprob: -2.4532713890075684
    4. 'r' → logprob: -8.453271865844727
    5. ' r' → logprob: -8.828271865844727
    6. '	print' → logprob: -10.203271865844727
    7. ' ' → logprob: -10.828271865844727
    8. '    
' → logprob: -11.078271865844727
    9. '    ' → logprob: -11.203271865844727
    10. '  ' → logprob: -11.703271865844727

Token 59: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006197464535944164
    2. 'r' → logprob: -7.500619888305664
    3. ' print' → logprob: -10.125619888305664
    4. '   ' → logprob: -11.125619888305664
    5. 'pr' → logprob: -11.625619888305664
    6. 'pass' → logprob: -14.250619888305664
    7. 'prit' → logprob: -14.625619888305664
    8. '10' → logprob: -15.250619888305664
    9. '0' → logprob: -15.500619888305664
    10. 'pri' → logprob: -15.500619888305664

Token 60: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4749445617198944
    2. '(' → logprob: -0.9749445915222168
    3. '()' → logprob: -7.599944591522217
    4. '(n' → logprob: -8.474944114685059
    5. '((' → logprob: -9.474944114685059
    6. '('' → logprob: -10.724944114685059
    7. '("' → logprob: -10.849944114685059
    8. '(x' → logprob: -11.099944114685059
    9. '(s' → logprob: -12.099944114685059
    10. '(total' → logprob: -12.474944114685059

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -16.375
    4. '')' → logprob: -18.125
    5. ')
' → logprob: -18.25
    6. ')`' → logprob: -18.625
    7. '`)' → logprob: -19.5
    8. '")' → logprob: -20.5
    9. ')")' → logprob: -20.625
    10. ')}' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 59
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 23.73%
Précision adaptée (1ère position): 27.12%
Précision (top 10): 71.19%
================================================================================
