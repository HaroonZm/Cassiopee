================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
S = []
for i in range(M):
    S.append(list(map(int, input().split())))
p = list(map(int, input().split()))
result = 0
# à quoi bon initialiser ans ici si on ne l'utilise plus, non ?
for n in range(2**N):
    T = [0]*N # bon, on recommence à chaque fois, hein
    for j in range(N):
        # en vrai, j'ai hésité à faire +1, mais comme ça marche...
        if 1 & (n >> j):
            T[j] = 1
    s = 0
    for idx in range(M):
        cnt = 0
        l = S[idx][0]
        for ele in range(l):
            cnt += T[ S[idx][ele+1] - 1 ] # attention, index à décaler sinon ça saute
        # je me demande si j'ai bien compris cet if
        if cnt % 2 == p[idx]:
            s += 1
    if s == M:
        result += 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2909020483493805
    2. ',' → logprob: -1.540902018547058
    3. ' =' → logprob: -3.2909021377563477
    4. '```' → logprob: -8.415902137756348
    5. ';' → logprob: -8.790902137756348
    6. ')' → logprob: -8.790902137756348
    7. '.' → logprob: -9.290902137756348
    8. '[' → logprob: -9.790902137756348
    9. ' ,' → logprob: -9.790902137756348
    10. ''' → logprob: -10.040902137756348

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2737196385860443
    2. 'map' → logprob: -2.273719549179077
    3. ' ' → logprob: -2.898719549179077
    4. ' input' → logprob: -3.273719549179077
    5. '10' → logprob: -3.773719549179077
    6. 'input' → logprob: -4.273719787597656
    7. '0' → logprob: -6.148719787597656
    8. ' int' → logprob: -6.523719787597656
    9. ' list' → logprob: -7.273719787597656
    10. 'int' → logprob: -7.398719787597656

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024940812960267067
    2. '(lambda' → logprob: -4.2749409675598145
    3. '(int' → logprob: -5.2749409675598145
    4. '```' → logprob: -6.0249409675598145
    5. '(str' → logprob: -6.3999409675598145
    6. ')' → logprob: -8.149940490722656
    7. '<|end|>' → logprob: -8.149940490722656
    8. '[int' → logprob: -9.024940490722656
    9. '(input' → logprob: -9.149940490722656
    10. '(
' → logprob: -9.899940490722656

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5991771221160889
    2. '(input' → logprob: -0.8491771221160889
    3. '(' → logprob: -4.224177360534668
    4. 'input' → logprob: -5.474177360534668
    5. '```' → logprob: -6.724177360534668
    6. ')(' → logprob: -7.224177360534668
    7. ',' → logprob: -7.974177360534668
    8. ',input' → logprob: -8.099177360534668
    9. '(str' → logprob: -8.599177360534668
    10. '=input' → logprob: -8.724177360534668

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12696947157382965
    2. ' input' → logprob: -2.126969575881958
    3. '(input' → logprob: -10.126969337463379
    4. ')' → logprob: -14.001969337463379
    5. ',input' → logprob: -14.626969337463379
    6. ' ' → logprob: -16.876970291137695
    7. '<input' → logprob: -17.251970291137695
    8. '```' → logprob: -17.251970291137695
    9. '=input' → logprob: -17.501970291137695
    10. '[input' → logprob: -18.001970291137695

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6857056617736816
    2. '()' → logprob: -1.3107056617736816
    3. ')' → logprob: -2.4357056617736816
    4. '(' → logprob: -2.4357056617736816
    5. '('' → logprob: -4.435705661773682
    6. '(""))' → logprob: -4.435705661773682
    7. '()))' → logprob: -4.685705661773682
    8. '))' → logprob: -5.685705661773682
    9. '```' → logprob: -5.935705661773682
    10. '`()' → logprob: -6.060705661773682

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008955726400017738
    2. 'strip' → logprob: -4.758955955505371
    3. ')' → logprob: -8.758955955505371
    4. 'read' → logprob: -8.758955955505371
    5. 'rstrip' → logprob: -10.758955955505371
    6. ' split' → logprob: -12.758955955505371
    7. 'decode' → logprob: -13.883955955505371
    8. 'replace' → logprob: -14.258955955505371
    9. 'spl' → logprob: -15.508955955505371
    10. '(split' → logprob: -15.633955955505371

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011346656829118729
    2. '())' → logprob: -4.761346817016602
    3. '))' → logprob: -6.136346817016602
    4. '()' → logprob: -8.136346817016602
    5. '`)' → logprob: -8.636346817016602
    6. '(' → logprob: -9.761346817016602
    7. '()))' → logprob: -11.886346817016602
    8. '')' → logprob: -12.261346817016602
    9. ')`' → logprob: -12.261346817016602
    10. '>)' → logprob: -12.886346817016602

Token 11: 'S' (ID: 50)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9471462368965149
    2. 'a' → logprob: -1.8221461772918701
    3. '#' → logprob: -2.07214617729187
    4. 'for' → logprob: -2.32214617729187
    5. '`' → logprob: -3.07214617729187
    6. '```' → logprob: -3.32214617729187
    7. ' ' → logprob: -3.69714617729187
    8. '\' → logprob: -3.82214617729187
    9. 'x' → logprob: -4.447146415710449
    10. ',' → logprob: -4.572146415710449

Token 12: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7131645083427429
    2. '[' → logprob: -1.5881645679473877
    3. ' =' → logprob: -1.5881645679473877
    4. '=' → logprob: -2.4631645679473877
    5. '_' → logprob: -5.338164329528809
    6. '[i' → logprob: -5.713164329528809
    7. '[:]' → logprob: -6.963164329528809
    8. ')' → logprob: -7.088164329528809
    9. ' ' → logprob: -7.213164329528809
    10. '[]' → logprob: -7.588164329528809

Token 13: ' []
' (ID: 8911)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10729900002479553
    2. ' input' → logprob: -2.3572990894317627
    3. '""' → logprob: -5.857298851013184
    4. '[]' → logprob: -7.482298851013184
    5. '[input' → logprob: -7.482298851013184
    6. '''' → logprob: -7.607298851013184
    7. 'set' → logprob: -7.732298851013184
    8. 'list' → logprob: -7.732298851013184
    9. '"' → logprob: -7.857298851013184
    10. ' ' → logprob: -8.107298851013184

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3902033970225602e-05
    2. ' for' → logprob: -11.500014305114746
    3. '```' → logprob: -12.625014305114746
    4. '``' → logprob: -16.00001335144043
    5. '_' → logprob: -16.25001335144043
    6. '`' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.00001335144043
    8. '_for' → logprob: -17.25001335144043
    9. 'For' → logprob: -17.37501335144043
    10. 'f' → logprob: -18.00001335144043

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1237562894821167
    2. ' ' → logprob: -2.2487564086914062
    3. '_' → logprob: -5.373756408691406
    4. 'i' → logprob: -5.623756408691406
    5. ' _' → logprob: -5.998756408691406
    6. ' ‌' → logprob: -10.123756408691406
    7. '  ' → logprob: -10.248756408691406
    8. ' ' → logprob: -10.748756408691406
    9. ' I' → logprob: -11.248756408691406
    10. ' ▁' → logprob: -11.623756408691406

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22923563420772552
    2. 'in' → logprob: -1.6042356491088867
    3. ' ' → logprob: -6.104235649108887
    4. 'n' → logprob: -6.729235649108887
    5. ' n' → logprob: -8.479235649108887
    6. '_' → logprob: -9.229235649108887
    7. '  ' → logprob: -10.354235649108887
    8. 'range' → logprob: -11.229235649108887
    9. ' i' → logprob: -11.604235649108887
    10. '	in' → logprob: -11.979235649108887

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740782678127289
    2. 'range' → logprob: -0.9740782976150513
    3. '	range' → logprob: -14.599078178405762
    4. '(range' → logprob: -15.599078178405762
    5. ' ' → logprob: -15.599078178405762
    6. 'rang' → logprob: -16.474079132080078
    7. 'ran' → logprob: -16.599079132080078
    8. '```' → logprob: -16.849079132080078
    9. ' ran' → logprob: -17.099079132080078
    10. '_range' → logprob: -17.099079132080078

Token 18: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03489059582352638
    2. '(N' → logprob: -3.409890651702881
    3. '(M' → logprob: -7.284890651702881
    4. ' (' → logprob: -8.159890174865723
    5. '(n' → logprob: -8.659890174865723
    6. '(S' → logprob: -9.909890174865723
    7. '(range' → logprob: -10.909890174865723
    8. '(int' → logprob: -12.409890174865723
    9. '()' → logprob: -12.534890174865723
    10. '(len' → logprob: -12.784890174865723

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015145803801715374
    2. ')' → logprob: -4.390145778656006
    3. ' ):' → logprob: -6.265145778656006
    4. ':' → logprob: -7.390145778656006
    5. '):
' → logprob: -10.140146255493164
    6. ',' → logprob: -10.515146255493164
    7. '+' → logprob: -11.015146255493164
    8. ' )' → logprob: -11.265146255493164
    9. ' ' → logprob: -12.390146255493164
    10. ' :' → logprob: -13.015146255493164

Token 20: '   ' (ID: 271)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5909989476203918
    2. '   ' → logprob: -1.465998888015747
    3. '    ' → logprob: -1.965998888015747
    4. '     
' → logprob: -4.090999126434326
    5. '```' → logprob: -4.215999126434326
    6. ' ' → logprob: -4.715999126434326
    7. ' input' → logprob: -4.840999126434326
    8. 'S' → logprob: -4.840999126434326
    9. ' s' → logprob: -4.840999126434326
    10. ' line' → logprob: -5.715999126434326

Token 21: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.7836969494819641
    2. ' S' → logprob: -1.0336968898773193
    3. 's' → logprob: -1.7836968898773193
    4. '   ' → logprob: -4.533697128295898
    5. ' s' → logprob: -5.283697128295898
    6. ' line' → logprob: -6.283697128295898
    7. '```' → logprob: -7.533697128295898
    8. 'line' → logprob: -8.158697128295898
    9. 'input' → logprob: -8.658697128295898
    10. 't' → logprob: -9.283697128295898

Token 22: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01419159211218357
    2. '.' → logprob: -4.264191627502441
    3. '.app' → logprob: -11.139191627502441
    4. '.ap' → logprob: -11.639191627502441
    5. 'append' → logprob: -13.514191627502441
    6. ' .' → logprob: -13.639191627502441
    7. '[i' → logprob: -14.639191627502441
    8. '.extend' → logprob: -14.889191627502441
    9. '.i' → logprob: -15.639191627502441
    10. '.a' → logprob: -15.639191627502441

Token 23: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.6386821269989014
    2. '(' → logprob: -0.8886821269989014
    3. '(input' → logprob: -3.0136821269989014
    4. '(int' → logprob: -4.6386823654174805
    5. '(tuple' → logprob: -6.7636823654174805
    6. '(str' → logprob: -7.8886823654174805
    7. 'list' → logprob: -8.13868236541748
    8. '(
' → logprob: -10.26368236541748
    9. '([]' → logprob: -10.38868236541748
    10. '((' → logprob: -10.88868236541748

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7585138082504272
    2. '(input' → logprob: -0.7585138082504272
    3. '(map' → logprob: -2.883513927459717
    4. '(int' → logprob: -5.008513927459717
    5. '(str' → logprob: -7.883513927459717
    6. '()' → logprob: -9.508513450622559
    7. '(list' → logprob: -9.758513450622559
    8. '(range' → logprob: -10.008513450622559
    9. '())' → logprob: -11.008513450622559
    10. '(tuple' → logprob: -11.258513450622559

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.327856630785391e-05
    2. '(' → logprob: -9.875082969665527
    3. '<int' → logprob: -10.875082969665527
    4. '(str' → logprob: -12.375082969665527
    5. 'int' → logprob: -12.625082969665527
    6. '=int' → logprob: -13.625082969665527
    7. ',int' → logprob: -13.625082969665527
    8. '[int' → logprob: -14.000082969665527
    9. '```' → logprob: -14.000082969665527
    10. '(input' → logprob: -14.750082969665527

Token 26: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.15741543471813202
    2. ',' → logprob: -2.4074153900146484
    3. '(input' → logprob: -2.9074153900146484
    4. '(' → logprob: -7.407415390014648
    5. 'input' → logprob: -8.157415390014648
    6. ' ,' → logprob: -9.782415390014648
    7. '(),' → logprob: -10.782415390014648
    8. '```' → logprob: -12.032415390014648
    9. ' input' → logprob: -12.907415390014648
    10. '=input' → logprob: -13.407415390014648

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1128489226102829
    2. ' input' → logprob: -2.237848997116089
    3. ',input' → logprob: -11.362849235534668
    4. '(input' → logprob: -11.862849235534668
    5. '	input' → logprob: -13.612849235534668
    6. '=input' → logprob: -13.737849235534668
    7. ' ' → logprob: -13.862849235534668
    8. ')' → logprob: -14.112849235534668
    9. '_input' → logprob: -14.112849235534668
    10. '   ' → logprob: -14.487849235534668

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015381926205009222
    2. '()' → logprob: -6.501538276672363
    3. ' ().' → logprob: -11.251538276672363
    4. '(' → logprob: -12.001538276672363
    5. '()))' → logprob: -12.126538276672363
    6. '.' → logprob: -13.251538276672363
    7. ')' → logprob: -13.626538276672363
    8. '```' → logprob: -13.751538276672363
    9. '()
' → logprob: -13.876538276672363
    10. '())))' → logprob: -14.376538276672363

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3425219549390022e-05
    2. 'strip' → logprob: -11.37501335144043
    3. 'rstrip' → logprob: -13.37501335144043
    4. ' split' → logprob: -15.75001335144043
    5. '(split' → logprob: -16.25001335144043
    6. 'read' → logprob: -16.50001335144043
    7. 'spl' → logprob: -17.37501335144043
    8. 's' → logprob: -18.25001335144043
    9. '))' → logprob: -20.25001335144043
    10. ')' → logprob: -20.50001335144043

Token 30: '())))
' (ID: 129187)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.45817649364471436
    2. '())))' → logprob: -1.8331764936447144
    3. ')' → logprob: -2.208176612854004
    4. '())' → logprob: -2.958176612854004
    5. '(' → logprob: -3.833176612854004
    6. '()))' → logprob: -4.333176612854004
    7. '()' → logprob: -5.083176612854004
    8. '))' → logprob: -5.708176612854004
    9. '))))' → logprob: -7.083176612854004
    10. '('' → logprob: -8.208176612854004

Token 31: 'p' (ID: 79)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1912285089492798
    2. ')' → logprob: -1.9412285089492798
    3. 'A' → logprob: -2.0662283897399902
    4. '#' → logprob: -2.3162283897399902
    5. 'for' → logprob: -2.5662283897399902
    6. 'c' → logprob: -3.0662283897399902
    7. 'r' → logprob: -3.3162283897399902
    8. '[' → logprob: -3.6912283897399902
    9. 'b' → logprob: -3.8162283897399902
    10. 't' → logprob: -4.31622838973999

Token 32: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27034759521484375
    2. '(' → logprob: -2.6453475952148438
    3. '_' → logprob: -2.7703475952148438
    4. '[]' → logprob: -3.7703475952148438
    5. ' =' → logprob: -4.145347595214844
    6. ')' → logprob: -4.645347595214844
    7. '[:]' → logprob: -4.770347595214844
    8. '=' → logprob: -5.270347595214844
    9. 'a' → logprob: -5.270347595214844
    10. 'i' → logprob: -5.395347595214844

Token 33: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33104634284973145
    2. '[]' → logprob: -1.3310463428497314
    3. 'list' → logprob: -4.331046104431152
    4. '[list' → logprob: -6.081046104431152
    5. ' []' → logprob: -6.581046104431152
    6. ' list' → logprob: -7.831046104431152
    7. ' [' → logprob: -8.581046104431152
    8. '[len' → logprob: -9.956046104431152
    9. '[int' → logprob: -10.331046104431152
    10. '(list' → logprob: -10.581046104431152

Token 34: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18294531106948853
    2. '(map' → logprob: -1.8079452514648438
    3. '(range' → logprob: -6.432945251464844
    4. '(int' → logprob: -6.682945251464844
    5. '(p' → logprob: -9.557945251464844
    6. '(s' → logprob: -10.057945251464844
    7. '(eval' → logprob: -10.432945251464844
    8. '((' → logprob: -10.557945251464844
    9. '(list' → logprob: -10.807945251464844
    10. '(np' → logprob: -11.182945251464844

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01252213679254055
    2. '(' → logprob: -4.387522220611572
    3. '(in' → logprob: -12.887521743774414
    4. 'int' → logprob: -13.262521743774414
    5. '(str' → logprob: -13.262521743774414
    6. '<int' → logprob: -13.637521743774414
    7. ',int' → logprob: -13.762521743774414
    8. ' (' → logprob: -14.262521743774414
    9. '(
' → logprob: -14.262521743774414
    10. '=int' → logprob: -14.512521743774414

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01648285798728466
    2. ',input' → logprob: -4.891482830047607
    3. '(' → logprob: -5.266482830047607
    4. ',int' → logprob: -6.516482830047607
    5. '(input' → logprob: -6.641482830047607
    6. ')' → logprob: -7.766482830047607
    7. '(int' → logprob: -8.391483306884766
    8. '(),' → logprob: -9.391483306884766
    9. ' ,' → logprob: -9.766483306884766
    10. '```' → logprob: -10.266483306884766

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3485165536403656
    2. ' input' → logprob: -1.223516583442688
    3. '(input' → logprob: -9.723516464233398
    4. ',input' → logprob: -12.348516464233398
    5. ')' → logprob: -13.348516464233398
    6. '=input' → logprob: -13.473516464233398
    7. 'int' → logprob: -13.473516464233398
    8. 'list' → logprob: -14.098516464233398
    9. '[input' → logprob: -14.098516464233398
    10. '<input' → logprob: -15.098516464233398

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029723532497882843
    2. '()' → logprob: -5.87797212600708
    3. '(' → logprob: -8.877972602844238
    4. '(.' → logprob: -11.377972602844238
    5. '.' → logprob: -12.252972602844238
    6. ')' → logprob: -12.752972602844238
    7. ' ().' → logprob: -12.752972602844238
    8. '())' → logprob: -13.627972602844238
    9. ' .' → logprob: -14.252972602844238
    10. '().__' → logprob: -14.377972602844238

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.500000953674316
    3. 'strip' → logprob: -15.625000953674316
    4. 'spl' → logprob: -16.125
    5. '(split' → logprob: -16.5
    6. 's' → logprob: -17.25
    7. ')' → logprob: -18.375
    8. 'rstrip' → logprob: -18.5
    9. '))' → logprob: -20.75
    10. '()' → logprob: -21.125

Token 40: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0094101428985596
    2. '()))' → logprob: -1.2594101428985596
    3. ')' → logprob: -1.3844101428985596
    4. '))' → logprob: -2.5094101428985596
    5. '()' → logprob: -4.0094099044799805
    6. '(' → logprob: -6.3844099044799805
    7. '()));' → logprob: -10.38440990447998
    8. '()>' → logprob: -10.75940990447998
    9. ')))' → logprob: -11.50940990447998
    10. ' ())' → logprob: -11.75940990447998

Token 41: 'result' (ID: 2521)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5222980976104736
    2. '
' → logprob: -2.1472980976104736
    3. 'for' → logprob: -2.3972980976104736
    4. '\' → logprob: -2.8972980976104736
    5. ' 
' → logprob: -3.7722980976104736
    6. 'a' → logprob: -3.7722980976104736
    7. '```' → logprob: -4.1472978591918945
    8. 'c' → logprob: -4.5222978591918945
    9. '  
' → logprob: -4.5222978591918945
    10. ' for' → logprob: -4.7722978591918945

Token 42: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6618616580963135
    2. ' =' → logprob: -0.7868616580963135
    3. '=' → logprob: -3.6618616580963135
    4. ' ' → logprob: -6.786861419677734
    5. '_' → logprob: -7.536861419677734
    6. ' (' → logprob: -7.661861419677734
    7. ' +=' → logprob: -7.911861419677734
    8. '()' → logprob: -8.036861419677734
    9. 's' → logprob: -9.411861419677734
    10. ')' → logprob: -9.411861419677734

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34855639934539795
    2. ' ' → logprob: -1.223556399345398
    3. '1' → logprob: -9.973556518554688
    4. '[]' → logprob: -11.223556518554688
    5. ' []' → logprob: -11.473556518554688
    6. 'len' → logprob: -11.848556518554688
    7. 'sum' → logprob: -11.848556518554688
    8. ' len' → logprob: -11.973556518554688
    9. ' sum' → logprob: -12.723556518554688
    10. ' ' → logprob: -12.848556518554688

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. 'sum' → logprob: -13.000007629394531
    3. '1' → logprob: -13.750007629394531
    4. ' ' → logprob: -14.000007629394531
    5. '[]' → logprob: -14.125007629394531
    6. 'len' → logprob: -14.500007629394531
    7. '[]
' → logprob: -14.750007629394531
    8. '-' → logprob: -14.750007629394531
    9. '[' → logprob: -15.375007629394531
    10. '(' → logprob: -15.500007629394531

Token 45: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21012336015701294
    2. '
' → logprob: -2.335123300552368
    3. '\n' → logprob: -2.460123300552368
    4. ' for' → logprob: -5.210123538970947
    5. '\' → logprob: -7.460123538970947
    6. '<|end|>' → logprob: -7.585123538970947
    7. '```' → logprob: -7.835123538970947
    8. '' → logprob: -8.585123062133789
    9. ' 
' → logprob: -10.835123062133789
    10. 'n' → logprob: -10.960123062133789

Token 46: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006079887505620718
    2. '
' → logprob: -5.75607967376709
    3. '\n' → logprob: -6.25607967376709
    4. ' for' → logprob: -7.38107967376709
    5. '```' → logprob: -8.38107967376709
    6. '<|end|>' → logprob: -9.50607967376709
    7. '\' → logprob: -10.75607967376709
    8. 'f' → logprob: -11.50607967376709
    9. '' → logprob: -12.38107967376709
    10. 'a' → logprob: -12.63107967376709

Token 47: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02069276198744774
    2. ' for' → logprob: -3.895692825317383
    3. 'f' → logprob: -9.270692825317383
    4. '```' → logprob: -10.520692825317383
    5. '
' → logprob: -11.770692825317383
    6. 'range' → logprob: -12.520692825317383
    7. 'For' → logprob: -13.145692825317383
    8. ' ' → logprob: -13.270692825317383
    9. ' f' → logprob: -13.520692825317383
    10. 'fo' → logprob: -13.645692825317383

Token 48: ' quoi' (ID: 33399)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.478342205286026
    2. 'f' → logprob: -1.4783421754837036
    3. 'for' → logprob: -1.9783421754837036
    4. ' for' → logprob: -4.978342056274414
    5. 'r' → logprob: -5.103342056274414
    6. ' ' → logprob: -8.478342056274414
    7. 'i' → logprob: -8.603342056274414
    8. '  ' → logprob: -9.603342056274414
    9. 'd' → logprob: -9.728342056274414
    10. '   ' → logprob: -9.853342056274414

Token 49: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7913150191307068
    2. 's' → logprob: -1.5413150787353516
    3. ':' → logprob: -2.5413150787353516
    4. '_' → logprob: -2.5413150787353516
    5. '=' → logprob: -2.6663150787353516
    6. 'f' → logprob: -3.1663150787353516
    7. 'for' → logprob: -4.791315078735352
    8. '+' → logprob: -5.166315078735352
    9. '   ' → logprob: -5.166315078735352
    10. ')' → logprob: -5.166315078735352

Token 50: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18776839971542358
    2. 'for' → logprob: -2.0627684593200684
    3. ' for' → logprob: -3.5627684593200684
    4. '<|end|>' → logprob: -5.562768459320068
    5. ':' → logprob: -5.812768459320068
    6. ' 
' → logprob: -6.312768459320068
    7. '\n' → logprob: -6.437768459320068
    8. '  ' → logprob: -6.812768459320068
    9. '
' → logprob: -6.937768459320068
    10. '   ' → logprob: -7.687768459320068

Token 51: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.008315980434417725
    2. 'er' → logprob: -5.0083160400390625
    3. 'ser' → logprob: -7.3833160400390625
    4. 'user' → logprob: -8.258316040039062
    5. 'izer' → logprob: -8.508316040039062
    6. '```' → logprob: -9.133316040039062
    7. 'e' → logprob: -9.258316040039062
    8. 't' → logprob: -9.508316040039062
    9. 'is' → logprob: -9.633316040039062
    10. 'al' → logprob: -10.508316040039062

Token 52: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.616818904876709
    2. 'for' → logprob: -1.491818904876709
    3. '(' → logprob: -1.866818904876709
    4. ' for' → logprob: -2.741818904876709
    5. ':' → logprob: -5.866818904876709
    6. ',' → logprob: -5.991818904876709
    7. ')' → logprob: -6.366818904876709
    8. ' (' → logprob: -6.491818904876709
    9. 'f' → logprob: -6.866818904876709
    10. '_' → logprob: -6.866818904876709

Token 53: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5194692015647888
    2. '
' → logprob: -1.6444692611694336
    3. 'for' → logprob: -2.1444692611694336
    4. ' for' → logprob: -3.1444692611694336
    5. ' 
' → logprob: -3.8944692611694336
    6. ',' → logprob: -4.769469261169434
    7. '=' → logprob: -4.769469261169434
    8. '<|end|>' → logprob: -5.894469261169434
    9. '#' → logprob: -6.394469261169434
    10. ')' → logprob: -6.394469261169434

Token 54: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6639621257781982
    2. '
' → logprob: -1.1639621257781982
    3. ' 
' → logprob: -2.6639621257781982
    4. 'for' → logprob: -3.1639621257781982
    5. '<|end|>' → logprob: -3.6639621257781982
    6. '#' → logprob: -4.538962364196777
    7. ' for' → logprob: -4.663962364196777
    8. '\n' → logprob: -5.538962364196777
    9. ',' → logprob: -6.538962364196777
    10. ')' → logprob: -6.663962364196777

Token 55: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4967248737812042
    2. ' p' → logprob: -1.8717248439788818
    3. 'result' → logprob: -1.9967248439788818
    4. ' result' → logprob: -3.371724843978882
    5. 'p' → logprob: -4.621725082397461
    6. '    ' → logprob: -4.996725082397461
    7. '  ' → logprob: -4.996725082397461
    8. '<|end|>' → logprob: -5.121725082397461
    9. ' i' → logprob: -5.246725082397461
    10. '   ' → logprob: -5.621725082397461

Token 56: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8472305536270142
    2. ' n' → logprob: -0.9722305536270142
    3. 'for' → logprob: -3.5972304344177246
    4. 'range' → logprob: -3.7222304344177246
    5. 'do' → logprob: -3.8472304344177246
    6. 'continue' → logprob: -3.9722304344177246
    7. 's' → logprob: -4.222230434417725
    8. ' continue' → logprob: -4.347230434417725
    9. 'ne' → logprob: -4.972230434417725
    10. 'p' → logprob: -4.972230434417725

Token 57: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4951529800891876
    2. ' l' → logprob: -2.6201529502868652
    3. 's' → logprob: -2.8701529502868652
    4. ' utilise' → logprob: -3.1201529502868652
    5. 'util' → logprob: -3.2451529502868652
    6. ' va' → logprob: -3.2451529502868652
    7. ' fait' → logprob: -3.8701529502868652
    8. 'fait' → logprob: -3.8701529502868652
    9. ' s' → logprob: -3.9951529502868652
    10. 'f' → logprob: -4.745152950286865

Token 58: ''util' (ID: 37761)
  Prédit: ''util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''util' → logprob: -0.04631859064102173
    2. 'util' → logprob: -4.046318531036377
    3. ''' → logprob: -4.921318531036377
    4. 'a' → logprob: -5.671318531036377
    5. ''use' → logprob: -5.796318531036377
    6. '’util' → logprob: -5.921318531036377
    7. ' utilise' → logprob: -6.296318531036377
    8. ''utiliser' → logprob: -6.421318531036377
    9. ''utilisation' → logprob: -7.296318531036377
    10. ''a' → logprob: -7.546318531036377

Token 59: 'ise' (ID: 1096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.032151222229004
    2. ' ' → logprob: -1.032151222229004
    3. '=' → logprob: -1.907151222229004
    4. 's' → logprob: -2.657151222229004
    5. 'e' → logprob: -4.532151222229004
    6. ' )' → logprob: -4.532151222229004
    7. ' =' → logprob: -4.532151222229004
    8. 'i' → logprob: -4.657151222229004
    9. 'ize' → logprob: -5.157151222229004
    10. '  ' → logprob: -5.782151222229004

Token 60: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1032036766409874
    2. ' for' → logprob: -3.103203773498535
    3. '
' → logprob: -3.853203773498535
    4. 'f' → logprob: -4.728203773498535
    5. ' ' → logprob: -4.853203773498535
    6. '\n' → logprob: -5.353203773498535
    7. '\' → logprob: -5.728203773498535
    8. ' 
' → logprob: -6.478203773498535
    9. '#' → logprob: -6.853203773498535
    10. '' → logprob: -7.103203773498535

Token 61: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5811783671379089
    2. 'for' → logprob: -1.3311784267425537
    3. '\n' → logprob: -2.5811784267425537
    4. ' 
' → logprob: -3.3311784267425537
    5. ' for' → logprob: -3.7061784267425537
    6. '0' → logprob: -4.706178188323975
    7. '\' → logprob: -4.956178188323975
    8. ' ' → logprob: -5.081178188323975
    9. '' → logprob: -5.456178188323975
    10. '<|end|>' → logprob: -5.831178188323975

Token 62: ' non' (ID: 2893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01710847206413746
    2. ' 
' → logprob: -4.39210844039917
    3. '    ' → logprob: -6.64210844039917
    4. '   ' → logprob: -7.51710844039917
    5. '  ' → logprob: -8.142108917236328
    6. '  
' → logprob: -8.267108917236328
    7. '
' → logprob: -8.392108917236328
    8. '     
' → logprob: -8.642108917236328
    9. '<|end|>' → logprob: -8.767108917236328
    10. ' ,' → logprob: -9.142108917236328

Token 63: ' ?
' (ID: 19740)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5355870127677917
    2. ' ' → logprob: -1.2855870723724365
    3. 'for' → logprob: -2.7855870723724365
    4. ' for' → logprob: -3.9105870723724365
    5. '<|end|>' → logprob: -4.160586833953857
    6. ' 
' → logprob: -4.535586833953857
    7. '' → logprob: -5.035586833953857
    8. '#' → logprob: -5.160586833953857
    9. '\n' → logprob: -5.785586833953857
    10. ')' → logprob: -6.160586833953857

Token 64: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4146026372909546
    2. ' 
' → logprob: -1.5396026372909546
    3. '
' → logprob: -1.6646026372909546
    4. '\n' → logprob: -1.9146026372909546
    5. '' → logprob: -2.914602756500244
    6. 'for' → logprob: -2.914602756500244
    7. '\' → logprob: -3.414602756500244
    8. ' for' → logprob: -3.664602756500244
    9. '```' → logprob: -4.664602756500244
    10. '#' → logprob: -5.039602756500244

Token 65: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010366242378950119
    2. ' _' → logprob: -4.635366439819336
    3. ' ' → logprob: -8.385366439819336
    4. 'i' → logprob: -8.635366439819336
    5. '_' → logprob: -8.885366439819336
    6. ' x' → logprob: -10.260366439819336
    7. ' b' → logprob: -11.760366439819336
    8. ' c' → logprob: -12.635366439819336
    9. ' a' → logprob: -12.760366439819336
    10. '　' → logprob: -12.885366439819336

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040307044982910156
    2. ' ' → logprob: -3.29030704498291
    3. 'in' → logprob: -6.29030704498291
    4. ' i' → logprob: -8.04030704498291
    5. '  ' → logprob: -10.04030704498291
    6. '_' → logprob: -10.66530704498291
    7. 'i' → logprob: -12.41530704498291
    8. ' _' → logprob: -12.66530704498291
    9. 'range' → logprob: -12.91530704498291
    10. 'n' → logprob: -13.41530704498291

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026405377313494682
    2. 'range' → logprob: -3.6514053344726562
    3. ' p' → logprob: -9.901405334472656
    4. ' ' → logprob: -10.401405334472656
    5. 'p' → logprob: -11.526405334472656
    6. '  ' → logprob: -12.276405334472656
    7. '	range' → logprob: -12.651405334472656
    8. 'r' → logprob: -13.776405334472656
    9. ' rang' → logprob: -14.276405334472656
    10. '   ' → logprob: -14.401405334472656

Token 68: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12700453400611877
    2. '(' → logprob: -2.127004623413086
    3. '(M' → logprob: -10.377004623413086
    4. '(n' → logprob: -10.502004623413086
    5. ' (' → logprob: -11.377004623413086
    6. '(len' → logprob: -13.252004623413086
    7. '(K' → logprob: -14.127004623413086
    8. '(S' → logprob: -14.252004623413086
    9. '(
' → logprob: -14.627004623413086
    10. '()' → logprob: -14.627004623413086

Token 69: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04763680696487427
    2. '1' → logprob: -3.4226367473602295
    3. '2' → logprob: -4.297636985778809
    4. '(' → logprob: -8.297636985778809
    5. ' N' → logprob: -11.172636985778809
    6. '0' → logprob: -11.672636985778809
    7. '(N' → logprob: -11.797636985778809
    8. 'M' → logprob: -12.172636985778809
    9. 'len' → logprob: -13.297636985778809
    10. '4' → logprob: -13.297636985778809

Token 70: '**' (ID: 410)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.15431274473667145
    2. '**' → logprob: -2.1543128490448
    3. ' ' → logprob: -4.029312610626221
    4. ' ,' → logprob: -5.029312610626221
    5. ',' → logprob: -6.029312610626221
    6. ' **)' → logprob: -9.029313087463379
    7. ' )' → logprob: -9.404313087463379
    8. ')' → logprob: -10.279313087463379
    9. '  ' → logprob: -11.529313087463379
    10. ' *' → logprob: -11.779313087463379

Token 71: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.900034299585968e-05
    2. ' N' → logprob: -9.375088691711426
    3. 'M' → logprob: -12.750088691711426
    4. 'n' → logprob: -13.625088691711426
    5. '(N' → logprob: -18.000089645385742
    6. ' ' → logprob: -18.625089645385742
    7. '	N' → logprob: -19.000089645385742
    8. '*N' → logprob: -19.500089645385742
    9. '(' → logprob: -20.500089645385742
    10. ',N' → logprob: -20.625089645385742

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04928572103381157
    2. ' ):' → logprob: -3.049285650253296
    3. ')' → logprob: -7.299285888671875
    4. ' )' → logprob: -11.174285888671875
    5. ':' → logprob: -12.049285888671875
    6. '):
' → logprob: -14.299285888671875
    7. ' :' → logprob: -14.549285888671875
    8. '():' → logprob: -15.424285888671875
    9. ')：' → logprob: -15.674285888671875
    10. '）：' → logprob: -16.174285888671875

Token 73: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2607181966304779
    2. ' :' → logprob: -1.5107182264328003
    3. ' ' → logprob: -5.01071834564209
    4. '   ' → logprob: -6.88571834564209
    5. '):' → logprob: -8.13571834564209
    6. ')' → logprob: -8.63571834564209
    7. ' ):' → logprob: -8.76071834564209
    8. '    ' → logprob: -8.88571834564209
    9. ' :
' → logprob: -9.26071834564209
    10. ':
' → logprob: -10.26071834564209

Token 74: ' T' (ID: 353)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6072591543197632
    2. ':' → logprob: -0.9822591543197632
    3. ' ' → logprob: -2.7322592735290527
    4. '   ' → logprob: -5.357259273529053
    5. '    ' → logprob: -5.607259273529053
    6. ' ):' → logprob: -5.732259273529053
    7. ' :
' → logprob: -7.232259273529053
    8. '  ' → logprob: -7.732259273529053
    9. '[' → logprob: -7.857259273529053
    10. '):' → logprob: -7.982259273529053

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07909908145666122
    2. '=' → logprob: -2.579099178314209
    3. ' ' → logprob: -10.07909870147705
    4. '[' → logprob: -10.20409870147705
    5. '=[]' → logprob: -10.20409870147705
    6. '_' → logprob: -10.45409870147705
    7. ')' → logprob: -11.70409870147705
    8. ',' → logprob: -12.07909870147705
    9. 'o' → logprob: -12.32909870147705
    10. ' =[' → logprob: -12.45409870147705

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5439167618751526
    2. '[]' → logprob: -0.9189167618751526
    3. '[n' → logprob: -4.043916702270508
    4. ' []' → logprob: -6.293916702270508
    5. '[(' → logprob: -7.668916702270508
    6. ' [' → logprob: -7.793916702270508
    7. '[int' → logprob: -9.543916702270508
    8. 'bin' → logprob: -9.918916702270508
    9. '[list' → logprob: -9.918916702270508
    10. '[len' → logprob: -10.793916702270508

Token 77: '0' (ID: 15)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14599476754665375
    2. '(int' → logprob: -2.5209946632385254
    3. '(' → logprob: -3.5209946632385254
    4. '0' → logprob: -4.520994663238525
    5. '((' → logprob: -4.770994663238525
    6. ' (' → logprob: -5.770994663238525
    7. 'int' → logprob: -6.395994663238525
    8. '(i' → logprob: -7.520994663238525
    9. '1' → logprob: -8.270995140075684
    10. '(bool' → logprob: -8.395995140075684

Token 78: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06334187835454941
    2. ']*' → logprob: -2.8133418560028076
    3. ']*(' → logprob: -7.438342094421387
    4. ' for' → logprob: -7.813342094421387
    5. 'for' → logprob: -8.563342094421387
    6. ' ]' → logprob: -9.313342094421387
    7. ',' → logprob: -9.563342094421387
    8. ')]' → logprob: -12.063342094421387
    9. 'if' → logprob: -12.188342094421387
    10. ')' → logprob: -12.438342094421387

Token 79: 'N' (ID: 45)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.023276465013623238
    2. 'N' → logprob: -3.7732765674591064
    3. ' M' → logprob: -10.398276329040527
    4. ' N' → logprob: -15.023276329040527
    5. 'len' → logprob: -16.398277282714844
    6. '(M' → logprob: -16.898277282714844
    7. '	M' → logprob: -17.023277282714844
    8. ' ' → logprob: -17.273277282714844
    9. '   ' → logprob: -18.148277282714844
    10. 'MN' → logprob: -18.398277282714844

Token 80: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7606956958770752
    2. '<|end|>' → logprob: -0.7606956958770752
    3. ' ' → logprob: -3.885695695877075
    4. ' 
' → logprob: -4.510695457458496
    5. 'for' → logprob: -4.885695457458496
    6. ' for' → logprob: -4.885695457458496
    7. '<|end|>' → logprob: -5.635695457458496
    8. '  
' → logprob: -5.760695457458496
    9. '    
' → logprob: -6.385695457458496
    10. '' → logprob: -6.510695457458496

Token 81: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21069887280464172
    2. ')' → logprob: -2.5856988430023193
    3. 'for' → logprob: -4.710699081420898
    4. '[' → logprob: -4.835699081420898
    5. ' )' → logprob: -4.835699081420898
    6. ' ]' → logprob: -4.960699081420898
    7. '   ' → logprob: -5.085699081420898
    8. ' on' → logprob: -5.085699081420898
    9. ' but' → logprob: -5.210699081420898
    10. ' for' → logprob: -5.210699081420898

Token 84: ' recomm' (ID: 4922)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1380760669708252
    2. 'contin' → logprob: -1.5130760669708252
    3. 'pe' → logprob: -1.8880760669708252
    4. 'f' → logprob: -2.888076066970825
    5. 'do' → logprob: -3.138076066970825
    6. 'for' → logprob: -3.388076066970825
    7. 'n' → logprob: -3.638076066970825
    8. 'ne' → logprob: -3.888076066970825
    9. 'fait' → logprob: -4.138075828552246
    10. 's' → logprob: -4.263075828552246

Token 85: 'ence' (ID: 1082)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2231760174036026
    2. 'ence' → logprob: -2.7231760025024414
    3. 'a' → logprob: -3.0981760025024414
    4. 'u' → logprob: -4.223176002502441
    5. '#' → logprob: -4.348176002502441
    6. 'encer' → logprob: -4.348176002502441
    7. 'encement' → logprob: -5.598176002502441
    8. 's' → logprob: -5.598176002502441
    9. 'erce' → logprob: -5.723176002502441
    10. 'en' → logprob: -5.848176002502441

Token 86: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.528235912322998
    2. '1' → logprob: -1.278235912322998
    3. 'N' → logprob: -2.778235912322998
    4. 'zero' → logprob: -4.403235912322998
    5. 'l' → logprob: -4.653235912322998
    6. ' ' → logprob: -4.653235912322998
    7. 'n' → logprob: -4.653235912322998
    8. ' N' → logprob: -5.153235912322998
    9. 'len' → logprob: -5.528235912322998
    10. ' zero' → logprob: -6.028235912322998

Token 88: ' fois' (ID: 14697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6208867430686951
    2. '<|end|>' → logprob: -1.1208868026733398
    3. '   ' → logprob: -2.49588680267334
    4. ' 
' → logprob: -4.87088680267334
    5. ' for' → logprob: -4.99588680267334
    6. '    
' → logprob: -5.12088680267334
    7. '    ' → logprob: -5.12088680267334
    8. '<|end|>' → logprob: -5.37088680267334
    9. '	for' → logprob: -5.49588680267334
    10. '  
' → logprob: -5.49588680267334

Token 90: ' hein' (ID: 115155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007562382612377405
    2. '<|end|>' → logprob: -5.507562160491943
    3. '   ' → logprob: -6.882562160491943
    4. '  ' → logprob: -6.882562160491943
    5. '    ' → logprob: -7.257562160491943
    6. ' 
' → logprob: -9.132562637329102
    7. ''' → logprob: -9.757562637329102
    8. '<|end|>' → logprob: -9.757562637329102
    9. 'space' → logprob: -10.007562637329102
    10. '[' → logprob: -10.007562637329102

Token 91: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06566062569618225
    2. '<|end|>' → logprob: -3.0656607151031494
    3. '    ' → logprob: -5.31566047668457
    4. ' 
' → logprob: -6.31566047668457
    5. '   ' → logprob: -6.44066047668457
    6. '
' → logprob: -6.44066047668457
    7. '<|end|>' → logprob: -6.81566047668457
    8. '  ' → logprob: -6.81566047668457
    9. '[' → logprob: -6.94066047668457
    10. '    
' → logprob: -7.19066047668457

Token 92: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15500874817371368
    2. '<|end|>' → logprob: -2.4050087928771973
    3. '   ' → logprob: -4.405008792877197
    4. '    ' → logprob: -4.655008792877197
    5. ':' → logprob: -4.655008792877197
    6. ' 
' → logprob: -5.280008792877197
    7. '
' → logprob: -5.280008792877197
    8. '  
' → logprob: -5.780008792877197
    9. '  ' → logprob: -6.155008792877197
    10. '    
' → logprob: -6.405008792877197

Token 93: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5669271945953369
    2. 'i' → logprob: -1.441927194595337
    3. ' j' → logprob: -2.066927194595337
    4. ' i' → logprob: -2.691927194595337
    5. 'k' → logprob: -6.566926956176758
    6. ' k' → logprob: -9.191926956176758
    7. 'p' → logprob: -9.316926956176758
    8. ' ' → logprob: -9.441926956176758
    9. 'b' → logprob: -9.441926956176758
    10. ' p' → logprob: -10.191926956176758

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016309188678860664
    2. 'in' → logprob: -4.1413092613220215
    3. ' ' → logprob: -8.266308784484863
    4. 'range' → logprob: -12.016308784484863
    5. '<|end|>' → logprob: -12.266308784484863
    6. '  ' → logprob: -13.641308784484863
    7. '	in' → logprob: -14.016308784484863
    8. ' ,' → logprob: -14.141308784484863
    9. ' ' → logprob: -14.516308784484863
    10. 'space' → logprob: -14.766308784484863

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020732134580612
    2. ' range' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. '(range' → logprob: -15.475207328796387
    5. '	range' → logprob: -15.850207328796387
    6. 'rang' → logprob: -17.72520637512207
    7. ' xrange' → logprob: -18.60020637512207
    8. '  ' → logprob: -18.72520637512207
    9. '   ' → logprob: -18.72520637512207
    10. 'r' → logprob: -19.10020637512207

Token 97: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0014416613848879933
    2. '(' → logprob: -7.126441478729248
    3. '(M' → logprob: -7.626441478729248
    4. 'N' → logprob: -8.876441955566406
    5. '(S' → logprob: -12.626441955566406
    6. '(n' → logprob: -13.001441955566406
    7. '(
' → logprob: -13.501441955566406
    8. '(len' → logprob: -14.001441955566406
    9. ' (' → logprob: -14.126441955566406
    10. 'M' → logprob: -14.501441955566406

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001319881179369986
    2. ')' → logprob: -7.126319885253906
    3. '):
' → logprob: -7.626319885253906
    4. ' ):' → logprob: -10.876319885253906
    5. ':' → logprob: -12.376319885253906
    6. '):
' → logprob: -14.001319885253906
    7. '   ' → logprob: -14.126319885253906
    8. '):

' → logprob: -14.126319885253906
    9. ' ' → logprob: -14.376319885253906
    10. '+' → logprob: -15.251319885253906

Token 99: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2507684826850891
    2. '<|end|>' → logprob: -2.1257684230804443
    3. '   ' → logprob: -3.0007684230804443
    4. '    ' → logprob: -3.5007684230804443
    5. ' if' → logprob: -4.375768661499023
    6. '       ' → logprob: -5.500768661499023
    7. '  ' → logprob: -6.000768661499023
    8. ' (' → logprob: -7.375768661499023
    9. 'if' → logprob: -7.375768661499023
    10. '<|end|>' → logprob: -7.875768661499023

Token 100: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' ' (ID: 5310)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23613598942756653
    2. 'if' → logprob: -1.6111359596252441
    3. ' (' → logprob: -4.861135959625244
    4. '(T' → logprob: -6.611135959625244
    5. ' T' → logprob: -7.361135959625244
    6. 'T' → logprob: -7.861135959625244
    7. '(' → logprob: -8.236136436462402
    8. ' ' → logprob: -9.361136436462402
    9. '   ' → logprob: -9.736136436462402
    10. '((' → logprob: -10.361136436462402

Token 102: 'en' (ID: 262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5783663988113403
    2. ' if' → logprob: -0.8283663988113403
    3. ' ' → logprob: -6.703366279602051
    4. ' (' → logprob: -8.32836627960205
    5. '   ' → logprob: -8.57836627960205
    6. '<|end|>' → logprob: -8.57836627960205
    7. 'T' → logprob: -8.95336627960205
    8. '    ' → logprob: -9.45336627960205
    9. '(' → logprob: -9.70336627960205
    10. ' T' → logprob: -9.82836627960205

Token 103: ' vrai' (ID: 42682)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14929115772247314
    2. 'range' → logprob: -2.6492910385131836
    3. ' if' → logprob: -3.6492910385131836
    4. 't' → logprob: -3.7742910385131836
    5. '   ' → logprob: -4.774291038513184
    6. 'if' → logprob: -5.149291038513184
    7. ' ' → logprob: -7.274291038513184
    8. 'for' → logprob: -7.899291038513184
    9. '       ' → logprob: -7.899291038513184
    10. '     ' → logprob: -8.149291038513184

Token 104: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6136396527290344
    2. '<|end|>' → logprob: -1.3636395931243896
    3. ' ' → logprob: -2.3636395931243896
    4. 'if' → logprob: -3.1136395931243896
    5. '       ' → logprob: -3.7386395931243896
    6. '   ' → logprob: -3.9886395931243896
    7. '<|end|>' → logprob: -4.863639831542969
    8. '    ' → logprob: -4.863639831542969
    9. '  ' → logprob: -6.863639831542969
    10. ',' → logprob: -7.363639831542969

Token 105: ' j' (ID: 441)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06703100353479385
    2. 'if' → logprob: -2.942030906677246
    3. ' T' → logprob: -4.567030906677246
    4. 'T' → logprob: -6.692030906677246
    5. '   ' → logprob: -8.567030906677246
    6. ' ' → logprob: -8.817030906677246
    7. '    ' → logprob: -10.567030906677246
    8. ' (' → logprob: -10.817030906677246
    9. ' ' → logprob: -10.942030906677246
    10. '  ' → logprob: -11.817030906677246

Token 106: ''ai' (ID: 12480)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1424684077501297
    2. '<|end|>' → logprob: -3.6424684524536133
    3. ' ' → logprob: -3.7674684524536133
    4. ')' → logprob: -4.392468452453613
    5. 's' → logprob: -5.017468452453613
    6. '   ' → logprob: -5.142468452453613
    7. '<|end|>' → logprob: -5.142468452453613
    8. ' is' → logprob: -5.142468452453613
    9. '=' → logprob: -5.642468452453613
    10. ' in' → logprob: -5.767468452453613

Token 107: ' hés' (ID: 135770)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.367993026971817
    2. 'if' → logprob: -1.4929929971694946
    3. ' ' → logprob: -3.867993116378784
    4. ' (' → logprob: -3.867993116378784
    5. '   ' → logprob: -4.617992877960205
    6. ' range' → logprob: -4.992992877960205
    7. 'range' → logprob: -5.242992877960205
    8. ' ((' → logprob: -5.492992877960205
    9. ' in' → logprob: -6.367992877960205
    10. 'pass' → logprob: -6.492992877960205

Token 108: 'ité' (ID: 3761)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.9217204451560974
    2. 'itate' → logprob: -1.7967205047607422
    3. 'it' → logprob: -2.296720504760742
    4. 't' → logprob: -2.421720504760742
    5. 'ité' → logprob: -2.671720504760742
    6. 'iter' → logprob: -3.671720504760742
    7. '   ' → logprob: -3.671720504760742
    8. 'te' → logprob: -3.921720504760742
    9. '=' → logprob: -4.171720504760742
    10. 'itates' → logprob: -4.171720504760742

Token 109: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46781808137893677
    2. '<|end|>' → logprob: -1.592818021774292
    3. '   ' → logprob: -2.842818021774292
    4. '    ' → logprob: -2.842818021774292
    5. '       ' → logprob: -4.217818260192871
    6. ' to' → logprob: -4.342818260192871
    7. ' if' → logprob: -5.092818260192871
    8. '  ' → logprob: -5.217818260192871
    9. '<|end|>' → logprob: -5.842818260192871
    10. ' between' → logprob: -5.967818260192871

Token 110: ' faire' (ID: 8119)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5830691456794739
    2. ' if' → logprob: -0.8330691456794739
    3. ' continue' → logprob: -5.458069324493408
    4. 'continue' → logprob: -6.958069324493408
    5. ' continuer' → logprob: -7.458069324493408
    6. 'for' → logprob: -8.08306884765625
    7. ' for' → logprob: -8.20806884765625
    8. ' ' → logprob: -9.58306884765625
    9. '<|end|>' → logprob: -9.70806884765625
    10. 'import' → logprob: -9.83306884765625

Token 111: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5471060872077942
    2. 'if' → logprob: -0.9221060872077942
    3. '   ' → logprob: -4.1721062660217285
    4. ' (' → logprob: -6.0471062660217285
    5. ''' → logprob: -6.6721062660217285
    6. '1' → logprob: -7.1721062660217285
    7. ')' → logprob: -7.6721062660217285
    8. '(' → logprob: -7.7971062660217285
    9. ' '' → logprob: -7.7971062660217285
    10. ' ' → logprob: -8.04710578918457

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020098933950066566
    2. '   ' → logprob: -5.39509916305542
    3. ' ' → logprob: -5.39509916305542
    4. '2' → logprob: -6.02009916305542
    5. 'p' → logprob: -6.52009916305542
    6. '+' → logprob: -7.27009916305542
    7. '(' → logprob: -7.27009916305542
    8. 'T' → logprob: -7.64509916305542
    9. '           ' → logprob: -7.64509916305542
    10. '       ' → logprob: -7.64509916305542

Token 113: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.4860711991786957
    2. ' if' → logprob: -1.986071228981018
    3. 'if' → logprob: -2.9860711097717285
    4. ' ' → logprob: -3.1110711097717285
    5. ' because' → logprob: -3.3610711097717285
    6. '<|end|>' → logprob: -3.6110711097717285
    7. ' mais' → logprob: -3.7360711097717285
    8. 'but' → logprob: -4.1110711097717285
    9. ' car' → logprob: -4.6110711097717285
    10. ' j' → logprob: -5.1110711097717285

Token 115: ' comme' (ID: 7971)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14206214249134064
    2. 'if' → logprob: -2.392062187194824
    3. ' (' → logprob: -4.267062187194824
    4. ' T' → logprob: -5.017062187194824
    5. ' ' → logprob: -5.392062187194824
    6. ' n' → logprob: -6.267062187194824
    7. ' p' → logprob: -6.517062187194824
    8. '(p' → logprob: -6.642062187194824
    9. ' j' → logprob: -6.892062187194824
    10. 'T' → logprob: -7.017062187194824

Token 116: ' ça' (ID: 13590)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4749976396560669
    2. ' p' → logprob: -2.7249975204467773
    3. 'p' → logprob: -2.8499975204467773
    4. 'on' → logprob: -3.0999975204467773
    5. 'range' → logprob: -3.0999975204467773
    6. ' range' → logprob: -3.4749975204467773
    7. ' j' → logprob: -3.7249975204467773
    8. ' S' → logprob: -4.474997520446777
    9. 'j' → logprob: -4.599997520446777
    10. ' les' → logprob: -4.974997520446777

Token 117: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '...
' (ID: 4908)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9280767440795898
    2. '<|end|>' → logprob: -1.6780767440795898
    3. '       ' → logprob: -1.8030767440795898
    4. ' ' → logprob: -1.8030767440795898
    5. '   ' → logprob: -3.17807674407959
    6. '    ' → logprob: -3.92807674407959
    7. 'if' → logprob: -4.42807674407959
    8. '<|end|>' → logprob: -5.67807674407959
    9. '        ' → logprob: -6.05307674407959
    10. '  ' → logprob: -6.05307674407959

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09779693186283112
    2. 'if' (adapté à ' if') → logprob: -2.59779691696167
    3. '<|end|>' → logprob: -5.09779691696167
    4. ' ' → logprob: -5.34779691696167
    5. 'T' → logprob: -5.84779691696167
    6. ' T' → logprob: -6.09779691696167
    7. '   ' → logprob: -6.97279691696167
    8. '    ' → logprob: -7.47279691696167
    9. '       ' → logprob: -7.59779691696167
    10. '<|end|>' → logprob: -7.84779691696167

Token 121: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14617924392223358
    2. ' n' → logprob: -2.39617919921875
    3. '(n' → logprob: -3.14617919921875
    4. ' ((' → logprob: -7.02117919921875
    5. 'n' → logprob: -7.64617919921875
    6. '(' → logprob: -8.27117919921875
    7. ' ' → logprob: -8.77117919921875
    8. '((' → logprob: -9.27117919921875
    9. '  ' → logprob: -11.89617919921875
    10. '   ' → logprob: -12.14617919921875

Token 122: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18510514497756958
    2. ' (' → logprob: -2.060105085372925
    3. 'n' → logprob: -3.685105085372925
    4. ' n' → logprob: -4.185105323791504
    5. '((' → logprob: -7.435105323791504
    6. '(' → logprob: -7.685105323791504
    7. ' ((' → logprob: -9.310105323791504
    8. ' ' → logprob: -10.185105323791504
    9. '   ' → logprob: -11.435105323791504
    10. '(N' → logprob: -11.560105323791504

Token 123: ' &' (ID: 827)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.7029610872268677
    2. ' &' → logprob: -0.9529610872268677
    3. ' <<' → logprob: -2.827960968017578
    4. '&' → logprob: -3.577960968017578
    5. '<' → logprob: -3.827960968017578
    6. ' (' → logprob: -5.327960968017578
    7. '<<(' → logprob: -6.452960968017578
    8. '(n' → logprob: -7.202960968017578
    9. '<n' → logprob: -7.452960968017578
    10. ' <' → logprob: -7.577960968017578

Token 124: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6432245969772339
    2. '(n' → logprob: -0.7682245969772339
    3. '(' → logprob: -4.893224716186523
    4. ' n' → logprob: -6.018224716186523
    5. 'n' → logprob: -7.518224716186523
    6. ' ' → logprob: -10.143224716186523
    7. ')' → logprob: -11.893224716186523
    8. '>' → logprob: -12.018224716186523
    9. '(N' → logprob: -12.018224716186523
    10. ' ((' → logprob: -12.143224716186523

Token 125: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11708187311887741
    2. ' n' → logprob: -2.492081880569458
    3. '(n' → logprob: -3.617081880569458
    4. ' (' → logprob: -7.242081642150879
    5. '(' → logprob: -8.992081642150879
    6. ' ' → logprob: -10.992081642150879
    7. '	n' → logprob: -11.617081642150879
    8. '   ' → logprob: -11.617081642150879
    9. '
' → logprob: -12.867081642150879
    10. '_n' → logprob: -12.992081642150879

Token 126: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.04395061731338501
    2. '>' → logprob: -3.7939505577087402
    3. ' >>' → logprob: -4.16895055770874
    4. '<' → logprob: -6.54395055770874
    5. ' ' → logprob: -6.91895055770874
    6. ' >' → logprob: -7.41895055770874
    7. ' (' → logprob: -7.41895055770874
    8. '(' → logprob: -7.91895055770874
    9. '1' → logprob: -7.91895055770874
    10. '<<' → logprob: -8.293951034545898

Token 127: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00023095356300473213
    2. ' j' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.50023078918457
    4. '	j' → logprob: -16.25023078918457
    5. ' ' → logprob: -17.37523078918457
    6. '```' → logprob: -18.12523078918457
    7. '
' → logprob: -19.37523078918457
    8. '[j' → logprob: -20.00023078918457
    9. '    ' → logprob: -20.37523078918457
    10. '_j' → logprob: -20.37523078918457

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06928417086601257
    2. ')' → logprob: -2.819284200668335
    3. ' ):' → logprob: -5.194283962249756
    4. '):
' → logprob: -6.569283962249756
    5. ' )' → logprob: -8.569284439086914
    6. ')==' → logprob: -9.569284439086914
    7. ')>' → logprob: -10.069284439086914
    8. ')=' → logprob: -11.444284439086914
    9. ' ):
' → logprob: -11.944284439086914
    10. ':' → logprob: -12.069284439086914

Token 129: '           ' (ID: 352)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.48674607276916504
    2. '       ' → logprob: -1.236746072769165
    3. ' T' → logprob: -2.611746072769165
    4. '           ' → logprob: -4.361745834350586
    5. '   ' → logprob: -5.111745834350586
    6. ' ' → logprob: -6.861745834350586
    7. '        
' → logprob: -8.236745834350586
    8. ' ' → logprob: -8.361745834350586
    9. '	T' → logprob: -8.611745834350586
    10. '               ' → logprob: -8.986745834350586

Token 130: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.012846533209085464
    2. ' T' → logprob: -4.38784646987915
    3. '   ' → logprob: -8.137846946716309
    4. ' ' → logprob: -10.762846946716309
    5. '           ' → logprob: -11.762846946716309
    6. 'p' → logprob: -12.012846946716309
    7. '	T' → logprob: -12.637846946716309
    8. '  ' → logprob: -13.012846946716309
    9. '       ' → logprob: -13.762846946716309
    10. '    ' → logprob: -14.387846946716309

Token 131: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.794061770662665e-05
    2. '[' → logprob: -9.25009822845459
    3. ' [' → logprob: -13.62509822845459
    4. '[i' → logprob: -15.00009822845459
    5. '[n' → logprob: -16.750097274780273
    6. '[T' → logprob: -17.500097274780273
    7. '[J' → logprob: -17.750097274780273
    8. 'j' → logprob: -18.125097274780273
    9. '```' → logprob: -18.125097274780273
    10. ']' → logprob: -18.375097274780273

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002340685110539198
    2. ')' → logprob: -6.127340793609619
    3. ']=' → logprob: -9.377340316772461
    4. ' ]' → logprob: -9.877340316772461
    5. '=' → logprob: -11.502340316772461
    6. ')]' → logprob: -12.502340316772461
    7. ']
' → logprob: -13.252340316772461
    8. ' =' → logprob: -13.502340316772461
    9. ']+=' → logprob: -13.877340316772461
    10. ' )' → logprob: -14.502340316772461

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198930740356445
    2. ' =' → logprob: -2.8119893074035645
    3. '+=' → logprob: -10.936988830566406
    4. ' +=' → logprob: -12.561988830566406
    5. ' ^=' → logprob: -15.811988830566406
    6. '＝' → logprob: -15.936988830566406
    7. ' ' → logprob: -16.561988830566406
    8. '.=' → logprob: -17.686988830566406
    9. '1' → logprob: -18.061988830566406
    10. ' |=' → logprob: -18.436988830566406

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'True' → logprob: -14.250028610229492
    4. '   ' → logprob: -15.500028610229492
    5. '0' → logprob: -16.750028610229492
    6. '  ' → logprob: -17.375028610229492
    7. 'p' → logprob: -18.125028610229492
    8. '１' → logprob: -18.375028610229492
    9. ' True' → logprob: -18.375028610229492
    10. ' ' → logprob: -18.500028610229492

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'True' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.12500286102295
    5. '0' → logprob: -15.75000286102295
    6. 'p' → logprob: -17.250003814697266
    7. '  ' → logprob: -18.000003814697266
    8. '１' → logprob: -18.687503814697266
    9. '2' → logprob: -19.187503814697266
    10. 'true' → logprob: -19.625003814697266

Token 136: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13686685264110565
    2. '<|end|>' → logprob: -2.261866807937622
    3. ' for' → logprob: -4.636867046356201
    4. ' ' → logprob: -5.511867046356201
    5. '
' → logprob: -5.636867046356201
    6. '    
' → logprob: -6.136867046356201
    7. 'for' → logprob: -6.636867046356201
    8. '  ' → logprob: -7.386867046356201
    9. '       ' → logprob: -7.761867046356201
    10. '  
' → logprob: -7.886867046356201

Token 138: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6882712244987488
    2. 'ok' → logprob: -1.6882712841033936
    3. 'on' → logprob: -2.5632712841033936
    4. '   ' → logprob: -2.6882712841033936
    5. 'valid' → logprob: -2.9382712841033936
    6. 'all' → logprob: -3.1882712841033936
    7. 'count' → logprob: -3.3132712841033936
    8. 'sum' → logprob: -4.8132710456848145
    9. ' for' → logprob: -4.9382710456848145
    10. 'if' → logprob: -5.3132710456848145

Token 139: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.02243625372648239
    2. 'for' → logprob: -4.647436141967773
    3. 'u' → logprob: -5.647436141967773
    4. ' for' → logprob: -6.147436141967773
    5. 't' → logprob: -6.272436141967773
    6. '#' → logprob: -6.522436141967773
    7. '=' → logprob: -6.897436141967773
    8. 'atisf' → logprob: -8.022436141967773
    9. 'result' → logprob: -8.647436141967773
    10. 'o' → logprob: -8.897436141967773

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. 'sum' → logprob: -12.75018310546875
    4. 'result' → logprob: -15.75018310546875
    5. '1' → logprob: -16.75018310546875
    6. 'um' → logprob: -17.62518310546875
    7. ' sum' → logprob: -17.62518310546875
    8. '   ' → logprob: -17.75018310546875
    9. '[' → logprob: -17.75018310546875
    10. '[]' → logprob: -17.87518310546875

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001214237418025732
    2. ' ' → logprob: -9.250121116638184
    3. 'sum' → logprob: -11.250121116638184
    4. 'um' → logprob: -12.250121116638184
    5. 'result' → logprob: -13.000121116638184
    6. '[]' → logprob: -13.500121116638184
    7. '1' → logprob: -13.875121116638184
    8. '[' → logprob: -14.125121116638184
    9. 's' → logprob: -15.687621116638184
    10. 'm' → logprob: -15.750121116638184

Token 142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010058263316750526
    2. ' for' → logprob: -5.135058403015137
    3. 'for' → logprob: -5.510058403015137
    4. '<|end|>' → logprob: -10.135058403015137
    5. '	for' → logprob: -11.010058403015137
    6. '       ' → logprob: -12.135058403015137
    7. ' ' → logprob: -12.135058403015137
    8. '
' → logprob: -13.135058403015137
    9. '    
' → logprob: -13.260058403015137
    10. '  ' → logprob: -13.385058403015137

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.774276774493046e-05
    2. ' for' → logprob: -10.500038146972656
    3. '   ' → logprob: -11.500038146972656
    4. ' ' → logprob: -17.375038146972656
    5. '	for' → logprob: -17.875038146972656
    6. 'or' → logprob: -18.750038146972656
    7. '
' → logprob: -19.125038146972656
    8. '    
' → logprob: -19.250038146972656
    9. 'if' → logprob: -19.625038146972656
    10. '  ' → logprob: -19.750038146972656

Token 145: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0639525055885315
    2. 'k' → logprob: -3.3139524459838867
    3. ' i' → logprob: -3.6889524459838867
    4. ' k' → logprob: -7.938952445983887
    5. 'j' → logprob: -8.813952445983887
    6. ' ' → logprob: -11.063952445983887
    7. 'c' → logprob: -12.188952445983887
    8. '(i' → logprob: -12.251452445983887
    9. 'range' → logprob: -12.251452445983887
    10. '	i' → logprob: -12.438952445983887

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3940175473690033
    2. ',' → logprob: -1.1440175771713257
    3. 'in' → logprob: -5.144017696380615
    4. ' ,' → logprob: -7.269017696380615
    5. ',s' → logprob: -8.394017219543457
    6. 's' → logprob: -8.769017219543457
    7. ',S' → logprob: -9.769017219543457
    8. 'range' → logprob: -10.269017219543457
    9. 'S' → logprob: -10.519017219543457
    10. ' ' → logprob: -11.144017219543457

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007108822464942932
    2. ' range' → logprob: -7.250710964202881
    3. 'S' → logprob: -14.250710487365723
    4. '(range' → logprob: -15.500710487365723
    5. 's' → logprob: -18.12571144104004
    6. '	range' → logprob: -18.37571144104004
    7. 'r' → logprob: -18.50071144104004
    8. ' ' → logprob: -19.25071144104004
    9. ' S' → logprob: -19.87571144104004
    10. '  ' → logprob: -19.87571144104004

Token 148: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0002943479048553854
    2. '(len' → logprob: -8.25029468536377
    3. 'M' → logprob: -10.87529468536377
    4. 'len' → logprob: -11.37529468536377
    5. '(' → logprob: -13.50029468536377
    6. '   ' → logprob: -14.75029468536377
    7. '(m' → logprob: -15.12529468536377
    8. ' M' → logprob: -16.000293731689453
    9. ',M' → logprob: -16.000293731689453
    10. '	M' → logprob: -16.375293731689453

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018219131976366043
    2. '):
' → logprob: -4.018218994140625
    3. ':' → logprob: -10.143218994140625
    4. '):
' → logprob: -10.768218994140625
    5. ')' → logprob: -12.143218994140625
    6. '):

' → logprob: -13.768218994140625
    7. ' ):' → logprob: -14.018218994140625
    8. '   ' → logprob: -14.393218994140625
    9. ',' → logprob: -15.268218994140625
    10. ':
' → logprob: -15.393218994140625

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04144110158085823
    2. ' if' → logprob: -3.5414412021636963
    3. 'if' → logprob: -4.541440963745117
    4. '   ' → logprob: -7.416440963745117
    5. ',' → logprob: -8.666440963745117
    6. ' for' → logprob: -10.041440963745117
    7. '    ' → logprob: -10.916440963745117
    8. '<|end|>' → logprob: -11.041440963745117
    9. 'for' → logprob: -11.166440963745117
    10. '        
' → logprob: -11.666440963745117

Token 151: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.302035927772522
    2. 'c' → logprob: -2.1770358085632324
    3. 'if' → logprob: -3.0520358085632324
    4. 'cnt' (adapté à ' cnt') → logprob: -3.0520358085632324
    5. '       ' → logprob: -3.5520358085632324
    6. '   ' → logprob: -5.052035808563232
    7. 'on' → logprob: -5.052035808563232
    8. 'k' → logprob: -5.302035808563232
    9. 'for' → logprob: -6.427035808563232
    10. 'b' → logprob: -6.552035808563232

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08906825631856918
    2. '=' → logprob: -2.4640681743621826
    3. ' ' → logprob: -9.714068412780762
    4. '   ' → logprob: -10.214068412780762
    5. 't' → logprob: -11.964068412780762
    6. ',' → logprob: -12.089068412780762
    7. '=sum' → logprob: -12.714068412780762
    8. '  ' → logprob: -12.964068412780762
    9. 'T' → logprob: -13.339068412780762
    10. ' ' → logprob: -13.589068412780762

Token 153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011236425780225545
    2. 'sum' → logprob: -9.625112533569336
    3. ' ' → logprob: -10.000112533569336
    4. '   ' → logprob: -15.000112533569336
    5. 'T' → logprob: -15.125112533569336
    6. ' sum' → logprob: -15.500112533569336
    7. '1' → logprob: -17.000112533569336
    8. '  ' → logprob: -18.125112533569336
    9. 's' → logprob: -18.750112533569336
    10. '０' → logprob: -18.812612533569336

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.865583706414327e-05
    2. 'sum' → logprob: -9.25009822845459
    3. ' ' → logprob: -13.37509822845459
    4. 'T' → logprob: -14.25009822845459
    5. '1' → logprob: -16.750099182128906
    6. ' sum' → logprob: -17.000099182128906
    7. 'p' → logprob: -17.500099182128906
    8. '   ' → logprob: -17.625099182128906
    9. 'len' → logprob: -17.875099182128906
    10. '+' → logprob: -18.000099182128906

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03223629295825958
    2. '<|end|>' → logprob: -4.282236099243164
    3. ' for' → logprob: -4.782236099243164
    4. '   ' → logprob: -5.407236099243164
    5. ' ' → logprob: -6.657236099243164
    6. '
' → logprob: -7.157236099243164
    7. '<|end|>' → logprob: -7.282236099243164
    8. 'for' → logprob: -7.282236099243164
    9. '        
' → logprob: -7.907236099243164
    10. ',' → logprob: -8.157236099243164

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009311757050454617
    2. ' for' → logprob: -4.884311676025391
    3. 'for' → logprob: -6.634311676025391
    4. '   ' → logprob: -9.00931167602539
    5. '
' → logprob: -9.13431167602539
    6. ',' → logprob: -9.13431167602539
    7. ')' → logprob: -11.88431167602539
    8. '           ' → logprob: -12.00931167602539
    9. '<|end|>' → logprob: -12.00931167602539
    10. '        
' → logprob: -12.25931167602539

Token 157: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008900215616449714
    2. ' for' → logprob: -7.250890254974365
    3. '   ' → logprob: -9.375889778137207
    4. '       ' → logprob: -9.375889778137207
    5. 'range' → logprob: -11.625889778137207
    6. '	for' → logprob: -14.500889778137207
    7. '           ' → logprob: -14.750889778137207
    8. '    ' → logprob: -15.250889778137207
    9. 'j' → logprob: -15.875889778137207
    10. ' ' → logprob: -16.125890731811523

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17770016193389893
    2. '=' → logprob: -2.4277000427246094
    3. 'en' → logprob: -3.1777000427246094
    4. '   ' → logprob: -4.302700042724609
    5. ',' → logprob: -4.927700042724609
    6. 'for' → logprob: -5.552700042724609
    7. ' in' → logprob: -6.302700042724609
    8. 'ength' → logprob: -6.302700042724609
    9. '=len' → logprob: -7.302700042724609
    10. '       ' → logprob: -7.677700042724609

Token 159: ' S' (ID: 336)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05160488560795784
    2. 'S' → logprob: -3.176604986190796
    3. ' len' → logprob: -4.926604747772217
    4. '(len' → logprob: -6.801604747772217
    5. ' S' → logprob: -9.551605224609375
    6. '[len' → logprob: -10.551605224609375
    7. 'en' → logprob: -10.551605224609375
    8. '0' → logprob: -10.676605224609375
    9. '=len' → logprob: -10.676605224609375
    10. '   ' → logprob: -11.051605224609375

Token 160: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.954393079970032e-05
    2. 'idx' → logprob: -10.000049591064453
    3. '[' → logprob: -12.875049591064453
    4. '	idx' → logprob: -15.000049591064453
    5. ' idx' → logprob: -15.250049591064453
    6. 'x' → logprob: -15.625049591064453
    7. ' [' → logprob: -16.000049591064453
    8. '][' → logprob: -16.000049591064453
    9. '```' → logprob: -16.000049591064453
    10. '(idx' → logprob: -16.125049591064453

Token 161: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004252677317708731
    2. ']' → logprob: -5.879252910614014
    3. ')][' → logprob: -7.004252910614014
    4. '])' → logprob: -8.504252433776855
    5. '[' → logprob: -9.004252433776855
    6. '])[' → logprob: -9.129252433776855
    7. ']][' → logprob: -10.629252433776855
    8. ')' → logprob: -11.004252433776855
    9. ')[' → logprob: -11.004252433776855
    10. ' ][' → logprob: -11.254252433776855

Token 162: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741656184196472
    2. '0' → logprob: -0.9741656184196472
    3. '   ' → logprob: -9.849165916442871
    4. ':' → logprob: -11.224165916442871
    5. ' ' → logprob: -11.349165916442871
    6. ':-' → logprob: -12.724165916442871
    7. '2' → logprob: -13.599165916442871
    8. '::-' → logprob: -13.849165916442871
    9. 'j' → logprob: -14.224165916442871
    10. '    
' → logprob: -14.224165916442871

Token 163: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0631369799375534
    2. ']
' → logprob: -2.8131370544433594
    3. '+' → logprob: -7.813137054443359
    4. ']+' → logprob: -7.938137054443359
    5. ']

' → logprob: -9.18813705444336
    6. '       ' → logprob: -9.31313705444336
    7. ' ]' → logprob: -10.06313705444336
    8. '<|end|>' → logprob: -10.18813705444336
    9. ']
' → logprob: -10.56313705444336
    10. '])' → logprob: -10.56313705444336

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006463474594056606
    2. '+' → logprob: -5.756463527679443
    3. '
' → logprob: -6.506463527679443
    4. '<|end|>' → logprob: -7.256463527679443
    5. ' +' → logprob: -8.256463050842285
    6. 'for' → logprob: -8.381463050842285
    7. ',' → logprob: -9.256463050842285
    8. '   ' → logprob: -9.256463050842285
    9. '        
' → logprob: -9.256463050842285
    10. ' for' → logprob: -9.381463050842285

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.037233587354421616
    2. '       ' → logprob: -3.662233591079712
    3. ' for' → logprob: -4.537233352661133
    4. '   ' → logprob: -8.912233352661133
    5. '	for' → logprob: -11.662233352661133
    6. '           ' → logprob: -12.162233352661133
    7. 'k' → logprob: -12.537233352661133
    8. 'range' → logprob: -12.662233352661133
    9. '        ' → logprob: -13.037233352661133
    10. 'c' → logprob: -13.162233352661133

Token 166: ' ele' (ID: 4888)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00014644917973782867
    2. ' k' → logprob: -9.250146865844727
    3. 'x' → logprob: -10.875146865844727
    4. 'i' → logprob: -11.500146865844727
    5. 'c' → logprob: -12.500146865844727
    6. '   ' → logprob: -12.750146865844727
    7. 'b' → logprob: -12.875146865844727
    8. 'j' → logprob: -13.125146865844727
    9. 'bit' → logprob: -13.125146865844727
    10. 'q' → logprob: -14.000146865844727

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28347209095954895
    2. 'in' → logprob: -1.4084720611572266
    3. 's' → logprob: -6.408472061157227
    4. 'n' → logprob: -8.283472061157227
    5. 'x' → logprob: -9.533472061157227
    6. 'd' → logprob: -10.033472061157227
    7. ' ' → logprob: -10.158472061157227
    8. 'nt' → logprob: -10.283472061157227
    9. '   ' → logprob: -10.408472061157227
    10. 'i' → logprob: -11.033472061157227

Token 168: ' range' (ID: 3352)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4169311821460724
    2. 'S' → logprob: -1.16693115234375
    3. ' range' → logprob: -3.66693115234375
    4. 'range' → logprob: -5.54193115234375
    5. ' ' → logprob: -9.54193115234375
    6. '(S' → logprob: -11.04193115234375
    7. '[' → logprob: -11.66693115234375
    8. '(' → logprob: -11.85443115234375
    9. '   ' → logprob: -12.29193115234375
    10. '  ' → logprob: -12.41693115234375

Token 169: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004399671161081642
    2. '(l' → logprob: -7.7504401206970215
    3. '1' → logprob: -11.750439643859863
    4. 'l' → logprob: -14.125439643859863
    5. '(len' → logprob: -14.500439643859863
    6. '   ' → logprob: -15.750439643859863
    7. ' (' → logprob: -16.75044059753418
    8. '(S' → logprob: -17.37544059753418
    9. 'len' → logprob: -17.87544059753418
    10. '	' → logprob: -18.12544059753418

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09920582175254822
    2. '+' → logprob: -2.599205732345581
    3. '):
' → logprob: -3.974205732345581
    4. ' +' → logprob: -6.97420597076416
    5. '       ' → logprob: -8.84920597076416
    6. '   ' → logprob: -9.84920597076416
    7. ' ):' → logprob: -9.84920597076416
    8. ')' → logprob: -10.22420597076416
    9. '           ' → logprob: -10.34920597076416
    10. '):

' → logprob: -10.97420597076416

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19504760205745697
    2. 'if' → logprob: -1.8200476169586182
    3. ' if' → logprob: -4.320047378540039
    4. '       ' → logprob: -6.320047378540039
    5. '   ' → logprob: -10.320047378540039
    6. '	       ' → logprob: -10.945047378540039
    7. '               ' → logprob: -11.445047378540039
    8. '		' → logprob: -11.945047378540039
    9. '	if' → logprob: -12.070047378540039
    10. '	   ' → logprob: -12.820047378540039

Token 172: ' cnt' (ID: 27340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1457405984401703
    2. ' if' → logprob: -2.145740509033203
    3. '           ' → logprob: -4.145740509033203
    4. '       ' → logprob: -6.145740509033203
    5. 'T' → logprob: -8.395740509033203
    6. ' T' → logprob: -9.020740509033203
    7. '   ' → logprob: -9.520740509033203
    8. 't' → logprob: -10.270740509033203
    9. 'S' → logprob: -10.270740509033203
    10. 'j' → logprob: -10.395740509033203

Token 173: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3136761784553528
    2. '+=' → logprob: -1.313676118850708
    3. '   ' → logprob: -8.938675880432129
    4. ']+=' → logprob: -9.063675880432129
    5. 'if' → logprob: -10.313675880432129
    6. '+' → logprob: -10.563675880432129
    7. '       ' → logprob: -10.813675880432129
    8. ' ' → logprob: -11.063675880432129
    9. '+=(' → logprob: -11.188675880432129
    10. '    ' → logprob: -11.313675880432129

Token 174: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0005946164601482451
    2. ' T' → logprob: -7.500594615936279
    3. 'p' → logprob: -11.000595092773438
    4. '   ' → logprob: -11.250595092773438
    5. '1' → logprob: -12.250595092773438
    6. '(T' → logprob: -12.375595092773438
    7. ' ' → logprob: -14.000595092773438
    8. '           ' → logprob: -14.000595092773438
    9. '	T' → logprob: -14.875595092773438
    10. '(' → logprob: -15.000595092773438

Token 175: '[' (ID: 58)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.07905205339193344
    2. 'S' → logprob: -2.579051971435547
    3. '           ' → logprob: -9.454051971435547
    4. '[' → logprob: -9.954051971435547
    5. '   ' → logprob: -10.829051971435547
    6. '       ' → logprob: -12.204051971435547
    7. '[
' → logprob: -12.579051971435547
    8. ' S' → logprob: -12.829051971435547
    9. '(S' → logprob: -13.329051971435547
    10. '                   ' → logprob: -13.704051971435547

Token 176: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.014684110297821e-06
    2. ' S' → logprob: -12.375008583068848
    3. '[S' → logprob: -13.000008583068848
    4. '   ' → logprob: -13.250008583068848
    5. '(S' → logprob: -14.375008583068848
    6. '           ' → logprob: -17.375009536743164
    7. '       ' → logprob: -17.625009536743164
    8. '	S' → logprob: -17.625009536743164
    9. '[' → logprob: -19.250009536743164
    10. ' ' → logprob: -19.375009536743164

Token 177: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12719760835170746
    2. 'idx' → logprob: -2.127197504043579
    3. '[' → logprob: -8.377197265625
    4. ' idx' → logprob: -10.752197265625
    5. '(idx' → logprob: -11.752197265625
    6. '[S' → logprob: -12.627197265625
    7. '	idx' → logprob: -13.002197265625
    8. ' [' → logprob: -13.377197265625
    9. '[
' → logprob: -14.377197265625
    10. 'S' → logprob: -14.877197265625

Token 178: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.774276774493046e-05
    2. 'ele' → logprob: -11.000038146972656
    3. '1' → logprob: -12.000038146972656
    4. '][' → logprob: -12.250038146972656
    5. '   ' → logprob: -12.625038146972656
    6. ' [' → logprob: -12.875038146972656
    7. '[idx' → logprob: -14.500038146972656
    8. '```' → logprob: -14.500038146972656
    9. '[element' → logprob: -14.625038146972656
    10. '           ' → logprob: -14.625038146972656

Token 179: 'ele' (ID: 5449)
  Prédit: 'ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.00018232580623589456
    2. ' ele' → logprob: -9.625182151794434
    3. '[' → logprob: -9.750182151794434
    4. '1' → logprob: -10.750182151794434
    5. '   ' → logprob: -11.250182151794434
    6. '(ele' → logprob: -11.250182151794434
    7. ' ' → logprob: -13.000182151794434
    8. '  ' → logprob: -13.500182151794434
    9. '{' → logprob: -13.625182151794434
    10. '```' → logprob: -13.875182151794434

Token 180: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003714569378644228
    2. ' +' → logprob: -5.628714561462402
    3. 'ele' → logprob: -9.878714561462402
    4. '1' → logprob: -10.503714561462402
    5. '   ' → logprob: -11.128714561462402
    6. ']+' → logprob: -11.878714561462402
    7. ' ' → logprob: -12.628714561462402
    8. ']' → logprob: -12.878714561462402
    9. '[' → logprob: -13.753714561462402
    10. '           ' → logprob: -13.878714561462402

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021807955636177212
    2. ' ' → logprob: -8.500218391418457
    3. '+' → logprob: -11.375218391418457
    4. '   ' → logprob: -13.250218391418457
    5. 'ele' → logprob: -15.500218391418457
    6. '    ' → logprob: -15.750218391418457
    7. '0' → logprob: -15.750218391418457
    8. '           ' → logprob: -16.00021743774414
    9. '  ' → logprob: -16.00021743774414
    10. '     ' → logprob: -16.37521743774414

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0066926307044923306
    2. ' ]' → logprob: -5.381692409515381
    3. '-' → logprob: -6.631692409515381
    4. ']]' → logprob: -7.881692409515381
    5. ']-' → logprob: -8.506692886352539
    6. ' -' → logprob: -8.881692886352539
    7. ' ]]' → logprob: -10.631692886352539
    8. ' ' → logprob: -13.506692886352539
    9. ']==' → logprob: -13.756692886352539
    10. '   ' → logprob: -13.881692886352539

Token 183: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5970813632011414
    2. ' -' → logprob: -0.8470813632011414
    3. ']' → logprob: -4.222081184387207
    4. ' ]' → logprob: -5.097081184387207
    5. ']-' → logprob: -9.722081184387207
    6. ']]' → logprob: -10.722081184387207
    7. ' ' → logprob: -10.847081184387207
    8. ' ]]' → logprob: -11.597081184387207
    9. '   ' → logprob: -12.847081184387207
    10. '<|end|>' → logprob: -12.847081184387207

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.75004005432129
    4. '   ' → logprob: -17.62504005432129
    5. '<|end|>' → logprob: -17.87504005432129
    6. '１' → logprob: -18.25004005432129
    7. '۱' → logprob: -19.50004005432129
    8. '  ' → logprob: -19.87504005432129
    9. ']' → logprob: -19.93754005432129
    10. '0' → logprob: -20.06254005432129

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.25000762939453
    4. '```' → logprob: -17.62500762939453
    5. '<|end|>' → logprob: -18.37500762939453
    6. '１' → logprob: -19.56250762939453
    7. ']' → logprob: -19.87500762939453
    8. '  ' → logprob: -20.50000762939453
    9. '0' → logprob: -20.50000762939453
    10. '۱' → logprob: -20.50000762939453

Token 186: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016069209203124046
    2. ' ]' → logprob: -4.141069412231445
    3. ']
' → logprob: -10.766069412231445
    4. '       ' → logprob: -12.141069412231445
    5. ']>' → logprob: -12.766069412231445
    6. ']==' → logprob: -13.766069412231445
    7. '           ' → logprob: -14.141069412231445
    8. ' ]
' → logprob: -14.266069412231445
    9. ')]' → logprob: -14.516069412231445
    10. ']

' → logprob: -14.766069412231445

Token 187: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00893020536750555
    2. '
' → logprob: -5.258930206298828
    3. '   ' → logprob: -6.508930206298828
    4. ' if' → logprob: -7.258930206298828
    5. '<|end|>' → logprob: -7.633930206298828
    6. '        
' → logprob: -7.883930206298828
    7. ' ' → logprob: -9.258930206298828
    8. '  
' → logprob: -9.258930206298828
    9. 'if' → logprob: -9.508930206298828
    10. ',' → logprob: -9.633930206298828

Token 188: ' attention' (ID: 8684)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.326490193605423
    2. ' ' → logprob: -1.4514901638031006
    3. ' if' → logprob: -3.5764901638031006
    4. 'if' → logprob: -4.70149040222168
    5. '       ' → logprob: -6.82649040222168
    6. ')' → logprob: -7.07649040222168
    7. '=' → logprob: -7.20149040222168
    8. '
' → logprob: -7.20149040222168
    9. '           ' → logprob: -7.45149040222168
    10. ' 
' → logprob: -7.82649040222168

Token 189: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9935712218284607
    2. '   ' → logprob: -1.9935712814331055
    3. '           ' → logprob: -2.3685712814331055
    4. '
' → logprob: -2.7435712814331055
    5. ' ==' → logprob: -2.9935712814331055
    6. ' <=' → logprob: -3.2435712814331055
    7. '==' → logprob: -3.3685712814331055
    8. ' ' → logprob: -3.3685712814331055
    9. ' >=' → logprob: -3.4935712814331055
    10. '<|end|>' → logprob: -3.7435712814331055

Token 190: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.72383052110672
    2. ' ' → logprob: -0.97383052110672
    3. ' )' → logprob: -3.223830461502075
    4. '<|end|>' → logprob: -3.723830461502075
    5. '1' → logprob: -4.098830699920654
    6. '+' → logprob: -4.348830699920654
    7. '#' → logprob: -5.473830699920654
    8. ' ' → logprob: -5.723830699920654
    9. '           ' → logprob: -5.973830699920654
    10. '=' → logprob: -6.223830699920654

Token 191: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' dé' (ID: 2393)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0387142188847065
    2. ' ' → logprob: -4.288714408874512
    3. 'zero' → logprob: -4.538714408874512
    4. ' zéro' → logprob: -4.913714408874512
    5. ' zero' → logprob: -6.163714408874512
    6. 'z' → logprob: -6.288714408874512
    7. '1' → logprob: -6.663714408874512
    8. '+' → logprob: -7.913714408874512
    9. ' z' → logprob: -8.663714408874512
    10. ' ' → logprob: -9.538714408874512

Token 193: 'caler' (ID: 131227)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0010359067237004638
    2. 'c' → logprob: -8.001035690307617
    3. 'part' → logprob: -8.126035690307617
    4. 'call' → logprob: -9.251035690307617
    5. 'caler' → logprob: -9.501035690307617
    6. 'cale' → logprob: -10.251035690307617
    7. 'com' → logprob: -10.876035690307617
    8. 'pass' → logprob: -11.126035690307617
    9. 'but' → logprob: -11.126035690307617
    10. 'crement' → logprob: -11.251035690307617

Token 194: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013242880813777447
    2. '   ' → logprob: -7.87632417678833
    3. ' if' → logprob: -8.126324653625488
    4. '        
' → logprob: -8.251324653625488
    5. '
' → logprob: -8.751324653625488
    6. '           ' → logprob: -9.626324653625488
    7. '<|end|>' → logprob: -9.876324653625488
    8. 'if' → logprob: -10.251324653625488
    9. ',' → logprob: -11.251324653625488
    10. '  
' → logprob: -11.501324653625488

Token 195: ' ça' (ID: 13590)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005254626274108887
    2. ' if' → logprob: -5.630254745483398
    3. '
' → logprob: -8.005254745483398
    4. '        
' → logprob: -8.130254745483398
    5. ' 
' → logprob: -8.255254745483398
    6. '           ' → logprob: -8.755254745483398
    7. 'if' → logprob: -9.005254745483398
    8. '   ' → logprob: -9.130254745483398
    9. ' ' → logprob: -9.380254745483398
    10. ' s' → logprob: -10.255254745483398

Token 196: ' saute' (ID: 146395)
  Prédit: 'bug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bug' → logprob: -0.8658812642097473
    2. ' bug' → logprob: -1.1158812046051025
    3. ' plante' → logprob: -2.6158812046051025
    4. ' va' → logprob: -3.4908812046051025
    5. ' ' → logprob: -4.115881443023682
    6. ' ' → logprob: -4.490881443023682
    7. 'break' → logprob: -4.615881443023682
    8. ' s' → logprob: -4.740881443023682
    9. 's' → logprob: -4.740881443023682
    10. 'd' → logprob: -4.990881443023682

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00987673457711935
    2. '
' → logprob: -5.759876728057861
    3. '<|end|>' → logprob: -6.134876728057861
    4. '        
' → logprob: -6.384876728057861
    5. ' 
' → logprob: -6.884876728057861
    6. '           ' → logprob: -8.00987720489502
    7. '  
' → logprob: -8.25987720489502
    8. ' ' → logprob: -8.38487720489502
    9. '   ' → logprob: -8.75987720489502
    10. ' ' → logprob: -8.88487720489502

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003024887293577194
    2. '   ' → logprob: -6.753025054931641
    3. ' if' → logprob: -6.878025054931641
    4. 'if' → logprob: -8.87802505493164
    5. ' ' → logprob: -9.00302505493164
    6. '<|end|>' → logprob: -9.12802505493164
    7. '           ' → logprob: -9.37802505493164
    8. ',' → logprob: -9.75302505493164
    9. '
' → logprob: -9.87802505493164
    10. '        
' → logprob: -10.00302505493164

Token 199: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0815427377820015
    2. ' if' → logprob: -2.956542730331421
    3. 'if' → logprob: -4.58154296875
    4. '<|end|>' → logprob: -5.33154296875
    5. '   ' → logprob: -5.58154296875
    6. ' ' → logprob: -5.58154296875
    7. '           ' → logprob: -7.45654296875
    8. ')' → logprob: -8.08154296875
    9. '>' → logprob: -8.20654296875
    10. '
' → logprob: -8.33154296875

Token 200: ' je' (ID: 1264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1547330617904663
    2. ' if' → logprob: -2.029733180999756
    3. '       ' → logprob: -4.529733180999756
    4. '   ' → logprob: -6.779733180999756
    5. '           ' → logprob: -10.404732704162598
    6. 'If' → logprob: -11.654732704162598
    7. ' ' → logprob: -11.779732704162598
    8. '  ' → logprob: -12.404732704162598
    9. '    ' → logprob: -12.529732704162598
    10. '	if' → logprob: -13.279732704162598

Token 201: ' me' (ID: 668)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.259867787361145
    2. ' if' → logprob: -1.509867787361145
    3. '       ' → logprob: -5.0098676681518555
    4. '   ' → logprob: -7.3848676681518555
    5. '           ' → logprob: -9.134867668151855
    6. ' ' → logprob: -9.259867668151855
    7. '    ' → logprob: -9.384867668151855
    8. 's' → logprob: -9.634867668151855
    9. '        ' → logprob: -10.134867668151855
    10. '     ' → logprob: -10.259867668151855

Token 202: ' demande' (ID: 26737)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6826261878013611
    2. 'if' → logprob: -1.0576262474060059
    3. 'continue' → logprob: -3.682626247406006
    4. 'pose' → logprob: -3.932626247406006
    5. '#' → logprob: -4.307626247406006
    6. 't' → logprob: -4.932626247406006
    7. ' if' → logprob: -5.182626247406006
    8. 'for' → logprob: -5.307626247406006
    9. '```' → logprob: -5.432626247406006
    10. 'abs' → logprob: -5.557626247406006

Token 203: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5412576198577881
    2. '       ' → logprob: -0.9162576198577881
    3. 'if' → logprob: -4.166257858276367
    4. '        ' → logprob: -7.791257858276367
    5. '   ' → logprob: -7.791257858276367
    6. '    ' → logprob: -7.791257858276367
    7. ' ' → logprob: -7.916257858276367
    8. ',' → logprob: -8.666257858276367
    9. '	if' → logprob: -8.916257858276367
    10. ' whether' → logprob: -9.291257858276367

Token 204: ' j' (ID: 441)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.08155228197574615
    2. 'cnt' → logprob: -2.831552267074585
    3. ' p' → logprob: -4.206552505493164
    4. 'p' → logprob: -5.706552505493164
    5. '(cnt' → logprob: -7.831552505493164
    6. ' T' → logprob: -8.956552505493164
    7. '       ' → logprob: -9.206552505493164
    8. ' count' → logprob: -9.331552505493164
    9. 'count' → logprob: -9.456552505493164
    10. 'T' → logprob: -9.831552505493164

Token 205: ''ai' (ID: 12480)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0607678890228271
    2. 'f' → logprob: -1.5607678890228271
    3. '=' → logprob: -1.8107678890228271
    4. 's' → logprob: -2.310767889022827
    5. ' t' → logprob: -3.060767889022827
    6. 'if' → logprob: -3.185767889022827
    7. ' f' → logprob: -4.560768127441406
    8. ' s' → logprob: -4.560768127441406
    9. ' ' → logprob: -4.935768127441406
    10. '==' → logprob: -5.185768127441406

Token 206: ' bien' (ID: 5340)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0382666289806366
    2. 'cnt' → logprob: -3.413266658782959
    3. '(cnt' → logprob: -6.913266658782959
    4. ' p' → logprob: -7.038266658782959
    5. ' T' → logprob: -7.288266658782959
    6. ' ' → logprob: -7.913266658782959
    7. 'T' → logprob: -8.0382661819458
    8. 'p' → logprob: -8.6632661819458
    9. ' not' → logprob: -8.9132661819458
    10. ' count' → logprob: -8.9132661819458

Token 207: ' compris' (ID: 49173)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.15264658629894257
    2. 'cnt' → logprob: -2.027646541595459
    3. '(cnt' → logprob: -5.152646541595459
    4. ' ' → logprob: -6.777646541595459
    5. 'count' → logprob: -6.902646541595459
    6. ' count' → logprob: -8.027647018432617
    7. 's' → logprob: -8.527647018432617
    8. 'T' → logprob: -9.027647018432617
    9. 'if' → logprob: -9.277647018432617
    10. ' p' → logprob: -9.277647018432617

Token 208: ' cet' (ID: 19505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00675551313906908
    2. ' if' → logprob: -5.506755352020264
    3. '           ' → logprob: -6.256755352020264
    4. 'if' → logprob: -7.256755352020264
    5. ',' → logprob: -10.631755828857422
    6. '   ' → logprob: -11.881755828857422
    7. '```' → logprob: -12.381755828857422
    8. '        ' → logprob: -12.756755828857422
    9. ' ' → logprob: -13.506755828857422
    10. '               ' → logprob: -13.756755828857422

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07039118558168411
    2. ' if' → logprob: -2.8203911781311035
    3. 'elif' → logprob: -5.9453911781311035
    4. 'e' → logprob: -6.3203911781311035
    5. 's' → logprob: -7.6953911781311035
    6. ' +=' → logprob: -7.9453911781311035
    7. 'count' → logprob: -7.9453911781311035
    8. 'cnt' → logprob: -8.070391654968262
    9. '#' → logprob: -8.320391654968262
    10. 'a' → logprob: -8.320391654968262

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009001428843475878
    2. '           ' → logprob: -8.125900268554688
    3. ' if' → logprob: -8.625900268554688
    4. '        
' → logprob: -8.875900268554688
    5. '   ' → logprob: -9.625900268554688
    6. ',' → logprob: -9.625900268554688
    7. '<|end|>' → logprob: -10.250900268554688
    8. '        ' → logprob: -11.000900268554688
    9. ':' → logprob: -11.375900268554688
    10. ' ' → logprob: -11.500900268554688

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022714624647051096
    2. '        
' → logprob: -6.87727165222168
    3. '<|end|>' → logprob: -7.62727165222168
    4. '           ' → logprob: -9.00227165222168
    5. '   ' → logprob: -9.00227165222168
    6. ',' → logprob: -9.37727165222168
    7. ' ' → logprob: -9.50227165222168
    8. '        ' → logprob: -9.50227165222168
    9. ' if' → logprob: -9.62727165222168
    10. '  
' → logprob: -10.62727165222168

Token 212: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1116381511092186
    2. ' if' → logprob: -2.361638069152832
    3. 'if' (adapté à ' if') → logprob: -4.736638069152832
    4. '   ' → logprob: -6.736638069152832
    5. ' ' → logprob: -7.861638069152832
    6. '           ' → logprob: -8.111638069152832
    7. '<|end|>' → logprob: -8.736638069152832
    8. '    ' → logprob: -9.236638069152832
    9. ' ' → logprob: -9.736638069152832
    10. ',' → logprob: -9.736638069152832

Token 213: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.04598017781972885
    2. 'cnt' → logprob: -3.670980215072632
    3. ' p' → logprob: -4.045979976654053
    4. '(cnt' → logprob: -6.920979976654053
    5. 'p' → logprob: -7.170979976654053
    6. ' ' → logprob: -9.170980453491211
    7. ' (' → logprob: -10.295980453491211
    8. ' s' → logprob: -10.795980453491211
    9. '   ' → logprob: -11.170980453491211
    10. '(p' → logprob: -11.420980453491211

Token 214: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.10743828862905502
    2. ' ==' → logprob: -2.607438325881958
    3. '>=' → logprob: -3.732438325881958
    4. '==' → logprob: -5.482438087463379
    5. ' ' → logprob: -10.732438087463379
    6. '[' → logprob: -11.607438087463379
    7. '=' → logprob: -12.107438087463379
    8. '   ' → logprob: -12.482438087463379
    9. '>' → logprob: -12.857438087463379
    10. ' ' → logprob: -13.357438087463379

Token 215: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003633521846495569
    2. ' ' → logprob: -8.62536334991455
    3. 'p' → logprob: -8.62536334991455
    4. '   ' → logprob: -13.25036334991455
    5. ' p' → logprob: -13.75036334991455
    6. '  ' → logprob: -15.00036334991455
    7. '1' → logprob: -15.50036334991455
    8. '```' → logprob: -15.50036334991455
    9. 'k' → logprob: -15.87536334991455
    10. '           ' → logprob: -16.125364303588867

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006017910782247782
    2. 'p' → logprob: -5.131017684936523
    3. ' ' → logprob: -9.756017684936523
    4. '1' → logprob: -11.381017684936523
    5. '   ' → logprob: -12.131017684936523
    6. 'k' → logprob: -12.381017684936523
    7. '```' → logprob: -12.756017684936523
    8. ' p' → logprob: -13.256017684936523
    9. '  ' → logprob: -13.506017684936523
    10. '``' → logprob: -14.381017684936523

Token 217: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02348899282515049
    2. ' ==' → logprob: -3.773488998413086
    3. '=' → logprob: -8.648488998413086
    4. '()==' → logprob: -9.773488998413086
    5. ')==' → logprob: -12.523488998413086
    6. ']==' → logprob: -12.648488998413086
    7. '===' → logprob: -13.523488998413086
    8. '==
' → logprob: -13.648488998413086
    9. '!=' → logprob: -14.773488998413086
    10. '']==' → logprob: -14.898488998413086

Token 218: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017474116757512093
    2. ' p' → logprob: -6.8767476081848145
    3. '1' → logprob: -7.2517476081848145
    4. ' ' → logprob: -12.501747131347656
    5. '	p' → logprob: -14.251747131347656
    6. '=' → logprob: -15.251747131347656
    7. '   ' → logprob: -15.376747131347656
    8. '0' → logprob: -16.001747131347656
    9. '  ' → logprob: -16.501747131347656
    10. '(p' → logprob: -16.626747131347656

Token 219: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00043448375072330236
    2. '[' → logprob: -7.750434398651123
    3. '[S' → logprob: -13.000434875488281
    4. 'idx' → logprob: -14.375434875488281
    5. ' [' → logprob: -15.250434875488281
    6. '[index' → logprob: -15.625434875488281
    7. '[Index' → logprob: -16.12543487548828
    8. '[i' → logprob: -16.87543487548828
    9. '[cnt' → logprob: -16.87543487548828
    10. '[
' → logprob: -17.00043487548828

Token 220: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8161609172821045
    2. '):' → logprob: -0.8161609172821045
    3. ']:' → logprob: -2.1911609172821045
    4. '():' → logprob: -7.066161155700684
    5. ' :' → logprob: -7.316161155700684
    6. '):
' → logprob: -7.566161155700684
    7. '[' → logprob: -7.941161155700684
    8. ' ):' → logprob: -7.941161155700684
    9. '1' → logprob: -8.816161155700684
    10. ':
' → logprob: -8.941161155700684

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02140725404024124
    2. '       ' → logprob: -4.021407127380371
    3. 's' → logprob: -6.021407127380371
    4. '               ' → logprob: -7.771407127380371
    5. ' s' → logprob: -8.521407127380371
    6. 'result' → logprob: -9.146407127380371
    7. '1' → logprob: -10.896407127380371
    8. ',' → logprob: -11.271407127380371
    9. '	       ' → logprob: -11.271407127380371
    10. ' result' → logprob: -11.771407127380371

Token 222: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.05068368837237358
    2. ' s' → logprob: -3.0506837368011475
    3. '       ' → logprob: -6.675683498382568
    4. '           ' → logprob: -7.175683498382568
    5. '   ' → logprob: -10.050683975219727
    6. 'result' → logprob: -11.050683975219727
    7. '               ' → logprob: -12.050683975219727
    8. ' result' → logprob: -13.550683975219727
    9. ' ' → logprob: -14.800683975219727
    10. '          ' → logprob: -15.425683975219727

Token 223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.23429140448570251
    2. ' +=' → logprob: -1.609291434288025
    3. '+' → logprob: -4.7342915534973145
    4. '=' → logprob: -10.859291076660156
    5. ' +' → logprob: -11.359291076660156
    6. ']+=' → logprob: -11.359291076660156
    7. '++' → logprob: -13.109291076660156
    8. '+="' → logprob: -13.859291076660156
    9. ' ' → logprob: -14.109291076660156
    10. ')' → logprob: -14.109291076660156

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. '<|end|>' → logprob: -18.7500057220459
    5. 's' → logprob: -19.5000057220459
    6. '       ' → logprob: -19.8750057220459
    7. '           ' → logprob: -20.3750057220459
    8. '  ' → logprob: -20.8750057220459
    9. '۱' → logprob: -20.8750057220459
    10. '+' → logprob: -20.8750057220459

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.0
    4. '１' → logprob: -21.375
    5. '۱' → logprob: -22.0
    6. '  ' → logprob: -22.25
    7. '       ' → logprob: -22.3125
    8. ' ' → logprob: -22.625
    9. '```' → logprob: -22.625
    10. '           ' → logprob: -22.6875

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03601447492837906
    2. '
' → logprob: -3.4110145568847656
    3. '    
' → logprob: -6.786014556884766
    4. '  
' → logprob: -7.786014556884766
    5. ' if' → logprob: -8.786014556884766
    6. '       ' → logprob: -9.286014556884766
    7. ' ' → logprob: -9.286014556884766
    8. ' 
' → logprob: -9.411014556884766
    9. ')' → logprob: -9.786014556884766
    10. 'if' → logprob: -9.911014556884766

Token 227: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6082024574279785
    2. '   ' → logprob: -0.9832024574279785
    3. ')' → logprob: -3.2332024574279785
    4. ')
' → logprob: -4.6082024574279785
    5. ' if' → logprob: -5.1082024574279785
    6. '    
' → logprob: -5.4832024574279785
    7. ' 
' → logprob: -5.6082024574279785
    8. '  
' → logprob: -5.7332024574279785
    9. 'if' → logprob: -5.9832024574279785
    10. ' ' → logprob: -6.2332024574279785

Token 228: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05666463449597359
    2. 'result' → logprob: -2.9316647052764893
    3. ' if' → logprob: -6.55666446685791
    4. '   ' → logprob: -8.55666446685791
    5. '
' → logprob: -10.05666446685791
    6. '    
' → logprob: -10.80666446685791
    7. ' result' → logprob: -10.80666446685791
    8. ')' → logprob: -10.93166446685791
    9. ' 
' → logprob: -11.30666446685791
    10. '  
' → logprob: -11.30666446685791

Token 229: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.061974067240953445
    2. 's' → logprob: -2.811974048614502
    3. ' ' → logprob: -12.68697452545166
    4. 'result' → logprob: -13.81197452545166
    5. '(s' → logprob: -14.31197452545166
    6. ' result' → logprob: -14.43697452545166
    7. ' ' → logprob: -14.56197452545166
    8. '	s' → logprob: -14.93697452545166
    9. '   ' → logprob: -16.061973571777344
    10. '_s' → logprob: -16.936973571777344

Token 230: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04315892606973648
    2. '==' → logprob: -3.168159008026123
    3. ' >' → logprob: -9.793158531188965
    4. ' >=' → logprob: -9.793158531188965
    5. '=' → logprob: -10.918158531188965
    6. ' =' → logprob: -11.543158531188965
    7. '>' → logprob: -11.668158531188965
    8. ' ' → logprob: -12.418158531188965
    9. ' ' → logprob: -12.668158531188965
    10. '>=' → logprob: -12.668158531188965

Token 231: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.000158842682139948
    2. ' M' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.87515926361084
    4. ' ' → logprob: -18.250158309936523
    5. '	M' → logprob: -18.625158309936523
    6. 'len' → logprob: -19.000158309936523
    7. '  ' → logprob: -19.625158309936523
    8. ' ' → logprob: -20.000158309936523
    9. '
' → logprob: -20.125158309936523
    10. '    ' → logprob: -21.125158309936523

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009762344881892204
    2. ':
' → logprob: -4.634762287139893
    3. ' :' → logprob: -12.38476276397705
    4. ':return' → logprob: -14.25976276397705
    5. '):' → logprob: -14.63476276397705
    6. ' :
' → logprob: -15.25976276397705
    7. '   ' → logprob: -15.25976276397705
    8. ':
' → logprob: -15.63476276397705
    9. ':

' → logprob: -15.88476276397705
    10. '       ' → logprob: -16.884761810302734

Token 233: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9830032587051392
    2. '       ' → logprob: -0.9830032587051392
    3. 'result' → logprob: -1.6080032587051392
    4. ' result' → logprob: -2.9830031394958496
    5. '	result' → logprob: -7.73300313949585
    6. '
' → logprob: -9.108003616333008
    7. '    
' → logprob: -10.108003616333008
    8. ',result' → logprob: -10.233003616333008
    9. '1' → logprob: -11.108003616333008
    10. '        
' → logprob: -11.233003616333008

Token 234: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00012023169983876869
    2. '   ' → logprob: -9.250120162963867
    3. ' result' → logprob: -10.750120162963867
    4. '
' → logprob: -13.875120162963867
    5. 'break' → logprob: -14.375120162963867
    6. '	result' → logprob: -15.250120162963867
    7. 'print' → logprob: -15.375120162963867
    8. '    
' → logprob: -16.000120162963867
    9. '1' → logprob: -16.125120162963867
    10. 'answer' → logprob: -16.500120162963867

Token 235: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026332000270485878
    2. '+=' → logprob: -3.651331901550293
    3. ' ' → logprob: -11.401331901550293
    4. '+' → logprob: -12.026331901550293
    5. ']+=' → logprob: -12.276331901550293
    6. '=' → logprob: -12.651331901550293
    7. ' =' → logprob: -13.026331901550293
    8. ' ' → logprob: -13.276331901550293
    9. '   ' → logprob: -14.151331901550293
    10. '	' → logprob: -14.526331901550293

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -18.6250057220459
    5. '１' → logprob: -18.8750057220459
    6. '۱' → logprob: -20.1250057220459
    7. '  ' → logprob: -20.5000057220459
    8. ' ' → logprob: -20.5000057220459
    9. '+' → logprob: -20.9375057220459
    10. '`' → logprob: -21.3125057220459

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '```' → logprob: -17.625003814697266
    5. '１' → logprob: -18.187503814697266
    6. '!' → logprob: -18.500003814697266
    7. '۱' → logprob: -18.562503814697266
    8. '  ' → logprob: -19.375003814697266
    9. '१' → logprob: -19.750003814697266
    10. '0' → logprob: -19.750003814697266

Token 238: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6609706282615662
    2. '<|end|>' → logprob: -0.7859706282615662
    3. 'print' → logprob: -4.410970687866211
    4. '#' → logprob: -4.785970687866211
    5. '\n' → logprob: -6.160970687866211
    6. ')' → logprob: -6.410970687866211
    7. '```' → logprob: -6.660970687866211
    8. ' ' → logprob: -7.535970687866211
    9. 'return' → logprob: -8.285970687866211
    10. '\' → logprob: -8.535970687866211

Token 239: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.650518920039758e-06
    2. ' print' → logprob: -12.875003814697266
    3. '
' → logprob: -15.000003814697266
    4. ')' → logprob: -15.000003814697266
    5. '```' → logprob: -15.750003814697266
    6. '<|end|>' → logprob: -16.375003814697266
    7. '(print' → logprob: -16.625003814697266
    8. '#' → logprob: -17.125003814697266
    9. '#print' → logprob: -17.250003814697266
    10. '.print' → logprob: -17.750003814697266

Token 240: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07889319956302643
    2. '(' → logprob: -2.5788931846618652
    3. 'result' → logprob: -14.328893661499023
    4. ' (' → logprob: -14.453893661499023
    5. '('' → logprob: -14.703893661499023
    6. '(results' → logprob: -15.078893661499023
    7. '((' → logprob: -15.203893661499023
    8. '(
' → logprob: -15.203893661499023
    9. '(res' → logprob: -15.578893661499023
    10. '(Result' → logprob: -15.703893661499023

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '+' → logprob: -15.750000953674316
    5. '()' → logprob: -17.625001907348633
    6. ')`' → logprob: -18.625001907348633
    7. '),' → logprob: -18.875001907348633
    8. '())' → logprob: -19.000001907348633
    9. '}' → logprob: -19.500001907348633
    10. '*' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 239
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 158
Précision stricte (1ère position): 28.45%
Précision adaptée (1ère position): 31.38%
Précision (top 10): 66.11%
================================================================================
